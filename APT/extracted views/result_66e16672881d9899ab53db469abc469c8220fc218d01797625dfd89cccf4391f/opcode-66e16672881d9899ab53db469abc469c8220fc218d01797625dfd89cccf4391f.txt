mov scas cmp pmullw jnp es inc fldl sbb xchg inc inc mov out and loope push pop repnz mov arpl (bad) lea sbbl jnp push mov stos push or mov stos dec out cmp mov int3 loop mov adc out sub mov adc (bad) mov add insl adc inc xchg out push notb jg sbb inc sbb hlt xor imul jg xor jnp inc mov mov adc ds out repnz push mov lods mov dec aas jmp sbb icebp in ljmp out inc push dec ror outsb (bad) scas jge repz std jmp nop sub test mov arpl aaa insl jg insl mov pusha cmp jae xchg imul rcrl leave mov movsb dec jbe jl adc test mov insb dec out cs hlt ss dec adc inc or int out dec cmp leave jge add outsb aas lds out xchg mov pop insb xor mov adc pop movsl dec test rclb pop dec mov jp mov ret outsb mov mov cmp imul dec mov inc sub int3 fucom and mov jmp in or pop in call ds outsb adc pop repz dec sub xlat pop sbbb out dec (bad) and mov mov pop insl adc aaa jb sub shr push mov xchg movsb add fnstsw adc das ljmp test pop inc jmp loop das lahf xor xor and loop dec je pop int3 inc dec addr16 stos divl or sbb (bad) mov adc mov imul std add pop mov push ljmp mov test sub (bad) mov lea or xchg mov mov xchg cmp cld cmp jae pop push jbe clc punpcklbw sub jge lods arpl and xor jmp (bad) lea loop push lods insb repnz cmp dec push adc push add mov xchg mov repnz and pop xor in ret sahf mov mov xchg std jae xchg xchg lret mov mov lret pop shrb (bad) test xor dec xchg lea mov int3 (bad) sbb xlat cld lea cmp repz add icebp stc (bad) aam in lods xchg sbb push cmp jge pop (bad) lods nop inc and adc int hlt or sub sbb lods (bad) mov addr16 pop dec pop adc cmp mov sbb add insb ljmp ret jge pushf xchg test pop jbe mul sbb push ljmp sub fistp in in into push imul push dec in sbb arpl aaa pop jmp pop mov sub stc jnp je int loop dec xchg imul xor xchg addr16 jp mov mov mov xor or sbb push jmp out imul out ja adc jg xor aaa fild pusha xchg movsb or mov cltd (bad) mov sbb sbb stc inc sbb ds out fstps push and into stos in mov push xlat mov or ja fistl outsl imul dec jg lahf inc movsl or inc imul xchg push out data16 fs ret das test xlat lds lock outsl xchg cwtl daa (bad) repz iret popa mov cmp cltd inc xchg clc cmp dec cmp inc (bad) insl add arpl jmp aas jb sbb inc cmp or cmc test sbb hlt adc popa cwtl lcall call sub add lods lahf mov sub (bad) aam daa cmp jne rcr sbb or fmuls add dec cltd clc pop mov (bad) sub (bad) jle repnz lds cmpsl movd mov insl imul sub inc jl and inc jg mov mov popa pushf mov push mov pop (bad) mov pop mov pop gs stc scas push and mov lahf fsubs mov pushf mov mov pop iret mov mov mov int lock xor scas out cltd push dec jmp repz ret sahf imul sbb jnp inc dec jl jmp fucomp and push icebp jle cli pop lock dec daa dec cmp dec mov cmp mov popf lds loop (bad) popf jne sub cmp jne insl (bad) mov es sbb hlt mov sbb jbe sbb pop test xchg out imul gs shll in mov sub icebp int std jnp lahf enter repz aas mov and push clc movsl xchg jg bound sub aas dec leave add fistpll das sbb insl daa lret pop into and lods mov sbb enter or sbb ja scas jae dec sub mov es ds (bad) decl jl jge jle and lods pop in push in adc jo xchg and pop in pop sub (bad) cmpsl mov sub inc icebp cli push data16 push sub jmp cmp push in sub dec fwait and in cmp mov out sbb or (bad) mov xchg outsb xor mov movsb push sub or push push dec mov jae mov and test push pop shrl xlat mov adc jae clc enter push movsb inc sub jge std dec jns (bad) mov sub cmp mov jmp inc cltd lahf adc pop fwait hlt int mov jle (bad) clc or mov (bad) cmc push mov (bad) mov pusha in xchg xchg pop imul cmp push daa jg or shl or outsl xchg test in mov nop xor jg push stc and cmp outsb movsb xor aas outsb fiaddl mov mov scas cld mov or adc sbb ds sub bound xchg jl cmp (bad) pop call (bad) aaa sarl add cmp sub (bad) popa mov imul cld pop sub xchg in fist xor in pushf pop mov xor xchg popa repz cwtl pop pop dec push (bad) outsb pop pop cli xor int mov mov push inc add in pop push imul outsl mov sub xchg sbb jae dec pop push mov repz daa cwtl jecxz or jg pop incb lea push mov dec mov scas out pop rorb stc sbb push pop (bad) xor dec pop repz je sub dec xchg clc adc sti add ljmp (bad) push (bad) aas add or inc enter or in outsl and mov xchg in xchg xchg inc lea fwait or inc sti dec decb das roll into popa sub insb std pop and mov push xchg (bad) push pop xchg sar aad and pop (bad) imul lea jae test mov mov mull sbb ja sti mov dec sub mov repnz hlt lods pop jmp repz lea mull push out adc pop ljmp mov dec mov call cmc ret incb jg mov pop idivl pop cmpl in sub popf adc out test jae dec inc sub add jnp mov scas addr16 aam pop rolb repnz fimull movsb out mov jp icebp jle sub dec cmc cmp push inc aam and pop fldenv and cli and les out lds scas jg out int3 test repz rcrl cmp push jo ret xor dec fcom xor push xor pop nop idivl int sbb mov and stos adc xchg lret add xchg and push icebp negl inc adc pop lea cmp mov xchg je test das test jge pushf cmp (bad) insb cmp repnz sbb mov dec fcoml mov aas les subl sub test gs aad js push mov xchg xor rcl sbb or test in lea int3 inc lods aas fwait and push out es add sti pop push int jns and sub push mov mov adc into out sbb test popa inc roll inc and js aaa inc jns mov sbb mov andl (bad) mov cmpsb push pop mov pushf scas add xor push ret adc pop dec into sbb ds push jg jecxz arpl rcll imul sub push or nop mov dec gs jno fdivl sbb jmp push movsl insl imul xchg (bad) iret mov lret xor loope mov outsb dec push pop (bad) imul sbb repz xor ss rorl jae pop lods arpl clc push iret dec lods inc in cmp dec mov mov nop sbb sub mov movsb mov cltd andb cs mov stos xchg lods pop fstl lods add adc les sub gs xchg sub or xlat (bad) in cmc xchg and cmp arpl mov stc ljmp and mov push xor std jge pop mov out fwait cmp aam mov fisubr or in insl sub mov pop fisubrl fmuls xor ficom push push xor sub sbb insl ljmp lahf pop lret xchg es mov mov ss mov inc repnz ret bound int xorl jne xchg dec into lods mov test or cs cltd inc aaa xor in lcall les mov dec shlb mov scas pop xchg fnstenv push movsl pop jecxz rcll int3 stc aas repz ds ds nop jge mov (bad) xchg std xchg xor lods cmp dec inc fwait sbb test lods adc xchg dec scas pop push pusha or call jge or jge std xor movsl shl adc xchg mov jo (bad) fmul cmp das inc repz or test or mov or push mov das es mov aas jle adc jmp jae loop call (bad) int3 sbb mov push out cmp in arpl mov push (bad) xchg test inc jl sbb xchg or add sbb (bad) mov lahf and insb cli mov jg mov xor xchg inc xchg sti jne push jecxz jge mov push push std ss out (bad) mov adc lret lcall test leave jg mov repnz pop mov add test lret inc popa sbbl scas inc jmp cld push out loopne pop add mov mov jmp push mov mov mov sub adc xchg pcmpeqw jg stc enter fstpt out sbb sub or lods jecxz in ret mov sbb add sbb sub mov jge movsl push in mov stc ds sub jns push int mov cmpsl sub sbb sub test pop cmp pop lods push pop scas stos inc aas jnp push and cmp cmp fistp push cs arpl inc repz andl mov jp mov in pop jmp imul enter inc iret add sbb cmpl jge out test cltd into das sub fcomps push cmp add add cmp nop or test xor inc pop scas dec mov into pop sar test mov outsb loope ljmp or dec scas xorl scas (bad) idivl stc aas xlat and aad dec stos and adc insb cwtl sub and std lds scas cmp push lods aaa mov or arpl (bad) cmc add sub xchg int fimull inc in pop pop es or fildll dec int idivb call push in add jnp jl dec je sub flds fdiv mov push das hlt fldl lods jbe xchg mov xor cmp (bad) fisubr inc push out fwait inc lock push jle or cltd test or repz sub jg mov mov mov mov lods xor mov and xchg in add push test or pop jne dec mov in daa scas sbb inc push (bad) sahf (bad) and cmp data16 lret leave pop mov lods jmp mov cwtl push pop sahf sbb sarb or in xchg dec mov sahf dec addr16 adc cld cli mov sub cmp ret push cli mov adc or push add sbb sub adc push out mov aaa mov sbb pop (bad) cwtl adcl fbstp mov jmp sbb xor jmp sub pushf cmp nop shrb ljmp addr16 inc pop ljmp in fmull sbb in pop inc cmp stc mov xorl mov call adc fcom mov pop inc push push jge into or lea pop xchg dec mov out dec mov int3 in es xor int3 in xchg gs push push adc negl js adc in mov or mov clc dec jo cs test std mov cmpsl test and pusha dec sti xchg add lea ja js (bad) std jl jnp loope sub xabort mov pop add out xor leave cmp imull out popa pop mov pop cli add sub loopne enter test lahf insl sahf mov dec rorl mov sub insb stc mov stc jmp test cltd inc ds stc aas sub pop mov push cs inc push (bad) cmc out movsl jmp movsl push inc hlt pop ljmp into sub pop sub lahf fs mov test jno lods in or inc or test pusha add jns xor in mov mov xor push gs icebp test dec les mov cmp push fmull mov int3 sub out pop test clc push call push mov adc lock lret sahf gs aam outsb pop fs (bad) int3 js xor bound inc dec pop pop out in (bad) lret sarl pop notb out push in int out lahf hlt dec xor pusha xchg xor or cmpb repnz scas insl inc mov cmp adc mov sub dec push lret jmp or loope (bad) lcall fsubrl aad mulb sbb clc (bad) sbb dec fnstsw xchg scas inc in imul push cmp lret mov sub jge xchg mov mov push jne packssdw out scas xlat cmp pop hlt daa mov cld sar andl xchg lret repz adc add dec and jno inc cmp lcall xchg inc mov nop pop mov rcrb mov mov hlt or negl sahf jecxz in push out mov mov pop xchg retw add pop arpl mov in mov mov aam in sti and jge xchg lods mov mov leave dec and pop add pushf pop psadbw push mov lds jmp insb lcall jge scas add fimul sbb icebp add and test cmpsl ljmp imul mov fisttpll xor mov nop add lods mov xor scas mov in add lea lods xchg sub mov stc aas and dec jns cmpsb mov lds fxch jecxz outsb dec jecxz fild sbb lods pop dec push out movsb push mov dec jno ja lds popf es lahf add aad mov scas movsl or cmp movsb mov shll cmp enter xchg stc retw aas sub push jb xor mov jp adcb mov daa pop mov xchg add enter jle gs inc fbld dec add sbb xor dec push ljmp cwtl sub push fcmovnbe xor xor ss subl pop mov add pushf scas sbb cmpsl jecxz ret jnp bound in inc dec xchg lret dec and adc cmp addr16 push and ret sub frstor fs jo lahf push movsl push imul inc sbb lcall cmp bnd out mov pop enter dec mov push lret ss mov dec fildll shrb lea daa dec fiaddl inc inc enter js lods jmp mov in (bad) incb xchg arpl mov cmp insb adc pop xor fild push cmpsb inc jg pop sbb add enter imul pop mov cli les pusha insl stos jne jecxz fild push movsl inc lahf data16 in cmp lods or repz dec mov push cmp push cwtl fild or push das (bad) lret add xchg and dec and les loope mov sbb sbb cmp xchg (bad) or fidivr (bad) cltd arpl inc in adc cmp insl pop push sbb div jmp ret les sbb pusha scas mov add xchg sbb adc pop jl stc test in lock cmp in mov fiaddl add fistp push cmpsb lods pop jmp inc mov inc clc pop add push sub cmp sbb dec cli add outsb pop xlat lds jnp stc arpl leave std jle push gs sbb jge jns lahf xor leave xchg pop and cmp int lret adc cmpsb mov loopne arpl pop dec jns inc cli andl lea idivl popa sbb mov jnp (bad) test pop inc inc add jns or mov lcall cmp insl addr16 dec stc adc or sub stc fbstp sub mov cmp addr16 inc mov pushf frstor das mov mov (bad) call jne lahf mov and add pushf enter pop sub or push mov ret fwait (bad) cmpsb loope jmp psubusb fmuls dec mov out aaa mov xor xor jge cmp jns (bad) xor (bad) jg (bad) scas test mov sbb lock dec jle out nop pop xchg stos (bad) stc jns mov jno jae mov and push divl sbb pop lret cmp add in in jmp mov sub jns push (bad) mov xchg adc and dec pusha pop inc out sbb mov in add jge sub jge int3 test pop cmpsb lds and and gs enter lcall xchg or add loope mov xchg or cwtl sbb pusha leave jge mov mov movsb or int3 pop test mov scas or in lods sub orl sub sahf js sahf and cs insl cmp in pop add xchg clc sub (bad) outsl pop mov pushf adc bound cmpsl int3 xchg xchg aam stos icebp das jne icebp pop stos pop in test xor dec fildll fwait pop insb je rolb aad mov (bad) mov push aaa dec cs adc xor cmc imul test (bad) stos xchg sub icebp push imul jmp cmp mov std pop mul andl jb add inc and (bad) (bad) loop cld arpl sbb mov jecxz in mov cltd pop mov pop and addr16 gs in push scas lahf and lahf xor adc jle sub xchg mov sub jmp push bound mov or mov lods mov incl cmp je jge adc insl push pop pop ljmp sub push daa dec xchg pop jg ja pop mov xchg fisubl xor push inc sbbl mov xchg daa test imul mov fwait push or adcb xchg stos jae lock sub push push ret daa in inc outsl sbb pop das add cmc pushl dec (bad) add sub pop cld lods jl or inc pop sub and cmp ficompl cmp pop gs add push pusha jno add jae rcll (bad) cmp out leave out outsb mov scas add pop push popa das dec (bad) rorl cmp std (bad) pusha into jne addr16 lret mov data16 lods jns push jp insb jl loopne push jecxz (bad) xor xor add stc cmp fmul dec stos cwtl add mov jp imul pop mov push rclb mov mov adc mov popa add sti popf dec xchg mov and aaa cmp movb vcvtdq2pd std jbe lret sub scas push dec cmp sub pop inc push mov pcmpeqd out aaa test in or and std aaa jbe fiaddl sub mov lock lods in xchg mov in push (bad) shll andl call (bad) int mov cs cmp sub inc aas (bad) or mov es cmp (bad) arpl hlt pop add jmp (bad) xor adc adcl add push divps gs outsw ficomp adc (bad) loope inc or outsb and ss lds inc mov xor imul sbb mov cs jb fdivl pop or (bad) push jbe shlb add add loop pushf adc pop dec xchg push cs lods mov push cs jae fucomi jb dec cld pop addr16 sbb loop out dec mov sbb cmp pop sub les (bad) std push jp sahf mov add (bad) ljmp jg in idivl mov (bad) adc adc outsb or daa mov xor das mov ret aas cmp out or test pop push loope inc lods jg mov out push pop pusha call cmpsb aas loopne mov mov pushf jg das test (bad) loope,pt in insb ja and cli aas inc (bad) mov int mov test in sub lods pop xchg cwtl rol lret mov out pusha loop movsl jno mov adc movsb in fcmovnu jnp or and jno and ret call enter xchg cli mov xor movsb outsb jmp ds or xchg adc lods and fdivs pop inc pop cld jb add pushf and pop lods jne xor ljmp jecxz out sahf (bad) shrl bound negl rolb mov cmp mov inc popa cwtl sbb xor aas cmp mov out mov sbb mov pop sbb fwait mov xor xchg xchg lock (bad) jge xchg sbb out push aas xor xor ja xor jbe inc icebp pushf pusha into xor sub push rcr in je adc in pop icebp lods inc je insb inc pop loop xor mov icebp xorl lahf pop ret pop dec adc es fsubrp fnstsw mov (bad) jo and cli mov sub mov jge cmpsl jnp hlt mov add in into divb add leave jecxz jg push or in out sub add cmpsb stos dec inc jl dec mov cmp fs (bad) std ja scas lds mov in dec popa out inc icebp div jl pop ret adc and dec in push aas stos leave adc mov das dec loopne xchg addr16 pop iret mov iret mov std ds sub adc add mov daa addr16 divl inc andl jecxz and mov mov in and clc sbb out cmpsl (bad) outsb mov cmp sahf in and sub jge in imul xchg notl cmp mov imul loope loopne stc js frstor ja mov cmc jae out (bad) pop cmpl adc bound in lret jmp lods ds sub out push lcall mov in nop xchg daa ja mov loop sub jo xor leave inc adc dec scas cli dec into in add lods int imul fimul test movsb gs xor and lods insb add pop out std pop mov scas cmp sbb mov jbe pop pusha lods fistl bound jg sti fdivs adc inc jbe jmp hlt pop push or shufps mov pop cld dec (bad) mov nop sub gs add icebp pop fs lods dec aas sbb or daa popf cmp or cmp sub jne test sbb or push sub iret enter popa xor in out call jge stos fcoms and pop cmpsb push bound inc (bad) dec test and pop xor pop mov aas out pop mov cmp int pop push rolb test popf push jnp sub outsl imul jge sub dec daa orb das xor push xchg scas dec cmp enter mov push sti xchg pop xor in mov lods or dec fcompl iret jmp xchg sbb mov scas ret lods cld inc out jmp dec sahf stos lret lahf into sti (bad) out and mov lret jns inc (bad) xor jp adc (bad) xchg mov lods sub mov cmpsb data16 daa leave push daa notl scas ret iret and addr16 jp adc pop (bad) mov jge call stos loope adc xchg pop fnstcw int stc lods xor (bad) pop and xlat xchg cmp fsubr movsl pop clc sbb dec push mov inc pop cmc stos lods mov daa scas aaa or scas inc loopnew scas shrd cmp imul sbb (bad) mov (bad) or test aam mov mov pop sbbb add sub imul pusha dec fdivrl xchg adc mov inc mov ficom sbb movsl daa mov imul sub push sbb sub and sub jl test mov popf mov mov mulb fcos insb test jp xlat mov movsl dec jl xchg mov or arpl lods icebp push das mov inc jmp jle add sub aam popf call adc mov lods hlt jno pop clc cmp std mov xchg mov add cli mov out cmp scas dec fsts jno add loop fimull pop add cmp cli inc add push sbb lods mov push mov bound jae iret scas jmp add sub js inc pop mov jmp scas mov int3 mov ljmp test jo sbb push fnstcw pop push (bad) cmpsl ret mov push cmpsb imul out adcl sub push test or cmpsb mov scas movsl ret mov jge push add mov out cmpsb xchg std int pop call dec ljmp pop sub mov push test fmuls lock mov lcall jmp xor sub in stos outsb jge je sbbl and push xor xchg jecxz out and pop lcall gs cltd sub and aad sub mov mov in xor rolb (bad) clc xchg lahf rep scas in dec into shrl and stc pop or mov xor jmp sub daa dec jbe and pop mov pop sub ds lahf lahf push iret fwait sub xchg test sbb dec movsb mov popa jns aaa int3 push sub push and cmp (bad) fucomip movsl cmp (bad) cmp lods cmpsl cmpsl imul dec imul add or dec push popf ds idiv mov dec sti jg sub stos lahf adc bound int3 bound dec inc scas test fcomps pop in push mov inc pushl jge sbb jge sti movsl lahf jne and cmpsb cmp sub jbe subl dec mov jmp dec mov mov lret fbstp push mov and subl ljmp (bad) jne jmp cmp sub sbb scas movsl insl sub dec lret mov mov jp cmp adc je leave mov push in (bad) test decl lods add mov pop (bad) jp dec xchg pop cmp (bad) xor mov lea nop fisub pop cmpsb sahf xchg dec lcall mov cmp add cmp push pop loope add dec scas mov (bad) cwtl jns xlat jno pusha mov sub repz mov cmp insl sub jbe sub inc lods inc lcall inc outsl ret leave pop into arpl pop mov scas and fwait scas ret mov mov sti push ror adc dec fist test mov mov clc and insb (bad) leave popa pop or cmpsl decb inc mov in xchg aas stos sbb bound and fnstsw xchg cmp cmpsb loop test sbb pop test jne pop dec jno cwtl stos jns (bad) cs (bad) jl and pop pop lea mov test imul inc xor add xchg or (bad) pushf cmp jecxz mov mov jp test inc rcr hlt sub cs rorb aam mov imul mov lahf sub dec xor fwait pop neg xchg lods loope,pt cli ss jae xor sub aas or cs out inc in in fadd rdmsr dec mov add imul scas jg xchg aam scas sbb fwait std divl pop xor test jae sbb jnp adc out adc dec je mov loope push cld int3 inc cwtl pop lds test movsl fild cmpsl xorl lahf mov inc push lahf call repz ja inc movsl fnstenv jp stc and xor dec enter cmp dec pop dec stos lahf popf sti jge cmp dec dec test cmc ja pop icebp xchg scas arpl push mov pop mov cmpsl fsubrl dec inc sbb out adc incb into lret sub and sahf xchg (bad) hlt pushl cmp andl movsl (bad) inc mov xor std (bad) pusha and cs clc add cmp push movsl pop loopne (bad) sbb lret mov mov jp dec test dec sahf pop mov out sbb pop std jecxz lahf mov loopne std fbstp mov clc jmp daa push sub arpl mov xchg hlt loope nop movsb sbb movsb int aam fisubr mov jbe pop pusha dec pop dec stos aaa popf push js mov (bad) jbe jae out sub fs js mov call pop movsl sahf lret aam mov imul cs dec test test xchg mov mov aad fwait dec cmovl lahf mov loopne mov push and sub lods gs cld mov mov (bad) jg cmp push dec pop sahf fwait test inc mov push jge push cmp mov dec dec mov into daa or jae dec leave daa js cmp dec sbb lea imul arpl jmp xchg test cmpsl cmp and clc dec stos repz scas jge ds outsb sub (bad) in inc into mov and in movsl pop rcrb in cld jg cs out sbb fldpi xchg jne pop sti pop int3 cmp outsl leave pop dec leave sbb ja adc jge je scas clc les push jae mov sub jmp (bad) gs orl repz dec cmp dec dec stos loop into dec adc sub mov pushf add xchg sbb aad fild xor push xchg (bad) test (bad) mov dec xor jne stos pop (bad) movsl mov and and xchg cmp dec jle cli push (bad) jb adc sub pusha js pop movsl xor or cmp imul les mov repz xor sub iret int3 jno pop xor (bad) out int3 mov xor fwait (bad) sub sub push shll add hlt or push sbb xchg hlt imul mov jno stos ret fwait clc daa movsl cs test mov cvtps2pi sub add inc xor (bad) (bad) sahf jecxz dec mov dec jg pop cwtl jecxz sbb test stos js cwtl sub add jne sbb lret pop mov movsb lcall test xor arpl sbb cld dec in ficomp arpl out push jns xchg lods xchg jbe pop inc dec sbb lcall xchg pop sub imul cmp jmp and stos imul (bad) mov fsubs iret aaa movsl dec icebp daa cmp dec std sahf test xchg push popa jae mov fcomip gs (bad) cmp lods jp xchg push jl scas scas or vunpckhps push gs clc (bad) jo stc jp add xchg fimul cli sbb in loopne cmp sbb cmpsl sbb loopne cmp push cmp call popa cmp js dec clc notl icebp ss fistl push dec mov jge je scas mov push adc (bad) std xchg arpl pop leave jmp mov and or hlt loope xor sub imul mov in adc mov sub adc or add (bad) cmpsl xor jo stc out js pop das iret sub sti (bad) rorb push mov mov lods ret mov addr16 cwtl sahf flds cmp aaa loope pop out adc jl xchg aas fldcw jne,pn sbb in sub and mov push loopne mov inc jne out jmp mov mov rorl rcl cmpsb cld inc mov jl sub push test cvttps2pi pop clc repz test hlt rep cmpsl and nop movsl ret icebp mov push sahf sbb dec push pop stc sub ja jmp adc aaa arpl lods jg (bad) mov fdivrl insl jmp fsubrl clc int3 xchg flds mov (bad) test mov jbe idiv les in fcomps jno clc xchg loopne or cltd jmp fsubr movsl sti bndstx mov (bad) jl addr16 sbb sbb dec mov xchg pop decl adc sbb mov cwtl jbe sub dec adc inc out push pop movsl ret hlt mov push dec (bad) sub sbb sar sub shrl xchg aad clc lock push mov loopne scas shrd pop cmp adc movsl stos hlt (bad) mov iret add je and jl cmp or mov lods popa fadds stos jge fcoms leave fbstp inc int3 fcmovnu mov sti mov sbb out cmp (bad) xchg or in push lds fs nop cmp inc sbb push mov or sbb divb gs sub fwait lds and sub and jns (bad) fild clc dec loope stc push in rorb push bound push daa xchg mov iret adc in mov popf outsl jge cmp and jmp dec gs mov repz scas (bad) lods lret sub movsl iret lock movsl (bad) in dec into mov and sbb std fwait repnz pop je inc push stc sti jg inc cmp sbb out stos dec test cmp cld andl out add aad daa ret (bad) sahf pop pop sbb dec mov in xlat call cmp sbb xchg in mov adc pushf sbb incb sub cld cmp push add cmp aam aaa xchg mov mov movsl lahf jno sbb inc stos sbb (bad) stc xchg popa aam test sub push into (bad) sub daa xchg pop add mov cmp pop jmp sub inc cld jnp je pusha xchg test fnstsw cmp mov imul imul sub sbb sub cmpsl stos pop mov sbb clc dec sbb daa bound fist sub push jo cmp xor adc mov test mov inc mov imull mov jae mov (bad) repz inc and and scas iret clc stos scas aam jo mov push pop sarl dec sub mov imul stc dec sub movsb or mov iret out jbe cld ljmp leave inc sub and in push xchg hlt and mov mov popf xchg sub sti popf xchg in add sbb mov lahf xor inc adc or pushf sbb pop je jge cmp add jp sahf inc and imul icebp push lds push scas cmp pop (bad) icebp les leave jmp cmp bound sti (bad) hlt adc jl jl icebp int3 popa mov pop add adc jl adc xorl mov add sub xchg dec push (bad) xor movsl dec lock cli sar addr16 add mov jecxz lahf daa sti mov pop pop add mov clc dec cmp call int3 mov cmp sub (bad) or or jno in repz popf sbb jbe dec jl je mov popf jg fmuls js cmp lcall aad add dec push in pop std cmp scas pop loopne dec jge lods cltd pop mov jo inc imul sbb lret stc jg shr add pop lods out mov sub int3 imul in cli pop clc aas test vhsubpd cmp mov mov sub pop jl sub cmpsl rolb cltd dec sahf jae fwait sub push mov xor jge (bad) sub hlt dec or pop in xchg jl dec insb jge jbe pop xchg aas arpl int3 xchg mov fwait sub pop push int sahf cmp fbstp push test dec fcompl ja sti sbb popa jmp inc clc ljmp test je test (bad) movsl lods jns scas pop jne sbb or hlt mov cmpsl add and scas mov aaa test xchg mov hlt imul loope test mov inc test cmp clc pop xchg iret fidivrl or stos ja xor aas jno mov std scas pushl sub cmp dec xor lds cld lahf xor mov (bad) jbe push fwait cmp pop incb cmc jg adc out stos sti test and or dec xor sbb cmc fsubs insl jbe mov jle adc (bad) mov and push dec sub sbb roll test xchg ja mov jmp cmp dec test mov addr16 xor dec out cmp xchg push pop xchg clc gs fs xor xchg lcall icebp pop clc jecxz lahf jge and dec jne mov jl popf cmp xor mov sahf repz imul mov test jne pushf scas cld inc popf inc std das xor mov hlt xor mov sbb inc sub lcall sub lcall movl mov cs or jmp sbbb push test sub sub and jle adc dec adc cmp test iret popf stos loope sbb daa fcomps inc add iret sti (bad) das int3 ret lods mov gs sahf idivl dec sub movsl les sub pop and mov out gs clc dec fiaddl clc imul cwtl lret iret jmp xchg pushl movaps add (bad) iret push dec js and lret lods (bad) pop and mov and in and repz sahf mov iret cs adc sbb hlt addr16 subl add dec cltd dec les test jbe pop jmp fdivs sub push stos (bad) popf jmp xchg (bad) dec mov pop loope lods push jbe add shl dec test dec sbb stc push test std push movsb push (bad) lret mov mov (bad) jle adc sub adcl (bad) rsm dec test dec insl sub inc clc jecxz add fadd mov bound pop sub push jecxz lahf inc jge jecxz sbb mov jne es or cli adc pop faddl jb push add dec fnstsw idivl lock hlt rorl mov pop ds mov cwtl fwait lahf mull rcr xor jl sub stc inc xor (bad) push imul or jbe adc jmp out movsl mov cmp cld add pop sub jge cmp pusha test fisttpll pop mov test imul xchg (bad) (bad) fadds dec inc mov dec or inc cltd in lret loop je and xchg sub dec mov jns push cmc sti mov stc dec mov fldenv call cwtl jne dec lahf and inc cmp xchg jmp mov (bad) stos mov leave mov (bad) hlt (bad) mov iret sbb dec adc (bad) pop (bad) imul iret push cli je jecxz sub inc mov mov jbe pop rorb dec stos pop popf arpl cmp hlt or imul add xor mov cmp jo mov jle sbb dec inc push fdiv movsl sub mov and scas dec insl xchg js jl mov dec jg pop or ret lods cmp add dec jno fwait loopne test sarl aad in mov dec subb out sbb pop jno loopne and cmpsb not lods lods sub mov inc incl pop repz adc ja dec sbb cld shrb dec into das sub and or dec ljmp dec adc fistpll dec pop jg cmpsb gs lods movsb pop sub sti arpl adc mov icebp lea push xor push insl fnsave test and push push fdivrl enter iret xor dec daa movsl and test jp sub dec in popf pop popa movsb (bad) dec push push mov sub fmulp cwtl pop stos int3 add pop rcll stos mov popf add jl lea inc adc clc jnp fnstsw and stos cmc jge or lahf popf jmp mov dec cmp jmp (bad) movsl imul push js adc and fbld lahf test loope cmp sub push stc cmp pop std loopne fdivrp dec scas xchg mov daa sub loopne mov mov fcmovnb sub imul dec dec dec adc inc jmp cmp cld les dec cmp sub out or jg nop pop sub mov and pop pop sub mov adc and cmp adc push inc pop dec jl mov sub xchg pop loop xchg xor inc test jge,pn and mov pop scas adc addb mov xor add movsl dec sbb pop xor mov ja pop or xchg and aaa dec lods lahf push jge je lods fildll call test adc cli sub lcall movl js jge je scas sti es add lahf popf jno arpl enter sbb out fcomi pusha fs int inc inc inc dec mov (bad) (bad) jae pop int mov xchg into sub daa clc (bad) movsl dec mov adc repz xor mov xor scas jecxz fwait mov pusha or lods xlat xor dec cmp arpl test inc inc stc test add xor dec mov push pusha int3 or fsts sbb mov loopne sti xbegin jae out lods (bad) or sub cs imul stos daa jl sub pop fwait sarl or lahf add in lret cmovl std int mov inc sbb scas pop popf cmp mov ret movsl lahf mov pop clc jnp pop movsl jae pop (bad) jl negl or cmp js lret mov test cld decb dec sub inc mov stc sub sub cmc jle push push inc (bad) loopne cmp and push xor lahf sbb sbb mov stc incl mov mov add cld push (bad) jge xor dec divb push insl cmp enter dec lahf dec in pop test loope cmp outsl dec stos sti pop push and (bad) dec iret imul in lods add dec cmp inc mov cs lock mov add jg sub cs jp cmp and jle adc dec std rolw or arpl out cmp or orl sbb and popf fisttpl jbe pop fs dec cmpsb repnz scas sbb sub adc enter jecxz mull mov dec ret das sub xor push std xor scas xor test lret sahf scas (bad) mov sahf lret cld cmpsl mov fs mov imul pop js inc lahf (bad) sub xchg or sbb subl cmpsl int3 imul sub jns (bad) xchg cmpsb pop imul test popf mov (bad) xor inc hlt mov dec or dec inc mov xor or daa fsubrs xlat xor hlt imul stos daa clc jmp pop lock push pop cmp pop add lods push out push add dec (bad) daa fnstsw cmp push (bad) adc cmp addr16 xchg (bad) lods sub mov pop sbb lret mov mov mov xor scas inc cmp fstpl sub inc lcall xor dec mov in xor jl aam mov cmp test cmpsb leave repz iret daa sti dec pop dec or adc stc inc cmp int3 stos mov xchg test jecxz mov pop ja xor pushf in sbb out push cmp das scas (bad) test or dec popf dec enter lahf xchg pop fwait hlt divl inc dec or enter movsl sbb mov sti hlt pop dec ljmp test push inc aam mov daa dec (bad) mov xchg bound scas jg and leave int3 out daa jle mov (bad) dec mov cmp jp test insb fsts sbb adc cmp rorl daa dec xlat mov xchg sbbl push ss fwait scas lahf adc ja insb icebp stos inc mov das scas mov mov sub mov dec jl adc popf aas aas jle movl mov xlat and sti dec sbb cmpsl (bad) jnp addl xor test dec popf sbb jl mov mov loopne cmpsb das scas jp and fldl lods dec mov dec shlb xchg out pop int sahf lods jge mov lahf inc movsl or js xchg push or or std mov and imul add addr16 cmpsb jmp out adc dec in push mov inc jge push popf mov mov faddl pop dec (bad) out popf mov movsl sbb lret pop cmpsl iret fsubl daa dec add dec pop jge (bad) pop mov test enter fnstcw iret bound jb,pn lods jae out stc or sbb clc add mov or add adc sub lret mov mov outsb mov out sub dec mov insb sub or (bad) xlat idiv int3 inc pop imulb test and adc dec aaa sub int3 push lods dec gs inc movsl sbb outsl iret or pop loope cmp dec xor ror test dec data16 rol jle pop jle inc xchg cmpsl js and sub push movl jmp pop inc in add in and jnp sbb pop repz dec sub jge jge inc cmp stc imul xchg push cmp lock repz jnp and dec jl sub ljmp (bad) cli or jp pop test dec dec mov xor std jnp inc js (bad) arpl pop cwtl xchg test addr16 add mov cmpsb arpl pop negb insl pop sub and cmp sub pop and je test dec cltd push insl je jecxz xchg in (bad) jmp clc sti push inc mov outsb xchg mov push jbe xchg out sti nop sbb pop imulb push add shrl lds cmp jnp pop mov scas or sbb and jo fild xchg leave mov insl popa lods mov xchg sbb inc popf and cwtl or clc and sub js pop push pop (bad) out movsb loope movsl das clc imul fxch cmpsb dec test cmp std aaa lods mov test dec cmp pop mov call (bad) bound scas iret popf stos mov mov hlt mov push pop js mov sbb imul mov icebp (bad) shrb fldenv aaa idiv cld cs mov lods mov scas mov fstpl dec cltd jg mov jne addr16 push jg nop gs out int3 in push sub movsb or cmp in cmp dec lock dec lret clc arpl jmp lahf int3 sti mov dec sub cmp ficomp mov jnp std daa out mov imul push dec fs mov std stos je mov scas or mov mov jmp adc cmp sahf fwait jmp mov movsl jae test test cmp repnz sahf pop hlt aaa mov lea cs jg (bad) xchg cmp jno (bad) scas and fdivrp popf iret rcll lret call mov mov pusha pop les repz mov add dec int js int3 or pop test lock test mov arpl clc sahf pop cmpsl or je fcomi mov aas scas ror jmp aas adc cmp dec pop push icebp adcb sub cwtl mov imul dec addr16 xchg arpl adc dec xchg pop shll mov and dec mov daa push imul cmp jns mov fcomip cwtl push (bad) cwtl cmpsl (bad) sbb and je insl jae ror (bad) sub and repz sbb mov add rorb dec in pop dec outsb mov cmpsb rcrl ljmp add outsl mov repnz inc pop inc fmuls gs jg movsl dec adc fs (bad) xlat test sbb test cwtl sahf mov lahf inc sbb pop xchg mov pop dec imul cmc sti mov fs lock cs dec (bad) jns and push jbe add sub insl lcall mulb add aam std adc and dec sub sbb stos popf jmp jg xchg or or or sbb xor jmp addr16 arpl (bad) cmpsb insl inc pop (bad) out mov sti inc comiss aam icebp jno (bad) mov and scas dec imulb stc jmp out vpsrlq push fsubl inc out aaa and loop lea cmp push cwtl push adc pop lcall popf pop cmp (bad) out jecxz push movsb sbb jecxz push mov sub cmp xchg pop aas aas aad xchg lods push clc cmp jbe xor (bad) cmp bound ret push stos push shl lea xchg cmpsb out xchg negb cmp mov dec inc sbb pop adc jnp (bad) repnz out push imul (bad) dec mov mov (bad) in mov pop movsb test add cld test mov imul mov enter push incl (bad) incl xchg mov add inc fistpll nop mov (bad) in in push out pop inc std adc jb mov sbb lea (bad) movsb dec mov mov out test negb (bad) (bad) aas sbb out in push loope cltd jb mov faddl adc out dec out insb inc push dec sti stos stos (bad) std mov sub sbb sub mov in mov push or jo push sub call add and adc ja mov loopne imul lock inc fwait cmp xlat lea sub mov push loope imull ja pop sahf daa jo xchg lods aam in mov jmp es test outsb lds jge cmp out xor push pop xchg int3 dec pushf imul repnz jbe sub test dec in add add stos dec jo push mov (bad) pop dec lahf int mov mull (bad) mov or dec xchg xchg outsb pop in xchg into lahf sub adc ds mov clc adc xchg mov pop sbbl sbb clc push jg cld push sbb pushf test xchg pop jae sbb xchg in les pop ja or dec sub dec aam xor pop das mov jns inc imul inc push scas jecxz xor inc add andl inc cld (bad) lock aas xor lods pop mov adc stos xchg sub mov mov (bad) mov jbe jnp sti and sbbb nop cmpl (bad) out stc inc inc jae cmpsl inc adc add xchg push mov out cwtl lock cmp ss clc pop mov dec test or fstpt cmp ret fnstsw add lea xchg test lret cwtl push ljmp inc fdivs jge xchg pop add mov rcll adc (bad) incb lret or sub push mov in stos (bad) ljmp or repz add inc mov cmpsb cmp xorl inc sub enter pop sahf shll xchg mov push into mov shll dec pop scas sahf movsb das cmp xchg sbb test and mov inc add and and cmpl mov (bad) cmp inc jae cmp mov call repnz dec clc dec xchg cmp push jae dec lret or push sub subb outsb movl cmpl adc test inc (bad) das mov inc push or outsb mov out dec jg jmp xchg into test imul bound pop sbb gs cld iret inc scas lods into or push incb imul cmp mov test cld arpl test inc pop data16 adc or push inc lods push lcall mov cmp mov cmp mov xchg (bad) lret ljmp icebp arpl pushf mov fdivrl lds imul test mov lock cltd dec call mov stos ljmp pop cmp and jno je call pop je xor clc fidiv das out js loope xchg imul push int3 or out add mov add push push cmc (bad) or dec add addr16 lret sub aaa fxch mov popf std jg out fsub and fimul insl xor pop (bad) or add dec (bad) data16 xchg xor adc xor or lea push aam nop data16 xor in test pop push insl or jl cmpl sub pop insb jno jns sahf mov xchg (bad) mov (bad) lahf test stos aaa addr16 or call ds xchg push inc sbb xchg addr16 add xchg mov out das add nop stc js ror ljmp insl pop mov mov test cmp mov lods out aas loopne add popf daa sbb cmp mov inc sbb mov in std sbb test out popf pop lds jg push stc imul dec outsb rclb push fisttpl inc lret cmp jae xorl xchg mov js in dec or add imul inc rorb jg jno in aas mov adc out push inc lcall mov sbb dec addl mov adc cmp fwait gs ds inc stos repnz dec pop imul fild xchg int3 push xchg cmp inc inc (bad) lock mov nop push pop pop sbb out ljmp jmp out fisubrl push jns push sti jp data16 out shll test pop pushf fmulp jle lds or jle into mov loope sub out imul fimull sti inc ret dec mov ds jb mov xor outsb loopne sub test jnp inc cmp cmc inc aaa cmp cmp fnsave sub lea add test das pop adcb movsb pop adc outsb cmp shlb dec insb es out xchg sti jb das push dec add pop mov lock xchg add cmpsl cwtl movsl cmpl mov adc lods in jae cmp leave es test mov mov mov insb add jnp cli and das sub loop inc enter test mov ret push (bad) lods adc xlat jnp bound (bad) jnp push out jbe dec (bad) xor loop inc loopne mov add ss test mov mov sub push imul idivb test lret pop mov daa jns sti mov mov or ja inc sub xor jmp cmp dec xor jg insl jbe xor test add add es jb xchg icebp jg dec cmc icebp add dec mov mov aaa push mov xor test pop jg pusha ret loope xchg sahf std (bad) std xchg ljmp js mov sbb jae sub movsl daa mov (bad) scas outsb xchg cs and or cld outsb pop sub jp nop xor pop rorb aad mov sbb pop imul push mov movb sbb push bound or and cli aad cmpl xor xor sub or mov imul and inc push sub aaa outsb lahf repz in cmp add cld sub and test lret cld les dec fwait loop daa nop ficompl push shrl mov inc mov popa and scas mov pop loop sbb adc jns in xchg push test fwait dec les jg mov je cwtl or or add inc xchg aaa repnz cmc pop (bad) loop ds hlt test pop daa dec (bad) jp test aas sbb jmp or sub lock lock test mov mov mov out ljmp or fs pop fmul and aaa ret fs pop (bad) xor mov pop xchg push test into jg loope,pt aaa push aas fs add xchg push sahf jne add leave mov dec adc mov fnsave fdivs adc sbb insl and pushf push test cwtl ss into push inc adc jg out jmp int xchg inc add or add lahf rcrl lret mov and mov xor push (bad) call pop lds insb bound sbb jmp loop,pn jmp and mov inc imul lret out int3 jns mov xchg mov sub and (bad) push data16 daa mov clc ljmp inc cmpsl push mov mov jo cmp sub mov jge xor jle or ds (bad) sub inc adc je dec enter jnp add and ret mov clc fwait dec test adc add mov sti cmp (bad) test add imul xchg sub in mov movsb xchg mov aaa insb push cmpsb pop push insb fistl push xchg loope xlat orl mov in es mov cld fild testl imul das imul loope mov imul dec xor or inc ja or cmp cmpsl lods pushf xchg and push movsl icebp stos push enter add push mov lds std jp add push mov mov mov dec add push pushf jge out xor aas icebp loope hlt mov push cld lds and xchg (bad) xchg or out lahf movsl popa sub ljmp test out jne repz or int pop pop imul gs add rol hlt fcompl movsb (bad) aad repnz pop pop fidivr add dec sahf daa mov das cmc and (bad) nop (bad) or call lds sarl fwait out push ss stos xor mov sub daa fs ss addr16 xor std int3 outsb shr out stc test imul fsubs jbe mov xchg (bad) and xchg mov jno xor pop loope mov mov faddl es out dec imul mov add out xor dec lock mov test push (bad) cld inc stos test (bad) sub xor or stc (bad) push cwtl out dec ret adc js cs mov divb (bad) aad jge sub shl jae jl repnz jns test dec fucompp leave das fistp enter pushf shlb mov xor les clc or xchg loop lods movsb cmp scas xchg scas cmp hlt mov sti das out testl cmc addr16 outsl pusha mov xchg dec sub jnp pop stc jnp dec add clc bound popf movsb (bad) mull incl or loop das or mov push xor dec call push (bad) rcrb jl movsb mov cltd std lock lret lods push dec jnp imul dec (bad) daa or mov jge (bad) push stos ret add negb inc fcompl pop sub lock jl (bad) sbb push fistpll lods add jp aaa ljmp nop stc out rclb dec dec imul xlat andb dec scas sub int jae fsubl (bad) ret mov out mov mov aaa leave jb jns out pop data16 push push mov test cmp xlat or (bad) lea fs or dec mov subb sbb sti ret iret (bad) in mov sub imul lock popf data16 rcrb xor fcoms xorl mov imul int3 fsubp xor adc cld jmp scas ret movsl (bad) pop push dec adc and mov mov or jmp lds xor outsb lret cltd aaa add movsl aas lods add xchg adc dec jge lcall movsb and scas test cmp adc das mov push jno lcall sbb or bound hlt pushf mov cld out sub sub dec sub into push insl aas rclb orl add test adc loopne sub dec movsb out sahf sbb sub push fnstsw cmp das inc shll push pop jle pusha arpl test cmp add push mov stos mov pop dec lret mov addb sbb divl lahf (bad) xor fcoms fdivrs (bad) push mov rorb in xchg enter xor das mov jmp pop imul inc movsb push stos jbe sahf in sahf mov dec push cwtl cli (bad) sub outsl cmp mov or mov pop adc jnp and imul inc aad cmp cld mov adc addr16 sbb sub jmp add cmc mov mov out nop lcall dec add push icebp sbb pusha lcall xor pushf fnclex sahf xchg lcall subl cltd loopne cwtl add (bad) aam ret dec arpl (bad) mov imul mov mov mov push lahf aas lds enter pop mov scas mov out sub push (bad) loope leave jge data16 or mov mov jns sbb sti out inc ljmp push cld into mov popa adc adcl pop sbb clc xchg adc in jl push out out dec stos in (bad) sub dec cld jge daa out (bad) push mov mov xor lock lods loope (bad) dec cmp pop jmp sti ret sti test in xor dec inc arpl jmp xor adc push xchg (bad) into mov fisttpl cmp ljmp scas outsb je emms mov xchg jno jbe loope dec arpl stc adcl lahf inc out mov jbe pop fldcw dec cmp and (bad) fadd sahf or insl mov mov cld xchg pop aaa lods mov lcall sub push jne ret out dec ffree and nop xchg fbld and pusha dec aam mov (bad) sub push add sbb push inc inc ret jo cmovle mov loop push rcr sahf sbb sbb lods dec dec dec test mov dec test jmp mov popa push rorb xchg movsb ja inc push je pop rcl push (bad) adc std cmpsb pusha fs push iret inc pop mov fisubr out gs or jmp fadds fistp inc jno aaa fstpl push aam call test mov cmc push popf push outsl xchg test ja stos mov ljmp sbb cmp ja in int fisub sbb fcomp movsb sub in mov push xchg sub sbb (bad) jg xchg add aaa push in bound in arpl dec pop lret fnstsw into dec cli sbb dec arpl test mov test mov out cli (bad) pop mov jbe in insb ljmp mov cmpsb sbb cmp dec in divb add (bad) mov push (bad) icebp add std push (bad) jecxz push aaa adc cmp arpl pop loope mov pop cmp sahf cli rcl add les push lea imul leave iret xchg int outsl js pop mov rorb ljmp xor and mov fistl icebp lds cli movsb out adc daa fistl arpl loop or pop mov jae sahf mov clc dec jmp cmpsb add push cmp jno pop loope xor or hlt and cmpsb adc xchg call or add (bad) (bad) xor out xchg jge pop ror inc inc in dec addr16 adc adcl push xchg mov add xchg data16 aam mov push fstps cmpsl repz in pop movsb in sub mov add pop es pop push pop ret jno lds aas das or push xchg or pop sti cld add iret data16 fstpl and gs mov adcl fisubr les push insl inc adc insb jle jmp call mov loop mov (bad) jl adc and xor pop mov sbb sahf lea xor mov sub decb lea push lea sub xchg pop cmp or mov out cwtl fs cs and movsb or and or loope push cwtl sti inc popf fmul test (bad) or test or jmp fs mov in in aam sahf xchg out out bound sbb jns popf push into arpl jmp xor into mov add hlt sub dec push outsl fldenv mov stos dec and icebp shrb fistp fdivrs adc xor fwait jp insb out and jle mov scas push cmc lret pusha lods mov cli fdivrs lds enter mov fild movsl fwait xchg lea daa push cmp xchg jbe jo loope push clc loop inc int mov mov ds push jg cmpl and mov inc insb gs add inc or cmpsb jl fsubl fsubr loop dec sub cmp addr16 dec inc (bad) dec and (bad) xor mov sbb lahf push add pop test divb mov mov test mov cs push iret arpl jae mov rcrl incb popa push ja test mov dec pushf mov cld icebp mov and push mov arpl scas jno lods pop les push inc dec imul mov xlat adc dec pop sti sbb jae mov push repnz inc mov lret lock or push inc daa daa mov test mov inc aad lds mov and aas test xor sub aas xchg xor popa cwtl imul or push lods test xor pop ret daa in lods and cwtl sub add clc lea lods cmp subl das xor not enter daa out das sub fdivl pop ret mov cmp sub jae loopne iret mov cmp xor xchg push sbb push cwtl jnp cmp das loope imul leave addr16 loope xchg std bound scas stos idivb push push fiaddl popf leave out dec loopne test (bad) ds (bad) adc jecxz mov ds sub cld dec xor dec xor dec leave dec lods and movsb xchg push out inc in cs mov push mov cmpsb call and mov add inc popf dec dec divl clc sub and insl clc movsl outsb decb je into aad test mov sti jmp sub or stos mov mov pusha or dec push mov in lret mov in push test jl jo and test mov push stc iret mov dec addr16 pop lea in push pop imul insl (bad) scas fild lods fisubrl aas shll lods or mov cld adc sahf xchg and inc aas jecxz out cmp inc daa lcall push stc in cmp xor fistl aas jp aas ficom adc je jle push lods out sahf push out push mov or push push insl cld stos in lods stos xchg push jp cmp lds imul jg cwtl mov cmc mov in pop dec mov push mov hlt dec int3 push pop sbb jb addr16 stos cmp pop mov call test aad stos aad lds cmp in pop arpl xor pushf inc jge mov iret lahf xchg jg mov lahf (bad) dec repz or mov loope dec js (bad) les shlb leave jmp mov or mov or lods mov push je cltd jns push or sahf inc push test dec cmp data16 aam (bad) xchg xchg sbb pop es mov lods cmpsl cmpsb jno pop cmp mov mov lock add std test scas dec sahf ljmp lret pushl cltd rcrb pop std (bad) jg push aam or adc mov gs lea jo aas sbb mov (bad) das ja dec cmp pop (bad) jecxz stc fdivrs lods xor push adc pop lahf mov mov out push mov cmp sbb mov push add sub or js js jno pushf std xchg bound int3 stc in xor add pop fistpll cs and je jmp insb xor dec cmp icebp or mov mov out mov sbbl inc rclb dec lret imul inc in sub jo stc mov ja out hlt cmp or fmull mov mov dec popf pop push ds pop xor xlat pop xlat add xchg jne (bad) push pop and push movsl scas mov imul xchg shrb mov out cwtl sbb cwtl pop mov out and in test xchg mov in fldt test jae loop mov int3 fs dec das test lret jae out movsl stos in test ja sub push pop sti or mov vcvttpd2dqy dec sti shll mov cld sub and js dec push pusha rorl rclb sarb sub in push outsl mov or xchg pop xor ljmp xor arpl or addr16 imul sub mov cmpsl dec fbld cwtl push shrb dec cmp sub popa inc push mov cmp sub sub mov test xchg dec ret fsubr xchg popa fmull lcall in rcl push push jecxz or add jno inc mov loopne mov test sub out ret dec enter mov mov test outsl xchg push aad mov sub xchg sbb in xor pop push xor jnp pop stos aam mov push stos push pop lcall add test repnz push push call lods xchg adc out stos (bad) cld xlat xchg out jge clc sbb xor xlat ret adc sbb lock pop pop mov push mov add test sahf jo mov cmpsl lock lret outsl in mov xchg sub push inc mov jmp rorl outsb cmpsl or aas push push push popf mov adc cld cwtl loop insl mov divl mov jg inc popf shll mov jle fs lret sub aas xchg pop mov popl cmpsl mov insl jno xor or stos mov dec loop push jno jmp imul test inc mov loop add push push cmp inc imul sahf es out fs add inc ds roll mov jns push shl push in into dec lahf cmp stos lods sti pop sbb mov out inc sbb fimul pop enter mov in xor leave pop aaa dec lds push rcrl out dec pop jmp call or xchg mov incl pop sub or sub cmp sbb pop rolb mov sbb pop pop leave aad xchg movsl and and decb push mov jecxz jb jmp test xor adc loopne scas adc sbb lods mov mov jmp cli cmp (bad) (bad) out int sbb xchg in sbb in fsub and pop insl movsl cld add sbb jmp imul das imul xlat pop (bad) cmp fwait jb push add pusha out mov aaa fnstenv cmc mov icebp xchg movsl xchg and pop and (bad) lahf out mov dec jo or jp popa repnz sub sbb lds jne xchg sbb int3 sub cwtl addl ja inc in movsl jae adc rcrl mov test add scas add pop cmc pop into xchg push jno add aad mov stos and (bad) pop inc mov loopne fildl inc pop sbb stos jmp in xlat mov xchg sub mov or outsl mov and pop shr ret popf xchg (bad) cltd inc cmp cwtl and adc (bad) lret popa int3 push xor lret andl and fdivrl pop iret jb add into cmpsb cs out lahf jl (bad) sub shrl std mov xor push add loope adc stc xlat xchg test push push pop movl push in jg and pushf sub jl mov add fcoml fimul and mov mov out adc arpl outsb push dec add (bad) mov cltd les test cld mov cli rcrb clc sbb bound jge sbb sub mov dec mov xor mov mov stos shlb imul std sub test xor popf ret int roll rorb mov notl push dec cmp jbe cmp xor xchg call push jp fdivrs push mov ss fcmovu cld leave adc je in loop mov jge std or mov insl rorb in pop hlt imul and push dec stc ficompl and dec pcmpgtb mov pop lods xchg popl push inc in outsb xchg jne and cmpsb adc bound lret ret out or dec (bad) or int scas movsl leave pop clc daa add inc add sub pop jge adc and dec rcrb jns sbb aas cli or rcrb into test out incb mov leave dec push hlt and jle pop (bad) jmp pop ret sub jmp and pop xor mov cld in cmp sub jbe lcall or xor mov fstpl push daa scas mov scas (bad) out jge lcall xlat mov sub mov leave or xlat xchg xchg in (bad) pushf xchg in lock xor push das xor inc call mov daa sti cmpl fildll mov loop jo in int jg sub cmp or iret sub insb aas pop adc mov test scas xor cmp movmskps in cmp add in arpl cmpsl popa mov pusha mov and inc stos test xor ja data16 stos and dec insb dec bnd inc in shr fimull out clc sbb pop cs xor adc ret pop rclb push out sub aaa mov (bad) out out inc cmpb mov ds insl es and xor mov inc mov jnp pusha (bad) jae fdivl push lret xor mov test push das xchg pusha cmp adc mov lcall addr16 stos push lods mov pushf mov test ja jns xor and (bad) stos in jp add inc push rorl shrl jno add imulb inc and push dec push pushf xchg xchg cmpsb cmp (bad) imul adc lods jo dec xchg or pop jge jb das dec test ljmp sub jo ss lcall mov sti icebp fwait push cmp std icebp pop adc (bad) push dec sbb adc pop mov dec std cmp and insl insl call js jp int3 and enter mov inc adc ds jge ficomp dec pop push xchg stos fidivrl clc repnz sub aas repnz in call cmp out xchg jl (bad) loop (bad) aas cmpsl and mov xor add adcb xchg mov pop inc aad pop imul cmp mov ja fisubr loop pop repz sbb loopne inc movsl inc cmp icebp mov fidivrl pop add push test jmp mov gs insl scas jmp inc cwtl ret pop out clc pop iret mov stos jmp mov imul inc decl pop or add rorl mov mov movsb jl fs enter or jnp ljmp dec cmp icebp imul jmp imul mov dec mov hlt inc out or jg aaa inc arpl into mov in dec out ja cmp cmp or mov mov inc imul or sbb lods stos pop test mov imul push and lret (bad) sub icebp daa push mov addr16 loope push fisubrl mov mov int3 xor in sub jmp sbb sub loope cmp rcrb mov jo (bad) ss and adc sbb in cmp inc rorb out lods inc imul popa out xchg sbb iret aas leave lea lret inc jmp fmuls and lods xor xchg xor insl popa in xchg shrl jg sub and inc divb mov jge in inc add (bad) fbstp lods movsb fsubs cs outsb insl push mov loop xchg lods lods xchg into out xlat and xchg mov cs ret mov jp jg cmpsl push pop sbb jbe (bad) icebp push fs push jns and xlat and jecxz cmp mov hlt mov jge loop lods aam lcall mov popa push cmp push pop int lcall and or mov roll pusha dec loop sbbl and inc sbb loopne dec lret add test out mov ret sahf jg push data16 loop jns adc int sub popa xchg int test pop loope fnstenv fcomp jle cmp push aad cmp jg jge andl inc sub adc das out cmp outsl cli xchg pop and (bad) cmc adc xchg cmpsl ret sub mov sbb or pusha ret push pop lods out adc jecxz mov jnp out pop hlt or sarb mov add sub out jmp xor fistpll imul shrl cmp mov pop push mov (bad) inc cli adc xchg inc and or lds push clc sbb and leave lahf jbe pop incb ss pusha daa cld inc cwtl lret pop inc enter adc lea test data16 inc inc xchg std pusha adc scas scas mov in adc shrl adc push (bad) mov inc pop sbb push repz xchg repz xor xlat dec std dec pop iret push inc mov jl and sbb ljmp outsl mov sahf push (bad) adc fwait xor or cld and enter insl adc dec loope ds lods shr or (bad) jae clc dec cs adc adc mov sbb or mov pop test js push jg jne inc popf adc inc fidiv aam jbe sbb or es pop sti imul lods ja in (bad) hlt jns scas lcall out jno cmpsw jbe mov xlat and dec xchg pop shrb inc stos sbb jns cmc popf cmp cmpsl test or pop les sbb dec add inc insb cld jb out in loope mov out nop cmp sub dec sbb xchg dec push sub fcmovu mov sbb outsb sub scas cld pushf pop (bad) sub je add mov push inc lret outsb mov nop scas inc enter rcll in xchg pop popf or call fisttp xor iret stc jb add (bad) insl mov out push js mov (bad) repz orl dec lods arpl sbb rcr push xorl roll data16 mov sbb jle fcoms inc lods jns testb add sub mov popf mov jp (bad) mov adc xor push sub adc sub cwtl xchg mov outsb repz cmp mov sub ja inc jl or inc xor dec push std pop xchg aad dec js aas mov fildl jp outsl stc arpl aam mov fidivl fisubr adc xor fisttpl mov cmovno into in shlb mov ret cs in repnz push xchg (bad) dec rep push imul add pop sbb pop pop outsb or cmp jmp jge pusha icebp (bad) sub mull push lods mov mov adc call popa in jmp shrl and cmc mov xchg pop mov jg ja and mov ss and jae test idiv xchg inc repz xor jno shrl cmp jnp push std lock dec sub dec mov xchg inc xchg cmpsl jecxz cmc das pop adc push or inc push daa dec pop pop cmpsb push pop jp stos mov in or mov push push dec js xchg std and into pop sub cmp or rclb jl dec dec adc aaa ret pop mov sub mov fisttp mulb push sub or aad jecxz fnstenv fsubr sub out lea push test aas jbe cld sbb xor inc shrb std xor lods out mov push sbb loopne sbb test (bad) jl icebp repz cmpsb fstpl adc je jmp gs (bad) cwtl jecxz out add (bad) fdivr gs adc xlat push add mov pop cld and pop scas and sub dec pop xchg mov jno lods or push push dec add sti stc (bad) (bad) imull or fistp and aaa fstl stos fwait inc sbb ficom add sarl xor mov in lahf in cmp addr16 das sub (bad) sbb xchg cmp xchg xchg cmp dec mov jmp cmp das mov fcompl add fs cwtl or dec and cmpsb inc out dec addr16 sbb rcll test aam repnz and aaa (bad) jnp test loope leave lock and cmp mov out push pop mov dec mov adc add daa pop adc out inc fdivl push xor cmp in xor scas leave add dec cmp outsb loop mov scas fs or les test jae sbb jmp sti mov adc and sar (bad) aad in adc ss roll pusha (bad) cmc sub in pop (bad) fs pop jmp cli push rcr cmp mov ja rcrb add or mov ds jae out mov aas repz (bad) (bad) nop insb pop dec jp push cs (bad) cmp sbb sbb addr16 xchg push sub lock add js or imul sbb mov stc mov js xchg xor add lds cmpsb nop aad xchg in ljmp (bad) insl jg mov enter mov push pusha aaa (bad) mov xchg je cmpsb int3 int3 mov jle xor in add clc test mov out mov call (bad) sti xchg enter lea iret push push jo push and mov dec mov ljmp and dec sbb dec push cmp movsl mov push or data16 push scas (bad) dec dec in sahf fnstcw fisub jmp sbb xchg scas cmp sub insb jbe (bad) loop or inc or inc jo jo add cwtl imul gs adc xchg icebp lahf and lret or mov sti and lods dec pop cmp aad (bad) inc in jo rcll sbb loop lods test out inc aam insb sti mov arpl add mov je push (bad) mov in xchg mov into jmp adc xlat and inc lods pop and nop sub clc sbb sti push mov mov arpl pop lods enter add insl push outsb movsl adc mov (bad) fstpt lcall inc inc vcvtdq2ps into pop cmp push call jecxz cmp das mov insb jnp icebp jmp mov xchg outsl dec out insb adc into punpckhbw movsb idivl aas pavgb xchg sbb sub fdivrs xchg pusha pushf lahf std and (bad) push (bad) dec popf in lret test mov mov cld jnp out sbb inc pop cmp enter jae ljmp (bad) xor lret loop mov xchg pop iret mov ss pusha mov stos jge clc mov cmp call out arpl dec pushf sub xor lcall cmc pop mov jmp inc adc cltd push (bad) cwtl xor scas sbb cmp insb mov sbb jo (bad) mov mov std in mov imul popl lcall inc fs xchg stos add es dec jno xor gs lea fildll (bad) cmp push pop out mov mov push sub mov out (bad) sarl hlt (bad) out lock cld aas hlt or arpl inc decl movsb lcall rcl adc jb mov imul imul adc fbld pop pop xchg or push arpl mov stos xchg and sub mov pop jecxz sub mov mov stos push rep mov push jmp out xchg inc cwtl and ret pop inc rorl into pop movsl shrb pop sub mov nop jl xchg xchg out jp or cmp adc xchg cs out jp xlat add (bad) inc pop jl and sub sarl daa sbb or cmp outsl outsb adc gs out jge jo adc (bad) mov jae mov rorb ss adc stos inc xor (bad) xor jbe inc cmp mov into into (bad) cmp nop jns pop decb xor dec cld dec ror les fnstcw mov xchg mov or stc mov leave sti xor lods ss pop xchg pop push jbe fwait sbb aas mov fstpt sbb cmp xor inc vhsubpd xor jg out sbb sub or in ret and sbb dec fisttpll inc push movsb jle test int push xchg push daa mov lock cmp or rcr push add sbb and ds push lahf test (bad) cmpsl mov jae adc jge in xchg out scas scas fsubrs mov jmp adc sbb (bad) ss sahf xor insb pushl test popf idivb pop jmp (bad) sti mov cwtl push (bad) in fwait sub (bad) dec leave mov cwtl scas push pop (bad) dec push jne repnz pop add or lock cld inc in mov dec jge sbb lds sub stos push int aas push clc adc lods inc dec push loopne jo mov in push jno std cmp adc mov aam shlb lds sbb repz jne out jns data16 cwtl dec jnp hlt pusha xchg stos loope xchg scas movsl jnp mov cli mov testl xchg cli adc das pop aaa std pushf cli xor jl dec jnp test adc xchg adc enter dec test pop mov push jmp addr16 mov sbb mov xchg or cwtl ss xchg and imul (bad) mov int mov sbb push repnz push jg and xchg int ljmp out sbb sbb ror mov out pop jae pop add pop adc sub lods mov dec cld sti (bad) stos push int3 sub adc movsb adc roll fucomi cld hlt mull and mov add jo push ja mov sub in mov inc nop scas mov insl jb out xor or (bad) push add jmp sarl insb imul js pop push imul rorl fsts repz out xor and pop cmc ret and cmp out (bad) mov push jb faddl pop leave cld dec add repnz jmp adc jmp out xlat pop adc add pusha int3 push add jns or fwait sub and (bad) mov adc pop je icebp mov pop jmp movsl and lret jne scas pop xchg addr16 sub (bad) repnz fwait xor push out inc test sbb cmp cmp loopne ljmp or mov lahf subl cltd push aad mulb lea mov movsl cli add jge sti mov mov cmp pop mov mov rcrb lods out xor jge xor jmp mov sub hlt imul push mov aam popf test test pop nop js popa pusha mov ljmpw mov outsl loop add out nop ljmp into lcall mov dec jns inc imul sub mov jno fucom aam xchg add decb out sahf jne sbb stos aam and dec cld adc repnz std dec mov jp push movsl ret push sub jo roll shrb enter iret jno push mov sub xor push push out jnp jo jmp fnsave insb mov scas nop mov jmp js pop lret movsl lret push mov lods stos mov add xchg xchg std cmp cmp pop xchg inc iret push fdivs inc mov repnz cmp das sbb sub loop sub pop mov add cmp pop sbb pop xor sahf adc jge add stos hlt adc jo mov clc out and and and inc stc stos fabs or pushf cmp cmpsb pushf mov enter sar test dec ret in pop and xchg les add pop pushf sti imul icebp je,pt jae,pt and mov and jmp lahf push std push mov lahf das sbb scas stos movsl jo mov je loop jo or lahf aad jns mov movsb mov and (bad) jo js std (bad) repnz dec inc loop and pop mov push fwait push sbb nop mov jge add cs clc shlb iret xchg sbb mov jno or mov xor rcrl test jge sub jmp xor pushl push dec or mov pop pop jbe xchg sbb in adc nop call mov cld dec xchg push (bad) fstl aas or xor add inc imul mov fistpl sub cld pop fisub and add outsb rcr fwait leave lret inc inc push insb js dec jmp sbb iret popf xor ljmp loopne repnz and fwait outsl pop lea repnz dec mov or pop test out js imul inc inc aam sbb test test es sub sarl and jge xor pusha in jle xor insl negb sbb push adc push ss cmp data16 adc scas test mov xor test inc stos repz jmp mov sbb cmc xor fidiv (bad) add loop arpl cltd mov into daa std xchg xor das out jnp icebp pop popa gs das (bad) sub in and dec test mov dec pop mov inc insl out xchg or or rcr cmpsl sbb sti shl pop push adc dec inc xor pop outsb fcmovne or out cmp adc out pop or clc (bad) mov jle cmpsl mov jnp xor imul stos out mov or push ret xchg les sbb or xchg inc (bad) ss loopne lret mov adc mov (bad) nop sarl scas pop mov cmp out pop cs movsb out dec in pop push adc xchg dec insl jmp scas sub dec je jp pop xor test cs mov jne lahf rcrb aam fisub or cld pop lcall pop fdivp or push (bad) das jb loop jnp (bad) pop lahf test stos outsl iret fnstsw mov mov int fwait cmp fs pop fprem sbb psubb cmc push vmovlps test dec mov push cmpsb jnp xor aas mov sbb sub arpl out adc pushw out mov (bad) movsb (bad) sahf dec into out test (bad) mov lcall mov in adcl imul in jge jp adc xchg mov out xchg mov pop int3 nop cmp stos scas jns mov jo rcrb xor lds sti push jne std stos daa push scas ja sub mov cli mov cmp pusha inc push data16 push stc and pop test cld xchg out mov iret sub add cmpsb mov ja jge and imul mov mov cmp insb cmp or dec mov ja mov xchg sbb cmpsl dec xchg pop into ljmp jl or (bad) push stc sub jmp (bad) xlat mov (bad) jle mov xor lahf scas mov icebp cltd inc aaa insl in mov ror sub lret jbe jl dec mov jbe inc sti lea pop fistl push scas lods ss rclb adc adcl lods push push xor mov cltd xchg cmp jno sbb adc pop iret push xorl das jnp jno lea mov adc sub jno pop (bad) adc testl cmp cmc xor pop sti enter xchg or (bad) cltd das cmc jp jnp add imul and push mov jbe push dec popfw lret adc popf cwtl pop dec sbb xor out test lods inc iret and int or add push mov fisub push fistpll notb outsb cld xor sbb (bad) (bad) mov rcrb dec pop jnp add pusha das ror mov idivl sbb cld popf jnp sahf dec dec into mov pushf call insl (bad) jg xchg jge or jp test and loop out mov negb rclb jg insl cmpsl pop and jns and scas push icebp dec scas leave add and and popf ds call loope push pop dec jo pop xchg das dec mov outsl js popa cmp xchg push shll dec arpl sub popf mov adc dec sub cmp adc inc mov cmc adc data16 mov mov scas push mov shr lret or pushf dec mov dec pop cmp adc nop mov nop mov sub cmc (bad) scas lods add enter inc dec bound in mov lods inc ret xchg cmp fldcw xchg mov inc xor xor dec pop (bad) repz cltd pop or repnz jp scas in xchg and cmpsb ljmp (bad) lret in aas pop pushf loop cltd mov fisttp pop aaa cmpsb lock das ret lods (bad) scas (bad) xchg dec mov inc iret cltd jmp cmp lret or test popa test or fbld outsb jl (bad) lret dec sahf and movsl lret push in mov and daa (bad) and pop dec jns sti sub inc jbe sti shrb mul ja mov popa popa insb jno gs or fsts cmp fisub jecxz subl js test fild pop test imul loop sbb clc and mov push ja cmp push push int3 or add inc cmc lret loopne cwtl adc lahf mov movsl and loop lds mov out dec push (bad) xor add fcomp cltd mov mov jo xor sbb pushf mov cmp ljmp xchg xor pop dec dec push mov adc sub sbb scas scas xchg xor pop fadds loop push mov mov adc mov inc jecxz mov (bad) xor (bad) jmp inc in adc mov imul das xor negb test or ss shrb and jbe imul rorl or adc adc jmp cmc mov out lret lret idivl mov push cmc adc push ret inc cmp adc pusha cli pop lock xchg or sub imul sbb jae jge jecxz mov jne or (bad) jmp push jnp inc aas idiv pop cmc dec mov mov sbb test sub dec out out movsb jbe cltd xchg mov in lock pop lahf jecxz dec pavgw aaa adc clc mov xchg in mov sbb and cmp int3 jmp sbb dec sbb scas dec mov iret std out xchg aas xor xor ret in or dec pop mov lock jns jnp mov mov dec jno and jno cs inc sbb or and sbb in jl xlat and pop cwtl jl leave sbb xor pop mov outsb dec push pop add and popf loope dec xchg fstps dec arpl test movsl push iret dec fld1 add ja int dec movsl push mul cmpsl std pop jnp mov adc jnp les test insl xor popa xchg (bad) push pop or jmp mov sub test pop push cmp mov sub jle jl pop loope jnp fldcw dec mov aaa les in push inc rcll cmp fwait inc call ficomp mov xor mov push add cli mov imul inc mov jnp xlat rclb mov pusha ds or in or push adc hlt mov pop mov jl sub enter ljmp fdivr jg sbb addr16 adc pop les and imul xor cmpsl or dec push jg xchg fdivl test aam cmpl mov outsb mov mov pop outsl ja lret xor lret incl jmp push pop inc sub popa lret cmp aad aaa mov xchg cmp aas das rol fsubs in mov das pop xchg (bad) jne lods pop mov cwtl leave sub mov (bad) pop cmp aam into movsl cmpsb or in xor xlat test dec xchg push sbb push sarw in jge lock fwait or stos out in icebp gs mov sbb push loope movsb dec in mov mov sub xor inc mov cld xor cmp jge xor xchg jo sti orb dec mov fucomip mov mov mov mov sub imul and or add cmpsl mov das (bad) adc outsl xor leave scas sub push call std cmc sbb rol fisttpl gs outsb std fs sbb cmp (bad) shrl rcrl mov or sar inc (bad) jle xchg (bad) cmc push mov xlat imul pusha xchg leave push fcomip mov icebp into je outsl sti mov cmpsl scas push xor outsl outsb sub jb shr mov popl xchg mov (bad) mov mov (bad) int add out movl add in cld lahf mov aaa xor rcrl ret scas pop sbb lds pop roll aad cmpsb add fnstcw xchg mov mov repz mov movsb add ljmp mov imul mov dec pop mov jge popf sub mov mov cmp scas jmp std je jl add outsb pop movsl sub push or enter dec mov cmp inc push cmpsb out jecxz cwtl insb insl cmpsl pop inc enter outsl adc clc or sahf add fldt sbb aaa (bad) je mov int je mov out push aaa or dec outsl cmp int3 bound xor ds bound shrl add jnp pop cmp je das cwtl push in scas (bad) dec lret cmc xchg pop add inc or test push lods mov push test lods pop jne test (bad) ss das inc or loopne adc inc xorl cltd int iret fs idiv cmp and sub out ja inc pop cmpsl test adc inc gs iret adc rcrl test leave cmp push pusha adc into sub mov inc and mov or maskmovq divl xorb mov (bad) fcompl add push sarl dec movsl lcall sti ret inc out out mov cmp pop dec sbb stos (bad) movsl jbe mov or cmp dec cmp mov xlat aas in cld pushf out mov and das cmp test test pop add sub stos loop lock inc test push adc sbb and js leave or mov sub xchg add xchg lods mov dec xchg sti call inc inc lods jp nop scas sar inc das (bad) sub add pop push sbb into sti fsubs clc add (bad) incl mov pop push xchg ss push mov mov test out mov mov jl cmp cmp xchg (bad) sti pusha xor inc idivb jg dec in sub (bad) sbb addr16 sub jg daa cwtl insl mov mov lea test shrl cmp jge pop cld pop dec xor repz inc lret rorl fadd push incb mov mov add out test pop insb sub (bad) shlb xchg push lock jle,pn and pop add cmp mov ljmp push mov mov add in ja data16 fsub lea push add insb cmpsl sbb gs nop btrl lock fistpl dec in lods adc mov mov lahf push ds ficompl adc mov bound cmp out push push std xor rorb ss sbb jl push movsb sbb fs movsl sbb rclb fcmovbe imul push cmpsl popf add in and pop adc inc jae push adc push cli cmpsl in sti xor push push movsb dec pushf inc outsl js mov int3 scas and ja sarb and sbb sbb push pop sar incb outsb inc jae xchg loopne fwait add add repnz ljmp sbb stc clc loope sbb cmp pop jmp arpl pop add dec adc idivb jb cmp (bad) push scas test (bad) cwtl sub lods out fs clc sbb lock inc mov push mov std pop nop bound or int mov lock shr push mov xor aam jg fnstcw enter cmp xor lds stos mov rolb bound mov fwait sbb int pop dec daa mov mov push inc push imul std pop mov test mov hlt insb sub pop pop aaa push jecxz lahf add or shl mov cmp sbb mov or mov out popf das sbb fisubrl out push fsts mov scas xchg jmp cmp dec xchg cmpsl mov (bad) jmp mov jmp daa jecxz xrelease test pop je (bad) jo pop sbb mov mov daa push xor sti push push inc mov bound xor xlat ds lret (bad) addr16 adc cmpsl ja or sub push test movsl pusha xor stos ljmp pop jg out out cmp or dec cmp aas ljmp mov push popa push (bad) repz ljmp int3 lods test push sub std pop repz in add xchg sbb jns scas cmc push mov test clc insb imul inc jmp imul or in jge cmpsl addr16 es test pop in stos and cld lds sub and aam jg aad dec iret outsb jmp xchg adc test sti pop cld pop roll lahf in aad add xlat or push (bad) fcoml outsl mov dec mov repz jmp push cli cld jp add daa mov sub adc dec or out xchg cmpsl imul test pusha jmp dec xlat mov or inc dec leave inc popf push dec lods dec dec jb pop mov mov nop test aaa out (bad) mov add push pop xchg stos or inc stc xor mov movsl push adc cmp add push jl mov mov xchg pop loopne and leave outsb out lods shlb fnop sti pop mov mov cltd lds sti push jmp xchg js shl stos sub xchg std cmpsb in jge cmp mov imul pop add push jo lret xchg cmp daa rcll mov mov cmp int in jg mov xorl scas mov in inc lret ja daa sbb fsubp (bad) outsb add nop mov ja and mov ss aas jns notl scas add or fs fdivr jle jp test data16 enter test (bad) cmc and test std pop cld jb daa jne test sti mov not stos mov jnp jb lahf or mov idivl jne repnz xchg add iret imul cli outsb or push add cmc jg jle jns clc inc jmp (bad) inc pop (bad) out push jmp pop jns cmp in dec cmpl push repnz pop cmp cld outsl mov mov addr16 push sti outsl mov dec test push in pop sbb out mov push jb,pn loop cmp adc mov mov xchg cs fdivrs inc jp test popf (bad) sti dec clc scas fisttp gs dec lods daa std jge sub xlat test mov es sbb rclb mov jns insb int3 adc scas mov mov pusha xchg add sarb adc mov insb jnp (bad) enter jl dec mov stos dec xor jmp fwait mov js idivl insb aad das sbb adc xchg addr16 pop rolb mov leave xchg jle add push inc call mov icebp lds or fistp mov cltd loop mov xchg out mov dec (bad) outsb sub loopne inc cmp scas sarb daa (bad) imul xor out inc divl scas pushf cmp mov (bad) aaa into mulb mov sbb dec in mov sub mov imul jbe push dec stos int3 mov inc out and enter hlt fs cmp dec inc xor popa sub std push mov in out notb lods push (bad) out es loop movsb data16 or leave cmp int test mov cmp jge pushf xor pop lods add fldl outsb leave mov out mov or sbb mov in in dec shl scas mov mov dec in roll out sub pop mov loopne mov aad outsb push rcr cmpsb adc not mov push push ja jae out insb xor add push or dec lock adc sbb fwait mov (bad) imul call es jl sbb mov std xchg out jo insb insl or push inc jns test pop insb xchg cmp lahf jae dec jno lods jnp shl nop or jmp cwtl push inc mov xchg clc mov scas inc mov push mov push lret mov mov mov jb out aas into rorl cmp jecxz mov push pop sbbl inc pushf sbb jmp sub in sub cli push cmp jae loope adc sub popf ret (bad) loop fwait shl mov dec ljmp leave push data16 push clc enter push inc out sbb popa (bad) cmp loope jmp push xor xchg sub sbb mov stc repz lds xchg sub addl jb test mov popf dec jae adcl scas test scas movsl loop nop (bad) cltd or fist dec cmp adc dec (bad) xchg mov dec adc xchg pop popf jg sub hlt lret mov and pusha or push pop sub (bad) imul push cltd mov sbb cmp pop loope cmp hlt loop sub andb fild (bad) jge pop xor dec mov jl mov fs scas insb movl lods pop push sub mov arpl stos movsl addr16 dec jmp cmp sub cmpsb (bad) std mov flds xchg jnp mov pop rclb xchg or cli fs pop sbb xchg adc hlt push mov xor add fwait add int mov inc dec xor xor cmp xchg push dec scas mov inc and inc xor (bad) jge cwtl cmp add ss int daa pop jbe imul add xchg push sahf inc push and std inc (bad) add loope jnp scas jnp mov jp lock (bad) call sub jmp mov daa jg (bad) test mov out mov inc xor loopne aam pushf out aaa lods inc dec adc dec dec inc and push pop mov jg outsb dec imull lret or stc dec in incl or push sub jo add repz nop mov fstl add mov iret in sub dec nopl insl test pop insb add (bad) mov movsl add out sub lahf xchg ds pushf aad dec int3 push lods mov or imul jae stos repnz outsb loope and int3 or ss ja jmp mov jp cltd loop sbb push sub sti shl test mov pop mov enter mov sbb jecxz xchg aas outsl popf xchg add mov inc jg push insl adc and cmp into sbb (bad) mov add cwtl add movsb std out lret xchg mov pushf sub bound dec cli lods or mov aas sub movb fimul cmc or pop add arpl dec lods or dec pop jmp jle jg andl je jmp xchg into jl loop je mov rolb fwait add jne or push cmp add cmp test push (bad) cltd jp and rcrb das scas outsb push into enter cmp lods mov sbb sub es jae mov aas sbb clc sbb enter roll jl leave icebp push pop int3 imul sbb decb inc xchg xchg push jns in sbb sahf (bad) test dec incb addr16 inc inc sub scas sbb mov std shlb cmp pop test loopne mov stc call outsb add rcrl add lds dec mov int3 ljmp pop pop and pop and lcall pop adc or sub (bad) pusha pop call xor fnop adc loop fbstp pop in int3 dec jo dec xchg arpl add push loop frstor pop lods mov in lods add cmp cltd add dec mov push pop movd inc mov push sbb add mov rorb push push lahf subl aad mov hlt pop mov add sbb add jecxz jp add add into adc loop sub jno arpl aam (bad) jg (bad) mov add push orb (bad) loope inc jge mov mov dec out push popa dec add or lahf cwtl or popf pop faddp cmp call adc stc lcall out xchg mov rcrb addr16 pop dec pop lods mov js push mov pop and sub into xchg xor shl mov aas add xor sbb fdivrl ja jnp je lock aaa fwait xchg test (bad) lcall push dec xor shll sti cmp sti test or ljmp push cld fimull sbb test scas (bad) sbb cmp bound pop imul adc add in data16 add push ss fisttpl repnz dec enter pushf adc cmpsb pusha pop mov outsl stos mov sti outsb mov push xchg fwait movsl adc outsl pusha (bad) and adc pop iret pop adc clc int3 cmp pop xchg cmp cmp test das int and xchg int add xchg (bad) push (bad) xor sub inc lar sub pop sbb xchg fsqrt addl pusha jmp add popa cs mov cmp outsb xchg pop jnp inc into popa and and pop push push push lcall imul jecxz or jmp xchg jne jl cmp ret inc push jb xor (bad) xor inc repnz mov out xor loop movl mov jle sbb mov pushf or jns pushf stos aad cmp lods iret push inc repnz cmp jmp popf jbe ja test xor scas pushl mov movsb push lretw xchg pop adc add jl mov cmpsl out ja jmp add je push mov das inc cmpsl bound stos (bad) jo subl and and fisttp lods adc in mov negb fs push add mov sbb popa sub movsl in sub pop push and test imul aaa stos ret push cli sbb xchg dec mov jecxz bound fs std cmpsl movsl mov popf pusha sahf bnd inc mov add lret aad (bad) das icebp mov dec xchg scas cmp ret incl fs inc mov std adc xchg jae sbb and push pop add in jp loopne jnp and outsl push negb ret rorl sub mov jnp (bad) dec (bad) jmp xchg aam lock pop das inc scas gs dec int decl xor ss in sub add xchg scas sbb pushf dec push mov aad adc (bad) in daa loop repz push out in outsb mov add and pop js ficoml or int3 push or xorl push add sbb aam and xchg and ret out cmpsl lods lret push xor mov mov add sub mov push dec push xor sbb sbb gs fstps mov es idivb cli mov mov popf mov mov scas pop jnp jecxz inc (bad) pop call sub mul cmpsl sahf adc sbb je or pop rcl sub movsb ja into cwtl cmpsb cmp mov dec mov jne add icebp xor aam enter jo fcoms insl adc jns push dec mov push cmp mov jbe movsb sub stos xor xchg ds cmp mov inc or cmp and dec stos jecxz mov push dec pop mov inc das add sbb movsb lahf jnp pmaxsw gs lods xor dec lds cmc fwait aaa stos ret notb fildl xchg push pusha cmp or (bad) dec adc xchg (bad) push mov dec mov mov es and mov cmp mov fcmove call cmc and das mov dec mov out (bad) jmp test sub pop insb sbb clc div stos cltd testl push out jmp jg clc mov stc into icebp dec addr16 popf je jg jl push (bad) std mov sahf mov rep stos clc andb sbb and xchg mov mov decb push (bad) call mov dec popa aaa dec (bad) adc adc or call pop repnz lods mov cld xlat inc iret mov jmp or inc push imul shrl dec ss jbe lcallw dec aad call incl rclb push mov test das std xchg mov xor aam cmp out (bad) adc ljmp jbe aaa cmp push addr16 push sbb fidiv sbb mov jbe xchg mov test popf jbe test dec fcomi or push cs in aas xchg les jae sub dec shl stos xchg cld andb out push adc sub or dec jne js std xchg lods test fildl xchg jo xor dec call lcall xchg pop sbb and cmp dec (bad) dec jo xchg mov inc dec push leave push adc test lahf inc (bad) lock test sahf add gs aad call mov ss and data16 insb sbb mov xor lods int3 cs mov xor stos mov pop out out repnz test mov push test rcll cmc jbe and dec int repnz jns mov divb lock dec inc fucom popa sahf dec jmp cltd pop int xchg das outsb inc pushf pushf int3 xchg sub and arpl test pop xor pop int mov jb or cs daa cwtl xchg dec mov (bad) addr16 adc bnd jl in xchg sub stos xor fcomps lret dec or frstor repnz packuswb mov jns cmc (bad) cmpsl push push ss int inc or scas pop or arpl jne sbb sets mov add mov in insl arpl cltd imul test xor jmp test adc imul movsl cmp (bad) xlat or loopne jae jp mov test iret cmpsl scas pop pop cwtl fs add scas (bad) mov jge imul jae jle mov mov jmp mov or xlat sbb or cmp pop fdivrp rol rolb daa test inc mov jmp push push jmp aam and ror jp or or shll push pushf xor pop mov out jb incl dec xchg cmpsl push dec or stos sbb popl cli in mov aas out out dec call xlat cmp (bad) dec jg xchg (bad) adc dec sub cwtl ficompl mov pop mov mov mov in (bad) inc dec (bad) pop push push insb jo adc mov addr16 or inc cld pop or xchg mov lods dec iret (bad) mov push in insb pop jp,pn (bad) adc adc (bad) fwait xchg cld pop loop mov and cmp test lds int3 mov mov push fstps ret test dec inc ret cmpsl or push jmp adc out js mov jmp push scas pop daa (bad) cltd es push stos gs push or dec xchg divb fidivl cmpsl (bad) inc xor int mov inc cmp xchg in jl cwtl lods jo cmc xor (bad) leave xor and gs pop mov lods les adc out jp mov mov inc push xchg pop push xor fadds outsl mov pop add out pusha jge sub cmc stos jo mov dec hlt mov repnz xchg imul inc int pop aam or gs and ss and cmpsl ds or cmpb js pusha cmp sub and testl sub inc sub sarb icebp cltd out mov jp cs adc stc dec js xchg in cltd in cmp ds jge sbb out push xchg loopne aaa lret mov mov enter stc jbe adcl es mov insb frstor mov cmp outsb xchg ds cmp dec sub push xchg sti push sbb dec or and aam insl and aas cmp jbe scas in xchg adc imul popa or dec push enter test mov lods push out push not loop (bad) jb (bad) mov out and (bad) in xor and add (bad) test push nop inc in lea cmp (bad) cmpsb or sbb xchg leave jnp add leave imul pop scas mov or xchg cmp div push outsb xchg mov pop insb enter sbb xchg jge in inc cmpsb (bad) negl ret addr16 push sub mov xlat shr sub loope test mov push fs rcr ljmp xor pop push dec ljmp dec cmpsl jl cmp inc inc add adc shr or leave addr16 in xchg hlt lds ljmp sub sub jbe mov sub lds add data16 jecxz out xchg fmuls mov test arpl jle ret or mov lea and (bad) jg imul or mov sub or lret lret adc sub inc inc cmp mov in ss fdivrp jecxz outsb call adc outsb ret stos xchg stos (bad) cmpsb fstps pop mov out je popa cmc loope movsl in pop sub test mov scas jo aaa out das push test dec call hlt out sub mov nop xor mov cwtl push les pushf gs sbb ja push lea jp sub repz das stc daa aas gs push sahf cmp sti sbb lcall ss (bad) outsb fwait jecxz mov xor add jmp dec mulb stos in jmp fs sbb test or and pop andl mov xchg repz sbb xor inc (bad) pop loopne pop add data16 sbb sahf hlt jp mov and sarl lret cmc pusha cmp aas imul out sub dec jae mov rcrb pop mov mov mov stos fwait gs sub ljmp xchg jns push mov dec in das adc stc and push insl icebp bound xchg jns cmp push iret dec mov in into call outsl dec lcall sbbl and sbb jge inc xchg sbb sbb fisttp stos jae das mov daa xlat out outsb jp xchg inc test stos sbb in leave push icebp (bad) repz xchg int in ja push push aaa into push push push fucomp ja (bad) mulb lahf (bad) cmp jnp adc jnp dec loopne daa pushf (bad) jg and lahf pop pop jns jle adc and pushf mov mov daa (bad) repz cmpsl or inc jecxz dec scas lods jno leave lods dec enter xor and std mov cmpsb movd test movsb mov int je dec pop ds (bad) cmpsb xlat lcall in clc push rolb movsb cmpsl add and lods out adc movhps mov sub or arpl or fwait scas mov pop lods pop movsb imul xchg adc sub dec aas imul fldenv cld add arpl lret jne loope (bad) outsl sbb push das jbe sub inc mov fnsave fdivr addr16 scas sub int gs pop daa fsubp add out sti subl sti mov mov pop push dec cmp dec mov pop and cmpsb out or data16 adc sti mov scas pop cli data16 imul mov lea loope jg outsb pop add push adc rcll push lods pop xor mov cld pop cs fistl push int3 push je call popf push mov (bad) push ljmp push mov rcl cmp (bad) pop cmp push dec add and xchg fs lock and or adc cmpsl inc pop sbb pop add add andb add mov sahf pushf or sbb or mov inc adc sti xchg mov cltd es test push adc jle jne mov mov xchg jno cmc loop mov pop cmpsb xor repnz push inc popf add mov cmp loope xchg mov cmpsl sbb insb cwtl lahf push lret flds cwtl fistpll mov and and (bad) or (bad) nop aam and fildll daa pop mov ljmp and scas pop xchg cmc push popw cwtl fwait sbb push dec push clc jno cmp dec incb ja ds sub pop sub fsubrs add stos pop cwtl pop sbb dec xor dec lahf into pop jb jp push mov addr16 enter leave cmp push imul (bad) jbe rcrl std (bad) orl inc es dec les int sub inc jne hlt dec sbb xor jne int jge adc dec popa in scas inc jmp out outsl jb lods dec mov mov in pop pop test xchg lea sbb sbb std outsb popf sub insl popf adc imul out cmc rcrl jo test pusha pop mov movsl mov push sti dec ds test imul loopne cmpsb out popf (bad) scas dec out leave or fistp mov xor icebp popf stos or sub inc jg push push stos not stc in xchg mov mov jo roll (bad) cmpsl or int3 pop faddl sti inc xchg dec mov mov add imul popf (bad) pop or ljmp mov hlt adc out lret pushf push test pop pop je jg aaa mov cwtl test cmp xor das cmc dec fstl mov fsubrl (bad) bound cltd xchg daa jns or or jp pop es cmp adc pusha sub out and stc jbe push and pop sub lret sbbl xor in arpl cmc cmc lock dec cli lods mov sti sarb cwtl cli cmp (bad) cli in (bad) clc xor idivb cli add cmp jnp and mov add divl insl and out in jmp push xor daa shlb int pop push inc aas fildl xchg jno divl ljmp in popa xchg sbb lods adc sbb mov in xor adc xchg sbbl out js adc mov ss fucomp jmp jnp sub pop xchg (bad) sti sbb sub add (bad) popa mov mov daa push cmp mov stos ret or loop xor inc (bad) jno loope or sbb scas (bad) test jp xor notl mov xor outsb dec mov ja cld push jne cmp stos jecxz dec or push cld cmp or fldenv lds inc lahf iret stc cmp adc adc adc lahf into mov (bad) loope imul pop add outsl loope sbb mov cwtl or das inc into mov je add lahf scas inc or and jb lock xchg xor push or dec mov xchg add std jbe sbb mov (bad) sub mov mov xor pop mov xor dec cwtl dec scas out xor push dec gs out (bad) cmpsl popa cmp mov icebp sbbb adc sbb lock addr16 arpl push insl mov or nop test add (bad) and xor mov sub insb dec leave add cmp xchg adc test and push xor ret or sti stos es data16 loope push insl ret lock adc in and outsl xor mov insb inc dec mov inc loop test lahf dec add jle xchg xchg inc xor lret sarb jne adc cmc (bad) popl shl loop lods add mov push push mov jnp out stos or pop sub add xchg dec into in jb arpl sub addr16 insl cld cltd div mov push movsl push aam nop sbb mov adc mov out imul mov (bad) mov jl clc sbb jg mov gs out es stc bound std addr16 daa lds sub dec or push fcos fbstp (bad) repnz lret push popa ret jno and loope ret mov test sbb xchg xchg das pop adcl push lret test adc clc scas and pusha daa add and xorl jecxz lret and (bad) rcrb scas mov xchg arpl (bad) xchg rdtsc in dec add cmpl and mov xor insl jmp lret call push mov imul imul xor sbb mov push je shrl pop push iret fstps cmc cli cmp ljmp rclb adc mov cs insl lea mov int xchg dec test pop fadds cmpsl xor add or in pop lea in daa xchg andl mov and jmp (bad) jbe mov mov stos je in cmp imul insb out pop pop out scas repz xchg in pusha and inc jne pop stc or data16 mov mov xchg stos push js pop (bad) sub and push dec push jecxz dec es loopne imul inc sahf loope xchg rolb dec and and imul outsl adc pop add rclb xor sti inc sti fidiv clc test push add mov test test mov (bad) add fimul adc (bad) cmpsb lods subl in mov pop in arpl imul into movl cmp push adc aas or push xor fwait inc incb out cmpb dec lea popf mov jnp pop repz stos sub sub sub xor (bad) add mov cli pop jb mov clc cmpsl movsb test cmpsb nop jecxz push mov inc fs aam sti in addb shrl stos imul jmp dec pop stos cmpl pushf push fsubs xor mov call mov mov outsb push in sti fbstp not jge clc jl pop (bad) mov jmp in lcall cld (bad) jnp sbb dec add jecxz popf xchg mov fstp repnz lcall (bad) sub dec mov dec cltd (bad) dec cmp sbb stos fmuls sub mov jecxz in movl and jp movsl adc pop push jnp add jp out decl jle sbb mov jns test out jnp out jmp sub mov xchg xor cmp out mov inc enter orl push dec jmp fcmovnu aaa mov push lods cmp fwait or fs cmp and push outsb jle adc insl xchg fwait data16 cwtl fwait add sub jmp xchg int fs fbld mov xor mov pushf sbb xchg mov jp xor dec cli out adc mov out dec ret or sbb sbb call mov jnp mov adc ss pop adc fbstp xor jle,pn out icebp cmc in lret mov andl and jnp and pushl mov xchg call jnp data16 andl fistl jg mov cmp int3 jnp sub lea insb bound mov push xor outsb insl xchg pop inc mov mov jge and dec mov dec out xchg movsl mov xor das mov push mov mov xor std sbb bound pusha aas scas insl mov mov (bad) loope mov jns push jmp or adc push int mov fcomip je imul or push repz test scas shl (bad) outsl pusha inc inc mov test fisttpl repnz add cwtl lcall inc ss rorl mov gs inc scas adc test cmp (bad) sub test div mov mov (bad) sbb stc jmp or cmp mov (bad) dec fild (bad) in and xor sbb pop cmp outsb call sbb xor mov mov mov pop push out pop mulb (bad) (bad) dec outsb in out jno aaa jl in jmp add popa jge das or cmp adc loopne clc in jns pop loop bt (bad) sti ljmp ret jno jmp sti dec pop ret and loopne add or or scas into cld sbb push (bad) or and das int sbb enter in or dec fnstenv inc sti pop xchg in lret cmp (bad) ja jae sbb out test iret in mov cltd xchg inc cmp fist push (bad) push xchg push xchg jae nop ret dec stos popa pop mov dec stos lock loopne jns loopne (bad) leave add imul and inc push (bad) lcall out jns push cltd jge loope popa adc enter or imul xor pop sub fwait xchg fs mov popf pushf divb push pop fs mov or ffree out inc xchg xor outsb pop mov bswap insb sub sub or cmpsl in je mov hlt xchg cmp lahf adc movsl cmpsb insb fldt repz (bad) test push add cmp ljmp lods mov out adc in fwait push lds nop rcll popa mov pop sub imul inc shr inc stos ret add pop out idiv incb cltd std mov (bad) std inc (bad) enter mov push cwtl mov js call daa jnp add jo cwtl mov pop mov nop scas xchg jl test cltd and daa mov cmp addr16 mov or cs or movsl ficomp cmp cli or test xchg cmc unpcklps imul leave (bad) or push iret ja,pt std stc cmp push xor mov fist sub popf adc pushf dec xor test mov aas or pop bound sbb addr16 or push jp popf int test aaa (bad) out outsl js cmp sahf fs aaa adc mov scas adc push out mov sub lcall and rcll adc sahf dec (bad) into inc int jb pop jmp popa int3 jo push jp cs pop ret dec xchg shrl pop xchg (bad) xor cmc ds test add test scas or dec cmp js in inc (bad) cmpsb ja std pop push aas lods inc cmp xor icebp pop stc std adc or nop jns iret std dec mov lret lcall dec push out cmp mov mov sti xchg and xchg or push xor push lcall jl cmp lret ret push dec inc cpuid jns sbb rolb add in pop outsb std mov std push inc es repz inc shrl push add mov add test out in icebp push inc jl cltd popa (bad) and repnz dec (bad) aaa inc adc xchg and ret aas dec fnstenv push push jne xchg inc int xchg gs shrl pushf negb push int repnz pop imul jp jne nop cmp repz ljmp pop adc call movsl jle dec movsb xor pop arpl cwtl jle fadd dec xor xor (bad) in fs xchg imul jge push mov lea lret and jbe push dec inc (bad) xor jle sti arpl decl dec shl jno adc pop push jle inc jb xchg adc mov mov lret movsb and jecxz je lds add lahf jle fldl xchg fisttpl pushf lret and mov xchg les mov xlat xor ja jmp push mov xchg std push lock aaa pop dec sbb inc aaa dec sbb jo aas or out pop sarb or inc inc adc mov add mov mov ss scas push out pop scas push xchg xlat lcall xor mov outsl lock or jmp jmp or lods ficomp mov arpl mov in movsb or sub std pop and inc ret mov xchg ja cvttps2pi inc push pop test imul mov icebp dec lods push divb adc dec in in (bad) pop lret and insb dec jge jmp aad (bad) jo das stc fcmove xchg enter lret aad scas in xchg enter sti enter xchg jne iret push inc xor into pop sbb mov lret xor push mov (bad) lock leave jmp mov outsb mov fwait jno movsb out out mov loop adc push rol (bad) cltd xchg mov add out push movsl jle dec mov pop repnz mov iret pop push push sub aas inc or dec js fs sarl into mov xor (bad) daa adc fsub fiaddl or aaa orl mov loope sbb xor push dec loop cmp push add aam or mov cmp add sub fs scas or addr16 mov test xor mov outsb pop sti pop lock push loope jbe cs and std int3 and push cltd xchg lcall lret mov mov scas shrl insl ss and pusha jmp push lods movsb mov mov data16 add in repnz push call jmp sub or push dec pop jb out or push jg mov cmp mov out inc data16 jo int3 (bad) mov bound add cli pop jo sbb jmp jg jecxz aas inc dec movsl adc stos into jecxz fmul bound stos sti test adc fwait jp icebp std jnp or inc stos scas mov mov and test or cld mov xor or xor dec add pop xchg push or xor loopne mov dec call (bad) stos lea sbb xor inc dec cmp push jnp cmpl shrl (bad) pushaw push jmp movsb lods pop inc sbb xchg adcl test dec in push imul in daa sub inc mov xor (bad) pop mov xchg jp popa aam repz jno push jno jmp aam mov (bad) mov leave sbb adc dec lods and cmp push sti dec sarb pop mov sub xchg adc push add ficom mov out mov adc push out shrl xchg dec mov and movsl xor sti iret scas and cmp xor loopne mov cmpl sti or xor sub lret movsb aaa push jmp pop fucomp mov or mov mov das in sbb mov xchg mov dec sbb dec pop mov xor push adc push rclb mov scas scas pop ljmp mov and xchg mov out push test scas mov cmp adc mov mov es test and (bad) lock fs push xchg inc into movsl inc repz push inc lods lahf out push scas cmp arpl mov imul xchg adc sub push in jno push arpl scas out and fnstsw mov out xor stc xchg cmp xchg lret or mov (bad) sbb sub mov out jo pop adc dec sbb out push cmp xchg sbb vpmaxsw mov inc or jl xchg and cmpsl stos popf scas insl loop sub xchg in hlt add xchg icebp sarb sub nop hlt imul movsl adc movsl jp dec jle sub aas in es sti mov icebp addr16 cli out inc mov in insl jb adc pusha xor das sbb mov aas cmc mov in mov push jmp inc inc fwait mov xor jo aas jne xchg test popf pop rcll sbb or mov lea gs stos in mov add jp imul push and cmp xor das sbb int3 dec sub or jo movsl into xor mov lea sahf lret mov icebp dec (bad) (bad) cmp (bad) dec push data16 adc outsb adc out push gs outsl pop sahf ret ja aad (bad) push test inc out cmpsb push cs pop mov dec mov mov push in or sbb out cwtl or jno imul stos fisub mov dec enter out jl cmp mov ljmp (bad) dec mov fildl pop xchg push (bad) outsb or enter lea dec sbb out in int ljmp dec pop jbe aas stos out decl push mov or pusha and dec and jmp xchg lcall mov cwtl aam push inc xchg adc add sub push test pop jmp daa mov and mov cld pop (bad) jne adc mov outsl out leave icebp push pushf mov ja cli cmp popf jns jae jle sub outsl mov dec mov pop or xor mov add lcall adc popf push xchg jb mov ljmp jb lea mov xchg es xor jecxz mov lods xchg or cwtl mov in faddp cld shufps mov (bad) out push pushf fbstp and insb jne mov xchg (bad) enter in or xchg push xor fstps arpl cld push pop inc ja dec push mov add mov bound aaa mov mov test pop push jbe mov mov rcll int3 cltd xchg dec inc xor dec repnz mov sub sbb loopne loope cmp in jecxz push cld testb in xlat or jle subb push mov pop jmp rcll push mov (bad) xchg addb inc aaa imull sbb sub mov push test enter xor repz (bad) and push xchg ret inc mov dec xor jp stc pop add hlt mov imul int3 push add pop mov pop cld lret movsl roll or test cmp push (bad) inc jb in jnp sbb lods ljmp stos xchg xchg add xor xchg (bad) xlat outsb jg addr16 lret and dec jne nop cwtl insb addr16 add test ja std xlat icebp push pop add cld inc add xor cmp dec mov outsb mov mov in add out mov ds insl mov mov push gs addr16 adc daa xor jnp sbb mov shrb cmp inc sub iret fistpl nop in xchg jne xor sbb dec (bad) xor pop in cmpl lods push add mov xchg adc xlat leave arpl test js cltd imul push jg ret jge pushf jle ljmp lea stos pop push stos push push xor dec dec inc aad mov push jmp pop lods dec or ret outsb cmc fdiv sbb mov mov inc movsl insb inc inc pop inc push xor scas or mov dec mov lret mov mov push popf sbb dec mov mov in hlt sbb or push pop jg jg push in xor jg mov addr16 int xor mov test jnp xor push pop jg mov add adc fbld push dec dec adc pop incb pop pop pop pop leave pop push add jg or leave cltd mov dec lods mov mov out addl inc pop daa adc scas in cli sub or cmp leave inc addr16 inc lahf hlt push lret neg out inc sbb int3 dec inc dec std mov xchg dec (bad) jge lea dec and sub cmp mov add das push xlat rol push lods sub xor sbb push dec cmp aaa leave sub inc push orl cmp pop jbe fs or or inc std fs pop int loop ficom mov dec mov test push out in push fwait shld pop (bad) lcall movb leave lods jno cmpsl inc or pop mov fisubrl (bad) jbe cmp bndstx lock stos xchg and or div jp bnd out sbb push xlat jmp dec push bound mov and in outsl jns sbb scas push test push or cltd xchg mov cs cltd out fcmove jbe or in outsl ja ss sbb mov and loop inc dec out movsl xchg xchg gs push dec lds sbb ficompl cmpsl loopne,pn inc jge jbe js nop hlt out enter jge aam jbe jbe popf stos std mov jnp sub mov jg sbb out dec sub incl insb arpl test mov mov pusha inc sub inc cmp pop mov xchg push std daa sti dec (bad) das loope (bad) rorl mov lods sbb scas out jecxz xchg sub pop cs stos sbb mov sahf jnp cmp cmp cli enter cmc orl adc out daa cmpsl sbb arpl mov subb jmp or in dec cmp sub pushf jp ret in jecxz inc pop mov mov xchg fildl cli pop pushl pop push push in insl jg xchg sub test cwtl mov pop lcall mov int3 xchg lcall es fldcw insb push fistpll and push pushf xchg das and in push lods cmc les pusha lret sarl lcall sub cmpb scas addr16 jp (bad) gs dec cli and negl iret mov pop push sbb push out mov pop dec mov jmp imul sbb cmp hlt out xor iret stos addr16 sbb inc mov leave cmpsb test sbb stos jle test pop mov sbb pop xor add xor sbb add adc in lods mov jmp and std ss xchg inc cld inc adc sub mov mov push cmp std imul cmpsb aas lret sbb push lock xchg out or cld icebp cmp push aas lods das push (bad) sbb pusha pop and into pusha or sub xor sbb pop pusha sti mov int pushf pop add pop sub bswap fldenv out xlat ret inc sbb pop fiaddl faddl or cmp out lcall cmp xchg xchg insl cltd aaa hlt dec sahf aaa stc jecxz push jecxz lock popa push pop push jle stos jge mov int das xchg popf clc roll jecxz (bad) cmc pop stos icebp jo or and loope aaa lcall mov cmp jnp js mov sub push bound and dec pop jo test mov in mov mov xor xchg out dec insb cmp xchg and dec mov int3 jg dec ret arpl sbb stos cmp out mov push in imul cli or push mov mov cmpsb pop fwait mov add sub clc dec mov insl xor and add orl cmp push sbb pop dec dec out adc into cltd adc adc push add push dec inc adc ds pop push sub rcl cli lahf cwtl jge in mov repz mov stos adc sbb movsl roll xchg inc test inc sub pop cli cmp xchg cmp add xor pop lods push mov lock (bad) das jnp mov (bad) pop idivb lahf fs sar and or sbb arpl sub das fildll cmp je out or sbb in lods sti loop adc movsb hlt push mov jp pushf je lock mov fs cmp push xchg dec mov push test stc jne and mov fstl test decb pop fisttp mov int and inc (bad) jo or enter out addr16 mov (bad) addr16 xor loope push stos lea xchg push mov jns idivl insb mov test out icebp dec shl scas cmp in pop jno pop jae xchg inc (bad) add dec cmpsl lcall jne (bad) mov decb add pop mov sub lahf sbb fwait cltd jecxz xchg nop jl push jno icebp into mov adc sub cld fcomp mov pop lods iret mov int3 adc in push mov mov call push scas adc pop cmp gs rol jbe cmpsb mov shrl adc cwtl dec cmp jp jbe or mull dec dec add push dec push cmc mov inc mov xchg mov out push lcall sub cmp sti pop xchg or xor (bad) jp mov push sub and add jle fs outsb xchg cs sti insb fcomps sub imul push push jnp lahf xchg in dec cmpsb (bad) ja dec add pushf out adc pop jg int jbe out pop jge push int aas imul adc pop test out mov dec gs dec push xchg jb in inc cmc jae mov add (bad) push pop inc movsb insl mov jns lock jl shrl cs jnp sbb sub cmpsl loope jg enter insb xchg sbb std cmp xor fildl jmp data16 sarb imul pop push pop dec ss mov push xlat mov movsl std xor mov insb in dec loopne mov icebp popf int3 pusha xor pop pop mov sub adc or or cmp adc in (bad) repz popa jg int3 or in push and inc hlt push push cs outsb inc daa dec xchg dec ret adcl rcll cmp pop loope lcall addr16 or xor adc stos sub mov xchg mov imul (bad) xchg pop mov cmpsb mov mov stos ss lret jnp lcall mov jnp lret dec jbe jecxz stos push mov fistpl dec xchg adc div fwait in pop arpl fldt pop mov dec xor ss push fldl mov popf pop (bad) xor mov inc cmpsl (bad) jnp or int pop outsb test pop push xor cltd call out enter bound cmpl mov or cmpsl add shll sahf call lcall test (bad) and in xchg insb or or icebp jmp adc xchg jb imul loope ds popf adc adc dec lds gs push inc lret cltd (bad) add jno push sbb cltd inc (bad) stc push in xlat scas leave loop scas mov je mov leave rcl in fcomi cwtl cmp fadds cmp add cmp mov in mov (bad) lea ss (bad) mov xchg push xchg popa inc mov cs out inc inc push cwtl out outsb enter aaa popa dec aas imul jns leave imul push sti sub addr16 stc clc pushf test ss sbb aam dec (bad) cmpsb fisttpll xchg dec cli arpl sbb imul ret jp cmp xor xor es int3 cli mov jge pop sub xchg and insb push insb sub dec bnd call pop xor sar into inc cmc (bad) mov adc rorb imul fidivr gs xor ret jnp xchg sbb js and popf in jnp sbb inc leave cmp loopne inc mov jle mov or cld subl xor sub fstl dec sbb aad sbbb inc sarb mov cli nop push dec insb out ror clc adc sbb push adc fmull pop jle xor rol stc out and insl cwtl in dec pop cmpsl mov mov mov imul xor enter cmp jbe and mov or inc or scas (bad) mov xchg xor jnp enter mov mov hlt addr16 cwtl dec xchg push add xor mov jle test push mov int3 scas in add mov cmpsb sti shl lret add adc inc sub lods pop sbb sbb bound push les ror dec ja jp or push cmp out into adcb out test stos (bad) jle push (bad) clc push xchg jmp or je loope jno dec leave jb push cld jb imul xchg insb data16 cmpl in repnz and mov and ljmp scas je mov mov test push mov sub mov inc dec adc in and or fcomps xchg sub jge out mov loop jmp (bad) jbe mov xor pop (bad) popf cmc pop adc xor pusha pop clc pop adc mov jo,pn mov cmp or lcall popf xchg and lret inc (bad) xor bound ljmp mov movsl sbb jnp cmpsb shlb test jg sarl int jg cmp addl mov out fnsave xchg pop sahf sub jg mov xor test xchg jle pop lahf push mov pushf movsl sub stos inc inc add stos in fsubs mov dec pop mov in dec in mov nop xchg fisubr xor mov mov jge loop outsb add js push add aaa mov or data16 mov ja sub movsb mov dec push inc popf sub push int3 add gs bound dec add outsl aas adc push jnp dec adc dec movsl (bad) mov push xor push jnp mov inc pop xchg pop push pop mov jg mov sub outsb sbb ret mov lods cmp adc pop push xor jp imul and iret xchg xchg test xor inc jnp jb ret xchg add jae xchg adc mov xchg sub test outsb hlt mov nop jns sub lret cli fdivr cmp dec xchg outsl jl loop sub cs repnz mov insl xor (bad) lcall mov or pop cld dec subb fbld movb jge cmp repz pop sub jmp (bad) jmp and enter scas mov fwait mov les adc push ljmp aaa test mov jb scas mov ja roll cmp dec rcr dec jl sbb xchg mov or jns mov test dec (bad) (bad) mov into jl sbb mov sub adc sbb mov and jge mov out aas popf das lods mov push (bad) popa ret out ror or divl xor aam jb int3 mov sbb mov sub sub fiadd push push add push inc movsb out dec xchg inc xor lret or pop push push cli lds clc lea and push fldcw js adc fcmovne mov mov xor mov rcrb (bad) gs mov in (bad) push popa dec xchg mov cld jmp mov xchg xlat lahf imul and sbb cli adc pop les nop lock lea outsb push int3 pushf clc mov adc push mov lahf mov cltd push insb mov aas mov sbb cwtl lret xchg xor sbb cmpsb lret ss sahf push sub inc aam pop popf lods sub lea jecxz lret fs adc insl in dec mov or nop adc mov decb in insl add push cmp lcall sub data16 jmp fcompl in push add dec cmp xorb test push shrl test xor cmp pop add call mov pop jge (bad) fstps jne or xchg dec pop ja fstl lret (bad) mov push mov in lock fs fcmovnu sbb je mov hlt pop jecxz cmp sub test and sbb loopne movsl test cmp outsl mov jle xor loope test sbb adc insl fcomps pop push xchg inc pop push enter push fistl pop jmp push adc imul fnsave cltd shl shll pop push out jb dec sar or xchg xlat insl push out sub imul cmp or or enter (bad) dec lret orb cmp loopne mov movsb add sti jle adc mov fdivs mov imul pop or sbb in in out mov negl gs cmp jg and mov in pop sbb xchg ja stos arpl scas gs aas and (bad) out add popl out lock scas stc aas cmc adc xlat scas je sub push adc jge sbb dec pop das cmc and xchg fistl adc iret pop mov xchg mov insl xchg sub mov aam mov outsb xchg stos jge dec out add stos fsubrs rol or sub cmp (bad) mov add mov rcrb dec jne mov lods shrb add (bad) addr16 imul inc xchg mull push push jb jmp or bound xor aas push sbb scas lods xchg add inc or sub in cltd xchg pop fcomip xor mov sbb pop jmp in and das pop ficom shrl or lea sbb pop loopne push std sub xor jbe xor stos les sub (bad) (bad) aam add roll xchg push push push mov mov inc sbb push pusha sub or adc mov pop je pcmpeqb fist and add (bad) mov popa mov xor shll lret dec jle pop mov movsw fildl adc sbb aam lock lret shll cltd (bad) inc adc addr16 mov iret mov stos repnz lea out enter push jo or cmp int mov lods addr16 mov out arpl daa leave fildll lret jmp adc fwait push scas lods mov bound int jge pop insl push aas fs or insb outsl or std push scas xchg out insb sbb push mov (bad) mov pop push rcr icebp outsb std dec cmpsl scas in in sbbl in idiv sub fs jno adc push out dec (bad) sbb dec nop cs ds imul enter leave mov push jecxz insb mov cwtl fwait dec cld mov icebp sbb jmp in xor ss inc jo (bad) dec test es test aad mov pushf out jbe pusha aas gs outsl xorl pop jg fcomp ljmp aaa sub and daa pusha pop push or mov outsb loope mov jo clc clc nop out (bad) pop mov adc std clc jl add enter fs and insl push mov cmpsb sub call addb push push pusha jno pop enter push out xor nop or and jnp imul shrl mov dec lret add xchg (bad) frstor xchg subb xchg in mov push loop nop bnd push cmp addr16 pop mov iret and pusha and in loope lahf inc leave or dec inc jns inc or arpl sub inc add insl adc cmpsl dec lods and outsl lcall std mov cli or pop stos mov (bad) pop push aas push popa xor sub test stos xchg and inc out iret inc test nop jbe jnp pop inc adc adc push adc or aam sbb xor imul stc sbb pusha es xor js hlt lret les inc pop pop inc xor mov dec insl mov call pop xor cld lds or sbb out rcl sbb daa ds mov js push jne add jne jno negb jmp out inc mov pop dec sbb cmc subl gs cmpsb stos cltd lret aam mov cmp sub outsb push xchg out jno in dec test shlb mov lret and imul adc xchg dec sub decl icebp loopne adc sbb jns ss cwtl cmp sub sarb es or mov data16 into inc loope push sbb sbb test pop leave sbb cmp jecxz pop lret or xor inc inc fsubrp xor int inc mov inc inc out adc incl (bad) imulb xchg or jl scas int mov sub mov xor orl bound lcall adc jle push rcll push mov iret lods lock data16 out lahf sub add sti es mov cs xchg push stc mov push scas push mov pop popf mov outsb adc call pop movsb push or icebp les cmpsb push xor mov aas scas out xchg pop push notl mov xchg ret jmp xor inc es pusha scas jl jns fcoml js popa in push inc lock repnz mov push loopne inc or dec nop pop in imul into cmp lret lds xchg sahf pop movsl dec cli int3 xchg in outsl inc mov push dec cltd lea xchg sbb add jle in (bad) stos adc cltd sbb pop push cmp mov out add les mov inc test or xor ja arpl push cwtl bound (bad) mov lock ja mov cmp scas mov fcomip inc inc inc push fistpll adc dec loope cmp mov push add xchg xchg cli sbb mov or mov push or xchg jmp aaa jecxz jnp (bad) ss sbb repnz mov xor lcall pop xchg lret push add repz sbb sbb xchg rcll cmp sbb movsl popa cld test mov jecxz outsb fucomp sub sub and lcall cmp mov jmp in ret int int fs jb push sub xor (bad) adc andl adc fild xchg xchg xchg stc sti mov pop mov data16 inc mov dec and fdivl cmpsl mov in mov mov sub cs or insb in jbe das lods xchg stc push and sbb jp stos adc sbb mov movsl add sti out jle aas in add (bad) push out cmp jmp popf (bad) or xor mov jnp mov lock loop fstl cltd fsub jno mov cmp mov mov jle in jo or mov das (bad) lods mov test sti xor xchg movsb mov iret jne mov sti pop hlt push in adc mov and cltd and cmp jno push test mov in add out mov inc add addr16 cld sbb sub cmpsl inc test jo dec scas fist cmp clc into cli movsl out dec aaa inc inc add iret out test daa data16 xchg and dec xor or out pop mov sti cld test adc xor mov mov jbe inc jae cmp mov jle add dec fisub mov sub sbb jae addr16 lahf jmp mov adc pop mov imul out (bad) sub cmp inc hlt dec cld add data16 ret or pop enter icebp or pop decb in out sbb loopne lcall xchg xchg (bad) sbb fdivp push mov add mov dec mov adc dec enter std pop std and mov mov push lods scas pushf popf jne lcall out xor inc add sub mov pusha std cltd enter or cwtl and jne cmpsl sub adc in mov sub push out sub cltd adc fistp imul out sbb das clc into test loope push add int test sbb push push ret test sub dec mov jbe or in sub je test rcr mov lods hlt lret mov stos loop sub cmp jno (bad) stc stos inc and push out std sarb pop fwait aas call (bad) cmp lock mov ljmp imul add push push sahf sahf or mov cld xchg insl lret mov push mov pop dec (bad) jns cwtl add sbb stc sbb out add mov cmp mov push scas mov pop out iret lahf negl fs out mov push inc add movsl or sub mov pop sbb xor pop sub lods mov mov sub sub outsb jno mov test (bad) out pop xchg orl sbb add test push aad sti jmp or add push jno popl sbb inc pop iret inc mov leave sbb in mov or ja cmp in ss ret pop cmp jb pop fimul jge push jecxz ljmp ljmp out in in sub test dec inc jge jo adc xchg jmp sub inc sbb cmp pop fstpt adc inc mov sub aaa mov and fxch mov insl cltd jb mov sbb cmp dec jae add dec js shr xor sbb dec jne out and inc inc outsl cmpsb add fs and test inc and sti push rcl or sahf sub adc dec call push movsl (bad) jo inc nop mov hlt std out xchg lahf mov mov push cwtl jnp jle sbb iret hlt iret mov nop jb je scas test jp or insl (bad) fisttpll scas adc mov push nop dec or push bound out sub xchg push adc pop push xchg rcll lock popf cmpsb int sub jmp mov cs jp cmc dec fwait pushf add jo in sahf jnp fimull add and jge or int inc (bad) mov or shrl push clc pushf inc clc inc jp jb push jmp lcall jecxz inc insb aaa leave insl push mov mov or mov fldl mov jns neg pop jmp adc popf xchg cmpsl int inc stos mov mov cmpsl les aaa mov cli and sub and popa mov sti insl jle int ljmp push aaa aaa add xchg lds imul das inc arpl sub test cmp and lods loope cli addr16 aam jo out cmp jecxz and out dec stc mov push xchg or pop in sub fs pop mov pop mov sub rcll xorl fs mov adc sub in sub inc add adc data16 sub jno (bad) int jnp gs mov ret in jbe dec push mov mov fs fsubrs jae pop insl push cltd inc push sti dec jae lret xchg jne mov push lea stc stos stc jns test or cmp data16 sbb jl stos iret and push shr xchg das cli out cltd mov (bad) mov mov jb test cmp mov mov sub pushf iret (bad) clc xchg or push test sbb jp test inc jge and aaa rcll mov les sub loopne cwtl lret add xchg pusha mov and mov jle inc pop adc inc (bad) out movsb icebp loop push daa stos jnp or xor sbb stc notb dec lret das mov fwait (bad) mov stc cli sbb aaa sub mov leave sbb sbb cmp stc (bad) test lahf scas popa mov sub incb xchg in push jp out or mov mov ja popa jnp or dec mov lret imul shrb pusha sub and loope dec aaa clc mov cmpsb aas loope mov and jnp and lods xchg jbe aad inc fnstsw add and fadds dec mov loopne ret and (bad) (bad) or or xlat mov mov jns pusha cmpsl cmp push jmp bswap cmp xor cmpsb push mov mov cmp xor xor cld arpl stc push jae aam out cmp in xor adc insb jb loop leave call adc xchg les insb xchg jl add popf sbb jg sbb adc mov and mov xchg push jns mov (bad) cmpsl test sbb sbb incl push ja test push dec sub vmovlps pop pushf push add ljmp hlt fsubrl push scas mov pop in in inc cltd aaa mov cld inc mov das mov lret cli or sub (bad) stos xlat imul divb scas dec push or push inc push push jno cwtl adc out dec mov dec leave (bad) mov push lret sbb hlt les adc push sahf lcall mov in jne dec or and (bad) jp (bad) lods add mov jecxz iret mov push or mov sbb (bad) negb adcl out jmp push icebp gs pop jge dec std insl adc insb movsb or and (bad) push std in pop jae bound mov and jecxz repz mov aam adc test insb stc bound pop mov clc adc clc das ljmp push fidiv and aas gs call mov data16 dec addr16 iret xchg std je or add js mov movsb arpl push out xchg daa adc leave jecxz push jno or lods iret and pop outsb sub adc or popa lods sub cmp adc hlt xor loop sub enter into imul mov loopne mov fnsave xor push pushf add call outsl pop lret sub sbb outsl movsb ss leave mov push xchg negb loop add mov pop pop add aad and jle mov aam out inc xchg divb into aas push push inc addr16 jnp dec cmp or jb pop mulb sub inc imul call add ret and int3 add sub inc test push mov mov pop mov sbb std dec push add dec push jecxz jbe jl sbb xchg pusha cs popf jecxz (bad) sbb cmp mov inc or and xchg sub cwtl pop push mov in inc rcrb dec movsl int3 sbb das fstpt cli data16 inc sbb pop aad les insb add dec cltd fstps inc adc mov add les jns cwtl das ljmp inc mov mov cmpsl sbb xor sub ret test push push mov adc test mov dec or loop xor icebp xchg push add inc in cltd ret lret clc jp out idivl in aam lret out sar adc pop xor push outsb xchg dec xor adc int inc cmp stos inc mov mov and sub or insb xchg in insl stc sti ret add jne pop lret fucom in or xor das loopne push inc repnz jae leave outsl test or sub pushf rcrl mov insb adc repz and mov pop mov jp jg pop jns incb loop popf mov mov xchg sbb push out andnps mov cmp pop roll (bad) sub ss xchg push out test mov and dec sub mov ss out jecxz adc nop sbb fcmovnu and dec movsb xor scas repz fs outsb push lods or test mov xchg dec insl mov xchg imul adc add cmp scas gs rcll mov sub pop dec rcl cmp pusha arpl and adc ljmp inc cmpsl jecxz jae fisub mov push lods rcrl js sbb xchg mov repnz clc test outsb push sbb mov stos sub scas jb pop outsb cld aaa sub popf lret movsl sub aas cli push iret jo sbb stc and or push inc std repz xor or lock and aas adc (bad) hlt sub imul (bad) mov mov or dec sarb outsl inc (bad) fldcw std lahf imul mov pop xor js xchg enter mov xor (bad) xchg imul (bad) repz das sahf adc scas adc push adc adc xchg loope push fnstsw mov adc sbb push mov cmpsb outsl adc in jo push inc sti imull dec insl repz or mov inc stos mov pusha mov cmp sub loopne add lea (bad) xor das test shlb je dec inc mov add outsl jecxz mov add nop push and xchg imul mov daa (bad) xor lret mov in fwait mov jp jns and (bad) sub cmp fldt loop jge and pop or adc xor hlt mov out mov sub lret movsl pushf push mov mov jb and push mov data16 mov or sbb (bad) sub outsl sbb pop daa dec lcall leave test mov push sub pop loop scas push pop dec add xchg mov lods scas mov add loop jmp cwtl or add inc pop sub fstps dec jmp pop pop test jle stos out cmp mov dec jle xor xchg push loope fistp lock ficompl lods mov scas jmp aam xor lods data16 movsl andb or lcall add popa xchg outsb dec inc or outsb mov add out push in xor lret test mov fwait xchg cmp mov ret or mov out fdivl getsec push xchg or or cli test xchg push sub sub pushf popa sar cmp imul decb mov push xor dec xchg xor lods test mov std popa cmpl xor mov out mov xor arpl mov mov adc xchg pop das movsl xor and insb sub xor add lea inc jge push lods xchg stos sub mov push inc ljmp or out or das mov adc out and cli aas mov xchg cmp mov mov icebp jmp in sub out cmp jo rolb rcll rcll jb add addr16 out test aas jae aas pop call out inc ljmp inc out lock lods cmp iret and xchg ret add lods arpl js insl jge repnz mov sti add lahf rclb fidivr sbb mov xchg push ja gs out in jg push aaa clc outsb xor lret loop xchg int flds xor mov cld cld xor loope jb leave rcrl inc xor jnp jmp push inc jae adc jae into (bad) cmp and push push jp jge sbb fs lock lcall cld pop cmp sarl notl ret sbb arpl dec push data16 or lea jnp call mov inc xchg decl test fs xchg jge scas inc ljmp cmpsl cmpl xor arpl mull cmpsl sti loop ljmp jns das lahf mov xchg inc mov add call out sbb dec cwtl out movsl (bad) out loopne ljmp in xchg mov inc stos mov lods ror ret dec outsb xchg xchg xor add adc jmp in cmp and out inc sub push xor dec dec push data16 jbe mov int mov inc jb sbb (bad) mov pop inc push jnp or lret mov mov xchg leave and sbb loope mov test addb jecxz add imul hlt jne xchg fsubrs adc push imul sbb std jbe cli mov mov divl scas pop aas mov jb xor clc push pusha inc clc aaa aad dec sub mov cmp outsb cld (bad) mov je sub les dec sub scas xchg push outsl and sub (bad) outsb in arpl xor imul push xchg test add nop add out dec dec scas push call (bad) and dec xor jge cmp inc sub add out mov lcall dec mov mov sbb xchg add sbb inc push cld push repnz jg fmull arpl (bad) mov adc inc or lds scas lahf push jbe sub pop insl xor icebp xor std shr enter jmp or aad jnp mov mov pusha or pop lock add xchg rorb or inc or mov insb cmp dec ljmp push mov xchg push or jns jmp sub sub lock ljmp jmp mov lret pop mov rclb adc jbe cmp mov sarl js adc dec popf inc sbb insb shrb in aaa leave insl jne adc xor (bad) rol mov sbb or push pop out jge clc cmp ror in mov fwait mov or flds test mov scas pop add or sarb iret idivb or cmpsb and add mov fs inc xchg mov in push daa stos cmp jl call lea pop (bad) cltd inc mov jbe pushf pop (bad) (bad) mov into jl xor jle mov jmp clc dec addr16 (bad) cmp ds mov (bad) out or inc inc popa adc mov push sub ja scas test xchg bound mov testl bound sub (bad) test ds adc xchg lret mov clc xchg fdivrl fidivr les fs push adc fs sub daa adc test (bad) sahf dec add inc inc pop adc mov cmp cmc (bad) jno insl rclb es xorl test mov sbb or mov data16 cmpl aas or loop xor and add and mov sub add mov popa fist mov dec pop rcr xor insl leave cs in int3 in inc sub bound shll out add push jne inc out icebp dec jnp sbbl movsl push cltd fistpl cmp sbb es dec push pop jmp daa xchg lods arpl add aas int3 add push mov xchg decb xchg out jb xchg bound stc scas xor subl nop jbe stos add daa repnz ja sbb xchg push cmp mov lret jns dec lods addr16 das insb out inc add sub fstps in aas icebp (bad) jge jge jg cmp inc scas sub addr16 enter inc lds mov push jp cwtl and daa push or sbb enter imul aas stos jl sahf mov aad mov push dec jmp mov cmpsb push pop data16 jle or cmp test das std imul aad xlat push pop test outsb sbb dec clc and inc add nop fdivrl mov add mov cmp jmp (bad) and adc inc cltd rclb sub pop loopne clc push sbb outsb jmp sub cmp frstor and (bad) outsb xor xchg sub rclb mov cmp push or insl or sub in jns aam dec loopne data16 daa loop xor rol xor nop xchg mov inc push stos inc clc cmp sbb sub mov int3 cmp sbb insb outsb xor pop sti pop je hlt pop xchg fs sbb jb movsl adc jno lods sbb push mul (bad) sub xchg lods dec mov cmp fs jp mov dec shl xor hlt stos movb fcomp enter incl pushf shrl out jle push fldcw fwait jb rolb cli test jb xor sti inc add mov std stos add cltd cmp add mov pop dec sub inc insb push inc and inc roll mov (bad) cld ljmp xchg imul faddl loope cmp lret lcall pop adc xor addr16 lea adc das and inc or add or adc ret (bad) loopne push mov out stos push inc xor dec pop test lahf and pop add sub nop mov mov sub fwait dec cmp call cli insl sbb inc mulb mov mov sbb (bad) jp imul lret dec lahf xchg divb push jge call jmp push sub out add adc movsb lock into xchg push in or test sub sub dec push out lcall mov push aaa mov sub jno outsb iret lds (bad) loop out roll xchg cs in popa xchg loop (bad) insb jns outsb loop cmp push xor mov and sahf dec push sbb scas out data16 and pop (bad) movsl test (bad) repnz (bad) mov jmp lea sub sub out sahf aaa push insl xchg xchg scas jecxz xor pusha xor cmp mov mov aaa dec adc aam push movsl xor pop xchg cmp cmp sbb add ds xor in es aam test gs std mov jnp insl push sarb jns sbb ljmp lods decb mov push das jl insb cmpb data16 aam lods mov jg push (bad) cmpsb iret pop movsb stos imul incb fbld lods aad std push lods pusha int3 pop scas jp mov xchg jg pop mov mov popf int3 pop pusha (bad) push bound mov fist lds cmp xchg hlt cmp mov popf pop (bad) pop pop dec lds addl scas aaa xor (bad) negb inc inc push (bad) das cmpb adc cwtl sub push sbb lds cwtl cmpsl dec data16 xor ds push sbb sbb sahf out insb lock arpl pop out popl cmpl ret lcall mov aad int3 in mov push movsl xchg pop sub mov add push xchg xlat lret ftst lock push enter add mov mov ss cmp xchg adcl jae fsubrl sbb mov iret pop adc sbb xor std xchg out jg sarl xor jmp dec xor leave mov mov (bad) jae inc sub sub add in enter mov mov jno test xchg and dec decb fsubl xor sub add push mov dec jl mov in dec test int3 sub push fistpl sahf xchg sbb lock xchg (bad) cmp dec fsub les pop and or jp push fwait stos inc gs loope ret inc cmp fnop in pop (bad) popf xchg push mov outsb push gs add or and adc inc imul mov out jns and ret sbb xchg jae ffree cmp push movl add (bad) jle sub (bad) out jno mov sbbl mov fistpl insl and out pop int3 imul sbb imul xchg (bad) mov dec dec scas adc jge mov in or cmc adc test aad mov aad fidivl push lret mov test cmp mov sub or cmp or adc dec cltd or cmp fldl inc pop jmp mov xor in (bad) inc and in xchg popa jge xchg mov dec movsl push push stos lcall ret push in add sub xchg dec cmc push inc out add aaa fwait and xchg dec loope inc push popa xlat push dec and leave mov add fidivr arpl imul pop push jl int push aas jo cmp pop inc push adc cli or pop rorb pop xor out lcall ret mov push sarb addr16 jbe push cmp mov cmpsb lret mov sbb cltd sbb or js jne and cmp in or sbb inc insl jo das xor shr sbb add adc test enter test cmpsb negl pop (bad) pop cmp mov xchg mov inc mov mov pushf xor or mov hlt into dec dec ds push pop lea xor ljmp aas fcmovnu mov cli sbb outsb jmp jmp xchg mov shll dec push mov mov jl sahf enter out pushf out mov dec fs sbb dec test sbb mov push lahf lcallw int into (bad) push mov sbb (bad) or xchg shrb cltd rcrl stos mov push ret adc dec jp jmp push xchg fcomip or int3 mov sbb push out xor and or rcr cmc inc xor lcall pop pop imull xchg add aaa cmc inc sbb int cmpsb cmp das inc jge adc rorl in push sbb dec stc int sbb mov in cmp movsl cmp cmp mov cmp lret shll lcall dec xlat mov adc gs (bad) mov js (bad) mov push or std push jg in rolb push fdivs inc push mov cmp dec mov insl xchg popa test pushf stos into in sub xchg es int3 nop mul mov sbb inc std cmc jno test test dec cmpsl loopne mov jae ss xor lods (bad) hlt xchg sub mov int3 pop dec loop sub cmp jmp mov movsl shr xor xor jnp dec or pop stc dec or or popa push push xchg in leave inc mov inc push int or adc bound hlt movsl push nop (bad) std lret jge mov adc stc sarb dec or inc mov cmpsb dec adc push xor loopne lret add xchg or outsl cmp or pusha mov repz xchg xor inc std adc adc jp push push pop sub pop scas jl lock push push cmp mov and lahf (bad) mov sbb jmp mov inc hlt fs mov cmp dec cmp in pop dec sbb dec out xlat mov movb xchg (bad) mov mov sub insb les js xchg outsl lds in icebp cmp test dec repnz daa (bad) int3 imul mov inc cmpsl cltd xor hlt mov and dec leave push mov aad pop pop inc pop xor jno xor mov lods sub xchg xchg gs in sub rorl jns icebp ficomp xor test out jmpw mov mov jns adc push in mov xchg mov in hlt or dec fwait pushf (bad) jmp sbb enter enter dec sub dec jl into or dec (bad) daa add idivl add jl (bad) jbe inc adc jge out pop scas or into movsb cltd out rorl dec out daa cmc add (bad) mov fisttp lods ret mov jecxz clc xorb and cmp jge add cmp adc dec jns xchg jl push xchg inc into jno xor add fs lahf lahf das mov xchg mov pop int pop in cmpsl pop sub dec xchg addr16 inc stc jns adc mull or clc jg aam and icebp cld mov ds movsb (bad) sbb pop lea mov clc aas push ja pop hlt das inc mov scas and xchg pop xor add mov cmpsb lock daa cmp lret pushf rol ljmp mov sbb out lahf jmp in push mov dec out (bad) pmuludq dec push lock out and fs in mov mov cld (bad) jmp inc cwtl jmp lods jle std jmp clc lret xchg inc loope dec stos lea rolb push sbb inc push and jge int int es test (bad) sbb mov pop and cmp mov xor ret and (bad) pushl or push jnp pop mov mov popa jmp push das inc dec out nop adc es call xchg insb mov jne sub in es jge in mov cli xchg mov testl and jbe test movl mov push and je cmp repz imul and in mov movl fldt fisub dec cli (bad) mov mov adc or rolb dec ja mov repz push (bad) cld inc sar roll daa push lea orl mov sub xchg repnz popf (bad) adc pop outsb mov mov push aas fldpi in lret stos xchg (bad) insb adc dec xchg repz icebp cmp out rclb cmpsb out or scas rcrl sub in cmp insl (bad) repnz xchg stc and fnop inc adc inc jb pushf cmp pop push mov subl mov push inc sbb and cmpsl outsl arpl or lds int3 imul bound cmpsl ja mov sbb push ret inc sub jae mov cmpsl lds or (bad) dec in fsubp stos outsb inc fwait push pushf lahf cltd and mov jle jae jge mov inc lret xchg sbb dec cwtl cmc xchg outsb mov mov mov sub xchg out repnz repz repnz movsl and lret enter mov jg ret imul mov push inc mov or inc int sbb jmp dec sbb mov dec sarl cmp js out lods pop mov lret sbb sub inc cmp adc mov std pop fs pop roll outsb mov imul mov sti fldl jg outsb inc jl loop addr16 cltd dec ret sub sub push sub mov push fiaddl jecxz stc lret cmp add sub jae cs xchg test push int rol negb shrb add shlb cmpl js or and test mov sbb push sbb rclb fisub dec add pop movd xchg xor or int3 sub imul mov mov jb sbbb call or mov rol dec push or jmp (bad) add cmpsl push call jae je aaa movsb cmp sbb or sahf aad lock std push loop mov dec and mov sbb dec cltd cmp rep mov xchg icebp scas aas cli pop sahf mov mov jmp scas push adc pushf subl xchg (bad) mull fisttp sbb mov ja out pop mov in stc lods push dec mov sbb add cmpsl movsb imul lods xchg jg jns xor sub test aas push sub mov push cs pushf or nop jne scas jbe pop mov outsb mov jge dec mov lods js adc xchg lret sub jg or jmp adc adc xchg adc ret fadds lds nop lock inc xor xchg adc pop lods jg (bad) and lock mov hlt xchg stc cli push scas add cmp movsb out (bad) lock mov ljmp and loopne (bad) in ja add jg out jmp push push adc and dec nop clc mulb test aas in mov loopne loope mov daa add (bad) and aaa jg push add add pusha pop cmc lcall xchg jnp jl fsubrl mov push sub push mov je outsb pusha test pop mov pop sub add out push pusha add push xor xchg outsb out xchg fstl pop sbb nop lahf and xchg outsl jne (bad) jnp xchg dec pop incb or add push es lods das push leave (bad) popf pop mov adc fs out add jmp cmpsl mov pop iret insl mov dec xor imul mov in jge aas fidivr inc (bad) (bad) jl testl push adc aaa rclb xchg inc mov sbb mov sub mov test push outsl cmpb sahf pop mov add jle,pn mov es and inc inc fsub inc inc push pop lds std sbb adc jg js xor out mov jge in jecxz mov sub push fistl adcl cmp push dec iret xchg aas stos dec push (bad) sub xchg cmp fwait cli loopne xchg xchg fsubrp aad and addr16 vpavgw sbb xchg push fs in enter bound add movsl sbb sti jbe jno jmp test mov fs loopne shrl push ljmp outsl adc lret xor jnp mov cmp (bad) lcall sub and sub mov mov pop push push adc loope fidiv jg outsb inc xchg ss sbb rolb sti or fdivrs adc inc cwtl xor aaa dec sub push pop jb add lret call push pop adc lods adc sbb or sbb jno cmpsl push stos es insl test pop imul gs or cmp mov inc inc jle dec mov sbb movsl jle stc cmp mov inc xchg pop cld push fidivr cmp rcrl test cmp cwtl sub lds sub cmpsb std (bad) rorl (bad) out mov outsb stos pop add scas fidivrl mov xchg icebp mov lea fsts movsb sbb into push ss xchg mov (bad) or div pop decb dec je or xchg pushl daa sub cmp shll cmp out aam cmp fadds sar imul ss fucom pop pop add enter xor or cmpsl sti dec inc imul mov lock cmp popa dec cmp inc and xor bound xchg xchg adc xchg (bad) jnp jno sub nop lret add pushf clc push in push and (bad) imul pop repz xchg test cli xchg insl mov (bad) mov and imul add testl in js jmp (bad) nop pop mov mov sub div nop xor mov and xchg icebp iret int xchg mov dec mov (bad) leave pop mov sbb mov je inc mov pop out and sub inc push mov (bad) sar mov push movsb mov lods shrl and cmp jecxz inc inc jmp out in jnp sub in (bad) (bad) mov sbb daa outsl add xchg push dec dec repnz insb aam aam lods push or mov add pop push and sbb xchg mov mov mov imulb lock das lock clc (bad) sbb (bad) mov cmp jo and push outsl jno add and inc out out push loope cltd pop outsl mov mov loope (bad) (bad) or stos push das cwtl insb jo gs in adc jns jnp sbb sbb imul jno mov jne test adc int xor sahf in xchg pop adc sbb sbb (bad) pop shlb loopne rcrb mov xchg es dec mov mov and inc cmpsb shlb mov jnp in inc pop push mov lahf repnz add push movsb inc mov sbb gs ds test in cmpsl lret jb sub add pop xor lret das cs enter loope cmp test mov and cmp or fs mov or and sbb or inc in orl call lock push (bad) idiv outsb cmpsb test sbb cld stc and or insb xor call mov lahf rcl daa inc dec add in push (bad) jne mov loop xor scas cs shr fwait hlt xor sbb (bad) loopne mov repz mov out mov jmp out out bound sub pusha loope or cwtl gs mov sub inc adc sbb jge fidivl and xchg push cmp dec xor lret xchg imul scas (bad) repz mov xchg cld stos or mov mov imul sbb test sub addb sub mov xor sbb insb or popa imull out cld (bad) push mov mov pop out add mov (bad) mov orl fs lods jmp pop ds aas sub sub jae sbb adc xchg inc xor xchg dec fldenv jge (bad) je pusha pop mov jmp inc add inc subl sti stc into mov iret mov dec pushl add aad adc push mov mov in outsb cli mov adc cmp scas mov sub mov sbb test leave stc data16 outsb shrb std pop adc inc adc sahf (bad) aas jge pop inc data16 adc iret or xchg fnstsw mov mov mov aam mov sub sub sbb cwtl insl jns push lods fucomip cwtl or adc cmp daa jp (bad) repz dec push (bad) fbld dec sub inc lahf enter sub push and shlb xor xchg incb jne pop in stc sbb jns dec cmp mov lods imul pop js outsl out xchg imul xor and sub mul mov xor cmp outsb data16 insb xchg sbb push mov jne mov dec lock stc adc or lea ret xchg enter cmpsl in enter fildll mov mov and pop or pavgb add aam outsl push rcr test sbb lods sbb xchg call dec arpl mov xor and jnp xchg movsl pop and jne and iret add pop jmp pop jl push mov test insl arpl sahf jp das pop imul mov icebp pop adc adc nop repnz jmp bound out dec push cmp mov pop or mov jo adc and mov outsl rol scas xor push rcrb das push push (bad) jo popa sbb movsl mov mov enter fidivr jg test and (bad) sahf (bad) shrl push xchg or fwait dec pop (bad) jmp inc icebp push pop xchg mov push cmp xor xchg das mov ds push fidivl push in lock add nop jge xor lret mov push test icebp fnop dec mov push test pop mov sbb xchg dec mov mov in mov mov outsl inc sub jno nop lea jmp or pusha or ljmp sbb adc testl rcrb inc jmp sub pop out cmpsb xor mov add dec mov mov loope mov loope cmp xor lret add js aad push jg test mov lret pop xchg aad mov jecxz mov dec mov pop fsubrl mov lods lret jo dec clc cmp hlt in inc pop xor andl das push or xchg xchg stos sub das loopne jnp outsl ret test inc ljmp ss gs or test fdivs adc imulb fst insb jle cli jne sbb jle (bad) clc inc xchg or push mov popa scas pop insb sti lret cmovns aad lods push mov adc mov mov push cmp xchg mov or inc aad int3 or jnp xlat xlat mov mov lods imul das js pop xor ror pop dec aaa je test add mov sahf shrl in jg pushf lds in mov frndint inc xor out ja cmpsl and sarl push xchg outsb adc rol mov cli ja (bad) sti das ds jl jecxz and in xor sbb out push ret push stos test cmpsb inc push popf mov xchg mov dec mov mov or pop sar jle cs dec mov cmc cmpsb mov cmp movsl test jmp sbb (bad) xor xchg orb pop sbb adc lcall or ret lea iret stos (bad) sti into pop (bad) int3 dec or out lds movsl mov xrelease adc or lcall arpl mov jge mov call pop or push out xchg add (bad) mov fwait mov and in push adc pop aas push decl jge or pop jmp fist test pop ljmp fdiv push outsb bound dec (bad) mov lds or lods xchg (bad) sbb add xchg push push mov push xor jb pop inc mov out (bad) out clc mov std outsl xchg xchg sub loope test xor push std idivb jae fnop sti ljmp adc cmp add dec iret jp out push cmp add pop xchg stos clc decl out push orl aad fldenv dec out mov mov push add pop push push push ljmp (bad) enter and je test fiaddl repnz ja out cltd ja cwtl loope test add int mov dec aas jge pop stc fcomip dec les lds pop mov push mov stc fldenv call or in sahf push mov movsb push cwtl jp sub inc ljmp test loope jbe sbb bnd xchg fldl pop js fidivrl pop sub (bad) lds jne add (bad) xchg in popa mov lods dec push or jecxz in cmp inc stos adc arpl insl je cmc xchg mov test inc xchg add mov ret add int sbb add sub data16 clc shll inc mov ficom adc jb or test sbb jo dec ret jbe out rcll insb loopw imul or scas in loopne cmp or adc xor (bad) sti fcomps movsl (bad) pop mov adc pop rorl test out out dec mov xchg (bad) adc aaa dec lods jmp adc lods js (bad) clc out mov or and mull aaa add jp push xchg cmpsb cwtl xor ljmp mov xchg insl add frstor add cmp xchg lcall int3 xchg mov icebp incl sbb out movb xchg cld push sub in ljmp ljmp sub inc sbb (bad) out cli outsb in pop push dec sti (bad) movsl sub xchg inc or scas nop out negl add sub loop addr16 jno push xchg fidiv dec or dec test (bad) std mov mov pop lea mov xchg enter mov out in fwait mov pusha mov pop sbb adc test jnp stos in mov scas cmpsl and daa jp in in inc outsb cmpsb inc dec jge mov pop loopne mov push or imul pop test pop dec mov jbe mov mov out mov mov dec or add cli jle (bad) push imull gs frstor imul cmp (bad) cmc mov jg and add and aaa fdiv pop push ss (bad) repz ss pop test inc popl cmp out cmc addr16 sbb mov fs js push (bad) sub dec push and loope push sbb sub add call cwtl inc in push (bad) arpl xor hlt and dec xor xchg sub add xlat fld loope fsub fcoml lods sbb cmp lock or sub dec or sbb inc xchg leave push cmp adc jnp sub shr adc cmp pop (bad) push decb adc ja sahf stc cmpsl lods jmp stos mov inc mov addr16 dec jp mov pushf jg hlt adc adc int cmp ja in cwtl xor in xchg cs mov jecxz inc or cli pop jl jecxz and adc mov sub adc mov mov push mov rorl add lahf mov pop cmpsb mov out fmulp or jle mov xchg mov jae inc mov lcall xlat cmpsb mov mov push cmp ljmp in lcall js imul dec aam xor seta fcmovb (bad) js mov add or test jmp mov mov and loop xlat loop fnstenv (bad) rcr mov hlt (bad) and leave or lahf jae out inc stc scas sahf push (bad) popf push cmp push jle imul les mov xchg sbb push decl hlt (bad) cltd inc testl jb enter pop or pop testl ja push mov outsb sbb scas out loope push lods mov fmul or mov or mov sub cmp out (bad) notl pop sti sbb in cmp sbb xchg mov push arpl setns in jnp in enter dec incb imul inc mov gs adc mov pop cmc std test fwait insb mov ror xchg out xchg scas test cmpsl stos gs sahf call jb inc adc jnp push out mov int mov dec mov push lods push outsb xchg (bad) dec (bad) dec adc mov pop dec fs cwtl cmp push and icebp je mov lcall test or or dec aaa dec stc push pushf or cld movsl jnp sbb sub les or mov jge std lods test repz inc in push or sbb into hlt jae sub sti cli in cli shl xor in mov or scas loopne std ret aas sub negl call dec scas das push adc ss stos cmp (bad) imul out les dec std insl test (bad) fstpt leave in es pop pop stc iret (bad) mov mov imul (bad) mov push add or loop popa xchg xor mov dec mov push dec jmp sub ss ss add dec pop dec shrb in mov cmp xchg jno enter fstl cli or xor fs jne aad fwait sbb lds adc adc std dec movsb lea xor cmp fildll bound lahf in and sti fcomps test cwtl dec lcall xchg stos data16 xor xor sub daa xchg and jle in into (bad) sbb sub and pop scas jne xchg jg stos pop jle push mov jl inc subl leave mov aas (bad) test mov push pop jbe or out repnz out sbb jnp push fldl fscale int push sahf les pop mov sahf aaa (bad) rclb lret mov pushf jnp xchg outsl out jnp xor data16 ljmp cmp cmp les int das test xor adc repnz mov sub pop sbb (bad) mov cs jae xchg mov leave daa in mov xor xchg sbb cld jbe dec jmp sub sub enter pop pop cwtl cmp pop in lahf out and loop ds mov inc adc push test sub mov out ja fcmovnb mov mov in and mov or pop cmp push bound dec pop dec (bad) int3 clc dec das je jb cmp jp pop sbb daa mov shr int jo stc (bad) dec sub add iret pop mov sti js sub dec cmp lret lods std insb jmp fidivrl push js jg cmpsl fdiv jns pusha in or add pop aad xor adc fs dec lcall or mov mov sbb ja aas sbb cs pop popa mov inc int3 js out pop ds push xlat jl ret xchg rorb adc in imul pop pop (bad) pop xlat fsubrs je (bad) lret dec cmp loop push icebp mov fs mov test push sub lods mov (bad) sbb fildll test test xlat mov fs ss or test lods jbe adc (bad) mov cltd jnp rcrl and sub mov push fistpl cmp mov (bad) movsl aam xchg mov inc jae int fistp cld jnp pop push mov cwtl insb adc xor and repz mov pop into push cmp lods data16 push js xor pop sbb or mov insb cmc aas xchg and push dec inc mov out sbb adc dec leave pop adc test icebp int3 jae jp push js push cli out hlt das js jge cli jge add mov mov sbb std jmp cmp lods push pop fistl inc mov js insl sub ret das lret or mov sbb sub xor dec cmp dec das pusha sbb (bad) xchg sub gs dec insl imul dec mov jno inc addr16 ljmp push subb and inc jae in (bad) jne jg jge jnp gs sbb inc inc xor imul or xor cmp incb gs fcomps in cmp dec and dec dec xor mov scas xor mov mov imul (bad) push movsl mov inc cmp dec lahf lahf xor movsb imul mov dec (bad) dec push xor scas mov sti test scas mov imul mov addr16 dec fsubrl add inc cmp scas jg je sub movsb xchg jbe pop mov sub gs fsubs iret inc movsl aas in cmp dec movsb lahf aad mov rorl push lods addr16 dec xlat dec clc pop add xsavec aas stc (bad) movsl fs push pop arpl mov repz sub pushf add scas gs push xchg sbb xchg add cmp fistpl in sub mov cmpsl jmp xor cmp scas pop add imul popf sub cs cli mov aam cld sbb cli call into mov sub cmpsl and ret pop nop (bad) push mov xor stos test cmp dec test dec hlt dec cmp dec inc dec cmp outsl in cltd add movsl test dec std jae imul out lods inc clc test adc lds adc mov pop cli in add in pusha pop or dec push (bad) mov pop jge in in pop imulb push test pop das jo xor xchg and movsl movsl or mov faddl js sarb cmp (bad) fidiv jmp and scas (bad) sbb outsl xor sti sub stos inc cwtl pushf push (bad) in popf xchg jmp mov in jle xor and push out push or insl xor xchg test mov pop cmp xchg test push inc xchg lea cmpsl or jae les insl pop adc add (bad) in xchg sti mov in cld mov jp out subb xchg pop adc xchg mov mov sbb cli lock addl scas (bad) jnp dec mov outsb in push lcall cmp add inc sub das push nop pop scas scas dec inc jno mov fidivrl out int jp pop inc (bad) test jg fild or xchg mov push aas pop jl mov jmp ss or rcl test imul jp pop in (bad) push xchg dec or (bad) dec mov clc cli or jg out adc rolb inc push iret jg xor adc and ret stc les out aas inc flds jne xor jg cmp int3 xor inc mov dec pop pop in mov into mov cld iret xor stos inc test rcrl add in sbb negb rcrl push pusha jge sarl mov or add cmp das or mov or mov push pop add pop mov lahf add lock add rcr mov jbe or pop lock mov imul out sub out inc jae (bad) ja shrl (bad) mov clc das das insl jle sbb call sub addr16 int dec ror popf mov imul pop ret insb leave sbb into sub lahf mov dec add mov xchg dec leave hlt sbb out cwtl jge xchg dec and jg dec sub mov mov jns jmp mov std loop outsb out jle ljmp mov lahf mov and push jno cmpsl sbb daa out call cmp jl lods aam ja std pop cmpsl push mov inc push sti stos cmc ljmp pop jecxz idivb aaa stos push inc inc xchg jge jnp or cmp mov int3 test adc dec std out pop ss out cli ja mov stos fmuls in test imul lahf (bad) sbb lock out jne loope insl cs or mov pop lret xchg mov fnsave imulb imul jg loope dec cmp inc or insb jb jp fwait add jp xchg jo mov push and in add cmp sbb sbbl or test and aam fbld addr16 sbb or out push push cmp pop fxch cmp bound mov lods inc fwait daa jge or cmp pop dec mov jmp sbb fsubrl out mov xchg ja and call add cmp mov mov jbe dec push fiadd fsubrl loop frstor xor pushf int3 test or jmp repnz imul sub loopne repz add lods adc adc addr16 pop scas sbb cmp sbb mov arpl (bad) aad adc push icebp (bad) cli dec push (bad) xor ljmp cmp add and adc mov lods out movsb loop fcmovbe insl xchg lahf iret xor pop mov sub mov sub jmp (bad) dec cs es not adc push jb popf xlat aam jo pushf scas dec xor pop xor xor fwait (bad) push call jae jge push push push sub adc movw popa out rcr jg dec iret cmp aas (bad) sbb push fdivl inc (bad) or jmp int inc adc add mov ss mov (bad) in pop into incl push jno,pt inc dec enter push (bad) and clc movsb xchg sahf aad inc sbb pop imulb xchg sbb incl cwtl jno inc add add or xchg fldt pushf fadds aas pusha adc ret gs and jl jno aam rcll xchg fnstsw or xor xchg (bad) iret (bad) jge push loop movsl jnp test (bad) aam dec mov cmpsb imull mov sarl push xor sbb (bad) jns aas ss scas loopne mov adc sti fisubl push fadd popf jne xchg out and scas cmp mov (bad) (bad) sahf imul and lods pop mov mov hlt in scas xor ja in mov jl mov rol insl sbb xchg nop stos fwait inc pusha addl pop and (bad) jne lea inc pop stos outsl insl aaa xor jle mov jmp adc in xor out negb dec pop loope cmp fs and incb repnz in pop das ret fsubl fwait insb std call and nop outsl in sbb push or adc mov xchg rcrb mov insl push addr16 pop push (bad) repz inc pop dec fs sub (bad) ja and push mov add mov iret fdiv (bad) (bad) push xor test test xchg lahf test and hlt cs jnp out push rcll xchg xorl dec mov push int3 imul addr16 je in pop repnz lahf enter jmp and bound (bad) mov sbb inc mov xor jge dec cmp jmp std mov cmp pop adc movsb fisttp fs push and xchg outsl pop or pushf xchg cmp in mov loopne scas aad (bad) and jo sub (bad) xchg add mov out jmp aas insb gs mov test or xchg rcll push loop xor xor cs jbe in mov stos ret dec sub cmp sbb xor ficompl aad dec aaa mov sub insl jmp and mov mov imul fs cmp std out lods cmp mov push adc dec inc outsl out jns xchg in shlb and dec adc je (bad) sbb lcallw std js clc in xchg sti pop adc mov mov and (bad) jb add push xor insb and adc out aaa into pop icebp test test jnp scas out pop sbb cmp mov enter mov fwait cmp lock lahf rorl sub shrl (bad) inc and sbb push leave enter mov arpl test popa std js push sbb or out imul push rcrb sbb jbe insl add push pop push out repnz jae das push lods das pop int sbb mov mov xchg je xchg sub mov sub lret add jge inc icebp (bad) jmp loop mov jbe shrl dec jle mov (bad) mov or icebp mov sbb pushf push in cwtl lods out dec xor loopne sub mov push aad icebp and roll lahf mov int stc pop inc jmp sub dec fstpl cli loope test ljmp add cmp adc movsl (bad) (bad) xor inc xor xlat jbe adc das incb sbb push in mov rcr sub lock mov xor pop push int3 pop sbb adc loopew mov or cmpsl or jle shr bound (bad) mov popa adc or adcb adc loopne out cwtl and fiaddl test mov (bad) out fstl cltd (bad) xchg inc movb xchg repnz or push jb test pop xchg adcb andl aam movsb jns gs mov je inc in je lcall in cmp mov sarl aaa mov fnstcw xor xchg sbb add adc mov sbb jl (bad) jae jp inc jno dec lahf adc test pop lods rclb xchg mov xchg pop dec mov and xchg loope test mov into cltd loop or sub test lods lods or test mov xchg xchg imul shrl lret or gs jnp addr16 fstpl mov cmpsl insb scas push add test sbb lods push call dec rcr icebp in and sub stc popf or fwait mov shl das jecxz stos cmpsb adc add cmp scas addr16 cmpsl loop sub aaa int3 push add inc push imul (bad) xchg sub sbb cmpsb push (bad) addr16 sti lock test push je or inc je enter in mov aam in stc fildl in pop dec sbb and inc push cs mov in push movsl fistp shrl push clc or mov cmpsb nop dec mov lahf inc inc adc push xor fsubrl sub mov fldl lods jns mov or das push mov dec mov stc lock mov inc sub repnz (bad) cmp lds insb add cs (bad) stos insb sub test sbb mov out scas add lcall sbb lcall push xor push movsb sub cmpsl cwtl out jmp js push fnstsw lods xchg jne pop mov cwtl insb xchg jne or jae popf (bad) mov lods iret jo (bad) movsb mov cmp out add cmp pop inc loope dec loope je adc inc adc cltd in or daa jne lret push out leave sub mov test xor mov call jg jg in or lea xor scas sub or push ffreep sarl out lcall cmp call test jnp testl insb loopne mov shlb mov pop nop inc std test imul dec mov repz adc pushl imull pop mov lds mov mov mov fs lcall sbb js in xchg cli daa stc js ss push das sbb xchg jge mov leave push inc cld mov mov or cmp push add or pop pop stc imul ljmp lret dec mov mov in cmp les xchg imul movsb inc sbb bound xor xchg fwait xchg (bad) inc sub jmp jge jge nop or adc pop in mov ds mov aas adc adc stos icebp (bad) hlt or pop stos dec je lods gs pop cli pop sub gs cmp mov cmpsl sahf xor icebp js pushf (bad) pop lcall inc jl dec sbb xchg insl mov or imul test ljmp insb sbb fnstcw sbb jae mov sbb inc jbe mov (bad) adc out inc movsl sahf lcall adc xlat mov hlt sub and sub cli dec mov push add insl es jae sbb test lods push adc loope (bad) frstor int fcoms or xchg (bad) mov das ss jb decb aas jae stc pop mov mov add xchg mov cmp popa in jb test enter sbb ja pop sub loop fs sti and imul mov jns stos xchg scas inc dec sti dec dec push lock dec outsb pop lahf aas insl jno aaa enter test enter inc fs mov inc push or loop sub jle,pt mov cmp xor repz pusha xchg shlb mov or in dec popf scas leave mulb inc cltd (bad) test jb scas adc and dec sub pushf push add ljmp cmp mov jne xor inc (bad) and xchg mov outsb arpl dec pop jbe push shlb push aas (bad) jbe pusha adc stos ficom addr16 xchg out icebp jmp pop test adc (bad) xor in gs iret std mov mov jge out jnp addr16 pop fadds cmp popa jp or cmp shld jmp xchg pop outsl repz gs xchg cmp jmp dec cmp jnp mov push call cmp jg or cmp push std cs dec out and mov iret mov pop jle sub add cmp rcll sbb mov xor jbe xchg fs push cs sbb cld push fs push jmp (bad) jle test ss movsb cwtl pop sti inc js sbb jne jecxz push fidivrl mov add push scas xchg cld das inc dec out scas push adc mov push mov mov dec mov and jmp push or cltd jge leave movsb popa (bad) jecxz inc sbb or mulb cltd dec rorl loop push (bad) and lds sahf xchg xchg sbb pop adc jecxz jae sub mov pop xor mov scas stc xchg sub dec dec inc addr16 call aad push rorl jp push fadd dec mov mov pop adc xor mov cmp stos in xchg xor inc pusha movsb mov inc sbb cld movsb jmp cs push test fwait xchg popa (bad) adc jmp jo fwait sbb test pop lea mov push cmp or std jp mov adc pop push lods and outsl iret push lods push pop jnp,pt or (bad) or pop loop cmp call lods fwait dec (bad) pop mov in cmpsl add fisttpl loope xlat cli sti sbb in aas push jne mov and clc (bad) mov cltd add das mov dec push imul jnp and ss ja sbb les jle jns bound out int rclb insb push dec aam fmull sbb ss push adc cmp fwait js xchg ss loop cmpsb test cli int3 push mov out mov sub mov push sbb jl and sub mov lcall cld test das orb int jmp push sbb jmp dec in inc push repnz jmp add or push mov leave pop cmovns pop mov jnp ficoml into sbb cmp icebp (bad) jg enter push push push (bad) std xchg fnstcw test pusha (bad) (bad) (bad) mov xchg les mov add dec daa call cld inc loopne cmc divl pushl jnp test jl into popa sbb xchg sti (bad) dec xchg adc loope stos xor mov loope inc (bad) cld mov (bad) enter call jg add test xchg cmp jns scas cmc lret adc cmp inc cmpsl adc lret lahf push (bad) mov mov insl sbb ss inc mov cmpsl pop rorb mov push or ss xchg insl pop sub mov jmp push loope jg in fsts pop dec (bad) pop mov inc daa adc insb out sbb ss push mov repz xor in (bad) insl mov outsb mov gs cmp aad or xor jmp mov pop test jg and add leave and ljmp outsb mov mov xor lret inc push es xor adc mov int lcall fs ljmp cmp xchg jns add dec icebp pop jp in inc ljmp sbb enter xor xor lea lock adc push cmp mov lds iret xchg or in or xchg dec push dec hlt pop out rsqrtps insb push adc mov sbb xchg repz sub cmpsl mov imul leave mov sbb and fdivrl push loopne mov aam mov xchg imul sahf in pop stos repz es cmp sub mov mov xor mov pop into sub iret inc cmp adc sbb xor out inc aam fcompl dec fbstp or fs int xor and xor std sub sbb arpl cltd jge ds adc inc dec push jnp pop (bad) ds xchg jbe lcall add fwait cmc sbb xor sarb out fwait inc test stos push mov jne cwtl xor gs pop mull push mov (bad) jnp clc inc mov dec sub jge mov lds lods test adc dec loop ds test mov jge ds cmpsb ljmp xor clc es mov push mov inc jecxz jp jmp sbb into push sbb stos jmp mov imulb or ljmp out inc xchg pop sbb xchg sbb jbe bound es fisubl loope or push imul xor imul add imul push xor vcmpps sti mov lods insl mov or mov pop mov and and into inc js pop hlt enter repz das cmp lret sbb gs mov cmp dec out in movsb mov jno idivb data16 or jmp hlt adc and out add cmp add mov sub jecxz pop pop aaa adc push cmpsb leave outsl ljmp push cmp les stos pop out repnz sub mov adc int3 aad call nop and lods les xchg dec push sbb sub js insb mov xor popa cmpsb (bad) fs or in dec pmulhw icebp insl mov aas sbb sahf popf mov xchg iret or cmp xchg push mov jno inc add addr16 js mov cmp jne roll and jns inc and add jge inc (bad) mov ss lods xchg xchg in sub aam pop jne clc (bad) in cmp add sbb shrl jp mul mov pop pop inc (bad) pop in incl sbb xor ds sbb add lods (bad) pop incl ss addr16 push cltd mov adc cmpsl int enter mov fidivl add sbb scas pop xchg cmp iret jo mov dec dec jb push lods insl lods push jmp inc cwtl add sub fisttp lahf jp (bad) push cmp ret fisubrl sub aam shrl (bad) lret cmp jl pushf sbb aaa testl leave xchg sub pop jb and fwait out mov push cld lds push rcrb dec xchg fs jmp pop mov jnp xor xlat shll sbb and (bad) push push fdivl test adc stos jg inc ret test inc dec pop std cmp test fdivs xchg test and (bad) lods mov mov arpl pop fwait push and mov (bad) pop int or mov aas aaa arpl imul mov loope mov jns adc lods add adc xor rcrl or rol icebp or pop call dec xchg jnp or lods imul scas cmp push ds xchg push push sub jnp add push push (bad) rcll jp jle dec ret dec and orl js xchg mov aad push push sbb adc jmp loop inc push sub int insb nop adc xchg (bad) xchg inc mov dec insb aad adc mov pop icebp aam dec and and add ss xor repnz push fidivrl adc lea jnp add sbb (bad) lret or inc inc cltd jo ds push cmc inc lea mov mov jnp inc imul das movsl es fwait int cs sub mov mov loope pop ljmp data16 lcall dec aam lock pop sahf (bad) sub mov and lahf sti sbb push jle dec (bad) dec push shlb daa imul xor cs ss ret ficompl in gs and mov and jmp pop jno outsb mov test enter pop xchg jl (bad) out jbe dec mov xchg sub sbb sbb jg mov pop insl lahf loope mov add adcl sbb sahf enter (bad) and ret cmpsl aas jle jb les mov dec mov lods cmp stos dec repnz push (bad) pushf jmp sub cmp add in clc fcoml ds ja lcall pop sbb (bad) in movsb dec outsb out aad jp loop add ficoml push inc pop pushf inc cmp mov ficoml xchg scas or into popf adc sbb fcomi lock aaa ljmp inc push sbb lea aam cmpsb xchg pop adc out call mov mov or cmp hlt cmp mov cltd pushf and sbb int xchg mov inc add jmp aaa push add jae cs add cmpsl sbb out sbb jg jb out push cmpsl inc push outsb ret ljmp lock and out js jmp xchg xchg stos inc or sbb ljmp mov mov mov mov adc push insb mov pop lods and arpl (bad) out xchg xchg bound aaa push inc fs aam test adc mov lock in jg mov jmp inc sbb cmp inc out pop aaa ljmp sub mov pop gs pop inc imul (bad) fcompl inc imul mov data16 mov cmp mov sti lds decl mov stc inc dec repnz je adc je shlb popf gs push dec fdivrl mov cmp cltd mov out push mov out (bad) ss push rorl std das cmpsb mov jmp or push (bad) call dec js ds push xchg cmpl mov movsl mov push dec hlt sbb out xor movsl mov sarl fdivrs shll mov lock test insb pop inc mov mov adc in (bad) inc mov iret jbe bound dec icebp dec lods push stc and or mov in loopne (bad) in jle and mov cltd sub mov xor pop mov daa mov sbb bound imul xor sbb jge or aas popa mov pop js or daa clc (bad) fild out push data16 rorb mov ffreep movsl insl push (bad) out test fsubrp and fiadd sbb outsb dec add (bad) xor mov in lea cmovae mov in dec push jl (bad) push shll call insb xchg xor xchg je mov std ljmp cmp cmp addr16 push xor orl int3 jl adc add clc aad lock dec mov scas inc test xchg adc out fisub (bad) es and mov dec mov push add push push xchg arpl in fwait xor cmpsb lock aaa inc les sub xchg push addr16 adc pushf negl (bad) lahf add popa fwait js ret xchg dec push xor pushf inc rcrb imul sub mov ja loope sbb mov xchg rol push or sbb add mov mov and fdiv cmp pop lods inc (bad) xchg int3 adc ds xchg add (bad) test call outsb ret adc outsl fwait push xchg es mov movl lahf lds cwtl sbb xchg push xchg js sbb das movsb dec scas xchg mov dec out je (bad) cli and add jae pop jle aaa mov add into insl adc sbb dec enter call jmp fs adc push lcall jno pop mov shrb mov dec sub outsb xchg rorl pop pop dec fs lret mov test inc and xchg ret jle adc xchg and jmp (bad) (bad) mov sub les daa in xchg push lahf outsl pop sbb ds cwtl inc push and cmp (bad) ja mov clc mov adc leave stc outsb dec imul xchg push inc xchg mov sbb adc adc sarb sbb aam and jge xchg mov add adc loope nop fidivrl sbb dec imulb push xor jnp clc mov mov lods mov push mov test notl repz shrb movsb jb push mov pop cltd fisttp fwait test push pop bound cmp cmp inc notw dec cs repnz or add mov call and movsl repz sub ss pop lcall mov mov pop cmp xchg inc xchg cmp xchg sti bound std dec roll cwtl add fwait mov mov cmpsb enter cltd cmpxchg std mov sbb lcall dec fs in loope or xor push sbb sbb out out pop outsb sub int3 (bad) pop jne outsl push add or punpckhbw fwait (bad) jns addr16 sbb mov insb lods sub nop add or push fcmovnbe cmpsl insb lret mov imul pop inc sub cmpb insl in das adc mov in mov jp mov out sub mov fisttpll stos mov frstor scas xchg lods (bad) adc mov jmp repnz cmpsl test stos xor pop mov push push cmpsb cmpl mov data16 pop mov ficoml add mov out xchg loop cltd and sar sahf lods ror dec ret out scas pusha xor hlt mov imul cmp test mov movsb bound inc xor ret add xchg sub inc xchg es add enter inc sub mov movsl dec aam jns lods test sub frstor scas fs jmp xlat sbb cmc decl fisubl mov cli push ficompl sub bound insl inc push adc dec popf pop jns lea in sub mov jo subl cmp adc lea outsl aaa add inc dec cmc pop add add sti sub imulb cld add cmpsl sarl sbb jp movsl pop sbb popf cmc push xor dec xor gs mov movsb jo pop push dec xor inc inc or and xor pop inc insl lock inc push adc mov mov je hlt xchg lods or adc mov repz fstpl adc mov (bad) mov std divl ffreep mov repz sub push jg dec mov adc and inc push jp int3 fildll pop test mov out xor or push fnstsw or sbb pop sar dec adc push (bad) push mov sbb jmp cmpsb sahf mov lret mov popf jnp (bad) xchg jae bnd lret repnz dec sub or (bad) lods nop ljmp clc dec push mov pop fs push push mov or sub push rolb in jge fimull outsb dec enter push add dec sbb mov pop or sbb dec xor push test or pop jo call fs dec mov mov (bad) lcall int3 negb mov test jl push cmp aaa xlat testb ja test adc or orl outsb dec lods pop lock cmp sti add or or test mov (bad) daa push dec jl fs decl lds mov and icebp jb inc push pop or aas cli sub cltd fwait and mov arpl add ficompl push mov or mov lret faddl in push pop xchg sbb pop xor (bad) mov stos push dec lods mov mov sub data16 jge out lock jge dec (bad) cmc scas les push (bad) popf into in lods and fwait js data16 or sbb add jmp inc xor loope insl cmp roll imul adc arpl fldenv sub jns das xchg sbb mov or or inc fstpl xchg jns in dec out xchg mov xchg cmp movsl das mov in int3 or clc in aas cltd fistpl mov sbb icebp lea fildll out jo (bad) lea push adc pop movsl mov sbb je cwtl lret mov int cwtl dec xchg jecxz or jge sub push jns xchg roll push dec notb sub out jnp pop nop xchg jno scas fdiv insb out jp mov xlat inc call sub mov inc (bad) scas sbb andl cmc sbb js mov das jns push xchg (bad) inc xlat outsb sahf outsl mov mov dec loope fs mov xchg pushf (bad) daa xor sbb shl xchg push and push sbb adc dec pop pop aam sbb icebp cmc andl dec pop sbb out xor arpl xchg dec (bad) mov sbb xchg lods mov test nop out push sub inc or addl jmp dec adc fidiv test push scas cs gs adc insl gs mov scas mov ss ljmp (bad) imul mov ds mov pop dec add (bad) out fimul (bad) cld (bad) or xor or push out dec add jno loopne test lds scas (bad) jge aad out sub and mov mov xor mov cmp and arpl and mov sahf xor (bad) int3 fwait outsb cmc std add pop push push jge repnz out dec icebp lods sub mov (bad) mov and pushf bound jl int pop or lea pusha imul sub inc inc data16 xchg sub sets mov add nop jnp mov sbb add mov sub int3 sbb jg test mov sub (bad) xchg jmp scas subb jne hlt inc xchg inc pushaw icebp jnp jae dec jnp fs adcl push jl fidivrl xchg mov insl mov icebp cmp and pop ja fimul cmp test (bad) jmp inc pop xchg insl int3 sbb (bad) xor xlat jge mov xor jmp cmp pop cs push loopne sbb mov test fcoms xchg adc push arpl sbb and aad sbb xchg clc jno xor xlat dec jb mov lea mov lret push and (bad) cmp dec (bad) ret push mov sbb sbb das aaa jp imul sbb aas je stc pop (bad) push pop xchg mov insb icebp ret pop pop jbe enter sbb rcrl pop out cltd cmp push es out xor scas adc push (bad) pop leave test push add and insl roll or jecxz std (bad) test push testl jmp xchg mov (bad) mov xchg lahf jecxz gs sbb xchg ja insl popa adc jmp or out sbb add (bad) push xchg adc in sbb lods gs in lods inc lds mov xor jae jmp xchg stc jg,pn out sbb out mov rorb std pop and insl pushf pop scas outsb mov pop push movsb les mov mov stos xor xchg mov outsl loopne add or add addr16 (bad) sbbl leave or test loop mov mov std in pop inc arpl sub loopne pop outsl cmp lods mov je lock jmp pop les test imul pop push int3 cld sahf repnz xchg je ja cld shld pushf mov mov loop mov inc sbb iret stos pop cmp mov iret sub int3 xchg sbb cwtl js lock std test into lods (bad) pop mov xchg mov lods mov insl stc das or sahf pop repz mov in lahf leave push call jnp cmp add xor fs add jecxz push out lds pop fimull lods daa adc in jp scas mov int3 lcall jb imul add loope xchg cltd inc dec (bad) xlat add leave cli test ret inc adc lods inc daa pop shll lods scas mov int movsl pop loope test js orb das xchg sbb fdivr mov into sub push mov mov push repnz adc jl xchg fucom inc inc out xchg repz mov sub lea in test xor in je jl lahf aas icebp inc adc adc das lock es adc push js push or mov xchg pop out hlt ds (bad) test cltd pop stc inc out fiadd out adc mov sub or test lret ss scas and sbb clc xor jbe xchg push push xchg outsl (bad) stos fildl loope mov jmp shll adc mov andb int3 mov leave cwtl sbb push mov jp insb xor jbe cld mov popf das fs cmp ja dec cmp mov test adc and out test push mov and sbb xchg mov loop mov xor icebp adc loopne lock cmp lds lret in or mov mov hlt push jno xchg fldl pop push orl mov ret push xchg jbe mov stos and inc lods add pop mov shrl xlat addr16 jmp jo insl mov adc into or clc stos cwtl jp in ficoml xchg sub or jmp mov flds xor pop (bad) mov push sbb (bad) xor emms jne push jg jno lock sub les sub cld sbb mov pop jb inc pop js lret lds cmp xchg (bad) mov fisubr mov imul cmp cltd pop sub push add xor and (bad) mov inc mov leave outsb (bad) scas fildl enter fwait mov sahf dec adc xor fwait sti in je ljmp pop data16 adc mov fdivp loopne inc and cmpsl add mov ljmp lock std cmp daa fmuls xor cmpsb shrb jp notl adc in scas mov in xor jnp jb and aam into out dec sbb clc push out (bad) scas inc xor int3 cmp arpl dec pop call push push pop push imul xchg or inc pusha aam cwtl fs lret dec lods insl push lahf sbb call fbstp jmp ss dec push pop (bad) clc mov rcrb mov inc mov sub lods jmp mov add adc inc or int xchg loope inc (bad) pop loop dec sbb xchg pop outsl mov lret lods lcall xchg jge aas rcr fldl lret mov test inc addr16 faddl dec dec cwtl push xor push in add pop adc push mov add dec jge mov jle sub mov scas out mov in and imul adc push jmp push aas scas sbb mov or pop mov out and add xchg inc cmpsb mov jae push mov cmp pop mov test pop movsl loope lret adc fwait or dec dec and add inc std gs iret gs idiv test mov pop les mov insb das shlb adc test aaa outsb inc xchg cmp aas (bad) cmp loope scas (bad) xchg roll jns repnz movsl ljmp pop push xchg in dec roll xchg shrb add sub jnp cltd ficom jge movsl aas sub lock mov out pop mov jnp cmp jecxz ja lcall in mov mov jns (bad) or mov cltd popa lods and lds push push scas (bad) jl mov sub das fucomip sbb movsb push lock rcrl dec rclb xchg xor mov rcrl test in movsb repz mov or pop pop sahf sti mov pop and outsb sbb pop push xchg ja pop fwait xchg ss out inc hlt sub leave cltd mov ficomp sub adc sbb jb test (bad) scas pop out push add jg push jbe sub jmp cmp lahf mov fild cwtl xchg push xchg ret loopne mov fldl les dec imul or pop inc push mov aas dec in add daa mov sahf sbb outsb jg push jg mov jge mov lret and insb dec add dec lds lock or pop push shrb leave adc imul rorb imul inc vcvtss2si cld pop enter pop dec lahf pop (bad) or xor lret sar imul icebp popf addr16 xchg test sbb jmp cmpsb mov divl lsl mov lods mov mov sahf mov movsl pushf sbb (bad) fs xchg cltd jnp iret pusha jae out mov xchg and das add shrl mov sbb jp pop fcompl xor pop push add sti xchg sub popf cmp lds inc test pop jne jmp lret mov sub nop es arpl sbb data16 out or xor mov mov roll xchg enter mov xchg and rol xchg inc xor adc pusha nop stos ja lahf adc jle xor jno imul xchg or sbb stos jg arpl sub les lret jb mov push mov add dec jbe repz outsl aad insb push out test xlat cmc mov mov sti imul (bad) jmp sti fsubrl scas cmpsl test cmc ss adc mov add mov arpl xor das jae sub dec xor or sub int3 add inc mov hlt xchg mov or loope mov aam lods jne aam add xor push fildll or adc mov in (bad) sub mov jae repnz jno js xor sub ljmp push int3 add push or jnp pcmpgtd hlt add insl ficomp aas subl out mov popa push outsl mov aam jg sbb mov in aaa jne,pt mov dec jmp xchg adc dec mov mov xor xchg cmc incl lcall insl in out ja xor or push jne inc sub sub add mov or sbb lahf loop fidivr cmpsl movb mov xchg addr16 in inc push ljmp mov xchg mov dec mov sbb std lods scas sbb icebp dec mov fsubp mov sub adc pop incl mov test std pushl cmp leave cmp call sub pop dec int3 gs and jns insl push pushf pop insl test (bad) xchg in ljmp sub inc push push ds pop inc push cmpsl xchg sub movsb xor cs addr16 ret in pusha popf sub addr16 lds insl sub out in push shr nop mov dec dec adc loop pusha pop fistp pop movsb ljmp add aam leave imulb xchg adc std cmp inc dec ret cmp stos mov aas insb call fwait dec and popf out in mov test xchg mov jb mov adc mov scas (bad) in or adc outsb pushf mov add mov xchg jle lahf arpl mov jmp pop push add mov jge inc dec pop lcall aam test mov lds add das repz inc push and daa jecxz aas jno cmp push pop in dec mov loopne inc mov enter lret ss pop xor mov mov stc mov sahf ds inc shll out xchg cmp add lock in ja mov mov sbb inc lods fwait lds jecxz out sub adc or inc addb xchg inc ja lret das xchg fs xor inc pushf jge data16 lods into inc jmp lcall push xchg std mov add rolb cmpsl pop clc mov sub mov pop or mov dec mov insl adc xchg fisttp std daa or xchg or mov movsb in push lods fildl std cli cs mov push in adc sub (bad) dec pop popf shr ja and inc loop cmp cmpsb cvtpi2ps push jns dec dec out mov inc jne inc dec lds jg pop pop dec ret sub sbb dec mov pop pushf mov mov hlt mov or cmpsl scas jmp xor mov mov push test data16 pushf outsl fnop jp pop popa dec hlt fistl cmp mov push ja xor mov jp pop sbbl cmpsb adc mov (bad) fcmovbe jmpw out scas dec lds mov push cld sbb fidivrl sub xor xchg pop mov lock cwtl adc das lods outsl sub pop arpl add outsb scas aas cwtl dec ret push loop inc popa adc pop ret ds iret jg test das stc mov xor (bad) out adc xchg push add addr16 cwtl dec ljmp in dec xor cmc ret adc insb mov test add lods (bad) fmulp popf das call push and sahf push dec cmp jns xor test xor xchg lods cmp xchg imul outsl imul fcos (bad) cld add in cmp in cmp pop pop pop jle xchg arpl lock imul pushf dec in ss repnz adc dec xchg dec xchg (bad) jnp clc dec repnz test (bad) xor and sbb loop stc pop in mov incl mov jae adc ja (bad) push pop cmpsb bound dec std testl fisttpl xchg loope mov shr popf test or cmpsl adc pop dec and cs inc xchg leave stos cmp loop jns pop inc jmp pop xchg (bad) lods mov movsl pop sub and fs sbb subl ret sarl inc sbb (bad) test inc roll (bad) int3 inc cmp das stc sub jg or ds out pop jo cld or dec jmp cmc cmp mov xchg dec xchg xchg mov test insl mov fs insl push cmp or les add push sub xor sahf lock lret push gs gs add and arpl mov cmpsb push idivb lret (bad) stos jns inc jbe imul pop decl cmp out push rcrl and or add ret pop xchg fnstenv int3 lods bnd dec (bad) xchg subl mov and xor or scas int3 lret fdivrp jmp in mov and dec nop fldl loopne loop sub dec imul xor jae leave ret add jne iret lret adc test sub (bad) mov lret push add sub js shrl sbb stos daa dec sbb mov mov lock test addl push outsb not add sbb jno jmp xchg sbb jne jbe jb sbb sbb push out sahf dec jl mov imul mov arpl inc add inc aad cld sub out sbb icebp dec out and pop lods ljmp pop jp out push out cmp jge int3 or fcmove cmc fbstp fwait lods adc xchg in enter (bad) sar and pop sub leave add fisub addr16 loope mov fs xchg sub js dec pushf push aaa rcl jnp or movsl sub pop jae adc lods ds scas ret xchg push jp mov pop add imul mov pushl imul call test gs xchg sbb cld (bad) jo sbb adc adc jae jnp pop xchg dec (bad) fist or pop mov (bad) in xchg aas jo insl xlat lods cltd push and out sbb enter fwait in cmp pop xor jne nop aad dec and and xor jge push adc jl fdivrs js test cmp xchg cmp inc ljmp rclb sub fs fs push jnp out ljmp xor out cmpsb fcmovbe dec stos adc jbe fstps sub loop ficoml mov mov adc inc jne add add pop mov outsl sub cmpsl inc ss lea jl inc ss in sbb cmp icebp jne hlt leave cmp loop pop in (bad) sbb mov gs push and mov clc subb sub aaa jmp jge sub repnz mov data16 pop test xchg sub insb jns (bad) mov mov in sbb and and xchg cmp mov push mov push std rolb or mov sti pop dec xchg mov call in xchg mov addr16 pop and test jb cmp jp,pt xchg cmp sbb lds add int sub ss push push mov test inc dec bound in pop jl icebp cltd dec call in lock push push xor dec in pushf into mov scas push lds xchg out aaa hlt stos fldl cld in ret shrb mov or das and add and stc xlat les cli or push es sub xchg imul xchg js test mov mov pop mov push push jo xor out inc jecxz pop push jmp dec dec mov (bad) xor lea xchg fnop ss mov dec dec (bad) js in sub cmp or int3 das pop adc je mov stc out adc (bad) xchg mov and scas jle cs dec jg fwait inc movsl test stos pop (bad) popf sbb adc push int out out cmc shrb push add pop scas pop jge mov mov sub xchg and inc loope add sub out xchg lods cmp mov fsubr mov outsb pop cmp sti popf jo mov aad (bad) aam lret pop xchg popa dec scas push in sub push in push out cmp cmpsb ljmp lret add pusha arpl inc push aad sub xor scas dec out movsbl xchg fistl dec (bad) ficompl leave add in mov cmp sub xchg mov lcall arpl jmp xchg out aas jb fwait inc mov push mov and push cmp cwtl sbb out jnp pop stos lds dec and (bad) jecxz mov out fcompl and push jg add bound dec jne mov ficomp ss mov push mov jns jo xor push dec adc fnsave (bad) gs test imul rcrb mov mov and and mov sub cmpsl add fldcw mov and sub pop pusha rcl cs xchg into cmp push les dec jae jge pop js enter pushf insl popa fstl ljmp test popa (bad) dec test xchg int lds sub dec pop test jge pushf fbld jne push mov xor enter std add je sub fsts test cmp cltd (bad) pushl push decl dec pop scas push cmp aad ja push (bad) dec pop jmp lea pop js inc cmpsl aaa test clc lods lret aaa imul les (bad) adc es pop and lds call push or rcrb das ss pop repz cmc xor fsubl sbb pop add mov test cmp inc insl xchg dec pop mov movsl lret es dec jnp pop fnop pop and hlt push pop neg cmp cmpsb mov aas dec das pop sbb jg jecxz addb or mov cmp jnp push outsb mov imul scas jge inc imul lods push lcall pushf es sbb cwtl cmc lods ljmp and idivl sbb push push mov fildl xor les jl rolb (bad) out jne (bad) cltd (bad) mov out out push repnz xor xor (bad) mov pop pop pop push data16 cmp gs mov aaa mov mov shr push loope les mov mov je fmul push mov inc sbb xchg push mov adc push loope xchg int cmp stc in pop jge sub out cmp or cmpsl add andl xor shrl cmp push cmc cmp and in (bad) call popa xor (bad) imul fwait imul enter adc push scas mov aas (bad) loope dec rclb pop verw loop call mov jecxz adc cs pop in bound push stos pop cltd or and pop popa outsb test inc int and inc loope daa sub sbbl imul push cmp arpl mov xchg jmp and fldl sub push aad test cmp out addl push sub and inc mov cmp ds jmp or fcom mov sub sbb cs scas push and std icebp mov pusha ljmp push xor sbb lods test inc dec push xchg xor popf insl dec add dec and (bad) mov fbstp (bad) scas dec popf xor and lcall fidivl aas pushf cli aam add sub sarb test fist scas cs and push fiaddl mov mov outsb loop fiaddl jno lahf ljmp js aas and out cmp pop fcmovbe mov inc inc jae sub xor imul inc inc stos add cmpsl out pop jnp jecxz lds cmp inc adc jmp orl cltd pushf push in cmp iret pop lea out xchg neg sbb mov adc or and (bad) jle jnp aaa dec popa adc xchg in fs in (bad) stc fildl sub xor out pop (bad) xor scas cs int jl adc popf mov xchg loope xor pop addr16 push data16 test cmp push push sti gs (bad) push test bound lock out push add xor popw cmp xor rcrb enter pushf addr16 fdivrs or js jecxz,pt popf popf sub int push pinsrw inc in xor dec dec sub mov lods (bad) (bad) int jmp mov (bad) stc rcrl mov sbb sti out mov outsl (bad) fscale xchg shr push or dec cld and loopne insb fs mov repnz out (bad) mov sbb sub gs lahf cli jl cwtl cs lcall and xchg cmp jl and cmp mov and push mov push push out adc ds adc adc mov repnz push mov fs rcll add add add in adc loopne xor inc xchg enter mov push cmp ret gs cs push xor inc jmp mov xor (bad) xor out adc pop dec je call stos mov xor aaa mov or lret cmp in xchg in enter (bad) xlat mov push or cs lcall out fcomps inc cmp pop out pop shr scas xchg push add aad pop inc inc outsl xchg (bad) sub mov stos in cmp push loope scas sti ret scas in jne mov mov mov das xchg jp std mov mov lret rcrb (bad) jb sub sbb stc pop adc inc ret inc std imul cmp xchg mov (bad) jmp lret push inc xchg movsl mov test test adc aam pusha jle xchg aas das movsb add jne jbe and (bad) mov or mov pop fstpl pop pop jmp cmp push push lea mov sbb push lret dec std std inc adc xchg dec insl xlat fiadd sub dec ret test jg pop out lcall (bad) mov pop mov jbe cwtl dec cltd xchg fwait sbb das pop jmp lret in pop in rol nop adc outsb xchg mov rol dec push out lcall cmp aaa jbe sbb jnp ss sub or ds xchg dec pop mov out sub imul stc faddl dec mov xor outsb jbe mov outsb mov hlt dec push mov fcomip xchg lcall xor out subb sti xor xchg gs mov sbb dec mov push popl repnz adc mov xchg dec aas inc (bad) adc cmp mov sbb lret iret imul dec scas enter and or insb nop mov or xchg xchg aad inc xor test es insb adc cmp inc in imul dec lea dec int cmc dec adc sub cmpsb out js sbb loopne and fcmove ret das add mov xor jp sub in xchg inc out aam dec mov push xchg inc and aad (bad) icebp lods shr fidiv icebp mov xor icebp jle cwtl (bad) sub pop jo adc sub arpl stos adc jg mov (bad) ds inc pushf sti test call xor int3 cltd ficomp and insl subb pop jmp (bad) hlt test popf mov inc pop std scas fsubl add call dec xchg push xor push or push sub and or ret std mov lcall imull cmp aas popa das xor push cli nop lods imul in push xchg adc cltd lret adc xor sahf xchg out mov daa adc mov roll pop pop add repz push mov aam loope sbb sbb sub mov addw ret cli pusha dec cmpsb xchg or arpl dec add and jp in mov sbb cli sahf out loopne xchg out mov fucomp sub into jno push in test mov rorb mov mov test cmp mov fildl mov push and push adc rep inc loope cld xor add pop cmp pop lods mov inc call cmpsl inc lods pop cmc xchg ror xor add call loopne dec lock aas cmp push test dec lods arpl ss jg push gs lahf fbld sahf mov adc mov mov bound idivl sbb popa inc mov rorl pop mov inc fcomps mov (bad) call mov mov sbb jg cmpb mov stos es out out pop lea cmp sub pop pop in testl outsl imul out push push or mov ret xchg push outsl lods icebp mov cmp aam and ficomp fcom ret lahf sbb sbb ss in lods in jbe jae pop push gs bound ret jo test ljmp imul push test ljmp daa ljmp (bad) mov pop pop mov idivl mov lods (bad) rorb les addl xor add insb mov imul pushf push pop sahf pop jo mov lea loope push arpl movsb int3 in test in popf cs jg lret rcr scas out loop mov and imul cmc loope pop push mov sbb dec sahf arpl mov or (bad) jbe out addr16 fnstcw stos push jmp (bad) lret sub cmp aaa adc out or add insb fs iret ja (bad) int adc adcl jecxz ret pop cmp je mov cmpsl jmp mov cmp dec or rcll enter loop sbb orl insl xchg rol xchg cmp cmp push shrl imul jge mov push mov test loopne mov mov cmp pop hlt mov in inc add mov iret inc inc test mov lret pop fimul and addr16 or into mov xor jae sub (bad) enter das call inc jmp xchg aam das cld mov adc je or es jns inc enter dec sbb mov cmp mov xor (bad) xor xchg mov insl fwait int fcmovne or pop fldl xor lahf out scas mov nop test sbb (bad) mov (bad) imul fcmove leave add cmpb and push add gs (bad) out sbb push insb sahf in lods pop pop dec mov int3 sti jo stc jnp pop in repnz cli (bad) fs push shrl inc mov fimull ud1 daa sbb mov add push loop (bad) das add pop xchg in pop cmp aas sub arpl add ljmp mov fs (bad) sbb cmp mov pop add xchg cmc cmc mov sar jg pop arpl int3 addr16 mov or xlat xchg aas test jle pop push cmp push int3 popa test scas outsb sahf lret push fimull sub ljmp sti pop in dec fs std adc movsl sbb outsb xchg sub mov dec and pop jne out cmp lods mov push push pop pop xor pop mov jnp insb movsb inc fist cli dec cltd inc loope std out and dec mov sbb push jmp and scas push fimul add xor pop mov jl nop xor mov mov jae mov out push or cmp mov inc pop and mov out sub mov inc xchg pop mov jp add adc add les inc fwait mov movsw fbld jmp ss push fidivl popf push addr16 pop enter mov sbb (bad) dec sbb push outsl xchg mov int3 iret sbb or adc sub ficoml out popf pop (bad) cwtl adc cltd push cs int3 push out push jnp sbb stos jp es nop es jo and mov inc lret push jne mov test lahf add stos xchg lods mov push data16 or inc call enter movsl add dec sub cwtl mov lods lahf mov aas in fwait out insl insb sbb xor add in push std addr16 mov and xorl xchg iret sbb pop clc push push sub mov arpl scas push add push lret push mov push lret int3 pop fmull pop cld mov clc in sbbl xchg sub aas icebp pop sub push mov out dec xlat fs stc jl and int enter push gs sub int3 in or xchg ficompl pop cld mov mov insl inc or fprem1 pop out mov lea std icebp adc inc out and dec add jne std lea push daa xchg out push dec in jae jnp out loop lods popa ja (bad) adc loop data16 test mov inc scas or decb addr16 lret mov leave pop jmp mov lcall pop aas xor sub stos pop xor lds cmc mov test and or jge xchg sub adc stos cmpsl sbb xchg sahf rorb lea mov (bad) movsb xor jg pop inc fmull push pop jecxz xor popa jle push push sbb ss pop cmp bound cmp adc ret xor mov push xchg nop jge sbb pop loope sti sub daa (bad) in loopne cltd jecxz dec sbb cmpsb add and xchg int3 ds pop scas or cli leave lret repz sub icebp sub lods ret fstl sbb pop std hlt sub ds cmp mov iret push loope in gs sahf mov mov dec dec dec xchg outsl cmc cltd fldt mov push clc out ficoml in add out dec pop lods aad repz sbb sbb and or push pop mov and xor aam jo inc lock aad or test loope cmp popa das enter shr sub xor adc mov sub jae mov mov push jno xchg push xchg sbb add lods sbb fsubrl stos (bad) je adc incl test ja loop push fildll inc enter arpl dec fwait (bad) int xor test testl jg int3 and pop pop mov fmuls arpl lock push add cmp dec jmp insb pop popf xor mov sub adc imulb movsb pop mov ljmp sub lret xchg bound mov js pop sub push adc adc inc cmp (bad) xchg nop pop mov sub cmp out pop fbstp sub pop lds scas sbbb imul lcall ret push aad jg aad jb orl push in jno lods popf pop add enter jge mov jmp popf jae aad push test inc nop dec lea ret mov and mov notl test out stc inc or je in lcall repz arpl push enter mov pop xor mov inc cmp mov pop mov lods iret push push fildll mov test lret cmp aaa jbe repz mov in inc add sub out movsl hlt mov add dec cmpsb jp push int sub (bad) movsl mov lcall jp xchg dec loope cmp or jp mov lods sbb mov push fcompl mov mov int3 inc pop add cli aas js push cld add push cmp sbb jg mov cmp mov out lret xchg dec lea fmuls lods push xor push (bad) sbb xchg push xor jl add aad inc add fwait push jcxz jo push push stc divb mov xchg inc dec (bad) cmpsb hlt pop ret icebp and std outsb xor imul (bad) into sbb sub mov jne popf xchg je out xor cmp lods adc movl scas addr16 xchg repnz sub loop js xor (bad) mov xchg sbb daa and pop mov inc sbb int sbb sbb scas test pop loopne sahf cmp cs push sub data16 sti pop fsubrs cs jle sahf fnstcw push cmc dec fcompl sub aaa cmp push adc (bad) mov ja jmp jne loop cmpsb sbb lcall sbb hlt adc push jl pop pop cmc xchg lods jecxz ret (bad) or in adc ds mov pushf fwait inc push lahf pop cld in popf mov cli in jo jl dec (bad) mov icebp mov or sarl inc and daa sbb jb pop and outsl mov sbb inc ds dec adc or std pop inc mov es loope add aad inc sub neg outsb mov pop std jbe xor cmp adc push repz sbb cmp or mov adc ret mov aaa cmp push imul add cmpsb xchg sub pop pop jl xor cmp fdivrl lret mov test xchg xlat cmp lods jge adc or jo (bad) adc adc push std shl pop loopne in adc sti jl xchg cmpsb (bad) ljmp or movsb inc jg cmpsl sub das cmp cwtl or mov stc push clc sbb dec xchg and push jle xchg shrb in std adc out stos lods dec ljmp adc jbe and jmp cmp mov or and js aad sbb test add adc loope stc xor add lahf xor aam or sub cmpsb mov jl xchg sbb mov pop push push test fiaddl sbb push jmp pusha inc sbb out out cmp call es cli cmpsb xchg rcr sbb mov daa imul xchg jo and mov cmp jecxz cli xchg add xchg lcall fnsave aam fldt inc out xchg fnsave or insl adc add dec adc xor icebp in dec push mov imul sbb outsb bound cmp in jns,pn push les dec es pusha loop scas sbb gs aam sub pop jl inc imul int3 fs adc imul jb aam das or dec addr16 int3 and sti jmp push pusha imul jp lods push mov add scas enter lret dec lcall ds sub mov xorl or sub (bad) jne (bad) divb hlt push out das lret scas fwait and (bad) call hlt test cwtl cmp outsb xchg lea pop adc pop xchg pop gs arpl popw xor pop cmpsb hlt out std sub in mov mov inc lods stos add add jle gs sahf mov test jp jg scas fbld mov out mov clc jno faddp repz lea mov fwait test xchg inc loop hlt out dec pop mov clc or mov scas push sbb daa inc std aad hlt nop arpl daa movsl or lods mov jge xchg or push ljmp rcrb push ds xor (bad) pop cmp sub pop div lret in enter inc in int3 pop fisub pop notb adc cmc jg lahf and or out mov test mov scas into jg pop mov mov adc and ljmp mov dec mov lods xchg push push and hlt push push popa mov ljmp inc out pop or dec sbb mov mov enter int mov adc mov xchg insl fdivl shll sbb inc ljmp (bad) push xchg sti int movl dec add leave jg jbe clc adc inc add jmp inc or pop sbb idivl cmpsb ret sbb cmp cmp or insb mov mov daa std adc dec push mov (bad) repz arpl repz or shll out test add mov pop fldl call rorl adc and out dec aad cmp shll outsl xchg int int je or fldl push and sti dec in (bad) lods lcall jle loopne iret jg jg hlt sub sarb int3 add aas enter mov arpl js mov add in pop aas imul mov adc xchg (bad) push cmpsb or mov add not clc stc xchg ret (bad) xlat adc mov outsb orl mov inc and (bad) cli mov pop add push sub and (bad) inc cs cli pop fnstenv and cli clc fistpll pop adc cs pop pushf adc std arpl and inc pushl les xchg cmp jecxz pop sub push inc in enter mov lcall xchg and leave leave ret ficompl enter jbe loope cmp dec sub clc xchg daa in sub jmp sub test in je call jnp and repnz xchg roll rep incl cmp (bad) mov push rol and sub into sti mov hlt sub mov inc mov push stc xchg (bad) adc std das das dec push aaa xor outsl pop inc enter outsb decb dec dec sub imul sbb fistpl stos adc pop repnz jmp inc lcall xor xchg jg sbb ds insl mov es adc pop enter xchg loope push leave fidiv adc addr16 imul sti bound push add pusha insb aad xchg jb xlat enter neg jno lock jb popf cwtl xchg rcl (bad) cmp xor scas dec fldln2 jno test into cmp test xchg loopne mov pusha cmpsb movsl add xor lret mov aam in and (bad) out (bad) aad xchg push mov fwait xchg mov rcll xchg jno sbb dec stos jnp gs jbe pushf repnz insl adc adc in pop fstps push lock mov xor and call pop (bad) loop stos movsb jge gs cmpsl mov push xchg dec icebp jecxz outsb in lds xor dec sbbl das lahf out mov add jb imul xchg outsb xchg push xchg lock (bad) cmpsl std cld test in xchg popf xor inc fst add pop mov into data16 jnp push prefetch arpl or push sbb test icebp stc xchg xor out xor std pop out add sbb push push mov mov dec pop sub mov and jg jnp pop or lods jge cs sbb add into pop aas jge and cli daa ret push in sub dec (bad) stc stos pop push les sub pop dec pop mov fsubs stos dec mov in jo clc cmp imul dec ljmp insl push cld jne mov push aas outsb aad (bad) sbb fdivrl addl push jecxz cltd mov push test push cmpsb mov sub cmp push jnp lret int loope mov aas stc clc sbb stc add inc xor inc repz aad stos mov jp pushf cmp inc test (bad) mov out jbe fistp loope cmpsl into stc lds cld das lods test aaa mov adcl pop jnp xchg push cltd in pusha stos jg movb sar insb ror jmp std pop push movsl in fisttp or push push xchg call or (bad) cmp cmp imul mov push jmp cli mov add jge std xchg dec pop jl push lcall mov and aaa cmpl (bad) push and pop jno cmc dec xchg cltd jg push data16 rorl add bnd adc jb fnstsw int3 (bad) repz test push imul pop mov jge adc scas stos sbb push repz lods pop push mov (bad) jecxz xlat jae sbb add push mov cmpsl jge sub sbb iret (bad) or xchg incl push decl lds lahf inc test daa dec gs xor lea std xor cmp (bad) dec mov push out xor sub ja jno add jle ljmp mov sti cmpsb push out ljmp pushf jecxz dec push or loopne lock mov mov inc jge (bad) rcl les enter xchg push stos jbe sti jo sbb into cmpsl pop rol mov outsb fs test fldl jp aam cwtl dec push pop ja stos sbb push bound xchg push jns pop popf jecxz or sbb loop xchg lods xchg cmp push adc in sub mov lcall hlt or jns push movsl inc mov sbb xlat add mov popa fldl2e loopne imul or jbe (bad) mov hlt fadd iret inc imul or int3 popa repz mov out stos sub add sub (bad) repz cmp movsl fnop xchg loop,pn sub and pop and dec loope cmp lahf pop mov bound and or icebp (bad) clc xchg int3 sbb lahf test in pop test in jl movsb inc or add out and mov js pop dec idiv adc jecxz ds out push push jle hlt int3 cli sti leave add (bad) xchg xchg mov push sub jl sti ret aad push xor cs aas cltd dec scas xchg xor popf ret pop jmp mov test (bad) fild xlat jl push (bad) in jnp sahf popa cltd test cmp jmp fsubp sub lret or imul xchg int3 or cmp (bad) push loopne fwait lahf dec mov aas xor pop repz jg mov dec out xor cli mov std iret adc dec test or adc sub ljmp push pop or int sti push fsts scas rorl add and fimull bound enter xchg rorb add jecxz xchg lods mov cs xchg add sbb or cmc pop adc scas inc mov jecxz lods das mov fisubr jp insl xor js mov add push sub sbb add sub mov (bad) (bad) mov iret jg dec lods sbb movsl sahf mov sbb xor call pop int3 (bad) (bad) lea lret pop or in and jne pop pusha push incb jg,pn scas or pop jp jge or rcrl inc movsb xchg (bad) ljmp gs or push sarl push out pusha mov push dec pop sbb orb test imul sbb retw outsb loope scas pushf or xchg in hlt sbb fwait test jno sti popl cs mov nop jno int3 es nop xchg mov fxch xchg scas push pop xchg cli repnz insl lcall iret (bad) data16 jl jge icebp push cli lret add sub and jle subl pusha mov inc add xchg inc dec cli mov scas hlt gs pop gs push lock addr16 mov cld sbb loopne jns xchg (bad) add jecxz popf lahf pop ud1 out push sahf jo,pn mov mov xchg dec xchg push jns rcrb push push mov xor loopne or aad rolb mov movsl addr16 test aaa xor cs xchg stc stos ror mov stos jae mov mov pop leave outsb pop pop push cs fldcw lods test mov in iret push rolb cmp add sub fwait into xor inc ret pop push dec sbb mov test sbb sub dec mov mov inc xor xor mov inc jnp push push jg cmc bound and int3 xchg inc dec mov cmp sub pop adc in aam out mov sbb mov out jbe and ljmp jle push mov inc sarb lcall pop add mov movsb ret fild inc inc mov fsubrp std push jns imulb inc jb mov loope aad inc gs and cmp mov mov mov adc sub scas mov (bad) test jo lock add outsl xchg mov lods jmp sbb in cmp shll lahf mov mov xor mov pop data16 push call push jb add std imul out fwait push adc jo mov adc (bad) dec gs mov jb push jle cmp lods (bad) xchg push sti jmp push pop subl addr16 push push ret sbb inc inc mov in hlt mov stc sbb dec cmp inc addr16 pop jge das out (bad) xor xchg outsb jne push mov cmp adc xchg cmpsl xor test mov or add (bad) push xor pop (bad) sarb push pop inc (bad) cmp (bad) ror and jae pop outsb ljmp int (bad) fdivl inc mov dec imul push xchg mov ljmp xchg mov jmp (bad) fstpl jo push xchg push cmc jne test adc test cmp arpl nop push idivb incb mov aam and sbb cmpsb and inc jbe mov ja push add xlat jg or cli jmp jecxz and cmp (bad) pop outsb add push mov dec idivw jg mov xchg lret test push test sbb inc cmp rorb clc stos stos adc mov and push or cltd pop sub aaa out xchg or mov push add sbb mov lods insb mov scas in pushf pop in es jle sbb inc cmp jmp push sbb (bad) hlt push mov in push pop (bad) test push lcall leave cmp inc out (bad) mov jbe imul inc xchg sub xchg sub cld pop add dec pop inc (bad) mov cmp mov out clc aad mov jp gs pop mov fs add cld outsb push fdivs sub pop and cld fs lods jmp (bad) mov jne jo aam push push je daa aas add ljmp mov cs sbb dec jmp jmp ds data16 (bad) add fldl test and out inc inc (bad) cli xchg fucomi sub je push mov adc sbb mov mov mov mov mov out (bad) sub ja ja add je lds out cmp sti add add xor std ja lds dec jb sbb adc aad ja or push ds cmp lahf and shrb push push jmp jo les orl or repz (bad) fwait lds ret xchg sbb jae xchg add rol divb or xchg aad mov inc inc aas out mov push xchg ja in inc mov movsb push into push outsl mov gs mov and subl mov jae daa popa push dec loope roll int and cmp or push out out sbb fwait mov sbb dec jnp xchg mov fwait addr16 adc push jle jle pusha lock add inc dec jmp cli out cs or bound ds arpl subl fwait adc out pushf cmp mov pop mov imul inc push inc sbb (bad) in out aas enter xor mov decl adc in push jb les adc pop sti (bad) dec mov or dec (bad) aaa fs imul mov pop out push ja es pop mov dec in inc fisttpll rorb xlat int3 dec sbb cmp in repz dec cmp push outsl add jp leave cmpsb adc cli or mov sti mov out cltd push out jg inc fidivl inc call data16 jae jp (bad) mov sar jg ss xchg and lret ljmp hlt mov or clc xor test data16 movsb mov pop sub lcall out mov push imul jmp aam pop mov add stc sbb pop pop and jp cmpsl cmpsl sbb xor cs or cmp fwait hlt sahf inc imulb pop ja mov bound sbb mov xchg ss jns outsb adc adc inc outsl xor clc sub bound rcr jae stos adc cli (bad) jp and sub xchg pusha aam movb mov sar sarb dec mov out (bad) mov and in mov pop jp pop push push (bad) cmpsb sbb sti mov xor ret mov mov pop mov dec out jle push sbb inc sahf jmp out or jecxz icebp adc ret xchg lret xchg xor cwtl dec pop cmp mov and xor adc in push movsl (bad) xchg lahf xor hlt es push jmp ret lahf sbb into out pushf xor push in mov popf dec jl std jl fstp lods test push mov and pop mov cld or xchg into test rcrl add movsl or xchg lods in add jp nop orl (bad) pop sbb add adc dec sbb push out int3 xor mov dec sti mov ret xchg sub cmpsl in mov xor mov mov in push out sbb mov inc ds fsincos clc ret jecxz cmpb xchg mov scas xor scas lahf xor ror inc add std or mov push dec mov sahf dec sbb insb (bad) ljmp push jp,pt mov cmpsb nop mov jbe jmp sti push bound push mov ja ja cmpb adc jb jmp sahf cld (bad) and cld loopne cmc in fisubl cwtl push into push push or repz add (bad) sub or shl push cmp in ds jp inc pcmpgtw cmp fistpll cli or and lret adc test mov cmp jae mov addr16 clc repz inc stos or incl test mov and into out push pop aad fadds lea dec or ljmp mov fcmovu push movsb popf mov shr bound and mov jae cmp or adc outsl aaa pushf jo inc xchg or inc (bad) cld outsl jno xchg call les in aam sub stos ret outsl sar sbb xchg inc cwtl aad (bad) enter xchg cmpsl enter dec in xchg dec pop xchg ret popa test popa xor and cmp cmp dec stos jmp lea add mov mov popf or jne out add jge inc scas fnstsw scas sbb inc shl les xchg sub sub lock xlat jg mov jl lods adc arpl call insb mov imul out dec pop push xor stc test (bad) and (bad) add sahf sahf in sahf test jle mov push cwtl movsl mov push and ja or ffree and inc mov cmp es dec adc dec pop daa add inc scas out add pushf push negl movsl sub and mov xchg xchg xchg xchg test sub xchg icebp mov out pop pop mov mov in rorb add sbb adc addb jmp jns lahf popa xchg out dec rol ficompl es mov jp lcall or in roll in dec out xor xchg push add cmp lods lea jecxz cli pop jne sti mov adc js fdivs fwait jle into and pop mov test adc xchg fnstenv lods xor or inc fcomip fldcw or lds xor std mov mov das outsb cmp inc rorl movsl sub rcrb nop scas or mul jnp adc and (bad) mov into outsb ret sbb stc aas es std push (bad) into in sbb int3 (bad) xor sub push int xor cmp inc pusha out out xchg jl leave cmp les clc inc sub jp (bad) rcrb adc add fwait sbb das pop inc push fmul daa inc (bad) iret stos and (bad) or add xchg insl xor xlat dec shll popf hlt sub mov push sahf je sbb push stc ds daa adc test mov mov xchg scas ds enter xchg call in or lea outsb push lods dec xor add xchg inc js insl jno test jecxz sbb std fs pop pop jle insl imul dec popa out sub cli leave (bad) and xchg inc fwait inc clc mov add cmp adc imul stc mov call incb jmp insb or test push cmp outsl fwait inc arpl subl mov insb ljmp ret jnp pop addr16 mov mov outsl jmp out in add fbstp xchg mov push mov icebp es out lret movsl or fwait iret push cli dec jne daa stos lret sub dec cmc int jl mov das sti fadds inc in lods adc out mov int3 lret jns push das lret jl cmp pusha jmp jmp cmp inc lahf loope dec jo jecxz andl das shr cmc xchg lods push cmp popf movsb cmp inc loope dec cmp int3 pop sub nop inc mov (bad) dec addr16 adc fwait cltd push push sbbl push mov add frstor pusha arpl ljmp add push sub nop jle jo jae push addr16 hlt sub (bad) dec (bad) xchg inc jbe dec pop les jp stc jmp dec mov pusha fwait hlt in addl dec ja or xchg push lea test inc jp pop into sbb push cmp ss das sahf push cmpl mov jnp aad dec (bad) pusha mov mov xor sbb test cmp push (bad) mov (bad) ss test (bad) cmpsl out pop sbb cld cltd cmpsl test xor push cmp mov dec sub dec pop lods fimull jmp jmp lods mul add mov insb movsl dec lods arpl jle push mov repz cwtl dec mov (bad) popf add test xchg mov out shrl push repnz dec dec push sub or inc aaa cmp mov sbb out in add lret enter gs xchg sub pop jae mov inc stos cmp cmp pop movsb pop je in mov adc cmp pop cmp icebp jge adc ja sbbl enter sti add fimul cltd dec cmp mov push inc stos push mov shl push pop cmc pop cld cltd hlt pushf push aas out popf outsl (bad) mov out push movsl pop out pop movsl pop out or ds popf inc test rolb (bad) jle inc mov xchg int mov cmp outsb mov sub sub mov int insl pop movsb xchg pop aad stc inc xchg ret in push pop sti inc push push (bad) dec cmp xchg popl adc rcrl (bad) pop loopne clc jb sub insb sbb cmp cmpsb and out xchg jbe sub cmp mov xlat xchg mov imul pop popa stc mov push ja dec in push je add jb sub mov dec push mov cld jmp rcrl xor xchg mov stos add lods jle mov inc pop sub pop xor jge push add pop out stos mov pop imul sub xchg add lods test jae jl,pn faddl jmp xor cld pop imul (bad) test dec pusha inc popa push jl mov inc pop sub ss inc out sbb aas in add mov dec in pop dec dec dec push ds mov add rorl dec inc sub add sub mov gs mov addl lods leave std out pop mov mov or repnz lock test mov push ljmp jo add sub lahf clc mov mov xor sbb sub mov popl negb add clc lock aaa add sub or test pop loope inc dec enter mov in sub pop dec mov jle insb call mov mov xchg test loope add aam sbb popa pop es jp or mov fcompl adc test mov lock jge xchg int3 repz mov out cld xor dec aas pop enter shrb xor sub dec cmp cmp stc pop jmp nop cld scas arpl push imul mov mov (bad) xchg stos ljmp or jbe lret xchg std push sti cmp mov cmc jo clc cmc jp jle pop data16 push pop inc in cwtl aas lods push mov loope fcmovnbe jge mov or jecxz add addr16 or sti scas (bad) loopne data16 adc pop sbb xchg cmp xor cmpl pop jl lods fcomip mov mov push cmp repz cwtl mov cmp sarb jg int cld test ljmp xlat movsl test inc xor xlat mov cmp xor dec mov in mov xchg loope in cmp bnd sti mov call fdivrl hlt mov dec out mov cs xchg adc aaa mov (bad) ja cmp push inc test push pop (bad) std mov xchg mov testb cmp cld sbb xchg and xchg or mov mov jg pop mov jns fs mov sbb mov adc mov adc mov int cld add in or mov ret daa in test mov add negl dec and call jno inc fs pushf lret loopne lock dec repz (bad) std aaa addl pushf mov lods xchg xchg std adc push dec movsl (bad) ret pop mov xor pop xchg adc jecxz jae scas imul mov xchg iret xchg stos out fnop mov js xchg std xchg sahf (bad) lock cmpsl push nop stc stc test ret xor dec xor dec dec sbb repz stos adc sub enter jns lahf lods leave int mov insb push push xor mov jle inc sbb adc mov test cmp pushf loopne sahf push mov sub cmc (bad) xor cmp xchg fs cwtl sbb (bad) and mov jns mov dec test xor scas mov fild mov add dec ret cmpsb mov sub mov leave lret or insl std das pop xchg in imul xor adc bound cmp aam mov jo (bad) daa gs pop stos popa jge call outsb dec push outsl push jge sub pop ds imul add and arpl fstl sbb xchg sarl jge and dec (bad) pop aas cs adc push mov ljmp xor cmpsl and daa ret sahf jmp movsb and lds pop jecxz mov and dec and pop adc aad xlat ret cwtl (bad) mov daa sub cmpsl jecxz dec test sahf ljmp pop je dec ja jge xor dec mov loope clc das add push push test pop shrl jb jecxz dec jp sar popa dec xor jae mov imul in fisubr mov je adc xor xchg cmpsb nop das pop iret dec popa out subl mov out mov cli push add lret insb mov jecxz pop jb jg ficompl std push divl push (bad) dec and ljmp dec push sub sub ds inc mov idivb sub (bad) rolb jmp lods cld sbb mov push std in ret xor jmp xor out sbb loopne inc lods cmp push mov loop jle rolb into repz add inc mov adc pop jecxz push xor and dec loope fwait or jno es movsb out mov add cmp sbb imul pushf lods addr16 outsb test adc push sub mov std and test mov push mov mov pusha mov lahf cmc rorl mov xchg mov pop rcl lods lods sub lods xor cmp push hlt test dec or cmc cmp das inc ror lahf sbb cltd mov or adc addr16 xor imul pop mov outsb xor or and out das js lods dec iret jbe cmp inc imull lock (bad) or (bad) insb sbb leave dec (bad) pop adc sub call fldl fxch test push data16 jbe gs push loopne fs fs sub pop push std pop (bad) jmp rcrl adc cmp lea jl mov cmp js dec push and dec clc or push jnp add test push add adcl ss push jg dec movsb mov bound jno mov xor test daa add test pop add mov sarb push sarb rorb in mov fcomps cli mov int dec std sub and cmp insb stos stc xor push jmp outsl in sbb nop push imul aaa mov dec int jb inc es das fwait mov in inc mov out (bad) fistpll xchg cmp movsb into sub fwait push ljmp sub insb inc mov fcomp in or push xchg inc js scas push sbb push out jno pop outsl shrl pop dec xchg fsubs int3 movsl std inc cmp cmp mov xchg xor push xchg mov je mov pop pop sbb jp inc clc stos cli add das insb jmp je aam lret lahf mov sub loope add pop mov jp mov and sub adc dec fnstsw das inc loopne out imul data16 ret loope xor ret push push dec les scas jmp dec fmull mov pop data16 repz leave dec test xor and xchg pop movsl andl repnz test jl addr16 jb test dec fcmovb int xchg ja lret mov ds cwtl inc mov out adc addr16 les cld fldl jnp pusha fbld dec ss test cmp movsl faddl mov jno xor mov cmp clc shr sbb cmp lea into sbb ja push cmp dec fstps adc in outsl dec cltd inc fimul sbb aas js call xchg xchg dec movsl pop fistpll test inc insb adc ja icebp jmp and (bad) cld pop push pop sub out or push jge (bad) push (bad) popa or sbb sbb mov and mov fisttpll push iret jle dec pushf mov xor int movsb jg sbb dec sti loope imul in mov iret rorw insb repnz fsubp adc push icebp loop mov loope push es lock (bad) jnp pop mov mov inc add cmpsl or cs adc push sub (bad) sbb sbb adc sbb cltd stc cmp pop (bad) stc cmp dec cmp popf cmc and xchg scas mov sub push out or loop arpl sbb jmp fcmovne (bad) mov adc in xor in sbb inc pop outsb cltd arpl jbe setge mov mov push leave unpcklps cmc sub add xchg xchg fsub sbb adc pop mov inc jg push add xor int3 imul xchg lret (bad) adc daa jg nop mov mov cwtl push mov in xchg fldenv or rorb and dec icebp test out les adc or pop test scas fwait push loope xchg lods into popa add xchg out test xchg (bad) lea in mov cli sbb insb sub in pop push dec mov pop add call js add push inc cld and out ficomp fimul aam mov pop push add roll out inc push mov es leave test rorl mov movsb sub inc mov sti in mov mulb lret (bad) xchg (bad) ret and jge inc cmp imul insl add push aam cmpsl out mov or cli rcr mov xor jmp jecxz sti rorl (bad) addr16 popa or out lret cmc jnp dec pop and negl jns in sbb cmp cmc mov xor push jae jge roll call adc add fldl (bad) jl inc (bad) push jle mov adc movsl inc stc xor fldcw (bad) icebp stos xchg or and dec pop shrb je sub or cli and shr dec cld inc sbb pushl fs pusha ljmp rcrb push loope adc jecxz aam cmc xorl daa lods sub stc repz add faddl jnp std clc add ds sti scas add cmpsb dec mov pop dec dec mov jmp push sub fcoml cmp mov (bad) sbb pop notb mov or lods mov jmp (bad) scas out sub mov aam mov out jg jno in stc inc ljmp add or push xor dec cmpl sbb xchg push cltd shr ret mov out sarl aas (bad) ja sarb mov inc add mov imul mov daa mov add or stos lods mov test mov mov daa call mov dec call test mov xchg cltd ja sbb stos xchg std push mov lods out fadds push loop test push pop (bad) ljmp inc (bad) in pop adc lret push push ss add mov push data16 mov jae (bad) in jmp in out dec sub add push mov (bad) lahf (bad) dec cmpsl rorb lea or aam data16 add in jns inc rol (bad) pop sbb icebp (bad) in cltd xchg ror sbb fidivrl ds push jo fwait push push xchg add sti out cld cmp xor orl stos xor call ljmp cli inc inc dec in mov pop add stos dec add stos xor sti (bad) mov pop jnp into push lcall aad fwait cmp push or loope (bad) es imul sub pop mov xor mov dec jnp inc or jo pop cmp pusha mov jne fdivrs push mov sbb sahf jns push fidivr sub icebp out das adc movsb mov push and test mov sub mov (bad) jb int3 pop add mov out incl push mov sbb cmc xlat jge leave push cmpsb lods cltd adc es stc push xchg or mov xchg push jle sbb ss icebp xchg cmpsb scas mov push mov ja loope mov leave jecxz inc xchg jmp push pop pushf inc test dec fsts cs xor arpl daa or xchg lret (bad) iret inc dec sahf add jae sub pop ds out fnstsw adc inc arpl pop fistl push addr16 cwtl enter cmp xor push in jle fxch pop ret pop cmp mov mov mov pop ds imul add adc les sub out lods gs pop cs xchg (bad) xchg push es divl ret shr ds out inc aaa adc fcmovnb gs test test push pop mov cwtl sti push push ljmp cs xchg jge aam jnp pop mov out aas push pop das and add mov (bad) sub jns sub push icebp mov imul push mov push fwait sbb (bad) iret jbe push mov inc pop add movsb (bad) mov leave cld xor sbbl sub std xor out adc cmp and imul test rolb or push movsb fwait shr xchg adc in pop push insb xchg hlt fist decb ljmp xor notb in iret push nop into xor dec (bad) (bad) jo mov and daa popa push (bad) cli (bad) push mov pushf xchg jb int xor cmpsl mov pop add push popa mov adcl dec leave call cmp xlat mov imul loop je stos outsb pop out or xor shrl in cltd pop ljmp or jmp adc cwtl pop mov add sub hlt imul outsb jecxz cmp push out adc lods in jl aad out or mov cmp fimull xchg stc sub lods out lods daa cli lcall pop add adcb cmp dec sbb adcb loope sbb int aam mov inc (bad) sbb cmp and loope mov aam jno in fldcw pop add ljmp mov mov es xchg or and sbb xor std arpl arpl inc xor sub xchg in ds mov ret scas leave sbb add mov movb fimul test fsts ja in (bad) out cmpsl pop sbb cli int in pop push fwait (bad) jbe pusha cmp shrb jnp sub xor sbb and (bad) (bad) and mov sarb mov dec fiadd mov scas ficom adc inc or loopne xor mov pop in das aaa aad (bad) jl adc mov push sbb call mov das pop insb cmp sub insl adc out inc or push in dec stc out adc inc int data16 loopne (bad) loop push scas sahf movsb mov adc movb addr16 jb or jl dec sbb into rclb in pop sub (bad) sbb sbbb cmp test outsl add mov scas xchg sahf xchg push inc mov jae insb dec lret aas test cmp dec rcrb pop gs inc leave scas inc cwtl in cmpsb ret loop in dec mov mov mov cmpsl xchg pop or lods gs sub ja mov dec fild movsl nop out add sbb mov push jp ror push shr mov add in inc out jmp push mov scas push lock scas sub sub ds adc (bad) sub pop shl dec adc push sub fwait in cmp adc push cltd sbb xchg xor push fistp sub sbb adc push stc mov mov iret xor gs xchg out xchg sub cli mov cld push sub or adc and insb aad insb cmpsb repnz call mov out lea dec int pop cmc push push insb mov leave mov (bad) rolb dec pop fldl out add sahf add js push adc in dec jp les cwtl in shrl add cwtl or outsb mov (bad) iret out mov and dec fisttpl and add jo pop in scas (bad) lods lcall outsl fnstsw and jmp arpl dec out inc jp and xchg cmp xor jg inc mov fistpl jecxz mov ljmp push mov push jl stos xchg add mov idivb sub xchg dec cmc sub or push jecxz addr16 mov adc sbb and push cwtl jg mov outsb push aam pop insl nop arpl mov jecxz inc les mov or aas (bad) xchg iret mov jmp mov inc lods push stc add push xor test pop in add movsl leave dec jecxz cmp mov aam sub lock dec jmp xchg cwtl xor xlat sub shlb jmp dec insl sarl sbb cli addr16 daa push lea scas jo and enter loopne clc cld or pusha cld in jno clc fs mov jp push and mov jmp (bad) stos cmovb addr16 clc xchg les jb and and mov add (bad) ds aam daa test pop push lret push add mov lods out inc pop cmpsl sbb lods jge lods xor dec push or loopne adc call mov and popa scas pop mov dec lret sub out inc int3 loop adc sbb sub lods repnz mov insb hlt adc inc and push std imul jne out sub push cmpsb jae ss xor adc xchg sbb xor cmpsl mov adc out jp push cwtl jne repnz jp adc pop iret push jp and add loope xchg mul imul jae mov push jp and and aas lret xchg and jmp aad shll sub inc jns jl sub (bad) fistpl ja mov aas mov push ret xchg jecxz ljmp (bad) jmp in in out adc enter pop mov sbb lds pop cmp push call test in ljmp pop cltd push sub (bad) jp and jge mov add mov jns repz dec stos cld xchg inc out ljmp scas stos dec repz das cmp ds xor sbb adc or fsubs std int pop mov (bad) popa hlt mov add lds jno mov (bad) das sti imul out inc loope out jne int3 outsb addr16 push jge popf test in push sbb jb lods (bad) jne out inc mov xchg (bad) or loope pop outsb cmpsb insb xchg lret xlat mov adc or xor inc xor mov fisub push inc cmp stos dec xchg sub dec sub daa sub push scas or pop hlt fldl in (bad) and sub xchg cwtl inc sub call sahf push jmp (bad) push push inc push lret mov dec adc stos push inc mov ljmp mov sbb push inc (bad) and and mov hlt and push xlat pop mov xchg pop mov mov dec or cwtl xchg leave outsb mov push sti sar sbb and mov in mov adc add arpl inc jne xor lahf subb nop adcl mov pop push (bad) dec inc push mov aam jecxz arpl fsts and mov fldcw insl xchg xchg dec clc ret adc daa inc es lods mov and inc inc mov mov pop xor sub repnz into cmp sub mov leave fxtract cli pop insl mov fstpt insl lods fucomip and sub dec mov or xchg mov jp outsb stos daa jns inc stos mov fwait pusha lret pop cmpsl int3 (bad) mov imul shlb (bad) addl and inc cld cmc jae xor cmpsl lods sbb stos sarb aas xor push loope mov xchg in test cmp push loopne scas clc cld aaa dec sub cltd std lcall aaa add dec jge stos jmp push dec add cmp sar dec xor push gs sub lsl ljmp and insl and and cmp xor or cmp je sbb fdivr lret and scas test lods push mov cltd (bad) into popa in (bad) push pop fcomps jne aam push les jp daa cli add mov (bad) lahf lock dec push sti xor loope xchg dec push mov mov and mov xor push ss ret (bad) mov ja inc push addl jmp sbb in iret sub in imul and cli test push sub scas mov or (bad) out sti dec and clc sub (bad) xor jge mov adc stc cs fcomps inc adc mul mov xchg (bad) dec cmpsl push lahf add test aaa pop push jg dec scas mov xor pop pusha cmp inc mov add push cmp in mov sahf out enter cmp or ret xchg or enter cmpsb ja sbb nop cmp movsb sbb adc cmc les dec mov (bad) mov cli das xor loope rorb stc pop mov std add push nop xor test mov lods push sbb orl jno imul xor pop (bad) pop cwtl push sahf ss lret mov aam push sbb jp into icebp icebp jo lahf mov mov or jnp cwtl xchg dec jne sub adc cmc sbb mov stc imul mov pop das repnz aad pop (bad) sbb insb ja pop lcall push or mov std xor cwtl (bad) xchg pop ja mov cltd xchg ffree pop jne arpl mul fs xchg mov sub pop push mov aas and xor add mov sub cmp in lods sbb sub and jg mov cmc es xchg js loope mov sub sbb imul cmp mov add aaa fwait push adc sbb sbb jmp sub repz jae jmp lcall cmp lods std pop cmp subl das loope and (bad) sub xchg pop pop xor dec arpl or pop xchg fbstp loope mov inc adc mov push mov or loop fistpll and mov popa xor pusha negl and inc scas shrl fsubp shlb lods loop (bad) sub push cmpb lods je push hlt and loop sarl xor dec sarb (bad) into lock jge stos (bad) jp cmpsb insb iret lods test (bad) adc dec jno mov pop loop in inc leave es cltd sbb fwait dec je push lea push cmpb jo jp mov adcl cmpl jnp cmp jo cmc idiv out inc cwtl pop xlat addr16 lods ljmp adc xchg lret movsl dec loop add (bad) mov popa stos test push add test push mov sbbl sub inc mov pusha dec xchg enter push sub dec sub push scas xchg mov dec inc mov (bad) je mov inc dec pushf push pop dec jae aas jb cmp xchg pop into sbb pop lret add mov hlt out adc or mov cli sbb sub fimul cmp xchg imul dec sbb sub xlat sub aas lock cwtl cmp jg outsb xchg cmp loopne pop addr16 cs cs mov cmpsb mov xor and out push imul test mov push jg sub popa mov mov (bad) (bad) pop jmp aam pop jno bswap enter loop movsl push mov (bad) pushf out imul addl int and mov aad test dec adc push stos mov aas xchg das xchg cmp scas adc mov mov lret adc pushf add das jmp ret jnp jnp (bad) popf or xor or or mov dec inc sub pushf push cltd fs gs das stos sbb leave xchg and test lahf repz fimull ljmp (bad) out inc mov int mov mov lahf ret mov cmpsb ret in out and fs fsubl sahf jo push mov xchg lods imul clc inc add jmp jl cltd inc add cmc in lea adc mov dec jnp mov mov and idivb lock test rclb xchg fwait jb xor mov xor sbb fdivs jno call xchg mov jp and pusha test fs pop test pop movsb jae lds lods lods pop mov xor lock cmp jns pop cmp loope inc popf pop sub std mov cmp decl cld andl mov push fdivrl add xchg aad lds mul aad fdivs arpl lahf dec ljmp pop xor push in cmc mov fucomp and mov shll stc lds sub gs xorb in clc jl sub ja in pop mov jl add das dec ds popa sbb sbb in ret mov adc pop leave mov int3 sar xchg sub inc movsb mov pop rcrb outsl lahf stos adc shrl lock mov scas add (bad) mov and iret push cmc in outsb push xor jg out mov std push sub cmp push subb (bad) jecxz jl jo pop dec bound inc pop fiaddl (bad) sbb jp xor iret (bad) pop push ret dec cmpsl iret lods mov aas cwtl in mov push lock push xchg mov test fwait mov add mov insb xor cwtl std jecxz ljmp out cmc inc push loope inc sub movsb rclb icebp popa insb mov mov jp add cs fstps jmp divb imul jl out pop mov popa (bad) fstpt cmp dec fistl xchg inc xchg and mov push lods mov cmp sbb (bad) sub out xor pusha add mov push stc ss pusha loope mov mov loope (bad) cs gs js xchg push sub outsl pop mov push pop outsl inc mov xor dec out scas mov into push in les fisttpl in push mov add and call jp mov rcrl inc sahf push leave sub outsl jnp in les pop cmp mov outsl jnp sub push rolb mov (bad) and clc sbb pushf rcr aaa (bad) out pop arpl repz or test xor loopne fimull imul or stc jp orl pop lea mov mov jg in ja (bad) push jecxz cmc dec cld dec xor cmc (bad) int incb hlt repnz jmp xor or arpl mov (bad) sbb push lods fistp inc and stc shrb xchg xor sbb pop fcmovnb xor mov inc adc xchg xchg and ret mov outsl imul outsl scas add xchg mov mov xchg test insb divb jnp aaa sub ffreep lds dec (bad) mov int xchg cmp sub sbb xchg call pop call (bad) cld movsb xchg int3 dec dec stos cmp dec decb enter sbb cvttps2pi xchg notb mov repz out mov in adc cwtl and movsl (bad) sbb test icebp fnop outsb into in cltd and (bad) cmpsl mov xorl mov int sbb pushf fistpll jmp insl clc mov sub sub bound sbb stc jno jne mov shlb dec pushf mul mov insl jle inc mov add (bad) xor inc inc adc jecxz sub mov jbe sbb arpl adc (bad) sbb jne std inc push in mov sbb out std popa inc leave mov inc push fs add (bad) fisttpll jle pop hlt xor inc out test rcrl dec cmp inc push lea ja (bad) inc mov inc pop fldt (bad) in cmp outsl out sahf mov out or sbb (bad) pop std pop push cmp jg mov mov and mov mov iret sub and dec test punpcklbw dec cmp push xor sub mov inc imul popf and push stos loop cmp xor les aas sub adc or adc in test in in xchg jl cwtl std int (bad) in test loope mov mov fwait xor adc (bad) cmp cli scas xor push dec dec adc insb adc pop arpl subb jge xlat jp loope xor loopne inc fisub mov xchg sbb push imul mov inc je and rcll push stos in loope xor insb mov mov out imul dec outsl popf cmp push lods dec or leave lods mov or mov nop jle fwait in lods lds addr16 mov jbe push shl jmp pop fistpll cmpb pop jge ja mov jmp xchg and insl enter es movsb aas push loope cmpsl ja inc incl out push pop xchg das mov cltd sbb repnz (bad) addr16 or (bad) in sub cmc fistp gs cs cmp sbb in sti fimul sub adc out pushf mov fs dec pop stos push mov mov loop jo pop jmp cltd inc xchg inc add (bad) or inc or and lret mov out es mov in xor cmpsl dec jno and pusha addr16 jnp lods pop jne push lahf inc jae loope or iret and popa fsubr aas jb in fidivr gs mov add pushf inc adc (bad) jmp js bnd or pop mov jg pop popa mov in xchg test cmp push out stos fxch (bad) xor xor scas daa mov xchg in push movsb cmp xlat ljmp out mov gs sub leave xchg in lock cmc lods sub jae das jmp bound jg or clc cmpsl sub sub in jns lods jne test mov xor push ret mov pop xor xchg popf sbb in mov int3 ret test xor mov or inc pushf or mov repz dec lods add xor iret subb sbb mov mov xchg pop int sub mov add xchg sbb mov and sbb pop leave xlat mov sbb (bad) mov (bad) sti inc sbb fbstp imul jo mov cwtl sahf push andl pop fs sub or imul sub in mov into inc out stos ret cltd dec test in lea pop mov aam lret lock sub mov fs sbb inc push xchg jne roll (bad) mov push stc imul jbe repz int gs sbb dec repnz lock loop or sbb or sub ljmp ss js mov sbb movl push addb push popa pusha adc pop out negl jne sbb pop add inc stos cld jmp add movsl jbe dec dec xor jp out ret inc cs out and jbe movsb pop or mov jns sub mov mov (bad) (bad) sbb mov fstpl push inc xor insb in je out jb pushf inc test cmp lret mov xchg icebp jae or js mov mov pop out popf add xor pop jl dec adc and nop scas xchg jbe mov jnp movsl sub mov add mov mov or (bad) lods jg inc stc mov out mov into sbb lret jl xchg popa fisubrl cmp pop jmp gs insl insl sbb mov adc sahf mov cmp rcll js cmp das jge jle ja out out pop int jg repz (bad) cmp int xchg js nop out mov dec mov xchg push mov scas and mov cmpsl pop sbb repnz js rorl das xor xchg xchg fcmovb add paddw sub das mov or xor pushf outsb xor lret imul mov pop cmp cwtl push lret xor mov add outsl fisub out lock fldenv jns dec insb das jnp outsb test add mov outsl dec fildll in pop pop pop pop adc adc xor add ljmp adc xchg add or gs xlat fs add movsl jecxz ljmp xor mov sbb and (bad) aas xchg or leave nop (bad) adc das dec lea sub sub inc cs adc pusha push in addr16 (bad) nop fdivrp js pop sub xor pop sbb stc inc out xor pop sub es add lods push mov or fisubrl push popa mov insl cld xchg xor nop jns fidivrl add js mov loop push jns push adc stos mov inc push jge push stos mov adc mov shr fcompl xor dec push adc or std pusha paddw pop pop cmp mov mov jo ljmp fsts xchg pop mov sbb fxch fnstenv inc std jp call jle ret repz sbb xchg mov or pop jnp dec jl mov cmpsb scas jno (bad) mov jecxz jmp mov and xchg mov inc add push inc jno loop (bad) dec jg inc loope dec xor lret mov out dec data16 test dec push (bad) cmp out lock ja insb sbb clc xor xor push stc push cmp inc in mov fwait test ret out adc mov push out sbb pop jo mov cmp (bad) add cmp cmpsl jle sub jbe xchg into adc loop xor icebp dec push jnp cmpsl out hlt test xor into test sub mov or mov pop mov and push xlat jb (bad) mov popf cmp aam ror pop sub jnp addr16 (bad) icebp xlat pop or pusha adc out mov jg pusha push add pop cwtl fistl sbb ficoml fisubr dec adc imul negb cmc test jnp sbb inc hlt sub ja lahf add push adc imull and ja enter leave push mov push pop mov sub iret mov jne ss out dec sbb mul add fdivrl lret cmp loop and mov xchg push out insb jg in mov dec in xor cmpl push sbb pusha aas (bad) std pop mov jge jg sarb mov add jl mov mov push inc sub call jbe into pop add or loope sbb clc mov mov mov jnp cmpsl jbe sbb inc ja mov jle cmp xchg sub dec jle adc pop add xor mov inc ljmp dec loope mov xchg sbb add and mov movsl push das pushf cmp sti xchg insb scas or in lea stc (bad) mov outsb notl mov lcall add jl inc lret jmp inc adc (bad) xchg xchg xor daa xchg fnstcw xchg fwait les and gs (bad) ja iret (bad) jmp stc std iret shr dec lds jmp int3 call imul mov or or dec dec int test sahf dec and sbb dec fdivrl mov out and and fmuls cltd pop inc xchg pop ret aas test xchg push addr16 out mov mov adc and fiadd xor mov mov xchg mov xchg mov repnz add inc mov addr16 inc jnp in fs test jmp jbe jmp add inc ret dec addr16 aaa les dec dec out pop inc lret repnz xor cmc add ret lods inc aas mov sub stc and pop cmp lock cld roll jl or add xlat xor (bad) jge ds push addb mov dec xchg xor fs lahf xchg and add je adc mov adc out sub xor sub xor sbb add or xor fidivl int3 xor and add or sub mov pushf sbb cmp sub lret rolb scas js xchg iret mov ffree mov clc push stos int loop push addl clc aas scas outsl pop jo cld imul mov mov xor sbb xor push dec adc cmp cltd push inc jge sbbb sbb push jb sub jno int3 push lcall int3 cmpsl test mov sti inc hlt aam clc sbb ret (bad) cmp xchg mov cltd movsb fldt mov push ret int3 cli rcll iret cmp scas dec adcb clc insl push add fnstenv inc ljmp inc mov jg cmpsb jo stos sbb lods pop xchg in lret cli adc push mov cwtl mov nop cltd fwait gs mov sbb xchg sbbl cmp push loopne test stos sahf cmp scas dec mov pop arpl push nop mov test xchg sbb xchg mov xchg mov test cmpsb dec (bad) negb aas cmp out mov push push add lret mov testb add sbb lods jmp xchg (bad) xlat daa in mov dec adc jp xchg inc (bad) lods pushf dec daa outsl js push hlt jp add cltd daa scas leave jle in mov mov jp inc pusha jnp je mov dec popf and cmp jp jge or shrb mov jmp xlat jecxz cmc fwait and lods mov int rolb mov (bad) cltd ja push mov sbb push dec jbe and sbb sti pop hlt mov lea lret sbb lcall (bad) push jnp mov mov and dec stos add mov repz aaa out rcrb mov insl ja jne mov mov callw inc enter clc inc jnp in stc xchg push (bad) popa mov adcl push call dec ds mov sbb mov scas xchg sbb add out dec stos sarl stc fwait scas call push add mov or cmp cwtl xor repz fs xor daa gs lret cmp sbb pop or sub insb inc and xor pop adc push dec dec xchg jns repz xor inc jo fwait push (bad) pop enter test out out jge jnp mov hlt imul dec jns out cli cltd aam sbb insb mov outsb in or adc call jne in xchg shlb cmp adc loope es gs push inc test in mov sub addr16 lods daa lods out (bad) mov cwtl pop clc jnp std adc ret and out sahf inc mov enter sbb pop inc xor cmp jnp iret lds mov (bad) sbb int in cmp addr16 jbe stos aam stos imul nop sub or cltd mov add xchg in (bad) fnstenv xchg mov inc jbe aas add aas in xor jle pop xchg xchg es dec icebp lods out inc mov push or (bad) inc test add cmpsl mov adc fisttpll aas inc add cmp ja jo push and and out aad and jg (bad) xchg mov adc icebp adc pop pushf dec mov ljmp fs lcall js inc in mov std shrb jns push mov xchg add leave adc mov fisttpll add stos in ja or (bad) rcl push pop pop out pop jb add fistp dec cwtl xor repz movsl add (bad) cmp fist data16 xor cmc ret (bad) sub xorb pop push int dec ja jnp jo arpl mov shrl sub dec mov xchg and in inc aas scas loope adc loope aas bndldx popa pop add inc out xor cmc mov addb aad cs or outsl jecxz xchg sbb (bad) outsb xchg (bad) aas out mov outsb cld nop (bad) pop xchg sbb int3 or test and movsl cli lahf cwtl jnp sti scas iret jb das loope icebp pop ret dec (bad) jecxz aas rcl mov clc xchg cld cmp mov mov xchg xor inc repz adc sub xchg dec mov mov or add movsl mov xor ficom decb xchg rorl xchg (bad) xor mov fmuls mov loope or mov mov jl dec mov popa mov push popa or push inc dec inc xor std mov sub in roll jecxz jl mov sub push stos mov test dec jmp loopne clc (bad) mov (bad) stc add in stc test inc sub mov das in movsl outsb jo adc dec std outsb sub push aas out (bad) movsb add insl mov fs xor pop daa sub mov das inc lahf dec dec rolb inc ret inc jmp ss std arpl das int3 xchg out and and call lret scas mov sub add push fstps test dec ja outsb movsl lds dec lahf rorb add sub sbb dec sub sahf pop fcomps or (bad) js pop adcl jge test cmc das mov cmc mov scas and call mov jp sti push mov nop cmc or push out shlb jno xchg out nop mov jo fwait add lods repnz cmp mov sbb sub cs sub fcmove mov leave call xor jns popa dec and mov and jle sbb sahf and lock push insb sbb inc jle mov ret sub lret lea add inc cwtl pop jle scas xchg add xor sbb xchg and add ja dec jmp out xlat xchg ja add xlat gs xlat aaa mov daa or xchg xor scas push push out mov xchg in fld add data16 stc inc icebp pop pop cli jg xchg movsl add jg jnp cmp xchg movsl inc or mov mov scas mov add cmp scas dec dec imul arpl push xlat sbb sub mov push push pop lcall test (bad) sti notb pusha dec divb movsl lods push stc adc icebp repnz mov adc jbe mov jns enter inc add fsts sub leave or cld push ret xchg xor out mov inc push in in pop mov mul mov jns leave inc je out sahf lea ds jbe adc popa add cmp pop in gs adc jne sub lret imul sub roll xor pop add loopne (bad) (bad) or jne and jg call loop clc and out gs cld push sti inc jge push call out mov push mov icebp test dec push test out sbb mov notl lahf sbb or mov cmp pop stos sahf mov rorb dec mov mov mov mov into sub jp aaa fwait push divb popf pop test insb dec scas fisub jle inc popf daa mov mov sub popa jecxz (bad) outsb jg inc orb push scas inc pop mov jge dec out cltd int3 lcall popf loope ret imul shlb inc shr outsb movsl outsb es shrl jecxz xchg add icebp cltd scas add mov pusha das xchg inc lahf lock mov xor cmp out sti into push sub pop mov nop mov aas xchg sub push imul sahf add data16 enter sbb nop jl shll daa loope cmp fstpl (bad) or scas insb in jnp scas loop mov adc outsb adc imul (bad) jbe in popa sti inc (bad) lea or addr16 mov xchg (bad) stc loop dec out jge out adc fsubrs push sub or insl mov mov cwtl dec dec jne lret jne pop ds in add test pop jecxz aad leave and xchg mov fldcw jmp aad xchg repz insb adc pop addr16 push push push jno sub in xchg cld inc pop mov lcall xchg push call popa lcall fidiv sub gs jne call xor addr16 mov (bad) aas and in mov adc add loope cmp jmp bound test jl es push jae xor cmp jmp adc push adc ret adc aam ficoml repz aas lret xchg add jmp xor call mov add dec addr16 or pop dec mov dec jmp push xlat movsb push jge mov and jb push popa pop pop fcompl xor popf sbb test mov adc dec aaa mov add mov inc (bad) fbld into mov jle cmc jno jl sbb clc int3 push sub fcomps ret pop test push inc jmp mov or sti or xor adc xchg loope jne jp in xor and out xchg (bad) out arpl sbb sbb (bad) fwait lret cld mov push repz fstps add jnp and sbb pop inc cmpsl movq cld cld mov (bad) stos or in mov pop rcrl push sub enter out inc xchg cmpsb insb pop ljmp es inc dec ret in mov dec subl cmp inc (bad) fdivrl fdivrl int3 xor add jo rorl je lock out sub adc mov cmc cmpsb and rorl cs lods pop jge pop test shr push adc jne jnp repnz mov cld add stos cltd cmpsl arpl mov mov sub xchg cmpl xchg in mov push ret mov sbb pop pushf movsl cmc inc fidiv in in outsb inc sar dec jo xor xor aaa movsb adc test clc mov xchg sub dec sub xchg aas int3 jecxz and add mov add (bad) jecxz jbe lds sbb fxch lea xchg daa push xlat daa int3 loop xor jg ror (bad) cwtl xchg mov sbbb dec add xor (bad) mov je ret jnp jl xor mov dec movsb xchg dec mov fwait dec out jo xchg rolb gs xor mov je pop cld ret shl xor add scas icebp scas or push push pop dec into pop jno lods mov rcrl out cli lock or mov mov mov (bad) mov test (bad) dec roll push jo (bad) enter mov out add and cmp addr16 jae movsb movsl jnp mov jae pop and aas xorl inc out xchg leave les or out out in adc ds and sbb add jge cmp inc pop aas test cmpsb adc out pop test pop loopne jnp sub test mov add xor push add out cld pop dec lds ss mov and mov sub cmp cmpsb xor aad lret push cs mov push cmpsb inc push loope in stc test inc pop aad mov mov dec dec dec jo cld inc mov adc fbld inc test (bad) jp and mov popa cmp xchg xor dec in test jo cmpsb loop in jnp div cs loop addr16 inc push out mov shrb subl push repnz push fwait mov clc dec cmp test xchg lods ret mov imul testl cmp pop jbe repnz mov gs (bad) fisubl loope push and aam and pop insb stos (bad) adc hlt sti std in (bad) mov movsl (bad) sarl (bad) repnz popf andl das cli add push add packuswb pop lods imul jle inc dec into out and sub stc or rorb mov ja and push or cli adc (bad) push pusha jmp pop cwtl push pop in insb stos sbb mulb push xchg mov mov testl lcall aaa jo pop adc fmuls mov lcall mov jmp in cmpsl mov aad jecxz int3 sub fdivrs inc call mov sub fimul push ljmp dec ret push (bad) repz out jnp (bad) or and sbb adc fsubrs jbe push dec das mov pop out sub cmp test lret shlb mov mov in inc mov jnp jl mov mov mov in mov stos inc movl std fsubrs mov mov adc test inc xor cmp fld push pop push or xchg push xchg imul cmp adcb rorl mov dec xchg xchg mov into pop clc cli pusha idiv jp inc add push dec inc sahf imul stos xchg sbb sbb inc aad clc jnp push sub repnz bound nop inc dec add in out out sbb pop cs push aaa js stos mov add (bad) test xchg out and pop dec cmp xchg imul mov rolb lods lds cmp test dec lret adc inc sub push dec pop pusha push int shll jmp mulb lods out sbb inc lcall push repnz mov rep or fwait add mov loop inc adc push inc adc mov imul jno or idivb data16 mov imul pop pop outsl ror in jmp cld stos mov divl mov cmpsb or mov data16 out mov in adc inc out dec ds aaa cmp or cltd mov fsubl lea fwait mov fcmovnu pop jl cmp xchg pop mov nop mov mov push out or mov lahf in je cli cmp xchg add cwtl add xor stos enter rorb int push xor in pop leave les daa mov mov pushf in pop aam xchg cmpsl stc ds into out lcall mov aaa negb js mov and xchg movsl lahf repz das mov lahf in adc jmp pushw stc inc xchg dec xchg mov sub negb lret ficomp (bad) popf lods sarb insb (bad) pop cwtl das xchg jecxz add scas pop test mov or xchg sub jno into outsl in inc popf cmp mov xor aam icebp cmp pop dec mov and inc clc shll cmp pop mov cwtl mov cmp add mov add test xor inc daa inc mov into xchg mov clc cmp in fldcw inc clc repnz mov je mov push call add adc aad faddl sbb je fs jp pop mov cltd repnz test (bad) (bad) imul scas lcall out jbe stos bound and xor pop in imul xchg icebp fsubl mov push (bad) push add call fisubl pop fs fildl arpl pop enter mov out jmp sti cwtl push aam stos movb mov jns out sub les fdivp cli pop or pop lods ljmp adc push lcall in into add leave (bad) add inc out ds aam popa ret stos adc mov fdiv aaa jne jp lahf jmp mov and fwait jo out clc in adc xlat dec mov loopne (bad) mov inc in inc mov imul jmp int3 mov icebp pop roll xlat adc sub pop mov dec jmp aam sahf pop stos std fsubrp loope jle cltd fildll std imul fcomps enter jns pop enter and das mov adc insl jnp and imul pusha les pop leave test inc insl insl push std adc dec lahf sahf xor addr16 pop push mov js cmp in jmp scas jo adc or repnz fcoml hlt in std fimull inc (bad) or pushf fisubl jne bound cmpl xlat les sub mov rorb pop pop repz rolb cltd js (bad) test lods pop push test lahf lds mov xchg mov mov dec xchg inc sbb adc fldenv insb enterw imul and xor jb fwait or jbe sub mov xchg adcl xor sub in inc repz test and cmp sbb ds mul cmp xchg insb cmp lods inc hlt jnp imul or gs fstl fs ja mov mov push ret (bad) jmp mov sub cmp or mov xor lock mov and jo bound xor adc dec in mov push sbb push fwait lret mov sbb sub mov mov sarl pop inc shll sbb mov and xchg mov and icebp call addb int3 pop push mov xor xchg test mov pop cltd ja int nop aas xorl sbb sti and imul sub xchg jnp jp mov popf sub pusha scas or cs decl ljmp cs adc sub inc mov in inc or or bound stc stos mov test pop fiaddl cmp sar cmpsl sbb and das mov ljmp fadds jge adc xor test (bad) js jnp test dec pushf js aaa pop sbb and lret (bad) (bad) loop fdivp sahf loop nop stos (bad) cmp inc (bad) aaa leave xor popf mov xchg mov das jae out push daa (bad) data16 lds shld andb jmp shl xor pop out pop sbb xchg xchg mov jg jne mov jecxz aam push popf fxch in xchg add push testl icebp dec nop and (bad) sti jmp and and enter xchg icebp scas pop cwtl inc cmp in pusha mov out subl mov mov scas mov sbb testb lds cwtl scas arpl cmp jo (bad) push xchg cmp sbb ficompl dec movsb dec inc lahf push sbb mov pop mov (bad) lods sub and dec out scas or sub xor stc push shr sar imul cmc dec repnz dec add dec fdivrl adc xchg sub push and pop mov and xchg push in lods (bad) sarb (bad) or push push mov add adc ds dec scas sub mov xchg xchg lret inc frstor lds bound add cmpsl enter sbb loope insl sub or js mov daa xor scas outsb pop xchg push and or mov int loop sub ss pop int pop insb sbb xchg cmp xor or dec mov jmp or sbb or int3 fisubrl mov fisubr pop and jmp xchg fimul cmp jo mov inc dec sti (bad) lods xor lcall pop dec xor dec mov aas push mov popf mov outsb sarb stos and xchg xchg or stos in inc aaa mov xor repz xchg sbb cmp inc xor sbb fisubl divl icebp test xor dec pop ret jne push push or and insl aas xchg movsl imul movsl sbb xor adc xchg mov adc scas xor xor mov sti lods std pop jne dec lahf sarb outsb jno add xchg mov jp lock add (bad) gs fdivrs push and test lds mov adc or out inc mov or jb pop les lahf imul out sub pop subb jno nop test xor out adc sub xchg xchg fidiv cld pop jne cmpsl xchg ljmp cmp mov jo mov cmpsb jp (bad) stos das xchg idiv lret popf cmp clc cmpsl cmpsb xor pop xor dec cmpsl clc imul sub or pop pop mov pusha rcl mov lock jp pushf push daa imul das jb fwait sub jo rcll jo sahf outsl pusha inc mov or xlat cmpsl bound xchg (bad) cmp hlt loopne out sbb or (bad) and lcall hlt call or test cld mov sbb sar add mov je test (bad) enter xlat adc jp jecxz loope adc stc sub arpl and mov rorl xchg test loop xchg cltd xchg sahf push cltd fimull popf xchg test inc jnp mov cmp inc adc cmp push sbb jmp popf out pop das ds jns fadd rolb pop jo es add mov (bad) jnp fcomp fstpl xchg fisub add push cmp cmpsb jmp jnp test jno,pn mov mov dec pop xchg jge xchg aad stos pop daa mov xchg test xchg xchg dec hlt cmp xchg push cwtl sub cld test or push outsl shlb out xor inc sub adc sbb add rclb inc push ljmp adc call jns dec sbb and jg repz add sbb enter out xor sub jg inc insb jmp ret (bad) lods sub daa pop sbb gs fnstcw out fstps in sub dec adc sti add adc add leave loopne cmc xor fdivs fs (bad) insl loopne mov xchg std negb pop test imul jb add or add lods ljmp inc leave sbb shll and sbb mulb imul lods fidivr mov stc xchg jl incb jbe xchg lahf repnz icebp adc int fnsetpm(287 pop sti scas ret jmp mov (bad) imul and xchg jle dec sbb je cmpsl or roll inc les lea xor xor out scas jnp lds fcmovbe xchg mov ja out testb lods icebp jne in or mov xchg mov mov dec mov mov scas jno jmp xchg jmp dec add test sub and cli push adc stos inc int pop out enter stc inc jno cmpsb lret es push cwtl inc cwtl cmp cmpsl adc insl stc pop dec loop lds inc and add or ss das movsl iret jmp and test ss sub and cld fdivs xchg outsl outsl data16 fisubr sub out shrb repnz fidivrl into popa sbb loopne ss or sahf dec ss inc lret fdivr rcrb jmp imul mov bound ds xor pop xchg testb decl cmp in (bad) mov mov js sarb pop push (bad) pop add mov add or xchg mov xlat cltd into (bad) jb fwait loop add jl xchg and cld js inc sbb mov pop cli cmp xor sbb lods out (bad) mov dec stos mov aas test pop pop dec cli jbe and xchg lret (bad) fcomps fild enter test scas pop mov sbb pop (bad) jl lods test cmp and jne cmp aam push mov pop mov jns and or jge sbb mov sti adc adc ss in mov xchg cmp jno int int3 int scas push inc decl imul xor mov adc jns aaa fldl xchg out jbe push mov jo les sub mov divl loop (bad) cmpsb sti mov add mov jmp push into or pusha outsl jo jmp mov addr16 popa pop mov mov imul aas cmp scas and lret fcmovbe test pop ljmp xor ss sub cs lea cwtl mov push adc pop mov sbbl call pop (bad) fbstp movsb les in fildll aam inc clc int mov xchg push dec or push mov aaa xor cmp int3 leave daa adc mov add mov jno pop pusha jmp pop push popf jnp (bad) xor jle sti inc sub sbb inc add (bad) int mov dec mov and cmpsb sub add loopne pop lods enter test mov fcomps inc mov sbb sti adc mov les xchg scas or test cmp mov fcompl add push xlat lahf popa xchg lcall add adc cmpsl mov test sub mov inc cli cld in pop cwtl mov and dec stc cmp aas sub push es imul push jl sarb gs push push xor sub je ret mov jl cwtl out mov fs add lods mov xchg loop sbb push mov or dec xchg test sub jecxz xchg xor loop nop hlt aaa mov aas dec xchg cmc mov cltd jg loopne sbb push ret jne sbb mov mov sbb test mov or pop mov lahf add pop incl lods cwtl xor lea lahf xchg ds sbb cmp mov int js lret push jmp icebp sbb sbb (bad) aam dec mov pop scas imulb and push pop sbb movsb lods and mov sbb cmc (bad) inc xor adc (bad) sub pushf shl scas sti adc mov xchg popa loope into cwtl loop fimull add lods hlt fisub adc ret inc pop jno jp xor lahf push jg outsb lea in lcall ficom inc adc cmp in imul fisub jbe sbb aaa pop imul sub jbe push ljmp pop xchg xor mov cmp stc sbb and aas sbb pop push call insl outsb mov into or pop mov lods and add out sub mov lds (bad) mov cmp inc out ds mov push inc pop ret lods cli cmp xor int test pop sub mov (bad) fidiv mov push enter sarb pop or push cwtl in test jle lock outsl gs les (bad) push rclb inc into push pop cmp sbb jbe icebp cltd es pushf cs mov push mov (bad) mul mov loopne shlb fwait sbb cwtl and inc push sub aas cmp or cmp inc push sub or or xchg jb pop pop cmc pop and mov nop inc (bad) outsl push aaa or lods fsub xor aam repnz pop dec scas jns xlat mov dec add cld jb dec inc (bad) das and shr movsl pop sbb mov push cmp pusha xchg push adc xchg outsl add inc sbb cwtl es (bad) pusha sbb jl (bad) ljmp sub xchg pop (bad) push and ljmp inc mov testl cmp (bad) lret sbb arpl lahf (bad) jl sbb cmp sbb sub cltd add pop and cmp adc dec mov cli sub mov add cwtl dec lds fdivrl mov and mov dec adc inc clc pop inc imul lods pop add incl fpatan (bad) pop mov icebp mov nop mov mov push test test xchg and gs stc sub inc ljmp outsl dec lahf das mov (bad) stc nop and dec out pusha lret int (bad) iret je mov scas pop addr16 les repz push arpl test cmp inc pop jle shrb cld mov jno pushf add sub dec popf mov scas jnp mov xor loop addr16 sub inc pop push repnz (bad) push jmp insl mov fs aad cmc push cwtl (bad) xlat cmp mov mov add lcall jl aam (bad) cltd rolb pop (bad) dec je mov lcall cmpsl xchg imul pop mov call dec adc lret pop sub std ret sbb dec clc in dec adc push sub xor lret leave in rcrb mov lods jbe push arpl cltd xchg jmp pop clc (bad) arpl hlt sbb adc push and jae jle (bad) mov cmpsb test fs push mov jle jle popf pop cmp or mov (bad) jb scas inc xor repz or subl sub jnp mov add insl (bad) test push sub dec movsb pop out lret mov packssdw mov sub cmpsb int3 mov test pop xor clc (bad) mov jge sub movsl or lock in sbb fsubs inc add sub repz pop dec gs gs or aam dec cmpsl ja adc mov xor fistp imul mov jg push pop sti daa sub ret mov fwait jne mov pushf je aad pusha jae sub mov orl and jno in lods mov leave test sub ds lock popf pop cmc xchg jge mov add sbb jmp shrl push cmpsb and mov cmp in pop mov xchg push ss sbb push popf jge dec or shl xchg sub add push sahf xchg or dec push push leave jle sub in pushf cmp sahf movsb jmp xor je das sub pop mov inc mov in inc mov ficompl add pop ret lret add add stos les paddusw mov mov jp pop jge mov rcrl cli in pop xchg dec repnz pushf fistpll sub xlat imul sti int pop mov outsb test push dec loop shrl push lods shlb inc mov js dec mov pop jmp out incl scas into scas xchg insl lods lds jmp add test jb popf push insl sbb aas mov fsubs lcall push push stos inc popa mov cwtl fwait push xchg out add inc sbb sub mov adc inc scas dec cmp lock lock xchg sub mov neg lods jg and mov pop movsb sub and pop adc mov or insl push imul adc repnz outsl add jnp sti addr16 ljmp jno xchg rcrl cmpsb lret lea inc push add adc mov js cmpl mov sbb in hlt cmp cmp dec aaa sbb push or mov cmp lods imul nop jge and lret cmc adc (bad) inc mov rcrb push mov das in call adc inc push cmp mov (bad) mov add into int3 push (bad) ds lds or cwtl jae into jle push (bad) push and lods lock mov (bad) dec stos sahf jnp outsb mov pop mov stos call dec mov inc mov mov (bad) cltd jno ds cmp fstpt cmp dec lods out mov nop xchg outsb push data16 les daa inc aam push cmpsb mov pushf out jl mov and in in subl jg inc aam sahf pop fs mov add jge pop cli xor inc aas addr16 mov push icebp cmp pop (bad) push add fs imulb movsb mov (bad) mov inc jmp pop sub xor arpl aaa ds push stc adc and mov dec rclb fidivr fnsave add adc stos loope pop test repnz push pop outsl cmp int lcall cmp negb inc dec jmp jne pusha jecxz scas jno scas push xchg sub inc dec ret inc stos xor (bad) xchg pop movsl cmp jnp ja and and (bad) mov jmp dec lds pop mov out sub xor pop mov rorl sbb or adc mov push mov mov and dec movzwl cli leave sub mov mov enter xor fcoms add ss cmp dec mov xor outsb cmp adc dec pop sbb pop dec or cmp cmpsl out repnz jnp or xchg aam add xchg add jg or mov adc push jge int3 inc mov pop sarb or out sbb data16 jb ljmp das popf lock fwait ret fisubrl jmp call inc fwait jg xor stc adc out pop xorb lods cmp lods lret adc jbe jge gs sbb aas rclb push mov jecxz xor and ds sbb lods (bad) lcall xchg push (bad) jge jmp outsb add js lret jne xchg ljmp adc xor das pusha std addl mov lcall inc xor (bad) cwtl xor mov or mov into daa cmp add xchg push movsl xor dec inc dec sub mov inc imul fmulp adc cmp and adc je ds das rorb cmc insl xorl pop pop (bad) fcoml mov add and pop jnp mov rcll pop int3 jns out jmp aam jb out adc rcl jb out in pop dec xor sbb (bad) mov aam cmc mov out pop sbb sbb xor sbb cwtl dec adc test mov add cwtl repnz out xchg daa (bad) lret adc js mov lcall test adc xor fadds pop sbb call pop stos jns lret in (bad) dec fnstcw cmp shrb mov repz inc xchg push scas jg adc test jle clc pop les add fisub jb insb mov (bad) xchg mov outsl sbb ss mov adc rolb pop dec sub mul add sbb adc add in mov das mov pop fisubr arpl pop lret pop jne add xchg (bad) aaa add pop (bad) xor fistl daa mov fiaddl mov fs or nop push push ss and (bad) aaa mov mov mov sub shll rcrl pop push fs test inc ljmp (bad) jb push loopne mov cmp gs push pop inc outsb adc ficompl decl call mov lock test fisttpl push loope mov inc pusha in and in xchg and into out aaa out pop (bad) xchg fstpl fs arpl dec setge pusha mov adc pop push pop pop adc sbb pop push test cmp mov mov cmp sub stc (bad) rolb lods stc pop (bad) xor out ja gs pop hlt mov adc inc test mov in lock mov lock xchg push (bad) dec add push mov sub mov mov cmp add sbb (bad) xor leave jl lods jecxz pop sub inc stc xor or xchg jmp push fadd sahf ffree lods in pop out mov icebp pushf ljmp mov pop ja add jp js cs or (bad) xchg in dec pop mov push pop dec negl outsb inc fcoml lods jge push gs cmp hlt popf cwtl sbb pop (bad) jmp ja push mov cld cmp sub xchg mov cltd fisttpl insb mov insl add stos dec cmp mov add loopne outsb or mull cmp leave xlat mov movsb mov test mov mov push xlat mov xchg loope out mov mov mov icebp xchg inc lea cmp lret push inc push pushf xchg pop sub dec fnsave or ss mov sub mov mov add call xchg sahf roll push or cltd mov dec jo cmp out cmp adc pusha cmp xchg leave xchg inc inc jnp jg and lret add mov mov mov mov mov mov sti clc out pop xchg aas mov enter cs shrb cmpl inc or push dec jl dec std add (bad) ja in nop sarl imul inc insl aad popf dec sbb in jmp ljmp jmp and sahf sub idivb outsb fwait and or fs imul xchg mov xor and mov inc add fwait jmp imul add pusha xchg and xchg addr16 jmp lock fldl stc push mov in fwait jno cmp int loope add (bad) xchg imul insl push jle pop loop loopne bound dec pushf orb or xchg mov dec ret inc inc dec movsl mov push and sub test lods jne xor adc je sub (bad) fistpl sub mov mov dec (bad) dec outsb add xchg xor das sbb ljmp (bad) test mov jne xchg inc lret mov insb loopne insl jge pop and call mov test cmpb movsb je and test int push mov nop pop xor pop push jmp pop outsb cld xchg pop (bad) nop mov test test cwtl jle (bad) sub fildl push data16 dec sub orl sub push decb js xorb jp mov cwtl mov push repz js xchg loop dec mov mov and lahf push imul jge stc mov jge lock mov stc inc std jg dec push movsl adc xchg jnp dec stos aad inc aaa mov out mov or insl imul push push xor ret cmc out loopne pop xchg push xor sbb lahf cltd int3 cmp int pop lret (bad) mov enter push jnp (bad) hlt cmp jecxz sub test xchg loope xchg lods sub in or and in cld fwait aam push sbb mov aam ss pusha mov fs adc int3 mov lods add and mov push push cmp adc mov push insl inc in js aaa cmc mov das xchg jno in jae or addl xchg push pop adcl in sbb dec jge xchg nop negl mov pop jg (bad) movsl push mov add sbb cmpsl sub mov xchg jg jnp das ja mov add xor or sbb sub ds dec stos mov jae jnp mov cmpsb mov hlt fwait addr16 cs stc cmp insl aaa mov lods cmc test inc mov ss insl ljmp cmp adc ss jnp inc (bad) sahf mov outsl adc pop mov arpl pop adc sub cltd fwait sbb xchg mov in pop mov addr16 dec push sub jl xchg mov mov sahf or inc fwait jmp add scas daa cmp insl out fwait adcl (bad) sub iret out les sbb rcrl test insl sub xlat cs inc mov ljmp or pop loop and xchg inc adc pop leave out std inc inc mov jnp pop int3 jne gs and cmpsb out ss xor cmp xor ret xor inc add cmc dec jo lret insl add out adc push pop js aaa lahf cmpsb das cmp sub sub dec scas sub mov cmp jmp loopne rcrl scas movsl push jns sub jbe and shlb lods shrb sar add mov push and cmpsl ret test repnz cmc cmp sub pusha mov jp out out icebp push fnstsw xor lds sahf push or xlat lods jnp jle pop ljmp push int3 cwtl lods push int3 subb push insb mov test xor dec mov push inc or lret fnstenv stos enter and (bad) gs mov dec mov jmp sub dec mov jmp insb test and pop jge pushf or jne push bound cmp jo push and pusha icebp aas or sti (bad) mov negl push xor orl aam lods push dec outsl es cmp sub lods xor push cmp (bad) (bad) xchg jge lods mov sahf in mov ljmp jmp dec mov insb xor mov push fnstsw push imul adc xor out mov add xor pop stc sbb xchg push push push (bad) enter or pusha cmp inc ss and xchg mov ret adc mov jae es jge jno mov dec std jno pop mov jnp sbb jns jle ret xor in dec inc cs mov in cmp pushf test dec jge lock add dec int3 xor insl cmp and push js imul jle push pushf inc test inc arpl mov sbb pusha (bad) xor mov ret sbb icebp and mov pop repz pop sbbl xchg and adc dec in daa mov cltd jge mov in pop adc movsb in rorb pop jg inc xchg test addr16 addr16 sbb cmp xchg test and mov sbb sbbl jecxz dec jmp mov ret jmp dec jle mov aad sbb mov sahf dec mov push push sbb imul jge dec fwait pop sub cs in pop jl mov or inc xor and sub inc jge sahf arpl jae dec out test cmpsl ljmp sbb lds mov adc pop inc std in rcrb mov sbb ljmp xor sti repz loop aas imul pop pop js out cmc aad (bad) dec pushf pop test popfw sbb xlat or insl jge lods leave ss sub sbb out push jge std loopne ficomp jns push ja (bad) clc enter inc das jae dec push aam sahf dec inc pop lret test xchg adc fwait cld lods xor cmp test jg cmp out sahf xchg jmp int3 sbb cltd jnp fcoms test lcall lcall xor cmp andb (bad) mov clc mov mov xchg popf in stc sarl xchg jne out mov or cmpsb mov ja cli add out fxch and pop inc icebp jns lahf dec mov mov in xchg pusha test cmp inc and cmpsl popa fwait aad int mov jmp mov dec xchg mov insl jecxz mov xor into loop lock cmp add loope push sti pop adc mov (bad) stc and sub (bad) xor mov jnp push adc subl sbb pop int3 mov pop mov push inc and clc pop loop or mov lahf mov outsb notl dec mov dec cmp or dec mov ja in jne das cmp aad adc inc fdivr cmp xor divb scas out adc sbb cwtl xchg or sbb sar add scas sbb pop lahf sbb ja (bad) shrl cmp sub add (bad) xor lcall push cmp push push mov xchg push mov mov push scas mov popa lcall pop push es stos jne pop cld fbld xchg lcall pushf jmp xchg js int cmp inc cmp cwtl js jb sub dec das jecxz xchg js imul repnz scas in inc push int3 jge lahf int or pop pop push shr stos xor idivl push int cld and push add cs pop std lea ret pusha dec pop fsubrs call or pop imul pop imul int stc cmp je push es cmp dec pop sbb cmp cld sub rorl lods (bad) cmp inc cmp push mov sub aas sub jbe test fs cmp cs push or lods dec push jmp push xchg sub pop mov pop je xor jbe inc inc sarb push ja cmp sub call pop and xor push ficomp pusha or push aad sub or add fmull mov ret sarl xchg dec cltd insb xor aad stos xchg ja push shrb add push fisubl out (bad) mov not xlat xchg popa cmp fs sub sbb lock aas stos push push push pmuludq sub int sahf icebp sti jns add inc clc inc outsb icebp xlat lds mov jp ret mov xchg jg push lea int3 jae dec sbb mov adc ds cmp dec jmp lds inc data16 je out inc leave ljmp adc jbe push adc mov sti clc and in ret jnp fs int ret sub ja icebp xchg lret mov or hlt push outsl mov test scas loopne das xchg out out mov xor ds mov or inc outsb insl popf lds push int3 mov cmp xchg mov clc push gs xor or xor or mov ret fs jb jp jp inc dec insb push ljmp fs lcall and add push inc xor adc std imul cltd mov pop jnp cmp jmp add add push push std push cmpsl test xor push lcall leave mov cmp ret fadds add and lret inc loop imul scas push pop xchg rcr dec mov in pop imul aad aam fsubl mov (bad) cs rol pop ret ljmp mov push jle and fwait mov xor pop je data16 sub jg cmc movsb and add fsubrp jecxz mov ret push push xor xor push adc ds lods (bad) movsb cs lret or lea xor adc or ss dec jge das sbb cmp ret jl dec lahf mov (bad) ficomp and lahf daa out jecxz mov ja sub je cmpsb jae lahf push sub pop out add ljmp popf inc mov jecxz jg mov sub int3 shlb inc sub pop fidivl fmul hlt push test rorl stos je hlt rclb iret dec int inc inc fdivl and stos test mov sbb push dec in test jle push xchg adc jmp out sub ds cmp add bound cmp int hlt dec scas inc xchg outsl sbb stos cli sub in mov add cmp sub push and aam cmp es sub (bad) mov pusha lods mov sbb dec mov mov mov add push xchg loopne jne mov dec mov das nop sahf push scas sar xchg cwtl jo mov and mov imul pop mov clc push outsb push cmp cmp xor mov xchg add jle setle dec fucom test in fildll push in popfw mov push mov push shll dec push daa sti jp data16 add xor jb push aad inc sbb pop push clc mov incb (bad) mov addr16 jmp (bad) push jae xchg in and add add fsubrp pop fbstp stos push scas aas xor fucomi cmp mov jg sbb fstps pop xchg (bad) fnsave push cmp loop ljmp push cmpsl xor mov into inc xchg mov mov and imul test sti and out xor add sbb mov insl loope out loope lds add mov or sbb push cmp scas out in push jmp fwait stc iret dec xor dec mov dec fidivr nop mov arpl xor cmp push or lds testb xor js inc es int in cmpsl xlat jae aaa pushl repz or repz lahf mov lods insb dec dec dec dec ret lock xchg scas mov in dec lret (bad) nop cmp xchg pop gs in jp lret in mov test or mov lds jo ficompl fistp sub jns aaa cmp (bad) mov push adc mov xchg inc and nop imul addr16 push jmp xor std call mov and lods cmp addr16 insl out pop mov aam xor jp mov shrl jno out xlat scas mov sbb pop xor ljmp sbb sahf mov shr aam ds aad dec fist mov in xor mov push inc js repz xchg (bad) fcmovne and jl (bad) mov fstps (bad) out push stos inc xor push and repz mov mov jmp fildl cmc mov test lahf fist jns test je dec stos sub aas xchg xchg (bad) sub (bad) xchg pop or insl cmpsb pop outsl test cmpsb lods clc cltd pop sub and cli repz mov cs ljmp mov (bad) fucomip xchg outsb inc mov mov bound push repnz out push xchg jae dec testl push cmp stos pop xor mov inc push pop cmpsb inc ljmp daa jae daa insb jle fwait cmpsb sub or inc jge test imul pop sbb insl cmc and shrl or mov xor das push and xor jle lahf xchg adc dec jmp movsl dec dec add sbb lea in dec xor adc and daa into jae fcmovnbe in mov test and fwait or imull xor push adc dec pusha or sbb enter xor in mov mov je add or jbe,pn push pop mov and fwait mov mov cmp push or (bad) mov (bad) cmp jnp inc mov sub jecxz sub std jle add sub loop xor sub cmp cwtl xor cld and int ss scas xorb nop jo jnp out push pushf mov or inc jge ss movsb push adc sub and sub mov fs out enter sub sub pop push sbb dec jge fs dec fwait xchg and dec xor sarb jne sti fld dec movsl in cmp sbb xor dec mov and insb cmp lret cld sub dec stos cmp fdivl aas imul and movsl mov dec fcoml xchg sahf shl xor cmp lar sub inc ret cmpsl jg sub xchg lahf push fnstsw shll sahf pop mov pop adc cwtl add pop stos mov dec pop add jmp sti mov or gs fiaddl sub mov mov test push movsb or and out cmp xchg mov xchg scas test je cmp pop xchg sub pop int3 pushf jbe popa sub test lods cmpsb push ret pop cmp add inc movsb shlb (bad) lret dec dec jmp fistpll or mov xor std out mov dec or add pop xlat inc in lods daa jecxz dec and cmp pop fsts aad or (bad) or dec (bad) out sti jmp in push push xchg lds sub mov or jnp pop clc xchg dec jne (bad) das jns loop push cmp adcl cmp xchg push mov xchg repnz leave call paddb insb fcmovnb popf (bad) xor push and or push jns cld shr (bad) sbb out scas nop dec sbb cs cmc fsubrl sbb push mov int jmp (bad) mov rcrl insl and dec (bad) mov inc xor and xor xchg pop add clc data16 sbb (bad) std sbb outsl mov add sub insl bound ss in ds mov add cltd aaa pop scas ret xchg imul call dec out ret les ja adc sbb sbb pop lock cmp js sbb sbb fisttp jns iret sbb leave (bad) icebp scas and sub sub sahf and mov pcmpgtb sbb jg enter outsl or out xchg out pop leave out xchg dec (bad) aam mov push repnz xlat inc cmp pop jo mov in fadds stc or das jmp and jmp lods in push mov sub adc sbb mov lret and cli adc mov sti sub jle add jne xchg in inc enter mov orb outsb sub cs cwtl xor fwait jnp pop cmp lret pop adc adc call mov imul mov cld dec xor ljmp int3 pop mov add lea test sbb fmull xor scas add xchg dec inc ja sbb sub out imul movsl jo in cmp or mov xor sub mov sbb stc jmp mov xchg pop or in or mov dec sub sbb pop insb iret imul mov test sub adc dec xor in jne ret cmp push and mov test test mov sub lock rolb dec cli jmp sub outsb loop pushf pop jb push aaa insb pop (bad) (bad) mov xor (bad) mov mov dec push xchg cmp int3 sbb mov mov pop repnz jb xchg inc (bad) push add mov xor je mov lds rorl dec or loope cmp inc insb or in adc mov imul gs or sbb sub xor std mov iret add sub pop mov inc xchg cld (bad) mov pushf sti jo xchg inc push mov call cltd jg (bad) daa hlt mov mov ss shll gs std sahf ljmp jns add ljmp mov sahf pushf les inc jbe out jb lret mov cmp push jle xchg je test out adc or fs into mov addr16 pop jb (bad) mov lahf icebp pop and inc jne js insl jmp enter cmp sbb imul pushf incl pop sbb jge jbe test xor aam or out pop imul add cmpsl dec stos or into sub fsts cltd cmp in sub lret jmp addr16 mov jo sub sti fisubl add adc call jae pop xchg stc push and bound adc or sahf adc jno fsts pusha stos bound xchg sub xor inc inc lahf mov jne loop mov mov (bad) xchg aam subl out sahf mov mov rcll fmull sub cmpsb cwtl dec test push xchg gs out arpl enter scas jne outsl adc scas pusha jle jge xchg fimul test nop sub push (bad) mov push adc test popf push dec cmp sbb aam add lret repnz or push mov inc dec adc and ljmp adc inc xchg cli repz repz ret (bad) cmp insl mov mov adc dec mov sbb insb pop enter xchg ds jbe dec lret xor out push stc xor sbb out mov out pop jp inc xchg clc out out outsl xor sub bound add arpl dec (bad) das imul jnp scas xchg lahf mov jne push inc pusha out cs mov andl test pusha inc dec nop pop pop fisttp cld pop cltd jae inc insb add (bad) jl sti aas mov cltd jl (bad) and add cwtl or push out je call mov std scas and mov adc add rcr xchg in push cmp adc (bad) xlat xchg (bad) scas movsb xchg push jnp lret stc stos inc dec pop mov dec lock push and out mov lods sbb addl lcall test int jns sub mov aad mov xor lahf lret leave inc dec push into jle mov ljmp test mov inc mov int3 push dec sbb lahf (bad) xchg xchg test imul dec add or xor cli icebp add add sbb xor js xor gs inc test sbb inc xchg inc adc sahf mov xchg sbb dec mov insb ja adc mov jbe call popa or mov adc out rcrb repnz fimull mov negb repz mov pop leave iret inc jle insb (bad) repz jg push dec cmp mov sub add imul sbb mov and sub jg stc fs push or or xor js scas mov xchg mov in hlt insl imul mov sbb xchg cmp xor add xor arpl cltd mov dec dec iret stos ret jg or cmp jle dec dec push dec jle mov push ljmp (bad) mov xchg ss lods or sbb xchg bound out rclb adc xchg arpl pop jmp lcall lods pop pop insl jge push dec rol jo xchg out stos lods sub jo (bad) sub dec dec adc xchg (bad) cmp cltd inc xlat stos popa sub into mov inc lods repz sub and jbe sub ljmp aad gs orl push das outsb mov insb (bad) out push loope or loopne sbb xchg xchg mov sbb inc dec cltd jne lcall aaa and xor rcl hlt dec cld pop das lds xchg push orl (bad) xchg in std imul mov fnop lods xor repz adc push pop pop mov popf inc xor scas jmp xor test aaa leave adc out or ljmp or cmpsb stos shll xchg mov add xor cmpsl mov stos pop rol sub enter out das mov mov add out rorb insb call aam (bad) xchg aam cs insb jle mov dec andl iret out mov addr16 sub arpl inc jmp fsubp jecxz outsl mov xor mov adc out insl adcb sbb lahf mov add aam pop in add pmaxsw ds test fisttpl pop jo scas jb test push imul in sahf add push and cmc loopne scas imul add dec jp jp nop fdivrl pop divl mov insl dec jmp aam movsl loope mov dec cmpsl leave xchg clc xor mov push cmpsb mov push aaa insl mov repz mov std iret jnp add cmp mov loope adc mov dec mov push pop and movaps mov and jae arpl push pop idivb movsb lods cmpsb into int3 jae jo int and pusha insl les or mov push xor scas push sbb xchg cmp sahf xor jg pop jo mov sbb insb scas or bnd push sub out mov mov mov xchg mov mov incb mov fs jg pop jle push or cwtl and xor push pop imul fild lahf test in or or cli lret add push mov test cmpsb lods xlat cmpsb repz push test pop shll out addr16 test mov mov addr16 or lds in mov cs je dec dec sbb mov iret dec shl mov lock dec dec pop test in sbb loop cld dec inc and cmc sub test jge push jb sub dec int xchg sarb and or and mov mov cmpsl mov xor aas push or outsl cmpsl mov nop push add (bad) hlt loop shll dec sub leave imulb jae xor adc inc sbb clc cmp adc pop sbb dec into mov mov jae mov (bad) mov lahf dec enter jne push mov imul pop js arpl xor icebp loope add push push xchg pop ss sbb jb mov insl add inc adc test sbb jecxz movsb mov cmp gs std or pusha xchg inc in pop clc jge lds je rclb mov adc lods outsb add mov into lds arpl inc push imul xchg scas movl push dec xchg push xchg subl addr16 fcmovne int3 mov mov mov dec ret mov xor clc xor nop jae (bad) mov in out in push imul ss andl out adc in mov pop cmp pop rcrb mov mov and adcl lret lock cmp loop mov in pusha into arpl jno insb scas sub mov dec (bad) sub sub mov std dec push ss mov dec push and jle push das fcomps push jns inc and das aad inc inc dec idiv out and adc push dec std ret enter jbe sti js jae push fnstsw dec sti sub loopne cwtl popa xor adc xor pop ds in sbb data16 pop insl fsin negl call repz lds pop (bad) into and or cmp xor cmp fs or push loope mov movsb jle das lods jle (bad) mov mov push adc pop mov jns jnp cmp push adc sbb nop adc faddl out outsb mov lock add jp xlat aaa in iret les repz sbb fwait (bad) pushl pushf mov pop lret or in test test pop jnp sub gs aaa jns mov icebp in test sub jp adc mov push stc cmp jb pop hlt fldcw jge rorl sti push sub (bad) in pop cmp sub (bad) mov lds push enter sub fildl gs sub rcl ds jne popa repnz xor add ljmp lods sbb addr16 pop fwait cmp nop sahf push outsl inc mov push pusha sahf ds lret xor ljmp in lock pop adc out aad xor fdivl and stos fs rcrl push arpl jns sbb jne or mov mov mov imul mov xor rol cwtl sub mov inc je and es cmc jnp and sbb loopne sti sbb jecxz xchg lea (bad) jge nop push icebp lret xchg popf or out push ja xchg mov inc (bad) or test ljmp dec daa sbb xchg jg jecxz sbb mov popa andl inc ret jnp push js mov push jmp or (bad) loope cmp jmp fadds ficomp es cmpsb mov or mov inc inc mov pop test repz sub jecxz ds (bad) pop or mov ret fmull jnp imulb aam mov rcr dec (bad) dec cli clc fwait pop lock cltd xchg loopne or xchg xchg jg push cmp std mov lods das ret shrl pop push cli jae jnp jne int push and xor bnd inc cli cmp push mov or jmp mov aam xor das add sti mov xor cmpsb test incl mov (bad) mov add add ret mov rcr and jmp stc sahf mov jno rclb clc stc (bad) cmp xchg lret dec cmp sbb cmp inc popa sbb out mov ja std dec aam adc mov cmp mov pop mov repz dec xchg pop cmp and ljmp lcall cld (bad) dec lret int3 cltd mov int3 dec add pop cmp jp cmp loope aas sub cltd jle sbb push int3 dec sub sub mov and push add sti lahf (bad) syscall icebp mov into add push cmpsl and sbb push data16 pop in push inc pushf js sbb popa pushf jmp (bad) jmp lahf out push ss pop sbb xchg adc mov (bad) jge dec add lock sub adcl xor add fldenv xchg sbb adc test jp (bad) and mov or sbb lods fwait jl loopne (bad) pop out sbb nop xchg pop sbb pushf jge xchg and or int dec add (bad) lods adc sbb in fiadd lock decb and fs ficompl or xchg push rorl loopne (bad) adc push sbb cmp in adc loope xchg test popf pop mov setb push cmp mov scas sbb sub and push jmp (bad) hlt bound push and xlat inc xchg lock jge (bad) je push into leave xchg or sbb mov pushf dec mov popw mov lret and sub in jns ds sub sbb add sbb sub (bad) fcomip jmp jb je and push ljmp imul mov (bad) sbb cmp inc cmp push jmp mov jmp sbb sbb hlt xor jmp push inc lock xor or mov pop sbbl xor pop in push cmp or aaa repnz sahf lahf daa jnp pop js inc add in test hlt mov add les dec gs inc ret fs push and cmp or out daa and fildl inc sbb daa dec xchg mov std call (bad) popa push cmp fs pop hlt push pop jbe push cmp inc mov push adc push xor scas ds and les div movsl gs cmp sbbl xchg iret sbb daa dec jge xchg loopne nop scas inc scas popa xor sbb rol push jg ljmp mov cmp je fisttp fwait test sahf enter pop sub mov push movsl std sub push xchg stos and xor or adc out popf in aaa (bad) mov movsb pop or push sti daa and inc mov adc dec mov mov pop mov push inc push push xchg sub dec inc lcall sbb out mov mov imul pop (bad) movsl cmp out push push push ret das xor dec popa dec cld adc scas js and mov gs sub repnz mov jae inc xchg hlt leave mov jmp nop std sub xor movsl push in scas and arpl sahf in sahf int mov cmp jns fild xchg push mov xchg bound je js cmp out les push cmp xor into mov xlat push and xchg shr cwtl jmp mov in push jne lock push mov loopne aas add jg sbb out jns pop hlt jne test jae adc jo cs dec and inc xchg mov xchg and pop mov fstps add push mov xor push cld shrd inc or scas pop cmp in test into negb mov mov pushf jno or mov push inc jle pop ffree lods mov jecxz push dec das pop xor pusha cld mov and jg mov sbb or pop jo movsl das pop or push jns xchg sbb mov push ds out inc jmp mov mov mov lret out fstpl (bad) (bad) mov mov jmp xchg je ret arpl into cwtl (bad) test test fisttp pop movsl mul pop mov data16 movsl cvtps2pi (bad) clc test in pop adc iret addr16 dec pop sbb sub jb adc lods jmp out fwait mov and push mov inc jno clc jecxz cwtl xor repnz mov push out inc imul aad or int3 imul inc ds movsl or cmp and xlat ficomp sbb xchg imul lods aas lds outsb mov mov mull mov inc mov sub push int3 loop ljmp pop outsb mov add in aas icebp dec mov pop mov xchg imul scas sbb jns dec lret mov push ss jle or int3 faddl (bad) xor in cld repnz fnsave pop shld repnz jo push aaa in scas aas shrl (bad) push cmp push repnz push or outsb lods push in inc mulb sub add mov add pop jne mov xor or out (bad) pop sub lods or in mov shll stc add sbb scas mov loopne xor jp sub in ja neg movsb int cmp add fisubr out mov idiv lahf ja jp sub (bad) xchg jmp mov cmp fidivr xor sbb adc loop ret insl outsl mov in lahf popa lods cmc adc jmp stos shl mov xchg cmp jl push icebp stc les dec pop xchg sbb add cmp loop pop cmp cmp in sub push jbe and syscall cli xor xor jp mov mov cmp dec mov cmp cmpsl add lods sub and imul jmp insb push das insl pop mov pop cmp push mov scas sub jnp push pop push fcoms cltd pop lcall sbb in sub and insl jp mov or push scas arpl jmp or pop sub cli fs cld cld into pusha cmp ss mov mov jmp test dec (bad) lock out out pop mov dec mov in xor adc in lret aad arpl pop scas jbe add lret test xor mov or idiv adc repnz shlb loope cmpl shrb push inc push mov mov adc mov iret dec mov scas lret push mov mov imul mov fwait in mov je cmp fs in lcall inc lock jg popf es push jo pop test in sub int3 int3 mov adc bound (bad) push je ljmp icebp ftst push daa or mov out je (bad) les sbb lahf mov fwait js adc shlw xor das jecxz out inc fsubl sbb cmc vandpd outsl sbb sbb fnop mov push in outsb cmc sub inc adc repnz inc pop sub cmp mov pop xchg addr16 adc pop int mov lods imul lods mov jge cmp aad push lods xor (bad) ja mov mov stos adc pushf out in les outsb (bad) in js xor repnz cwtl sbb mov les cs sub pop ja push jg sbb sub jns lods lds jmp jecxz out lock stc mov ja call (bad) into (bad) fcomps notl and mov ss pop aaa pop inc or add mov loopne sub cmp pop push ret jg or pop pop js out push dec or (bad) mov mov pop push sub ljmp cmp fwait jge fmuls rorb (bad) cmp jmp mov jle sbb in jne test je mov sbb sub dec in hlt mov (bad) jns cli fwait pop inc cmpsb mov xchg ret test xor test sbb mov sahf pop into scas mov xlat sbb mov (bad) dec push jmp sbb sbb rorb or xor xor (bad) int sbb mov mov jno,pt flds test iret pop sbb mov mov rorl in push add mov inc and js lcall enter lods jae (bad) lods add ret mov test test rcrb ret ds les jae dec ret jnp mov in ss jo scas add sub or stos or jle ja (bad) data16 ds daa sbb add push adc adc push js xchg clc ss xor lea movsl xchg jae xchg cwtl divl out push movsl jns mov int3 jae mov mov (bad) or mov sub jbe fldcw loopne loope lods adc push in repnz call out lret push sbb les int leave mulb call push jmp sbb sub fnsave sub or jno negb orl sbb lock sub (bad) and push jp inc hlt icebp push rorl inc sub out ret inc sbb cld cltd mov call hlt cmpb mov fstpt idivb test mov push push mov add sarl sbb lea addr16 mov rorl shlb out jle cli int3 inc cmp add out iret push xor fistp out push fldln2 out pop mov xor mov jg mov leave or push sub or or push test xchg cmp pop test cwtl mov aam repnz mov jle mov (bad) pop inc dec sub add mov add sub mov push leave push lock lods push out cmc mov push mov movsb xchg test iret data16 cmpl (bad) mov int mov xor in cmpsb add test leave insl in sbb (bad) (bad) sub dec (bad) dec xchg sahf push dec inc lret lea mov loopne lret ja jmp mov dec cmc test jp push jle punpcklbw into pop addr16 xor pop in faddl sub insl outsl add jnp fidiv mov add inc sbb cwtl (bad) mov mov cli ret outsb cmp cmpsl dec loopne xchg in push and popf mov xor sbb (bad) das pop mov cs xchg int inc xor out fucomp inc test fs in into mov out mov jns mov jecxz xchg fstpl or pop insb les jno sub inc stc lahf push popf out push fcomip inc js cli dec (bad) lds gs adc push jae aam inc in popf jmp bound loope add or mov cld fs negl add pop hlt push inc push test ljmp popf mov ljmp and adc xchg mov aaa out mov add jg pop addr16 adc push push loop negb call or das cmp ds scas push sub fbld pop mov cmp add rorl out jg fstl scas xorl sub out dec cmp jnp cmp out cmpb inc fmull fwait test cmp sbb adc pop jmp inc lcall push std pop mov addl sbbl mov loopne lahf push int mov add leave div and mov in cwtl mov iret push pushf shr sub and cmp jmp fnstenv dec int or jmp idivb add insb inc and addr16 movsl imul adc nop cmpl stos movsb out lock and jo fmuls push xchg popa pop (bad) aad mov xchg mov fnsave movsb push lods out mov dec enter lret arpl in fxch jge xchg aaa mov mov cmp push inc sbb cmp sub mov mov (bad) or ror jle out mov outsb push inc mov or frstor movsl mov jmp mov ljmp outsb fs (bad) pop mov in cs mov aas add xchg mov pusha jnp movsl mov sarl mov push lods out flds add leave dec pusha lea enter cli push push add sbb jmp sbb pop clc pop shll mov pop sbb test and sbb hlt pop in cwtl xor xchg adc mov shll mov push out lret cwtl cmp (bad) enter into fucomi repz lea xchg fcmovnb ds (bad) mov fbstp cmp mov pop adc add scas cmp popa jb inc fcompl sbb cmp aam aas xchg pop cmp or xor loop clc out mov cmc rorl adc mov sbbl lahf mov sub clc pop pop jmp out in sbb push mov mov insl push imul mov mov testb sbb repz ja fdivl push cmp sarb (bad) push in adc adc and imul rep in xor arpl pop scas int3 xchg and idivl movsb pop stc xchg mov adc leave pop aas cmpsb ljmp xor mov add mov in repz mov pop xchg pop imul adc fwait sbb xchg mov xor mov xlat scas sbb dec cmpsb xchg adc lea repz add jl test out rolb in arpl (bad) lahf inc cmc push lahf mov adc pop jns bound sbb cmp clc into je or ljmp cmp push mov ret test and out movsl adc iret popf mov pushl and xor sub dec jbe cmpsl (bad) add sbb fimull outsl sub sub dec cmp and or mov cmpsb mov push or in mov movsl jl cmp xor lock test call in dec out pop pop mov add ljmp cmp in push xor nop mov and fildll add cltd cmp jne repnz inc dec push data16 adc aaa add nop enter mov (bad) call int xlat xchg test push jmp cmpsl xchg xlat insl out gs xor icebp adc loope in push enter and test nop dec lret pause mov adc pop (bad) mov dec out sub mov inc cltd daa nop sub movsl sub mov idiv insl add add cs aam loope sbb mov cmp jecxz imulb xchg cli mov stos mov jbe or into jl push mov ror scas ficoml test sbb cmpsl (bad) xor gs add sub hlt jge fs mov fdivp ja,pn imul test cwtl xchg in test inc lea adc loopne mov in fsubl call in mov pop out and lahf (bad) jg,pn adc movsl fldlg2 dec fwait test push cwtl data16 inc outsl cmp pop xor xor test sub lea ret out cmp xchg clc adc movsl loope push cltd arpl (bad) cmp into mov into lea dec js lods push stc dec jns mov push orb jmp inc xor mov adc push add pop movsl fnsave in jnp stos push cltd (bad) or rcr (bad) push or out in in pop out mov stos (bad) push add push call cs push inc (bad) mov xchg push jmp push xor (bad) mov sbb fimull jne add in xor or xor test adc addr16 rolb or push pop iret mov cwtl leave sbb xor adc pop scas daa sbb dec dec and xchg nop (bad) or in xor ja xchg loopew popa inc mov loope in mov in mov dec or pop inc outsb in out ret inc clc xchg cltd mov push jns jnp xor outsb pop xor insb xchg leave add fdivl mov sub add ja mov aaa orl mov push xchg lds aam (bad) xchg push stc mov add pop gs scas mov mov scas xchg test or mov faddl add cmp xchg sti repnz test add jge loope (bad) adc lret push (bad) lds jns cli mov enter dec (bad) mov jge fsubs stos sub mov pinsrw xchg push inc fcoml shlb test push in xchg jg or cmpsl mov mov or push dec push jb in or stos xchg mov mov sub jnp and push aas inc mov push pop lds insl push std xchg popa xor push push das cltd outsl mov fist aam mov push sbb leave xlat xchg out cmp lock push push inc cmp sbb dec pop push mov mov fsubl jae xchg js push setp jle popf test cmpsb and insb int mov outsb imul movsb cli int push out clc adc dec movl push dec push mov rcrl ret sub loope and inc insl add sbb sub scas push arpl mov lcall in ljmp adc int3 and add gs pop test or sbb rcll stos movsb leave mov mov movsb repnz cmp arpl mov imul or fmuls jae dec lahf sub pop cwtl ss out mov jecxz cmp das mov push jle rol push out jb mov test and push cmp in mov lock sti in cwtl push and scas inc push jbe jbe and mov push cmp (bad) mov out hlt mov lock fmull sub xchg add aas (bad) data16 arpl stos das lea cmpsb data16 add xlat into sbb mov add xorl push xchg loop jg mov int sbbb cli jle mov add (bad) pop mov movsl hlt (bad) daa inc out cmpl lret sub mov sarb sbb (bad) jp mov xchg faddp add xchg fbstp cmp xchg xor hlt cmpsb cltd xor call and cltd dec push mov sarl pop jns mov std mov es mov xchg into addr16 insb mov dec lret lahf inc stos mov jge push pop in mov fsubrs dec movsl test gs out xor fimull imul ljmp jbe std (bad) aad push ss (bad) xchg and enter in lahf mov fisttpll adc popf hlt mov clc divl sub mov lret jb jnp jmp cli (bad) jge adc or mov jbe cmp test dec fcomps cwtl imul mov test ret xor movsl out loop xchg push cmpsb sbb mov mov fcmovb jp pop dec push push and or pop enter inc cmp (bad) (bad) jle adc sbb cld scas add data16 das or pop cld loopne dec xchg lret xor std nop mov andb outsb outsl mov push jge sti into cld inc test push sbb push mov inc adc aam pop int into add adc outsl push ret out aaa rcl dec jecxz call jns push cltd es mov icebp sbb stos jmp add push (bad) or mov cs or aam test scas out test lods test inc mov scas jl cs leave rcrb shlb rcrb (bad) xor mov fs outsb ljmp inc adc in dec sub sbb mov xchg (bad) fmuls movsl push inc push or dec sbb ljmp stos aaa lock pusha insl test cltd push mov in mov ret enter js pop clc push mov dec pushf mov int3 ret dec jle or outsb adc out rcll xor loopne mov sbb in adc in mov sbb xor arpl cmp mov dec mov cmp mov cmpsb push adc sub (bad) jo es push xor enter (bad) outsb in jmp icebp data16 xchg in aaa loop inc fsubrl or xor xchg cld stc js inc scas pop cmp pop cmc (bad) pop test mov out xchg (bad) and dec pushl pop mov jle icebp lods (bad) jp iret les outsl lods xor jae idivb ret rcr pop nop fwait xor test inc jne add and iret inc adc or sbb call inc popf sub jnp push mov pop or xor sbb lcall ds pmulhw loope fistpll out shlb insb cmp lcall pushf int pop pop sbb fsubs scas jmp xor inc cmpsb adc ret mov and mov lock adc push mov in loopne sbb (bad) fimull add inc icebp mov cmc popf jl mov scas adc sub mov bnd jnp add movswl cli imul (bad) rcll sbb (bad) scas bnd movsb rolb push repz jae (bad) add push jecxz mov lea mov rcr test cmp (bad) das inc jmp lahf inc ja mov adc jno fidiv std xchg dec sbb out cmp pop data16 (bad) das mov test and sub loop add fs mov popa into cmp cld add in ret lret out out inc or and push dec dec call push les mov std lds sbb sub outsb enter ret sbb lods pop enter pop js mov (bad) jnp xchg loope jle xor pop stos (bad) data16 pop rcr addr16 hlt adc push test imul dec neg fldcw lock jnp repz cmc ljmp std cmpl les sbb sti cli aad es (bad) cmp mov inc addb sub mov (bad) repz movsl cmp out cwtl pop xlat movl out test jne dec mov sbb jbe mov jnp fnstsw ud1 out in scas scas or and mov jo,pt in push (bad) jge ljmp sbbl jle sti inc fsubr jne test iret (bad) mov test es lods jcxz in rol adc jns sbb enter cmp cld and mov nop imul fisttp call mov mov sahf push jmp sbb pop push adc mov sbb (bad) pop xor push out dec cmp enter jp mov aad nop repnz aad out pushf pop lcall cmpsb mov jb test mov push fnstcw pop mov inc repnz ret mov inc movsb xor sahf mov push inc jns push loope add jne pop rclb or nop sub rol sub sahf pusha in test jmp and xlat jge cmp and cmp pushf data16 xlat stos aas cmp in mov and sub popa fisttp pusha pop stc out pop frstor (bad) in pop dec insl scas idiv push dec xor adc cld lods adc fcmovbe out ret and mov push hlt scas das imul push mov sbb and rcl mov loope std (bad) insl daa sti jp sub iret out lds shlb jnp ljmp stc mov nopl mov pop out sbb fs outsb push sub mov mov in push push jge movsl pop xor in idivl push mov mov imul mov jae pushf inc (bad) fdivrl add (bad) dec or in add bound mov psllq sub jp jmp addr16 add test outsl xor jmp lods mov into xchg push mov insl into inc in and inc hlt lret jnp xor push add sarb mov pusha dec std mov jo fild mov xor cmp out sbb out outsb (bad) dec je nopl out aam cmc std pop pop mov dec dec jo pop cwtl jle jns cmpsl xor lods jo push fwait pop mov cmp fcompl (bad) push adc pop pop mov sbb sub ficom aam inc jbe jecxz mov cwtl dec fsubp sbb mov insl sti addr16 xor stos jle lock outsl inc cmp adc mov mov scas sub ds xchg sti add fldl jl jmp (bad) movsb mov int3 push mov push test lods mov fwait sti mov adc lea sbb dec ret pop inc mov dec stc popf mov push pop fwait (bad) cli (bad) (bad) pop mov inc loopne pop jo idivl sub pop aad mov mov push imul lods insb std add adc scas or mov in ds mov inc dec or stos mov into add xor fwait (bad) test stc iret addr16 fist cwtl mov data16 (bad) pop and add ret popa ret fadds or loope gs pop cld stc sub inc cltd loope inc test push xchg jg outsb cmc mov adc jecxz (bad) cli pop iret mov push sub cld add push push jge (bad) jge in mov lods outsb xchg ret adc lods sbb xchg push mov mov cmp in test icebp out mov cmp mov xor test (bad) scas stos pop int3 and lret jno mov inc fwait pushf aad arpl sbb jb mov push leave or inc loopne cmp mov ficoml rorl enter mov rcrl pop add xchg pop mov jp mov int3 les fldt inc (bad) adc stos sbb sbb mov imul jecxz cmp push addr16 mov mov dec xchg loope (bad) mov dec clc cld mov lods jo xchg sub scas dec dec inc cmc ror call daa xor loope cmpl clc adc cmpsb and xchg scas adc mov dec adc pop pop arpl mov lock adc or lea enter mov rorl lea inc pop loope (bad) sahf outsl repz les push out xchg jnp xchg mov lds rolb loopne jg sarb loop lahf and pop and in into arpl inc pop cs add lods aas in gs and lret adc sub cmpsb push mov iret (bad) in lret lds leave repnz mov imul push mov enter bnd sub pushf fucomip inc pop ljmp pop out test add (bad) mov inc lea repz pop repnz pop icebp mov lret dec scas xchg and pop xchg adc cmp aam cmp mov xchg sub insl test cs cld mov cltd subb jl pop cld mov add jne inc mov popf mov lods aam lret popf dec dec imulb sub jnp sub test push dec movsl cli pop scas push ljmp das cmp popf fwait and (bad) pop loope cmc xorb ds std test inc cmp cwtl xor ljmp push inc shll mov cli jne (bad) xchg lcall bnd dec xchg xor stc mov and cmp notb mov enter push jp popa in jns shll das iret fwait ss adc mov jl leave add xor or test pushf cmp inc mov cmpsb sbb xchg in inc inc dec adc or test movsb add adc xchg pushf scas sbb mov dec jge outsb sbb das fisub daa dec iret cmp mov mov dec ss dec jae in pop test jb sti inc inc push jnp int3 cltd gs xorb push call lret ret mov xor cltd pop adc scas dec popa (bad) ss stos rolb sbb out lds inc mov cmpsl adc xchg sub or push pop pop xchg fistl mov jmp arpl jmp jmp jb mov inc pushf cmp xor mov xchg inc repz (bad) lds cltd push add jae sbb inc add push mov movsl call sarb push or mov insl mov fwait add mov adc call mov mov push test popa mov jae mov sbb sar push test sahf mov std pop xchg (bad) dec push push inc pop and rolb cmc jne fwait es rclb add inc loop cmp aam mov imul add pop clc mov outsl hlt xchg xchg and sub imul push jge js jnp les in mov jp test inc ficompl inc and aaa and mov add loop sbb sbb cmpsb mov sub sbb (bad) push (bad) mov mov in mov jnp mov fldt in pop out aad push fistl mov (bad) outsb testl sub sbb mov add inc xor and mov (bad) mov repnz movsl jns mov cli nop (bad) pop popf inc ja test mov movsl mov negb add imul inc or out jns cs xor jmp adc mov (bad) push sbb stos in cli test ficomp adc cs xchg adc ret (bad) loope xor push mov sub movsb adc sahf sub (bad) mov ja repz cltd mov dec adcb test int3 shrl cmp loop sub hlt cld push std stos add dec push lock test enter xor cmpsl jg aad dec clc inc mov adc rorl jge push sub lret arpl xchg lea cmp mov mov insb mov and add movsl mov cld or (bad) cld dec lahf mov cld lcall iret cmp in jge and gs lret int3 mov enter jmp jns lret in andb je mov sbb mull mov imul sbb test add (bad) shl jge in and pop cmp inc cmp psrlq mov add add inc sub jmp adc in push sub mov adc mov ja insl (bad) (bad) aad or cmp sbb scas jnp jecxz cmp test xor sub mov fnsave mov add cld xor sbb cmc add js icebp pusha rcrl add cmpsb cmp xchg cltd and pop xor fs push adc xor in jecxz ss mov outsb dec dec dec push daa fcoms mov out jns (bad) dec mov pop mov and cmc es and mov cwtl cmpsl out cmp sub sub dec push inc sbb jl je dec xor ret (bad) gs dec (bad) xchg rol ret jg mov mov pusha dec aaa pop mov inc sbb outsl mov ds dec cwtl inc rcll enter pop movl jecxz,pn adc or inc ret dec lock mov inc inc ds das dec sbb xor cmp fs orw adc sbb dec mov ret icebp sbb lret data16 xlat (bad) jno fsubl pushf lahf lret cmp xor sarl xchg imul mov test jg enter or cmp cmp adc adc jl or mov stos inc mov sub je sub xor cli outsb push dec jns nop repz insb dec flds lcall sahf cmp inc dec cmp inc outsl xor pushf cwtl cltd je test cmc popa cmp insb mov cmp stos xchg stc roll sbb cmp fistp aam loop dec dec stc fnstsw dec in mov mov out hlt inc je mov adc (bad) push jmp in pop ret sub clc icebp loope aam in sub cmp add pop rcrl sbb jge dec pop jl pop in xchg (bad) gs add sbb push jb out mov or mov jnp movsb sub adc xor js data16 inc lods lea lods out mov lods mov sbb das add cs icebp fsts jge imulb mov in fs lods jb mov stc lahf dec pop xchg daa in cmp pop mov inc adc cmp sti sbb dec inc pop mov or add pop mov sbb mov xchg xchg (bad) data16 loope movsb cmp pop and and dec pop arpl cmp pop dec add dec std out jo outsb cwtl jnp pop hlt iret lcall outsl pop mov sahf push std push stos mov ljmp inc dec push mov push sbb nop scas pop fnstsw out mov sbb mov push decb (bad) stc lea cld mov lcall je cmp out gs (bad) stc jns daa stos jae data16 mov mov in jp jae pop imul cmp or or leave ds push xor jecxz in inc push stc inc push inc jb sbb dec enter insl in sbb xor mov loopne mov movsl push adc mov in js inc xchg sub lock jp mov std ja insl stc inc push (bad) das dec outsb clc outsb out sbb or scas pop je jl rolb lcall push ret adc inc inc (bad) pop dec int cli sarl movsl inc enter loopne mov dec mov sbb loop sub mov shrb loop sti sbb cmp ficomp sbb daa cwtl imul in clc aas fwait inc mov stos ljmp add aaa int mov sahf push ret lock jecxz and pop adc test mov icebp jns dec fucomp lock push jle add xchg mov mov aas dec sbb adc test jnp inc clc lahf mov ja push add push inc mov inc and and out push sti mov add out inc out test pop je inc adc xchg fisubrl push sbb dec xchg add mov gs (bad) ficompl mov loopne push mov adc addl test mov push xor jnp jae std loope imul aad clc jne pop (bad) (bad) fnstcw or into pop and loopne lret xor into pop int3 movsl jle dec sbb mov and orps pop cmpsl sbb daa dec sbb cmp cmp adc xor das scas out mov pop hlt push sub insb push jecxz cwtl insb inc (bad) fstpt jmp cmp movsl xor sbb ret sbb or or insl push adcw mov aas shlb xor and fwait stos cmp leave sbb inc mov mov lret sbb fs iret mov fucomp (bad) add inc jge sub fsubrs and push aas jge lods mov hlt add movsb push pusha fidivrl push push xor mov push aaa mov lods inc icebp jg xor inc div jge push les (bad) popf cltd mov lods push jle aam xchg dec (bad) pop loope fisubl addr16 hlt lret push cwtl jne call mov mov (bad) cmc pop fidivl mov push ds inc lods adc aam or fisubrl inc jecxz leave gs or inc sbb mov out and add xchg ret push and add adc (bad) out iret mov jecxz in int mov sbb bound cmp push outsl jnp andl les or in nop mov xor bound mov stos out icebp or cld int3 add lret cmp cmp jecxz xchg je loope xor pusha xor data16 cli mov xchg gs pop jp cmp add pop fist test mov in scas dec mov cs sti xchg add (bad) fbld xchg or test repnz das (bad) mov lret aam test push pop jnp in jnp ret (bad) lcall mov vcvtpd2dqy addr16 xor movsb pop sarl cmp mov xchg sbb and cmova pop cli pop fnsave push push push mov mov in adc mov pop jg into jecxz lds inc popf jecxz stos adc lock xor (bad) mov lock scas enter add ljmp inc lea popf xchg leave insl add sbb int and data16 lods std pop push mov adc pop nop add xor cltd mov test xchg jmp ret inc xchg gs dec and mov xlat push bound or aam sub in arpl out cmp mov out fimul je jne adc xor and jno jnp fsubl or push data16 inc test mov push out cmc jns push nop dec mov (bad) mov pop jne or out dec lods jg rep out or inc add loop cltd pop call hlt adc aaa pop xchg enter in outsl lea loop imul cmpsl cli aad mov ret fdivrp rorb sbb push cmp dec xor fstps test fs mov and jg imul sbb scas or sub mov ds jb out aaa mov add push loopne imul rcrl jle sub data16 inc lret (bad) addb xlat es cmp fmuls sub lahf dec imul and mov call les minps in (bad) and aad or aas andl pop mov insb mov cli sbb (bad) stc js sub icebp mov add jno and mov test cltd dec sub lods cmp dec flds scas add fdivrs popa lcall out sarb pop dec (bad) jmp jnp add test bound adc movsb (bad) ret push std popa xrelease pop lret mov push sbb inc insl or pop mov or jge sub xchg in mov pop stc lods cmpsb sub sti gs pop cs pop mov sbb mov xlat inc lods inc or mov pushf out movb (bad) cmp and test cwtl (bad) or test outsb out sar inc arpl cmp pop sbb fdivrl cwtl stc inc xor sub (bad) sbb (bad) and adc mov cmpsl in inc fdivs mov inc lods jmp jge in sahf out sub jno jecxz sti push cmpsb in or xchg adc xchg mov (bad) imul xor lret lret clc and in and insl xchg dec int3 imul adc shl push scas fsts dec stc insl insb sub clc inc xchg and mov cmpsl sti pop dec fs xchg mov add scas movsb in call out call lret jns mov loope sub dec dec jne je xor dec call in inc pop or pushl ss inc in int jl sbb and adc xchg cmpsl add addr16 lahf or jae inc fcoml fs fdivr test cmpsb inc ja and cmp (bad) xlat rolb mov icebp lock jecxz mov lahf scas mov lcall mov lret inc mov outsl test mov jge dec fiaddl fldenv mov mov sbb adc mov icebp inc push pop or mov mul sub cmp xlat jae jo jbe add insl lods or addr16 sbb mov repnz fidivr adc mov jno sub mov mov lods (bad) mov or push mov sub push dec mov inc sbb adc (bad) loope fmuls fbstp (bad) lock xchg in xchg jp and adc ja cmpsl jl pop sbb out jbe shrl xchg clc nop outsl push lea sub cmp pop xchg dec out lods leave dec je pushf xlat xchg jae push dec sbbl std (bad) cmc js jecxz addr16 jb xchg movsl mov and ret mov jno,pt add repnz sbb and scas ljmp sbb jg xor int xchg pop mov add xchg cwtl mov outsb and dec inc or data16 and loopne cmp loope ss pop push lea imul jo sar ror xor pop gs xchg cli aad je pushf in mov dec div popf pop jmp mov push sti inc push movl or jmp lods test xchg inc test push lret jne mov push inc icebp dec fldl xchg scas stos pop pop rorb scas mov shrb inc sub hlt fs test mov jg out test sbb adc mov je pushl or hlt insb scas push cld ja adc mov push fist mov pop int add and (bad) dec lret cwtl jp sub clc gs jle xor ret add fisttpl mov jae stos les inc sbb mov jno inc add jns adc lret adc ljmp xor add test push dec and ja inc lods xchg dec arpl scas xchg jnp xchg sahf out lahf cltd decb mov in orl in lea in mov roll jge pop andb sbb lods loop popa sbb dec aaa sbb dec cmp dec aas sbb dec and dec daa sbb dec sub dec das sbb dec adc fisttpll sbb dec sbb dec pop sbb dec add lea (bad) sbb popf push lock pushf shrb cmpsl (bad) in aam pop xchg xchg fcoms mov sbb loopne xor ljmp mov clc mov inc sbb xchg jecxz pop cli add inc inc push mov pop inc in lods inc dec movl mov adc cmp lock xchg repnz test (bad) sbb loop scas ret pop fs push mov insb sbb addl mov popf push adc decl ret add push rcrb in lea out sub xor adc cmp sbb repnz loope pop mov pusha mov lret out lret xchg pop je pop ds push cmp lret mov fiadd jns jmp inc leave pop sbb jecxz sti adc push dec xchg jo dec daa sarb int pop shr out jecxz ljmp mov xor xchg int3 and sub xchg pushf repz das push loopne jle addr16 test mov sub cli and je or xchg aas cld out dec xchg (bad) dec roll mov cwtl adc aam shrb sub aaa movsl sbb cwtl add adc in inc fnsave data16 push fisttpl js dec dec insb ja lcall outsb push loopne push inc cmp (bad) lret addl sub and jle dec lea push dec mov aas int3 inc mov xchg add push push scas test mov inc movsb adc sub stos pop mov subb pop in (bad) mov mov sub scas inc adc pop scas enter push into (bad) mov pushf mov cli shrb dec repz outsb adc gs mov mov es aam jmp shlb cmp ret insl pop in call je dec stos clc xchg sti dec or add loop adc adc sub xchg cmp adc dec cmp add xchg in daa test ljmp mov dec jb xchg fisttpl mov loopne dec hlt jmp add adc repnz sub cli dec scas pop repnz push dec aam cmc and sub dec lea pop fs loopne mov je sub mov sub shll and fwait xchg xor nop out lret std mov loop sbb or sub jo mov lret sbb lret adc mov shrb mov jge cmc (bad) movsl lret shrl loope and fs mull jecxz imul shll leave mov cmp lret pop push push lret push mov in pop mov jns mov aas cwtl into int enter ss cmp inc pmuludq movsl and in enter dec sub mov ljmp cwtl xor mov pop nop fucom pushl daa inc cld pop test push loop push gs stos sub iret sub ljmp mov jge adc pop fwait sbb sub cltd lods das mov test jbe es jmp pop sbb xor sbb into fidivl push jmp dec out mov xchg mov addb fdivr mov pusha mov pop std xor nop sub cld loope,pt xor push pop mov sbb jp and scas in dec sub pop std jle sbb ja push ret adc inc dec pushf pop loope sbb (bad) enter dec sti pop xor out movl cmp inc mov push jge lds aam imul jne mov inc jne jnp dec cmpsb pop mov aas sbb sbb sub mov dec mov out (bad) in and or scas dec imul jbe push in mov xor mov daa js mov xor lcall test test rolb pop sarb cmpsl sbb xor cmp adc lea mov mov ja inc mov test xchg xor push movsl lds sbb pop test in in sub negl cmp jge iret adc loope adc lahf jae and pop sbb inc cs push pop rclb mov in jmp pop enter and (bad) mov pushf sub push pop stos ds clc sbb repz aaa jge fcoms arpl lods mov jae fisubr lahf movsl sbb adc dec or outsl iretw inc std in (bad) ss add dec xchg pop sub (bad) add or pusha sub test adc xchg adc push cs out xchg inc fs cltd mov daa data16 addr16 in stc stos inc mov mov gs jbe sub cmp or jge jmp sbb lret lods addl andb in pop push xchg or hlt xlat stc jle adc cmp add (bad) popa mov mov dec push fidivr or scas cld (bad) cmpsb sahf sbb daa loop scas sub jae test std jbe sbb xchg in add pop mov jbe mov imul mov jge das sub sub das popa mov lods jge add mov mov movsl lahf ljmp insl out cmp sbb aam pusha iret rorb ja sub add fs push jmp nop stos hlt (bad) fsts pop jae sub mov mov ja mov in lock cmp nop movsl fwait sti mov sbb xchg sub and push leave or push xchg jnp nop cs mov (bad) arpl popa inc mov inc inc and sub rcrb decb out test xchg out dec (bad) jae out inc mov stos out pop ljmp mov adc (bad) mov adc cld cli popa sbb adc jbe xor cmp arpl dec add jg inc jecxz cmc shl cmp pop nop sub in popa mov fisttpll xor das mov dec jl es popa je sub cmc fdivrs je cmp add or adc cwtl dec cmp xchg sahf pop hlt and fisubl cwtl adc (bad) adc mov push jmp xchg out cmp sti push sbb je rcrb mov add outsb xchg push mov shl add out jae inc mov scas inc inc push push repz loope nop into dec jae pop lahf ja sub xchg ss cmp cmpsb rorl in stc xor andl dec xor ss add mov sub in push jbe inc jecxz popa xor push test dec cwtl in jbe add out add push or daa jae mov fstpt out arpl (bad) das jb jns and add mov adc adc cltd pop pop mov cmp inc mov imul pop sti or sbb xchg test mov mov in push xlat cmp xorl fadds cmp ja lret (bad) nop jnp jmp cs mov xlat ret jecxz lds iret push sahf push std sbb lcall dec mov pop mov mov bound add xchg mov popf scas fdivrs mov pop rcrl sbb (bad) jecxz jbe and jmp sub push inc jg pop in push inc inc sub stos insl adc pop ficompl xlat mov aas adcb pop pop adc push push stos fwait xchg add jno push dec xor imul adc (bad) xchg mulb popf lock dec std xchg mov jno insb inc xchg cmpsl in (bad) ds sub push ret sbb mov and sub jnp jl leave pusha pop test mov xor or addr16 dec cmp (bad) xor jge and les cmp jnp sub inc xchg pop incl xchg xchg xlat pop dec dec pop int3 push out or and aaa dec inc dec mov dec jo lods dec in pop iret ja out lods or ljmp lds testl jnp add and adc sub and out (bad) adc jmp jns dec ret sarb xor cwtl out mov jnp mov mov fadds cmp mov shlb push adc inc and (bad) or push jae and sub (bad) cwtl mov and and hlt pop cmp popa sub das lret dec and mov dec call add and addr16 push test dec adc aas inc aam es push jg arpl fstl push loopne inc or xchg sub icebp (bad) mov inc out xchg in scas lock ret mov ds rorb js movsl cmp cltd cmp sbb xor inc in stc imul xor (bad) mov dec out sub dec lret dec into or test adc int fisttpl dec fistp push dec mov jge xchg mov xchg xchg (bad) ljmp dec in arpl lods mov push inc mov sub mov sbb addl mov pushf add stos jo in fldenv xchg or push dec imul sbb lahf sub dec lret ficoml daa fiadd xor mov mov addr16 dec js clc aas push ljmp mov sub and test and cmp je in test pop enter mov rcrb fwait and push lret sub xor into fsubr or mov insl sti xor mov lcall cld dec fcomi xchg aas in fs cltd retw ret cltd adc and jge mov imul adc sti repnz xor sti xchg adc das dec in sbb fistp lods sbb mov cmpl fildl sbb in outsl ljmp dec outsb jecxz clc in mov out adc sbb cmp xchg loopne pop loopne,pt stc xor cmp add scas mov adc lods data16 out pop fidiv cld les dec popf mov push xchg mov lcall rol push push sbb movsb inc mov inc dec mov push out in push lcall cmc fs cmp jecxz stc subl sub data16 or orl fcom ret icebp ror and inc adc mov mov icebp mov setle ret xorl jmp dec mov dec (bad) enter push inc adc cmp inc inc (bad) jno mov push jno fs inc orl lods or mov or scas dec fsts ja out in jp add (bad) gs lcall popa sub mov pop js sub cmc out imul mov (bad) lea adc stos dec cmp cmpsl repnz xor jecxz fnsave (bad) scas outsb out push add sub in xchg or imul mov je jl data16 push popf mov loopne inc sbb lock sub mov daa test cmpsl cltd pop (bad) push push lcall mov cmc scas mov ljmp mov jnp inc decl xchg push movsl pop mov add pushf (bad) iret push adc int3 pop xlat jno cwtl lcall add inc push ja and in cs pop int3 or inc sbb jnp xchg push sbb ficoml (bad) (bad) call rolb mov int imul cltd lds test (bad) fmuls or jmp imul or xor das dec into (bad) xor add adc (bad) mov out or arpl mov insb loop ret adc dec mov push dec cmp stos sub sub lcall cs jnp jg sti das je test mov (bad) arpl or jae push xchg daa mov xchg js aad xor test sub jl,pt add lods pshufw repz in jmp adc inc and jge push ljmp out jge jmp cli mov cmp adc iret or inc cmp push ss lods ljmp arpl std dec das pop inc les dec mov lret int3 sarl jno ja add mov dec lock xor scas jbe mov xor add pop int3 ret (bad) jbe inc xor popa xchg add icebp jmp int sub inc inc jnp scas adc fdivrp imul add xor pop repz enter cltd pop lahf xor popa push sbb push mov mov in cmp and cmpsl add mov push or stc pop insb pop sub add jmp insb mov aas insl sbb jnp and std loope mov push incl int repnz push gs fldl2e call or adc pop jl in out xor test sbb movsb enter js mov push pop iret aas fmull and inc dec jne pop inc arpl mov jg mov mov xchg mov in dec xchg gs out pop and sub out sub push (bad) sub push mov loope or mov xchg cwtl outsb es ljmp sti cltd jecxz adc addr16 xlat pushf xlat out cli int3 cmpsb cli sub push ljmp in lea push icebp dec mov daa hlt or out xchg xchg pop xor movsb mov sub add cmpsb test lret ret aad aam cmpw sbb push test xchg aas xor cld aas mov xor add data16 cmp pushf movsl cmp fmuls mov aaa xorb jnp jbe mov (bad) adc lods into add push iret cld sbbl cwtl inc int out sbb loopne push out cmpsb outsb aam sbb data16 shlb stc icebp xlat sub cld jecxz hlt out sbb movsl mov test mov adc sbb dec imul ret inc pop push popf xor xor in xor out cs push aas pop xchg fldpi cmp inc jp xor pop xchg mov xlat loopne dec push jge call mov push mov in ret jno xor add test out or out xchg out (bad) xchg mov xor cmc jge out test dec jns jno jl cmp jl and sub and out ds pop test scas ja loopne jnp lcall sub xchg push pop nop xor jp pop jmp (bad) mov outsl repz adc aad xchg jp mov mov xor and sbb insl add xor adc push push inc push or lods sub imul (bad) mov adc rclb dec jmp add mov xchg mov sub jmp (bad) sub xor (bad) xchg add sub pop sbb mov test push repz xchg aas test out and inc in cld pop ds xor fmuls jmp int cmp push mov mov jae push push mov sbb bound stc inc add out push mov add cli lret inc cmp fs or jle or adc out ds jnp arpl ss jmp fdivrl leave sbb jo dec stos loopne lcall jnp cmpsl jge je dec adc add and mov jmp jle scas and (bad) insl ja xchg jg call mov cmpsl test jle xor jge movsl xchg (bad) (bad) out inc out jbe imul repnz sti cs repnz sub xchg sahf dec add lods lods jae (bad) nop lret push hlt mov or sbb cs repz fsubl xchg fs pop pop jnp mov iret inc leave aas lahf imul mov movsb mov jg xor (bad) mov jge lds and fmuls lret fisttpl mov (bad) push mov lret scas mov mov adc dec pushf ja mov into dec lock xchg dec xchg adc jle popf iret addr16 mov add pop into aad jnp push js (bad) lret and cltd mov js ss test aad xchg jp pop dec sub jl adc inc add mov test sbb mov or sbb test daa ljmp push (bad) lock leave or add pop lea notb inc fnop jl fdivl dec loopne cmp cmc sbb dec add fnsetpm(287 in leave shrl mov mov scas mov xor mov jbe mov dec je jno jg int stc sbb imul bound or icebp loop cmp test pop ljmp and push adc popf mov fidivl add mov outsb mov mov nop pop lret cltd out inc out pop and out ret stc fbstp sbb pop call pusha stos push and scas mov dec xchg loope adc sub insl add out in into adc adc aas loop mov popa aaa insl (bad) leave (bad) mov and adc in jno notb mov int push mov xchg xchg test in lods jnp into pop inc jecxz jb stc test push lods outsb sub xlat mov aas adc inc lret (bad) arpl add movsb inc pop jp mov pop xor out pop dec xor xchg pop push in jecxz int3 in out jl fisubr test ret into sbb mov add (bad) mov addr16 int3 jnp sti lods ret test nop and mov push fstl cmpsb insb in adc cmp add in jnp xor xchg cmp cli xchg xor inc lcall ja sbb in xchg sub cmpb dec shl or push lods rcrl xchg je dec gs aam lcall add xor xor adc jbe mov adc js jle xchg jg ret cli test jne mov jnp int3 or lret hlt test loop cmp xor mov lret pop xor cwtl add push fprem mov orb (bad) add push jmp push jle das pushf js dec push adc ja dec pop mov fcmovbe fimull out sub xchg lods jb mov repz fs clc daa adc ret jmp pop fs xchg repnz adc movsb in int aas push int jne cmp into sbb xchg xor fisubrl lea xchg sbb insl pop std mov std shl xchg or mov into adc cmpsl sub out mov mov or jae fwait cmpsb mov sub fimul sti xchg out jmp in call xchg xlat mov inc out les cld cmpsl lods scas push not sub hlt icebp psubsb jp dec ret or mov aas fmuls mov push push ss ds cmp pop cld jp out jl xchg scas pop popf jbe mov insl mov or mov in xchg lea inc cli mov out inc js repnz pop pop mov mov jge xor dec jae ja mov imul movsl roll add mov mov xchg mov dec ljmp pop jns test (bad) mov xchg and mov daa mov scas insl mov or mov mov cli stos push pop notb xchg jne cli pop or xchg xchg sub jge jecxz jbe and cs pop mov (bad) jp sbb pop shl xchg enter jg cmp insb sbb push loope sub in adc adc es mov ljmp xchg xor xchg mov pusha xor loope cmp pop or jle scas sub cmp cmpsb ds push adc (bad) lock sub lods xchg es cld in and xor and lods xchg insl push dec das mov xor imul pop negl (bad) fadds fisttpll inc inc rcll push jbe pop jecxz test mov mov cmpsl in jbe das (bad) pop pop inc pop jecxz add inc nop das adc jle dec jmp sbb lcall sbb aas add add xchg or sub cmp dec test jns lods cli jnp mov mov push sbb aad jmp mov mov in test popf cmc xor push int jl mov jg out sbb (bad) mov pop dec sar inc hlt mov daa test or lea je stos jle jle mov outsb rorb ret pop pusha cmpsl divl les loopne xchg pop mov imul out push testl mov xor sbb fsubp mov adc std lahf pop mov xor loop sar mov jne push jmp sub aad jge cwtl pop inc fwait mov jg inc mov inc add hlt or xchg andb sbb jg pop fs es (bad) cmp lods mov data16 test dec loopne and jnp notb adc (bad) push add adc ja push pushf das rorl test inc sbb mov pop das rcrb stos sti push fidivrl mov xor mov add adc jnp mov pop inc jno lds pop cli jae pop push pop xchg cmp or sbb sbb dec imul and (bad) pop or xchg lds dec xchg mov pop movb mov mov xor pop cmpsb pop je cmc imull (bad) cmp sub xchg pop (bad) (bad) sub ja mov (bad) clc cmpsl mov scas loope iret push xchg ljmp cmpsb (bad) int insl inc mov int movsb jbe push xchg mov stos or outsb mov and in mov push insb or xchg cmp and mov sbb mov sbb hlt push xor enter mov bound jnp inc in mov cmp add xor std (bad) je out sarb jmp jnp cmp jmp jl aaa clc push lods daa cmp xchg push imul push sbb mov fwait sbb xlat jle lahf imul ficompl sti (bad) adc adc in mov xor cmp cltd push cmp jbe test jo das aaa leave or stc outsb cmc push xchg inc xor ficomp arpl jl and or sarb push (bad) push stc mov inc inc fdivrs out (bad) leave ss lcall imul and and cltd fwait pop inc gs inc jmp adc mov ds std and leave or xchg jae in mov vpmulhw outsb imul xchg insb daa (bad) les clc and aad cli scas mov pop lods jg xchg out dec sub test push inc loope dec pop rcrb (bad) jmp push imul insl sub push hlt mov out das jp xor rcl je (bad) jnp fist int push js aam xchg dec repz addl (bad) test loopne,pn sbb sbb scas xorb icebp jl ja outsb pop inc loop jne pop in cli dec adc or xchg sti in pop icebp outsb movsl xchg push mov out or xchg xchg iret sub sub mov dec mov xchg pop ret xlat fs inc int3 insl es pop aas in rorl out inc pop push lods cmp pop cmc sbb sbb aam mov jge or sub leave gs icebp rolb xor or xor call lret mov mov (bad) jnp cwtl jg test imul mov enter sub fisubl inc cld dec cmpsl sbb es fimull pop xor mov mov (bad) mov fistpl sub xchg (bad) lds jmp clc sbb and xchg dec cmp jg xchg mov iret shrl repz sub das pop fisubr ret pop in iret adc and mov (bad) arpl xlat cld sbb mov mov sub jl in popf stos jbe mov mov jl ret inc push mov js gs sbb xchg push mov mov mov mov or lds lods and inc clc mov rcrb push (bad) cmp popf cltd cmpsl sub mov shl gs xchg jmp jmp sub and ret and test mov ds inc adc cmpsl xchg push popf lahf jo lds mov es sbb in dec loopne push xchg mov cld xchg or push loope mov lret (bad) xor inc adc mov test repnz mov push cmpsb cmpsl sub fdivrl xchg mov clc push jae jb dec loope jge adc jbe leave fdivs jns stos xchg pop and into arpl pop shr inc and mov inc out or test inc aam or mov adc cs fs test outsb ss lods jnp xchg aas insl inc xor xchg call xor add dec cltd xchg (bad) fist loopne test lods adc cld pop lods mov pop dec fmull xor push shll cmp jbe call cmp sub mov xchg sbb cmpsl cmpsl jmp mov mov mov pop sbb out pop inc loope or cmp lods xor (bad) xchg xchg lock sti lret mov and sub add xchg or cmpsb push push (bad) out dec test in insb (bad) and dec xor pop in mov repz mov mov mov mov mov mov jnp das adc dec push jne push and sub divb movsb push push inc add fisubrl xor sub in xchg jbe movsb mov push nop out jp push ja mov repnz add push sbb out pop out mov sbb or les mov pusha adc sbb insl mov mov and sbb jl mov mov sub sbb sub and mov cmp dec inc and push cwtl pop aaa mov mov xchg inc bound dec jnp hlt dec mov jmp push or sub sbb push std cmp add jge sub add mov aam sub movsb inc jae in pop sub fild jge dec jge,pn lock jecxz xchg arpl clc fidivr or cwtl shll fstpl mov out cmp mov or fisub mov out inc pusha cmpl popf mov cmp shrb sbb jno test out pop js adc data16 cltd or and pop mov arpl pushf cmp loope pop lret outsb xor fsubrs jl insb inc add lret mov sbb inc push add call lods push adc ret dec dec pushf stc (bad) mov sbb lods ljmp int3 xor dec sub cld push fnstenv push or int loope (bad) stos fdivs push jb cwtl (bad) sbb inc mov jle or insb xchg sbb jno xchg cmpsl lcall mov mov repz mov jle xor mov imul jecxz test jl pop lds and incb sbb cmpsl shr add movsl sahf jne xor pop mov test adc jg xlat xchg dec push pop int3 pop loope repz add popf mov dec cwtl lds mov inc popa aaa mov in fcomps sbb rorb mov pop and cmp shrb fbld mov mov sbb jnp std pop xchg fucomp dec sub cmp sub inc or out pop je mov xchg in cli add xchg and std or std pushf add jge orb add and mov cmpsl mov in sti pop out add std jmp hlt aaa ljmp and adc add ja inc ret arpl pop sbb dec fnstsw test stos es cs scas inc pusha push inc sbb cltd cmp fisubl notl in xor sbb push mov sbb sub and pop loope push insl idivb popa icebp cmp jmp sbb inc mov ret test cmp mov adc push (bad) aaa push (bad) les in cmp in pop das cltd insb call clc das (bad) loop dec popa sub push mov loopne mov sahf xchg (bad) pop mov push sub pop xor scas iret (bad) scas cld mov dec mov (bad) sbb jle mov (bad) in js jp jge sub and notl dec and add dec adc test add (bad) pop add loopne insb sbb leave cmp scas pop rorl (bad) jge mov pop push add xchg iret cmp pop std fdivs frndint fnstenv pushf (bad) mov mov xchg lock (bad) scas nop (bad) adc test ret sbb pop inc mov adc xor pop push cmp mov mov mov std jg icebp lea xchg pop mov cld hlt sub (bad) mov jmp gs mov push popa xchg dec xor popa jbe es incb enter outsb ret enter cwtl call addr16 fdivrs mov mov pop jnp daa adc mov adc shl inc sahf pop jecxz iret xchg (bad) cmc pop lock insl add jge dec pmaxsw shl xchg cltd out lret mov loopne and js hlt add xor (bad) dec jp outsl sub clc out inc cmp xor int3 pop jo std (bad) repnz into fcomip lock add cmpsb xor mov sub push je std cli aas in pop int ss jo fdiv jb push gs int stc pop in (bad) out jb and in ljmp fstl (bad) out in add cmp pop daa xchg (bad) cltd in cmp sbb xor adc repz xchg rcrl pop or push imul mov loope sbb flds jae sarl jge shl mov dec fwait cli xor or jge pop bound mov jl mov inc jecxz loop sbb icebp sub test cltd leave adc sbb push lods imul out jae dec dec das sti cmp jb mov xchg push dec xlat popf inc loop xchg in cmpsb adc mov scas int3 lock jl mov xchg jnp sbb pop add js xorl push std adc inc mov stc and sub xchg adc push (bad) ss ljmp jecxz or ss sahf out inc add mov mov loop mov hlt gs adc push test inc lea sub das cld mov dec aam jo mov int je mov or mov mov sub nop xor mov test jmp dec nop out (bad) jo cmova stos fnop daa insb mov mov in pop out incl adc ja jno inc cmp cmp push cwtl stos call xchg in loope sub shlb inc mov add or sub or sub dec and push dec push mov lahf clc inc push or imul mov scas aam in pop mov mov lds mov bound cmp cmc fucom js pop xchg shrb in call push xchg ds push push pop add xor xor lcall lock jmp xchg fmuls cmpb push clc xor gs bound sbb insb sbb ljmp cmp xor cmp sti ret xor shrl rolb cmp lcall xchg pop daa jns jb sahf arpl nop sbb fs xor subb and mov int3 std mov or loope and inc sti add cmc test stos fsubrl xor lahf movsb xchg dec loop adc call in mov outsl cmpsl loope arpl push mov imul ret sub push dec insb sbb push push and or pop mov inc cmp push lds add adc jle mov xor js jne inc ljmp mov out add dec mov xchg bound jmp daa data16 movsl push sbb cvttps2pi mov scas test rorl ret and sub sbb mov out push cld pop sti addr16 and jmp mov sysexit das inc xchg int3 mov idivb mov or dec test icebp mov add xor pop jl into loop push idivl insb es mov sbb scas sub (bad) std dec xor sub ss cmp stos pushf jmp xchg dec out pop sub (bad) pop (bad) xlat jnp mov test call xchg int push mov in mov dec push daa insb add xor inc or scas xlat loope (bad) iret leave ret add sbb std (bad) out sbb popf inc fstl fimul std ret andl into popa lds mov out test push push call (bad) inc add bound pop jno stos out loopne ficompl mov adc out cmpsb fs lods scas sahf adc xchg and cmpsb jns icebp clc xchg xchg dec cmpsl dec stc gs jp and cwtl insl jmp (bad) adc mov mov jnp dec push repnz jl xor sub stos push pop cmp xchg inc sbb icebp inc cs hlt and xor jle out insb ljmp cltd fild popf pusha dec push xor cld mov xor push mov and shlb jmp mov mov jb push adc and stos mov pushf lret and adc aam incb test imul pop (bad) xor sbb adc fcoms test mov movsl add push mov cmp cmc jmp js mov pop jae jg push in dec jge push fstpl mov add jmp pop jg test cwtl jg sbb push xorl push lea das scas jp cmp fcomi mov stos in mov setno out push jno inc adc stc fs lahf pop shr push stos movsb jge in fs aad push call iret fwait sub push add pusha hlt lcall mov movsl xchg out push xchg add mov insl (bad) adc cld jne std push repz dec adc push repnz das xchg jno xchg cwtl jl fwait std cmp add les or cmp jb jge pop ret imull mov jle inc jbe jecxz ja scas sbb inc jnp sub imul fnstcw mov xlat fucom xor jns push repnz push rorl (bad) jbe jp js pop cmp insl lods jb stos subb xchg jnp sbb xchg in outsl iret das or cwtl movsl push sub push gs hlt cmpb test int jae xchg fldl jmp nop sbb push ljmp jns push aam in test aad rolb pop mov daa xor adc pop xorl pop out rclb fnsave sbb nop std cmp ret cmp jo out inc insl xor dec out les mov pusha cmp pop xchg jne lcall mov push push jns fs lods add and lahf sbb or fs dec mov jl mov push in inc add jp mov popw insl ja push data16 in cmp aas pop inc arpl jge mov movsl inc push inc mov out test (bad) fdivl stos cs dec sub mov cmp mov daa pop call out sub push imul les fnstsw repz mov movsl (bad) sub or enter popa inc mov jb cld stos adc jle test pop mov dec cltd xor js mov adc cmp repnz aam adc gs xor outsb xchg add out popf or and xor (bad) outsb xor fs xor add bound mov or mov dec cwtl jg dec jne jmp mov mov (bad) rclb jo push push out (bad) aaa ss icebp dec in test push (bad) push push or jl sbb lcall (bad) test jecxz or dec xchg jmp cwtl movsl adc out bound pop lea fistp pop fwait jp les sti cmp sub rol cmc mov sub stos xchg dec jecxz jle lods sbb fldl pop mov fs dec jge sub jnp inc or mov mov mov fwait addr16 xchg dec (bad) mov dec jne lock dec jle sub pop xchg test subl (bad) cwtl xor mov adc rcll popa frndint stos imul jnp leave and je loop out and xchg and mov outsl mov icebp cwtl ficom adc fcomi (bad) lret sub adc stc sub sub jns lcall lds push adc imulb fldl and dec dec mov cmp jmp enter push fsubs add xchg outsb xchg sub jg lods (bad) ja mov xchg xchg test mov rorl addr16 lods cmpsl add xchg add jl jmp inc xchg movsb lahf adc mov jge fdivp jns sub dec inc lock icebp out and push pop scas sbb in ds enter (bad) push (bad) push popf loopne mov aas xchg jbe adc sbb (bad) xchg mov arpl dec stc ljmp idivl aas jo mov cmp out mov cld insb movb mov xchg sbb je test pop test mov clc cmp lods je dec imul scas aas insb in daa out add lds aam and ljmp mull inc add xlat enter sub (bad) pop stc add mov movsb fcomp imul or shll push sbb push xchg flds std mov mov and or jle insl into jmp pop dec dec inc mov sarb sbbb fcomip (bad) pop inc adc cs fsubp cli adc mov xchg pop out js outsb ds mov aam mov xchg or jg lret das mov sub call xlat cmp dec jae inc jp movsb outsl bound add mov mov mov imul fs push mov add (bad) mov cmpsl add dec or cltd das push sub or or leave inc out xor (bad) sbb mov add add pushf stos mov xchg and xor int je jle pushf pop (bad) ja and repnz call lret sub and mov leave sub test push xchg push sbb hlt jl cmp stos ror jnp cwtl (bad) je xor repz fisub or dec push mov jmp ljmp repz add cltd mov out dec stos nop outsb pop cs inc ja push cmp daa xchg add jge dec push insb rorl mov andb cld sahf stos and push arpl xor leave or popa cmc insl popfw push es rcll add adc or pusha ss or cmpsb or push mov pop cwtl mov (bad) fsubrl shll mov bound mov push insb inc lock mov add (bad) cli stc (bad) nop stc leave movsb jae mov mov cmp jae nop mov testl xchg add xchg aaa ret fimul setae adc in pop lret jge or cmp sahf lods in call gs js xor push add xchg jge push int3 stc jbe pop or test adcb scas sti inc in out cmp sahf mov mov hlt fisubrl pop mov mov mov or jl mov xchg xor fisttpll fld inc (bad) mov (bad) jne aaa sub (bad) or (bad) outsl enter fs out into in in push add into nop inc lret jb fcoml pop les mov mov or cmpl push cmp aaa cmpsb mov mov jecxz enter stos jp inc enter push pop sbb ss sub or xor sub mov (bad) jb ret cmp std adc int3 fwait test shrl mov cmpsb sar mov lods inc adc lahf xchg cwtl std dec fwait push jbe mov or inc jbe or mov js pop bnd ja psllw or cmp xchg rolb out xor nop ja orl lret cmp or pusha cs mov push inc pusha mov xchg mov repnz mov movsb dec repz lods inc dec sbb xlat mov cmp jmp repnz mov lret aad pop bound out or inc inc (bad) movsb scas rclb cmp mov or cmpsl dec xchg push imulb stos repz mov push inc sbb mov push sbb dec adc ret jb loop imul adc loope ss sub dec inc jae cmp insl stos inc repnz subl dec xchg cwtl push test (bad) sbb xlat loop jecxz add sub pop jge mov ret lea xlat mov das mov lea jae jae cmpsb and mov mov add dec stc sub sbb in pop fwait add scas sbb iret mov mov (bad) imulb fs test xor mov xchg xchg inc mov sbb pop popf add lods or subb or dec lahf push sub fwait mov cmp push pusha adc cmp imul cmp hlt leave hlt mov pushf push (bad) mov and xchg pop nop int mov dec push icebp mov icebp mov cmpsb dec leave mov std and mov aas sbb jo in (bad) fwait add push mov fnstcw xor lods in aam shll shrl (bad) mov popf fmul adc push bound sub sbb or sub test dec mov inc dec js mov fcmove sub scas sub adc pop dec pop fs out scas push test cmpsl shrl mov or xor in sbb cli outsb push ss push xor xor stos pop call dec (bad) jl cmpsb cmp insl (bad) mov sub in fimul icebp (bad) mov lahf out pusha mov mov rorb sub sbb pop sbb push or es subl xchg (bad) pop jno dec push mov mov int cmp mov cmpsl (bad) je imul add pusha cli push mov lods imul or mov (bad) xor add dec mov out pop xlat xor std push ja fs inc enter xchg fist xchg inc aas xor mov jbe push test xchg jp xor pop add pushf push pop cld loopne sti jg hlt push iret stos out mov or sub dec outsb xchg sti cmp sub std add push imul bound xchg dec dec popf pop gs stc dec mov enter mov sub xchg idivl push add insb leave push mov xchg decl and add mov sets int3 or cmp dec xchg add mov xchg jp jge shrb scas sub mov jecxz out in leave decl mov in loop aas out xor mov push test jnp les ret insl add jmp fcoms ret fwait cmc sar test jmp test cmp push clc arpl pop push cmp imul cs pop xchg pop adc fisttp mov roll cmp dec sub sbb xchg push in or movsb into jp dec sbb (bad) dec stc push lock add pop pop es outsb outsl ds dec repz sarb jbe push dec (bad) pop pop stc add insl ja sub cmp add lret cli pop icebp test jg insl adc xor or std arpl add clc (bad) mov in add mov xchg cmp dec daa (bad) in nop aas lret jne jl int dec mov jle popa jl imull and (bad) jp jnp push js jp jne std lock cltd inc cwtl aas cmp mov cmpsl sub int3 xor mov jmp xor sub lods out stc je stos xchg or gs pop mov or xor jb xor or pop (bad) push sbb inc rolb adc fimull push xor pop lret inc cmp push inc shll push (bad) addl cmpsb js test repz call int dec dec icebp xor (bad) cs mov insb mov mov cltd push or (bad) pop lods sub xchg es call xor std cli lret fwait stos cmp xor pop fs pop sbb sbb ss repnz iret dec mov scas xchg and xor negb out test gs lods lahf outsb mov and cld push or andl adc mov lods mov inc inc and push iret inc pop adc fwait out add adc dec xchg mov divb adc enter aas add inc sub (bad) push cwtl or das and dec jae ds mov in test adc mov xor lods sbb mov stos push jl sbbb cmp fs aaa jae pop (bad) mov xor adc rol pop cmp (bad) arpl popf test cmp nop insb imulb sub cmpsb inc adc or icebp or inc mov lahf mov cmp and cmp mov mov and loop add loopne jmp in xchg icebp jne add inc int3 jmp sbb aaa cmp lret loopne dec orl (bad) cmp test rcrl xchg pop adc lcall pop cltd xor pop dec cmp jnp pushf popa clc mov mov push or pop cs incl dec test push mov push fist mov ja test lret fldl stos or mov inc adc in loop and sahf lods test pop mov stos sbb movsb aam out imulb leave stos push out push shl cld pop test mov sub mov xchg lods jg dec orl popa daa adc cmpsl sbb add adc xor repz xchg popf jg ja rorl popa mov cld mov cmc pop cmp dec mov and mov lretw xor adc (bad) das rcl lcall cltd cmp ljmp call inc add lods adc xor shr push cmp loope pop sbb ljmp mov pop (bad) daa repnz scas ud2 loopne rcrl sub sbbl jmp jg jbe das fnstenv adc cmp sub es adc push xor lret mov int3 cmp push hlt push loopne sbb mov xlat jnp lahf push or imul pop dec push adc sbb test daa int3 in cmp stc xor call jae negl and jge or mov and (bad) push std (bad) out fldz inc test shrl enter adc xor inc xchg stos scas jnp xchg mov xchg cs jbe js and inc sbb stos fwait sub pop loop dec popf lods loope jge pusha roll pop iret xlat add jg stc in cld ja pop movsl pop enter mov fildll add or repz jg lahf jmp sub int sub adc dec mov pop xchg mov in push (bad) test dec js ss jno sbb sarl mov loope stos push cmp fwait jb xchg test repnz aas add cmp adc pop lahf jns pop adc xlat test pop inc jg add imul push sub repz mov dec push test xchg mov jg arpl cs and aad pop mov (bad) xor ja sbb std dec notl jmp ljmp sarl sub movb jp pop fwait punpckhbw lds mov inc in shr mov out test adc in cmp cld push jbe add cmc pop mov cmp dec dec sbb add push jp (bad) out mov xchg mov les lods or lods je mov in adc aam insl sub sahf imul sub push and mov loope fdivl ror scas push jg je push sub scas adc xchg jbe add jp inc (bad) mov sbb mov sbb inc cmpsb es adc mov fdivp mov icebp into test pop xchg inc test (bad) aaa mov xchg mov mov mov adc aaa xor dec cmpsb lret insl adc sub jmp xchg std jae push inc inc mov or stos push pop mov das (bad) adc call dec xchg cmpps mov repz cmp icebp icebp jge jae sub jns aaa notb adc vmread push sbb sbb fnop pop adc aad (bad) dec shr pop jg dec pop hlt dec stc pop out lods ja dec sub out mov lret add subb pop pop pop stos pop mov xchg call lods (bad) cmp and fcoms movsl pcmpgtw sub lret jg add pop test inc scas fwait mov stos lret cmpl cmp arpl xor mov adc into dec out fcompl (bad) push out test dec icebp xor dec divb jge cmp jmp stos fmuls mov push inc js jp jle jp push mov mov mov mov add pop fsubrs lods push jle insl gs or scas push movsb dec popa addl xor mov pop scas inc add daa pop pop icebp (bad) div pop outsb repnz popa push jle push in out loop pop in fnstcw (bad) pop lahf push mov adcb xchg push dec repz cmp xor (bad) icebp pushf dec adc nop mov dec inc ds jg (bad) push (bad) or adc in rclb std xchg shll xor loop (bad) inc out push (bad) in ret rolb into in lds pop inc add cwtl sbb in jmp scas dec ljmp cltd cld mov pop cltd jns cltd inc int addr16 inc xchg xchg pusha xchg jle adc mov sbb ds add pop into aam out push add outsb (bad) jmp jmp (bad) int3 insb sbb ds jg adc push sbb (bad) js push mov sub fs out shr inc inc jmp ret add out dec popa cmpsl mov jl jecxz fwait jge mov inc fcomps fs (bad) sbb je shl inc in dec into add push jbe jno inc stos lahf push std push push jmp adc lea imul xchg adc imul mov das imul fwait inc aam xchg out test (bad) stc jg aad (bad) (bad) fnop (bad) fcmovu dec mov xchg (bad) xor cld jmp test pop push js jl pop push ljmp dec sub mov adc ljmp (bad) insb cmp cli call mov xor mov or scas in fstpt or jo or mov fcmovne arpl mov cmpsl in into fwait ds in inc xchg (bad) jl xchg stos loop push ljmp hlt sbb jo xchg mov jge or in cli mov pop repnz sub jns mov push lahf nop out addr16 in dec push or jae or lret jae pop cmp xchg dec je sub je push sub (bad) int jle lods mulb je pop push mov fwait jae xor or xor lods movsb ds outsb insb push flds daa lods mov lods mov jbe daa shrl insb test cmp out ds into lds adc out fprem dec lods call fucomip xchg mov sub pop jae cmp pop out test fimul xlat push stc repnz mov adc jmp ds inc imul fcmovnb shld mov xor and add add es push sbb (bad) mov inc xchg iret imul out jbe outsl xor mov lea or mov and in cltd repz imul jl cltd push mov add loopne je out jge stc sub mov mov xchg xchg inc mov rorl iret jmp test call xchg push repz cs push icebp add les lock push inc iret lods and and push sub test cmp test hlt sub push and add pop test fsub dec aaa (bad) gs (bad) mov push xchg sub cwtl ja cmp cmp lock icebp xchg add or clc pop mov add dec in sahf lods jl cmpsl es sahf dec out (bad) add sub push leave scas push mov jge adc js stc outsl jmp jae in xor aad les les jecxz dec fwait or add loop push mov inc mov pop inc daa jne or out mov das enter inc sub xchg outsb xchg sahf addr16 lds fistpl stc les inc add xchg or (bad) ljmp sbb xchg aad sbb jmp cmp mov mov push push jnp push stc lods jmp jno cmc loope stos xchg inc add mov sub mov iret xchg mov mov and repz or test pop stos int3 jg cwtl jb adc jle and mov xor sbb sti sub mov mov jecxz jo in roll pop mov jmp jns lret cmp cmp xor test lds adc xor jp lods xchg ss gs fildl xchg jo insb sbb mov and mov add mov scas inc nop fsubr fdivrl jp dec pop adc arpl xchg stos aam mov mov imul aad data16 aas and arpl stc fs mov add mov aam cwtl imul sub add data16 push lds outsl xchg imul mov add jmp ds rorl mov xor xor mov jmp cmp (bad) int adc cmp push das dec aam sub test (bad) repz sub inc insb (bad) jp dec dec and mov int3 mov xchg push xchg out sbbl lds cmc incl adc xchg pushf insb push sbb xbegin xchg imul cmp frstor lcall xor imul out and sub repz mov test mov popa fwait xlat lcall push imul pop mov arpl fsts push lcall (bad) xor js add movsl pop push cmpsb jg roll test xlat iret sbb mov aam add mov mov test (bad) mov into push sbb enter lods in inc rcl mov lcall out adc pop arpl inc pop mov xchg (bad) sub das or inc repz push insb cld data16 dec pushf jp test iret mov or jge int xor in adc mov push ds push xor adc pop mov dec inc inc cld rcrb sub mov out inc inc dec and rcl test ret mov int3 push xchg (bad) lret aam hlt pop fistl idivl iret or (bad) cmp xchg outsb out arpl movsb and cmpsb or pop pop (bad) aaa xchg enter cmpsb push fadd clts xlat push or sub dec or hlt mov pop fimull leave push dec push (bad) (bad) push xor out cmp jnp cmc or icebp sahf pusha xor dec pop jnp insb incl xor out in js push lock test jp cmp mov and rorb mov jle jb inc mov (bad) (bad) xor xchg sbb xor sbb push ret inc rcrl pop dec or fnstsw add and negb ret push mov je in mov stc and and pop xchg mov mov (bad) or inc sbb (bad) xchg (bad) jne fwait and dec adc aam xchg push ja push ljmp scas and lea dec icebp andl or jne outsl and mov xlat push movsl cmpsl add (bad) fsubrl lods xor nop nop call mov mov addr16 mov in sti in sub ficompl xchg jne insb data16 imul xchg jo test lea xchg pop call dec cmp push into mov in data16 mov push mov jo sub add jne out loop xchg cltd inc sbb cwtl pop movsl mov (bad) test pushf add or jo call lret dec adc xchg mov pop or cltd pop xchg xor cmpsb insl xchg push lahf or mov add int3 fsubrl rcll out xchg sbb sub push test lret mov scas cld out pop loopne and lods pop enter jl pop pop mov mov xor fisubl (bad) xchg ja sti jne dec dec les sbb out mov shlb add gs scas and inc int xchg (bad) lahf xchg test sbb iret jne jbe xor push push les ret cmp outsb imul clc ljmp inc and incl int (bad) cmp adc sbb jg or xchg nop push in data16 in cltd out xor enter lea mov jmp int3 daa leave sbb and or adc lret fs add sbb out into sub js sub adc pop mov cld add adc pop mov adc push stos jnp dec loopne xchg pop mov int3 iret (bad) push dec lret movsb adc enter sbb xchg xchg rclb jl je out adc movsl xor popf mov mov ljmp (bad) movsl dec cli fisubl in ret iret push movsb insl data16 dec cld repz cld test adc pop mov std dec xchg cmp out fcompl ja jnp add cmp mov push cmp mov cli pop xor cmp sub mov inc jmp (bad) cli mov in or pop sbb gs push xchg xchg jecxz scas data16 push in inc or sub test mov sub pop mov add aam xchg int3 mov push enter xor in push leave pop pusha add inc mov xchg dec int call sub stos pop aas and dec jecxz pop mov orl (bad) or dec sbb adc and mov jge mov dec cltd push or out or pusha push std lods int ret push mov xor cmc rcrl cld shrl ds in sub mov cmpsl xchg pop mov fwait jge lock push jo cmp xor mov lcall push les xor arpl add loope pop jns sti mov movl ljmp push jmp mov sub popf inc ds jmp rol and addr16 adc xchg jns iret jp repnz (bad) mov (bad) adc std push sbb dec ret push jl movsl dec scas gs cmp sub outsb insb add jo fiaddl pop outsb hlt push loop adc dec mov mov mov (bad) stc lods adc mov jge or inc out rorl adc clc add in sahf sub xchg int in pop xchg mov xor ret dec sub jmp jmp sub cwtl cmp cld mov or inc jnp int3 movsb test xlat inc mov jo enter outsl aaa add int3 inc sub icebp xlat sub in (bad) (bad) lea push push sbb adc adc addl and out scas test outsb mov call divl jae test sbb mov rolb pop jp out sbb cs jg loope mov and adc pop aam enter jo popa push cmp cmp scas pop subl jp dec (bad) leave xchg mov fnsave popf test and sub lods sti jmp mov xchg mov and add lds rcl dec insl cmpsl mov andb or orl (bad) mov aad push in add mov mov lcall mov test dec rcrl daa imul pop repz loopne dec nop adc jae mov iret addr16 nop dec mov jbe sub cmp or in mov sti mov and jg xchg test mov loopne sbb mov jge lock mov mov pop imulb jg ljmp and sub in les (bad) dec sub (bad) dec out das negl in mull jg clc fnop shrl loope xchg lret inc pop data16 fisubrl movsl sub add push and in insl xor xchg inc in sub xchg and push ds fdiv pop jp test ljmp cmpsb push shl cli dec cli int3 ja add dec jno test jge call cmpsl mull mov cld icebp adcb xor cld pop sahf jae adc dec pop adc cs cwtl lahf jge dec loope jno pop push mov aas or mov add popa inc xchg jmp cmp jp push (bad) idivl cmp jne and mov ret sub iret fdivr jmp jae movsb jge les pop mov stos xor pop mov cmpsl (bad) jecxz pop divb int3 jmp inc ja (bad) sbb dec test push out dec sbb mov ja push int3 xchg test aad lret lods in cmp add lahf in mov cmp cmpsb outsl bound cwtl push bound repz mov sti lock imul dec cld pop and loopne xor push mov jo mov pushf xchg sbb test loopne cmp shrb lods fcomi xor dec sub subl out add outsb mov jne xchg in in mov push add rorl jae dec inc pop sbb xchg das dec xchg sbbl bound xchg xor shlb jg xor addr16 add pop fildl jmp pop gs in mov cmpsb cld sbb lods cmc or std lahf xchg inc pop xchg out cmc sbb sbb ficompl sbb into mov push push in mov xor rep ja dec push mov (bad) xor clc jae cmc out leave xchg popf mov jle add jg out icebp in repnz std jge push movsl dec dec mov mov lcall iret adc or inc dec push mov dec push dec xor dec mov test popf add xor pop sbb xor jge mov xchg iret (bad) push popf add das inc nop insb push xor imul std xor movsl sbb push mov mov xchg fs mov lret leave adc xlat mov test pushf fcomi movsb mov js sub dec add loopne adc sub hlt mov jmp add test pop cld outsb xor adc pop inc rcll xor mov inc jnp xchg push lret dec or lods pop out inc fnstsw jecxz jmp in addr16 sbb add inc jmp aas call insl ret mov repnz cmpsb mov aam loope and push fstps adc cwtl xchg mov daa push in repz sub xor adc jmp sub jge adc test xchg pop pop push (bad) leave mov cmc sbb xorb jbe mov xchg insl dec frstpm(287 inc push sub sub das aad xor mov dec mov push fwait jle add mov std inc bound cmp sarl pusha xor test fadds ss outsl mov push xor roll stos push push data16 or xacquire xchg cmc test ss or in and pushf add push in add cltd insl xchg in xor sub mov fcompl cmp and aaa xchg fdivs test mov (bad) fnsave lahf rcrl inc mov xor xor lcall (bad) mov add xor js and std popa sbb in call dec cmp xchg mov popf ja cwtl push or cmpsl mov repz push (bad) je fnsave test mov add push sub mov xor loop mov sub addr16 test out mov sbb sbb (bad) jno inc js inc jmp add fs std cmp (bad) pop push in pusha ljmp ret pop adc push jmp inc and das ljmp adc and cmp mov stos ss jmp cmp dec mov sub push mov xchg add mov aam out sbb (bad) sbb pop in out sub jnp add popf shrb and lods cmp pop setb pop jecxz jp gs out pop ret je lea sbb ret dec (bad) in and sbb adc cmc insb (bad) aaa mov mov or push sub repnz push jp or out jo inc inc cmpsl cmp insl lahf out je scas mov pop pushf or mov pushf dec mov mov or into imul imul cmp pop push dec push pushf sub das mov sub dec jne or cmp mov or mov and out test scas or dec hlt push aad cwtl les or sbb sub (bad) aam ljmp push or inc lods or adc clc pop ljmp xchg repnz je test pusha lea loope xor hlt dec mov sub or imul aas jg mov imul movsb or adc adc lea movsb pop ja cmp cwtl push fisubrl xchg dec cmp adc inc mov cli sbb fadds and add je hlt pop femms mov xor jge leave jmp xchg xchg test insb test out cmpsl ret mov xor in sbb push fistp (bad) sahf or inc movsl ja xor mov jns cmpsl ret xchg xlat push mov movsl pop adc add add push mov ret leave mov iret xor into push xchg push xor out pushw jns xchg (bad) cmpsb insl sbb hlt jae,pn mov jle or arpl jno mov lods mov mov out dec xchg inc cli jge test dec dec xchg lret insb imul lds lret sub xchg daa lahf hlt cmp out xor sti aad push pop loop pop jl jge movsb dec (bad) lods nop aas sub xor das xchg negl push xchg or mov (bad) int3 gs adc sbb enter dec icebp sbb out clc ds (bad) faddp cmpsl jg aaa rol je cmp xchg cmp test mov inc repnz leave pushl pop lods fdivrs inc rcll xor adc lret bound leave push pop mov xchg (bad) rcll hlt iret test push dec push or push mov scas push jg addr16 jo mov mov or lock push cmp daa cwtl mov adc sbb cmpl out xchg push (bad) or cmpsb jp (bad) scas pop mull mov push xchg pavgw cltd loop jecxz notl inc lds dec adc adc jecxz xor lods movsl clc out scas xchg sub xchg sub loopne inc ds aas cmc std and sbb xor cld jmp mov adc (bad) xlat xor loope scas out insb pop pushw out gs fcoms out inc sbb mov arpl cmp sbb or sub cwtl lret sub out pop ljmp rcll outsl mov mov scas or fcoms into dec sti and inc inc sub xchg aas jle es lcall shrl cli aaa add fimull dec xor or out (bad) inc push and es cltd out jge lret fsubp sbb mov sbb ret pop rclb lcall mov push lods jmp sub mov jmp (bad) mov jns inc dec pop mov pop lcall ja scas cmp aam pop jnp daa jecxz mov jg pop es push mov aaa mov jae inc loope gs sti jl xchg popf inc out add js pop aad scas movsb push shll out fsubr leave inc cmpsl mov pop jo mov lea outsb scas dec (bad) mov mov jp aad or cmp mov xchg jg cmp dec or (bad) jbe or add fs enter or sbb sub daa mov cli mov pop xor add in sti out rorl loop mov xor inc popf lahf jae lods xchg inc mov mov mov popa insb sub out pop inc imul dec push loop push push repnz outsl pop pusha out nop jb (bad) sub (bad) mov dec push sbb in jo mov (bad) (bad) dec adc inc mov sub popa scas mov pop or or mov push aas xor xchg hlt mov cmp pop mov sahf adc and sahf inc cmc jg sti mov cmp jg fsubrl (bad) jle outsb cmp mov mov jns or insl push jnp scas std or jl sub imulb in dec dec push sub push rclb out pop dec jbe add jge or insb sti in jne js cmc (bad) mov push in (bad) fisubr sbb add imul ss outsb clc inc bound inc loopne mov jo jge pop in into stos cli insb xchg adc dec push mov push scas or push movsb jo nop mov cmp dec jnp mov dec lret in or fcomps and dec aam push fldl out mov xor or sub cmp mov imull scas push inc jmp mov cmp daa pop mov inc in lods inc pop lods int neg mov xchg jo ljmp stos test add push es int3 into sti in es push add mov inc stos push sub xor jmp dec jno je ret test xor mov sub mov das mov sbb mov sbb dec in (bad) fnstsw jns push scas aam sub xchg pop add psubw xchg push sub jp fidivl je (bad) out leave add mov out lock mov (bad) das inc fdivs daa loop sti mov cmp lcall addr16 mov mov push push jp cwtl bound shl nop in mov push pop pusha andb xchg scas and fild pop xlat sti jp xor aas movl pop jnp sbb push clc cltd cmp or enterw (bad) dec lods rcll cmpsl inc aam pop in std sbb aad cmovg fisubr jno iret jne push arpl mov popa cmp mov ficomp or jecxz and xchg xchg lods dec outsl sub (bad) mov insb push stos (bad) cmpsb dec sti push dec aaa pop loopne add mov aad call int3 leave jno sbb pop rclb pop mov cltd (bad) movb (bad) insl insb ret fwait and stos inc rcl and cmp leave add add or sar mov mov pop pop data16 pop xchg xchg mov jmp push mov imul jne inc adc xchg mov and or dec dec lea std sub outsb (bad) (bad) mov mov aad pusha cmp mov xchg add pop adc fwait push aaa stc xchg pushf dec fwait sti inc aaa addr16 and inc int3 orl popa sti cmc scas cwtl xor (bad) xlat push out and cmpsl fcompl fistpl inc std addr16 shl (bad) in push incw jmp mov test gs je pushf fiaddl test roll mov into test xor shll or xchg jg es stc xchg das pop loop xchg into aas jle sub bound imul jecxz pop jne add mov lcall sbb and sbbl push jl sbb or jp xchg mov mov jge push xchg jmp dec into cli lock aam xor das adc jnp data16 sub mull mov sarl push and pop fmuls or push jl out push cmp scas sbb sti ds lods cltd and fisub cmp stos int mov mov into in mov xchg and (bad) lock mov lods jb pop xor in sbb dec leave sub scas adcl test (bad) jle repz mov fistpl inc jb jns nop cmc jge stc sbb daa das or loope jp pop cmp ljmp pop jnp cli pushf cmp mov fildll jmp call fistpll adc cmpsl out push add aaa stc sub mov ds adc sbb jne stos add movsl (bad) stos das adc pop cli sbb jmp fldcw enter push movl adc add cmpsb jg jns or ss mov sbb out loop jp loop xchg adc xchg test push push cmp cwtl ljmp adc mov leave (bad) mov testl xchg gs fcmovnu js adc psubw xchg (bad) pushf push and xchg mov pusha sarb xlat sbb shll mov (bad) mov cwtl mov stc cld mov shrb pop stos xor pop mov push enter lods xor dec mov or add push add js jb jmp adc push fidivl testb sub icebp push roll js cmp imul fs icebp in pop sbb lods fwait imul mov scas test add enter ja jb es lahf in push push lods mov roll pop test lods pop fist mov fwait sbb mov mov insl test mov dec aaa rcrl lcall repz pushf jo stos movsb (bad) xor es and mov out inc inc psubb cwtl movsl jns (bad) out xor push sahf addl setno stos xchg pop jbe gs pop std mov mov add cmp iret loopne aas out rorb sbb sbb and mov or adc inc clc jge std sahf mov adc clc adc add add xchg cld mov jnp jp negl push insl gs (bad) lods sub enter int3 xchg out (bad) mov jne cmp xor dec adc xchg and or fisttpl popf mov xor outsl dec int sbb or out pop dec gs jl pop scas (bad) sub repnz loope mov dec sub push cmpsl xchg gs jmp jmp sub push push data16 insb xchg fwait mov pmulhw and lret orl clc repz cmp or pop fcoml data16 sbb fdivrl lds inc add int3 cltd lods sub jne les aas loop jno es pop xchg mov (bad) adcb insl xlat loopne data16 inc imul in sub mov dec ror repz call or and cmp std xlat std or mov push pop loopne shll jae inc cld lret imul jp xor icebp jne leave sub xor data16 push popl pop xor sbb test imul outsb (bad) xor pop (bad) lock sub mov mov mov jae pop dec bound fwait add stc lahf ds mov gs into xchg xor insl add pop aaa sbb inc jp mov xchg mov xor push arpl inc jnp dec mov pop pop pop dec jns pop sub pop add inc lock cli out loopne rorl cmp addr16 push add out repnz sub aaa mov xchg das cmp inc xor sbb or rep (bad) mov fdivs stc test mov repz or stos mov or test movsb pop in push (bad) test pop imul into push addr16 lds mov mov dec icebp fsubp addr16 or mov or addr16 mov hlt cltd inc icebp dec or add push sub fidivr mov push call insl pop push and lods and arpl les adc pop imul pop push jg cli and mov (bad) outsb jg cli cwtl aad adc cwtl lret in adc pop dec enter lea add imull in test jo mov push stos out push lahf (bad) xlat pop fcomi cwtl loop pop cmp push lret adc ljmp lods xchg dec jmp jg in pop jg orl cwtl dec and mov xchg ljmp fdivrs or (bad) jg (bad) mov dec and sub sub or dec int in lret outsb dec (bad) xor sbb sbb fisttpl pop dec cmp add cmp or mov mov sub xor and mov and push (bad) pop pushf std addr16 jge (bad) loop js cmp mov xchg pusha jns jne imul mov clc push std out add call jg sbb loop xlat xor stc dec in sahf inc aas into jecxz aas cmpsb cmpsb icebp out in mov test adc cmp inc add call inc push xor out (bad) cs mov xor sub fstps fwait int push mov je mov add repz fs insl or insl loope cmp or test stos mov test push cmpsl jecxz cmp dec xor mov in sarb daa das cld mov scas out rorb scas add dec jne pusha aas push in lods xor adc push repz jo and xor jge mov or mov push ret or xor aaa fsubrl sbb sarl andl dec pop xlat sub add les roll stc sub outsb xchg cmc in inc sub pop sub cmpsl cli and inc pop ds cli ds inc pop dec (bad) xor and dec mov je jmp xchg sahf addr16 mov xor sub scas enter jg ljmp js push and or outsl xchg xor insl mov xchg iret jle das fstpl mov les mov or loope cmpsl in jmp mov pushf xlat jmp ret xor inc xor sahf imul mov mov push (bad) out stos pop jle sub fs scas ljmp insl xchg jge and mov cmp jmp jecxz pop xchg sbb ds sbb fwait dec or dec movsl (bad) nop cmp jle outsl pushfw cmp neg fs ss ja stc sub mov aas jbe mov xor cmpsb test and push fs add push cmp lods scas fmuls or popa jl sahf pop test push stc and in nop mov out imul or sarb fs push mov movsb out mov mov add test jno jmp les sbb jnp mov inc or leave push mov mov cld mov sbb test dec insl shrb pop loop add pop mov ret mov icebp shlb jecxz pop fs mov bound cli in mov cli cmp fcompl mov fidivrl add into stos pop inc mov adc mov push lret icebp fdivrs ljmp (bad) addr16 adc xchg sub xor add inc xchg jns test push arpl fistpll dec add dec inc ds push lret jge xchg and fcmovnu xchg cmp sub mov test popa cmp or sub cmpsl test push out jmp cwtl adc insb xor push add mov jae inc jo mov test loope mov int3 fidivr xchg mov and rol adc out sub outsb loopne (bad) movsl xor lds cmpsb insb xor lods xchg mov insl mov add cmp mov dec test mov in mov pop leave pushw or inc gs push cmp bound mov mov imul into mov push xchg jmp sbb cmp cltd jl pop jmp inc je mov ss in push pop outsb (bad) xor mov lds addr16 pop out xor xor pusha sub inc lret cltd pop js test lds popf loop dec std nop mov out xchg lcall aaa xlat testl mov adc pop push repnz and addr16 xor ja imull fidivr loope sarb js divb cli pop add arpl inc mov inc mov daa imul inc xor (bad) cmp add mov shr adc mov mov jp insb mov and fnsetpm(287 sbb mov stc out sbb push les sub mov add dec getsec or mov stos outsb mov sbb (bad) xchg pop repz add mov and in push mov out in rolb jge dec iret and mov in pop jnp (bad) cvtpi2ps add mov (bad) sub inc stos les jo repnz leave mov and lock mov and xchg dec pop mov loopne aad in fs pop cwtl pop mov jecxz notl pop adc or das rorl mov in notb or push xchg mov mov fimull adc dec pop mov jo or pop repz or nop div stc adc mov pop popa xchg jmp push dec (bad) hlt rorl adcl ds ss dec aas or std movsb mov aas das dec std dec enter movsb jecxz lahf mov in leave mov cmp fisttp out sbb xchg (bad) xor scas cld loop mov pop inc inc pop mov mov mov adc in clc popf xchg xchg sbb mov pop xor jge mov xchg aad and in shrb pop inc inc or lea jno push fiaddl scas pop adc (bad) adc imul xor and lret outsb mov mov inc lret dec ja mov cmpsb push bound clc movsl lods cmp nop fwait pop icebp mov (bad) nop jmp sarl add or sbb out fwait mov shrl movsl add mov in jns lds xchg jae xchg ds fstps jecxz mov mov sbb shlb sbb pop lcall lret js jle inc adc int or std dec fwait push icebp or fbld daa (bad) inc push add xchg cld (bad) aad jnp and mov jo xchg in jb stos push cmc sbb iret mov aas ljmp addl xlat sub jecxz in movl push cmp add rorb dec out es test mov lret push rorl and lds iret imul in dec lret cmp cld movsb lret push mov sbb jg or xor mov (bad) or out or cmpsb push inc sub lahf jl pop ffreep hlt scas adc cmpsl dec pop push sbb sbb jnp aad lds pop jp pop add and xchg fnop push cld pop mov pop scas cmpsl rolb jns,pt mov fisttp out daa fidiv cmovnp (bad) push addr16 aam mov xchg sar mov and jne pop mov and mov in hlt stc call inc outsl stos adc (bad) (bad) inc ja mov movsl xor pop mov xor dec jge sbb je daa stos cmp inc sub mov lds push fs xchg dec notl sub incb (bad) sbb sbb shrl push push out mov aad fxch sar pop push popa push bnd push xor inc mov je mov lds rcr stos mov mov arpl pop mov adc scas cwtl movsb xor stos adc adc (bad) pop sbb stos aam and mov xlat push and xchg sti popf dec mov daa cmp mov adc pop scas jbe pop lods sub cmp mov and test sar jbe call pop test rcrb dec or (bad) out jge das sub adc xchg daa inc lods pop (bad) dec in lods jb out push sbb in aas in jno in cmp in test cwtl inc faddl mov fs je bound lods aas inc lock jecxz push mov add arpl push jmp inc push jno adc mov inc sub add les xor sahf gs or inc fcmovne lret adc in dec sbb adc add andb lahf add or dec icebp jnp icebp sbb leave and xchg (bad) lds xchg out cli xor mov ret std cmp pop insb or mov inc xor out xchg cmp test ja push fmuls test pop mov out and adc dec pop mov std inc inc mov xor lods inc xchg lcall pop pop xchg cld or loop cmp xor out movsl push insl mov in pop (bad) mov adc mov mov lods lods cli pop scas mov jmp xor insb push cwtl stos mov mov outsb leave (bad) xor mov or pop jmp dec xchg mov in mov add cmc mov jnp add push loopne dec fs mov push cmc mov and pop movsl fcompl cli dec xlat mov inc test pop gs xchg and xlat mov adc and aam inc mov push xchg stos (bad) cli lds push mov mov into lds xor push stos aas dec mov mov sbb out mov cli dec and lcall mov pop loop dec lds insl cwtl loop imul sub xchg gs or jb and gs cmp orl adc leave out das leave mov cli call in (bad) into jmp bswap dec fnop xchg push adc fs int3 outsb cmpsl cmc pop xchg lods pop mov inc cvtpi2ps inc js cwtl jb stos jecxz scas out les sbb mov jno bswap or sbb lds sub loop popa popa fldcw sub add mov inc jl testl insb jl popa lods and jno xchg (bad) cmpsl mov int stos clc mov test fmull clc in mov in jge sarl sbb test mov int vminpd insb cmpsl sbb clc nop jno ret lret arpl jg adc out adc xchg outsb lahf movsb push int3 or adc or movsl (bad) mov in cmp dec pop xchg out jns inc sahf loop push xchg lods out test mov cmc mov (bad) loope pop push in outsb lods nop or out daa insb fsubrs push lret lcall adc mov out int addr16 lcall inc jp inc jno add push adcb aad adc lret push pop mov ret xchg loope,pt lods (bad) icebp mov inc insb rclb sbb enter pop cmp and out push sar les jns sbb add sub mov cmp jb xor bnd sub enter addr16 data16 cltd std out xor outsl fs dec dec mov mov fisttp or imul idivl arpl lods outsl and imul stos pop nop adc loopne cmpsl sbb cwtl mov mov or ja out jle dec imul push inc lahf mov dec or aas lods mov dec mov or inc lfs imul fcomps pop push jo fist inc aam jb insb inc adc or pusha int3 cmpsl movsl push in mov mov inc and les mov or and push (bad) (bad) jbe scas (bad) xor fstpt jnp icebp cli in ret movsb xchg nop lret fnsave dec jae xchg jp imul pop sub push rorl jge,pt lahf inc test cmp jp xchg xchg hlt cmpsl les mov push dec xchg xor nop lods sub iret pop dec or rolb sub jp pop ret jecxz cmp mov push (bad) clc pop mov int3 aam mov fs push neg test outsb shrl xchg xor push mov add sbb pop mov push dec loop dec ret add xchg or sbb add mov sbb sti stos mov imul cmp stc and fnsave jle xor insb or jle sub mov or scas push test xor arpl sbb mov mov sbb (bad) dec xchg pop add sbb cwtl insl inc (bad) xor cmp push cs push dec jp out mov repnz sti mov stos pop sub cmp out adc cmpsl scas xor sahf inc insl test lahf leave in jecxz push jae mov push mov fist outsb mov data16 jbe insb cmp inc push mov lods pop cld or int3 mov mov scas jg aam mov cmp inc cwtl or fwait dec mov xor and stos push stos jbe rcrb mov adc push call xchg sbb out dec scas xchg adc fwait adc sub pop mov stc (bad) or pop xchg and out mov outsb push lock pusha test int jbe jge mov sbb lret push jmp icebp in mov arpl cmpsb jmp and add cmove fidivr scas and in pop pop adc js mov aaa test inc daa cli ja and (bad) jg jnp incl in mov imul xchg pushf push jge xchg iret pop sbb scas and push in push repnz aad cs in (bad) and inc daa clc jmp push add in decl aas icebp cmc scas mov adc fwait pop movsl subl xchg clc pop lret jno mov push dec aaa xchg bound add cmp loope mov mov mov rclb adc in loop mov lods fcomi mov xchg dec inc ror mov mov sbb stos out out insl cmpsl xchg loop scas ja mov outsl cmp jo jns cmc negl lods aaa imul dec dec jbe push jmp in xor js das xchg jb mov outsb push ret cmp mov pop (bad) icebp cmp mov out daa xchg in jnp push loopne mov push jbe xchg in add loop in insb fwait js mov dec int3 inc inc mov test xchg and lock sub call mov (bad) popa sbb pop mov lods mov arpl mulb add xor jge cltd int sti lods out fistpl fs or jb les imul lods mov xchg ljmp outsl clc sub idivl mov pop outsb push nop adc stos js push sbb mov add in popf adc stos addr16 mov mov out std sbb adc dec lods add ja jg jae or subb sbb pop rorl pop jle aas cmp fldenv cmp push and lods push pop dec pusha in clc pop mov inc cmpsl cmp ret loop dec add ds dec aas xor insb imul mov lahf xor lea sbb and popa mov dec lahf and add pop pop jmp xchg call mov push add bound pusha addl stos lret xor in pop push sahf pop cs jns mov cltd or enter shll mov push dec icebp mov sahf push out mov pusha decb dec mov xor push cmp clc or fwait xorps loopne daa (bad) cmc mov (bad) xor in xchg movsb movsl std push (bad) stos (bad) xorb dec add ljmp sbb mov adc insl sarl inc out lcall add in adc lock std pop loope movsl gs fildl pop gs add mov sub sti bound xchg add mov push xchg adc cltd daa dec push scas data16 lea mov aad mov push sbb adc testl test xchg xchg xor or cmp push adc les insl jb std jle or loope in or dec inc jnp push (bad) mov add mov mov mov sbb xchg inc lret cmc bound xor adc and and int3 and inc push adc jne jns pushf iret test adc (bad) test aaa add jno pop arpl leave mov adc and adc fbld ja in shrb out cli dec (bad) loop xchg aas (bad) dec push pop sbb push jmp inc outsb push gs (bad) xlat ljmp scas jecxz int aam cmc rorb enter loopne or pop loopne mov xchg call daa and js popa sbb xchg mov fdivrs mov xchg fdivrl mov or inc push xchg iret mov bswap fstpt out movsb add jp fsubs lcall out pop lock mov dec adc xchg (bad) gs lock sti das out das stos xchg lahf mov fsts dec or mov mov je daa enter dec xor jnp enter and cltd xchg aam mov loopnew cwtl dec mov dec mov xor cmp xchg mov push in fstl cmp cwtl inc push mov outsb scas aam mov inc clc adc mov add movsb nop sub into sub cmpsb ret stc stos mov jge fadds jns and jno sbb scas lret popf cmpsl jge je scas sub mov je test fwait sub adc out dec sahf mov iret out inc inc mov sti mov cmpsb ffree (bad) std jnp in and push push icebp lahf sbb loopne scas std jns sahf subb lret dec adc test shl mov mov cmpsl sub mov pop cmp xchg jl pushf aas or imulb and stos pop loope,pn fs xchg (bad) xor dec sub insb aaa int cwtl imul and or xor rcrb loopne std inc adc mov xor stos push cwtl push cmp xor pop cmp pop mov leave adc xchg in add test cs (bad) sub insb push inc stos sub cmc jp xor cmp pushf nop daa xchg (bad) jbe mov cld jmp out mov push adc mov cmp mov movsl and push mov clc outsl mov xor pop and mov into mov jnp out loop shrb fstps sbb push or mov fcom adcb add inc sub jge imul sub test mov cmp test js jns (bad) out xchg popa cmp pop cld push and stc xchg sbb mov icebp mov jp dec out jmp xor bound cmpsl in cli sbb iret cmpsl in push jno (bad) mov cmp xor pop jmp loope push sub sti fnop (bad) ficom dec cmc popf out inc push sahf or lcall jmp sar stos mov and lock clc out push into dec movsl pop dec out (bad) std cltd icebp cwtl mov in adcb push inc int call fdivrs sub cli int rclb dec repnz je (bad) cmc fidiv icebp dec jge ja,pn lret adc aas xor fisub or hlt xchg loop xor adc out fcmovbe mov inc in sar add pop or or dec cmp (bad) mov inc lahf pop mov test mov test arpl out push jno arpl stc cwtl ret cld mov sar adc pop push imul jg xchg pop push cmp loop aad (bad) pop scas jae pop idivb mov data16 insb adc ja les es xor dec jns lcall insl sub sbb xor out lcall cmpsb lcall mov fist shll inc xchg rcr out addr16 je pop lock pop stos or in popa aaa push xor inc out mov mov sarl ret sarb cmp fstl adc jno adc mov lods cmpl mov push mov aas test fildll in push dec fucomip pop ja rorb xchg scas sub subl je pop xchg data16 xor enter jp imul pop movsb mov push mov loop fimull push push fbld sbb and je push fimull push pop inc inc outsl push inc jb or pop cmp rep call lods inc popf pop inc dec les adc or repz add out xchg mov pop jnp xchg xlat fs adcl or dec lcall es ret or cld lea push inc xchg fidiv call insl push jle (bad) xchg ret out (bad) xor call ret cmpsb sub mov cmp cld add push jnp dec imul movsb test insb test (bad) cli adc jb loopne inc push jp push subl cmp outsl and xchg js cli pusha jns push xchg inc cwtl sub xor inc jmp xchg inc fsubrl inc sub add test fwait push sbb xchg out mov dec cmpsb sarl inc mov inc xchg jno pop cmp gs xchg in inc repnz adc xchg scas imul (bad) xchg fstpl add lods shr inc push sub mov inc push add dec scas push data16 fldl mov out pop icebp fildl inc scas out xchg int3 es xor xor pop add cmpl ficom lods iret jmp scas bnd out insb add mov xor pop sub mov push cmc xor sub dec mov jnp or mov imul out and mov (bad) addr16 lods hlt adc mov call add in jl fmull dec inc xchg dec inc icebp or push test cmpl clc sbb cli (bad) ja pop (bad) dec pop js shrb test pop aas xor fwait in dec jo fstpl in cld cmp fnstcw pop cld or push pop cmp add arpl test xchg mov inc sub (bad) out pop jl inc mov lea cmp int cli sbbl in in pop xchg pop xor aam sbb gs mov ja stc iret ret mov dec adc push pop sbb loop mov mov std arpl jno adc dec lods imulb dec pop pop cld inc cmc cmp mov inc dec ljmp (bad) enter or mov push dec cmc sub jp jmp lods jnp in pop inc jns fs in ljmp mov mov fwait jbe push fsubs loope in xor jge or rorl mov pop dec lds push pop push nop test in xchg repnz xchg or (bad) stos and insl jnp jmp sbb mov xor or jg aaa (bad) dec dec enter sbb xchg out jno adc pop pop enter pop add jg dec xchg fwait cmpsb pusha stos test das aas leave cmc xchg int3 dec jo add cld lods sahf and cmp in andl adc test jle into or arpl xchg dec (bad) hlt addr16 sub outsl cld sbb js xlat push je insl sti mov xor insl mov cmc outsb ja ss es adc push push arpl jle pop mov icebp mov lcall test (bad) negl mov cld push jb cmp pop pop sub adc or gs sub lods fisttp rorb scas push push in aaa mov pop (bad) xchg and loop loope inc out pop push int3 int cmp in imul loop mov jp sub incl ljmp or sbb mov and inc test pusha sub jnp fnstcw jle pop in dec daa cwtl and fmuls dec stc in dec mov popf in stos adc push pop cmp pusha jmp and bound jge sbb pop fistp fisubl inc sub jmp sub and or popf popa cmpsl sub jbe lods dec and sbb dec in and xchg push push adc clc jg aaa xchg xlat out cs out (bad) iret push imul mov mov movsl xchg inc mov int dec dec inc mov cltd pop out cmp mov popf xchg sbb addr16 popf (bad) xor das cmc notl sub xchg outsb pop repz daa js mov js adc adc jmp sbb nop mov xor pop lcall push mov ret insl das xchg aam sbb inc cltd jns outsl in in mov js sub add jns dec lret sbb inc inc fidivr cmp es enter xchg sbb mov lods xchg cmp jbe jns fidivr jle pop sti push loopne jns inc shrb pop lea adc push mulb mov (bad) cli add sub iret hlt imul insb test dec stos push push adc mov xor pop (bad) testb or xchg adc out adc (bad) sub mov sbb pop shrb cld cltd dec test gs xchg int call jg std addr16 imul icebp stos mov out jge in int3 in xchg xchg ret cmpsb inc adc stc (bad) popa not mov cmc aaa dec stos sub pop mov push xchg mov add cmp pop jne ret scas hlt out rcrl add imul xchg and dec cmp cwtl cmp lds out (bad) add repz imul xor fcoms sub fldt out repnz xadd adc dec mov sti xchg movsl sbb adc adc cmc cli test std dec cmpsl mov jns dec icebp adc idiv ja adc icebp movsb mov pusha fucomp dec mov pop push mov idiv test jno inc jns cli adc dec test mov lahf add cmp sbb jne ror mov mov lret js,pt pusha and je fldcw pop mov arpl lret icebp adc movsl lods sbb inc mov sbb stc push (bad) lret jmp daa ljmp sub and iret cld dec (bad) dec sbb dec cmp lods ficom fs testb rorl gs enter int (bad) dec test popa fnstenv xchg pop mov add jno push fcoml cmp mov test notb cmp mov (bad) xchg ret jmp je,pt ret jecxz aaa cmc js or movsl push repnz mov sub mov lret inc xchg cmp push adc inc and push lods pop mov add or cmp xchg js push adc int stc leave dec sub jb icebp dec cmp push adc enter xchg subl xor jmp jmp cmp enter dec mov mov inc cmp leave das mov push mov fstl pop mov arpl push xchg inc or jmp mov loop test xchg ljmp sarl shrl in inc add bound pop cmp jns (bad) jl mov in mov ret xor pop inc add add xchg inc and or pop mov imul adc pop xor insl and add push lahf stos (bad) mov data16 mov mov mov dec fmull lahf xchg (bad) and jno cmpsb xor cmpb jge cwtl jne (bad) repnz int cli pushf dec fwait in push push cmp or fisubrl xlat idivb mov insl (bad) rcrb sub or (bad) nop sbb arpl pop inc ljmp jae push je ss cli cli nop scas dec aad and test loope test ret dec lcall dec ficompl pop add sti pusha pop (bad) pop mov aas cmp xchg or jns cmp js xchg (bad) and pop xor hlt test pop stos cmp jecxz stos xchg rolb sub sbb mov cmp or outsl pushf jnp inc cmp lods inc jecxz dec lds lock pop ret xchg push sbb push out clc jecxz adc jl mov mov mov loop (bad) and jmp daa dec xchg (bad) or imul (bad) mul aad (bad) sbb neg xchg lret or lock aaa and xchg mov add and cmp clc (bad) jg jecxz shll sti add inc addr16 daa (bad) hlt cmpsl lret scas cmp fsubrs lret scas ja outsb jae inc scas push je mov add pop jg clc mov cwtl cltd int mov pop fisub push jnp (bad) stos jmp imul imulb jmp out mov cmpsb test cmp mov cli in push fistl mov das xchg cmpsb gs sub jle jle data16 mov lcall push or add loope je (bad) insl rol xor adc nop loopne bound in mov imul loopne ret in sbb shl pop or adc pusha dec jmp pop cmp sbb xchg lahf mov push sti scas adc fs adc mov sub stos jns pop mov hlt mov loope cs paddd (bad) enter adc inc mov jge lcall cmp jnp jmp jae xchg push cmpsb xchg sbb mov movsl sub lods dec pop aam ds cmpsb sub dec sahf mov and in (bad) test pop dec insb lcall sbb in inc decb sub jmp rorl and pop shrl inc (bad) into adcl dec dec cmp (bad) incb jo addl xor leave dec out push test stos jb fs jge adc je lahf mov iret stos pop inc cli test pop cmp or adc addr16 insl lds das jb inc bound fadds jae repz push addb push push pop sti ret pop loopne dec pop repnz jg jne scas lods mov mov jecxz lods pop fistl js test fwait cmpsb out jb or pop lock pop scas pop inc cwtl and mov adc sub ljmp xor out adc stc dec loope adc mov push adc repnz jmp jmp inc enter cmp (bad) insb mov cmp lea test pop fwait and mov xor pop xchg mov cmp lock in test out dec repnz test lods sub mov out mov or pop (bad) cmp dec jo loope imul into cmpsl jno enter stos cmpsb xchg xchg test adc sbb xchg neg push sbb (bad) sbb pop rcrl jo sbb add lcall stos imul mov sub cmp inc enter int3 pop mov aam push jge push pop (bad) mov in xor ljmp jle and insb or insb hlt jnp flds mov cmp insb aad push jns push mov mov mov mov scas pop pop decl push fsubr xchg fwait or xor pusha sbb insb mov sarl pusha add aam mull adc cmp push repz in je es test sub sub sbb jnp jne xchg sbb mov aad scas enter pop pop cmpsb cld mov mov imul aas mov add out fwait add adc ret pop jno or xchg addr16 cs inc dec ret cmpsb xlat mov mov add mov fs pushf pop outsl xchg lods mov sub fs dec outsl cmpsb pop push cwtl fldenv fwait insb xor jge lock scas fucomip xchg jbe or inc test jb xchg adc mov cmp or (bad) int push fidivrl push jge pusha cmc mov mov xor leave (bad) pop fiaddl insl mov mov xor mov cmpsb mov jp loopne (bad) or in adc loope mov and jg (bad) (bad) or jg jbe mov mov mov pop pushw adc das push dec jge mov test stos je mov lret (bad) cli inc sti aaa push fisttp jmp push jo lcall lods sbb ljmp js imul push sub pop cmpsb dec mov jecxz daa movsl dec push pop add leave ja pusha mov sbb sbb test mov jmp sbb shr outsb ja mov jecxz push jno daa pop push in int3 lods out cmp xor xor std (bad) mov (bad) aaa in (bad) pop (bad) mov lds enter addr16 mov enter push jge (bad) xchg push sub subl mov jae stc out test add movsl out and cs jmp cmp into fucomi test inc je imul aam roll addb mov mov popf lods mov cwtl and and fs push je hlt stc xor jae movsl adc cmp hlt fistpl push mov outsb mov out mov xor out ret nop pushf jno dec lds in jnp lods jo enter movsl daa push and das cmp mov fmuls cli xchg dec (bad) xor mov mov les je lods push sub jle pop lods jae add in inc jnp lea aam or ljmp sahf bound shrl sahf mov dec xchg bound in nop dec cmc cmp mov sahf mov dec cmc repnz dec inc inc ds out push sub sbb std xor cltd jle sub xchg dec fnstenv movl cmp imul mov fiaddl lods pusha in adc (bad) test (bad) xor add xor je mov arpl fisttpll add adc popa or movsl or mov mov mov out add cld pop les hlt adc jecxz sub psrlq pop pushf (bad) jecxz cmpsb inc enter adc sbb push popl jg in add jp mov in xchg add inc cmp popf lahf imul sub mov or inc loop or negl sub mov and or in leave push pusha scas pop loope jo adc pop pushf mov insb push notb mul arpl sub mov aam (bad) jb insl jns push xlat imul cs fdivs jns mov add inc mov (bad) icebp mov imul arpl mov std dec push stos cmp sbb pop test jo dec icebp lcall inc lcall adc hlt dec int3 sbb neg xchg (bad) test sbb sbb push ret je jbe push outsb je sarl mov ret jmp loop aas xchg std icebp or (bad) ds inc aas xchg jge cwtl inc repz xchg pop and insb push call je jp inc in and js push and sub lcall jge jno xchg pop (bad) incl js push and test push imul (bad) mov sub popf test sub xor out not add cmc push jle nop jne cmpsb loope insl mov xor pop push xor inc sub sub xor dec (bad) aas stos jg test ret jb cltd in cmp cmp outsb repz outsl fdivrp mov pusha push not sti pushf jnp popa cmpsb test cmp mov push or mov xchg mov pop stos rolb and mov sbb pop and enter push push pusha sub enter sub std scas mov fnstenv inc in pop aam push je sti push cmc enter out add mov ss xor mov push fmull rcrl sub inc popa flds add sar adc jp in push and pop push mov xchg xchg outsb out lahf and iret ss add cld aad out add (bad) jp cli das cmp pop ret xchg out xchg add pop pop push bound in fcoms jo rcl into repnz aaa sbb addr16 xor add jno clc jmp or fdivrp sub pop jl loopne inc popf xor scas mov (bad) jae lcall rcr jne (bad) je adcl lahf mov divl (bad) (bad) jae dec mov mov xchg add adc adc push xor cmp jl cmpsb or lock mov enter sbb lods lret loop jno push sub mov cwtl rcrb lods mov add and lods loop add pop mov sbb icebp mov inc scas and mov cmp insb and xchg pop popf ljmp int3 jns (bad) pop popa adc gs xchg cmp jg nop push (bad) sub push xchg pop xor jmp outsb jns insl or pop mov test xchg or inc jmp mov mov dec push (bad) out test imul push mov (bad) test xor adc mov and ljmp sahf xchg jecxz cmp push divl inc fcoms or dec callw in cs jle sbb lea xchg (bad) inc lret pop xchg add std push add lods xchg (bad) lcall mov pop mov mov add xchg push sti or shr lods ljmp and cmpsb cld mov pop add outsb cmp lret stos pop pop cmpl xchg dec aam lods mov xor xchg daa jo std (bad) dec adc enter std lahf mov sub movsb push and ss fsts incb fist xchg pusha test sub enter ret out in cmp iret stc add push jns pop (bad) out xor sub out scas fwait js lods lret mov mov xchg dec decl mov inc jecxz fmuls dec aam cmp scas pop sub jnp pop nop pop pop (bad) jnp aam scas rcl mov cltd jge ljmp adc or mov cmp sbb push cltd pop mov and dec jmp xchg mov lcall dec push hlt outsb sbb pop ja jl and repnz lods sbb lret lods xor mov (bad) push mov mov xchg mov cld arpl aas cld jnp daa cld jle das cld jb pop cld je pop cld jp pop (bad) in jnp push (bad) fsubrs addr16 inc test adc mov movsb ret adc sub stos (bad) mov test jo lds shll out pusha jnp lcall and add imul dec or test das scas addr16 cmp lods in or (bad) mov add jle ret jbe sbb jnp adc inc sub push add xchg xor xchg fmuls mov int clc sub fsubs lahf movsb push jge insb ljmp sub and into mov (bad) or in cli pop adc push xlat push rorl insb cmc lret dec or dec addr16 xor nop cmpsl pop mov outsl inc test ret and scas sahf pop mov mov loope pop cmp sub notl int pushf (bad) sub dec inc xchg daa (bad) pop xor in xlat out sar xor fdivrs inc or mov pop popf imul fsubr cmp mov adc or les inc into jecxz into out in movsl out fimul fcmovnb add inc sub push cmp movsb inc dec jne push mov movsl fs jno inc jecxz aaa int3 mov cmp std int jnp cmp and xchg fldt (bad) xchg add data16 pop pop arpl into lods adc out inc or mov cmp jbe xchg jmp mov insl in sub bound dec sbb addl sbb jg ljmp in mov test jl dec in mov xor aas adc xor (bad) daa (bad) rcl lret push or pop dec pusha xchg or enter out mov mov mov enter jne ljmp adc fisubr out pop push psllw xchg push adc lret das sbb pop add cwtl negl sbb jge (bad) jge or dec cmp sbb lock jg sub in mov fldl (bad) hlt jle movsb stc shrb adc iret sbb pop sbb mov pop (bad) cli (bad) dec pop jg sarl mov fnsave xor iret gs incb ja xchg mov mov fcoms dec dec adc fwait mov inc (bad) mov (bad) and scas fwait popa sbb dec mov or fsubs lcall insl mov cmp mov inc lret pop daa fsubs scas jnp insl mov clc pop jb xchg jp pushf mov sub in pop repnz ja (bad) mov xor pushf add inc add bound insl sbb mov inc imul es rcrb mov sub xor mov sub dec jbe mov add xlat jo lock push or stos lret shrl loope mov nop jmp xchg lahf pop jmp xor cmp lock outsl imul lods lods mov cmpb flds (bad) jge loope mov jmp cmpsb or (bad) adc (bad) mov or inc shll push dec add mov ja mov mov je insb fsts pop test inc xor sbbb out scas xor scas ljmp jmp mov mov iret fisttpl jp jae mov xchg fldl jl adc imul mov mov (bad) add lds jno popa xchg add leave inc push xchg lret mov mov lret icebp in scas (bad) nop mov daa nop popf push fdiv (bad) dec int cwtl jmp out pusha pop jbe fstps sub push out pop lcall xor add fiadd cmp push rorl ds cmp aam (bad) jmp mov mov jle inc (bad) js pop or lea dec or and jns lods add je inc popw cli jae sub in push dec push or lret jg movsb repnz sub (bad) mov dec jnp inc dec xacquire adc inc xor pop mov jp xchg mov (bad) pop pusha push mov iret jg adc leave and xchg mov xlat repnz mov hlt outsl (bad) sbb jle mov das ja jecxz cmp mov test sub in mov pop leave int fnstenv adc push xchg or lcall popf pushf and test leave mov push and cltd icebp xor xchg mov das fbld test push js in sub xchg dec inc dec xchg (bad) jne loope out ret pop repz lods xor js cmp pop jmp jbe cmp mov dec cmp xor out jp lea enter lods int shrl mov das out pop (bad) and jae in xchg out into add mov add out hlt leave std adc notb sbb dec or sbb cmp and out rclb mov sub mov adc jo into outsb insb jge iret inc in rolb movsb mov cmc sbb or dec sbb aaa xchg cltd dec addr16 pop sbb sub cmp test jle dec (bad) lret (bad) mov test pop jle jp out cmpl jp ss fild dec jp icebp mov lret mov pop stc xor push adc push jp incb and jg fisubr push ss cmp mov dec inc inc inc ja lret lods stos ss and mov push loop fxch pop mov std inc sti loopne add popa push xchg xchg mov hlt jmp mov sbb jbe adc push and jne outsb movsl push fsubs hlt dec scas jg mov rclb inc dec push push sub and jne dec cmp mov pop loop negb cmp jg push fldcw jbe mov stc and or jg (bad) dec inc xlat aaa fldt push idiv add cmpsb push jl dec sbb sub imul pop outsb inc sti jnp inc cmpsb mov aad in fnstsw pop in push pop mov sbb lods fwait mov sbb (bad) sbb and scas add repnz ss adc push sub mov lret adc iret test push mov in out xchg enter lds popf xchg sub pop mov stc sub enter mov ljmp aas call ja leave xchg push aam dec sahf scas xor inc imul mov in test hlt pop xor cltd sbb dec addr16 inc pushf inc test jbe mov sbb sub xchg (bad) stos sbb dec repnz dec ljmp jno sub call mov mov je xchg dec jle lret push js xchg pop jnp fs cmpsl fcoml jg lea jge or test rcrl lods (bad) loope push xchg fcoml lcall scas ud1 push lea and sbb pop xlat mov push fidivr xchg and push mov sub lds pop xchg xchg sub jbe in fwait sub repz cmp ljmp mov and in dec enter out gs adc fldt es jmp arpl ret sti clc xor mov push add leave add mov aam xchg popa ror sub (bad) or sub (bad) lret ret add push loop push cmpsl cmp jge or pop or loope sub dec push movb ret popa push orl (bad) out xor (bad) mov std jge and push adc adc add aam orl cld lods jmp inc pop inc call mov cltd mov push rcrl movsl adc inc loop cltd add out flds fimul (bad) sti push or mov jge aas hlt subl sbb dec or jb jge outsb jmp xchg push (bad) adc repz inc sub inc pushf pop ljmp leave les sub xchg pop (bad) jp xchg (bad) mov out mov jge xor sub pop inc mov mov add int daa and repz inc xor dec aad dec inc mov cmp ds xor mov ficom andl (bad) jns xor xor mov or imul (bad) xor push aam sub jle sub aam loope push mov xchg and xchg movsb jmp jecxz jle and call or jmp (bad) (bad) xchg mov leave cwtl adcb movsl loope pusha xorl mov scas mov test mov jmpw and push mov lods and mov (bad) into jbe push fs jecxz sbb lret sub inc push out (bad) outsb into (bad) dec nop mov xchg jns push push sbb dec in inc or jmp jge mov int3 aad mov pushf add xchg daa jg push pop cli adc cmp xchg repnz or jb in push js sub jecxz repnz xor or cld (bad) push fdivrp imulb iret inc imul pushf mov mov movsl mov push psrlw int3 aam std mov cltd xchg cmpsl or ja jp push push mov lods stos out sahf es pop ljmp lock push xchg fwait rep xchg iret xlat push or fimull xor popf movsb lcall pop (bad) xor dec cld imul lea aaa aas sub stos mov call mov jg sbb dec mov inc mov and jbe xchg out out js pushf push (bad) rorl xchg (bad) nop lahf push ret call rcrb add add sbb (bad) (bad) popa push lea ss lock incb push negb jo pop or inc mov idivb inc movsl adc jl mov or xchg lods xchg je ficomp jl sbb (bad) rcr xor movsl push pop pop xchg adc pop gs lahf int3 mov daa add xchg dec mov (bad) jmp pop loop call lret sbb cmp sub in or mov sub sbb push movb jb cmp xor jo sbb pop and sti cmpsl lcall cs incl loop lods mov pop repz enter movb into lahf int3 or mov mov es out ja xchg iret testl fldl jecxz cmp adc inc sti imul jns xchg sub sub jle jl jne adc push jl sbb add cwtl mov mov movsl das push push cmp dec cmc push bound jmp mov pop fisubr fisttpll ror out jp add sub hlt cmp arpl mov fcompl inc mov jp lea jecxz jl loope sub sub aaa stos leave inc xor add insb mov sarb cli inc mov fidivl jp std xchg shr jmpw dec or dec sub into inc sbb xor lahf xchg adc mov out in mov test ds (bad) jo xchg dec mov adc data16 push jmp push add pop cmpb sbb int3 mov (bad) hlt cmovle sub add push cmp popa nop rolb dec rcrb mov pop add stos lret pop mov sub xchg mov or jno push cmp data16 rclb outsl add or jne popa cld imul movsb aad js ds mov es push or ja mov std daa lods addr16 test cs xor in enter bound sbb or les aaa jnp xor scas jecxz das (bad) aas inc jl inc shrb xchg push push mov mov push xlat or shlb jmp andl aaa jo aas mov (bad) stc mov stos test or into (bad) mov mov xor fsubrl xchg or mov inc sbb ds insl cmp es xchg (bad) dec ja cmpsl jae pop sub movsb or jo push loope xor in cmp insb addr16 jmp jns pop pop clc mov inc sub add cmp sbb (bad) jns nop out fcoms outsb xchg call pushf lcall mov out lds test aaa fnclex orl into mov mov mov inc pushf icebp insb mov mov sbb dec push mov cmp test (bad) mul xchg dec mov lea cmp adc imul mov or (bad) pop aad lock icebp jg mov xor (bad) pop and in addr16 push iret cmpsl out xchg sub movsl mov mov add mov adc mov pop insl ljmp mov dec dec adc sbb das xchg int inc orl xor xchg iret clc sahf cmp cmpsl adc adc xor dec incb add addr16 adc std mov pusha sub add dec push pop push adc dec aam cmpb xor dec mov pop icebp iret sbb shll xchg pop out sub test or xchg cld mov xor cmpsb pop xor das das icebp sbb mov call dec ret pop xchg out jbe sub test les pop jmp incb (bad) adc mov nop pushf and mov jge,pn mov inc mov lahf add scas cwtl jge arpl in jo pop or loope mov sbb jb jbe mulb push push dec inc jno xchg add popf testl dec cmp loope mov outsl inc and dec cmp dec jl jb inc lahf xchg iret dec fs push test rcrb and test or rolb dec ret inc imul fwait inc mov and stos shrl fwait clc sub push pop xchg loope pop mov les sub out jl pop or data16 loopne add and sub xchg mov sbb insl into sub dec add mov test or ret in int cli inc lods ss inc idivb push and sbb (bad) aas mov cld (bad) or fwait jne sbb jge dec dec jo fist ljmp xchg (bad) mov mov (bad) cmp icebp test sub cmp mov sub in pop aam mov cmpsb mov pop out dec iret push test mov lods addr16 (bad) jbe jns cmpsl pusha inc jne cmpl mov gs jle mov push xchg pop or dec in dec add in stc jmp mov push mov xchg or jle jmp and mov out adc dec xor ss pop and push lahf jo out sub lret push push cmp mov outsl add std lock pop mov push or lcall jbe ss cmp push pushf add fldt mov or xor iret jecxz repz aas mov cs or or push sbb dec pop mov sbb pusha fsub aaa test adc mov js test aas inc test xchg add jmp jp sbb int3 pop mov (bad) (bad) dec dec xor jg daa pop rcll addr16 out outsl pop addr16 ficompl push pop in cli andb cltd test lock mov mov in lret add (bad) mov and scas lret fnstcw inc mov mov mov js movsl mov jg js insl cli dec cwtl mov mov jne fs enter dec xchg xor or add std jge inc (bad) sbb imul push das push cmc iret loopne pop ja fs (bad) jbe ja stc in xor xchg mov push xor push cld dec jb push lods imul fsub xor and mov arpl push into sbb mov out mov xchg dec lret pop fisubrl mov push sbb add pusha xrelease add fbld sbb dec lods (bad) in sub in inc or push outsb push and adc cmp idivl xchg cmp (bad) enter and lock mov daa sub or test and fwait lds inc (bad) xor in sub stos sbb pop add cmpsb (bad) aaa lods scas fcompl jle rolb adc std js xchg add inc loop mov inc dec mov js fldenv pop add ficoml test adc mov scas nop sarl fisubl in adc imul leave xor das or cmp dec test add inc or mov subb and fdivrs push and dec lods call xchg adc in (bad) cmpsl je dec adc jnp inc out int lahf adc icebp add or push xchg adc idiv fwait in or daa cmpsb pop nop gs push inc (bad) mov popf sub mov cwtl jge cmc insl lods dec sbb adc aas in push icebp in mov mov pop je out hlt mov jl sahf add push pop push sub jno or jg inc es pop cmp negb (bad) lock add out adc scas jg shlb test pop jecxz pop (bad) pandn jo insb test sti aam pop jns pop mov cltd xor repnz cwtl mov cmpsb and test fwait ret cmp mov nop sbb (bad) mov daa sub cld mov out into lods imul lcall mov push daa gs fmulp mov jge inc push rorb das or push (bad) lods or repnz lretw dec jbe clc mov pop cltd jne lcall out push inc dec adc shl mov push push fbld or sbb pop cltd jge mov int adc xor jns add pop sub cmp test pop decb imul (bad) sub test ss xchg xchg loopne xor or gs sub fnstenv adc pop add cmovno mov sub inc mov push jecxz lcall adc or ret cmp mov (bad) je (bad) mov js (bad) pop shrl dec mov ds inc fwait inc iret mov test mov (bad) data16 lock sbb inc xchg jns stos and push adc arpl or (bad) dec jge aaa icebp loopne lcall into mov mov jg cmpsl mov pop cmpb ret out std xchg push and mov add into add and stos nop ljmp mov xor cvtps2pi jns mov add fistl push test int stos mov fs out push adc js and xchg mov jg stos inc mov mov fadds stc aas stos ret les mov repz insb nop sbb push mov xlat push scas push data16 mov mov outsl pop inc insl fild push push es out push ret les call repz mov push (bad) cld push inc jno inc cld clc pop outsl cld in mov in xchg jl ja jmp dec gs cmp (bad) cmp jmp mov gs jl mov fs scas cmpsl leave (bad) hlt fistpll arpl fstl xchg mov or pop push test cltd cs pop push mov adc mov jge jo test sub (bad) ja mov divl xchg inc gs xor push inc sub out mov shrb pop push push addb xorb fdivrs inc es subb call movsb push popl mov or pop out xchg popa outsl inc mov and pop sbb push stc pop outsl insl adc and repnz fwait add jbe sub ret test rolb pop push or fistpll or das in jg ljmp sahf outsb mov (bad) cmpsb push jns iret aaa sub mov insb xlat push xor xchg out iret out mov and pop xlat daa push jno (bad) sbb int repz sbb mov fwait mov inc xchg jmp (bad) mov add stos movsb fbstp mov mov lds sub orl inc mov jnp xchg fmull cmp in cmp inc ss push sbb xor mov repz jmp data16 sbb (bad) aaa jnp subl xchg push insl imul fwait jle or loop pop xchg imul jb fwait mov jp lret push repz inc adc repnz xchg (bad) push dec adc pop sub insl and popa or mov dec and leave or jnp loope mov rol ret out xor push ror adc or rorl jnp pop jo and fs inc mov inc push sub xchg (bad) lods jbe pop push pop inc insb scas scas cmc subl test data16 pop cmp jne ds cwtl adc add xchg das idiv cwtl cmp sbb mov imul test mov dec dec das xchg cmp (bad) xchg mov inc ret mov pop sub mov jg mov les mov stc movsb xchg dec mov nop jle imul cmp repnz aas into les pop les dec pop (bad) add sub outsb and les cmp in pop bound mov cmp sub sahf cmpsw or insb cmpsl add insl cmpsl js imul sahf push cmpsl push sahf jmp cmpsl pop mov dec pop (bad) out ret test sbb out movsb int inc mov fstps jbe cmpl sub mov sub jno pop lods js xor shll adc sti stos jo push notb lea (bad) add sti les iret jb xchg sti fs in cs pop inc xchg gs test push cmc scas mov das repnz rorl cmpsb (bad) scas dec push ss jge add movsb mov stos mov lods sub mov mov mov daa pop insb arpl shrb ret ja sti lea mov in push sub pop jge lret inc movsl (bad) xchg jo aas icebp out sbb shrl int cmp sub inc jmp mov mov xchg sub pop add das mov lds test xor ljmp xchg es jmp push popf and outsb scas jae sbb dec xchg inc fwait shlb cmpsb inc ss leave pop fnstcw inc cmp cmc lret jp int addr16 add or scas or xchg mov push inc femms push xchg stos int or ret add lret incl scas sbb (bad) ds cmp rcrl jae inc xor dec and addr16 and ljmp in push mov subl cmc scas adc std imul popa repz (bad) dec jmp xchg dec ret fwait stos mov lods in call orl dec jno add divb mov repnz fcompl or hlt popf bound aaa sub mull sub adc pop fnstcw arpl push or push ret and pop mov xchg js aas xchg and je mov not jecxz lret dec mov cltd jp or pop dec push add ss leave pop mov test xor popa out aaa outsb mov mov xor mov dec call mov insl xchg xor stc pop imul in out cmp ds xchg pop dec fadds add xchg fnstenv inc sti daa out mov in dec in xchg and sbb pusha xor xchg aaa icebp out jne movsl mov enter sub aas fwait jne pop insb add mov adc mov (bad) xchg test adc (bad) mov adc enter imul outsb js xor ljmp fiadd sub add cmpsl loop ja sbb scas in mov and mov int3 sbb jns jecxz xchg xchg sbb loop sbb hlt add arpl jmp inc pop movsl popa jecxz std imul ljmp (bad) movl xor jle call orl popa mov stc fwait lods or xchg xor dec xchg inc cltd sub sbb sbb imul out in loop subl int leave out iret insl push add int sub mov dec sbb or sbb in mov add fdivr lret fwait sahf jecxz mov sti mov stc mov inc adc xchg cmp pop push ret pop jecxz mov out (bad) cwtl sti movsl lahf lods pop std inc and clc inc into aaa loop jns out sub sbb std fucomi shll add mov pop je mov and rcrb pop inc not sub inc push hlt jecxz fdivl add rorb xor mov mov test and xchg notb lret (bad) in mov push ljmp lcall lret xchg xchg inc push pushf inc fmull insl es adc inc es es pop push or jns fnstenv push mov sub test mov sub inc sahf sti mov pop jge ljmp cmc dec lcall lret adc cltd pop and rcr adc push sbb add add cmc lcall or and ficoml (bad) std xor push adc dec lret mov jecxz pop jge popa std xchg enter xchg xlat inc sub rolb fimull lahf and je aaa sub out ffree adc push lahf dec cwtl int3 movsb dec push cld shll jmp xor cli jmp popa movsl dec lea repnz xchg cwtl out mov xor jg rorb jo test sbb loope (bad) fstps cmc (bad) xchg mov fs xlat (bad) mov or mov push iret adc cwtl push nop push out pop mov test xchg adc fbstp int (bad) (bad) aaa bound pop and jle dec and pop xchg lcall rcrl rcrb data16 es or outsb add pop inc (bad) in cld ss daa sub jmp test test enter pop stos orl pop mov pop jp aam addr16 xchg push jb adc in (bad) sub jnp mov cld pop ds adc or push dec into inc cld cltd sti pop pop inc jecxz xchg js push jnp mov rcrl mov xchg xor cltd dec outsb adc cmp stos scas xchg xor adc rolb cltd dec pop es sub push sbb lods xchg aas les xchg lock lds dec jmp add sbb mov (bad) inc std fnstenv xor jg adc test mov add jmp mov fsubs push je cmp es sub adc mov adc cmp mov mov call push push sti inc sub sub pop lods cmp cltd lahf test (bad) mov jnp stc inc in cli add jl aas or mov lds cmc jecxz enter iret push and call into cmp out pop inc ljmp stc or adc int push dec out outsl js out inc inc nop sub dec mov cmp fcmovbe stc (bad) shrb repnz gs mov neg and xchg pop sahf cs fdivl sub dec mov jb pop push sbb push xchg sub xchg lods addr16 push sub test movsb or pop out mov mov sbb mov pushf sahf or mov add inc aaa dec fcomps std inc pop inc jg push dec dec dec sub xlat xor jg idivl dec pop flds mov sub sbb ja stc fmuls popf popa aaa push mov inc push or imul jmp and mov js adc xchg lea sahf lods repz ret nop xchg sub mov mov mov scas inc (bad) mov inc outsb rorl lahf bound out ljmp add xchg and ret cld test test xchg rcll lea cli xchg test pop jecxz mov mov xchg loop jge xor and popw (bad) fwait inc adc dec mov jmp xchg das stc fwait scas mov inc out pop inc and lods mov and test fnop and mov imul and mov mov popf sbb fnstcw call sbb es repz mov test mov mov xchg ja leave mov sahf cltd test pop mov pushf test mov dec sub jbe inc push jge sub ret cli mov jg mov nop jl out and mov inc push cli ja test in cmp cwtl inc shr pusha lahf push push mov loop mov mov pop stc lahf add rcrl enter cmc rcll out inc push xchg adc fisubrl ds sahf scas dec iret push cwtl pop pop stos cmpsl leave ljmp pop out scas xor xchg sub ljmp cmp pop loopne popf sub gs stos adcl cmpsb lahf jmp push pop and xlat mov fldenv push xor lret pop dec addl dec aad cmp ret sahf sub outsb pop outsb or lahf pusha lret ds and mov gs adc dec ret enter sahf aam scas stos push mov mov lods inc clc mov sahf adc push adc rcrl (bad) jae sub loope xor scas sub into mov push pop push inc mov iret sahf mov out aas imul es dec test push jecxz dec hlt jmp into movsl sbb pop inc mov divl jg dec scas stc lds pusha fistpl nop mov xchg push push add cmc add push sub push mov jo sbb mov les mov lahf mov stos xchg call jne mov test mov nop mov (bad) mov repz scas pop dec or sbb xchg mov add mov mov dec push jne leave stos popf jecxz fsts roll xchg push lahf leave cmp add fstpl ljmp push scas push add addr16 aad repnz (bad) adc repz fadds inc sti dec in icebp fcoml sbb xor inc pop inc test pop and add scas sti adc mov inc xchg cmpsb and lods out stc (bad) adc and push imul xor ret mov stc adc sbb std pop (bad) adc jle data16 sahf cld call lock call mov out dec out sbb (bad) dec icebp xchg mov cmc xchg repz jno fcos cmp pop push sar pop adc and add cli scas fnsave pop movsl jecxz mov pop inc loop mov call negl or or fwait add mov cmp sahf cmpsb divl mov je data16 call mov pop outsb pop mov pop lret lods push adc sqrtps pop xchg or dec dec out jle popa push push sbb add lds push cmpsl add lods (bad) push lds jp add loopne lods cli or popf and cli test inc mov (bad) adc stos jp out jno push mov cmc and and fisubr jl adc rol sbb pop or xor jecxz sub in sub dec fldl add xchg push mov push sbb stc push push pop jno insl mov sti dec sub jmp cmpsb jmp jmp ljmp mov push pop aad add xchg jae push out lar pop inc fnop jno add scas mov bound pop jp loope ja scas mov out into xor loopne cmc out mov push fstps xchg dec dec outsl or cmpsl aaa mov ror jmp fcomp lret test rcr test add jbe and jge or pushf (bad) mov int3 xchg xchg sahf sbb std inc imul mov jb loope jecxz aas jne push std popa les push insl test testl iret mov adc sbb mov scas hlt stos clc fmull out lea repz or cmp pop fidivr shr loop (bad) lahf test dec arpl lds sbb stos imull jnp jns or incb add dec mov pusha or imul dec xchg pop inc lret inc imul adc mov add push dec fldl ds into add push (bad) hlt and cld loope fs pushf lahf push sub fs pop add or mov jb inc ja push pop cwtl add daa cmp out (bad) in mov and pop in mov lods popa repz imul int jo insl lahf jb mov imul jmp pop outsl sti sub fs mov mov inc mov (bad) sub inc out lret pop fldl jecxz popf dec jg imul or xchg xchg enter inc and out jb sarl xlat mov int mov and inc arpl in imul jnp (bad) mov out fdivl xor and mov sbb pop mov jne jo fmull add je ficomp ss stos mov flds mov imul jmp cld mov cmp adc ret push bound jl pop js jl out psubusb lret push push (bad) inc fbld xchg fidivr jnp jmpw pushf ljmp adc push or jns aas push sub adc in cmp scas mov (bad) in into (bad) sbb xor pop jecxz and js,pn mov ret pop inc imul lods mov xor in push mov stos js pop lret scas arpl stos stc pop test gs cmpsl rol inc in dec rep cmc pop dec rcrb jge hlt leave rorl xchg ljmp fstpl lds rorb pop mov dec ljmp test sub addr16 jne jbe mov push loope sbb jmp push mov jbe or mov push (bad) std xchg push sbb and sub enter test pop and les xchg decb int3 std mov mov sub push pop jno mov and and inc sub scas push adc gs mov aad sub push or lods repnz push sub sub lcall cmp nop jo xor lods aad mov jnp repz xor cli xor test inc mov int3 or aam push imul sub or mov mov push pop mov (bad) das pop jns stc cwtl pushl (bad) mov mov cmpsb xchg push mov cmp push mov dec add pop enter loop bound push insl lret sar incb push outsb movsl or arpl in xor xor aas mov in and add cmpsb test sub pop mov lea fstl jmp roll pop dec xchg inc dec mov aas sti add enter test ja dec insl lds daa sub cmc inc lock bsr jge mov cld sub fsts pop insl cwtl inc or (bad) (bad) cmc xor xchg add imul jo,pt (bad) rorb movsb dec mov jg sbb add add mov xchg into mov add adc jg push ret sbbb scas xchg shrl daa sbb faddp mov leave jb (bad) popf fmulp movsl xor popa fisttp push int popa sub xlat insb sub (bad) in addb in mov adc gs pop addr16 lret in jmp repnz lea out mov aaa push fwait fwait leave popl out imul js hlt aad icebp leave sub jno arpl lea sbb in std mov fsubs (bad) adc dec sbb enter sbb ret cmp stos dec fnstcw inc pop and xchg jge out lods mov adc call test movsb cmp bound xchg jno cs inc mov adc cmp seta mov or jns and cmp (bad) sub fldcw loopnew js loopne xchg hlt call in pushf push jno pop test adc sub hlt js (bad) jbe adc and insl lret out psubq xchg mov mov out jmp add sub aas push xchg push out xor adc jl lahf popa das pop stc add jmp push fwait mov mov mov jecxz and jmp push cmc lret mov sbb popa jno fsubl hlt in mov in add std out int push rclb pop jnp sarb int mov lods lods inc xor mov pop mov mov mov inc mov mov into sub add mov outsl xor das pop pop repz inc sahf jb jb (bad) xor clc or in gs or das push mov dec std adc mov push lret movl arpl cmp (bad) lock test inc xchg ss loope aaa mov jle xor bound xor pop out cmp inc xchg aad insl xor mov call sti jne pop cmpsl mov dec aas data16 mov jecxz mov dec pop or fistpl lahf mov inc imul aas (bad) faddl aad mov out mov jp push adc scas mov or xchg hlt fwait sub dec mulb jmp xchg dec push sbb stos sahf out jl fldpi pushf add mov gs pop mov pop out ljmp sub pop jp jl and dec lahf jmp pushf div xchg push push je jne sub (bad) (bad) ljmp and mov idiv xchg mov pop sub pop addb mov pop stos and rorb mov ds jne rorb mov jb jle decb jmp fwait das sub orl mov xor add mov sarb cmp dec std aam aam dec sub aas nop inc inc fs mov scas aad xor cltd xor popf xchg cmp or xchg ds cmp push outsl cmp sbb ljmp sub or push add sbb mov or repz call pop in std stc jne out insl cmp (bad) dec inc sbb cmp outsl xchg xchg xchg je sub aas cmp leave enter fstpt mov out xor jmp loope movsb mov mov push cmp cmp std test insl or lods mov mull inc loop xchg pop rcr inc xchg pushf xchg vandnps popf (bad) sub xchg repz cmp loopne dec iret inc and ret out in mov insl icebp pop scas mov les in mov add mov dec or mov push dec lcall bswap fs call pop pushf jl aas jle mov (bad) xor sub mov xchg xchg fsubl cltd add xchg and in jmp mov inc adcl in dec inc imul aaa mov mov fwait mov in push fsts pop sbb mov inc loope aaa xchg je adc push jmp sub xor lea rorb cmc push mov mov int ss cltd push test sahf add in inc int add lcall mov leave stos cmpsb rorb fcompl stc sub mov js sbb jle sbb cs inc add stos mov add rcrb icebp mov inc mov push data16 leave jne xor push test or jp mov popf adc sbb push push and inc and aad stos fmulp xor add addr16 arpl fwait lods dec inc ret mov mov sbb add dec and (bad) pop fild addl adc ret sbb dec mov loope ljmp inc test scas pop daa sbbl ds mov std dec dec cmpsl add pop lods cmp add cmp lahf ss adc mov dec pushf test xchg add push push test and dec add xchg mov outsl testl out sub inc outsb movsl sarb sub mov xor mov jns (bad) sbb xchg push lods aam js jg test ja xor push pushf stos leave push cvtdq2ps (bad) aaa icebp in jae or mov and test (bad) std cmp cmc mov lock dec jmp mov and ds das lret movsl add std insl pop mov setno inc xchg lock push aam cmp push push adc out xchg mov test int ret mov cmp pusha or push xchg xchg dec xchg test xchg xchg lds and xor rcll or sub dec js cmp mov pop push add cmovle pop or clc test rorl mov sub into mov add xor sbb loopne outsl (bad) xchg cmpsb cli out dec insb sbb test jmp mov fcom xor (bad) or pop pop idivb ret jp sub inc and adc jnp push sahf xor test (bad) idivl and jl leave push mov jecxz ror pop mov mov (bad) jno jge out cltd push mov pop add pop cwtl int lahf xlat repz fs pop xchg push mov mov insl xchg out add sub cmp in (bad) mov sub cmpsb out test in mov inc gs xlat pop sbb and cwtl pop sub lods sbb fstpt incb test popa test pop cmpsb hlt in push into lret mov mov sub mov data16 testl push or pop mov loop shll lock inc sbb movsl jmp lods insl add aad dec cwtl or fwait xchg stos jno fidivrl fsts sub pop loope popa icebp pop jmp mul cmp js push lea jge dec test lods push pushf addr16 cmp adc in (bad) fisub pop lods jnp stos and clc sub or std lcall mov hlt dec sub stos cmp icebp fisubl subb xor test fcmovne pop popf aaa dec popa fs pop push push fwait mov leave nop pop clc in out jno out mov cmpsl lret jg lret sti dec push in xchg xlat push cmp adcl add scas add push adc inc movsl jae sahf inc add icebp (bad) cmp sti mov push pop sub outsl add push sbb sub xorl mov push xlat add lods dec fisubrl movlps (bad) into gs mov add add mov jecxz stos push callw mov imull scas pop data16 (bad) icebp xchg sub addb fwait push or pop aad aad scas lahf lods lahf fcomi pop sbb into jb fsub fld push xor inc outsb jle fnclex dec aad in mov or shrb cmp push and in das or imul notb fisttp test adc jb js jno and sub fs jl in mov ficompl ror inc in inc jno out cli insb jg ss out aaa add shrl jo lods shlb pop mov gs (bad) jnp jmp outsb fsubp sub jmp xor mov adc xor sbb mov xacquire movsb dec xchg movsl jns loope lock icebp adcl jl fnop push aaa fcmovnbe arpl xchg lds outsb enter sbb push xor xor loope xchg out pop sub loop lods fwait dec pushf and mov test inc das not les inc test mov fs das or mov cmp xor idiv mov pusha xor dec je xchg popa dec mov idivb add or cltd sbb dec mov int and xchg jbe shll daa dec jg xchg lock (bad) iret pop mov jge push jo add xor inc lods das add lds pop in mov imulb push out shll push enter jnp push mov dec add (bad) mov out repnz popa ret (bad) push aam ficoml repnz movb sub adc ljmp mov mov push daa jecxz xor sub mov lret in or inc dec (bad) out push jo sbb fstpl mov mov or in xchg jno ret push jns mov xchg mov xchg push mov add lcall imul push ret fistpll int3 lret test mov (bad) add sbb dec (bad) iret cwtl sbb jl insl dec stc iret push test xchg sbb lret aas cld sub pop enter subl mov xchg xor iret xchg subb ret mov xchg xchg xchg outsb sub (bad) and cltd out dec sbb movsb (bad) push fs xor out ror sbb repnz fstl pop cli daa push js daa fsubl dec loopne adc repz call xchg or fild jb cwtl adc xor data16 negl (bad) js dec cmpsb js mov data16 mov dec insb in sarb shrb movsb aad jecxz out dec pushf sbb in jle push xor insl clc jg sbb lds pop add dec sbb dec popl sahf sti addr16 push jg mov int sub shl bound sub lea jp cmp cmpsb ds cmp out jns stos enter fist add icebp mov push ret enter mov fmull cmp and mov das push cld push mov les rcrl enter sub pop imul jo (bad) mov aaa enter cltd stos push repz mov bound mov jg sti pop int pop aas stos nop push inc arpl push data16 daa ljmp or mov inc add js push xchg xchg add popf cmp mov outsl outsb outsb pop mov mov faddl push dec push shll (bad) stc mov jns test jp and dec std sub xor (bad) cmp sbb push test dec movsl fisttp fldcw xor (bad) xor out ret stos dec loope inc cmpsb call adc dec icebp jecxz (bad) sti jmp fwait sub in lock sar aam xor sbb push cltd arpl gs mov push or hlt cld sbb fmull clc sub xor add xchg in sar ret xlat imul jge xchg out pop adc gs ret sbb dec in addb imul dec es int es jge dec ja xchg nop movsb adc int mov (bad) lahf inc lret sub cmpsl mov cmpsl jge inc andl clc xchg adc jge mov push pop std adc jge mov xchg pop push sub scas xchg sbb xor jns addr16 aad cwtl and push cld jge das push inc stc or rorl pop mov jbe cmp pushf or (bad) pop adc xchg test jnp or pop loop sbb cli add or xchg (bad) loopne faddp (bad) (bad) xor mov sub and loope outsl push mov gs mull aas cltd sti sub fs push push jp pmovmskb lds ja or (bad) fisttpll adc aam cmp xchg paddq pusha jp loop icebp sub push or inc xchg cmpsb das sahf mov xchg and int mov dec dec addb cmp ficomp lcall and mov out inc push in lea pop adc mov insl xor test dec mov xchg sahf jmp mov sub jl mov and push mov in jno fidivl fildll pop fldenv dec push std and push in aaa mov loopne jp int3 mov lret xchg data16 push and lret imul aaa js fistpll cmp mov adc lods xchg mov ret jo in shr adc xchg mov bound imul jo movsl push pop sub (bad) sub test ds sub cmpb or das sub xchg mov (bad) out fcompp mov adc fistpll push sub fstpl sbb sub fs pop adc (bad) sub shr jg dec inc or push pop add jle add test dec loop lods and xor dec xchg dec pushf pop mov dec (bad) push jns mov pop dec pushf js repz std pmaxsw test data16 popa pop jg (bad) fistpll (bad) push inc inc test mov add sbb jns sub (bad) lret dec mov dec push cmp pushf mov pusha test fsubs cwtl pop cmp int aam std jmp in jnp sbb fnop je out sub fbld insb sub incb out xchg pop add mov fwait and pop fwait out (bad) int3 sarb repnz iret scas add aas sahf mov xor lahf iret cld (bad) dec push popa dec hlt lcall leave jae jnp bound in cmpsl sbb rclb stc xchg or mov std dec (bad) push popf pop in cmpsl stc in sub jb or pop rcll jno adc jp out push inc cwtl push cmp sbb jl incb jle push mov sub pusha bound xlat mov in pop push and iret inc ja (bad) pop mov add aaa sub push ds xor cmpl mov (bad) pop mov mov sub movsb dec pop aad sbb sbb xchg fs mov inc test xor inc mov add mov adc test adc call mov aad xor out loop ljmp lods (bad) outsl mov push (bad) js lods and loope push push std inc dec fcom (bad) cmp mov lret les pop stc jne mov (bad) ficomp inc cmp jle mov mov sti int jo int out nop arpl pop add sti insb mov inc gs bound pop movsb and adc loop loopne pop fsubr inc cmp mov sbb (bad) jmp aad cmpl jmp scas xchg or cld stos push add enter test pop sub aad outsl sarb orl enter push sub in ss outsb call and div sub repnz dec cltd repnz mov dec mov xchg xlat data16 fadd mov lcall xlat loopne frstor (bad) dec adc ficompl cld addl sub dec jmp lret mov and outsb test sbbl mov imul and pusha dec or push inc jp std outsb push sbb repnz rclb int3 mov out out and xchg sahf in les add and jns cmp lods jmp xchg sbb lcall mov leave push imulb imul push pop xor ds leave pop mov push aad loopne (bad) mov or sahf imul ljmp pop aam mov push cmp lret fcmovne pop mov inc inc mov pop gs or dec arpl xchg lahf iret adc stos std shlb ret mov pop popf mov sub rorb adc popf dec mov mov cwtl pusha jmp xchg xchg lcall (bad) imul sub xchg mov out or in dec sahf mov mov (bad) leave fdivl sub es xor ds inc fwait lea dec lret dec xchg lds and jmp lock aas aaa push xor fdivs addr16 cs mov mov sub xchg (bad) lods add rolb mov xchg adc jmp pop adc enter push sbb xor scas add ret lahf xchg cwtl and das jmp adc mov loopne outsl mov insb and push enter xchg outsb xlat ficom sbb cmpb scas (bad) xor je int3 inc sub add cmp mov in into lods add fsubp popf mov pop cmp mov mov (bad) mov fsts (bad) (bad) repnz sbb rclb jmp mov mov jns hlt or test (bad) in inc icebp rcpps addr16 push sub ljmp les adc loop sti (bad) mov lahf inc add mov mov dec cmp outsb add mov or mov xchg popf sub (bad) stc inc push popf add idivb mov adc jl push and mov jae cmp push bound push and mov adc lret jbe mov icebp fstl xchg mov jnp pop mov jae movsb and mov mov cmp pushf xor dec push sub jp mov mov (bad) lds add push dec ret bnd lods das std xchg orb cmc and stc lock in in add pop xchg cmp sub pop xor mov add pop js mov fsubl mov out sbb out pop jne loopne jmp out cmp jge adc mov sbb mov test or shll bound out mov lock cmp out imul push fs mov xor aad sbb push test or cltd outsb and test add push dec push nop arpl and jns shrl scas notl in push sub mov sbb (bad) or shrb mov and adc shlb addr16 push fwait out ds pop test mov out adc (bad) push add fwait gs int3 mov or fistpll mov push mov cmp push pop lret jmp adc lret lock adc mov andl pop xlat mov mov nop cmp inc std les outsl call in adc pop jmp dec adc jge or insb pop test inc (bad) hlt or sub push imul add out nop dec fsubrl push lods cmp jnp mov outsl jle popf jmp outsb adc or push imul cmp rcrl outsb xchg fldenv iret dec mov std mov shlb lahf and pop mov mov lods ficom lcall xchg fwait iret psraw mov cmpsb test jmp test mov loope pop cmpsl cld lods adc dec lcall push jecxz,pt bound insl rorl or out leave cltd jle adc out jle lock sbb push or repnz test out lods pop inc (bad) aad cld data16 jp ja icebp xor enter push jo test enter sbb mov popaw jnp sarb repz lea jle iret (bad) jp out imull cmpsl add jle inc add lds sbb jl repz int cltd mov xor and jo inc out jge sbb iret loopne lahf mov inc aaa inc mov and mov xchg mov orl and dec adc sbbl pop fs das outsb push inc ljmp jnp pop (bad) aam dec lret dec or push mov mov dec xchg or (bad) out adc fnstcw add aaa add in dec fwait sub repz lea or push pop mov cmp dec jmp pop gs mov lret pop and cltd test sbb in and cmp lret xchg cwtl cmp hlt and mov ja out out inc outsl pop jns or and pop inc loope mov sub and into gs cs pop mov push fadds lret stos cwtl fisttpll xor pop pop arpl out je insb mov jo clc int3 orl push push jmp or hlt ja ret mov sub cwtl xchg enter rcrl sub (bad) in mov mov sub jbe pusha mov xchg lock sub cli push push jmp inc pushf or ljmp dec jmp decl iret aam cmc lret sbb cmpb lahf xor xor push repz incb xchg jns in ret mov ja sar outsl loope (bad) std cmp pop xor push cwtl daa jecxz xchg sub popf sbb dec dec jmp dec fnstcw xrelease cmc pop or xchg (bad) jmp idivl hlt cmp sbb pop out push jmp sbbb ja inc sbb push pop mov pop jge adc push sbb push dec jmp scas movsl dec push push xor test andl mov notb push push and lret push (bad) mov adc push add lock pop in clc pop shrl mov mov addr16 movsl lock mov imul out lods push fs test sub pop xchg aas jns and js add xlat cld icebp sbb adc jo xor iret add mov adc ja (bad) xchg scas out aad dec dec sahf push mov sub icebp sub or xorl cmp mov loop inc jmp (bad) addr16 sub js jmp and dec fnstcw ljmp jnp dec int scas out mov adc fwait xchg dec js push (bad) cmp or inc mov jnp rcrb mov jb jp sub adc mov pop add movsl pop xchg pop jge enter cltd mov and lcall push dec cltd jecxz lock mov xchg loop sbb shr inc cltd xchg loope push aam sbb rcll and inc out sub and sbb xor stos fs dec mov and cmp repnz (bad) iret jg (bad) cli jl sbb sub ficomp push inc ss mov sbb mov (bad) and repz out out and jo sbb lds jno xor ret or dec sbbl jns xor cli sti sub push iret hlt ds push sbb sub mov leave pop lods pop hlt push scas xchg lea leave mov dec aaa outsl out mov (bad) add test jae inc adc inc scas movsl sub mov mov sbb push inc mov xchg cmp xor xor cmp in test and popf dec add xor jnp pop xchg fisttpl dec das mov add ljmp cmpsl mov cmp call xchg inc cmpsl gs and xor mov push pop in fildl sub imul and jg es jbe out out jnp sub jmp aas push rclb push mov jb sub cmp dec fsubr pop add lahf stos cmp push ss pop lods dec cli dec jbe icebp jp push cld sbb pop (bad) orl cmp out cltd insl inc out je lret xor movsb ss sbb lods fwait add jge cmp (bad) into cmp mov mov lock nop idivb sbb mov mov jge idivb push adc int3 loop sarb xor inc sbb or mov jg or push adc xor jmp inc stos or sub dec outsb lods pushf scas lds pop stos imul and in pop add add sub sub push inc and movsb cli (bad) xlat mov sub cmp ret cld outsb sbb out in in pop sub dec lret jno out int3 sar pop dec daa mov int pop adc inc ja add in cmc lahf mov loopne test sbb or hlt and sbb sub mov shrl nop xor int3 movsl and in outsl pop rolb jae clc sub lock aam xchg sub lock clc adc outsb push cltd decl jne rol (bad) sub mov cmp iret push xchg mov inc and ret mov ds mov mov pop call sub mov xchg sarl cli pop (bad) sub jle addr16 in iret out push stc add dec cmp roll sbb repnz jecxz popf es int inc mov cmp cwtl pop in testb sub out jmp scas arpl arpl repnz pop jg jnp stos arpl fldcw jl xchg ss test into loope lahf pop test xor push mov addr16 mov cmp add jg and pop pop in out stc (bad) out into pushf icebp jecxz call fstl mov aad clc arpl and xchg or mov or ret push sub (bad) repnz les xchg (bad) jmp jge cs (bad) mov or int pop adc mov aas add cmp xchg in jmp out imul (bad) out les mov and jl mov int and dec push add pop inc scas push int in imulb lods daa hlt pop lock imul je sbb add push inc dec int orl pusha mov (bad) movsb insb pop push repz lods inc pop pop sti xchg mov add jnp jno scas jp loopne sub jecxz imul inc mov push push test cmp cmp pop inc add push jno pop iret dec push and adc jecxz xchg sbb jg xor or mov adc in xor or push cmp and cmp push les das jge or popa mov sub ja jo test and dec mov jmp add dec xchg lea ds ss shl lcall hlt adc jbe dec nop insl scas and sbb and leave jecxz das dec pop push sbb jnp mov xchg test outsb adc sarl dec jne xchg iret sub mov sarl push jl pop sbb mov stos add dec fisub and ljmp sub sub mov mov movsl ss nop sub jg push (bad) sub jl sub inc lret xchg jnp je decb out ljmp add push aas notb lret (bad) or out (bad) and leave adc out vdivpd stos xchg (bad) xor faddl sub mov push (bad) mov mov loop aas into in push scas lcall push sub lea mov jno or sub aad and pop adc sub mov hlt jp mov jg pop jg ja xchg and test cli push add cmp repnz loop ja loope dec sub ja or std cwtl repnz xchg pop xchg mov xlat in daa mov fbstp push pusha cmp aad rol pop popa sub pop out (bad) imul in pop imul outsl inc ds pop xor pop push jle jp jge je (bad) mov testb add sbb sub cmp fwait jne hlt into emms std cmp stos xor call fimull test mov cld stos rcll mov cmpsl ret sub mov jnp dec mov mov dec aaa or imul mov cmpsb outsl add vmovsd or pop rcr nop (bad) scas loope xorb cmpb push mov sub dec adc out dec cmc aas adc jb xchg in sub sub mov outsl ret mov in dec mov loope fsubrp scas pop stos or sbb outsl pop jp test inc sbb ror mov jmp cltd sub imul cmp push push xor test enter mov add add in mov (bad) fsubrs enter xor sbb xlat mov lods jmp sbb mov jmp adc mov sbb push inc or pop std fcomp lds sbb ret ss push push push cmp jno sbb sub and inc (bad) fs adc mov xchg (bad) shrb push out das les fwait cwtl push cmp mov scas xor cmp push adc or jge fsubrl int3 repnz cmpsb xchg mov dec push dec mov sbb jp lods cmp push and hlt cmp jnp pop xchg and into cmpsl inc outsb mov xor data16 pop stos lods das mov mov movsb mov pop push sub call or js icebp ficoml int3 or add fdivrl adc jecxz ds jbe cmp lcall outsb add xor daa mov lret cltd scas push push sbb pop lock push (bad) (bad) cli lret jb stc les test fildl cmp push jmp (bad) push adc fs fcoms imul dec mov pop popf mov stos add (bad) aam pop cmpsl lods clc (bad) cli add add add jo dec je adc std jnp xchg inc or mov repnz out jne jge sbb je test fnstenv pusha outsb jge les fs pop out in lea cmpsb movsb sbb mov pop mov fcomp jmp out pop loop sbb mov (bad) pop mov cmp add jnp notb push icebp pop xchg out sub push addr16 jo sbb mov sbb lret mov les sahf jp sbb scas jno insl xchg lea push sub adc jns xchg icebp sub sub ds scas movsl cmp pop pop popa stos mov lret xchg xor and fmul lods mov lret dec decb pop lods lret in (bad) pop mov es lds dec and xchg push test gs sbb push pop inc pushl (bad) (bad) dec lods js cmp insb xchg mov xchg cmp mov test (bad) push in lock cltd push mov mov scas pop repz push (bad) lret fmulp inc and popa cli mov add scas xchg je js mov jb mov into idiv ljmp imulb sbb out cmpsl sub jmp cmp ja add orl xchg mov sahf hlt mov push lods cwtl cs stc data16 je paddd mov shrb (bad) iret out mov mov jp stos cld fimull imul xchg cmp int3 cmp iret jle cmp sub cs lret mov pop inc pop sbb adc or gs pop imul adc add movsl insl iret repz jle pop into ljmp jb adc sbb lock (bad) dec lock mov xchg sub mov jp in jcxz and (bad) jle mov test cwtl push (bad) or pop adc out ss cmp inc (bad) sub inc lcall mov lcall scas das rorb mov lods daa aaa lcall xor sbb push add imul jge push jg sbb adc mov jecxz adcl mov int dec pop sti lea int mov add sub adc jg int (bad) out inc into mov sub icebp repz fisubr es idiv jp xchg popf sub fisttpll cmp imul push pop gs mov je popf mov mov mov iret vcmpps gs (bad) cs push and out add cli push rclb push pop fimull add sbb cld lods xchg mov lea lods enter jmp std jle (bad) sti dec jo mov fs mov popl xrstor lods inc xchg fistl push inc sub (bad) add in jl insb xor cltd (bad) cli jno dec into xor push in test sti insl push or adc cmc dec sbb jmp (bad) fsubl xchg inc adc mov je gs cmp sub sub div xlat push add pop daa sub vsubss or mov and push (bad) (bad) sbb push inc inc fmull fs jae or psrad aaa mov dec mov fistl push stos insl adc jb pop jbe inc cs mov xchg inc xchg cmp out sub lcall inc add cmp dec (bad) inc setle mov sbb sub xchg push std mov mov sti mov shrb divl pop add into pop add not sbb or (bad) movsb pop mov xchg lea cli pop cmp dec mov xlat outsl fs sub sbb cmp jb xor cmp ds inc mov mov pop dec cmp and lock daa rorl pop xor or les lods movsl and cld pop dec pop test pusha loopne call fs xchg mov bound mov shl inc pop lds xchg add inc jb push stos aad ja fsubp shrl movsb inc loope sahf out daa mov (bad) xor push xor xchg pop pushf lods mov push dec in ss aas adc xor inc push and mov in cwtl imul or cmp fsubr loop in mov jb movsl mov (bad) outsb push ss mov mov insl pop mov xchg cmp imul xchg stos into sbb dec out mov sbb sbb sub leave xor arpl sbb shrb shrl sbb out out mov insb sbb imul inc dec aas pop mov cwtl sbb repnz out enter pusha sub cmp mov xchg mov push popf bnd (bad) xor pusha mov in xchg adc xchg loope in or push aad inc inc cwtl ljmp cmp negl pop push add mov pop mov push jnp lret in sbb aad arpl stos sub insb out or out or mov sub sub int dec ja dec jnp add adc popa xlat mov inc mov add jnp pop dec pushf outsl or std add and mov push xchg pop shrb cmp imul cmp das or push idivb aas (bad) pop xor shll add popf add (bad) popf aam arpl lahf mov jo imul add scas or arpl hlt in aaa sub jnp inc imul push sbb adc movsb pop scas cmp (bad) fnsetpm(287 mov xor jmp xor xchg mov sub imul ljmp pop push clc stos pusha (bad) das out iret js mov lods rclb insb das movsl sbb lock mov jle mov (bad) mov outsb fldl aas mov les or xchg popw jae cmp or test roll add cmp test push xchg mov aas shrb xchg imul push add clc dec add pop lds ljmp negb addr16 arpl jg mov repz mov mov mov push mov out stc push clc xor push (bad) hlt lret pop ret icebp mov dec jbe push mov nop cltd (bad) pop jns push pop mov push sahf pop add rorb sub shll or pop ret (bad) jns insb adc sbb mov xor cmp divb mov xor lret int3 sub imul jge outsl mov mov sub add pop add and or in mov pop pop fwait inc rcrl loopne xlat push ror aam call test lahf sub orb out in insl adc adc adc mov pop fnsave pop movsl mov jbe pop dec jne pop leave inc int in pop rolb xchg in js popf incl mov push jbe pop or ds push push int3 stos push mov sub xchg rcrl addr16 pop aas out insb fdivrs in add push mov jae and sbb xchg sti push add push xchg dec jecxz jne xor shrb sub mov jle adc sbb test nop outsb inc test aam add pushf ja scas inc lahf mov cmp or jns in dec jmp pop push outsb cli push into push adc in mov nop fnstenv push das fimull leave cmp daa notb push cmpsb xor inc sarl decb pop adc gs ss mov jle bound xchg int insl xchg stos (bad) outsb push (bad) dec mov sbb (bad) fsubp repz in sub sub mull repz out out aaa scas imul jg dec adc jmp jecxz cmpsb dec push mov loopne mov or lahf data16 mov inc or xchg sbb xchg sti out adc cld mov dec pop fsubrs sub in adc xchg jb mov mov stc aam cli push aas pop sub add mov xor in add les jecxz xchg xor sbb cmpsb rorl pop push sub test fcoml (bad) mov cmpsl sub ret or xchg pop fstl rorl add rol repz fistp pop cmp (bad) std adc mov mov push incb stos dec mov jmp dec xchg jl icebp adc push push push in mov clc lahf or out in add lcall loopne mov mov insl rcrb xor add xchg sbb mov pop xor int3 mov dec mov lahf lret (bad) mov ffreep mov jp xor add jnp test pop jmp jge mov leave sub fiadd inc shr lods xor test or mov (bad) enter dec aad dec push lcall adc push gs jbe das div inc std xchg imul xor (bad) aas in lcall adc jmp daa je out repz decb push repz fisttpll cmp mov fucompp jecxz jbe cld in and push push mov xor pop mov and mov js adc aas in mov fild out lret mov mov sub xchg (bad) jo push test je push mov pop (bad) mov rcr out pop xor pusha xor (bad) xor fcmovnbe popa pushf lds jle into xor popf mov (bad) std aas sub fcomip xlat push loope fadd aaa fiaddl or imul mov in dec jp gs test jne dec cmc dec sub data16 add mov mov push adc popa jle pop adc adc cwtl enter test xchg das cwtl divb pop test fstpl add out push inc push sbb in (bad) xor sbb pop gs and in adc dec sub movsb or mov inc mov out (bad) mov testb mov stc stos mov dec shr test iret adc out inc out push movsb out mov push pop leave xor aaa cmp gs pop (bad) xor (bad) int3 movsb lret ss aaa scas ss mov xor aam inc adc movsl test out jg lahf jbe fiaddl fs lahf ja imul push in fxch lds mov imul push jl std sbb ds cld pop push jns test cmpsl pop sub hlt enter push pop push int3 jmp dec out add and addr16 cld push push cmp in into pop out mov fnsave mov stos sahf addr16 push subb sbb je xor mov out push dec icebp in adc mov (bad) paddsb pop add popa imul adc stos jns pop rcrb das in insb lods in stc test pop stc xchg dec mov sub int insl pop and andl mov ja mov loop popf sub adc adc or frstor xchg inc xchg xchg dec push pop (bad) sbb sub test sub out push into mov ja pop aam lahf incl lahf jne ficompl notl jmp daa mov gs mov fstps in ja or out movsl adc std mov xchg dec loope jo cmc pop (bad) xor sub push in xchg dec jg pop arpl or lock xor mov inc in pusha lret push ret sub icebp shr ss je test mov cmp je xor outsb aad push pusha fnop sbb aad push dec mov mov mov decl add out (bad) mov cmpsl fwait pushf pushf and scas jp sbb int3 dec test stos inc lods ret add jo stos in scas push clc push cmp rol or mov (bad) enter sbb push daa movb lahf sti cmp test outsl pushf sahf xchg bound inc out (bad) inc repz dec stc push xchg cmc sbb and scas enter lds mov cmp push pop cmp fdivl sub sub and pop mov das jns dec popf cmc cwtl iret das dec sbb cmpsb and subl inc (bad) xchg std sbb loopne adc imul in xor sbb jmp xchg sub sub xchg pusha or rcl rcrl sub pop ficom adc adc inc xor movsl subl dec aam mov arpl lock test mov dec fisttpll pop sbb ljmp mov mov rcll jmp xchg mov jae and push pusha cmp outsl sub jne lds (bad) lcall dec dec or sahf sub lret adc jb cmc xor sub call mov cld dec loopne fistpll cld and and popa rclb js aas lock mov add add adcl xchg sti hlt push jmp xchg in dec mov ds add inc or divl inc stos pop cmp out std or scas inc mov adc add xchg push jbe (bad) gs add fsubrs add (bad) jg mov mov push cmp pop lods gs cmp fsubr xchg iret dec add je fisttpll ret leave xchg dec mov gs ljmp fadds test flds mov ljmp mov jl cli sub rcll jp or lods mov jns mov pop dec adc mov outsb ljmp js lahf aaa cmpsb dec sbb push dec std sub mov ljmp scas pop movsl call mov xchg in pop addr16 repz andl sbb sub sbb adc jg jmp sahf test mov ret cmp mov lods lods addr16 pop pop lahf dec xor inc mov push jmp stc stos mov loop pushf in lea sub rolb lods aas push daa sub xor mov or or loopne neg imul jl mov cmp mov out push lret jb sbb addr16 mov push xchg mov sub pop ret rclb or mov mov pop jb sub sub adc sbb adc push jecxz xchg nop and pop stc cmc push aad lock (bad) out js xchg rcrb stc fcomps sbb out call inc inc mov lret ds sbb cmp dec int3 sub mov push (bad) lods mov add ljmp cs mov and insl insl (bad) or mov dec movsl xchg push jecxz mov insb movsb sub add in xchg mov mov sub add jmp das mov cwtl stc std loop mov cs ljmp and sbb xchg cmp call mov push sub mov les int lods movsl cmp push lods or dec loope addr16 mov mov mov stos mov inc imul popf pop test sahf mov jbe add mov mov (bad) icebp out adc shll stos js sbb fwait lahf pop pop or push addr16 mov negl out lret xchg cmp stc mov xchg cwtl xchg pop cmc out addr16 inc out and (bad) addr16 xchg sbb je popa rcrb mov dec lcall dec push test push cltd jne sub jne dec lahf dec aad cmp popf push xchg movl add sarb movsl cwtl mov (bad) add dec mov arpl fmull test loop and push fidiv mov mov test and xor pop cmp sbb pusha jge ja scas aas lds xlat mov stos std movl xchg in das sub push push push cmpsl aad mov dec and clc sub mov adcl mov or inc (bad) push and iret jmp sarb sub mov sub arpl and push pop sub xlat or fiadd clc lret adc and int3 stos cmpsl inc in jle out pusha adc dec loop inc cmp sbb ljmp sbb cwtl (bad) int3 jp and lret out imul lret mov sti daa dec mov popa or cmp daa pop mov cmpsl hlt sub (bad) xchg dec sub leave inc mov xchg jae jmp cmp pop and hlt dec pop scas inc mov mov sub cwtl lea outsl sbb cltd repnz xchg pop mov cwtl mov pop or adc or mov pop jge sub sub adc xchg fwait rcl ret jle stc (bad) stos jle push leave int3 xchg xchg int3 (bad) dec cld jno xchg sbb pop aaa fisttpl and iret pop push loopne push or hlt pushl std jnp lds jnp in sbb cmp pop jp cmpsl xor jmp dec xchg inc jg stc jbe dec or mov leave push adc cld rcrl mov movsb inc sbb fs sub stos push push mov add insb cmpsl jns icebp les sahf sti movsl mov cld xchg xlat fbstp dec leave data16 jg int push xchg cmc cmp std out add xor ficoml out in out cmp ror cwtl loopne das aam std pop jne stc fwait (bad) lock add adc inc mov cmp adc dec rorb mov in mov mov out pop cwtl or imul in sbb inc adc jo jmp bnd pop push push push (bad) cmpsb adc mov stos ljmp clc mov popa insb lods lock dec mov ficomp repnz or xor push aas jne,pt (bad) jnp cltd push and pop pushf lds test pop xchg mov call out xchg jp stos test jae pop sub lods mov and xlat and xchg mov int jg pop xchg lret mov jle jae test xchg dec sub arpl sti mov outsb mov sub inc dec adc scas imul ds sub xchg stos or mov stc adc mov pop jmp aam fiaddl out aas (bad) lea xor sbb lret adc mov (bad) or add adc insl inc or nop sbb cmpsb lock mov (bad) mov mov in pop pushf mov stos nop add sub xor sti (bad) push fs fwait arpl test pop push lahf xchg xchg sub cwtl lret pop inc mov movsb cmpsl mov xchg lret scas mov ret dec stos pop add out cld push xchg xchg jbe xor adc (bad) lret pop mov (bad) push sbb push xchg mov outsb popf xchg scas sbb rclb test add insb fildl xchg push push in mov mov xchg negb mov lret test outsl cmp mov jg fnstcw xchg pusha shrl mov enter push jne adc dec xchg cs test mov jge push inc sub (bad) jecxz xor mov sub and jg and mov iret cltd cmpsl mov sub ds lock fsubrl adc sub lock jg sahf jae xchg and repnz pop xor inc (bad) arpl and outsl leave pop hlt pop jl hlt dec aad and repz or dec push and leave (bad) cmp sarl test lds sti ja cmp push incb mov into movsb mov push mov ja xor in loope sahf (bad) jg cltd aad cmp mov ja cmp mov stc fisttp pop or jp sbbl bound dec and in scas roll adc js test (bad) call mov sub mov pop mov dec sbb and sarb cs pop xchg mull pop mov push mov cmp sub stos mov das mov add imul pop mov sub in sbb sub imul sbb movsl roll in dec idivb and mov inc push mov ror and dec popa mov adc loop or adc and imul rorl jnp ror dec mov cmpsl push sub add cmp mov (bad) sti jbe std out xor dec mov cmpsl adc stc rcrb adc into ds sbb cmp popa xor cmp es cmp inc dec mov call lea movsl fildl sbb sbb enter mov mov mov mov cld dec lahf inc lcall pop jnp jbe jp lods push push jge push popa (bad) test pop dec adc dec push mov sub and xchg jmp inc stos mov add jp out aaa xor mov bound outsb xchg aad lcall aaa out mov mov xor sar jo add imul in stc cmp and mov cmpsl arpl test imul es adc mov push and jnp cmp push inc jge shrl mov sub (bad) adc lret lret in pop mov outsb notb stos xchg mov xchg sbb fs daa jnp mov add scas stos mov int adc dec mov shrb dec jae out xchg mov scas out jle int and test into js jnp and sbb xchg ror shrl mov lods pop and mov sub push and pop dec ja les lds push or pop decb popf cltd popa mov insl ficomp jne push repnz pushf pop dec adc sub lods mov sahf inc addb out lds sub test popa cmp dec rolb sub rcl (bad) call or xor mov inc adc or or out dec jae fnstcw lock inc out stc daa push popa insb cmpsl ret test sbb out cmp mov lea out mov mov cmp cli pop out pop mov test std dec out dec pop cmpsb je outsb leave jo mov jge jp mov xchg mov mov add xchg xabort inc mov push push pop inc xchg sbb xrelease sub lret inc (bad) insl into sbb addl sti outsb jmp mov add pop mov mov xchg lock mov adc xchg in subl or pop jmp pop xor aaa shrb xchg mov mov sub xchg faddl dec (bad) xor (bad) jnp outsl xor mov mov adc mov das das daa xor xor inc test insb enter movsb xchg aam movsb jp dec aaa inc mov pop mov lret popa bnd je xchg pop inc ds in std xor das mov mov cmp mov add pop lahf ljmp fcmovb (bad) pushf call neg cmp cmp jbe popa (bad) xor adc push add stos jle xchg push cmp test fstpt add xor or dec adc lods js xor dec pop stos scas popf and notl (bad) cwtl lahf pop cmc jbe pusha push dec ljmp sahf lock out pop mov aam lcall dec mov push roll pop dec xchg or sbb pop push mov jno popf xchg mov push xchg pop cmp jmp adc mov and insl into xchg xchg lcall jne aas jg out xchg daa jbe inc xchg imul mov xchg jp mov lret (bad) (bad) js dec adc test add cli ljmp (bad) jmp js mov lret testb push jno lret (bad) push repz jnp or cmp adc xor pushf and cs push or lods fucomi movsb push jecxz mov mov mov stc jecxz cwtl stc aad adc adc lods mov hlt daa fwait xor mov stos push nop push cmp sbb xchg jmp xlat push push repz inc inc xchg les (bad) push insl adc int in loope pop test fwait mov lock mov pop scas jbe or pop es jbe xor cmp cmpsb hlt ds lahf jecxz push dec int3 mov cmp jbe add lock jg stos lds in jns fldl pop mov inc lret cmp movsl cmpsl mov push xchg movsb cld inc call aas pusha adc and mov shrb out jae dec fisubrl sub imul fs popa call or push adc mov xor push jle or xor sbb push loopne mov jg dec xchg inc int xor or push mov push mov mov arpl xchg (bad) dec mov out jmp data16 pusha mov push dec outsb inc dec or popf inc loope stc sbb mov pop (bad) mov xchg pop sti pop push push lds xor std mov dec cmp mov adc jmp inc test xor pop pop adc jle cmp dec adc push xchg sahf cmp pop aam scas xchg repnz mov cmp jb mov in enter mov jmp out pushl xchg stos add dec mov test xchg icebp mov or pop mov pop sahf scas xor cmpsl fadds aas movsl pop loope adc mov mov dec cmc dec bound mov sub stc addr16 mov sub and adc sahf mov dec test sbb add aad pop pusha adc test out out push dec lret xchg ljmp (bad) jge xchg ja call and into pop pop fst mov xchg rclb aad cmp pushl xchg jecxz (bad) pop (bad) mov mov rorl sub loope cmp outsb xchg mov pop push cmp pop jecxz lahf movsl sti loope cmp into xchg or mov je (bad) jnp push cmc cmp mov gs xchg sahf mov pop rol sub aas mov xchg cli cld or sub and sub pop ret sahf mov jae inc jbe add jmp (bad) dec mov dec lods nop pop jl sub cmpsl fsubrl dec xor mov or xchg popa and dec sbb dec popf jp cs xor sub jmp sub cwtl xchg xor stos mov pop xor dec sub movsl les js fcompl js hlt and int3 std sub in xor jae in sbb (bad) pandn fstpl and mov int pop jp mov cltd loopne out lock jmp sub and mov scas popa dec call inc mov fistp mov add out scas cmpsl test dec fistpll hlt stc ja inc std repz dec movsl imul (bad) mov xor das in test dec jle ffree dec movsb xchg cmpsl dec nop inc js mov (bad) shl sbb xor (bad) in dec mov jl sub das incl cmp ret mov movl cmpsb mov out or in lea lods (bad) cmpl mov xchg daa mov xchg jecxz scas sarl mov imul inc sti push jl fsts imul mov sub (bad) jno sub inc hlt mov imul xor fwait sub xor mov (bad) dec mov cmpsl inc imul mov add out and std sbb mov daa inc sbb leave pop mov inc iret imul mov (bad) mov std and mull mov ljmp jo mov mov sub or pop adc iret pop movsl cmp cli call xchg sbb cmp in mov dec fdivr push (bad) mov in cmp popf arpl je mov (bad) or out pop inc xor decb pop mov fistpll sub ja and dec jg mov out push cmp push lock mov inc js add jmp out mov stos mov xchg outsl xor mov scas add mov inc ja stc and call gs cmp dec insl pop cltd lods sbb daa jae data16 xchg sahf mov pop push int3 cli in inc dec loopne xchg or loopne iret cmp daa jg (bad) cmp inc sub xchg jmp cmp out iret jne inc mov jge sbb imul push addr16 mov ds jbe add jo pop stc insb lods vmovq (bad) pop mov xor stos mov sub and jmp xor jno mov stos cmp test mov sub test mov jnp or lcall pop sbb pop std mov inc iret lret incl dec (bad) ja or mov fstl mov adc inc sbb imul xchg (bad) int3 imul pop pop jbe test xchg std or fisub je daa dec mov mov insl (bad) (bad) xor cmp aas fcmove jecxz mov jbe test aad mov jmp push push in cmp add or je lcall fisttpll push mov adc in fidivl inc push cmp mov push test fdivs xchg or testl lret mov mov mov out jge roll lock inc repz outsb pusha sar imul mov push dec sbbl test xor dec mov je (bad) cltd pop dec sub lods (bad) jmp or mov push xchg dec les addr16 lock data16 pushf or outsl mov test sti mov pop cwtl pushf imul jnp push lret sar pusha xor mov rcr pop mov out enter lret aad inc loopne add aam sub pusha sahf jle push (bad) mov adc jno data16 mov lea fsubrs enter inc in ds mov pop pop adc pop (bad) sub mov push enter mov addr16 lods add xor xlat mov mov mov mov pop imul gs cwtl dec leave ljmp jns dec cmc or or mull cmp mov test outsb out stc subb mov sub and scas into push xchg adc add scas cmp shll inc repnz jbe in xchg cs mov jle in test cmp xchg test xchg fnstcw mov xchg xchg jne mov sar rcrb and xchg xor fstps xor xchg call or js push inc arpl cli mov nop mov xor xchg ljmp fcomi xlat add aas mov in or pop repnz jmp mov fildl ds pop inc jp loope data16 addr16 mov mov das mov xchg pop or jne notb sahf mov (bad) scas or xchg xor xlat adc adc stos das mov inc stc packssdw pop outsb testb inc in dec pop daa mov mov jp mov sti pop push aam mov jl sahf push std lock data16 aaa test enter lea adc std test ds fwait mov ret dec test cmc mov addr16 hlt push (bad) pop adc xchg jns dec movsl pop push push mov mov inc mov push shrl insl lret mov xchg adc add cmc dec sbb jp loope mov and xchg cld jp xchg movsl iret cmp movsl outsb js (bad) loopne out sub dec iret nop mov inc mov test xlat push aad test pop cmp inc std push dec pop lock ss sbb ror pop dec cmp push out scas dec in xchg (bad) xchg movsl movsb notl pop jecxz jbe push sbb jp jb xor std and (bad) ss std sub and ficompl repz movsl dec pusha jnp push jecxz test lock jmp dec and mov (bad) dec rorb inc pop call adc iret je popl and (bad) mov popa sub sub stos gs and jmp cmc xchg and or mov popa sbb push pop lock stos in jle ret cltd or cmp inc jmp mov adc add imul mov lret push jp out hlt jp in vmovaps stos sar popa sbb adc mov sub lcall jecxz lds xchg lods sbb int fistpll or inc movsb clc jbe nop add jmp movsl test repnz jecxz mov jg fucomip leave popf mov push sbb dec fldl2t mov aaa pop jbe sahf and fsub pcmpgtd inc (bad) stos shl xor test lods decl pop call pop into out mov (bad) push mov add inc in aad xor mov repnz jge dec int test mov mov cli mov sbb cmp dec incl add ss insb mov loopne and ficoml loopne cmp (bad) xor mov pop lods sahf stos out mov add in das shrl or inc lods das jmp cmc mov jp addr16 dec ret scas pop iret dec mov adc mov sub inc jne dec scas pop lods (bad) jb xor mov repz fidivrl xlat push push lods sub fld sbb lods mov pop movsl add push xchg mov xchg cmp in jmp sub pop inc (bad) or add sub test pop repz jmp add sbb cld push mov cmp repz and adc push pop push fildll outsl push mov aas neg test cmc imul cmp adc cmp out cltd push and pop aam clc mov in dec loope nop scas addr16 xchg inc pop (bad) xchg jbe loop inc pop dec sub xor cmc sahf or scas cld sbb fmuls jecxz lret daa (bad) inc push xchg rol sub inc xor sbb jge mov fwait jno lahf jge cltd (bad) out push das xchg loop xchg addr16 lcall cltd jns jmp out mov xchg push cmp dec adc cmpsl ret push scas daa test mulb lods pop jmp (bad) dec icebp js movsb mov push mov xchg movsb test ret (bad) xchg xor imul lret sub ss in mov lret (bad) out adc ds addr16 xor imulb add xchg jp (bad) dec movsb mov fbld mov outsl out imul pusha adc imul scas xor xchg test pop ja and jge sub pop in scas sbb dec mov lods aam insl push out xor inc adc (bad) and out pop pop stc mov jecxz scas xor test repnz jb jo dec sbb mov mov sahf xchg mov aaa adc adc cmp into push sub ret movsl jbe dec sub xchg (bad) js push jle add push sbb jle xor fwait xor mov inc lods pop jno dec jecxz pop imul cs cmp in daa icebp xor or in daa xlat cli out lds push stc adc push mov into cmp pusha sub pop cmc push adc mov shlb cmpsb push inc push mov jg adc insl clc cmp push xlat jmp sarl inc mov push icebp test jo mov int3 sbb iret mov pusha pop xchg xchg dec ret aam lret jns xchg push les pusha rcll push leave imul lret xchg ss les in ret dec sbb mov jns mov mov jnp jnp jo mov stc cmc and aas mov xorl fwait lock dec aam mov add mov imul and stc daa int push lods push cld nop mov lret shrl in or sbb jp (bad) sub lock jle (bad) divb loopne inc xor add das mov push pop xor and sub push dec pop inc sahf dec or imul sbb das add inc loope leave jne pop sbbb loope inc pop inc mov out divb repnz jo icebp push xor inc mov mov jecxz inc outsl add cmp push pmulhuw outsb jecxz mov dec xchg cld push popf cmp out pusha sbb scas jmp sahf add (bad) iret clc or pop imul add mov add (bad) (bad) lret in mov out push adc (bad) ljmp mov pop sub or divb fildl mov insb cli pop clc clc xorl fidivrl jmp xor pop push jg sub pop fistpl adc or scas in sub push xchg loope jb nop push hlt lea sbb mov mov test mov and addr16 aam sub pushaw rcrb sbbb arpl mov dec test add or lods in jns jmp das ljmp inc clc repz arpl ljmp jae lahf (bad) sbb dec pop rclb repz fistl xchg ds rcrl or pop lods and ds cmp mov aam xchg data16 sub cmc mov mov jo (bad) int3 pusha daa or mov lds mov cmp sub aaa or or pop (bad) pop (bad) or in jmp jnp nop daa test out jl nop cwtl data16 and fldcw fstpt sbb pop loope fwait sub int call adc outsb lods mov add rcll xor and dec or sub ds out nop jp fucomip gs ds notl cmp xchg xor std jg mov jno jle push out adc dec arpl adc nop sbb fsubl popa add ret (bad) push ljmp nop pop sbb push xorb adc push mov lret iret into jecxz fistpll inc jecxz xor imul mov jl sbb add add xchg mov stos lock arpl xchg paddsb hlt pop xor stc jle cmpsl std loopne jle adc imul incb out mov std (bad) mov call insb cmp cs stos lock aaa dec push clc scas mov jecxz mov push (bad) stos jecxz sahf inc and dec mov xor shrl (bad) mulb incl pop or jecxz and xor sbb lea loopne xor jae add lcall mov int les lret sbb out mov xor adc (bad) push sub ret mov mov inc jns jle and test jns xchg mov and sub fistl scas pop outsb stos fwait sub incl or loope add push dec mov leave mov and fidivr iret arpl sarl mov lret stos in xchg inc imul xor inc popf inc clc push cmpsl adc sub aam dec dec mov enter cltd dec js insl dec push sub pop jbe sbb test iret scas addr16 sbb mov scas (bad) push xchg mov xchg sub cmpsb and (bad) push sbb out dec mov scas push sbb out movsl cmp jl mov cmp in inc fstl adc and cmp xchg sbbb out fwait aad pop add fcmovb push push jg ljmp jno sub sbb fild push addr16 pop das in or call inc movsb jo lods xor cltd fisttp arpl test das mov push pop fstpl repnz aas idiv or cmp jge xor repnz scas push lods and in and outsl xchg jo mov fcompl test rcrb xchg mov fucom or adc or popa (bad) js jle ret adc into jmp lret pop pop and fildll or cmova lock mov cmp push jmp movsb inc cmp subl loopne push sub jbe movsl mov pop jge gs fsubs mov or jnp xor inc leave jle gs and and jmp stc jge dec hlt jae mov xchg hlt mov lods jnp inc cmp out xchg push jl sub addr16 mov mov nop jmp in mov sub mov jge jmp xchg test into scas jno jl sti fld push sbb pop stc push sbb cmpsl lahf mov mov jae aad dec cwtl cmp or daa add pop fs mov addr16 pop cwtl mov xor cli stc mov push cmp add sbb inc (bad) andb mov add inc adc sbb pop lods mov test fucomp sub daa sub call mov movsb insl cmpl pop into pop xchg inc repz sbb pop leave push push hlt cld int lret mov rclb push and inc inc or pop or pop imul push les imulb (bad) out cmp xorl and ds aas outsb cmp or in int in ret mov xchg and loope hlt dec mov lret ds add mov jp dec lods lock mov rcll jg or mov mov gs sub stc insb or movsl rorb out fucomip insl mov xor and mov out (bad) lret loope int pop cmp imul dec push jae aaa lahf (bad) insl fucom mov sub xchg dec outsb loop stc js imul lcall (bad) hlt mov test mov mov jl dec clc jg or sub and js and xadd scas push mov fwait cs add fmulp xor sahf jns xchg (bad) stos push hlt push aaa loope xchg pushf and push gs idivb add lods (bad) rclb pop mov pop mov and push xchg xchg push pop sbb iret mov iret and (bad) xlat arpl data16 jnp xlat shll outsl insb cltd lods (bad) and addr16 insl out insb sarl mov mov jle sarl mov add lock mov or addr16 sub clc cwtl and (bad) jnp mov push jbe pop insb (bad) shrl xor mov leave das mov lods push (bad) clc sub inc cs in repnz cld xchg jmp les jo test jb idivb push rclb and mov adc ljmp sbb xchg and adc call jle imull dec cld fwait mov xor (bad) fsub inc mov add sbb mov and leave sub dec adc mov jmp xchg loop and sub outsl mov push sbbl sub pop loope stc inc xchg shl call push jo int stc int test loope enter mov push shl icebp dec insl imul dec std xchg loope (bad) lods add scas cmpl lcall jecxz push cli (bad) aad xor sub sbb jmp cmp aas pop lcall lahf sub push scas (bad) test pop push scas and add and jg fsubrs adc lock shr push cltd incl das add pop or xchg cmpsb jp xchg stos xor inc out (bad) aad bound xchg adc (bad) mov push pusha and jmp xchg (bad) (bad) mov xlat in push loop mov mov pushf sub andl (bad) movsb popf inc stos xor pushf adc sub or cmovle add push iret imul xor out ja popa jl cltd dec (bad) sub imul or fistl and cmp pushf and and mov inc pop idivl aas sub aam push ret jno sub sti cmp push jns int3 stos je jb adc add out sub lods mov ljmp xor sub out insl pushf das push sbb jnp aaa aas loopne es or push das lock in jle adc ja push jns ljmp loope push add fimul mov fdivl outsl jl pop push popl inc inc repnz xor push insb lock imul jge cmp add in xchg fucom inc leave fistl cmp je sbb in push adc jb sub ret and stos nop repz inc adc fs addr16 aas imul mov imul sahf out inc and push jge cmc push test mov pop mov fnsave ss sti cmpsl push push in hlt dec jecxz cld mov mov or push insl jle in sub test out cmp adc dec pop adc or xor (bad) jne iret ljmp add or fstpl test gs lahf jns jnp mov xlat pop push push inc sub jne sti inc and sbb arpl rorb sub mov add fmuls subl negl jb inc fistp sub lods pop or out rolb in dec enter dec adc icebp or dec push jmp cs jle rcrl dec mov sbb dec test addr16 jmp inc pop adc nop movl gs or inc push mov cltd and enter out outsb orb repz mov daa int mov pop xchg xchg arpl cmc daa and jns lret out inc lret aas sub out mov inc imul or repnz jmp cmp repz rcl jns ret mov mov xchg icebp jge or mov push lods add jae aam add adc insb int3 xor inc sub inc jmp cs cmp sub mov call mov hlt int3 std push jns (bad) insb pusha cmp and sbb fwait xchg or mov imull pop push jbe pusha xor inc adc pop cltd (bad) pop bndstx mov jnp mov aam into inc mov push cmp and push mov xchg addr16 sbb inc push movsb adc and jge pushf out ja icebp (bad) xchg popa jmp or mov jb sub fsubrs and das fwait mov inc (bad) pop cmp (bad) adc jns js into scas pusha ljmp xor out sahf enter dec pop xor lret sbbb ret jb jae cmp dec daa push pop ljmp loope add mov fwait sbb data16 subb ss push stc loopne jns xchg push pop call cmp push outsb adc inc dec jns add aaa cmp mov lods scas jb rcrl nop ja into ret fmul jmp mov sahf ja cmpl cmp pop fcomp std xchg adc or ja cmp rep out mov fucomp repz sbb sbb mov ja hlt popa enter jno mov inc push dec test sbb mov add push push adc jp stos arpl jecxz daa inc daa or pop sbb push enter in shr sbb cmc std cwtl xchg dec xchg jns jnp out call inc lret cmpsl test data16 in push cld dec lock jb and xor imul pusha scas dec cmc adc out test loope cltd ret dec dec ss or and push inc jp pop rcrl lds xchg sub push push mov rorb or push adc mov aad cwtl add jbe sbb push inc jb scas out addr16 popf (bad) adc or hlt and in test cld inc jle imul inc inc jecxz xchg sbb cmpsl inc inc jg sub inc imul aad cmp icebp sub pop xsha256 cmpsb rorl mov jg mov jmp bound adc sub push or cmp mov xchg pop cli loope mov pop fwait push test mov roll in rcrl fnstcw in sub out pop test mov sbb pop inc aam cld cs xchg inc adc xlat xchg int cmp sub (bad) sub mov lea jg rolb subl xor sarb lahf lcall jl sbb aas adc push das (bad) stos mov cmp test repz jae sbb cmpsl dec xchg inc xorl xchg mov sub pop outsw cld pop add out rolb jg rolb xrelease repz lahf inc inc jle mov js adc nop bound int3 pushf push rorb mov add out sarb repz inc mov test lods jg sub jno inc pop fwait add cmp mov xchg les out pushf xchg xchg mov imul and lods mov ljmp clc imul push (bad) mov or lods jnp mov in pop aas jge cmpsb (bad) pushf mov sbb sbb in (bad) dec in call xchg lods lea add xchg stc sub test mov mov and loope lods icebp lcall es stc stc fwait ja xor push movsl push or imul fs dec ljmp pop lret inc mov sub jno inc imul je push cld and xor pop out push (bad) xlat jo mov out xor sub dec imul outsl test in mov pop ret add (bad) xor js cld pop fildll sbb scas outsb xor lahf mov xchg cmpsb int out cmpsl shr fs int3 das sbb adc xchg insb add push in inc test jge pop add sub sti jns lahf fidivr cmc jb (bad) das movsb out int mov xchg lods adc xlat mov scas scas in push xchg xchg sti ljmp xchg test mov jge inc gs cwtl xchg rcrb ret xchg movsb and or fidiv inc add fdivl repnz stc test adc push pop xchg out xchg mov sbb out xor movsb (bad) adc sti das in jecxz aas addr16 dec leave (bad) pop scas lock mov int3 nop in in cmp std leave daa cmc arpl lods (bad) out sub fadds mov adc pop movsb adc sub adc sub popa cmp fs int3 dec pop push push cmp and mov cmp jg jp lds add mov addr16 in cmp fisubrl outsl and (bad) data16 add xor jl lock pop add pop inc das jecxz outsb sub imul cmp std dec inc or testl rcr inc xor ljmp jno sub push les cmp sub inc dec cmp cs imul leave jmp lods sub js test ja mov sti addr16 out adc ds pop xchg test fsub mov (bad) lods adc push into adc addr16 or jnp xchg inc push jno pop mov and mov mov loop ss and jl lret xor adc imul and leave fidivl hlt je pop pop push pop dec push jne jns or xor scas add outsb arpl cmp int push cs hlt mov insl outsb std ffreep push mov (bad) stos sbb movsb mov (bad) push mov lcall jb xchg add imul ss enter push xor dec mov je imul pop (bad) hlt adc dec lds xchg mov scas test xlat sahf sbb out test cmp xchg jmp loopne xchg jne nop dec pusha jnp rcll jg jge add mov pop sub call mov fcmovu push bound clc cmp out xchg pop xchg lcall sub mov inc cwtl arpl enter or pop adc xlat mov jo xchg xchg xor out data16 jp roll dec (bad) sub ljmp std add pusha (bad) adc jmp mov arpl arpl loop sbb nop lds movsb xchg loope rorb leave mov unpckhps lcall push xbegin scas jle jge cmp dec imulb dec mov repz lods xor and sbb xchg mov imul ja mov and xchg aaa sub fsubs jl loop pop jl sub sbb scas movsb jge lea (bad) cli xchg lods xchg ftst cmpsl dec into je cmpsb ja cmp jl xchg out jb fstl and in jge cs or mov sbb in mov dec push icebp imulb scas add or mov xchg add out ret mov mov lcall jno imul sub lods sbb test push pop mov notl adc (bad) data16 push aas adc mov sarl fsubrl cs mov jg dec push into fwait dec fwait jns or mov cmp lods or pop repz or or xchg and and das movsb pop cmp add cwtl sbb inc add (bad) (bad) dec dec mov jmp js mov mov pushf xor xlat jnp mov loope mov stos fsts rcll ljmp adc lea cmp xchg stc sub and pop cmp and inc jne or inc cmp pop mov out jmp pop js jmp jne in (bad) aaa vmovss ja push ret je pop add sub subl dec cmpsb fcomp fidivrl push cmpsb dec mov lock sub addb (bad) hlt imul dec push imul add add xchg pop movsb adc jo ret mov aas xor nop xchg cmc (bad) sub js loop jmp ljmp out das stc xchg enter cmp jp lock dec push sbb adc and sub inc insb sarl push bound sbb mov pop mov mov lock in insl loopne lea mov int3 nop mov clc xchg cmp mov or dec jle push jns ret dec sbb sbb pop and ret (bad) cmp sub jg xchg insl and sbb sub icebp test cld test leave (bad) repnz add sahf pop push pushw in adc pop push sti mov loop ja push in cmp iret push cmp xchg insb mov fwait popf mov gs stc cltd mov popa push mov std pop mov cmpsl aad sbb dec mov imul sbb pushf cmp addr16 jmpw into sbb jmp (bad) repnz push jae mov or mulb sbb or popf push and out dec mov or bound xchg dec dec test (bad) leave dec dec adc sub mov je nop (bad) adc notb cmc jp enter lret push adc mov cmpsb pop xor movsb jo ljmp adc mov add xchg int3 cmp push out xchg push pop js mov sub pop adc (bad) jns mov mov aad jae jge xchg push in jl ficom push les push xor cmpsl int3 cmp out inc mov adc sahf sbb mov mov aaa sahf mov lds movsb hlt out jmp jnp (bad) lods sub dec pop dec push out aas inc dec stos xlat mov insl cmpsb push flds addr16 inc push (bad) stos fs xchg std jmp out dec movsb mov les daa test cmp sbb int3 call int inc sbb idivl xchg pop xor mov or push inc int3 cmp pop scas xor gs jae add add fabs (bad) (bad) repnz xchg outsb xchg stc (bad) xlat aad and sub lahf jo dec (bad) mov mov in inc rorb cltd sbb imul jbe add jo fcoml (bad) pushf cmp das mov adc fsin mov pop mov aaa out gs loop out cmp js lahf and or mov dec push aam or cli inc test and push xor push xchg lahf call xchg in push lret nop stc ljmp adc adc fbld adc mov cmp in xor je mov jmp pusha stos pop leave dec inc out cld scas fcoms mov and mov mov int subl aas in mov jne dec mov iret pop jnp (bad) ja cmpsl subl repz insb jne pop inc lcall push repnz pop icebp fistpll xchg lods jo mov popf (bad) movsbl mov std fimul sbb adc mov adc adc mov lods cmp adc xchg sbbl test cmp std push mov xor pusha sar or sub in lret (bad) or dec cmp aam push sub (bad) dec fsub push inc js xchg pop xchg out jbe enter xor push push iret mov lahf xchg stos movsl jg pop int3 scas mov aad xor in call ss (bad) cmp sub push pop fwait lret mov dec mov gs aaa outsb push (bad) jnp dec pop mov mov fcmovnb cmp mov adc mov std xchg (bad) xchg sub xlat sub xor (bad) mov push (bad) insl cmp mov fldcw lods sub subl loopew xlat leave inc pop jge out mov gs test jo scas out push cli pop xchg jp and int3 pop add inc nop stos jp inc cmpsb out stc js fwait adc pop adc sbb (bad) add push inc (bad) aad outsl sahf jne xchg xlat fwait popf or inc pushf pop xchg ss dec popa cmp out pop outsb mov cltd mov jnp loope xor dec or mov mov inc enter mov sub ljmp out mov lahf cmpsb sbb pop loope lods ds push lods xor rclb ljmp jno add cmp sbb cwtl pop push or push sbb dec cwtl ljmp or ljmp push lods in gs pop loopne ret jb xchg enter das jl xchg add inc push sti adc lock jecxz mov adcl adc test push dec out ljmp sbb aam inc xchg inc push and or stc sub shrb and jle or out sbb pop mov stos pop mov popf aam imul pop pop mov popf xchg ds (bad) repz push sti mov mov int lahf (bad) cwtl data16 in sbb (bad) arpl test mov jbe xsave test cld jl lock pop addr16 leave test mov aam mov adc test mov adc out ds outsb imul or pop (bad) sbb add into sbb insb sbb mov jo pop inc xorb jns add fildll adc vcvtdq2pd adc sbb adc (bad) pop fs and scas gs adc nop xor or add frstor inc cmp call into fidiv repnz add (bad) adc js aaa dec jne mov outsl lahf clc das nop mov out mov clc outsl imul mov mov mov push cwtl push imul rolb sub addb add test scas sbb pop inc inc in mov jg in jo mov and int arpl test in adc lahf mov pop daa mov or xchg pop mov mov bound push push (bad) xlat jo fstpt hlt and mov mov imul inc xchg leave adc fcoml xchg mov xchg cmp cmp add sarb push mov ja pop arpl jmp pop or data16 jae fs arpl and inc das pop push add hlt rep pop cmp repnz mov dec xchg in sbb mov pop out push cmpsb pop adc cmp dec sub movb xor (bad) adc fiadd xor dec pushf icebp lcall faddl xor pushl mov sub mov divl pop sbb lods shl cs cmpsb mov in outsb movsb add enter xchg fwait push sub adc lcall push outsl adc (bad) push sub or enterw jmp lock fist call mov jmp fimul mov jbe test mov imul sub add inc das sub insb xchg out ret sbb or out test dec leave mov movsb mov sub adc loope lret call pop fs pop lock daa or add sti jnp add cwtl and out cmp mov imul das int3 loop test scas push insb mov clc add scas xchg jns rorb pop and aam std push scas out (bad) fstps adc jmp cmp in xchg mov mov fsts pop ret inc cld sub adc xchg push loope xor mov iret xchg es xor icebp leave test fsubrs add push loope (bad) (bad) in sub lret dec popw jge mov frstor cwtl xchg pushf test pop adc insb cmp or movsb stc hlt test pop fcmovne inc push (bad) repz or into clc add xor bswap in jl push cmp sahf ljmp repz sub dec aam jge or push and jp jmp sub divb and mov inc add inc xchg mov sub loopne popf lret (bad) aam sub test xchg pop ror test lret aaa mov cmp or jl pop pop push fsubrs daa xchg mov mov sbb pop (bad) or sbb lcall aaa movsl adc scas sub sbb scas fs dec and fdivl adc jg cmp mov inc cmp orl sub mov iret std lcall mov adcl lods sbb pop ret inc ficom sti loop sub stos je pop inc push push fsubp (bad) out push cmp cmp in sub in mov popa decl mov adc daa mov out lahf stos inc sub fdivrl xchg push cld out iret test push stos cmp and sub out outsb (bad) call mov xchg repnz adc jle jle cmpsb mov xchg jnp dec lcall pop aad stos loope push ret lds cli xchg icebp mov push repz pop mov hlt pop in jnp adc mov jae mov inc add fld les fimul cld and or pop xor sub xlat jg jne sub je aad jnp es ret pop popf out clc mov orl xor in in test adc sub and insl movsl scas das ss std fwait inc mov sbb sbb insb pop sub and gs jg daa je dec jmp dec fiaddl incb inc and dec fistl notb neg jp cmp cmp andb cltd mov cltd sub ret xor push xchg pop repnz xor xchg ja dec fxch or push ret hlt push pop and out xchg insl mov or pop mov decl xor pop xchg (bad) cmp ret push imul movsl rcrb outsb cli lret fimull add inc push pop push mov or dec pop vmptrst cmp or xchg inc fwait stc pushl jge jecxz add cwtl loop ja fild mov jnp test jmp xchg inc ret cltd rcrl mov js mov stos loope in xchg sahf pop out and xchg ds cmc test sahf cmp ljmp push pop push std popf xor mov inc stos xor xor xor mov popf push xchg es add ret dec jnp icebp rcl js (bad) pop nopl or (bad) jecxz jmp sub push repz movsl aad fstpl movl and ret inc aad test adc push adc cmc std arpl sub and cwtl cmpsl aas add fbstp flds pop loop repz (bad) jo pop cld pop imulb cmp mov and movsl fwait dec inc adc aas sahf sub xor arpl pop mov jns cmp mov sbb enter fwait sti lds mov shl iret js (bad) std repz mull aaa xor push adc and cmpsl sub mul mov in sbb (bad) outsl movsl push and mov test adc cs adc inc das mov lods inc push int hlt inc pop js outsl dec sub adc mov pop adc fs rcl outsb ljmp ds fcoml mov out add inc div aam dec lock pushf push dec rorb out or push (bad) sub cli mov xchg and adc (bad) pop inc xor (bad) (bad) push pop mov push aas push sbb mov xchg (bad) xor (bad) xor outsl addr16 cmp jnp and jl or in jb addr16 add mov pop (bad) pop mov aad and dec aad stos pop hlt out xchg push pop icebp fldcw icebp jp mov jp or xchg hlt sbb push push xlat lahf mov mov sbb push out xor (bad) push add in es push dec lcall out adc mov lcall push push sbb ss in loope sub imul loop out sbb sbb jge jnp jns sarb imul (bad) xchg fwait enter jg sarl fs mov adc mov mov and (bad) cvtps2pd or xchg lahf pop or mov mov aaa sahf in sub adc ficomp inc add inc aas clc test pop cmp movsl and push imul fldt dec sar add xlat jmp orl lahf je pushf or fs sti dec imul cltd mov jne mov jno fsts or and (bad) lods pop js fs inc jnp ds pop (bad) cmp mov dec iret mov jle (bad) repz xor ror xchg add mov js movl cmpsl popf pusha pop fidiv mov repnz cmpsl xchg push mov pop mov and lea xor out inc divb test pop sbb mov jbe movsl dec cmpsl dec add cli loope cltd (bad) jne push mov and xchg xor nop mov mov (bad) fstl in popf test sbb cmp sbb js sbb shll cmp subb add sub xchg les inc inc adc es ret sti jmp adcl push mov add pop mov out pop lret push stos or mov insl aaa cld push dec mov fwait pop cli shlb xchg lods fisubr cltd jle rcrl adc pop lods jle js mov lret jb clc mov dec mov xchg cmp in inc push nop sub sub mov call test pop mov mov adc and cld loopne and loope push imul in movsb out cmpsl stc mov neg cmpsb lds std jge js mov js cwtl inc push mov int jp sar sbb xlat (bad) sbb and pop or add outsl in sub lret xor (bad) xchg lret dec sarl adc cwtl pop mov sub xchg fsubp and leave cld xchg lds xchg mov pop ljmp imul test jnp adc pushf pop shr jmp mov pop add daa pop leave out push push sub push (bad) xor jl jnp xchg aas mov xchg dec movsl fild faddl sub aas pop xchg lret loope sub dec out loop out sbb in sub outsb push (bad) aaa push mov push aas mov mov test mov adc mov insl jecxz push inc sbb dec pusha mov jl adc scas loope mov sub inc adc fwait sub mov mov and mov cltd xchg pop push out jbe adc insl fwait adc sar into mov xor dec sti xor bound test adc aas fwait dec fild lret scas adc outsl loope pop xor cwtl fcomps in add out and mov jbe addr16 add (bad) mov arpl cmc ret adc pop out add cmp std pop inc jecxz cmp clc pop adc xorb imul add adc sahf lods ljmp add adc sub or fld or sub push and sbb loope cld shl int sbb xchg sub add dec cmc aaa or mov out sub stos push iret test repnz mov cld ja push mov xchg or loop out and mov push jbe cwtl mov test mov (bad) xor enter nop jle mov jg jnp mov popa cmovne xchg loope and insb xor push (bad) mov dec dec jg adc outsb sahf pop insl dec push dec popa ljmp dec jmp sbb jmp or data16 arpl int3 xchg shl (bad) loopnew es mov add xchg scas pop mov rcrl popf hlt cmp dec cmpl lock and pop xor (bad) push nop add jle jmp and adc jge (bad) or lods in xor or imul dec push lods xchg test in mov sbb push xchg outsl fs out stc (bad) cltd mov lcall icebp xlat cmpsl test pop and (bad) cmp loopne jbe inc pop adc jb cltd (bad) out fidivl lret (bad) and push dec cmp dec rol xchg mov xchg ljmp jbe les je repz pop mov cmp aas xchg inc pop leave push push (bad) mov push adc stc inc and adc xor fldcw in outsb sbb (bad) adc cli movsl mov adcl mov and mov inc mov stos push adc fiadd dec and jns repz inc stos adc scas push cmpsb lods dec jb pop lahf jnp sbb add insb dec pop std insl fwait jp mov cltd lret lods dec add mov xor ss mov mov cmp idivb mov jae add and cli rol out scas jle cmp sub add sbb jbe and popf mov mov mov jp or push xchg loope sbb ficoml pop loop out (bad) jmp ljmp mov mov dec jmp fcoml jbe inc pusha and stos jne xlat outsb xchg scas mov mov in imul jmp fdivrs insb in cmp or cld icebp dec (bad) hlt and and lret mov les or rcl push ds mov mov cmpsb inc dec cltd inc nop test sub fldl push or xor or jle fdivrp xchg jge aam pop inc std mov notb icebp bound mov adc test mov mov (bad) mov (bad) outsl jl aam stos push repnz sub subl mov mov les fstpt out or jns enter and push jl xor xor add push xchg repnz fsubrs out xor cltd clc out movq jb and (bad) shl and xor (bad) leave (bad) int3 iret mov mov xchg inc jo movsl sbb lods aad push push jnp loopne jmp mov lahf inc xchg sub or movl test sub or sub fcompl hlt dec ljmp repnz dec adc lret les out (bad) rolb ljmp mov jp arpl adc push jge cmc pop xchg cmp rolb call in inc test dec mov imul ja xchg xor dec sbb dec cltd int mov mov arpl outsl and fwait push push cmp sahf out xor out js push jno inc imul (bad) pop xchg or dec jle outsl mov cmp mov mov lock jp cltd mov mov ljmp ficomp cmp mov push adc in add xor push cwtl bound stc adc sarb js sbb cltd push push inc pop xchg xchg pop punpcklbw aaa je repz inc mov sub leave mov push mov xchg mov aaa jbe inc mov sbb inc stos fmuls add (bad) ja adc pusha xor inc lcall push aam jnp mov jle xchg and cwtl test jg push xor hlt in fs (bad) sbb mov movsb add mov cmp adc mov pop int3 pop adc ror div test xchg mov sar push pop out or rolb inc arpl pop and mov inc mov sub mov stc nop pop jl cwtl lcall adc rcll clc add mov int3 call dec xchg jnp cmpsl jb xchg pusha dec push inc daa sub dec out popf rcr in cld lret popa aas or std dec sub jbe scas sub sarl out (bad) lods in pop stos pop jg mov dec cmp xor int jae mov xchg dec xor out divb imul sahf sub xchg insl aam lods pop jmp (bad) or sti cmp sub jge and fnstcw test movsb and mov das push icebp or pop dec pop das cmp les das mov out lds cli jg imull xchg pop dec imul adc rcl xchg xor pop stos mov cli xchg jbe pop bound insb push pop pop js insb jne mov sti pop sbb addl mov jge mov addl xor nop or jge lock nop jne loope out imul inc stc pushf fwait xchg out dec add shlb shrl sbb dec fiadd in push int3 push mov outsb cmp pushf xor and pop in mov inc dec je sbb add xor pop dec pop loope push inc mov dec jle sbb lcall sbb dec cmpsl sti jl xor sarb cli cmpsl mov std (bad) nop inc dec in and (bad) sahf lock daa loop jp call sbb mov push and push jle mov pop mov adc or and jnp mov jle fwait mov int mov add pop sub lock xchg or xor or xor cwtl add (bad) insl mov xchg xlat lods pusha push adc and aaa jo inc popf push mov adcb xor outsl or icebp adc mov out int popf int3 inc jno mov dec lahf and xor add stc mov ror mov daa xchg jo sti loop push iret sbb scas out mov leave sub loop movsb cmp inc daa div popf lahf jno dec adc loope fadd lea aas adc jmp insb lods xlat (bad) lret cld xchg mov jno pop pop xor add or or popa nop dec mov (bad) fistpll or cs test or sub mov mov insb sub pop fiaddl xor add push add popa mov mov mov pop lret ss mov cmc (bad) into mov test cmpsl lods or adc sbb pop out mov hlt mov mov fs cmp dec and (bad) jl loopne dec jb mov lret fimull pop or lods lea cmp pop call push stc int3 mov in mov in (bad) stc add (bad) inc cvtpi2ps mov cwtl (bad) addr16 xor xlat dec movsb ss inc push stos xchg jecxz pop push push pop inc push iret and dec aaa pop fldcw icebp in int sar push cmp popf jmp or mov push loopne xchg ret mov aad and inc sbb cmp push stos push sbb sub sub fcompl adc jmp insb cmp inc out cmp repz jmp fsubl insb in pop pop mov cmp fimull shrl mov mov mov adc mov lods mov test mov mov or mov loope lret adc mov mov cmp or mov sbb and popf and lret leave (bad) aad push inc mov cmpsb lds std scas (bad) dec jg xchg cmp push mov pop in movsb cmpsb xchg push repz mov sahf insb int3 out fadds data16 push push mov sub mov out cwtl sbb test test sub aaa hlt xchg shrb mov push and out in jl popa sub aam cwtl push push mov add lea out pop mov add loop add jmp ja arpl add mov outsb sbb in movsb pop lods hlt popf jmp inc test out sub mov lock cmp cmp adc out das aam inc pusha and sub subl xlat jp fwait std lds movsl fwait addr16 push mov jb dec mov push in in dec push iret outsb xor xor cwtl push lods mov add adc cmp test or es sub sub in addr16 xor mov push lods out js pushw das cmp sbb cwtl imul loope mov sti push aaa leave test pop in pop and mov and enter cmc cltd cld call and dec jle fs jbe gs pop or jmp enter sub (bad) mov dec (bad) pop pop dec insb xchg popa out out pop test mov pop fs test hlt inc into repnz jno roll xchg hlt inc mov jl out jmp in lds daa inc jecxz lahf cmp hlt sahf fstpl ljmp cli inc xchg mov jbe sub cltd fidivrl mov cli sbb fistpll iret cmpsb and add inc xor sti jbe hlt in in xchg scas adc (bad) jb cli arpl aaa push imul mov aaa mov lock lds pop (bad) fiaddl pop lods stc pop sahf sub test add loop daa int3 jnp sub adc push adc pop inc mov icebp and pusha mov hlt out jae adc push lds or scas (bad) sub or mov push rorb out inc or mov ja in jo mov fnstenv test in sahf int3 clc lods out (bad) imul imul mov and mov (bad) mov icebp loop and pop out out lret sub stos mov leave cld pop xchg addr16 sarb aaa std sbb adcl lea je fucomip pushf adc dec (bad) ljmp fildl lret add jne loop dec dec out inc mov enter mov test je cmpsb jge imul movl inc jl sub cltd mov loopne xor cwtl add mov mov cmp or push icebp or mov hlt out mov inc lret mov mov jne je cs xor aad movsb adc inc mov (bad) int andl lret (bad) jno stos cld xor pop (bad) and jb pop mov imul sub inc mov jne lret test nop pop pop push pop icebp enter add lds mov or mov idiv pop les mov xor adc adc sub jmp xor jmp mov and dec adc cmp jnp adc stc push xor xchg test sbb xchg loope mov add jnp mov mov and push xchg nop jae push loope xchg or pop cmpsl push imul fdivs repnz sbb cwtl aam lods sbb dec nop test inc jp cmp out jl jp xchg icebp sti or mov sbb ret test push in sub xchg adc sub mov xchg jl nop sbb push push aaa or add stc push sub jns ljmp repz jb inc and les sub jo stc xchg push pushf and xchg xchg mov dec inc inc or cmp fstp push loop mov sahf int3 fbld and fsqrt dec and push xchg lds mov dec cli int stos popa insl sahf dec ljmp adc jmp int3 cmpsb inc sub das push cmp sbb push mov jbe icebp lods dec mov inc sbb icebp stc icebp leave mov repnz cltd xchg mov adcl iret stc clc movsb (bad) out push fisubrl clc cltd sub mov adc aad xor xor dec bound repnz cltd ja and xchg insb mov clc inc sbb imul xor or frstor pop cwtl ja cltd mov push dec lret mov cmp cmp test xor dec mov lret pushf jmp in addr16 or xchg (bad) fcmovu sbb jmp sbb in xor int3 fpatan jne nop cmc jg data16 jns out pop inc push negb out pop js add int3 sub mov scas pop call add cmp test insb jb pop pop dec (bad) pop (bad) jae sbb test pop std push mov fs sub stos pushf int3 mov mov jle fldenv jno jle gs and movsb jge into xor adc pop shrb fs rcll sbb pop jae cld daa push inc (bad) out dec imul xchg test mov insb pop xor and or xor add dec cs pop xorl fldl mov ss clc pop mov js push imul add or jg cmp pusha cmp out ljmp std or add xchg cld mov sbb sbb std mov out loopne rorb push jg (bad) test daa jle mov xchg sbb adc cmp sahf les cwtl dec mov es pop lods test mov inc cmp (bad) (bad) cmp test sbb pop and fistpl sub pop lds lahf idivl add int lcall mov iret in in fstp data16 lods scas inc stc dec sbb out shlb mov test sbb js iret inc jb pop movsb xor or out leave sbb xchg lods and stos ds cli mov test (bad) lods pop mov arpl mov jmp out dec stos add lret lock fwait xor notl pop pop and add mov pop int3 mov shlb jns jmp lret aaa fstps dec or repz jl pop pop add iret cli add sbb push lcall (bad) mov test movsb add mov orb inc cmp sub rcl lret add aas (bad) jnp pop xchg mov ret dec push je cli into jae inc testb pop leave and jmp adc cmp daa push ret pop adc push inc mov repnz pop iret or movsl nop pop xor lahf mov in adc sbb xchg cbtw or sub and sahf cld (bad) jg shr adcl daa out test call loope imul into scas inc dec jg push dec repnz fcmovu sti mov in inc aad es mov in sbb aam movsb into push sbb sbb cli ljmp jae pop jnp in nop mov cmpsb lock outsb adc dec xor or mov out add pusha xor push jbe stos pop add dec xchg (bad) ja dec lods mov push add in mov dec insl std test cli mov xor mov pusha xor adc fwait pop xchg sarl sbb outsb out inc sbb (bad) into jecxz jle cmp push pop popa aam stc addl fdivrl jno stc cltd push push retw popf xor pop out sahf and xchg dec ret cmc ljmp arpl idiv pop dec jp jnp ds pop adc mov cli sti push (bad) movsl cli mull cmp imul dec fisubr lock mov pop (bad) jge xchg cltd jle into int push add scas push or add sub in mov add outsb (bad) out jns or sti out fildl scas ljmp pop gs lahf cli dec icebp (bad) lea lahf lods xchg (bad) test icebp scas bound aam pop jp popa and and mov fistpl or push dec pop sub xchg lods xor in add pop enter sti sbb pusha jmp adc fldpi hlt mov orl xlat lds cltd mov movsb lds mov xchg sub fwait xor js pushf mov shlb sti sarb stos fbld jg jl sbb rcl (bad) in jbe mov xor mov xchg jnp stc int aaa sbb xchg cmpsl imul mov push nop out data16 icebp add ja xchg mov stos push push (bad) fsts mov pop sub int mov repz cmp inc sub adc rorl jae lods clc sbb and pop and or es repnz jo ds loop ljmp mov test add movsb scas (bad) dec add inc xchg jo mov (bad) gs or inc sub ds je dec loope and and xchg mov and das mov xchg sbb shrl sub bound loop adc jnp xchg add ss jl das dec add fcmovu loop and (bad) loopne jbe (bad) or inc pop xor dec in ret pop out (bad) adc mov std jno shr push cmpsl in shl or inc inc aas xor int3 mov xchg and jg cmc xor icebp mov add idivl icebp addl je es cli lds gs out fdivp add jle mov push pop iret pop pop mov mov mov pop sbb iret rclb shrb sbb in mov inc inc jb (bad) imul push dec inc je lods xor stos xchg lock push dec pop xchg mov movsl dec subl js mov lods (bad) imul in into push push dec fwait outsl in lcall mov int bound jp xor pmaxsw hlt jmp cmp shrb (bad) insb into pop inc mov fdivrp xchg sbb popa mov imul scas scas jnp test shlb adc push inc jns and xor sub sbb lods lret lahf mov orb outsb xor aaa cmc push mov and pop fildll popa xchg mov scas xor sbb xor cwtl mov cmc cwtl mov add loop pop ds add sub (bad) push jnp and xor mov in jle mov test int3 sub or leave rcrb lcall sahf mov scas into cmpsl jae mov push in pop test cltd push jne clc addr16 jae das pop jge std mov push inc push jg pop (bad) (bad) xchg mov fidivr push xchg inc inc mov cmp xchg popf iret stc and dec pushl jecxz (bad) or xor sub fsubr dec push sbb mov add dec xlat xchg movsl das out sbb dec negb xchg xchg (bad) notl test or imull inc (bad) cltd dec pop jg data16 daa push cmp cld inc adc and sar mov insb cs (bad) pop or push rep loop (bad) jmp jns dec cmp inc pop rcll inc (bad) hlt lahf push std fdivrs mov push addr16 clc cld sub sbb icebp push insb mov sbbl inc cmp mov or sbb dec or iret mov rcrb dec imul pop and pop pop xchg fs adc cmp jnp pop adc push pop loopne scas mov clc cmp aam mov (bad) and inc mov iret pop mov (bad) dec lds jmp xchg fs dec jle adc les and inc scas les in lods jo div pop inc lret lahf pop stc dec mov je inc and jne (bad) push dec je movl pop mov loopne repz mov sub fisub fidivl jle dec mov data16 outsb xchg mov sbb mov or (bad) mov mov sbb hlt int inc pushf aad xchg and out test pushf imul outsb push sahf cmp mov sub sbb out and in mov ror pop cmpsb adc (bad) lret repnz mov out test push in sub cltd add out cltd mov scas lock dec clc mov mov inc cld xor fisubrl inc xchg push push sbb int3 ret cli shr (bad) mov lods das (bad) or and ret mov sar cltd inc test loope imul je aam dec gs stos dec lahf in push mov mov fwait aam mov out ja dec dec fistpl mov jno movsb (bad) xor and add pop cmpsl sub push ljmp daa lds addl mov mov popa sbb in push das jp movsl inc add inc add add cli das (bad) jg dec loope cmp cltd pop js (bad) dec cld sbb fwait pushf push in shlb sub fistl dec stc xchg push ror insb aas mov jg sub incb push cltd cltd je inc push pop popf sar xchg adc pop fsubl or insl xor sbb xchg mov enter and or stc mov cmp pop int3 mov pop and add mov and adc fwait adc arpl or and or sbb or sub cmp mov lock sbb outsb sarl push xor and cmp imul dec in aas lahf arpl push dec clc sub inc in imul lods xor icebp mov insb pop sub ja add stos imul (bad) and iret adc adc jmp pop dec (bad) mov push push mov dec lea mov sbb jno std dec scas jle mov (bad) lds jo pop sbb jle popf cmp leave push in pop popa fisubr dec leave push jne mov pop add or inc and mov sub sub call out push cltd imul mov sub out xor inc and sbb outsb mov repz and push or xchg add push xor outsl loop stos xchg add insb in mov loopne hlt add out aaa inc cmc xchg nop dec (bad) repnz popf ljmp andl dec stc je add dec mov inc mov inc pop lahf ljmp data16 popl in inc jmp pop mov subb not pop mov sub imul inc and int3 fsubs test fs dec sbb inc insb es jmp add jo das les xor mov sbb pop dec pop inc push mov mov and (bad) stc cmpsb pop scas mov add dec mov pusha hlt mov sub sub ds (bad) cmpsb sbbl pop inc dec idivb (bad) jno addr16 xor fstps push sarl xchg pusha cmp cli stc adc inc pop scas and xor or push xor test cmp out lods xchg lea jg lret outsl and sub mov sahf and mov and addr16 dec rcl out clc sub movsb (bad) ss ror aas push stc xor das out jbe push loop push stos add sbb imulb jl pop inc push dec mov and out inc iret (bad) iret aas mov xor daa (bad) xor mov das out xchg inc lock test insl outsb or jge jnp (bad) repnz xor jmp call push and sub outsl test mov leave mov pusha pop sub mov xchg in ss negb pop mov mov (bad) scas jecxz cmp les xchg or pop mov xchg adc dec ret and cltd jge mov and sar test out pop and jge jle dec inc sbb stc sbb jns push mov lret jg pusha cmp je repz or mov (bad) in pop pusha pop movb pop in pop pop and lret rcl pop push adc xchg sbb mov jle stc pop popl sbb lahf adc sarb mov inc in pop mov dec cmpsl (bad) in adc inc lea dec ss es jmp or cmpsb jnp fnstenv and push fisubrl into xor pop jmp imul sahf mov push inc cmp xchg mov xchg lret cmpsl popf pop sti adc sti loope test mov or mov ss mov popa mov inc add test sub test mov pop test xchg outsl pop in mov cmpb mov pop (bad) xor ret scas pop push pop cmp sbb mov jmp decb lds xchg or and push jge (bad) or les cmp cwtl push push cmp dec aaa cmpsb mov push ret hlt cld mov stc sbb shl cmp ja ffree out les xchg (bad) outsb push mov cmp xlat xchg adc std mov mov (bad) jbe jl jns inc inc insl mov pop aad adcl adc adc sbb or add push dec sbb lock mov pop adc ljmp mov or ret imul (bad) jge lock arpl scas jo std fdivl iret mov jo cmp jecxz xlat lds test xchg cmp call adc push xor popf jmp and cli xor pop inc xlat sub push mov jecxz ja js enter and repnz dec mov and mov cs std pcmpeqb pushf imul icebp ja jns jo sbb mov pop imull clc mov jmp (bad) pop andl movsb xchg dec sbb jmp push and mov pop push lock (bad) (bad) psubb adc mov pop pop into idivb popa dec fcoml clc (bad) sbb jbe sbb mov dec xchg cwtl mov loopne in sbb out decb sbb mov xchg sbb mov mov ret adc mov push jno inc arpl ja insl and xchg dec sbb cmp sarb xchg sub pop lahf in dec pop addl ss lahf sar cli inc loop or sub mov xor ja cltd push mov daa mov xor push pop push dec jns out test add push repnz push mov dec ret cmp jl dec lcall xchg pop in jl daa ja loopne test mov xchg ja or sbb jno dec mov mov cmp adc movsb cmc repz loopne lds mov xchg xor scas inc mov jbe out shrb mov push xchg pop fistp pushf scas xor icebp sub aaa lcall adcl pop jge mov mov push pusha jl into inc in or ds dec ljmp jnp daa xchg adc mov and mov push or out fcomip repnz mov push lods push lret incb xchg lcall adc mov imul mov pushf adc jmp jmp mov xchg fiadd push jmp dec cmp cltd pop adc aad scas jae sbb push add call cmp in adc adc ja orl dec pop jecxz adc in dec test sarb or mov sub cmp mov out jmp es lock test das data16 sub mov cmp daa daa ja data16 cmp ja js out mov adc je inc push mov dec lret cltd jno mov out mov out pushf sti jae loop add pop mov cwtl mov loope stc mov add jmp push fstpt push jmp outsb movsb push add scas loopne push sub mov lock inc insl cwtl add lea insb and lds sbb jae mov mov sbb bound pushf push lods outsl adc sbb int3 inc lds in add inc fimull dec inc cmpsb das out clc or shrl xchg dec out fdivr fnsave nop adc pop insl sub ficomp mov ja daa fwait xor cld dec push test cmp cmpsb add xorb xor lea ficompl cs sbb xor jae jb fs or add mov mov ds in inc or inc mov jae lret dec xchg les cmc imul shrl (bad) mov add jg or pop fmull pop scas push (bad) into lret fisttp std pop cwtl (bad) pop lret or xor sbb sti pusha es mov or push enter add push jmp rclb fwait rcpps test jl stc out int cmp xor push and dec mov lods push inc aaa (bad) jg add adc sub sahf xchg (bad) adc inc pop inc std aam nop fcompl js lock push xchg adc mov jmp (bad) jmp sbb pop out dec ja or clc aam sahf fist xsha1 cmpsb push pop cld jnp adc (bad) lods into xor adc adc int mov dec jmp push pop sub sahf in pop shrl inc xor (bad) repnz fcmovnbe or push das subl insl sub jl fs pop (bad) arpl pop inc push add stos stc sub bound insl inc pop xor (bad) mov int jecxz jecxz bound mov mov and faddl call mov hlt add in mov dec inc out jp xor xchg sbb inc jle les dec (bad) and and lcall shrb (bad) and scas adc or pop adc mov xchg or ds ljmp adc fcomps push adc (bad) cs mull imul mov xor push add popf jbe inc pop inc inc sub iret sbb cmc call jl rolb outsb lds sbb push and ja jl out sub pop adc scas adc mov daa mov mov push ror cmpsl inc dec icebp int cs aas mov xchg stos fs or faddl add pop dec pusha push or loopne idivb (bad) out sub sahf ret xchg stc je fadds jg xor data16 les inc std mov xacquire icebp push or fdivr call je leave mov dec jmp test inc mov ja jl xor pop sub les sbb (bad) inc xchg dec inc push bnd enter push shrl xchg in xchg test test and mov lods andl sbb xchg mov cld out jmp in pop mov das mov xchg ljmp pop add inc (bad) into mov cmp push mov push mov popf pop jae fldl and stc cmp xchg mov aaa push mulb mov loop andb out xchg sbb dec xor mov cmc (bad) dec mov clc in xlat lea sbb mov int3 shrl mov leave int sbbl insl inc lret popf ret movsl mov lea mov repnz cmpb test cs and sbb xchg testl or xchg inc pop imul data16 inc cmc das and pusha test and adc sbb dec fmuls jge (bad) dec adc adc insb sti ficomp fldcw pop fwait mov mov push jo sbb in xchg jbe mov inc inc xor loope xchg jo mov and loop out pop imul xchg aaa pop xchg push std push sub adc sbb cmp sub out jnp jno (bad) test xor mov rcrl scas data16 ljmp mov cmp pop mov push test add nop mov push xchg imul shlb push and popfw fwait sahf push jmp fs cld add or adc jae lds xchg xor popf xor icebp subl xor pop inc jp or js decl inc inc jne mov sahf push xor jecxz and push dec mov lock mov jno ret push outsb jns mov int rcll mov fcoml mov ss inc sbb jno int std out sahf icebp es pop dec adc shll inc sbb sahf mov push test sub pop mov les out scas leave inc or push pusha cmp mov lods or adc lods adc in sub sbb mov mov push adc sub cmp pop adc dec pop xchg xor adc sarl rolb sarb call jne cmc rcrb jp outsb stos inc pop addb push test lahf test cli adc mov jne mov ss pusha sbb out xor sbb xor cs add xor cwtl push (bad) dec and nop and dec addl pop xlat xlat mov xchg ss ljmp aam bnd std roll js int3 dec inc lods sub js push hlt push leave ljmp push out in sbb jmp push dec jle dec mov test iret pop (bad) test (bad) dec jg dec icebp mov scas dec rol jbe insl or enter imul incb lods pop lods into fucomp mov sti cmp in paddusw jle add fbld es xchg hlt xor rorb pop jle bound in dec iret das je insb scas fucom (bad) in push scas fs and enter push je sti stos add mov leave or cmp add aas ret add add cvtpi2ps test cs inc dec inc lods or inc les lahf and xchg icebp xor jmp outsb xchg mov js popf fsts stos cmpsb or sbb cmpl rolb push xchg adc sub pop leave fucomi push sahf jno fcomps sbb pop daa fwait mov (bad) pop and sbb add and sahf in mul daa mov dec jp cmp test dec mov (bad) cmpsb insb sub add sahf mov mov adc xchg test or aas (bad) ds stos ret inc mov xor jne (bad) je xor cmp jmp push call or int3 or aaa movsb push sbb daa xchg sub push in lods imull and inc inc mov cltd adc enter pop add call std out and (bad) out outsl sbb std insb in in cmp rol in enter stos nop inc fcmovnb mov add xor je shld jns loop into fstl aam jae imul lods sbb mov test imul inc and mov fildl bound fild add jle rorl push bnd mov imul xchg sbb test lcall stos lock in and xchg loope pop inc add ss mov (bad) (bad) jae dec pop dec hlt in mov mov sub xchg dec and das das faddl aaa or je pop repnz cmc pop add or and cld cli sbb xor jno in and jnp xor stc in and cs fs mov push and lahf pop lea sub jecxz mov push sub mov jnp sti insb repnz lret mov jnp mov stc ror out in mov shrl sbb pop mov pop enter sub cmp sub cmp fsubrs dec xor dec repnz push jo xchg repz lods inc or sbb test xchg mov mov loopne add jns mov add cmpsb nop xchg xor mov lcall xchg jle jge mov xchg scas enter test push jnp push or pop jmp into pop fstps lddqu aam enter aas neg gs pop lret popf cmp add dec out cmp jns enter cmp xchg push cwtl scas stos or roll push pusha sbb sti xor in push jmp aam scas in cmc sbb jle mov dec dec jge xchg data16 xchg xchg xchg push scas and stos mov xor xchg enter jecxz in lds mov (bad) cmp jae in push adc xchg dec pop xor lret sahf daa orb lds stc dec xchg int3 jp xchg movsb aad mov pushf jge jb imulb arpl mov push popf mov mov pop cmp loope cs test jbe (bad) xchg push mov sub dec cli jno clc cmc or stos or sbb sub xor das cmp jecxz movsb sbb int inc inc xchg add into out and roll nop std mov xchg mov pop pusha pop insb insb xchg xchg test fs cs mov push test sbb lmsw jnp scas ds aas mov aad jbe sub sbb push jl lret mov mov and out lods flds dec mov jecxz mov sub data16 icebp rolb mull mov mov push loope movsl add push push (bad) aas cwtl fisttpll outsb mov dec ljmp cmp stos or dec pop (bad) lock aam scas add test jne scas sbb push mov push lea std dec stos repnz or adc sbb dec push pop decl inc iret stos inc out push fs pop jne push cmp and mov add mov std sti xchg inc pop jno popf aaa lods push call stc cmp mov loop push push push mov test add cltd add imulb in xlat mov shll xchg push into jbe pushf faddl mov mov push dec testl dec or and negl and out jo mov std stc pop cwtl and jp or mov fsubs movsl clc pop push push insl dec out cmp mov mov jbe out cmp mov sti repnz cmc pushf fcmovnb or inc iret cmovs sbb lahf push mov jbe mov push dec mov out mov cmp fsubrs pop mov fimul pop jo lods (bad) in jecxz push std xor xor and sub xchg cmpsb movsl xchg fisub sub mov sub lahf loopne int inc test in push jo jp jnp enter mov adc in sub adc mov and jo cwtl jg or sub (bad) and and or (bad) js in or and aam sbb movsl iret sbb xor jge pushf loopne or loope dec push ss mov hlt and test pop (bad) insb mov mov sub inc (bad) loope jge mov push jp inc test std imul arpl inc aad push dec aam fisttpl fnsave sub dec sbb in (bad) call fstl jp push sbb loop jns leave std test dec shrl mov js inc inc add jmp test sbb fnsave jo xorl xchg xor (bad) and jnp adc cltd jge pop int3 sub jge lcall push enter mov mov xchg cmc or aaa enter mov (bad) repz push add loopne inc adc loopne pop lret addr16 push add xor mov mov dec jb sbb pop ss sahf rcl jle sbb test push ss iret gs jmp inc int jns fs pushf repnz or ds loop push dec sub imul xchg loop (bad) sub push sub jp cmp cwtl and imul mov mov roll or fsubs outsb or ljmp in mov push lret nop daa es mov push ja shrb fs xlat enter jecxz (bad) fdivs dec (bad) (bad) aas cld lahf subb test loop or shrl (bad) out xchg inc mov popa xchg lret push mov adcl inc sub or and add inc in imul es mov pop push jle sub int3 inc mov in push mov add imul jbe fildll cmovp push (bad) enter lods daa adc sbb ja jno pop mov jmp push or or in popa fidivl jmp (bad) imul in mov fsubrl xchg mov (bad) pop mov ds add mov push adc push cmp pop push jge mov jg mov xorb adc dec sub sahf mov sbb dec xchg dec rcrb sub cmpl sbb out push jae sbb dec (bad) mov dec pop dec je and adc ret arpl xlat ljmp xchg sub mov pop inc and ljmp xor imull pop loopne mov pop push sub inc in data16 sub add lds nop out test xchg dec test jg mov sarb push lods mov pop out mov jmp pop push adc or xchg sar clc jge ret pop mov add (bad) sub scas (bad) ljmp fstpt push loop mov push mov aaa mov incl mov enter test fnstenv es imul push scas aas lcall in sub test testb push lock aad xchg sbb dec mov repnz int3 mov cs dec or andl cmp mov sub lds insl cli xor movl xchg sub adc pop mov sbb out popf lcall jb aas insb dec aas mov xchg loop jecxz loopne out out mov xchg fmull cmp sti mov sbb push test outsl aad jl adc dec rolb mov roll xor mov sub cmp xchg sub cwtl jnp pop popa mov dec sub sbb cmp clc ret pop cmp or dec mov xor aad xor cltd js lods cwtl fcmovbe ret bswap lcall subl xchg leave shlb ljmp das cmc push mov xor sub cmp sahf mov (bad) ja imul adc loopne imul pop test ret mov aad imul inc push aam in adc mov push outsl and (bad) cwtl pop insl dec nop push add cltd adc daa in sub lret cmp and out fsts lock pop dec bound xor idivl stos aaa (bad) mov aas clc sbb cmp push jl xlat lea in test in mov notl pusha fcompl sti in inc (bad) xchg std cmpsl (bad) xchg xchg sbb sub inc jle fwait cmc mov clc aad pop jns or mov inc xchg lea xchg cli jecxz ja mov pop jo lods stos and dec test cwtl mov or test repnz pop cmpsb lds repz stos and push faddp lahf leave cmp adc mov les insb loop lock dec jb ds push movsb adc je cmpsl sub ja xchg in pop addr16 fildll rcrb and notb push push pop pushf jnp iret inc mov mov mov jecxz jmp nop add or sbb faddl sub rorb in fstpt sahf mov dec sarl aad arpl je dec scas or rcll jg lcall pop cmp mov and or or mov les fnstenv lods xchg loope loope lea jo inc movsl ds (bad) shll add fnstcw test (bad) mov test lret dec sarb jle (bad) addr16 mov sub jno imull loop pop das mov cmc inc mov mov ja pusha fucomip mov add ds cmp push (bad) lea inc or hlt (bad) mov pop pop inc cmp dec mov jb xchg adc push pop jb cmp pusha jns in adc lock fwait lock dec pushw inc mov outsl jg sbbl cld pop test (bad) fistpl jnp movsb mov add pop jb xchg push daa jo repz mov aaa gs ret scas and xor movsb in rorl std and sub aas rcrl inc dec sbb dec and pop sub lods mov xchg (bad) cmp fcoml adc adc inc fcmovb movsl cmp and out jno,pt insb jge adc dec push mov xor push sbb sub cmp insl push nop dec and lret inc in adc xchg lret stos shrb mov dec cmp std in pusha cmp jle xchg dec call in sub mov lahf in xchg dec cmp sub mov mov test mov dec mov std mov jp dec aad push mov movsb fnstsw pop test fs subb lock sbb in jae mov pop mov pop or mov jmp xadd sbb enter enter fisttp daa lods xchg adc pop pop add movl in popf fsts add xor loop test mov pushf add sub cmp out sarb dec test shl mov push loop popa push popa repnz sbb mov aaa mov cmpsl inc or inc pop cli lcall jns ss arpl dec nop push rep mov push in bound jb ret shlb gs pop clc aaa (bad) push icebp inc inc jno std std dec scas mov cmp mov mov lret adc adc or jmp pop cmp push sahf mov popa sub and movsb dec data16 outsl sub adc (bad) xlat sub rolb loop mov jno sti das cmpsl outsb cmp jbe into (bad) mov xchg dec mov cmpsb shl jns or test add mov sub xchg mov pushf xlat fs or mov pop ljmp (bad) jb jae (bad) (bad) sub imul mov xor sbb cmc xor (bad) jle test push sub adc pop xor sub pushl test pop addr16 incl jmp sub inc mov pop aaa dec push jne cs or dec test sub setae jbe loop adc dec shl xchg mov test ja adc mov adc (bad) aas pop mov in pushf push dec and mov ljmp dec inc mov scas pop fwait dec jo ffree xchg cmpsl jg sti add mov xchg sub roll out dec or lods mov das or jp pop adc out imul xor popa push inc dec fwait ret inc ret out push cmp sub in (bad) mov int3 stc out repz adc adc pop adc aas sbb add int jbe nop (bad) sbb popf std cmp dec inc inc push push fnstsw jnp adc xor test sub lret add pop test sarl cli sbb lahf push in stos add fstpl ds push popf pop std imul fldenv mov ja imul push das dec cmp sbb or mov (bad) loope pop sub cmp mov (bad) aad lea jg sub inc in jno and fnstcw jge push mov test jns shlb push or xor add std mov push rcrl pushf jnp jb out adc jmp test or jmp lods scas and sbbl lret mov pop test jne,pn imul xor insl sub pop in jns xlat and test lods sbb xchg in cld cmpsl mov lds mov aas mov sbb cs xchg or (bad) mov call movl mov cmp push loope xor jg stos sbb imul cmpsb nop push jnp jp imul lahf dec into out or sbb pop or xchg fstl cltd clc (bad) insl xor bound aam dec jo test cmpsb mov cwtl cmp les push push test mov test ds movsl fdivrs fnstenv dec cmc fild sbb sub mov out jns sub hlt cmp pop mov and add ret xchg test stc ret mov adc mov pop iret sti mov das test cltd mov jo mov int3 push mov jbe movsl imul loop pop or jmp or push inc fdivrl rorb ds dec adc xchg dec in (bad) es std insl or pop rcrl mov sti dec xchg cwtl cwtl jns mov xchg aad mov pop hlt mov sbb je inc mov xchg mov imul pop data16 sub incb mov cmp in divl enter jmp iret lea xchg jmp xchg mov jge (bad) das pop jecxz mov fldenv mov adc imul (bad) (bad) mov icebp mov mov mov inc leave mov adc movsb test cmpsb out xchg push inc xor push dec subw adc cmp loope sub dec icebp repnz cmpl sar pop mov jp mov jmp aam mov out inc fmulp inc dec xchg nop adc popa int3 pop imul (bad) or ja lods sbb data16 mov push stos or scas call or inc xchg pop fidivl mov xor loopne jecxz inc call and inc inc lret mov adc add dec and mov dec mov xchg negl iret xchg faddl cmpsl (bad) mov jecxz mov xchg pop cmc lods addr16 add sti insb inc lea xlat push sbb stc in jg xchg lea mov shrb sbb and mov pop jnp or mov mov push test mov les push lahf mov mov mov mov inc sbb or lret inc lcall dec idivl cmp test (bad) (bad) sahf (bad) xor mov inc mov iret dec jmp daa pop mov dec inc inc rcl (bad) mov mov pop cmpsb or mov icebp and das int3 cmp and inc enter test jno lret stos pushf mov add dec fstps mov cld or inc inc fsubs mov shrb mov xchg add sub in mov xchg scas int3 call inc call pop dec or xchg adc test mov ds and pop mov push mov dec outsb sub fwait icebp repz lret aaa push test mov sub stos test mov xor push and add test aam jge mov test test or repz pusha call and push cmp pop pop mov pop outsl addr16 out xchg ret sahf das push add aad jb jle push adc mov inc add sbb mov lods bnd outsl test adc push test adc ficom mov and je push push mov movsb push out in in sub dec shrl pop push sbb icebp data16 out in dec or adc ss mov pop sbb out cmpsl aaa cmpsl cmpsl movsb mov push cmpsl fldenv mov mov in jge std inc xchg mov ljmp bnd outsb pop repz adc gs insb sub dec xor fs push jb repz mov pop stos rorb dec add sub iret mov scas sbb or xchg inc jmp in leave push pop ljmp mov ss into and fisttpl popf lock or xor jecxz scas aam push movsb insl cmp cs push push mov aad fs cld push dec jnp push xchg adc xlat inc pop (bad) xor stos xchg jno test into push in scas mov imul (bad) test jne fldl xor pop in xor xchg xchg sbb lods xor add inc push xchg inc cmp fistp fcoms stos push loop dec pop imull xor js push in push lods jnp mov mov xchg movsb sbb xchg divl int3 cwtl jne xor movb inc mov sbb add or pop fisubl cmc adc in rcrl cwtl (bad) lods jmp pushf sub daa ficompl xchg inc clc outsb js int3 ror sub jle stc sub jge push out (bad) and adc clc or mov mov jae cmc mov stc lods push orl flds int test loop (bad) icebp fistpl (bad) idiv jnp xlat test iret dec mov push cli mov mov imul jno dec hlt mov (bad) pop push (bad) stc sbb pop dec sub mov data16 int3 dec fdivs jbe sahf (bad) popf xchg sbb inc mov jae ljmp cld popl idivl leave adc sub pop std (bad) dec out cmpsl (bad) mul fs push or dec imul int3 lds cmpsl pop add repnz sti pop push and mov andl bound cmp lods es cmp (bad) sti addr16 mov inc pop hlt (bad) mov movsb rorl jns rclb popa (bad) add andb mov (bad) loopne xchg add jle pop cmc jmp xchg orl sub insl pcmpeqd (bad) push fadds iret dec lea jecxz inc (bad) xor fwait arpl pusha lret mov push ret push push mov jge das cmp lea sbb jge inc mov mov imul inc sbb ljmp and add jg ficompl fisttpll leave jb bound fnop loopne outsl pusha or pop mov jp jl push loope push pushf push ss (bad) testb add (bad) jle mov mov jp mov push clc test xchg js push xchg jp inc sub jmp inc notb sbb and std lods je xor pushf daa cld jae (bad) imul (bad) leave sub sub mov dec lods addr16 adc jbe aas dec cmpsb shrb inc xor scas add and inc jp es sub jmp cs dec jmp in jnp gs add ror loope pop mov stos add sbb mov dec push aas insb cmpsl fsub pop xchg sysexit push hlt nop int3 movsb mov loope addr16 jmp repnz mov push repz aad xchg call addr16 (bad) cmp lds lods adc mov xchg shrb idivb test xchg push sbb mov push scas add cmp cwtl jns mov ffree xor stos in addr16 fildll sub mov sub xlat pop int jb mov push push mov outsl je data16 mov dec in jnp inc jb mov and inc insl popf dec out popf fcomi cmp sti jp dec outsl imul adc cmp ljmp pop out or mov sahf ror mov sahf cmpsl and ret push adc dec into and pop addr16 adc jg xor jmp inc or cs mov push repz sarb sbb push bound xchg push stos mov sbb mov xchg (bad) iret and out fcoms int or shl mov mov pop mov insl shrl jns sbb out lahf js inc jae pop cmp jbe icebp aas push cli jbe jae jno in (bad) sub imul call sub cmp dec in cmpl das dec push imul push or rcll fmul push int3 rcr movsl jnp insl hlt lods xchg sti lret lock je jnp icebp jge rorl jge pop sti imul cwtl sub push sahf mov leave adc clc test (bad) stc sub fs leave mov hlt gs push ret dec mov xor scas shrb int fwait imul popl (bad) jnp xor movsb pop incl cwtl je loop pusha sarl adc and idiv mov iret pop clc inc and gs lcall insb lds push incb and (bad) hlt enter cld int xchg das or clc icebp imulb sahf adc dec std push mov push sbb in test sarb adc out hlt xchg jl sahf fisubrl inc sub sahf mov cmp pop std mov test jge out or decb mov test in fwait xchg jmp fmuls xchg pop addr16 push out add dec xchg imul je dec pop pop cld sub xchg (bad) aam ret add pmaxsw add push ja push movsb sbb mov decb or mov aas add adc or dec test leave jmp push arpl and ss mov sarl std or enter jnp scas (bad) std icebp mov stc daa adc cltd or popa hlt mov jge scas inc out or (bad) test xor jnp scas adc push leave lods sub push std or dec dec dec mov add xchg test scas stos add lds xchg jnp mov mov lods or jge lahf pop rclb (bad) xor pop jmp fldt push (bad) sbb cmp in or pop call cmp mov (bad) out push push push lods lods cltd dec popa addr16 in pop cmp les mov cs iret (bad) in int mov fnstsw push lcall out or pusha push mov out pop xor and xlat movsl or pop das adc lea mov push mov mov xor push and ret je and loop push (bad) or cmp add xor dec xor jns ss xor jne mov pop dec pop (bad) fiaddl stos inc or es and insl mov (bad) xor sub and pop inc repnz add cltd inc imul pop mov sub pop xchg out in sbb jl mov addb add mov mov mov xor into cmpl xchg jnp inc push jae (bad) (bad) je mov cmp cmc lods jne dec fs int3 pop aad cltd push sub cli mov lea mov (bad) stc xor xor adc rcl in popf fs iret sub xchg cwtl adc cwtl push pop pop outsb scas push pop push cmp sbb (bad) jg ret push adc int sbb mov push xchg (bad) pop or inc jmp xlat imul les imul fwait mov mov pushf xor shrd jo icebp xchg xchg int3 mov test imul imul lds lods repnz lahf xor pop xchg mov out dec imul fwait es xorl (bad) mov stos cwtl je mov cmp jle sahf mov ret and cltd idivl (bad) testb xor add test pop xlat aas inc fwait pop lret sbb loope sbb xchg jnp fiaddl jge cld aad inc jnp nop pop movsl gs mov aad fsub sbb out mov std pop inc mov gs jg ja xor sbb pop or pop pop in sahf shrb in int3 pusha xor mov hlt out adc inc repnz (bad) jmp jae cld lcall out inc jo out in jne aad mov (bad) sub notb scas jne xchg mov sub imulb cld or add adc push sbb fiadd and enter adc pop cmpsb out call fsubrs into dec push fwait jle std scas jns mov lcall xchg cmpsb sub or inc fwait icebp cmp leave adc mov dec pop test fucomi mov (bad) ret mov add pop dec loop lods pop mov xor (bad) jecxz in mov cwtl xchg cmp aas mov mov inc xor pop pop mov clc shr ffreep sub repz sub pop xchg inc add xchg je pop out out mov rcr out sarl jp mov imul arpl fwait in daa lods sub xor or pop xchg or repnz jne out and or and xchg ret repnz idiv jmp or ja push jne push and imul hlt adc mov adc jecxz or stc ljmp inc (bad) in fs daa jmp jecxz inc dec pop out add dec clc or data16 out cmp pusha int sarb cwtl pop pop (bad) jg stc scas push in (bad) mov xchg add mov push dec clc jae pop mov je out push or fwait lods dec sub xchg jg hlt jg push add mov std rol nop sub pop sti push ljmp fwait pop lock xor pop addr16 shrb out inc adc std pushf pop sub xor int subl sbb cltd adc cltd jae inc std ljmp sbb jp push push fldt and mov incl mov and mov lahf mov fstps mov inc push mov fwait adc cmp jg imul jne push orb dec (bad) std dec mov cmpsb aas pop pusha jl push xlat lea xlat xor add sub mov das add xchg push iret ss jb (bad) mov iret loope xchg mov jne xor loop js jl test and mov sti and pop jnp cld inc cld aas adc imul add shll dec pop jg xchg ret (bad) mov repz sarb cmp ss dec or adc fisubr or jnp mov jbe and pop lods jle mov cmp shl sbb cmc and ss mov out icebp mov in sub mov adc stos stos hlt aad mov mov dec mov test xor lret xor test push int3 mov cwtl dec (bad) mov and ret add jo jp push (bad) jae mov gs outsb lock xlat pop std rclb jb push fdivrl and inc mov cltd jnp fs push sub lods or fadd bound mov (bad) xor fwait in mov dec cs sub and in rorb pop int xor out jmp mov xchg ret mov sbb jae and mov mov lcall and lcall mul sbb push shlb sbb call aaa add mov jmp push in dec test mov or les xchg mov mov sar mov mov cmp mov jmp stos fidivl or testl xor sbb inc sub adc dec repz test lock jmp outsb adc mov loopne pop adc or rol mov or lcall sarb outsb out insb pop push into stos push movsl pop dec sub pop lea pop insl mov je sbb mov shlb cmp jge dec xor and jecxz iret pop nop sub leave cmp jbe cmc movsb ret fnstsw arpl add (bad) insl sahf lcall into repnz ret mov jg push outsl sub cmp cmp push mov mov jno cld fdiv and inc mov mov fimul cmpsb xchg lock shrb test fdiv lahf hlt jbe dec mov dec popf or sub adc lods test dec stc es inc lret cmpsl xor out sub (bad) or (bad) pop or aas insl mov and (bad) jae push dec cmp adc push sahf adc test das cmp fildll jge (bad) and (bad) jb ds push and test (bad) xchg ret fmull mov (bad) sahf adc mov sbb dec (bad) mov clc ja movb xor and xor (bad) jmp mov jp loop arpl (bad) sub adc pop cwtl jno mov and idiv adc arpl scas push outsl outsl (bad) or or in mov sahf xor aam push mov and sub adc loopne mov aam movsb jnp pop mov iret xchg xor add out mov fdivrl jo int cwtl test sub cmpsl add xor int3 sub dec repz sub outsl mov out push mov xchg mov adc outsb add adc fnstcw mov mov jb mov mov and lods or iret or das fstp mov push mov push xor jmp aaa mov scas mov mov jae fmull pop jae and in jae mov push fwait cs pop inc jno cwtl sub push push out add into in dec stos stos nop sub push in aaa addb jns jge mov mov movl pop mov negb roll add dec mov xchg in pop sbb lea cmpsl xor push lds in inc pushf push rorb addb daa ds dec dec je jecxz clc aas and mov jmp arpl insb jl lea dec mov mov bound in dec fisubrl in movsl imul mov push inc adc xchg push pop dec hlt ljmp sbb xlat lods ds ja xor sti mov sub mov pop and and cld push rolb roll cmp inc sbb ret sub xchg jbe movsb jns aaa cmc adc add cmp or dec iret adc addr16 outsl sti dec xchg cmp sbb inc (bad) clc jnp in mov adc lock jmp mov loopne pop mov xchg imul stos jge es hlt scas cmpl xor scas or jne sub push sub out mov and inc (bad) or mov mov pop sub stc inc ss fs cmpsb (bad) push dec enter in jnp push adc fcmovnb inc xchg mov dec jno push dec jo lock sbb sub pop popa cs xchg ss xor xor xlat jae mov pop inc mov (bad) popa ja adc mov push jns lods in outsb sub leave (bad) lods stos inc adc xchg mov mov iret xor mov jne movsb mov movsb test out add cmpsl sbb adc sti imul ret outsl push mov jp inc push lahf in pop hlt movsb lahf push stc xlat les dec adc xchg xorb les mov lahf push xor and stc aaa ss std inc mov aad and gs test push (bad) movsb mov xchg dec stc mov nop loopne xchg xor cmp outsl fstps mov pop cli cmp add testl lods out mov in sub sub fwait xchg mov sbb mov (bad) out cmpsl mov stos cmpl add pop sbb dec cmpsw mov sbb in cli pop adc xchg xor pop les cmp or loope sti xor les jge loope out mov cwtl xchg jns cli dec cmp (bad) dec mov cmp sti adc pop jb rclb cmp or call inc js mov es pop jmp hlt mov sub (bad) and sub mov mov stc or mov test pop cld cmp xchg lock sub push cmp mov cld lods andl mov mov jno int3 mov repnz inc scas (bad) pop orl aas imul loopne aam negb push fwait xor xor lds cmp push or mov and and sub dec iret push mulb xchg dec push lcall add mov sbb jbe stos pop xlat push adc fisttp adc or in pop adc fdiv fistpll loop push es mov fildl jge adc mov ds push add jne dec jno add inc push fsubrs cmp ljmp stos cmpsb add in mov rcll mov mov pop fidivrl into jle mov gs or sbb pusha ds int jle nop stos sbb adc sub outsb scas arpl xchg or adc in push and in loopne ss pop pop xor sbb and ret dec into stos xchg repnz int dec jmp mov xor inc sti aaa jnp (bad) lods inc mov mov leave (bad) lea ljmp ljmp add sbb cs jns jle jo call fidivr sbb mov sbb out cld fs in push fnstenv jp lret daa push mov xchg jbe and ret aaa or dec dec adc push mov leave mov mov in cld in mov pushf pushf xchg pop data16 push and sub aas daa jp pushl test xor lock std (bad) imul test xchg cmp pop mov mov sti pop adc sbb leave sub test cmc mov fwait lcall cmp les fbld repnz das pop pop push aad enter leavew cmp lds inc pusha mov (bad) sbb es xchg dec in add dec aam sbb add inc mov push loope (bad) mov (bad) out stos ss mov adc dec aam pop jg (bad) fwait (bad) repnz aas lret adc mov xor je xchg mov xchg cltd xor in pop insb and idivl xchg ljmp mov jmp mov ja mov outsl jae dec xchg mov out push in mov fnop xchg inc pop and add inc js out loope mov jmp push inc imul jne or movsb jbe or inc mov ljmp repnz sbb inc inc xchg push xchg or mov rorb push jns mov pop or ss insb sbb rcrl sub int push loope xchg js push enter test inc push out dec adc xchg dec ljmp ret add clc or lahf push lcall loop inc (bad) mov sbb jecxz ljmp (bad) fnstenv and lret (bad) sub or push adc subl (bad) xchg dec mov aaa mov mov push rolb call mov fisubr sahf scas movsl dec sahf enter dec int3 hlt xchg push mov lods jnp dec jmp jp xchg adc and jle dec dec xchg dec jne roll les in enter sahf sbb inc dec pop mov imul pop or hlt adc mul lea xor jo test mov push out mov cmp and stc hlt adc fbstp cmp out xor add clc cld (bad) sbb inc mov hlt xchg fwait lcall roll cvtpi2ps xlat cltd pushfw pop sub nop cmc ffreep mov fldenv test mov cmp roll sbb fcmovnbe jo (bad) or icebp (bad) mov rolb arpl fs pop cltd repz add sbb imul stos xor push adc movsb lea stc adc jmp xor in push xlat popf outsb mov push test xchg mov mov mov xchg sbb imul in dec test or repz nop mov out jge imul inc pop add xchg cmp test das scas aad (bad) out sbb rcr and in out and test rcll in and scas xchg hlt ljmp sbb mov cmc jno in nop jle fstps add lahf push cmpl fsubrl std nop jp and jecxz sbb imul mov out lods xchg cmpsl enter mov scas popf adc jp mov sbb not push cmc lds push pop rcrl (bad) dec or popa or xchg jo jg sbb (bad) jns outsl and data16 mov js sbb fisub loope rorl (bad) mov cmp lret pop (bad) mov cwtl and xchg lods popa icebp pop repz cmpsb fildl mov dec xchg fs pop jae incb push shrb imul mov xor int repnz imul (bad) lea insb inc push rcll dec jge ljmp in cli imul repz fist pop jo pop lock cmc sbb or xchg int3 loope mov fisubrl je cwtl jg jno inc stos mov push icebp pop and out dec bound lods lock sbb jns ret or test push xor xchg push xchg mov (bad) mov pusha jne or jno,pt add jecxz jae push std xchg test xchg cmp (bad) ja in pop repz rol cmp xchg bound inc jo adc jb inc lods lods mov mov cld mov mov xor mov sbb push pushf or push repz test sub and loop (bad) enter dec mov push ret je adc sbb clc xorl pop sub mov leave fnstcw push out les push xor push shll data16 mov and pop jle mov fisubr arpl mov cmpsl fisub les sub pop movsb imul repnz das mov mov fwait scas outsb lea data16 mov mov aas or test dec pusha mov jl pop pop cli mov sub int sub in jae into movsb cmp or xlat jmp pop inc push xor dec stc xchg cmpsl arpl mov push outsl pop sbb leave cmc mov or shl xor push movsl gs cmp adc mov push and and (bad) out mov outsl mov rep push mov add movsl sbb repz lea or cmp lret dec fistpl pop jp adc mov inc les xchg xchg jo scas mull mov sub mov insl add mov mov gs mov (bad) sub lret (bad) mov sub insl inc cmp sbb pop mov jmp push clc sbb or adc std data16 sbb xor xchg dec mov test scas sbb int jmp les mov inc iret cmp cmp jns dec int3 or mov mov pop mov sbb sub cmp imul inc movl sbb out jno and push inc loopne stos (bad) xlat fbld aas test inc fsts jne arpl mov (bad) cmpsb (bad) aaa enter jne cmc aaa cld subl lahf sbb xor (bad) pop sub adc mov mov out cmp scas cmp adc or daa in jae push mov pusha (bad) adc sbb mov jmp pop sub ficompl jmp mov mov fistl or pop loop out sub das enter xlat cwtl int3 or (bad) cli repz dec pop sbb arpl jg test fdiv sub mulb cmpsb push movsl pop insb xchg mov mov xor scas pop pushf jecxz xor adc inc std popl es add in icebp mov fildll cmc pop inc lea in lahf (bad) outsb mov inc mov inc add data16 int3 push xor xlat cmp mov std jle cld (bad) adc xchg or mov sbb adc dec sbb or outsb call int3 sbb jmp and out in or xcrypt-ecb cmpsl dec push aas xchg (bad) leave ljmp xchg inc test dec dec addr16 push bound imul push inc push imul or sbb xchg push push cltd dec mov xor (bad) mov inc test in stc sub daa pusha and jmp jp jo out cltd jns dec pop xor mov add test jbe sarb popf mov rorl sarl incb lcall dec ljmp jle sti sub push mov shrb in lods fbld mov push movsl (bad) sub fs negl mov push or testl cmp shlb ret mov jmp clc out out aam mov pop sub push sarb js jbe cmp jmp pop add decl xor sub lret out xchg jg sub lret out adc cmpsl nop adc sub rorb popa inc nop push cld pushf mov int dec test outsb rcll scas jg xor icebp mov cmp or fwait mov arpl mov outsb aam sub add js cs jle xchg jle xchg or inc cli dec int cli cmp ja and jae sub jmp aas adcb sahf mov in xchg push xchg cmp pop repnz mov push xchg inc or call pop jecxz imul enter mov cmpsb jp sbb test movsl pop rsqrtps sub dec decb sbb add and mov dec cld mov push ds test test sbb adc das std adc test faddl out ja adc cmpsl jl xchg ret xchg cld dec call les sbb push xchg mov pushf stos mov cmp xchg cmp fnstsw aam add dec aas pop xchg cmp cli out xor lods cwtl mov or xor and aad int3 dec cld int lret sub out dec insl mov pop nop test ljmp in inc mov flds lret pop cmc sub in mov sbb mov mov cwtl sbb das jl int inc movsl jl mov mov ss dec out push xor int3 in lds dec adc insb jge mov pop sahf ljmp in push rorl cli loopne aaa fadds in lods aaa mov or dec (bad) inc lcall cmp pop hlt xor pop aam lods icebp scas imul mov mov movsb push aas cmp cmp mov mov lods lahf cmp push xchg pushf aaa negb mov dec out fsubl xchg push dec and adc xchg std sbb cli out bound mov xchg iret sbb mov cmp jb pop mov mov subl pop shlb xor in dec pop jnp xor mov pop sub fs pop repz cmp xor mov sub mov into or aaa dec xchg icebp xor push adc dec sbb movsl inc xchg mov addl mov adc and ja cli repnz iret ja cwtl cltd xor mov sbb push mov pushf (bad) fwait into aaa pop jmp test mov outsb in push insl fwait pop insl xchg leave add lods fsubrl dec (bad) int jp lea bound xor push cs cmc pop adc or pop scas mov cmp sub inc sbb xor mov (bad) lahf add repz ret outsb imul sbb in scas mov dec test mov cmp pop cmp inc adc push pop mov out (bad) int3 dec faddl test mov and push (bad) jne divb out add movsb pop movl pop add fmull add xchg push movsl push pop lock sbb or pop and push lret insl daa mov xchg cmp sbb adc cmp scas cmpsl insb fcompl insl mov clc pop fwait ljmp mov mov shlb xchg sbb mov sub mov scas inc dec ss xor decb jmp mov mov jle mov roll cmp or mov mov xchg fstpt hlt insb and cmp mov jl pop sub sub mov dec add jae cmp push divb test adc dec sub mov cwtl mov stc sub xor dec aaa cltd jo and pop xchg aad or lret sbb and pop mov dec xchg cmp sbb mov ficompl hlt jmp inc push sub mov arpl in fsubrl push pop cs cltd xorb sbb sbb sub aad std add pop and pop lea cmpsl (bad) loopne push fnsave pop inc rolb inc in gs or mov cld ror mov sarl psrad test js adc cmp lock pop pop stos mov stos push sub insl cwtl pop adc jbe sar mov dec test or sbb jne jle sub lahf mov cmp sub push adc idiv mov mov sub or cmp aad xor xchg pop test sub pop jge inc cmp aad pop pop scas dec pop sub idiv imul xor adc xchg adc xor cmc adc out push pop adc add fisubrl inc or and stos push jb jg mov sbb mov push or mul pop insb dec pop scas test mov lcall or cld mov pop xchg test pop jmp lock call fs ds sbb sbb mov mov dec mov in (bad) mov out dec out pop cmp out jp mov ljmp sbb xchg addb mov ss test and scas mov ljmp xor test inc and inc (bad) push (bad) mov stos mov ret lods xchg lods adc fstpl jmp jmp mov pop dec dec insb mov in cmp inc icebp mov jae adc nop movsb in push mov add xchg mov scas aam rcrl shrb test jae mov dec out arpl bound in mov mov ja (bad) jge lahf jp dec push or xor daa fldt mov (bad) call mov or out enter pop inc sbb (bad) lods jnp mov loop in mov xor add inc in daa xchg lret push adc mov jp or inc mov and cs jns sbb sahf repz dec xchg sub out xorl repnz inc sub movl adc jne scas mov mov ss mov aad adc jb movsb ret in cltd sbb xchg fist dec mov mov and xchg fcmovnb mov inc loope rcrl xchg jbe adc lahf dec (bad) cmp xchg push push xchg insb sub jbe sarb jne mov in mov pop dec xchg mov clc fisubr outsb cmp lods inc insb (bad) pushf pop mov inc stc xor mov sbb cwtl scas cmc out pop lods ficompl imul movb adc ja mov ds test loopne xchg aad dec cwtl jne and mov aam inc push xchg lock inc cs or push imul stos push sub clc movsl mov cmp jnp mov add xchg add mov push add call mov xchg loop jno mov pop or cld test xor (bad) and and mov rcrl xchg addl add jbe leave xchg mov fldl outsb push pop or lods sbb and hlt mov pop xchg (bad) dec je andl fldenv xor add lret pusha lods cmpsl jecxz addr16 push fwait mov adc push sub imull xor enter push push insb mov cltd decl xchg pop push into mov sbb xor sbb inc mov sbb out jns daa cmpsl push clc aad dec mov pop es pop and (bad) icebp push dec movsb lods sub adc pusha xchg or sbb and sti mov int cmp jp das dec or popa outsb mov shr inc push cltd dec mov cmp add sub mov lret in lock lahf outsb push notb mov dec das xchg inc (bad) ds mov add add mov sub dec movb imul xchg hlt cli mov dec dec icebp pop and sbb and popf adc mov imul xchg mov push in stos mov xchg xor std cld mov movsl mov je inc lret sarb mov cmp pop rorl imul sahf dec xchg sbb mov jge cwtl xchg ret movsl adc cmpl pop out fsubr lods jecxz and nop cltd adc mov push movsb jl adc sub (bad) call xchg (bad) fwait adc add mov jp scas add cwtl (bad) jg sbb mov jns inc lret inc rclb or jle or call push (bad) jmp int ds js in test jns mov clc cmp adc js dec mov xor test mov cmp out in cltd push mov mov xchg jmp push mov xor (bad) adc (bad) sbb loop jns add stos push add cmp idiv sti dec movsb sub js sar jg in or inc pop sar out dec mov adc fcomps scas sub cmp pushf dec mov xchg mov aas lods mov sarb scas xchg push into push movsb jmp (bad) (bad) (bad) outsb loopne loopne mov aas lret dec stc xor push inc or call call ljmp je cmpsb push pop daa pop xor ret repz jp inc push test mov orl loop pop or dec push roll push lods push inc dec sbb loope movsb call sbb mull outsl inc jne test rcrb nop jnp jno outsb testl inc arpl inc in jp aas je lcall and cld inc stos push insl sbb inc adc ret test mov ret mov pop push push data16 mov mov inc aad lods stos andl pop lcall ret jl dec pop and movsl or movsb fnsave xlat daa push sbb and cmp lods test andl lock jp pop inc xor dec xlat roll faddl push jns push mov pop push ret and cmp mov shrb dec mov xchg mov dec cmpl xchg push or jmp mov mov sub jmp adc pusha xor xor fsubrs insb mov xchg movl push sbb jl lea xor data16 mov xor out cmp inc mov aaa adc roll sar jmp adc dec push pop add or and push adc stc cmp mov or dec test pop (bad) jns pop mov ja mov daa inc stos aad jne mov xchg bound mov add and inc negb inc lcall out and bound adc in mov shrl movb xchg pop cmp jmp fisttp mov scas aam es sar sbb and mov popf jl add faddl mov jmp loope in cmp call roll iret jns cwtl cmp stc les lcall sub ja xor icebp push mov shll lret or jae lahf pop loope pop mov xchg pushf cmp mov sti mov in rclb (bad) scas jne xchg cmp lea cmp lock cmp dec inc lock pusha out insl out mov enter lock (bad) mov jmp xchg pop add mov ljmp sub xor sbb fnclex cmp aas loope mov dec jecxz clc push popf inc cmp into jns int fdivr xor xchg dec jge xor lods cmp add pop je add mov pop fwait xchg sbb aas andl outsb aad xchg data16 cltd push rolb addr16 push roll movsb out jl pop (bad) jmp pop xchg pusha xlat in cmp or (bad) xor push sahf cmp pushf mov or cs sti jl adc jnp loope mov mov adc out maskmovq (bad) in sub adc out jnp push sbb in aas idiv sbb aas xchg std and mov pop (bad) lock fs (bad) pop enter and jno pop sbb add insl out pop jmp inc push push pop or inc adc je fildl or cmp or test sbb mov xchg xchg lds push jmp and xchg fdivr (bad) mov repz out pop (bad) insl call clc loop push dec jbe pop mov ss or out pop mov dec in lret adc je out es mov push hlt clc jge in out xor leave cli clc fistp vmread push bound mov outsb pop (bad) stos imul mov outsl fdivrs call xchg in inc xor fbstp dec int xor out cmpsl cmp (bad) push iret push call inc pop ret mov fnstcw push out pop loope mov pop lock push push ds mov add das push mov add rcrl jno pop push inc insl dec aas jo je mov push jns push aam inc out push pop das dec adc cwtl lret cmp jl jae jg push and mov insb jge nop iret jbe imul and xchg loope dec jmp enter jae pop in mov pop inc dec pop (bad) dec scas data16 js (bad) pop jge push pop jl stc loop and repz jo push fidivrl popf in adc adc inc ret sbb repnz dec xor xor inc aas shrb orl mov push xor (bad) ret mov jp add pop xchg sbb int3 xor or outsl inc (bad) mov or cmp xor cli lods jl add shl fild notl daa inc mov jmp inc out xor mov jo nop xchg pcmpeqw enter test (bad) (bad) mov and xchg fistp pop dec hlt sbb dec or and add push xchg sbb mov and push xchg ficom push xchg cmp push stc cltd sub and jbe and fisttpll mov les ljmp into clc imul dec mov in fiadd jo in (bad) jnp pop stc mov repnz dec push xlat stos aam add cli es push add jmp xchg jle jp dec inc push stc pusha rclb iret outsb inc cmp add cmp jae push hlt inc mov lcall aaa movsl push cmp mov test loop loope mov jl pop fdiv hlt push or pushf mov jo inc or sbb fldl push pushf push rcrb xchg mov mov pusha mov mov sub shrb jp pop mov sub mov push enter neg jecxz mov mov sar dec loope sub out xchg out repz or pop mov inc push rcrl xchg add arpl (bad) aaa sbb add push push sbb xchg (bad) (bad) and inc fs mov inc xchg (bad) push movsl cwtl and daa lret inc xor dec xlat sbb leave xchg push add shll xchg loopne (bad) out dec (bad) dec mov sub test imul adc push out push jnp gs jnp outsl popl lods daa lods ss aas jg jge add mov das push mov pushf mov stc test xchg xchg mov mov sti mov mov cli (bad) jmp cmpsl enter clc sarl fidivl mov ficom std fwait add out xlat data16 imul dec cmp (bad) jg push scas adc outsb adc in or mov loop xchg jno test mov outsl add shll cmc push inc xchg enter and cmp das aas or cmp xchg cmc mov lea repnz mov insl sahf daa sbb mov mov lret (bad) ja or jmp cmpb pushf sahf xlat loopne (bad) gs sub and out sbb xor push mov inc jne xor fildll stc (bad) dec (bad) push aam scas pushf es out nop pop xor pop in es nop xchg loope loope mov adc sbbl xchg dec mulb test loope hlt pop add push inc cmpsb insb sub xor je and popf mov movsl (bad) hlt xchg mov jle push or movsb add mov hlt dec cld pop jge xchg cmc ds clc or ljmp xchg aaa rcrl sbb cs sti add pop insb lods pop mov and cs jecxz mov imul dec add icebp and jmp fwait (bad) out jno or mov xorl and and (bad) aas jg outsb inc insb cwtl pop loope mov cli in out loop pop movsb xchg daa cmp mov pusha jno or xchg or push lahf jne (bad) jno loope sub (bad) dec mov fs mov imul pop add mov or out decb inc pop fsubrp mov daa imul stos xor push (bad) in insb mov jnp (bad) mov sbb je (bad) scas mov push ds test das imul (bad) dec add inc push in jg in dec mov in push push into cmp out cmp imul sub xchg scas into sahf rcrl pop xchg adc xor rcrb gs jnp sti mov cmp stos push and dec pop repnz push sbb cltd push in ret imul sbb mov ljmp loop xlat add out imul jle sbb mov aam mov movl das aas mov jne pop xchg dec scas fnsave xchg daa cmp std dec jmp mov jns xchg cli movsb dec wrmsr loopne fildl out adc hlt addr16 ss and lahf cmc cmpsl or pop and sub call jmp xlat test xor and clc or push add into ret or inc addr16 xchg dec jle xchg repz push (bad) pop or movsl (bad) mov inc pop in cmp push outsb add cmpsl sub test ss xchg in pop icebp addr16 push jno test sti lock sub xor mov lea int outsb mov add xchg out jle scas xor fistp push std test or test fsts lea sbb jp sbb jne lahf outsb add xchg inc jne mov jmp mov xor pushf lea dec cmpsl jg int3 call sub std mov cmp mov cmp mov dec sti or outsb or sbb xchg pop cltd jb xor out xlat in ret jp mov jmp push and ds sbb movlps popa add pop hlt add sbb ljmp loopne or mov pop cmp scas das pop and dec sahf sbb pushf cltd in stc insl xchg (bad) pushf xlat mov jle or and cmpsb insl jmp test add pop xor (bad) jne push xchg scas xchg sahf push js aad jnp insb mov insl mov movsb dec add mov fidivrl and int push call sub adc test push push (bad) fldcw sbb xchg cmc adc mov lahf shl mov clc dec dec mov pop popf cwtl jbe push out pop xchg add stos test mov movsb sbb mov lret sbb add stc lods fwait (bad) xor outsl pop shl push xchg scas outsl mov push mov stos add stos mov jp and xor test pop push cltd pop push and lea mov lret push adc dec mov scas xchg vpmulhuw cmc ret daa sti xchg dec daa ret jle push pusha jnp stos jne inc push push nop xrelease in rcrl out pushf dec loopne gs sarl dec cmp jg (bad) pop mov stos js out dec push loop or dec imul jns outsb stos outsl or xchg out clc test int push lret lds dec imul dec leave out in xor or mov xchg les push test and dec mov and mov daa push push pushf ljmp scas and movsb fnstsw mov movsl xor pop xor dec fstpl (bad) test pop sbb xchg aas jp lea sub in mov std movsb in adc push pop xor cltd sbb pop jl stos push test in lods add jmp sbb sbb mov int cmpl mov loopne mov jmp jns out jle ret and popf jmp enter std fwait test push call stos dec dec ljmp arpl dec out dec in fs inc imul (bad) jmp adc daa add sbb add adc sbb lods pop dec mov cld inc pushf sbb jmp ja aaa sbb lcall addr16 xchg out out and (bad) jmp jp pop sub adc jnp fucomp pop lods les gs scas ds jbe pop mov pop mov add outsb cwtl push mov jns mov jb sbb and mov int test es out fldt sbb sahf mov sbb (bad) sbb cmp mov fnop imul push adc push pushf dec sti xlat xchg push mov sti xchg into pushf out and mov xchg push jmp and aad or in jno xchg push jno (bad) (bad) fwait mov push jns stc or (bad) idivb test cmp inc dec inc orl icebp in or data16 jg xchg xchg std std sbb in add popf shrb call push inc add lods sub mov dec cmpsb mov sahf pop out mov loop mov mov sub lods in jg movsl pushf xor or mov jmp xor push fidiv gs out fstps lret enter jmp stos hlt xchg dec dec ds stos (bad) (bad) dec in xor ss aaa inc xchg dec insl ret xchg xchg mov dec push out mov (bad) aas aad fidivr mov cs and pop mov repnz mov xchg sbb push xor sti (bad) push ja add xchg sbb inc test push pop dec jecxz xor mov and inc xor mov mov rcll lods xor xor dec adc cmp sbb jbe dec dec leave scas lahf mov adc loope xchg pop pop mov inc pusha into mov loope scas mov aas jne adc cmpsl xchg inc mov inc test mov out mov stc pop insb push hlt xchg rclb call pop aaa jnp cmc adc xlat mov xor or inc xchg mov add jb mov jmp gs out loopne or xchg push dec clc ljmp jnp cmp mov jo,pn xchg xor mov jb popa add dec (bad) cmp pusha dec add call add ds addr16 adcl into popf mov (bad) scas inc xchg push aas jmp lds mov arpl xor cli pushf ret inc xchg ja idivl aad seta dec lods (bad) popf push sbb jns (bad) xor mov pop push cmp pop ret and lods inc pop das push mov lods lret push pop idivl mov imull and cwtl and dec pop das vpsubusb jl mov mov (bad) mov iret enter mov add iret mov dec sbb sub mov jp pop or rolb sbb fs xor mov loope scas push imul pop xor xchg xchg push jne mov sub test outsb xor out fsubrl cld add mov cmp scas inc cmp int3 hlt add shll jp mov fstp and push cwtl or cmp data16 jnp sub lods lods xor cmp sbb and sbb fs inc in sub (bad) fidivl jo stos xchg sbb mov outsl ss int3 push add pop daa sbb repnz lds fistl inc cli ja idivb lods lret cli test push mov test (bad) iret shr dec mov (bad) cmp add mov xchg shr rorl std sub rcrb (bad) fsubl add jmp or hlt loopne mov adc push sbb jnp je mov inc hlt mov inc mov xlat inc test adc mov push and cld test (bad) test iret xchg mov inc adc std scas pusha jmp gs push push insb lock xor and xlat (bad) arpl mov cld add push jge pop push out cmpsl js xchg mov test mov push repz mov outsb xor cmp mov xor dec push imul sub lcall nop xchg pusha xchg mov (bad) lds dec mov (bad) icebp pop cmc jmp mov mov fsubs movsl call cmp std mov out mov jnp inc icebp daa out out scas push sub xchg je cld sbb in cmp jmp or cwtl cs push pushf fstpt pop cld ret sbb xchg aas stos enter adc pusha jbe mov push xchg jp in jl addr16 scas js pop adc or hlt (bad) (bad) cwtl cwtl jge push into cmpsb imul dec iret sub lea loop lahf or (bad) aas xchg jbe cmpsb xchg mov add sbb and mov sbb cwtl jle ja test or add mov cmc scas lret divl loop iret aam xchg clc push clc jge aaa mov out dec mov sub xchg xchg jl sub divb out ret nop rcll icebp xor dec into push sub push aam out jno rol xor push inc xor jbe lods repnz push mov clc or lods adc lock or sbb out mov and jg dec out mov rcl mov fs in bound jge mov mov mov cs push mov add ljmp in sub jmp addr16 push lods push mov mov cmpsl in mov or icebp sub sbb lcall js jbe outsl ret dec movsb popf stos or inc pushf push scas je mov sub inc pop cltd cwtl and js and mov mov xchg cmp fsubs xchg scas dec (bad) push dec push mov int popf in mov leave das adc push fcompl mov sub popa and cmp leave shrb and push outsl push test push push jg mov xor sbb cltd push sbb dec add add idivl push jl loope leave ret or mov push lret xchg das inc jnp push jle cltd leave and sbb fs cmp outsb mov fwait mov pop cmp mov rorl in push and inc mov jl fstl test sbbl dec xchg mov add inc in mov or mov fadds movsb mov sub add movsl pop push sbb or loope jnp xlat fsubrs push bswap insl popf lods xchg mov ret dec out sbb mov stc inc jecxz daa loope,pn or xchg stos cmc xchg int data16 adc mov fidiv int3 ret add nop cmpsb xchg addr16 cwtd test xchg inc fs push jmp (bad) sub test and jno sub sti aaa outsb aam lods jae add xor dec lret mov push cli orl cmpsb cwtl jmp cmpsl xlat cmpsl sahf adc lods adc call ds (bad) jbe xchg xchg jle push lcall cmp push dec jno call jle xlat shlb fdivrs sub jns mov out pop push adc ja dec in push sti ja mov mov add subl mov dec lahf out out xor sub enter mov insl fsubs pop jo aam mov mov cmp inc inc mov imul sbb out in add pushf push in sbb rcrb mov xor jp adcb enter outsl aaa in sbb sahf cmpsl dec cltd clc mov jo insb out dec ret xor loop sbb js and test ja xchg dec ret insl std int3 repz cmp lods adc cmp xchg and adc addl hlt inc push or add loop (bad) xor movsb cltd mov push ds dec (bad) sti sub add jle imul jbe mov pop popf and insl test lea xchg and mov (bad) aas push adc sti push or ret es test mov jb data16 pop cmp sub into in sub push out clc rol xor icebp scas xchg xchg push push mov fisubr jbe rcll push mov (bad) dec les ret xor popf mov or jge sub sub or icebp imul xchg cmpl inc outsl and ret and cmp jnp stc lds xchg aas cmp std fnstsw pusha pop (bad) xor in add xchg fcmovu (bad) in les rcl stos dec cli mov fnop cmpl add mov push daa inc fnstsw es adc cmpsb popa and ds cmc pusha ds fs imul pusha (bad) push sub push cs sub leave lods xchg test xchg jl sub cmp push or add jae out dec insl daa nop sbb cmp jp test (bad) cltd cld les scas push daa popa in gs cwtl jge sbb add loopne pusha cmp mov mov fs aam notl fcomps xchg movsl aas mov int hlt inc cld ds ficom cld and or and cmp inc mov push lds enter lds adc or xchg dec mov inc xor pop cld in mov out lret into popa mov push bound pop xlat xor gs inc sub mov add xchg jmp dec sbb or jbe (bad) test shrb int3 mov scas push mov mov decb pop or (bad) loopne test phsubbw test push dec cld ss mov outsb push jns pushl movsb push lea scas dec icebp add mov xlat in lret clc add mov sbb mov inc add js fs xlat negb fstps fsubl nop pushf cmp aas mov mov jne sub pop cltd or sbb stos mov add movsb orl pop outsb adc (bad) inc jae es aaa repnz popa test andb dec mov popf push scas out and cmp add push call sbb cli lret mov add enter pop adc mov shl mov out adc mov pop push jp push aad ret addr16 jl mov or into loope pop fisttpl jg inc add mov mov mov arpl mov pop dec std daa inc sub fistl incl sub cmp in pop pop outsl popf sub cld ret xchg cli cld test repz add xor and fstpl movsb xor mov xchg pop mov mov jo movsb lods (bad) lods mov out jmp js sarl test sbbl push jnp rcrl call lods or adc out mov push cwtl mov sbb jb cmp das mov (bad) sti pusha add test add into pop dec dec ds ss rorl pop mov lahf pop cmpsb xchg loop stc pop rclb pusha sbb fcomps mov xchg int3 pop (bad) mov push out xchg mov rorb xchg inc pop (bad) loopne jg popl and inc push cmp jnp outsl jmp cmpsl push push ss out sti mov test mov outsb pop and aad rclb or cltd imul push int3 inc imul lahf addr16 test mov ds add test rorl cmpsb mov sbb flds rolb arpl pop mov cmpb test cli sarb mov jg,pt mov out jmp int push call inc add add arpl cmp sti xchg shrb lahf jg mov dec sub xchg cmp movsl in push cmc sbb xchg les les cmp cmp in add or mov fisttpll lcall popa push lahf sarl jp pop mov je (bad) leave repnz iret pop std push imul lock and lods cli sub cwtl mov mov repnz jle popa imul rcl cli jge mov mov jmp cmp cwtl and jno sbb add push cmp jg mov mov xchg inc and sub add push sub mov mov adc adc lods cmp aas and cmp stos cmp jge pop adc arpl push cmpsb and dec es ljmp jl mov scas aad aaa data16 mov sub mov pop sbb loopne pop clc mov lods mov nop aaa push xor sub inc pop out aas inc in test ja pop ret (bad) jb lahf lock jp mov arpl pop out fiaddl push les cltd lcall pop pop cs push and jg add xor aad and negb push mov pop shrl push test int test cltd cs aaa push or movsb xor imul mov jne cwtl sbb mov stos cs mov sub mov fcompl lret negl mov inc cmpsl jno dec adc cmp aam inc scas je clc loope int3 pop fild xor std out sbb pop adcl subl int dec test add test xchg sbb in xor in js repnz fisubr push cmpsl in mov push mov and jbe outsb sbb or int3 repnz sbb add push inc icebp out jnp xchg ret xchg int cwtl push stos pop xchg mov xor push stos jo out push xor stos lds fwait fs jmp pusha test in outsb int3 jo adc adc (bad) xlat xor dec jmp pop and rcrl or adc orl test push lret or int3 mov sub fildll xor sbb add test in and sub call (bad) jl ror idivl lods lock imul adc jle sbb jecxz inc jbe mov popa jb in icebp out adc lods jl (bad) pop (bad) mov inc xchg test xor aas xchg mov pusha in jl pop sbb shll mov ret dec insl (bad) cmp (bad) idivb push push jecxz sahf jl std test hlt std or pop fwait jge pushf in mov (bad) fnstsw jne or adc dec repnz in sub fwait jns push dec jge aam sub jne das xor std fiadd jae fwait push out lcall sbb inc orb pop pmuludq test push lods pushf pop cld xchg leave xchg fbstp dec imul lods mov int pop and cld sbb jo jb (bad) lahf idiv pop out dec sub xchg mov pop dec inc out jmp (bad) int3 ja pop adc in adc and xor arpl je arpl jne or xorl sub xchg ret inc xchg subb roll js mov repz das push ret ret xchg xor das das into or lahf dec jns into cltd pop or mov dec cs sar xchg jns jne ja out push (bad) aad insl push push pop add imul pop xchg gs pop js xchg (bad) jbe jmp mov inc int3 add icebp cmp movl (bad) jg lea decl imul inc sub jg scas dec fs push dec ret mov popf pop decl popf in mov cld imul pop aaa jo arpl sbb jg lock mov and jne or and mov insl movsb jnp cmp jp push inc stos test iret jns push stos xchg outsl adc xor inc pop movsl mov push loope xchg fsubs adc pop (bad) and jae test imul mov imul fwait mov add and lock ficomp incl or pop int3 sbb cli pop xchg cmpsb cmp mov ss fucomp xchg loope sbb ss mov jmp cmpsl sub data16 insl pop movsb enter sarl mov sahf cmp sub cmp pop push add inc scas cwtl imul lds mov push inc cmp aaa cmp dec sub adc dec pushl scas mov (bad) sti sbb sub mov add inc push ss (bad) hlt frstor repz sub push pushf sbb into jne jbe mov aas cmp call shlb lock ja fs loop mov jo mov cmp imul scas push push enter mov mov enter popf test lret push stos cli das push repz push lods add jl ja sbb lods scas sub pop add push sub dec lcall adc push xor pop daa daa test mov std dec push into add leave (bad) (bad) mov dec decl push dec adc cmp in mov push mov arpl stos pop pop aad fmuls insb shrb cmp ror loope jl mov insb and jg enter daa dec ret scas inc iret loopne push repz leave and int cmp inc nop sbb sub sub lret aaa mov jnp mov cmp les ret jnp out adc jno test out test push clc aas (bad) cs sahf mov ret push imul xor and dec (bad) jge mov push pop xlat inc jg cmp leave stos lahf xchg xchg bound jae ljmp out out fsubrp jae mov push sub test mov test adc lods sub sbb jbe lods imul out sub fnstcw sahf jle aam jbe test je,pt (bad) sbb xor cmpsl aas rorl fildll mov cmp add clc add jno mov scas cmpsl xchg ret into add ret je cmpsb je push pop mov imul push push je mov sub rorl push dec inc dec lock dec movsl arpl pop cmp fs pushf lods and in xchg les inc mov sbb ja movsb push das sahf sbb jmp ret lea jns fisub adc jp mov mov inc lods mov repz mov mov xchg mov mov in imul sbb add mov ret or ja sbb je sub outsb scas pminub jnp sti inc movd ljmp popf (bad) or cwtl (bad) (bad) xchg shr or adc dec (bad) xor jnp adc xchg mov cmp cs add daa in fisttp sahf popa sub inc fsubp push (bad) jmp push fidivrl xchg cmp add (bad) ljmp adcb add sbb mov pop push add inc mov in and lods xchg gs insb lahf ljmp jecxz inc sub mov xchg mov out adc mov mov std test xchg ret mov scas cmp push push addb sbb clc dec in push lahf sbb movsl loopne xor push daa js mov lahf push (bad) push or mov push pop push jle mov pop insl ja xor je jp xorl daa inc iret enter fs push fidivl fsubrl outsb repz dec dec inc push xchg dec (bad) push icebp jecxz lock jno or loopne dec adc rclb movsl popf in arpl inc out dec stc repz gs in jg enter adc (bad) clc ljmp ljmp ret inc lods inc xchg mov dec xor test pusha out or sti mov cmp push adc fs jge aaa jle jno cmp pop cltd pop cmp mov rorl or xchg jmp or fcompl add sbb mov test stos mov pop dec add add popf out push loope hlt jnp imul pushf or hlt in sbb mov cmpsb fidivr mov shlb out arpl cmp iret cmp cvtps2pi pop pop push mov aaa sub sub sahf xchg ljmp call push and lret adc jno xchg test jge adc int loop in les mov gs and sbb imul (bad) lret jbe fnstcw cmp inc fs insb or call test insl (bad) mov int3 icebp popf jp es outsl push out or push xor in das in test outsb addr16 enter cmp ds and js and out xchg hlt fwait dec jecxz mov sbb or sbb xchg sub cmp add push xchg fcoml pushf lcall (bad) lea test cmpsl cltd push cmp push iret data16 jge mov in sub sbb mov inc lea arpl xor sub out ret cmp or movsb imul fmull or mov test add jge outsb (bad) xor das jmp pop cmpsb in lds lahf cmpsb add fwait push cmp mov cwtl cmc lock pop xchg jnp cmp hlt mov add enter mov cmp imull and sbb imull sbb out mov push mov push loopne cmp (bad) ror mov loop not sti mov or mov cltd addr16 aad cmp pop aad incl shrb outsb adc and and idivl call mov sbb (bad) insb (bad) sub ljmp sahf imul frstor cmp mov xchg (bad) int3 xlat jae cwtl jne mov xor les insb imul dec mov popf adc xorl das stc add data16 sbb int3 aas jmp (bad) jle gs mov sub sub pop jns test jnp mov xor stc pop cmpsl mov pop mov cmpsl inc pop mov pop outsb mov out and pusha addr16 mov xchg int3 inc int sbb nop and rol cmpsb das cmc and rcrl xchg inc push mov dec lea mov pusha sbb mov or sub adc pop fs mov add mov ja dec dec rol mov (bad) out cld scas icebp loopne sub fs ret mov loop les and mov out das lret xchg repz pop ja (bad) cs mov mov outsl add in decb aas pop mov pop xor pop cmc imul loop cmp cmp cmp (bad) mov mov adc jge outsb adc mov mov ss test movl scas aam push loopne xlat in repz jmp mov jmp push or add dec call leave mov mov shrb sub mov pushf jo ds jbe mov xchg hlt stos movsl leave (bad) jo aas and sub jg inc mov cmc daa enter ds add cltd repz lea push nop and decl mov push push insl sub (bad) out sti shrb adc lock mov ja fdivrs jge pusha adcl adc (bad) cli mov and cmp mov (bad) mov push cmp ret popl fdivr movsb out (bad) push or insl data16 mov inc and adc xchg sub adcl inc repz rcll lret push pop dec mov fildl push lods inc or jne sub movsb adc mov pop jno (bad) mov lret pop int aam insl mov lds sub jp adc mov jmp rorb mov or lods jnp gs inc loope and mov cmp and pop ja jecxz icebp gs scas sub inc in jle fisttp into shrb mov popa sub addr16 dec sbb push mov adc (bad) push jl fildll and scas xchg or dec mov jo cltd add push test jae and ret jae aaa and fistp push dec xlat mov or nop cltd (bad) and push movsl das jbe adc cwtl inc push movsl test or jge and bound or (bad) jg rolb mov (bad) pushf jle xchg inc inc sub sbb mov xchg arpl xor not pop lods imul js js enter cmp pop enter (bad) pop add rcl mov lret push or xor (bad) sti adc adc fs mov mov fiaddl test mov ffree inc push notb cwtl test (bad) mov call cltd orl es and stc rorb cs push dec insl add leave outsl xor lret push popf inc in jnp dec std out add jge jecxz,pt loope add iret push (bad) pop adc mov jmp repz pop pop lahf pop (bad) ja lret ret mov and adc sbb mov jns cld pop xor add sbb push ss push inc outsl ljmp imul or mov bound sub int3 or inc outsl scas cli clc dec js pop cmp clc dec cltd push (bad) imul mov out add insb insb loop loop jo cmc movsl inc cmp testb push shr mov int3 add xlat out movsl aaa jl xchg icebp movsl das xor lahf ljmp scas mov push out pop or dec xchg or inc nop aad jmp inc test ja cltd repz mov rcrl adc cmc sub push sti pusha scas cwtl movsb adc dec cld test movsb xor xchg lahf repnz jl dec dec hlt ljmp mov out mov imul xor in and loopne and out mov mov adc loop xchg jns out adc dec ficoml jns push and movsb in mov daa into dec js sbb loop mov dec add push out pusha cmp cmp aam icebp cmpsb test and out nop mov daa sub lock popf adc aam mov (bad) push int3 push pop ficomp dec repz and adc bound into xlat sub adc jmp jp fild std shrb nop sbb add sub lret xor enter mov sub and hlt xchg daa adc lret mov xor arpl cmpl xor pop pop les jo ljmp test push jns fist add leave cld jb or negb xlat jge sub in dec xor cmp jle inc test mov mov xor push fildl pop int iret mov lcall and or adc fldl push xchg jbe push ja cmp lcall inc and push adc jmp dec in (bad) mov das and pop jge test not push fucomp push int3 (bad) jae movsb jp mov mov ljmp idivl mov push or cmp adc cmp sahf push scas jp cmp test in shrb ds cld stos lret (bad) cmp mov fstps mov mov mov xchg mov mulb jne mov push cmp mov inc or fisttp add pop leave jne sbb xchg popa xor push pop stc cli cmp sub add outsb aam lods jl push dec iret call mov fsubr cmp push fdivl adc adc mov push adc popf add bound pop add lret scas push movsb js scas jge test bound mov lods sub repnz xchg test mov movsb pop mov pusha sub cltd scas insl (bad) mov mov push adc ljmp js or mov mov ss and inc scas arpl lock out movsb push jl mov or in int3 leave adc out mov scas ret pop jl movsb sahf in nop das mov dec pop inc enter xor loopne lret mov shlb cmpsl mov fwait out push je cmp push jp xor jl test lods rcrl out in dec cmp hlt aaa dec icebp dec scas pop push (bad) outsb adc mov add sbb mov mov fcompl fwait inc xchg mov adc jno pop pushf cmc mov stos mov mov aaa and and push mov dec xlat xor aam and jbe leave mov test pop xchg jne add adc imul in add movsl pop loopne jnp jecxz mov mov dec jg movsb (bad) adc xchg dec mov lods jp out pushf (bad) mov aas or cs sahf sbb insb lods pushf add lahf push xchg inc aad ljmp cld outsl push test sub lcall jno add repnz out sub pop (bad) rol arpl sub mov fistl fimull jp scas rcl lods test adc and popa xor mov and xlat mov scas xor cmp outsl add ror push lods mov std leave cmp test sti sbb sub dec pusha pop mov das push mov (bad) mov ljmp and mov jns cmp or xchg enter jge les add jmp mov fcom out sbb gs inc push (bad) jmp lea loope repz (bad) lret leave inc jecxz mov negb shrl mov les aam mov insl stos (bad) mov mov iret push fsubrs pop sbb scas mov loop push bound pop pop insl push dec xor jp imul dec dec cs mov push jb adc (bad) aad mov inc loop cmpsl into mov fwait (bad) jb,pn inc pushf xor dec hlt das fimull js lahf pop fwait (bad) mov mov bound lret outsb fcmovbe or repz ss in je sub sub adc fcoml add std sub xchg xchg pop jbe dec xchg outsb adc loopne pusha xor jb add xor fldcw push sbbb pop xor mov cld enter jl cmp mov test iret and sahf jmp es sub pop xchg mov mov xlat lock sbb sub ja repnz jae push inc repnz sbb xchg dec or test dec push in sub mov into mov pop adc pop std xor pop mov scas out pop arpl iret arpl jmp sar mov rcl add jnp sbb in stc xchg mov jo pusha mov xchg test add xchg xor in in or cs (bad) jmp dec in out loopne js fcomi insl fstps scas rclb push push mov ss das addr16 cmp lods icebp mov and jmp mov inc in xchg mov push ds shlb sub mov adc xchg das in xchg outsb test outsb xchg pop (bad) jle push bound std push mov sbb ret dec in fcomps out dec dec adc out popf push adc and test out xchg lods xchg mov add push push adc stos stos cmpsb and clc sbb lea mov sbb ds push inc jbe cld int and addr16 cmpsb cmp aaa mov push test pop sub cs push push imull adc push fisttpll (bad) adc popf jp mov dec negl mov mov outsl mov and xor (bad) xchg push cmp sbbl (bad) pop mov fwait jae or jecxz jg leave sbb roll add cmpsb mov add (bad) cmp mov mov xchg adc aas ret jl test xor push (bad) inc addb xchg mov adc ss xchg sbb mov imul scas idivl add push inc add push iret arpl fldt in mov jecxz fwait inc push loope fs sti mov cltd sub insl outsl or jp fcmovb aas adc addr16 mov popa int3 and fs sub stc fs adc js negl das (bad) je out push adc xchg addr16 pop movsl out or and cmpsb push js test adc adc sti sti sub and fsubrs bound cmp jmp je popf js xchg pop inc cmp inc movsl scas adc (bad) mov xor movsb repz mov inc add insb push insb and sub pop pop pop dec rcrl rorw xlat mov popa mov std pop xchg jns loope popf adc mov loopne inc ljmp push pop into lcall cmpl out mov push idiv fs xor push lods (bad) ljmp sbb mov add xchg cmpsl cmp insb sbb js sbb (bad) cld lods jp jmp sbb jle dec leave sbb enter lock jg mov sbb sub xchg dec jl push xchg lock push lods mov xchg dec xchg movsb push in insl (bad) sub sub cmc pop in sbb mov pop inc leave out pusha cld xor or movsb and xchg enter cwtl inc and add scas gs inc out adc cmp leave dec adc pop ja sbb pop sbb sbb pop test jbe fcomip pusha jbe push (bad) outsb jge int push ds dec mov cmp popf mov mov dec enter lock dec cli fwait es or cwtl xchg adc push jo das jne (bad) pop or js shrl mov repnz jecxz dec sbb mov cli fmuls cmpsl push fiaddl xor ret cmp int cld mov xchg out (bad) in xchg data16 xlat cld cli popa fnsave mov enter jae push mov cmp cmp jmp loopne int test push xor sbb pop mov out repnz pop (bad) bnd insl mov jnp xchg mov out push std jnp mov cmpsb mov outsl pop popa inc mov xchg mov mov mov sbb ret int3 dec jecxz fsubrl inc jge loope lods dec js (bad) scas jg and clc xlat push jno imul mov out or into add adc sub jg or popf movb les imul sahf (bad) (bad) dec mov jbe pop mov cmpsb pushf ret dec xchg xchg add inc or aas push mov mov push ret jae mov push jg mov loopne in inc mov pushl sub inc inc push out dec insb add mov icebp test xor sbb inc xor jp mov jecxz dec dec loop mov push or daa out cmc sub dec xchg sbb or pop mov mov movsl or xchg mov aam pusha (bad) pop jmp mov inc inc sub dec cmc aas inc clc adc mov (bad) mov fsubl cmpsb dec daa clc pop or daa test mov xchg mulb xchg fldl and imul lcall pop jecxz lods inc stc fcomps (bad) imul mov jg add pusha xor pop adc sarb cmp jnp std fsubrs out (bad) jp cli ds cmp xchg or xchg inc in lea mov push in sub xchg inc add and inc dec pop subb loop test inc and cmc or stos push mov das movsl les enter pusha out test mov pop mov pop repnz daa jo sbb sbb test mov inc xchg xor pop in push jg jb js mov in push inc stos lahf sbb sbb xchg mov in pop cmp lods cmpsl ss shlb mov lods notl mov loope mov in imul jecxz and xchg shll arpl in loop or mov loop pop scas mov movsb xor daa test push (bad) outsb inc setl jmp iret jmp jns add popa jnp rcll or mov pop dec stos mov push mull cmpsl xchg push call jmp cmp insl loop lock xchg aas out scas jp inc xchg xchg mov push subl aas gs sub sub pop (bad) jae sub in xor xchg pop fnstsw inc test jle push add out inc scas cmc and xor hlt xor and sub imul cmpsl movsl lods hlt dec cli or and cmp mov dec movsl pushf and push mov lret out in mov mov pop xchg (bad) stos mov xor rcrb pop jge push imul (bad) sbb jmp xor js add test mov or mov cmpsl loop mov cmp mov gs enter js (bad) dec pop addr16 xor push dec and insb popf pushf js sbb in jbe adc jecxz cmp inc pop fucomp and pop lcall out pushf lock sbb xor ja cmpl lods and and rcll cwtl clc mov out jecxz push lock (bad) out (bad) incl xchg pop data16 out bound push xchg imul pop adc adc aaa loope in loop and dec xchg fbstp call xor (bad) mov iret (bad) cmp pop outsb sahf fisubl insl mov enter add dec cltd (bad) adc and cli sbb (bad) fnop push mov out pushf adc into adc cmp jge dec sbb rcrb jle mov je (bad) xor lret mov cmp sbb sti adc sub fnstsw mov pop adc inc (bad) mov addb jl int arpl into hlt mov pop push iret das mov sub cmpsl xor sbb fs dec ficoml cmp mov (bad) std dec add and loope popa xchg cmc fildll xor lds mov adc mov inc int xor pop ss cmp pop or in push dec cltd jl or in out (bad) scas shll out gs or out mov and cltd jecxz (bad) mov clc or push ljmp pop mov mov add cs xchg push dec (bad) push test rol add mov or sub leave (bad) inc and jnp das mov sub cmpsb xchg cmc cld test or jg call aas or sbb inc jbe and xlat mov lock mov and lret movb mov das pop movsl add bound pop test bound and fs roll inc xchg xor shrb adc jle ret enter cld jp pop jecxz ljmp popf pop in dec mov xchg in xchg pop popa lcall cmp dec adc jo inc cmp addr16 push clc cmpsl dec pop mov pushf inc sbb jmp daa cs mov jge sbb xor cld pop rcrb sub mov pushf flds jbe push pop imul cmp jp loopne push lret int jo cmp scas std enter pop sub or mov cmp stc xor out out fidivr fldt inc lods inc imul (bad) mov inc xchg pushl xchg sbb neg sub sbb xor dec imul (bad) dec loopne inc push stos mov pop (bad) sbb push cmc xchg loopne pop into mov std xor loop jge push mov mov fadds mov movb cmpsb rcll test mov outsb push jg aad mov cmp sub test pop repz xor push xchg xchg out push fisubr lret js sub lods jg ljmp dec ret dec or add lret out (bad) or mov imul dec movsb aas cmpsb out imul aaa mov jmp jge dec push and das pop and pop lods pusha cmp sub xor std dec ret and mov outsl mov lret sbb xchg sbb (bad) jge adc sub and mov subl not clc jmp hlt (bad) sub fdivrs pop dec aas fdecstp xor jecxz sub iret mov and or mov or test fs orl and or in jmp dec popf pushl inc sbb xchg sahf iret std or cmpsb lds repnz mov adc inc sbb jmp mov in inc repz mov cmp ss das sbb lock inc dec pop jmp loope enter mov hlt mov out ja jmp imul int lods flds sub outsb outsl fsubrs movsb insb sbb add stc fwait xchg lock jmp xlat adc cmp xchg inc cwtl pusha mov (bad) testl and cmp outsb cmp xchg mov fistpl call in mov imul inc mov decl xchg repz push aas mov add sub mov and stos pop sub lea out jg jmp mov sbb mov enter cmpsl sbb adc sub xchg jl mov out push mov sub inc in (bad) cmc cwtl pushf cmp cmpsl mov push sub les adc and cmp fisttpll mov in (bad) loopne rcrb (bad) iret addr16 mov (bad) mov push xchg fcmove push cwtl jnp bound in push incb pop sbb das add pusha jbe loop in cmp loopne dec loop inc jno test inc clc out pop mov lret in pop enter movsl or hlt insb int (bad) cld adc xchg imul (bad) out pop in std xor cmp dec les bndstx and mov sub jnp push mov mov xor xchg hlt cld add adc push pop iret and push pusha cmpl loop int3 les dec mov loope jne out mov fs sub stos lods sahf sub xchg xor push subb stos sub xchg add divl test movsl inc cld push inc add add orb stc leave aas test (bad) sub das sub fmuls jnp imul add mov mov pop sub and or mov xlat xchg or data16 push or je int pop pushf scas aam or cs push pop loop ljmp mov dec insl jp pusha nop dec pop inc mov test popf dec dec xchg cmp gs jmp mov nop push push mov fs add inc sub (bad) dec sbb xchg pop mov pop or cs jle lock mov xor xchg cmp cs mov fisubr aaa xor int3 xlat addr16 ljmp sub adc xor xchg fcomps or ud1 addr16 bound mov xlat lods or repz clc jg movsb xchg xchg aam mov mov les inc push push sbb call push test popf mov popf jge rcl sbb in stos pop aad mov ds xor scas xor (bad) adc xchg mulb lahf cmp lock aaa pushf push dec ret push cmp fisubl sbb (bad) cmp pop loop fsubrp cmpsb clc inc sub dec push mov icebp push inc add loopne inc or fsubl clc gs lret push stos pop das sbb inc hlt int popf cmc scas sub jp mov in push hlt xchg jmp loopne sub xor xchg dec inc mov addr16 push (bad) inc or (bad) std notb adc jno call add notl inc inc out push jae or ficom jnp lahf outsl jge inc sbb dec in jne ficom imul pushf adc cwtl mov insl hlt loopne in lods pop std jae out jae testl shrb nop js in in add xor out (bad) (bad) hlt maxps cmpsb lods (bad) mov aas mov pop repz xor add or mov push push jnp stc adc cltd scas sbb add mov aas push lods cmp inc push loopne push push cs pop scas es cmp in add loopne sbb test outsb andl or jne or push gs or sub push mov insl ret psubb fwait out sbb push mov jbe (bad) adc leave loop xor (bad) push fdivp loopne ljmp xchg mov mov mov adc and mov ficomp repz ds outsb loope aas jb lods xor push jge add cmpsl add into jge pop std jbe mov cmp push pop cmp xchg aad loop mov jecxz gs lods cwtl sbb sbb mov push cltd popf dec decl mov xor or out xchg push das int3 cmpsb or out rol inc dec pop cmc push out or (bad) arpl and and das outsb push enter ljmp cmp jmp lret mov cmp jg pop std loope sbb aad inc stos jb dec dec es mov icebp test dec cmp jp cli sub loopne icebp in call inc dec inc cltd xchg in out mov cmp mov fucomp push xor mov lcall into jmp dec lea jae mov mov fist hlt or cli pushf dec fidivr add pop xchg (bad) notl bound dec inc jmp mov xor inc push (bad) cmp fs imul cmc outsb int3 add sub mov out cmp imul push xchg clc xchg xchg jbe mov fsubrl dec insl adc pop xor test mov scas (bad) pop out add iret movsl mov xor cmp jmp dec call pusha mov dec insl fsts mov cmp pop test xchg or dec cld cwtl rorb leave xor orl sbb (bad) mov loop mov or add xor (bad) repz ficomp test cmp xor dec jmp int movsl inc cltd pop mov xor scas inc pshufw adc (bad) jb sahf mov and push js out fild add jg sub sbb xchg jg lahf jmp add jg aam in loop sahf jle (bad) add or push jmp cmp (bad) adc cld repz inc or (bad) push je xchg cs sbb inc cli xchg std stos imul in clc mov mov inc sub pop imul push push into aam loop xchg scas ljmp pop and mov es mulb cld sub sub sbb loop in inc pushf cli int lods add mov jmp outsb inc xchg test addr16 pop jbe push mov xchg cmpsl inc cs cmp nop shrb popf out cmp scas rcrl lock (bad) repz js inc mov sub sbb push mov mov jno push push stos aad inc in mov adc pop ficompl out movsb mov push jae fadd fdivs cmp in or in add push out stos jecxz mov sbb cmpsb cmp add and or vmread push or sub xchg movsl int adc and cld xchg dec push lock repz jp out push dec mov dec mov es add flds outsl fldl2e fs dec leave xor pushf inc cmp sbb test fwait out mov pop int push data16 fbstp cs fnstcw mov out jns pop push incl sub popf sub lea jnp jae sbb into pop je (bad) insl clc repz dec iret fwait popf lds sti in jp (bad) lea or decl addr16 pop out dec cli sbb cmpsl lahf mov shrb es dec mov out out cmpsb mov cmc in mov data16 stos jns or sub adc insb inc iret jle dec push add mov es sub cld cmp sbb std add inc mov push stos dec sub sbb push jl hlt and dec movsl or cmp push das mov fmuls push movsl and inc cmp das stos outsb aas iret outsb cmp sbb mov imul ja mov push enter push and outsb jo sbb push cmc bnd stos inc jnp adc lea cmp jbe push jno jno ljmp inc xchg pushf inc pop lods sub adc insl cli sarl mov scas in (bad) test sub jg mov jbe dec daa mov incb aas dec dec roll dec dec push stos je cltd ja cwtl std shrl push dec sbb mov sub std sbb inc arpl mov outsl iret add dec adc xor xor push hlt fistpl cmp or or pop or (bad) mov icebp inc dec xchg scas scas popa out cli dec jp jns add pop cltd fdivr mov enter xchg je lahf xchg jg dec sub xor (bad) cmp inc fist and in (bad) cmc jo lods mov lea push fistpll or popa pop push imul aaa lret jne pop sbb addr16 mov sbb xor pushf inc pop (bad) or jnp decl mov adc sarl jp ljmp push ret rorb fisttp mov stos mov jmp mov ret xor jae sub jmp mov mov mov or jnp gs cwtl jg pop ds mov push dec xchg sbb jae sahf enter pushf inc sbb aaa mov stc or rorb es jle mov pop or inc daa es fidivl cmp in scas add xchg lret dec and xor mov inc mov pop mov enter aas sbb pop cmp xor pop aad xchg js repz cmp sub sbb dec fadd or push into jb add xchg cltd jle adc or mov mov lret fmuls fwait jnp inc aas adc adc jmp or mov push lret popa xchg xchg xor dec pushf js xchg mov test in mov push mov int pop mov (bad) (bad) (bad) icebp cmp mov (bad) mov ror cmp in loop add cmp sub sbb xor pushf lret mov aaa outsl movb (bad) inc ja mov ret cmp push imul iret cmp scas fisttpl xchg xlat addr16 or sbb adc or dec ret testl cmp mov in inc cwtl ljmp out mov lds outsb jno inc mov out jp dec sub and cmp dec bound jnp adc rorb fcmovnu sub xor movsl and adc pushf je mov std xchg imul nop inc push (bad) lret lret mov ret push leave int3 cmp jae mov or leave xchg or aas inc lret pop ljmp data16 test ret gs pusha (bad) cmp inc cs insl lods sbb mov divl out out repnz dec or mov xor (bad) aad aaa xchg jnp jp sub shrl dec lock mov fisubl cli push mov mov mov pop fidivr mov mov jnp xchg fcmovnb xor in push jl adc das pop aad into pop in jo dec in sahf out in cli sub hlt idiv mov out add cmc cli cmp jo inc add movsb nop repz sub xor sbb or lea ficoml jno or xchg mov inc push jge mov insb out jae scas out xchg scas and sub les dec jnp std data16 aam cmp pusha out mov push jns or aam out jge pusha fcmovnb (bad) mov fbld sbb dec xchg sahf pop daa into pop popf push lret jecxz inc jmp loop pop gs sbb test iret loope fdivrl aad stc cli adc mov fcmovbe sbb in xchg sbb pusha fisub adc xchg hlt cs nop push inc push rclb push (bad) pop add cld aaa add xchg cmpsb mov jg adc cs xor call sti jge stos add lea adc in shlb jl in (bad) js ret xor mov dec push es jae stc int3 sub push fcos test clc pop (bad) jle mov imul hlt ret xchg (bad) jge xor xor mov sub inc lods push lcall sub mov in test (bad) xor out shll sahf pusha test jge sub ds mov xor sbb in std into outsb mov aad in es jnp pop in sub stos je push stos jg pop or sbb test sbb jbe add outsl jns iret fcom inc notb lods popf pop push pop lods sub enter aas (bad) lods imul jg xchg imul sub fstpt xchg sub mov ljmp (bad) into mov adc in adc sub in (bad) cmp push imul out cli push jecxz jno jmp mov mov or rolb test (bad) jge pop imul add das xorb shll and or into ret pop in adc call mov movsl cmpl das mov jge jbe xlat call inc push mov dec lahf sub lea (bad) into cmpsb stc and xchg fldcw or int jnp adcl or inc enter movsl xlat clc push mov andl mov fstpl cld mov jmp pop cwtl jnp aaa pop inc scas pop (bad) test push jmp cmp test loope hlt pop movsl jnp pop mov (bad) mov bound add fs iret inc stc pop jmp pop (bad) aam mov (bad) push or daa mov pop sub stos pop cli push stos aas cli inc stos das cmc sub iret adc or in lds sqrtps cmc mov lcall jecxz bound add mov cltd (bad) mov mov jae jp cli iret xchg shll lods popa mov jg dec aad shll fstpl mov mov mov cwtl out cmpl fisubr mov mov arpl jle int pop lods push pushf cmp daa mov cwtl mov cli mov gs sbb cmp jnp pop mov cwtl daa mov pop or mov out dec aad mov lds das sub jge sub mov jno lock jns inc xchg sub arpl addr16 sbb arpl pop js,pn insl inc mov inc jmp mov add outsl lods push (bad) jl sbb js pop hlt jne adc jno bswap dec sahf sub dec lcall inc xchg and outsl mov fistp fistpl aaa aam xchg rclb shrd decb cli dec in daa cmc inc cmpsb and inc mov cmp pop mov xor push mov fsubrl or (bad) outsl (bad) addl sub dec jbe js pop lds adc jno popl mov inc xor cltd scas jmp js dec fnstenv cmc int3 jecxz fildll lods mov push sahf ret jbe shrl pushf hlt or icebp jnp dec shrl dec mov (bad) hlt sbb xor out ljmp cmp std repnz js sbb lods lds scas popa pop jge sub test sti inc in cwtl lea leave push setl or (bad) jmp lock call push cmpb outsb push fistpl push mov ret mov pushf sbb or (bad) fwait pop lock jecxz sub mov lcall mov mov insb mov add rol out pushf fs jecxz pop fwait jae sarl cmp fsubrs pop or jno rorb mov jae into pop xchg sub aas xchg dec scas mov pop and add negb inc pop and inc push xchg les (bad) push or and in sub cmc cmp imul or fistpl push rol mov call adc jbe dec pop dec mov sbb add rorl int3 aam fdivl fstps movsb cmp and movsb rorb stos shlb aad jle mov cld cmpsl cmpl dec leave sbb jl fldcw jmp in or xchg mov sub add out xor sbb sbb pop gs or jno lret enter out loop jecxz stos fstpt ljmp inc cwtl ja cld xchg jns jb iret inc test dec inc aam push mov sarb mov push and and sbb mov pop xor xorb jge inc fmuls mov jecxz aas add popf mov push inc cmp (bad) ja loope add fwait ss lock push cli mov dec aam rcrl cltd iret rorb aad in mov mov push cmp pusha stos icebp fcomip imul fldcw (bad) fisubrl aas sbb imul push ret cmp pop je in in dec iret addr16 std out cmp jle pop test jle cmp ja dec movsl jbe (bad) fidivr sub fs iret fildll sub mov das iret aas clc lea xchg ja push scas jbe dec hlt jne imul adc mov fwait mov or and movsb lods pop mov lahf bound in xchg or dec xor jo ds sub bound and xor xchg mov sbbb sub jbe or stc pop (bad) movsl addr16 adc popf sub pushf xchg fstpt stos jns sbb arpl or int inc mov movsl stos or inc mov pop mov jo test mov and aad in inc pop mov mov loop insb mov jae ja fdivrs xor mov call add ja push (bad) nop lcall stc arpl popa in aaa adc mov add pop ljmp push mov insl movsl adc imul xor jg xchg mov int jg cmpsl adc (bad) sbb mov push inc mov in lods dec ret inc hlt pop aam in aaa pop test mov dec pop mov dec (bad) std (bad) jae lea cmp aaa shlb mov lret pop dec pushl aad pop arpl pop mov fcompl es insb repnz scas and sbb mov stos inc sub jecxz mov stos int3 sub (bad) imul sti xchg xchg (bad) mov (bad) mov addr16 vpunpckhqdq out cmp scas lods adc jnp or lods push ds out dec mov das out rcll cmp push out (bad) mov cmc out ds dec out xchg call sbb (bad) dec daa outsb mov or sarl xor outsl outsl aas mov cmp popa loop cmpb movd sub in hlt and dec outsl pop stos dec leave sbb inc ret pop fimul divps or in aam mov sarb outsl jg sub mov sarb imul in mov (bad) xor pop jmp mov add mov loopne sahf dec nopl inc cmc jmp nop push into inc cld sbb mov lds imulb pop mov std cmp popa xchg or and jmp insl xchg subl cmp icebp and stos mov pop jecxz leave pop stc sub fild push (bad) scas mov aaa mov xchg pop test jae and add or out pop mov push (bad) (bad) jg pop add inc sbb mov push fsubr mov mov inc xor lret inc fwait aaa or sub mov shrl addl sub push es mov jg sbb dec (bad) sarl or inc cmp lret arpl push push inc mov sub inc test pop sbb and (bad) xor sbb test ret test xchg xchg fldenv mov jl cmp pop xchg jge push sbb mov orl int test test sub mov mov mov leave cmpsb cld push les stos ret leave aam insl insl loop loop gs out mov sub cmp das mov add sahf rorb test adc push addr16 das inc rorl dec jg xor inc lcall lret scas xchg mov lea leave dec push inc mov cli mov aas inc sahf aam dec int3 sub xor and sbb (bad) push cmpsl mov dec out pop (bad) sbb test jp cwtl or cmpsl pop out (bad) std ja (bad) jno lahf cmp add mov (bad) and adc jle stos dec xchg adc xor (bad) lahf out iret inc and (bad) loopne pop iret cmpsl mull out jne fldcw mov jmp adc (bad) dec das cmp stos lea data16 sbb or mov (bad) iret sbb aaa out test mov loop imul test gs jl dec mov ret sub daa xchg xchg xchg sbb adc imul push mov rorb jbe push enter jecxz (bad) and loope mov and stos and movsl (bad) xor insb mov std pushf popa dec insb fstp mov leave pop mov cmpsb movsl jge je pop cmc pop int3 sbb pop adc push fisub inc aad lahf xchg clc cmp pop movsb mov push push imul dec int3 (bad) hlt dec sbb jp adc daa aad fs pop arpl (bad) stos hlt mov ret sahf scas test jge sub or and aaa lods pop and adc cmp inc clc sub out sbb std (bad) mov in mov push adc xorl movsl mov xlat iret mov je sub inc push decb fs scas arpl aaa hlt aaa jl cmpsl imull sub ja cmp ljmp sub fs scas xchg leave jecxz jae setle ja dec test xor push movsl push sub mov cld mov insl out sbb lret inc dec jg ljmp adc jbe cmc aam pop mov and sub mov xchg add in xchg cmp ja dec aad mov jp xchg data16 leave mov pop gs adc imul add (bad) xchg jg jg loop sbb test call test lahf jmp stos (bad) loope,pn fstpt xchg sub test scas mov das ret push int3 xchg (bad) jl addb mov std jae pop idivb cmp push bound or arpl out and xchg in adc or mov lock fwait iret les mov stc pop dec xchg or jns pop xchg mov ficompl out cs mov cmc and ljmp mov cs jnp pop inc or xor mov mov (bad) xchg mov adc and (bad) xchg negl call mov dec xor (bad) xchg push xchg int push xchg cltd mov pop cmc jno jbe fs cmpsb fldenv scas (bad) hlt xchg pushf decl movsb pushf je inc jle cmp outsb jno inc jo popf push call ja and pop mov sbb test sub stc jmp shrl sub fwait mov or pop cmpsl into sbb lcall orb xchg push dec iret pop mov stos cmp pop sbb sub wbinvd movsb pusha mov les mov fimull roll xchg push sbb pop ficomp imul push xlat rclb mov ret int add cltd out sbb jge (bad) (bad) in dec vaddsubpd sbb cmpsb loopne mov inc lock xchg andb ret push sbb cli addl and and aaa movsb inc clc testl fst xchg and stos (bad) sub popf ds es mov mov add (bad) cmp mov scas and xchg movsl subl iret loopne scas leave dec scas lret push push ret xor ljmp imull fstpl xor adc (bad) rol arpl jno dec imulb repnz stos xor sub inc hlt and insl vunpckhps outsl stc out jae pop jb mov inc test fildll xor in xor mov popf fwait cld imul push mov cmp jle push lret push pop jae mov sahf xchg push in (bad) pop add (bad) insl hlt fisttp sub sub dec or in xor addr16 in cld sub xor sub cltd iret xor cmc in out out xor fldl mov ds fadds and (bad) xlat adc pop mov inc ret mov js pop (bad) test and mov xchg push and cmp rorl test std push (bad) cld lret or pop jecxz sub daa dec enter lret add dec lret sbb push lods push (bad) pop in out sahf sbb sbb push sbb fnsave xchg enter mov pop mov pop push fsin cwtl lahf cmp jns mov inc sub or push es (bad) arpl cmp lods add xchg in sbb pushl das out jbe ljmp dec and test pop addr16 popa (bad) in cmp push pop fdivrl int hlt jp xchg jb dec jnp insb in cmpsb in in decb js adc lahf adc jne sahf jbe inc aad popf or or std inc inc cmpsl inc push out mov lea jmp adc jbe push test inc std pop jg hlt scas sbbl clc sbb mov jb outsb mov dec jmp call arpl loopne (bad) out loopne jge xchg sub stos xchg cmp push mov fldcw pop cmpsl jae sbb in add jae in das mov and pop (bad) cmp dec jno jo iret (bad) cld and inc mov inc dec jbe icebp xchg pop mov aad out sub inc sub jmp mov imulb mov xchg sahf dec out in push out stos xchg sbb out cmp sub ja aas hlt adc test scas and push lret push dec push or call stos hlt mov idiv pop dec xchg popf mov rcrl mov xlat loope ja arpl outsb in pushf inc pop fwait fwait insb push pop fwait xchg inc pop stc sbb jl aas xchg (bad) xor neg inc mov push pop sub (bad) lds ret outsl jne cltd lods ja jecxz push aas ja movsl xchg pushf sbb inc pop pop aam icebp push inc xchg rcl das leave pop repz cmpl push inc or cmpl add lret aaa mov xchg sub xchg std inc aaa jecxz sti sub cs dec mov aam imul rcrl jge mov js lcall scas imul call pop fs rep cmp mov in cwtl xchg es lea ljmp hlt pusha mov inc mov movsl pop jecxz test fmuls es addl int lea cld cmp lock push movsb add mov mov insb in aad imul movsl mov lds cmp test pushfw mov inc pop mov jg xor sub popf jl sbb out or leave push mov jns xor icebp sub lea scas stc sub movsb add mov mov stos lds mov fwait insb outsl les pushf push scas adc mov int3 jae fisubr fiadd ds mov jne sub mov pop addr16 aam loope lock (bad) ss sub insl add jnp pop hlt sub cmpsb sbb ja ss mov adc pop pop cmp popf (bad) xor pop iret das xchg (bad) movsb mov dec jge dec sub stos das mov stc out cmc pop out into test ret inc pop and mov mov jne mov mov or cmp mov push dec lahf or push fstpt cltd popa lods jg push rclb (bad) mov imul fisubl mov fidiv mov leave sbb movsl std xor aam cs aad and mov jns stos imul clc data16 inc pushf or aam imul jp ds gs std popf and inc mov call imul mov lds mov mov sub mov in js cmpsb mov mov aaa sbb fadds movsl test dec into or dec pop mov out pop pop or jmp dec (bad) adc xor xor out xchg jmp cmp push adc pop leave adc mov test insb sahf jo mov push sub dec inc inc adc inc sub jb cwtl dec in dec loope movsl cmp fwait dec mov xchg cmc mov in loopne insl sbb and or add int cli push dec out add or xchg es imul loop mov or imul insb mov jnp bound jle fwait cltd scas cmp rolb stos mov add ljmp lods pusha popf clc push popf sbb pop jno push ror rcrb fstpt (bad) fwait mov jp ljmp xor add fbld lret mov lahf push shll and push xchg idivl sbb fmull pop lds sbb dec xor imul mov xor enter pop mov test stc mov (bad) sbb mov fstps xorl xor jg xlat (bad) loope (bad) andl xchg sbb sahf xlat mov loop (bad) mov or aad pop xchg add icebp dec mov arpl je jmp cmp xchg lahf repnz pop rcrb sti mov lea roll popf (bad) dec cmpsb add sub xchg (bad) dec or out sub sbb mov xchg dec enter xor push rcl in ret fwait (bad) or insb stos adc adc or loop scas pop scas jl jno adc imul (bad) jecxz cli inc jmp addr16 std bound mov inc xchg jno fildll inc repnz orl and frndint xchg cwtl mov aam aad ret add mov mov stc mov test sbb mov push add aas cmp jle mov (bad) ds ret ds daa call loop or mov push jp mov jns imul cltd sarb pop sub jno mov dec pop mov leave cmp insb push xchg aas stc lcall fnstenv jns push add std mov pop js mov mov rolb aaa and pop testl mov and lret jg xchg fldenv push ljmp mov stos push mov add es loop jb (bad) lcall inc jge fsubrs adcl mov push in sbb push jmp js daa imull xlat ja mov stc jnp add mov add clc xchg add (bad) popl shrl push call xor xor cmp add sbb add xchg mov mov in cmp mov gs in sub jbe add scas and int3 jg aaa in mov loopne pop mov (bad) popa ds lret shll jg call jle hlt mov push loope scas lret loopne add aad test dec repz leave aad movsb sub fnstenv aad bound dec clc push mov iret add pop test mov pop iret cli sbb adc leave cld sti inc mov and repnz test jbe jbe sub sub add (bad) xchg scas pusha sbb in pop and out and jmp inc cmpsb cld loopne test loopne mov dec cmp fnstcw sub xor stos add xchg enter mov xrelease lods adc push xchg xor into nop dec jnp fwait push imul aaa mov push cltd daa fidiv mov outsl or jg sub pop dec lahf test mov and add je cmpsb fdivrs jbe pop adc (bad) fstpl je cmc dec int3 imull add jo test mov gs imul hlt movsl in and idivb xchg adc test push mov pop push mov fs cmpsb jbe add sub add mov push jbe add fstl loop add cmpsl in ret lods xchg loopne lods outsl aad sahf push loopne jp loopne test bound xor loop in jl xchg mov jno fcompl pop pop fldenv xor sbb out sbb inc daa mov rol roll out inc mov in nop cltd aad pop mov or inc and dec adc push (bad) sub cmc mov in adc xor push pop jmp imul jp popf add jle xor dec dec push scas out gs in sub and sbb pop inc dec hlt push mov cmp push cli push mull shr aam mov xchg push call stos xor bnd xor loopne xchg out pop add out xor stos mov mov mov fsubrl xchg and adc cmpsl cmpsl dec in and mov xchg mov xor addr16 xchg dec sahf loope mov add sbb sub pop push arpl xchg movsb lahf loope int3 sahf pushf jg icebp repnz shlb lcall (bad) leave add cwtl push add xor sbb xchg mov mov outsb orl jp das fistpll jnp in sbb jge imull mov cmp mov cltd or into or or lea scas aam xchg outsb xor cmp pop test rcr jl loope pop sar outsb lds repz xchg and adc mov loop adc fdiv xchg or in xor fistp mov mov push fstp or jp lea outsl ja inc mov leave repz (bad) lcall les dec or (bad) repz sbb mov cmpsb xor jbe das adc sti mov das mov lock (bad) (bad) stos sbb dec movsb pusha mov push in push or adcl push leave popa in (bad) add mov stc js pop sub jnp and loopne sbb ljmp and jae addr16 daa adc mov jbe int3 pop dec jno adc nop xchg (bad) lds and daa rorb in inc mov sti roll leave mov repnz mov test pop fcompp movsl push cmc mov out scas cli sub or xchg adc push std popa jb cmp mov stos mov insl mov inc mov cmp add cltd or fidivr sahf inc push pop out sti mov push ret jo mov cltd (bad) and mov inc pop sbb clc orl in call and int adc rcr xor cmp xchg ljmp (bad) or adc fwait jae fisubl loop rol mov xchg xor dec (bad) mov mov pop roll fs xlat testl cmpsb orb jg mov cwtl pop push loop xchg stc loop xchg sbb sub (bad) or push js sahf cs cmpsb mov sahf cmp lock mov inc xchg push or push jno mov (bad) inc and enter jno mov mov dec rorl lods lds xchg in cmpsl test sbb pusha es or repnz scas std cwtl push cmpsb jne stc in jp xor scas scas and sbb stc sub jmp xchg or add xchg mov push (bad) repnz and mov pop inc inc or sahf xor nop sub xchg data16 jb adc sahf mov cmp xor (bad) repz test outsb lret sahf mov xchg cwtl enter enter inc dec int3 rcrb jge jg idiv cmp sarb push xchg jg aas mov ja inc outsl js adc pop cmp mov fldenv inc ffreep lret cmpsb mov lahf mov mov xor nop mov dec loopne out jge and (bad) push push jbe aad sub (bad) aam fs add stc push mov cmpsl mov fs or inc data16 jo xchg pop mov dec int3 rorb cmp pop or mov fist leave adc inc fucom std and mov mov dec dec add fwait bound loopne movsl ret xchg nop sahf sbb cs add repnz inc ja sub js sub ds shlb popf loop mov nop fs jae and lret cld lcall ljmp sub test mov push push mov xchg or hlt shl mov sbb push cli and cmp sarb add pop clc cmpsb pop push inc mov (bad) rol pop jmp pop jae push test pop test xchg mov sub add stc cmp pop scas sahf call rorl inc add ret xor in sub clc xor adc mov and out gs insb xor mov cmp cmp fsubr imul sbb sub loopne push xchg mov mov pop std xchg imul inc fnsave and dec xor and xchg mov cmp inc pusha push pop int3 insl addb push or loope pusha sub addr16 sub push pushf sub xchg sbb loop ret push fisubrl je sti push and inc pusha aaa movsb rorb push mov clc pop in mov jne aad scas je mov push std int3 jo addr16 fist push sbb dec stc and xchg data16 jbe dec and lods loope pop push out xchg flds in cmp js mov mov icebp stc adc stos stc repnz ret mov adc std mov loop sbb stos inc pop rolb negl dec shr cmp jns and cwtl addb and sub je pop scas mov add sub inc popf xor jbe in arpl mov pop shrl aas sbb xchg dec in fwait jle add jnp dec int push dec imul dec cmp push out repz add popw or dec dec (bad) imulb cmpsl sahf call add cmp cli mov clc lcall incb imul cmp movsb popa jg repnz test pop sbb cmpsl sahf push pop inc and (bad) test imul mov and mov mov movsl stc and je pop scas push jnp pop mov stc dec sub cmp mov inc int3 dec dec inc outsl mov ds jg add dec and cmp mov cmp popf mov dec outsb mov movsl xchg mov jp or sti xchg out inc sub pop das shlb add or inc insl fstpt daa outsb test push std jg mov out adc repz rcr mov push enter fsub xchg push mov or movsb xchg stc fdivr cmp flds mov xchg pop xor insl mov gs dec fnsave mov xor js pop sbb in and out cli inc mov ljmp stc cmpsb dec push mov mov test mov vpaddb and adc aaa inc hlt and pop negl ret fldenv in adc xchg pop test sub mov inc sbb dec sahf dec lods cmp cmpsl fistpll sub mov cmp rorl or repz sub inc scas stc add sbb cwtl dec jo outsb cs sbb lahf pop (bad) cmp pop mov mov xchg test lret movsb lret jb push ja xchg gs mov xor (bad) fwait mov pop daa mov ret (bad) fisub sbb mov arpl test xchg int3 xchg into push cmc aas (bad) jno fcmovu pusha imul stos mov sub fisttpll ljmp inc jbe daa aas sub fmulp in xor stc orl dec loope lahf stc lret pop (bad) mov push jmp dec mov ja adc addr16 movsl ja mov jle pop into lahf xchg pop std lret int3 dec test mov push sbb arpl pop (bad) pop movsb aas aad sbb xchg repz aas sbb dec popa out pop fwait cmp adc jno inc pop jno lret or stc xchg movsb pop xchg daa add jl jb popa pushf lahf push xchg cmpsb sub sub arpl adc xchg fmulp incl pop or imul pushf and mov sub enter inc sub sub out pop xor aaa pop icebp out dec daa out jg mov jge lea in cmp xchg and aaa mov xor das jle jo sub pusha in enter sbb dec and movsb inc mov adc das or nop inc ja rolb aad pushf lds add in inc inc int3 jae cmpsl pop jae xchg cmpsl jp lods cmp jg aas dec jae clc xlat xchg inc mov and pushf mov pop sbb mov mov inc icebp popf mov sub movsb push and xor loope mov dec dec jae hlt pop int3 mov pop dec lds test ss jae fcomps stc cli adc lods ffree sti cli dec enter es sbb (bad) ja pop mov and jecxz adc pop inc cmc lcall jnp jmp sarb (bad) out jmp mov pop fnstenv jae call pop not out fisttp out in arpl xor cmpsl sbbl inc dec mov (bad) jmp push or xchg cltd cli iret mov cmp lret xchg rcrl inc movsb and adc sub mov mov jge data16 lods pop icebp inc test loope lods enter lds popf xchg sbb adc js push xchg sbb add jmp pop icebp mov and cmp std cltd dec cmp (bad) movsb mov fwait call sbb jge jmp dec mov ja test addb icebp gs mov leave insl pop dec push mov mov popa cltd fwait ljmp xor jle mov jae sbb fwait add lret jg adc jno push mov pop insb and scas pop std sub imul test add adc cli lds and sub in mov stos cmp icebp ss xchg scas test hlt pop pop movsb (bad) scas push sahf mov and jge jnp cltd jno clc dec cmp ljmp pop or jae ret sti clc sub es or push cmp push jp and add les je add sbb mov xchg xchg push inc xor mov push add mov dec std cld jcxz inc rcll jg div aam jno,pn lods pop je adc mov or mov lret (bad) dec (bad) cmp mov leave sub adc sub mov jl sub inc mov jg mov out movsb stos inc mov test pop or xlat aas xor and dec or leave and loope scas in icebp popf xchg adc movsl pop sahf push push jne inc jecxz test push ja and in adc leave inc dec cmc cld in repz fwait adc and pop mov cmpsb xchg inc adc test fist or dec sub xchg mov xchg out sub xchg xlat test popf rolb aam sub sahf sub xor stos dec cmc lahf or divb aas mov das mov cmp es push xchg js sub sub pop int3 dec dec fidivr pushf jnp sub fsubrs add dec add das xchg pop xchg xchg imull xchg jmp sub es sti iret and daa pushf ffree in stc pop xor into xchg jmp lret insb cmpsb add adcl jl ss aad sub mov movsb mov iret inc xor (bad) sub addb (bad) aad pop lds lods nop inc fwait aad jnp mov inc outsb roll icebp jecxz inc dec xor inc aaa inc aam out push lds pop dec mov ds dec int mov cltd inc mov lcall lahf xor call cmp into xor inc push mov lret add xchg and xchg adc loopne les xor and js add xchg decb or lea lret test pop xor sbb and ja push call mov dec vfrczps dec mov out xor inc gs shrl stos cmc add cmpsl test and mov imul adc adc in pop mov xchg mov jnp fisttp in je dec jae es fmuls pop test sub xchg jnp add cli sbb cld adc mov fistpl test mov cmp insl pop (bad) iret popa lret jne dec stos dec cltd jns das cmpsb mov dec mov test mov mov mov xchg xor cmc popf clc cmpsl mov gs jnp ret and ror mov pop scas sub fsubp std dec cmc cmp fcoms pop dec push test aaa idivl mov or xor lcall or cld xor ret lret jns fwait dec xchg mov cmp loopne pop xlat cmp xchg decb out hlt adc gs ja jl ret add loope das push sub in and push add fstpt xor clc aas add scas ja cmpsl and mov pop shrl iret dec inc aam dec xchg lds std mov pop scas dec sbb add cwtl cmpsb xlat sbb xor sub stos dec cmp push pop push std push shll hlt jnp xlat cmpsl xchg or wbinvd or xchg dec lahf xor push int fmulp mov popf jge sub fdivrl fadd push jb ficompl adc pop xchg jb (bad) adc fbstp je int jbe (bad) ja fcmovne ja dec popf pop pushf fisub (bad) sti mov lret push into cwtl jge imul push push mov int3 cmp sub pop or sub mov aas sti das jle pusha fcoml popa mov shr cwtl (bad) lods cmp insl mov ficompl std sbb sti dec cmp daa ds xchg stos cmp mov and lret push mov mov jge xchg test shll lods inc nop fxch fcmovb popa outsb mov adcb icebp dec mov mov xor pushf jmp sbb xchg sarb push and xchg dec and cltd loope pop repz (bad) dec dec and sub jns repnz arpl lea pushf lahf icebp xlat (bad) mov and into push xchg mov pop flds stc leave mov mov arpl cmp or lods dec (bad) fisttp push and dec jb shll inc in sbb dec mov les imul cld sbb fwait add aas mov cmp dec add stc movsb inc (bad) jnp adc dec lods sar add jg xchg test out fidivl push inc test mov cmp jnp cmp lret out sahf out inc adc icebp arpl cmp pop (bad) leave pop pop mov fadd sbb (bad) test mov iret fwait xchg aas iret sbb jmp jnp dec jge xchg mov xchg shlb or push out jge fildl push sub mov enter mov mov sahf (bad) leave rorl cmp les mov clc mov outsl (bad) fdivr (bad) jne mov pop in sbbb add jle (bad) popf push pop outsl stc stos (bad) cltd lret cmp icebp fdivs jno faddl inc mov pop mov jne pop xor lea aam ror pop aas inc mov jno std and shlb dec aam cltd fiaddl adcl or sub and mov fbstp orl add sahf stos insl mull aam (bad) push cli out pop fdivs inc (bad) movsl mov xchg xlat pop test mov adc jbe imul das stc int3 pop je cltd lret mov mov imul xchg (bad) lret xchg (bad) mov (bad) jo in movsl inc in mov add push out jae sbb mov jecxz les inc mov cmpsb jle push and aam pop clc lcall std jmp add dec push rolb outsl mov repnz dec mov jle icebp jl loopne pop adc insl sub addr16 lahf scas cmp mov xchg dec fistpll xchg outsw stc enter fwait jge inc and jnp inc out test and jno data16 mov ret ljmp cli cmp pop add flds aad rol and adc cmp cmp (bad) sub pop daa clc cmp xchg xchg lret es adc pop lret addr16 je push or repnz mov ficompl inc pop loopne cmp sub aaa mov adc jae and dec aad outsl daa or cltd mov mov pop ss fs inc std push dec xchg and repnz inc scas and and or jg adc sar inc idivl dec out push mov cmp xchg sti sub jmp test inc mov and xlat mov mov scas mov pushf and xchg sbb mov test pop pop shlb xchg inc sar xchg repz sbb xchg xchg or add cmpsb mov mov out add push orl sbbb pop lret lock (bad) in pop mov push pop ss add sbb loope jecxz inc mov ret inc add mov inc jne lds rorb lahf adc dec xchg jle movsl and jg jae xchg lahf mov cwtl mulb in ja ja lret dec repnz sbb xor xchg push pop icebp lock sub rcrl jns sbb mov loop leave lret mov mov cmp jb xchg imul dec rcll cmc dec out loope addl push orl orl inc fs aad inc test or (bad) xor sti loopne and imul rclb lret (bad) xchg pop fwait stos out pop movsl xchg std xchg ljmp mov or mov adc cld out sub mov dec xchg inc xrelease add inc inc rcll inc xor ret aas or fwait out pop (bad) inc jbe xchg add and add and inc das out fcmovnbe adc stc pop fstpt mov jnp pop call sti xchg dec mov scas ja cld ret dec ljmp lods (bad) jo dec xor addr16 fwait icebp jecxz nop jae sub pop shlb fist call sbb cmp add aad mov jge mov sbb pushf cmc xor sbb jle push (bad) insl adc cli frstor jecxz gs pushf mov outsl xor cmp ja cmp pop mov fmull sub cmc adc xchg mov leave sub popf fstl stos (bad) jp sub fldenv and ret jp roll cmp stc cmp sbb mov idivl mov leave xchg mov popf and cmp mov loop add sbb sbb stos cli stc lods es sub cmc (bad) sub cmp cmp js xchg push movl xchg pop sbb nop les and fadds adc leave inc std sbb push bound inc adc dec leave adc xchg cmp pop jb jo mov push pushf cmp out (bad) inc cmp lahf cmc lret in ret cmc ret loope sbb shrl test ja or inc jle hlt pop and (bad) out cmp sub mull in sahf cmc clc or std jo push xchg pop sti test loopne sbb jge add out mov lret xchg inc loop sub dec adc cwtl out jg jnp and push and adc sahf inc push inc xchg das mov xchg fisubrl out xchg inc xchg (bad) jno shlb push inc mov jle jp test mov in gs pop mov inc lods pop pushf enter subl clc xor fadds cmpsl data16 xor addr16 movsl jae subl pop sbb lods cmp jg cmp inc (bad) std mov inc dec lds out pushf in mov inc lods cmp (bad) (bad) lea pop outsb (bad) or mov jbe mov sbb push sub fwait dec repz sbb xor mov hlt push mov fild repz jmp cmp test ficomp mov push sbb or sub mov add push ljmp adc pop out insl adc jge sub mov xor ret sub add je or or daa jmp cmpsb test mov fiadd enter xor inc jbe mov mov lahf pop mov pusha sub stos inc jae cmp arpl fs in and pop add lds notl pusha pop lahf das (bad) cmp mov fsts fldt mov popa stos pop pop cmp fwait movsb jae dec pop or sub jg mov adc aam lret push pop and stos push sub arpl jbe sbb and pop xchg and rolb adc (bad) mov repz xchg jae ss aas pushf xor cmc mov add lock stc push js xchg pop mov jae inc adc es aam push xor add pop cltd cmp out outsb xchg sahf jns imul lret dec xlat aaa jb fldenv enter adc dec subl sub icebp push pop cli jae adc mov cmpb clc push dec push sub mov sbb aad push or lds test xor mov xchg pop (bad) cmp in dec std pop push imul sbb into cmpsl (bad) mov das sahf lcall and xor xchg aas (bad) fidivr and xchg test xor loopne into inc std fnstcw push pop jp pop mov xchg out sbb js das scas popa call sbb sahf movsl and scas xchg xor out mov sub lcall and sub (bad) xchg cld mov mov daa push in push sub sub xor fnstenv push lret icebp notl and sbb fsubp arpl or repz out scas lahf and das adc aaa push fwait stc pop adc sub inc fildll jbe icebp inc jmp add mov inc loope lods mov cmpsb icebp cmp and lds adc lret xchg (bad) dec gs sbb and mov adc lds pop sub and lahf (bad) jmp les mov mov inc pop or test addl mov js cmp stc dec cltd or rcrl jmp and addr16 enter in push mov fwait aas rcll (bad) (bad) push jbe jnp dec pushf push mov cs rcrb jne jno (bad) loope cli in jle sub addr16 sbb push lds ret xchg lods leave mov rclb pop in in or xor in pop lea mov pop leave leave pushf es ja out in or cmc out test and popf xor std insl jo sub (bad) in lahf sub pushf fcoml push les inc mov stos loopne movsb cs das in cmc arpl lds adc aaa xchg pop cld jnp in mov in jnp sub mov mov sbb outsl jo cld mov adc xchg cmc push outsl sti (bad) xor in cmp lea jg stos movsb push idiv cmp add test rol pushf sbb xor mov sub das cld pop clc in and mov cs pop fs jmp test add mov cmp mov mov pop mul daa ss ret gs aas push clc sbb jge jle daa test jg pop xor adc test pop xchg xchg jae test outsl ret repz xchg iret cmp push jmp pop call movnti xchg addr16 mov xchg xlat ret sahf jns push xor ficom xchg imul (bad) xor push lea mov xchg push scas test adc and pop sub mov pop xchg mov and and mov mov push (bad) imul push cmp push (bad) imul jg or push jg cmp add (bad) imul (bad) pop xchg pop jp push pop in rcr in mov nop sub movsb loope mov cltd ljmp inc (bad) bound test push fistpl iret jl sub jge adc mov adc jnp lret xor (bad) repz or shll inc in nop or pop xorl push and outsl lea adc icebp mov xor fprem sub (bad) in scas xchg pop movsl addr16 xor jecxz dec xchg xor jae mov mov cwtl cmpsl aad push xchg xlat push (bad) xor dec and dec sub cmp sbb jg push xor das inc lods mov mov fldt sub dec mov test ficompl push sbb in fisttpll dec lock dec cmp sbb in popf jno notl sub into aad mov out dec in or fwait sub sub or cmpsb adc icebp push push mov mov pop call fdivrl add outsl xlat xor cmc xor jecxz jo movsl arpl out sbb pop (bad) adc fs jae pop hlt arpl imul call mov sub and cmpsl test loope mov jmp mov xlat jl sahf fildll jle or push setae dec sub popa dec cmp dec sub fs scas daa leave jnp or xchg push add mov cwtl mov fildll xchg jge cmp orl fmulp push clc and out push sbb mov push out sbb in dec arpl push jnp pop push movsl mov pop leave sub cld or pop out push jmp sbb sub jmp (bad) mov jmp mov arpl add daa jns addr16 mov daa jg imul scas or or dec icebp aas sbb mov sub movsl in mov mov orb popf (bad) mov or movsl cmp or mov outsl negb test and popf dec sbb int imul test pop shll dec cmpsl cmpsb cmp inc mov mov mov cld cmp dec inc movsb lahf int mov or and push popf cld out dec jmp outsl pop dec push fisub xchg cmc sbb sahf adc cmp insl cwtl mov aam add (bad) addr16 push inc sti icebp ds jnp mov ffreep lods adc jl sahf adc jge sub mov insl dec mov xchg pusha xor addr16 pop and lea sub dec pushf dec mov fs dec movsl jp xor jae cmp out sbb cmc (bad) mov sbb sub jl sahf sub mov pop insl fsubrl icebp pop test aad std lcall pop (bad) xor and pushf sbb mov dec inc das insb mul pop cmc inc aad in and fimul jmp jmp outsb movsl call sub in or mov ljmp pop lock (bad) das mov out sub das cltd pop fbstp clc idivl insl push pop sub incb xor and mov jg loop cwtl sti (bad) jnp (bad) jnp stos pop int lahf mov outsl mov cmp sbb int and icebp mov mov cmp mov in outsl int cmp incl call icebp cmp push iret clc loop out scas andb add test repnz (bad) iret (bad) test cmp stos aad cmpsl lods outsl add pusha cwtl mov or loope divb inc in (bad) dec mov ret bswap sub pop mov in mov (bad) seta jae mov sbb stos adc mov lret and aam mov push fstl push in pop push shrb cs xchg nop mov iret mov push insl repnz enter adc (bad) lret (bad) dec mov popa mov dec ss enter and mov fmuls decl adc outsl arpl clc rcrb in mov in pop push insl (bad) in mov cmpsl movl cld test call test rcl (bad) jne mov push mov js mov lcall push in mov lret push sti sub and cs mov mov pop rorl sub adc out leave dec jp psrlq xor push aaa jne das jmp mov mov imul outsl xor push std cmp push sub push push fisttpll jo adc jmp or dec in mov (bad) or outsl lahf pop lcall cmc in push movsl jne dec (bad) ds out aaa outsl sub (bad) mov push in cmpsl mov out lahf jp in sub or leave cmp outsb xchg xor into (bad) mov in es aam cmp dec in mov addr16 (bad) push pop outsl lods and es and pop mov fs loopne or jl das adc sub xchg or out jl add mov and insl xchg xchg mov jb outsl loopne jb outsb (bad) jmp ljmp fwait lret loopne push jno or xor lret es clc sub cld cld das mov nop addb xlat leave xchg sub fs in imul icebp inc subl and cmc xor xchg in iret popf (bad) lods or lods out sbb cmc (bad) mov jecxz and mov mov cwtl add iret repz add pop push out fldcw test loope xor sub dec fs and js fs scas outsl leave push hlt pop gs add and aaa xor add data16 dec dec xor pop xor das movsl jg call pusha sub cmp sub in scas xchg leave pop hlt outsl jl sahf daa test jle add fcomps scas hlt mov test jge sub xor fbld dec and xchg (bad) fsubrl gs mov loop notl push sub dec jno xor daa movsl arpl push jle sub fs ja mov and jp jbe daa test sbb mov inc add xchg ret mov jmp inc xchg and aad lret hlt push in stc mov lcall pop in movsl lret nop add dec or cmovle fcoms ljmp fimull outsl xchg inc pop add adc lock mov (bad) pop dec or movsl push mov mov adc aaa jne jmp add mov push add imul jne addr16 push stc popa gs or xor xchg dec add addr16 int xchg outsl aad or (bad) lahf push mov or sub cmpsb outsl inc mov mov xchg inc out mov (bad) fldenv pop aam xchg add in sbb shrb outsl in cmp adc xor int3 xor insl mov add pop fwait or into stos mulps imulb mov pusha sbb out inc mov call arpl add or and and push inc jb outsb sub xchg imul mov das in mov push xchg or or add add push mov in pusha xor in popa pop mov add roll jp fcomps or fucom icebp mov adc popf push lcall mov pop sub movntps or adc adc adc or sar mov inc push mov inc and xor maxps cmpsl mov js dec xchg mov out sub sysenter add fucomip xlat (bad) sahf inc mov or xor add loopne cmpb pop dec out push fwait pop insl add out fcmovbe pop pop ljmp push lock outsb and shr xor xor sahf cmpsl cmp mov in xchg bound inc add cvtps2pi mov (bad) mov cmc mov jo cld fstpl dec cmp mov lret mov mov jns jl fs imul (bad) loopne leave push xchg adc and in fwait inc inc and dec cmp int3 mov test jle test jmp sbb cmp outsl sarb mov mov pop and arpl arpl mov pop andps outsl sbb pop pop mov inc sbb pop mov cmp test shlb mov in mov adc rorb xchg fmull xchg imul add pop jl adc arpl mov dec popa (bad) (bad) jne imul mov test jo stos fs mov insl mov pop push push push xor inc cmp pop std out (bad) imul lods lea and nop adc shll scas fcoms repz gs gs (bad) in cmpl test or out out cmpsl sarb inc inc or mov in std mov cmp shrb mov fistl lea sub pslld lcall add mov mov (bad) mov push jge flds adc scas jns sti pop mov fucom mov repnz insb test dec fldt mov mov popa shll pusha push cmp cld call mov pop adc mov rcll xchg fnsave mov in int movsl cld pushf pop cmp lods pop pusha cwtl or mov jno mov or ret adc imulb insl cmpsl addr16 xor and inc mov arpl pushl push (bad) cli cmpb rorb ja push out and jae push shrl adc je imul or mov shrl mov fsubrp lea sbb movups dec jecxz ljmp or sub test sub fs icebp jle leave sbb test popf dec aam mov in sub fs sbb loopnew int ret dec add cwtl cmpsl movsl imull addr16 dec cwtl inc cmc (bad) mov adc cmp sbb inc (bad) and or icebp xchg and fs loopne dec nop push inc js cmp sahf fs jnp dec push jnp in leave adc mov aaa icebp or jle cmpsl test imul repz mov or add jno insl jmp and ljmp test push or aad xchg jg cmp pop pop xor aad or sbb out cmp mov pop aad lret fstpt sahf lods xor ss mov dec icebp stc push shl mov aaa add aam icebp scas xchg pop aaa repz add rcll pop push pop popf pop sbb int3 jae js inc mov inc mov das pushf add jnp inc je fwait fwait (bad) loop sahf mov sub out lock repz test incl pop fdivl xor leave pop lods scas loope mov dec xchg xlat and js push dec or dec (bad) and jge xor fs scas jg pop jecxz test daa cld sahf (bad) dec icebp jg or xchg jecxz add inc xor sub scas fs ja add outsl jl sahf xor jle push pop out ror mov sahf fwait test jge sub daa xchg sahf icebp dec lods dec jmp out sbb imul scas or xchg or dec xor xchg cwtl aaa movsl dec sub sub fs scas outsl leave das hlt and add push push out mov (bad) movsl xlat sub sub adcl mov stos and inc lahf add mov mov mov or dec pushf push lret outsl or (bad) mov ss mov mov out jns movsb adc add imul repnz cmp (bad) in sub pop loope cmp cmp test jge sub rcrb xchg cwtl dec movsl push sub or das out out mov hlt fwait jl sahf jnp pop sub add or cmpsl mov push clc test mov (bad) adc stos lret je stos addr16 mov fildl outsl in outsl mov paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw paddsw .byte pop fnstenv add add jb push aaa stos inc std xlat inc sbb das inc inc std push jnp imul lods mov jo mov (bad) inc inc std (bad) inc add xlat sbb xlat inc inc nop xlat add or es jle ja movsb out aaa push repnz jg cmpsl (bad) stos mov jl,pt imul inc lods (bad) bound inc (bad) sahf cld push mov daa adc mov inc inc aad inc inc std das jo std xlat inc cli das aas dec push jl dec sub out or popf inc stos pop mov int cltd jecxz lds inc inc scas xchg xchg loop inc inc std xlat es inc inc std popl xlat dec subl stos mov inc inc pop bound addr16 bound addr16 (bad) cmc ret jbe or cmc push incb xlat inc inc iret dec dec int sbb inc xchg imul pop mov or int sbb mov xchg imul pop mov fsts vfrczsd test or ljmp mov aaa dec dec add dec mov xlat lods fsubl inc inc std fsts vfrczsd test or dec lods insb ds inc inc std xlat aaa imul inc std fsts (bad) (bad) test or dec lods sbb outsb mov jnp stos dec (bad) inc inc mov mov int3 aam inc inc std xlat inc xchg imul pop mov fsts (bad) xor inc std dec pop jle faddl outsl in sbb outsb mov jnp stos (bad) (bad) inc inc jns ret pop test bound and roll std popa dec or dec pop (bad) iret fxch stos dec bound and fadds std rcrb dec aas cltd repz das test inc mov and cld (bad) xchg fcmovb jge fmuls movsl add push andb dec sahf mov les inc mov in xor jae mov clc repnz lar dec ja xor push mov xlat je mov cs fwait jl or mov dec mov loope (bad) rolb lds fs divl push mov sub fsubrl pusha stos rcr aaa fbld xor scas inc out outsl push loope je mul notl sbb jle (bad) fbld mov pop xorl bound addr16 xchg xchg fistpll clc repnz and lret fidiv sub dec dec jecxz cmpsl xchg pop or or pop dec (bad) cmp cwtl and dec sbb scas dec fcmovne cmpsb jns imul xor (bad) dec pop (bad) or pusha pop mov push test push popf fistpll inc cmp add mov ds or (bad) mov cmpsl (bad) mov pop inc int3 inc fbld test add dec push xchg rcrl aaa mov in mov sti cli in cmc push pop cmp cmpsl test ss les cmp cmp cwtl xor jge jge std aad or pop sub lock mov ret jb in xchg ljmp shll mov cmpsl add rcll mov xchg mov push cmc (bad) cli xor into (bad) ljmp inc mov mov aas stos xchg aad int3 ds jp in xlat es rol enter test les xor push lea test mov adc call dec int in dec mov call dec push fld xchg gs sbb cmp lcall jns enter mov insb jecxz push imul pop dec lcall dec push dec ja (bad) jge loopne roll ror pop push pop scas repz loopne lea push mov pop (bad) std loope ret adc mov xorl dec test dec dec or jne stc xlat rcrb (bad) mov iret push (bad) cld (bad) mov scas or (bad) mov jbe xchg xlat movsl mov iret mov in in das jns imul sbb xor mov popa push loop dec nop push add out cmp add rcrb pop mov cmp adc xlat fwait das inc enter pop cmp (bad) mov mov jl sti leave repz or arpl out pop lcall dec xlat shlb notb sub fdiv mov dec mov xchg fmul and aam gs push xchg lds push fwait (bad) (bad) dec pop lods pop cmp in lret int inc mov es adc cli inc push sub in movsl ds jne notl dec jmp pop inc inc jmp lods sub (bad) pushl repz and out pop pop cmp inc push jae loop mov daa test or cwtl fs dec push (bad) or inc push add fstps mov nop lret or clc jmp shll dec cmp cltd int inc pop arpl test daa scas add outsb cmp fstpl mov add mov push cmp shll arpl xor aaa call inc dec mov adc adc cli xlat mov adc fiaddl jecxz jge xchg jo cltd icebp pop out test push jp mov int or mov fs test push outsb ja addr16 mov arpl dec pop in sub xchg dec (bad) sbb xchg shrl sub int push jno xchg or sub dec test ja lds dec in outsl scas sahf jecxz cmc je mov scas xor mov hlt bound mov mov pop popa in add push mov or add xchg pop push pushl inc xchg (bad) stc pushf push dec roll xchg mov mov xlat cmp rcll push dec scas xor jbe ljmp sbb or dec lds repnz cmc int test pop (bad) fsubrs pop fmulp daa clc sub cmpsl jle dec push dec xchg jp cmp inc cmpsl fsts fdivrl and inc scas cli pop cmpsl repz jp pop fwait cmp repnz mov aad xor cli xchg rcll dec cmpl fldt ret test clc std lds out neg ljmp jns add loope ds movsl mov mov dec fidiv rcrl mov (bad) ffreep pop in dec dec rcl cwtl dec daa cmp mov mov inc dec das jl insb and test in jmp fisttpll adc xchg hlt fidiv mov (bad) dec rcll cmc jecxz ret movsb push mov inc pop lods sbb dec xchg mov mov aam add cltd inc test add add out pop loopne outsl je sub ja xor cmpsl or push repz outsb lret stc inc jge jge adc movsl jl (bad) in test (bad) add sti rcll fldl (bad) or mov lods dec cs xor push push clc rclb fwait pop out add pop fldenv inc cmp fisttpll sbb cmpsl addl loope lods sti or push scas and addr16 sbb daa rolb pop movsl jne mov push sub push fisub mov dec pop pop outsl push test fimull mov test addr16 cmp fistpll insb aam imul insb lods les roll jecxz xchg shlb clc jle mov fsubr and lea repz jo adc mov push add fisubr lcall jo pop jle inc repnz arpl in jge sbb loope sbb (bad) xor and sbb push lcall cmp lods stos rol inc pusha rclb pop sbb movd mov sbb ljmp fnstenv ja test adc dec bound inc and mov xchg sbb fwait inc xchg enter ljmp inc sub pop or test mov dec add adc out push jl scas nop dec jl (bad) dec xchg (bad) mull inc xor inc imul add jae pop xchg int jle and push fsin imul cmp mov lods icebp pop (bad) into mov xchg fcomps and add xchg push gs or imul push fdivl sbb pushf pop xor idivl mov in rcl loopne iret pop push pop insl dec xor mov and dec insl ret pop dec lock ss les mov aas pusha pop dec or mov push inc and mov pop jecxz andw dec fldt dec cvtdq2ps lock es push sbb push in jno aas adc push inc xchg imul sbb sbb mov cltd (bad) or ret inc and adcb sub (bad) jae dec lea jae (bad) push jnp or loopne or sbb sti sbb push jmp aad lahf xchg dec and jp dec sub inc add push movsl cli int3 test rcl test and dec hlt mov lret adc push fdiv (bad) fnstenv sbb icebp sub arpl test add (bad) mov push outsl and mov hlt aam fcmovnbe dec hlt enter das das cmp out loopne add inc sbb jle dec test lods push lock jne sbb pop loop (bad) int mov std push ret and (bad) mov add jb and int jne adc ss imul mov scas xchg scas (bad) xor adc pop xchg push dec adc call ss xchg pop mov out data16 cmpb mov icebp dec mov or (bad) stos out das out cmp out hlt inc popf xor sub insl mov and les sbb or mov add cmp shl jne xor aaa popa lahf ret lods cmp sahf (bad) push jne pop xchg sbb inc inc mov mov adc js inc push imul jle and loop jg (bad) pop dec ljmp leave xchg push or and mov fs test fadd push enter jno and testl push pop popf arpl andl cltd inc xchg sub je fdiv pusha push mov mov jg adc cli xor mov mov inc in add inc andl jmp aas pop pop in in pop jb pop (bad) lods adc xchg call cmpsl xchg repnz jne out stos (bad) hlt xor push (bad) mov mov jl mov mov (bad) add in leave addr16 xchg inc mov dec in dec jno xor arpl repz pusha rcrb leave dec jge mov gs jg jno fsubrs sbb into jne fimull mov inc imul xlat cli mov inc ja insl imul dec jo dec aam dec cld inc mov mov ret iret cmp inc outsl insb ficompl xchg (bad) or stos mov push int adc sbb fisubl mov dec xor xor aam call xor inc cli xchg or dec ljmp xchg roll fs movl ret jg addb dec inc std xchg cwtl mov cmpsb xor jg leave jmp xchg mov push mov lcall loop hlt bnd mov push push fwait or lods daa mov and in ffree and jns outsl push push bound scas dec xor mov mov lods sbb rorl movsl pop pop mov ret lds sub xlat cmpsl xor jbe mov jecxz ret (bad) push push and out xchg arpl fmull mov stos jl cld mov das push sub pop jmp add pushf and jmp mov push addr16 mov ret test sub xor inc out xchg pop (bad) inc mov add mov push inc or in in insb test fwait lods (bad) out dec dec in dec ret dec (bad) pop push sti repz xchg test fnop scas cld clc in xchg pop lods or cmpsl xchg into fild outsl rol in sub insl xchg inc fbstp loope aad loope push aad outsl jecxz mov fdivs sub inc jo iret lds rolb daa xlat push into fisttpl orl lds mov sti add jb shrl fnop test pop icebp rcll scas jl fnstcw and idivl fisubl jae fucomp inc mov ja (bad) push in lret lds jl arpl dec jle fadd mov inc sub arpl mov sbb cmp mov and inc jmp cmpl rolb inc pop in ret sbb aaa std adc inc push loop out or pop xor xchg fsubl arpl stc sbb nop mov (bad) insb jmp pusha sbb dec inc add pop bnd push pop mov jmp add pusha addl mov mov mov pop xchg pop push mov add cs aam popf jle or or add test popa sbb or cs sub into fcmovu inc test (bad) jbe xor cwtl and or adc sub pushf add mov inc adc rolb push (bad) aad cmp repnz inc inc and lock test sbb aad lret std popa repz pop sbb je jle stc add mov jo nop imul xchg lock mov push adc pop leave xchg mov sarl mov adc ss (bad) cmp add ret adc std sub (bad) punpckhbw movsl xchg cmp movb incl sub cli aad insb sbb add cmpsl mov push push sbbb push aaa loop test and popf sub jle sub aam mov add insb xchg sbb and movsl xor cmpsl (bad) or subl inc pushf fs addr16 rol or add fwait add xor add or sub test add addb fnsetpm(287 pusha pop xchg sub rcrb lock in cmp mov adc mov cmpsb dec (bad) das lock cmpl cmc ljmp cwtl scas pusha or mov cli sub out xchg (bad) imul mov popa enter jnp (bad) aaa js mov pop jmp push xor jno imul lock scas fs push ljmp js add pop add data16 enter sub loop add icebp addr16 xchg je mov pusha jb (bad) jecxz imul aad pop xlat pop aam in or sub add sub out cmc (bad) xor in push outsb mov xor aad sbb add jbe out orl dec mov mov push lds movsb daa mov out mov adc sub xchg add negb aam sbb (bad) mov xlat push push or ja and or lret pushf into xlat inc ret inc loopne and aam xlat (bad) xor inc lds add enter or sbb pop bound js cwtl cld sub add outsl mov add xor addr16 add dec xchg rclb push test jno stos mov add (bad) bnd or int3 or mov mov xchg ds out lret js pop cmp adc mov lock add imul xor je cmp lock out fistpll nop loopne lods mov xor rcrb ret dec jl sub repz cmp (bad) cwtl adc jnp dec cmp pop (bad) movl inc or cmp repz loopne jne lock dec test or mov inc add sub outsb ds mov fwait add addr16 push ret pushf jecxz xor repz fldl jge lock mov pusha sbb shrb outsl (bad) pop nop in xor aaa xor les cmp add iret xchg testl sub jecxz cmp pop mov movsl push mov hlt add fldenv rclb mov mov and rol jns sub (bad) call call dec mov add xchg and or push cltd lret add add ret ljmp add repz or pop jmp and jo sub xor lock pop mov xchg xor nop jge jo add (bad) or fidiv mov mov pop dec cwtl js cmc add mov out cmp ds lock sbb lret xchg fcoms ucomiss nop or subb hlt or clc push dec xchg pop pop or movsl decb fwait xchg add sbb mov pop add xor ffreep xchg test mov out sbb push loope add mov pop adc cmc lods add (bad) ss mov and dec add sub cmp xchg and push fcoms call cli or mov fnstsw cwtl and jb add cltd insl out aam inc add xor adc xchg add pop lret mov dec testb xchg in (bad) imul mov mov mov int dec pop sbb add clc mov xor les or addl les push push loope add mov mov int3 lock lret in addr16 stc ret fadd xchg bound rolb mov cmp pop push movlps loop or subb ficoml add or pop xor cwtl inc cltd dec cmp xorl jns clc data16 inc push mov pop lds cs inc in fcomps push dec lock mov pop pushf insl imul pop nop rclb dec popf adc inc add dec fdivrl add popa loopne sub and and add jnp push (bad) push add push jg push lock jl or sub addr16 popa lock add adc pop add sahf loope sti and cmp cmpsl test or (bad) or movsb adc sbbl sub iret test fdiv adc xchg pop test or mov dec in cwtl test add or scas idivb push xor add aaa pop xorl inc nop push lret xchg jl and pop xchg andb leave dec ret aas xor cld popf mov mov enter xor or (bad) cmpsb int3 jge ja es ret inc pusha (bad) fiaddl popf sub add out sti push inc imul xchg rolb jo jb add das rorb push movb mov pop clc pop cmpsl (bad) add or fs add mov xor clc mov or (bad) add lock pusha push fs xchg adc push loopne popa into jo or (bad) sub dec pop cli mov cmp je pop (bad) addr16 ljmp sbb inc nop adc movsl vrndscaleps inc or test pop and xchg xchg mov sarb xchg sbb data16 in xor mov xor (bad) aam inc mov and inc pop repnz xor and or movntq sub (bad) dec adc fldl imul sbb pop fidivrl in adc (bad) daa cmp ljmp add enter dec lock lcall xchg add push (bad) scas roll shlb pop push mov xor add cmp and add out cmc jo or in in xlat (bad) rolb mov and aad daa add fadd (bad) adc addr16 in orl std push ret adc stc add pop testb enter pusha mov pop cmc rolb cmp xchg les pusha mov nop (bad) or fldl lea clc testb inc pop aas rorl (bad) or sbbl mov pop or mov xor mov test cmpsb pop pop jbe (bad) and cmp aas mov movsb jge andb or je xchg nop enter ja lret jecxz xchg and shll mov mov movsb add loopne xchg rclb cmp dec jno inc sbb and pop push call popf add jecxz sbbb cmc pop inc or xchg (bad) icebp enter ja stos mov add xor (bad) repnz add imul enter loop (bad) (bad) movaps int3 and test inc fnstcw mov je cwtl mov addr16 fild push mov or add push xlat xchg and mov mov cmp jae subb mov sarb js pop mov cmp in imul inc push aaa pop lock sbb inc aam add and sub push cmp xor mov dec cmp leave or xchg dec rolb adc sub add pop xorb pop push adc add cwtl jae push mov sbb xlat jmp pop pop leave push jo int3 sbb lods lock shrl call add and inc or cmp jae dec aam jmp sbb hlt adc aad inc hlt push enter or and inc pop (bad) xchg jo add repnz cmc jg lock adc add pop xor jp add out xor rolb imul and cwtl lods mov mov adc cli call and lahf in loopne roll cmp aam lock or cmp jne mov add (bad) pop mov push lret mov push les ret dec and pushf iret pop sub and pop sbb push adc xor stos jne pusha push and adcb jl xor popf add cmp call loopne add sub loopne xor inc pop je sub inc or test add cmp jne jp inc imul insb mov fwait and jo ret sbb (bad) out add scas inc dec push jns push pop push push fidiv and cld outsb loopne sti mov pusha jg inc mov pop xorl rclb push add mov sbb sub call xor pop int3 (bad) push sub xor mov jmp shr (bad) jg ret push mov mov cmc pop pop add (bad) adc sbb jbe push mov dec jno sbb (bad) jb rorb cld push movsb movb and int3 leave bndstx (bad) pop fwait jns push mov (bad) add xchg pop add mov mov lret xor adc dec hlt jmp inc add pop jno mov push shll sub fadds mov movsb jge jl add adc sub aam add mov pop adc je in jmp ret roll sbb test imul enter cmp test xchg mov push dec cmp jg add cld xchg mov inc adc jmp mov mov inc insb cwtl call aaa out imul cltd int3 cmp lock or cmp inc and adc js dec xor mov out dec rorl lcall clc popa jnp popf mov neg pop xor fsubl pop inc outsb dec cmpsb mov enter fdivrs add add cmp push dec fbld enter add inc mov mov add repz adc cmc pop mov jg add daa pop out jmp scas adcl xor inc outsb fwait push fild add cmp leave sub orl into cmp int cmp insl inc or mov mov (bad) adc mov call mov xorl adcb inc pop lods fildl add popa ss movsb in inc movq inc dec mov inc and in cmp pop mov push cs sarb sub lret jae xchg cmp pop inc test xor frstor jno es inc addr16 dec xor faddl inc mov pop add daa imul dec shrl ja pop es mov lcall lods dec xchg or sbb imul adc lret lahf and sbb add ds and add stc and fxch add or add (bad) lock add xchg jns add adc push xchg hlt adc inc add stc xchg inc pop dec push mov push xchg cmp dec pop xchg add daa dec cltd lock aaa fwait sbb mov jno dec test leave adc inc cmp inc nopl fdivs add jno add inc mov or repnz leave and or inc xor mov loope test jns mov movsb xchg cld je add mov das adc sub repnz inc rclb push or xchg xor jno sbb sbb rcrl pop mov fdivrl or adc add mov mov adc cld fucomp add jmp cmpsl push add xchg aam sub inc sub pushf and nop not int lds lock popa cld imul mov pusha xchg icebp or sarl add insl mov (bad) (bad) mov add scas dec push jne in dec mov inc pop pushf int3 xchg xor insl mov call pusha lods inc rol mov dec test sub jnp or addb enter push push (bad) in push mov sbb daa adc mov cmp insb push repnz cmp fdivs pop adc imulb pop js pop adc and sub ret adc jp,pt dec call sahf adc popf xchg push mov mov imul int3 pop (bad) pop (bad) call inc add cmpsl (bad) jae dec cwtl pusha adc xchg test push push int push jmp clc sahf das enter push call es loop clc in jne add int jg ret and mov adc add lods cmp push add dec add cmp inc cmp das push je dec adc mov adc call cwtl add shrl inc fbld or lds push andps aas lahf dec bound mov adc jns pop jno add jae fdivs dec int3 dec (bad) shlb sub add dec cltd adc inc jge mov ds or call enter outsl jae dec sbb pushf jo cmp adc enter sbb mov mov adc jl xchg sbb cwtl out mov push jbe pushf fwait or cld inc mov cmp repz andb (bad) push enter orl clc mov les popa inc jo les pop adc inc loopne and aam adc adc insb xlat scas mov cmp sbb inc xlat xor cltd or subl enter mov int3 ret inc les adc aad xchg jl cmp jmp pop or loopne sub (bad) jns or push pusha das add sbb test and daa adc into lahf push cmp insb cmpxchg repnz sti mov push cmp jge sub (bad) sarb xchg cwtl sbbb cmp add inc outsb inc enter add xchg aas sbb in jl or and inc lahf adcl add cmp pop mov fwait cmp lret je cltd lcall adc and sub adc inc sub add pushf inc xchg or pop scas in lcall or cmp mov sub sbb add clc jmp jnp rclb rorb je nop add jns pop mov faddl and cmp mov xchg pop dec in aas jle ds add test decl add cmp mov popl xor xor lock lock push or mov cmp xor push sub movsl inc pop movl add xchg or xor pop lret inc jno rcrl addb inc test add add sbb sub xchg mov nop dec out mov mulb xchg loopne add test loopne scas adc xor add mov or push into sub pop add cld and inc orl rolb cmp and dec in add and mov sbb cs jge dec sub into push xchg sbb pop push push pop jg jecxz test (bad) notl dec pop or sub pushf xor sbb adc call mov or call popa add push arpl test das lods jne test stos add xchg dec add aam sarl leave xor push sbb and xchg mov mov adc or mov lock into or mov (bad) call insb sbb inc cmp and push cli mov subl jg idiv js inc and sub rolb stc inc xor xchg insb add (bad) push lock or cmp sub push push add movsl sub xor ficoml dec pop pushf stos pop or mov ret pusha clc nop cmp sar and cmp lods aas pop xchg and sbb dec or or adc or stos and ds cltd lret mov fisttp xor add xchg sbb jl sub cmp je mov cmp push xor les lock pushf xchg sbb pop add addr16 adc inc mov mov scas cld add stc sti jne push add outsb jno repnz popa cmp jp and xchg push and jmp mov mov xlat mov xchg arpl into (bad) aaa orb les and lock nop dec lret aam stc add and enter dec aaa cmp xchg idiv mov pop jl es sub mov xor xchg fldl sub push (bad) pusha cmc test mov subl stc (bad) mov sahf arpl pop mov adc xchg sub inc ja xchg insb mov sub add ds push sub pop xor add xor nop fmuls ret adc add andb or and sti lock push loopne dec popa pop sbb jl test add xchg add mov push mov xlat loopne ds and add cltd sbb ja ficoml inc bound xor cmp add scas (bad) rcr xchg adcb add mov mov add mov je sub jb sbb subl pop shll mov inc hlt movsb xchg pop mov loope pop aad and out mov add dec lock add dec cltd cmp popa xor mov loopne xchg (bad) enter mov cmp (bad) test xchg and jo pop shll jle xor jge or movsl or adc or cmp fimull or sti test sbb xchg test daa add jo xchg lock xor xor sahf xor mov add push sbb aas xor test xchg add leave imul pop enter add xor nop and (bad) mov xchg xchg mov mov and or sbb loop test push jns inc pusha inc sbbb pop out add sub push push lahf addr16 dec pop sub out or mov mov jnp push divl arpl addb out lds mov shl xchg adc and or fstpt jmp rol xorb nop pushfw leave outsl shlb test push call pop test pop fwait loopne or test subb sub sub add sar add jbe add in nop repnz out mov daa add and pop lds int3 shrb arpl xchg sub cltd adc dec dec adc add inc fsubl lret and pop xor mov sub mov and mov dec and fwait sahf in inc mov push cmp mov xchg fadds in mov jecxz mov pop and ret test pushl mov nop inc dec sub fadds sbb xor sahf xchg or test mov cmpsb aas (bad) bound inc sub adc add addr16 sahf outsl loopne repz pop addb mov jo mov push (bad) lret dec cmp xchg rcrb mov ret dec push lods sub dec xor cmpb cmp cmpsl pop push cmp les or cmc add sub loop push out push inc or ret inc xor xor pop sbb hlt add inc cmp pop push test add (bad) imul xchg pop mov inc lahf dec (bad) cltd es rcrl pop cmp sbb mov or test aas loope cmp add add xchg les movsl es scas dec mov pop sub mov xchg ds or sub lock xor sbb and add (bad) sub push push cmp adc add repnz je mov xor lahf mov mov std push mov in aas pop (bad) and inc xor and xchg add xchg add jae ret arpl addl sahf shrb cmp add outsl sbb pop pushf loopne std xor or dec sti mov sahf adc (bad) cmp in mov daa orb cmpsl xchg and out xor adc mov cmp mov dec xchg clc and lcall add lods xchg mul imul cmp lock adc sub jl xchg sub inc xchg mov push (bad) sub stc fisttp add mov mov adc or arpl cwtl ds inc and sbb fdivrs lcall cmpsl addl xor negl mov (bad) pop les clc adc dec or xchg mov pop subb popf dec adc jae lcall xchg jp xor adc addl rcrb insb mov xchg cmp add iretw mov push pop sar in and cmp lcall mov xor xor psllw mov xor and adc cwtl imul cmp xor inc xor cmp sub or inc mov add push add push sbb mov dec or loop dec xchg inc cmpsl xor sbb in sbb sub imul jecxz adc pusha fs dec pushf add mov nop fs insb sub mov ss sar (bad) jbe xor xchg sub cmp add xchg sbb nop add sbb pop pop add cmp rclb ret push jmp aaa sbb jno test loope loopne add dec rol and add push clc adc push xchg negb (bad) (bad) jae shll cmp out xchg and add add lock mov push imul mov inc popa cmp adc mov in je popf test push dec jne adcl adc in cmp push push add nop cmp sub pop xorb lds push xor mov aaa cmpsb arpl xchg test pop and and inc add and mov and xchg add in push out mov add sbb aas push push mov dec pop jb (bad) ss add popf sbb ljmp (bad) push cmp str jmp mov aas add add jbe pop cwtl mov ljmp xchg (bad) mov sub ds mov je arpl out rorl mov add int3 push fdivs mov push adc jo lret push mov arpl cmp in dec ds sub dec cmp imul (bad) jp sbb mov cs and sub jae and inc pusha fwait xor cmp dec cmp sub xor pop rcll pusha les dec push add or call cmpsb mov or mov movsl cmp subb pop ds add or (bad) loop mov mov test cwtl loopne jg inc and (bad) cmp pop or rol cmp push sub cwtl fadds mov scas arpl add add pop nop jl mov js push mov cwtl xchg cwtl pop inc repnz daa dec cld mov lock orl and and add sub pushf in lds cltd hlt mov ds fs add test mov movsb pop aas adc dec icebp jb cmp mov xchg les adcb jo adc mov add std pop mov sub rcrb xchg xchg test arpl addb imul or outsb je mov jge or push add test aaa dec adc loopne mov sub inc int3 inc mov jo or push pusha lcall test ja sub sbb pop xor jb ja xchg dec sub push call add sub xchg sub and imul stos mov inc les ret repnz or in dec mov insb add mov or add pop nop mov add jns sbb rcrb clc add clc xchg out mov or push aam repnz bound xchg loope and mov sub push sub push in pusha loopne das xchg add jae (bad) mov mov dec cwtl out mov test push arpl ror cltd cmp sub xor xchg decl mov add xor dec pop mov icebp inc and and enter and inc pop or dec jl add adc xor add cld stc scas jp lock (bad) (bad) adc dec pause es sub adc leave adc pop add sub in sub cs (bad) ds inc xchg and lcall fs add push adc sub call dec inc mov xor adc test sbbl mov xchg pushf add incb imul adcl sbb cmp testl nop dec lea pushf clc dec inc pushf and sahf or dec sbb and nop fildl dec ficoml insb pop xchg pushf dec xor mov xchg cmp mov sbb enter or xchg (bad) sbb mov nop push cmp add mov and push and dec inc les into dec or sub (bad) add adc cwtl inc dec arpl mov cmp pop xchg je jmp aaa sbb (bad) test pop sbb add shrl push or (bad) hlt lock fadds icebp pusha aam xor cmp cmp or pushf mov les sti and loop cld mov pushf add testb dec fsubl or lcall movsb fcompl cli (bad) cmpsl mov sbb cld add lar rclb inc xchg int ret adc pusha ss jne pop dec sbb and mov adc sbbb mov add cmp mov out xchg aas shll test inc test movsb hlt (bad) add mov insb add mov sub mov pop mov in dec (bad) lds pop ds mov dec inc and xchg lds add or add (bad) test stc xor dec fadds enter inc xchg lcall push add inc xchg add outsl and add pop mov xor idivb add pop inc scas or daa mov ds mov cmp pushf sbb sbb xor mov mov push or test pop lret push int clc int3 adc rol jo ja aam dec loope adc inc hlt adc cs in (bad) iret cmp fsts pop add and das hlt shll adc popf inc rol mov sub aas mov (bad) lret flds inc andl inc push jge (bad) and xchg mov dec add add sub xchg and adc add (bad) inc (bad) dec push add xor hlt sub lret int3 jns fldt dec ljmp ret or iret and and cmp or jg rcrb or pop sbb call and cmp je xlat jne add push cld mov pop xchg add (bad) mov jnp mov or sbb mov das xlat or fdivrl mov xchg addb es push mov leave sub cltd mov cmp xlat mov sub leave je pusha cmp sbb xor add enter fsubrl faddl mov in fist add sub or push cltd jne scas xor sub inc jl and cld sbb and popa lods pushf adc clc push and ss pop or mov pop or es shll pop mov dec jae lock ffree setb mov and das mov sub jmp daa ret mov sarb push sub (bad) xor loope sub pusha dec dec test push shlb inc jb daa loopne ror imul mov hlt mov insb sahf xor pushf sbb pushf js dec loope and sti add cmp mov iret and jmp jo or popa cltd jecxz cld push dec dec repnz outsb dec addr16 add and ljmp pusha and daa outsl cmpsb jp out or mov pop inc ss lret jae popf xor movsb add arpl and nop pop adc cmp inc add sub xorb jnp cs stos mov adc sub clc stos jge or xor push add fimull add and sbb jmp inc sbb xor hlt add int sub mov test pop test xchg (bad) in outsl sarb (bad) fisttpll icebp add inc dec xor int jno jg add pop add xchg das sub into sub in xor add inc inc xor cmp xchg mov mov add push hlt cs jl aad loopne fstps mov inc cmp movsb add fiaddl mov jmp dec add adc call les push ljmp dec repnz push hlt or or cmp ss fdivrl das mov sbb pop adc cli xchg sahf add xor dec dec das leave push mov stos test add ret push add aas icebp lock int add or add adc cmp mov movl add inc add arpl scas jecxz add aas jge add sahf cli gs adc lock add mov icebp dec int add push mov aas or adc pusha (bad) xor xchg fbstp mov lock add mov inc mov or and clc popf pop add mov xchg lea jg data16 xchg fimull mov inc sbb scas sub add pop jo scas sbb add push cmp insb rol lods inc cmp mov rolb xchg mov sub add pop ret pop imul (bad) fsubs inc (bad) adc xchg scas pop xor add (bad) mov (bad) fsubs lret pop icebp cmp mov mov sub cmp mov iret xchg cmp push rclb lods sub xchg mov xchg pop sub insb das cmp leave add adc imul dec enter cmp adc nop cmp mov or xor aad xlat sbb loopne mov xor in pop ss icebp dec push cmp pop adc ds pop and mov into imul (bad) ja sub and or mov fsts dec shlb push push repnz pop hlt mov cmp cmp idivb ljmp gs push xchg lahf stos xchg call rolb (bad) mov push inc cmp xchg push add (bad) cwtl (bad) sbb pop dec adc pushf ljmp jle mov jl lret daa popf and aas sub popf sbb jns mov dec ja daa dec aaa sar pop les mov outsl add repnz js or in jo adc sub push aaa add out fcoml sbb mov les add (bad) jno xchg or mov lcall cmp bound or std mov or (bad) loopne (bad) mov sbb mov roll mov cmp fidiv addr16 add pop nopl test push sub push inc rep mov cmp (bad) in add pushl mov sarl arpl pop in inc mov cmp add call (bad) rcrb movl daa sub add sgdtl cmp movsb dec push xchg push jo test orl mov xor mov clc or repz xchg dec cmp inc cwtl insl add aas cltd sub rclb lock dec inc xchg mov pop cmp scas mov repnz test mov cmove inc (bad) push clc into inc pop adc xor sti pop testl fiadd adc addr16 inc nop sbb int3 mov lods rcrb iret cltd or imul (bad) jae fsubl adc bound sbb je add dec and add jo das js or aaa (bad) cmp and aas push mov mov mov lret call sbb lret dec inc adc mov xchg pop sub push (bad) and rolb pop push and or sbb ljmp xchg inc cmp cmp ja out or arpl inc js clc xchg add ss aam cmp add cmp pusha jb pop push jne cmp shlb je pop mov negb std outsl pop push sub stc pop hlt mov add pop jmp and (bad) mov add popf (bad) mov or popf cmp jnp inc and cmp outsl push dec inc jo into popf arpl mov or lods xchg fs mov lock xchg sbb sbb add adc faddl icebp push test aad or (bad) iret mov or fadds xchg add addl daa adc movsb enter mov and inc push shlb pop out push xchg pop add cmp mov jg adc add mov add dec add leave rorb test popa call inc pop pop in test loopne mov pop test nop pop lds mov pop adc and repz sbb inc popf xor xor andl add dec lcall movsl mov cmp xorb xor idivl (bad) stos or mov sub lods inc aam and cmp mov inc jb (bad) fldenv or jne repnz loopne stos push das mov pop or xchg adc xchg add add cmp dec mov add mov clc lds addr16 xor insb xchg adc jb test dec sub es es imul xor dec xor mov mov shrl adc sbb movsl loopne add dec imul std adc mov pop mov roll or loope inc hlt xor dec sbb add sbb dec xor sbb sub mov push add das jb stc cmp push (bad) movsb dec insb dec xorb push adc test sbb test xchg pop js mov mov mov sti cmp arpl sub add xor sti add jge arpl and mov mov ss nop xor xor jle and mov cmp arpl push push mov add mov sub addb add aam pop add (bad) jecxz xor sub pop cld sub adc add pushf subb add inc pop int3 mov jp clc enter lods xchg (bad) jecxz add xlat scas jbe sub xchg pop add jae mov or popf sub mov bound pop ds mov xor mov sbb xchg lods repz mov sub adcb pushf (bad) into cmp mov bound dec xchg xchg sbb sti jge dec cwtl push mov clc loopne xchg pusha ret enter pop push xor cmpl mov movsl or stos and sub mov and loopne add dec and stos or mov dec sbb enter dec insb stc jp inc stc add (bad) mov daa xchg xor lods arpl mov cwtl in in ret mov xchg or sub jb outsl pop lcall sbb lods and mov outsl xchg gs xchg jp mov arpl ret mov mov loopne inc or popf sub mov fistp mov and arpl mov sub add rol out inc sbb ret ds fcomi les arpl adc adc fstps mov cltd and add cmc int dec mov or clc or push dec xor pop push loopne test xlat in (bad) inc pop movsb popa add jecxz inc je imul std popf adc xchg push and leave or push addr16 add gs inc sub cmp js mov sub outsl test aam sub cs movsb add mov arpl xor adc xchg pop lods lret faddl add inc xor add cmp cmpsl sub loopne sub pop int push push bound xorb adc rorb cwtl mov adc daa xchg in into push negb inc nop add cs out add jmp xor sbb add pusha mov sub shrl mov or mov xchg insb add adc arpl addl jno movsl roll aam adc mov add add sbb add xchg js add mov insb pop test or fsubr cmp je popa test jae es and dec imul mov jo sahf and xchg add mov cmp add test dec in leave sbb and (bad) addr16 stc or xlat xorl adc ja add outsl iret or shll mov fadds xor jno dec pop ss stc out pusha inc cmp insb xlat or jp pop cmp and mov cwtl outsl xor jne mov cltd dec sub add mov xor int3 add or aam sub push hlt sti stc jl dec (bad) in leave addb jmp js mov mov and cmp cmp add adc adc cmp loop push (bad) hlt sub push aaa xor inc jae xor sub add jle fiaddl dec dec cmpsb clc or mov aaa test aaa shrb cmp sbb cwtl fcmovnu add xlat mov sbb xchg insb adc and and sub dec popf mov mov inc fstl jo mov fcoms bound js pop mov addr16 hlt mov std jecxz (bad) xor or mov lock mov (bad) xor out scas cltd ret sbb movsl ror inc pop add add dec aaa pusha test out nop cmp movsb mov out push adc cmp pop ds mov fsubrl sub inc push push (bad) mov add mov orb pop push push sarb or (bad) dec pop cmp push add lds es in sbb xor inc in outsb mov add sbb rcr mov push cmp or cmp movsb les mov sub addb in insb dec clc movsl push arpl xor cmpsl sbb sub add lret inc or add movsl daa add sahf jne pusha mov xchg or and dec andb jmp or es jmp jo add jno inc cwtl es rorb je movsl popa mov pop mov xor test loop cli stc ljmp or add pop xchg add daa xchg adc stc or mov es xor pusha adc sub jnp imul cmp pop and add mov (bad) pop add arpl ds mov repz and rclb jne push sbb push add rcl mov mov add arpl inc pushf aam mov aaa dec stc hlt clc je or xchg gs inc cmp fsubs xor std les push pop insl lock add scas inc pop cmp (bad) pop xor fmull fs and ja adc mov adcb pushf int3 mov shrl mov or add fmuls push (bad) aam and mov jecxz add out fildl dec inc add je xchg inc mov loopne cmc es inc rclb add sarl int3 and push sub add std les stc push and jns test hlt inc aaa adc cmp add or mov xor push and pop mov or sub sub mov es push nop imul mov mov xchg add arpl lahf lret js mov sbb lret test jbe sub add push sub nop sbb jns mov nop cmp outsb dec ds pop dec and nop popa jb add paddsw addr16 lods pop aad (bad) xchg push dec pop jns xor roll sub in aaa (bad) iret dec scas mov pop mov add cmp cwtl mov andl mov mov and sub inc lahf cmpsl xor inc pop add jne sub mov repnz mov pop jle mov dec and and movsb sub push lahf inc dec mov sub ds add mov add dec test ret push or add push cmp adc sarl xor add mov inc xor int3 sub insb das pop (bad) in or mov xchg add pusha fcomps and fs mov imul pop add adc sub cmc ss lcall pop int push adc sub sub sbbl out push or enter dec sub in xor jne mov sub sub adc pusha ficompl cmp test ds add mov mov loopne inc hlt mov test getsec ja pushf and push aaa push adc push shld pop mov fs mov pop push (bad) inc andb mulb mov lods inc and adc and inc (bad) fnsave adc and sbb lret (bad) lea xchg mov subb sbb (bad) adc sub or cmp sahf clc add push (bad) xchg in cmp stos pop sub (bad) cmp adc loopne or xchg add mov pop aam jns adc es aam jp cmpsl pushf je (bad) shlb xchg movsb leave mov sub mov mov call je arpl or add out sbb pop sub pop lods or add cli xchg add std pop insb pop rol pop xchg repz or out inc int3 or add ds sbb test sub and adc repz pushf sub adc mov enter lds pop sbb xchg mov pop jne and js out xchg loope ds movsl fsubs inc adc seto movsb cmp icebp pusha imul cmp mov xchg addb (bad) lods orb les mov aaa add pop dec push leave pop aas push or mov stos xchg icebp inc rclb and xchg scas inc and inc mov ret pop mov push int3 paddsb lock pop sbb pop shlb mov lds jnp or xor imul dec out xchg push inc push xor js inc insl fsubs jne adc imul mov jae bound adc and adc imul stos pushf jnp xchg call xor nop add xlat xor xor add jbe adcb in xor dec jns mov icebp add add adcl sbb adc jo mov jl call xor (bad) std mov sbb fwait add jge or add loopne popf xchg cmp add add repnz cmp add push add insb rcll cmp je mov add outsl jge arpl push add fildl int3 pop xchg pushf add and or je cmp or jecxz cltd hlt inc xchg rcll xlat and inc (bad) jo imul orb mov adc mull mov jns or xor mov mov sub lods jns dec cmpl xor mov mov add incl clc cmpsl (bad) xor adc push inc sahf call daa cmp xchg ljmp mov popa add add fnstenv sbb xchg mov jle and adc rcll aas popf sub fcmovb add int3 cmp xchg rcrl mov push add (bad) pop fwait add xchg add mov sub rcrb cmp jle,pt pop movsl or or add stos add xor xchg repz aad jbe daa mov repnz in pop sub scas mov rclb lea push repz mov dec add mov les into sbb cmp pop out xor pop gs rclb push mov mov jmp stc xchg add cmp inc addb lods mov xchg xchg jno cmp add nop add ficoml and sbb mov xchg idivb fsubl mov mov ret cwtl ret dec and dec and xchg adc pop clc inc pop dec jns push or push fsubrl mov or and push dec inc dec push dec add js fdivl lods mov and add mov xchg test add testl adc sub pop pop movsl push or movsb ljmp hlt dec or pop mov adcl add fs shll inc mov push outsb add cmp and push cmp jmp xor arpl add and xchg sbb dec lcall jns aaa andl mov lea add xor out dec and pop divl adc int3 xlat mov cmp inc ret xchg pop je sbb mov rcr fs or test ret loopne add dec sub movsb int3 xchg add insb add addb or add xchg sbb mov arpl sarb push test andl (bad) xor add out test addr16 lds mov inc ret data16 push xchg or inc outsl adc dec mov enter daa (bad) and pop inc call sub adc out dec adc (bad) mov adc xor in sbb lea test cwtl addb pop and call rcl inc in and ja aam push xor sub push inc pop int3 outsl mov addr16 cmpsl sbb lock xor out inc sbb (bad) idivl je lahf dec jl inc jl and hlt repnz sub fadd lret xrelease add jle or sub loope cmpsl scas jae pusha js repnz nop add pop mov inc or test in test and insb aam call push loop cmp in mov je or pop xor push mov call cmp popf arpl add sbbb cmp xchg arpl push nop cmp sbb jb mov sbb add xchg jbe xor jo popa test pusha adc push pop imul xchg loopne mov es inc test popf out lods push out fs xchg movsl enter cmp mov arpl sub sub cmpsb (bad) or xor pop jge xor pop and shlb outsl scas aaa jbe jp sub sub add cmp add add stos sbb imul add adc add (bad) mov and add mov jae fstpt or (bad) jae test fs xor pop inc loopne lods and push icebp mov adc subb rclb repz xchg push clc aam loopne mov cmp imul pushf popf sub arpl add fildll outsb sbb cmp sub xchg mov sysenter add xchg cmp or sub inc push sti ss add add mov icebp lock loop cmp add xchg js and and test dec js clc cmpsb aam sahf lret pop dec xchg dec add ret xor data16 aas sbb xchg enter dec sub hlt (bad) mov mov test arpl (bad) sbb rclb sub lods mov cmc mov mov mov fsubrs sbb cmpsb cltd push enter ret or mov sbb lahf call jge idivb dec pusha movsl push sbb sbb inc inc adc out mov ret push stc push add xchg mov setno int3 (bad) and pop sub pusha test stc jmp hlt add add sub das adc xor mov mov (bad) aam lret cld lahf loope test add inc stos or je subps jl and jecxz push lods or mov insl mov test in add arpl je xchg sbb cmp add stc test mov add inc mov sub cmp rorb inc ds nop add jl pusha enter outsl ret and pop leave inc add imul dec mov shrb outsb scas popf xchg sbb pop dec cli adc mov jg xchg add int outsl inc clc mov adc inc int3 test add sbb call inc or add js mov mov lcall inc mov loopne bound pop mov subb out je cwtl push and rorb mov lret nop mov test dec (bad) mov loop pushf sub push jno adc nop rolb sbb mov sub push cmp movsb lods fdivs sbb popf cmpsl jo mov loope sti mov or and cmc add fcmovb lock pop outsl imul push mov jge cmp mov into ror mov mov mov lock shr and inc faddl fsubl cmp or in add jne jo mov push (bad) fcoms xchg sbb lock inc push dec inc leave add test or out aaa insb push push sub mov sbb dec js or fsubs mov aam mov or into pusha cmp jae pusha and ret mov andl cmp adc cmp hlt inc popa movsb scas into jg push out mov mov mov inc imul and cmp (bad) stos popa call jmp pop insl mov rorb repz pop je cwtl sbb sub test jp je add adc inc or xchg dec mov or cmpsl inc aam push lock mov sub and sar orb dec mov sbb dec nop test imul test adc jb add (bad) or add add cmp dec inc jo or push cmp or fwait sahf add mov test push sti jecxz call cmp sub loope pop pushf arpl add fadd or aas js push adc cmp sub in lret imull jl sbbb mov call pop bswap and sub xor or add or mov cmp je dec xchg sub in add pop pop sbb inc int pop mov leave pop mov sbb inc xor cmpsb adc outsb xchg aam inc les mov popa xor fcoms cmp test iret push adc mov nop les repz add mov mov adc clc fimul mov add pop xorl xchg loopne add add cmp in ds mov insb (bad) and add movsl or pop cld clc addr16 mov mov mov sbb and (bad) inc add leave shll sbb jo fistl add and sub mov push lea cs mov add pop dec jl or sbb out stc cmp cmpsb push in add out fsts mov movsb aas push mov cmp add psubsw fsubr dec add or popf add lea mov sub fadds popa add pop sbb mov pop pop jecxz pop je shl (bad) cmp and cmp fnsave sbb add inc sub add pushf clc add sub leave hlt dec clc add test daa (bad) mov cmp mov mov out xchg cmp xor js jmp jl adcl mov sub xlat adc hlt stos inc xchg push mov cs addb lret decb push lock fmull sbb inc mov leave cmp and mov dec jo in cmp imul das sahf shll xlat (bad) in dec add sub test inc popa mov imul adc aas cmc cmp testl inc or arpl int3 imul aam cmp jbe cmp lods push cmove mov add ds mov dec lret mov pop xchg mov inc pop (bad) call mov xchg loopne cbtw pushf and idivb cmp mov xchg add dec pop loop add ret popf mov mov cmp xchg shlb iret das out mov dec les fldenv fdivrl push testb add aam int3 mov imul cwtl add shrl les pushf add push mov sbb pop jb or pop cmp xchg push test sub xchg add and rcll push mov aas test clc je or addr16 dec test add sti fwait jle ret popa adc inc cmpsb shll jo push mov pusha mov cmp mov xor pushf jecxz pop loopne mov mov mov in in js jl mov xor lods js push and adc or jmp hlt xor xorl arpl icebp (bad) mov je (bad) (bad) (bad) add (bad) xor mov add test add into clc cld and dec in push jae and xor aaa call lods mov mov or and push mov mov inc xchg lret pop rcll jmp lock dec leave ss add sub cmp jo mov and call inc cwtl clc popf rorb into mov js loop insl xor mov lcall movsb test lcall pop loopne,pt and jmp and or mov cmp and int3 movaps or adc jnp sbb fsubrl mov ret sub pop jle aaa sbb inc jnp and and xor mov ds xchg or fsubl (bad) pushf and add mov ja add add jo xlat lds ret daa dec enter adc add push fwait cmp loopne adc testb cli and loopne inc add push insl or cmp das inc das pop sbb hlt sub sbb dec and push in fs mov add in inc popa mov add inc mov fcmovne js clc add fdivs sub jno les add lods xor sub adc sahf leave add (bad) mull xchg int3 nop cmpsb pop in cmpb out shr dec rclb pushf lret or dec xchg mov bnd dec jecxz mov or inc daa les jp cmp mov cmp clc in xor loop arpl xchg xchg mov mov dec cmp xor adc xchg push sub in cld xchg sbb roll sub nop inc mov sub pop ds add rorl or pushf adc and adc cmpsb inc sub sub adc jo pop mov mov aas add movsb jmp jge icebp mov sub sbb push mov jecxz popa lods inc xlat (bad) repz rclb int sub and aas movb movsb adc jb mov xchg (bad) xor xchg or xchg jbe outsl cmp insb in loopne inc clc sbbl pop repnz repz lds xchg hlt sbbl adc addb call test push lock movsl push add sbb jge sarb (bad) pusha and hlt inc mov dec nop mov std loop and imul xor (bad) addb (bad) mov adc xlat insb (bad) inc jbe lds sbb push jne sarb bound iret (bad) enter push arpl and and cmp mov out lahf inc mov or cmpl add fiaddl gs jo cmp push lret js mov ljmp or cmp fbld push and nop sbb sti outsl lcall jge sub lods call cmp ds inc add push dec lret pop subb add mov or fwait pop mov cli mov add sub sahf mov mov sub pop xchg xchg and mov cmp cmpsl mov jnp adc inc xor and jle sbb clc repz cmpsb jns add lock cmp mov inc xchg mov adcb lds aas and push es ret push inc sahf lret pop fisubr and fdivl (bad) xchg and test sbb cmp (bad) (bad) add mov mov int les lea mov xchg pop orl pop adc add mov xchg mov mov sub aaa and jmp popf jno or adc jo add sysret push test rolb call push jae pop add scas mov cmp xlat mov mov mov mov (bad) push lods or rcll aam stc xchg pop insl xor imull jge fidivr jo arpl fidivrl das ss repz mov xor or lret jl mov mov pop adc ror punpckhbw sbb fcomps inc mov cmp add push mov mov imul movsb dec call adcl wbinvd call xchg cltd or adc mov cmp xchg lret pop test xchg ret rcr and add inc pop imull xchg out xchg (bad) repnz mov inc and cmp out add inc inc shrb lret or mov cmp movsb inc pushf mov mov push jo cmp mov pop push jge inc jae incl lahf mov lods mov fmull push add sub cwtl mov rclb loopne movsb out loopne cmp xchg adc lahf movsb push sbb clc push in xchg add hlt (bad) cld cmpl xchg adc sub dec (bad) in fistp std mov addb aas cli xchg (bad) movb xchg cwtl mov lock ret mov xor cmp addr16 xor adc inc mov je add ds es fmuls arpl sbbl mov dec pusha shrl or cmp subb mov and dec adcl adc adc pop std dec les loop push and lods pusha mov inc mov cmovo inc fstps jp test or adc lcall push out or gs daa or adc or mov (bad) xchg pusha xchg xor sbb sti dec xor add popa or xor lret jp and jecxz inc test cwtl mov mov jns arpl scas stc test adc enter mov insl and cmp or pop hlt adc push cmpl leave mov (bad) pop add mov pop in mov (bad) fstpl je movsb enter iret sbb loope mov cli roll popf add jae dec cmc or xor adc inc bound mov aaa mov fldl xor arpl data16 lock mov push adc je loop push leave andl add mov ja push sahf test jae ljmp (bad) stos sub xor lret daa mov fldenv (bad) stos dec xor cmp das dec cwtl addr16 cmp jbe sar inc adc mov push std sub pop sarb sahf jp cmp (bad) daa add cmp and dec dec pop ret lret (bad) mov jl repnz mov add fisttpl je dec xchg sbb icebp cmp push pop shlb js inc xor sbb ljmp outsl jns xchg cmovo ss mov dec sbb push in in loopne cmp ret clc out add mov inc jns repnz pop insl movsb inc rcr xchg jo movsb xchg push inc (bad) and dec stc rcl fsubrs sbb mov cmp test jno test add int3 fdivl mov (bad) std mov and and inc jmp mov add scas add inc mov mov lds xchg adc pop sarl ds and xor nop cmp mov inc lea jns or mov bound add jecxz out xor adc std repz imul add and push add adc and repnz (bad) jns jg sbb pop cmp add mov pop and xchg add mov and add inc std sarb (bad) cvttps2pi cmp ljmp or jl addr16 mov mov jae mov pop jmp mov lea and icebp into adc rol mov (bad) jae sub push cmc aam bound inc nop sub (bad) mov jge pop jmp sbb bound jp pop sub mov into push sub or pop imul in adc insb xchg xor xor cwtl shrb cmp adc ljmp enter dec jne movsb mov jl and insb ljmp inc les cmp jl outsb xor int3 mov lret sbb rorb sub or cmpb ja xchg sarb add sti xchg and movb mov and fimul add mov mov xchg outsb mov cmp fmuls call call add cmp mov inc mov scas nop dec push mov fs lock mov jle add in out movsl and pop and or pusha inc xchg cmpsb ret and push movsb inc and icebp mov shlb lods test call push pop adc ss adc and jge test adc adc xor (bad) add mov sbb jmp (bad) mov int3 aaa sbb test loope lods je add ret mov mov insl mov lcall jb test cld jae inc push xchg xor lahf or std out shrl aaa (bad) add push gs jp add (bad) enter xchg sub mov push in (bad) repz jp adc std je imul fnstsw push movsb sbb fwait cmpsl das push rorb ljmp aaa cltd sbb pop scas inc (bad) pop aaa in or sub add hlt add pop inc aaa and das add inc or and pop outsl nop mov push sbbb jb add (bad) xor add jae jbe roll xor or jne adc add out daa xor test xor test rorb or lret (bad) mov je sbb (bad) jmp nop xchg mov mov (bad) cmp mov sbb push and test loopne and pop pusha and add (bad) out pop jecxz and lret xor mov cvtps2pi adc mov rcll test cmpsb sbbl out pop lds int jo sbb mov cmp clc gs and cmp add js pop cmp imull (bad) out popa out in scas lods mov mov jmp repz cmpsl or pushf mov dec shrb xor dec cmp repz sub jl or dec jo int sub ds mov movsl push mov add js ret ret cmp imul xchg cmp jb loop rcl mov nop ret or lods sahf add rcr ss push adc pop cmp add lock loop sub sarb pushf mov fcoml addr16 enter fisttp pop mov cmp jo sti mov test push lock je das arpl cs and pop push popa mov xlat test fadds inc pusha cs add insb aas sub lret and dec test stc add cwtl add mov mov bound (bad) mov adc sbb rorl lahf add sti or or xor enter dec mov inc repnz loopne ja add pusha dec pop (bad) jp lcall inc orb test add (bad) movsb adc stc insl xor mov les mov add push sub scas mov xor xchg in loope xchg dec and shlb mov add int3 mov addl cmp sub cmp pop cmpsb (bad) jne or addb out add cld arpl lock pop xchg sub test mov add out int ss js dec or inc nop xorl dec mov lods lret xor push push (bad) add jge cmp sbb add jbe lahf and lods sbb mov sbb popl ret sbb sub inc push add repz add cmp (bad) mov mov mov mov adc and mov push add pop mov jb (bad) loopne repz xor dec xor xchg lahf cmp and roll (bad) xchg or rolb lret pop aam mov sbb jl enter sar aas pop repz lret add xchg push dec add dec outsb sub iret and inc daa mov mov adc sbb loopne sbb inc inc xchg jp les aam xchg mov clc xchg adc cld inc in jns fs jno in mov mov dec mov (bad) mov xchg sbb dec movsb xchg pop movsb mov out cli movb std xlat mov mov and scas xchg jmp js nop adc adc and repz popa mov xor mov aam xorb and pop aas mov inc push sbb in push sbb xchg adc (bad) fcomps lods cmp cwtl ret adcl dec hlt mov loope popf mov cmpsl jbe cmp and pop and call push and pop inc add inc lahf or pop cmp and fbld jecxz in sarb ja pop enter and int andl rcrl loopne and test ljmp sub in cmpsb pop out adc xor inc into nop inc dec les and push or inc adc jno lahf sahf sbb inc and rolb pop in inc ret add outsb cld jo mov je stc int rolb xor setb push and mov scas jmp or and ds xor test pop mov loopne imul xchg push adc mov js mov and cwtl call pushf lds adc add sbb in lret mov sub movsb (bad) (bad) loope push jl sbb clc push push dec iret insl dec enter jl cmp add mov jo add inc mov dec lret pop lahf or mov or mov add mov mov pop test and test pop mov incl or xor idivl add and cmp cs lods test loopne rclb and popf pop mov push cli pop aas icebp cmp pop nop or sub mov xchg add iret inc xchg in xor add inc adc test mov mov or xlat inc jns mov lret ljmp in add add subb dec add pop (bad) and cmp mov add cmp lock movsl lods clc mov jle xchg mov test xor sub int3 (bad) sub xchg rcr cmp and leave loopne std mov xor call clc mov xor xchg lds iret or (bad) mov or aaa popa lock mov nop add pop les xor cmc andb add pop lock loopne hlt lea cmp popa inc fildll cmp pusha call push jo pop add (bad) xchg (bad) jg mov mov test lahf cmp movsb leave shrb push ds and ret or mov mov mov fist cmp cmp add pop or repz mov add xchg cmp lret lcall add jl insl cmpsb aad sarb xchg nop push sub lcall push andl mov lahf cmp mov xor jge push dec test shll stc nop nop aam mov lret pop movsb adc adc inc out mov cmp movsl pop jno mov lret lods loopne and and cmc xor mov push mov or in xlat cld cmp add sub and les or fcompl es cs (bad) in xchg mov inc sbb es pop stos add enter and inc js dec add xor sub push test or mov sub test lret push mov les mov jp je adc lret pop dec ret jl adc push shll cmp cmpsb lret sub mov andb dec (bad) pushf fidiv nop (bad) loopne pop orl xchg xorl sub aam xchg in jne lock xchg je pusha (bad) xor orb in fildll arpl xor pop pusha push mov xchg adc rcrb out mov xor test and pusha cwtl xchg add repnz stos loop in test jg sbb mov ja add jae push inc (bad) cmp stc push repz add mov loopne (bad) pop imul addb xor mov mov aas cld jl lds adc mov sbb je mov xor inc les mov adc in pop add sub add call iret roll shl hlt orl mov adc clc jle aam mov popf mov mov cmp and jl jo sub hlt call stos mov imul and pop inc mov add inc inc stc cmc fcoml mov aas stos dec pushf and (bad) rorl and sbb mov aas mov loop (bad) adc add ja xor sbb std adc inc test sbb leave jge adc stc pop xor test icebp cmp cmp xchg xchg fs mov adc and xorl pushf add sub cmpsb pop jnp (bad) jle aaa sahf mov scas pop mov xchg inc mov (bad) loope insb addb popf sbb bound roll mov (bad) mov xchg aaa fldenv mov lcall inc stos jp clc imul (bad) jno cmp inc add nop icebp mov (bad) pop or add xchg mov test aaa nop into sub add sarb lret popa call xchg pop cmp add mov test test imul xor xor xor in es or cmp andb push shrl lock cs int mov (bad) fimull xchg shlb sti jo cmp or mov push insb or xor push push mov cmp sub test dec xor stc push mov mov in scas cmp xchg cmp and popa sbb sub stc cmp repz ret aas xchg push xchg (bad) mov inc add lret and xlat lds sub rcrb ds (bad) push adc out or jae mov test push mov inc movsb mov lret mov test sbb xor mov cmp mov xchg ret mov mov sub ret jbe nop int3 push pusha hlt lret fisubrl push or add push gs lock adc or add jns cmp pop fbstp fsubr stc cltd hlt mov addl inc push loop xor jns jg insl loopne test dec pop and test lods dec adc inc mov inc pusha mov sarl mov cmp (bad) pop in sahf movsb nop rol ret mov (bad) or loopne (bad) cltd mov mov mov add mov and je push mov push mov shll cmpb add ret xchg dec in add push xchg lock jbe test xor aam aaa dec and lods ret aas sahf std sbb pop movsl cwtl pop hlt js inc repz and sbb aaa xor sub or jo shrb add dec hlt aam loopne lret and ret les pop movsb mov add cmp mov and test sbb ljmp mov aas sbb cmp enter xchg (bad) inc les pop push and cmp mov (bad) sbb cmpsb or outsl lds jbe unpcklps fbld test cmpsb rolb dec gs ja int3 jo inc push popa mov and mov es or sub pop js (bad) data16 jns add and loope ficomp loope mov loopne insl ficomp xchg dec or daa jo ret and jp dec int daa sbb test mov add lret outsb ficoml or dec pop sub aas (bad) jmp mov and nop pusha es lods mov jl add jle push and dec cmc xor pop int3 lea inc mov mov loop dec sbb dec (bad) fadds gs jnp nop inc rcrb dec or cmp sbb cmp xchg aaa les pop test or imul imul pop sti sub jg inc pop push aam mov out xchg cmp je call mov int3 (bad) add into adc or jae stc (bad) outsb and std push cld adc ss ds push sbb rolb aam daa insb inc dec test push xchg insl mov int3 or push inc or adc insl add int3 dec aam adc loope ss movsb shlb insb push pop pop mov addl mov jne sub out push mov or enter xor inc cmp insb (bad) jae jge hlt ss jno push sbb (bad) pushf add jl flds mov nop and mov movsb mov enter mov xchg imul repz nop pop enter jl jp dec adcb in mov jne in bound fcoml js xor mov sahf add repnz cwtl imul je pop (bad) aam js jno or mov inc ljmp mov and movsb fist xchg mov mov enter add cmpsl (bad) mov and andl lock lret popf mov nop stc cmp int3 cmp pop add arpl enter pop jno add inc add cmp cmpsb add test add (bad) lea jl (bad) jnp inc push movsb push icebp addr16 cmp mov (bad) cmp sbbb inc lret cmp lahf adc (bad) jno push mov mov hlt xchg test les xchg int3 call xchg call inc adc cmpsl test imul mov (bad) sbb lock sahf add pop inc push or shr mov sub jnp out sub es lods mov push xchg sbb test push push sub pop aas pop lret faddp xorb push push test ret push enter fadd and pop mov out fmull and adc mov inc dec xor loopne pop iret loopne jle adc test enter and ror adc pushf mov xchg adc sub decb imul add mov in xchg test jmp loopne xchg lret cs (bad) jo repz loopne aaa sub fisub cmpsb or add and call shlb rolb mov jle add and xchg sub add (bad) hlt and mov ret mov pop leave (bad) cmp jns adc (bad) out (bad) and dec pop jge cmp cli inc lock push ret int3 mov add jp loopne add lds mov inc and dec adc mov ret aam mov lahf push xchg test in and lret lret xor mov or xchg sbb sti cmpsb jno (bad) dec movsl add mov sbbl shl imull outsb adc cmp mov pop cmc fdivl add loope pushf arpl scas mov test sbb push add test aaa test sbb int loopne xchg bound int3 dec sbb add xor out pop xchg and xchg aam dec cli push pop mov jae push add lds fldl xchg mov subl add and mov xor xor cmp or cmp push (bad) rcrb pop out cltd aaa add popa aaa add xor dec sub and pop push cmp adc pop and cmovle cmp mov sbb jle ss inc push add cmc fist outsl push in push repnz sub sbb inc faddl xor fsubr insb add idivb sub push mov jg xlat mov jle add and hlt lods push pushf je add scas inc in add mov lea mov rorl push popf out nop dec add jmp add or jp add ja arpl ret mov xchg dec js pop inc std pop add lds fidivr notl shl push push in jno mov add pop sub ficoml push push push pop add push mov add in add mov sub insb cmp repnz lcall and cmpb and adc (bad) push adc enter mov push mov jmp push mov add xchg push pop (bad) xor mov lahf sbb insb (bad) xor pop add push push mov movsb test jnp ja pop inc popf and fwait imul mov push push pop add lea pop sbb jmp push jp shr out jg xlat pusha and aas xor icebp sbb or adc push push push dec pop mov int3 xor add xor pop inc (bad) std ret push push or into ficoml in mov mov cmpsb xchg in push mov or ret push pop or pop mov mov mov mov out jmp addl pusha add push pop push int3 data16 test mov addb cmpsb scas (bad) ja sbb jmp (bad) scas addb push adc mov add pop or jmp loope push fnstcw sbb les add loopne xor adcl rcrb or mov test adc cld dec jle sbb jne daa neg shr rolb push pop xchg xor or mov loop push dec imul outsl aam sub pop lcall xchg xlat add hlt push shrl imul call shlb iret int and adc cwtl stos add dec mov rcll stos in push sub mov lods aam sbb test push (bad) imulb jmp outsb pop adc sub and dec cmc enter (bad) and into pop push lea inc js add jno iret jnp mov data16 push fiadd cmp (bad) out cli pop inc push repnz (bad) rcrb mov clc mov jmp sub clc jg cli test or lock pop xor or mov mov push adc adc xchg or mov mov jge mov (bad) data16 mov inc add inc rorb push jmp push dec inc or mov fcompl test leave jno mov xchg dec sub dec rcl xchg test (bad) je mov push (bad) aas rorl or stos or sbb push dec mov movsb push inc push mov jg adc push or fs or xchg inc mov mov out cld add xor adc push loop and nop mov push mov cltd pop (bad) sbb adc push push rorl cli shrb emms ficom add and cmpsb xchg add push and jno jecxz add sbb dec and pop cmp popf pop repz or lock lea lahf or shr dec and in push mov (bad) into stos jp ja push in mov adc in popa adc jmp xchg mov push xchg ljmp mov sbb cmpsl fldenv (bad) (bad) jbe shlb dec sub adc cmp icebp mov or mov push jmp pop frstor pop inc add leave add and cmc xor sub cli add sti mov outsl in lret add test sub nop pop and inc gs push fidiv in ds out xchg daa sbb sub or or out addr16 jg xor add xchg in jmp or pop sub mov pop adcl stc insl iret sub subl sarb xor jge cmp aam mov sub lds (bad) jbe jge ror inc mull out shrb xor sbb sbb xor mov orb or add popa adc jbe les mov cmp add push mov xor cmpsl add mov mov rorl out pop xchg add push mov out movsl cmpsb inc adc pop in add push xor pop mov mov addl add les push and gs push test cmp cs rcrl add inc push in dec adc mov mov or cmp mov or or dec or add mov dec pop daa push mov (bad) add je push mov push movsl add notb loopne push sub xchg inc in int push add (bad) sub add lock cltd jle pop (bad) fnsave mov mov (bad) xor jno and add push pop ljmp adc rorb fdivr xor pop jo xchg (bad) fist lds (bad) in and jg push push aaa imul mov add (bad) popf inc inc ja xor sub jns sti push jns cmp test adc dec add add lret je mov pop pop into push xchg ja inc inc adc mov pop aam xchg into or mov cmp xchg add sub add cld xchg jge mov movb jmp pusha sub add mov add and push pop test mov bound inc dec lret push xchg add ficompl std and rolb and ret add sub mov cwtl out mov push roll mov xlat jns testl mov mov jge neg addl addr16 into mov pop add jmp inc add out lds mov and scas ret mov aad sub sbb ljmp mov sbb insl movl jmp sbb fiadd push cmpsl sub aaa in xchg in jg (bad) lock jecxz shrl pusha add mov xchg and fwait inc mov stos jnp xor icebp and loopne mov jbe lea or jle push xchg imull and jmp adc pop push inc sub mov faddl imul cmp cld mov mov inc mov pop inc mov jne inc bound push and mov pop xor adc cmp lods inc leave (bad) and (bad) mov pop movsl lea xor mov cmp sub push mov sub ret inc pusha rep mov test dec cmp adc andl push add inc push adc (bad) mov rolb add sbb mov add add clc pop xchg and dec sub push ret sbb insl xor push push mov (bad) fildl dec test adc cmp adc mov inc add icebp push fldt sub sub mov mov addl cmp jmp add outsb xchg jo mov call out mov inc adc mov loopne add adc (bad) mov (bad) xor int3 ss push test or popa pop add pusha sti hlt add ljmp test xlat testb gs or das movlps mov xor pop (bad) lea fsubs sub sub mov mov adc inc mov dec pop rorl sub add push leave sbb xlat dec inc mov inc or or or ret adc aas add xchg adc adc adc add repz mulb mov inc push inc mov scas sub ss (bad) cwtl pushf leave sub pop orb xchg mov fiadd fmuls aas mov xor out mov cmpl mov int3 sarb push add mulb enter dec es arpl mov jb andl rcll mov sub sub adc mov ljmp and push sub dec repz xor adc mov and xor mov xchg int mov and push pop xor and (bad) adc sub lea mov daa clc aam test xor aas and inc cmpsb clc imull sti orl mov nop add and xor cmp outsb leave adcb xor movsl sub push push adc adc out add (bad) mov insl sub sub and sbb clc lahf push adc movsb lcall and xchg pop or incl (bad) dec or out mov adc sub add or sub lcall or lock sub out dec iret inc inc sub jo out cmp sub xchg outsl cmp inc scas and sub jnp ds add and lock push sahf push or pop inc xor pop mov (bad) out jns dec pop ja pop sbb sub daa pop fwait cld dec test cmp mov cmpsb add push gs (bad) not cmp or cli pop insb (bad) pushf dec (bad) mov daa mov adc cmp push push jo repnz pop inc lcall add inc sub (bad) outsl and pop push and (bad) outsl sub pop and pop repz insb inc and and lock popf adc pop movsl push ret (bad) xchg sub fs mov neg mov loopne inc call jo xor icebp repnz pusha jg int3 cltd jmp stc cld lods push or cmp cmp out jle pop push scas fisub stc or push xchg imul mov mov mov jle mov sbb ljmp js xlat int3 out push mov mov fiaddl pop pop rclb inc xchg leave and mov mov (bad) repnz ret into adc je,pt push jg cmp fstl loop es ljmp cli push mov insb jne xchg cmp (bad) or iretw mov sub push adc push lret mov push jp loope pop and sti inc lea imul mov popf out (bad) (bad) rolb and fdiv loope dec add popa sub push sbb jp sub or jb mov inc es xor (bad) xchg xor out cs jg ret mov or mov lret pop int3 dec xor xchg mov and bound cmp push popa and add dec and pop loop (bad) lock sarl push test sub or and adc dec test and pop (bad) movb dec push dec xor ret sbb xor add and xor sti add daa sub js mov xor dec ja pushl add mov add cli mulb dec or mov push inc rcrl mov inc rorb (bad) pop pop mov sub addb faddp jb sti push pop or and inc mov cltd jo pop dec xor inc imul cwtl dec adc push or not cs leave ss cwtl repnz sub jo and test add (bad) aaa and cltd mov sti les (bad) out jo xor pushl sub inc repz imul and mov push aad xchg xchg in dec (bad) out mov loope mov cmp in ss out sub dec das add cmp sbb add and add adc nopl cmp mov dec mov mov (bad) or rorb adc insb and mov cmp fist test push popf mov push mov dec inc repnz mov and std and add and sbb movsb ret in (bad) fiadd push xchg mull mov jle subb loop sbb adc add nop jnp dec mov daa repnz stc pusha idiv add dec fldcw clc push and out xchg es icebp pop (bad) gs mov jmp (bad) mov fld xor int loope inc adc into dec and div (bad) and leave push push mov pop bound pop add adc arpl add sub addl cmp cmpsb and and (bad) mov xorb imull vunpcklps (bad) and adc inc and cwtl adc test sbbl adc mov push or insl movhps mov mov out xor and xchg sub or xor mov leave push cmp xchg jb into add push mov mov dec jmp or icebp out sbb and and clc mov or mov es arpl shll pop and xor push repz mov cmp jmp out cmpsb outsb adc xor add xchg or inc mov mov push lret movsl inc inc add jo mov or inc jmp push sub arpl fsqrt and out nop movb out loop stos adc pop ds mov add pop push mov test stos adc sub jl bnd enter sbb and or mov fs ljmp sub adc data16 ret and pusha shrb rcrb pusha and xor mov mov les (bad) cmp inc mov xor movsl adc repnz je es imul or push sub lret es inc pop loop loop push mov aam adc leave notl das rcrl mov aad adc test ror and jb pop cltd adc jmp imul push mov push jp lcall shl push mov mov xor mov daa xor sub sub or fistp loopne std movsb mov mov and repz test leave jecxz test inc and (bad) add mov or mulb sub (bad) mov test (bad) sbb into mov xor sub sub and (bad) and inc loope mov sahf test lahf imul push mov sti outsl jmp cmp mov inc sbb sbb out das sets test add movsw test mov mov iret sbb icebp mov sbb mov sub xor into movsb jns push out and repz cmp addr16 xchg xchg add rorb repz sbb (bad) cmp cmpsb mov xor and xor (bad) popa insl sub push xchg pop ds cmp out xchg push repnz add icebp insb (bad) jne (bad) icebp notb out sbb sub andb xor inc add and dec negl and ret xor insb fs int3 jg in xchg push push xor lcall gs cmp sub sub sub mov dec jmp xchg mov fist bound xor xchg adc jbe xchg call imul xchg push adc roll and adc add jmp ljmp iret pusha cwtl sub fldl2e sub xchg adc xor mov dec adc and cmp lret lock and mov adc cmp and scas into mov sahf cmp (bad) vmulsd loop fcmovbe xchg xor (bad) repz das or mov daa out repnz mov rorb sub bound ljmp add dec (bad) xor xor or hlt inc adc add sub popf cmp add test cmp and out gs add sub shrl add and or sub test pop mov push dec sub jb sub int3 xchg cli and jns dec inc stc and push add out xor pusha or lds xor mov mov imul cmp fldenv add sbb mov adc mov push inc and jp or xor das sbb dec stos movsl cmp repnz mov sub mov push mov mov adc dec iret pop orb cmp pop xor mov repnz inc sub pop add insb adc bswap cmp push loop sub adc mov sub divb out or leave add or sub cmpsb decb cwtl je mov push pop sub xor mov mov in xor xor and decb (bad) adc mov out push xor repnz pushf pop bound repnz aaa or push push xchg pop add fild fimull lahf or (bad) pusha sub outsb xchg pop cmpsl lcall xor mov adc sti sub sbb adc mov aas sbb add sub out sub rcll lods sbb jb addr16 cmp (bad) or dec out xchg test repnz or jnp lods (bad) int adc pushl popf dec test xchg nop repnz rcr jne xor lret and and jecxz inc repz mov sub and fcmovne and xchg roll mov xor adc imul push test (bad) xor dec out lret call jbe push stc fcoml loope je js sub loope jge xchg int3 leave (bad) mov sub add cmp dec imul and shl cld out cltd pop movsb jnp mov push xor mov shll data16 xchg adc or adc inc sbb xchg jl sbb pushf inc add in mov xor pop mov mov sub jmp dec inc sub mulb out mov sub pop mov insb xchg jns lret add xor or enter imull bound mov add jmp push js popf adc aas or add (bad) pop jnp pop push and cmpsb dec imul xor bound dec (bad) repz cmp fsubr jb fnstenv pop (bad) lret ret push sub push into mov mov cmp mov sbb xor add cmp neg (bad) pushf and sqrtps mov sbb shrb xchg insl ds xor loop or add xchg sub and fmulp ret ds das xor inc or daa test les push fdivs testl sub test add sbb roll fisubr popa mov inc pop dec sub add push xchg icebp negl inc mov xchg lcall (bad) xor cmpsl sar mov jae jmp mulb mov and and add mov adc into mov and mov xor and cmp icebp stc aaa xchg add sbb (bad) lods and cmp push insl sbb and add and sub mov dec mov or lods sbb popa pop call (bad) aas andb sub xchg xchg cltd leave jmp rol push (bad) or sarb mov add scas inc inc push jmp inc outsb sub add xor jecxz loop out xor sub outsl and flds pop dec outsl lret inc sub push pop test push mov mov sub dec cmp dec pushf dec ret mov xchg fiadd mov test add push aam roll (bad) aaa pop daa jmp outsb ret aas sahf xor (bad) jae push or xchg sub daa sub data16 and ds fidiv mul and scas push pop push mov dec push negb adc stc dec int3 sbb int3 mov dec (bad) (bad) (bad) mov jle mov shr inc sbb orl sbb push js mov insb aaa cmp shrb push mov xor mov es enter dec push mov adc stos xor add es frstor or push sbb sbb add pop outsl mov aaa or ret (bad) jno pop cmp out inc mov dec fwait lret les sub lock mov mov orb dec xor and pushf jne dec mov inc push ret or cli int sub sub mov push inc or dec xor stc jg dec xlat adc sbb aaa adc or sub xchg add push test fisubl jg add int (bad) outsb xor (bad) jo cmc testb movl dec bound repz mov add sarb jmp lret and push xor cltd cs cmp lret leave (bad) xchg xor adc mov xor cwtl mov clc sub mov sub add movsl and jo fdivrs fisubrl cmp or inc and pop jmp xchg sbb std and data16 or popa jl inc outsl sub (bad) mov sbb cwtl in shrb (bad) insl inc loope sub jecxz out pop add jno (bad) pushf xchg and sub cmc cmp add repnz cmp cmp pop and xor mov dec mov aaa xor adc xor and lret sub or cmpb mov daa inc iret adc insb mov pushf pop lds fsubrs les push in adc or push jns xlat lea outsl aas mov and (bad) pop iret push pop test in sub fcomps mov or pushf xor lcall outsb sub iret fwait mov imul mov xor les loopne xor pushf pushf sahf out jb xchg (bad) xor pop test push adc pop out mov js or mov cmp adc pop les pop pop or fcoms call bound xchg pop jns aaa dec cmpsb (bad) popa xchg xchg jecxz or xchg hlt sub push xor dec fmuls xor mov inc add pushf cli pop mov fild dec clc call jo dec push and bnd sti icebp and sub jle add or mov gs xor and cmp nop or call mov sub js test xor dec out add dec dec lret add (bad) bound cli aam adc fsub add mov xor (bad) and jmp xor xor add mov push mov mov xchg or es adc add es sub fistpll add in mov xchg xchg mov sbbl pop or fldcw mov sub or xchg add outsl add out sub js leave call add sub aaa xor mov repnz mov xchg cmp jle pop jl (bad) out mov push clc mov sub fwait jmp cmp mov pop cwtl sbb inc gs push mov dec mov sbb (bad) out (bad) mov leave add out ret addr16 inc aaa arpl (bad) add mov sbb lret ror je loope push cmp and add sahf aad scas stos add xor stc jb icebp (bad) mov das xor lcall movsl mov leave adc out fiaddl inc mov ret pop xchg aas push pop lock sub (bad) jp pop aas lret iret pop out mov jmp aad (bad) and out jle inc ret sub lret insl rcll sbb mov xchg cmp enter movsl mov mov or sub or add pushl cmp (bad) out inc inc popf (bad) lock pop jae iret and sahf sbb or dec mov sbb xchg inc sub or call dec sub or cmp jmp (bad) pop mov es sub xor adc (bad) nop push lahf sbb or cmpsb xor mov daa mov loop cld lock add fwait aas xor add ljmp ret sub xlat mov lret (bad) popa lahf cmp enter lret adc and ds sbb add mov adc sbb jge cltd ret jecxz add ret jmp cmp push and add movsl cmp or movsb imull pop pop pop pop pop adc popf lods push inc jae sub xor inc jle push or jb jne pop sbb rol popa xchg adc into dec add call popl in dec mov fbld mov sub or sbb cwtl hlt cmp stc xchg and and xor sub fyl2x cmp adc sbb jl mov imul popf inc mov test mov add sub or lds pop or out mov mov xlat add sahf out into into sbb loop rolb sub icebp bound lds and pop out fwait push sub push jl in fwait call push sbb out or and add push mov xor test out pushf and pop aas mov popf ss xchg inc mov mov lds cmp addr16 xchg mov loopne ss or jno mov jnp or or mov lods (bad) lret and push outsl out cld in (bad) gs and mov stos adc test xchg mov sub mov xchg xchg jmp (bad) push sub mov jecxz push cli xor dec icebp aam push add hlt loop lret call aad ret adc mov sub imull (bad) fmul insb fs aas imul pop cmpsb clc sbb add push mov dec lret dec mov pop pop push in push jno push add xor sub push mov xor (bad) mov cltd push mov mov inc or pop add or addb and xchg pop sub and mov int3 test out xor xor in in and xor add inc out dec xor cli sub scas jb call enter sbb mov imulb bound out mov rorb jle dec cmp add hlt call mov stc cmc xchg out lret cli and (bad) idiv (bad) out fmul sub xor aas addr16 test in in call inc xor sub push inc mov inc pop test int3 lret iret fstps xor push arpl scas sbb inc push insl stos je adc cmp mov sbb lret push ror mov adc mov and jae adc mov add xor iret outsl dec rolb xor dec lods lds mov adc add cmp inc daa xor push xor ljmp out xchg cltd jnp leave jmp sub push les add andl mov lret push sahf and in or test and fsubl push subb jp loop push stos stc cmp nop dec xor out push cwtl sahf popf leave push lds ljmp loop fstl push pop mov mov ret clc into dec orb daa add sbb xor sub xor xchg movaps imulb cmpsb pop sub fistpl xchg jecxz jmp popf xor sub jno adc imul sti lea (bad) cmpsb out dec push push das ret rcr adc sbb or scas fist rorl sub and sbb sub lods sbb pop jne cli adc add mov lock mov sub lret add scas jecxz cs or in test jmp mov imul data16 data16 mov dec cli mov nop ljmp push xor lea rol sbb mov pop and lret idivb addb leave adc es push xor je sub pusha fsubs sarb mov aam ss mov mov and push mov cmp add push fisubr or repnz leave mov mov sbb or mov cltd or (bad) lcall and jo aad pop fildll movsl bnd (bad) xor push ds inc adc popl leave add jg out out pop jmp data16 or ror inc adcb push dec mov popa cmpb lock popa popf sub and nop pushf cmc repz xchg inc cmp sbb mov pop pop push enter lret or sub and jl jo cmp or mov faddl cld (bad) and repnz les push (bad) jae mov sub and (bad) mov xor mov xchg mov mov data16 adcl adc test dec repz inc into jnp mov mov imul dec jle mov sub mov je jmp xchg sbb xor arpl push repz bound jbe or aas mov add (bad) push repz loop sub lods nop rcll das or in jecxz jne mov repz out popf (bad) lock aaa xor cli mov jg lea shrl jnp xor sub pusha mov and mov inc call push add sub mov dec icebp add enter xor sub push mov adc sub xchg lock cli sub add adc push xchg sbb rcr cmp shrl mov ljmp adc call das xchg add inc push jmp xor (bad) push dec add pop das out out mov inc push pop mov xlat mov or xchg bound bound divb mov cltd xchg xchg enter adc lret adc notb sbb adc inc and adc or add pusha or fstpl insb mov jns add dec sub push ret icebp lock mov repnz movsb enter incb jle outsl fimul (bad) aas out jb xor aam mov loope or sarl xor adc mov adc sti pop mulb js adc (bad) out pop pop fs fldcw loopne xor iret mov lods lahf daa ljmp push and dec cmpsb and mov add mov or movsb loopne icebp pop xorb add push fimull inc cmpsb mov ret cli repnz or test pop fist adc and xor add cmp popa mov xchg and fsubl aaa js (bad) mov mov mov mov leave (bad) movsl leave enter test add add jecxz jne clc mov mov mov xchg xchg sub rcll data16 inc sahf lret clc (bad) dec jecxz inc cmpsb cmp movsb mov sub scas xor pop xchg lahf inc or mov or adc lock jne adc iret andb dec sarl shll mov popa or cmp pop pusha sbb (bad) stc xor flds mov xor ret or in scas ljmp mov jnp es fisub fisttpll cs mov xchg inc cmp sub enter sub xor add sub add push mov lock xchg inc push push loop dec mov mov test js repz ficoml mov jl (bad) (bad) adc out repnz mov daa popa cmp jp out int3 pop out sbb cmpsl sub and lods enterw adc dec lds scas fs xor ds or iret xor add es add idiv xor subl js shr sbbl sub cld ss xor mov jmp fsts and sub sbb ss or pop pushf push dec or jns movsl inc data16 pop cltd push push or lcall popf inc sub and stos push and icebp and inc mov pop shll aas (bad) adc ficompl movsb stc cmp (bad) or pop jmp cld push sub cmp and test leave sub mov cmc jle jmp popf xor leave xor and mov lods fildll (bad) mov pop or pop mov xor pop and inc jns mov push mov mov test lret xchg sub comiss add movsb scas jo pop jp and jno movsl insb xchg nop push adc cmp and add insb mov push dec rclb xchg add mov or fnstcw (bad) iret out outsb push out daa sarl push ja out dec das sbb add add push fsubrs push lock popf int3 mov inc sub mov mov mov xchg (bad) sbb iret lret ja or clc adc dec (bad) dec dec arpl fstpt xchg mov xor sub sub ds jns and sbb loop or jo mov pop and cmc jo adc mov clc push aaa lret into inc (bad) xchg xor cmp (bad) scas stos push adc les pop dec gs sbbl insl bound and jmp lds sub sbb dec adc sbb clc xor lock rcrb out sub clc and (bad) pop imul sbb mov sub pop and xor daa mov fidiv cmpsb divb adc ret insb fidivr and (bad) sub enter adc pop mov clc stc mov hlt cs jne sub lods sub xlat movsl adc xor lock pop add repnz xlat mov bound xor fldcw cld mov jmp stos or (bad) mov out dec daa dec mov add xchg ss xor xchg dec jmp jns adc shlb divl sub push jmp mov sub push push xchg out or in (bad) and or inc out scas jb and or ret rolw fwait cmp add sti dec (bad) pop jp push jno mov (bad) mov jns (bad) add stc mov and inc outsb inc or sbb jmp (bad) adc int jg adc adc stos pop icebp sub push (bad) dec sub nop sub cwtl cmp aam in rcr mov out and stos ss or mov mov (bad) sub push jmp mov sar mov out sub mov mov sbb loop add cmp and aas xor add or sub xlat add fcoms mov stc xor add lock inc xchg out pop stc push aad movsl add mov adc inc xchg in and sarl test or std xchg std scas nop fwait (bad) jmp pop xchg ror test rcl out push adc and movb cmp pop jle jae push cmpsb cmp sti sub xor mov mov mov sub dec jns mov mov lret inc rcrl sub xchg mov sub push and and es adc ret sub iret loop rolb daa xor popf out jno and mov cmp sarl ret dec mov gs fisubrl dec movl popf repz sbb add (bad) ljmp jmp pop loopne call (bad) ja push inc adc xor pop sahf jnp inc or add and inc movsb in test leave repnz push insb dec dec lret xor mov gs pop aaa out sub dec mov dec or push addr16 cmp adc mov or shr cmpsl mov out fs repz pushf pusha pop pop scas rsqrtps mov mov les je icebp xchg jp xchg dec push fcmove lcall push jl nop xor sub pop neg mov dec pop cmp or add inc xor or scas in inc pop pop movsl fisttpl mov adc add data16 add mov test rorw sbb jbe imul sub push imul push fcomps cmp repnz mov cmp nop mov idiv lods inc adc xor and mov xchg push add xor (bad) push push sub xor and cmpsl sbb mov sbb (bad) (bad) jno inc or repnz xchg scas mov and sub and iret sub (bad) mov aam gs lds insb cmp (bad) sub xchg xchg sahf mov mov repz gs xor cmp das lret in dec repz add add pushl nop aaa popl in cmpsl inc adc jb cmp aaa cmp or out pop xor pop mov jne add inc sub mov insl and ja push jle push rorb add xor and mov lcall jmp rorl adc xchg xchg adc xchg xchg mov add xor popf xor icebp cmp (bad) jae pop out cmpsl in sahf push add dec xor (bad) insb mov lret imul mov sub xchg iret in loopne jae or pop sbb dec jle call pop xchg movsl add sbb xchg (bad) mov ret jecxz push mov push pop cltd cmpsl sub xor xor push lahf add dec pop pop out pushl out xchg cmp sarb popa fadd adc aam sub cmp dec pushf js dec adc in movsl lea ret lods test stos cmp jo (bad) inc jmp mov xor aaa push movsl (bad) negb aaa jno inc das loop icebp mov xor add inc jecxz fisub scas fdivrl rol (bad) or fcmovbe pop push or aas push popf mov fisubr pop or mov std (bad) data16 sub or inc push sahf mov enter push push ret icebp mov push xchg ljmp xchg (bad) aas test jecxz adc roll add icebp and push movzwl push add mov sub dec pop fsubs mov sub and cmpsl jp imul sub xchg sti fs into mov mov test lock sbb xor andb (bad) lret loop mov gs inc jo sub cmp pusha sub (bad) pop bound sub repz add lds jns sub shlb or pop mov fbstp imulb mov adc aas das add fmull add aas mov dec mov push add repz add mov nop jno mov and stc imulb jle arpl and ret sbb xchg mov and push mov (bad) into and sub adc aaa roll push jno add jbe inc ficoml stos adc inc push (bad) in das pop cmp mov push je ss adc dec pop xor push scas xlat in pop scas mov add mov jp std inc add mov push mov pop pop out rorb addl aaa mov jl icebp jo push cwtl loope mov mov xor add test int3 pop (bad) push mov push fsubrp in (bad) call stos pop add pop sub mov mov mov mov push shl sbb adc pop and mov test add push push sbb adc sub push cmc mov test in lcall (bad) das idivb or pop cmc adc daa xchg and mov js rclb bound push ss cmp pusha dec or xlat pop lcall ja mov shlb cmp arpl mov add jae or lods test and xchg pop push xchg fildll imul lock cmp pop add xor mulb xor jg pop inc out fs add bound sub pop mov push cmp pop push mov pop rclb mov add or out loopne mov push dec add jnp test add (bad) jbe inc and ljmp push xchg arpl add cwtl loope dec aaa xchg or lret mov or sub xor pop push mov push dec jg pop roll or dec lcall test add adc sbb push loop jle and gs inc and cwtl sub adc xlat lods pop mov push xchg fidivrl (bad) repnz mov into pop and xchg pop push mov adcb out pop sub dec (bad) xchg andb mov sti cmc test sti or lret jns xchg add cs (bad) and jle inc sub call imul subl rorb fstpt sbb rolb xor inc or or sbb (bad) sub mov scas movsl lds adc mov xor in inc in push and pop cli outsb push or and push dec notb repnz iret mov divl jne sub sbb cld pop leave pop mov mov inc loop add in xchg lret push xchg movsl movsl divb mull cltd fcmovu jbe js fmuls or movzwl xor push (bad) adc stos cmp xor addb sub mov jb sbb xlat cmp int cmp cmp gs (bad) add and f2xm1 cmp push ss leave stc test test test rcrl ss jge and jnp imul inc repz test dec ja (bad) adc cltd je push mov out or xchg jnp mov xchg add xchg cwtl push add scas in mov and dec fimull mov ret (bad) lret pop add mov bnd push das xor mov repnz xchg and or je lret fmuls xchg fwait mov iret pop fwait lret stc les ret or sbb xchg sub pop movsb (bad) or mov sbb insb cmc fiadd stc mov push in daa mov inc xchg inc pop sub out jb push rcrb in mov in push xor push and add add xchg mov pop mov jmp ret xchg jle rcrl xor bound sub sub cmp dec leave je imul and mov pop out out sbb (bad) mov mov xchg sbb pushf lods (bad) in lcall (bad) ljmp sahf add xor out bound divb inc pop (bad) outsb cmp inc cmpsl rorb xor sub and pop inc daa or xchg (bad) mull xchg push out rcl sub cltd pop outsl xor pop in and int leave mov (bad) jg cmpsb push pop jecxz pop pop aas fistl adc add loop push lret lcall push comiss adc mov test fsubl sub insb add and lcall outsb fnstenv and mov nop popf xchg ror movsl insb repz pshufw (bad) mov mov iret loope or pop sbb mov arpl (bad) mov dec rolb and push cwtl push (bad) cld jle jbe gs js jns pop bound add repz stos pop ret push xchg out es aaa sbb scas and daa cltd rcr js mov movsb adc in pop mov jbe add sub (bad) cmp hlt lret loop sbb je and mov pop add push rcll ror jl xlat mov xor fidivr imul dec or mov mov xchg test lock xchg (bad) dec test and sub (bad) mov out push xchg sub xor std stc inc pop push jns test mov and mov divb stos push imull or mov in aas mov xchg mov dec rcll lods es jmp inc sub ret pop out imul aaa (bad) ret popf rcl cmp das lret ret jg pop or cmp inc mov fsub lock jp enter or pushl cmpsb and bound add push lret (bad) int3 cmp popf cmp pmaxub jecxz adc mov or bound cwtl jg xor cmp shrb (bad) jbe pop sub adc cmp push add sub lock xchg int es repnz pop jecxz out (bad) shr enter dec or mov in gs cmp loope pushf mov ret xchg mov pop jl mov aad imul sbb incl ljmp (bad) push popa testl xchg lea icebp inc outsb xor pop ja push (bad) mov es repnz add jns push aad and les ret inc pop cld mov je in call adc out adc and out dec inc das push xchg ljmp push sbb jle fwait ret pop pop inc add cmp pop sub adc leave push jae (bad) in aad inc xchg movsl imul push ret orb shrb insl push xchg mov popf enter nop push incl or adc movsl ret and cwtl loop mov mov add jbe dec into mov stc lret and add adc fbld sub add inc adc sub mov sub xor adc sub mov adc dec add outsl iret add icebp fldcw loop cld mov into add adc lahf addr16 push or add sbb iret ss cmp dec mov divl call outsb negb popf mov les (bad) test or push xchg cmp dec jae mov pop xor out je sub out sbb adc and jnp dec jnp jmp mulb imul pop cmp add xor lret xor add (bad) pop mov pushf dec ret mov fisttpl and push test mov mov out mov jl movsb mov dec lods test push sub (bad) rclb cli int3 (bad) lahf adc ret orl int lods cld lahf adc cld and fcomi push mov xor ficoml ret jmp cs mov and sbb sub push or das jae es bound enter shll xor out (bad) aam sbb xchg cmp out mov jb and lods xlat jnp mov pop lret mov sahf into imul jae ss jmp out and adc jnp xchg gs and in push lret pushf inc mov dec psubusb repnz addl cli nop repz daa inc aaa push jp nop pusha add (bad) xchg fisub add pop mov test mov sub (bad) mov sbb jo call add add or outsb test cltd je inc into cld lahf inc mov repnz mul fs adc lds in mov push hlt adc pusha bound adc sub lcall loope mov sbb xor jno mov (bad) jno pushf mov xor fildl mov (bad) xor inc cmp pop sbb cmpsl int3 sub dec imulb ret push xchg mov mov fs xor popaw dec sbb dec or sub out adc pop lret and mov mov sub adc icebp dec cs add or xchg jnp outsl xor or xor sbb xchg cwtl cmc mov adc sub add mov fsubs sbbb fcomps or ljmp (bad) pop pop xchg iret inc add or cmp (bad) rolb sub or icebp enter sub mov inc fadds out ret add xor mov cld (bad) mov xchg cmc (bad) in push and jl (bad) negl mov ret test and (bad) sub jns ret mov xchg lock mov adc jle xor xlat xor lahf ret arpl adc push dec adc mov rorl shrl shrb in int mov pop popl adc dec (bad) pop mov xlat je (bad) and sub pop xor sarb int and mov mov xor gs call test call sbb sub aam or push and cltd jno dec mov jbe icebp repnz test xor stc leave out dec or icebp jns mov push lods push mov xchg in in inc sbb adc sti arpl mov xor xrelease mov pop add lret xchg mov movsb mov xchg dec add jae daa bound ds mov and mov mov mov fstps lods in rcll imul popa pop push insb bnd ret testb decb cltd add adc add lret test leave fisttpl jnp shrl or test sub push xchg xlat dec sbb int3 divb or dec xchg jp scas xor push mov inc xor test xchg insb (bad) or dec lcall pop sub dec xchg mov jle xchg les dec sub cmp mov dec ja in repnz shl cmpb mov imul inc mov cmp int3 (bad) shrb cwtl and ds and mov outsl das gs les jnp xchg adc adc or cmp mov mov lcall cli insb iret lret lret mov jo xchg push loop add push jmp pop int3 scas add ds daa mov xor mul dec cmpsl pop pop mov sub dec popf push mov imul (bad) xor push xor out adc lret int3 sbb cmp leave jmp pop jno data16 out mov cmp add ror in inc xchg enter pop loop add sub xor decl and lcall imul ret repnz sub mov (bad) push pop fbstp jnp in stos (bad) fcoms sub mov mov shrb sbb xlat jg mov cmp das cmp out mov inc icebp sub cmp bound pop icebp and or cli loop sub sahf and mov stos xor divb mov cld testl (bad) adc adc xor jbe bound mov push (bad) imul jecxz jae or sbb out mov inc pushl decb (bad) ja arpl pop inc mov pusha out fstps lods mov bound add out sub xchg daa lock dec and lock leave cmpsb les sahf (bad) xor add loope and pusha decb xor aas jg icebp jg dec sbb movsb into cmpsl cmp xor fwait pop sbb test mov call loope jno outsb xor xor push dec inc cmp int3 inc xchg pop hlt js cltd sub push and out loop sub pop add sub mov xlat push cmpsb es push xor loopne or fbstp dec repnz inc mov dec shrl int3 dec cli mov ljmp insl mov imul lret xor insl push gs push dec or repnz xor xchg repnz out and sub stos mov sti xchg addl ret loop fs dec and ds in or idivb xor mov sbb jle xchg fdivl stc jp push xor ss jl gs test mov add bound mov and jo (bad) (bad) icebp fadds fcmovbe mov push push adc scas inc std xchg cmp mov (bad) pop inc (bad) (bad) and jno sub adc ja push fs (bad) xor mov cmpsb out add ficom xor push fwait js repnz loop jg (bad) dec mov (bad) mov or and imull js dec sbbb and imul rcl scas xchg movsb sbb bnd mov daa int3 data16 out sub push xor mov mulb orb xor mov das cmp jno mov xchg jb inc add popa std mov ds dec pop mov addr16 test xchg and jne cmp cwtl push idiv sbb ffreep repnz adc daa mov xor xchg mov mov (bad) aaa inc mov pop bnd adc dec jnp xor pushf icebp dec in cmp mov jg push mov pop gs cmpsl icebp fwait xchg (bad) loope popa add mov test or outsl into mov out mov flds out xchg ljmp lock or lods xchg clc (bad) (bad) jns dec xchg sbb iret (bad) sub adc pop adc mov jmp aad mov not add pop xor divb mov jecxz pop repz incb idivl push mov popa aad out push fadds ficoml into ja or pop add into xor pop sub jg mov loop inc enter scas (bad) mov cltd cmp stos loop cmp fs xor fcoml (bad) ljmp data16 shll fisubr mov cmp push dec xchg push add push dec std mov jmp data16 xor js js sub test sub inc cmp int3 inc mov push xchg cmp add sbb lock adc aas jb ficomp ds mov xchg sub dec sbb push pushf (bad) sti xchg into adc aaa inc idiv or cmp inc sbb (bad) call cmp addr16 outsb aas xchg jl jmp and and clc cs addr16 das push pop jmp adc push pop xchg push adc mov (bad) mov dec xor lahf repnz xor sub (bad) pop mov pop push jb arpl imul sbb scas cmp push jbe lds jp add push dec into rcll mov bnd sub into js xchg or pop add or orb jg mov icebp pop ds jmp dec cmp push cmp pushf test add std cmpsl xchg lods push adc pushf mov cmp in mov stos mov mov add add loop (bad) lret add pop xor loope loop xchg loope aas lret mov mov fstl mov or lret add sub push mov jbe enter add push mov lret cmpsl sti pop xor call rsqrtps mov into cli inc ret adc gs cld hlt cmp xchg lods pop leave enter cmp mov dec test add xchg and push pop sbb aad jbe xchg pop popf dec out and xchg fs stc cmp fsin add (bad) jp adc or pop or jl push repnz icebp clc cmp add cmp jle add xor pop jne cmpsl cli pop fbld pop loope sub cmc fstps sbb cwtl push xchg xor jbe adc mov sarl test mov outsb and xchg adc adc xchg data16 pop cmpsl or cwtl jge adc (bad) ljmp (bad) bound (bad) aas negb jbe or and and ret sahf adcb inc sub sbb cs pushf pop jb jecxz push jl icebp or mov xchg mov adc popa loop sbb inc loop les inc and dec cmp popl adc push mov loopne out gs in das repz fldcw bound testl pop (bad) xor pushf clc fidivl mov insb mov xor or xor cmp popf test mov adc lahf sarl xchg push pop mov or int3 iret sub add loop enter test mov pop lret and pop test xor out mov clc pop push call loop insb and shl mov cli fcomi dec sbb in (bad) clc xor dec fnstsw data16 das add push fisubr mov dec aad add cmp add repz leave mov pop shr dec test pop ret sub cmp pop mov jle pop push mov cmp or gs cli or notl (bad) mov (bad) das inc add repnz xchg sbb mov ljmp mov and dec rorb mov or stc and lret mov or push jl (bad) out cmp adc mov call mov adc iret scas pusha or jae jns (bad) (bad) xor stos flds ds jmp sahf (bad) pop insb sub (bad) mov int add jecxz inc or add mov hlt stc dec inc mov fistpll lahf jne push xchg repz addr16 (bad) push add inc popf cmp pusha push inc dec out imul sub out lret mov inc test nop repnz push repnz push orl pushf push sahf sbb jg xor iret sub adc loop out or fcoms lcall das rorb sub rcll mov in jge call hlt repz add adc or icebp ret jno mov in add fidiv sub mov xchg cwtl pop or fwait and (bad) mov sub into add shll xchg arpl push gs les add insb push lds cli fldcw push adc xor and leave icebp ljmp jge jnp jno test lods in mov aad inc mov scas cltd adc inc sub mov mov add jno movsl fimul das push pusha pop ret cmpsl iret and mov enter movaps adc adc sub adc mov imul pop stos (bad) int adc push fs xchg xchg adc pop sub jo sti popf add mov das lcall icebp ljmp mov idivb sbb pop and scas outsb mov loop mov mov daa sub sub sub jnp pop inc repnz das int sub sub sub fbstp jge sbb adc movlps mov aad adc mov out and adc push loop repnz dec dec stc pop nop cmp xor mov xor (bad) sub fidivrl cmp ret lods push xchg mov ret jae pop (bad) cmpsl jl lds xor out inc daa in sub add xor mov in sub ljmp mov mov pusha lods lahf jae movsl hlt cmp cmpsb mov loop push pop mov es sbb pop add dec add or dec es jge pop repnz bound xlat sub cmpsl loope ljmp or lods imul and and loope cmp mov and xor dec xor rorl jb mov add push and pop pop lret dec sub push lahf ret cmp dec mov int adc stc dec fnstcw in xchg adc inc add or fdivs push leave (bad) and imul sbb xchg xchg popf mov jmp fdivs fsubr push fwait dec daa fs adc shlb (bad) pop lods adc mov xlat faddl or in sub mov jne in iret push cmp dec cmp mov lods sbb or xor cwtl push ret mov xchg mov leave into pop jmp popa dec loopne push xchg mov pop cltd adc jo xor sub (bad) or jg pushl enter into fnsave and test or fwait adc movsl divb and jmp into call jb pop adc sbb inc pop sub mov or cmc xchg inc mov mov cmp mov or out (bad) mov addl and imul fdivp in and (bad) mov push pushf shrb aas mov lret adc pop cmp (bad) pushf popl sarl pop pop pop inc cmpsb adc cmp rcrl inc jge xor test jp imul leave aam jne out ficom (bad) sti insb mov stos ret jne aad std adc pop adc push mov dec cltd cltd hlt roll xchg mov aad push inc fwait add mov and jg jmp xchg roll js jg sahf add sub pushf lcall shrl push sbb xchg loope mov sub hlt loop or push or mov fwait pushf pop xor pushf aam push icebp ret test push int3 push push mov out mov xlat jecxz sub (bad) cwtl cmp dec mov clc movsl mov call sub mov addr16 mov mov pop xorb add insb dec mov jmp cmpsb les leave out xor adc sub push pop cmpsb shlb and enter mov or loop mov lods push sbb xor mov and sub xor xor rorb mov test sbb sub aas fnsave or xor mov add sub jmp pop mov or int3 push iret mov pop xchg jo jecxz imul (bad) mov or push pop adc sbb lret mov fiaddl lret xor stos pop xor leave and xchg into jbe pop ror xor inc adc cmp loope inc push jmp out mov mov or iret rorb dec scas sub and mov inc inc mov das xchg mov pop pop stos sub pop pop cld sbb add sbb or enter ret xchg pop push jo pop ds pop fild sub xchg xor mov pop mov jae adc inc out mov mov imul (bad) in test mov lods jle mov and add xor push nop into mov stos ret shrl shrb out inc mov jmp ficompl mov push adc pop mul jmp xor mov lea adc inc movsb int3 push sub mov dec mov in mov sbb cli jle shlb pushf es stc xchg les (bad) add dec repz sub adc out lret loop mov xor icebp push cmpsl sti xchg sub (bad) pusha mov pushl xchg shll jle (bad) ljmp cmp test shrb in push push call (bad) mov pop jne xor rcrb imul sarb stos xchg pop int3 or xlat push xor mov or negb sub mov sub leave mov jle hlt cmp outsb mov push outsb outsb (bad) sti loope mov rol outsl lret sub mov jmp cmp jg pop mov xor mov and xchg add adc movsl mov or or push imul pop stos mov dec pop xchg mov dec test sbb enter cmpsb sub push pushf mov or jmp jb and push enter push inc xor jmp add out dec xor push or mov fwait xor or push dec lret out pop or jle mov and push xor leave fistpll jb gs push fnop or pop gs hlt cld insl and mov int jp jecxz notl jne sub inc mov out popf ret lods stos dec push mov cmp aaa xchg fmull rorb frstor jno lods mov lcall scas lds inc loop and movsb dec int3 into aam and mov stos xor fldenv xchg repnz add imul push (bad) pop out jmp or adc nop lea (bad) insb ret cld jge lds push pop xchg insb daa xchg xchg ss fbstp xor idivl loop les shrl ds repz cmp mov aam pop add out sub sub rol cmp sub sub out add mov xor pop (bad) cwtl inc ret mov mov add pop jecxz cmp bound nop call cld out dec test pushf pop je cmp sub jge add push pop mov add or cs repnz rclb pop adc mulb jbe imul iret pop push fidiv pop mov push mov jne adc push ret add je sarb mov add scas rorl ja dec sub or jle lret jl cmpsl repz xchg ljmp lea fsubrs xchg into pop popf jnp adc imull mov into test add inc fs pusha stos int push fmulp mov push add dec das (bad) xchg jb push add xor xchg pop xchg sarl loopne and lea imul and adc mov in or insl xor mov lahf movsl adc lahf push popa jmp dec test xor xor xchg inc sub dec xor fstpt aam cltd mov adc loope pop inc outsl scas pop loopne and jmp mov nop pop (bad) xor sti add (bad) insl dec sub popf or add aam fwait popf jnp xchg (bad) mov aam mov jae jl in ds cmp dec cmp adc sbb enter (bad) ret sub push dec leave adcb in and dec lds mov (bad) jl cwtl test repz idivb mov aad add (bad) lods jbe ljmp dec mov mov xchg pop cmp in arpl rcll mov int3 jb inc sbb sbb idivb push xchg test adc add scas mov sub outsb loop test adc sbb movsb pusha aaa outsb fsubrl lods or pop into sbb adc mov jo push and inc lret inc dec int3 ljmp jl xchg and gs andb pop stc xor mov add loope imul dec mov jbe push mov add cmp dec stos leave sbb int jo inc dec lea ret out js mov push rcll fdivrp int3 rclb lcall jo test popf lods outsb insb xchg sbb dec pop fsubr data16 sub cltd dec push jmp in in add inc dec mov ret test pop into or sbb mov cld cmp aam add shrl mov call (bad) frstor fbld mov shr mov sub movb lods (bad) shll or sbb push iret sub std jmp or cwtl dec js into (bad) inc iret cli or push inc xchg mov adc lgs xor xor mov call (bad) sub dec mov mov dec inc inc stos adc push adc loop mov add push mov xor add or test lods es xor mov cld lock rcl cmp mov sbb push movsl mov pop cmpsb mov xlat inc movsl daa sbb mov mov xor addr16 mov mov mov xor mov test std orl pop pop test mov inc mov std lds adc mov xchg shr xchg and pop sub jg inc push push cmpsl sbb dec push cmpsl fs fistl into stos je sti cmp mov ret test add dec pop and arpl xor push es pop xchg gs pop mov fs sbb xlat movsb daa xchg sbb dec mov push lcall sub subb or das divb les (bad) aas cmpsl icebp inc andl sub ljmp rcr or insb sbb xchg xor test fiadd cmp xor mov xchg or ret insb mov adc mov push sub mov pop stos adc bound lcall xchg inc test ret mov mov das sar fs dec jne test into decl shll ljmp xlat (bad) repnz repnz repz pop push inc popf pop sub imul adc pop push xchg lods lahf sub lods out fbld and or idivl out mov push add fs inc xchg and in adc aaa hlt ret stc mov sub mov mov xor mov add sar adc mov (bad) test movl mov adc pop repz sarl mov repz cmp dec xor adc sub movsb cli or (bad) cwtl sub and cmpsb sub scas cld loop rep (bad) sbb or fisubl inc sub clc and cwtl (bad) xchg inc cs and fisttp push mov dec sbbl jnp push add add xchg rcrl paddsb mov (bad) pop in movsl jbe gs sub fucomip jmp mov lret jno in fsubrs ret daa roll mov add movsb sub or aad in leave pop repz bound mov jg inc out xchg pop mov jb inc cmp mov cwtl jno xor sbb xlat rcr into inc (bad) mov and and sub and cmp ud2 or jb ficom pop sbb mov and jbe fistl add pop jmp lret sti enter in xchg aam iret xchg mov mov and cmp push or pop mov test pushf das cmpsb icebp pop mov bound ja xor (bad) out and in sbbl mov xor loope push cmp mov dec lahf inc dec int3 ret adcl mov in cmp jbe gs mov call mov aad sahf push sbb (bad) sbb mov int and push mov inc lret mov sub adc mov daa test sub xor xor test movsl ljmp xchg or pop out addr16 in rclb pushf mov test aaa aas je cltd cmpsb lods adc mov fidivrl fnstsw gs pop ret cmp adc (bad) mov pop fildll mov fistpll xor imul dec cmp mov adc popf sti in cmp push push mov xchg sub xor mov and pop into int lods dec outsb inc mov flds xchg cmp push das adc and xchg jns inc call mov jmp sbb add fwait lcall or add cmp sub das pop dec scas jle fs cli int3 cmp inc add lea or sbb mov inc push das dec adc out ficom push in lods and xchg popf or cli push mov dec pop jae nop mov aaa mov clc sub cmp jo je pop leave push inc lock lods clc (bad) xor lret cmc int3 mov lea mov movsb adc xor imul or mov cmp fmul (bad) adc xchg mov rcrb out loope (bad) xor in repz xchg bound icebp fisttp (bad) sbb jns test add ljmp movl dec mov scas into scas mov int3 and mov xchg test clc insl (bad) mov jne inc push pop jp into mov lods push pop fidivl cmpsb xor mov mov dec fsubp mov pop sub into int (bad) sbb mov add xor setl sbb mov aas sub push sbb stc mov in mov inc int jg sbb add mov aaa (bad) (bad) mov inc adc psubsw movsl jmp rcl les out popa fcomip andb xchg mov je loopne out pop cld mov xlat dec call pop nop pop ljmp inc adc sbb pop enter inc lret daa xchg cmp adc lret and addl out and daa add mov xor mov cmc add lret ret push mov push outsb imul pushf jg (bad) mov shl pmuludq das and fsts lods or mov add mov adc adc fisttpl jo stos lret jbe adc mov xchg pop pushf cmp (bad) mov sub shrb sub sub scas ret inc dec js or aaa add fs xchg imul outsb add or add pop cmp pusha pop and adc lods mov stc (bad) sub sub fnstenv mov push push lcall pop sub jmp add push adc cwtl mov push movsl lds sub movsb or sub fsubrl imull xchg cmp xlat xrelease popf sub xor pop fcomps leave cmp orl push jp xchg add gs and enter jno cwtl sub mov jecxz mov and push imull dec enter sbb cmp sbb pop std (bad) and mov mov pushf inc dec add add jmp push aas xlat sub pushf sahf outsb leave cmc add mov mov add imul push mov pop aas loope mov sub or into sub push out xchg adc or sbb aas inc jg add cmp mov jno ds add popa pop xor xchg inc add aas xor and pop mov jns jmp movsb test inc mov fstl into and sub sahf pop gs test shlb sbb sub arpl add pop mov stos cmpsb xor inc popf int3 or and or (bad) movsb imul inc mov jg ja xlat leave jmp dec xchg lds imulb (bad) (bad) fstpt xchg and or mov adc lods rorb arpl mov ret mov js sbb mov jecxz sub adc mov cmp sub sub xor fstps sub push adc cwtl xor xchg cld jge (bad) sbb adc or mov add pop adc mov cltd cs sbb sub mov pop cmp dec and lret pop cli xor and mov xchg push notb mov cmpsb loope adc pushf xchg repnz in movsl out notl ds out xchg or mov loop or ds cmp mull leave mov scas (bad) mov sub add cmp lret je inc dec xor jmp mov inc sub insb cmp loopne jle mov fxch lahf repnz jo mov mov push mov lock and sub cmpsb xchg add mov jl push cmpsb xchg sub and imul mov jl and das repz icebp int3 sub sub mov or push pop test out push and test pop or out aam and out imul mov pushf sub fcompl and push fsubl mov mov ja mov fldcw mov mov dec adc mov icebp adc pop imul sbb or xor adc mov bound xlat bound inc inc call xor sub rorl and gs les stos lret add add pop in xor (bad) cmp add xchg add mov jmp das mov bound xor inc mov leave loop push push stc dec lahf sbb mov pusha daa push xchg hlt mov xor and popf loop faddl and mov pop dec inc add out inc stos hlt pop leave mov gs mov xor (bad) inc push push pop and pop adc add and ljmp shrl in js sbb add clc xor (bad) hlt test mull pusha or divl mov mov push sti xor sub cmc out push dec aaa xor jg repz sub xor mov shrl xchg xor inc dec stc mov mov push popa fdivrs xor mov repz sar pop shlb xlat mov sub imul call jns xor je (bad) (bad) mov push gs je lds xchg dec ret pop test inc lods push imul jb pop or cwtl lock repz enter sbb pop sub mov (bad) mov dec mov sbb sub fidivl push cmc xor xlat cmp call jo inc sti das add cmp or mov (bad) sbb lret (bad) or lcall loop mov icebp mov inc xor ljmp jno or or xor mov mov inc sub xor (bad) int adc mov decl movsb shr sbb xchg outsb cmp and cmp loopne popa pop jns imul mov mov add sbb cs cmp mov sbb fimull stc negb adc mov dec mov outsb loop das and and pop sub cmpsl das movb pop mov andl mov sbb out pop sub or mov out inc jl sub nop jmp inc arpl lret shrl ss bound add loopne,pt adc xlat je sub lret sbb (bad) imul ret xchg push std jmp shll into mov test leave mov dec fcompl lret xor clc add push ljmp vpminsw inc sub clc xlat push rclb ja add dec dec mov int3 aas sbb sub add sub mov cmp add stos push gs addr16 jb adc pop cs (bad) mov sbb lods xchg (bad) sub dec push add popf or or and shlb or and outsb (bad) aad inc or sub out insb lds dec xor scas pop push imull (bad) das cld outsb cmc (bad) (bad) cmp popf ficomp and cmpsl fmuls dec dec je ret sar imul adc xchg lods mov je lods repnz sti arpl loop mov sub decl dec mov mov cmpsb pop imul dec pop lret (bad) adc dec cmp lds in mov mov pushl mov test sbb pushf cmpb push mov xchg pop sbb mov pusha (bad) pop in loop adc idivb aaa mov pop lcall mov jnp mov mov mov dec int add sub dec pushf cld xor repnz mov out pop fmul repnz in ret repz repnz jbe adcl cmp fsubrs adc mov mov adc (bad) stos jne cli fisubl mov fcomip repz scas xchg mov or (bad) bound push push cmp iret outsl stos add xchg push mov sub shrb xor nop and (bad) xchg dec pop dec jmp sub or add mov jp pop push pushf or dec sbb sub push daa adc add or scas jnp cmp mov mov xchg sub inc sbb dec pop in inc sub mov sub mov and sub fcomps mov sub or xor leave ljmp jmp add sub add sub fisttpl das adc sub jg cltd int3 and dec aas xor leave add (bad) sahf shrl sbb jmp inc mov sti adc fistpll andb lock add cmp mov outsl popf cmp add jno jmp push sub cmp and xchg xchg pop loopne xchg ficom push icebp addl (bad) jmp div adc xor mov movsb mov push sar dec xor in rsqrtps jae and stos js xor sahf pop leave data16 (bad) push jb dec sbb and pop xchg leave pop in out push adc (bad) aam stc and and std pop mov cmc pushf mov push out dec repnz out xchg out jnp mov add mov adc ret test mov lahf push xchg pop inc mov sbb push cwtl add pop out push (bad) sbb pop or out insb mov stos xlat (bad) imul dec (bad) leave mov ds sub ljmp mov or push test js mov pop adcl popf aad xchg mov cld jle or popa mov (bad) xor repnz and and adc mov gs mov ljmp mov (bad) pushl or push dec and inc add stos arpl cmc mov dec out jno loop imul sub ret bnd add dec ficomp (bad) or shlb xor outsl push mov out mov repnz sbb fs clc popf and xchg inc out test lahf cmp sub add out dec pusha add jnp mov dec xor pop xor push xchg dec pop push in inc add adc daa sbbl sub mov ficompl adc or pop mov add iret inc clc fsubs and scas xor popf mov adc arpl outsl (bad) jge lods xchg ret push fldt lds (bad) cli pop inc dec pop pop sub imul orw sbb test push inc pop xlat mov adc (bad) clc lea repz lods sub out mov fstpl (bad) xchg push les and mov and out add loop xchg add aaa push faddp sub sub add loop clc jo (bad) or xchg xchg xor (bad) sti mov push loop adc ds test or add and mov mov rorl add es sbb sub cwtl cmc sub daa add bound (bad) hlt push idivb mov clc push mov jns xchg xor and cmpsb (bad) cmp add add fadd cmp test mov repz xchg xlat addr16 loop mov shrl out mov cmp mov test xchg push inc push dec nop inc out xor pop shr andl test or mov sub inc out push out push ret jae mov in not es pop jb into push pop inc dec fldcw and (bad) jmp inc lret fdivrs and sub push jle pop movsl xor cmp shlb orb shlw jmp pop lahf jns dec mov faddl push (bad) mov sbb or or (bad) lcall lods mov cmp jb push and jmp mov cmc mov jmp push and leave jmp cmp xor iret and test sub sub jmp (bad) ss sbb mov leave (bad) xor (bad) cltd mov loopne jecxz jns (bad) ljmp pop push out dec add repz or xlat mov push pop fs and xchg cli jg mov sbb int3 idivb loop lret fs stos mov xor int3 and sub push dec loope sub leave cmp inc dec jb out xchg test cmp xorl gs outsb leave test and ja jbe pusha idivb ret sub adc xchg push (bad) fisubl repnz divb push push out scas sti xor pop jmp adc lods fist (bad) pop shrb add neg arpl mov or cli stc cmp test mov mov ljmp pushf pushf and loopne adc ret addr16 movzbl sbbb xor daa mov cmp lret jecxz inc jmp or sub mov lret in push pop repnz adc sub inc lock jbe lea push cmp xchg xor mov icebp dec and mov out in jmp or xor xor jge iret hlt icebp mov sbb xor jnp gs dec sub xchg pop xor add push test ljmp out sub add xchg lock adc xor lods jae mov jl push xchg in and (bad) ja and xchg add and imul insl icebp jg frstor jnp xchg pop xor push and inc or aas gs push mov or arpl mov or lret test inc push and mov out je ljmp mov jns daa push ja mov push xor lods push or into mov loope add cmp ret or mov mov xchg and xor in clc and bound call lds call and in add int pop add pop adc mov mov pop js fistp daa out idivl clc repnz into shr and lret imul cs mov mov into cltd je (bad) pop xlat fadds xchg and push jns imul cmp add or fdivr (bad) xor mov cmp pop jge mov rol aaa cwtl adc pop lret icebp dec sub and out jge in pop push icebp or std add hlt ret das dec jo and sti lcall pop test xor cs adc sti addr16 sarl mov bound subb stos xor add subb icebp mov dec jecxz daa (bad) fbstp mov sub or leave xor mov scas sub insb and pop cmp ja lahf adc sub iret and stos mov dec (bad) ljmp xchg ss fldcw movsb mov push es push dec hlt pop sbb or xor pop cmp xlat cltd fs inc cs xchg or mov ljmp and and sarb leave jmp in lods rcrl or int3 aas inc jnp insb fstp sub xchg mov (bad) scas shll add test int icebp mov push dec add sbb stc mov push icebp ds jne add test push fsubl push xor cmp jmp in jnp mov mov and or call sub add aad and cmpsb inc loop xor dec push and dec push out icebp adc xchg add pop daa mov cld imul push xchg dec cmpsl popf les leave mov rcll out out mov rcl mov shl pop lock lods push test push clc mov dec jne fcoms sbb rcl push hlt mov aad repnz xchg xor cmp push jae into lods dec mov add jno add ds inc aaa ja cmp popa int subb cmp pop pop sub sub jmp push loop adc outsb out jp clc or push ror cs jecxz mov pop mov add xchg add or xchg jns adc inc and (bad) pushl cmpl (bad) (bad) js out dec add flds mul inc (bad) dec or xor push or dec dec adc test lock and jmp pop fbld dec add js mov fs inc les push mov mov xor jnp or mov loop fsubl lret mov pop ja mov daa mov icebp aas adc mov inc xor (bad) in inc fmull pop hlt mov aas dec or imul xchg xor push imul add push in dec sub pop lea jle push sub mov cwtl or mov and mov xor mov leave out and mov (bad) imul jle push icebp mov push and int3 mov sub repz imul das fimull call cld cmp and and and sub push push mov imul fwait in bound lahf (bad) xor add mov mov mov cli dec pop xlat xchg sbb xor cli sahf dec jmp xor (bad) fisubrl sarb gs das aam pop rcl mov push lds sbb push icebp jno xor or movl leave (bad) sbb dec xchg repz stc mov test scas pop xor cmp or ds (bad) jne loop cltd cmp out stc sahf inc mov out pop leave mov adc nop outsb xchg sbb std and xchg cli or mov mov leave mov xchg mov xor xabort enter sub outsl loop call (bad) fiadd mov adc jg (bad) divb dec lds es (bad) and or mov cmp cmp xor dec sti movsl ja popf xchg ds ret fcoml inc movsl sti xor sub scas adc cmp out pop pop movsl and sbb (bad) xor adc cmp dec or inc pop sub push inc push dec push clc push mov xchg out mov xchg scas and mov mov inc out xor xor (bad) hlt (bad) xor movsl mov js (bad) mull dec sbb sub ja mov cmp pop adc shlb push xor xchg fs cmpsl lcall sub add daa add stc ret mov jl ljmp xor and jns xchg or jns movsl (bad) fadd sbb xor and sbb jp enter xchg or dec inc je sbb push dec call sub jno lods (bad) sbb xchg aam mov pop in stos xchg stos (bad) out jecxz dec divb sub leave outsb pop dec repz jbe mov js pop jecxz (bad) iret mov pop repnz sti mov cmp dec idivl inc repz jnp xor inc jns mov and mov jb pop inc loop in push out repnz push (bad) mov leave fs lods sarb imul or add imul outsl ret push insl push shrl xchg add out popf stc sub adc adc sbb xlat stc jecxz xor lea mov insl xchg mov and (bad) leave loop in cmp pop or cmp mov out or (bad) push loop xor in std xchg nop (bad) cmpsl xchg sub push xlat hlt insl loop and movsb jl loope jne xor repnz pop jmp mov or mov pushf add outsl mov push int3 jne (bad) (bad) loopne std dec xchg (bad) mov shll les sub xchg test loop nop mov xchg inc les mov mov stos (bad) push pop add xor mov dec ljmp mov and or imul sbb hlt xor xor xchg inc outsb jns inc sbb fcmove aaa das clc outsb mov adc negl ja rorb dec mov je and out mov adc hlt pop mov add in mov outsb push mov inc or and and repz fcomip outsb loop pop or pop add push outsb enter push adc cmc pop stos lds stos loopne xor push out mov xor push jg pop dec add lcall popa jl faddl add add push add pop add (bad) xchg ja and jo fcomp push rorl lahf std jp or xchg jno add pop pop mov mov xor cmp dec out sub sub sbb push movsb (bad) aas dec into xchg pop or cmc add cmpsb mov orl and jmp mov jo nop and mov or cmpsl push jbe ret cli sub sub mov xor sti cltd jno fmull and int3 or orl xchg sub push push sub std aas dec adc pop imul mov and mov add stos aad lcall jae aaa add pop inc push pop fsubrl or add movsb sub lgdtl mov cwtl sbb nop inc cmpsb inc add (bad) pop add (bad) test jae pop sti stos and xor sbb outsb push or or or push push mov pusha out jmp iret mov push or enter scas add test lock rorb shrl add fbld pop pusha lods fildl and dec jmp mov es pop push imul mov bound push xchg je in jp mov xor stos imul pop ljmp xor cs cmp jne insl adc xchg jl inc push mov and and add cmp adcl jg cmp dec fdivrs cmp out push movd cmp fistp add fwait stc lods ret inc (bad) (bad) cli pop push add incl not and dec add cmp insb push ljmp and fdivr fildll push push ret xor mov imull ret or adc lcall fistpl mov mov mov das orb ja pop out loop xchg xrelease std cmp cmpb mov mov adc cli bound xchg fisttpl mov push push mov lock test cmp (bad) daa loopne (bad) cmp mov mov testb mov jo or lock loop aas mov and lahf xchg mov or fsts inc (bad) icebp jb les repnz loopne mov mov add (bad) cmp dec dec dec idiv sub imul or test das push or mov jo xchg pop push push data16 pushf adc xchg jo std mov push imul call lret int3 pop or call inc cmc fnstenv push xor (bad) popa dec loop cmp mov into imul mov rcrl pop sub or push leave jmp add stc add es stc jecxz inc xor ret sbb lds pusha mov jmp mov je pop loop repz das cmp test out sub xor push push jb out adc mov dec add mov call push leave fistp cli repnz lcall cmp or lods mov sub mov stc push dec fsubrs or or mov xchg dec (bad) mov cld aas loope sbb ds scas ret fldenv (bad) ftst inc int3 mov shrb push and stos je add mov loope or daa out xlat adc mov mov into xchg mov loop call add jmp movsb dec lock and add scas fsubrl fimul mov mov xchg in add popf cmpl lea and or fwait call add mov mov mov mov bound mov fmul loop mov (bad) fstl sub jb rorb pop mov sub jmp mov ljmp dec mov cmp xor ficoml stc push sub (bad) movsl push das xor adc psubd movsb test mov cmpsb pop scas sub out cltd pop lret fiadd push pop in lods cwtl stos aaa sbb xlat add jecxz push cs pop test stos int3 push icebp adc push sbb pop mov sahf xchg and pop sbb lock repnz jg cwtl xchg sbb jo movsl leave lock xor (bad) pop out or movsb iret mov and ja lret adc movsb cwtl cmp popa scas xchg push jbe adc xchg mov adc push lock mov shlb mov or and aas (bad) fsubrp pushl xor and push addr16 xor sbb out scas pop push or arpl xor stos pop iret push mov pop adc (bad) movzwl pop out dec mov mov bound jecxz xchg push push stc push xlat mov (bad) (bad) xchg mov daa ret enter mov fstpt mov add jge mov movsl rcrb icebp adc in gs jecxz xlat or nop repnz mov or or js mov and aaa push ret stos mov das mov or sub pop push (bad) jo sub rcll or test (bad) (bad) jno push sti push cmp fnstsw add popf mov add subb aas std and outsl bound push mov pop gs sub gs push or mov dec clc pop das lret test imul mov pop mov test lret rcrb push out aas mov (bad) sub add inc mov and testb and inc and pop (bad) cmp ds inc out mov sub hlt sub mov jle jg movsb push xchg mov dec int3 jae sbb fisubrl sub faddl out leave sarb mov push add inc orb pop mov mov and cmp add repz adc sarb nop push add xchg mov out xchg mov sbb or sub dec sbb lock add mov jno (bad) popa pop (bad) dec xor test dec mov push out add (bad) cld insb or cmp jl cmp sub fs dec xor std (bad) mov adc pop xchg and sub push rcl mov fnstcw adc cmp add repnz cmp mov imul adc sbb sub into outsl cmpsl pop popa sbb add mov addr16 jmp outsl popw pop mov mov and jno imul add jle dec (bad) xor xor sub (bad) jno outsl push lds repz out sub mov ror popf sub dec add lret mov or divb adc xor test mov nop ljmp mov dec push inc scas xlat push xor mov dec mov mov or fcmovnb or and jp insb mov das ret (bad) rcr xor aas sub add out js or sub lret ret mov negl outsl into test jmp lret icebp outsb addr16 add (bad) pop jecxz in add fmul jg inc push inc and jg out mov js mov pop push jns das out xor cwtl jl jmp aam icebp push cs add sub pop or mov ljmp or in jmp sti mov jmp push gs or jmp pop (bad) pushf sub (bad) pop pop sti mov xor and pop stc xchg sbb sub outsl and inc lret add test jp (bad) xor xchg imulb into pop out and js mov stc ret xor rol sbb inc movsb cwtl pop sub pop and lret fwait xchg add xor xchg pop movsl jns sub mov lret pop sub add popa leave (bad) push push adcb xchg push das frstor jo and or cmpsb addr16 in imul adc pop mov fcomi sub hlt push mov scas mov mov mov cmp push xor mov lods sub enter fs pop sub movsl sti mov xor loop test adc bound inc fildll out add aas mov xchg out xor repnz lahf mov push jle pop xchg fbstp int3 add popf fadds fcmovu dec xor test dec je ljmp idivl add arpl dec dec cmp jne js mov cmp mov push (bad) pop and push jmp cmp pushf out push inc push inc xor xchg (bad) push div gs pop imul ret and lods jle mov mull mov jo bound adc lret test fsubr or data16 popf dec jae fidiv pand lods loopne into leave mov in aas hlt (bad) mov jb mov out dec popa inc cwtl sub mov inc dec and xlat paddd push mov sub mov lret push ret push push sub pop mov xor sub mov ss mov icebp inc jbe fisttp add loop jno mov dec mov icebp lock scas dec mov jecxz jb ret sub sub or rolb ret jecxz dec loopne icebp clc (bad) movzbl (bad) into sub mov or pop and jge pushf mov mov test pop pop gs pop test subb nop mov pop pusha pop into or and pop sub loop test pop in imul sub mov je loop sbb xchg and lahf pop add push jle rcrl adc nop repnz test xor ds xchg sti bound add cs (bad) push lcall push sub fucomip imul mov les popf movsl mov int3 insb test popf inc xlat nop (bad) sub fisubl push aas lret mov and pop pushf popf inc das mov sub add jno and jecxz,pn mov pop mov or negl cmc xor (bad) mov jnp hlt sub out (bad) add dec sbb add xchg sub mov rcrb pop and in imul jne mov daa (bad) xor icebp aad arpl inc dec push pop adc ljmp xor popf dec push sub and inc pop iret mov mov dec loop test pop jecxz mov xor mov cwtl call jg out int ds movsl scas iret (bad) dec clc jecxz cli sub idiv (bad) mov mov je lret pop lds loopne clc cli std lds mov cld dec mov mov sbb jnp clc mulb mov rorl pop movsl and mov and inc mov icebp imul adc test mov lods xchg xor add icebp add popf andl daa sub push clc or pop or out lods pop jp pop mov sub (bad) xor clc xor lret out adc xor and movsl bound call movsl pop push fiadd dec insl mov sbb mov (bad) popf int3 and hlt popa lcall in cmp andb loope ljmp sub add lods pusha in adc mov aam (bad) cli je stos mov cmp xchg cltd cmp and jle inc push aas sub popf push jb dec lods (bad) aas fisubl fldl (bad) mov popa leave lret fst jp enter inc sub repnz loope xchg mov xchg (bad) sub dec icebp jmp cmp inc jecxz (bad) jno pop mov movsb add add addr16 (bad) stos sub xor lret push call pop mov adc jbe or std je push or xlat sti cmp cmpsb imulb add cmpl mov ret repz fbstp pushf repz nop iret jae dec out loop or mov or and jle jle in jl je pop adc bound mov dec mov into mov pop sbb xlat (bad) mov jae or sbb sbb lds push mov das sub out sub (bad) and inc fidiv stos mov pusha cmp add and sub mov xor les mov pop test cs lods iret or push sahf icebp push ljmp jmp imul xor daa mov sbb sti sbb mov pop (bad) or mulb in xor call repz addr16 xchg jnp cltd pop jg pop dec adc (bad) fstl fidivrl or xor imul loope das jae test xor and (bad) mov out ss cmpsl aaa pop and jmp loope xchg sbb clc fadd sub cld sahf ficomp fild das loop push xchg fisttpl sti cmp cmp decb or ljmp sti xor and sub cs xlat pusha jbe ljmp out push aam loop clc push jno lods jbe mov sub add repz and mov int3 iret popf pop in mov jp aas mov shlb pusha fmull scas sbb xchg jmp das (bad) mov cmp mov inc and lret or (bad) (bad) adc xchg lcall sub cli mov negl (bad) and fcompl dec test iret xchg out cmp dec sub add add (bad) ds fs test and scas mov inc sbb inc inc xor jg stos sub pop pop mov je sub add pop stos push cmp shrb out sar dec fucom ficompl mulb add push and in gs pop sti xor sub test sub or mov shll (bad) jp or lods psrld inc mov (bad) cld fmul add or out sub (bad) jbe pop mov mov and scas (bad) shrl ds into cmpsl divl push jg (bad) and sub cs pushf sub pop xchg popf jmp xor mov clc xchg jl loope sub mov xor mov mov or mov test mov sub out cmp out adc xchg sbb ss cltd xchg popa push sbb or out add (bad) popa inc imul mov jle push call and adc nop mov lods mov mov fbstp scas pop aas movsl pop movsl or push xchg add sti pop sub cmpl mov xor jge cmp cmp hlt aaa jle add je icebp ds aas dec daa in jne out je pushl mov jmp sub (bad) jno or or je dec cli scas sub lret call stos cltd mov (bad) imulb pop push dec loop test pop jecxz add hlt pop outsb lret ret mov or inc mov and pop jno sahf inc mov and sarl or ds cmpsb clc sub and cmp mov enter xor imul mov lret xor movb mov sub mov jecxz inc mov sub mov sub out cmpsl frstor divl dec je (bad) or pushl cmpsb daa gs and or mov frstor cmp movsb sbb daa pop fildll int3 and cmp and inc and pop xchg iret sub jae jno dec mov inc mov (bad) cld out scas xor lods (bad) mov aam push cmp and or fwait inc inc sub xchg dec dec sti sub movsb (bad) xor ret push cltd sub in xor lret add ret loope loopne pop mov pusha mov xor lcall out ja shlb stos jo add xor loope inc jge das ljmp iret shll popa sti sbb loope jnp jle (bad) or scas je dec push lret rorl xorl in push pop pop loop shrl mov and pop mov gs mov add icebp adc cmp negb lret lods adc mov popf jae dec jg and and push cmp mov xchg jbe mov out out mov dec aas cld fisubrl mov mov or mov sub stc in popa mov pop mov cs leave (bad) or mov mov stc xor adc jbe call repnz pop fwait dec shr and cmp mov jns and idivl cmp fiadd or inc and pop in (bad) jg pcmpgtb rcrl and movsl test dec add xor xor rolb cli bound outsl xchg pop daa sub (bad) popf negb icebp js movsl xchg fwait and das jmp inc and sbb mov push jmp mov cmp xor mov sti xor loopne dec push loopne loop cld jnp pop cli bound mov inc gs xor pop sub cmc push inc xchg or xor pop andl scas push fwait xchg fstpt push or and inc fist inc (bad) xor icebp sub xchg push push (bad) outsl pop or lock cmp lahf push fs rorb clc mov mov das mov aad rclb pop lds mov and loope pop sub or pop add inc ds or mov cwtl or mov icebp push or divl or and cmp sub sub mov loop or ret push adc rorb fsts not mov add in jmp pop sub outsb mov lahf bound cwtl or mov and inc mov mov cmpsl out xchg or inc or xor push xchg xor sub test dec adc shll xor cmpl mul mov insl imul pop jmp fwait (bad) mov push xchg mulb cmc mov add mov jg fimull js pop mov adc and mov (bad) call sub ljmp dec call mov rclb hlt ret lahf (bad) ret push aad mov cmp push into icebp pop dec jns xchg out cmp mov or stc (bad) lds mov cld jmp icebp xchg repnz lret test lods les and push mov mov mov sbb aas xchg (bad) cltd (bad) leave mov jmp (bad) jae and xchg negb pop jne pop xlat adc inc jne sub repz es loopne mov imul cld movsl ja sbb xchg jbe imul add (bad) and adc adc lock fmuls push jge mov daa xor and jecxz clc mov pop pop jg push rclb (bad) mov jae mov xor push orb mov addl ds in jae pusha xchg dec adc aad arpl push push pop cmpb push mov imul and or pop pop (bad) movsb jmp mov pop inc outsl mov scas cmp cwtl icebp sub shrb and aaa rcll jecxz std push inc dec add jmp fistpll incl test jns push pop push add mov loop adc add cld mov dec test add std pop sub mov add and imul cmc pop andl (bad) or pop ror push push adc adc and dec mov pop pop mov xchg inc xor mov aad inc push cmpsb lods aaa inc (bad) fisub xchg rol orb push push out sub rcrl pop incb (bad) adc pop aaa das and and add fstpt jle rcrb mov push add pop (bad) inc test es xor cmc push pop adc pop dec add cmp cmp sbb add aaa sub or jno clc push xor add not shr inc (bad) loope into mov mov (bad) std shll mov inc or jp adc pop cs dec outsl stos sarl pop sub xchg xor sti daa pop shl movsb sub and add in pop cmpsb mov push push add (bad) movsb xor es lock mov xor pop sahf pop jb xlat out mov push adc mov add in mov lods das fist push decl not int3 or add jl xor insb push pop mov rcrb (bad) xor out cltd xor add repz jne ljmp push mov pop pop lret sbb sub sub addb adc jmp cmp add xor lods scas add (bad) fadds movsl mov cmp jmp scas jecxz xor loope xor xchg adc xor loop pop mov lock push sbb add add ljmp rcl leave gs mov xchg stc stos shrl and add xlat (bad) dec dec or outsb mov inc movsb pop mov xor mov xchg cmp pop dec jno and leave sarl icebp inc adc mov jno mov mov dec (bad) cwtl mov push or outsb (bad) cld xchg mov sbb add test fist rclb fwait mov dec fstl xor les mov dec repnz and sub pop adc ljmp (bad) adc push fnstcw enter jmp fadd sar iret lods push (bad) adc mov test push dec xor push das iret gs xor or or push sub sub adc adc shlb mov xor adc stos mov xchg mov add mov push push pop into (bad) dec and leave cmp rorl xor xchg dec push jmp and mov ret dec xlat icebp sub jne adc insb xchg xchg js or mov out push (bad) pop mov mov cli popf mov (bad) mov and xchg adcb sub (bad) out popl pop jae ret (bad) mov outsw gs adc dec fs clc xchg loop xor inc ja ret pop lds mov sti dec inc and jp inc adc push icebp lret movsb clc jl jmp push data16 mov pop shrl mov xor jecxz cwtl mov mov lret cmp xorl scas out dec dec dec lret popl sub mov cmp and popf inc sbb repnz andb dec shrb or pop gs js stos and lods movsb lcall fstps repnz and mov dec pusha pop icebp mov fildll cld mov scas mov dec clc cmpsb dec jno add xor pop stc lea (bad) or out cltd or repnz mov push gs test mov lods push mov in aaa xor add adc incl loop dec push mov dec idivl pop add int3 pushf mov in sbbb sbb out ja scas jno and das frstor loop test roll dec (bad) jg ret fsubrp jmp hlt aad mov mov add fildll adc roll or xor stos or call test lret add jno sub xchg jp xor jp sbb in pop int pop (bad) dec mov xchg lret pop jne pop pop push out sub pop jo push roll jnp mov fldenv cmp mov (bad) inc jb xchg lds icebp imul pop dec fisttpl and daa mov xor mov scas jb repz ret clc loope cmp inc pop movsl sarl mov je les jmp lret pop loop jmp shrb sub je rcll pop sub lock mov loop lods mov xor mov add xchg or jno lods cmp ljmp into or fisubl xor out cwtl adc dec repnz pop mov cmp (bad) dec and and mov lcall sbb mov mov xor add js (bad) pop xor add inc sbb lock sarb fisub mov jl and clc (bad) xchg push lret add xor test les lahf shlb ret sub mov cmp test mov in ret xlat popf push push push (bad) test or jbe gs flds testl and xchg adc ret mov sbb imul les xchg xor aad mov ljmp jb divb movsl std sbb popf sbb jmp sub or enter jne in scas push jmp aas lods xchg lahf out das xchg push lods mov push sub jae jmp gs xchg int mov inc pop push rorb jle add mov cwtl nop mov sahf pop xchg adc or sbb in add fisttp loop outsb adc pop xor add pop mov and loope js jp enter mov pop int scas pminub push lock pop push mov aas sub lcall and pop idivl pop pop into inc sti stc incl add mov dec cli test xlat cwtl psllw pop push test fdivs (bad) jle jmp sbb ficom (bad) std adc sbb popf sub add (bad) xor lret mov ds cli mov mov or sub pop push sti add xchg addl pop xor mov pop repnz push lahf push mov and sbb in shlb add popf (bad) pop imul das push dec dec sbb movsb dec mov lcall mov ljmp inc or cmp and mov pop clc (bad) adc cmp sub mov xchg divl hlt or cmp pop sbb xchg jnp xchg xor mov ret (bad) sbb addr16 cmp popf movsl mov gs ret inc and movsl sbb fdivs dec mov leave das repz or ds mov imul sub dec pop popf fcmovnb pop icebp int3 pop push push jecxz or sbbb repnz aas mov cmpsl out mov jmp add mov and pop js mov jge cli mov hlt movsl test icebp out sbb mov out mov and and out push out (bad) xlat jmp push das pop xchg cmp cmp jno sbb lret jbe leave stc pop test jbe test cwtl in ja adc mov xor stc test (bad) arpl adc or dec out sub stc call xchg xor hlt mov test sbb pop lods sti pop jmp addr16 adc shr sbb fcoml lods or pop rclw or pop cli cmp and das loop in inc mov mov inc lea xchg inc (bad) icebp aas push adc mov lret dec sti jbe ret dec int out pop imulb pop jns or xchg gs aaa add cmpsl dec into add sub fisub adc cmp push inc xor fdivrl xor or mov and and lds push or test rclb lret pop loope jg sub jecxz pop imul pop mov dec stos cld add int3 mov inc out fsubp (bad) mov je sbb jne jmp iret or or vrcpss enter inc loop fsubrp pop ljmp mov nop leave pop sub or gs push adcl add sbb sub add mov mov add (bad) loopne jmp fs sub add inc mov xor sub cmp nop mov cmp lcall dec or popf jmp adc and and aam out fnstcw jno testb dec sub cs and dec and sar dec ja mov mov shr imul lret jns pop test xor sbb cmpsl fist popw dec sbb jge mov push and mov mulb pop mov and lock or inc push xchg out std setae xor push mov mov mov ja mov frstor jne dec or or (bad) push sarb call sub insl rorb inc push pop (bad) in sarb xchg push adc in out and sub stos sbb or lock and nop adc jp mov push add add nop (bad) xor and jbe mov jg sbb add stc imul stos loopne xchg or adc inc dec or sub sbb mull rcll cmp rolb in inc jne pop mov sub mov int3 shrb jmp jp fmull push sub sbb cmpsl pop cwtl push mov pop pushl mov clc mov cmp xor fsub xlat adc (bad) fdivr daa orl dec subl inc and lods push add mov mov jecxz rcl sbb pop adc cmp push jnp cmpsl mov aad mov jmp (bad) movsl lds mov push icebp dec and (bad) sub idiv mov xchg jge pop push mov xlat aaa sub add inc cltd dec andl divl or cmpsl dec roll mov xor jne repnz or mov out mov insb nop add pop xor mov jle neg pop leave scas push pop fisttpl push push addl jl pop (bad) pusha xchg or cmc lock or popf push in push pop mov fiaddl shr mov dec pop pop jl mov cmp push pop insb cmp sti xchg adc mov (bad) stc shrl jmp (bad) cmc push (bad) xor lds gs loope or pop cwtl test mov or jo negl mov popf testl outsl mov dec jmp mov mov sbb outsl call iret mov repnz push aad ret and mov xor xor ljmp mov out addl cmp cmp pop pop int3 in leave add lcall add xor and jbe dec mull cmpsl pop lods push int3 dec xchg je popa sub pushf sahf mov mov pop sbb ret jnp in xlat incb pop roll inc and inc aas xor add std adc xchg fcmovnbe fmuls fild add jecxz push and fdivl dec xor mov out stos xor je aaa adc mov xlat xchg mov cmc andl lods xor adc pop jmp push sbb mov push test (bad) or test fsubl mov and fisttp and xlat test out xor test push and mov imul cmp and and sbb jno mov push dec cmpsl dec mov mov pusha push jns mov add adc mov pop nop pop sub sub push repz call out dec lahf xchg scas xchg je bound repz scas xlat dec inc sbb sub and adc ljmp cmp ret push sub xchg cwtl pop jecxz mov dec sub movb nop xor in rorl and ljmp out fildl xlat mov add adc cs add leave push cmc mov out jge ret icebp sub orb fsubs std ljmp rcrl mov push xor popa and loop adc movsb mov pop stc hlt movsb lahf (bad) out call add mov mov stos (bad) call xchg pop fisubr mov sub gs jle and incb xor or cmp test xchg movsb addr16 shr mov popf adc sub add and add jge push push jmp std out insb lahf lds (bad) out inc shrl decb ds movsb decl andb mov add test mov lods das leave enter lret lds push xor loop add lock xchg and lret sbb dec mov fdivs sub mov aas ret popa pop (bad) sub out (bad) jns inc sub or das xor in das add stos mov dec test sti popa mov push loop xor xlat adc div popf sbb add movsb sbb mov mov add adc cmpsl rcrl inc sub iret add mov inc and sub aam mov xor cwtl pop mov and gs clc test jmp adc mov push push add mov sub xor add mov xchg ss push dec and or add fsubp iret xchg push stos pop or pushf iret out mov cltd and jl shrl ret pop scas push fstpt pop add mov xor fistpll push dec push mov xchg stos (bad) icebp add xor adc push addr16 lds mov mov dec lret mov sti or jb xlat mov xchg scas pop xor in jmp jno inc add mov addl cmpsb dec cs xor jns cmpsl sbb sub outsb (bad) fist xor ds arpl int3 mov add sarl sub mov push cltd mov dec sub pop lret std mov adc ja outsb xchg add adc push mov inc jmp push (bad) or lea fcmovnb andb inc icebp add lea mov sti cmpsb scas dec mov and sub push push xchg in lods lds test popf insb inc dec sbb rolb (bad) adc (bad) add mov roll loopne stc or (bad) push leave jecxz or rcrb pop loop pop test and push or negl fidivrl sbb mov sub jle cmp into xor mov mulb loop ret inc outsb pop push push jo mov fist mov jnp mov iret and (bad) call incl icebp xlat jg cmp popa in mov add xor mov repz add or fist xchg ds sti mov sub and ret xor xlat (bad) dec dec sbb (bad) jne sbb scas lcall dec jne mov movzbl and push arpl lds push mov pop loop subb mov int3 outsb sub stos jbe pop xchg push cmpsb and int sub dec sub test push (bad) mov xchg (bad) scas bound xlat negl adc sbb cmp cli (bad) push inc jns dec outsb mov mov adc mov fadds push in and out add xchg sub bound pop and stos xor jns scas or dec and mov push mov outsl mov into pop ret jmp dec sbb int icebp (bad) imul js push xor dec mov jns scas jne dec push icebp imul inc movsl cs mov mov pop enter loop add in (bad) cli mov sub ds xchg movsb sarl jmp out xor scas or adc sahf ljmpw pop test lahf pop imul jge sarl xchg lret mov ja mov das xor outsl xchg xor or fstl adc sub sti pusha push testl lods sbb cmp out adc xchg pop xor xchg roll mov out cmp adc pop leave movsl pop dec icebp out dec adc sbb cmpsb mov loope icebp push inc ret stos out lock cltd xchg cmp adc and dec mov icebp lret insl or xor xor mov push lock inc mov fxch imul xchg xor int and add sub xchg (bad) lret pop inc jmp notb outsb int outsb mov and (bad) jge imul xchg lea repnz adc lahf insb cli push lret rcrl sbb loope push pop loopne xchg push gs adc lock sub ret pop push fistp stc dec out mov shrl xor scas push lret out jl cmpsb push inc gs jle xor pop pop sub lahf repz or sub or push das repz (bad) (bad) adc jbe mov outsb data16 mov fstl and xlat andnps xchg push pop sub imul sbb sub (bad) repz push icebp cmp mov out pop xor gs outsb push inc dec aam lods fisubr inc pop adc jns pop ss xor imul and mov xchg or mov mov add mov mov jmp out add or sbb mov xor jl (bad) fistpll sub mov (bad) cli in sub pop inc in and dec dec mov sub popf xor jmp sbb push in movb add or daa sub aad mov mov jmp into sbbb (bad) or out and sub mov and cs xor (bad) mov xchg mov pop loopne jb adc add imul dec cli xor ja lret popa les popf cmp jo adc and jne into mov add dec pushf dec adc ds stos rclb loope and mov and movsl xchg inc cmpsb xor (bad) ljmp sub sbb add cli cmpsb rclb pop fldenv ja cmp pop dec xchg xchg lods leave mov mov mov dec fsubrp mov repz mov std das pop clc mov jno test lret data16 mulb repnz and pop out xchg movsb int3 dec fnstcw or sbb call xlat mov mov addr16 test and fsubrp or adc lret mov mov mov mov mov pop or sti int3 cmp lahf fiadd notl adc incl xchg jbe xbegin pushf add or xor sahf or pop xchg fbld cmp cld dec movsb mov and decl mov sbbl pop gs fistp mov dec inc es ds es lret movsb pop leave clc add lret fs data16 int3 sbb scas mov inc loope jns dec jnp pop repz pop in inc subl cmpsl (bad) pop int3 mov xchg mov iret inc mov pop test push jmp es stos sub lret daa leave push and sub mov xchg mov pop mov xlat mov pop scas and add out subb mov imull movsl xchg ljmp fdivs xchg jg or xor ficom outsl roll jns fs add sub mov push das rcrl ffreep divl stos lea lock inc repz push aaa xor mov aas imul xchg or push cwtl (bad) fbstp jl inc add pusha rolb push sub and or ja fistp scas lret xor out bound out ret loope or mov (bad) pop lahf js push mov insl (bad) call (bad) add or test jne pop cmpsb mov adc jnp mov mov push lret pop adc mov movsb sub mov lea jmp mov sti mov lahf mov repnz mov xchg and push mov shlb fmull movsl mov (bad) sub fistl popfw (bad) adc mov dec popa fistp and mov (bad) sub test cli mov das out pop xchg jl mov cltd mov iret xchg fstpl xchg (bad) adc subb mov rcrl repnz out daa xor add je or iret push push jl push pop sub aaa mov xor or push xor jmp and jle (bad) push shr bound inc adc scas sbb push push icebp scas std xchg push dec push lret or out dec ds pop stc cs xor add enter dec jbe rol imul sub cli cmp pop sub jle xor mov mov and jnp movsl idivb les sub inc or and xchg pop test icebp add jmp movsb notb stos sub test adc pop xor subb sub dec sarb into jg inc lods or and xor fldcw dec push adc jl or shll gs dec dec push lods (bad) adc in pusha rcrb leave pop push fxch outsl push sub or jmp mov or out mov and out pop scas mov cmp xor adc sub dec sti add imul push or pop (bad) ljmp popf rcrb xchg lock test push pop (bad) stc mov lcall loop xchg xor scas cwtd insb dec out cli sub icebp in lock test aam or and jg inc or out (bad) repnz or idiv sahf leave fs pushl sub or mov xchg sub inc loopne jle inc incb push or dec int3 dec test stos popf pop cmp dec (bad) xlat movsl fidivr add ja mov add dec test push sub cmp das stc int3 dec nop sub sub mov add into (bad) xor cmp jno mov pushl mov xlat mov lret push out mov sub (bad) add xor pop pop mov jbe das ja mov pop pop ljmp push xchg loop xchg leave cmp stc leave rcll scas push ror push and cmp sub jnp adc mov pop xor mov sub jnp jg jmp mov ljmp int3 testb xor mov xchg fcmovne int cmpsl adc cli cmp jl inc std sbb rcll rcrb fcomps ret outsb lea std gs and or out inc mov or mov je push xor mov repnz mov inc mov xor ret cs jnp fcmovnbe xor add cmp and leave out lret popa inc sub sbb xor cs out aam xor mov int or mov stos xor push add sub mov xchg xchg (bad) in leave bnd pop lods cmp aad leave push into ja pop fistpll mov jecxz pop lock div cmp into add and lods jns add popa stc es pop adc xchg aad adc sbbl xchg jbe push sub mov testb xchg mov push and les sar push lea loope and bnd push aad sub cs test pop mov push xor out cwtl outsl mov adc mov xchg movl sub pop das das add fcoms shrl pop sarb mov (bad) gs mov push data16 mov adc scas sub leave push and mov (bad) hlt pop add push sbb sti jne stos (bad) lea and jp test jno jg cmp loopne mov gs xchg xchg scas mov dec mov ret jg lock xor jecxz xchg push (bad) mov inc icebp and xchg mov or scas test mov xor sub inc xor leave out movsb mov enter or cmc xor fdivrp test mov mov stos mov pop (bad) mov sbb movsb in mov pop roll sti fcoml and cwtl mov int3 (bad) mov (bad) push int3 leave add imul iret inc das or adc ljmp std mov int3 fstl sub cmp aas popf jnp lods push adc or fmul push fwait cmp pop lahf call (bad) xor push jle lret xor test pop cmp aas or in or or fnstcw mov nop adc add lods add decb cld mov push cmc aaa xor leave sarl mov xor sbb bound lcall lods jb sbb mov lret test push sti in xor ljmp xchg cmp and sub lcall rorb sub pop scas addl outsb cltd sbb negl pop loop pop call gs dec or xor nop out xchg out cmc pop mov xchg mov movsl push jl lods int3 or sbb inc add pop sbb sbb addl sub sub pushf dec add rcrl les xor sub pop jb ja pop push (bad) lret pop lock mov dec jb cmp gs xchg fisttpll push xor stc ljmp rcll sbb push dec scas sub loopne and roll jg jnp or (bad) lret push mov or add mov or add pop (bad) roll cmpsl sbb push cpuid mov jne or stos pop into sti jg dec xor fadd (bad) js stc xor mov sub sbbb arpl push add sahf pop (bad) and imulb add jl loop inc or outsl (bad) je push mov repnz out repz call or movsl fs adc pop icebp inc stos xorl pop push out pop daa sahf sub add jmp pop shl xchg sbb not or jecxz out add in add mov adc loope lret pop push popf outsb test jb push push pop out loop jl or jg and pop mov int3 xor sbb loop (bad) fsubrl fwait mov (bad) xor sarb jg dec adc movb jne stos ss (bad) ds mov sbbb add pop xor stos int3 xchg pop sub sbb out mov add pop add push xchg cmp jle dec sub adc lcall neg nop fisttp inc sbb (bad) sti pop push mov ret shr clc (bad) fildl loopne sub pop xor rcll rcrl or push xchg add pusha sbb xor cmp ror mov push not inc shl pop (bad) nop cmpsl js hlt sti stos (bad) dec out mov call xchg xchg jnp xor push int3 xor loop or sbbl cltd push mov inc stc icebp xchg mov sbb fistp inc pop and imul addr16 sti aas sub mov cltd sub lods or (bad) sub ret mov xchg ficom cltd daa fistpll dec xlat scas push (bad) mov mov or lret jo mov stos xor lret jo sti imul ffree das scas gs test sub popf repnz (bad) sbb sbb negb mov jmp add xor lret jg jo jno xchg and gs inc adc sbb inc mov inc inc mov pop mov icebp stos pushf mov pop or mov adc jo xchg addr16 or jnp movsl (bad) jbe inc push scas mov test std mov add xchg pop cs (bad) mov sub icebp dec mov sbb stc pop imulb je push or and cmpsb dec out and xchg mov data16 and or out adc inc mov lcall dec mov push jns xchg out ret ffree jo add ret out mov pop push mov (bad) dec add and mov stc test ret notb push out xor mov out loop leave out push mov xchg fsubl cmp pop repz (bad) dec inc dec xor xor aas xor ret enter mov outsl lret fcoms or rcl and mov movsl clc ljmp mov jge jo add or jne add sbb mov xor or jno mov in das mov adc add fwait loop inc lea cmp aaa push cmovge scas lods xor loop shlb lahf hlt int3 pop xlat dec fild adc test loop and ret aam adc in dec test iret xchg inc mov jmp iret leave shrl inc adc cmp jle loop adc push xchg add scas mov scas clc mov dec ljmp iret pop adc stc jle xor movb sub icebp push push and (bad) pop (bad) and inc or jbe mov addl mov shl bound out stc xchg xchg aas inc imul sub push or jge dec pop mov movsl fwait jmp jns imul inc arpl pusha into insb inc subb and pop xlat sub popf mov pop pusha add mov adc (bad) push pop aam add mov jae rcrb or cltd inc fcomi mov mov sahf (bad) out std aas mov pop std jne into ficoml jle mov insl (bad) pushf adc les into lods mov mov jo sbb das into pop mov aad popf es and test xchg ljmp push loop aad xor int lods pop pop mov and add sbb mov add cmp pop sub or push (bad) xlat jns xchg adc sub movsl sbb jge xchg adcl pop dec xchg mov imul ds pop out pop pop push daa pop add not dec or pop shrb into hlt sub dec out adc adc push aad cli js idivl cli js pop mov imul jle loop out (bad) or jle cld scas cltd xlat push loopne lods jbe push ja sti sbb sub pushf xor leave decb std orb imul cmc test clc dec icebp rorb push mov mul inc add ficoml int3 add push mov bound pop xchg sub loopne push add sbb int3 pop or fs rolb addl jae in outsl xchg rcll pusha or sub imul aaa repz imull push pop mov inc pop pop test movsb sub dec shlb jecxz adc xor fs mov jne test adc and scas lods in pop xchg lret lret xchg xchg push inc xor push sbb mov into mov adc clc xchg mov xchg xchg outsb cmp sub jg xchg xor cmp jg out xchg repz lret add fs idivl pop xchg and push jo out mov cmp cli out xchg scas adc pushl mov inc dec test mov and movsb pop mov mov aam imul imul dec cs sub or daa mov sarb (bad) dec dec rcll mov sub fmull jge dec pop sub sub sbb or movsl loop insl dec aas je in decb movsl in adc cmc pop xchg or cmpsb xor clc and xor jg jne testb inc shr lret fcmovnb mov out pop push loope pop cmpsl (bad) sub out sub out shrb mov xchg mov aas fs stc adc movsl nop jbe or inc jle jmp popa movsl jmp cmp and and cmp notb test pop push mov aaa stos test and sub je cld lahf xchg scas sbb jbe and push lahf stos push pop rolb xchg out lea rcll insl sbb pop fs into push cld adc jecxz sbb stos sub fisubr jmp loopne decl dec xchg clc imul add jmp and jg loopne jmp inc or xchg (bad) cli test in mov rorl ljmp or aas orb xchg and mov adc loop cmpsl rorl (bad) sub roll xor mov mov xor jle (bad) xchg adc int3 clc and sub or add mov cli (bad) es pop push test cmp in iret mov push mov add ja fldenv dec stc outsl mov xor popf xlat add test test xor pop call xlat push (bad) or mov push and mov data16 xor std dec out pop sub sub push imul pop in scas (bad) std xor dec push jmp xor add repnz cld mov and pop rorb decb lret push outsb mov jle sbb pop xor outsl negl push cld sub sub mov mov sti fldenv es pop push insb loope cmp mov push add xchg push scas mov or lret nop es test sub or inc inc mov cmpsb jb mov lock xor xchg inc out icebp data16 into dec (bad) jbe dec test aad sub mov loop add mov jne pop or cld or jecxz xchg inc jg es enter adc mov mov mov (bad) out inc xchg (bad) dec mov add in mov or adc push adc dec push mov mov inc es and and dec cmp xchg in inc ljmp jecxz cmpsb pop dec ljmp inc lds mov into add add xchg or ret sub mov test mov gs repz mov ret imul pop pop xchg adc mov imul or jbe pop add mov pop or in add dec push mov or in dec or sub incb jmp mov inc sti pop pop mov in stos stc aaa cmpl out stos bound repz dec stc iret xchg jno pop sar roll jecxz roll fsts (bad) xor and aas mov adc or push pop lahf push js dec jecxz divb pop ljmp dec stc xchg cwtl nop sub mov bound push dec iret out repnz leave leave push fucomip pop (bad) fmuls cmc and xchg scas repz leave rclb lret iret jge ret add lods icebp cwtl push mov mov popf movsl lock shrl mov pop add in les iret data16 xor push sbb xchg adc xchg lds std jle sub pusha lds push cmp mov adcb xchg (bad) ljmp push mov add inc outsl add and int3 or and jge divl jmp push mov inc and xlat inc mov pop cs daa divl test fisubl push into and pop cli lret mov out sbb xchg mov add mov sub fcmovbe shr pop jno inc sub mov sub popf xchg outsl (bad) out push push imul mov or pop inc std dec into icebp xchg or out mov aas in fcmove mov loopne out xchg add bound adc scas out fdivrl jo push mov pop cli sub das xchg jmp (bad) lret mov dec ja jbe test pusha hlt rclb gs jmp lret sub scas jo pop out lds icebp ljmp push out leave xchg fucom mov sub movsl or mov mov inc and sti cmp test or rorb adc push movsl ja aas add adc xlat xchg loop sub call into and lret (bad) or and ljmp sbb or pop daa dec jno xor jle pop lock idivb mov and push (bad) cmp and xor mov stos rcll repnz scas mov xor jmp mov out adc and pop in adc lea bound cmp dec jmpw loop push aas (bad) or mov mov push aas cmp punpckhdq sbb add mov iret dec or mov mov push mov idivl repz stc shrl fldenv and dec jmp test imul xor iret add jmp movsl mov pop pushf or pop xor push or xchg fistpll and pop push inc jge popf pop jge sub push mov or sti mov dec mov dec xor out mov movsl cmp sbb sub (bad) inc lahf dec jns jns movl sbb dec adc fs jmp lock adc sbb pop in testl in mov mov sbb mov jle (bad) iret xor mov add mov orb icebp jge jmp and xor mov add sbb repnz xlat cs pop repnz pop jb ja subl icebp out or std inc push cmpsl jo adc mov xchg mov enter xchg push push add dec or out mov jo xchg inc or roll pop imul and xchg mov in (bad) sti mov dec mov outsl icebp add (bad) sbbb sub lret xor push inc out decb pusha push ret sub dec gs mov (bad) cmp mov fstps repz jle pop repz adc xchg mov ret add sub std outsb sbb hlt adc lea in les icebp pop lret push inc incb pop shll cmp int3 jae and lret xorb out pop scas inc outsb and jmp push jb lret xor and pop push aam pop out sahf push pop repnz repz and mov rorb xchg ret in pop or push int3 xchg add mov adc mov pop cmp out mov out mov jno scas jl jmp jno xchg fisubr sub jmp add xchg push and cmp stos addr16 cltd (bad) jns push outsb bound stos sbb xor mov push mulb stc jecxz add incb (bad) scas std fistp xor or test out imul hlt gs test in xchg dec test out sub (bad) adc cld jl mov pop idivb lea fnstcw icebp xor jg or pushf mov dec nop loope lret cmpsl std popf add pop cmp pop mov insl adc dec pop scas sub jns xchg xchg div mov out leave fdivrs jb mov xchg sahf (bad) jecxz jno and cmp cmpsb es inc pop in xor fisttp cwtl xchg ljmp roll js lds adc bnd xchg adc sti iret shrb xor and daa leave aad xchg (bad) sbb pusha fmuls or leave imul mov sbb mov pop ret inc pop and mov adc es mov mov inc and (bad) mov cmp outsb es jg or sub add stos jb adc mov xor mov jo lock xlat inc sti lret mov (bad) repz in mov mov sti sub adc push mov dec pop sub sub mov push pop les test push add inc sub add mov sbb sub sub and imul and mov jmp pop out jnp nop stos (bad) loope outsl call (bad) xor insb mov stc leave and or sub mov xchg pop sahf xchg xchg sub dec mov sub cmc into lret pushf lahf and imul add fstl add cli sub les or call jb xchg cmc cmp mov idivl not jno push leave testb jmp pop sub pop fildl inc aaa popf pop jle roll sub xlat out xchg add pushf and dec push pop into or xor cmp xor test into insb push or or inc inc pop and jb mov hlt jmp ret mov (bad) pushf inc int sub mov test add xchg lods aaa inc push xor mov sub mov ret inc into or sub (bad) cli outsb (bad) int mov xor fs addl test sbb pop dec fneni(8087 loopne pop mov int3 ret out mov sub bound xor sub pop sti jg or push test scas sub add push xlat cmpb mov add mov or sub push adc and jns cltd cmp pop jae mov mov xchg sub mov (bad) out (bad) nop fs sbb icebp dec leave pop (bad) das lds divl pop aad add push sbb adc scas jo dec out sub push xchg sbb jl fldt cwtl addr16 adc (bad) mov pushf call sub adc sub mov adc clc scas jb and xchg pop mov cmp add jno jnp (bad) (bad) jnp add movsl mov (bad) mov daa rol adc sub stc shll dec or aaa sub jbe cwtl mov out ret jmp jnp movsb pop xor push jmp lret ret jmp add ret ja sub xor rep push lret and mov xchg xor repz aaa pop aam mov cmp adc sub cwtl (bad) xor adc jnp inc jp mov mov pop mov fxch xchg xor loope sub movsb stos lods adc call mov lds movsb inc dec or cwtl sub sub sub cld dec mov add lods inc rol lods mov push dec and sub sub fist xchg jg mov fsts adc repnz and stc aad jmp xchg fldenv jbe xchg and in cli cmpsl pop imul xor adc jb fmull sbb cmp imul movsb add xor out pushf xchg sti rorb loope mov pushf sbb ss and jg bound lcall jne jb add cmp inc mov (bad) mov xor stos mov push ljmp mov sti or daa stc test jbe rorb jb xchg xchg mov mov xor (bad) sbb mov push push xchg popa mov xor adc xor mov cmp sub out sahf cmp out mov popf leave lahf stc adc fsubl mov jecxz pop loope xor dec ljmp bound inc sub stos movsb mov je or pop stc rorb or jge (bad) or add mov lds mov repz mov rorl nop movsl sti sysret rolb mov pop cmpsb pop pop (bad) int pusha leave xor loop xor mov iret aaa adc aas or cmp (bad) or pop hlt cs or cmp add jmp ds sti imul push aaa xor inc fstps mov aad sahf (bad) icebp fnsave fdivl repnz sub add xor jmp sbb test or jmp lahf nop inc pop mov mov aad mov mov mov aaa stc sub mov xchg ljmp lcall fisttp lods jae add xor jnp adc mov popa jo push mov lods (bad) shl push into sub out cmp subb ja push xor sub adc push xchg push dec pop scas int3 xchg mov in xchg mov jmp push imul and popw xchg pop jbe idivl mov shlb mov inc in pop jno mov sub push pop mov movsl xlat mov ret jmp (bad) lret cld adc fidiv (bad) lret or add xlat and pop cmpsb mov cmp out je sbb add pop daa (bad) push daa jbe pop out xchg repz or ret push gs xchg rcll mov pop daa jle clc or and into and cmpsl inc sbb fdivr (bad) loop into insl movsb test pop mov mov (bad) rcr xchg mov loop and cmp gs or lahf pop xchg xor repnz (bad) pop imul sarl adc mov or fsubs push in xchg sbb sub jo cld add add add mov add adc xor rclb rolb or mov jbe mov adc xor out sub pop dec and and insb cmpsb les mov cmp and out cmp fs addr16 (bad) fdivrl push repnz xchg loopne imul pushl mov mov cmp fld1 dec inc pusha loop es ret mov repnz in das push stos jmp test sub mov mov or ss dec cmovnp dec in addr16 outsl push daa push mov sub xlat popf jl stc jp xor push dec out pop add ljmp stc mov movsb test (bad) xor mov dec cs clc (bad) add repz dec mov outsb mov cmpsl sub sub add movsb js (bad) sub fisubr mov xor lds mov pushf js mov cmp fldz cmp ret sub loop aad pop test adc subb roll xor mov ret mov jns dec sub roll mov and xor xor mov in ret dec add loop aad cmpsl (bad) mov and jle adc sub push movsl iret fldt inc dec and pop adc repz xlat push add data16 sub mov mov or sub add clc push mov (bad) xchg dec xor mov mov adcb jg mov repz dec test mov jmp mov aad xchg addb add xor dec repnz lar loop (bad) sub or xchg (bad) pop icebp out sub xlat lret ficoml out fwait jecxz (bad) adc mov test cli mov outsb mov mov inc and push mov sub xchg imul out cmp or cmp lds dec aas pop or xor xchg shrl rcrb adc stc mov fnsave xchg or and xor insb scas mov int3 mov mov push or push pusha data16 add movzbl mov mov cmp dec loop sti shll add xchg mov shrb push push xorl inc mov mov bound xor sbb addr16 add cltd loopne inc sbb in outsb (bad) sub cmpsl pop js jge jmp out xor je jecxz xchg mov pop pusha push int cmp pop lahf pop mov nop pusha jmp push (bad) or mov mov cli push dec pop jmp jns xchg and sub xor aas adcb mov jae push aad jbe cmc cmpsl and jecxz cmpsb outsb outsl and clc adc inc jg sbb rcrb push inc mov push cmp xchg xchg hlt sub mov divl push test rcrl add and loopne bound icebp pop push mov insl xor enter push dec mov xchg pop and pop mov lret (bad) inc or pop push inc mov or mov or fxtract mov fcoml cmp push adc mov out fldenv xchg repnz lds inc push icebp shrb lret mov pop or and xchg adc xchg mov (bad) and xlat or inc ljmp (bad) js dec leave lods int3 (bad) xor jno jne push mov jmp adc mov sub pushf in jp fstpl (bad) pushf sub or iret fistpl sbb dec pop xor imul dec mov in push xor mov ljmp out in xlat cmc scas int sub cli int3 mov dec les std inc out xchg out ljmp ja cmp outsl mov lret test adc jmp and mov sub pusha nop testl int3 mov cmp gs sbb xor jbe insl je scas adc mov adc adc or add imul jl mov mov and or mov jno out and dec inc addb add stos push xchg xchg rorb dec outsb gs (bad) lahf push xor xor adc lods cmc call cmp sahf and clc test icebp jmp sub inc inc out notb sbb xor (bad) sub btr flds cmp fidivr lods jb lods sbb push repz cmpsb pop dec stc icebp xchg mov test sub imul loope fsts pop arpl movsb in scas lds cmp cmp xor jmp fst mov shll dec int imul iret push data16 pushf fdivs jecxz ret cld dec enter lcall push aaa mov (bad) (bad) jbe push and xchg loope dec and pop das jo dec ret out xor ret daa jle pusha or xor lret int3 push outsb mov adc stos (bad) sub dec ljmp xchg xchg pop mov or cmp fldt das in outsb (bad) mov jle enter or and bound push and leave add repz daa xor jge loopne out cltd inc (bad) inc or dec inc les shr ds test movsb clc das mov push mov cmp cmp scas lds mov bound sti addr16 insb dec jge add roll movsl (bad) aad xor push stos cmp mov test xchg add sbb and add adc pop or mov xchg xchg xor xchg lods leave cs mov fidivr jno imul or lods imul mov shr push push into mov and clc mov gs mov cltd (bad) xor adc hlt sub jno inc push jo movsl fmull sub cwtl (bad) leave bnd jl and mov fsubs mov rorb jnp imul aad push lahf js mov pop popf stc cmp iret in inc dec rolb pop push sub movb rol test test mov test mov in adc or push xor inc inc popf lock inc fsubrl sub adc mov outsb sahf leave push neg rcrl mov or push repz add lcall rcrb movsl push (bad) (bad) xchg jp xchg ja pop pop out xchg dec pop push jnp fimull mov out cmp insb addl popf and xchg std add dec cltd mov cs inc lds cmp pop movb arpl sub sub loop mov inc xchg adc inc sub mov shrl cltd bound scas imul pop lret das sub xlat cltd test sub fimul hlt gs mov jl lret fs stc dec lock mov clc mov sub cmp (bad) pushf addl and xchg lret mov sub (bad) xor aam dec pushf sbb lds cmp or repz data16 mov fs in test shll sub cmp and fs ljmp fstps and inc stc mov xor mulb in xchg cmpsb ffree pop mov insl jbe das out sub sbb into scas sub popa adc push testb and aaa adc and ja es push rcrl jp (bad) sti mov pop scas adc fisttp add cmpsl lret mov clc mov test negl sub cmp sti cmpsb mov xor or and lods rcll xor scas xor sub jo lret jge loop or adc add jle leave sbb xchg mov mov xchg in mov mov movsl xchg mov outsl repnz mov or cli mov pop adc ljmp cmp dec iret or mov mov sub leave (bad) xchg sub lret lods jmp (bad) xchg dec mull ja mov shlb ljmp arpl je int imul push loope add push (bad) xor sar adc add mov mov loop xchg (bad) push pop jp repnz and cmpsb lea xlat repz std in mov leave mov sub jb test inc cmp (bad) out leave push cmp lret ds cmp mov lock and mov pop scas dec push sahf cmp pop outsl xor pop sbb adc add xor fsubrl imul cld and mov or loop rcll je pop fmuls clc adc repnz test lret lret xor add pop mov sub or xchg outsl jbe fcoms sti daa clc aas inc xchg and rclb inc xor das push pop jge cmp pop cwtl cmp mov ret sti xor sub lret sbb imul stos (bad) push negl mov leave mov fs jo dec mov push (bad) loope cs xor popa dec cli xchg stos or pushl xchg jbe insl xor adc (bad) sub dec mov dec mov popa sub mov sub sub pop mov mov stc dec mov sub push mov sub (bad) ret cmp add jbe jmp and ss fstpt adc call adc sti add cmc jns push mov inc fs je mov jbe pop ja in xlat or fs push adc scas jb out fldl movsb mov pusha add mov mov xchg inc test push fisttpll fucom outsb pop cmp lcall (bad) dec add push cs sub xlat cmp js xor popf aad (bad) xlat push or xor imull call or enter shl inc stos sub and lods test lcall loope nop cmpsb call jae mov mov fsubrl test xor push push sbbl push add test pop sub or and push test (bad) xchg pop pop ljmp inc sbb sub (bad) loop shr fldenv push xor loope jnp and push leave and in enter in int3 add sbb ret add mov lds out pop xor cmpsb xchg repz sahf or pop or sbb fistp vmovntps push xor lods inc fstpl (bad) sahf stc pop (bad) (bad) sbb xchg adc cli mov leave sbb hlt out cmp cmpsl rcrb jecxz,pn fs mov imul sti (bad) dec daa sub inc in or push fs lods push xchg mov or xor repnz sbb or popf mov push fsub jle int xchg ja ljmp in cmp push cmp movsb (bad) xor test and stos dec jp ret mov mov rol test push dec in sub cli or ljmp xchg sbb cmp add (bad) outsb dec inc jmp push sub fsubrs hlt and or cmc add ss cltd dec or das mov lds scas push (bad) neg push mov pop fstpt fcoml in pop (bad) dec cwtl adc ret in xlat js mov jecxz xor ds adc sub mov incb pushf add mov xchg rolb dec dec mov add add mov aaa mov out imull (bad) ljmp jae sub xor gs xor (bad) and cmc in es jne push pop stc or xor sub or icebp outsl fs mov cmp call ret repnz xlat sbb clc sbb fmull pop mov fwait and das push fldenv mov movsb mov (bad) cwtl push inc shrl inc popa ja jp sbb rol sub mov push inc cmp nop movb or outsb shll ljmp into add enter outsl jg sbb xor testb movl (bad) inc sub mov scas cmp sbb adc and dec xchg add ret pop dec ljmp sti add mov icebp sub mov into pop notb push or pop xor mov icebp test or dec dec dec jbe sbb mov js dec repz pop loope lcall xchg jg fbld out fucomip jbe push mov sub and leave xlat pop or jmp ret stos sub stos fstl inc add push pop cmp pushl mov sti dec jp or test ljmp xlat dec mov (bad) data16 imul dec mov mov (bad) out into nop xchg mov jae inc sub pop sub pop addl mov ffreep and mov add mov xor sub (bad) sub push cli pop lods stos bound push jle push (bad) cmpsl xchg fstpl mov jge push lahf repz andl dec (bad) cli cmp jmp je jmp lock out xor or loop (bad) stos int3 adc dec cli in cld cmc mov lcall cmpsl adc and leave jmp xchg cmc cmp xor xor and jl pop and pusha pushf jle xor mov sub in (bad) xchg int3 mov dec clc bound and sahf mov sub cwtl scas pushw sub test add xor and fst xor scas xchg cltd sarl aaa sub not pop call mov (bad) imulb movb adc pop mov xor cltd iret ret jg iret div xor orb out bound (bad) push test repz sbb mov (bad) pop add mov xchg int3 (bad) sub inc mov stc xor mov loope add sub sub lods fcoml jno divl in push mov imul xor shrb mov dec mov cs out xor and into (bad) and adc adc and xchg push xchg loop ds sub xor stos bound icebp ja notb outsl mov xchg mov push sbb xchg jne lods sub adc sub add loope outsl lret cld adc sbb out daa rcrl sbb sbb lds daa xchg jmp ficom push call adc leave dec cmp in mov outsl sbb jbe insb shrl cmp xor icebp add in mov test xorb mov xchg xlat xchg es xchg push mov add jecxz lahf push pop pop bound sbb sub lret test stc js pop xor mov dec lret sbb dec in lret or mov stos fs (bad) repnz xor mov and xchg stc ja aas and fst je xchg sub je addr16 mov pop sub sub dec jge sub (bad) sub int3 sbb (bad) jbe gs call test adc (bad) adc jmp or pop dec push mov mov mov fistpl pop inc mov shr rcrl cli int cs pop xchg mov (bad) pusha xchg add sub inc lcall jmp xor add orb rcll mov add jbe jno jle sbb mov mov mov leave test sub xor or mov mov jo add mov rcll sbb xchg test mov xor rcrl mov stos ljmp ljmp xlat mov mov ret xor mov movsl data16 bound pop jp inc loope inc xchg ljmp iret stc scas bound icebp dec movl adc mov ret dec push das or (bad) jl xor int3 or sub ret push push andb mov add push xlat lcall (bad) sbb and xor mov fildl pop pop push mov add aad in sbb daa pop push jle popf ret push fildll call and add into fstps stc sbb or adc sbb and inc mov xorl fildll dec or aam imul fidiv test pushf lahf push and push mov push test mov add pop push mov (bad) or push ja jl or pop sub or mov xorl and mov aad pop mov int xchg icebp cmp pop push jo add xlat cmp iret add lock mov call xchg and jb into sub add pop fisttpl or rcl sbb push mov outsb mov xchg inc dec shl add les sti jg (bad) lret lock dec insl jp call shl inc jge inc sub aas or dec sahf xor out pop not andl push pop xchg cmpsb dec stos fsts cltd mov xchg push push dec push lahf mov sub add orb fisttpl incl cmp aaa mov stos notl add mov push push mov pop sub pop mov pop adc add mov and repz and push xor mov cmp out jg lods cmp imul push pop loope sub dec cltd add sub dec inc fsts inc jg inc in and mov aaa push mov lcall sub add or xchg neg addb dec push mov push xor add pop add pop pop rolb outsl sbb ljmp or jns and dec push pop rorl xchg inc sub pop sahf in push leave and mov or inc dec mov pop dec sub loop (bad) adc data16 icebp scas inc or xor mov add sbb cmp (bad) ljmp or mov or xchg pop mov shll cmp shr idivb roll push fs dec ljmpw cmp mov pop ret jns popa add mov mov movsb insl sub mov scas cwtl rol dec xorb repz pop lret mov ljmp (bad) mov push or mov jge (bad) int3 and xchg (bad) out pop (bad) and add pop xor int imul dec push xchg cmpsb aad xor in repz mov imul sub inc and sub push or in pop (bad) call add das mov add scas in jp ret push lods pop movsb mov jnp jno adc pop pop ljmp ret or add jo dec out xor ret xchg fbld nop out mov jl out (bad) test lods (bad) mov xor or push xchg push jecxz fiadd jmp add xchg aas xlat iret pop and xchg sbb (bad) push cld push mov pop jns dec fistpl notl into scas addr16 pop popf push cmc mov adc jp xor cmp sbb and mov pop repz push or jecxz in mov mov das out and xchg or jge repnz and stos out sub nop lret hlt dec dec ja repnz adc add xchg push xchg dec mov mov adc fisub (bad) hlt pop pop ret and xor out mov jecxz sub std adc (bad) aam sub mov test ljmp aaa xchg sti dec aad pop leave pop add test cmp mov popf test add add pop (bad) loopne xchg sub xchg jg mov jle inc sti mov push push adc cmp push add shlb inc ja and lret jne mov popf mov rcll xor dec jmp adc mov inc test fwait push and push pop cmp (bad) mov sub lcall add lea jle mov mov cmp sub iret lcall sub jns sub nop negb jno out or sub (bad) bound repnz mov fs pop mov mov test es or aas xchg clc das rcl or add jle push xchg and jb outsl call imul arpl pop scas dec repnz ljmp xchg decl stos (bad) push enter mov ljmp pop lock clc out adc gs stos int3 movsb add xor (bad) pop and icebp xor sub fs dec add xchg jmp cmpsb inc daa xor push roll pop shl cmp pop ret sbb je pop (bad) int add scas iret sub fnsave imul xchg xor push adc mov cmp jg lods xchg scas mov mov nop fsubrp and ja out test repnz ror dec lock outsl (bad) repnz cwtl inc add notl mov in nop xchg push scas cmpsl notl and cli int push jno and lret arpl sub xor dec and repz data16 jbe js in pop mov out ljmp cld mov sub icebp rcr pop and push mov sub dec jo popf adc call in mov bound imul sub mulb fdivrs cmp rcrl mov pop push sarb and mov adc mov inc add cmp and or pop mov jmp and sub ret dec test pop xor ds jo subl cmc sti push sub xor sbb xchg leave mov (bad) out jbe push js movsl sti test or pop mov aam imul (bad) out fdivl mov test mov mov jg js xor push jl xlat sti add sub iret add mov imul mov cld popf stc sub lock sub adc test adc out lock je inc ja dec movsl mov xchg cmpsl aam shlb (bad) mov inc add add je lret push out fstl pushf pop out cli jno add outsb adc mov loop adc sti insb dec mov xor jg jno idiv mov dec lods adc lock lcall es lret push pop js xchg inc dec mov (bad) les and std jnp sub aas sub and and fstps pop leave lods cltd mov (bad) push push out das xor fisttp nop int jmp (bad) cld add dec in jns mov adc mov sub rcll pop mov add adc (bad) sub negl test pop in rclb shr in test mov imul fist add pop pop sub hlt sub xchg jp fstpt clc cmpsl (bad) repz and test repnz push push aam aad adc push sub xor sahf xchg (bad) xor outsl sbb cmp xor in fxch sbb pop pop jno ret jno stos mov xorb sub add std js and or int3 push and dec jnp inc sub movsb mov and in mov or (bad) out inc repz neg cmp push sbb bound icebp push or fldenv fnstcw nop mov mov lret inc dec jbe shlb ljmp inc fisttp jno scas sbb dec (bad) decb test movsb fdivrl xor adc add and out outsl das rolb pushf xchg lds add out enter jns xchg lahf ror dec aaa addr16 dec push or xchg out cmpsl sub (bad) mov stos lret xor jae ljmp sti (bad) push mov adc imul loope pop cld mov pop cmp (bad) (bad) out and stos arpl out (bad) mov xor mov fld xchg sarl pop test pop pop mov ret mov mov and push adc pop xlat xor add lahf push xchg (bad) test std divl push jmp xchg mov pop ret lea adc leave lods cmp sub and dec in das and mov mov push (bad) mov test lock xchg sub ja or in call imul (bad) xor scas and push xchg (bad) nop push mov out mov cs dec and dec enter into mov je leave out in inc fwait xchg pop push xor mov daa cli jae adc fist jl into and and jmp or call mov adc sbb jbe rcr fildll mov add in imul test insw or jecxz add add sbb add pop ljmp pop xchg lret outsl or nop xor mov inc iret (bad) jmp (bad) into stos mul mov sahf loop xchg pop scas cltd mov xor or mov ficom repnz and aam adc (bad) loop leave out pop add mov dec mov fldenv dec fs adc mov icebp mov leave scas repnz les inc xchg mov ret push iret leave inc xchg or shrl jl (bad) repz pushf iret icebp xchg lds test pop mov (bad) pop sub fcoms jge sub fist mov pop scas ja or mov jae les mov out popf in adc pop and mov rol fiadd pop adc pop add and xchg popf lret rcrb aas and xchg jno or sbb fdivr xor add aad loope rcll xlat add stos bound scas pushf adc xchg je pop (bad) jnp fxch or test lret clc jae lea inc or jg cmp movl andl or add adc add mov movsb xchg pop andl pop adc mov shrb ret xor cmc fldenv idivl repnz add dec in jnp test dec divl ret cmc inc sbb adc push adc adc mov push push jmp sub lods sub cmp xchg gs aaa cmp stc add or add fsubs daa icebp xor shl xchg sarb or mov insb dec and pop xor xchg adcl (bad) dec adc jnp adc ljmp or pop out dec jmp adc adc mov sub or ss sub cmp sbb imul sub mov mov jg inc scas cmp xchg daa repz push cmc or je in sub daa jecxz xchg mov push jne sbb shll imul dec stos test or or or mov dec test mov sbb (bad) pop mov push cld imul push mov sub sub xchg adc leave fisubrl clc or hlt nop lret les or or loopne xchg mov sarb mov and mov mov pop inc sub dec cli adc cmpsb dec and and add (bad) bound testb mov movsb sub mov ret or xchg idiv mov jp xchg push cmpsb jmp out inc jmp add (bad) jle pop push test out into rcll ret pop loop xchg mov dec mov fabs (bad) shrl into into pop gs xchg or and pop les jbe pop insb add jg add jnp inc (bad) out or jg mov std cltd sti imul and inc les leave or pop fist rorl mov jg pop mov daa (bad) sbb sti movsl hlt (bad) notb ror je cmp rcll fistl test push out sub and push xor and push mov stos adc mov lods loop in push and or cli cld jl mov bound or add (bad) outsb ljmp push push jecxz mov pop cmp ret mov (bad) repnz xchg jmp push and cmpsb adc xlat icebp mov fisubl push add out lret dec add add je,pt xor push (bad) notb jg xlat or push add movzbl pop stos adc cwtl popa ret (bad) jb sahf pop (bad) into and cmpsl inc or jl xor das call imul loop push add adc das push je and adc repnz sbb push mov jmp daa out lcall out adc jmp xchg out jle lea mov int3 xchg jb pop icebp cmpsb mov lahf adc or cltd inc dec or dec lret sbb xlat stos int3 xchg mov loopne (bad) xor cld es adc jmp or sub lods mov ljmp popa pushf pop push repz sub jmp fidivrl fadds dec push fldl pop jle push cmp je pop inc imul jno sub xor pop or fprem1 outsl clc dec rorb enter inc pusha or divb jl and push and jns xchg (bad) shll mov push cltd xor add mov pop pusha mov test mov jecxz ds fnsave jg jmp aaa xor xor nop aaa ljmp xor sub adc mov adc out jge cmp pushf dec cli imul jg es and mov in cmp mov inc dec push jl xlat das mov or or mov test test sbb add aad rcrb cltd mov pushf fstpl inc jle push xor push icebp sub iret xor (bad) loop sub xchg and lock lds orb mov xor fidivrl xchg outsl lahf jo dec sti ret jecxz dec or cltd mov mov xlat dec and xchg ja aad stos repnz xchg cli xor push call fidivl xlat mov cmpsl das inc ljmp leave sub push (bad) jmp mov push cwtl xchg gs ljmp leave out pop push mov push jmp das dec fimul mov ficompl ja pop push mull (bad) rol mov (bad) and adc lret testl mov jl xchg hlt imul out push push mov aaa or inc (bad) jmp scas dec enter mov add mov xchg lret jmp dec jo push mov jns mov in add repz bound ficoml dec gs scas sbbb (bad) aaa cmp loopne jmp sub sub xchg mov fstps data16 fsqrt jmp sbb stc xor cmp ljmp and (bad) movl xchg sub leave iret jns dec enter cmp or pop or sub add rolb fwait or mov pop add mov xor mov aas jb ss js movsl bound je ret jne sti jmp mulb jmp dec push mov clc (bad) jbe jo (bad) dec fsubrs xchg xchg xor mov inc pusha sarl loop nop aam jno push xchg push pop mov mov jb daa repz sub xor divl (bad) mov and das dec out (bad) test (bad) cld leave xlat in push add add dec xor adc xor icebp test pop cmp out sbb test sub inc mov xor movzwl mov lods arpl and and push dec jl cmp clc push popf ljmp mov pusha dec mov jae popa mov loope pop jle push and sbb sub das ret aam cmp jo shlb inc jns (bad) test das in or mov repz lea xor dec xor test cld icebp pop mov push cmc in mov out mov xchg ljmp pushf pop and clc dec shr mov sub lret sub xor in sub push sub mov sub mov (bad) testl repnz lret ret in stc ss jl lret mov outsb repnz bound out fldt cld or sub hlt into xchg repz call test stos cli mov out push mov jge fwait sbb ss pop cmc mov and idivl data16 mov mov jno or or rclb fisubr leave lods push test pop (bad) lea mov fmuls (bad) rol daa bound je ljmp std ljmp or xor scas and cmc push loopne test lret adc scas fs int sti push inc leave sub outsb xorl stos or sti mov xor jo mov xlat mov out packuswb push mov push xchg xchg mov adc ljmp inc ljmp mov les sti das popf ret (bad) mov ret adcb test sbb outsb loope fdivrs clc dec loop sub repz out int loope loop arpl mov sahf mov jne jmp xor xchg mov es mov sub pop ror jns mov and negb mov cld xchg mov xchg push push xchg (bad) stos repnz xor mov xor pop loope jl xchg ds stos mov dec out hlt std push and pop mov xchg ss and mov int3 stos mulb jno loop,pn (bad) xor ljmp daa xor (bad) xor xor sub or and shlb adc mov mov push mov adc jge fucom flds jge xchg ljmp mov fxch and fiadd divb mov iret mov mov shrl cs inc xor fstpl aas into jmp sub (bad) scas call mov movsl mov add stos adc (bad) into pusha imul imul mov movsl out dec fnop shr nop jp je push movsl adc stos mov and push fnstenv out mov js leave pop add enter int cmp subl jg leave and jmp or pop js call and pop sub cmp lock jmp icebp sub dec jmp mov pop push cld divb inc iret ljmp jnp or (bad) mov xchg test xchg pop mov add movl pop add test mov sub sarb outsb jle jmp xor mov out sub push imul std lea mov icebp mov je xchg lret leave rcr dec mov lea and mov je aaa pop bound repnz ja loopne mov inc lea iret outsl mov adc adc mov or mov ds stos mov mov cmp sarl jg sub cltd int jnp into add je hlt fcoml jmp cltd xor dec xchg mov or mov cmp sbb out mov mov xor incb or arpl and adc jg xor lahf push movsb add dec cmp pop jo pop lret adc fs repnz movsb sub pop rcl mov sub and pop movl lret loop lods jp jmp (bad) test and or icebp loopne std or cmp ret xchg sub inc inc xchg jns lds sbb in xor pop sub jns or lret cmc test sarl xchg mov loop fidivr cmp mov mov lret pop das out pop push dec ret movsl dec sub jp mov out in fs xor add cmp xor call daa ljmp ret movsl dec jbe xchg inc push fdivrs cltd xchg jnp sub das xor clc mov mov ret cmc xchg xor or lock mov mov lods xor fmul xchg jg inc mov loop (bad) xor movsb js mov pusha and and xchg mov pop movsl movsl jge shll sar mov test cwtl adc stc pusha mov std inc jg dec jp inc sub (bad) sub mov mov lods push fdivs and pop jle inc and dec imul ficomp sbb (bad) sub push xor push in lahf fisubrl mov ja xchg fsubp cmp imul leave out inc adc inc jge mov adc cld ss xor sbb mov adc xlat sarl inc ljmp pop loope mov notb sbb repz adc decb and loop ffree and lcall loop push popf jle xchg (bad) mov fucompp mov popf out jmp cmpsb inc icebp inc in xchg xor fistl xchg faddp rsm loop daa lods push dec or leave push add push jae mov fisubr sbb cmp xchg outsb enter sub mov sbb (bad) mull sub sbb int3 cmp or xlat ss mov xchg mov mov xchg jp ljmp aas mov mov or outsb pop test cli add pop fwait cmpsl and or xor xchg aad pop fs mov lds loope sub jnp aaa xchg mov (bad) jmp clc cmpl xor mov notl mov pop dec negl add xor cmp pop jns leave pop dec cwtl dec and dec test push lea jle jle xchg mov cmp enter andb pop push dec call std mov (bad) add and dec frstor subb cmpsb jbe repz mov jnp mov cltd xor in cmp insb push shrb push and dec sbb cltd inc cs aas in and sub fs aad mov or jnp jb divl mov (bad) cmp or sbb in outsl adc shrb cld (bad) movsl xchg mov lds subl out sub cmp outsb sub sbb add add pop pop stos sub andl or and push jmp sub xchg push jl jo popf mov push out outsl pop and add sub add mov negl jne les jmp ret push push push push and lea or dec mov mov cmp out sub add btcl popf adc mov mov jp and xor jmp outsb dec sbb xchg fs push mov mov divb sbb (bad) loope sbb rorb pop pop dec mov call pop out ja ljmp and ret pop or shl cmc repz cmp or dec (bad) clc fsubs cmp push push fsubrl in aam push fcomps ret xchg push push sbb push add mov pop push sub and and outsb scas cmp lods (bad) mov stos fnstenv push add jbe movsb sti sub ljmp mov sub or mov (bad) hlt add mov cmpsb sub jmp mov leave in lods jno sbb daa push mov leave and out lret and cld xchg and push sub pushl jecxz dec in sbb movl pop repz out cmp sbb lods xor adc call leave leave iret faddp adc movsb push pop xchg in movsl mov stc sub test popa sarb cmp andb les pushf es add push rcll add sti js mov test orb int mov sub pop das (bad) mov or inc mov and iret sbb test mov push mov imul push mov dec push imulb and dec out popf push sub out push fmuls xchg inc pop repz imulb (bad) or mov inc push into lret or out jl xchg cld fnstenv repz jae dec xchg outsl sbb pushf (bad) xor xchg fst (bad) fbld std xor or jmp or pop sti xor dec stos lcall adc subl icebp jmp clc cli mov sbb inc (bad) test jnp in push paddsb dec test sub sti jb xor dec dec and les hlt popa push (bad) push push jecxz fstpl idivb int pop les jecxz notb ds (bad) mov dec cltd inc div push mov cmp cld call push mov (bad) popf mov or lret jg pop sbb and out popf mov mov leave xor xor cmp (bad) adc add sbb movsl int3 or (bad) mov (bad) mov cld idivb lret sub jmp adc or mov xchg cmp mov xlat out (bad) cwtl jp lcall pop imul repz push and xor test ficomp addr16 in loopne ret pop and loope je xor cmp inc fptan lret sub arpl nop or sub push xchg shlb jmp or fistpll leave add fs or repz imul in pop xor mov repnz add xor inc and mov in xchg dec cmpsl pop aad or (bad) out aad fidiv add or jp lods pushf jb add lea int3 fdivs mov sub or fcoms push (bad) negb gs lods sahf movsb mov into xchg (bad) mov (bad) jmp push movzbl aad (bad) xor icebp sti lret sbb or pop mov or lods pop jo call xor test add or lret xchg out leave shrb add call stos inc xchg or cli notb mov ficompl repnz rcrl mov mov xchg and add cld mov xor mov scas sbb dec in stos idivb xor sti insl cs xor incb or adc jae add aam inc jecxz sub sub push push inc dec mov (bad) adc mov in adc flds insl enter sbb xor in sahf mov add sub test mov push mov and mov scas lea pop fldenv add mov daa add fs mov pop adc mov and testl mov jnp and lods sbb cmp (bad) pop mov (bad) mov dec (bad) jecxz dec icebp fucom add scas movsb mov pushl jmp cwtl lahf sbb stos inc sbb orb push sub out pop xchg cmc mov ds mov ffreep and outsl divl in fildl aad xchg notl lahf push push imul xchg int imul mov push add in pusha xor mov sbb xor jae or inc icebp cwtl ret fidiv pop out pop sub mov push jle adc mov hlt fwait fs sub pop xor add sub in push call add int3 or movsb adc push lods pop jmp and in rcrl sti cs lret mov fistpl stos mov data16 push dec shrb adcl xchg pop dec das pop fdivs or clc cmp shrb hlt cli movsb jl ret ret xchg cwtl lret adc fadds sbb into fmuls jg or loope das idiv pop and daa and (bad) rcl insb xor mov in jmp inc (bad) lock aad xchg mov loop mov mov cmpsl jb and inc fistpll mov xchg pop dec or repnz (bad) lret xor dec imul cmc fadds sbb push inc add je imul or in outsl leave into je push repnz and outsl xchg idivl into and iret pop dec std pop out mov jb jg out mov mov pop je leave fs mov adc pop push (bad) je cwtl js xchg cmp sar (bad) jb mov xchg aad sub pusha repz dec mov sbb sbb dec mov inc cmpsl loopne icebp xchg cmp inc stos (bad) ror je adc add and sub int3 lcall shrb scas lods fdivs adc fidivrl jge call subl sub cld outsl mov subb sti jbe mov lahf js mov mov test sbb xor jle dec mov icebp jp sbb mov pushf movsb sti insl test fildl clc dec ret (bad) jno xchg or inc sbb (bad) mov out or mov pop mov pop (bad) popa sub and lock rcrl (bad) std sub daa popa inc frndint lcall shl dec jmp sub mov out mov mov sbb jbe inc in xor sub jg rcrl adc adc mov xchg jmp ja push in insb shl lahf dec fistp and pop cld or daa rorb cs aaa sahf jno and pop xor sub daa add or xor js movsl cmp mov jecxz pop (bad) and ret leave and das mov flds dec or cmc inc ja ret xor out aad mov mov adc shr out sub and out add xor (bad) xlat adc int3 popf xchg jecxz inc mov shlb or popa shrb sub xor gs fdivr and mov xchg (bad) (bad) or popa mov call stos (bad) or xchg loope (bad) ss pop cmpl mov scas (bad) out jp mov xor xor mov hlt sub sub mov adc (bad) xchg xor add adc xor adc outsb xchg mov push xchg mov (bad) (bad) sbb lods inc into sub imul ljmp mov xor gs xor dec pop std sbb stos adc jmp inc repnz into sub scas jecxz fs out xor sub jno xchg (bad) daa lret inc jecxz scas push push jl (bad) mov shrb pop mov inc leave fidiv and mov jmp inc out inc pop loop push flds dec mov mov jl xchg pop mov pop mov add xchg faddl pop jb mov rorb cs cmc xor daa dec mov jmp pop test mov fdiv in fs push imul adc and aas or cmp into test add aaa fldcw ja xor mov (bad) mov (bad) (bad) aas out sub mov lods std mov cmc icebp xlat inc mov jg les dec lods (bad) shll outsl daa in test stc mov cli and xor pop xor pop nop xchg cmp ja gs imul push mov jg sub scas sub movl movb fisttp xor xor out pusha pop pop mov jmp sti gs enter fisubrl pop cmpb scas out xchg cmpsb mov mov dec xor daa ret cmp mov xlat scas pushf in xchg sub or mov push jge inc push cli mov or push pop mov out test shr bnd add cmpsl push (bad) ret movsl daa (bad) aam movsl std push cmpsb pop imul lods xchg xor out call sub ds daa or sbb pop fist or or xchg add and mov jbe rol mov loop xchg das pop fiadd ret lret xor xor lret out push (bad) xor or imul imul (bad) sub xchg xchg (bad) xchg loopne lret sbb cltd jmp mov sahf mov cmp divl mov mov push das xor pause cmp or mov stc adc mov pop xchg jns gs ljmp mov rcll or iret sub mov fbstp lods xchg mov xor jae adc das (bad) je cltd and jbe mov xor pop test inc cmp into push adcb mov and mov call lds and mov xchg (bad) or je out sti mov cli mov ja or and add lret sub xchg out mov pop sub pushf cwtl push and cltd push das (bad) enter add push sbb daa or jne mov push pop imulb lret out jl (bad) out xchg push sbb andl adc lds pop (bad) in call dec ss sub dec (bad) fnsave pop ljmp mov bound movb or and lret jb (bad) shlb xor xor xor shrl xor in rcrl push addr16 sar mov and sahf in mov mov (bad) clc jmp icebp mov stos or into ja (bad) jge xchg decb sbb xchg clc jge fldcw ds inc imul xchg sbb test adc push imul jp std daa or or sub pusha and or mov xlat das push cmc sbb cld (bad) mov dec dec xor out jnp movl and ret cld (bad) in mov and pop cli sub jno xor sti mov (bad) scas and and ljmp scas fistp xchg faddl xchg (bad) movsl negl mov mov sti cmpsl fidiv cmp (bad) pop (bad) dec fmuls push inc in or cmp faddl dec out jno ret inc adc sbb mov sub sub movsl into inc xchg xor mov push in xchg lret mov sub aam insb fcmovu dec jb fbstp fistp dec mov adc or gs mov and sub loope adcl cmpsl les pop cmpsb mov add and lret je lods push ret cmp push or mov loop cwtl pop xor jnp pop push pop pop stos cmp ljmp xchg rcrl rorb lahf and mov leave push arpl (bad) mov or ss cmpsb lds notl stos cmc push cmp mov jmp xchg (bad) lret cmp and fs loop jge push cli xor out xor hlt iret mov xor xor (bad) cmpsb repz movsb cld les ss test xor shr mov and das add into int3 mov repz ret jl mov sub adc jge dec ret roll fbstp push rcll sbb lds jne mov mov dec push test ffree xchg lods in arpl das repz repnz stos sub cld int (bad) sub mov add out xlat xchg sbb scas mov not les mov stos sbb decl mov stos (bad) sbb xor sti out mov or hlt cmp sarb push leave and (bad) mov and dec pop or clc mov adc dec call mov inc leave idiv inc jne loop and push lods fs jmp stos mov or sarl pop xchg ljmp mov or icebp xchg sub mov mov push into insb sub out loop mov ja shrl (bad) cmp repnz fdivrl ficompl testb xor daa repz sarb hlt inc into fcoml xor jp or add xor ret pop sub sub mov add mov sub and push int3 mov (bad) stos rcr dec dec aad popa das mov testl ss (bad) push in adc divb popf sti ljmp sti dec lret mov cmp gs jb out sub (bad) mov push jg int xchg call stc cmc jnp sub add or mov xchg sub add jae loope dec (bad) pop mov dec xor in sub xchg loopne (bad) or test repz cmp inc test sub (bad) imul mov inc xchg xorl inc adc (bad) xchg into lods push pop mov or jmp daa adc cmp and inc inc push and enter adc jecxz loop test (bad) fdivp and add add pushf jns popf cltd decb jo shr cmp icebp xchg xlat imul cli mov xchg lock add lret mov cmc sbb lahf inc (bad) cmp and ds lods mov aas jp jmp sarl lahf or (bad) xchg mov mov mov dec mov adc test cmp aam pop movsl pop push jl mov mov jbe pop aad lea sub ret pop sbb xchg and out daa mov ret jecxz dec fwait je incb int3 xchg aas or pop push pop and mov mov jge push xchg js mov dec jecxz add mov or mov and adc mov gs xor les and and daa pop inc lods imul jbe adc fst cmpsl dec fdivl xchg nop stos popf sarb jecxz pop jmp rorb bound ret pop lcall fldenv or aad dec fldl mov in loope or sbb mov add sbb ret or in lock sahf ss push mov andl and fild daa loope or loopne arpl dec fbstp xchg aaa imulb mov dec cltd adc mov jo xchg (bad) lcall ds cmpps aam ret movsb jbe mov sbb xor popf fwait movsl ret pop xor or push sar xchg dec sub enter fstps insl dec cmp scas sub sub pushf jl movsb lods adc fnsave aas adc sub mov andl cmp stos mov add popa data16 add cmp inc jp xlat jg stos out das out mov dec xor hlt pushf sbb out daa adc mov adc push or inc and aad sub mov mov push dec ss jo pop xor pop sbb and mov add loop push negb jmp lret cs jge insb and mov rcr dec sbb lret sub (bad) dec mov out imul loop push add or dec mov mov imul pop orb or popf pushl lret (bad) mov or or (bad) mov add push testl outsb lods mov shlb pushf xlat xor test mov jmp push sub adc jne xor sarw cmp lret jbe dec test and xchg leave xlat jns (bad) ret aas inc stos or mov cli gs fs loope out into in dec cli lret add sti jo (bad) push lock xchg pop mov jmp pop and sarb xor clc and or add rolb mov enter push fsubrl push (bad) (bad) ljmp orb roll inc pop mov fadds cmpsl shrb (bad) pushl adc or and in and push jb pop sub movb mov cwtl or (bad) pop push add push dec std movsl xchg stos add jg adc sub out cld adc jg std sub clc or pop cmp mov idivb (bad) test adcb idivl mov mov or ds (bad) sbb xchg and ljmp or add dec popf int3 xchg dec jmp pop xchg out bound idivl lret repnz push cwtl dec pop and loope test mov and add and and lea out dec cld loope out xor cmpsl xchg xchg mov fistl and sub add pushf pop pop out mov (bad) jno dec lcall (bad) out dec (bad) test addr16 sub cmp xor mov push clc movl lret pop pop in outsb cmp adc es outsb sar mulb clc insb in sub loop and fstpt cmpsb push jmp add sub mov pop bound lret push adc pop jmp mov dec test sbb dec clc mov pop dec imul adc jg shll loop pop jae cmpsl cld shr lcall dec inc sub mov xor xor and out or push push insl pop sub aad pop fninit lods inc movsl lods jg les mov outsl push mov gs in sbb repnz xor and popf jnp xor mov addl ds mov repz jmp and cli lea (bad) jp mov fdivp repnz or sub in cmpsb push cmp daa ret cmc cmp fcmovb push (bad) lods insb insl in and bound or add cmp je mov push jge out mov mov or pop and mov pop lret inc scas mov and cmp sbb ret cmp mov add push mov xlat dec scas fisubr mov ja xchg dec mov psrlw pop dec data16 out cmc xchg xor pop mov (bad) dec jl mov sti jmp mov jge jmp jp mov cmp lret cmp mov cltd dec cs or jne push inc pop pop mov in dec and xor or mov jns in and push mov lock test push xchg or jle inc xor lods sbb inc nop mov and ds sub cwtl daa cld repnz fnstsw adc retw imul fs xor (bad) mov cwtl test xor mov sub negb sahf out mov imul sub stc push enter sbb xor or or or sbb sahf pop mov jp (bad) (bad) je into mov loop xchg jl (bad) xchg js into xchg mov inc cld or fbld lock jno into loopne iret add cmpsb push repz cmp mov xor add bound (bad) std adc xchg xor test fidivrl lods xchg inc in mov mov xlat icebp loope add jmp mov mov xor js cmp or inc jp aam leave fs lahf loop divl inc mov inc inc and xchg stos flds adc sbb lea xchg or add mov sbb mov xor lods pop leave push jge push pushf push dec jl add stos jnp and cmpsl lods insb mov iret push add and (bad) mov out es mov sub or inc add (bad) mov and xor fs les pop jnp mov lret lret imul lret test xor mov aaa mov jo and mov inc xchg mov push sub fldz jp fwait (bad) cmp add pop ds mov (bad) ljmp cltd xor push jno sbb jmp ret push lcall aaa cmp ja xchg enter mov cltd mov xor lret mov jnp inc or sar add mov sub xchg data16 xchg mov lock out cmc sbb mov dec add (bad) jmp push mov and (bad) lahf push int3 imul push cmp popf fstpt cmpsl sbb cmc pop out mov and faddl pop lcall cwtl mov cmpsb mov add and dec mov call dec jmp lock jmp lahf xor je ljmp push jmp in mov (bad) mov pop loop rcrl fs sar xchg testl inc das gs xor jmp and push cli popa sub and jle sub xchg lods add repnz mov sub test (bad) mov push mov loope icebp iret sub gs xor xchg xchg cmc jns lret sbb and aam pop fdivrs and and gs cmpsl sti adc into popa push or jnp lds mov mov mov add ljmp icebp inc mov stos cmpsl bound sbb or jbe and jb data16 jmp pop lea outsl rclb adc lock out gs test xor add push mov push and bnd test or add int das out adc cli cmp fdivr sbb out lret cli adc and stos dec jmp jmp pop (bad) insb loop pop imul and fwait lds fcmovb mov xchg mov pushl xor scas add push (bad) insb popf lret out dec les mov dec mov xchg mov repnz das xor push or dec (bad) ss fidivl push jmp xor pop or mul mov shr jnp das das lret push lods es bound fistpl sub mov push pop fucomip sbb ret jmp xor jns cwtl test ljmp push in lock push bound (bad) jne or out sbb int and mov pop sub test jmp xchg fisttp mov fldl dec repz add leave adc sbbl fcoms movsl pop jmp jns mov leave ror inc pop or iret mov sub or icebp mov adc xchg cmp cmp lret and sub fstl xor ret addr16 test (bad) enter daa notb leave xlat lcall gs pop jecxz cmp (bad) mov sti or jne xchg sub mov or push mov mov xchg lods sub cwtl test mov scas mov test enter jb xchg les movl xlat lcall arpl fist jecxz mov jmp scas cwtl pop and (bad) xor scas repz lret out xchg adc loopne dec xor daa out cmc mov leave iret add cs repnz xchg mov fimul or aad xor jmp jnp aam sbb xor xor push fnstenv (bad) loope cli das dec imull repnz push sub (bad) mov out or pop ret shll subb outsl mov xchg clc push inc movsl jne sbbb ss pop pop out push inc push arpl sub (bad) dec pop aaa lds aam js sti sub xlat mov into xor hlt fldl adc jbe pop sarl movsb out add xchg aam (bad) ds (bad) loope fadds xchg push jl pop lret es daa idivb fcom sarb sub loope add dec in dec repnz adc stos mov es shr adc dec sbb inc mov nop stos xchg cmp rcr pop xor icebp clc outsl xor repnz std inc push sub stos adc mov or add and or outsb jne test movl aad out lods or jge xor (bad) and or cmp mov mov ret add xor push xor cli cmp in mov mov adc mov hlt imul insb mov popf lcall aaa mov fistl into setge jmp into aam call dec mov scas inc xorl pushf (bad) rclb cmp mov (bad) gs movsl into xor mov scas sbb jge push rorl push sub cmpsb andl push dec mov mov (bad) or mov inc jmp add out add (bad) inc pop and frstor push das dec jbe lock mov (bad) stos xchg popa mov pop popf movsb mov jp stc lret gs or push xchg xchg loope sub or stc mov jmp push cmp (bad) sub scas mov out mov shrb pop mov jb imulb xor pop das mov icebp cmp mov je pop out jl enter pop adc xor mov out inc jae lret adc dec sub int jmp inc pop sub lea bound xor lcall (bad) inc daa or sub or cmp add mov call mov add stos cmp and mov xchg orb lock xor popf lcall nop arpl repnz rolb xor adc sub mov adc shrl loop (bad) (bad) dec loop (bad) push inc or pop insl mov imul or jle mov (bad) or xor imul scas xor shrl icebp xor sub fild or rcl fs xor enter jne and stos mov subb pop sub add dec lret jmp mov and xchg int3 adc mov imul bound dec ljmp sarb stos adc popf out notb jle pop pusha pop and and sbb repz add cld int3 lds (bad) mov jecxz or fidiv std in xor cmp mov jle in mov clc inc adc fwait stos and iret mov es adc cli mov pop sub mov or add dec pop movsl or jno sti int3 sbb sarb icebp sbb pop mov xchg (bad) lods shrd jmp in sub (bad) jb leave mov and lds xor push xor jb test jno ret dec loop lcall push mov mov pop add hlt cmp sub push mov ja jmp (bad) pop and mov sub pop shll in movsl pop incl inc pop loopne jnp cli (bad) or sti int3 sub int xor mov add mov fincstp mov pop dec add jge jp,pt shll lods lock outsl mov sub add mov decb mov hlt push push add mov mov repnz jmp jp adc mov cmp sahf xor push or sub scas out pop xchg add add add sub outsl add add (bad) (bad) das adc push or pop inc inc sbb stc push in and adc cmp clc dec add cmp mov add mov jg add push or fxch imul idivl leave mov pop sbb ret pop push in sbb mov jg dec mov add jle addr16 pop roll push rcrb ret push mov (bad) (bad) dec xchg pop add pop pop fucomi mov (bad) jle repnz and rcr add xchg rcr fisubr into push pop cmc stos sbb out xor inc or add jl jg dec cmp lret jns orl test mov dec and vpandn mov (bad) cmp repz cs or pop movb loop imul mov xlat insl fsubs push adc sbb mov add pop loopne mov inc test sahf adc xor jl jp inc clc jg pop xchg shrb xchg das pop sub je test enter in out and iret lret aad push jmp imul pop push xor imul ljmp (bad) push fidiv loopne out cmp inc scas rcll in movsl movsb decb movsl mov sarl cwtl das cmp nop loop pop in xchg out (bad) into xor sti sub insb add stos mov push jns orl scas sbb fmuls je jmp push (bad) les pop ljmp stc xor push ss or lcallw mov scas ss imulb sub shlb jbe (bad) ja and and push into imul mov xchg sbb xor jne push ljmp ljmp cmp mov jge adc sub cmpsl notb and loope sbb mov stc jnp out or leave dec pop xlat gs dec pop jns imul dec mov (bad) jle ljmp cmp or mov fbld add xchg pop fs push out jl jl addr16 or mov jg mov pusha adc enter rcl arpl mov outsb sub jmp sbbb cmpsl jge push xor int3 pop icebp mov xchg inc (bad) xor sub xor pop xor outsb and mov pop sarb es das in int3 mov cmp dec add ja jnp clc nop and iret pop mov xor (bad) mov out sub cmp mov pop test or sti jno or jp call into dec inc push xor scas jb mov mov faddp sbb rolb push dec stos mov popa xor insb cmp fcoms or sub push or jecxz sub pop call pop psubw scas dec idiv mov xor ljmp add push into push mov dec ss mov inc inc sahf sub daa mov inc pusha ja inc lock xchg sbb adc test jp xor ja mov or pop clc xor and mov es sub hlt test shrb adc negl sub imul cld xor mov mov push inc fs sti iret xchg dec mov cmp mov fidivr jg and mov fisttpl decl jbe (bad) js (bad) jg pop in stos push cmp push sub sub sarb jmp mov add mov add popf (bad) imul lret das sub clc mov mov xchg pop arpl sub cmp or test add xchg push ljmp adc out xor stos (bad) out outsl jecxz add cmp cmp cmp and lret fmull push ret aad (bad) dec (bad) mov repnz cmp ja mov and (bad) or data16 sbb xchg xor mov fbstp je lret xor icebp mov or xor fsubl sub pop mov ss pop push lds xor jne cmovnp incl pop mov lret sub (bad) (bad) fnstcw jo add repz fsubrs xchg notb (bad) inc mov pop sbb testl icebp or xor fnstsw cmpsb cs rclb aam adc mov xchg push (bad) and in push sbb or pusha and mov pop clc popf mov fst pop ds mov pushl stc iret jb add out mov xor jo hlt loope push inc push xor and scas loopne lret dec pop std jne icebp dec addl push je fiaddl ja shll add push roll out jne jae sbb jg (bad) cltd xor imulb mov mov sub repz das mov xor mov insl xor adc and or dec fstl adc sbb out pop out mov mov adc sub or add mov lahf in out imul adc and jb (bad) aad fs push icebp xlat dec stos lret add inc sbb mov mov (bad) into (bad) iret xchg jecxz das bswap mov jne dec (bad) adc mov add repz dec mov xchg lods icebp roll mov dec in (bad) (bad) xor mov in inc dec jo sbb fisub push sub fs or xchg add pushf mov xor loope push leave imull popf lods push adc pop mov lds (bad) cmp loop loopne test pop outsl out fs out sti mov pop shrl or icebp loop lds or je bound xor mov jne repnz fyl2x inc lret hlt mov sub jge out mov (bad) pop int3 push sarl adcb mov mov fs jmp sub ret inc lods push jno dec sbb pusha xchg push test sbb cmc push mov rcll mov xor mov shlb loop insb aas sub and push xor mov mov sub xlat addr16 sub loope fdivrs mov test in leave sbb mov mov inc xor (bad) shrb adc icebp rorl sub lret lret or jp fsub mov (bad) push icebp mov xchg out popf adc rep test shl cmpl addr16 inc repnz sub and scas jae movsl fldt scas jne aas mov pop xor (bad) repz jg sub xor cwtl iret dec sbb sbb jmp loop sbb mov push cld shlb cli cmp aam cmpsl divl or jmp bnd je push aas pop add add mov ret push fsubl mov and cmp fimull dec pop mov outsb loopne xor rcll add into xorl cltd movsb cli loop test inc inc cmp sub repnz mov mov xchg xchg mov inc cli sub jnp xchg std push (bad) mov rorb jmp je add enter (bad) cmc push stc add jae adc pop enter lret sub and repz jae cmp mov nop or fisubr fstl and gs shr dec icebp aaa mov hlt or in mov add pop int3 xchg dec idiv pushl push jno imul mov adc jb in mov mov and add push dec lret jge cmpsl and push fimul fsts and test call cs leave in or push clc ret popf gs in fsubrp fisttpll repnz or data16 repnz daa pop sub mov push cmp sub push shlb dec pushf xor cmp adc jno pop mov push adc cmp adc mov test pop (bad) cmp pop sub ljmp cwtl (bad) jmp sub popa push xor decl shr fisub pop xor adc add and test sarl test mov xor shll cld xchg push lret adc popf (bad) int ljmp addr16 ja adc pop imul loop fimul push adc mov sti lock nop xchg and lahf pushw pop add mov cli mov mov arpl pop test lret xchg xor and shrl ret mov popf aad xchg or dec fs dec es adc (bad) (bad) or (bad) mov lods leave add mov adcl loop sub addr16 loop mov lcall sub (bad) mov (bad) adc sub popf mov into mov xchg repz and leave and add and pushf push mov test cmp jbe mov lds inc add sbb mov loopne cltd inc cmpsl data16 ficom mov mov inc lret xchg das and push or sub ds cmpsb cli pop mov sub js movsb sub mov and orl and shll lret sub or mov xlat in or ljmp cmp push shr add mov rclb cmpsl push loope xor (bad) adc adc icebp data16 lock iret xchg inc lahf push bound pop movsl or aad xchg mov mov (bad) gs lret adc xchg je push mov das sub pop cmp lock dec sub mov dec btc jl mov movsl nop ret scas jecxz jb mov add sub jle mov faddl (bad) jmp leave sub or mov sub movsb (bad) shlb xor dec pop leave push std xor loope mov ficompl lahf xchg std xchg dec dec dec loop push leave mov mov lret mov xor jle cs out inc cmp xor sub or inc test jl iret mov adc mov add ret xchg in cld ret fnstenv inc rep dec hlt pop push test mov add and dec int pop xchg jp jp pusha push fidivrl jbe xchg pop ret cmc push aad fmuls or inc or lods or or outsb mov pop sub das adc cmc pop sub mov sub lret movsl dec jo and jno push add sbb (bad) jo dec repnz and inc xchg and (bad) repnz test rolb (bad) cmpsb aaa push leave and out xchg negl dec bound push or mov xor pop repz ret jbe xchg gs stos xchg and fs sub and xor push stos div sbb in mov and gs lret ret mov (bad) fisubr jl xchg daa cltd stos loope sub std sti (bad) ja dec repnz mov and inc call fimul dec mov sahf sarl add mov or xchg loop mov inc add push ret fisubl rclb ljmp fiadd ljmp or iret pop mov inc mov aad push jne dec fldenv gs iret mov pop xchg inc ljmp into xchg mov test mov dec lods out mov repz and mov sub movsb jmp push dec cli sub jmp pop adc mov stos lret icebp dec scas int jg xor sbb mov lcall sub les pop jno jne into cli add and (bad) fmuls (bad) jns inc or icebp icebp test sahf loope mov pop in pop fwait movsl pop inc add mov neg adc daa sub icebp pop or xor gs mov enter and push (bad) into lahf bound xchg hlt inc jmp inc pop xor mov cli lods push pop add jns pop leave mov in xchg icebp mov add popa push jnp sub lret mov stos popa scas mov loopne mov pop (bad) cmpsb nop push xor stos inc loop shll pop shr push out int3 call sbb sub inc mov cmp jae add jl add sub loope push sub xchg mov inc test sub cmpsb fcoml into add lahf adc inc dec out sbb and and dec test aaa jp adc lret and gs push shll jecxz xchg insb mov xlat pop jmp imul in sub lods pop mov into repz sub sub cli fsubr and or pushw mov ret test sub push lock push sti aaa jmp xor scas xor lret sub insl pop (bad) push movsl pop inc jne adc mov mov adc push add xchg movsb dec cmp data16 add cld push in mov mov repnz jne popa push jle jp ror mov push jnp xchg (bad) (bad) sub fsubrl xchg pop mov sub mov lcall cli sub adc mov sti movsb icebp pusha sbb lock cld mov add out sub adc ljmp in pop or xor (bad) push cltd (bad) sbb js mov test addr16 mov iret hlt roll lret inc roll add call mov jmp xlat xchg push jp push gs add or and outsb mov repnz pop push push lcall mov sub cs idivl pushf dec mov stos xor outsb lret lds xchg jmp in fisubl xchg push sti gs popa dec or pop mov sbb js or (bad) xor decl push pop fsubl aam push cli pushl popa test xor cmp imul popf adc xlat (bad) loop add outsl push scas mov cmpsl mov push mov mov push pop dec sbb shrb push movl test jnp (bad) in daa pop sbb mov decb or addr16 and jl mov mov jo pop push sub push xchg cltd adc ds into cs sub and (bad) jmp sahf sub (bad) dec (bad) out je in (bad) mov inc loopne xlat repnz xchg icebp repnz mov divb jnp int mov shrb idiv adc lahf inc jne jo adc xor mov out lret xchg (bad) loopne mov fldt pop or pop pop sub add loope lret movsl sub daa sti add dec pop xor lret data16 fwait in lahf jmp sbb decl (bad) sub pop and xor xchg mov rcrl push ss pop mov mov ds add cmp lods (bad) sti cmpsl mov ds sbb mov xchg std xor ret (bad) jb cmp pop push das stos push mov jb loop xchg pop sub (bad) sub movsl mov fldl sub xchg andl mov or mov bnd xor mov lahf cmp push jns fldt inc or sbb jecxz or aas jmp cli gs jmp testb xor scas mov ret loope add xchg clc andl push xor imul mov clc mov shl or pop stc and iret jl lret dec and (bad) es cmp ds push repnz add sub sub out adc out cld jmp lcall stc push je ja ret add xchg (bad) scas fstl push lcall fcomps bound clc add mov mov inc into and dec mov pop pop cmp dec stos bound dec cmpsb sub push xlat xchg sti inc inc jns dec fidivr mov push jb ret daa xlat xor leave pop inc fiaddl lahf xchg or ret int xchg sbb fiaddl dec sbb cwtl call imul cs sub leave jg xchg xor inc adc mov (bad) imul scas jecxz xchg sub ljmp (bad) xor sub add xchg sti xlat cmpsl ja scas cmp loopne repnz jne and fcomp sub aad repnz popa test into xorl cmp rol xchg jg imul jmp xchg sbb jmp pop lods test (bad) push jae cmp sahf push jmp lret jg cmp sub push add ja mov call mov add scas xor scas in lcall or sarb gs add movsb mov mov das cmp dec sbb cmp jg pop xchg rol sub notl mov js sbb loop or cmp rclb push ret or subl scas insb pop push pop add mov bound pusha mov cmp int cs mov flds decb push sbb sub dec fildll mov lret lock daa (bad) mov repnz aad adc mov ret sub dec out and fs xchg xor pop add lock std add add clc or movsb (bad) hlt adc ja mov (bad) scas mov xlat jg test out mov mov dec orl cmpsl jbe mov ret pop lahf pop cmp pop leave lods fist jmp cmpsl cmp or pop imul cmp aas pop test ret xor (bad) or xchg outsb jecxz repz fidiv mov repz jbe mov mov pop inc cmp xchg xor scas cltd inc loop cmp imul sbb add jmp enter jecxz sub xor ja lret int (bad) fdivs inc dec sbb mov shrl and and test movsl or xor repz pop lret lcall dec lds shll rclb rorl (bad) jmp mov push mov mov inc lret rolb lret inc mov cmp out mov dec add dec movsl mov push dec or into fnop xlat mov imulb push inc push scas fs jns xor jmp dec jbe cmpl xor and xor and jle adc cmp mov adc cltd adc sti dec fwait inc ja push cwtl pop call mov repnz and and mov loope test ret pop int3 mov sub test adc jmp cltd mov jge data16 or sbb out adc cmp cmp movsl (bad) mov out scas bnd notl push add dec aam mov pop test movsb and xchg lea popf pusha xchg and sub test push dec lret ret and add sbb loop dec dec inc (bad) inc and (bad) add add (bad) int3 cmp mov (bad) push cwtl rcrb xchg pop add jmp mov and mov test xchg rcrb (bad) incl mov sub pop das add ret push cltd cmp loop adc dec in test jecxz pop call sub sub sub popf aaa jg cli insb shlb in icebp movsb in lods in ja sub mov fistl mov jno enter lds ror inc or fimul pop addr16 adc inc lea cmp (bad) xorl aaa aas dec pushl dec inc icebp into sbb loope jl or lret xor xor scas cwtl jg or cmp xchg push pop push dec mov mov bound ret pushl and pop dec push mov inc xor jmp lret into sub pushf in push dec mov (bad) mov aam cmpsb mov mov cmc into les sbb jae mov stos fs sbb xchg mov in xor xchg cld enter loope xor aam pop (bad) leave inc sahf pop xchg dec cmpsl push popf or jb sahf loopne aaa icebp test push xlat push jae fcmovnu into pop je pop ret cs (bad) repz mov push decl sbb adc mov and (bad) cmpsl movsb iret mov sub and leave adc out cld rcll dec dec mov movswl je and push mov cmpsb mov jecxz xchg mov (bad) in mov std int arpl sahf mov pop or mulb mov sbb xchg loope inc or push pop lret sbb ret icebp xchg mov sbb sti and in fidivl icebp mov imul xor pop ret mov jge neg bound fs or jmp stc lret mov decb jae pop out xchg out jb (bad) gs push sub push cli xor sub push cmp jmp imul or ja sub sub jae daa jl push jge cmpsb rorl scas xchg mov sub (bad) mov add mov aad clc inc mov out cmp pop dec out in je (bad) popa js movsb mov btl jg les (bad) (bad) mov or xlat in jnp fcmovb inc and or jle adc scas sub mov lea call xor (bad) xor ljmp xor ljmp test repz shrl and mov icebp add mov fabs or stc aad in add xchg int3 add jle call push icebp xchg lds xchg out xor ljmp xchg testb push pop or dec add sub fisubr rep repnz sub or jo icebp push and addl xchg pop mov push push jno xchg roll jmp push mov mov out into dec adc and mov test mov xor lahf lcall fisttp mov into fistpll ja out xchg and pop pop test cmp out daa lret aam leave push dec dec lock add or add (bad) and lret mov sbb fnstsw in cltd mov out push jns inc push and dec (bad) mov xchg inc dec out mov ds bnd daa (bad) sbb xor add (bad) repz dec (bad) sub pop adc mov rorl out mov sub add mov hlt mov data16 ljmp add add jl leave push mov test jecxz dec dec pop popf xchg outsb testb ficoml dec in sbb inc xchg xor scas mov popa xchg leave ja dec jmp mov jmp (bad) ficom xor cmp xchg jae scas mov fs sub pop adc push es fs fist adc mov dec mov lcall stos mov mov clc loopne shrb idiv push xchg fsubl popa mov xor fstps push frstor mov ret cmp add ret xchg inc rol loop icebp ja and push mov mov lret aas add cli push sbb sub test les mov pop xor cmp jne mov dec (bad) cwtl jmp lahf xchg xchg mov dec out in xorb sbb leave mov inc pop fmull mov pop mov mov in jnp mov adc ljmp mov iret sarb mov fwait sub data16 fcoml ret les movhlps (bad) out sub jnp add adc push add push or jmp (bad) testb mov mov lret sub push cltd add cmp adc xor out and jbe dec test sti push lret out cmp scas adcb or inc bound xor repnz xchg fcompl jo aas div dec sub (bad) out imul and xor mov push mov or push ret add sar cmp cmpb mov pop mov add cli mov fnstenv inc insl xor test push and and dec (bad) std xor jnp les or adc or dec (bad) lahf jns inc and jle dec sti in repz cmp mov hlt or imul leave jne in dec cmp jge xchg jne sbb or pushf mov or pop out lock jl push pop pop cwtl jns inc sub fdivrp loop mov aad sub sub cli idivl pop mov add push sub pop pushl and les pop cmp sbb or jbe imul das xor fwait gs ret fstps lea cli clc cmp mov (bad) into jecxz insl ret xor xor sub xor (bad) iret mov stos sub lahf mov mov nop mov pop dec rclb and ss rol lret scas clc fisubl pop in movsl (bad) mov leave jle jp cmp mov pop cmp mov pop lea nop dec cmpsl adc (bad) enter insl adc xor aaa mov pushf movsb mulb (bad) pop mov adc xchg sbb out out pop mov lahf jns leave out lahf ret mov or pop mov jg loop ljmp sarb cmp loop inc lcall or jecxz pop xchg push adc xor pop cmp xor rclb mov imul and or out mov pop sub mov inc in pop fs fistpll std pop fist jg mov das mov jmp jle cmp (bad) jle ds enter stc loop lds (bad) ret shr push loope clc mov cmp lret shll fidivr add lods sbbl sub xor mov movsl faddl loop mov push pop loop ret pop inc lds inc jmp (bad) xor std sbb addr16 xor push lds xchg jae scas cmc sbb jb test ja or cmp out dec out pop mov sub push scas and loope or ja add sub daa cli repz or cmp pop pop rcrb icebp push jle xor aad push pop mov lods pop leave pop xor call in inc jnp mov call idivl cmp inc jmp mov ret sub cmp xchg fist add add mov sarl xor sub stos rcll jg jl jb out int add out inc pop mov pop or jbe imul inc jle dec leave out sub test pop repnz xor add lahf out stos and (bad) add sti sub xor ljmp push rorl dec (bad) pop or cmp out leave or push jle ljmp dec in hlt and or loope pop xchg imul (bad) mov jle jg,pn xchg loopne test notb jmp rolb out sub xor fisttpll scas adc push or add and dec pop mov xchg orl pop (bad) adc lret xor sub sub ret das add mov popa pop ret rorl push ja add out sub stc movsl loop xchg push dec ret xlat or aas dec ja mov mov lret xor sahf mov out mov cvtps2pd mov popa bound fsub pop aad or stos loope xor das sub movsb ja pop pop out sbb push or adc loop xlat in addr16 ljmp jnp adc scas mov xchg call out inc push push imul adc pop pop mov (bad) jb mov adc mov jmp xor sub inc dec and stc dec cmpsl inc cmp imul xchg xchg lret mov inc aam adc fwait jp and push sbb xchg fdivs xchg dec cmp (bad) mov xchg aad pusha aam fnstsw add clc dec test pop cli xor out jb out aad mov jmp inc adc out push imul ljmp cmp imul das or out and es xchg (bad) sti cmp mov or jbe jmp sbb enter (bad) mov mov das mov insb or scas les (bad) push jns dec ret dec push loop jl push xor xor add call outsl sub dec push push popf push rol lret or (bad) mov (bad) imul mov pop sub dec popf nop ljmp (bad) cmp pop mov arpl pop ret rcrb jl (bad) mov mov jo xchg call movsb adc and mov mov jl leave push cmp cmp and cmc test mov jmp (bad) out sub pop into out es xchg (bad) (bad) or mov (bad) mov pop aaa xchg add push sub inc jnp and push xchg bound (bad) insl ja xchg jl loop sti jbe imul pop aaa leave cmc pop xchg cmc test xor mov mov ret fcomi sbb adc popf xor inc mov pop repnz or rcll outsb lret jl in sti dec scas sub cs ret (bad) dec into sti push lea sub push repz jge mov dec insl or pop cmp call in lret jl xchg pop adc pop lret adc dec bound fmuls xlat or mov cmp xor xchg jecxz clc xor (bad) inc daa dec xchg repz and xor test adc sub mov scas out adc clc repz adc (bad) mov dec ljmp xchg stc jge sbb jmp pop inc adc lods xchg roll rcrb xchg icebp std scas lahf outsl jge ja (bad) ret aas cmp adc mov dec ljmp enter das (bad) gs adc (bad) lret xor sub mov (bad) push pop test popa jo das add push add pop or loop xchg lea cs jb stos int3 pop clc mov (bad) scas jecxz cmp out cmc mov xchg sub sbbb call ret inc ret addr16 bound mov push (bad) jae add push push push add mov pop pusha push adc or push mov out outsb (bad) cmova les jmp pop pop mov mov push rol add sti add jbe jg sub lret idivl xor jl mov je and add push push mov jle fadds jg mov dec push loope loopne pop leave pop pop pop shl sub cld xchg iret xor mov add pop out out dec sti enter adc xorl shrl fidivl xchg scas or sub pusha rcll pop adc sub push adc sbb mov (bad) cmp dec shr add push not or jns add add mov pop or orl repnz push xchg fisttpll mov mov cld iret sar adc mov xchg pop mov nop add push push mov lret xlat push mov rorl jnp loop mul push ljmp rcrb jmp rorl sub push xor icebp mov aaa cmp fildll pop push mov orb inc adc sub mov fstpl or jns push mov pop mov xor mov or pop pop movsl mov jmp lret cltd (bad) out mov mov and dec jmp add ss add or test fs ljmp bound aad mov jae jl jg and mov rcr out das out pop push push mov dec loope fdivp sub rcr dec std adc test adc fidivrl or and clc pushf pop jmp (bad) cmp add loopne repnz pop pop xchg cmp mov add mov fsubrl jg dec clc pop xchg cmp jge pop pop xchg scas mov (bad) dec ljmp xchg xchg xchg push dec dec lock jecxz ljmp movsb adc add mov enter and push repz xor or mov pop cmp mov dec cmp mov imul mov mov (bad) loop (bad) mov cmpsb dec adc and mov cmp mov out sarl dec push insb push and (bad) and test mov and ds rol das xchg (bad) mov test sbb sub jl push sub int3 sub xchg jge imul popf data16 sbb daa aaa mull imul push jno lock mov dec mulb test xor mov push and pop imul dec inc je in jo lret pop jb xchg fnstsw push xor adc (bad) fldl cmp dec aas adc in fbstp pop pop loop,pn adc mov out in adc and scas test adc shrl jbe add sub jmp lods xchg (bad) mov mov push push inc (bad) xor mov add or sub pop fdivr sub xor sub je add and sti cwtl std sbb icebp mov jecxz lods mov dec lock mov lods pushf mov jge mov add xchg mov repnz sbb shrl (bad) out pop loopne cmp (bad) jbe ret add cwtl mov push int3 pop sbb push adc lret mov pop fiaddl enter sbb jp imul and jmp jbe das jle push pusha and or (bad) shrl adc repz loope sub push dec icebp das push cmp out adc and add add inc scas je les sub mov das add lock push in jmp xchg pop es imul cmpsl pop outsb (bad) adc mov dec loope mov into cmp xchg mov je pop jne mov mov inc repz pop inc outsb push lret repz pop mov xor xchg outsb jecxz add push jae sub mov dec mov or ljmp fucompp call fs mov std xchg add aaa xor jmp mov es mov xor fwait daa fiadd and sub push and clc xchg je or xor push std shl pop cmp out adc mov sbb lret xchg outsb sahf or pop add fistpl mov xchg in out mov adc in hlt mov sub pop jl lret ffreep and xor mov enter sub aas sub and ljmp sub pushf and ds or in cmp ret jae sbb movsb fisubr je xchg test (bad) adc (bad) out add dec decl jmp fstps add ds addr16 aam stc or add and (bad) inc add sub cltd pop mov and xor orb xor or xchg pushf mov vmulps fiaddl dec divb testl push xchg push imul stc icebp gs or xor mov (bad) or test movsl repz aad repnz and and sub iret cmp pushf daa or bound xlat repz call xor out loop xchg jne roll jle leave std out xchg sbb mov xor add sub inc jecxz int3 adc repnz out xor mov cmpsl push lods lds test xchg out pop call dec test inc sar ret push pop imul in mov mov inc loopne out pop mov cmp or jmp xor jno mov mov cmc mov es imul push xor scas lret push and push mov fmuls (bad) and xchg es (bad) push or mov jecxz dec jno dec icebp (bad) cmp cs rcrl out pop loope das fdivrs clc fcoml xor mov popl loope mov cmpsb adc sub sub cld dec out loop or pusha pop call (bad) mov add add jb mov xor push (bad) clc pop mov sub add rcll add add inc xor adc lret sti dec mov inc inc inc (bad) ljmp mov je jnp out and pop out pop mov pop jmp shrb push stos ja addr16 cmc dec or mov xchg lret fstps xor pop fsubrp push pop or mov lret out popf rclb mul mov fcoms dec sarb or or scas decl mov int3 fstpl ljmp pushl int cmp dec mov cmp ret fcompl cmc xchg sti mov xchg mov cmp decb adc sub add cwtl scas or dec lock (bad) fdivp aad jnp stc pop (bad) icebp jno cmc jbe cmp push or mov cli repnz test ds push jg jp test lods push mov or add or fcmovnb xchg rcrl imul aad scas pop repnz jns cmp sub sbb dec jns xchg repnz mov xchg fxch inc jg jnp add sahf sarl rep dec mov xor xchg adc fimul add rolb insb add mov (bad) push push cltd fcomi inc push popf mov cs bound out and stos mov mov mov adc es je jmp or outsl (bad) ljmp inc xchg enter or sub sub cmp cmpsb xchg adc lods adc dec aaa or jmp mov es fsubrp sub and mull and sub popf mov xor imul fwait mov fadd add push jbe mov rcrb xor iret and mov icebp inc push adc iret sub adc gs lret xorl dec in adc jmp loopne int3 (bad) or sub lcall or (bad) ja or or and inc jl pop mov cmpsl pop pop in mov cmc leave jge call xchg lods add ret jmp out test (bad) jecxz dec mov dec adc (bad) call mov fisubr or sub ja scas daa xor jmp jle or sahf (bad) es test xor fldenv mov jo mov imul scas inc stos leave mov out movsl ja sub mov ret adc repz push adc sarb dec and lcall in inc dec cli xchg loope inc mov scas cwtl lock mov push push loop (bad) into cmpsb dec sbb xor sbb loope movl mov dec pop mov push xlat and in out pusha add push das or ret scas mov xchg xchg cmp (bad) xor iret js and mov inc rcrl sbb and mov pop or push sti shl out mov adc or daa jnp adc cltd (bad) clc mov lret mov jg pop jecxz (bad) or dec std sahf mov xor call push shr sbb nop dec sub cwtl jle fiaddl fimul test loop cmc (bad) mov mov dec test jecxz notl mov dec stc pop dec lret xchg test add cltd (bad) fisttp div shll push push xorb in push ret icebp pop mov in in mov les pop (bad) ret and mov mov mov dec scas (bad) in test sti mov enter cmp adc sub pop mov xchg jne sarl out dec imul mov pop add and enter leave add mov dec rorl push dec xchg mov shrb sub not and and mov add mov add into jo add pop adc stos iret shrb ror adc and sbb and mov or add notl push pop icebp inc push stos fdivrs add dec adc jo ss jle mov pop xlat sub sub leave neg xor mov fisubl iret cmp push or fwait shll jo lret out lods jb (bad) and repz mov and pop fisubr xchg or push dec out jne mov mov (bad) dec stos sarl bound movl jns ret loop,pt movsb stos cmp fistpl add and (bad) ljmp push mov mov call adc out movsl cmp xchg pushf bound cld jo push dec push mov xchg (bad) decb pop dec mov incb mov push jnp xor fdivrs xchg add mov mov enter jmp std rclb ret gs (bad) lret fldl and add cmp enter push adc ljmp xor adc add adc enter sub gs push dec ljmp jb pop fidivrl fwait popl repnz outsb (bad) hlt pop xor popf jl lret fcoml mov mov lret and popf jns xchg data16 (bad) mov lret into xchg pop or repz and divl sub jge dec mov es and xor jecxz xchg mov jno dec repnz out dec iret cli lret pop xlat lds or add ja fwait xchg xor dec lret les jmp lret in sub xor scas jmp ret xor bound cli pop dec pop xchg dec mov aaa jne and mov push sbb aad subl or fdivs xor fldcw and out repz xchg ljmp adc cmp daa lds repz cmp pushf sub jno and (bad) or or jnp cmpsl aam jp in xchg pop or pop lds cwtl (bad) dec ret cwtl gs idivb loop push add incl bnd pop mov jmp sub xchg fstps pop mov dec (bad) stos sub mov stc cmp insb scas movsb jg pop cmc icebp sub mov icebp xlat jns test sub mov dec mov mov arpl sub or and xchg mov popf xchg incb and mov adc daa add out sub and mov enter mov jge sub idiv sub sub popa cli leave fsubrs jecxz push mov mov sti je (bad) mov fcomps je mov clc push dec mov pop and test jle aaa dec or les sub sub das add add push push mov (bad) cmp das call aam xchg mov js cmpsl rorb and popf pop cli pop mov mov push jmp adc mov and jnp jo push mov popa data16 dec aas loop ror repz jmp mov ret add in mulb sbb cmp das mov adc mov jl push pop add dec (bad) sub popf jnp sbb sub sub lock and jns mov mov inc (bad) and mov jmp cltd sub icebp push inc and iret ret push mov nop pop das in push cmpsl in fadds ret push add and shrb dec call out push aam ljmp sub pop and push push mov jg lahf das sub dec mov adc push (bad) repnz mov cld jae ret push jno into pop rolb stos test pushf negl sbb pop les xchg and insb js js mov add out dec cmpsl sti dec (bad) lahf shl cli divb test adc xor jne mov xor mov loope lahf sbb leave dec mov xchg hlt mov sub push or mov sbb in xchg test icebp icebp dec jg mov and jo and add jmp adc gs mov sub leave jmp or dec and mov mov cmp sub sbb stc jg pop das add jno orl cmp sarb sbb lret mov jae or mov fdivl pusha and push dec dec scas sub ljmp cmpsb loope mov adc cmp outsb add stc mov sbb loop jmp das out jne aas fwait aad pop ds inc mov sub jp cld stos mov leave (bad) cmc fld imul xor push (bad) xor dec inc (bad) dec inc mov int3 add and aad ljmp ficoml daa jns jnp lret lcall (bad) xchg mov mov test mov jg mov fnstcw and fs or fs mov pop jmp pop jl fs and (bad) cs test xor (bad) call lock (bad) xor outsl jle aam (bad) and xor fadd xchg std sbb call out dec sub aas xchg mov mov sub pop bound jp pop lret aas and shrb xchg xchg xchg icebp pop cmpsl std adc inc jg pop stc repz mov inc jbe sub sub pushf or jne pop pop pop bound inc sarl inc mov xor mov ds fwait roll pop mov jmp shrb inc jbe inc sub ficompl sar mov lret inc (bad) and lret jg lahf (bad) adc scas dec xor pop jns dec or in push les stc out pop ret jle jmp int3 cmc mov in inc jns test and dec mov mov clc sti pop shl sbb dec mov jmp aas sub add mov (bad) popf xchg imulb add cmp pop lret push mov adc shll fisttp pop lret int3 inc adc sub sbb mov cmp ficom cmpsb lds mov pop mov and sbb mov and adc in ret lock dec (bad) popa mov xlat mov push cld adc repz bnd and pop cmc adc mov add and xor jmp mov xchg call sti in je into (bad) out lret mov scas fldl (bad) jge and mov mov fimul scas lea cmpsl mov cmpsl push inc jne pop repz sub xchg sti pop adc in mov and and mov (bad) shll ret (bad) xor iret out bound rcll iret lret xchg jmp push cmc and outsb movsb test dec ja cs mov sub push inc pop push je pop lcall pushf dec leave cld (bad) int jnp xchg scas mov add sti vhaddps sbb clc dec mov imul jecxz mov dec lods in nop dec dec sub or sub or and iret xchg jns dec dec add cmp stc std leave pop jae das ja push popf in mov adc pop mov (bad) mov sub sbb dec dec sub mov stos xchg ja (bad) xor ja xor and ds in push inc ss or mov pop and push add test stos gs cld ret cwtl mov int cmp cmpsb jmp mov push cmpsl push cltd lcall dec aas leave add xchg daa adc push shrb jp dec lret or fnstcw sbbl enter pop lahf add push mov std shr int3 xor mov call pop add lea mov (bad) icebp add dec aaa int3 cmpsl mov xor or shll movl pop adc cwtl xor (bad) std cmp (bad) jg aam dec sbb or mov xorl divb hlt sbb pop xor fwait or mov adc or clc std dec add or mov lcall cli add push mov jnp ljmp ja inc sbb and rcrl pop stos pusha lret pop xor and push or cmp cmp mov jp out pop push mov in push sbb lcall rcrb ret inc push mov icebp jns add dec and fldl or add clc jae push shl inc lahf push pop mov in pop nop lods sub pop jecxz pop out insl inc (bad) insb jge add push mov shrb sub add pop ljmp stos loop mov cmp push leave xor loopne (bad) jge push mov test and adc out lock jnp adc push push push xchg shll add push push imul (bad) add push int into test and adc pop add add dec nop into call mov or lret rolb dec ljmp nop inc mov pop repz xor xlat pop mov lret push push and in std ja ljmp mov imul mov mov or pop sti pop shlb ljmp or and sub gs out jns dec insb mov ret xchg ds out adc cltd subl cmp pop mov mov jmp movsb sbb insb (bad) iret pushf mov xor pop adc xor pop pushl stos xor pushf xlat xor xchg xor sub push fwait pop (bad) cltd sub lahf push notl out add push and mov cmp ja mov or jb xor cmc inc pop outsl call (bad) sub add (bad) pop sub adc dec sbb jle pop mov dec (bad) bound pop mov into lret adc aas test mov std outsb mov cmp add mov lea sub sarl and mov mov out dec imull mov stc mov sub (bad) xor cmpsl mov out cmp negb inc xor in hlt (bad) mov mov cmc idivb fnstsw stc outsl gs in aad xorb adc repnz lret int loope cmp into ffree mov pop xor scas add fcoms cli adc loop nop test addl jno out lcall (bad) adc xor insb sbb mov pop and push or or add dec and mov leave enter les repnz push jp add cltd sbb ret dec or icebp push (bad) cmp fidivl (bad) and sub xchg pop enter fldt mov sbbb popa dec call std push mov xor mov sti iret loop testb sti xor out jg sub mov mov call mov cmp popf mov pop pop mov push sbb insl ret inc pop cmp and daa hlt mov into mov fcompl adc pop push push pop xchg (bad) xor fistp pop rclb xor (bad) fld aas jmp insb pop std int3 movsb lret loopne int sbb mov or push mov into stc test and jg xchg dec stc out fcomps add add out fnstcw in out cmpsb cmp cmpb cmp stos sub sub mov scas sub push bnd pop jnp das pop sbb dec mov fnsave in out lahf jle roll jbe and cwtl rclb mov xchg les fsts (bad) adc xchg icebp and enter lock xchg lret mov leave pop and lret aaa cmc in sbb sbb add dec dec (bad) fs push movsl std inc dec inc repz xor mov movsl movsb ffree sbb sub push pop push repz es xor inc arpl imul daa shll cmp pop sbb xor popa popa cmpsl imul mov xchg in jge loope xor (bad) cld in lds cmp dec (bad) jmp lret aaa dec or (bad) loop ja adc and inc cmpsl xlat (bad) pmulhuw data16 loope cli imul (bad) imul movsb mov or xlat xor fs ljmp fsub mov into xlat cli lret push pop sub aas sub cmc (bad) pop fmuls inc push shrb mov jbe adc mov mov fcoms rolb pop movsb incb mov movsl call movd add xor pop mov fisubl mov sub pop popa mov dec std and divl push (bad) adc mov mov icebp pushf add sar inc fcoml scas loope fldenv inc xor xlat ret mov mov pop sub lods fs sbb ficomp movsl add pop (bad) pop add jmp sti cmpsb addr16 xor clc je adc add sarb js enter push (bad) xor shrb scas and xor or and mov daa les jle push out sub (bad) fisubrl imull cli lcall lahf cli icebp lods jns xlat loope cs fwait cmp sub add sub sub inc push mov or ret int push mov movsl cmp std xor adc cmp fildl sub xchg daa and icebp stc mov rorb mov dec mov hlt aad test push leave jge pusha std jno dec ret mov add jmp xor es fldenv add push pop cmpsl sbb jp daa mov push jns es jg sub add xor sub shlb shrb sub mov xchg jne mov shr cmp (bad) xchg jge (bad) ret xchg jg or cmp xor xlat and sub inc sub call mov scas mov pop mov cmp out sub cmpsb cmp and pop outsb mov (bad) ficompl pop test imulb mov mov sahf outsb push pop rol add xor mov (bad) adc add mov add movsl jo mov xor xor jns cmpsl sahf jle repnz jnp scas xor or jno jp mov scas dec jp jg pusha rol or sub cmpsb mov cwtl mov scas xchg mov mov stc loopne call jno loope adc (bad) incl or sbb dec arpl xor mov pop mov stc leave (bad) into mov test mov movb sub push dec loop xchg loop add jge sbb inc push push sub add mov mov dec scas xchg notl push mov sub ljmp mov sub and idivb repz imulb cmp inc and (bad) mov incb pop mov push xor add and pop xchg mov imul bound pop cmp or (bad) cmp jnp out dec les ss jp std stos test mulb pop (bad) cli inc or inc enter adc sub outsl in mov (bad) in outsb lret pop jg sbb push ljmp cmpsb mov mov add mov push cmp mov cld adc sub mov icebp dec call add cmc jns repnz sar push les stos int cmp sub sub or movsl lock mov xchg std xchg pop mov call dec push aaa xchg mov mov cmp rcrl fidiv xor and cmp jmp mov jp mov sarb aas mov inc stc xchg shll jno jne lock mov call icebp aad into xchg jnp (bad) adc ss (bad) mull mov or pushl pminsw pop lods out inc addr16 cs sub or call inc mov pop sbb jne (bad) fldcw sub rcrl mov sub lds sti stos mov std pop sub je push mulb inc fs in and mov or adc movsl jno inc mov cltd out das lods fimul ficoml jmp enter into fstl or add sub stc (bad) push mov push gs daa xor mov daa mov sub jnp dec cmp mov add cmp add pop es and decb xorl lea fsubrs iret mov rorb push mov mov daa shlb repnz pop jns pop add or ficom fisubl or (bad) mov adc pop loop or sub fcomp wbinvd cltd and data16 or shrb ret dec or lret lret jge (bad) lods adc scas repnz ret gs mov scas daa mov jnp lods jo pop negl shrb stc xchg ljmp jnp xchg push (bad) fmuls dec cli jne mov xchg out push clc and ljmp clc addr16 ljmp scas jmp inc repz adc inc orb mov xor lea sub stc xor mov push dec std mov into faddl and mov pop mov pop pop out sub call pop lret add dec ljmp xor jp add lret sahf or out lcall and jge sub push pushf mov test push mov idiv addr16 jmp adc (bad) into mov inc and lcall ds iret adc sbb and and pop test roll mov or xorb call jns xor ja sub dec rcrl loope ljmp js dec and mov xchg gs mov sbb test mov out or adc (bad) scas ret sub pop stos scas dec pop into sbb or sahf es sub loop ret mov mov jb mov pop jns dec test fdiv xchg pop mov testl dec or (bad) loope jbe fildl cwtl mov bound fist and in xchg xchg fs in test mov adc lret sarw aad add fisttpl or sar dec cld js push pop sbb push mov das inc stos push sub cmp aas call or (bad) daa rcll and mov fmuls fwait pop add nop dec mov imul mov das rcrl xchg sub mov lret and aam loop shrl leave cmp xchg ds add mov (bad) and outsl out daa repz idivb or jp dec leave stos adc xor mov pop mov cmp inc (bad) jecxz pop mov repnz sbb out test imul call js movsb fiaddl fnstcw and add sub shrb jmp (bad) mov jmp imul fisttpll fstpl (bad) dec ljmp clc xchg mov mov fptan in (bad) dec push or fucomp clc pop fildll dec (bad) dec sub out sub and je xchg out mov test sub push mov lods lods inc ja adc or push push dec stc push or shrb mov sbb xchg xchg stc pop dec daa pop insb or sub daa dec loop int3 add mov xor fwait stc pop (bad) sub sub nop sub mov jge mov add (bad) les cwtl (bad) mov rcll movsb cmc outsl cmp xchg mov xchg fsubrl jbe dec lret int3 jl dec fcmovne sub scas push nop inc pop jmp sub inc sub lret sub out aad mov or aad into dec xlat int cmp xchg movsl mov xor daa (bad) pop sbb pop jge cltd cmp sub (bad) xor imul imul xchg push nop pusha (bad) or and (bad) jae mov sub (bad) pop cmp out dec mov mov push (bad) cmpsb and push in add out adc btr xchg fcoml mov xor fistpll loopne rorb add jne loopne mov and test add sti lcall jo loope mov daa cmp adc mov test popa jne aaa dec lcall inc pop mov mov jmp cltd mov xchg fldl das xor les sub test mov cmp cld out and push icebp sti adc dec and push adc sbb push test cmp ret dec add add bound fnstsw sub inc or mov fstl in push xchg pop mov xchg pop ret (bad) and or sbb pop mov (bad) lret cmpsl dec mov sbb imul dec (bad) mov sub imul fstpt rcr mov pop ret call (bad) (bad) sub or outsb out aam dec ffreep jnp lret inc dec inc addr16 loope out pushf test cmpb mov sahf out pop and jmp sahf adc mov mov push push nop in pop scas xor xor bound dec out (bad) mov data16 ret or or xor sub pushf adc pusha add xchg add (bad) leave ljmp add clc mov fsubrl or push mov mov xor inc lock xor mov sarl in adc xor lret add add (bad) xor add popf push sub xchg push fdivrl ret push inc lret sbb lods out mov int3 lahf or xchg mov or leave pop and push outsb push adc fimull ljmp xchg inc inc xchg imul daa pop addr16 jne pop dec push cmp adc mov xor scas cmpsl jns in outsl mov xor stos push mov ret jb popf ret (bad) jl jmp loop leave lret rcr imul cmp push pop test nop aam or dec lds jecxz (bad) notb cmc faddl sub add push jns (bad) and outsl lock xchg rclb and adc mov lods outsl dec mov xor in jne icebp ja ds or and js mov pop mov sub sub pop sbb mov lcall xchg (bad) mov xorl jle lods xchg mov jl pushf adc pop mul dec mov (bad) dec pop mov or and dec mov adc jns addr16 mov or repnz (bad) fidivl or adc mov insb test adc mov subb ljmpw imul xchg ljmp jle pop xlat adc or cmp divl cmp and leave (bad) xor movsb xchg lret fnsave lahf jge lock cmp add cmpsb cmp sbb cmpsb (bad) push xor and ret push adc dec add gs jge mov push push xlat xchg push cmp cmc dec pop sub fiaddl loop and push pop jg (bad) and out xchg push mov mov dec in xchg les iret stos fnstsw fnop push movsb out ret jne mov mov sub mov dec xor sub mov jne mov xchg dec inc add out jo mov xchg mov insl ret subb fst push cmc shrb rcrb pop data16 inc ret dec cli xor dec lret ss rcll cmp (bad) push lret (bad) lahf sub cwtl (bad) icebp dec and lcall rcl mov ret pop mov sub sbb push lcall and adc fdivrs fisubl out mov loop test push les in jnp cli adc mov test and inc dec fild rorl push xchg lods lods jge xchg ljmp mov (bad) dec fistl cwtl out push and mov aaa std test pop adc xor in das out adc cmc (bad) out arpl lret dec lret xchg repnz dec lret sbb jle pop pop cmp sub pop xor or inc push dec xor jmp add xor add cmp cli lret mov push xchg add mov cmpsb aad and lret pop ret cmp sub out inc pusha scas out add cmp jbe xor gs jmp fucomp hlt imull pusha mov mov insb rol add add test or test mov int je push fsts mov and mov icebp cmp (bad) mov popa das xor and gs mov mov loopne add cmp sub cli sub (bad) mov dec push jno xor (bad) xor arpl pop mov popa inc icebp mov sub jg push inc or mov test sub pop push xor test mov (bad) jp mov cmpsl je push add ljmp xchg repnz xlat add push rcl sahf mov scas xchg cli popf push stos aaa sahf sub push out cmp xor ss jb adc out test push push mov pop and addr16 fisubr xor mov repz xlat mov bnd cltd sub (bad) gs and mov or lock lret roll pop imul pop dec std iret xchg mov pop push mov jmp xor lret shrl push pop fs mov mov lds ficompl fstpl in lret mov dec enter into sub mov adc mov dec out clc movsb push mov idivb cmpsb xchg mov dec orl rcl dec mov push cmpl sub jmp inc test iret and ret aad push inc or lods in xlat outsb jns enter xor in add and into mov insb xlat rolb adc rorl scas mov lret mov pop out pop push loopne into loopne mov jp mov inc push mov add jecxz adc mov dec and pop out or cs pop sar or test jnp in xor push movsb gs sub fsubl xchg (bad) jno arpl (bad) and lahf ret cld sbb pushf idivl iret and fisubr lret push jno fstps cmc cli jmp dec cli cltd orl cwtl sub sub cmpsl aad jno xor jnp jnp,pn lret xor icebp cmpsb ret push xchg cmp out push pop out cltd sbb xor cmp sub jmp lds das adc lds cs aaa sbb test add scas outsb loope (bad) jbe push sbb repnz ljmp mov push sysret sub (bad) and mov push lods xchg mov fmulp pop pop push sub pop loope jo (bad) xchg call inc pop (bad) sub xor xlat cmp mov sub mov orl add xchg xor out mov push sub mov cmp lock and mov into sub or pop mov fucomp cmp and pop push out mov mov fidivrl xchg cmc mov pushf xchg aad cmp or pop xchg mov pop data16 xor jge je inc enter xchg xchg icebp xchg scas adc pop pop cld mov loope dec add or (bad) jmp lock sbb dec leave sub inc fnsave push inc sub push sbb push pop mov jle fisttp into in mov or popa leave (bad) icebp dec outsb sub imul cmc inc sub push shrb notl loope xor add mov or xchg std xor adc das xlat mov push cmp sub cmc cmpsl jnp adc ljmp pop test aas fisub loop add lods inc movsl les (bad) or fisttpl (bad) sbb mov add mov push rclb jecxz dec pop pop (bad) fisttpl dec add and movsl jle push jo loope dec adc fildl dec mov jmp sub fimul pop cmc jnp mov mov mov xchg mov push imul sub adcb adc dec cmpsl push push das out pop sub fcompl daa xlat (bad) mov call dec (bad) pop sti jb out es push cmp daa es cmp push in mov lret mov clc jmp pop push cmp or push sbb cmpsl cmp and sub pushf jl push inc jg gs inc and shl lret imul pop mov mov xchg sbb pop mov hlt xlat xor bound out push pusha mov push outsl repnz (bad) mov dec lock int loop cltd push icebp outsl cmc mov std in lret leave pop cltd outsl leave (bad) sbb rol sti lret xchg pop sub push scas repnz or ljmp popf notl (bad) sarl cmpsb stos and (bad) sub dec cmp repnz mov popf mov mov imul push xor push iret ljmp ja jae (bad) hlt mov je loope das je add sub add outsb in inc xchg jmp ss aaa push and not cmp rcrl js push xor imul sub sub test lock mov sahf xor adc inc pop imul in daa pop out and in shlb jecxz pop xchg dec int3 fidivr mov jne xchg lds data16 shrl fdivrs sub and test xor fistl les lret xor add mov add daa sarl xchg push xchg fwait push ljmp lahf lret push stos (bad) push mov xchg xchg add cmp push dec xor jns mov ds (bad) out mov push mov and cmp pusha xchg sub or sub out pop dec (bad) push jmp jmp or dec (bad) clc pop loopne mov push insb je xor fisubrl and xor in xchg decl insb mov icebp pop fs mov ret sahf into gs fucom add jnp fwait mov adc popf ret xor or dec das sub fwait ss or out hlt cmp stos lods stos xchg scas lahf inc out inc cmp mov and cmp (bad) sub xlat notb or sbb sub jnp xchg dec adc sub data16 lock jecxz mov stc cmc pusha repnz sub insb lret daa xor pop repz mov stos pop add out dec push dec bound cld lret push or lahf loopne cmp push mov int cmp pop push (bad) xchg or popa dec int3 adc inc mov fist sti xchg iret pop iret cli xor mov dec add ror or xchg sub mov inc mov pusha mov popa (bad) jns std mov xchg jns xchg sbb test add pop cmp (bad) or popf pop adc xchg and sub call xchg xchg (bad) mov adc cltd add mov sub jno leave fisttpll push push icebp packuswb pop mov (bad) add in sbb xchg clc out xchg sbb mov lds sub mov in inc (bad) stos xor xor and into mov sub push or repnz dec mov xor test je dec and xchg and or rcrl in fsubr daa fwait ja mov ljmp in add lret pop sbb xchg rep outsb in mov mov mov adc lods mov pop mov mov adc rcll or add and mov xchg mov jne lret and imul cli repnz xchg pushf and xor jmp jns clc sub ljmp rcrb jno out bound cmpsl pusha sub imul pop sbb and or leave add mov inc bnd mov push push xchg mov mov lock andb out mov mov (bad) adc stos cmp pcmpgtw and cmpsl fprem1 lcall push dec jmp stc xor fisubrl mov and (bad) lret pop add push movsb pop negb das xchg push mov popf (bad) pop push ret jmp sub aas cmpsl out mov xchg push shrl pop or divb dec jae movsl nop in fidivl and stos mul adc aas lret or je icebp dec repnz jo rcrl loop pop push gs or out xchg daa aam jb in xchg inc fildl popf and jmp gs mov bound (bad) outsb add out and sub xor int3 cmp adc and std fs xchg insl loop push push in mov cmp cli out jg jo mov imul enter xor arpl push push push repz ret mov je test test dec jmp int cs sub xor movsl sub jnp or pop xlat pop add cmp imull jns or pop push in pop pop loop mov lret mov in lahf test cmpsl jo pushl (bad) movsl (bad) (bad) call stos lret push or lret jbe fs call jne mov sub pop sti or jb iret ja mov sub pop out cmpsb pop push repz sub (bad) cmp add faddl sub aaa rclb movsl in fidivrl (bad) into mov out adc int adc cmpsb jbe mov or sub ret adc add ds fsubrs (bad) lcall cmpsl sbb xor mov inc pop scas roll sbb das sbb jmp (bad) pushf and mov fs sub sub sub xchg dec adc mov ljmp mov notl mov push js movsb mov xchg es int xor leave jmp popa adc adc and mov negb push inc enter into stos mov lcall pop and jg pop stos mov inc outsb test mov jecxz lcall push enter mov jne push cs add ljmp sub popa pusha sub sub push xor fidiv and mov mov and sub lods push leave ret pop ds das jg inc and dec inc xchg pop pop xchg sub and and sub idiv (bad) or xchg in push push mov or mov inc or cltd push ret mov jns xchg decl push jge lea daa push mov sub sub mov shrl notb ljmp or loope rorl mov sti sub ret dec push pop movsb lods adc lea push mov cmpsb es aam insl push fsubl popa repz test jne mov sub mov into outsb xor jmp leave int outsb mov gs or testl and adc jno popf dec dec cwtl das fwait inc das ja jle decb xchg sub les mov mov pop xchg add decb lock shrb into dec lods pushl ret add in das mov adc xchg sub add add fldt mov (bad) jo (bad) pop inc or ljmp push inc dec inc dec imulb fimull or sbb add and pop (bad) xor mov xchg pop loope negl lahf jo xchg dec push ja xchg jb mov pop add arpl rorl xor sub or xchg mov xchg ljmp mov pop pusha test mov incl cmpsl push out pop xor fs (bad) pushl ss mov xor mov sbb mov fdivrl mov pop loopne iret jmp lret leave push gs data16 or adc mov fdivr divl loope xor add sub loope sub cmp stos mov push or lret dec je xchg inc idiv out pop mov sub mov outsb fs sub or xchg pop fistl gs rcrl andl ljmp daa jecxz ret stos out adc pop mov xor fadd and and insb and movsb and cmp adc xor test dec call clc jp mov dec adc ljmp cmp xor out test inc repz into cmp bound pop pop push outsb mov xor (bad) decb bound mov add mov mov cmp sub sub cltd sbbl xchg sti sbb (bad) mov dec inc ret and adc in int flds fdivrs add sbb push dec and sub jle in add aas into mov roll mov jbe push and mov (bad) rolb into push (bad) les mov dec loope insl push shrl add xor lret mov sbb pop sbb pop cmpsl mov leave out xor pop mov dec dec mov into pop mov dec (bad) jmp (bad) jecxz cmp or add bound cmc and (bad) or sarl leave sub ret mov stos cwtl jne pop mov or pcmpgtd dec out ljmp mov ja andb ss lahf mov or ljmp pop xchg sbb sbb mov sbb pop or jns les adc push push div in mov and push sub and out xor ret (bad) (bad) icebp xor pushf dec jae dec mov gs inc loop xchg and xor dec xor les sub mov push xchg scas fs stos xor mov jne mov mov ficom movsb ficom enter (bad) sub ljmp or mov lds adc repz stos fs out out pop (bad) sub mov jmp push mov div dec mov push sub xor enter jne mov rol in xchg das and (bad) and jne,pt sub push dec popf jl pop and insb push jno (bad) pop xor mov lret repz sbb rep push add out cmpsb or sub test fsubr dec or mov xchg jg push xchg das shll dec call cwtl fsubl mov das ficomp adc ja test add out add popf inc cmp jmp dec into jecxz adc fldpi mov xchg xor pop or out loop je cmp lods nop jle sub push pop out cwtl mov xor imul out pop popf push lods (bad) leave or aas movsl add fsubr mov cs lret adc pop or cli jg dec adc and and nop push (bad) cmp out xchg push js and dec sbb dec mov dec xor bound mov mov stos frstor lahf sarl pop sub add insl dec dec sub adc ficoml cmpsl mov fmul data16 add insb cmp (bad) aad dec jbe mov fnstcw mov sub inc iret dec sti cs sub out fld aas adc mov pop int3 jb mov pop xchg leave xor iret xlat mov mov inc icebp xor (bad) ret jmp (bad) out mov mov and mov pop mov icebp adc push xchg sub or aad fadd mov mov roll popl sub add sub xor or mov xchg loope call lahf push fisub sub jg xor xchg lods and stc imul in cmp out ja dec cwtl xor mov nop and lods pop loopne jmp and sbb lds fs push pusha fildl add xor mov pop fxch sub add arpl outsb leave aam pop pop and mov inc scas mov int3 push (bad) out sub xor out xor out xor ljmp and add mov push mov mov fsub inc push std cmc jge pusha not push push pop jle jnp add add or out outsl jnp add call nop sub mov std dec in shlb push xor add sarb jne cmpsl mov and stc pop adc adc lock jnp add cmp pop push pop ficompl cwtl dec xor or xchg fidivl orb sub into pop inc xchg ss daa jmp fdivrl or pop sub iret cmp sub lds aad and jns in scas hlt lds adc dec pop push in int (bad) sub jmp xchg ss lds cmp push mov xor aas and and adc xchg or pusha out jp ret inc or lea push pop sahf mov inc add push add add or mov cmc or in sbb dec mov pop inc sub (bad) xor pop sbbb cmpsb nop pop out jg call add das neg add dec imul jb (bad) out xchg hlt mov mov pop shr and sbb jecxz mov roll (bad) movsb in pop rorl or jno aas jmp adc sub xor ficoml out jp adc pop pop or (bad) mull adc xchg int3 xchg push dec xor movsb out fxch mov cli mov dec cli xor ds loope inc leave (bad) clc daa (bad) xor mov mov bound mov imul cmp push add out sub cmpsl push jp or mov xor mov les sub or xlat jge jge dec adc cmp scas jo pop xchg test (bad) jno add lret lahf jns dec pop inc fs fstl pop inc test aam fs xchg (bad) and cli sub into cmp push push push leave stos popf xor or mov pop shl xchg mov or mov enter sbb xlat push cmp out mov ljmp and or push das sub mov mov inc add fimul dec xor leave cmp rcll lock sub out adc and xor mov imul xchg sti mov dec xor mov ret or loop or cli das hlt dec push xor mov inc push out out xchg (bad) cwtl movsb or or jne fs lock cmp jecxz xchg scas cmpsb adc scas clc call imul fistp jns sar dec push mov mov and or outsb repz inc ss ja sahf popf (bad) loopne lds xor ds pop pop (bad) cmpsb call mov lret enter call fcom movsl push cmp decb lods dec and into out das test xor scas fsubs sub pop inc sub cmp shrb scas pop sti jne mov pop mov cmp dec and push or mov pop stos int3 aas mov mov mov jl xor pop fldt jge mov cmpsb mov notl sub loope fsub cmc in mov lock out mov jmp inc jmp daa movsb adc pusha xchg (bad) in mov imul pushf xlat xlat test (bad) jg sub mov in ljmp aam enter aas xchg repz mov mov hlt dec dec ret mov xchg clc call xchg imul (bad) adc dec xor pop mov xor (bad) mov mov insb dec mov and fcmovu sarl loope call mov fs push popa int3 loope shl and fist rcl out sbb mov das lret imul mov loope pop imul and mov adc mov dec test lret jmp loope pop pop lahf sub ljmp push mov mov dec and jo lds sub jnp es cmpsl rcrl mull rcll imul ret jne mov daa daa jge push dec icebp clc mov mov xor lret adc call sbb rclb out stos fmul mov sti dec inc (bad) movsl (bad) pop jbe sbb add xchg out es mov mov jae subl sub mov pop push lret jnp sti mov dec xchg mov rcrl add (bad) pop test mov push jnp out idivl jne mov mov cmp or xor fbstp sbb lea push movsl ljmp idivl mov xchg jmp mov es fsubrl push lret or mov mov cs push repnz je (bad) push es adc aas mov sub repnz inc push popa hlt sbb arpl fwait adc sub pop sbb cmp insl mov jns inc push cmp aaa mov repz gs xchg daa divb push dec mov pop sub xor daa (bad) arpl pop add mov xor sbbl (bad) jl (bad) mov lods mov int pop pop fnsave sub into es push ret out pushf (bad) pop and fiadd ret dec int3 inc jmp je aas rorb mov decw out cmpsb cmpsb cmp dec and (bad) out sahf adc sub sub mov test scas xchg mov mov stos (bad) or cmpsl push bound xchg or pusha xchg sub hlt out sub sarl cld stos push cmp ja cmc dec fnstsw test mov inc fldpi loop lds xor xor mov daa dec push out mov pop jecxz dec enter js dec xor mov and push in inc (bad) mov and add xchg int3 jns les or dec aam imul add adc pop inc cmpsb sub xchg cs data16 mov xchg into fsubl sub sub out mov rcrb sub test cmp and (bad) popf insb mov mov lret pop sti pusha mov clc or mov imull rcl imul xchg les cmp dec jbe bnd or dec or sti jp in mov gs and add xor or push dec (bad) out jbe insb inc sub lock ret lcall pop leave lret mov add not out fnstenv mov add fld and insb loopne add les push pop rcrb mov dec lea mov ja cmp and imull jne fistpl (bad) push jbe ret jl push call movsb ljmp cld aaa in out sbb dec imul push xchg cld repz mov cld out int ret xchg stos dec and add lahf sarb xlat mov fbstp out aam into dec cld or inc mov (bad) mov add mov pop test dec mov mov sti jne mov dec mov jne repnz daa lret pop xchg outsl and dec jbe daa pop aad ljmp hlt jg push push push stc sbb mov repz adc test sub add push adc jno and push imull and ja jge outsb sbb mov cmpsl (bad) mov into outsl mov sub rcr jecxz,pn xchg out jecxz and sti pop xor xor insb ret ficom call ret mov and mov cmp mov add mov mov cmpsb lahf sbb or mov loop xchg or adc dec daa (bad) dec mov mul mov cmp dec add out lret iret jbe lret faddl ret mov lcall sbbb push adc or enter pop lock lahf hlt cmpsl push jne bswap xchg outsb sub shrl lret jns imul push jno imul ret jmp sbb cmp jmp negb scas bound negb (bad) inc add test in aam sbb in (bad) mov icebp out loop (bad) andb xor mov scas es pushf inc pop test adc jbe out icebp jb sub pop cmpsb add jb jae sub insl test and sbb into jno aad popa movsl push sbb lret xor jae or jecxz into stc ljmp mov or mov mov (bad) lret adc mov hlt stc push notb fdivrp mov sub push sub popf jbe leave pop push imul int3 out lds xchg (bad) out pop icebp lret iret adc (bad) mov sbb pop dec mov fist dec popa lods (bad) outsb popa sbb adc sti xor repz inc out mov lahf je jb repz (bad) mov add leave out out movsb pop and loop lret fcomi sbb xchg bound rcl mov or mov test inc out shrb xlat cmc dec xorl inc push ds mov scas daa fsubl icebp xchg jne pusha mov jmp out mov xor pushf jp cltd mov push adc cltd inc and dec bound (bad) jbe dec fsubr arpl lds sub xchg out lret jbe sahf (bad) and stc cmpsl in push (bad) (bad) fisubl iret mov into jl or je in lods dec push pop jl push testb adc sub and into xor or scas and push pop dec cld cmpsb mov dec dec icebp cltd das les call lret add xor adc mov ljmp push cmp imul push mov daa ret xlat and mov loope outsl jne stos bound mov push lret (bad) rcl jae or mov jno sub dec mov mov aas sub xor jb jmp inc xchg std mov jg jl,pn cmp (bad) mov add repz or fmuls dec (bad) jg mov inc xchg in push (bad) dec mov dec repz dec call mov ret push shrl push into and (bad) imul out mov or in inc ds sub cmp mov out je push cmp hlt (bad) lock out ficomp mov out mov pop sub loop shlb test iret outsl loop jb ret ss mov sbb loop,pt mov cli test rcll fdivl push ljmp cwtl movsb inc adc xlat jecxz sbb or (bad) stos (bad) fdiv call inc mov shrl adc jg xchg sub push and or mov dec (bad) fdivrs icebp or movsl pop inc je notb inc imul pushf insb out shrb xchg or rcrb sub jle pusha add xor add jmp xchg sbb gs stos je testl jl push lretw rcll or jge xchg pop imul pusha pop mov xchg sub or lcall add stos mov add cli jne lock xchg inc push or add pop xlat xchg mov popf cwtl das popf mov and inc sbb mov in leave fsts mov jecxz xchg xor (bad) push mov (bad) sub imul jo xor mov mov fs icebp jge jb push out inc jp mov stos bound iret jo xchg adc jb out mov fldl movsb jo xor jno lret hlt or out iret push out lret xor inc or nop dec push fcmovbe jae ror mov push add wbinvd in aad sub decb pop mov (bad) push ljmp not pop mov mov (bad) ja and fucomi pop imull pop xchg out je add and call and pop push sbb adc in adc jns or cli out dec and or mov dec aaa xor je shl jecxz ret jne pop addr16 (bad) and adc fnstenv dec sub ljmp movsb add lret (bad) daa dec adc lea pop inc fs out addr16 roll cltd hlt cmp jg xor (bad) imul or pop cmpsl fucomip mov (bad) adc push and mov xor inc jb xor sub dec push nop lret cmp dec mov cmp push or out mov inc mov fidiv cli nop (bad) movsb and test sbb outsb xor scas lds adc inc push adc dec lret lret sub andl (bad) test xchg push pop mov xor dec sub lret push ljmp fidivl sub test or cmp or repz xlat mov pop into mov repnz sub ret mov adc or cli (bad) or mov fwait dec add or or mov xor sbb mov int fcomps das jmp (bad) push ret fildll xchg decl sbb inc dec push insl or fdivp les scas xchg data16 jb adc or (bad) pop lret xor mov xchg andl icebp sbb inc movl and xchg xchg (bad) enter or (bad) icebp ret movsb push and xchg out xorl leave cli jbe push fwait inc nop xor insb mov mov aad lds (bad) mov dec jae into lea xchg sbb cmpsb inc fnstsw fisubl test jge rorb decl add scas sub or (bad) and shrl cltd inc cmp push mov gs fdivrs or add mov int3 push mov daa movsb movsb sub (bad) lods (bad) cmc into sarb pop ss cld push and pop test xchg dec in or (bad) adc cli (bad) insb and mov mov inc gs jl xor adc rcll cmp sub std sbb (bad) mov xlat mov icebp loopne sbb test out rclb sub or and push test out xchg pop sbb test mov lret adc popa clc cmp loop dec out rorl push sub and out mov sbb sub enter arpl loope push adc dec cmp sbb xchg lret cwtl ret mov in cwtl xchg sbb scas pop lret clc lret mov jg adc sbb cmpsb lds sub stc lea sub ror xor sub xor add mov test mov xchg jnp push mov xor adc lret idivl or (bad) jmp push icebp dec and dec fildll sti popf in xchg jo loopne mov sub sub and scas pop repz dec lret stos xor adc sti popf cwtl ror add out inc cmp stc xchg leave xlat or mov push adc mov inc or pop stc leave into jmp pop (bad) mov sbb scas adc pop in int3 and xchg xor ret test sub xor sub and cli fmuls and pop jmp xor push adc ja out (bad) in jne sub jmp mov and mov pop xchg movsb xlat fs (bad) dec aas out adc test stos push mov jne mov rcrl push sbb imul decb outsl dec lret push (bad) push xchg mov sti or iret fbstp (bad) or push pop repz and xchg xor mov adc pop fnstsw stc daa into (bad) push stos les mull xor sti sub push mov ja ja data16 mov fdivs (bad) lock mov movsl std or cmc pop test cld pusha sub cmpsb dec or fstl nopl or add mov stos je stos cmpsl jmp lods dec mov scas into ret aad push (bad) jp popf adc xchg push mov cli push dec sti sub adcb icebp pop cmp (bad) mov bound fnsave int cmpsl mov xchg (bad) push bound stc dec inc mov xor xor cmp adc sub xor rorl sar mov mov xor mov xchg xor dec sub out scas sub jg or xchg call stos sbb push sub lahf in jle cmp daa dec (bad) leave inc icebp fnsave dec xchg das jl and pop inc dec mov xlat fwait stos mov movsl xor add sub mov push (bad) pop loop mov and pop jmp sub mov sub dec xor and or mov sub lcall jns xchg adc xlat rolb fcoml lods das and stc push inc dec mov nop in add rcl lds inc and or ja push arpl mov xchg jne outsb popf inc sub xchg ljmp or jge jl in sub out sbb popa mov adc push pop out in sub (bad) outsb rorl inc mov inc mov inc add mov pop (bad) stos iret or sub cmpsb pop das ret je pop xor stos sub cmpsb flds mov mov pop push in sbb or mov ret fbld inc out mov mull (bad) ret aad ljmp (bad) jle clc dec xor call clc dec mov test push jne movsl add cmc adc xchg mov jl (bad) lea adc stc xor rcrl movsl dec lock movsl add repz dec and shrl lret dec mov mov mov (bad) lret mov data16 stos std les leave stc clc ret out mov jmp add jns mov aas xor jb lods popf lahf jl pop add jg leave movsl adc pop push loopne add notl xor iret jns mov pop bound out jns dec popf or jnp inc jns not jmp sub and into imul and (bad) repz inc mov (bad) dec aam daa cld lcall mov int jg jl ja pop lahf mov inc add scas dec lds in fstl cmp outsb insl popf mov push js xor pop mov jne adc sub cmp test adc jne jge sbb mov sub mov movl pushf shrb xchg mov add xor xor shrb (bad) enter cmp imull cmp and sub sbb xchg imul pop add cmp shlb sbb je out lds test and test out mov (bad) dec rdtsc xchg cmp and bound sub icebp sbb call adc jno mov cmp xlat je enter adc dec fisubr lods into lahf cld in push sbb push out nop and movzbl clc fsubrs (bad) repz notb das mov imulb xchg inc lcall dec loopne shrb popf jbe lret loop or (bad) gs dec mov cs and push pop push jne sbb orb inc push pop xor (bad) lret dec fs and jbe pop adc lcall (bad) mov fsubl mov and push jmp sub mov mov push and and jge movsb and (bad) push inc mov sbb (bad) xlat mov lods fnsave pop sub aas mov adc xlat mov das sub inc mov push push pop mul push jg fcoms mov pop es fdivl jbe xor push iret or dec add fdivrs orl fild sbb mov ljmp xorl sbb mov pop xor shrl sarb (bad) inc cmp and mov nop fstps addr16 xor lods je mov test int out sbb icebp (bad) cmpsb pop add sub or test jbe cmc shrb mov std pop (bad) imul or push sub test jns pop mov pop push scas add rcrl jmp or push mov adc pop fs pop mov xchg and not sub add fstpl pop mov mov icebp lret pop jb jmp sub sub popa loopne movsb push mov mov sub inc pop pop fdivl push cmp orl push imul fbstp rorb outsl jns add add sub arpl lods stos jge add aaa scas xlat jno incl cmp or mov sbb dec push call sub jns sarb iret jl adc add pop sub pop rolb xchg jnp imul mov adc out push pop add mov push push (bad) ljmp out adc or mov xchg xchg push mov xchg xor (bad) (bad) lock push sub pop mov add mov into movsl scas xor scas jno out jg int3 sub mov lcall push movsl ja sbb mov mov mov push out cs lods (bad) fcmovb lahf lock jmp cmp mov sub xchg (bad) cmp pop jno cmp icebp fstl ds fistl scas test add sub js mov push roll jl leave push cld gs add enter cmp fabs xor xchg sbb outsb inc push xchg (bad) fisub pop (bad) jno sub sub out aaa leave cmc (bad) add sub mov test mov xchg and cmp adcl bnd and push and icebp js jg pushf pop jno push fildll add (bad) sti test movsl add mov outsb (bad) and sub push outsb data16 dec push out sub push pop xchg push jb sub std mov out and arpl cmc std cmpsl aas jge (bad) inc cmpl sti push xor mov mov push pushl xor notl lods push leave pop rcr inc sub std mov lret sbb mov dec xchg mov out jge dec cmpsl adc popf pop nop shlb sub or cmc repz or cmp bound cmp popf pop add sub mov or pushf adc fistpll push or mov sbb repz dec cs stos (bad) fs pop dec stc lret sbb jns sub mov sub dec lret xchg aad sub out mov xchg fchs xchg add sub sbb lret mov mov daa or dec mov pop sub insb rolb daa lret mov loop test notb out or in push (bad) ljmp in cmc sahf jge adc xchg inc inc fistp sbb xchg aaa dec ret lods dec dec jnp xor sbb ficompl push push out adc pop add mov call popf imulb aad ss and xchg fmul and and jmp lock scas mov out cltd (bad) std icebp jno or inc add pop push adc xlat stc sbb fidivr jmp mov adc cmp xchg test stos mov cmp jl push loope xor inc dec sbb inc adc xor cwtl cmpsl out or out adc and ljmp push dec imul inc xor dec pop les pop mov inc push jb dec add xor aas mov ficompl rorb and xor enter mov cmp popl jle dec je xchg pop mov inc cli xchg ret test add into cmp mov pop xchg pop out cmp jno dec aam loopne inc dec pop dec jb ss pop test stos inc sub sub mov inc or cmpsl or mov popa bnd push mov push inc pop out jmp dec cs arpl xchg (bad) jmp mov out int xchg push ljmp mov (bad) in lret sar or pop ror mov push scas repnz fucomip inc outsl daa sub xor adc sub dec mov out es roll adc pop movl fimull and mov sbb or sbbb out xor adc mov push ret jae xchg and mov fidivl jl (bad) jne or shr push stc push xor xor or push (bad) cld inc loopne in loopne add push jno les lea in xor mov or xchg push scas repz jae add or xlat mov mov pop into leave notl ret mov das sub jbe sbb mov pusha jae or popf pop inc in sbb repnz ss add mov add scas mov jae sub ja imul rorb lcall rcll rcl pop shrl mov mov mov mov ret cmpsl add pop xor xor add mov (bad) sub insl dec stos adc daa add out mull lods pop rolb (bad) in push jo test movsl pop pushf dec dec (bad) ljmp dec popa add out in mov sbb mov leave mov notb dec (bad) dec push jge dec into rolb push retw (bad) (bad) sti sub clc pop ret out and (bad) ljmp jg cmp sub mov mov in clc out mov scas mov es sbb push gs scas in dec daa ret mov xor leave jno lods jne (bad) add mov mov dec or adc or mov gs fistpll sub les notl jl mov push sub adc or or cmpsl sub je and testl sub (bad) (bad) push or dec mov lcall cmpsl pop cmp sbb pop inc sub aas repz je roll hlt push pop jge xchg out icebp mov loop iret and push sub rorl mov or xchg xor fistpll mov mov push cwtl fistpl icebp and pop int cmp aad (bad) add fistl or xor mov xlat (bad) fcoms lret out mov xchg mov movzbl pop mov addr16 xor scas pop data16 lahf (bad) (bad) push int3 xchg add jns inc sub je jb xor push out sarb aad or add cmc add ljmp mov pop in push sarb loopne dec dec push mov cmp jnp xor cmp aas adc add sub je stos xor scas adc mov outsb mov mov pusha jge adc in ret scas ror popw loopne,pt lods test (bad) cmpsl xchg ljmp mov mov dec sub movsb pop mov daa inc xchg out push icebp cmpsl fsubrl pop fucom mov and mov rcrl fsubl inc mulb sub movb fistpll sub out (bad) mov mov sti icebp jo loope sub ret stos sub outsb inc mov add sub add add and sbb int enter mov jnp push pop movsb scas cmpsl pop pop mov push xchg lods xor lock lret adc lret mov jns xchg scas push in xor lods in cmp outsb sub push add add sub mov jge fdivrs dec loopne mov dec ds fst (bad) cmp sbb (bad) (bad) enter mov xchg fldl push mov fsts push dec dec mov jmp divl lds in in dec adc out lods mov sub cmp (bad) ljmp add mov dec xchg xchg (bad) and cmp mov cld and mov cli je mov (bad) (bad) jne stos mulb fucomp add das out and mov std gs out daa repz icebp add pop and (bad) mov dec inc sub fisubrl daa xlat ret hlt inc and xchg mov ljmp sub ret lods cmp js lret cmp sub push cwtl bound pop hlt into jne mov dec lahf mov jb mov test call icebp icebp jns out push hlt out xchg jl sub push roll cmp or mov jbe inc imul adc xlat fcoms or add in xor sub inc into cld iret xchg mov cmpsl les fisubr imull xchg (bad) xchg into xchg dec pop and das jb cmp cmp out mov dec lret dec (bad) jmp insl scas xor inc cs xor cli inc dec push loope xor movsl ljmp jecxz (bad) pusha and loope ret outsb jecxz xchg and cli int3 fimull rcll xchg jg mov je stos cwtl inc out pop mov repnz mov mov fbstp aas ret xchg test (bad) iret incb (bad) pop aas sub sbbb (bad) or add pop lds fsub pop shr lock dec adc std pop loope jb subb pushf lods cmp fmull sbb jbe lret inc sub xor mov push xchg mov (bad) or and fldenv mov in mov push push inc add jae les push lods inc es enter jg sub adc (bad) jmp add mov dec cmp ja out mov daa mov push mov imul jl mov pop mov cli scas or rcrl dec notl xchg insl rcll xor (bad) jb (bad) xchg mov mov test leave or test clc stos push (bad) (bad) adc adc sub cmp jb divl cld fs out lret dec adc (bad) jae adc mull sub xor fistp scas mov pushl mov or rclb inc pop mov push dec sti (bad) pushf cmp (bad) and cmp inc test in (bad) (bad) and mov cmpsl sti mov cmpsb aas das loop mov dec mov and fcomi or add jae mov sbb and mov pop and (bad) in stos and xor (bad) daa cld rclb aam push pop mov cli repnz mov sbb add inc push ret (bad) cli ret ffreep xchg fstp pop in inc xor (bad) pushl xchg test mov je or xor mov xchg and jmp in xor sub inc out dec movsl test cmp arpl jecxz mov or add cmp (bad) mov iret addb adc pop enter mov scas fnstcw into lret not inc data16 dec sahf daa xor jge das fidivrl dec cmpsb leave sub pop pop daa out adc cli out dec test (bad) mov xchg add mov pop out adc and fstps push jg addl iret iret (bad) les das icebp mov xor ljmp mov lret pop add mov mov ret adc negb test out xchg (bad) sub jbe and mov xchg lahf and out lods lods xchg repnz dec fs cs cmp push call jns mov or std (bad) jb ficoml mov mov lret and je fildl aad jno shll pushf jmp jecxz stos adc (bad) loopne ljmp jecxz pop cmp sub pushf dec int jle imul std icebp xchg dec jl push lret sub sub out pop cmp adc fdivrl repnz lods pop pop fnstcw sub mov dec stos cmp das ljmp mov mov fisubr sti lds and mov ss pop loop xchg lds sub or jmp pmullw xchg dec sub cmpsl popa jns sub xor jb ljmp loop mov pushf stos xchg sub sub mov popf jnp scas push or adc xor mov cmp mov pop sbb pushl dec mov std lds mov or xchg out jae xlat mov lret cli sub cwtl or xchg sbb addr16 push or bound and push lcall adc not movsl xchg push mov and ds mov daa sar mov add sub lahf sbb and decb (bad) out fbstp test pop ds pop enter roll xlat sub dec inc add lds push xor push lret daa inc fs sub test jns leave mov cmpsl pop pushf adc cmpsl (bad) (bad) aam stos mov imul int push popa jnp fidivl add mov insl inc (bad) cmp cld std sub and push push sub popf push add leave ret enter add (bad) push jecxz out xor out fbld or and cli lahf push cmpsl pop int3 aaa push (bad) repnz inc (bad) iret cli lret enter jnp aas pop mov in adc jmp push das mov mull cmp cmpsb stos mov (bad) repnz aaa jg ljmp or iret and mov pop pushl call mov xchg or clc or pop xor leave enter sub xor sub fsubp xchg rclb or out and add sub (bad) jge cltd mov pop or sub mov jne push sub lods lcall or (bad) ficom push testb fldcw sub outsl fcompl cmp pop gs adc fdivr sub daa adc sub div or cmp jns dec xchg mov in je jecxz sub and sbb repnz clc xlat mov xchg jno push add xchg ljmp inc popf cltd pusha or dec cltd movsb dec xlat or push dec cmpsb lahf sbb push mov inc insb or mov mov push aas xor add or out popf jbe push xor jp push mov xor fs and scas shrb jns xchg xor fisubl xor jbe dec lret jecxz pop (bad) stc daa lds (bad) sub pop sti stos jne imulb out jle pop pop mov (bad) popl cs mov dec adc fist pushf inc cld lods sub daa lret stos dec (bad) in mov mov movsl lock ret sti inc (bad) xor add mov in pop clc push xchg xchg lcall add cmp pop or or push add inc sub or mov sub mov sbb ficompl jmp imul jae movsb outsl mov and imul cmp repz sub test stos mov loop xlat and movhps clc int pop (bad) sti sub cmp popa mov mov stos sbb xor and daa push lds movb sub popf inc mov push clc inc aad fsubr testl and jns das push xchg lods mov xchg inc (bad) shll or push movsl (bad) mov add mov jmp mov (bad) imulb negb lret pop pop jb test jmp daa nop adc jge jmp rclb (bad) repnz fisubl or sbb fcompl mov pop mov and lea pop outsl dec cwtl lea ret mov int3 cmp mov fs push add mov out cld in leave aas std mov lret sub subl in lret and xchg roll icebp mov loope add in mov aam (bad) xlat mov scas mov jecxz inc lea ljmp pop clc xor mov mov (bad) enter movsl push jo gs fmull mov repz adc in pop mov ret inc xor lss sub or imul inc (bad) jmp orb and aas shlb lret mov das and (bad) lds js insb push xchg adc sub jg push cmp pop ret jns insl inc outsb jmp cld lret lret cmp aad fistp data16 out pop jbe in fs dec pop aad or mov push mov dec mov outsl sarl lahf add jge imul pop imul add in sbb xchg push adc xchg sbb add xchg mov add push imul cmp popf jno in and mov sbb (bad) sub mov fchs push add jecxz (bad) sub mov adc xchg pop mov cmp out mov out dec xor popf rclb pushf mov out sub and clc xlat sbb inc sbb dec mov ds xor xor mov xchg mov inc js and cwtl adc fcmovbe mov and or int3 push mov dec push sub mov repnz pop ficom (bad) out cmpsb outsb and testl repnz xor in dec sub andl loopne push sbb jne (bad) notl push push loope sub jg imul out in in add pushf xor cmp xchg inc test mov les out repnz stos mov mov mov jno lret cwtl insb out mov cmp call push push scas out jnp cwtl mov mov push rcr stc mov jbe push sub xor testb mov pop jle pop cmp sub rolb xor xchg gs add xor (bad) pop jle xchg into jge xchg imulb mov nop scas and xchg pop xchg dec fisttpll mov mov std xchg sbb sbb cli jmp pop mov ja or ret cmpsb mov push dec fwait (bad) dec and aad sti sub jo pop push stos insb inc jb shrb adc movsl scas cmp inc mov stos mov (bad) xchg mov dec clc mov push mov adc popf xchg push ljmp and xor or cmp dec lock daa or jge add add adc dec mov icebp scas sbb scas xor cli in xchg pop incb mov xor add xor xlat push orl sub cmp pop push lret jo shr sbb stos daa out lds out inc ficomp inc sahf popa add and popa cmp fwait scas and or data16 js mov cmp inc or aaa loopne rcrl inc cs mov dec lret or out ja or jno mov (bad) stc xchg leave sbb dec fcomps fs mov cmp jmp lds cld loopne sub loop jne orl stc and movsl hlt jl pop inc aam jge add and mov push add shrl and fsubs out sbb xor mov mov enter aas xor into mov adc lret rcrl mov dec sub xchg fnstcw mov outsl jg mov loope outsb clc mov into and (bad) fwait das or adc mov hlt jmp fcmovnb xor test aaa stos cmc inc mov sbb mov mov jg js (bad) outsl mov push (bad) jecxz cmp aas dec add push lods pop add pushf sub mov (bad) call aas xchg mov add popa aaa sub xor cli (bad) or jns rcll sub push pop or cmp or mov add adc adc add out mov shr mov in or cmpsl aas mov xor jne jmp cmp sub sub cli std sub xchg idivb sub xor or leave pop sub sar aad mov pop fmul inc daa or testb pop icebp sub ret add and leave inc sbb rcl mov or (bad) xchg jmp rorl sub dec lock ljmp stc cwtl mov icebp ja jno out add lds pop add sub aaa pop mov leave mov iret movsb cld std adc out inc in adc push pop add into mov leave sub and dec ret fstl add mov test lret mov sbb addr16 or cwtl pop mov lods jnp (bad) xor int jg push inc pop and call stos or lock divl mull lock pop daa mov push repz xchg fsubrp jmp lcall adc (bad) test and out jb loop dec inc mov std aad mov into lahf (bad) mov aas mov cmp jno ret aad pop push das adc (bad) cli inc pop and stos sub out cmp xchg dec or push jae (bad) pop pop js pop popf dec out loope dec xchg and (bad) clc stos mov das xchg test and lods lods add mov xchg mov or lods mov sub inc mov pop loope or dec inc mov insb sahf out xchg pop pusha imul mov (bad) mov cmpxchg lahf adc pushf mov vcvtsd2si (bad) (bad) lods pop shrb or insb jo xchg adc jbe stos sbb mov (bad) lock clc lcall repz dec xor jae std xchg mulb out shlb out pop and fstpt out repz and push (bad) lea xchg sub jmp push mov in dec push xchg xlat mov sub cmp aas xchg and adc or cmp mov lcall and das cld fbstp andb ret je fwait sbb push imul fucom cmc repz pop sub mov pop add popa stc and ds cmp icebp jge sahf es das push mov mov mov or sti fs jae movsb outsb mov imull or jge (bad) cmc inc jns push mul andl jle mov fs and scas shlb sbb sbb mov sahf mov loope icebp cli push into imul fldcw sbb add gs cs enter sub (bad) and mov mov ret fcmovnbe (bad) flds out pop (bad) pop inc mov pop or push mov adc icebp and call xchg mov sbb sub fwait jbe cwtl sbb sti dec adc dec ljmp enter cs and push inc into (bad) loope push mov pop insb insl add lods into ror pop or mov cmc add pushf lea adc xor stos xor sub lret or xor icebp push jmp bound lds mov fiaddl xchg popf dec into and mov push out out fnstsw jnp jecxz mov arpl rcrl loop lret mov jne lret sbb sahf daa test sbb fstpt xchg repnz lret test add sub inc lods mov mov cmp (bad) add adc in (bad) mov out mov jge,pn adc mov repz mov test clc lahf cld inc pop xor mov mov xchg jmp cmp xor loope cmp popa adc adc mov repz ret lods icebp cmpsl cld add data16 aaa xor daa fist xor stos push inc in jbe test mov xchg sahf mov or and push push rcrl push in xlat and xor rcl xchg scas mov pop mov adc sub mov mov push cwtl sub push cmc jecxz pop ss les aas insb push mov in out mov out daa aas jle ret (bad) sub lock mov pop sub adc lods fcom ds dec mov inc aas push dec cmp ficompl lahf (bad) jg lahf into ja sbb movsl xor mov dec stos or out (bad) mov int3 jmp sub pop pop sub mov fdivs push ds aad jns dec and adc mull push lods sbb or mov test movsl aad sti cmpsl adc mov test lret sub sub or daa xor cld repnz rcll or or aad add sub or fyl2x sub fs mov int3 add adc jne scas cmc data16 add and mov xlat rorl or fcomp out fxam gs loop shr mulb mov xchg repz adc bound lret cmp sub add add add xchg mov xor and arpl xchg in in scas cmp dec sbb add jmp mov fnstcw dec mov shrb inc push inc jnp push and fsubrs cmp jmp mov faddl or sub neg mov pop bnd mov mov cmp inc push bound sub mov xlat repnz sti in mov in incl lret mov push cmp idivl lea repnz cli stos xor rorb xchg aam ljmp xor jo daa iret sub or and sub mov xchg xor jmp dec fcomps dec fldl call jns jmp insl bound fcomip icebp aas mov scas pop jns rclb dec and push mov jbe dec mov leave pop xchg cmp sub std xchg ficomp scas fs jecxz add ss add add jb sar jecxz xchg stos gs jecxz cmp rorl inc push sub fiadd imul mov test addr16 and dec adc jbe adc stos out pop mov pop xor add mov sarl push xor mov divb addr16 gs lret fsubrp jmp mov push (bad) add outsl fcomp lret add and jo jge adcl lret out decl lahf int3 jp mov test leave jg mov loop jb xchg mov mov mov aas xor sbb in and ror (bad) xchg (bad) sub daa (bad) mov (bad) es repnz aas loop sub stc lock pop ret xor cmpsb shll daa jb push and lods (bad) mov in dec (bad) push sbb dec pop (bad) scas clc dec mov addr16 lret mov lret cmp lds fbstp pop dec les jmp mov mov stos int3 cld ljmp cli pop mov xchg add inc loope push push popf cld sub mov mov and cmp adc jmp mov push aad out subb lret outsb and add or aam (bad) call rclb dec ret fnstenv pop and sar pop shr je xchg in mov into adc adc roll icebp xor or insl iret jne ds cmp fldenv or xchg xchg push sub add ret xchg ljmp pop into movsl cli sbb sub xor and pop sub int mov jecxz pop enter xor and movsl mov orb fistl inc addb xor pushf ret and stc or pop sahf pop mov jb mov lret xor (bad) mov insb pop xor ret add adc mov (bad) dec loope imul adc lcall pop jne fcoml cltd pop xchg leave stos cwtl sbb or enter inc cs adc in or sub test xlat mov out cwtl bound xor mov and inc mov int3 mov mov das mov xchg out mov test cld push mov xchg out mov lods push pop ret out sub sub jns es inc leave dec (bad) (bad) icebp out (bad) aaa int3 and mov xlat sub mov add and (bad) js iret incb imulb nop mov pop xchg sub jl add ljmpw mov and addr16 mov sub imul adc sti push (bad) xor sub xor cli mov mov mov pushf mov (bad) dec adc cmp jmp sub in sub push sub push mov push mov (bad) ret push rcll lods push sub movsl clc ret sbb nop (bad) fisubrl repnz mov or sbb addr16 mulb cmp or add dec leave out lea jg outsl ljmp mov cmp movsb popa inc sub or int3 add add mov sub out fcomps fsubrs mov lock mov cld imul xchg xchg sub pop das lret pop lcall stos in cmp pusha jno test fisttp mov hlt sub cmp ss pop icebp push dec (bad) ljmp pushf or inc pop inc test xor out push xchg test xor sub mov cmp daa sub ror repnz xchg xorb loope lock sti (bad) or fisttpll rcrb out in mov jb lret mov loop push int3 (bad) mov lcall sub and xchg adc outsl dec lea stc test out clc inc movsb fsubs pop aaa dec test pop repnz lret lret or fdivrs mov aas lods sub clc insl test inc xlat mov sub xchg repz sub jg scas loop xlat inc pop cmpsb and aas xor inc sub jbe stos cmp sub push bound repz pop scas push lret jle mov or adc adc xor sbbl adcl push idivb mov (bad) mov imul and mov aas mov mov lret das jecxz inc shll mov inc loopne ror cltd das out data16 and lods xchg add and in mulb sub mov xor mov xor dec and dec push add sub xchg push fs out dec ret sub (bad) sub xchg and sub add insl lods inc das movb push xchg into popf incl mov (bad) gs imul out sbb cmpsb mov orb mov stc inc pop stc jb jmp dec mov iret push pop push sbb ret pop pop add fldenv loopne cmp movaps (bad) xor lahf xor dec stc pop dec lret les mov addr16 es pop loope sahf add and cmpsl xor xchg fs stos call pop ror sub xor iret jg pop pcmpgtw add add (bad) jp sub cmp cmp sub adc xor cmp lods or add push jg (bad) adc leave xchg testl pop loope ss mov and sarl nop xlat pop cmpsb insb push loopne aad push (bad) mov decl push mov fnstenv fsts and mov mov add scas pop add lods enter les inc xchg cmp cmp jno sub pop xchg sub jbe pop mov or mov ds push mov enter insb in test dec sbb (bad) xchg xchg (bad) xor add mov pusha icebp out adc sbb xor add clc mov mov lret adc sub xor mov cmp dec ret ret jns (bad) outsb adc sbb mov push out das or daa scas cmp lock gs dec jg push sar mov xchg fstps jge and mov jmp pop mov sub add jb lahf lds sub lahf pop sbb notb out out hlt cltd pop jle rcll mov jmp int3 mov lds jo ret mov sarl cwtl repz insb jg pop push push or add sub push sbb sub out xor sub loop (bad) iret sbb add xor sub fbld ja pop or or bound jl or push jae xor lahf test sub in in int rcr imul push dec mov xor ret add lds fcomip mov mov xlat dec push jmp nop jne add (bad) xor mov sub push test mov cmpsl (bad) bound adc xchg add les lea jno sub inc mov bound stc (bad) bound ljmp cmp push inc mov fbld pop jmp cmpsl imul aam sti popa pop mov ds cmp in inc repz mov sub lds lret jmp stc add sub mov (bad) movzbw movsb pop push imul mov hlt push and push mov sbb xchg adc or test rolb cmp shrb in daa mov or daa pop testl cmp jmp mov jmp sub mov insb ret out jns add xor push jae adc cltd (bad) ds cmp je and xchg repnz pop std mov jl shll push decl (bad) aam mov pop mov aas xor in fimul popf xchg add push push pop pop push mov dec sub dec push adc push ret movsl adc repz add jo push push mov push adc push mov andl mov cmp pop sub sbb jbe rolb jg mov dec cmc cmc aam jbe,pt dec in or push inc sbb jle jge pop out pop push xchg pop jbe push or int3 add pop pop push mov jge jp (bad) out and out or stos push pusha cmp aad mov push in rcll pop je push mov popa pop adc ja enter push push jno loopne push pop cmc push add cmp jmp sub rcl imul and pop push jo fsubrs repnz xor lcall inc test or cwtl xchg stos add das sbb mov insl ja inc orl pop pop jl daa frstor xor pop add sub js std pop lahf gs and pop mov xchg mov repz dec mov and mov sub push adc cli inc mov and sub in inc sub cmpsl pop pop mov mov andb jl dec dec jo or add (bad) sub clc jo push shlb loope outsb sub or pushl nop xor pop cmp or cmp jo sub mov push jmp daa or cmpsb cwtl aad fiadd or push aaa (bad) repz or xchg or jno or push pop cmp xchg (bad) (bad) cltd dec sub mov (bad) pop adc out sub xor lret cmp mov pop negl or mov fst xor imul sub mov push adc adc sarl xchg jno dec jns dec mov pop fcmove and add jmp call add xor mov and or mov xchg imul push divb lret divl and roll pop and rorl ret cmc (bad) idivl jbe outsb mov add xchg icebp lds out sub and rorl xor add jmp lds inc test mov xchg call js xor pop ds xchg sub (bad) or jb dec iret lods mov stc mov sub (bad) pusha add push jo out pop (bad) out pop test movsb test int3 lret ljmp jbe dec sub adc and (bad) jne int cmp mov and mov and and jp movaps xchg mov add setae test fidivrl ja pop xchg xchg leave cmc jo xchg dec xor sbb pop mov mov les xchg bound sbb movsl mov test pushl dec or jno push repz and or inc insl fdivrs hlt mov std dec movsb push add test in or cli mov mov mov xor sub xor jecxz and das mov lret inc mov mov outsb adc sub xchg sbb sti bound movl push mov inc and jo mov push fldl2e cwtl sub dec pop mov pusha enter lahf xor jns and cmpsl les xor fistp inc lds ds xor icebp inc jb,pt xor gs dec sub enter xor and sti and adc cmpsb test mov cmc xlat (bad) js jne fist mov push push mov jg nop xchg xor ret stos xor cmp or mov in cmp push jne ljmp add dec or mov out fstpl pop adc or ljmp es dec mov aam adc scas mov popf cmc adc mov sahf xchg cli sub lret xor loop aam pop dec and or loope repnz xor repz push mov add mov sarl xor out bound stc xor repnz cwtl repz sub loope int3 movsl popa or cmp rorb mov sbb xor das mov movsl scas sbb pop iret mov push xchg sti outsl sub mov arpl pushf imul mov shrl or mov and dec xor sti xor xlat ret or and push aam out mov push pop adc or scas into imul add push out sahf and dec adc jns xchg mov out jl jo push mov mov ficompl ret adc lea dec jne mov sub fs gs push idivl mov sub call pop adc push dec mov add in sbb in xchg pop mov sbbb aam mov in stos pop repz nop and mov fcoml mov ds xor jno,pn dec decb jecxz cmp or xor pusha and push jo (bad) stos mov mov dec int ficomp cli or scas fsubrs cli (bad) std mov loope jns les ret (bad) repz in daa icebp inc or inc in or (bad) mov ret int3 cli mov mov ss mov stos test (bad) repz cmpsl adc repnz xor fs movsl mov xor pop aad lret and lahf (bad) mov inc pop pop gs ficoml push leave loop lds daa in adc into sub sub mov xchg movsl cld je pop add iret mov (bad) mov aad es xor lret addr16 imul daa cmc adc xchg xchg cwtl or fisubl (bad) (bad) adc jbe gs repz daa call add lret loope or testb cmp adc or flds and xor add mov and repnz repz imul es call (bad) sub mov mov (bad) out sub dec push fdivl (bad) jmp mov insb jp dec push loopne movsl cmp dec pop or shr cltd xchg cmp call repnz sub xlat xchg sub xor repz jmp push adc and push les stos arpl cmp mov cmp dec std rcrl xor mov pushaw imul sti test mov mov jno dec (bad) scas movsb or and clc mov adc sub test in shll shll sub sub (bad) loope das push shrl xchg dec into jmp test test movsl fldenv addl popa (bad) dec sub dec pop sub mov or (bad) sbb mov out add mov pop xor inc cmpsb repz mov ss pop js push inc mov leave dec lock xor hlt and insb and out sub gs dec add out fldt mov imul mov aas xchg cmc mov push pop push aam leave mov (bad) xchg mov pop add imul pushf jbe aas add std mov ds pop or shlb mov lret int3 data16 mov sti cs push out pop xlat adc lret mov imull imul sub xor mulb push pushf imul dec in jnp and cmc (bad) cs in daa daa or pop push push movsb (bad) jle imul inc lret (bad) xor push sahf or sub enter push push imul pop mov cmp cmpsb dec ljmp add add test mov cmc xchg dec (bad) add popf pop in cmp sbb rorl lret or aaa fsubrl and and out xchg jo testl xor repnz leave and loope into adc mov dec cmpsl aad lods jp jmp or inc dec xchg and push (bad) or xor adc lods push in cmc and sub mov xlat xor jmp ficom popf out sub dec push xchg pushl dec xor (bad) fcmovnbe jae xor push mov mov sub clc adc xor jo lods sbb xor mull icebp push adc push ret push test jns outsb out dec cld push sub inc mov leave or lret add iret out cmp lock out in dec mov into or mov subl xor and (bad) enter jge or add ret in add (bad) and xor popf fidivr dec stos cwtl fucomp mov lret jg add jmp nop xchg cmpsb xchg pop sub ljmp inc push add jo xchg insb push and adc (bad) jb fisubrl sub inc scas fistp add jne (bad) lret (bad) mov mov jecxz outsb and bound or sbb pop sub pushf push fwait mov push (bad) mov xchg push gs jmp mov sbb mov mov ret sbb mov lret test mov inc xlat mov fistpl and adc mov jmp leave xor pop lcall xor dec dec leave (bad) fist fisttp iret cli lds stc inc mov dec sbb push and mov imul mov dec xor mov mov iret and add pusha pop sbb jl and mov or xchg aam enter (bad) stos (bad) icebp sub sub sar or xchg idivb push cmp pusha cmp inc adc repz pop mov xor addb and mov fdivs sub leave jmp push pop shll ds sub jno jb (bad) jmp inc imul sarl cmp aam fistpll inc xchg adc sti loopne leave xchg addr16 and hlt clc mov (bad) push push insl push ja xchg lods mov movsl ljmp jl sub in push add out sub mov xchg or adc imulb and orb pusha push push or xchg or in xor push sbbl lods aam add sub dec lret scas or std cmpsb lea rclb mov call jmp mov sub dec cli mov (bad) dec jno mov pop sbb ret xchg lret mov pop (bad) pop je leave out fisttpl inc loope addr16 test test or pop icebp push inc leave out mov adc jno out jl (bad) mov xchg les notb sub div push xor std and mov imul lret and pushf mov (bad) mov punpcklbw insb inc dec out cwtl xchg add negl je (bad) outsb fs cli movsb mov mov mov and or ljmp imul mov push or inc mov mov lea xchg adc int in cmp jp,pt add gs lret or mov dec pop dec dec jb dec leave xlat mov lods sub in outsb cmp sub fbstp repz xchg shlb and pop dec notl push daa data16 mov rcr cli or push int shll jmp mov adc xor aam sub add outsb mov pop and pop and jne iret pop push jp jmp lcall daa add idivb xor mov mov mov inc cmpsb scas xor div int cmp xlat dec sbb or sub lds dec sbb shrb adc test push daa xchg cmp (bad) jne in cmp push movsl (bad) push and and out fsubrl leave pop data16 lret fcomip mul lods notl adc add jmp sub sbb or sub inc scas pop lock xor rcrb add outsl (bad) xor jp aad cmpsl xor out mov lods or int jbe leave decb shrl (bad) and dec imulb mov fcomps pusha leave push mov push push xor ret xor popf mov and aas lahf push mov inc mov pop popa xor sub incl xchg roll rorl std ret (bad) fmulp jmp inc add mov fsubp (bad) repz push or cmp inc (bad) push (bad) ja rcl mov lahf push cmc mov jmp or jne out sub mov push aad jbe sbb sub stos jb into jle in bnd leave rcr bound push jae adc mov sbb adc pop (bad) jnp dec mov pop iret mov jecxz shll cmpsl pop add fimull add pop stos cmp loopne mov leave push in clc out mov pop lahf adc mov mov push sub push (bad) fstps push int3 leave stos call xchg mov push fistp push insb cmp inc and test les idivb or adc mov sub xchg xorb outsb movsl das or in or and jge cwtl inc add xchg ret mov icebp and mov in out pop imul add aaa xor sar mov rorl leave mov arpl ja dec sub incl les mulb adc inc mov sub iret and xchg jbe fs daa xor sahf out addb imul (bad) leave sub jmp clc negb pop (bad) mov dec mov dec ljmp call mov and scas sbb add xchg push fstps dec fnstsw fcmovu shll outsb xchg out sub xor adc jbe jmp and decl fdecstp pop in loopne lret dec aaa scas fwait nop sub mov xor dec jae enter testb dec (bad) int3 inc xor inc pop jge iret add jb loope jnp jns jmp ret imul das in call pushl and pop xchg jp mov bound and (bad) dec mov push into aaa mov inc mov test add and and cmp decb mull sub jmp push ret icebp lcall js inc sub pop sub cmp jge pop push insb fs xchg push xor js mov aas sahf rol out sub ret fndisi(8087 ja das scas addr16 gs mov (bad) scas xchg movsl cmc mov pop imul cmp dec and repnz hlt mov movsl push jmp mov repnz cld and in mov out mov cli ljmp test scas adc pop icebp fs lods pop xor cli notb xor inc add jmp mov pop sub out mov mov inc into fsts mov stc movsb xor add call cmp pop mov mov fsubs pop (bad) jge pop add pop insl aaa inc scas in mov out add pop xchg mov (bad) jmp movsb or cli lea and outsb mov add push xchg lods (bad) mov inc sub or sbb mov gs xchg push stos cmpsl mov cld mov cmp or sub jne int3 imul xchg lahf jne pop repnz pushl adc in test lret outsb and popf mov test in mov ret inc mov mov (bad) imul pop jg pop nop sub push adc cltd ljmp jmp repz pop cmp mov push add mov repz jb cmp add (bad) and sub and pop sbb xor sub jg fcompp clc adc xor aad pop mov jmp or sti jg pop out cmp sbb xlat cmpsb inc jns inc mov ljmp sub cmc xchg adc mov aam jmp mov adc and add jne fisub sahf nop mov sub test fiadd cld loop xchg mov and or jmp push lret (bad) lock fcom repnz fistl loop mov cli jnp pop das add and mov std push (bad) xor cmc (bad) mov dec mov and js xchg (bad) mov stc loopne repz in push mov pop jae repnz jno andl daa rclb lcall jb or add (bad) aaa sub jp sarl adc movsl ret pop call call and lret xchg dec mov adc bound (bad) and (bad) stos mov and pop gs inc arpl fidivl dec cli test scas int enter pop sub outsb std jb mov mov inc mov daa push loope fldcw dec pop icebp jl je pop jge les int3 mov jne repnz or push scas pop aas sub push in mov in inc shrb test sbb rcrl shrb out std xchg mov js jnp and stc jb xchg es jno mov es push movb cmp (bad) js pop out lea adc aaa mov rcrb std jmp out in fimull bound call mov faddl ret ljmp xchg pop cltd jle and xlat mov or pop inc les lods xor dec push (bad) cmp pop jl xchg adc adc icebp mov dec shr fld arpl into jnp fldt imul imul shrl dec xchg sub pop scas je icebp mov pop shll divl in cmpsl shrb jge mov insl jno jg adc or push adc xor fisubr clc or adc aad mov push clc mov or in push outsb sub add dec push push push imul repz mov shrb or test mov lret std xor pop rclb mov jle fisubl xlat (bad) dec iret push pop pop inc xor incb dec pop cmp sub add lds fisttpll sbb ljmp not sbb mov adc ljmp and cmp xchg jno or mov adc shl sti or sub push sarl lret inc stos sarl jmp movq lahf adc hlt mov xchg dec mov ret ret inc repnz add jb shr (bad) lock push into push xchg dec test addr16 adc into pop test out mov repz mov push gs sub sub leave lods xchg mov xor outsl pop push cmp jecxz decl andb fistpl std cmp lret mov mov cmp addr16 out mulb pop fildll sahf sub shrl pop out nop jae pop mov stos pop out sub leave add xor rcrl and or ds call mov adc pushl ja fnop cld sub (bad) in mov dec or push movsb out dec pop mov fstl add lock xor and sbb movsb rorl fsubrs jmp out cmp icebp iret jp movsl jne fiadd cwtl push sub sbb dec push rclb mov xchg mull (bad) movsb (bad) test mov sbb xorl push inc loope sbb fsubrl dec xlat stc dec sahf daa push xchg clc aad insl or popf mov mov fcompl push xor sub leave dec push mov aad add jg not jmp mov adc pop cwtl add lods jns xchg pop outsl adc sub stos mov add mov inc decb dec test mov shrl push push push xchg xor stos out sub pop mov sbb add ror fsqrt arpl push xor jecxz adc xor stos push mov jl sub or adc ss mov or cmc les not add ja cmp cltd scas loope jno add pop push push (bad) xor addb push add xor cmp ret pop add cmpsl adc idivl test sbb sar pop sub (bad) push adc push xlat sbb mov pop pop or pop xchg lods inc wrmsr push (bad) mov ds inc xchg sub push cwtl insl scas pop add jg push mov cmpsl add mov push mov add add icebp loope fwait sbb (bad) popa push xor add pop add push mov push sbb pop pop mov jns dec mov aaa jg shr inc rcl sbb push inc cmp mov stos mov push stos mov pop lods fsubrs add add sbb aas xchg call xlat dec pop push push xchg or out push pop fldl mov inc fsubs jne add enter fdivrl push lds outsl xchg jle push ljmp fcoml or xchg xchg pop gs stos roll push or imul (bad) int jo rclb and sub sub movsl push or cli cmp jl addr16 test mov dec jp sub cmp repz shrl (bad) je bound lret jmp mov enter adc mov push adc push (bad) pop aam push mov inc test jge rorl sbb repz add push aad pusha jne add dec jbe and xor mov outsb mov jns mov xor loop fildll insb sub mov ds mov push fs repz adc sub lock out bound and outsl gs lret push jp adc add jne ret jno aas mov enter fbld xor out sarb in rcll pop cli pop pop dec subb les aaa cmc repnz fxch jle stc mulb imul (bad) xchg inc mov inc les inc or call pop call xor setl out pop pop test add ljmp cmp shlb pushl xor ret mov (bad) les adc sti je xor adc xchg ret popa mov inc fadd xor int inc scas mov pop mov dec mov or mov (bad) orl xor jmp imul fadd xor popa cld or movsl push aam jmp adcb mov cmc sub scas and cltd push cmp das sub cld xchg inc shr mov dec mov scas add add movsl cmp mov les or xchg jns xchg sarb mov pop pop out dec inc sbbb lret pop enter fnstsw lock stos fdivrl ret push push fstpt nop or gs adc bound icebp pushl pusha out popl pushw push (bad) sub cs pushf push mov adc jecxz dec mov pop out xor out push pop movsl cmp leave (bad) push sub pop dec test idivb in mov daa fcomps xchg fiaddl pop movsb and lret adc rorb push push cmpsl xor les dec fnstsw (bad) sub out (bad) insb pop pop add jle adc inc cmp and fsubp outsb shrl fisttp scas sub out mov ljmp add imull mov xor xchg inc pop add aas fdivs pop imul mov pop adc std xchg lods scas cmp sbb push jl or pushl xchg dec add xlat mov sti mov mov mov ret xchg add cmpsb add repz pop cmp daa call xor inc xor addr16 mov pop jb mov mov ljmp mov pusha pop repz cltd jne xor xor out jno outsl (bad) add icebp incb loop mov sti popf or sub pop cmp add ret push jo loope jp jl iret cmp (bad) popf flds jle scas push or rclb push inc add mov popa pop negb lods xchg insb dec leave dec sarb push enter cmp loop push cmc dec rcrb and call cld loopne pop mov jp dec sar leave pop sub ret imul mov lahf bound notb push dec cmp rorb mov push daa jns pop pop test pop inc inc lods pop popa sub cli mov in (bad) (bad) jmp fs sub aad leave movsl adc mov and gs push sbb sub inc push mov sbb sbb std cwtl lea mov and test (bad) inc adc (bad) xor nop push sub adc ja popf inc cmp mov ljmp iret int3 clc push nop aas and dec out lret in lock test mov adc xchg xchg stos mov sbb push cmpsl pop in and lods rol adc ss stc test gs dec mov add jle pop scas mov pop leave in cli cmp jmp ret inc sbb pop and repnz (bad) sub mov cwtl leave jns lods aam mov lret mov sub mov std in stos add (bad) sub and dec add sub jp lods leave icebp jle mov sarl add fistpll jmp add cmc or in and fstl je dec call (bad) sub and sbb and out or outsb daa xor xlat insb sti cltd mov xor mov or adc sub test mov mov push cs stc xchg imul xor or addr16 rcrl mov loop push ja xor hlt add sbb mov cmp xor lret or mov mov cmp or sub sbb stos cmp and shlb and inc add push mov test mov xor in xchg (bad) mov cwtl sub cwtl xchg (bad) std icebp ja cwtl int3 xlat pop push or notl mov ret ret pop call pop icebp pop mov fcoms (bad) bound lock xor fdivrl (bad) lahf push aam add xchg pmaxsw push (bad) out pop sub (bad) sti sub push ficompl pusha repz xchg push dec ss pusha inc jp pop scas sub sub xchg xchg dec (bad) inc sub push (bad) les scas incl sbb shlb ja ret lods outsl add js gs lods (bad) dec movsl jl adc pop out sbb inc xchg or icebp sbb jge ljmp aam push leave imul insl jmp pushf push pushl or insb mov ret xlat sub pop lods push lea xor jbe lds (bad) or xorb xlat dec or jmp dec xor fs push aas jne mov mov push sub pop xor das aam (bad) out es andl sahf sub rorl lret inc or shll hlt iret xchg in lret adc add add xchg or bound out pop in or or repz cmp jmp sub das pop ret mov das iret (bad) out pop mov xor mov or sub test or out sub cmp mov jg jno movl (bad) pop outsb imul out test in paddd ficom mov xor lock insl xor push jns dec pop fbld xor mov pop mov push push push aad mull stc pop mov shrl and and andb mov lea xlat leave (bad) insl in shrb fmull (bad) fisubl push idivb jmp sub sti lahf dec es ret int3 scas xor movswl mov sti loop hlt adc push xor repz sub cmpsl pusha cli repz mov cmp imul mov stos jb inc dec inc mov xchg pushl shl pop jbe push sub stc adc test out negl add stos mov out sbb ret jp add add cs and shlb out ss lds ss inc pop push push dec std gs cmpsl xchg add (bad) mov inc adc mov sub frstor xor pushl jp inc into mov clc xchg popf sbb add mov jle jno outsb repnz movsb sbb push cmp out lea xchg mov xchg lds add pop test test xorl in sub jne icebp or iret aad push lahf xor test fsubrp mov cmp scas mov mov scas ret mov mov stc hlt mov pop sub ret or rcrb mov gs es sub and ljmp sbb jno idivb scas lret cmp lock mov xchg rorl loop mov adc notl mov sbb sub mov pop jb cmp push or dec shll mov lret movsb dec fidiv in fstsw xchg sbb cs pop cmp test or iret out add pop add cli mov dec and aad mov movsb test mov or in and ret test movsl in inc dec test scas sub ret push sahf cmc push ljmp js mov cmpsl (bad) mov xlat push and xchg test scas out daa aas inc insl das jl or notl push jmp int3 int mov js and dec cli lods fiadd mov adc sub pop and das (bad) loopne into add (bad) dec add push pop ret inc sub les (bad) popa jecxz add iret movsl cli test fs popf mov mov fs cmpsl into dec xchg or loop sub cmp arpl icebp (bad) aaa popf xor pushf icebp jne std adc add cmc call movsb jmp pusha (bad) sub dec pop fst (bad) lret jne jl ret gs mov in dec mov in lods add adc popa fisubl adc jl inc lods cmpsl mov (bad) cmp test iret out sub push add jge imul out fcomps negb xchg xchg push cwtl mov loopne (bad) iret cli mov sbb or cmp int3 mov bound std jns imul repz pushl loope or pop sbb sub xor push pop stos jmp cmp (bad) xor rorb pop push jmp push xchg add pop xchg or push in adc ja jmp add popf cmpb xchg jp xor mov out xor sbb inc pop mov adc sbb and cli mov cltd mov imul test push hlt je cltd sub pop pop mov mov xlat mov add or daa dec or lea cs test mov and fsubrl xor inc out and sahf dec stos xor mov jns rcl xchg or ja sub pop shrb lret sub add pop outsl jle out sub rcrl (bad) or dec and and ror or mov or jne arpl out sub push mov mov xchg pushf aad cmc leave adc das mov sbb sarl dec insl mov jge test insl push mov (bad) in repz cli mov mov or (bad) cmc gs sub bound sti xchg test je mov movsl jno cmp add xchg scas fistpll aad icebp sbb cmp adc and pop mov fwait cmpsl jae add pop sub lret stc dec fimull scas setae mov jbe push push sbb xchg scas int3 mov icebp das sub sub or xchg xor xchg push sbb popf push pushf out loope dec and mov xchg push aad fwait stos and push add mov out icebp add dec cmp bound push repz gs idivb adc repnz scas sub xchg dec mov mov (bad) hlt ficom add mov sahf clc push pop jg leave sarl ljmp aam pop adc add or push dec add xlat cmp jg and icebp mov stos icebp jge sub mov adc pushf cmp jl dec pop dec or add xor cltd shlb mov push mov sub das lock clc lods pusha and ds repz in pop sarb pop sub mov mov ds dec pop mov adc mov push loop mov pop mov ret je pop out arpl rorl sub lret out stc mov call xor push fstpt es xchg pusha sub add mov dec lret ljmp je dec dec fistpl lods pop scas lahf dec or xchg xchg add push dec fiaddl cld lds or jmp icebp pop test pop mov stc xchg and inc push mov pop xchg inc ljmp inc lahf xchg cmp dec sub jg cmp pop xchg push and and scas mov ret adc movl repnz mov fcmovu outsl fs xchg pop or mov gs lods sub repz test je dec jne outsl cmpsb adc imul js movsl out and sarb push out and ret shrd movsb mov push test cmp jns (bad) jmp mov mov clc clc pushl stc je (bad) movb push movsl inc sbb xchg push and jmp and and fistpl pushf shr and mov pop mov notl add xchg scas cmp sub iret mov iret adc notl repnz ret adc popa xchg or pop int sub bound mov (bad) fnstcw cmp lock ljmp ja push imul push push sub stos push les sub out rclb ljmp xlat int push push lods and repz pop test mov (bad) imul mov scas fsubrs dec mov pop sub add jmp (bad) ljmp mov inc xchg fsubrs in xor sub dec push test test cli xor xor sub aaa dec fucomp and sub add cld push cmp fnstenv and push add mov sub icebp sub fs mov fsubl enter push mov inc pop add cmp call div daa lahf rcll xor xor insb jne mov lds xor xlat (bad) or dec push ja sahf pop out pusha inc pop sub (bad) data16 push loop sub fistpl or jne lret inc mov mov fsts jmp pop or sub jne xchg movsl std insl and fsubrs mov ret mov rorl out sub push sub sub scas inc daa jbe push xor in lahf stos fs inc pop (bad) pop das decl das or jle and cmp call cli jecxz xchg mov outsb jmp bound ret and mov jl ret clc daa in xchg fist inc mov and xchg clc adc enter or out clc out push pop push sub cmp jns aas test sbb (bad) (bad) jns jnp nop and jmp xor popa incl (bad) mov sub pop hlt mov add dec inc push push and jmp in dec aam pop cmpsb push mov imul and iret mov dec rcl fldt xor mov lea outsb icebp mov popa outsl cld push leave divl xor sub arpl mov (bad) push or das adc pop pusha jl and mov xrelease pop scas int3 in ficoml mov sub aas cmpsl pop mov dec and in (bad) xchg out xchg pop inc popa or sti aas test inc lret add pop fldz and xor lcall push movsl mov pop call test (bad) (bad) mov or and fist inc xchg insl stc nop nop xchg flds xor out mov sub iret sahf leave or in jb sbb and popf sub scas in lret daa (bad) aam pop xor cmp nop js add es cmp pop pushf out pop mov jp (bad) negl fst sub pop stos jae inc push sub (bad) cwtl leave iret negl sub pop jb iret xchg push xlat inc adc cmp mov cmp loope mov lret push pop mov (bad) pop (bad) cld shlb and movsb sub andb xor and les call lea loope das xchg ret aam pop mov cmpsb mov cmp or ficompl sub cli fiaddl xchg out and (bad) ja sti jmp cli into mov out sbb mov out in mov fldt push fsubr dec fdivrp sub inc mov mov out mov scas sub sarb jo pop adc dec pop out pop mov and pop out sub xchg add call inc scas insb mov les roll pop pop rcl and pushf aas push loop cld lods and sbb dec push add sbb lcall jg jb mov pop xor std adc xor (bad) push xchg stos (bad) notb dec jne repz xchg mov cltd rcll jmp sti mov jne imul or (bad) jo in jg jne sbb adc fs mov inc cmp cld push add mull xor mov xor mov pop leave cmp jb xchg adc or loop pop pop mov or repz inc push mov sti add mov ja shll daa fistl xchg call cld dec lret mov xlat rorb adc sub jmp mov repz sub mov out inc jae xor popf sub scas repnz shlb adc xor dec mov mov add std mov xor ror mov and adc ljmp xchg and ljmp in stc dec jo add and jbe ds xchg add (bad) fidivrl xor mov xchg add jg dec movsl mov pop pop xor (bad) adc cmc adc sahf leave cmp inc cwtl sub xchg push xor xchg adc repnz jnp add fidivl sar pop movsl jb popf jge dec mov xchg loop icebp sub repz pop scas les xor test cmpsl push add sub adc xor daa or das bound pop sbb inc push jne and push adc ljmp pop je xchg repz fmuls (bad) jbe ss ds out push mov sub mov outsl lock lea mov mov fdecstp mov cwtl inc sub dec mov cli popf ja rorl clc push dec mov out mov cli into cmc das cmp or stc lock push jge xchg push push leave faddl xchg test xchg pop dec shll and mov inc imul fildl clc xlat mov cs sub lock (bad) xchg (bad) adc xlat mov repz mov sbb ret in or jbe pop pusha xor ficoml jle pop clc jo xor cmp sbb mov popf inc jo mov add mov mov pop std mov sub adc es int3 clc sbb mov mov popa cmp sbb inc and test push sub loope test mul adc cmp mov xchg cmc fwait leave daa shl push adc mov jne xor inc das cmp imulb lock mov ficomp addr16 movsl test pushf imul (bad) xor push fcoms loope xor or dec cli mov adc sub jmp sti mov int push push or mov or push push jl xor jl (bad) jbe cmpsl scas movb insl adc mov mov out scas test mov imul and and xlat xchg jbe insb outsb call imul movsl out xor aas outsb sub mov sub in (bad) jbe push std lock and (bad) arpl insb stos add gs xor test and add cwtl sub ret dec test mov shrl test loop shl adc lret pop stc and xor repnz push and (bad) dec idivl out mov insb push jmp mov jmp inc (bad) mov lock daa shlb ljmp or (bad) or or iret ljmp fmuls mov or add mulb int3 dec (bad) ja inc (bad) call cmp outsl ret push pop imul sub adc xor sbb push xchg jp mov sti pop mov lods dec clc lock test mov sbb sbb mov jnp mov dec fisubrl push movsb ja (bad) adc sub mov pop loope,pn pop stc jb orl cmp aam push jl imul pop pushf xchg fwait mov fld loope fldl and dec test sti mov daa repnz repz cmp out in pop daa add xor push lret pop xlat cwtl pop or mov cmpsb fs rolb test cmpsb rolb dec lea (bad) jbe leave inc fdivp ror lods cmpl movsb scas add sbb dec into xor mov pop mov pop xchg out pop inc dec xor sarl movsl pop mov aad js loop adc dec push pop sbb out cmpsb (bad) jb lock and push stos sub push lods fildll lcall xchg cmp pop loop in add (bad) xor sub pop jmp jbe ret pop inc addr16 lcall pop in shrl mov daa pop and ljmp xor fmull arpl adc jecxz xor test rcl in inc adc and out dec es mov sub xor test xor cmpsb mov xor dec jne mov call pop xchg add icebp push gs sub mov add xchg test lods (bad) movsl mov mov or cmp push push add aas mov fistpll ja mov mov repz into jno mov leave data16 dec js lahf push push cmpsb xchg xchg xchg jmp and mov test push fldcw inc es push mov mov xchg dec inc stc stos movsb pop lock pop add mov inc (bad) dec pop cli or outsb xchg jbe rclb dec push xchg mov loope and mov and es mulb pop add jmp mov aam sub add repz daa mov loop (bad) jmp mov out adc push dec out fmull mov mov pop cld loop pop and ds and out dec push clc outsb daa and inc rcl cltd mov sub sub imul nop rorb loopne sbb mov pop in pop add cld push movsb cli test and xor push xor fdivrs or sti leave adc mov aaa sub adc les scas mov lret out int3 je dec fs rclb lret lock das jmp or add jmp (bad) sti cmp into add jo repz xchg fucomi pop (bad) bnd (bad) mov add leave and imul jne jne insb push (bad) inc push sarl clc (bad) fcomp jmp or add mov out or push dec shr ret loopne push cmp jo mov (bad) popf (bad) and or sbb xor xchg push mov or sub add std lock xor sar jle xor or cltd pop sub mov fild lock les mov adc fsubrp fldl lret fistl pop or push and pop int3 mov and dec not sub sub add test shlb (bad) lret xchg out imulb insb inc cmp jge dec mov xchg mov mov mov repnz repz arpl cli pop fistpl pop test lret call jo jmp icebp mov aaa pusha (bad) sub (bad) stc dec mov pop cmp dec cs inc mov ss pushf xchg push fs add cmp mov cld iret push dec xchg jbe,pn pop loope dec mov cmp adc add push dec scas cld sbb cmp mov add mov mov imul hlt inc lret jno mov jg xchg ficom push imul pushf mov or imul in ret inc repz int cmp mov add xor sub es dec stc ljmp xchg push ja bound adc out (bad) push flds scas push imul rorl mov mov out mov sti pop mov xchg sub sub cmp loop mov mov repz mov xchg mov imul repz or mov xor into test xchg xlat loope rolb cmp inc popa loopne mov cmp mov adc jae cmpsl pop in and test add ja push cmpb enter dec pop idivb fxch and lds cmp mov jecxz,pt (bad) mov dec sub push and outsl fs mov sub fsts repnz enter in out adc xor sub aad out mov xchg fcmovbe js aam fs cld mov jnp pop xor outsl les xor (bad) dec fisubrl mov sbb ror or push mov cmp push enter cli loop ja xor xor aam ret sbb mov sarl xor fs (bad) out into jno out mov jne or xor scas push cmp iret mov inc fildll cld adc jmp push fnstenv stc shr outsb (bad) ffree test and mov rorl mov mov mov xor and test in bound jmp or lret mov inc movsl jnp and xchg sti subl lods stos gs push pop ds mov jg xor sub xor mov pushf jno lods je ds mov call mov outsb mov leave cmp xor sub sbb or (bad) and mov mov jnp stos xor fs jge pop push push das mov gs movsl not xchg push popf popa popf sarl sub out test mov fs xor xlat xor orb fisubrl mov xlat in mov dec gs cmp addr16 jmp push sti popa mov in jle inc fistp int3 or adc testl les insl dec mov xchg fdivr cmp mov ret (bad) daa mov adc clc adc push sbb shr lahf in cmp jo movsb icebp xchg testb adc stos sub push das daa loop and or mov jmp sbbl xor sub mov lods add add mov jns add (bad) stos cld movsl xchg mov ljmp xor imul add nop loop je hlt xor (bad) pusha test or into mov and push xlat pusha dec sbb jbe push loop in test stos mov add ret push or test pop mov add adc cmp mov das adc and call inc fwait xchg icebp mov sub jno,pn mov sub mov xor jmp and (bad) xor pop push (bad) rorl iret (bad) (bad) lret xor rol sub mov das xor repz mov lock repz clc rolb pop sti sub clc in mov into lret and inc lock and and fdivl negl in call pop add loop pop cmp add cltd leave push xchg sub mov (bad) in sbb leave xor lods fs sti mov iret mov (bad) push sbb shll outsw sbb add (bad) push inc adc stos or jmp stos pop and sbb (bad) in loop leave and mov dec or jl lret loope mov je push rclb decl lret pop cli addb shl lods sbb jmp sbb and cld adc into push icebp ljmp jae push jecxz cltd cwtl push fldt and xor dec popf fsub imul les xchg into jge jnp jle imul pusha mov or rcll adc mov test scas into xor or clc mov pushf mov divl (bad) inc xchg in inc test jbe rol or mov mov xor mov push ja in sar cwtl aad xchg add ja (bad) das push sbb mov into in mov loopne fcoml dec insb jle repnz add pop pop and and add and imul shrl and mov ljmp aad es mov push jle lods inc pop xor popf jno sub notb sub ja xchg in xchg jecxz rcr push mov add jmp or ja insb mov pop dec rcr pop xor xchg push aad stos sub popa mov or pop mov sbb xorl jnp je bound xchg adc mov iret pop test imul add mov adc push lret adc cwtl popa idivb sahf in popf inc pop and (bad) sbb into outsl push dec and sahf push sti test (bad) loopne call jg fwait mov xor or mov test mov adc cld fs pop mov cmpsb mov and pushf std lahf dec std xor stos lea sub cmp notl lods push inc nop popf movsl mov xlat (bad) out xor push push test xchg push movsl jne adc mov adcb sub or mov cmp mov pop int dec dec inc cltd popf nop sub shrl add mov jmp fcmovb ja negl enter in scas fwait cmp (bad) mov adc cmpsb ljmp cwtl mov jp sbb sar xchg jbe rol (bad) ljmp or test (bad) mov pop and cld clc dec pop and fstps fwait push mov loop imulb jmp lret nop (bad) lret mov (bad) hlt imul mov cltd xchg int3 lods or lock divb pop jecxz fisubr outsb sub es subl fisttpll fnstcw mov mov scas push inc inc fnstsw mov movsb jmp jo sti xor push add sub adc pop stos sub cmp or and lret push push imul xchg xchg mov pop mov out lahf shll rorb lret fwait es xor (bad) jg lret lret mov adc push sub mov in lea add bound and mov sti sub mov out xlat cmp push jmp jecxz fdivrl pop jno imul (bad) (bad) call (bad) and or pushf or mov ljmp adc out movb sub nop imul jmp dec adc mov bound es xor xor push and xchg xlat fbld loopne into dec and push xchg xor mov xchg jecxz dec lret cmp (bad) jl into mov in add aaa popa sub cmp adc mov inc inc adc adc mov sbb pop sub es sbb jne lcall dec (bad) jmp mov cmpsb mov (bad) and jbe dec inc sub (bad) cmp lds and (bad) loope sbb sub sub sbb iret or mov pop cmp and cli fnsave lock and pusha out mov adc imul xchg dec mov notb sbb xchg cmp iret xor jge in add or aam rorl daa stc repz inc out cmc out dec mov les (bad) sub xor into stc xchg dec xchg sub scas sub loop das sub push dec mov jl mov or ret rorb sub xor jne push and xlat add shrl loop xchg push or (bad) and sbb repnz dec sbb pushf add push fbstp cli in jbe adc popa jo mulb js mov test push and pop mov or stc mov xchg js xchg push les repnz pop enter repnz and loop sbb divb and faddl pop and mov xor int3 add push ret popf adc or lock icebp ss xchg lret int inc cmp xchg cwtl pusha cmc ljmp notb adc mov ljmp adc sti mov icebp xchg push cmp sbb out jne xor fbld adc or jle negl sub cs mov fistpll stos gs mov call int3 adc pop repz test lret fisttpl fidivrl xchg push mov push mov into stc jbe add int3 int repnz test jl adc (bad) data16 mov (bad) lds adc sub loop and test inc mov push lahf ret sub pushf xchg js popf push jbe add push aam ficomp push or mov xlat insl dec mov mov xor pop loop sarb jne and jno in and or jl daa adc and inc mov scas fs dec or ja cli dec fsubrl lret pop adc sbb loopne gs daa push dec imul popf in xor gs dec xor mov jnp push mov sbb sahf sti jl sub xchg nop sbb das movsl xlat cmp sub sub dec shrl push xchg orb andb cli popf insb aas xchg mov push leave clc push lahf stc cmpsb outsl ja sub sti es pop aad stos repz xchg loope dec pop rorb shrb inc hlt fldt add fwait enter jnp lahf hlt push jmp (bad) jmp jg jnp and push xor iret cmp leave xlat ljmp mov cmp sti mov dec (bad) out lock enter fmuls mov or or pop push pop lcall add mov xor fs xor adc aam daa in mov add out xchg cwtl adc xor cld mov mov push (bad) pop sub mov pop incl pop (bad) ret ljmp mov dec push out mov push push insb imul pop test mov cmp xor pop push and scas pop inc pop imull sar pop mov mov push lret jnp and and and or mov lcall cmp sbb or adc mov jle mov pop out adc lods xchg mov jl jl xlat adc sbb add pusha mov mov insl push push mov int3 (bad) lret and es xor ret xchg push dec xchg mov (bad) mov enter and mov add mov mov leave out sub or push mov gs add mov mov push mov pop mov adcl mov sbb adc sbb pop test mov sbb call sub pop mov test and mov sahf out (bad) or push out int stos fildll jmp movsl and jmp pop sub inc (bad) xor push (bad) push jmp xchg cmpsl mov push or mov call and xchg sub aas sub xchg sbb outsb pop sub xchg xlat mov push repz push jecxz mov xchg lret sub idivl xchg inc cltd dec stc adc popa pop faddl bound out jbe pusha add mov xlat mov sub sub adc push femms scas rcrb mov int out cli mov das loop jbe out cwtl popf xlat lcall lods ret sub daa punpckhdq xchg in add push popf hlt add and xchg (bad) mov xor bound movsl push insb add add mov push jb js xchg mov mov xchg jl pop popa sub mov and xor sub mov pop adc mov push daa ja test pop adc xlat push aas in mov dec add xorl shrl jns or adc sbb mov and ja cli loopne (bad) xchg jg push adc jmp repnz xchg lock sub and leave xchg lahf or push aaa jmp jns pop mov loop xlat mov push dec lret adc mov or (bad) fldcw ret popa pushf divb jb je adc or mov (bad) ret xadd add lds or sub or cli cmp mov adc cmpsl dec mov add mov stc mov or fsubrl adc push mov xchg jle gs mov (bad) daa sbb and into loop sarb fildl add jmp movsl mov hlt mov out scas push inc imul pusha lock std cmp jns sbb mov fcmovnbe in mov and sub repnz outsl negb xor (bad) fsubl jecxz into lds repz enter mov xchg out cwtl fs out in inc in jnp cli movsb xchg outsb lret stos cwtl mov cmp ds or (bad) mov daa loop mov mov testl mov xor add xor cmp stos cmpsb fldenv loop sbb cmc (bad) adc gs push or mov rcll cld xchg sub add jmp cmp add mov sbb loop sbb inc lahf pop mov push jmp mulb int add rclb mov xor sub and xor mov mov es icebp lret ret and call adc lret mov iret sub js lods or out mov hlt inc pop and sahf cmpsb pusha or sub add (bad) sahf mov std iret pop or inc xchg jle xchg ss divb or and clc test and out pop sub pop negl pop push sti cmp and addl jno mov (bad) dec loope jl add ret ret sbb or or out push pop adc stc lock inc mov jne and pop mov and inc adc stc enter xchg adc std dec test xor add pop sbb sub dec leave xlat inc sahf das push mov pop lods daa lock push inc dec add pop mov in je loopne xor je or out jmp int3 cli daa sub push aas sub add out dec mov inc imul rorl into pop inc xchg cwtl mov repnz cmp or add nop jns sub sarb imul incl icebp jp xlat fs idiv sub dec dec fistpll or cmp adc fisubrl bound cli dec adc push lcall pop jb popa scas (bad) int mov jg push (bad) je out xor je adc mov cli cld jp cmpl push and xchg push dec icebp fwait and xchg push and push mov dec adc (bad) mov dec mov push pusha cmpsb inc lds push pop inc fwait pusha lret test mov loopne mov dec dec sbb or mov or fiadd add xor in imul ss add mov out ficompl rclb iret mov pop pop (bad) mov fistl ret incb popa movsl lret add mov cli lret lret (bad) iret iret out mov cmp ja imulb mov mov (bad) sbb pop adc test repnz cwtl (bad) sbb sub mov stos mov pop ljmp or arpl xor add (bad) mov adc popa fsubrl shrl cld push pop sub arpl xor mov add dec fs push mov ds and (bad) pop pusha (bad) icebp xlat arpl pop jge push and test jae sub repz dec (bad) movsl test pop sub loopne mov sbb or lcall mov jns xchg jne mov popa imul into sbb neg sbb push add pop jbe adc fistpl cmp test pop mov aaa adc jb sub imul jg cmp adc inc adc push sub sub and mov jo loope cmp (bad) movsb push ror mov sub adc push les (bad) aad repz add stos je cwtl inc mov fadds xlat mov loop mov sub negb inc xor insb add in xor pop stos cmp imul (bad) xor cmc subb and test add sbbl fstps rorb ret mov xchg scas fnstenv sub lret xchg roll sub cmp pop fsts pop test add lds cmp mov cmpsb sbb jmp mov cli out hlt iret adc mov dec ljmp cmp mov std out fsubrp cs pop dec add daa pusha pop sub xor (bad) int repz mov push bound lret pop jl sub icebp arpl pop scas dec shl push inc mov xor out sub xchg jae or sbb cmp push outsl and xor sbb in cli out dec int imul add cmp popa ljmp ja lock and aaa add scas inc fidivl leave jg xor cmp xchg and sbb push push jmp mov fidivl cmp rcll dec repz sub mov xor ret into xor or fsts fstp movsl jae daa jns movsl jbe fs test cmp mov or (bad) xor dec xchg mov lret pop test hlt stos les incb and push dec mov repnz fist shl jmp sub sub (bad) hlt push pop inc lret movsl leave sbb mov mov outsb int3 aam pop pop divb and leave arpl pop push fmull imul inc leave add sbb cld shll lea ret push inc inc hlt push pop std dec lds es dec aas (bad) repnz bound sub add xchg daa faddl out jp repnz (bad) xor and fldt dec pop pop out adc and mov dec (bad) mov cmpsb lock cmpsl lret and dec js rorl ror les adc stc mov cmp xchg inc lret push ja (bad) stc cmp add push out es ret idivl xchg ror sub mov hlt arpl popa cmc icebp cmp insl orl roll cld dec frstor xor pop adc loope dec pop dec lods fs inc jnp sbb sub dec jno (bad) and xor xlat inc mov outsb ret jno mov (bad) flds jecxz add stos jne scas mov adc in mov (bad) pop dec sub gs psubsw cmp scas jmp inc jmp add push sub stos subb add dec lret ror mov sbb (bad) mov jg rcl push shrl rcrb inc jg ljmp push push add mov jl (bad) pushl push sub or fwait xor push adc add add pop addl jge jl insb movsb or or and sbb movsl pop push push or inc add pop jp and push mov sub out pop lcall inc xchg pop jg roll add mov stos pop repnz rorb lret push aas rorb iret pop dec push rolb dec cmp cmc dec addl jmp jo sub sub add mov das out push (bad) xor or not pop nop mov pusha test mov popa cwtl ss das jo xchg hlt lods dec js jmp xchg add jge jmp jg dec add mov mov cli out daa push push ds pop (bad) (bad) jnp adc and pop movsb test shll mov pop in pop push stos inc iret roll jle mov add xor pop or dec pop add bound sub repnz ja or daa lea shll inc push and sub add pmulhuw jp pop cmp mov add adc mov jecxz int sbb mov or (bad) mov out or lods sti dec fdivs push ljmp pop pop xor add inc lock sbb leave pop xor xor and sub movsb xchg adc and cmpsl pop fistl push cld pop shr mov and mov inc sub mov and pop jecxz push cmp mov adc (bad) minps sbb or sub movsb or add (bad) dec jmp jecxz dec push (bad) jge popf movl xchg (bad) pop jl push fstpl outsb clc inc mov ffreep test mov dec lret iret pop ljmp jae adc je imul loopne mov shll call movsb adc in lret mov mov jns or add mov add ljmp push (bad) mov ret adc sti xchg mov xor xor xor ljmp repnz sub inc cs dec (bad) dec das idivl and or mov cs xchg outsl je sti xor shrb test sub mov pop sub outsl cld pop shll sub jl roll or outsl jmp das test lcall (bad) sarl push add jge adc stos jnp and cmp icebp push sub nop ljmp stos mov mov cmp ret cmp cmp out test push aas and imul stos or mov push mov data16 mov decl push cs test sub stos cltd cld cmp fnop jecxz cwtl mov mov mov add jmp fisttp out movl movsl xlat mov jp pop subb repz aaa sub sarl adc xor repz jnp push pop xor adc int3 cmp jns and jg adc (bad) loopne cltd pop (bad) sub pop sub gs enter inc lret sub xchg mov out cmp ds sar lahf pop sbb das lret adcb fdivr inc shr gs sti xor call sbb addl lret mov xlat and jb dec and push or hlt xchg cmc sbb mov push icebp movb fmul xor mov ss pop (bad) inc jmp xor loope sti imul mov mov pop and out sub inc clc int3 in test movb sub es test scas xor (bad) jae xchg jp pop push nop lahf push out inc ret pop dec subl sub pop push cli mov xor dec pop xor mov and or mov (bad) push sub add mov push pop xchg fildl add mov mov jo pop clc mov std out (bad) pop pop stc leave pop push daa cmpsl jg subl lcall cmp xchg std mov pop icebp (bad) cmpsl fadds jns imul loopne push (bad) push sbb repz pushl sub jb sub push inc push mov mov outsb and mov adc mov sub dec andb and js mov out adc mov rcr dec ret loop leave mov (bad) daa (bad) cmp push cmp js out pop pop notl jge cwtl sub (bad) pop inc loopne add dec or in movl and and push adc insl mov xchg mov adc (bad) aas aas sub pusha and mov je loop push pop hlt push push push push inc arpl sub push push lahf jbe pop bound cmpsl ficom sbb sub sub lock xchg incb push (bad) dec jns sbb lock sub sub push enter adc out xor pop out pop stos pusha dec das mov lods inc insl xor fstpt mov movswl stc in (bad) and and cli push (bad) xor add ljmp and and fisttp and push or sbb sub mov pop out ljmp mov sub test push ss and test and ficom pop or pop pop mov mov pop (bad) mov or cmpsb arpl adc mov cli int3 (bad) inc std dec call xchg pushl pop and inc sub aam insl adc xor mov dec lret out push adc (bad) in int3 lret cmp mov outsb dec push test in sub xchg rorl xor mov in push inc ljmp clc test mov out addr16 test test (bad) int inc mov mov cmc inc in dec out mov xchg cmp dec xchg into sub cmp pop pop out ret mov js jno bound rcrl add add or popf jg ss stc iret outsb bound (bad) pusha mov push imul aam js adc mov fs out mov stos xchg or ret mov mov (bad) leave or adc jmp lods scas movsl cwtl in (bad) jno lahf pop mov loopne pop or mov test ret and lret js dec (bad) cli sub js rcll inc pop loope fsts add fistpl and pop xchg mov out pop push mov cltd sbb xor xlat pop adc in in ds sbb pop fnstsw movsl out and ljmp sbb lods gs mov jae cmp and loope mov (bad) and cmp insb lcall jns dec fs push xchg jb lret and call jns cmpsl lock stc push imul dec (bad) push or add mov jne mov push ret pop mov jg mov jle mov pop pusha pop out push (bad) dec push shrb out or pop pushf es pop ja shr in and sbb scas lock mov and mov dec call xchg ljmp int ds fstps inc sub mov rcrl dec ret pop mov into mov leave xchg in movsb mov lret enter pop pop pop xchg stos mov in mov mov ljmp je push push jnp and ljmp or dec mov fidivl jns dec aam and push sub cmpsl dec lret fiadd cli imulb add divb push loop sub dec into jmp movsl call das ret negb xlat pushf or and xor dec lret jnp sub stos bound xlat shlb test xor outsl push cmp leave lret lds xor stos ret pop (bad) xchg pop mov ja or lret mov jle cmp mov int das (bad) lret mov sub mov int3 or (bad) fucomp and test mov mov or xor mov mov fstp aaa push bound cmp xchg inc clc and fldcw jae das stc jns mov into out xor repnz xchg sti (bad) mov (bad) dec adc stc call jmp dec mov and mov jp,pn lds lods dec popf scas (bad) jge add rorl fisubrl add xor and jbe cli mov xchg cmp jecxz fwait fs leave (bad) mov rorl leave xor loop xlat and data16 push not loopne mov mov adc (bad) fisubrl jne lea popa fisubr lcall mov std push xor sub test ljmp ds clc js add sub rorl jbe (bad) sbb imulb ficom sub int (bad) loop ficoml iret or fs (bad) out (bad) aas dec jecxz cmp sub or mov mov cltd xchg cmp inc jl mov xor call (bad) xor jle pop (bad) call sub cmp das out xchg push ljmp push daa pop std dec fs pop out dec fidivrl popf xor pusha inc aad loope sub cltd add cmp cmp xchg test pop scas or sub jne shll mov ficom jle (bad) xor and outsl cwtl cltd out xchg int3 xchg mov rorl push data16 leave (bad) outsb (bad) cmp lods mov push shrl jbe in push iret cld sub pop out imul adc cld testl repz cmc enter js out xor aas sbb mov mov adc pop mov dec or fadd repnz pop fist rcrl cwtl shr iret mov sub mov pop xchg int3 popa repnz orb outsb cmp jno or ds daa xlat jb pop fcomip adc (bad) js cli jecxz adc imull mov bound mov push push mov pop mov cmpsl int mov mov into (bad) lock stc cmpsb movsl jge fisubl push es call jno push out sti imulb fstps test or les repnz mulb xor (bad) les mov push sub mov push xor fwait inc es add aad movsb movsb (bad) popf jno jecxz shl ror push idiv and adc mov insb sub sub and xchg jns (bad) call aad mov and pop cmc outsb add jns test inc mov pop in lea pop cmp or dec lret dec mov cmp into inc sahf mov ss cmp sti test jl sbb sub repnz inc mov cmc lds in or sbb inc mov fcmovbe jecxz pop jecxz daa shlb (bad) push lahf mov xor xor fstpt dec sbb mov cli ss inc cmp roll add jle loope mov sub mov sub adc bnd rclb push jge subl dec mov add out adc cmp sub out test lret jb pop shl inc mov cmpsl repnz ja mov lods les add mov ljmp xchg cmp pop xor sub cltd xor xor push cld ret push add adc lret and in adc mov cli or mov dec push out inc xor cmp sahf ret sbb xlat ss sub sbb sti jno (bad) sub push insb or scas pop shlb or (bad) jae ret xor test repnz (bad) mov mov popa sub cmp sahf mov jp xchg scas push out sub mov rorl mull mov (bad) push and out jmp cmp icebp cmp mov adc jle dec out mov lret dec jmp std pop sub mov push and lret or stos mov sub data16 xchg mov stos add cs jbe dec lds scas pop adc sbb pop mov jno stos sub sbb lock popa sub insl jg add push into sar mov call sidtl enter div push and xchg loop sbb pop dec cmp mov inc push and int3 and add mov push rcll sahf push xchg imull and or jle jo fstl jmp fisttpll dec imul and shlb lcall (bad) adc inc dec out popa out and mov clc mov andb lea inc into dec mov or mov xchg je,pt add xor sub and jno add loop jo (bad) aas daa add jno adc mov xchg mov ds sub call adc fldt pop jp (bad) mov decw loop lea movsb rcll cmp jle rcrl pop pop mov and ret mov pop out pop mov adc add sub scas into cmp mov (bad) out xor sub mov pushf imul cmp jns adc cld xor out mov dec cmp sub sub sub xchg into xor mov insl fiadd out test mov sarl ja sbb mov icebp inc das cmc cmp inc lret out adc sbb sarb mov dec subb mov and or leave jne int3 xchg out mov and pop pop push outsb mov and adc add or push sbb or ss pop inc stc sub bound or int3 sti pop call mov sub jg jae je (bad) out inc in and mov xor sub lock test movsb mov push lahf inc mov test adc sbb mov sti and movsl je sbb cmp pop test movsb bound xor icebp push cli dec inc pop xor mov es lock aas xchg jmp add xchg jno jmp sbb sub mov dec out or jae sahf xor out fist jb mov xchg mov xchg xor rcll add xor scas (bad) lret cld push (bad) call cmpsb xchg mov int3 or stos je dec test add push fucom cs in jns cld test pop scas daa xchg sar pop dec (bad) jno dec mov pushf xchg cld rorl xor add or aam jmp lock adc jbe (bad) pop push sbb push mov in sub mov mov repnz cmc adc jecxz pop cmpsl pop dec loopne and xor sub inc mov xor pop mov push lds dec mov pop daa outsl lret icebp jle pop mov sub repnz (bad) jp jae sub pop loope push fstpl outsb mov mov (bad) sub stos mov and cmpsl pop in sti pop icebp scas ss ret addr16 xor imul xor and adc mov out xchg fist pop or push out add ljmp stos dec add xor hlt mov add xor in pushf imul push vpaddb mov pop shll icebp sbb cmp dec mov mov std xchg repnz popf lcall dec int push divb mov xor xor out xor aaa inc cmp and sub push fsub xor and loop int jno xor sub sub std xadd mov sbb cs iret aaa jmp push iret and mov data16 mov cmpsl adc (bad) mov xchg jno mov repnz sub cli (bad) or and sub sti loop leave div fistl fs repz pushw cmp enter cmp jo lds negl arpl aaa and insl jno sub mov xlat add sub sub add cmp fsubp push add mov mov daa (bad) push and (bad) mov out hlt mov lods inc gs dec xlat jns daa jl lds iret or xlat inc add pusha xchg out or (bad) mov icebp test pop adc ror popf and push xlat leave js jmp out sbb mov cwtl lret cmp xor and mov insl inc mov pop dec das lret ja dec sub add mov (bad) push fimul leave xchg subl push movb xlat mov in jns,pn into fucomip rolb mov (bad) xchg adc cwtl lods (bad) mov sub out cmc arpl mov jmp movsb xchg mov stos mov adc xor xchg lds lods jmp xor adc mov dec scas cltd mov lods mov mov mov rcrb jmp mov cs cmp ds push mov pop dec jno das (bad) lret jo ret movsb xor pop movsl ja sbb xor dec scas push mov aam scas lods sti lods sub xor add xor xchg cmpsb ljmp lret pushf sub jg scas jmp sub sub xor jmp jecxz xchg sbb pop adc xor es and mov mov pop xchg and and cmp sub inc adc mov std out xchg and sub idivl mov out dec inc pop mov push push xchg jle mov inc push and and mov sbb push xor arpl add jge push (bad) cmp add ret push cmp scas ret hlt std jmp or (bad) mov sub xor inc sub mov adc loop or pop pop daa jne mov lods pop enter adc repz js test lods mov add shlb test movsb aam scas or push out lcall out test lods jmp jmp lods dec push and mov ljmp add pop (bad) mov in sbb sbb test movsl scas je xchg sahf rorl movsb adc int xor jmp push dec out push push test stos sub cli (bad) jns fs sub mov push (bad) adc (bad) std cs (bad) iret and xchg xchg pop repz sbb repz and or mov lds aad jmp fisttpll cli popf sub xor jl cwtl xchg ret das dec jle cmp mov sub sub xor popa or (bad) fdiv push loopne lret cmpb or mov add js ret sbb (bad) bound repnz insb adc cmpsl aaa and push jecxz fsubs or (bad) cmp inc jne mov pop and pop hlt inc push pop push das sub ds sub xchg mov pop mov pushf scas (bad) pop cmp jl lea xor scas adc xchg loop mov jbe push and cmp (bad) or xor adc mov and add add bound sbb ror pop test inc mov jecxz adc fidivrl repnz lods dec stc je stc dec ljmp mov maxps adc into sbb mov int pop sub mov imul xchg push imul mov jg add or hlt mov mov mov mov inc loop xchg xor sub aas in xor mov pop shlb sub enter add add jns out sub (bad) mov xor xor das mov das roll pop xchg or adcb fsubr mov ret pop and mov stc adc add imul adc or sbb in and (bad) mov cmp call sub hlt dec or test dec out popf mov outsl mov sub xlat rorb jge cmpsl lds xchg imul push pop lds mov pop pop leave movsb scas mov mov pop mov dec test mov call movsw push pusha push jne dec adc sub lods les leave (bad) mov repz or and sub pop mov jmp loop xor push gs jl movsl out jne adc lods jmp add fdivs mov sti mov orl cmpsl subl (bad) ljmp cmpsb or or mov data16 sub cmp lahf cmpsl xor and mov lock cmp xchg sbb lahf (bad) sahf dec push clc xchg ja mov aad (bad) dec (bad) lods js stos mov xchg test imul mov and lock xchg fs push xlat mov and pop or dec inc pushf sbb jmp popa int out adc pop sub mov (bad) popf into imul xchg and jg xchg cmpsb cmp (bad) xlat push push mov and add ss mov dec xchg idivl mov mov pop push mov sub xor fmulp and inc jecxz xor push aad dec xor loop popa pusha and lods mov pop into mov xor sbb ljmp xchg imul lret es pop jno dec push inc jo fsubs or jbe cli sbb lret xor adc jg jg sbb test jae imul mov cs dec mov decb shr dec push and mov jmp adc push add mov popa addr16 jl cld ret test mov cwtl sbb mov bound jp dec push jnp or sahf pop or jmp popf mov shlb inc ret sub incl lock cmp dec icebp out arpl push pop pop mov push ret lcall xor mov call in adcl leave call (bad) adc ret (bad) mov or js push (bad) mov (bad) cmp sarb adc mov xchg xchg mov cmpsl lahf pop into pop std jno dec sahf inc xor clc dec mov add rcr fs in stc sub cmp test fs cli sarl push add stos mov or sub mov cmp icebp mov lret lds mov or xchg mov notb sub mov popf jo mov imul or aad (bad) lahf pop xor inc add add and movsb cmp mov xchg cmp popa push ret stos and xchg dec lcall or jecxz pop repz and dec lret mov sbb out out pop in daa fldt or sub das mulb jb cmp sub sbb pop lahf fcomp dec cli (bad) xchg stc aad mov xchg popf js xchg inc pop mov cmp lahf icebp jb or push sar and pop mov lds (bad) int3 out add add mov sub add lea mov xchg lods mov daa and ljmp lcall pop hlt aaa bound lret dec lahf xor dec inc sti test (bad) fmull mov dec adc inc lods popa xlat mov inc cltd iret and inc (bad) test inc add mov sub sarl xchg stos lret sub xor mov xor xor dec sub test pusha dec add (bad) daa lods sbb cmp xor adc add mov ret xlat icebp jae out sbb fs jno or sub adc mov sti lcall dec mov imul push sub add cmpsl inc test das xor push sub jmp push cmp add fldl icebp ret cmpsb xchg shlb imul adc fstpl sti jge jle hlt sbb push mov (bad) je inc push add adc (bad) mov xor out push enter jne mov decb or aad mov xchg or or stc (bad) mov out mov and inc ljmp sub add adc insb aad dec cld mov xchg sub adc fimul xor xor add imul outsb jmp mov shrb call stc mov push jbe jmp ret xor jne hlt in mov fistp fsubrs scas push cmp das and outsb lds int3 lds pop fldcw push sub xor xor pop pop (bad) xchg orl enter push fwait sahf cli repz rol xchg xchg gs icebp xor xchg mov out in arpl ljmp scas fs lret dec shl scas bound call sti add push fwait imul lea xor push repz (bad) mov shrl lahf xchg ret jge cwtl call pop xor jl dec (bad) out subb push pusha das ret or movsl cwtl aas roll fdivrp adc (bad) xor out xchg bound not adc aaa mov sub cmp ja inc sub add mov adc into pop ffree cs pop ds out and cmp mov jo ja dec fstl aas xorb stc xchg add sarb xchg pop test mov xlat and push sub lds or or pop pop aad out and and xchg (bad) imul mov dec mov es xchg icebp cld push mov out ret outsb xchg mov movsb dec adc fwait and scas data16 neg jle es mov cmpsb add or mov sub push pushf mov (bad) loop xchg imull out ds iret sti xchg dec int3 arpl ret push mov mov mov cmp cli xor fsubs sub xor mov daa (bad) aad imul sarl dec loope add and ret sub pop mov and push insb xchg pop pop xor sub inc jns cmpsl std mov mov mov int3 (bad) mov mov mov jns pop pop and mov leave and popf mov pop icebp mov add inc inc stc out pushf lret mov mov jno imul mov mov mov out mov test mov hlt xor inc neg loop pop sarb mov pop jae sub scas fldenv je gs pop inc rol (bad) enter fs bound in lret sub mov cmp ret loop fist push test scas into bnd es addr16 jle pop pusha and imull das fdivrp in jle xor into adc or pop je push jge sarl outsb sbb pop and mov jmp jg dec xchg jle inc roll aad add (bad) gs dec jg test mov ret insb pop sbb enter mov dec xor ss and mov lret dec xlat scas fyl2x jle pop rol dec in cmp push ds sub xchg (bad) (bad) cltd mov out xor xor dec adc dec fstpt neg pop fwait mov fisttpll xchg (bad) xor add sbb fstps stc xchg push add mov jne jg daa std xchg stos lahf jns lods push push mov sub pop popf pop das pop push (bad) xchg xchg movsl sti add push xchg inc inc movaps and pushf mov scas and or xchg scas jg cltd js cltd gs fsubrs lcall lods out outsb jp sub jge push xor aas mov nop sbb jnp inc scas add stc iret cs dec jg push cwtl lea lods or sub jmp sbbb popf daa insb clc dec leave scas lret stc orb jg jb ret xchg into das push xor lea cmp daa ficompl or add sub shlb and and and jecxz dec jecxz rcrb insb arpl mov cmp mov inc pusha andb push sub xlat rorb push mov pop cmc lahf sti inc cmpsl or jle (bad) stc mov (bad) aas xor add out jno inc add mov cmp and mov adc add repnz cli test hlt test sub cld loop mov popf jnp das xlat xchg mov mov or cmp sti cwtl mov popa push aaa out sub push mov mov add xchg xchg adc les mov pop sbb scas pop std movsb leave mov leave leave jge fildll testb das ljmp mov xor cltd bound push dec lret push sbb pop and xor xchg pop mul sub dec inc (bad) mov fdivl sbb outsl xor in adc add or xor mov leave cmp lock pop int3 clc xor add pushf adc dec sub pop into call icebp push dec je or xor adc or xchg ljmp clc sub inc repz call mov mov into js mov fcompl push out cli lret mull sbb (bad) dec fisttpll outsl lods movsl dec mov pop repz lret xor call sub test adc js sub lret xchg sub jle add call xchg or fs pushf push jmp and fstl dec mov sub stos push gs or add add cmpsl cltd out or sub pop cltd push add call and sti and cmc ljmp scas sub es jle lcall xchg aas cld push mov orb xor dec pushf pop inc or mov popf clc jo adc into out sub out (bad) cld jmp stc jge inc jp rolb and ret and dec add shrl test popa loop ror movb rorb mov mov outsl and test and es push lock pop imul mov lret lock and clc mov jle push sub xchg out inc add push repz and adc rcrl popf mov dec lret jl add jb ljmp test imul mov jae push (bad) sub mov cld pop jb push add maxps pop jle popf (bad) cmp into ds mov add ljmp pop push jmp testl inc mov mov (bad) push xchg pop lret andl dec pop dec test scas adc cli imul das push out (bad) pop adc lock mov sub stc and and cwtl pop rcrl sub and xor mov movsl (bad) and dec mov shrl add and mov sarl cmc push and lret mov cmpl test sub xchg rcll push (bad) pop insl mov mov pop fcomps repz xchg fstl mov pop or ret jnp lods dec outsl (bad) std fimull ret fwait fs sahf add and mov mov cmp into insb jae push adc jnp lret mov jo imulb push mov adc sti dec jg (bad) sub fstpt hlt xchg add (bad) test push cmp push mov stos mov xor xor in pop jb test cmp mov das fdivp pop (bad) movzbl push clc stos call inc xor pop sub test sub mov adc jb test pop inc and fnstenv inc push lock sub inc inc dec mov add fsts fcomps sub push mov sub movsl (bad) loop shr mov dec scas fmuls mov std xchg repz xchg outsb sub ret pop jbe adc out into nop pop lea cmpsb and scas sub insb loope xor pop insb pop ja cmc push push stc adc stos repnz mov sti push xchg mov es jae jle repz sub out mov cs bound mov pop mov push ffreep ja sbb aam jge fwait iret or into ss mov ret or xchg stos pop cmp mov xchg daa jl (bad) add cmp movsl (bad) out inc cmp imul mov jnp cmc fidiv iret xlat pop xor add std and mov pushl ja imul jp clc mov xchg gs sbb mov dec movsl xor and stos in mov (bad) cli cmp sbb es dec add imul sbb or cwtl dec push cmpsb xchg dec mov mov pop dec mov adc or imul bound dec out mov push test push mulb into jmp pushf cli push mov or popf cltd ret pop dec pop mov fs push adc jmp je mov sub sbb sub push ljmp xchg add cli int imul aam mov insb dec ja xchg cmc xchg jno ret (bad) test dec enter and pop iret inc push in mov add data16 mov (bad) mov and xor mov ja aaa mov ret imul es loope jns dec push repz push xor pop sub notl and dec (bad) fsubrl mov js xchg bound popa push (bad) jmp roll pop jmp call dec iret jmp dec add cmp je dec mov jmp lds jmp or push fsubrs out sub mov lret daa cmc add movb ljmp sbb (bad) imul lods jbe mov lcall into cltd pop cmp insb ret lret pop mov imul fmuls jmp (bad) xor aas xchg pop sahf jae sub push mov pop loope sub xlat fimull xchg (bad) mov loopne into dec and cmp imul push fstps sbb cmc (bad) mov ja sub adc fdivp xor adc inc ret or pop jp iret sub lret test pop notb or sti cmpsb push or sub stos mov lahf lds psubq or sti testl push jmp dec or data16 push and es mul sub xlat push ss lret lea xlat sbb add pop jecxz in loop xchg icebp lcall cmp jge xor jg xchg leave xor push pop faddl stc mov mov insl jb les xor lcall pushf pop stos outsl faddl pop jmp xchg pop leave repz sbb (bad) repz push mov dec (bad) and dec pusha pop mov inc repnz and add or pop cld leave (bad) push xor (bad) popf int3 fldenv inc (bad) mov push icebp mov mov sub cmp out leave cmp sub add cli int3 pushl pop (bad) repz pop sub rcll and idivb (bad) fisttp and aam stos lret xchg jecxz mov xor pop out std cltd push mov cs adc movsl sbb sub cld shlb pop pop int3 imul pop jecxz pop (bad) fistl daa sub adc mov incl cld mov jmp add out sub and pop adc jp data16 lret fsubrl sbb into data16 std int3 int3 add or adc cmp push mov decb fsts (bad) push adc cld mov es push and jecxz and mov aad adc pop mov sbb fwait les leave cltd add push rorl mov cli stos je int3 push notl jbe sub mov push adc sti bound ret repz fisubrl pop ljmp pop fucomp jle movsb (bad) dec add into leave pop std cmp jge jl jne in xchg iret mov sbb enter mov dec imul mov pushf or cmp mov xchg in fisttpl rcll jae sub lods cmpps push cld cmp (bad) repz das jmp jo mov aaa xchg cwtl mov and cmp mov sub or es dec mov loop xchg add pop mov sub xor sub or sub negl inc dec ret cmc jns dec push xor sub dec faddp out leave js clc stc mov scas sub out stc insl sub xchg jg push and add pop xor or (bad) mov sub pop sub lods add insb into data16 add mov out pop negl dec inc xor popf pop cs repz mov rol cmp out mov jnp xchg (bad) fcmovnbe jmp loope mov idiv jp adc xchg mov mov ret in cmp repnz adc xor hlt je mov pop fsts xchg jecxz and xchg mov mov dec mov lret lea loop pop addr16 (bad) xor xor mov mov pop sti jle and ljmp mov sub jnp or lret adc cli mov lret sarb jae fbstp in cwtl (bad) aaa inc repnz into aad pushf mov sbb pop stc leave shll into adc and pop out (bad) jle dec popw pop pushf cmpsb out pop mov sar and jmp sub (bad) push loop lock sti lahf das or lock cmp push pushf jl adc pusha or (bad) xlat cmc xor cld xchg es jmp xchg daa bound add xchg es pusha pop mov jmp push repz loope pop sahf xlat into test mov or fild das (bad) sub insl xor dec mov call ds add out lea je push and loop in ja mov dec scas mov xchg jns ret (bad) jo push pop dec inc lahf push cmp xor and imul xchg xor icebp push insl pop xchg mov lret mov jnp subb xchg jle jo inc shrb or pop stc xor ret pop xchg sar push sbb ror repz repz cmp mov popf mov xor add mov or lods sub mov ljmp or inc add ret jle push push mov outsb sub jmp fldenv icebp out mov (bad) mov dec xchg sbb sub cltd fildll repz iret imul jge rcrb loop lds ret aad xor dec lret ljmp mov shrl xchg mov in in mov mov inc outsb test push add imul cli inc ss adc popa mov pop loop mov (bad) jp daa out pop dec xchg push and dec loopne aas dec cmp jb fs out bound pop xor lret std test xchg in mov xor pop jno js mov jmp mov or push jno adc lret cmp xor pushl popf addr16 push movsb mov dec rorb cmp xchg adc ss (bad) int3 jecxz sub push lcall push inc mov mov jo fist inc xor stos in sbb sub cmpsb push add sti push out (bad) pop mov testl push add (bad) popf aad jnp out lds into sti lret scas push pop cld test es xchg std jb or mov loope or std arpl dec (bad) test mov repz int outsl in add lods les push fstpl cmpsb imul jne cld leave pop fisttp mov hlt fucomi enter pop jbe sub pop leave inc popf nop add rcrl sbb jmp add cli fs adc cmpsb and jmp xchg dec ljmp mov xlat addr16 jmp out dec and xor mov out sub aam sarb jl leave in pop repz jecxz dec cs fisttpll fucompp lret xchg rcrl dec cmp lret xor rol das loop xlat xor and popa mov jne mov or mov pop and (bad) repz imul xor pop hlt popf push (bad) ds icebp adc push sub pop fnstsw and lods dec sub inc test sub pop sub notl sub in push leave dec ljmp push int3 cmp cmp xor cs sti adc test (bad) mov pop mov adc pop mov add nop cmp movsl rcrl repz push add int3 pop mov (bad) sti repz icebp mov add std (bad) mov mov mov call divb clc test and rol test popa add mov mov xchg xchg dec xchg mov movsl insb in xor je repz mov dec (bad) fcomi inc inc popf push add imul imul fcoms mov shrl and outsl adc icebp mov cmp cld pop das ret hlt repnz inc mov pop cwtl flds mov lret sub pushf sub xchg ljmp mov ret daa sbb daa sub push imul jl testb add sbb popf push sbb mov daa jg mov add xchg dec xchg or jne or and call inc and cs sti ss or add push cmpsb push (bad) cmp mov ss push sub (bad) adc xchg mov (bad) adc sub pop add jl imul mov cmpsl mull mov loop fnstcw push pop mul mov les pop jmp adc sbb sub mov aad int3 dec icebp out sub pop sub stc jg xor cwtl and das mov das jne into pop mov leave adc scas fldl int3 adc or sub int3 outsb add (bad) mov lret add lock push ficom add dec jecxz xchg out lret pop (bad) xor dec xchg push lret xor push je scas pop imul inc cltd test es xlat dec jb stos mov cmp cs (bad) lahf scas xchg (bad) xlat aam (bad) lock jle pop inc add inc lahf pop call and adc cltd in cs adc pop add xor or pop cs or push fwait dec scas jge jnp push mov and leave je mov add stos test movsb push mov dec sub out loop das into negl rcrb loop xchg push or adc jae cmp stos lret enter and mov into xchg mov lret xor fistpl stos xor sti and and js xchg call cmpsb (bad) dec add xor addr16 lods pusha imul jge daa jge fs cli sub xchg and (bad) ljmp scas fs faddl leave iret dec rorb out jno pusha ret sbb or pop pop xor mov mov mov and in sub mov and lahf push xlat mov mov lea lds and mov (bad) sti (bad) std mov in mov mov mov data16 mov xchg repnz test xor lea pop pop push jle out mov in adc imul mov pushl dec pop mov and mov mov dec cmp fs and mov loop jne,pt test jecxz xchg stos mov adc orl push mov xor leave ret aas xor cli xor jnp ds xor or mov pushl jns shrl cmp rclb negb cmp stos adc shll cmp and popf outsb sarb pop xchg mov pop cmp cmp jae sub cli lret pop fstl stc pop (bad) into and stc dec sar popa out pop outsb mov ljmp sub mov stc mov push mov fist jle in push in insl dec sbb mov add in jl cmp andb mov test mov dec scas inc push push mov mov inc xor add out sub mov stc cmp push and sub or mov push xor daa push xor (bad) or push fbld push pop (bad) es imul jo inc pop pop out add lock push push or pop call sti dec add ja lds push fmull adc dec sub or ljmp push push mov pop scas mov jbe xor mov sbb arpl (bad) ret pop dec pop jg push (bad) jle push fs jns push mov rcrl es or pop mov lahf cmp in cld xor sbb xor pop xchg xor not fwait or adc push rorb xchg andb pop and pop rcl out add pushf sub lods scas idivl decl lret jbe shr mov inc pop sub bound or aam mov cmp sbb push push mov cld pop lret ds jge inc inc push shlb cmp jae push jmp neg dec shll push cmp imul mov in dec insb mov rolb loopne pop xorb shrl imul fildl pop shl push mov jnp jae push add mov mov adc pop add idivl dec lcall and aaa outsb add popa inc sbb mov sub xlat into ret push mov pop push and mov add repz lret addr16 pop movl shl push ret in add fcomps inc ret pop add in jae (bad) orl lcall inc loopne sbb call lret jb leave outsl mov add adc sub dec adc sti adc (bad) push rcr jg repnz or in icebp pushf mov adc pushl add mov pop or jge inc call pop mov dec icebp pop js adc cmp cld mov lret scas mov test sti mov neg dec iret (bad) sub call inc sarl mov mov jmp int loop xchg xor jmp cmc daa cmp dec gs sub mov or xchg arpl rcrl test (bad) shr push daa scas ret (bad) fsts mov testb mov sub mov ret int3 mov xor add roll (bad) mov (bad) icebp xor sub (bad) lcall rcl dec ja inc adc add ljmp add or sub mov clc ds lret xor pop xchg mov hlt xchg jg mov mov lods cmc mov negl bswap push push sarl xchg ret call lret pushf add lahf jl jb cmp cmp xor push mov or fmuls test (bad) enter icebp sub fld1 movsl push inc push mov pop mov out xor leave cmp cmc repz mov jmp dec mov sub mov xchg push iret inc (bad) and mov (bad) in das cmpsb testl (bad) mov mov adc mov xchg mov jno int3 mov ret fildll jl and or fnsave jno paddw push js jo or cmp in das pop dec les xor lret mov or outsb mov add test add xor add cld mov mov xchg mov mov jbe jno jle jno movsb or out stos loop xchg call loope aad aas div dec enter (bad) cmpsl jne and push cmp je xor add sbb (bad) pop addr16 sti pop (bad) push push divl js cmp ret negl add loopne pop sbb ljmp repz sbb dec ret or xor mov (bad) addr16 (bad) push lock bound dec mov out sub mov lock movsb xor push add leave pop ds or push (bad) stos popf mov jecxz stos (bad) add cmpsb les jecxz daa into dec lcall push push pop dec pop aas dec into stos cmp imul daa mov test or jmp lods and fs and pop xor sti aad add mov inc and negb imul mulb sub (bad) dec adc loope icebp rcr mov into mov ret jmp std (bad) mov ret fstpt add dec mov sub rcll inc pop and negl or push inc aas xchg iret mov rdtsc mulb adc xor in test scas xor cmpsb cs add movzbl or fldt (bad) mov sub dec pusha mov inc icebp jns fiaddl mov lds adc test or or rorl pushl mov add fldl div and dec out add and jns movsl jbe xchg sub push ret push xor pop lret lods adc dec inc fmuls (bad) lahf loop add inc mov inc jge sarl pop loop adc notl xlat adc clc sbb into idiv xor push add pop push insb mov aas bound cmpsl inc xor loop rcll mov scas sub into scas repz (bad) ret pusha out jmp push sti movb pop or xor (bad) mov push sub sti fs adc add xor xor scas fildll sarb sti xchg out and mov pop (bad) sub and or movl iret mov inc mov dec and mov lods mov cs dec in fidiv mov imul fistl pusha sub sahf je imulb rcr negl or mov imul cmpsb outsb pop and mov (bad) cmp add jmp jne stos imul or cvtdq2ps repnz push rcl inc jmp jmp or pop jge mul mov cmpsl xchg pop das lret and (bad) xor xor aad fsts adc (bad) mov imul pop dec sbb fsts xchg or xchg add mov adc mov iret es dec sub rcl scas call xlat cmp hlt loop push cmpsl push lcall xchg js (bad) fidiv lret xor fstpl cli std adc idivl repz xchg mov daa ret push iret lods adc es sbb loope cwtl pop mov xorl dec pushl mov sub inc stos pop (bad) jmp adc mov push pop inc fs jmp (bad) mov cmp scas adc fsubs mov outsb in xor jmp int pop popfw ret or stc push into mov or into popf jl rorb je (bad) or mov mov xchg insb (bad) das or pop lds inc mov push xchg out mov shrl loop and vpsubusw insl pop ds stos mov mov ljmp or or enter (bad) mov xchg or jne fiadd sti cs sbb mul lret imul xchg push push jns fldl bound pop inc jb cmc sbb and mov or call cwtl clc xor leave xor jg xor sbb and ljmp cmc xor arpl and stc and lods cli cmpsb pop (bad) push mov inc pop xor cmp in in aaa (bad) cli or outsl pushf mov out leave enter dec jmp xor fdivs pop fildll fistpl mov push xchg ror fidivr popf fist sahf xchg jl inc sti add cs or (bad) aam pop xor push sbb mov leave pop (bad) sbb int popf mov sbb mov push mov repnz pop inc ss and jno mov (bad) mov pop cltd je jmp repz rorl cmpsl mov insl (bad) jns add int3 mov jmp in sub mov stos int3 mov sbb mov call aas stc lret in and jbe dec inc fsubl fcoml add inc das lods mov lods mov sar lret scas jnp pop xchg adc push or popa and (bad) jl (bad) mov (bad) jns dec dec inc mov aas out jne sti jae aaa rcl jne in add inc pop sub mov xchg lret jle movsl sti aam rcll or mull jle stc imul dec jmp adc das dec loope dec in jnp xor mov mov cmp inc mov pop dec add mov notb (bad) mov sub stos test gs (bad) mov test inc xchg (bad) fnstsw movsl dec pop xchg mov fsubs cli lahf insb pop adc xor test dec icebp bound inc dec ljmp mov rcrb fildll and dec (bad) fs out or notb pusha mov and sbb xchg cmp jne xchg mov and sub stc insl jbe (bad) mov and xchg loop sub cs jg repz ret (bad) mov pop jmp (bad) and adc adc jmp lahf aam imul das push pop jmp jno fs mov add movaps pop push cmpsl adc sarl daa cmp ds (bad) mov fsts and cmpsl dec mov rcrl or pop sub pop and sbb gs clc sbb loop (bad) cmp push pop in mov adc sbb rolb popa cmp es in mov mov xchg ret and jmp and stc ja jmp scas and jmp mov movsb shll lret out gs sub fldl shr les sub adc mov xchg dec mov adc adc push jle test scas sub outsb lea mov lret xchg stc into fwait or and or (bad) mov xor xor shr popf pop xchg repz iret test es clc lret mov xor xchg adc sbb stc cltd fs mov and call orb loop in push xor sub leave jbe cwtl adc dec or shrl mov ss shrl dec mov mov push push inc xor (bad) mov or or (bad) out xor jno pop (bad) xor dec aas inc stos and xor mov xor stos xor xor ret and dec test xchg xor mov ret fs repnz fbstp mov xor adc es jae xor sbb xchg mov (bad) stc xchg lret or mov ror daa fmuls xchg and (bad) repz insb (bad) sub and pop lcall lcall push inc loopne je adc mov fsts sub das mov push sub inc shll adc jbe cmpsb sub and imul insl add dec push adc add push and xchg mov push pop inc jae dec sub (bad) cltd jp add xchg jecxz push mov pusha or sub pop inc xor sub or and mov mov add rcl insl out or and bound cld dec loop sbb outsl or push inc test inc cmpsb jo ficom mov test popa and push cld xchg adc test mov bound add repnz mov idivb incb gs dec sarb dec testl mov dec xor cmp dec inc imul inc push pusha jo pop bnd (bad) out idivl mov lock lds (bad) lret mov scas mov cmpsl pop pop cli je mov jg data16 jb jno xor xor lret sub clc popa (bad) fwait push mov sub fistp loope and ljmp aam cltd lea or xchg sbb xor xchg mov outsl cli es inc je aas mov mov (bad) dec in and pop loop lcall add cmp loop fstl movsl nop and cmp out mov fiadd imul jnp xchg in adc mov add loope cmp mov das sub ljmp (bad) xor out pop lods adc (bad) cltd jl lods mov or shlb xchg out sub imul xchg mov pop sarl or (bad) and rcr sub nop ret jle and daa sbb push sbb outsl xor imulb sub xor or jge sbb mov add loopne out sbb daa out xchg jp mov push out add (bad) stos mov xor aas (bad) push mov mov push (bad) xchg pop push mov mov push jg and aas scas cmp mov dec fcompl insl jno int3 xor sub fs cli dec in inc dec mov lcall lock xor jno pop lock jmp mov xchg xor fnstcw gs inc or dec xor lds mov add mov daa or fbld sub xor (bad) stc xchg fs sbb and test mov inc subl mov dec loop sub loope js mov add inc mov cmc sar mov mov jle leave cmc cltd push xor and pop shll loope movsl movsl scas fs movsb stos sub and or mov test fwait dec add (bad) mov xchg pusha rorb lods stos movsb mov adc or fistpl add lds or ret and push lret sub fs incb stos mov pop xor (bad) jmp push mov mov sub lret lds mov stos fidiv aaa sub fs fld loop sbb out mov lcall je (bad) fsubl xor or and lods jle adc mov pop and adc je mov xor lret imul xlat push sub mov ja je mov insb and fistp push jne mov das mov (bad) negl sub ret sub sub mov das ljmp das xor xchg mov or pop repnz sub and shrb add push je xor mov mov lock pushf test scas in and ja cs or dec xchg fldcw sub mov mov out jne or inc mov imul mov test les mov pop out and jne jge shr outsl adc xor stc sub dec add xor lcall add les stc jmp jmp into arpl (bad) mov dec rclb xor flds (bad) pop insl icebp dec jo mov pop idivb test rcl jmp scas repnz repnz fisttpll nop shll add clc and aaa inc pop icebp pop jnp repz call push mov cli out jns dec jns xchg and loope insl rcll add bound add sub mov mov (bad) notl xchg mov sub add xchg ljmp std repz popa ljmp adc enter in push xchg fwait and shr (bad) xchg pop xchg into cli call push jle and xchg inc ror ljmp mov repnz xchg mov pop mov nop imul hlt sarb sti fstps and cltd push or std sbb stos mov mov xchg xor std adc pushl xor sub mov dec mov out divl push mov loop icebp insb inc and js das jmp pop rorl sub clc pop dec repnz out in or rorl mov sub cmp repnz dec xchg or mov fisubr testb pop add (bad) pop xor mov sbb mov int lods mov fildl cmp xlat jno inc add ret dec js out clc inc hlt (bad) cmpsb rorl inc test sbb divl pop enter push mov and cmpsl push and add outsl mov test sbb dec mov pop mov inc cmp xchg or (bad) mov mov fildl out add test ret add lret pushl sub or jp fdivp das insb inc xor adc (bad) or bound jne ja mov xor mov jns mov out cmp xchg sub lcall leave mov push fldl jne cmp fnstcw movsl cmp cmp dec aaa in lds in adc je,pt mov addr16 fmul xchg fiadd push adc shrb call adc in (bad) pop lret add bound into (bad) adc lret ja ljmp in mov add sbb testb mov mov repz or out jecxz and jno cs arpl xchg loop pop imulb mov push lret xchg fistl test pop pop and xlat fsubrs jg fldcw int dec fdivrs out xor stc mov jb jecxz fistpl add aad scas pop add outsl add fisttp dec (bad) int icebp (bad) dec sbb sbb xchg cmp pop inc pop icebp pop or out dec inc test icebp mov jg xchg hlt mov out mov movsb xor jmp (bad) lret lcall dec (bad) inc leave push icebp sti inc xor inc inc daa sub jge es ss pop sub mov inc mov std pop leave fmuls xor sub imulb fldenv sub lahf rorb xor mov and lcall leave sub and xor pop dec fs jae sahf mov jl push add push das loop sub pushf stos mov mov xor loop sbb lahf pop add leave xor adc mov ja add clc aaa dec out mov mov stc loopne add xor sub adc popa dec icebp shrl fsub xor lods push xchg (bad) adc adc and sub xor sub xor gs xchg (bad) mov push aaa sti iret dec dec push lods and push and cvtps2pi cli mov push and xor sub jno lahf lret or sbb je mov jne in push (bad) mov lcall aaa lock (bad) pop stc roll adc lock xchg out rep sub or (bad) divl repnz (bad) xor gs xor sar pop int rcll xchg and dec das add ret sub (bad) push lret (bad) out shlb scas dec push mov add add mov mov sub adc (bad) ljmp or inc int3 lods add clc and popf push mov idiv sub and or jnp pop jmp push or stc mov jae imul inc and jl dec gs loope sub sub sub (bad) gs adc adc mov dec lret sub mov pushf push jae test cmp mull sub (bad) mov jno fucomi or negl adc sub (bad) outsb (bad) xchg out jnp call ja push cltd adc fistp ds ficomp loop jnp xchg out repz xchg mov scas sub push ja xchg bound jmp sub push adc stc cwtl mov bound jne cli xchg lret mov ljmp or inc or add pop cmp xchg idivb push mov nop dec repnz mov (bad) mov xchg add add cwtl cmp add loop xchg out bound sbb cmp jl fisub in sub out js push push fdiv and push jge scas mov sbb insb loopne arpl dec (bad) jge inc adc fcomps and dec shrb or sub sbb sub cmpl mov and incl in lds inc inc fidivl inc add jge not rclb cld push xchg add dec pop cli lret add in add xchg or xor shrb xor mov pop mov mov jle insb shrl (bad) pop jnp add lea push push push into mov jl mov add sti pop push mov ds push loope inc bswap popa pusha cmp dec or nop test dec daa ljmp add or roll mov xchg sbb cmpsb or push jmp mov push adc mov iret add gs je movsl daa nop mov inc pop jmp imul aam sbb mov frstor clc push sub hlt (bad) mov cmc into or or jb (bad) ja push push repnz or lahf or nop out inc (bad) jmp push stos or stc sub inc dec jg mov pop or adc add pop lea push dec pop xor mov mov test xchg lcall jge rorb ret mov jne loop lret mov sub xchg dec jnp jl test pop push loope jl movsb adc decb loope divb shr aas das (bad) cmp sarl fild dec leave ret jne or out lret and or ljmp and movsl push xchg ret hlt hlt jb jnp in jmp hlt in mov mov (bad) loope push push and mov cmp (bad) sub cli test mov js fildl mulb es jmp lret add pop ret mov (bad) rsqrtps rcrl xor jns mov sar int3 mov stc push mov (bad) shrb xor xor jmp xchg cwtl pop sub xor and sub enter xor push xor mov idivl sub jge shrl add test adc in scas pop call out repz push sbb adc leave and cmp fsub mov mov imul sbb cmp imul xchg stos sub push mov pop das xchg cmp dec jmp dec mov xchg ss adc mov push and sbb into xchg stos cltd in aas and or sub aad and ljmp and lcall fmulp pop (bad) jns inc sub repz ret xor mov lret jmp pop push lods js shrl pop mull mov (bad) xchg and cmp and push pop jno dec cmc mov sbb xor push cmp rorb add daa cmp jg xchg lahf mov dec cmp div dec mov lret jno movsl pop xchg dec loope xchg mov dec mov adc and xor sub add jmp ret jns dec test sub pop dec mov dec inc inc sahf and aas aad scas iret dec das mov sbb (bad) movaps ret daa or pop lret jle jns aas mov mov xchg repnz inc mov stc aaa shrb xchg leave push cmp (bad) jmp mov clc or xchg pop pop mov cmp mulb icebp aaa xor inc cmp fnstcw inc adc cwtl push repnz daa ja das and dec pushf int add xor movaps pop out and xchg sub and mov sub sbb inc dec outsl jno add or sub adc mov dec fmul pop test bound ret aas int fistl pop sub fnsave outsb mov and shrl jns mov sbb pop neg outsb out push js xchg jl push loopne in xchg adc lock mov pop pop dec xchg es notl jmp jecxz std inc ret xchg push xor push insl jmp sub ljmp mov and dec pop test iret mov je push pop (bad) nop loopne mov test cmp mov lahf shl adc comiss or lods in test dec icebp jno lcall test dec sbb jmp dec add (bad) je scas lods jnp xlat popf rorl outsb lret aaa mulb sbb dec imul sub imul and inc aam mov jge mov mov add div pop in ret hlt dec loope jecxz mov or adc inc cmp dec pop pop cmpsl xor jne scas adc faddl add dec ret and andl push (bad) dec subb fisttp sbb adc out mov push or lods cltd xlat mul pop call ret mov xchg insb mov (bad) repnz pop and loop mov mov pop cltd and xor lret out aam pop dec enter pop adc lahf loop pop pop les add scas cwtl adc xchg push mov add push pop jecxz dec loop push dec xchg xrelease iret out mov cmp mov cmpsl or aad add fnsave (bad) out sbb pop (bad) out mov fbld repz mov lahf push xlat stos int3 pop iret mov add or mov xchg inc mov mov (bad) xor adcl or out cmp mov cld movsb shrl xor icebp leave jle test xor stos int sub iret pop jmp hlt push lock push hlt out push sarl mov mov out aam adc das jno inc or sahf fs lret jmp test call insb and push fs stos adc sub rcll cmc cmp decb lock mov out pop jl dec pop pop pop mov jecxz push pushf xor pop xor je mov adc adc sbb cmp mov stos out push pop aaa shr mov and sar adc fdivr negl mov daa mov es xchg mov loope sti dec mov and mov xchg popa sbb jb xor test mov out adc sub mov mov sub xchg out mov mov pop adc xchg loope sbb scas data16 ret int3 out lock mov jne mov push leave gs push lret mov mov rol cmove mov mov rcl mov xchg lret mov pop sub push adc add dec pop cld cli cmpsb out test lock fdivl push jg adc daa mov add xor xor adc dec jmp push xor aaa jne (bad) add adc pop and pop icebp mov fcoms mov dec cmpsl cmpsl in (bad) fiadd pop push xchg xchg xchg lods pop jmp out fucomip dec mov mov out sub dec lods xchg cld cmc ret pop adc mov pop jg iret test repz mov scas mov stos sub imul sbb add adc jp mov adc (bad) lahf cmp xor and sahf test mov scas cmpsl sahf lret ret aad pop out dec cmp add xchg push jp xor xchg bound push pop and test mov xchg test das out fcoml pop or lret jb sahf mov push (bad) je push and lds mov scas mov (bad) clc out mov movsb adc stos sub jle add push jno add (bad) iret xchg gs xchg xchg gs and scas mov pop les out out adc jmp imul (bad) dec andb mov inc addl call jno rdtsc ret cmp mov fldenv lods push fs cmp xor xlat out lcall cmpsl ss mov pop dec lock lret adc pop push fs out jmp fwait pop pop pop jae les daa or sbb mov pop icebp sbb lret mov sub test xor jp decl xchg xor inc mov js dec out sub ret dec clc aad add and sub xchg xor mov pop fildll insb and xor (bad) sub fisubl ja and aam les lea xor xlat mov push fistp movsl jnp mov hlt jle push or dec mov mov adc jmp lret jg fwait popa (bad) xor adc stc sub es push xor adc add cmc ljmp adc aaa mov or mov and fldenv popa lret sub ljmp das out gs pop pop stos cmp jge cmp sti test mov sahf addl or jo mov xchg enter or bswap push lcall xchg outsb mov sub pop xchg push mov mov pop push mov xor (bad) stc inc ss inc jecxz xor cs inc mov push xor jne sar fldl2t arpl imul (bad) mov inc aas xor push ffreep cmp xchg jp or mov into icebp dec aas mov adc ljmp or in rcl inc sub adc (bad) popw adc sbb repnz movsl scas movsb xor dec xlat scas lret or pop pop push out rol (bad) mov xchg loop mov gs pop xor xchg addr16 push dec (bad) decl in movsl push outsb mov mov pop mov mov push outsb add jl push sub push dec repz add mov xor out mov lods das inc and repnz insb adc jecxz aas xor dec cli fwait pop dec jno mov jg push or mov outsl jno dec push xchg (bad) mov out test scas jmp sub mov and repnz loop lahf or pop pop enter idivb sbb mov fcmovne orb pop pop stc call das xor rcll fildll sbb cli flds and lret fs sub jge out daa sub pop arpl int or lret test xor pushf dec sub push lret jmp xchg aaa subw enter mov pop je fstps js icebp hlt xchg inc mov rcrb cli sbb or out sub (bad) in pusha xchg leave fwait or insb add xchg aad mov ret lods or add pop push jmp leavew pop repz mov mov test xor jmp xor sub test inc lea sbb inc (bad) push movsl adc push int3 xor add ljmp int3 xor sub add push push mov jmp fs xor add push jge out fcmovnbe add orb mov dec mov jae imul cmp in sub mov dec pop repz cmp roll jg jbe push pop fildll imul xchg pushf mov mov inc sub jae call mov xor aas out xchg push out xchg (bad) mov incb out xchg divb fs cmpsb push pop mov xchg add sub mov inc ret and mov push xor test sbb sub jp out pop aad scas popf jmp test adc (bad) not adc or pop aad xor jo fldln2 dec dec mov lcall jo stc jo pop push jmp xor cmc les ja inc mov lods pop mov fsub leave in outsl sub sub dec xchg or in int3 pop ljmp mov jle jb popf jno mov je gs mov add xor dec ja add mov lds jg and push (bad) xor xor xor movsl adc mov (bad) mov in daa pop cs je insb rcll sub and divb je jmp (bad) and das mov jl (bad) repz imul lret lret shr mov je push xor jne pusha sub lret sbb test push int popa call and cs lods push dec lret or and push out adc mov xchg aaa imul jns mov in sub add popa push xchg enter sarb cmp loop cmp mov xlat inc adc sub add pusha xchg sub fidivl dec icebp mov mov and cli (bad) notb and xlat add lahf adc xchg lcall and fisttpl or add idivl push jbe push dec push lea fdivrl imul push inc add dec pop lahf loop je (bad) out loop cltd xchg and rcrl stc cmc mov out cs arpl jns jle dec into mov jp ljmp cwtl lock mov aam (bad) jns movsb push inc pop push jae lods in or cmp dec mov xchg pop mov push (bad) pop dec idivb lods xchg pop popa lret mov outsb xor ljmp mov xor in movsl stos jecxz daa ss test mov in ret xchg mov cs sub push (bad) jbe daa push out sub call sbb dec adc push fbld pop divl adc pop daa (bad) mov stc das and sub push idivl sbb jmp int bound dec gs repnz mov pop add mov fbld lret push pushf mov aas xor add pop xor inc pop and icebp adc (bad) mov cmc leave imul repnz push sti insl call in mov cmpb fcomip push ret test hlt jg cmp movsl lock or xchg aas scas and sbb inc or ret cmp pop mov icebp add aam mov (bad) popf std adc notb repnz lret movsl rcll pop out stc push add call dec cmp (bad) add and ds or push or shll inc mov cmp mov fs and jmp addr16 test sub mov pop cmp je stos clc cmp repnz sub stc insb ficom out cld xlat jecxz dec jmp pop xlat mov daa mov cmc and pop or repz xchg hlt xchg push pop movsl clc add ljmp adc stos cltd pop js pop repnz ret push push push sbb and jnp and xchg loop sub sub or adc jle loop daa push lret dec mov cld mov repz adc ljmp xchg or rorl and icebp test ret cmp int or add mov lret jge sarb pop mov stos xchg push or lock daa mov jg cmp or jo xchg clc mov mov adc popa loopne daa divl inc pop out loope pop into sti add incl and mov push fisttpll std pop xchg rorb (bad) adc neg (bad) push pop jnp jp loop add and push clc test rorl push and inc ficoml mov sub pop cmp dec orl leave inc push jle mov adc dec js clc insb movsb or pop mov cld adc das (bad) std lcall or pop jne xchg lahf inc xor mov imull ljmp and adc or push (bad) je add cmp das shll pop movsl fcmovu pop test daa pop push pushl rcll cmp jns lret xor pop mov add sub lret imul push inc cmp dec adc rorl push push pop mov das add add push sbbl cwtl pusha out add (bad) stc fwait push mov or out inc jo in sub sti xchg clc mov popa lcall xor push push mov jle aam test cmc adc push in mov or lds xchg jb out fucomp add or pop or push mov cmp hlt (bad) repz sbb loopne cmp add pushf add xchg fldcw pop pusha sub push push push mov adc scas mov xor push neg pop or clc pop cltd pop xchg jmp pop push mov addr16 push sbb push xor xor stos and push pop push and popf dec (bad) or and and adc pop pop test inc and push cwtl jg add popf dec repnz cwtl cmpsl or in sbb rcrb xchg not pop adc scas add stc cltd mov cmc mov fcoml aaa repnz xor sub daa and idivl dec nop mov push sub lods insb gs out out mov xor repz mov lret mov sub fsts and stos mov pop push pop xchg push push mov mov add pop out pop fdivrp cmp push push jbe repz pop shlb dec pop xchg inc pop push test iret test add lret sbb mov ds repnz sahf xchg rorb sub (bad) and xor fisubrl xchg leave into icebp push pushf add mov repnz sub push test std cs lretw push mull mov int3 shll pop (bad) cmpsl mov rcrl mov (bad) mov stos das testl popf mov add int3 xor pop lods mov xor and leave ret xchg xchg orb xchg mov dec jecxz xchg ljmp pop out push and xor data16 es out sub fldl sub or data16 jb sub dec sub movsl inc outsb xchg jecxz adc icebp scas bound pop lret xor ljmp shll dec imul stc sbb add aad out call xor dec fcmovnbe or in xchg lret mov cmp lret mov cltd push lret out rcrb int3 dec push scas xor negb mov push jnp nop fiadd fldt push outsl or adc inc jecxz sub fsubl adc xchg clc push les mov sub mov ret lods fs inc ljmp (bad) dec add icebp and sub scas out jp sarb sbb inc into or sti lret stc sub sub sub mov sbb lret adc add dec fcompl pop pop pop daa ja cld and jne jg cli jecxz pop mov rcrb fcoml jbe daa ljmp (bad) or mov movl cmp lds jmp cmp or xor pop mov fs mov jle push hlt push lret insb in dec cmp dec (bad) jmp out mov into vfnmaddsd jecxz jnp test movsb adc pop mov dec jecxz mov jmp mov fcoms imul push or or ficom and sub jo or insb xor xchg into stos popa outsl leave sbb lods lret add gs mov jbe ljmp and mov aam dec dec mov cmp mov or call and cmp mov scas pop adc fbstp mov fstl jg jle mov mov enter sub mov sub jmp je push das cld add leave and cmp out (bad) cmp iret or popa and sub pslld mov ss sbb not xchg mov imul adc bound leave and add and cli ret jge add mov pop scas dec scas ret sti pop mov add loop popa or dec sub lea jp outsb jb iret out sarb dec mov or jp add gs dec inc pop ljmp inc sub add bound inc int (bad) popa sub or mov pop xchg and mov in jnp fsubr fsubs fistl mov out mov dec jecxz push cmp add xor xchg sub fnstenv leave fs fidivl and inc dec xchg jl lds repnz jbe (bad) ljmp pop mov cltd jo sub or or jb ljmp xchg adc mov cmp add cmp sbb fidivl ds (bad) jae (bad) sub shlb pop adc lock mov push add shll fisub pop in in mov mov cli adc outsl loop adc xchg pop dec leave jg aad push sub cmpsb pop imul jno (bad) ss push call (bad) pushl fstpl nop idiv icebp cmp add (bad) cmp push pop xchg icebp lea repnz (bad) sbb mov jmp lock fnstcw nop loopne repz dec and sbb sub push jns fdivs aas (bad) pop test sub mov out xchg mov adc adcb and and sbb mov js add ljmp addl or shr cmc icebp jnp icebp bound imul push adc cwtl cltd das sub (bad) fldt aaa mov and dec pop in push mov jb adc push ret cmp into test pushf les inc into or adc and sub iret mov jno imul adc jmp cwtl nop xlat dec xchg push inc aam sarb pandn or or popa (bad) (bad) outsb sub ret dec cmp sbb add sbb insl mov sahf and (bad) in iret stc popl jnp adc pop push mov mov push in es imul or mov xchg fnstenv adc add mov stc push or (bad) xor (bad) xlat mov jmp push push (bad) movsl scas cmp dec mov test mov mov add fnstsw in lods dec (bad) xor mov inc mov mov sti (bad) scas sbb loop mov push mov and xor sub jmp cmp retw and outsl iret dec sti mov xor sbb pop rcrl (bad) (bad) iret and cwtl imul std movsb mov jbe outsb push (bad) and mov icebp test addr16 sub push add pop pop cmpsl mov loope das pop mov (bad) cmpsb test lret dec xchg pop loop add aad enter dec dec pop (bad) into loop mov or jbe push jecxz xchg lds stc mov mov pop lret out jecxz roll fbstp cmp repz cmpsb add jl and xor mov pop add repz dec dec xor and xor pop push fmulp test ja xchg fildll dec add imul sub xor sbb ret jle mov xor mov daa sub jge int imul stos sub push shlb mov sub mov dec fwait adc sub push dec popf adc repnz dec push std and mov jecxz (bad) sub xor jg (bad) stos loop lcall scas cwtl push into xchg insb call cli inc out sar and cmp jmp jl push push pop ret (bad) jo sbb cmp push hlt sub neg ss ror lahf mov mov or inc push add push jo adc daa xchg mov clc (bad) (bad) xor xor popa mov lret (bad) adc cli stos xor (bad) mov shlb icebp add clc repnz pop xchg icebp xchg fsubrl jmp pop xor rolb add lock out push int3 fwait pop inc loope or (bad) mov xchg mov xchg adc pop dec mov loope push dec xchg out cltd aam cltd and repz std sar dec test mov movswl into sbb cltd loop repnz xor lods in imul stos daa aam loop and lods adc jbe xchg or neg sbb fildl shrb aam das inc rcll movsb push lret cmp daa es div popf je ljmp sti ret dec (bad) repz shll ret or mov sub out daa add cwtl loope shlb add out or jp pop sbbl (bad) sub rorl cmp stc sub test push mov pop loop and mov test imul shr loop outsb mov cmp sar das lcall rol shrb mov mov in js repnz pop lods xchg and pop sub addl mov or sub xorb add pusha ljmp mov mov out dec dec sti sub xchg movsb push ret (bad) (bad) jle imul cmpsl sub loopne jne xchg adc out popf and jb mov sub or or shrb imull inc xor and sub add imul mov rclb (bad) mov sub mov push or shlb jge or mov (bad) dec xchg out icebp and jno imul xor adc pop or and inc or mul adc inc xor pop mov and add mov and pop and push or fnsave pop rorl cmp mov (bad) repnz lcall sub dec test push test stos mov dec xor add dec mov lds push pop jp sub or into mov sub mov xlat stos lea xchg cmp dec outsl das jbe xchg xchg jg sub data16 jmp je idiv push ljmp jg insb push nop subb ret sub lahf repz and daa inc adc xchg (bad) dec stos out jle pop jmp mov out pop add sub sub (bad) xchg mov outsl faddl pop mov xor mov cld cld mov dec jge xor out and movsl ret lret dec sub fcmovnb adc jmp orl mov sub cli ja mov movsl dec add pop sub xor cwtl and xchg (bad) and (bad) aad xor pop cwtl lock xchg jmp mov in les les je or jg jp jno and data16 sub add or (bad) xor into enter fwait pop ds xor rorl cmp inc push iret jmp xchg mov push dec stos popa scas out js mov push sbb jge or ljmp sub and cwtl and inc adc sbb cltd cmp mov int3 nop leave cltd cmp clc bound cltd rcl jmp mov jbe lock mov sar int jb jg pop add push cwtl (bad) add sub inc pop or mov mov xor xchg mov adc push sub ja fcmovne insb xchg add sub repz lods loopne push loope xor cmp lock sbb pop dec sub mov xchg mov pop jns dec push fcmovnb or cmp xor add lret into scas add add mov sarl mov repnz cmpsb andl xchg bound das lahf jo pop leave ret lret ljmp clc popa add test or xor cmp mov push adc ret mov add inc es push or imul sbb int3 add sbb adc shrl sub sub mov insl test cli out lods out int3 jmp pop lret xor pop xor or sbb add jecxz scas sub sub rclb (bad) lock fnsave std cwtl ret pop fistpll push sbb dec add mov fistp pop test xor mov scas divb and sub mov ljmp aas xchg dec push mov pop mov cli xor std insl and adc add adc das test mov xlat sbb outsl xchg or mov leave mov xchg pop mov push jbe pop sbb loope inc sub xchg mov fistpll inc out scas rorb out mov mov push (bad) dec mov pop mov mov lds add imul jecxz lea mov (bad) arpl cli pop cwtl inc mov xchg mov shll mov fildll jmp (bad) cltd push divl loop test push pop lcall fnstenv sbb lds pop shrl mov sub or hlt repz inc or add xor sub aad adc jno in (bad) mov xchg cmp imul sbb push jl pop out sbb sti cs pop ret clc lock stc xor pop pop xchg mov rorl push (bad) sub nop imul cmp jp inc iret or call fidivl pop scas gs xchg (bad) lret lods add and fwait adc out popf xchg ret xchg inc cmc cld or add jg loope ds cs push call pop loope test add pop sti jmp (bad) dec cli lret jmp ljmp sbb dec push out (bad) repz and (bad) aas mov rol sub add add fisub cli out mov sub dec (bad) int3 or pop sbb sbb outsb sahf sbb std adc sub xchg or mov imul loope sub sub or pop lds push sti test cmp (bad) jp outsb inc scas lret je cltd jge ljmp leave cwtl (bad) mov adc mov fsubrs cmc lods outsb adc sbb stc jmp mov push imul mov mulb and jo push lock dec movsb add ljmp xchg xor std cmp icebp rcrl mov pop js daa lods jge xor pushf push push pop push jne mov xchg icebp mov outsl add dec or xlat pop or gs stc dec pop repz (bad) inc js pushl les ret scas xchg (bad) sub mov mov lret mov jmp nopl adc mov sbb mov pop ret cbtw es and jge loope clc dec lds sti outsb mov mov int3 sub sub test sub dec xorl jmp pop stc les xchg out dec xor jae push mov daa jmp mov movsl cs dec jge jns outsl and loope jl jns inc push add stc jle sbb pop ds shll loop mov fiadd stc mov repz leave (bad) (bad) pop std or data16 pop add xor mov and icebp or and (bad) jmp fsubl (bad) cli or out mov pop lahf adc mov ret fsubr jbe add mov (bad) test outsl sub (bad) sub mov outsb lods cmp insl enter push mov gs rolb xor xchg pushf nop lret push ljmp mov je shrl inc popf push into cmpl xchg stos fdivrs add xlat or fnsave cmpsl loopne ret pop mov mov push dec and mov cmp into jno jno xchg ljmp cmpsl pusha or mov aam movsl sub ss lods repnz push xchg jbe jmp pop stc pop adc pushf mov or dec pushw dec dec pop bound sbb adc icebp das jle outsl imul adc adc (bad) iret add hlt inc or rclb loopne fimul lret and add fldcw imul sti xor (bad) movsb sub out mov xor mov clc dec jns les xlat mov adc mov imul or loope insb mov dec lods das mov lea pusha scas or repnz xchg mov jp jnp pop div test in fiadd and mov or notl xor inc pop ja pushf divl sbb mov notb pop test inc jle or sbb jno mov inc xor adc mov sub xor add or cmpsb notb xlat lds and jbe gs clc jb lret mov popa scas ret mov xor add rorl mov int popf cmp (bad) js fbld dec jb dec and outsl mov pushf xor mov jno xor and jle mov jne test (bad) add jno (bad) mov sub pop les mov mov mov stc (bad) in lret repz popf jle cmp push dec lea cmp shrb and je mov inc test or pop and mov inc bound adc push mov loop lret gs dec xor cld inc mov add out cmp ret pop and or pop out pop (bad) mov cltd pop shrl dec (bad) xor out mov push leave (bad) out mov (bad) pop sub mov scas out imul and lret in int3 jb cmp sub rcl cmp cmp mov (bad) dec and stos adc adc or out rclb pop push and and and xor mov inc mov rolb fldt loop gs xchg repnz (bad) mov es adc add push jl ret mov mov das add lret subb cmp mov mov dec pop int3 enter and ds not adc popf (bad) lret jno cmp roll and enter cmp jl in clc mov stos popf or cld aad lea and ljmp add mov push xor sub movl ds xlat in mov sub aad jle lods movsl imul xchg ljmp push iret sbb das sub scas mov (bad) jno jne or (bad) xor ret add (bad) pusha sub sub adc int3 popf shlb xor inc and push fwait pop ret (bad) out sub add ret and call mov jae adc scas popf add or pop dec fs popf and inc rcrl fidiv fsubl (bad) es mov (bad) dec mov idivb xor (bad) sub sub and xor or pop ljmp inc mov inc mov cli cmpsb and rorl out add fstl arpl jnp cmp mov cwtl lretw inc cmp flds cmp cmp dec or iret ja adc popf jne dec xchg jge ja pop jbe fisttpll fnstsw pop (bad) popa mov push daa and xor (bad) jmp fisttp fldenv or in mov jne or xchg dec std sahf outsl inc add pop xor out outsb test shll roll or mov dec stos or fisub pop and (bad) adc pop pop dec (bad) push mov dec xor ljmp js xchg add or adc xchg mov aas (bad) adc sub xor ret fs lds mov sbb add cmpsb test icebp lods jnp sub mov scas fcompl sub sub icebp (bad) pop cmp loope mov imul pushf cmpsb or xor push xchg mov mov xor test popf pop mov icebp ret test pop sub icebp jns cmp push mov jae cmpsl aam pop push xor mov cmp add test jmp fmuls mov push mov and clc dec repz mov jo and inc lret pop and stos test jecxz xchg in sub bnd or ret (bad) std inc das popf add sub das or sti jecxz jmp sub pop nop bnd xor xchg outsl leave (bad) jnp pop ret (bad) mov ljmp mov adc repnz cli dec hlt ljmp push jp addb (bad) cs dec or (bad) mov push fs jbe imul push stos jle les adc mov psubq gs fcomip or cmp push sub inc sahf xchg (bad) cwtl or in jge mov ficoml loop cltd sahf push popa ja bnd lea std sti dec dec mov mov shll dec repnz mov dec mov mov out jmp add lods imul jecxz adc mov pop stc test dec sub xor leave and neg sti (bad) lds mov jmp and (bad) and lods (bad) lret pop add xchg ja cmpsl daa mov in xchg popf push cwtl aam rcrb inc lret sub dec mov dec cmpsb dec mov sahf popf sub cli movsl ret push in cmc xchg fmul pop stc stos cmp das out inc xor dec sub jge repnz dec mov mov bound pop xchg xor pop and xor repz sub daa push xchg sub ds jge stos pop pop adc lea cmp sub add js lds fs out pop mov cltd dec or add cmpsb int sti sub and leave imul jno inc or and sub push stos pushf daa cmpsb or dec call divb push (bad) jbe mov (bad) mov mov or push je pop sti bound int3 dec cwtl (bad) mov mov repz int3 test and pop mov jmp and pop mov sub out mov pop (bad) das pop and add add push mov fildll je mov lods push mov push sti push inc xchg cmpsb hlt imul loop xchg mov nop popa sbb cli bound mov and push sbb out daa sub mov mov ret cli lret jecxz adc xor cmpsl jo cmpsb call in jge clc xlat xor cmp icebp mov xor or lods push adc testb daa dec fistp sub mov dec scas int3 dec sub dec out mov xchg out gs add inc icebp push dec test clc mov sub sub out das push xchg idiv jmp pop mov adc and pop outsb mov xchg fstl push outsb and das sub into mov cli jne fwait test push out mov or xchg out jmp scas mov mov (bad) mov mov mov fisttp repnz leave pusha sub test outsl je dec sarl pop std xlat ficoml inc ljmp or sub dec push popf mull add cmp lds fidivr sub mov arpl pop jp daa fst sbb sbb push or xlat rcll lret dec jecxz daa out data16 inc mov ja sbb sub dec outsl dec and and and daa (bad) push sub sub jo adc test daa pushf sbb loop lret out jmp push iret arpl jmp std or out (bad) adc inc out pop and xlat pop js iret cmp cmc mov (bad) (bad) mov jp mov scas xchg fsts mov out notl push (bad) sub pop sub popa and (bad) imul movsl pushf jb lahf push insb movsl xchg insl in mov je in pop add add push push cmpsl movsl in pop push or sub mov fcomp mov (bad) insl cmpsb (bad) xor push pop jnp inc cmp dec and daa add lock and int3 sti mov mov add (bad) mov mov jne and inc insb scas add mov mov push pop cs aas mov sub fld pop add xchg in loope es mov shl cmp mov sub pop pop push test mov and popf insb jne iret decb jbe dec mov adc out es lcall das fisub jle jae push push fiadd push je in cmp mov jb imul push adc and or daa fdivp push mov fsubr pushl fcoml add out lret fnop pop lret dec cld inc mov sbb (bad) enter loopne (bad) mov std stc aaa fs mov xchg pop leave repnz or push mov add ljmp rcrl pop cwtl inc out or jmp and fldcw sub aad loop mov ljmp pop loop jg nop mov sub data16 loopne in jecxz xchg mov xor and mov cwtl leave (bad) xchg jo je sub int3 call pop xchg (bad) in push sub or repnz push jnp mov (bad) jg dec push loop jecxz cmp sub test add mov push neg dec int sub test push setg cmpsl insb (bad) inc gs popa sub fidivr test aas lods (bad) mov out dec lods sub (bad) aad das xchg jle lret dec nop adc iret int3 sbb icebp stc push fiaddl or push out xchg push mov inc stc ds ljmp mov ds lea and dec jne jmp test lret out pop test popf nop sub stos cmp fsubrl adc mov pop jo and dec mov lcall push sub popa addb sti add scas loop xchg in pusha shrb mov xor xor jle lds adc sub xlat test ret pop aam (bad) sub repnz sub cmp subl jg xchg xchg adc mov fmulp push lahf (bad) repnz pop sub xchg cltd loop call xor cs mov adc xlat fsubrl or push lea in xor movsl mov sti sub scas sub jmp fisttp add cld cli inc xor pop adc movb or sub hlt out mov (bad) arpl aaa cmp jae mov dec xor mov call xchg (bad) ljmp xor adc in mov adc push movsb add mov or gs cmpsl fsts into mov adc xor cld and adc jno push in icebp xchg clc cmpsl ficom sub or or into mov ret fucomp mov lret and pop xor adc out (bad) pushf pop repnz fs cltd adc pop ds inc add or div pop adc push xor mov adc mov push test addr16 dec sub iret mov add dec (bad) xor in std inc mov out lret fs lods insl mov (bad) push add out fisub inc or dec and jmp int3 rcll mov push mov add clc xor add jmp adc mov cld std cmc xor or dec stc adc or mov sub lahf inc repnz inc xchg xchg jmp in pop and dec mov cs cmpsb leave sub pushf ret pop scas (bad) clc mov xor ljmp cmp sub negb inc in push mov daa insl add test inc mov ljmp popa adc sbb lock mov or or loop add scas cmp out fwait arpl xchg (bad) mov push sub add sti pop xchg push (bad) mov sysenter xor (bad) dec je mov jnp jl mov pop enter repz jb or mov push sub adc sbb rcll scas and js (bad) mov jbe out and fsubs sub into xlat test mov push mov cmpsl movsb push out insb adc mov dec push fdiv sub fmuls test lds lods (bad) push xor mov pop push sarb leave lret imul pop push enter shrb xlat pop into mov sub jbe adc pop stc mov (bad) mov ja mov in mov int xor mov fstps or repz or and (bad) leave stos mov inc outsb pop jo pop push (bad) sub fistpll imul ds lcall lock add ja clc imul and sti mov rorl outsl or shl add push mov push sub mov add cmp dec int3 jge jb pop fisttpl mov jne mulps xchg jne mov xlat addl lahf xchg xor push ds fmuls scas repnz ret push push and (bad) adc xchg sub pop jae add mov and adc iret mov mov mov negl jns push pop stos lods push or iret movsb inc mov mov lret pop cmp fbstp and xor jmp or add adc mov jge fildll div and (bad) jle ret dec lods mov (bad) mov xchg push sub add add in cs and xchg notl cmc push stc adc or jb dec push out xor iret push sub into les pop rclb add ljmp dec xchg je imul xor call cmpsl repz xor aam and out push mov jne (bad) (bad) jg xchg daa repz or inc ret shrb call (bad) sbb fisubr and push aam xor ljmp stc sub or pop les fwait ret (bad) loope cmp and scas sub in test or xor ja into or push or mov shrl sub cmp jnp push lret arpl and or jns test rcrl push sti test movsl lea and mov and xor test mov sbb (bad) pop mov push adc dec into ss push or cld dec pusha or outsl imull dec clc push dec imul sbb dec cmp mov cs mov loop pop mov popl mov fimull and sub std push lds sub (bad) adc sarl imul (bad) and lods std mov imulb mov pop sub pop shl (bad) mov out xchg enter ret ret mov lret pop jno and enter outsl sub fldenv aas jno and ds sbb lea and push add sub leave lret xchg je sbb lret or xor pop xchg scas (bad) (bad) sub lret pcmpeqw dec xchg ljmp sarl xchg or add cmc or mov cld ljmp mov in sub repnz xor mul add test ljmp lahf push push into stos sub xor add mov clc stos leave ljmp mov pop mov dec xor jmp jge push mov ljmp (bad) mov sahf pushf out out fucom and jge rcr rorl out std dec hlt jmp cld inc movsb adc mov out mov mov mull das push sbb outsb dec pop xor inc sub xchg push cmp icebp sti inc mov out stc pop loopne mov (bad) lret jecxz fs sub imul cmp dec (bad) out fldenv and mov add xchg jge stos add sub lret shrb popf pop cmp lret cmp jmp scas push cwtl adc mov popf popf jbe push loop aad jnp repz and adc mov mov dec hlt add and test push out in xor pop icebp jmpw mulb pop mov rcr push xchg loop test and jmp (bad) gs scas (bad) pop nop aad fimul or shll inc (bad) sti sub inc xchg add xchg xlat cmp ds add add repz in push inc out and (bad) out mov xchg ljmp dec add repz add pushf and pop in xchg dec pop out sub or cmp pop add jecxz sbb es out mov jg loop and mov cmp sub loop or repnz popa or mov xchg repnz inc mov leave sti add jmp (bad) mov sbb nop pusha arpl jb icebp in loop ljmp xchg out imul mov dec jmp sbb pop add lock xor lret loope xor out stc and dec pop imul push loop sub dec xor js pop (bad) or pop mov test lcall out pop scas adc cli mov and mov xor test lods out pop ljmp and push shrl inc fwait pop add shrb xchg adc pop sub popf adc pop pusha or cmp and rorb dec fbstp out adc mov ljmp xlat cmpsb push jecxz shr xor lret add lahf pop sub ficom adc add imull aas add xor push and test cmp mov jae mov orl roll jl xchg dec add and push push cmpsb adc mov add pop xor add push sub jecxz pop mov mov mov aad and jecxz sub (bad) sub and pop jmp repz mov repnz ret aad shr stos adc dec cltd sbb cwtl dec xor pop mov sarb jmp jmp fldcw dec ret fs test push fsubrs out call mov jns mov or mov cmp and sub or xchg add lret scas mov sub cmp or enter ss sti mov pop fidiv and cmc lahf rep dec xor dec mul xchg ret jge out or repz or xor in fsts sub push xor jge push iret mov jne mov addr16 bound test ds rcrb out add pop (bad) mov sub jle call movsl or xor jge addr16 fnstcw icebp out lods mov cld push jmp mov xchg jmp dec and cmp das aaa sub xor jl fs or mov cmpsb fiadd aaa and mov (bad) sub add movsb ret movsl sub lods pop push (bad) cli in scas (bad) ror flds pop shll ret or fsub out and sub and sub mov inc dec jo jo mov push xlat cmp dec mov jbe push dec adc mov mov or dec inc and movb and imul jmp xchg mov dec in jecxz add lds sub ljmp sub push or mov inc or jb inc mov xchg daa pop dec jno dec fs xor jns xchg mov sub dec testl ret mov push in and (bad) mov fldl push pop xor ljmp lods jae sub lds dec iret movsl mov mov ljmp mov xchg das push arpl push sbb outsl xor ljmp add andb (bad) repz int3 add cs dec jecxz das or and loopne movsb cmp fcomi jecxz pop and xchg fbstp lret inc sub fisttp (bad) (bad) lods jmp lret jb icebp test cltd call pop icebp mov fwait es ljmp sbb and mov jo dec mov out xor and shrb xchg xlat jg lret test sar je test dec test outsl outsl call cmp inc push int3 out push mov lock xor (bad) loop xchg repnz test pop lret orl inc adc xchg mov or dec add ljmp inc test mov mov (bad) repnz and mov xor je and jmp lahf (bad) shlb mov mov mov repnz popf outsl in das je jmp movsb lahf adc xchg sub inc je imul outsb mov cli in mov (bad) into pusha dec mov scas pop mov cmp and jecxz dec add xor adc jle ret enter inc fidivrl xlat mov mov jge pop imul adc mov and add cli fidivr lods push imull mov cld add and cli (bad) or and fisub dec out inc lods das push xor push mov mov (bad) add inc mov xor mov mov call loope (bad) mov lcall incl xchg inc mov xor and jmp in pop js (bad) jmp xor es out or pop cmp or mov daa jmp cwtl inc pop push lret pop dec mov jb cld or add push mov push mov xlat push mov sub push cmp adc cmpsb sbb sub sub cs aaa addl mov lds mov adc pop jg cwtl or ret xor jae sub xchg or push stc mov repz std in xor mov popf jne add test into stc sub xchg or fcos test sub ljmp xor repnz notb xlat add (bad) xor xchg into lret cmp adcl out lret and xchg sub pop movsl pop bound lds (bad) fnstsw xchg enter or push add pop pusha fild aaa cmp fild inc inc inc lods pop adc sub cli in (bad) and and mov push ljmp in jo mov sub fildl cmp insb in (bad) lock fsubrs icebp inc xchg sub jae lcall sub xchg loope jo out or add scas fs push add daa das sub lods add pop mov xor and mov fmulp addr16 cmp lea mov mov adc mov imul fdivrl push sub shll pop pushf shlb cli ficom push ljmp (bad) dec xor push pop jbe test or or fcoms sbb mov pop (bad) add out mov pop or xchg out mov dec dec push or mov ret mov mov xchg incb int mov (bad) jge data16 or pop loop fsubr lahf test (bad) (bad) cmp jno push xchg add xor or mov cmc push out pop std enter out xlat lods jnp ds nop adc (bad) sub pop xchg mov sarl movsl (bad) in in out add xor sub cwtl xchg or repnz xchg hlt sub fildll cli mov pop cwtl fcmovne or and (bad) call jae jecxz mov rcrl pop adc leave cmp sub cmpsb xor and lods cmp rclb push lds pop pusha mov pop loope sub mov and (bad) dec (bad) iret xlat or je pop or in movsl test jg inc les add mov and rorb mov pop lods push repnz dec aaa mov popa test xor jnp mov stos (bad) mull out pushl cmp (bad) jb push jmp mov repz movsl pop int3 push pushf mov xor xchg leave rcrb sbb mov xchg hlt aas xor fsubrs aas stos adc mov push or stc sti pop daa jge push push es sub xor inc cmpsl ja test lea (bad) xchg xor iret dec mov xchg outsl lods and lods bound sahf adc adc dec enter stos cltd and mov (bad) xor adc pusha dec shr and test in xor jmp (bad) jnp xchg mul shrl cs cmp sub inc mov jp ljmp dec into hlt adc push cmp (bad) push and mov ss loop pop mov push cmp adc sbb out mov inc sub mov sub cwtl cmpsl add mov push cmp pushf mov jmp outsl sub push (bad) hlt mov push clc mov add and fnstenv xor mov loope adc jmp and jmp xor leave or ja ljmp (bad) negb sub movl pop mov or push mov mov and jge and xchg or jmp dec mov cld and das or jae movsl sbb stc movsb xlat cli fldl stc sub test test inc fnstenv mov (bad) mov sbb scas lret scas call pop cmc dec das ljmp jg push mov and scas xor out in jmp sub leave adc inc in sub xchg jnp bound xchg adc xchg mov dec xchg clc ljmp fidivr push inc cltd dec sbb inc dec out lahf cmp jo mov inc aaa pop movsb and out and mov jecxz insl xchg repz mov leave jge int3 das js test and jo fdivrs mov cli cmp sbb insl movsb xor in jns lods fwait repnz sbb cmp fldcw movsl cli jg pop or ficoml inc testb and xor mov shll icebp sub xchg jg lret ret add jge sub mov repz std test sub repnz repz sub in xor (bad) cs aaa out int3 enter cmp cmpsb out xor sub sub bound or pop jns dec pop inc (bad) es inc sub dec xchg popa stc mov gs mov add outsl out inc dec ret es mov add bound jl aam scas jl shrl andb jmp addr16 aaa test jge mov sub repz aaa sub dec add jle pop iret mov dec les pop hlt adc push lock fmul (bad) loop xchg fs or iret mov leave mov pop enter sbb lret mov xchg adc sti out fsincos sub push jmp adc out xor ret out jmp in pop adc leave in fimul roll jo popf adc sahf or data16 push (bad) jne jecxz jns inc or xor xor xor mov jmp or sub mov fcoms dec jmp pushf mov fisttpl pop (bad) sub pop mov mov inc test lret mov icebp sti inc lret pop push lret inc jge inc cwtl mov pushf xchg pop xor (bad) out mov mov stc loop jne xor or sub leave divl sub icebp jne js out fsubrl jbe xchg push cmp xlat mov das fidivr or int3 test pop ss test call fucomi cmp loope add clc mov add cs mov mov popf cmp sbb mov shll push and mov sbb mov shlb aad mov jbe and bound ficoml xor push jnp sub mov loop (bad) xor add push fs add leave imul dec mov cmc repz loope dec xchg cld fidivr call inc daa out xlat inc insl sub loop shrl ljmp push repz popf rcrl push xchg push add popf jg loope adc pushf sub pop fldcw mov cwtl cmp sbb nop sbbb dec sub fldenv or cmpsb xchg sub imul sub lahf jle jmp je cld pushf mov add jne mov sahf lret add and adc jno cltd mov cmp jp std into (bad) dec call inc sti (bad) jecxz xlat in mov test sti sub cmp adc cmp test (bad) aaa and adc (bad) xor jg fwait jge mov dec popf mov or sbb mov aaa add sub and or xchg sub int3 stos mov sbb clc sub jnp out notb inc or push cli xchg xor and ret pop lods into xor mov sarl inc pop sub add or cmpsl add (bad) jg shll xor dec rolb fidivl (bad) sub es push lods mov xor add push lcall jp loopne jae lret (bad) mov fs mov pop push daa mov (bad) xor push push ret in sub xor hlt sarl lock mov shl movsl lock es (bad) xchg inc arpl and mov stos (bad) in cwtl data16 sub xor or aas pop inc cmpsl push jbe jno cmp (bad) stc ret js mov jae jle ret les mov stc cmp pop idivb negb gs icebp lods dec stos fwait imul pop mov pop and call dec mov push adc fisttpl sub imul fwait inc or mov xlat and and insl insb lds stc and and loopne or sti pushf and pop add add mov add add enter push out xlat and out fimul or dec clc cmc mov lret popa mov mov mov mov repz lcall test cmp and outsb add xor ret std mov mov xor cld pop sub mov test mov mov xchg ret mov pop pop inc or cs jne sub xlat ljmp sbb inc xor xchg xor or lcall or add pop and (bad) mov xor fisubrl mov mov enter add jns adc jp call xor test and mov cmp outsl popf and (bad) fist das push jae incl (bad) sub and or pop bound jmp call hlt pop or mov sar sub pushfw popf repnz adc pop mov in mov es mov mov test pop xchg data16 or cs sbb xchg aam (bad) sub daa or mov mov (bad) pop jecxz lret or xchg (bad) mov xchg stos xchg cld adc (bad) and mov jle and stos cltd xlat mov jmp insl sub xchg xchg sti xchg xor mov jge xchg push roll xor es pop movsb and mov in xchg data16 sub pop or mov push ret clc mov and (bad) xchg jae cmpsb gs pop or sarl inc cmp pop dec and sub jmp loop (bad) (bad) into call in stos test (bad) xor add pop in sub iret jo loope arpl adc add ret mov xor mov xchg push cmc cs xor iret stc andl pop push mov loop cmc (bad) hlt mov cmp dec leave xchg xchg add jbe push push repz cld fbld outsb mov mov bound sub rcll loop mov sub dec popf test repnz pop fisttpll jecxz loopne insb rcrb lret lock xchg into xor cwtl mov (bad) aas mov mov mov fs adc xchg push cmc (bad) mov int les fs out subb sahf movsb jmp (bad) sbb pop lock (bad) mov fucomip pop push push mov ja push dec loope xchg mov sbb mov imul orl cli aaa cmc test mov scas mov xchg mov and pusha inc and xchg adcl jl pop sub sbb scas je out sub das push in xor inc scas adc cmpsb rorb test push or xor xor xlat popf fnsave jmp leave aad adc or mov into cmp icebp mov dec imul lods js jb xchg push or sub fstpl xchg mov (bad) mov (bad) jbe in fcom out push sahf add hlt movsb adc test xlat out pop sub lods call pop mov xor pop leave push int dec mov je inc imull ret inc push jmp mov dec loop mov sbb outsl mov popa pop or leave push aaa aas or sub or rorb xor fcmovne nop adc lahf out mov pop sub cmp jp fwait and stos mov (bad) addr16 (bad) sti lds mov scas dec mov jmp push stc pushf leave mov out push or rclb movsb out scas mov jne addb mov shrb xchg loop (bad) mov sub mov push ret mov cmp sub aaa mov mov xor mov in rorb es (bad) lock div sbb mov dec imul lcall jl imul xor xchg int3 and ljmp sub sub into mov sub xchg (bad) ffree sub loope in test pop lods mov add sub cli fsubrl add jnp inc mov dec scas sub push addr16 pop push out inc mov adc adc dec add data16 aas dec les (bad) mov ss add mov insb mov sti out (bad) stos pusha scas xor mov pop hlt (bad) test push shl push out pushf stos mov mov fbstp mov in dec frstor mov leave push jns dec shrb in mov dec int3 icebp xor mulb pop pop cwtl in rcl cmpsl pop adc mov cmpsl or and imul push imul pop adc xchg mov adc inc subl pushf addr16 leave xorb add cmc rcrl jle inc iret ljmp out pushf and xor (bad) xor sbb iret shr int sub mov (bad) pop ret jge aad cs into mov pop xor das cwtl scas loope and pop add mov push pop pop addb or pop (bad) mov add mov icebp popf or (bad) test popa sub inc push xor pop sbb pushf inc xchg pop sub (bad) pop outsl add push lret (bad) mov jg in push sub cmp mov dec (bad) xor shrl call sahf and es cmp jl test imul sarl jae in dec movsb test stos xor or cmp (bad) aaa sbb rcl lret inc or inc mov mov jl sub sub sbb xchg mov sub sub adc test and mov pop sub and and (bad) mov aad pop sbb ret push xchg xchg iret xchg popa xchg sub pop mov sbb ret xlat and test push movsl jl jmp lock xor fcmovbe scas pop mov popa cmp dec adc push enter push push dec jne in lahf pop aad mulb ljmp dec add mov push cmpsb or and sarb jl xchg je loopne (bad) sub sub add fs push mov and xlat or rcl and add inc and or std adc xchg out adc (bad) call call adc (bad) jge data16 into pop mov out dec out adc and repnz mov in jo xchg adc xchg mov testl fadds jmp scas pop stc call cmp mov inc push addr16 dec and repnz xor add jg or sbb fistp or loop mov or add rcrl ljmp shlb icebp add mov pop (bad) and sub stos out daa or add sub and or push mov icebp inc push adc cmp sub (bad) and lods xchg das or xor scas clc insb mov adc ljmp dec into cli lret int andl sub jno jmp in mov outsl leave adc jae pop scas and sti repz xchg ss push notb popa lds add rcrb cmpsb xor mov (bad) daa or xor inc andl mov push jae add sub popf pop add sub mov xchg mov lcall bnd cmc (bad) xor pop pushf mov push fs add push mov sub push and daa ret aas call jecxz jp ljmp ds mov pop lret cmp add lahf pusha scas add xchg adc inc andl or out add dec rclb and inc mul ds ret push test pop mov mov enter loope adc pop mov je ficompl pop leave ret dec hlt xchg pop lcall mov pop data16 inc mulb inc int or mov jb jmp pop sub shrl clc je and bound lock mov sti inc and or adcb movb inc xchg test test mov cmp or clc adcb sub pop pop div xchg xchg in sbb lret pop pop jmp imul in sub out inc cwtl daa (bad) shlb adc xor mov int3 push mov jle pop repz pop sbbb jb int and cld sbb mov shr ja (bad) shlb cmc lcall or cwtl scas sub sahf hlt leave testl lret fs and pop jno stos mov cmp or popf int3 sbb repnz repnz cli xor ljmp xorl je test mov xchg sub dec pop test aaa cld jo addr16 aam lods xchg rorl push movsb mov or mov repnz fwait mov dec out (bad) cmp sub stos je stos in or mov clc mov adc ret in inc pop cmp lret mov xor dec adc cmp push add sbb xor adc push ret or cmpb sub xor cmp sub adc ljmp push jle and mov push cmp mov cld xchg scas sub mov sar es mov or daa jle pusha ljmp icebp scas loop xchg cmpsb arpl icebp out gs xor rcll out movsb sbb ds movsl loope mov cmpsl and aam sar repz xor hlt in dec and sub aaa les imul aaa imul cld sub xor xor sar imulb fs scas fs mov out mov pop sub sub clc mov (bad) and and ljmp loop and xchg jo mov inc fisttpll xor xchg adc (bad) mov pop and dec leave sub mov lret insb or xchg test out mov or jns push fst lock or mov xlat jno imul jmp fmuls jg (bad) stos popa std ljmp xor jb mov into jmp inc or rolb sbb cmp fidiv (bad) mov sub dec xor sub mov pop jecxz enter adc shr dec shrl daa pop dec push enter adc add and das lock xchg sbb ds fdivrl xchg ret sub cld lock cltd xor das les call cmp pop mov lcall repz (bad) popf sbb adc cmp out inc leave ljmp cmp js jb xor or mov mov xchg lods leave mov mov stos push cmp data16 jbe into (bad) sub outsb xor scas mov jp mov lods mov pop mov in mov inc pop lea addl add lret mov and and dec push lds mov mov sbb and xor out mov xchg out xchg add imul or mov shl push add (bad) or and sub pop test xor cmp mov js mov pop cmc sbb add test repnz mov sub imul and push das lds xchg ret xchg (bad) add pop mov out sahf jae mov loope cmp jnp sarb sub jmp jge xchg std xchg int repnz lret add loope bound in test ret pop sub loope or mov and sub or cmp xchg (bad) iret xchg mov test xchg sub mov imul gs leave fisubl imul pop and (bad) xor mov call icebp call sbb jne push lahf pop (bad) repnz adc cwtl adc cltd mull cmp shufps add cltd or in adc cmc jns mov pop loope sti pop pop (bad) xor jbe ret pop loope sbb pusha sub sub popf sbb xor xchg inc sti sbb mov or aaa sub ret outsb xor mov pop in aas xchg add imull movsl test and inc jle sub stos cmp mov pop clc andl rolb cmp lcall mov dec or sub stc xor mov ljmp stc jg cwtl sub push cmc dec add outsl loop fild add lock jmp and (bad) or pusha fidivl pop jns repz gs mov outsb out lahf pop dec (bad) or pushf lcall (bad) push pop cmp fdivr lahf pop mov xchg pop das add push xchg (bad) adc xor pop xor and jae and add xchg int3 rol xor mov (bad) pop inc push xor imul in in mov bound add mov pop jnp je mov mov dec sub xchg call mov repz mov or (bad) pop sbb sti mov push loope ds sub push mov mov or xchg sub addr16 stc cmp test push sbbb sub fsubr inc and lret sbb test out mov cs sub mov leave and pop mov rcll nop sar mov test mov lret pop push repnz push xchg and or xchg iret scas sub mov repz or jp xor sti or inc and add or mov push push dec mov sub mov sub push inc cmp cmp rol icebp enter enter cmp push xor mov xlat pop mov push xchg stc sub adc and and and adc add cmp mov pop and push pop push mov (bad) fildll je addr16 mov cltd pop mull push jmp ds xor scas add out cmpsb lret pop xor cli (bad) mov jmp fs cmc into and fbld mov push out cmc jp (bad) xor xor push arpl hlt mov nopl enter mov js les dec or ljmp aaa cltd push inc add and rol add adc jp pop test stos lret add leave fldl mov sub jbe (bad) xor push dec repnz popf push (bad) stos sub mov gs popf cmp stos sub test cmpsl push gs into stos mov mov or daa adc leave fist daa xchg in outsl lret sahf daa sub inc or xor cwtl fsts daa movswl movsl imul jne push das incb imul stc sub adc outsl mov cmp cvtdq2ps out xchg scas sahf inc and test aas or int add push and sub outsl sub mov fild ret sahf xor sti push hlt mov (bad) add xchg jmp xchg adc in loop push mov mov mov insb push or mov xor push or cmp mov in cmpsl push mov das loop inc pop or aas pop mov rorl inc push xchg scas negl popa add xor lret or lods cmpsb cs pusha sub pop (bad) cmp sub cmpsl sub bound shrl repz sbb and sub pop inc jge pop dec push lret add hlt out adc xchg mov fisub add mov mov and xchg jecxz lret sti stc in fnstcw jnp lods rep ja (bad) stos in xorl adc and cmp ss cld cwtl daa pushf fwait and sub stos cltd pop xor pop mov in cs call mov mov je jbe out out mov dec js cld pop cmp jg push cmpsb imul jmp or mov lock into mov repnz out and adc (bad) out mov sbb lret test or daa xor jl pop iret mov adc mov sub loopne ljmp xor sarl xlat ljmp mov pop mov dec lahf sub (bad) repz push xor icebp push sbbb cmp pop inc dec cmp jle push shlb mov push pop sub fcoml xor mov cs adc stos mov pop xchg xchg (bad) loope lods pusha or xor pop mov xchg xlat push sbb sub add dec push dec (bad) dec cmp shrb inc insb push xchg dec lds and sti xor mov sub stos lods xchg sub dec iret stos sub or mov int (bad) dec stc xchg fsub mov jbe stc adc in or (bad) and leave frstor outsb lds mov mov push lahf icebp mov sbb push cmpsb subb or add xchg bound fcompl cmp xor fidiv ljmp arpl mov sub push xor jg mov std or xlat mov or lods ret (bad) fldenv cmpsl push jnp lcall pop stc adc add fadds leave gs or sbb icebp popf cld jp pop data16 mov rolb sbb inc in push mov lods scas sub test jl dec and repz es and sub pop or test push shrl inc test push pushf xchg clc inc imul dec xchg inc or and shlb pop mov adc mov cmp rorl sub and push push sub jge fcomps pop icebp jbe jle jecxz add add out sub pushf ljmp mov imul dec cmp adc cli ds cmp jo adc cmp daa ja sbb jmp mov inc dec in and repnz insb js pop das out and out xchg cmp leave cmc push cmp jle mov or fildl je (bad) mov arpl (bad) jge jp rcr xor mov sti jge popa popa into outsb repnz shr shrb push push inc and mov pop imul xchg sbb gs pop dec push push and addr16 gs mov jae jne pop daa push push jg fidivr add mov mov sub movb push movsb mov push dec sub adcb xchg ljmp add push ljmp push mov shlb add xor xor test inc mov sbb cs sub xchg fstpl mov (bad) jae and dec cmpsb das sub jp dec cmp adc repnz lds sarb mov cmc shrl jne push inc sub sub cmc mov add sarb inc xor dec out xor iret xor jg std inc or or (bad) mov jb xchg push cltd mov test cli pushl call aaa insl pushf les leave fstl xchg add dec (bad) loop mov (bad) ret aad insl push daa cmp aad imul sti aas imul xchg nop add lods fcoms xor icebp out lahf cld andb mov clc and mov movsb nop pop leave xor fdivp add mov pop mov sbb fiadd or mov loope lret subb aam pop jge or mov bound push adc (bad) mov and inc sub (bad) js dec jo pop pushf jge mov mov or sbb xchg xchg push icebp jle insl rcrb jmp inc pop mov daa pop pop or jp sbb jmp daa dec mov adc stc int3 xchg out fs test scas pusha stos call dec mov inc imul ret jmp push push fincstp shrl sbb or mov and std cli inc mov inc lahf sbb sub mov stos mov sub mov ljmp dec xchg les pop notb xor add data16 or and jmp push pop testb xor xlat push inc xchg fimull mov mov jl mov cmp lods mov push stos jb int lcall jg (bad) mov enter jmp inc (bad) fcomps xchg shrl sub push sub cltd ljmp xor pushf sub insl pop adc inc lret gs xor out mov push das add mov out inc pop aam shr add adc xchg cwtl ss mov dec mov mov sahf adc sub mov das leave fcmovnu movsb mov inc jb dec mov faddl jmp adcl mov adc adc stos pmaxub daa negb rcr mov or sbb mov imul push xchg dec ror sbb sub jecxz aam leave idiv arpl call jno (bad) pop inc mov je jb js and dec add imul inc mov notb jne adc mov jl and jbe outsb cld jle jmp (bad) dec pop cmc sub cmp push xor cmp into pop mov cmp ds scas bound mov dec orb mov mov jns or lahf push movsl dec roll xlat ret sub pop js or test iret lahf pop sbb or pop xor ljmp adc flds fild jmp jp xchg pop mov jmp cmp imul push mov sub lea cli cmp or or dec jl (bad) test cmp movsl test in xchg aad xor and (bad) push (bad) (bad) dec xor mov sub sub leave sbb dec leave xor add add push gs nop out mov (bad) push gs push dec bound xlat xlat out xchg mov xor pop imul leave call mov or ss imul sub vcvtsi2sdl mov adc or outsb cmc sbb mov mov pop repnz stos out inc out outsl lods xchg mov pop repnz sarl enter icebp lret out jp mov and fs in push das pop adc (bad) insl mov mov ja imul push or (bad) inc andb arpl and pushf fdivs xchg jne xor pop popf dec rcll scas pop sbb icebp and jmp cmp and call lahf inc rcrb iret and xor fistp mov inc pop popf pop xchg inc test mov mov jno imull adc lods add (bad) dec div outsl out aas mov lods pop mov dec add mov loope out mov xor add cmp add and xor xor das gs scas xchg dec mov mov mov push xorb stc pop cmp lock lock sub jns push add sbb sbb cld inc or mov in lods xchg sbb das dec mov adc addr16 and inc neg jecxz xchg add (bad) mov outsb sub mov pop int3 mov inc sbb xor adc mov ja inc icebp clc jmp pop divl mov mov push jbe and std jae xor test test sti sar fistpl imul and shrb mov add pop mulb sub sbb (bad) cmp out inc mov or jecxz shr int or add dec sbb outsl jb or pop add add sub fadds pop xor das sub mov fimul jno or xor jae mov mov loope jb cmp jne (bad) xchg repnz pop jne shrb ror (bad) jno leave mov adc decl sub pop in or pop pushf clc push dec js mov into jg mov push push loopne ret (bad) outsl repz or repz mov inc and push sbb call or jb push cli mov int3 xor or push (bad) (bad) out sub inc push xor lds lcall jb cwtl push cli mov mov xchg mov mov sub fsubrl dec outsb fstl pop adc cmp cli sub out mov (bad) pop and xor push xor xchg std mov and and or and mov dec cltd xor sub adc incl lock xchg (bad) mov dec cs leave sub loope lret adc lods jg (bad) cmp dec or dec mov bound xlat cmc bound aam push fiaddl popfw hlt lahf jb inc decb leave or and dec sub cld in rcr xlat or mov mov icebp out movsl imull inc loope jno movsl enter inc orl iret mov sbb push test mov mov dec out jnp mov in outsl xlat ljmp jne jo ljmp iret jecxz scas push lcall add fisubrl ljmp add pop ror popa test xchg jae repnz dec dec in push (bad) clc popa mov and jge rcl fisttpll mov adc and rcrb repz pop push pusha hlt jbe and push das cmp ljmp lret xor jg test pop (bad) push das jae movsl jg gs xchg bound sarb dec movsl jge sub idiv jecxz adc mov jns push push ss stos and xor das clc (bad) pop mov cltd add xor fabs inc outsb sub outsl mov out sub xor lahf pop xor jg lret mov scas addr16 lret sub or loope and insb (bad) sti and mov mov and sub mov bound mov fadd fcomi push popa mov xor cmpsl (bad) pop cwtl cmp (bad) mov call mov xor cmp cmp loop jp fldenv pop add popa nop and jnp movsl rcll notl xchg mov popa push jbe add lods in ds je popa fbstp stc cmp (bad) sbb jmp dec jecxz dec imul daa xor adc ret mov cmp into stc adc test sbb pop movsl mov call jb adc shll dec lods ficom int3 inc cmp sub test stos out rep pop and add cs repz mov test in out mov pop stos mov xchg inc pop and bound or and xchg test lock popf jno leave jg cltd movsl xchg sahf adc pop mov or pop cmp and cltd aad mov (bad) jecxz lds add je push loop pop mov xor inc dec lret clc das cmp cltd mov das adc je loopne sub xor out stos iret mov out das or mov push sub loop adc lds mov mov pushf pop or (bad) push mov sub movzbl int cmp vxorps inc sub inc es rcll adc dec fsubp test add (bad) mov inc and mov negb call rcrb sbb sub sub fnstenv je jmp push repz lret sub sub jp hlt out mov aam stos mov mov aad xor jmp popf mov add mov movsb fcmovnb and movsb xor or sub addr16 popl hlt mov mov jb cli jecxz daa rol hlt push push frstor aam pop xchg pop daa sti mov push mov std and ret aas pop xchg push pop or sub cmp sahf repnz xchg ret jbe int pop stc xlat das add mov fidiv pusha (bad) cmp popf pop and jae inc pop in std nop movsl sub stc scas pushaw cmp and mov lret cmp imul lds push call jmp sbb mov iret call pop cpuid sahf in outsl shrb push shrl jns cmp mov add adc jb and stos mov jmp loop je (bad) sbbb pop out es sub repz cmp pop in int3 ror jno mov daa dec into pop push mov and leave xor into pop xor stc mov mov (bad) jae dec mov add mov cmp rcl in stos mov xlat lods pop les mov mov cltd shrl call les in (bad) push inc sub push jno and cltd fs test add fildll mov sub cli pop adc fcmovne fmuls xchg fwait xor lret ficoml pop pop cmp xchg jmp sti out sub push add mov add adc xchg add add jge xchg loope mov aas stc scas sahf cmp out jae aas and ficomp and aad or std sbb sbb outsb push add das add push outsb loop and cmpsl pop and jecxz vcmpsd push mov push lods jmp popf jge bound ja cmp out push out xor in addr16 out pop icebp push add mov repz pop adc mov ret push ljmp add out je push push mov xor add das and ja aas push adc add call mov jl movzbl mov in mov pop add jmp gs mov add pop negb sub mov daa push or int repnz imull add sbb leave fs rorb mov and in sub jo ds jnp subb das push mov insl je push inc neg dec xlat mov push mov pop push mov jg hlt push cmp jbe lock dec neg or cmp dec add add pop sarl imul pop add push mov xchg in fistpll int sbb push sbb mov mov icebp pop mov insb xor or sbb rcr pop out iret out sub cli movsl pop cwtl and fs fsts fimull clc popa mov jo enter fstl pop xchg or push pop mov sbb clc out cmpsb adc icebp pop mov lahf cmc jae adc outsl xor jp aad mov xor push mov aad push mov dec imul addl (bad) pop push inc loopne jbe xlat sub jae jg cmp add pop pop or addr16 not inc dec xchg fisttpll iret inc inc cld jl ret cs dec dec xchg jae jmp push cmp clc mov push add push pop cwtl xchg and jp ror insl outsl js sbb add mov pop iret loopne out jle nop mov call out mov enter dec loope fsts push pop fnstenv inc mov out mov call push data16 repz push add sbb add push jle rcrb ret cmp fsts xlat dec mov mov push lahf inc cmp xchg movsl aas jne mov inc or pop jne xor or jg xchg sbb int aad add adcb xchg (bad) sub mov push imul sbb pop in push adc (bad) mov in pop ret clc popa in divb inc call and mov xchg mov pop and (bad) pop xor jmp sub or cli (bad) repnz jp push sub xchg pop lret out ja xchg xorb mov or imul fcomp xchg xchg std xchg rcll push mov orb fsubrs xchg mov adc mov rcll out mov cmp and je lret inc adc or and (bad) xor loope outsl flds push xlat xchg mov pop and xchg stos in dec mov xlat in mov sub dec sbb dec ret cwtl roll in call or lds and pusha sarb clc negb daa std xchg pop and dec or xchg imul add lret jmp movsl or mov scas jne mov fcmovnb add dec cmp xor lock lret xchg hlt pusha jmp adc lahf sar daa fcmovbe mov cld and and inc fcomps mov mov or dec xchg daa sbb sbb ret inc push scas xchg and pop sub or and sbb lret loop pop pushf cld pop and mov xor mov sub xchg out (bad) mov fist or dec xor in test xchg cli test lret dec adc test (bad) (bad) ret mov rcll mov out cmp xchg neg push aas jns xchg call daa stc out mov (bad) or std cmp inc rcll add ret jne adc sahf shrb add arpl mov lahf xchg lea dec sbb mov push dec jmp fdivs xchg into addr16 adc sub jbe loop push inc repz mov dec ja lods mov stos sub call pusha or (bad) negl in sub (bad) movzbl push sbb loopne lock xor sarl sub jno out pop sub xor (bad) cmc inc sbb or inc inc or ljmp iret repnz inc add mov jbe jno and outsb adc bound das lock push outsl or sar cld mov (bad) xor mov aad sub add mov stos jecxz int3 mov das (bad) mov clc cmc sbb xchg in xchg ljmp mov sub sub pop fs or adc cld xor cli jl pop loop jge insl imul lahf outsb popa lock pop jle mov adc mov movsl and dec in cs mov (bad) loop xchg adc scas out pop mov (bad) dec icebp mov dec insb push add mov ds ret jp mov mov iret rorl (bad) push or into jg das fs repnz out jg push adc add mov es scas leave and or ja mov lods jp pop mov adc popa test pop mov mov or or and mov inc or adc fidivl pop jo dec adc out gs jmp imul mov add in jnp mov scas int or roll xor sbb push xchg add mov mov pusha sub insl or lods sbb pop add negb cmp sub addr16 pop jne in les jmp pushf xchg call dec mov or sub or loope or mov or sub xchg js adc xor fst decb push test xor out in pop mov je inc sub stos mov lds mov mov bound sbb mov cmpsb (bad) pop add mov imul imul movsb add xor xchg inc adc cwtl push push pop les repnz leave or and or inc imul sbb cmp lret leave fildll sahf outsl push inc in test movsb pop and xor out stc add mov pop or sbb lret and lock pop (bad) into push and mov cmpsb ds xor lock imul outsl (bad) test jne insl xchg cld les shrb out and js popf fist popf dec cmp xor add rorb mov xlat stos fs fs dec xor pop stos popa sbb andl out mov ret (bad) mov repnz shl pop lret pop jl push (bad) lret iret and inc jecxz rol adc push mov xlat iret inc decb into inc jg (bad) aas pop (bad) lret fdivr mov loope sub pop adcb dec aas push mov jae scas lock mov imul sub dec sub mov and push mov ret or xchg imul jno iret sub sbb and notb push pop ja (bad) dec mov neg out dec pusha and or sub lds xchg xlat adc mov jbe sub and mov idivl scas sub mov xlat inc adc pop xor cmp mov rcrl sar popf lods jp xchg mov pusha daa or js mov fsts (bad) add fwait mov clc xor xor ljmp cmp out mov and pop lods or xchg add mov lds cmpsb shl call loop insb insb dec out jmp stos push imul mov mov mov sarl jmp mov add push not dec scas sahf cmp dec loop sahf mov popf int push out repnz mov mov aas mov dec push sub sub sub xor cmp rcr pop mov cmpsb jle add pop loope jg xor (bad) mov push adc test (bad) test stc or dec xor cmp (bad) scas repz sub inc lret mov dec ror xor push add inc push xor mov adc dec cmp jne scas and mov add xchg je jmp fcoms xchg jae xchg ljmp lret inc sarb cmpsl sub add ret sbb ret pop aam in cli sub cld ds mov lcall mov loope cmp lock movsb mov mov or xor or sbb jne aam xchg xor adc out dec scas sub mov pop mov jl enter stos mov and jp dec ret sub sub notb mov ljmp imul fucomp repz dec clc js scas negb push sub mov or (bad) xchg dec mov test mov add out dec add popa imul pushf aad loop mov repz mov mov mov fimul pushl mov cmp lcall push call loop xlat mov test ja xlat push leave pop popf cmp (bad) dec mov and and jbe or jmp js mov addr16 push or int3 es dec jno into stos sub shrb pop pop mov and out into fist and jno dec aam sarb push sbb adc push wrmsr push mov aas mov sub mov jle push fldl dec cli push ror xchg add (bad) into mov xor cmp out or into out std lahf jno inc sub jno dec xchg stos cmpsb xbegin jle fmull imul dec adc lret in pop and lret mov test add xchg xchg cmpsb popf fadds xchg push push loopne jbe bound rcl stc mov es sbb clc daa jecxz (bad) ljmp out sub outsl inc add adc or jns (bad) cmpsb leave xchg or in sub and sub push in mov inc and pop inc pop add jb jmp cmpsl sbb mov xor imul pop add adc ret jns xchg into scas lret mov xor leave mov mov xchg rorl xor xor and mov add sbb dec xor and dec inc jle out (bad) stos sub aas test decb jbe mov stos xchg pop sub dec sub or fist xchg pop sub sub add adc cmpsb scas pop sar les sarl mov rorb imul pop lcall movb and ret mov fisttpl cld jbe (bad) dec out adc adc cmp jl push and out jmp incl cmpsb push js xor rorl sbb mov push subb (bad) jmp mov and movb rorl or cwtl dec fstl inc fiadd jge,pn sub leave out sahf fdivrs out cmp mov sub cmp cmpsl dec das rcll or call fnstsw int3 ffreep (bad) jecxz mov (bad) int3 (bad) popf inc cmp sarl mov mov cmp xchg inc mov scas lds outsl out jge pop mov cmpsb ds mov in adc xchg ss cltd dec (bad) out inc repz mov test idivl negl mov aad fnstsw jp cmc mov das pop jmp adc popf and call push sub leave testb adc lods (bad) loope sbb mov push or imul sbb or pushf mov dec xchg pop sub out stos or inc sahf xor aam aaa mov cld idivb xchg out add xchg sbb out out dec inc leave jg inc lahf insb dec adc xor stc fs popa fs sub int3 or adc rorl test xlat repz sbb pop push mov pop je mov (bad) adc cmpsl scas dec and mov lods mov mov and test out mov movsl jle mov (bad) sub nop and and inc into adc pop stc andb xchg imul sbb sub xor and mov in popf add cmpsl repz out mov ljmp into clc lret es js mov ds mov jno dec mov ljmp std ljmp mov add stc cmp pop aad add popf out sub push (bad) imul in mov mov push or nop or fucom dec cmp add add or or into pop xchg es movb pop jg xlat mov (bad) bound enter mov xchg dec repnz push rcrb pop les scas sub (bad) lahf push mov mov add je cld test rcl int3 lcall sub sub cmp lret push je and scas data16 xchg in mov ljmp pop rcrl fiaddl icebp mov jmp cltd pop orb xchg cmp stc outsb mov add xor jmp addr16 std es js subl arpl fldcw jnp cmp negl mov out jle inc xlat cld lret out and jbe (bad) lods lock repz jl leave push das dec add sub aas xor lods adc pop ret sub xor repnz push and pusha xor mov mov mov bound xor ljmp mov pusha and mov cwtl xor dec test les mov pop mov int3 pop sub cmp push fild or mov mulb icebp lock adc cmc daa mov pop adc sub vfrczps add mov inc aad bound and (bad) xlat loopne (bad) mov pop sub call popa pop inc das add dec pop mov shll jle test sub jns,pn (bad) jmp push js sub mov aad and (bad) das sub xchg inc iret mov (bad) icebp fdivrl and fisub sbb (bad) stos int3 xor lahf je fs addr16 and stos lods movsb xchg mov repz mov pop bound sti loop xor mov cmpsl daa daa jecxz push imul aam leave jle sub loop test sbb cmp cmp add aad jae (bad) or jl leave add add negb shr lcall (bad) icebp inc jl push iret cmp push aad test call pop cli das bound or mov out adc clc mov sub pop test movsb int3 gs pop lods mov out jmp imull push scas fmul gs arpl cmp sub jne icebp into imul push and in cs (bad) mov enter fs mov cmp add lock rorl imull (bad) je scas mov lods xor cltd sbb add mov push stos jns inc xchg divb mov pop fcomi ss fdivrp mov mov xor popa lcall rclb idiv dec mov outsl daa ljmp flds mov sub ja cmpsl lret fisttp lcall aaa cmp adc js mov fidiv adc int3 push sarb ja lret jl push mov and cli dec scas (bad) mov std mov dec dec fs scas cld mov frstor imul outsl imul lret or push inc scas xchg js jmp mov cs fsubrl ljmp sub push add cmp xlat lret push outsb jno and pop fmull icebp and inc lahf xchg adcl and dec stos lret int pop (bad) imul or leave pop sbb or sub sub stc pop (bad) movl dec out push icebp mov add (bad) mov dec pop lret addr16 add popf das cld lcall mov xlat in mov mov adc pop xchg add out dec mov dec pop xor movsb loopne sub adc loop pop mov arpl mov lods add pop iret out push adc xor bound repz dec decb lret fmull repz add add fsubp leave fnop rcll scas ret das (bad) lea push xlat mov pcmpeqw push test sub add mov scas push mov jo and sti int3 std into mov les (bad) and shrb (bad) xor and leave inc sub mov jge cmp stos jne sbb inc jmp lds sub xchg in out push mov push mov inc add test ljmp lret test mov add call dec icebp jns add aaa popf incb pushf sti fnstsw div pop dec dec sub jne jecxz adc mov add add movsl xchg popf imull iret sub std inc inc sub (bad) cmp inc sub adc out notl (bad) int3 mov xchg aaa xchg outsb call cld loope idivl mov adc or daa dec fbld inc dec add pop cmpsl test xor sbb mov mov jp mov loope into cs dec cld or sub add rclb add sub repz test pop mov jnp das pop lret outsl jg pop imul or ret mov pop push and aaa loopne stc add sub repnz xchg dec jmp push rcrb push lcall mov pop out sub jae je pop and mulb cmp lret and les imul out cmp or xor gs int3 mov lock ret pop cmp add js call sahf sbb and xor xor xlat fstps faddp testl push int call imulb popa mov push cmp mov mov adc sub (bad) dec mov in ret repnz nop iret add pusha mov pop loop and imul addr16 leave or jmp mov je imul inc lret ja sub mov popa lret ds cmp xchg leave imul jae les aaa test aad das stc push pop leave jge frstor jne mov sbb fs and out dec sbb aad je pop xchg shrl ret mov lret outsb xor loope das fnstenv push pop and loope mov int3 or fnsave ret pop (bad) shll jg mov pushf sub dec (bad) sub cmp insb lods pop and cmp pushl jno add loope mov scas mov ja mov push adc ret popa sbb scas into fist or mov jmp leave (bad) (bad) sti (bad) adc pop (bad) mov sarb scas sub sub mov xchg and add sub add adc inc fcompl jb mov icebp cmp das mov jns movsl cmc inc mov les fisttpll xchg or pop imul xlat int3 xor sbb (bad) dec cmp and sub or leave push movb jne rep jb imul fistpll daa adc pushf mov dec in mov add adc or xchg xchg not lret sub ret mov jl cmp mov leave mov test lods jl adc lret addl push add cmp rclb sbb xchg jmp sub fisubrl inc rclb cmpsb outsl and das fisubl ret adc pop mov adc lret pop mov cmp rolb pop adc aad scas cmp lret loop in test leave pop jle stos out pop push inc add push (bad) enter stc xchg nop add jle les loop xchg xor (bad) dec and stos push es add test sub pop nop jne push leave inc adc push pusha jne (bad) lcall fs popf fimul dec mov adc and inc add mov imul adc (bad) mov loop loop xor mov fcmovnu mov (bad) mov leave sti push xor sub and adc or ja or stos mov mov push test scas iret push dec out lret stc inc mov add das fs sub (bad) xchg scas and mov dec xor (bad) cmp dec (bad) sub pop iret pop pop lcall pop sub or mov rcll jmp nop or lret add sub and and outsb je mov int3 insb and les dec idivl in jno push or orb dec xlat dec cmpsb and (bad) dec mov pop mov mov enter stos ja add sub mov adc or std scas pop lods call data16 leave fiadd divb repnz mov lea mov pop repnz imul dec jmp hlt mov mov test repnz (bad) jne imulb and enter sub xor les or pushf inc pop sub dec sub lock scas das or jns movsb mov mov ret sub pop (bad) mov js movsb std lds inc inc mov jne mov mov pop stc (bad) iret leave fnstenv push scas icebp nop cltd xor repnz xor or push mov aaa aaa jl ret dec cmp sahf adc (bad) cmpsb insb pop in mov cmp sub jl bound rcr in sbbl mov mov xor imul in cmpsl fsts mov stos mov lret iret ror dec or adc mov add or es sub or push into and xor ljmp rol imul gs cmc mov call cli into sub xor jne mov jne mov js xor mov jge into jo sbb hlt (bad) cltd movsl gs fcompl movsb lods mov and cmc and mov shrb pop add push lahf aas ljmp movsb int das mov pop test xlat xor (bad) clc out stc sub add xchg jae or pop cmp lods xchg lret into (bad) imul mov lods or mov jmp das sub adc sbb adc and cmp jae jmp jne scas xor call adc mov mov fs repnz sub ljmp mov ds pop mov xchg adc xchg test stos test mov aaa jl sub push dec inc repnz pop daa fsub pop push ret test swapgs sub test daa ljmp cmp out push jp mov and out xor mov jo dec pop ja test (bad) repz lret or outsb pushf loopne sahf jne mov ret mov add mov xor or jmp adc rep (bad) cmp lahf loop sbb decl xlat jo push lcall lret sub stos jb cmp add aam push dec cmp xchg xchg jmp or insb addr16 je cmpsl std sbb cmp out stc mov ljmp sub stc in inc icebp aad scas mul pop movhps clc add mov jmp in or sub (bad) pushf xor cmp dec sub imul adc (bad) mov pop ret movsl lret repnz in xchg out add sahf movsl push jne inc jb jns mov mov nop dec ret mov out xchg negl mov jae xchg jl stos mov das fisub das sub jl dec shll or into pop xor gs mov (bad) add (bad) or in pop xor test rorb add (bad) mov leave (bad) jp shll aad mov fistpll inc aam pop lds leave movsw dec ss cld cmc pop add inc mov fisubrl xor adc or lcall loope mov and loopne out test aaa (bad) daa or add push (bad) inc dec and add and daa lock pop incl pop inc add xchg (bad) cld flds pop int3 (bad) dec rolb (bad) xor pop dec cmp les mov sub xor dec cs mov mov adc ret mov jle dec not lret mov dec inc inc cltd ror lods aad ljmp jne clc stos lds roll test out mov xchg mov mov cmp daa ret pop outsb loopne add sub (bad) sti cmp or and push dec aam insl inc gs dec cltd and push stos push into jns sub rorb mov popf jae adc mov (bad) or push repz mov or lods sbb movb lahf push cmpsb xchg push push sub dec lcall and das jns popa or or daa mov fistl fsubl mov mov iret cwtl ret add xchg popa pop (bad) mov popa xchg ja pop mov (bad) aam addr16 je loope or cmp lret les sub repnz adc sbb jg mov or xchg add lret pop dec push leave outsb mov shr mov jne mov mov cmpsl fs cmp sub lods pop xchg orb jb push imul pushf clc int in cmp icebp daa imul movb xchg dec and jmp cmp push add out icebp or bound pop ja xchg fstpl xchg xor mov xchg inc mov out mov ljmp sub in xchg or and jb pop out out pop mov cmp mov out sbb xchg clc adc lret test mov shll loop into jmp out daa ljmp dec int das fmuls add dec sbb xlat movl aam lods bound add icebp repnz jae xor dec scas fstl sbb subl push push mul call pop jae xchg xorb push push add movsl mov scas fldl popa xor and scas push (bad) clc pop rclb xchg mov or xchg adc repz and pop inc sti mov jg push lock and mov lock pop mov sbb xchg pop mov pop das ljmp out jns xchg or fstps sub fsts ja negl fistpl cmp or fisubl lret jae jo mov xor rorb mov jg and mov mov sub rcr sub call sub outsl movsb sub or xchg sub sbb dec shrl aaa lahf fsub push pop sbb int popa xchg cmp mov adc sbb sbb xchg sub push ficom dec js mov lret mov inc (bad) mov pop jnp incl ljmp ja ds fimull loop fimul (bad) pop pop imul cmpb out les and and pop sahf xchg sub lret sbb mov fild mov outsl or test cmp (bad) mov fwait sbb push and rorl lea fmuls inc xor add dec (bad) mov add xchg pop rcr pop cmp cltd xchg outsl push and add mov add (bad) loopne out pop mov je lcall sub into popf jbe leave inc xor jmp jb push shr mov add dec (bad) das pop ret out sub sbb (bad) push or cwtl aaa xor bound data16 and divl vxorps mov add and and shr fisubr push out sub movaps in sub bound repnz int stc mov jg mov aam iret lods btr jp (bad) loope cwtl pushl pop leave int sub roll stc daa and xor repnz mov jnp push mov stos mov lret in leave and xor leave ficomp push mov mov lret and repnz mov fdivs sub dec mov (bad) andl sub cmpsb add icebp inc sub rcll xchg mov xor mov push cmp adc and outsb jmp and inc lds ret jmp xchg add insl test ret mov xor sbb inc out jbe add xchg stos bound cmpsl push sbb hlt mov pop pause mov mov stos (bad) enter imul neg jmp leave push jns dec das cmp or sti cmc mov hlt mov clc addl pushf adc pop or jge inc dec adc mov clc rorb stos int loop fnop cmpsb adc inc xor pop jno or push xchg scas or (bad) xor sub neg (bad) and or ja cmp stc in mov mov lcall in daa (bad) mov adc or pop push in sbb into repnz cmc sahf outsb jecxz xchg sub xchg jmp ljmp out (bad) dec daa mov mov inc mov adc xchg cmp mulb out inc sub jno mov cwtl push roll repz insl insl shrl and jp inc xchg xor imul jg clc clc test add stos mov pop test mov sub and sbb add repnz mov movsb pop leave fsub repz add push push out jl int3 xchg sub add sub or push xchg fldenv xor adc lods and pop push test (bad) scas inc jecxz mov add jo clc sub xor pop icebp sub pop sub push sub das jle pop (bad) test cmpb hlt out pop ja dec mov ret call pop cmp and pop dec mov dec paddusw or (bad) ja pop je sub lods and ret and fucomi add loope scas lea cwtl sub or ret jo dec rep ja xlat out jnp push icebp mov adc xchg icebp adc and mov xchg idivb dec mov cltd xchg cmp aaa adc repz xchg scas pause dec mov jo mov push ja jo mov mov pop mov mov lahf daa repz adc mov push jbe in mov aaa (bad) inc xchg or sbb int3 xlat mov sub pop loope negl mov dec sub dec movsb mov out sub sub add mov aas sub add pop cmc icebp pop dec leave ret (bad) pop adc mov outsl sub je int3 mov shrb cwtl push push shrb fcompl cmp lret cli mov sub jnp xchg sbb jns (bad) lds jmp xor push vmovdqu imul repnz ficoml add push cwtl xchg jg or adc push add inc xor gs dec movsl movsl fbld repnz sti sbb push push js iret lahf fsubr adc fs mov fidivrl imul xor insb xor jle push push jno leave inc out iret outsl lret sub jmp jmp push add pop int3 mov pop inc fmulp inc aam mov xchg lods or lret loopne xchg jp sub out mulb and inc gs add and ret sbb imull das repnz scas push (bad) dec rcrb repz dec stc loop out jno fs sti xor or mov shl mov (bad) in or into mov js ss or (bad) ret ret push repz adc out loop xchg and faddl push dec add lock dec leave cmc jae mov sbb or ret outsb (bad) out notb inc push loopne and dec mov pushf daa ficom inc push pop xor and test xor sbb xchg cmc cltd mov sub out test movsl mov cmp mov mov call mov pop xchg hlt aaa les mov add mov jle mov out and cmc add inc mov bound (bad) stos pop push test aad and and cs mov inc jns mov shrb xchg push xchg int3 cmc xor lahf int3 mov pop sbb lcall mov bound xchg mov pop adc xor xor enter stos (bad) fsubr out and mov into push cli leave cwtl and in cmpsl dec iret inc cmp adc xchg cmp sub arpl or jle out in jg testb add pop sub aam (bad) mov fmul roll or inc mov mov leave into jmp sbb inc popf out nop dec jmp fcmovbe in lds das inc outsl add iret sub mov mov jg movsb std xor xchg push xor mov inc sub add mov xchg (bad) (bad) mull or push je gs xor mov xchg mov and das sub jne popa movsb add ficom or mov xchg mov push sbb ljmp out jns jecxz,pn daa ds inc pop out sti (bad) (bad) jmp mov lahf fisubr lds pop inc enter aaa or pop sub mov out loop xchg lcall jmp xor lock ss icebp hlt ss dec lock shl push movsl or movl push lret iret xlat mov iret push mov push add pushf inc subl lahf adc and mov cmpsl sbb repnz mov gs (bad) es jb or mov add xchg enter in xor mov (bad) (bad) outsl mov hlt jns mov out je push popf aad call jl subb xor push daa movsb sbb stc xchg (bad) or loope aas iret push stos cmp fs (bad) fcoml popf addr16 loope fisubl xor or leave sub and stos xor stos push std ds rclb xchg mov sub sub mov popa in mov jmp into cmp add jp mov push lcall dec ret and (bad) (bad) and ficompl dec loopne pop sub adc mov ret jle push dec ficompl fwait sub mov out cmc pushf int3 mul xchg pop dec pop ja mov cmp js mov arpl mov sbb pusha (bad) push lahf mov push cld sar mov js es push mov jecxz cmp cltd mov leave call (bad) xor cmp test pop add popf loop ja push loop xlat pop push mov mov (bad) dec repnz mulb jo jmp pop inc and jg sbb ljmp scas mov mov out adc push int sub xor or iret push pop xor icebp test sub lret stc dec and sar pop sub inc shlb es mov lret or mov and add sub push imull sarb cli out xchg lcall lock xchg cmpsl daa dec cmc dec adc jecxz xchg lret or add popl or movsl sarb gs xor sub xor mov (bad) xchg cmc fldlg2 leave push jb shrl stos popa mov test addb push or and xor scas mov pop pop xor out pop mov cmp sub add (bad) mov subb daa dec rcrl mov repnz mov cwtl pop jg or out notl insl mov negl daa in add fs pop jbe mov inc mov xor fs adc sti cmp ret test and (bad) mov add ljmp cmp mov int or cmc xchg imul enter icebp lds sub mov mov xchg lods mov roll or rorl sti or or xchg adc out mov shll mov dec test lods stos mov clc pop mov sub lret jmp das in int3 adc (bad) mov lret cmp cmp add and fidiv jmp add outsb adc adc gs test clc sub add pushf mov push and pushf mov mov in insl rclb inc dec call xchg loop aaa inc repnz cld aaa cmp fsubrl repnz mov (bad) stc jp loope jge mov cmpsl inc cltd jbe xchg mov cld mov lret pop call ja in adcl xor out test push fisubrl fwait ret cli call mov das mov or addr16 shrl out cld ret adc xchg cmpl iret test sub ret xor mov and stos in imul cmp mov (bad) cli jo inc outsl jp pop (bad) popf mov and dec test and sub shrl les cld cmp add xlat movsl loope gs xchg ret and sub and jae dec mov pop and push out lret jl imul popa out outsb loop aam les cmp xor or sub je sar (bad) sahf in cli insb add lret and ja hlt add cmp lods xchg not sub lret dec cmpsl jne sbb scas jg aas push ret or pop and lret xor xor cld lret dec pushf cmp lret mov adc push adc dec aaa iret movsb sarb mov daa sub push adc cmc sub cmp mull scas sub (bad) inc ret jae cmpsl inc and and lret xor daa sub mov mov scas sub into and pop mov stc aaa adc ss mov lods leave pop add lahf imul ja sub sub jle out add (bad) dec sbb dec out inc stos cmp sub inc das dec popf adc sub mov and mov in lret movsl in and xchg and cmp push sub ret icebp mov push ljmp mov sub es lcall dec add pop and (bad) sub incb (bad) jae je mov xorb (bad) stc cmc pushf cmp lea xor loop mov xchg lea inc imul jb mov mov mov fld loope lds cwtl rcll lret repnz mov dec xchg repnz cmp std sbb mov fdiv (bad) xchg xchg in popf cmc sbb push movsl push pushf fcomps inc mov (bad) bnd mov out aaa mov xchg aas cwtl aas test jg sub addr16 out outsb xchg insb pop popf cltd ret pop cmc jmp fistpll dec stos bound mov sub jae das add in push js pop iret cli sub into mov sti push loop jne and inc pusha hlt mov rclb mov jns outsb movsb jmp mov jae mov sti mov jl and lds (bad) push dec out lret xchg xchg push pop jmp xchg notl dec xchg fcoms push push lods mov xor or xor cmpsl jbe pop out sub pmovmskb enter ret sbb mov sub repz insl pop (bad) outsb cld rep (bad) fs push mov shll cwtl in add pop and pop (bad) mov out and xor sub lret and cmpl cmp rorb lods push cmp inc out aas pop divb aaa outsb repz pop mov je pop (bad) sbb xor pop and or lock movsb aad sub add fs mov jp and xor and movsl sub out popf ret cmc dec jecxz std mov rcr dec xor pushl xor subl jnp mov push cmp stos (bad) rclb (bad) xlat jns gs lods mov mov js mull inc stc and (bad) jno bound psubusw (bad) (bad) jge cmp ss out mov (bad) mov xor fiaddl lret mov push ret pop mov iret das jecxz pop (bad) push mov jmp gs add pop out mov imul sahf dec out mov and cli into pop scas imul std mov call hlt sub add call mov arpl dec dec xor repnz insb (bad) xor cmp sub icebp int sub jg add movsl cmc inc daa jno (bad) lret ret adc xchg adc lret fs lods faddp or ljmp mov dec jbe call jae add mov inc jmp dec rcrl and adc stos imul stc xor mov ffreep push nop (bad) ja stc fisttpll sti test mov test and xchg xor inc adc mov cmp dec jg mov lds and jb into rcl dec fcmovne dec add mov push xor call fstpl imul mov cmpb fldt dec adc cwtl nop (bad) jo loope jmp pusha sub into pop mov sub pushf popf icebp pop push movnti add mov imulb or aad ret popa jmp ljmp add movsb cmc inc or dec mov test stos in scas pushf gs or add mov and mov mov aad mov (bad) push rcrl push cmp cwtl in mov or pop mov or dec (bad) aad pop sub lahf outsb pushf mov std mov out sub rep mov or jo test (bad) notl rorl gs adc mov (bad) sub lcall repz popa mov or xor pop jno imul adc (bad) cmp or dec (bad) push jno dec cltd repz rolb and fyl2x sub ja mov out loop leave sti out lock dec mov xor add data16 xlat test (bad) cld out movsb adc into add mov in sub decl sarw sub rcrl dec push sbb int3 inc in xchg push mov (bad) repz push mov adcl mov jbe mov or dec sahf and dec out mov out sub lcall icebp dec push dec popf dec out xor (bad) and nop sub push enter cmp mov fistp stos xchg sub mov jae and stos adc test ficomp bound vcvtsd2si lea cs ffreep iret out mov and sub sbb add bound (bad) insb or and scas mov sbb nop sbb xlat mov push jne or sub fisttp sub test lods rcl xor repz mov shrl stc push daa mov xor pop push in repnz push push add data16 mov add out add cld sub pop pushf aam fstpt pop adc sbb cmp add ret mov aas sub adc enter push into cmpsb push (bad) out loop mov fmulp push lock pop imul jo add mov xor push or out dec cs pop sub cs imul mov mov sub jg mov call push jns shrl pop (bad) xchg xchg leave arpl loopne jecxz shrl add mov add jle fwait jmp (bad) imull dec fidiv mov jge add mov mov mov daa (bad) (bad) mov loope repnz mov push insb rcl or scas jmp ljmp mov cmp (bad) shll lds out pop inc xchg movsl cmc adc jg ret ror (bad) stc jmp pop sti sub shrl cltd in cmp in jmp das or insb repz jecxz ret fistl mulb dec cmp repz pop pusha (bad) fcmovu ja push adc xor adc mov icebp dec sahf pop ljmp and aad aam stos jmp test (bad) mov and inc inc ret fisttpll and call mov push fs or jmp sti dec adc decb dec push ds lret add inc das ret stc add xor lret inc aad test aaa cli push insl scas (bad) getsec out out loop push fild hlt mov mov sbb shrb mov lods mov pop adc dec push repnz mov subb mov fist pop fiadd push jge push or mov jns scas pop xchg aad sbb and push jecxz ds repz in scas loop jno inc out lret dec dec loop adc mov (bad) enter rcll ds negb xor sub dec addr16 sub sbb aas fldcw cmp ror out stc fdivp mov jo mov dec test mov iret mov dec cli inc xchg xor ljmp sub ljmp sbb dec sti mov mov shrl or out pop (bad) mov cwtl mov cmpsl movsl repnz push push mov and test add sbb data16 les and aam and and and das lret lcall in push je jno dec mov faddl and jmp or daa jge xorl and adc out cmp into cmpsb decb dec cli lret jbe fstps enter add call add or (bad) or in jnp aaa cmp add mov xor out ja bound jl outsb xchg jg xor xor mov add rclb mov add jg sbb iret mov adc dec ljmp mov pop movb xor (bad) jge rcr or mov sub lds xlat call sub push add sti hlt stos mov mov mov and and xlat and ret ds lret dec mov xor (bad) sub fsubs int3 xchg ljmp and loopne sarb push in or enter fistp jnp add test mov iret mov dec inc pop fisttpll loope ds xor and (bad) test xchg loope add jl dec shrb sub scas sub sub adc pop mov or leave push imul les (bad) mov inc mov mov mov add mov or out adc sbb sbbl scas and mov loop dec xchg pop mov push sti sub fcom rorl rclb mov (bad) mov cmpsb (bad) movb repz test or mov lahf jne std clc jmp push jmp sti aad testb fistp cmp into inc or iret and lret repz push sub stos popa clc jmp ds mov and popa push xor dec popf icebp cmp inc test sahf pop and pop jmp sub mov or mov ja movsb mov lea jle sbb cmpsl sbb pop mov cltd mov cmp negl add fidivr xchg call dec fdivs lahf inc nop xor fcomi add xor mov aad lcall movsl divl add neg pop adc out dec mov jge sub mov mov in mov adc imull movsb inc lret out lods (bad) (bad) out and xor sub and test stos or pusha lahf cwtl push or adc test cmp cmp out sub cltd sbb lds add jbe (bad) out mov push in or mov add add and push jle neg into movsb dec out sub out lds dec lods xor call (bad) movzbl xor icebp cltd out mov xchg xor popa mov ret aas lret add jo mov outsl xor adc jle xchg test not pop push loope mov iret leave into xor jg inc outsb and (bad) mov mov inc dec add into jmp inc xchg mov fmull jbe fwait pop sub call xor (bad) jno frstor mov pushl outsl adc repnz mov mov bswap mov mov add loop (bad) jne adc cmc push and data16 enter (bad) leave push test mov adc daa or pop jns add push ja cmp divl pop and mov or std jmp rclb insl mov jmp cmp pop dec mov sbb xchg mov cli jo xchg mov add fs lds inc mov push lret icebp mov divb movsl jne adc lret inc dec and (bad) sti cli jecxz dec mov iret xchg pop and sti pop and and dec imul bound int3 pop and pop dec imul movsb sub daa pop gs sub push add xor mov inc leave (bad) mov mov push test subb out stos adc jmp or sti or or add cmc lcall lret pop push enter stos xor mov xor hlt jmp xor mov rcl mov mov dec imul and (bad) or push lcall sub movsl push aaa inc mov mov fnop add sti popa out iret add mov dec mov jns pop sbb pop loop sub outsl daa ret ja or or mov and adcb sub mov iret popf repnz (bad) xchg lret out sarl mov jns iret (bad) aaa dec subb or pop shrb fimul pop dec and jp inc jmp movsl push imul xor pop outsb mov lock push xor mov push add adc out fadd cmp pop lret sub cmp jo insb enter out or clc xor cmp out xor xor xchg xchg jne cltd push gs and das xchg into push jmp and jp rclb jne sub jl mov ds pop pop test and and repz lods fdivp sub sub xor cs or add gs and test mov adc add adc lds jnp xor cltd enter fsubs sbb mov ret jo pop push jge ficomp or outsb push and test pushf or les into test in ss sti sub sub pushf lods add ljmp (bad) mov mov xor stc push (bad) xchg ret loop aam dec cmp push ret fstl movsb dec (bad) movb into iret dec notb repz or xor xor movsl fmull sbb inc add mov or xchg xor test loope stos adc test dec mov pop daa jmp jno (bad) push jnp sub daa add push enter jmp sub push pop jmp (bad) jbe jmp imul sub push sar adc or in push loop pushf lret pop sti ljmp (bad) jo pop xchg lret cmc in add fild xor jle xchg (bad) shrb nop xor xor jmp and xchg (bad) sbb lret cmp lock sub lret fist repz mov cmp fsubrl jge push inc sarb ret cld jo fbstp fstl leave jge mov jmp pop hlt jo shrl inc xchg or add ljmp add dec dec imulb ret xchg out rcrl addr16 mov cmc cltd sti sub int3 push add add xor mov and movsb fsubr or pop xchg gs repnz loop leave neg (bad) xor (bad) or fidivrl test fs mov adc push repz jnp dec clc divl and push xor sub cltd repz psadbw mov in stos xchg ljmp mov sti add mov aas es repnz notl mov sub inc jle in dec enter mov scas xchg movb mov xchg adc xor pop or daa add popa dec adc out adc idivb pushf mov aas call repz test and (bad) xchg mov sti cmpsb fstl mov inc movsb mov inc push gs and or movsl mov (bad) mov xor cli mov mov mov idivl mov mov mov adcb repz sbb add scas sub pop xor sub and mov notl int ds incl lret in cltd cmp add jne lds mov ds mov jne mov add mov fs out fs mov xchg mov fcomi jns sub imul sub push lcall shrl jg decb icebp inc fsubrs and mov ret push ret pop mov cmp sub inc into xchg xchg sbb mov xorb in jmp jecxz lahf pop inc push clc inc xchg lock into mov pop mov (bad) imul mull push add mov cmp push mov and scas xor push popf xor pop mov pop out add mov (bad) mov das inc loope rolb mov das es gs adc ss daa out inc cmp cs (bad) mov int3 xchg lahf (bad) jo fistpll dec jo pop lret sti xor mov shrl push and inc jo ficom jne stos mov repz mov push dec (bad) gs jne (bad) fstps lcall out out inc out ds sbb ja out xor jbe jg ja (bad) push icebp mov fisttpl pop jle lret adc mov push mov or ret (bad) imul lcall pop jne pop jle jp lock adc mov cmc mov mov cmp mov or mov xchg sub mov loope add scas ficom out jno mov pop jmp in lret mov leave cmc lds cmp push sbb movsl jecxz packuswb inc and test sub or xlat cmp xlat imul sub insb add fadds sbb idiv icebp mov jl int3 cmp loope shll aam popa jne mov xchg addr16 sub shl jecxz repz clc mov icebp leave fidivr xor out xchg icebp popa cmpsl jp fwait mov push fadd push iret (bad) xor jmp dec fistpl sbb lods xchg xlat out aam les pop and ret cmc lock push in mov mov add sub add or xchg lods sbb cmpsb lret addr16 pop xor mov cmp dec in push adcl test mov dec gs fcmovnbe push loope aam stc xor test pop mov pusha lds ljmp push cmp push in xchg mov add popf incb pushf mov ret lcall or sarl mov lock (bad) mov sbb aad arpl sub jno dec push fldenv in out push xchg sbb mov lret leave daa dec iret xor adc pop test popa push scas (bad) pop sbb sub xchg pop jge (bad) mov idivb push std loopne (bad) or jbe in cwtl call or ror loop mov bound pop jge shrl cld pop les pop mov mov or xor add insl mov or add int test sub testl cli movsb or icebp push orb enter xor repz or into or xchg mov movsb mov in xor mov movl push ret stos adc inc xchg decl cmpsb lahf mov out (bad) xorl push mulb enter imul cmc inc into in or adc inc enter inc pop mov xor repz cld leave ficom adc (bad) pop iret and push and je dec repz jp jnp je lahf push pop mov sub push add sbbb scas faddl xor xchg inc inc xor jge (bad) hlt sti mov shl add sub push fnsave jmp inc or movsl stc out fs inc dec and test cs mov notb push add out sub xchg cltd (bad) mov add and je sub push adcb inc data16 xor jge sub cli mov pop lret and insb push inc adc subl cmp dec rorb adc mov sub loop xlat in xchg mov test jmp xor or sub movsl cld push pop ljmp or jo pop ljmp sbb inc push jg pop fildll push repz sub jle lret sbb (bad) mov jl adc loop popf cmpsl outsb inc mov imul adc out or fs into (bad) fwait leave push sub or pop push scas sbb or jge pop dec add mov int outsb leave inc imul call stos mov mov pop push ficoml jns dec pop cwtl in in add mov pop jl mov xor mov sub push and jle scas loop aas cs cmp dec aaa sub ret sub xor (bad) repnz xor xchg rclb and ss or add movsb stos fdivrs rcl fisttpll (bad) lock mov push mov xchg repnz jno mov push sub stos bound push (bad) mov fisubl dec out sub cld (bad) or xchg jbe push xor or mov mov jmp (bad) pop mov xchg xchg add ret mov std outsl notb fs decb cltd push xchg stc lods push (bad) idivb mov mov inc repz fcoms addb stc inc mov dec lods cmpsl mov mov xchg sbb xor xchg cli out out mov (bad) div gs mov daa jecxz push imul (bad) test xor mov pushw and pop mov sub leave or out sub movsl cltd pop xchg addr16 out dec inc mov jmp pop jnp or jmp roll xor clc (bad) sub or aam loop adc sub cmp push repz cmp jge cmpl jmp mov repnz mov sub in call popa sub xor scas cld add sub mov daa inc call rcll sub xor int outsb std loope fsubrl mov lods daa xchg pop jnp andl pushf mov and sahf xchg xor jle jp int3 mov int xchg or xchg cli adc pop sub pop fidivl xchg add inc out add xchg pop mov lods fimul or repz jecxz in or clc cs mov sbb rolb or xchg loope out dec jl negb popa ds mov sbb out repz sbb push (bad) out scas test mov sub nop cmp jmp loop movsb dec insl (bad) jne mov popf nop mov sub pop in cltd ja xchg jg repz jecxz dec cli jbe sbb out cltd xlat pop cmp sarb mov sbbl aaa pop (bad) sub jbe jb lahf movsl cld sub cmp mov lea leave ret adc mov mov add cs and push cmpsl fistpl push push (bad) mov pusha pop sub push and pop cmpsb sub repnz inc pusha popf add fcompl jb test cmp (bad) add add daa sub ja sbb sub (bad) jg out jmp and or fbstp sti cmc xor pop pop dec push mov es xor jns test rcrl icebp stc sub sub fwait mov out and (bad) lret lret pop and repnz out inc sub cmc mov xor mov jne jmp adc jle pop nop lret fidiv dec inc mov das gs cmpsl jne jns mov push scas mov (bad) sub aas movsl jo jmp push push shrl or or or inc lock movsl repz sbb stc ficom cmp fadd dec stos cmp repz fwait and mov add pop xchg testl in xor push inc sub bound jecxz cld mov test (bad) testl out dec inc dec add faddl or jg inc fcompl ds mov mov daa stc cmp (bad) xchg lods arpl int3 outsb or aad out jecxz xchg ja sub xchg ret mov (bad) inc cmp dec (bad) (bad) lahf adc leave and (bad) lahf jnp or ret addr16 sub pop movsb pop scas (bad) cmpsb pop repz fistl fld1 (bad) adc inc lret (bad) dec out cmp ljmp rcrb cmp cs xlat adc out dec aaa movsl aad insb in xor fisub in ja mov lock dec pop mov pop or pop dec (bad) je iret xlat std decb scas jg and inc aas mov jbe sub mov idivb gs cmpsl jl mov sbb lock out loopne clc cmp xchg mov clc les jecxz adc icebp (bad) lret sar pusha pop mov lcall sti cltd sti imul inc mov and push push mov dec xchg idivl mov test and fisubrl sbb inc xchg mov sub shrw jmp shrb lds into stos aaa addl je cmp out fnop push cltd ret sub dec ds mov adc mov add fsubrs ds je,pn test xchg scas bound push pop jp add ja pop sarl xchg dec jmp dec mov xor nop cmp jg dec (bad) push lds cld movsb loop rcr and pop stc fsubs pusha and repnz or lret mov sub mov mov push stc stos xchg (bad) scas (bad) add ret push repnz xchg aaa or jge dec and and mov jno xor ret (bad) jl inc adc out fmull into xchg xchg ret jg imul xor ret or sub xor test dec mov daa add int mov mov in mov imul xor xor sbb (bad) decb imul mov push sub clc mov pop lock je lods mov out lret jmp cmp fwait inc adc int3 in lret xchg cld imul (bad) pop pop imull orb or ret adc dec imul pop repz popf loop clc jmp jl (bad) sub add jl fldz adc (bad) repnz sub repz xor repz lock mov out repnz test and xlat xchg add sbb jmp repz cmp daa xlat sbb jle test fsts cmp adc stc pop sub fild pop adc pop iret repnz lret add dec add cs imul lea mov in jmp jno mov sahf xchg jns popa mov sub xchg (bad) out sub add xchg rcrl adc jge ljmp sti sub add push mov add aaa add mov (bad) or xchg ljmp xor rcll cmp sbb dec add mov cltd push mov xlat xor shrl pop hlt lods xchg dec sub sub mov icebp xchg jg or add xchg fistl mov sbb push out subl jmp test repz mov andl xchg fsubr out test dec mov cmp sbb arpl cmp add bswap test cmp xor jp pushf lods insb into clc push (bad) es (bad) es lods stc scas outsl loopne in sub add mov cmc fwait ss add in and ljmp lret mov scas lret frstor adc clc mov je scas mov daa into out cld out gs mov mov xlat sub jbe outsl or adc mov xlat mov mov stos mov xlat adc fsubrs adc xchg out sub or sub les adc jecxz mov aaa aam mov icebp test (bad) stos dec mov iret jbe fcmove or or cmp jne jmp pop les clc inc xchg lods mov imul movsl push xor bound mov or mov roll lock pop test xchg pushf ret mov mov fcmovnb lds ret pop cmc mov jge loopne jae test and xor jle xor popf xor jge fimul (bad) mov sub hlt add mov xchg cmc mov clc cs sbb inc inc dec mov andnps dec lret mov cli xchg adc lret (bad) decb ja call int (bad) xor into lock std or sub and xchg pop pop add add outsb mov push mov in pop lahf bound lds add lret jecxz add jo out sub das or rcrl sub dec and mov pop xchg and xchg add les jns mov pop bound (bad) out vpavgw or xor int3 scas mov mov add ss mov jmp push xchg out add aas add mov (bad) xor out leave ret enter ss sub sbb pushf (bad) into leave in and fld add mov dec leave jmp sahf cmp jmp cmpsl js mov daa xchg gs mov mov pop push mov mov sbb push loope cmp icebp sub sarl sti jmp mov test fiadd and jge mov lahf jl lret cmp or cmp rorb in mov pop inc cmp in fnstcw lods xchg mov (bad) inc push xor mov sub sub mov xchg lea mov clc in mov pusha xor and in movsl movsb es push sub add (bad) jno je stos int3 xadd push outsl fs pop mov cltd (bad) addr16 push icebp int3 gs out dec mov jnp sub mov xchg and ficom mul pop insb test aaa mov mov loopne out ljmp adc pop cmp xchg (bad) jmp fild cld loope aam push jge jb push aad push or imul ret cmp xor jo icebp (bad) (bad) jnp pusha shl test repnz pop sub mov fnstenv dec inc add (bad) negl xor inc pop xor xchg mov add imul xlat xchg sbb clc les push sbb cmp lret mov inc cmp lea push push sarb in mov rolb cli xchg sbb mov pop push cmpsb out pushf or push mov in sti cltd xchg jnp leave sub sub and je jnp or or cmc pop push and pop xchg xchg xchg xorl push mov mov mov pop sbb dec (bad) repz pop cmc sub adc repnz (bad) hlt dec call jge add mov imul push lret sub das add jns mov aad in xchg icebp mov out fdivrs pop mov repnz js aad or stos sub dec mov cmpsl ljmp mov jo dec adc pushf jno mov dec sub xchg orl mov sub jp push iret test js sub jmp pop jp or push and sbb lcall add mov (bad) dec into pop sub mov lods fisttp xor dec rorb out das sub dec pop sub push or push sub mov sub (bad) (bad) cmc sub jg mov mov pop cmp scas lret pop pushf lods repz cmpsb sbb mov add mov inc or or cmp fnstenv popa movsl add xlat (bad) mov das aam (bad) push sub dec push out dec mov cmp xor mov mov stos push icebp ljmp aaa mov fldl xchg and push xor sti clc (bad) mov and jbe cmp or aas inc inc xchg pop push push add cli xchg ret jge stos push insb (bad) dec or and sbb movsl and or jns cwtl data16 push mov and mov ret or stc jp xchg sbb (bad) mov leave and imul (bad) jno or (bad) pop dec sbbl pusha sub and std mov repnz cli ja mov out loop test add push divl jge ds pop pusha mov imul cmp mov out test daa sbb xchg push movsb call jle daa lds and xchg dec inc add inc cmp adc pop daa pushl sbb jl mov out jne pop mov sub add mov pop sbb shr das xor test pop lds orl sub (bad) sub sti mov leave xor je fcomps into mov ljmp in xchg imul lods jmp inc and fisubrl or add (bad) mov mov fdiv out mov ret (bad) bound ss and dec or sub pop out inc sub adc adc cltd dec in ret pop add pop aad inc jp and mov push inc push std cmp sbb (bad) loop or (bad) int3 jne push sarb shlb sbb push sub jecxz xchg ljmp into out rorb sbb dec add cmp mov adc mov nop (bad) jl sahf or (bad) mov lods mov xor cmpsb lock int3 fsubrl aam mov mov xchg cmp and lods jno jp movsl (bad) call mov xlat lods lods cmp xor adc mov xchg bound stos fstl loope dec scas and mov add xor mov jnp cmpsb sahf popa fildl cmp pop mov add pop push xor insb (bad) add and jmp dec out std push adc cld shll fistpl mov cmc mov lods fist jo push ret call mov jae or sbb out pop popf leave std ret dec insl sub rorl lock enter xor test pop out sub sbb jecxz push jge (bad) mov sub mov into jmp mov (bad) adc iret (bad) adc in xchg loope sub movsb call pop xchg mov gs adc mov dec fs sub push in fsubr xor les dec xor stos mov ds mov push daa mov pop out xor rcrb or or xchg (bad) jns hlt push push idivb sub pop mov mov (bad) (bad) jb adc out pop lock pop add aaa hlt or aad movsb mov sub pop addr16 in scas (bad) mov fnop (bad) xlat orl xchg push arpl lret xchg fist repz push es mov inc xchg repz add shll ljmp fnsave and mov ja add fsubrs lret pop pop sar xchg mov mov xor pushl dec mov cmpsl cmpsl dec mov mov and pop lret ret lcall ret mov (bad) push (bad) pop seta or shrb out ds push movsl xchg fild and sbb ret ss jns push xor push gs lock pop pop mov adc fcmovbe je pop dec jne cmp icebp loop shll push (bad) mov push dec and pop mov push shlb hlt les inc in or inc pop fcmovu js aam pop or pop push sbb test ja pop push jp jae fild ljmpw add aad dec popf jl adc das pop inc mov popf cmpsl loop dec (bad) out add add and push pushl mov pop mov xchg cmp xchg xchg shrl cwtl cltd loope push xchg pusha mov sahf jb jnp (bad) jmp xchg or in add test jmp sub push and mov lcall movl cld les adc mov add popf arpl aas push fidivrl mov sub stos int inc xor stos and jg jle es pop js movsb ljmp pop xchg mov pop int3 test push ret sbb or (bad) data16 mov push scas inc cmovnp or ret stc xchg stos sahf leave cmp jo adc mov rolb sub addr16 jg mov ljmp (bad) imul dec mov pop xor or inc adc push call fistpl xor (bad) fistl pop out cld cs dec stos arpl (bad) js dec (bad) mov loop jno mov into or rorl mov repnz les shr xchg das add add xor fldenv mov and dec or (bad) dec pop mov fnstenv dec movsb sub imulb xlat xchg mov inc jne daa push incl sar cld push insl pop mov in addr16 jle pusha or add mov and dec mov nop mov jbe sub mov add and das inc mov leave mov sub dec push jno cmpsl out mov (bad) stc mov xor das jnp adc stos (bad) not jg inc add mov sub (bad) mov test ficom fsubrs push fistl xchg push pop or adc jecxz pop mov lret jmp and sbbb add mov inc mov (bad) push or (bad) pop test sbb out stos or xor imull mov inc imul pop mov sbb mov dec mov xchg xor xchg insb (bad) cmc das or fistl stos aaa fistpll pop into and cmpsb fidivl add sbb clc (bad) and xchg push out cmpsl je and xchg cmpsb repnz loope and fmuls xchg dec pusha and or mov xor sbb mov scas fstps aas sub xor xor test aas mov xchg outsb sub std pop test pop rcrb fs fs inc sub mov and jbe pop or push push jge pop jns adc mov sub and enter leave jmp incl push scas jbe jmp push into popf (bad) arpl icebp mov lret add sti lret icebp mov es sub push fldt cmp mov pushl and and xor out repz add xlat out add cmpsb (bad) dec clc mov push xor data16 mov movsl sub inc (bad) mov stc (bad) sti and cld test ffree and jg test push sbb lret cwtl pop add je pop mov test adc push dec das cmp sbb jge jbe ret mov out xor add ret jge or push dec stos and test out cmpsb ret fnstsw cmp (bad) jp jge push xlat jns fidivrl push lcall mov in les test add sub icebp imulb clc cmc cltd inc sub fildll mov pop or sbb and (bad) imulb test mov bound (bad) jbe mov and nop icebp rorl jp jnp add bound jp dec sbb in cmp icebp iret leave ret mov jecxz sti daa adc call loop sarb xchg pop mov das aad mov xchg out mov cwtl aad mov test mov lods adc mov jmp push mov add dec fidivl loopne ret or lods sub out xor cli mov xchg xor clc cmp mov mov pop bound sub mov xor insb mov fadd dec push cmp fmuls or and leave jge shlb push sbb xor or jmp dec test ja or dec sti xor dec xchg stos int3 and xlat orb shrb lahf mov es mov scas jne out inc mov popf push (bad) xchg adc daa or push mov enter iret pop out ljmp mov or mov sbb test dec rcll mov adc add ja dec into jmp push mov sahf mov decb sbb push les stos clc je lcall xchg sub or scas bound add sub (bad) call jg mov repnz fstp mov push repz dec lods or xacquire add add mov push and or mov int in icebp xor inc mov (bad) mov cltd jo pop mov dec pop xor cmp dec dec mov (bad) xor mov ljmp dec mov or test clc lock rcll pop mov popf cmpsb cmp mov ret pop sub popf in mov mov mov mov dec or dec sub jnp mov sub or mov pop push jmp add xor mov cs ja sub cmpsl int adc pop mov pop xlat dec mov in ret or xchg mov enter sub xor sbb dec and out xor scas dec repnz (bad) icebp andl je orl out daa and xlat xchg or decb icebp mov push or dec jecxz xchg leave cmc sti sbb push iret gs adc leave push cmc cmp push mov leave xor cmc sti cmpsl jmp mov pop push adc xchg data16 inc push inc push adc out jo and scas lret aaa mov dec sub or icebp xlat out adc mov jae (bad) jge imul stos sub add lret xchg (bad) iret lahf xchg ret and jnp imulb shlb lcall and out popa mov mov xlat and fs push (bad) movsl or (bad) out adc mov mov lahf (bad) imul xor xor jmp je jbe popf sbb sub adc pop sarl xchg sub xchg ds jae pop (bad) stos bound cmp and stos dec in adc rorl push ds mov and pushf cli fistl inc jp pusha dec sub and lock fistpll push je push jne cmp divb es aad mov mov push mov xchg jo dec pop in xchg test add repz mov lret sbb das jle loop mov fistp out and sbb int3 jg jl jb divb or int3 hlt pop jmp add sub scas data16 mov mov jmp (bad) xchg (bad) addr16 (bad) dec cwtl and mov and adc mov ret push xchg stc push outsl jne jmp fmull sbb cmp pop adc call test and (bad) loop rorl les xor add mov lret jl out and cmp mov mov jne stc scas push jne cmc xchg dec dec out sub sub mov je insb (bad) pop jecxz shlb outsb call in and sub mov mov pop sbb push stos adc mov pop jae sarl call pop xchg sbb mov rorl xchg rclb ss jle (bad) xor in dec mov jb jge repz fld mov icebp jmp addr16 imul mov daa sti les sbb jecxz lret daa and xchg sub pandn xchg xor and loop pushf inc pop call mov mov nop jecxz push or fwait lret xor mov call xlat push mov aad outsb adc or lret inc and mov mov add sti aaa or mov cs pop cmpsb xor and popa add lret jge mov jg (bad) pop xor mov ret and sarb clc push or idiv movsb imul xchg fnsave dec loope and jle jb inc add mov into test xchg sbb ret sub int shlb ljmp cmp stc inc dec rcll cmp shrb fistl repz daa loope scas jmp dec and (bad) mov xor pop and and lock mov in sub pushf pop adc mov sub cmp and (bad) sub scas fistp xchg push out cmp pusha clc add (bad) mov xchg and mov mov test and dec xor cmp repnz and leave push push xchg push xchg mov imul lcall (bad) out leave repz mov fbld mov repnz aam dec pusha shlb dec sarb lret pop mov imulb int3 daa into ja (bad) xchg das mov adc int push dec mov lock inc lahf out sub mov add lret icebp xlat pushf call cld mov hlt add mov pushf pop mov repnz add das inc loop dec leave loope lds jbe rolb mov fldl xor and out fnop pop and inc inc nop movl adc iret ljmp icebp mov and add push xor adc sbb mov or push popa mov add dec scas sub xlat (bad) dec es xchg iret mov push out outsb sub push (bad) clc mov test mov dec ljmp xlat out mov and test jbe sub sub add loop aad scas sbb sub idivb sbb out cmp mov cmp dec adc adc push xchg push xchg das lds lods insb add movl outsl popf inc adc add mov jmp jmp std dec pop mov jle fs mov stos out xorb mov pop (bad) adc (bad) dec jmp pop jmp loop icebp xor pusha cmp in ja in push mov dec mov jl pop mov or push dec adc adc call push xchg ja out aad mov sub out das pop jg adc sbb leave mov inc pop sub and sbb cmp xchg jmp or aad aad jb or adc push xor push sub sub rorb or std xor ficoml inc into dec ret pop mov std daa sub push and mov enter rolb jmp int3 rolb pop nop cmp or imull push mov and notb pushl add or nop js push mov iret stos lret adc xchg out (bad) jne rcll gs mov ret cli jecxz bound ret cmc push out and mov and jnp push (bad) lret hlt imul mov mov les sub sub jnp pop iret push aad jmp lds cmpsl sarb and out aad cmpsb cwtl aam in adc imul lods xchg dec mov ss push btr xchg lret jb popf sbb pop cmp push push repnz invd xchg out mov add mov jmp out jmp lea jle push sub sbb jae mov xor jge add mov (bad) mov out iret cmpsb pop repz dec mov lretw sub rclb imul jle adc mov sbb lock addr16 mov hlt mov hlt decb push pop mov cld or (bad) xlat push cvtdq2ps cltd (bad) mov dec cwtl (bad) notl push cmp mov stos xor and clc in repnz sub vmovddup pop hlt ljmp xor xor add adc sub or inc sub xlat xor adc push pop clc xlat mov popf pusha push mov pop call cmp das gs pop pushf mov test jo xchg daa jmp and (bad) jmp lret inc dec mov pop dec sti int3 inc dec xchg mov or mov jle jo xchg pop jns jne pop (bad) aas mov add sti mov sub mov dec adc mov mov pop or cld mov loop mov fimul push mov mov and icebp cmpsb mov mov (bad) xor add repz int sub adc mov repz (bad) fistp mov sub call in (bad) or cmp shrb sti inc or fwait sub jb or or pop jb int jp in out rcll lret pop stos or repz jp pop in std inc mov mov xor add das cmpsl das dec or xor out fldenv push cld mov jecxz outsl insb jmp jmp scas fmul lret xchg lcall xchg loope aas cmp lods cmp loope pop xchg leave pop movsl inc and jg inc in mov xor cmc xor (bad) in xchg jmp icebp mov jbe cs dec cld pop enter xor mov imul gs adc sub stc dec mov dec addl outsb mov dec stos pusha inc pop mov jge cmp ds dec xor adc sub insb xor popf pop (bad) repnz scas jno into sbb xchg push jg std in outsl adc gs sbb lcall in mov fmull pop jg stc fisub mov popf adc idivb scas sub pushl add lods mull repnz les rorb aam jbe pop out xor pop scas je ljmp mov inc mov add sarl fdivs repz sbb lock adcl jo sub enter leave bound push gs cmp loop aad aam lahf mov sub lahf in popf stc xchg lret (bad) insl mov loope pop jge mov fsubr push jne out out into jg pop dec mov cli adc add hlt mov pop cmp inc fsubrl lods shll mov mov mov lret loope arpl jbe clc notl icebp inc jb jae daa lock lret mov daa sub loop dec pop scas loop (bad) or cmp repnz lahf xor push clc jmp cmp sbb ljmp mulb insb fmuls add or pushl mov sub leave (bad) std inc shrb adc xor fistpl jmp call scas nop dec lahf fadds dec jge adc mov xor jecxz adc fstpt dec mov jbe test pop aam add push jle dec insb lea xchg stos ja in lret sub xor das mov push das (bad) push mov adc xorl ret adc dec ljmp jl leave mov clc dec and shll shrl insl repnz fiadd leave jmp int scas (bad) stos out test push cmp mov (bad) fcomi call mov sbb and jns add (bad) fmuls insl cmpsb cmp push loopne jne loope sbb leave and out ss sub inc pop xor xor les (bad) (bad) mov adc add scas jne loop xor and lods sub or cli mov mov adc pop rolb in dec xchg decb push jle push push adc cmpsl movsb inc sub in xchg daa mov pop pop push cs add lds or sub repnz cwtl pop mov stos mov xchg fidivrl pop (bad) mov pop gs or repz loop subl pop and sub or add je inc mov or or loopne ret gs cmp pop ja xchg (bad) mov jg test mov into les aaa rorl scas sbb adc frstor sub mov jecxz jo sub inc (bad) pop and xchg mov pushf mov or push sbb pop push xchg rclb shl lods push aam xor pop xor jb leave sbb push jmp push ja xchg and clc xor mov adc sti mov and fistpl mov test mov (bad) std andb lret sbb sub pop idivl dec or ss out ja ret add aaa pushf jl sub icebp outsl sub test jns cmc sbb inc es dec movsb mov bound mov incl in popf icebp inc leave bound fsts negb ficomp insl dec js push push dec mov call pop rolb outsb cmp or pop ret mov mov hlt and add icebp push cmpsl or inc pop inc or jne sahf dec cmc lret inc dec sub (bad) pushf subl pop into mov stos mov mov bound or int3 dec mov imul push push div pop push rolb addl insb ja mov jmp jl dec cltd xor adc enter and dec repz jb incl xor add mov push jmp mov or xor sarl xor mov out pop mov pop and lods fwait shr sub add inc mov mov mov jmp or (bad) notb sub dec test dec clc and sbb dec and adc dec stc pop push in xor das test movsb test mov xchg sub jl int (bad) cmp out pop fcompl fmuls pop lea sbb jnp xor (bad) cmp bound int3 push mov mov (bad) mov (bad) xor xor lret xor arpl and roll into std adc add mov cmc icebp xchg imul or pop jge inc mov mov pop and and jns mov leavew mov pop sbb outsb loop xor repz sarb or xchg imul data16 rcrl mov jg push in and in test in pop mov and fstl fimul mov (bad) dec rorb jecxz xlat and scas call imul stc xchg lcall mov adc or mov add pop jmp add jecxz xchg mov pop jle into jmp push sub sub xchg in jp xchg into add (bad) push push jle dec dec lret (bad) and mov add ja ret adc loope fisubr jmp jg (bad) xor cmpsl cmpl dec adc (bad) mov add (bad) cmovb mov pop scas cmp push add push mov add lea mov and call shll (bad) insb popa sarb adc xor and mov jns movsb addr16 (bad) mov inc add inc jmp stos and cltd addb push in and push int3 pusha sub jno (bad) cmp cmp into (bad) enter sbb add cld movsl enter or jne cs mov test adc add popa clc scas mov insl mov push and out in xchg lret lret (bad) sub inc adc xchg das mov xor fwait sbb into xchg rolb cmp loope xor cmp dec imul outsb sbb mov adc (bad) sub sub cmpsb xor xchg inc xchg adc sub fs test or (bad) push cmp inc mov enter or and rorb fdivrl add and repnz dec aam inc adc fsubr adc lcall fs cltd test es repnz (bad) shr mov loope clc jmp jb (bad) jmp mov pop inc or mov loopne mov xorl ret sub add push nop aam cwtl imul js das xor das add jnp sahf and or repnz push sub xor test or xor cltd sahf mov fwait mov mov add and adc lcall xchg xor aad nop hlt fidiv outsb addr16 es das outsl test jmp test lods dec nop ds pop and test sub mov sbb ret push icebp addr16 shlb lret cmpsb dec xor xchg dec inc push arpl es call in loope mov out dec sub jne js xor mov dec mov mov adc mov and dec inc sub adc xor dec add aam push and into mov (bad) ss cwtl inc push inc xchg test fidivl lds movsl jge movsl and into mov ja push (bad) into adc lret jnp aam inc mov aas and stos les leave pop dec popa sarb xchg push in and mov dec std test cmp jge lds sub mov xchg fstps into add scas mov popa loop ret gs pop sti sub mov cmpsl cli push test xchg and inc and pop xchg aaa clc cltd gs and xor data16 dec scas jge ds xor cmpsl dec fidivr jo cmp mov pop stos mov add push icebp loop and pop mov imul rcrb and mov add out and push (bad) and andb and pop gs ret notl scas push (bad) jb dec sti mov dec mov adc lods data16 mov and and mov (bad) out (bad) imull mov fsubs andl sar jp loopne sbb sti dec imul (bad) sbb push adc (bad) xchg push pop negl je inc add cmp (bad) lret and dec mov mov into cld cmp out jns push push ret test popa jp add or lock push cld jmp cli aam mov bound stc xlat inc or icebp daa lock inc mov push dec pop ss iret mov aad xlat mov push cmp fdivl pop mov in xor iret pop push aad push out ret fstps (bad) mov adc jle dec pop ljmp pop ret xchg jo mov push (bad) xchg dec inc cltd adc mov and xor xor cs jno icebp add and and daa stc mov xor (bad) pop pop xor add das mov daa out hlt mov dec adc stos pop out sbb insl xchg mov or dec mov movsb aam mov bnd gs roll ret xlat int3 adc roll adc test call andl dec mov fist in mov gs adc lret fadd mov sub call jae mov jb hlt rcll flds jbe jno or call je push xor xchg shll repz shr dec jne mov test adc jmp or icebp xlat pop (bad) push add cld (bad) lret sub or daa gs and ljmp mov (bad) cld data16 jb (bad) aad loop repz mov cltd mov sub cmp cmp xchg cld outsl jns je gs jmp adc mov mov ss sbb mov xchg fdivl repnz loope push pop mov mov lahf les mov jmp out adc pop or mov out sub repz jmp insb aam mov push rcl push or xchg (bad) push fdiv fs mov dec sub or sub and add clc dec dec fimull jecxz cmp push mov sub int jnp lea push lods sub (bad) sub popf addr16 push sub sub jmp jle (bad) jl pop push mov mov lret ret sub pushf lods jmp inc lret mov and cmp xchg imul jmp clc pop int3 sbb xchg fcoml ljmp xchg pop inc fnstsw mov (bad) xor sub outsb int jp jecxz pop inc xchg mov (bad) leave or pop call jg cmp inc adc ret pop repz ffree out sub shll ljmp leave xchg inc sahf cmpsl push loop enter ret push roll mulb dec mov adc lret lret cmpsb xor inc mov adc dec xor inc xor enter mov jmp mov cmp sub rcrb jmp mov sahf lods in das xchg or xor cli mov inc pushf inc jmp mov push sbb cmc clc addl test and sahf pop idivb mov sbb and push iret data16 or dec shrb xchg in iret cli fstl outsl int3 lods ret test (bad) xor xchg repnz jl lret je inc and mov insl mov fdivs leave stos dec outsl loopne sarl dec aaa xor dec sar xchg pop and sarb push lea cli and xadd and xchg aad cwtl mov sbb jmp nop dec jne aam mov jns imul mov or movzbl (bad) cmp sbb out dec leave sbb sbb ficoml rclb (bad) ljmp imul ja iret pop imul (bad) call push inc out push sub mov sub ja std pusha xor and shll adc mov push jmp shrl jns je (bad) (bad) call hlt adc xchg push test jle xor adc ds std xchg leave lods icebp clc cmp sbb or out or divl js rcrl fisttpll hlt sub pop mov add test pop mov and push mul sbb jmp mov orl das scas fs mov dec ret jl push fsubr add jbe iret push jnp push jno cmpsl pop stos jmp test cltd (bad) stc (bad) jle arpl pop cmp sub psubb mov std or pop rcll test ficom (bad) and in mov pop adc adc dec out int3 inc lret mov inc and mov sub adc xor dec add repz cmp and nop in sahf enter mov jg add lds movsl xor insl xchg (bad) add push mov das mov (bad) xchg imul (bad) out adc cld (bad) sub push or push dec aam lds cltd (bad) fild add sub je jmp scas into cmp and movsb (bad) mov jge in push sub iret sub and sbb add push lcall inc xor xor push repz cmp lret ficompl daa idivb ljmp movsb jns (bad) dec lret ljmp shlb aas je stos mov mov sahf add ret (bad) pop pop mov sub push mov negl pop xor mov adc lds push xor mov sub out pop adc xor mov call mov popf push out out loop shlb rcrl imul das sti cmp or sub mov xchg xchg sub add push sub dec and and movl push movsb push dec mov ret sub sub xchg push lret xchg sub xor xchg pop jecxz sub inc or xchg add mov leave (bad) fistpl jle movsl ffreep (bad) lods jno xchg or inc (bad) leave hlt inc add sarb jp adcl mov mov mov push xchg pop pusha add (bad) xor (bad) sub jmp inc or fist and xor test out dec clc mov adc stc loop adc sub aad pop sub ds sub cli lods jg and mov aam ret dec pop xchg add push or scas push xchg popf or or jg xchg push sub dec mov cs cs loop adc aas mov xchg out int3 cmp pop lret std pushf push pop out test movsl leave push loopne cmp jl pop not roll in pop das or fsubrl xchg adc aas push cwtl push push (bad) push mov hlt sub push (bad) cmc mov and out sub sbb mov sbb push lcall and or and shlb inc sbb nop inc and xor or pop xor loope cmpsb xchg pop push mov (bad) mov and or push stos ret dec add push call aas cmp push pop xor test neg adc lcall pushf xor mov loop (bad) add add cmp fist adc or mov or pop fbstp subb (bad) pop add data16 or mov add pop sbb adc add push pop sub fldl mov push pop pop or lret and std jns sahf xchg push mov insb mov jbe std pusha pop sub ljmp outsl nop sbb xor (bad) jne dec js popa and (bad) push mov jns roll xor mov adc (bad) pop cmp or mov out int pmaxub roll push mov jp shrb sub pop scas adc mov in rorb adcb push mov jnp or (bad) pop jae je divps dec mov sub pop fsubs xor in fdivs sbb cmpsl push (bad) jmp pop add push aad sbb mov push push incb add mov pop mov repz inc mov es add pop add test pop push cli loopne in add adc es popa pusha add push mov push loope cs test stos mov push call add xor scas mov add xlat add push and xor cmp jbe jmp mov mov int in jg dec inc push jmp mov test mov sub jg mov test movl xchg push shrl shr mov cmc stc mov idivl call mov jle (bad) out mov sbb mov repnz fidiv gs (bad) test loop pop xor pop mov sti (bad) call rep xchg lods mov or adc mov (bad) into inc (bad) popf push pop outsb push ret add sar sub ljmp pop sar nop ret or pop bound sti int3 out push enter or pop (bad) cltd hlt jg xchg (bad) push js pop cltd cmpsb or jg add adc lret out std xor sub pop mov sub movsb es jmp lcall pusha movzbl xor ja xor mov loopne popf xchg frstor (bad) and mov (bad) xchg (bad) fiaddl add ds mov push nop mov xor lret repz dec adc dec popa cli icebp push lret jle int jnp adc gs xor xor xor mov xchg jecxz daa iret js dec neg xor sahf push test adc cwtl dec sub adc ret xor xor add add xor repnz imul cmp aas shr loop nop enter sahf and adc rcrl add sub leave jmp cltd into mov mov pop mov xor mov scas adc aaa mov test cli add jmp (bad) aam push pop loop pop sbb cli jbe inc popf or sub mov pop xchg jns mov push mov aas mov mov lea test loope cltd pop dec push add jbe es andb movsl pop jnp and mov out leave icebp fldcw pop push adc jmp sar mov and xor push je imul (bad) mov mov leave jg cmp rolb bound icebp dec mov sar sub and push and push adc adc jmp repz sub int xchg jns sahf xor and or or mov and dec mov sti add sub subl inc dec ficomp mov mov inc sub roll sarb test sbb mov jp fistl fsubs jne,pt stos fsts mov test scas jecxz fcmovbe cmc jnp movsl inc sbb add jg into cmp lret add jo sub xor repz dec adc cltd movsb rorl mov add and cmp call jo lret sub repnz jge jno and rcl inc and rolb push ja pusha add outsb lock ss ljmp into xchg mov sub adc jmp xor (bad) lock adc test mov psubusw add jmp sbb f2xm1 dec mov pop xchg out out pushl mov ds add or loope sub pop lret cmpsb pop repnz xor jmp clc push push add stos (bad) hlt jg jb iret inc and mov xor loope iret jp insl out sub sub out mov push popf lods pop daa push sub aam ret aas lds pop sbb mov push test push xor mov loopne je mov dec test lods lds data16 bnd jg xor fs sti test pop mov dec lods xor sub sbb bound mov jge std lds repnz ret inc cmpsl (bad) lods xor pop outsb pop dec mov divl mov sub (bad) in add jo cmc or and enter setae cmpl imul out mov js loopne mov add fdivrs jnp sbb sub out inc shrl push aam xchg pop mov fsubp movsl pop sahf jae jp xchg jmp fcmovnb ss mov mov shll pop mov sbb loope xchg pop in jle mov xchg fwait dec ljmp imull roll dec ljmp mov das test in je mov push repz je push dec or sti mov dec (bad) repnz or loopne dec (bad) dec and (bad) dec xchg dec sub xchg jnp dec pop daa or cmp ret mov jge xchg popa je mov scas stos lea inc mov daa repz fisttpll xlat jns dec fs mov mov es ss ljmp mov repnz xor xchg xor into mov cmp dec outsl or sub mov fs or lock sbb in std insl xchg call repz or mov fnstcw imul fisub add adc add mov pop outsb inc mov clc inc inc or and decb push test push decb push and push testl sub adc jmp adc clc popf fidivrl sbb dec fcmovnb mov add (bad) add not push dec xor std dec or xchg xchg cmp or pushw int3 dec in mov pushf push popf add adc pop xor outsb xlat pushf repnz adc aaa scas fisubr cmp jno mov enter pop mov or sub push inc test mov leave push mov stos icebp jg (bad) mov lret (bad) sbb mov leave sub (bad) mov ret push mov mov notb icebp sub mov push and out sub lea scas sub mov xor cmp add cli inc test xchg dec fnstcw and movsb (bad) jmp fdivs outsb dec scas insb mov add ljmp adc mov ret sub rorb mov lock pop lcall ror jnp push rorl sub cld sbb cltd pushf lods and cltd xchg lret cmp icebp add lret and dec fisttp sub mov scas mov adc stos repnz cmpsb pop pop add ret sub (bad) xor decl dec or lahf ficom outsl xlat test mov or mov xor std rclb push out nop popa popf jae adc xor ds cmpsl xchg sub mov or lahf loop mov into cmp sub dec ds out xor repnz fistl cmp ljmp call stos sub cmp mov mov cltd lea cli mov test arpl dec add add (bad) hlt mov pop test orb sub dec lret mov (bad) pop jno inc mov insb aad mov pop add fimul iret push ss inc adc xor sub sub ror and lret jmp add dec pop in test sub add lods sbb inc imul add mov xlat or cmp repz scas in xor pop cmp jecxz mov mov std mov (bad) sti mov in xor mov test scas fs push mov push cmp cmp add sub xor or xor cmp push xchg jno push loop js or stc jecxz jmp pop cli je mov and mov fwait push jne push popa cmp (bad) cmp xchg les shrb dec cs sub popf ja and cmp stos iret repnz sub leave aas sub outsb and call mov pop sub ficompl push sub dec sarl cld push xchg or mov test lds add pop xchg mov push popf xchg sub das lret mov push out push xchg jne sub jb icebp scas cmp out inc sub xor aam das rcrb rcl clc xchg pop push pop fstps xor fucomip std xor add pop sti sub mov imul jge add (bad) xor mov lds push dec ss xchg ja cmp jnp add fwait js dec imulb dec inc pop xchg jns add jp negl mov mov pop jbe mov dec mov test loopne cmp xor repz and pop mov mov daa ja xchg sub pop fist push cwtl inc popf mov xor (bad) scas ret fnstcw dec loop std (bad) and lock gs rcrl jno insb nop leave or daa dec add xor xor mov push stos or fs mov xor test into repnz mov dec inc not bound xchg js lcall mov jmp int3 xor repnz outsb int and movsl jb jns jge pop out xchg mov mov icebp fldz js mov cltd mov or rcll cs jle or inc mov inc stos xchg leave mov pop lret packssdw adc fistpl and cmp push or and lret xchg inc pop push js decl dec aaa cmp int sbb lea hlt outsb push add mov cs mov xlat mov xor sub xor inc mov cs (bad) jmp adc mov test adc ja stc das icebp loope loope out nop lret xlat std inc dec mov jmp push test sub adc rcrl aaa jg jo popa fimul sub rcll (bad) mov int das scas sub push xchg icebp dec enter mov adc push cwtl inc mov out mov int3 popf loope sbb in pop dec push ljmp scas mov mov and pop bound mov fistl pop out in insl xchg loop pop and popa mov (bad) cmp insl jb mov xchg es lret mov cmpsb lods dec lds add and dec (bad) jmp or adc add scas pushf add lahf cld push xor imul lds inc out and scas mov icebp ja and fdivl pop (bad) mov call and xlat dec jbe sahf mov sub pushf or mov xor (bad) xchg dec repz sub sub and or mov mov neg lds aas mov and repz sub lcall mov daa icebp jge jge xor and lds mov pop (bad) out cs xor mov dec jo repnz cld dec repnz lds pop cltd mov fmuls cmp cmc loopne test addr16 xchg fisubr aad sbb dec mov fwait add (bad) mov mov leave mov js movsl cli cmpsl clc pop cli ja mov and mov or adc iret and jge sbb mov dec cwtl into xchg jl les push pop mov pop test leave and jb xchg or cmp pop int3 jle popf push das mov sub fdivr fs out xor add aas mov lock jmp push fstps xlat pop mov negl in cmp mov sbb mov inc ds loopne,pt jmp mov outsb mov (bad) dec pop hlt lock xor mov (bad) lret jb in push cmp lahf outsl (bad) and mov pop cmc xor jno ja sub sbb lock es xchg jns xchg xlat xor test dec sub ja iret stos mov sub push scas pop imul dec shl xor push jge or repz dec shrb and pop iret xor dec loop repnz push lcall (bad) sub iret mov daa data16 dec mov or or out jl loop,pt ficom jge mov xlat push push lea sub jg mov or mov stos mov sub lret xchg pop inc add inc jmp icebp and call aam or mov lods divb xchg mov dec or dec or cmc push repnz cld ja pop jle or xchg hlt add ret jbe pop push lret pop test call fldl mov dec cld lock xlat mov (bad) sbb xor cmp mov bound mov (bad) repnz sar das inc sub insb mov nop aas xchg bound (bad) loop xor and mov sub xor jmp iret aad jge sub and adc dec roll jb repnz mov stc leave iret xor add xor into push sbb push mov lods sub sbbb pop mov leave xlat push dec jb xchg mov mov mov in or mov push push jmp push shl shlb sbb adcl jno push mov lcall lret (bad) cmp (bad) mov dec mov adc cmpsl jl in sub imul xor imul sub push and test pop add stos pop xchg insl das out pop push pop test iret andb xor add add pusha sub xor jno sub (bad) in xchg popa and adc push dec mov pop lret int in add mov jmp loopne divb and cmp mov inc jns (bad) pop stos add and mov lock lret jecxz sub insl ret jne push pop out and fnop cmp stos std jae ret inc das cs or pop mov jg jmp xor scas adc bound mov popf inc push and jle shll sarb (bad) lret sub popf lock jmp ret dec jmp mov pop orl movsl sub insl pop mov test sub jmp popf sub subb jb mov mov push mov pop out daa sub fistpll sub xchg jno ret hlt imul sub sbb push mov jbe bound and or jmp loop ret or repnz rcll and cmp pop push ja int3 jge xchg xchg outsl or lcall xchg (bad) bound xlat pop add ljmp sub repz xchg add inc mov fs or mov mov sbb jg xchg and movsl loopne (bad) hlt stos repz jmp shll mov daa jne fwait lods fcmovb jmp loop lcall rclb mov int push test lods lock push movsb loope pop push test ja and pop push notl xor hlt notl stc mov mov pop adc cmp and out test scas xor (bad) push js movsb fcoms add fldt mov (bad) pushl into xchg dec and test iret xor mov cmp sub xor das (bad) or rorl mov (bad) mov lret cmp pop lods sub add das xor add adc cmpsb (bad) ds scas loop xchg int3 jecxz mov es sub out shll jnp arpl sbb xor test dec enter cmp sbb jecxz test fstpl cltd (bad) (bad) ds adc xor push jne pop pop enter repnz arpl daa fcmovbe mov icebp test lcall mov add mov mov push insb push pop xor loopne std xchg jmp sub inc imul dec mov mov iret fnstsw dec push adc popf push sub je jecxz or pushf add je outsl pop sub mov mov cmp add std sub pop push add clc sbb xchg out movsb adc jnp mov das jo mov stos fidivl fsubrs clc add ficomp sub iret cmc adc lcall enter shrl rorb stos mov sbb jg idiv daa pop je cli repz sbbl pop jg mov sub ficompl divb sbb pop mov push sub sub fisubr es sub in lret xchg (bad) mov and into mov imul pop push lret lret test idivb test jo mov dec mov sub test ret adc das stc insl sarl icebp mov je mov sub adc xor sub mov repnz mov or or arpl adc loop,pt dec cli sub jno dec mov les cmpsb mov flds mov pop loope lods ds decb xchg iret daa mov cmp jae add sub mov fildll mov fnsave and xchg and aad insb dec sub into js sarl les mov repnz mov xor sbb jae mov sub rcrl cli ja or or cmpsb xor sub or jns inc enter mov or lds std and mov xor leave cli negl (bad) int inc repnz (bad) dec leave sti je jmp mov leave cmp movsb cli loop xor jmp fbstp icebp jnp fcoms mov test fildll mov adc sahf fiadd and andb mov sbb push jbe cld loop or jo pop jp xchg stc out dec flds test out dec cmp push leave and ljmp (bad) out pop stos into adc jecxz sbb jp sbb push repz scas mov xlat mov sub fwait add ficomp lds leave sub jno out xor and xor jle inc pop mov outsl notb sahf test test cli test jecxz mov dec push or dec sti outsb pusha lahf mov leave cmp xchg out mov xor mov xchg mov daa sti mov or pop mov movsl pop cmp mov data16 or (bad) push sbb and push (bad) ficom push (bad) mov subl pop scas bound push pop inc mov adc xor cli inc inc mov loopne jns gs or loop cld lods loopne mov (bad) dec mov out ja movb negl rorl cmpsb adc and sub sti lret dec dec xchg adc xlat mov fisttp mov lahf sub mov pop lods ret push pusha aas std cmc jg mov adc scas jns push push xor loopne shl sub mov jns pop adc cli mov mov jne cs pop icebp movb stc jno and push scas pop es pop pop pop inc ljmp push jl push insb or pop mov pop mov and adc sahf gs jnp int pop sbb dec add das scas and cli mov mov sbb push inc or xchg and dec sub jle ss dec xor mov rorb mov imul rclb add add into and sbb push imul pop mov inc mov jno shll add xor add adc sbb mov pop pop cli stos imul cmp push xor push or sub add add adc cli pop cltd xchg mov push push push sub push rorb cmp pop mov or pop test dec push mov push mov shr sub dec neg add scas orl in sub push dec mov push jge cmpsl aaa out (bad) (bad) sub xchg (bad) leave idivb testl or out push movsl push loop sub mov cmp push imul shlb iret dec mov dec clc and mov es rcrb lahf jno dec or cmc jp mov out stc fstl add sub pop push aas sub (bad) and sbbl in out (bad) stos repnz rorb xor dec (bad) push popa movzbl das lods insl (bad) repnz dec icebp fdiv rclb and out mov jbe leave push into cli mov sbb inc das loope inc jmp call sub gs das (bad) push cmpsl or sub push jbe dec sbb dec scas fcom out push pop decb (bad) test loop mov incl inc cld arpl ret pop repz xor sarl in leave inc cwtl mov repnz xchg stos mov inc jns pop cmp xor push fneni(8087 jle xchg inc cmp ret sub jb and ret faddl or add xor mov cltd adc cmpsl jmp pop fidiv dec push mov gs lock fmuls ljmp mov dec lds stos sub push iret lahf sub icebp sub jns pop or cli rcrb test adc sub cld nop clc dec stos mov lret or push pushf mov push adc mov dec movsl imull lods jecxz xchg xchg push out cmp les idiv xor mov push mov dec lret aaa push imul aad loop (bad) jle (bad) xor nop out mov call sub pop and jmp addl scas ja mov mov or pop out idivb pop pop das sub repz and jmp imul pop call pop sahf inc pop pop je push out add cmp cwtl dec (bad) lahf aam das out dec out mov mov in and idivb and push ret cwtl (bad) shll pop mov push xor sub mov lret and ss pop in and pop push test jle mov adc xor outsb xchg cmpsb cmp adc shrb push js xchg test sub pop and das (bad) shrb aaa in mov adc mov push sti les mov ffree mov rcrl sti push xor sti aas xor test roll sbb pop cmp out ja inc scas fs das or mov int mov cmp mov cmp dec hlt pop fisttpll jmp repnz sub adc gs fbstp jb out cltd cmp and dec (bad) mov jbe pop jbe and negl js xor and fcomps aad stc out outsb sub pop mov dec jle iretw ffreep icebp daa shrl lods inc xlat aaa jne,pt mov jl rcll jl adc xlat les and xor mov pushf sub push dec mov xlat arpl cmpsb sub lods pop clc maxps les xor scas ret (bad) dec dec mov jae in mov sbb adc aam movb and sub addr16 push adc jge mov cmp mov sbb pushf and jae add stos dec mov cld sbb or (bad) mov fistpll mov lret jbe rcr sbb jmp and jae jecxz or mov or and xor dec mov test mov mov (bad) jg push decb mov and loope (bad) mov pushf push imull int3 out or push hlt push cltd sub sub jb out pop outsb xchg xchg in adc cwtl (bad) scas xor mov sbb mov mov lret or cmp inc lods fsts ret mov (bad) push repz mov repz add lcall mov ret ljmp imul sub jg pop sub sbb mov clc movsb (bad) and and fidivl xorl xor jb fdivs xchg sti or fidiv icebp jmp inc movsl push clc rorl adc or das xor jle (bad) lret xor ja lret jle or mov sub or and ret or xchg repz add and cmpsb das and aam lods jne jge clc and inc sti fsqrt jp cmp scas gs rcll mov aaa in jmp or xor xor dec leave out scas insl mov ss imul pop (bad) shrb and jmp adc xlat lahf jno sbb sub scas pop sbb dec ljmp ret inc inc test jmp mov jnp adc xor pop subb idivb (bad) push adc mov adc push dec fmull insl (bad) es cmp ret dec out sub clc adc mov fs push mov (bad) pop cmp mov jmp insb leave pop jns lods jo daa repz faddl and out mov (bad) jecxz in xchg repz pop frstor cmp call cmpsl repz or in insb sub pop mov push shll add push ja inc or (bad) mov push pushf cmpsl lcall pushf push xchg lds lahf loope idivb scas xor jmp or mov and leave cli inc ret mov add lret in cmp fisubr mov mov out jg sbb into out mov jl jle add mov mov fistp (bad) dec sub xchg xor stos pop xor jge not xchg mov push out mov adc into xchg sub ffreep call add (bad) lret jae sub pop cmpsb inc mov sbb imul xor mov iret jl dec sbb or scas jg (bad) xchg sub push mov jmp int3 mov out adc cmp dec out push dec pop ret and scas data16 pop jmp sub dec xchg les imul cld cmp out mov cs mov push icebp mov cmc inc jecxz out or test (bad) mov and inc scas bound lds sbb inc ret mov adc loop (bad) xor cmp dec mov das (bad) fistp inc pop push mov xor mov and out push je lds mov out xor icebp cwtl cli (bad) notb xor loopne xor and add je fnsetpm(287 cmp dec mov inc cmpl negl jecxz dec movsl cmp addl mov nop mov mov xchg mov sbb pop xor lcall jmp (bad) pop fisttpl movsb dec xchg lret mov pop je jmp iret mov or mov jne mov lahf test sbb cmp loopne out mov andl mov dec lods xor mov icebp icebp bound pop pushl mov ret add xchg outsb or in cmp adcl or fsubp pop out je test mov popf bound out cmp mov into std adc (bad) dec cmpsl push pop xlat mov repnz xchg adc mov setns ljmp lock out xor jns inc into and sbb (bad) pop sbb repz sarb andb pop sub clc inc xchg enter nop and xchg int3 cmpsl repnz (bad) cwtl rol xchg push sub enter scas xor add mov mov pop push jge pop xchg adc mov pop mov pop pushf add sbb xor call or repz cmc pop cmpsl mov push xchg scas cs xchg dec rclb ror ja xlat pop pushf sbb adc or std stc xchg loop je rorl xchg icebp dec idivb and push int3 (bad) ret jae lahf popf (bad) mov sti pop dec dec out and jle and sahf push in inc lret xchg fstl pop leave insb nop icebp pop fmul iret dec pop sub imul pop mov add jecxz adc mov mov dec lret repz push fisubr or xchg in push mov xor mov mov jge inc gs pop mov mov push cmp mov out fnstenv in repnz xchg ljmp cli mov ret adc mov in pop push xor not mov dec aaa js mov mov xchg (bad) adc pop out aaa (bad) pop in and sub pop pop or sub and cli jb bnd test xchg lds push (bad) idivl xchg clc mov inc sub loop pop cwtl out cli mov mov out dec pop fstl in xor cmc add sahf js jbe pop out stc mov xchg inc cmp jp lea sub mov mov cmp jmp cmc sbb push cmpsl imul pop daa xor imul fnop imul (bad) and mov fild mov and or iret movsl je inc sub je ret inc daa adc mov lea fidivr pop sbb out xor divb lods (bad) sbb push call xchg xchg mov mov (bad) jne ret and shrl ret mov push and push in mov test sbb add or mov xlat fcomps ljmp xchg out mov xlat (bad) jne mov lret dec inc mov loope adc xor scas lods xchg mov mov movsb jg scas clc rol add or mov add fsubrp je jmp dec stos cmp out xlat in and sub pop jle inc movl xor scas dec sbb jge inc ret cmp popf push cmp fisttpll fs movb push je jo add out mov push and xlat inc lret iret out xchg xchg dec pop dec jmp push or (bad) jge imul mov jo dec add fadds (bad) jp xchg je js and ret rcll inc jne mov pop pop or jbe loop inc jl into insb ljmp loop,pn lds add je cmc adc sub and add jmp xlat outsb ret mov and mov aas mov (bad) rep xchg xchg sub or sti xor cmc fiaddl movsl test dec iret stos addr16 (bad) mov scas test scas bound inc adc dec pusha rcll adc jecxz es mov roll icebp fldcw lret outsb pop mov xchg das test mov and mov mov mov call sub lock mov jns mulb mov das or enter and push jne arpl mov adc stc xchg leave and aas fisub rcl xchg sub stc lahf arpl push add fnstenv and shrb fstl dec sbb mov cmpxchg8b push xor clc lret dec cmp cmp dec sub and adc shr (bad) loope jge inc mov icebp or rorl and cmp cmpsb xchg add mov daa test dec push stos popf (bad) std loop stc jbe or adcb data16 hlt jnp fstpt xor (bad) icebp xchg fldenv cmp push shrl cmpsb movsl pop inc es scas pop sti push lcall push or xlat pop sub leave xor lock xchg lahf outsl mov adc (bad) lahf jg add dec xorl cmc lret xor adc dec or arpl icebp sub fsubrl and lods gs iret and (bad) mov and enter out cmp adc rorl sub add xor pop aam mov add (bad) and sub sub pushf jbe mov sbb mov rolb or fidivl aad imul or loope fadds jae jmp rclb mov (bad) insb push shll mov pop lods add mov add pop or mov xor sub sub xchg int3 jle and cmp push int sub leave and mov ljmp mov sahf mov mov sub pushf and jae and (bad) jmp inc jnp lods (bad) and sbb out dec push fsubl pop fsubr xor jns aas out push mov (bad) rcll mov xchg decb push out inc lods sub test mov jl mov nop push das mov dec xor ljmp dec mov xor data16 daa pop jns xchg out dec lds jmp sbb lret incl into imul popw adc sub out int push push icebp inc cmp xor test call in daa jge xchg mov (bad) mov xor sbb icebp inc pop inc and xor rorl test sub les loop decb (bad) stos repnz std inc inc daa jne cltd loop je push xor in mov out dec bound fdiv (bad) bound (bad) mov xor inc push je imul pop mov call mov jne aam in sbb cld and and ficomp (bad) jmp cmpsl imul icebp and lret inc ret jb je or pop add or jge cltd or inc adc loopne test ljmp or dec pop shlb mov iret push stos imul pop fbstp xor adc ja in test sub or pop jmp into mov jmp icebp outsl test push adc repnz sub pop imul lret lcall repnz negb in data16 cwtl and scas xor int add mov sbb or push into (bad) mov aas mov and xchg jo add testl jbe inc (bad) adc roll shlb mov jge icebp mov and xor xlat push movsl cmc gs adc pop movsl aad mov mov push jno dec out mov js xlat (bad) clc or xchg push cwtl mov test fidivl pushl add mov enter out mov loopne pushf push add mov sbb or jns fs xchg mov aad dec (bad) hlt xchg jmp daa (bad) stos in bound or pop pop adc ret cmp ss and (bad) mov pop shl dec push sub (bad) pop (bad) stos jb ss inc ret lods scas dec or push loop cmc int3 das xchg js mov sahf pop loope in add pushl aad or jmp inc or and loope les jecxz and and xchg enter mov mov add fwait pop push mov pop mov dec leave les lods push les add idiv pushf push popf je push ret in or inc push xor fistpll xchg mov push cltd movsl xchg inc enter inc push sub xor jno add and sub adc shlb add sti test call dec sub sarb add jbe repz sbbb cs int3 push and add bound out jno jae mov decl mov sti mov pop or popf out sub ds movsb aam sbb hlt int push pushf into jg imul jnp mov ds xchg (bad) out cmc pop or jl gs jmp inc mov and lds into sbb pop dec scas cmpsl lcall sub push sub or stos repz enter push sub je (bad) popf xchg pop xchg add in jo push (bad) lret sbb jae push sub stc sbb (bad) fucom sub nop iret pop and xchg or or repz lods inc leave and imul dec sub aam ret nop sbb clc ljmp les or mov sub je jp jmp movsl push add shlb sti test mov push cmp movsb cld jns das xchg add push imul sarb das xor std push nop dec into mov adc add popa das (bad) sub inc (bad) out or inc das int3 lea (bad) adc sbb pop push sub repz push cmp mov negl es popf addr16 in mov adc hlt imul inc and lods cmp imul adc subb arpl sub jne xchg dec mov lds jae mov jge aad shlb lods testl jg lock fildll mov mov lret shrb and and mov pop (bad) and cmp and ficom inc xchg loope or xor loop xchg push pop jo call rclb pushf int3 (bad) out and mov insb dec pop cmp xchg mov push and mov and or sub mov jge stos lods fnstsw cmp and lds fmuls push leave enter sbb shlb pop dec test in (bad) mov into addr16 push mov insb push (bad) iret mov imul or xor (bad) leave idiv jge dec les add out (bad) push dec xchg push sarb pop mov repz movsl popa mov cmp xor ret sub mov rep rep dec ret (bad) push cmp movsb mov (bad) popf shll sbb lret dec jne sub cmp aad int3 push shrl xor pop dec out popf (bad) cmp pushl enter cmp lea cmp mov dec sub sub shll orb inc cwtl popf pop sub push dec ljmp xchg stos or leave data16 xchg (bad) push or add aaa pop das call cmpb add sti or idivb push dec xor adc and cmp insl mov lds je or sub sub or daa mov iret or rorl movsb sbb or es pop outsb pusha pop push push roll xlat scas lea aas (bad) ljmp subb outsl mov adc mov gs jne xchg das xlat adc mov push push xchg popa cmpsl (bad) ja int3 insb daa aaa add jle out push sti scas out dec dec dec sub xor pop jge test stos lcall or sub fwait bound and mov sub repz ljmp les xor pop in mov push xchg ret enter mov and or cmp icebp mov fstps cli jg rorb sbb leave or pop lock inc mov and dec das lahf inc (bad) sub das bound movb sbb call sub mov xor mov and push adc les in rcl mov xor push xchg and leave xchg aam testb jmp in sub xor test das idivb inc stc xchg ror push out jo mov loop dec mov in mov or ja add jb (bad) xlat rol lods lcall std cmp shrb push test mov pop roll cmpsl push inc shll jae adc in pushl enter ljmp mov inc pop das lret adc push movsb cwtl out dec shr bound push adc cs or or sbb jecxz push cs push xbegin sub into sbb repnz jp mov add roll stos sub jg (bad) jp push and fucom mov pushf shlb dec enter sub dec lock and rorb aad mov popa add test pop stos jno or sub rcll stos jne ss out add (bad) ja mov lcall adc or ret aam xor repz dec or or jo mov jge lret sub das cmpsb cwtl leave testl test xchg mov into add pop (bad) mov jge mov sub add mov and mov pop add or (bad) je test adc lret divb xor xor or mov into xor mov lahf data16 add pop (bad) idiv push jge fwait decl and lret out push por cltd pushf popf and sbb sub sbb das and and push mov sahf (bad) into sarb ret mov or fsubs bound jp mulb dec push (bad) or in das jns inc jmp cs adc mov pop daa mov addr16 mov hlt jmp pop sub and mov sub add mov xchg xor in lcall das (bad) sub xor test out loop lret mov out repnz xchg std xor mov test test mov repnz sti dec cmpsl add jb out cmp sbb loope jnp mov inc add adc and mov aad out fldl in mov or pusha add mov daa cmp setg (bad) sub jmp and cmp stc mov and mov pop mov sub cmp (bad) stos pop sub and pop push icebp das add xlat pushf push inc out or cmp xchg leave jl les add jae and jne jne sub outsl int cmp cmp xchg test pop add or or ljmp or cmpsl mov and pop cmp inc or sub out (bad) xchg ficomp mov jnp addr16 push cmp movzbl sbb jge xor movsl divb xchg popf pusha scas (bad) and imul (bad) lock mov loope or fistpll enter decb stc aam divb test iret out sub fnsave pop jge inc mov inc outsl xchg mov into mov pushf mov add push fsubrp sbb movsl adc mov sub xchg and push out (bad) jne lahf pushf mov (bad) aad xchg out sbb jmp cltd inc test sub and lret pop mov inc or (bad) cmp sub shr ret push (bad) inc push jbe mov call push pop xchg pop mov and in rcll dec or sub sub or push and mov lcall lret cmc outsb pop popf inc cld mov sub cmp or jmp adc lea lret movsl repnz push mov inc ret dec loope jmp pop pusha ljmp push pop incb das push mov mov out mov sub or push pop lret push int3 or icebp cld mov lods push mov inc das mov cmp (bad) fist inc sbb cmpsb push pop adc mov mov xchg pushf add icebp or pop push pop pop movsl test sub and in in out xchg negb jbe das mov lret cmp sbb xor mov sub mov ljmp jmp adc or aam (bad) or or mov out bound push jae cmpsl pop test fbstp xchg sub cmp shr jbe movsb hlt ret fistp fsts mov adc xor mov cwtl jbe mov and or mov sub jnp adc and or sub lods sbbl cmp aad jle ljmp mov jg xchg or test dec or std sbb sub les pusha stc xor lods cmp (bad) lret jl inc lret out add xchg jmp ret jnp and jmp or jmp leave inc movl hlt aam lds leave ljmp jmp aam (bad) mov mov or mov cmp fucom (bad) push xor loop call fidivl xchg movsb out sub mov push add aaa xor xchg outsb jmp mov jbe jle fnop out into mov adc out gs out mov ret jp add clc pop movsb scas push and aaa stos out pop or add inc (bad) sub rcrb fimull nop enter mov sub daa and ds jnp test xchg jmp jmp pop mov inc pop stos lods cmp sti daa adc ss movsb push insl sub loop push roll (bad) cltd (bad) and call sti add mov xor daa xchg loope (bad) ds arpl or (bad) dec sub jmp add lret add aam imul add leave ret push pusha xor or in and imul aad dec or cli xor ret insb pop sub (bad) sbb jno xchg add adc jle (bad) mov dec sti dec in nop pop stc (bad) mov aaa cs push mov pop scas lret idivl sbb repz shrb sub xor rcrl jne icebp pop push xor jmp sub leave ret js pop ss mov and stos mov xchg scas fmuls dec sub dec xchg mov jb js pop (bad) ja or outsl ret pop ficom call daa imul xchg (bad) lret lea js (bad) out pop inc leave repz insb addr16 cld clc int sub popf pop sub ret sbb mov shlb push or jns lret pop jl push cmp scas arpl push in xchg push mov lret orb push adc psubb sub cmpsb ret popf push cmpsl sub add cld and add push mov stos loop leave jmp xchg popf dec jecxz fs repnz lods and pop gs adc stos pusha mov inc add das push clc pop mull add les fucomip jmp out aas addr16 push repnz cli daa jmp mov adc sub xor (bad) dec fidivrl push sbb movsb adc mov ds outsb int arpl cmp add xchg push or repnz dec pop xchg push std scas fwait xchg and daa ret int xor int scas mov out mov iret iret test dec jmp syscall jmp (bad) out vpaddb mov mov and xchg icebp decb into or call (bad) dec sbb das mov fcom std or add dec pusha xor push xor sub movsl xchg mull int insb push dec pushf push or into sub icebp dec add nop sub push mov mov (bad) mov push cmp data16 pop icebp ljmp xor out adc fisttp add jnp add mov cmp das bound xor and sahf adc scas cmp into mov cli fsubl outsb (bad) loope shll jp fnstsw push fdivs xchg mov cmp xor stos ret int3 ficomp jnp push mov imul push popa repnz xchg cmp in scas fsubs xor stos jb or mov fstl mov ljmp dec repnz vorps jb test lret daa push pop adc lahf fistpl pusha out mov sti imulb cmp push xor jmp mov ja fsubrp int3 ficom (bad) xor repz jge icebp int int3 or mov pop xor rclb xchg add or push test cmc mov and (bad) out sub or nop out insb or das (bad) pop and ret adc adc and pop jge mov ficom je xor sub xchg add repnz cltd adc test lret mov inc or fisubr fistpll fldcw cmpb sbb imul mov pop xchg es hlt std push dec fimul sub (bad) movaps fcomps ret (bad) mov sub mov jmp xor mov fcmovbe mov leave and add sub popa adc imul jl ret pop push inc xor cld iret lds add call sub (bad) dec sub cltd mov sub popa arpl cld or stos mov movsb pushf and fwait or fiaddl push jno push or adc ljmp push movsb inc xor repz jg add out sbb mov notl cmc popf ja sti xor mov pop imul sub mov and xor cld xor shrb ss push and jmp lods push imul (bad) inc add sub mov or sub xchg and adc inc sub mov in les cltd lret mov mov jbe or (bad) je scas test and jnp mov js jle lods (bad) nop push mov sahf add ret daa mov adc sbb enter cvtps2pi (bad) push (bad) xor ds jle outsl inc cmp mov push and stc les into stc mov mov cld add xlat fimul das xor inc loope js lret (bad) out decb jp popf push aas adc ljmp mov mov jl lret (bad) sti sub ret into icebp pop and imul cmp mov or or cmp (bad) iret cmp sbb mov inc adc or adc lret push jno adc adc and xor mov jle shll lret push lret pusha icebp lds pop sub or mov xchg pop dec in xchg cmp movsw push ja js mov ljmp shr or (bad) int3 pop dec clc je scas and mov (bad) test leave icebp ja pop dec ret sti mov xchg sbb mov sbb xchg push aam cld lret ljmp lods mov cmpb xchg jne inc xchg cmpsl pop mul stc mov repz push gs add cmp xor pop bound ret cwtl xchg (bad) mov mov mov test call inc (bad) (bad) mov sub and sub (bad) adc repz imul mov sti mov rclb push mov jnp call add xor pop cld outsb add cmp out out call in jg je icebp inc dec or cli insb xchg stc push mov (bad) mov loopne xor xchg pop mov repz orl push iret out xchg insb push fs mov out rol jmp push mov inc dec neg je add jp ret xor pop add xlat add rorb iret dec sarl add adc shlb pop rcrl (bad) (bad) pop je pop sbb ljmp es lret jns (bad) push mov js push jne sarb inc mov push orb fsubrp call int mov ret mov fsubs push push mov pop (bad) fild add or rcrb cmp adc (bad) jae aad pop mov pop sub pop scas xchg repnz in sub or and call pop loopne or js jb fsubrs outsb jmp das jbe jp adc lods jle popf popa hlt jg lock pop and push insl mov mov (bad) adc push push repz jns xor idiv add dec add imul sbb mov dec notl inc cmp sbb inc lret inc shrl xlat pop fcoms pop pop sbb icebp lcall jb out sbb insl jle mov mov cmp idivb push mov jns cvtps2pi mov sbb stos pop pop clc fcoml or push push mov iret inc jg,pt movsb fisttpll pop mov repz arpl push sub pop or mov push push lods mov dec mov rorl or es pop lods out je pop or idiv scas mov lret ret lods inc movsb pushf fwait arpl mov daa inc sub push jge fs es sbb pushf mov xchg scas mov pop mov fcoms jg dec (bad) xchg in lods mov out xchg out pop dec leave aas push push jle push mov lret dec xor repnz fcomps xchg mov pop sub add scas pop mov inc dec (bad) je sbb jbe les mov inc test test dec cwtl cmp jl jg mov clc and aad notl sub push mov or inc and hlt lods (bad) imul or scas sbb push adc jne and addl push das dec sar imul jbe movsl add jmp add loope cs mov sub ret (bad) neg cld (bad) test sbb mov hlt adc cmp into ret inc add daa add xor push mov sbb std xchg adc or movsb fs or push xchg (bad) repz and ljmp js ret mov mov and mov lahf xor rclb iret mov (bad) cmc insl ret mulb movsb out or pop sbb cmc loopne cli sub (bad) mov ret mov mov and add inc push fisttp lock imul lds mov imulb add cmpsl pop adc sti mov stc mov inc adc push shrl mov in jg test call jnp (bad) jl out (bad) insl leave sub pop repz xor lahf xor pop test mov xor (bad) or sub outsl test (bad) adc bound in rol and and pop test push mov inc icebp inc aad sub movsb mov out lret loope cmp mov aas ret negl enter pop push pushf sar test shrb dec subl xchg mov xor dec pop xor pop and scas cltd insb jecxz fdivrp negb pop or pushf pop and lock mov xor sub data16 fdivs daa or stc sbb je out dec xchg pop stos mov lcall lret (bad) hlt adc mov sbb loope cltd pushl clc (bad) sub shrb outsl jg mov push pop pusha xchg rcr xchg adc mov add xor adc out rorl mov sub cwtl enter lret ficom xor sti fxtract aas movsl es xor sub xchg icebp andb or and sub bound movsl std sbb jle (bad) dec les mov cmpsl pop inc dec ret stos sub push movsl or inc mov sar sub shr jecxz add mov and sub mov (bad) (bad) (bad) dec sub pop sbb pop cmpsb (bad) idivb adc test jecxz test and rolb sub adc add mov and jbe (bad) cmpsb mov imul pop dec mov jb (bad) jmp (bad) lods js xchg jge adc sbb push add xchg pop pushf arpl mov push jnp faddl and lret lcall lret pop xor mov ret mov (bad) fmuls sub mov dec and daa jbe xchg xor sub lea adc xchg (bad) sub jle addr16 mov jle jmp lds or enter push lds daa sarl (bad) cmp sub (bad) xor jne pop sub (bad) dec fmulp mov dec lret cli sub and ret mov mov les fsubl mov sub mov or adc mov movb iret sub les push scas fldl (bad) cltd movsb std cmpsl divl adc inc out add sub pushf xchg ja xchg inc loop xor mov sbb into sub xor (bad) adc (bad) in mov mov scas mov sub xchg insb (bad) iret repnz and les in ds sub imul outsb ret pop xchg cmp popa lods xchg adc fs andl push stc xlat cmp sbb xchg test pop pop pop fcom fcomps lret push icebp cmp sub pop leave int3 cmp and xor shrl adc push cmp sbb jne mov mov xchg lret add mov mov aas cld xchg jecxz mov push lds mov cmp sub sub fadd (bad) sub cmp out call cmpsl lock and mov mov call sbb cmc aaa push cli add int outsb (bad) ror lods jb subb or imul lods cmp lock repnz xchg repz aas aad push outsb cld cmp jecxz cmp in jnp pop sarb xchg adc inc lcall aad dec and xchg pop xchg rclb icebp outsb fs stos xor xor inc xchg and incb xchg in sub mov xchg cmp sbb mov and rcll add mov daa or mov adc mov scas std xchg or rorl xor sub movsb and cmp or in jmp aad roll and loopne icebp xchg out adc sub scas loop sahf clc dec repnz xchg scas fs test fbstp add sub pop repnz jecxz ja add cld popf xlat mov sub and jmp lock cmpsb mov jmp into mov imulb inc jl mov mov sti add sub or gs das out das xor push fmull leave push add mov mov cwtl mov das (bad) adc pushf adc fs in mull and mov add sub addb sub out mov stos jmp mul push dec ficom jb pop (bad) pusha jne or mov sbb call aad (bad) repnz stc cmp xor aaa pop (bad) dec push sbb inc or in mov mov xchg (bad) lds mov cwtl mov add xchg lret sub xchg mov sub inc daa aad mov icebp xor sub fdivs adc pop (bad) xor and hlt outsl out sub daa jns cmpsl pop out xor sub shrb sub jae push sub rcll pop rcrb adc fimul sub gs add je stos sub pop lahf pop sub mov mov mov jmp out and jp popf jns dec xchg out and inc pop lods and ret jecxz out ss fidivr mov rcl dec cwtl xchg fcoms subb aas mov cltd wrmsr loopne mov mov arpl fcomps int3 and dec mov shr mov movsb imul divb (bad) decb imul ja push pop or fidivr in aam mov push xor dec call or dec ret (bad) jae push aam jecxz into outsb popf (bad) out pop push jnp sub in cmpsl cmp jmp sti jg and rorb push mov pop fstpl jp add sarl cs pop in scas lret sbb divb add ds shrl (bad) icebp jge jg sub pop movsb scas sti sub bound nop jmp movsl cwtl insl repz inc lret in enter rcrl and mov mov ret adc inc das adc bound ficoml adc imul push sub jle stos cwtl and pop push ficomp imul test ljmp add fdivs mov dec lret (bad) fst sub sub mov push test icebp stos sub idivl test and add ret pop adc sub ret pushf dec pop adc and repz mov pop and lcall sub test imul ret jbe dec loope sub cmp pushf xchg pop xchg lds and out xlat test sub enter or icebp jge jg jne cmp and movsb jle mov das pop call push cli sub clc mov cmp or xor cmp adc pop dec lret nop lret pushf sub dec fldt call mov jns popf cmpsl jge inc adc test inc inc add and cli mov jo cmpb add or mov push (bad) xor lret aad jmp mov mov call scas xor xchg jg in xor jns fs jmp ret testl pop jge mov fidivl xchg sub js sbb push dec outsl inc xchg sub daa aad cmp jae sub or mov mov sti xchg mov fsubl lret iret pop cmpl adc cmp pop repnz hlt cmp mov mov ljmp inc cld or cmp loop fidivrl stos scas pusha pusha and or xchg lock ret jg pop stc lret dec sahf test and leave inc sub jne (bad) dec and testb imul mov jb xor stos in pop cld les jmp mov or rcll pop sub sbb into xchg adc and sub lea xor pop sub fcomp outsl push in adc inc mov imull lds xor add loop pop lcall adc sub pop ss dec inc add add add sub jmp repz mov call push push adc xchg das mov mov push aam addr16 ss fistl sbb aad incb push dec cld and imul mull iret push sbb xor mov push pop pushf loopne into add xchg ljmp mov sarb leave je repnz adc ds test shr jno sbb and (bad) js adc sub pop cltd addps je scas stc cltd (bad) scas mov jecxz,pt xchg (bad) out roll lret dec cmp adc ja (bad) sbb (bad) and arpl push pop or stos lds mov loop jno inc mov mov mov sub call pop subl pop sbb mov jp jb ror lods pop or push ja add (bad) jmp stos jno or inc vrsqrtps dec xor push and and xchg (bad) pop pop mov mov out xor and fstl pusha cmpsl inc add and ret lret sub daa mov popa mov into or sub push mov lret xor lds std mov or jg orl add xor push dec icebp out lret lods sub xor notb add xor dec int mov cltd out (bad) roll rcrl inc negl popf push loope ret cmp push sub cld lds into ljmp jp and iret bound ret xchg push popf mov (bad) gs mov mov adc dec daa sub jo call stos xor push cmc dec in pop loope lods mov xchg add (bad) mov ret xorb js popf xchg push nop xchg xchg gs pop imul jb adc lret push push lcall cmp lret add call cmp sub (bad) stos (bad) and mov add test popa aaa xlat stos test stos mov pop outsl mov cld cmp loop (bad) xor xlat inc daa push lret push jl pop inc popf cld dec imul or mov dec into mov sbb and lcall stos dec in dec mov adc xlat jl xlat sbb cmp out xchg sbb xchg (bad) std (bad) mov stc loopne sub cmc and xchg mov push xchg push mov add pop pop sub out and mov xchg sub test dec mov push jns dec inc xchg lret jnp or negb ljmp fist mov cwtl xchg adc out pop mov negl xchg jecxz adc sbb call sub popf lahf xor stos push mov insl leave cs das adc faddl xorl pop into iret or insb outsb pop divb mov (bad) mov sahf adc cmp mov mov divl pusha jnp lods mov and or add adc (bad) out add or aas loopne add sub pop xchg test cs or out lcall nop pushf or mov jg sahf xor subb mov lret add jmp lret mov push push mov adc cld test jne psrld xchg pushf add jg xchg sub xchg sbb lods mov xchg cli push push test adc test icebp sub mov add inc xor pop add and sub pop dec mov in scas das and xor (bad) into pop add pop shlb inc push repz mov cli sub data16 daa mov movb into dec xchg add pop loop lds mov fnstcw ss or es aam cmpsb add pushf decb cmpsb adc scas jge ret dec inc cmp sets xchg ret push adc xor rorb gs dec adc mov es test aad lods (bad) sbb push jno inc cmp mov repnz call add cmc cli outsb in insl lods sub cmp mov sti test movsb mov sub mov (bad) repnz std mov or add lahf sub pop das divb sbb jmp repz loop aaa js pop sbb mov daa inc stos jne flds lods pop adc and jb adc xor mov jbe daa gs mov xchg push sub ljmp iret xchg fistl pop das out add iret inc sti and imul xorl fimull inc dec sub sub loope shr test jb test pop jne xchg xchg fsubl or xchg out stos sub and or or jne loopne out cmp lret jp xor aam imul or fst aam jo pop (bad) test mov (bad) mov enter shrl es movb sub sub or (bad) jp loop,pn pop push cmc sbb mov push repnz pop xor sbb mov pcmpgtd popf loopnew pop add mov xor (bad) cmp sbb mov movaps int adc push sbb xor and (bad) jno outsb inc xchg xchg movups dec test nop mov test adc mov add mov mov inc fwait jns pop xchg into (bad) mov and ja pop pop dec mov push adc cmpsb in das or pop add clc inc das add ret dec mov add daa xor cmc lcall loop gs jecxz ds or mov push xor add mov sti push lds mov out xchg jb dec idiv enter inc cmpsl and iret out cmp pop imulb (bad) int3 call lods cld mov jp lock xchg imul outsl fistpl pop notl adc das pop and imul xchg pop (bad) push or lods jmp xor mov cmp mov and stos call and mov in das dec mov adc mov xchg jnp je jmp in lea mov sub mov mov into jg and mov xlat mov push pop ss push add mov cmpsl xchg clc repnz sub pop lret mov jbe or mov inc (bad) xor aas mov and fwait (bad) pop and add (bad) or mov sub or push add mov inc mov dec lret out jne ljmp or in sub lahf rorl dec pop mov sub addl jbe faddl clc mov pop into mov fcmovbe scas cwtl jnp cltd in lods decl mov pop adc xchg add imul xchg adc lods (bad) and lods sub xchg dec shr rolb pop cmp popf xchg jnp sti repnz xchg xchg and (bad) loop pop clc (bad) mov int cmp inc jmp push imul out cmp cmp bound out pop pop aam adc aam scas mov sbb ficomp or sub jmp pop cld ret inc pop and sub gs or sarb sub mov ljmp push je jae cmpsb out lods ljmp or pusha (bad) popa fidivr jg xor sbb (bad) pop (bad) in aam pop xchg les lods and sti notb mov sbb dec pop or xor mov or push (bad) mov xor jmp ret mov sub dec push and sub jecxz daa into jg sub sti movsw out movsl cltd add aas adc or pop lahf (bad) (bad) mov shl fdivs mov mov imul ja and push stos xor push ljmp xchg das lahf shufps or ret enter or sbb mov xchg (bad) fs mov xchg and cld adc cli push sub xchg repnz arpl jge sub fcmovnb xor fcoms mov sub insb rcrb xor xor arpl push frstor das pop fist dec pop sub ljmp push dec sti xor add ss das stc jno xchg add xchg jmp fwait dec mov xor pop sarl mov or xor aad mov push movsl fnstcw sub fsubrl aam jbe add jle (bad) or lock adc repz and mov add cmp daa inc dec push xchg xchg fdivrp popf jbe out add xor jnp push xchg push push lods push push sub and ds add out das mov xor jne repz gs add in pushf out xchg lock out popf (bad) pop push insb outsl sub bound sti pop fcmovnb xchg inc repnz add mov add aam jns pop incb add std add nop scas bound push push cmp insb mov mov lahf icebp xlat push inc mov (bad) repz push sti gs gs push and dec xor xor insl pop outsl pop sti dec sbb outsl sarl data16 into push cltd push pop or jmp dec jge mov pop in out (bad) dec lret lcall mov and cmpl cwtl rorl lahf push test clc inc sbb cli movsl ja ret dec mov mul dec mov push adc das add push sti movsl xchg (bad) int3 ficoml adc (bad) iret xor dec mov or inc cs outsb sub sbb das mov imul mov jp movsl pop push fcompl aam (bad) ljmp imul and icebp or out inc and movsl mov cmp inc xchg notl jno clc (bad) fldenv inc sarb es arpl mov inc es inc cld mov xor repnz push xchg (bad) sub jns or jl in lods pop rcrl adc add out out jg dec jl adc sub out pop scas and leave jne adc sub xlat jmp mov inc adc cli icebp sahf mov fbstp inc xchg jge fdivr or mov dec cli cltd pop jae cmp adc jnp imul jge sub add dec das test sub pusha roll test push and cmp xor dec popa loop lcall jae mov add and scas repnz (bad) lret cmp sahf dec inc sub inc in push cmp jge rorb lcall cmp cmp jb ficom pop pop jb (bad) push je push pop popa in push mov or lret je or mov mov aaa je mov daa lret in fs inc pop pop mov xchg rclb outsb (bad) iret fabs jle rcl decb pop ds cmpsl cmp repz sbb xor ds dec and (bad) jmp fsin je scas out pop sub mov push out fdiv sub push dec rclb fiaddl stos test jo lahf cmp xchg imul lock mov cltd pop test dec cmp lcall mov inc inc mov lahf sarl inc cmp sub movsl call fdivr push insb cmpsb cmp fistpll mov ret lahf pop sub mov jno adc in andl cmp call out mov pushf mov pusha les outsb fdivrs popf hlt pop imul ljmp ss pop (bad) in push (bad) mov pop rorl in imul notl push test or out into (bad) sub inc or cmp decb (bad) dec xor (bad) frstor dec sbb or negl sub push xor xor in mov aas pop scas notl fs adc mov sti std jg fistpll xchg push int cmpsb mov out pop mov cltd aad int enter lods ret pop xor or add popf lcall pop pop mov mov subb add add (bad) sub mov sbb and fs mov push xchg popf clc push or sub push xor pop insb (bad) dec add ds sbb shl xchg notl or ja outsl daa jnp and lret lahf cltd sbb cmp dec gs lcall dec sbb jbe adc jle or and das push pop rcrl dec sti pushf cmp mov cmp mov jo jl sarl cmp cmp test cmp int3 rcrb add mov and xchg (bad) inc or jmp xor mov mov push fistpll adc popf (bad) aad pop push sub (bad) jl adc mov pop or push adc shr gs jne out cwtl adc das ds sub inc xchg cmp pop sbb scas adc leave mov mov mov mov out cwtl roll mov xchg xchg leave ss fisubr js mov sbb ja aad cli pop push insl pop pop mov leave movsl repz xchg sarb jo divl rcl mov (bad) mov mov cmp rclb push int push ret pop adc shl and inc ss dec ss cs jle push lock push stc out mov xchg pop outsl cmpsl pop push imul dec cli mov push aaa sub stos push in sub mov out add adc outsl mov pop (bad) mov adc or scas sub add pop sub (bad) dec cwtl inc cwtl push mov pop ret push mov and adc (bad) loope cmp dec pop adc (bad) (bad) and and bound adc inc addr16 push sub loope jmp cmp xchg inc popf xor pop out pop lahf loop xchg int3 jmp xchg pop xor ljmp sub xor add icebp add les inc sub sub jmp push mov and es popa push and or add je out adc fldenv and rorl and add out sbb cmp xchg rcll mov lods jae pusha sub dec fldcw mov shll repnz xor jp cld scas (bad) xchg add cmp loop shrb xchg cmp mov cld push aad (bad) movsl icebp es jne jg hlt push loopne add jns pushf rcrl mov add xor xor mov push iret dec (bad) cmc scas xchg or out sub and pop mov lret daa fiaddl sub pushf jns negb cmp sub cmpsl and dec je ficomp mov add xor fs add test notb call pop loope sub mov mov int cmpl adc mov dec ss or leave imul sbb xor and imul jecxz mov (bad) xor mov jbe test sub pop adc in gs mov inc dec pop das or fstpl xor sub dec jae adc loop enter xor std sbb pop cld cwtl jmp sub ds cmp pop std dec lea add add lret xor sub add fs and repnz and mov sbb loopne out cld pushf rcrl dec lock mov mov push cmpsl xlat bound ss into fs out dec inc sub sub ret bound cmp rcrb gs jg jbe or jbe fnstenv gs push mov lods and or pop repz into aam adc mov pop mov les add cmp cmp inc sub repnz or pop add and das imul rolb daa outsl pop cmp or lea mov out jp and mov (bad) aas mov xlat aam pop bound fidiv sbb inc pop dec fistp mov push sbb xchg mov jae ss add and pop mov fisttpl out and stos or inc push xor mov xchg scas cmp icebp cs out movsb dec push sub orb xchg inc call fldcw mov xchg lods pusha lret add inc xlat cmpsl push add (bad) adc loop vcvttss2si push std mov imul lea bound adc sbb jg add push addr16 xlat iret xchg adc leave xchg ljmp and pop adc int add push and cli dec jecxz pop sbb mov (bad) or or xchg push adc fistpll rcll and je pop (bad) or scas lea dec or mov pop call inc cmp sti pusha lea idivl sbb add xchg cmp jecxz loop xchg in sti leave cmp push sbb xor outsb stos pop or inc daa add dec rcrl mov in sbb mov out repz bound clc mov push add mov lret (bad) mov aad push mov cmpsl aas pop mov in repnz (bad) lds (bad) call cmpsb push adc mov and and cli mov or xchg scas or leave mov lret add mov mov fstl and ftst ficompl daa mov enter push jne stos xchg repnz and (bad) rorb or in xor shr aaa dec lret stos dec or mov sahf cmpsl jbe out clc push or cwtl xchg jmp mov loopne,pt cmp and and jb or in and popf lcall xchg in mov in cmpsb dec add mov lret push pop stc jnp xor jbe push or mov pop pop sbb add push hlt aaa jmp outsl clc loope test les iret mov jns or mov add fs out mov add leave mov mov or pop sbb lret stos popa xchg add ds mov stos cmpsb dec xchg and (bad) push add pop jbe cli push movsb shrd pop movsb (bad) mov cmp js in cmpsb call das test sub jne repnz pop mov dec fs les adc in push mov mov lock std dec mov pop push dec jle jnp aaa cmpsl sti in sub mov add nop pop popf insl sub andb jmp mov into mov nop jbe into xchg divl scas data16 fdivrl leave pop stc fmuls dec add or mov xor sbb imull int jg call jmp ret xchg mov adcl xor inc xchg add adcl xchg ret ljmp stos xchg lea incl and adc inc sbb adc cli dec push cmp pop adc and dec push pop cmp xchg sar mov mov mul push fcmovbe rclb dec mov lea out sbb das in sub imul lea and rcrl cmp xchg mov adc mov push mov scas rcrb xchg ret sti fldcw jp cmp ja cmpsb push pop hlt scas inc adc or pop test xor jmp jl (bad) cmc insb dec fwait popf adc inc dec loopne (bad) mov lea flds add clc xor or orl jl and dec mov and cmpsl or mov movsl jle bound pop movsb clc xchg sar push (bad) sti cmp out pop jbe lret (bad) das mov pop or enter mov pop xor fmull jg push jne lock dec ret loop (bad) mov daa ret push push cmc inc and sub es out bound sub shrb sub int3 dec dec out jmp (bad) (bad) cmp ja xor cmp ret outsl xchg mov clc ficoml sub iret inc and xlat out ret dec sbb imul pop clc inc (bad) xor xchg dec push add std hlt sahf movsl ljmp movl adc je mov into movsl stos mov xlat mov mov push mov lcall notl addb dec daa iret pop sbb pop sub icebp dec sub ret pop or sub sbbb out lret sub pop sti cmp movsl push jns imul fidiv jg mov (bad) xor aam dec pop or pop lahf aam out or lock mov mov inc mov aas sub and sar dec out nop mov pushf out sub inc dec arpl xchg popa sub pop mov fstl cmpsl ror dec sub dec push mov pop cld movsl rorb push cmp xchg xchg mov adc lret or jmp mov xchg les pushf push push add out sarl inc je jp cmp jmp lea push cwtl xorl xor cs xor jmp lods lds stc decl popa or xor (bad) push scas sarl dec (bad) sub mov mov and cltd popa adc (bad) (bad) or stc into xchg mov not mov sbb mov sbb jo jne sbb xor inc add add lcall xchg mov mov aaa cmpb lret dec clc out lahf adc jno das negl incl icebp mov and popf push sub add (bad) cmc (bad) jmp es cmp or daa mov pop sbb mov xchg pop xchg loope add pushl nop popl in lahf in adc cmpsl sbb sub jl push cmp orl add cmp jmp sbb xchg push fsubs iret sub repnz pop jecxz ljmp inc inc mov push and lcall pop out sub or aam enter add (bad) mov rorb push loop xchg test pop ljmp leave inc movsb pop lods mov adc mov clc mov rcrb add mov ret (bad) pop add push push adc xchg leave jg fs ja mov mov jmp jne pop mov push lret inc ret xor repnz fstpl ss movsl cmp sbb ja test out inc or or pop into pop xor or jns pop mov push push dec adc or int movsl inc mov std sbb and call loopne pop jo int3 decl out dec out sub insb jmp adc ret mov pop pushl stos loop xlat int icebp lret push pop je cmpsl imul push std clc lods and mov sub mov js leave inc or popa xlat ret pop jbe pop leave sub ds add pop outsb adc dec stos cwtl mov mov add sbb jbe xchg orb add inc cmp das inc (bad) js add loope in mov mov mov out or pop fldt xor ja out push lock mov mov and pop int3 fistp mov sub push and mov or sub push pop in dec popf jg insl pop jno xor imul cmp loop cmpsl aad (bad) mov and jle inc xor stos jp movsb inc sub adc cmp adc or mov fs das repnz push mov sub mov call das (bad) roll xor lret jle lret inc mov daa mov test les fdivrp adc cld xchg xchg mov adcl sbb mov adc add fildll (bad) mov push mov mov test or pop iret xor xorb repz xchg fidivr push and (bad) mov sti xor testb call xor adc leave hlt fstl jmp sub push test mov fist xchg pop inc inc inc xor jp add (bad) fistpl fist idivb (bad) mov dec mov push xor int add jecxz push cmp xor std shrb add xlat sbb xchg xchg fisubl xor xor mov mov sub inc push mov pop cmp or ret cwtl es pop mov jg mov xor pop cli andb mov push adc push jmp push push orl outsb fistp mov (bad) (bad) cmp aas mov cmp cmp orl mov lods pop nop xor jecxz jae adc xchg and push xor in jecxz jbe adc cmp pop push mov pop mull add sub out jb inc mov ds add shl not test xor in (bad) cmp mov inc push cmpb ja add pop push mov test ficompl rcrl bnd sti jle cwtl loope pushl add jmp fiaddl push mov and dec add neg inc lock pop add mov fldt xor mov mov jne movsb insb and push sub jp clc pop popf aam insl and es bound mov aaa jle pop pop repz js jmp fmulp mov or pop sbb icebp ja (bad) xor or lahf add fstl fmull enter lret push push out sti pop pusha aas add mov lods adc mull cltd pop (bad) push xor dec (bad) testl neg inc gs sub xchg xlat daa mov ja mov stos sbb pop icebp jmp rclb scas sub out pop jle push bound cmpl shr (bad) leave out xlat outsb (bad) jmp sti mov pop jne cli cmc pop scas movsl aad adc ret sub push xchg outsb jb movsl and clc mov enter jae (bad) ss aad lea cmp jae xchg fs push pusha out je xor mov sbb jge pop xchg fcoml sub jno test mov sbb and repnz cmp pop lods test roll icebp sub in lahf adc mov xchg adc xor cmp push jmp loopne inc jle nop (bad) jne outsl movsl cmp std push shll mov sbb xor lock mov jne movsb rcr fiaddl out lret sub stos fmull in add cs ljmp pop xlat roll addr16 xor xchg jg mov test mov fsubl stos jne pop pop and inc push sub mov adc jg in pop decl imul sub ja (bad) mov cmpsb notl and test shll sarb add ss jp jmp xor adc or adc pop lea adc adc (bad) cli xor scas rep sub sub icebp mov pop xchg cmp inc negl scas jae movsl div and insl and push lock pop adc jg es xlat repz adc popf fstl jmp shr mov pushf add and flds mov jge js jne mulb sarl jmp cltd dec stc mov pop add enter ljmp repnz stos loop xchg mov sub add dec mov adc call or leave sub push cld pop loope movsl mov mov nop pop lock or or idiv adc nop and cmp sub or mov mov mov sarl insl pop lds enter pop dec mov scas call shll bound sub lods leave test add sub les je mov mov stc stc outsl loope push pop pop cs dec and ficom mov mov dec adc lds mov sarb into push add sbb jle,pt jno jmp dec pop fnsave adc into adc clc insb icebp mov jnp sub push jns dec jbe sub pop mov mov ret mov in and mov mov inc sub aad push push sbbb fcomi jecxz fwait (bad) push mov xchg idivl loopne lret les aas inc push call pushf das mov hlt jno jmp mov rorl xchg add jno (bad) xor lcall adc adc pop aam pop pop test divl cmpsb sbb fildll pushf imul xor mov cmp mov sub inc lret iret lahf lcall pop inc mov fidivrl ret mov (bad) or (bad) and push mov mov sbb cmp xchg sbb pop out fs mov cld iret in sub push lret (bad) out push mov fs int3 daa andb ret jecxz popf mov aad nop hlt dec mov mov movsb add xchg add pop movb mov outsl pop repz mov das inc cmp ljmp cwtl shlb push nop xchg hlt adcl (bad) mov fsubrs mov pop sbb sbb ds repnz shrl xchg scas repnz (bad) lahf mov idivl mov jge add pop xchg pop jnp popa mov xor mov (bad) pushf pop inc outsb in pop in mov fisub cmp loope (bad) imul dec decl leave movsb repz inc xchg mov into cwtl add xlat cmp or popa add add mov jle or lea xor aad cs mov leave loope gs cmp (bad) ss rorl enter fcmovu cmp (bad) hlt dec sub sub outsb (bad) loopne pop fist sbbl sub jno sahf adc mov mov (bad) and fdivl pushf lret ret in mov ror mov sti xor sub mov iret dec mov lret rclb jnp sti ss pop sub loop ja movsl es (bad) pop repz xchg and cli jecxz adc and fidivrl repz push sbb cld or lcall xchg shr push test push cmpsl das push and inc stos test xchg mov repnz and loope mov or jg in cmp cmpsl push xlat iret xor das call mov sbb dec xchg (bad) inc xchg imul mov mov icebp sub popf repz dec mov adc leave add dec mov scas lock adc mov (bad) aaa aam push test scas cmpsb adc sbbb xor pop and push icebp popa pop fmul (bad) into pushf pusha mov in jge dec mov movsl jl pop pop push cmp fs mov cltd cwtl and sub pop mov daa idivl mov fiaddl adc (bad) cwtl sub push pop mov jb sub sub mov fnstenv testb or (bad) repz rcl test lret fucomi daa push (bad) push sbb icebp lcall mov aad (bad) and sbb ret jge sbb push fs icebp sarb addr16 and das scas xor jmp dec ja mov outsl inc sbb out inc xchg pop imul and add ficoml mov out fldl lcall mov stos orl inc pop sti inc mov jg inc stos cmc adc and dec mov popa out jb (bad) ficompl or xor fstpt ja mov sub clc lods dec out add mov lret call xor inc movsb sti fcoml adc mov jns dec aam gs mov push shr test and scas mov sub fcompl stc test add sub popa pop cmp mov push sub imul push in in adc jno dec sub or out pop jno dec pop or xchg mov lret mov mov pop lret iret push mov hlt gs push add lods stos jae cmp and aam jno push ret nop dec mov mov mov fwait out icebp not push mov iret push mov mov jmp leave sarl jle mov lock dec dec pop out pop pop and cmp daa xlat pushf out mov fsts inc xor mov jo xchg in and test movsl clc cmp cltd inc xor push push aad push jb (bad) sarb or mov and jge cmp das push cmpsl xchg mov icebp shll pop sti les push sub mov (bad) icebp sub jnp imul mov or pop (bad) push cmpsl fwait cwtl sub fsubrl mov add pop flds mov mov push cltd mov mov into xlat adc mov mov or add decl mov dec out das xor dec adc xchg or jnp daa pop push mov stc adc (bad) sub pop push jmp repnz fdivrl clc dec loop shr mov sarb pop push jp iret push add sub (bad) out out cltd mov pop mov cli xchg js inc iret or sbb mov jne in push pop push adc out sub sub xlat pop ja add push fsts ljmp ficom leave mov add xor mov add fsubrs jecxz (bad) mov adc xlat and cmp mov (bad) adc shll adc push xlat xor test mov aad sub or repz xchg clc jg mov ja jae dec (bad) mov (bad) push icebp fbstp fsubl flds push cmp mov add pop in mov out imul movsb les out ror into aaa inc (bad) dec roll das mov repz imul sub jbe sub movsb sub add aaa cmp aad jge lcall fadds enter cmpb sbb inc dec scas or xor leave xor divl outsb adc into (bad) sti sub ret out jne mov add aaa xchg popa inc xor add mov and fisubrl sbb test outsl push scas cmp fistp sub sub push or xchg fistp pop mov je daa ja das aas scas ret mov pop stc or fldl2t ret pop push jp xchg addr16 dec push inc out xlat cltd mov clc push inc pop xor or and mov cltd sbb xor fs sbb fmull je cs fistpl pop fnstsw and dec jmp inc xchg lods push rorl out and loope sub adc push ret jno and int3 je lret push (bad) jo mov cltd xchg fsubrs stc sub lcall and inc das sub and aam inc and jno mov xor mov sub and (bad) and xor std insb mov dec xlat xchg into xchg int3 sti or jne or jno inc mov or xchg mov data16 xchg cld gs cmpsl and jmp jbe jmp and xchg ret inc push jmp adc pop mov iret jne movsl inc outsb and xchg aam imul sbb (bad) mov and push sbb ret into cmpsl sub repnz or xor idivb (bad) add and out (bad) hlt idiv mov xchg scas xchg fldl orb (bad) dec mov mov xor int test sub pop and jmp mov dec mov sub ljmp add xor std ljmp mov inc adc pop out sub sub out adc xor insb push ljmp (bad) fimull repnz xchg push dec push add popf pop sbb mov pop mov sti ficom in adc fwait lahf dec mov int3 jb stos fyl2xp1 push lods mov pop sub scas xor pop roll push inc sub xchg adc xor movsl sar cmp fisttpl xor sub in sub loop test push ljmp lcall add xor adc repz adc mov inc aas xchg xchg mov ja testb pop xchg data16 out mov leave and xchg or add les xchg add dec data16 bound popa jnp ds js mov imul lock out add loope mov or in scas repz and xlat cmp lahf (bad) add add popf dec lock xchg pop xor rcl pop leave jne leave in mov or out sub mov sub or shrb test in pop cmp push push ret popf std shll lahf jmp fsub sub test fist sbb xchg and pop call gs sahf jo or ljmp aas mov inc mov jle in ret lret clc xchg fwait inc push (bad) pushl mov out ret push aam jp frstor cli mov push xor leave (bad) cmp mulb jbe or pop in xchg idiv popf push aad jb rcr aad mov sub cli les or mov pop mov jmp repz xor pop xor xchg push jp (bad) sti jb jl push add mov mov test or or data16 out mov mov cmp out dec fxam aaa stos es fdivr jmp iret mov das (bad) sti cmp xor add mov pop xor mov adc xlat (bad) cmc mov fist (bad) imul (bad) std add stos adc pop scas sub cmp mov (bad) ds (bad) mov pop jo and iret inc add cbtw sub icebp in pop lret mov rcll in lret mov pop jmp and std into loope fisubl inc xchg inc fisubl sub andl sub (bad) jmp ja fisttpl adc (bad) addr16 in cld mov dec negb outsb cltd data16 outsl les adc or pop xor mov jl sub cmc add stc mov insb nop dec mov lret jmp cmc dec ret stos sub sbb ficomp xchg push cwtl imul add mov xor cmp inc stos das pop idiv mov movsb xor cmpsb push lods jae lock imul push mov not jg xlat xor and push xor dec mov xor mov mov (bad) sub (bad) or adc fisttpll xchg adc sub or sub inc out push lods imul pop lret out mov sub movsl lock xorb lahf dec mov xlat cmpsb test sbb stos insl cmpsl dec sbb fucomp imul iret sub dec add mov and movsb jl cmp ljmp dec imull addb icebp pushl gs (bad) sbb ret jns cmpsb repnz gs or inc shll aad addr16 add (bad) jl dec cld sub int3 sub xchg fdivl outsb mov aaa lahf push in imul lcall pop (bad) cwtl cmp inc sub cmc sub pushf jno jecxz dec xor (bad) push xor jle in add xor sub push add movsb push jb jae mov ja lahf pop movsb pop dec dec scas jno and jp repz test mov rorl insb push inc pop pusha sbb or adc xor dec dec ds xor in jbe adc mov xchg mov das les pop jne add loope sbb add lret fisubrl lret and sub pop or mov mov ds pusha xchg sbb add call sar jmp mov mov ds mov (bad) and sub push xchg inc or ja xchg mov div inc (bad) daa fidivr sub aas out pop cmp cmp xchg or icebp jge push pushl dec sub mov ljmp sub push jno insl cmp cmp int (bad) push ret adc and pop mov mov or xlat mov pop movsl sub in or call or jl (bad) pusha push ret cs dec mov ret pop clc xor or stos testl into test mov test rol cli mov or add pop dec ljmp cmpsl push into hlt xchg pushf mov and fucomi cmp jo popf add xor into (bad) enter pop or daa idivb fimul rolb jg fs cmp sub popa shl sbb jbe pop xchg divb pop mov mov popf ret and sti push das pop iret les icebp movsb scas loopne xorb (bad) jne movsb pop inc and out sub and stos mov or (bad) loopne ret test repnz das out mov mov pushf inc rorb adc or dec and mov sub sub hlt jns (bad) push push roll ja xor adc jmp mov out cltd fwait addr16 or sub sub outsl or add inc adc push call inc imul push sub pop mov or or mov ret jae adc mov (bad) cltd inc mov xchg loope fs lods shlb cmp sbb (bad) mov push repnz fwait cmp sbb call pop outsb dec stc (bad) leave mov add test or add sti (bad) cmc leave or in and pop popf leave aad mov inc and test pusha insb jmp repnz jae or inc dec cwtl lahf add sbb sbb pop add jge and stc or push or dec movsl cmc and xchg std pop xchg inc xchg icebp (bad) ds push push sub xchg sub repnz add test pop (bad) mov pop (bad) lods in add mov sub xchg or push sbb sub dec pop adc xchg cmp (bad) or mov ret jecxz push mov xor add jnp sub ret test or aad imul cmc repnz lcall fild dec hlt pop adcb cld cmpsl mov fcompl imul je comiss (bad) cltd imull cmp cmpsb test jbe std pusha sub aam push lock push fisub xor mov (bad) nop xchg mov or add repnz mov popa xchg xchg dec (bad) cltd leave insb adc jmp mov mov daa cld scas jb sub sbbl mov and popf push xchg repnz (bad) sub sarl or jne push test mov cmp sti das fmuls subb (bad) loope popa ficoml (bad) jne (bad) mov daa ds push (bad) cmp xchg dec insl rorb cwtl mov pop lret mov sub enter xor cmp push out mov or and and pop xor xor das mov pop mov ja push popf mov jno pusha add xor xchg inc push fildll aam jbe,pn mov es cmp jbe dec test stos lret out jecxz add cmp pop xchg sub out ja mov sub pop and xchg aad popa jge out inc ljmp xchg mov pop pop mov loopne jno js xchg cli mov sbb sub add sbb adc (bad) mov push jns mov push sub repz jp add into jns mov mov test loopne (bad) jmp cltd fwait jmp xor jg stos xchg fs sub sub mov sub push sub sub test mov cmp (bad) pusha jmp cmp jns dec repz sub push mov or jns mov lret movsl out mov cmp push dec jmp jne add stos jne scas fmull cmp or nop subl outsb add out sbb leave (bad) pop mov and stc mov (bad) movsb addr16 push out xchg js (bad) lret mov (bad) jns insb sub dec or mov jmp leave out sbb pop aaa jmp movsl jge push mov jmp int3 fs cmpsb addr16 ljmp push or loopne lcall cmp mov daa push leave dec pushf push iret aas pusha scas xlat jmp repnz mov dec ret pop fsub jae out gs movsb loopne or aam imul (bad) pop jmp mov pop mov push pop (bad) push push mov mov bound jne outsb popf sbb fabs cmpsl (bad) cmp call cmp sarb adc dec sar int outsb sub pop inc sub cmp daa jge mov or dec mov (bad) cmpsl cmp lahf dec leave lods cmp insb cmp sub roll mov into cmpsl mov lahf sbb mov xchg mov popf and add add leave and xchg or neg adc ljmp mov xor push push (bad) lret addl pop out inc push sub call cmp lret sti cld sbb cmp (bad) cs ljmp incl (bad) xor lods push loope mov jge addr16 leave sbb dec add (bad) cli into push (bad) dec pop jecxz mov jo clc loope jg inc rol test imul xchg jmp mulb (bad) (bad) jb mov inc jmp inc (bad) repnz add movsb lods xchg and xor (bad) (bad) mov sub push gs mov push inc jl ret mov into inc sub iret sarl int3 mov fadd mov or xchg insb sbb jge hlt les xchg lods and mov mov mov adc xor das cltd xchg cmp test fwait pop xchg idivl pop dec jns jp pop xchg stos icebp add sti or sahf xchg inc cli jge pop jb cmpsb das sub fldcw inc cmp add mov pop mov mov lock adc add es xor push dec fistp mov dec fsubl je leave pop out xor or lods fistpll xchg xor push or xchg loop repnz ljmp ret data16 or pop or and adc ljmp shll cmp lds adc iret mov or clc outsl or (bad) addr16 gs or (bad) notl sub repnz clc (bad) sub nop pop iret pop mov (bad) pop rolb sub sub cmp mov xchg add mov pop xchg call fbld imull imulb shll mov loopne sub jb movsl push mov adc pop sub rcr xchg or sub test inc dec ljmp lret add int3 xchg sbb mov aas pop mov push mov je mov test mov cmpsl mov jl dec stos arpl mov stos loop ficompl pop pop inc mov repnz movsl testl negl dec (bad) testb adc or (bad) shlb or mov test cmpsb scas out add or inc mov pop movsb (bad) pop mov bound out or dec fwait jns imul movl and sbb jmp stos cltd scas aas lods dec mov std xchg lds sub scas fs stos xor sub arpl or lret leave (bad) inc mov dec pop dec lret scas leave outsl mov pop out xchg ss rorb or jnp lods aam pusha jmp pop movsb pop or or xlat mov (bad) mov mov add sbb bnd clc jge shr cmp pop xlat cmpsb adc fimul xchg or push jmp rcrl pop mov mov roll mov and mov and inc push jecxz add out daa icebp (bad) pop imul loope divb cmpsl dec movsb dec ret push push xor adc dec sti sti dec data16 xor call xchg pop xchg sub repz add push test pop (bad) sub cmp pop aaa cmpsb mov inc push pop dec jne (bad) fdiv icebp dec pop lret lods or add cmp lret mov dec aas mov sub data16 aaa cmp or (bad) nop mov or xor jnp and xor aad dec xchg fisttp jecxz out and cs sub sahf adc mov cmc fisubrl test stos jae xor mov stos je xchg into mov mov pop and imul scas cmp mov call sbb sub add aad ja dec hlt cmp mov loopne aad es lods add and dec pushl xor dec mov in cld sahf pusha rcrb cmpsb jo push push mov pop mov sub negl adc dec insl lock push jl in adcl (bad) sub sti pop jge inc adc shrb aam dec (bad) jp dec adc pop stos mov add aad push mov pop ljmp testb arpl fisubrl and dec sub add mov negl sbb aam (bad) cmp cld ja and add pop sbb in fsubr cmp push push dec (bad) incl and mov add fldl push in cmc or pop test ss or add das jmp xchg notl dec mov out movsbl out add int and cwtl sahf outsl mov or or pop pop mov loope sbb push inc adc mov es push or adc mov dec pop mov aas push out jns xchg push lret aaa pop push xor sbb pop add int3 push dec sub imulb neg addr16 pop xchg adc jmp scas stc or xchg jmp xor adc pusha (bad) fisttpl pop test mov or mov cltd sub push pop jmp popf or pop push lock dec enter mov jmp jbe dec jno ljmp int aas std pop pop xor int das stos push push loope push outsb scas in mov shrb insb mov out mov leave or xchg sub call sub test and cltd cmp cld test sub xlat mov jne pop sub xor imul pop xor sbb call pushf cs and std cmp shr mov cmp xor cli cltd andl mov dec out sub int3 dec lods xchg sub cli daa xor cmp (bad) jge mov sbb mov mov notl pop loope add ds cs scas fsubrl inc or jbe pop out daa pusha enter sahf lods xchg or aas adc (bad) jb out xlat jno movsb pop movsl in cmp xor into or add adc pop jmp test stos or lret fldcw (bad) mov mov push cmp adc (bad) jb adc pushl push sahf mov pop call (bad) out inc or cli aaa sub jns xchg repz jne repz ds and push inc sub pop (bad) sbb mov lret jbe pop ja cmp cld into inc mov inc jmp call movsl and jbe (bad) sub sub roll mov jnp cmp fcmovnbe es adc dec mov cmp pop pop leave scas xor adc (bad) loop (bad) xor mov out push and push daa add pop add mov fsts jg sbb fiadd inc lcall icebp cld rcrb and xchg jmp and jno mov std das call add cs dec es (bad) adc addr16 fstl test in xchg (bad) jg sub adc ret jnp push pop in pop sahf call push push lock fstl xchg push and sub pop mov loope es jmp mov nop negb mov pop inc andb mov fnsave out xchg xor or add sub adc pop scas xor stos pop mov test mov shrl jne or dec mov add pop mov mov out pop and je xchg in xchg sub subl adc ljmp pop add cmp and inc (bad) ret mov movsb jge mov decl mov add jmp call ficom scas lahf jp add sub and aaa ds imul mov dec rcrl seto cmpsl bound fild pop and inc jns icebp xor xor scas cmp cmp mov pop mov pop sbb mov inc shr pushf and or test mov pop cltd outsl inc and push pushf pop mov inc xchg adc test stos int3 js fdivrl idiv mov (bad) pop aas mov sub sub xchg mov push mov xor mov gs imull fildll pop fdivl imull mov iret fsubr iret push push push jnp mov dec sbb jge cs mov ja push icebp and or into add pop sti stc (bad) shll xlat and xor or xor scas in jmp jle (bad) lds add sub mov bound mov mov dec icebp mov std inc ja mull lds push jl mov xor in sub jne mov xchg fldl xor push popf mov hlt mov mov xchg negb cmp push out cli sub sub mov push testb outsb xlat jge imul ljmp inc jge dec dec imul into lock mov movlps (bad) mov out jle dec xlat pop lds negl adc inc or aam push fucomip xor lret rol sub and into ffree cmpsl or pop imull pop lea mulb repz push xchg lea lods dec inc sub out popf int3 and inc cmp lret xor mov enter pusha mulb adc pop lods call push xchg xchg popf (bad) loope xorb lret movsl lcall inc dec lock pop mov stc dec test fsts test xor sbb xor push jge jo,pn cs sub pop ficomp ja ljmp les (bad) test or xlat (bad) shl repnz mov lcall xorl xor xchg jge dec sbb xchg and sub lds or sub xor dec cmp cmpsl or lret hlt cmp inc cmpsl daa pop mov int3 lock lcall stos sub cmp sahf mov dec inc (bad) mov jo mov jo dec pop add xchg lret mov xchg or repz leave (bad) cmp mov dec mov hlt jmp pop xor jge add cli push push dec outsl mov dec ljmp aaa inc out divb cltd adc nop decb stos adc xor mov enter js mov xchg jmp sti (bad) adc sbb out in cmp jne test mov clc dec movl out clc mov stos xchg sbb xchg ret leave push ficoml mov sub sbb mull pusha iret add (bad) push bound push sbb cmp (bad) and (bad) clc out (bad) fcomp jbe and dec xor mov push adc cmpsb stos mov loopne cld mov or lahf push jecxz dec push dec les gs test test mov mull es ss (bad) lds repnz shl movsl repz fisubl (bad) push and mov push add mov push jnp daa push xchg (bad) adc mov inc jno enter sarl movsl loope icebp jnp jo add jl mov pop jmp mov or outsb mov xlat movsb imul sub imul testl js jl pop ret ljmp add (bad) or iret xor pop pop xchg leave jmp mov jne adc xchg repz and fidiv ret adcb (bad) dec subb nop jp movsl cmpsl mov sub loop or idivl out mov dec and mov lret xchg xchg andl xchg rorl mov inc shrl mov iret sbb sbb cmp movsb (bad) cli sub fmuls cli lret mov pop pop addb and or sbb inc push xor jge push cli cmp cld lret mov mov mov cmp testl mov cld push lds (bad) mov movsb mov lahf dec fldl jg sti push fiadd add add pop or int sub cmp or pop and stos movsl mov pop push and sti loope xor mov out pop push mov repnz rorl in cli dec (bad) mov xchg mov mov inc (bad) cmpsb jno mov dec int3 cmp dec arpl sbb lahf cli mov and push dec (bad) sbb psrlw lea push mov jmp sub div push xchg or sub frstor fistpll sub fist push testl ret jne stos push xor out sahf mov test hlt (bad) mov inc shlb mov pop cmp imul shr fimull movsl stos mov sarb inc add mov cmp mov or (bad) je dec popa adc mov pop and sub pop and inc iret lret jecxz inc pop or shr sbb sub pop mov xor movsb je sub out es (bad) jno jge inc cmp repnz xor out test scas test dec pop jle jno out xor popa pop sub dec push cmp fmuls ret std lds inc imul lcall insl scas push jbe das fidivr jmp mov dec adc (bad) sbb push sbb (bad) xor in dec pop or divl aam mov (bad) sbb push dec mov pop fxch cs orl mov xchg jo roll sbb lret jno popf cld aam call pop xlat lods pushf mov cmp pop (bad) xor mov repnz fldcw je ret sub cmp jne aam jmp shrb or ljmp fwait jl ret loopne push cmp mov inc or stc (bad) xchg outsl sbb loop pop icebp mov pop cmp movsb aad mov in xchg and push add xchg cwtl jecxz (bad) mov xchg push repz jno fldt pop aas xor mov cmp lds fbld mov rorl incb mov mov cmp or push js ficom push call cmp aas mov leave mov or adc ljmp jo xor xchg push adc mov inc add mov sahf dec in xchg add inc xchg call adc es sarl icebp xlat insb outsb xlat sbb or imul jle jbe dec inc xor ret std imul rcrl sub out pop xchg (bad) jmp or sub (bad) pop je lret in inc add ja jge push mov adc pop adc xchg das bnd (bad) or mov mov mov fnstsw int movsl push push pop push loope jle popa out or js lds stc mov ficoml xchg sub aas or leave pop icebp or out dec test repz xor push aam dec out push pop adc popf cwtl imul pop scas fs sarl mov adc and sub ret push loope xor or mov or popf push add out pop fisub ret lea xorb push int3 aad in js cmp mov sub std int3 pop dec out sti sub lret roll sub sti jmp push (bad) and stos lahf xor adc or add loop std mov mov mov and mov jecxz add xchg lcall or movsb gs cli cmpsl xchg dec xchg push mov test into imulb mov or daa cld or orb fistpll jp xchg in and mov mov dec push test jb not (bad) inc mov popf mov stc adcl stos lret push fwait mov pop adc stc xchg repnz mov jle vpaddusb sbb adc aas jmp mov sbb dec insl xor xor sub cmpsb xor add add jg movsl inc pop negl mov inc gs test out xchg inc jae inc sub pop fist xchg std mov pop push mov notl xlat push ret sub repnz pop out jmp and mov mov dec scas (bad) iret mov das or pop in mov push lds (bad) mov das add in cmp jg into or jecxz jnp inc pusha mov jbe scas pop push jg ret inc inc ja stos lahf repz adc mov les fcomps je leave xlat stc xor je movsl jge push mov data16 pop les fsubs mov lods inc fdivr mov mov xor ja and xlat int3 adc jle push cli xchg or shr pop lret mov pop sti add ljmp inc dec test cmp xor lret mov aad and daa mov or idivb pop pop or add mov pop dec fidivl shrl sub sbb mov jmp ljmp cmp xor mov les into xor sub pop pop mov adc lret js mov xchg sub adc xchg mov cli push scas push iret mov add and sub pop aad lock pop xchg xchg in in in xchg ljmp iret xor dec clc push mov js fbstp pop push aam rol insl and dec leave enter fadds dec loope xor mov push mov loope rcll add and mov xor icebp loope lret stc lret movsb test clc mov pop adc add daa cmp (bad) mov pop lock mov sbb jbe xchg fcoml mov cmp out or push dec mov jmp cmpb dec dec ret jg inc inc xor add negl sahf out pop into repz ss arpl adc push jo sub jae push pusha xchg and pop jb (bad) pop cmp ljmp flds mov arpl add out pop mov add (bad) xor out out popf sbb bound cmp push out in popf inc jne jl push and (bad) lock sar inc arpl iret and sub data16 mov mov imul sbb mulb ret aas pop or stos and sbb das mov sbb lcall push dec jne mov fldcw jmp fsubrs sbb (bad) xor mov xlat jbe popa and cmpsl lods fimul dec clc sbb and adc fcompl fimull mov (bad) loop lds dec imul out mov mov mov (bad) jle jecxz (bad) xor add mov fisubr (bad) popf mov mov mov xchg nop jae ficompl ffreep (bad) dec push jecxz (bad) repz xchg je or xor sub cvtpi2ps or add cwtl notl shrl and mov sub add test sub sub mov ljmp cld push insl pusha call push mov xlat pop and jb lahf pop push nop in push mov adc sbb int (bad) mov and adcl das cmp and movsl push pop enter sti dec movsl ja sub (bad) mov (bad) sub pop jns xor fsts movsl pop dec shll mov sub cwtl or stos cs pushl cmp daa into sub clc (bad) push sub push stc sub push (bad) nop jmp mov add jns mov into movsb cmp inc xchg cmp ljmp cli lret test jae neg (bad) call jmp push cmp icebp mov or jae push int3 (bad) mov jl push iret push inc sarl mov ret add (bad) dec adc int jp dec and test je fisub fldt leave pusha jno daa idivl mov xor sub fistp sub cmp popf fdivs jno fstl std or ret int3 cmc pushf sub jno test or or mov out dec mov mov out push pushf pop dec icebp repnz (bad) out lods fidivl pop imul mov pop js adc cmp iret mov sub add xchg push fimull or adc add lods frndint push and leave ja ds pop cwtl (bad) sub cs mov push add cmp imul pop sub loope and push mov jbe sbb stos jmp or bound lret add lret ret lds and aam ljmp push dec in ljmp add push and movsb aad mov je loope lcall push cmp fs lods cs add mov or mov sub sub (bad) js sub addl sub ret mov test jb adc fcoms dec addr16 ds scas popa mov or push jo loope popa jg idiv xchg rcll jmp pop add test fildll stos ret cmp aaa push xor cmp std (bad) cs ret test out mov les rorl jecxz clc and mov (bad) mov jle lock inc and xor cltd jno xchg imul inc inc mov sub es pop jecxz cmp jo jmp fnstcw sbb (bad) mov inc add jbe mov add xchg test mov movsl in jmp adc pop and sub into sub jge mov mov sti push or push xor xor sub out outsb ret (bad) sbb shr add and xor call mov xlat out loope xor pop in push adc xchg ss mov jmp into cs add xor (bad) jae add mov icebp pop lock dec jle out mov lods adc xor dec sub pop fstl movsb clc in repnz inc pop xor dec aaa sbb dec add fs mov int cmp mov mov fnop outsl lahf adc dec lret xchg in xchg xchg jmp xor scas (bad) jo pop movsb push std push call mov into loop (bad) mov stos (bad) stos cmpsl int xor cmpsl movsl jp (bad) and mov ffreep jg inc add test push mov vunpcklps cmp inc xor jo js arpl jmp aas out sub sub int3 cmc ret or inc cltd pop pop xor in push and loope sbb aad lock cmc (bad) jns enter fimull mov lret lea adc mov jmp xchg sub inc push pop mov mov mov push dec lahf insl aam shlb leave add popf lcall lahf (bad) push push jnp xchg (bad) or sbb decl push (bad) aas pop aam aad fisttp sub push stos movb add cmpb sarl push decl pushf sbb mov mov mov in fdivl mov mov xor cli mov inc xchg loop (bad) cli mov sub or les lods shrw xchg daa push add sarb add xchg push and mov xchg in lods hlt xchg mov ljmp loop mov js test mov xor iret bound rol adc jp sbb and pop pop mov js iret add pop mov (bad) mov ret inc out jmp rcrl insl and inc jmp fwait aas pop mov and pushf push rorl shrb hlt adc lahf into (bad) js hlt out es pushl popf jbe lods pop xor xlat repz pop push (bad) sub arpl xor xor scas mull add lret shll aaa or push fiaddl and std cwtl sbb sub fstl lods movsl pop sbb lock or pop mov out mov cmp mov add or inc pop repnz sbb (bad) shl sti ljmp cli das lea sub inc cmp cmp cltd ret das or out stc daa push push push xchg fildl and sti je aad (bad) mov mov lods mov sbb divl std mov (bad) mov xor movsb or pop stos fimull (bad) lcall jl mov push push scas xor mov mov cld gs fidiv xor out loope pop xor jmp je push add pop mov jnp loop cmp cmpsl outsb adc push add mov or jb lret cmp hlt and push xchg adc stos jno add jnp hlt add cmp shlb iret push stc dec dec jno mov mov xor fisubr rcl fs popf sub mov add add jle mov mov or and (bad) fisttpll lret loope mov loop or ja rclb xchg push mov xchg jne fist icebp outsb das popf adc out aas (bad) sub push scas xchg sar push popa out outsb mov jno jmp mov cs mov ficomp decl mov scas iret dec nop adc je outsl stos push loope xchg lods (bad) lret add adc daa (bad) adc xor xor test test rcrw inc std jbe dec mov push mov mov cmpl mulb inc (bad) aam ret (bad) mov hlt sbb lret out adc test xor dec stos pop faddl xor mov cmc icebp bound sbb jl insl push jge dec mov mov in or push in and mov lods imul inc dec jge out xor add mov fwait add and jmp or fsubp add adc push xor (bad) and mov fdivl into sub mov push cli repz xchg push nop stc cs movsb pop xchg mov rcrl mov repnz dec xor add imul fadds les and dec decb sbb cld (bad) adc mov leave bnd arpl lods mul negb bound popf inc mov fcmovu add data16 gs xor dec sarb or aaa imul mov enter fisttpl cmpsl (bad) jecxz bound fldcw mov jp (bad) mov jmp xor dec hlt dec (bad) std bound dec mov adc (bad) sub or pop adc or fwait cld cmp ret jb and mov fdivrp mov push nop loopne dec in lods in (bad) popa adc pop add lret jne in push lds clc pop add cs (bad) dec jo sub fstpt sub push mov sub ficomp imul sub (bad) push gs scas cmp mov dec icebp or xlat inc ss or test in adc mov (bad) outsb cld jne xor cmp mov and fsubrs pop icebp rorl dec pop xchg (bad) (bad) dec mov pop cs faddp fistl mov push (bad) out out sub daa mov ljmp (bad) mov lds or clc jg mov lret lahf inc out mov pop ret gs lahf sub and cmp xchg mov hlt (bad) call dec mov mov sub imul or je cs ljmp popa xor in sub fiadd arpl adc je shlb cmp pop adc add mov xchg notl gs push stc stos add outsl int cmp dec dec cltd cmp jle inc call mov sub test hlt je ret dec mov and sarb pop sub mov pop popa bound repnz lds mov cmp jno pop mov mov out pushf sbb or fcomip add push nop cmpsb fbld (bad) cld jne test and popf insl push cmpsl jge inc sub or imul or lods shr mov ljmp add idiv cmpsl xor call adc out adc push sub ret lcallw test maskmovq testl jno sahf fistl shrl mov (bad) xchg in lods adc push jae imul mov add into out mov das sub xchg js ror popa or add mov in popf add mov hlt mov and xor mov jp out inc ja pop out hlt or mov jns imul inc sub and cs sub in cmc jmp pop enter lds xchg mov (bad) mov cmpsb pop nop loopne sar push sti xor stc mov adc mov cs in js or mov dec pop mov fcomps fidiv mov ficompl pop (bad) (bad) ss fucomi loopne jecxz lahf push inc mov jbe ret jbe out mov lret add adc inc pop or cmpsb loopne out les cwtl mov mov push or xchg adc mov out popf aam pop stos inc gs jno dec push mov gs repnz mov mov movl lock daa push pop dec inc xchg insb ret and add cli sub mov mov and repnz and sbb and jne cmp stc push nop lret imul jmp xlat ret bound repz jnp push mov jmp test and (bad) int3 js pop repnz inc inc das jne popf push stc test push xor out pop pop inc iret jb (bad) sti out adc into mov dec in and int3 cmp pop sbb in das into pop xchg xchg and (bad) xchg incb out mov icebp inc scas or or ljmp jno ret scas or sbb cmp stos add stos and shll xor mov ret aam (bad) add inc sub pop repnz xor jg bound repz adc (bad) testb adc mov sar lcall lds call or adc popa adc sub or pop dec (bad) fidivr push out imul inc or or jne xor add sbb cli negb xchg cmp and lahf add mov enter rorb or divl shld mov ret xchg icebp mov stc cmp push fwait jo push cmpsl fdivp outsb inc or mov jne es ss int3 fsub dec inc int3 pop loop gs into mov fsubrs jne push fist push scas cltd mov fcmovb js pop jp or call mov or test ljmp cmp sub xchg and and faddl add adc push ret mov (bad) shr fcomip mov cwtl add lods pop mov (bad) bound adc xor stc std or in push (bad) repnz idivl (bad) sub iret jmp pop les clc xchg sub (bad) fs xchg notb sbb fucom xchg pop cmp rcll xchg mov or cltd stc add pop sahf sbb fs push data16 out mov add xor inc mov jmp mov push xor data16 pop sbb es cmp and dec cmp dec stos fnstcw mov and dec mov shrb pop (bad) mov ror sub add in cmpsb das ret cwtl xor inc sub divb push ds mov mov fisubrl sti loop jmp fadd push push addr16 dec sti aad cmpsl and icebp xchg adc rorl fwait stc scas sub stos dec decl repz mov test xchg mov sti dec cmp add repz dec test das ret imul cmpsb (bad) daa icebp stc in pop test shll mov xchg ret cwtl iret orb mov sbb mov loope addr16 adc sub add pop mov stos fsubrs mov xlat dec imul gs xlat ljmp lcall (bad) je cmp mov pop das ret push dec or jmp jl aam into and xchg call stc mov or daa pop idivb shrl jmp aam push dec fmuls cltd mov adc mov push mov xlat dec (bad) xchg inc out xchg lock in mov sub (bad) rep or or hlt mov dec xor jmp mov testb sbb popf xchg inc sub pop add cli test lret ss and ljmp dec jmp sbb jmp sbb mov cmc das mov or outsl loop mov int3 dec negl in loopne xor pop mov push (bad) inc (bad) mul lret daa xchg add add (bad) ss test cli mov mov out lahf mov aas xor mov xchg out and pop cli (bad) mov out negl fidivrl sti lods mov or sbb mov add push dec mov push xchg shl inc xchg jp (bad) lret das out rorl aam and mov push mov bound inc push fisttpll mov mov cs ds jb mov sbb jae and xor in jne (bad) xlat cmp repnz dec cld inc out fxch push mov cld fist out std (bad) stos adc mov rcl sub sub jbe push int3 and mov xchg inc xchg mov lds and sub jmp sbb dec iret xchg lret (bad) mov mov (bad) push push ret jne sub jno sub push dec inc and sub (bad) imul enter inc pop popl dec sub fmul jno stos sbb xor lds add mov sub mov pop stos inc out add mov xor push xchg push dec xchg aaa arpl mov mov rorb jecxz mov clc popa pop cli xor out or inc push outsb push inc sbb xor xor inc arpl mov decb pop (bad) repz fsubr cltd aas push rcrl cmpsl stos and (bad) dec jg and dec pop jmp mov or adc mov jp test repz mov dec ret sub add (bad) movsb out mov xlat xor call adc xlat sub mov mov test mov loop hlt mov ret nop pushf out jmp pop adc cli lret add inc mov lods js mov mov jmp jb pop lock iret lds add jl loop into stc or std loope ss imul pop aas cwtl and cltd sub rolb (bad) shl and pop jnp scas nop mov cmp push insb fbstp xchg cmp sbb or xchg repz out fildl adc xor lret or mov stc dec add cmp rcll ret pop push pop mov mov or mov push add pusha fldl notl rol xlat sub jp xchg idivl mov inc out and shlb imul rcl fimul fidivl xchg sub mov testl mov cwtl mov mov ljmp xchg add sbb test sub sbb das cvtps2pi imulb daa xor out pop shlb into shlb les popf inc or ljmp pop frstor xor or ds pop jno sub dec xor fs scas test in adc aaa sub sarb clc adc mov icebp push mov pop lods cmpsl fcompl pop rcrl repnz dec repz sub xor test iret xor push xor dec ret jg scas add pop clc ret xor out xor jbe lahf (bad) mov movsb lea pop xlat xchg push jl jmp sbb ret jne mov shl ret push mov sbb fistp or pcmpgtd mov mov push out sub es add sub or pop daa fmull pop and in daa cld push pop jge data16 push jae dec rcrl test and out sbb jno mov xor mov xchg xor jp sbb pop fimul sub sbb mov dec and into neg inc dec fildll push cwtl dec out adc pop iret jmp xorl jb test or mov mov add std dec rcrb sub fimul incb loop fistl adc ret mov xchg inc loopne dec lds sub icebp xor imul ret ficom dec jp test rcll seta mov mov outsb stc jmp jb ficom push sub enter sahf or dec shll pop xchg push mov adc sbb mov fucomip push jne iret sub pop inc pop or mov pop sub inc sub int3 sbb mov sahf lea decl inc pop in loopne adc nop andl ds out (bad) (bad) push in xchg movsb stos fnstcw icebp xchg jg or ret dec dec inc mov pop mov fstp or stos ljmp mov dec cltd pop cmp popa movzbl push adc and jns mov (bad) cli notb fistpll dec andl insl sub sub cli popf mov adc in and test xchg in iret ds aas (bad) cmp sbb lods dec mov add and mov mov dec push popa mov xchg mov push push lds jnp inc out dec mov popf mov sub leave rcrl sub dec xor insb out inc cmp (bad) rolb mov shrb xor adc mov aam mov ljmp lahf push out movsl (bad) divb jle inc sbb shll std xchg or and jbe pop xlat cli inc repz dec roll mov ja lahf xchg mov pop sbb repz push in jg mov add (bad) mov pop mov (bad) lret cltd stc loopew mov jnp aad test push jl shrb cli sub adc or ja int3 mov or mov imul mov push cs cmc xor andl sbb mov scas into mov sub mov and mov xchg mov out cs sub cs mov add std mov add jb mov leave icebp fidivr pop into push stc movsb add imul scas inc (bad) icebp xlat inc (bad) (bad) sub repz xor and nop push decl pushf das bound add jae sub leave je fs jecxz imul add dec and jae sbb lds divb repz adc nop mov mov repz add push or inc mov roll movaps dec iret fimull jb (bad) jne in popf push fldt sub mov les cmp xchg or mov push mov lret xor mov into movsb mov mov xchg dec lods gs ret cltd fbstp sbb jg aas cs lret jl daa gs xor out and add sub jo dec jmp lret and cltd inc cs or add daa mov pop (bad) inc pop test sub hlt mov mov xor stos ja imul mov mov mov dec test hlt push lds mov xor inc pop pop mov xchg lds inc or push das mov scas and out mov fimul aam in mov dec stos ret hlt or sub jl push fdivrl adc mov xchg repnz mov std inc push xor sbb ret mov adc mov daa rcl pop gs cli jbe mov call jns dec idivb out pusha test (bad) dec jb rcll xor into sub sub sub mov idivl and and add pop popf negl push icebp push out xor (bad) ja xchg pop test mov jle xchg jle lret pop (bad) aad adc aam lret in loopne lret cmc sti xor and jge test sub xchg mov cmpsl daa jne xchg mov cmp or imul loop insb enter mov imul dec push mov cld push jle mov mov subl cmpl movsl cli cmpsl fs or add mov (bad) mov aam push push fnstcw (bad) decb mov inc je sbb (bad) sub fisubrl cmp bound fnsave enter sbb dec mull out daa add rolb ljmp popa lds xor xor jns xchg lahf fcoml mov jmp (bad) lret std mov jmp (bad) cld adc movsb sti or add or mov push aad (bad) pop cmp cmpsl sbb ret push and inc ds and aad ja lods jbe mov imul leave idivb imul lahf pop and pop daa (bad) cmp xor add icebp adc rorl mov fcomi sub daa aad lret mov dec cmc movsb sbb mov sub cmp xor pop mov int sub stos jg sub out sub inc xchg mov hlt cmp (bad) mov out popf fildll repz in rep sub int xchg pop push xor push out dec fadds xor pusha mov pop imul inc shr xor xchg mov dec mov test scas sub lret in xchg pusha xor add lods lret sub add inc (bad) les jmp ret jns dec jecxz jb xchg into mov repnz mov les (bad) test and and mov call jmp fistl and pop stc or add ljmp fcoml mov or push pop xlat cmpsl dec and pop push jle enter inc jns inc repz and sbbb mov cwtl mov sti jno aas jbe into lahf jns imul out fs stos bound (bad) (bad) popa or and or jg push and cmp and idivb mov add repz jmp mov or gs shll pop jmp pusha sub stos loop push pop call sub dec add and cmp scas jmp leave mov leave mov lret mov sub pop loop scas test add adcb inc jle into fwait xchg mov sub jb rol xchg popa test sub pop fxch repz jmp int3 cmpsb push adc sub push mov in sub cli mov les sub aas and (bad) das leave jne mov loop pushf and push xor roll sbb cld push mov inc adc fidivr jae loope mov negl mov in cld cs cmpsb pop xor sub mov (bad) mov test xor test stos fs cs mov inc lods dec movsb mov add ret in scas dec cmc mov mov mov and mov shlb lods (bad) pop mov pop and push mov inc movsl xchg mov xor pop gs or push outsl out dec into jle adc fs xchg dec mov icebp in hlt stos loop aas pop adc xchg out mov adc mov xor mov ja sub cltd mov mov bswap pop sub shll jge fimull add dec in dec into repnz nop mov sub mov mov bound lret ffree adc in xchg or movl jbe movsb adc lock mov imul iret xlat in andb push sub pushf adc lahf cwtl dec push fnstcw sub jne mov jg mov push mov xor pop xor cwtl or rcll push pop jle aas mov jle sti xor adc lea dec int movsb (bad) in pop adc add pop imul push mov sub sbb mov movsl (bad) jae mov aaa push pop and or (bad) mov pop mov clc lock push add jp mov and outsl popf add or aas mov add jo les jg mov add mov pop movsl outsb add push push aas add idivl push adc repz ja push sar pop jbe mov int cmp inc fdivl repnz xor dec cld dec dec pusha push mov stos push mov addl shll pop repnz push shll in iret jg ja dec out add cmp push pop add xchg fsubr mov adc and sbbl in push dec divb or js outsb lock dec xchg sub pop add push stc jae lret addl lret movb push and mov sub mov pop pop jmp mov or sti or fcmovnbe inc cmpsl or sti cmpsb das inc inc out fs or lock mov (bad) cmc jnp scas cmp fiaddl dec cmp arpl fsubrl outsb ljmp cli jns mov call rcr hlt lret ds jp cmp jecxz or and jmp dec and scas repnz mov push repnz loop sub jns es xchg lock rcrl add xchg aaa call aas mov fiaddl cmc xor and or into test idivl cmpsb sub sub jmp xchg cli mov iret xchg notb div repz leave mov mov push xchg cld daa or stc mov ficomp mov jne jl leave and loop fimul (bad) dec cmc jae test mov or cmp mov testl lahf xlat out aaa int3 in out lock pop xchg lret adc cmpsb push mov xchg ja lock cwtl arpl mov roll mov push fs jp ljmp pop in ret jge jmp adc (bad) dec scas lcall push mov jae adc mov xchg ljmp (bad) add xchg ror and add mov (bad) cwtl jl test ret mov dec dec fmulp daa stc sahf enter push mov mov das sub mov push into aad mov pop cmp imul xchg cli in movsl (bad) repnz and insb xlat into ljmp scas dec test ret out aam pop sub push stc inc or test bnd mov xchg shl das stc mov clc imul in stos je jmp xchg call dec pop sbb cmc cmp mov add fisubl xor add ret popa mov xor xor fist add mov xor icebp clc imul push add and das outsb add cli or push mov mov out xchg mov lods or (bad) and fmuls fsubp and xor out mov fstps mov sti xor pop dec mov sub ds stos xor ret add xor mov sti pop cmp and int3 mov cmpsl or lret mov add add and pop jmp cltd mov mov cmp inc sbb sub sbb lret or cmp or loope in mov mov adc sub std sub and sahf or leave adc out and and ret xor aas je mov mov jmp (bad) imul cmp cmc inc outsb xchg fadds mov (bad) sti leave cmc inc aaa or gs xchg cmp rclb pop cmp pop or cmp lret mov mov repz iret std leave jne stos fistpll push xchg call mov add clc mov sub add adc int adc ret add movsb mov sbb repz pop sub popf pop out imul inc add pop dec sub repz and and push imul daa into cmc xchg pop mov xchg (bad) decl fsubs fwait pop decl sahf sti cltd clc ds xor or es pop mov aas jg and mov jg cltd cmpsl push (bad) pop sub mov pop jp mov push adc popl das ret fldln2 inc add insb mov xor mov inc cltd push mov xor pushl (bad) push adc mov lahf (bad) xchg daa xor popw xlat cli jmp icebp add jl cli xor xor cmpsb (bad) pop repz jmp push lds jo xor or stos jne push fstpl xor sub jne and push add mov or mov push mov popl adc mov loopne (bad) mov pop mov movl cs pop stc add ret jp iret sbb sbb cli sub push mov push cwtl ud2 mov gs (bad) or pushf bound sbb les sub adc loopne stos mov fildll scas gs cs inc xor movzbl sub subl jmp fnstcw add sub sub out xchg vcvttss2si or rolb out std xchg ror dec bound inc and ja rclb cmp push popa fcmovb xor shlb push cmp pop add lret cwtl std ljmp jl sub or or cli mov mov adc out cmp mov stos cwtl add hlt xlat popf fnsave fsubrs movsb push push xor repnz inc and push push je mov stc std inc sbb aad jb mov xchg repnz pop inc popf out negl mov (bad) jne test push xchg insb jmp pop loopne xchg sub call pop xchg or cltd add popa aas insl sbb xchg mov cmp mov imul (bad) xchg out and lret push lret mov loope notl movsl and or xchg adc repnz popf (bad) adc inc in and sub cmp push jns imul popf jnp add sub out cltd loope repz mov jge ret xchg leave jge push pushf add inc and inc push (bad) (bad) mov push ds inc adc pop (bad) pop rcr and or xor inc mov (bad) and aam push ret or out add (bad) jmp (bad) or sbb pavgb sbb xchg fs in loop popf dec insb add rol mov gs cwtl and out (bad) lret jbe dec repz mov iret pop jb mov lcall lods lods daa (bad) adc mov mov les mov xchg inc dec add arpl jl mov jns dec xchg imul ljmp mov dec mov mov push lods jle lret jb scas out mov adcb xchg mov and mov rcrl repz dec (bad) jno mov xor ret cmc xor ret inc jns mulb xchg (bad) adc xchg push xchg popa mov sub dec lret hlt aam es (bad) cli lcall call clc in (bad) dec lret ljmp xlat adc pop push xchg lods pop xor or data16 jg cmc xor mov mov out dec jno mov push imul sbb adc xor push icebp std cmp loop aam jmp popf iret xor and dec ljmp sub dec mov push roll pop xor or fsts nop loopne pop xor test test mov enter add and shll icebp cwtl ret (bad) test lahf mov fnstcw lods dec das out dec pop std icebp test or clc jecxz scas xor scas fwait mov and xor (bad) dec mov outsb ret jge (bad) into lret movsl (bad) pop adc movsl pop cmpsb lock leave push adc fwait mov sub cmp mov shrl mov fldcw outsb in lods sbbb and pop jmp loop sub in inc test out cmp es add les test mov in mov dec repz roll incb jmp (bad) leave mov icebp mov and xchg or int3 pop push call mov sub nop xor dec and mov dec mov add push pop adc out xchg popf out pop js mov jne fcomp sub mov daa mov loop ja inc cld jp add lds jae mov jno or sub jne lods mov scas daa mov and bound lock ret es xchg outsb in cmp lret dec clc fstl adc mov cmp in aam das jne inc push jl push ret pop call push xlat out stc jmp test repnz mov mul dec mov fstl and jmp fisub repnz (bad) lea pop dec and in clc ret pop or xor aam enter ja rol pop xchg cmp sub mov loopne add or push lea and decb fidivrl sbb push test outsb bnd lahf mov xor into pop les ljmp xchg add lea dec (bad) and or push mov stos into xor push ret (bad) pop mov lds sub je dec pop pop incl ljmp es push cmc fldcw out add pop xchg repnz stos mov movsl dec cli xor mov mov pop out popa nop (bad) mov sub sub dec add xor (bad) mov pop push sbb mov push add je cmp daa sti or in daa je push jecxz popf xchg mov pop dec sar jg fist mov bound dec cmc pop ret mov mov repnz sbb ja out lahf rcrb dec stos clc in mov push push fwait and scas lea pushf std or int dec ret sbb jg mov lock push das pop mov jl jno sbb or movsl inc sbb gs push jmp (bad) jbe loop iret jnp scas or inc dec mov repz and add movsl adc call inc adc add iret jp sub imul xlat lea inc mov cwtl pushl aaa ja int3 lret inc cmc daa xor adc popf jle push repnz mov sti jl xchg jbe inc sub push jns cmpsl pop cmc daa jnp das aam pop aas jne lret push mov nop stc mov ficomp (bad) mov jo jmp and mov adc (bad) aad rclb pop adc mov add push sub sbb mov adc adc iret (bad) (bad) dec xchg dec pop jg inc je pop mov pop in xchg repz scas push mov ret aad xchg mov outsb icebp mov mov cltd aad xor adc repz ljmp ljmp inc pop xor add push mov xchg mov adc pop mov pop stos gs mov loop lret push xchg cli movsl out sub mov out popf sbb or or jmp mov bound mov push (bad) push add pop and adc cmp lcall mov sahf imul inc mov fidivrl and (bad) outsb nop mov adc out or cmp add or mov xlat cwtl and data16 xor push xchg sub mov pop mov es adc mov inc or xor mov mov rorl push sub lahf xchg inc mov or lds xor push xor jbe out push pop push mov xchg call xor sub sub and and fldcw daa fldlg2 aas dec out pop movsl adc mov dec out cwtl ss push ret rcrl jg add push ret and cli add ret dec mov and sub add add imul cmpsl or xlat push sti aaa or (bad) cmp js leave stc out or or mov adc aaa and pop add xor push bound ret cmp push push popa jp rcll cmp push stos jo add sub jno jp popf ljmp xor in jb pop adc test xor aad sub loop adc sar into (bad) jecxz dec ljmp bound xor movsl scas cmp and les (bad) mov cli repnz xchg mov xor incl scas mov fistpll sub std arpl push or mov push xor push cmc dec cs das mov les shrl lret jo add sub pop sbbl sub sti jp pop shr mov into sub sub mov pop mov push pop xchg pop ja add jb jg (bad) mov jle dec mov daa out sbb and push push insb pop sbb out xor imul stc and xor lret and pop mov sbb jnp test aad sub sbb adc leave test jmp push rolb pop pop mov stc mov (bad) pushf xor mov mov bound xor aam mov push into xorb xchg and sbb xchg sub iret and xchg call es add cmp out mov iret call add out call movsl std je repnz sub out mov icebp adc popa int rcll push adc cwtl pop es mov loope mov lock jb pop call pop decl daa stc mov clc leave movsl repnz sub adc mov pop xor repz dec inc ret (bad) ja jo rcrl mov add jg jl sub dec pop add adc dec inc xor sub push popf mov popf add cmp jecxz pop (bad) std dec lret cmp mov adc outsb mov push out stc inc mov jno imul repz push mov push adc sahf dec cmp les push mov jle pop hlt int3 (bad) sub mov icebp jmp sbb (bad) (bad) out or inc adc inc mov sub mov and lret (bad) ret lcall mov jge into dec gs and sub lret sub cmp cmp mov ret insb popf je pop add cmp xchg test addr16 jg cmp aad dec mov mov insl mov mov fcmovnu repz sbb mov sub ljmp in push sub xchg idivb scas mov mov add call (bad) and pop fwait dec xor insb fidivl imul icebp sarl push lret fstps imul int3 dec in jmp (bad) and ret xchg push repnz test xor mov or adc sti data16 out je push (bad) or inc (bad) mov int3 sub fnstcw pop cwtl xchg or dec jecxz rorb pop mov or jge (bad) gs mov sub jmp xor sub ret or push xor or mov dec stos xchg mov stos inc adc or dec pop mov jmp push pop call fs lcall lods pop test inc mov shrl add or cmp xor cmp dec mov lods (bad) dec leave shr or lret jmp mov cmp jecxz cmp dec stc pop jg cmp push cmpsl dec pop or cmp test or sbb pop and add dec sbb popf shrb loop sub lods xchg aad adc adc or mov loope fs pop (bad) stos aad movsb test ljmp mov mov stos dec in test mov fldt sbb pop bswap push pop out mov dec sarb dec fcomp stc movsb sub lret inc pop mov mov jge push push sub push sti pop cmpsl ja sti iret loop,pt les sub jne mov (bad) lret jb pop std xor sar sub out ja aas pop mov popf mov out test mov mov and add es pop mov test icebp cmpsb int outsl sarb sub or fisubrl fldcw repnz popa pushf (bad) cld test testb sbb xor xor mov daa and ja lcall or enter lock jmp or mov pop enter xchg mov (bad) adc ss stos (bad) sarl sub aas sub sub inc es in mov xor out mov dec cltd and xor mov loope (bad) pop movsl nop addr16 pop jae,pn mov pop or stc std adc sbb orb insl bound and fmulp push push ss jns bound push fistp (bad) lods jge cltd les (bad) int3 enter mov sete sbb fcmove (bad) fisttpll dec or sub loop fild sub or sub push xor jp add lcall inc add lret das cli stc (bad) lcall int cmpsb cmp push or arpl mov xchg cld jge out scas lret mov je icebp and mov add fisttpl mov push pop aas mov and aad das sub mov in enter xchg sbb sub mov dec mov repnz lret xor shrb jbe mov mov (bad) dec leave ja push scas nop add or mov sub or imul cs repz (bad) sti pop or lret xchg incb (bad) pop popf and rolb inc clc xchg (bad) repnz pop mulb nop das mov and cmp mov mov sub push pop pop sub sbb xlat sub cld insb jbe pusha ret ficomp sub (bad) and mov mov adc sub pop jns popf pop mov inc ficoml pop gs inc dec stc mov ficoml push call mov movsl add mov cmc lds pop (bad) pusha add lds jnp push ficom mov nop inc xchg cmp mov imul icebp xor movsl imull sbb sub mov mov negl sub xchg int das fisttp adc cmpsl sub popf jl fs mov jb or lds ficoml mov adc fimul stc mov ljmp leave xchg cld (bad) out pop (bad) in mov int3 (bad) dec movzwl sbb adc or (bad) pop push leave scas cld adc loopne pop pushf mov cmp insl fsubl fistpl icebp xchg int3 fistp ftst arpl clc mov or xor cs and lcall loope scas mov ds sbb sub das out idivb cmpb ja lock ds mov stos mov flds enter push push sbb push inc adc (bad) mov (bad) repz push cmp and scas mov pop and xchg pop jo,pt lret je scas mov sub std dec xor xchg leave lock loope flds data16 pop aam sub icebp jb push repnz aad and sub xchg leave ret cmp stc cmpsl xlat int3 je mov (bad) dec inc add pop rorl sahf stc xchg shlb loopne inc dec inc push push (bad) cmp (bad) xor out fsts daa mov adc push pushf and cmpsl iret cmp mov push sahf ret mov adc movsl cs les idiv test xchg cmp xchg (bad) lret clc jmp dec jbe loopne fstp jmp mov adc jle clc jg es xchg dec imull adc pop cmpsb mov adc mov or out lods cmp leave pop xor sub (bad) lret lret add mov out mov fadd incl popf sbb out dec mov stos popf roll jle sti outsl out pop enter jb inc lret lret and popf (bad) stos push xor out pusha xchg repnz imul and mov sub fld movsl push clc and xchg adc iret inc ljmp ja (bad) xlat xor (bad) decl hlt add loop andb pop into js jno pusha je movsb dec mov jl xor loop (bad) ljmp push out fst loop,pn add mov or dec out arpl clc fsubs sub push out cld mov pop fsubrs out mov xchg decl out ljmp jmp dec mov ja cvtps2pi sub and (bad) pop sub stos fwait cmp ret mov adc and mov imul cmp xchg (bad) sub insb and outsb mov decb bound push and jno pop sbb jecxz dec xchg push ret out repnz hlt jge sbb mov add mov add mov stos fs scas adc daa sar push xchg lods rorl ret ret fwait and (bad) pushl sub cs push mov or ffree pop pop xchg sbb and sub pop jmp ljmp and repz mov loop xor iret rorl dec fiadd ja enter adc push fldz lahf push mul or cmc lds and xchg lds xchg add pop (bad) popf out out ret outsb or lock dec adc cmp mov sbb out into xchg pop pushf out loop es inc lods loopw ljmp cmp test lret mov rolb sbb js leave sti xor xor xchg jne push stos cwtl xchg xchg icebp out in in sti xchg in and fimul repnz push loop xchg (bad) pop push sti fs cld jmp sub jne imul adc jb mov mulb popf jecxz mov xor lea popa fwait lods cmp imul mov cwtl aam divl or leave mov add adc loope mov inc ja push dec movsl push subl sti mov in ljmp or ret jge jae dec mov lds mull mov sub (bad) ja ret and or pop in add cmpsb fildll bound mov dec inc dec out bound xorb out mov xor (bad) mov push ret push loop fldenv fist movsb xchg ret pop es sub imul and sbb and cmc in inc in cmpb icebp adc cli call adc roll xor or xor repz mov jl pop push loop jno inc out and (bad) cmp sbb jg cmp stos gs fnstsw add into mov pop dec out jge je lret daa je cmp or mov adc rorb mull clc sub cli dec mov aas jbe xchg adc push das leave out inc test xorb push fimull add fnstcw cmp pop out mov and push aas push pusha add sub mov lods xchg in lret call mov xor lods push fiadd adc outsl sub imul je (bad) (bad) cli cmp push scas int3 rcl mov lods repnz scas lds cli test test mov push aas jae ja es repz lret and sahf (bad) jne ljmp inc iret lds add out add repz das mov (bad) cld (bad) mov cs mov jmp and test sub out mov (bad) (bad) push sub jmp ret popf pop push pop adc sub mov sbb or and hlt lret lret imull (bad) icebp dec sub test stc call and imul mov out dec mov sub pusha adc or pop pop das js mov cmp imul movsl jbe (bad) push sub mov sub adc adc adc cmpsl cmp aas add pop mov and xlat cs push jns xchg xchg stos popf sub imulb dec data16 push xchg push in pop and mov clc adc inc and mov scas arpl jmp sti (bad) (bad) ret xlat jle jmp loop lds test leave leave fmul bound rolb pop push mov outsl sub leave sbb icebp push xor and or lahf xchg xor add aaa cmpsl test xchg inc xchg icebp out enter fdiv pop adc and cmp push (bad) dec cltd (bad) mov sub imul das test dec jmp jecxz inc test xchg mov int3 sub loop sub and mov sub out dec add je stc cmp mov ds mov xchg and push jo mov push repz into xchg cltd (bad) (bad) cmc ret pushf sub cmpsb pop or jge pop sub cmpsb in roll leave xchg scas (bad) jmp dec push dec nop jbe leave lahf push pop mov mov cmp push add sahf jl into cmp cwtl and fidiv xchg mov out lret or dec dec clc out add mov sub lock fidivl and xchg pop cmp mov ds pop push sub add sbb sub lahf jle loop pop je push imul scas (bad) push lea (bad) sub int3 mov pop and shlb sti sub insl pop mov push mov add pop lret jbe push repnz or mov pop fisubrl loop shrb pop mov iret add xchg inc xor jge std icebp inc jecxz into sahf mov push js fisttp jae mov (bad) mov stos mov mov nop sbb repnz movsb adc mov jmp push jb rorb sub fdivrs push stc jmp pop dec out cltd xchg das stos sub sbb das scas sub out adc push cld cmpsl or adc inc enter ljmp mov xchg or out pushf scas repz divb push roll add and mov xchg (bad) scas inc ja in sub pop sti jecxz sbb mov shrl push mov xor test or lahf push and std and mov jmp dec insl mov push frstor (bad) sub dec jg xchg je ret in addr16 leave (bad) (bad) clc xchg xchg cmp repnz pop sarb (bad) std ljmp cld pop nop xchg inc es out sub jle pop shrl xlat jnp mov popf mov dec in mov add mov in mov mov push inc or adc dec popa sti outsb inc js ja rcr add pop adc or test in and sub out mov dec out xor icebp mov leave jg in (bad) push es out clc pop ficom leave stos mov push sub cmpsb inc jns repz mov lret mov pop cmove cmp jge push pshufw xchg sbb add fisub pop pushf popa out lods (bad) mov push jl push adc pop mov add xor fimull xor loope mov sub lret jg dec dec jo stc inc enter sub mov xchg dec ret rcrl jnp xchg (bad) dec test sub mov jbe bsf rolb xchg add mov out sub lahf fsubl pop mov jmp pop mov add cmp jbe xlat push lds rol jno sahf into call lahf rcl imul mov daa and push push mov and cmpsb add out scas movsl sbb jecxz or rorl lret mov les (bad) sbb incl adc (bad) es repnz lret lret adc add lea sbb or leave testl mov sub push mov dec in stos dec mov cmp and dec push mov movsl jmp dec inc pop cmp or cmp lds seto pop int pop out adc lods jecxz add cmp (bad) mov inc int xchg cmp and in cmp add sub push sub adc out lock lahf adc adc xchg lock lods mov hlt adcl xor jmp sub enter out and insb adc fnstcw dec cwtl xor cs repnz fidivr xchg out mov leave push add mulb idivl popf push bound jne add (bad) pop jmp cmpl add mov hlt dec leave pop repz adc lea je dec mul lret sbb push xchg out mov xor sub and adc xlat out jne call or movsl bound sub sub cltd mov dec pop movsb icebp lods daa outsb ja mov add mov out bnd xchg pop movsb lret (bad) ret cvtps2pi mov lahf out mov (bad) outsl xor (bad) cltd fldl xor fsubl push push push add lret rcrl mov adc (bad) repnz ljmp mov loopne icebp int3 xchg shlb xor stos fs in movsl xchg clc pop int (bad) leave leave dec dec cmpsl xor jae mov xchg jb arpl jl sbb gs and pop stc (bad) icebp jg and mov nop jno pop and clc cmp popf push cmp jb into sahf out fnstcw xor pop add inc int jns negb jge cli std sub pop sbb fnstcw xchg mov xchg mov fstps fsubrs add (bad) aas inc leave pushl imul (bad) pushf test push push or push cmp inc pop mov int3 adc out ret sub lahf inc and add mov jbe push jo mov mov dec test (bad) testl push pop mov movsb xor sub leave ljmp add ja push fisub sar lret ret ret xor jp add xlat push (bad) xor mov mov inc daa xor aas cld cmc xchg pavgw sub (bad) ret sbb mov xor sub and aaa popf mov jbe mov pop je push or push ret lcall push adc inc (bad) das lods inc xchg mov ja sti mov les adc push stos mov scas jmp mov xchg lods mov cmp mov pop sbb sub pop movsb mov scas cwtl dec jmp lahf insb pop fwait mov add add mov out push inc sub shrl sub roll cmp jne mov out cmp ss sbbb aas sub push sbb cli fcmovb cltd sbb aas mov insb inc pop out jne add sbb les xor jl mov xchg mov xchg dec adc cs (bad) fildll xchg xchg xor and loop lock adc xor test inc lret lea fs daa idiv arpl das test stos xchg mov (bad) dec loopne jecxz push xchg repz bound push mulb imul mov pop push test jb mov gs lret or xchg sub (bad) or dec jle and (bad) push pop call aad cmp push fistpll dec pop (bad) out lretw or sti in mov out xor fucomi loopne fdivs inc jns mov int3 adc cmp mov repnz jne or cmp jae imull orl mov and dec iret cmpsl xchg ret aam daa jne lods (bad) aas push xchg push mov xchg out iret mov pushf mov or ror daa xor das iret notl mov inc and stos sbb out xorb popf rcrl pushf movsb sub ljmp sub pop adc cmp adc or pushf lret loope and mov jo dec pop lahf shrl inc jl test pop dec or mov xlat push mov lds xor xchg into mov and push mov mov xchg cli inc stc xor jbe jb insb fisttpll pop test push jno dec in or sbb ret cmp or mov or ljmp cmp lods xchg test jne xchg out loopne mov pusha cmp mov or add cltd adc leave mov (bad) mulb popf iret xchg scas or xor ret call (bad) and loop xor jmp dec shlb stos stc imul xchg adc fldenv push sub mov mov mov orb inc and xchg fidivl add movsl fsubrp (bad) je insb cwtl or mov les mov adc negb mov scas xor fimull xor cmp mov (bad) adc or addr16 pop test jg jo ficoml xchg das sbb jl leave push sti push cld xorl repz daa imul add xor cwtl sbb xorb (bad) pop cmp arpl push or xor sbb loope or bound out adc mov nop lcall dec repz jno lahf mov daa pop inc jge jmp fs hlt test add sub jmp rcrl aas les test inc imul sahf xchg xchg repz xor mov arpl scas mov stc sti leave add jmp repz gs jmp mov mov outsb movsb in call loop xor lcall sub das int3 sbb and or pop cwtl dec xchg xchg push pop push dec scas jno add push push xor jle push lret daa rorb xor and rcll fisubrl outsl ret dec ss scas int3 xchg bound pop bound push clc mov (bad) daa xor jbe cmp dec stos mov mov mov add xchg fadd popa xor and dec test ret adc nop xchg mov or sub bound dec into ja out cmc push es test cmp add mov dec mov inc jle or (bad) add pop shrb pop dec scas cmp imul and out inc mov xlat test (bad) je,pt aad repnz mov mov dec mov enter sbb je mov je jg insl divl cwtl push in repz cs cmpsl or xchg out mov cmc or mov fbld popf rcll sub sub xor adcb (bad) mov mov lock push outsl adc sbb lods js cmpsb das dec mov popf idivb movsb outsb sub jnp test mov xor mov test movsb mov or mov fucomp pop adc mov mov xchg sub cmp ds push in (bad) and add ret fcoml pop sub in aas mov leave lret aam (bad) repz xor cltd pop inc jo push fcos mov mov xchg out sbb pop mov dec mov out push push mov addr16 mov mov and mov xchg out dec les mov daa (bad) pop xor insl or adc push test in mov jge mov xor xlat icebp call (bad) stos call or shrb mov add mov sub mov sub xchg bound lcall sbb cwtl icebp fildll sub xchg stos xor and or pop lods xchg aas mov je xor or rcrl pop addr16 (bad) mov adc dec (bad) sub jge mov mov jnp pop insl cmpsl xlat es cmc mov xchg insb cmc popf insb stos xchg adc lahf sarl mov xor add inc aaa add repz fxch fucom push fwait or std data16 ds pop inc iret and add add and xchg add push sub add call test sub pop pop repnz icebp cmp and mov jo loope into xlat dec call dec in jecxz daa outsb mov sbb pop mov jnp adc cmp dec sbb call repz or cmc (bad) cmc sub lret mov mov jae pushf mov pop in adc aas jo jns mov pop rcr mov adc (bad) mull ds popf cmp inc dec and test rep and stos mov jle mov repnz les rsm sub dec clc loopne mov lods (bad) dec and pop in stos daa (bad) pop inc push ja sub sub xor mov mov sub bound adc inc leave (bad) xor add std out xchg in stc jg xchg lcall xor stc fisubr pop jecxz mov push lods and roll adc sub add pushl jnp out pop dec mov inc adc mov cmp bound popf mov fs pusha movsl push cmc rcrb lret and add or push lret cmc je lret inc inc hlt and (bad) cld (bad) jnp push stos out sbb pop in scas out scas pop mov inc pop or sub push xchg fstl cwtl movsl mov pop aam mov stc and std gs and xchg push push stc lods xchg imul lret adcb inc ret stos pop cmc fdivrl adcb jno inc and mov sarb movsb sbb negb int3 (bad) jge xchg pop mov mov push or pushf sub in dec dec out dec sub jne insl cmpsl rcr sub enter add add pushf daa pop mov (bad) (bad) mov aas and mov mov aad xor and pop adc or and sub or add cli cwtl xchg mov push leave pop out jmp mov inc fcomip xlat pop pop lcall jb cwtl dec loopne mov push pop cld enter mov push add popf push and paddw ret ret (bad) push dec repnz into sub movsb enter imul daa into sub lret imul ret fstl xchg jae xor aad push out sub outsl mov push ret je sti rcl (bad) and mov add inc mov lret push push xor insl pop cmpsb aas mov loop xchg scas sub int insb add lret mov test push xor rcr pop inc sub js insl imulb fldl2t push cmp (bad) imul imul int3 add pop jl fstpt add std push roll and jbe call lods jmp add int dec push iret xor movsb scas xor jmp jns jo mov and mov fwait daa not das pop mov mov mov sub xchg leave idiv push repz mov pop cwtl pop xchg aas mov xor imul xor pop push data16 xchg icebp std push adc lds xchg (bad) sti sub (bad) dec pop push adc mov test (bad) and mov out mov or adc gs aaa xchg xchg xchg stc in pop mov in cmpl sub jns aas mov jge mov lret jae mov add jne pop or cld outsb fadds cltd push and dec setl pop mov add and mov push fs (bad) mov movsl and jbe pop xor aad cmp xlat or push aam jbe fs pushl push add xor mov push sub or and cli mov push and inc loope lds pop xor (bad) (bad) call cli jecxz sub fs lahf dec adc out (bad) mov mov test push scas int3 push mov adc adc cmpsl mov xor fs or add push lds push add push mov inc es addr16 fisttpll mov test pop pop mov mov imul add mov jl pop pop add cmc stos aad sub and mov push mov push mov idivl (bad) push inc adc fcomi jp in add and adc sub pop sub nop jecxz push mov dec test jl rol jmp mov pop add imul lahf loope jecxz xor or (bad) push test dec add mov xchg jle not enter xchg repnz inc movsb out (bad) cmp lret (bad) mov pop lcall cli inc dec push fsub hlt or mov pop or sub adc sbb cwtl push sub or lods ljmp sub cli je loopne sti push outsl out adc mov inc add jo sbb inc (bad) jecxz inc lcall popa xor push sub sub dec clc xchg movsb int cmc (bad) cmp outsb clc mov sub lret icebp add stos int cmp (bad) dec mov (bad) clc mov (bad) cmc bound out sub out dec sbb mov notb ja in push or sub test or jecxz mov gs scas stc mov mov xchg and lock or jg ja dec call (bad) movzbl inc and (bad) imull in (bad) movsb stos mov jns inc and xchg fidiv cmp sti jg iret inc and pop xchg xchg ret adc fisubrl push and popf jl push std jae adc or sub int3 sbb (bad) adc mov adc push mov out xchg fldcw daa or movsb push pop repz cmp dec inc scas ret arpl loop sbb cmp sub loopne lds xchg push out mov and insb mov lds call xor inc aaa rol dec inc mov push ss and cld out dec mov mov rcll mov sti cmpsl xchg fistp icebp push or push int3 inc repnz sbb pop jne aad or sbb inc sbb sub push jbe mov xor add mov mov lret fisubr jl mov sar inc ret dec insb imul ret ret mov sti add dec mov gs into and jmp xchg (bad) push jmp decl pop loope iret cmp pop and mov test inc add clc mov stos pop mov pop jno imul icebp xchg imul std sub ds cld dec lds adc je jmp popa push testl xor add inc (bad) cli lret and notb mov into ret xlat repnz repnz ja mov xor repz add outsb xor sub xor xor mov mov test xchg push nop rorl mov mov jmp mov (bad) xlat add aas out dec lcall pop gs pop jecxz add ret mov je or adc enter jp lahf and adc fwait rcl lds shr flds call xlat ret adc aam rcrl dec mov xor jne jle std mov mov mov xor and rol (bad) fdivrl push (bad) popa rclb dec cmpsb sbb and cmc mov pop (bad) imul int3 sub gs adc std fmuls jo and fs and ss daa dec dec ret sbb pop out lret jns fnsave cli sub ds push mov pop out lret xor call call out xchg mov dec fsubrp xchg fcoml fdivrl lea add div xchg nop sub sbb xlat ds rcll out pop mov ds ficom aad sahf dec push xchg pop add add sub sub call dec popf inc cmp (bad) pop dec pop notb mov or (bad) lea or or adc and ret dec adc inc cmp fisttpll xor jecxz sub into jge fbld and or sbb dec clc sub (bad) icebp mov repz mov and dec or sarl sub cltd movsl add and jg (bad) mov dec movsb or dec mov push (bad) cmovl jmp out and add cwtl aad mov ret xchg scas add ds and or mov mov out push mulb ficompl fstl repnz mov popf (bad) hlt pop (bad) mov jmp rcrl sti dec inc adc mov in stos sub cmc cmp repnz and divb aam pop (bad) xchg mov loop daa rcl lret mov mov inc lods cmp ljmp dec xor daa xor fbld out iret add jp mov pop pop mov jp adc push add pop (bad) mov sub sbb push sbb scas movsb out rcrl push enter (bad) clc shlb push xchg xchg stos pop or movsl shrb jmp (bad) icebp dec imul and and mov xchg dec mov imul pop repnz pop adc mov pop sub adc mov add ja push (bad) xor mov add (bad) repz rcl (bad) mov ss (bad) imul push aad mov push fsts mov adc fiaddl sub dec (bad) mov (bad) (bad) cs mov xchg or jg mov mov insl push jmp shr xchg xlat xchg dec or mov insb jecxz pop pop (bad) (bad) scas mov movsl gs mov adc cmp das jae pop ds pop xor add mov pop mov cltd lahf imul ljmp es lret sti push adc jmp add incb inc xor inc mov jne add xor stos adc ret lcall movsl push or cmc pushf sbb add das mov lds (bad) pop mov xlat loop stos add das inc inc xchg fwait shl ret subl dec mov aad idiv push mov push and sub decb icebp insb jle fwait scas push or rcrl in push loop stc push inc and enter testl sub jle scas pop js loope sahf mov loope add ljmp (bad) push repnz sub jl adc pushw lret retw rolb mov daa sbb out and sbb mov testl and fdivrl adc into inc out sbb daa fisubrl into mov mov das cmp jg xor add mov sbb xchg sub loop lds out mov scas or hlt arpl sar xor outsl test cmp sub xor mov (bad) gs or je fs stos lds mov cmc stos div pop out cmp jp cs sbb and add lcall test push hlt movsl adc in scas fcompl popf insb xor test rdtsc in mov fidivl xor push pushf cmp shlb xchg or imul mov (bad) je push pop push daa sbb sbb xchg add sub icebp stc push push (bad) imul ror imul jmp dec sub xor rcrl shr and push inc jmp xchg dec repnz popa jnp fsubrs xor (bad) or or xchg scas movsl adc neg sub adc ret dec pop sbbl pop mov jno xchg (bad) mov adc in xchg out push xor mov add je push mov and jo icebp push mov stc pop leave pop push push (bad) loope sbb ljmp xchg and ret mov sub cmp stc repnz or out or test std lods mov pusha mov mov jno mov and aas jno pop js (bad) out pop mov rcr lcall lahf push sub jns insl jo sub outsb adc es sbb dec jnp ret loop pop pop sbb repnz and jge out (bad) cmp cmp inc sub and and xor xchg movsb add sub push add add and sbb xchg test ret lcall push cmp inc out movsb out cld out mov pop mov inc out sbb fbstp inc jmp adc mov fnstcw cmpsl jb and cmp movsl out mov xchg cli ret pop in lods comiss inc mov add dec or pop xor out push ljmp repnz pop sbb mov ret int3 hlt sub lret iret push outsb bound fisubrl lods outsb fstpt dec xor dec jl and jg cmp mov pop lea mov push adc fidivrl pop xchg pop mov mov sub mov cmpb pop (bad) loop adc sub ret mov cld pop sarb int3 cmp subl subb adc or or leave dec outsb test popa and cmp shll xchg add xchg or jl call pop pop cmp or scas gs sub (bad) sti (bad) inc mov mov dec std in lock sub sub jge std in mov call lock push movb xor add ja xchg ds (bad) xor jmp das xor hlt out popa push aas or in cmpsl pop outsb call xor out test (bad) orl dec sti sub or call aad test cld xchg mov pop lret xor sub iret sbb in sub nop test mov xor mov cld cmpsb push icebp ret test mov and pushf mov (bad) jmp fisttpll dec push push loop bnd sub jmp jg stos xor (bad) ret or sub (bad) hlt fs pop sbb adc test cmpsl icebp dec sbb sub or cmp sub push xchg sarl xor pop xor ffreep sbb or std xor xlat dec lahf aam mov cmpsl mov push jnp cmp mov icebp mov ds out sub out pop repnz mov adc (bad) in xorl stos cli mov sub mov and sbb ret add cmpsb imul mov adc fistpll mov fimul (bad) shrb inc inc mov iret adc fisttp or xchg cmc stc and jo sub lea mov dec loope ja pop int3 (bad) cld popa lret fdivs daa jle pop sbb dec aas sbbb xor mov inc mov clc or jae,pn dec and xor outsl in cli (bad) ss xor out mov call xor adc scas mov std sub dec adc mov dec dec bound push mov fimull repnz loope xchg pop out adc mov adc push inc test jle inc pop mov jmp pop and add xchg shl inc add pop insb jmp mov or into std (bad) daa out xchg mov (bad) fucom leave push iret das cs lret in xor mov lret xchg mov xchg repz dec aam lret out or lret and mov test test stos test sub or add push js jp mov out sub and loope loop sub or mov fnstsw fimull stos (bad) pusha adc ds out test lret cmp dec pop pop ljmp daa (bad) dec outsl inc adc mov mov popf sbb lahf jl imul jecxz,pt pop stos sub mov lods mov pop int3 pop jne mov ja fadd or xor xchg jle (bad) icebp stos mov and mov daa or std imull mov or jns inc ss jno pop (bad) (bad) ja les popf int3 cs dec ficom shrl repnz sub ds lret xchg pop mov or ficompl (bad) sub roll in mov lret nop sbb xor das loope sub adc sub push add xor mov sub mov add cmpsb daa fadd loop jne and mov mov or xor cmp outsb dec and sub jge rcll lret stos int cmp fs scas les adc push inc ficoml pushf push mov je test pop mov jg (bad) movsb push mov jb fsubrl pop xchg cmc xor ficom lret scas (bad) or push (bad) aaa cmpsb repz shll pushf jmp xchg jmp dec ljmp mov ja cwtl and xor imul lock xchg pop stos push pushl xchg inc jmp xchg mov leave adc std or sub pushf outsb or xchg sbb icebp push push pop cld adc mov pop (bad) mov xor cmp iret std xor dec test dec jne adc mov mov jmp xor sub leave add mov dec out lea mov adc outsl cwtl repz insb clc rclb or sub dec sub pop add xchg jp inc iret push sub js and icebp sub mov idivb and scas stc fild lea xchg (bad) movsb sbb lret dec mov daa pop fwait and lcall sbb (bad) jne inc xchg pop lcall add push lret lret cmp jg mov in mov clc xchg inc imul or icebp jp add push ret icebp jmp sbb push shrb loop fimull adc and sub pop push dec mov shll mov mov pop fisttpll pop and addr16 test mov out xor inc lock loope xor sti sub in outsl mov inc popa and xor adc test call push push fstpt mov sbbl out inc inc inc xor into mov add and push imul or and dec shll sub jmp inc mov cmp fs add shll paddusb xor pop outsl dec adc je push pop jmp push test xchg inc sbb adc add cwtl push ljmp fcomps fmuls pop sub mov gs mov dec mov int3 movsb lods (bad) adc cmovp push mov pop (bad) lahf mov and popw mov adc test push add aas pop mov sti das bound push insl movsb mov popf xchg dec add out into xchg adc dec les stos popa das repnz cmp shrb (bad) pop mov mov fsubp call adc mov push ja lock lret dec out lea push add adc mov jmp or xor (bad) in add xchg lret sbbl sub sub daa (bad) hlt add lret (bad) dec pop std push xchg les xor xor mov mov jnp mov (bad) and stos repnz test push in mov out fisubr mov push inc push jg pop ror sarl icebp xor jle mov and sub outsb xor and stos mov outsl je cli mov stos mov add push cmp mov pop ljmp mov bound lods icebp xchg mov jp aam bound repz in add out daa out ljmp or (bad) sub out or add dec cmpsl (bad) add repnz ficoml jp jg mov sbb sbb sbb mov push cltd nop ret inc jmp cli lcall test and cmp cmp sub dec add xor jno xor jns scas jns xchg sub inc mov pop or test add movsl cmp jno testb (bad) push icebp cli adc (bad) add xor stos in mov adc sar bound dec out mov sbb pop sub inc add lods jno icebp scas fs or pushf sbb fsubs loop push scas xor mov sbb cmc sub mov icebp jg scas test or mov adc lahf sarl jl adc mov pop lret dec xor mov das add push cmpsb fsubrs mov ja out fmuls mov pop mov testl mov inc subl pop or push stos lret or stos cmp mov bound repz cmpsb or sbb out ja not js mov subl in fxch out ja loop xor test and xchg dec sar leave rol fisubr (bad) mov leave sbb pop mov es mov xor or jb push xlat mov sbb push push in lods std lcall shlb and dec push fistpll pop into cs test or (bad) int jp lods mov jns xchg add jmp lea repnz enter loopne ret dec lret in pop sub dec iret or lret (bad) dec gs nop mov xor xchg cs xor cmp repnz lcall cs sbb pop imul sbb push xor into out mov dec ret cli sub (bad) dec xorb loop xor jmp pop and pushl scas and add fsubrs out mov fldcw call std mov add fsubrs insl or out xchg iret repnz add fldl aaa dec or lret or mul popf int3 arpl daa dec mov add popf mov sub mov (bad) decl mull add jae dec in sub xchg std lret mull mov add sub sbb xchg sub fsubrs bound cmc add sbb and test mov dec jmp rorl vpmovusdb inc fbld aas sub stos icebp cmpsl pop inc cmpsl and and add sbb cmp fidivr pop jmp xor mov mov mov mov push xor push mov xchg (bad) jno lods ja mov mov inc cmpsl fadds pop (bad) xchg std push inc repz dec xchg outsl call fstpl scas mov sub add push sub and ret repz push ja and cltd lahf fsts mov or dec xor mov mov (bad) xor fisttp rclb mov fldenv icebp inc aad into jp adc addb push pop jle stc loopne mov mov add cmc sti jle add sbb gs mov jp jl pop imul mov out dec sub or in and lock lds mov adc clc xchg mov mov hlt sub push push xchg out test sar fmuls ret jmp mov jnp daa (bad) (bad) lret ja xlat dec loop pushf or push xor out pop mov push pop movsb mov cmp in jae mov jmp and mov inc and in xor jns cmpsl ret adc (bad) mulb repnz inc push add sub mov dec or (bad) in pop dec (bad) ret (bad) xor or test pop and (bad) je dec sbb in xor add mov fdivs or stos lret push pop mov jmp pop jge and adc push pushf and add into xor or and divps rep and jmp jmp mov ss icebp and out call scas test mov faddp sub push out daa pop scas imul mov imul aam and fucomi mov xchg xor mov mov call shll (bad) xor mov dec mov ret bound xor add or fldl lcall nop dec mov push sti and mov xor xchg lods sbb mov das bound movl (bad) adc popf jecxz cmc cmp add mov or xor dec cmpsl dec push out stos xor sbb enter imul dec test std or out imul out cltd ds rcll movsl clc inc xor das lods cli stc push leave add and add out popa jb enter mov popf push jnp cwtl std jmp cwtl xor mov push in rcrb add addb sub xor sti fucomp xor in jne mov pop shrl cmovl xor sbb dec xor pushf mov loope pop inc fstpl out divb (bad) dec sbb push lret (bad) rolb pop jmp jbe sub adc jb (bad) flds push cmpsl mov mov push and test and jecxz das jb jmp adc pushl call (bad) xchg mov and pop push sub ds pop or lea lods mov adc xchg bnd cwtl jmp inc pop sub jbe sbb mov ljmp sahf out and mov mov cmc in mov or dec dec fnstsw sbb mov sub adc add sar lods sbb divb pop lds mov xchg fmuls bound jp mov add test fstl dec fistpll movsl jmp push icebp mov sarb into icebp sbb fnsave push stc cmc or push jl and or pop or mov bsf sub adcb or jp push jp pop js xchg adc outsl mov in stos mov gs mov in jne mulb cmp xor sub mov mov mov xchg les push stos lret jmp sub mov or insl sub bnd adc inc pop sub shr cmp je ret jnp or add addr16 andb les paddb int3 inc daa and sub fistp (bad) push in movsl bound jmp sbb and nop imul (bad) idivb mov and xchg mov pop xor sub imul pushf inc and or ret mov sub add (bad) (bad) mov pop mov lret add adcb or jns mov pop mov jnp sbb sub push movsb (bad) mov add call add mov popa stos rcrl xchg cmp dec or mov push pop pop dec bound fbstp mov lahf into cmp adc adc or push fdivrs enter (bad) mov dec test and stos bound (bad) aad and repnz mov repnz jnp pop incb std nop mov sti bound (bad) jg rcrb cld push arpl jmp push add add out popf and mov pop or incb mov jae (bad) sub mov (bad) in insb adc pop enter jno dec or pushf lds aam arpl mov inc add or rorl xor sub pop adc test mov xor lret pop mov notl push add icebp jmp push out bound pop cmp test clc arpl push mov imul and (bad) mov ds icebp cmpb jl jp aas sub or sub out mov cs scas jno and sub out sub add adc shrb sbb adc popf push pop loop mov inc push loop pushf sub sub mull pushl cltd inc jle ror call or xchg jne pop cmp cmp pop (bad) into sbb es cmc into or mov cmp rorl (bad) and mov (bad) cli mov pop mov cli sub daa shrl lret mov (bad) mov ret out push and js rcll sub mov leave or mov dec cli mov dec mov xor cltd sub jno add xchg push mov push ljmp fcmovnu xor lret cmpsl adc mov xchg cmc push out das jge ss inc (bad) notb ds mov mov sub stc xchg imull jmp jmp mov sub add adc cld jnp es and xor and push cmp adc pop push andl and cmpb pop push xor lret adc mov xchg adc insl dec out lret sub mov imul add ljmp je int das or fsts xor jg (bad) xchg int3 push xchg pop das push fcoml jg fnop mov imulb xor mov mov (bad) clc mov push adc in in mov pop or xchg out xchg or popf xlat mov scas dec mov pushf loope xlat push push or notb lret push loop sbb xchg aam or clc imul repnz sub add pop add stc fisttpl xor jg dec pop iret mov add add in jmp popa xchg dec inc mov (bad) (bad) arpl fcmove pop je imul leave sti int3 lods push or repz clc and mov push or xlat or xor cmp or lcall sub and roll scas xor sub mov mov int xchg dec enter stos aad xchg push popf jle jp mov (bad) xor pop jmp xor mov lods mov movzbl (bad) xor mov cmc lcall sarl mov lds pop xor push push sbb mov ja fild xlat mov icebp cmp (bad) mov xlat xchg loop lret dec pop roll fild or notb sub cmpsb (bad) xor pusha and sub test pop sub pushl dec xchg addr16 (bad) bound decb enter push inc xor add daa jl (bad) (bad) icebp cwtl ds jge mulb scas push mov cld or or out scas lret mov (bad) cs and cmp inc iret jecxz mov mov cmp cmp mov add (bad) mov sub push movsb popa ljmp ljmp cmc jp pop dec lods enter xchg clc stos or das push fs pop mov data16 cs inc xlat imul sbb and lcall mov push stos push stc mov sbb or (bad) adc add lret jmp ljmp in fist or out (bad) pop test icebp mov fadd fucom int3 xchg out test ret sub movsb (bad) test xor sti lods pop sbb das sub loop cmc xchg lods nop inc test xchg dec dec mov dec test stos test (bad) out daa add pusha cli fcomps xor pop jmp ja jg ljmp add sub and xor stos pop mov sti ljmp mov or enter ja push aaa in out pushf int cmpsb (bad) mov loop into mov (bad) mov sub mov jo or out jae sub jmp jae xchg add or sub mov jg leave rorl in jb mov bound (bad) mov dec xor stc (bad) fisub js xor ds das cmp flds push add jb lahf cld add call xchg add mov or jg mov fdivr repz fldenv stc (bad) jle jb add mov xlat adc xchg inc jno incb mov pop adc xor out adc repnz xchg adc xor jne jmp shrl idiv cmp popa jp xor pop sub (bad) xor add js sbb test xor mov xchg or sti in mov icebp ljmp lret (bad) cmc mov xchg cli mov or xchg repnz imul xchg mov adc pop mov jns jb inc into out rol out cltd test cwtl sbb repz mov mov setge add mov cli push f2xm1 inc mov mov imul pop add popf mov mov out inc pusha add mov xchg mov das or inc fisttpll or pushf mov lahf jbe pop mov mov push mov mov (bad) jg adc adc pop or sbb mov lcall faddl pop dec jp xor inc pushf (bad) repnz dec imul scas pushf mov lods xlat mov xchg subl lods (bad) outsb xor xor fildl pop or pop pushf ljmp inc mov (bad) jns cmpsl xor cwtl bound test icebp sub popf cs gs aas mov dec mov ljmp das pop lret pop int3 mov movsl imul sub inc imull fild add cmp pop jmp add mov mov sahf cmp cs (bad) (bad) and movsl out dec rorl cltd lods or fldenv xor ja or das jecxz rorb stos stc aas xchg in insl leave lock sbb icebp lahf fdivl loope lret or int and ljmp add jns add in mov jns pop test jmp cmp jbe das in dec sub in call imul mov stos mov jle sub or pop mov sub or imul lods test add mov imul sahf mov dec pop sub jb xchg xor or add xor scas cmpsb and sub dec push dec aas movsl movsb xchg mov jmp jg mov ljmp cmp int3 mov mov mov (bad) jne jno xchg or cmp xchg jl dec in or std xchg sub out sbb repz (bad) idivb adc add dec dec dec inc repz adc push dec test cld das mov add icebp frstor ds sub and adc or push stc pop dec fiadd sub push (bad) mov or into loop fadds sub out add dec xchg daa mov adc or (bad) js or sub cld mov sub lret sbb cwtl int jo je ret jno inc icebp ficom pop das (bad) cmp pop sub fdivrs jno push sub in add xchg push in and pop cmp pusha sub xor lods mov popf pushl xchg mov dec out int3 adc daa and aad jae jno xchg xlat cli xor push add dec call loopne pusha mov fucom xor sbb mov xlat pop ljmp cmpsl fmul popf xchg pop es pop pop dec pop mov daa push ds jno bound ret bound in adc iret jns (bad) in nop inc mov xchg jmp shr cmpsl xor rcll out adc push mov and lret dec ret mov mov aad and push push popw push push xchg mov and cmp and pop ret pop jns mov xchg fnsave mov push push xchg cld bound jne jle pop xchg fist scas std inc rclb cmp dec addr16 add jo fldl push mov sub out lret lea decl shll add stc add cmp and negw out or sub mov mov push in or mov daa sbb push addl add insb or pop (bad) xchg (bad) mov push jmp xchg cmp adc stos ret push cwtl mov movsl pop mov push mov pop mov je fs ljmp scas popf xlat xchg add pop sbb pop (bad) mov push push push push rcll in sub cmp test and sysret dec pop cmp dec loopne (bad) jle test or dec lods adc nop xchg sbb stos sahf xor ljmp xchg icebp mov jge lahf push lcall rcll adc jne and fndisi(8087 add pusha xchg dec add rcrl push das xchg lahf add sbb or in (bad) popf add movsl jle std sti mov daa or sub mov test rcrl decb movsb add in (bad) xor pop popf fnsave adc inc mov push xchg or ds push and lods inc ds out daa test ret (bad) mov cmp sbb jbe fs hlt cmp pop add push mov inc rorl (bad) ss mov sub fistpll or push xor jne or ljmp paddq add or lods jg imul clc push sub adc jb jno mov pushf jecxz push or shll jp or sarl das in pop mov sbb lods iret std sbb repz jnp pop or mov jge fidiv in add sub outsb xchg test and mov idivl sub (bad) xor loopne aaa bound xorb aam ret jle push push mov push ljmp icebp jle popf repnz movsl xlat xchg mov das mov sub cs shll fcmovbe decl js ja jns pop adc fisttpll mov push push stos sub das repz mov mov test pop (bad) mov cs xor mov ret xor psllq sbb pop mov fisttpll mov dec flds xorl (bad) pop outsb xchg aas push or cli xchg adc imull daa xchg dec ret inc sub mov lret adc in cmpsl sub fnsave scas lret inc inc (bad) mov rorb fprem fistl xlat mov and test mov lods mov and inc fdivrl jg bnd hlt pop jecxz pop cld sbb lea push gs loopne xor mov pop mov gs or adc nop jne neg aad pop xchg sbb ljmp push pop call xlat stos flds mov mov adc lods jmp mov sbb cli imul mull daa mov std or sub scas mov xchg into xchg ds push pop pop lock lods stos pop or and lock mov arpl dec fidivl sub push daa sub fistp xchg and lock lods jle adc shrl mov std out or stc pop mov aas in push sbb and cmpsl adc nop inc xchg in xchg add sti mov mov xor in mov test xor lcall pop or jbe gs loope mov or std pushf xchg jns test daa or push mov or cmp mov cmp data16 push sub push pop push cs cmp std push sar (bad) jl pop inc dec js sarl pushf cltd mov mov outsl mov frstor pop mov jmp xor pop xchg in clc mov stos sub cmp pop ret mov pop (bad) mov fistpll mov in adc dec fisttpll add jg jg lahf mov mov pop (bad) push divb xchg sub aad cld jg xchg out adc enter repnz inc and int3 sub xor lods pusha fxam scas nop inc mov or rorb lock and add clc fstpl and scas adc std mov or sub sub mov shrb pop call daa and and cld cmp mov mov repz add lahf (bad) pop imul xchg or pop mov jle xor jmp mov push into add gs push push popf dec xor jae dec dec xlat mov or aas dec sahf mov inc xor push dec cmp push xor movsl repnz insb pop jno pop push adc jecxz pop lock and (bad) cmpsb add (bad) and daa xchg mov xchg vmovntps pop xor xchg jmp add fucomp leave rolb adc add mov sub lods push add lods jmp jb cmpsl sbb push or push outsl cmp out push ss adcb in (bad) mov mov pop dec test cltd cmp cld sub (bad) xor mov (bad) divl add adc out adc xor das xor rcll adc nop xchg call loopne stc pusha xchg adc out jmp (bad) fist xlat pop mov and mov int add idivl mov shrb imul sbb pop out dec lahf lock das cmp push scas pusha mov push popf aam rolb movsl cmc outsb sub cmp jmp cmp shll sbb mov loop aad sbb jg mov and xchg lret stos mov dec jmp sbb arpl lds sub inc scas mov and jbe add xor lock mov cmp imul add int leave fstpt inc repnz aas xchg xor scas int3 daa sti xchg in outsl rolb jnp pop out test xor out in scas sub ret push into ss add in push (bad) mov add pop dec cwtl push inc imul fwait movsl mov inc hlt stc xchg fidivr roll jb mov call and mov aaa dec popa sub popf jne xor insb fbstp dec pop mov dec and fs mov jge jo negb test inc sub ljmp cmp and mov dec cli repz xchg stos mov xchg out inc subb repz (bad) mov and adc in sti loop lea movsl shll dec dec xor jg in and les jmp push sub mov jmp sti inc daa fistpll ret out dec or addr16 jmp int3 mov inc add dec decb sbb sub mov mov fs jmp js dec and testb mov jmp xor sarl (bad) or mov pop cld loop loop mov cld pop ret jno mov fnsave subl and je gs (bad) mov gs or test mul fadd inc add aam leave xlat fnstenv jbe pusha push push idivb dec xor in ret call cmp pop loop lret (bad) insb je adc mov ret sarb cmp sub aam movsl jl jb pop test mov push mov and lock xchg inc adc sbb outsb loop aad daa (bad) aam push jg addr16 mov jecxz cmp dec test movsb loope (bad) pop out mov mov or mov xor jg sub out (bad) (bad) pop ds dec add (bad) bound xchg imul inc enter fstl cmpsl jge gs shll lods (bad) and xor xor (bad) mov in dec insb outsl clc into rorl add lret sbb (bad) mov and or (bad) clc pop popa imul popf dec mov insb cmp lea loopne es mov test rclb loop in rclb xchg adc iret mov fdivl mov je (bad) mull lret (bad) arpl push push sub iret sbb cmp mov xlat mov ret push (bad) and xchg je mov icebp push xor mov add add test or enter xchg (bad) ss mov jmp pop scas cmpsb push bound (bad) mov dec stos adcl sub cmp mov fnstenv mov and in mov stos std lds add jo xor cmp lea jmp add out (bad) (bad) mov outsl inc and (bad) stc pushf xlat stc cld movsl jne lahf out call pop sub (bad) or sbb mulb mov sub and xor add mov imulb lea jge std cli jmp add or lock rol mov outsb mov or jmp and imul insl sub (bad) jp or add mov pop or push jno inc and dec jecxz sbb inc in test cmpsb es leave or push (bad) mov sub out jne lds mov or push mov loop icebp rorl mov push fs repnz xor out cmp adc and adc shr les pop rclb std sub lret fisubr xor xor mov and and sbb push add pop xor hlt aas jp icebp es loope fwait mov pop pop sub ficomp cmp dec mov inc icebp push push div leave adc xor add sub add mov fs mov ret pop dec (bad) loop mov out adc and scas gs mov jnp xchg popa sub pop mov fwait cld ljmp mov inc cmp push cmpsb dec mov jge jl adc mov cmc ret pop je pop sbb test or mov lock jmp mov or and lock iret out enter xchg (bad) add xchg sub test jmp adc bound lock fs (bad) dec out dec jmp out sub pusha bound add fistpll idivl in (bad) vmovaps jmp sarb mov test pop mov ficom repz ljmp mov push or dec add pop into xchg and clc insb popf lret sub in and sub and mov push cmp pusha (bad) test or mov jne std mov mov cs or sub or sbbb repnz icebp jg push stos clc mov mov and lret and mov mov jge jmp add cld cmc insb push mov mov fsubs mov mov cli or cmc dec cmp or sub pushf fucom aaa pop loop loope jmp ljmp cltd movsl jmp fwait xchg and jno (bad) xor xor dec popf xchg mov cli fistp stc cs fs pop mov pop mov pop cltd sbb xlat mov fiadd imul notl les (bad) data16 pop sbb outsl xchg sbb dec call jno inc pop lods loop mull and xchg fistpll (bad) pop dec cmc xor add (bad) rcl movsb outsl sub lods (bad) pop push jne dec push sbb mov pushf and mov ret mov xchg push enter imul dec (bad) jmp into add push inc adc test push fistpl (bad) cmp fdivp jb aad (bad) lahf pop and loopne sbb pop dec cmp mov imul pop xchg stos aad cmp movsl insb cmpsb lret icebp fist dec xchg pop sub shrb jp inc out xor popf dec mov pop stc stos movsl std nop ret adc mov loopne pop sub popa sub jle pusha and push movsl pop mov mov in mov divb push push das push mov dec loop cmc dec adc sub or push push or hlt pop push jge mov cmp rclb or pop faddl fcmovnb mov repz push js ljmp mov stos jno and jnp dec mov pop inc pop or pop push imul pop sti sub and xchg jg cltd xorl cmpsl mov xor inc jmp sahf mov push jg jns xlat and mov mov jle addr16 jg jge pop fistpll sbb into jl dec (bad) repz dec mov (bad) mov ret jno ret cmpsl pop hlt das jmp adc bound pop mov fucom add dec ret sahf cmp (bad) repz mov mov bound or negb ljmp jo pushl push lods or into dec and push pop idivb sub inc movsl (bad) mov cmp pop xchg lret mov addr16 lahf or rcrl xor call mov sub iret ja js push cmp out pop or add pop push fimull in pushf xchg (bad) out cwtl (bad) mov jno (bad) movsl xchg adc cmpsl dec aam call add mov (bad) push pusha test sub ret mov or cwtl or out push adc rcl mov push mov sub in mov dec mov jne in loope leave div loop repz clc dec mov repz xchg mov stc rolb pop loop add cmp sti aam mov push push lods mov jne je mov xor rol leave inc outsl add (bad) (bad) xor xor lret sub pop dec dec std mov out lea xor sarl and xor xchg xchg push popf test insl sahf aas inc lret stos cmpsb pop push into push adc mov sub push jno inc and pop cmp inc xchg ljmp xlat push add int outsl (bad) shrl mov mov decb ret sub fimull mov pop and orl das clc sub out iret in cli jnp (bad) jmp push inc jge shrb xchg aaa or ljmp jmp pop sub mov xor ljmp dec lock push lahf fdiv leave pop push int3 (bad) adc push repz sub notl daa mov push repz mov in adc sub icebp fidivrl xchg mov ror add adc mov scas lock ljmp outsl dec je add (bad) and or xchg sbb cs out jmp dec lret dec jmp sub cmp mov or test cli lods push cmpsl test call dec inc push loop test popf add adc sbb jp sbb sbb pop jmp xchg pop jmp lret lods es or dec test movsb mov iret out and mov jo mov jl repnz mov xchg scas cltd movsl (bad) jo inc sbb push pop mov sub sbb daa movl mov or sbb sbbl mov inc jp icebp jp push sub or push pop popa mov mov ja lret fcomps jno test mov cmp or add inc mov lods sbb xor pop stos cmp xchg fwait and pop out mov cmp and insl mov mov xchg fs or mov pop pop pop pop pop adc popf rcr sbb das xchg arpl pop xor test adc lea in or jmp ret mov adc ja sbb imul shlb ret bound sbb cmp outsb les icebp out in jmp mov mov xchg cmp push mov cmpsl popf dec fisttpll jle add and ss iret push gs mov pop push leave aad inc imulb push lahf stos es add ret mov and clc daa clc inc pop ret ljmp (bad) mov test mov push test repnz xchg push adc cmpb jb pop stos adc (bad) mov adc add je test mov mov pop dec xor push jle and cltd jne dec and test and dec inc bnd push lods (bad) out xor push sbb push jmp aam inc pop je iret loop xchg cld mov xchg testl in sbb je cs add ret sbb jmp (bad) xor dec stc test ror dec fneni(8087 jnp (bad) mov lods out pusha data16 push mov scas repz or in pop lea int3 and pop pushf imul dec scas fnstcw pop imull mov outsw sahf (bad) in mov dec cmp decb scas lea jp shl push pop ljmp push je fistpll lcall sub mov add fwait (bad) das xlat lcall pop jbe rcll into cmc ljmp jns mov test mov jmp sub cmp add arpl sub cltd loope outsl cmpsl xlat jp adc mov nop xlat xor into add mov stos cmp dec mov int3 js (bad) jne,pn in xchg addb mov test mov pushf jne repz cmpsl mov xchg add pop jno xor jle ret sub jmp or rcr cmovns push test sub out je pop pop jns clc push lds (bad) or gs add nop lods add mov data16 test cltd cmp notl pop gs movsb push mov cltd and mov xchg cld aad subl stc and xor imul outsb out popf dec dec jne and dec pop cli lret ljmp (bad) pop cmc call out or popa icebp xchg dec jbe jp int3 jge xorb out pop or mov mul (bad) mov or xor jbe add jae cmp adc popa das lahf fstpt es repnz jg out lock into lock stc out cmp xchg dec (bad) jno testb xor scas fs mov ror sub cs lcall add stos pop cld add insb (bad) decl mov pop push mov or mov in das cltd xchg sub pop popf scas std xchg jp roll adc adc sbb aas stc add test sub stc and xor out cmp es inc pop mov test pop jecxz adc push int3 push mov stc or xor xlat jno inc out mov and jae rclb pop push sub idivl hlt in sub mov stc clc cmp mov out stc cmp mov stc xchg cli popf mov out pop aad pushl test pop xchg dec mov sub xor or fcoml repnz xchg jle in mov cmp gs das push inc cmp popf std xchg in mov sti push and bound rcll jp fisub daa out mov xchg xor fwait out addb xor xchg adc adc ljmp lret sub xor or sti xor mov sub mov sbb push and jle rorb (bad) ja in jae fildll dec or cwtl mov push (bad) stc xor push ficomp and or iret mov mov adc push gs dec ret (bad) (bad) mov cmp into fstl dec enter jne nop in int3 mov fmull leave xor ljmp loope imul fcomps fdivs sub cmpsl inc mov cltd shrl ljmp pop out (bad) jb push sub (bad) jns mull push or mov sar stc mov data16 push push dec (bad) jae repz dec mov repz movsl inc push inc popf js xchg (bad) dec pop pop add sbb mov lods jmp es and push (bad) add ret aaa repnz pusha and sbb out out mov test push stos lret xchg pop loopne or mov add sub daa decl xlat push movb cmp cld xor mov xchg xor es mov jl imul and ss incl inc xchg (bad) push mov pop aam pop jp arpl push push lods xchg or hlt mov jb jnp dec lcall jg mov leave pop mov push mov jle push icebp or push pop clc aas shlb sbb jp mov pop mov mov xor xchg mov push and push fisubl iret or clc jne lods aad mov pop mov add cmp or mov lea sarb dec xor (bad) scas flds insl enter fisttpl add iret push mov push cmp sub push lds daa jo and mov dec push push xchg cltd sbb dec pop inc pop sub loope pushf adcb fstl hlt sbb cmp cmp (bad) or je scas mov add and push testb adc mov mov ds xor imul or add push divl xor sbb or adc insl inc xchg mov xchg sti dec ss nop hlt or repnz xor push push outsb lret push push push nop int leave orl jb jmp jecxz pop jmp sti (bad) xor add ljmp mov fistpll mov jmp mov imul addr16 out mov (bad) xlat (bad) or lret stos mov push dec push sub lock jg jmp xchg and pop cwtl jbe int sbbl add mov in stos pop push ficomp cmc in xor aas lock lock or dec lret cmp inc cld imul push push mov daa jae mov nop add pop fisttp rorb aad add (bad) (bad) shlb jnp push mov lret fs jmp lea sbb rcrl ret in xlat dec std inc (bad) add mov adc (bad) movsl and lods add sbb jg pusha push pop xchg mov shll cltd or fisttpll das mov cmp mov cwtl adc push in repnz pop mov mov loope test jbe xor or sub jns mov fsubrl pop jg xchg push push jecxz jns xchg shll leave mov lret sti sub sub aas xor pop sbb repnz shrb fsubs and pop or and mov ss fs cld shl negb pop cmp or outsb mov idivl loope cli repz adc stos lret xor xchg lcall je scas fdivrs push fidivr cld andl sbb sub call sub mov neg push and repz mov ja adc inc test and or sbb or dec mov loope in popf jnp cmp cwtl mov xchg inc lahf iret inc sub arpl add mov int3 pop jmp notl cmp ret cltd in cmpsb test add push lods or mov arpl add fimul add cmp dec jecxz pop (bad) or jl arpl lret leave fldt rclb (bad) loopne not icebp bound sub jg xchg int3 sub sarl pop daa (bad) (bad) mov ljmp jbe enter push lcall ljmp mov sbb scas sti cmc dec mov les xor sub (bad) mov les (bad) mov pop icebp loop mov pop mov popa xchg sub mov inc cmp mov jnp not mov cs mov icebp lds jo mov xchg adc mov les inc mov push pop add aam aas jg popa jno xchg lods push add lock xchg sub jne cmpl les rcll insb xlat shrb push adc xchg xchg hlt insb cmp dec imull push pop or push mov mov mov movsb movsl mov out sub dec (bad) push mov add out push mov dec push mov mov jnp sbb out push add inc add pop xor jb fdiv pop pop rcr push add shl cmpsb xor xor ret push xchg sar aas (bad) or shr iret add imul pop sub xor cmp ret and movsb stos pop mov add cld adc push mov addr16 push and adc jae in in ja jl mov adc pop dec dec add iret sbb sub cmp fstps cld inc and push jg push mov sbb pop pop dec inc cwtl ljmp popa in or mov adc sbb dec loop mov fdivrs xchg call sbb mov hlt bnd cmc outsl inc add out int push aam sbb ret daa jb add add dec pop adc inc loope pop xor lock inc lcall add rcrb cli das ret or cmp mov rcrb inc and sub stc and cmp or sub test jle lret repz pop pop add popf ja cmp imulb mov xor int3 mov xlat pop add test (bad) lret out inc sub xchg cmp xor mov pop (bad) divb mov xor fucomi ret push insb les sub lahf sti and xchg enter xabort movsl lods lcall lods bound and sub je cld outsl inc dec mov dec sub outsb and xchg jnp adc int sub shrb in xor add xor pop (bad) aam jns hlt mov sub (bad) lock cmp mov push cld out dec mov std mov imul icebp adc add (bad) test (bad) jmp jl,pn adc jecxz pop sub cmpsb sbb ds dec push jo mov cmp aad cld xor add loop (bad) xor push pop inc bound cli aad jne push icebp add imul add xor mov jae das std sbb bound sarl push icebp inc sub push jge lret lock lods test sub sub or rcrb ret adc dec (bad) add aaa mov sub pop mov jns in and inc cmp or (bad) mov mulb (bad) dec xor leave mov sub std mov out push inc mov add data16 iret jmp ljmp inc cmpsl push imul rorl dec pop divb outsl leave add add sub stc cmc test mov inc mov mov pusha stos (bad) push mov clc iret repnz adc stos lret push jb ret mov bound add aas shll lea push add xchg xlat or fistp push mov (bad) cmp xor adc or je lcall push out (bad) lahf and sub push dec pop enter sub xchg (bad) cmc fcomip fsts cmpsb push or cltd jmp (bad) out into into dec jne ret mov mov mov push into pop jp and push mov mov push pop (bad) sbb push pop dec lds stos jmp out nop and jge xchg sbb dec repnz cmp cmpsl cltd adc fwait je push adc pop pop scas pushf mov jl (bad) pop js add sbb cmp dec jnp add pop mov mov pop push es xchg push nop fadd cli ret mov les add (bad) push push test repz pop aaa xchg jmp lods sub push xor mov cmp jmp pop pop fwait add mov out sti inc mov mov sub leave and push jo je pop out (bad) sti mov fstps data16 mov pop add or out push inc or xor frstor (bad) mov int3 mov rcl faddl or xchg mov ja and cmp xchg (bad) addl ss xchg repnz in jl push add pop ss iret ljmp loop xchg dec mov cs jg mov ds mov xchg cmpsl fldenv or lea rorl pushf imul push mov or mov call xor pop out xor mov fstp daa les jmp mov mov ficomp push or and or out les sub pusha add add and sbb (bad) jno mov and repnz add pop loop leave (bad) pop pop (bad) gs mov mov les ja xor xchg and scas cltd mov mov subl gs mov loop mov add (bad) cld xor decl xchg adc (bad) adc pop sbb xor scas xor repz pop jp cmp scas dec arpl sbb daa aad jae out (bad) mov jecxz icebp push (bad) out pop repz mov jne add adc out cmc jnp daa adc mov into mov adc push push sub mov add icebp ljmp adc icebp pop mov arpl pop (bad) mov jmp pop mov dec adc mov divl scas daa jno mov lock fdivs mov dec sub add or mov mov daa outsl push sbb bound mov insl fwait outsb xlat ret or movsl imull mov call xor imul mov outsb pop pop cmp push daa xlat cmp sub in and sbb icebp inc mov xor jl pop bound icebp lea out sub dec rorl mov sub sti xor out testl shll xchg int sub jne mov aad sub cwtl and xor push fwait call jbe pop inc mov (bad) and mov dec jns mov add dec pop into push inc divl mov fsubs or movsb or xor lahf push in jbe scas sub aad lret or ret mov add add and sti gs sub mov sub (bad) push mov push lret pop dec and sar aam xor scas xor (bad) sub shlb or cmp xor hlt and add fisubrl and mov pop sub sub or icebp rol inc dec lret bound (bad) fnop or incb movsb movsb daa lcall push (bad) jne call sub gs pusha imul (bad) jbe push xchg out xor icebp cmpsb adc outsl (bad) cltd pop xor or ja jbe push mov mov mov fistp and xor adc pop add lret cmp (bad) out xchg jne notl mov jnp ljmp lods sub popf fwait (bad) repnz pop adc add daa stc cmp dec mul jbe mov cmp jno (bad) xor stc test and mov sub jnp daa push outsl pop pop fsts movsb test mov add and dec sub inc mov mov shlb iret jnp adc mov sti mov les bound push lods inc pop call pop mov enter xchg dec adc sub xchg in pushl adc pop mov add mov jae pop dec mov dec mov mov sub scas cmp mov jecxz pop call out movsb mov mov xchg gs sub cli jno pop cmp imul cmp mov sub das clc sbb sbb mov mov fmuls fimul not inc daa xor stos jno add jno sub lods dec bound sbb dec dec shrl subl sub pop test jl loop xchg cmpsl dec pop adc mov xor shld (bad) out push mov mov ret push xchg xor shlb dec rol stc mov sbb mov inc lds push cltd and fs add mov out das in xchg lds pop enter sub int3 (bad) lods shll repnz js xchg inc aad push pop shr rep in add in mov xor das pop iret pop and mov iret aad pop dec idivl mov push repz pop xor fbld repz loop add push add or pop loop and rcl and fldl lock movsl movsb outsb in repnz add xor test mov xchg mov cld or mov mov movsb inc lods out add sub iret xor mov sub ljmp push xor push loop ja push cmpsl incb adc std lahf (bad) xor lods dec pop push imul dec fdivrl jne arpl repnz imul sar jge xchg adc cs add insb (bad) mov mov (bad) jbe inc cmpsl and xchg imul lea imul jecxz inc fcmovb inc mov fmul lret push sbb (bad) call mov out shll out push xchg (bad) mov pop data16 jo mov hlt dec push jmp xor jne jmp mov mov inc xchg mov adc adc xor adc sub lret icebp cmp (bad) (bad) leave jnp mov out adc mov ljmp in xor add add test mov adc cli xor mov mov iret (bad) (bad) xor mov out mov or call xchg mov jbe xor repz mov xor es jne andb pop outsb cmp or jg pop pop repz mov out and adc or sub add iret roll or mov (bad) mov sub mov in lods out mov ja cmp (bad) xor cwtl pop and incb cmp (bad) xor jmp mov dec fsubs fs xor add outsl sarb and neg pop and xor jmp sub dec pop dec or shrl repnz dec mov wrmsr mov iret rorb scas arpl mov call outsl ljmp int aaa fdivrs dec cmp pop and es out inc xchg vmovsldup xor aam pop mov cltd ds sahf mov pop add jmp push ja insb cmp bound mov loopne sbb jns loopne loop mov (bad) clc test pop mov cmp sti icebp loope lret jle and call cwtl call int3 fnsave pop shlb cli aad mov leave loop ffree or sub pop repnz icebp xor mov movsb sub pop push add cmp add mov out ss push jmp sub negl fimul pushf fs int3 sti lods and movsl je and sar pop pop mov sub repz cmp int test into shll or push sub mov decb rcr adc and sbbb stc out js notb ret pop rcrl push or mov or lcall push outsb aam stos pop stc stos sub pop leave imulb adc sub pop cmp jmp or out cld les clc sti addr16 imul pop into jmp mov stos and mov rorl shll nop ret nop lea sbb pop push pop icebp loope and and pushf movsl sbb sbb inc inc mov xchg jns outsb mov mov inc lock push lods or pop mov pop lret pop cmp xchg mov inc rclb jns mov jns gs stos push pushf mov dec daa inc mov out sub rcrb sub xchg std sbb mov int3 push push or dec mov loop sbb cwtl jbe (bad) mov xor pushf add ss pop pop cltd xlat mov jae ficomp jp cltd das ja lds icebp xchg cli cli mov aam inc divb and les neg test pusha es mov pop pop (bad) gs and movsb cmpsl sbb sub scas xor mov push mov sub stc mov push adc xor sub test (bad) mov mov push jmp daa pop adc pop mov sahf adc lods dec repnz aad jge sbb and mov xchg fisubl mov add xor xchg out sbb stos aaa cmp lcall xor neg xor mov jl (bad) int3 mov outsb pushf nop (bad) mov call add pop loopne sub sub adc (bad) fcompl dec sub loop pop shrl dec bound dec adc std std pop or sbb sbb sub rcl (bad) mov fild adc or add aaa iret jbe outsb sahf rol loop push (bad) and inc idiv aaa xchg mov mov sub lret adc orl (bad) xor pop xlat sahf into sub (bad) (bad) out dec std pusha and fstpl add mov push and (bad) int push xor mov je fildll xor mov sbb cmpsb or (bad) and mov cmp (bad) dec pop clc mov dec mov (bad) sub lods popa xlat mov lret das adc sub mov packssdw mov cmp or jl daa cld ret scas xor test into or lods fbld lods cmc xor mul inc in pop in push pop and bound add mov xor stc pop inc push loop mov movsl repz mov dec sbb and test add lock std cmp out inc ss push pop dec mov nop sub xor cld dec shll lds cmpsb jbe cwtl call push mov mov sub add jmp cli loopne sbb aam pop bound (bad) ja lret mov aad fnsave mov lret mov das lods and (bad) into jmp call push mov movsb andb insl inc ja xor xor jmp fcmovbe rorb (bad) iret mov add adc mov imul (bad) out insl xchg push and cmpsl cmp xchg pop ds addr16 push pushw mov (bad) mov or xor push (bad) loop xor pop cs sub lcall (bad) ljmp jge sti sub mov jnp pop pop loop xchg push aaa lret dec xor pop jmp mov mov mov mov xor js test and add cmp xchg pop push sub sbb js pop pusha inc icebp pop and inc and sbb gs inc jmp push pop pusha fdiv repz push js inc insb mov sbb out div (bad) dec mov jo pop pushf std jb fld xchg loope lahf in lds mov sbb cmp call (bad) cmpsl pop in scas divb insb dec in sub cs xor push adc adc adc mov dec (bad) mov xor popf push outsl icebp or lahf pop out sub cmp sarl test ret pop movsb push sub mov loope and mov fisubr jle (bad) mov lods mov lret loop enter loop cmp adc or fsubl in jmp and and mov jmp pop es push add imul push pushf sbb repnz sbb jle pop xchg jbe loop add int jnp xor ljmp and bound dec sarl sub stos data16 loope call lds data16 mov push sbb push add fsts dec add mov addr16 (bad) sub mov pop pop mov or cmp pop cld adc rorb jmp js pop fs ret mov inc inc push mov and clc out fnstenv dec hlt adc mov sub mov das dec popf pop xchg sbb and gs mov dec (bad) movsb lret ja iret popa mov xor sahf dec dec mov sub imul push xor sar xchg mov mov push mov sbb sub mov (bad) lea popf xchg shrb jmp dec lret inc int3 pop add xor mov cmc dec add bound and bound insb cli sub int jb and rcrl into push adc cmp sub add sub stc cmpsl iret inc rolb add popf jne leave mov call adc mov fdivp xor repnz arpl inc adc or repnz pop dec pop mov out bound sub mov jp dec fs mov lock dec dec in jge lahf mov les aas lea out xor inc mov add inc pop stc lods or neg adc stos lret jl jo push lahf je leave jle ret (bad) mov jp je jae xchg xchg cmpsb add pop adc jo xchg outsb popf mov mov aas sub (bad) add xor jns dec jg jg cmpsb (bad) pop aad stos cmpsl push dec or add je les (bad) cltd mov push sub jle adc out das fdiv pop pop loopne mov mov daa pop ss xchg in inc movsb mov pop call addr16 dec jo adc adc clc sub add repz or test xchg mov mov (bad) and dec sbb fs out mov iret (bad) out outsl adc xor xlat mov das stos xor fdivrl mov mov pop xor dec sbbl leave sbb loopne mov aas cld (bad) fistpll out cmc push xor (bad) idivb add push mov jge xchg int3 rcrl sbb sarl add pop into bound fistl in xor mov cmp aas mov or cmpsb mov adc je and insb lea (bad) mov add pop mov and les ds mov or das cmp dec fidivr in mov xor js mov pop mov xor mov pushf iret sub add sub mov in movsl jge (bad) fsubp jecxz movsb or scas mov mov jecxz adc pop stos out pop out sub pushf xchg jg or sub aad mov dec xchg xor sar das push pop (bad) or and xor add ret xor push jbe repz xor dec repnz ja aad scas adc lds loope cs xchg pop push loopne mov popa cmp iret dec call jmp and pop test dec inc xor mov mov cmp mov into jns test sub xlat loop lds mov mov jno or imul lret add mov lahf push lret and add mov inc (bad) icebp and mov rclb inc xchg jl pop or lods cs je push jns dec out xlat in or pop fucomi add push sbb movsb pop cmpsl xchg mov sti fs cmpsb cmpsb dec stos sub add mov hlt sbb mov mov inc pop lock mov out xchg gs (bad) dec pop stos xor mov or xchg xor jmp popa out and add dec cmc into jmp xchg loopne sbb fnop enter mov and (bad) sub add ja fs sub ljmp div push enter push sti push movsl inc into pop out loope roll mov dec test hlt push lcall adc sar add call sub xor nop cmp inc xchg cmp push or or cltd imul out mov cli fs sbb outsb fnstenv jg loop leave daa xor mov jmp and aas mov ja push mov into and jno pop into (bad) popf sarb mov xchg stc mov aas xchg push xchg (bad) and add xor jmp pop aam push mov xor lcall dec icebp mov dec lret repz fadds lods sub and fld jp pop xchg test cmp or push jno imul and negb sub cmpsb stos gs xor fstpt jecxz xchg dec xchg je jo sbb or scas jo mov inc push pop jge pop lea cmpsb mov lock sbb and pop mov mov arpl mov sub mov xor leave loop (bad) mov (bad) mov xor jecxz lds repz and movsb mov and xchg insl aad fbld pop push cmp sbb jne mov push loop cmp adc fsqrt dec pop push cmc fbstp shll push adc test sar out sub sbb xlat cmpsb (bad) rclb cltd out bound mulb and mov enter imul xorl xchg inc cmpsl je out sub sub ret sbb sbb sub sub jnp ljmp ret (bad) rcll mov shll mov lret cs popf xchg scas or ds lret lret push arpl fmuls mov (bad) icebp xchg xlat xor xchg jns pusha int3 cs fs imul adc cmp pusha dec sub xor icebp mov fldenv jne popa jne std ja cmp movsl orl ljmp fs out sub sub mov sub xor loop aaa inc les push add xchg mov xor xchg sub push data16 xor pop cwtd pop (bad) jne je jmp sub sahf sub push xor add mov faddl xor out pop repz divb fs cmp sub pop sub mov xor or adc lret xor mov mov jmp sub inc aas mov xchg cwtl sub (bad) jmp pop mov mov aas mov mov pop ret popa lds and pop int3 pusha incl hlt cli mov xor imul mov adc mov adc cmp lcall inc out dec jecxz or and push inc sub lods std xchg hlt cmpsl jne xchg mov int3 pop movsb test (bad) popf in das int imul pop mov pop repz movsb sub jmp (bad) cli call push jl das pop mov adc test ffree cmp xor mov (bad) (bad) hlt icebp lcall sub mov dec push sbb lods (bad) mov add adc ret jo or sub mov mov xchg cmpl xor add ja jbe je dec out sub mov ljmp jl jo or ret sub idiv fnsave fiaddl pop add pusha push push jbe loop (bad) mov call add jmp out int3 or stc sub lret mov pop push je popf mov mov leave cmpsb adc and (bad) xor lea icebp pop mov inc nop pop mov scas cmpsl in adc jne mov sub adc out and imul xor and xchg xchg mov adc mov sbb push jns adc mov add mov sbb adc notl ja push (bad) xor call icebp sahf dec push pushf inc cmp rorl xchg mov mov sahf push gs shl (bad) daa add lds mulb push out xlat sbb push mov mov in pushf dec mov out or movsl clc jl lcall popf jnp sub sub ds daa divb dec cwtl and xor data16 cmovnp stos sub mov rcrl fldl2t dec aas jns cmp loop or bound ljmp pop popa push bnd lret fldl adc scas fs loop shll add jnp cltd mov lcall cli pop out xchg add pop incb xchg xchg push jmp in (bad) loopne out xchg pop loop dec ret fidivrl out leave jecxz adc jmp mov out sub adc push push sar int3 jle xchg xor add (bad) pusha les arpl test repnz jp sub xor in mov push fisub mov scas xor cli mov xchg cmc push dec mov ret divl dec push sub mov push mov loop push push or std xchg jecxz cmp sub dec repz cs outsb xchg mov in mov add popf pushl cwtl out popf hlt jge sub jmp or jno rcrl sbb (bad) adc push popf dec jp nop int3 xor dec shrl xor in lods dec (bad) lret test enter add mov ds test mov gs scas divl dec repnz xchg loopne pop add pop add dec out mov xchg add sbb aad xchg mov add and ret iret adc add fs int3 mov fdivrl mov cs inc test je pop notb ret sub cmp loopne cld mov pop pop cmpsb sub stos mov or call repz lret mov pop pop loopne add fimul pop mov dec push shrl push out mov dec xor out adc add fnsetpm(287 cli lahf decb pop out rorb adc push les xchg jne push out mov loop jmp pop cmp mov iret icebp ret push movsl push jo jmp dec loop and push adc cmp dec in mov leave push popl stos sub mov testl xor in popf bnd inc ficompl int and mov dec push popl pop sub mov stos cmp lret pop pop xchg xchg adc (bad) dec xchg sub out stos cli divb out xor sub fisubl lret xor adc jne push mov icebp iret imul xor xchg (bad) hlt lcall jl adc dec pushf iret mov fnstcw idivb inc mov int pop adc stc (bad) xchg jl mov loopne cli mov out fdivrs stc and ljmp push sub or shr pushf aad and lret out daa lcall push xchg imul rorb mov sbb dec aam daa xchg pop or imull (bad) fdivl pop dec adc pushf mov or push push mov adc xchg mov mov mov mov sbb ret push arpl repnz rcll jmp jecxz repnz int3 in and inc sbb mov xchg (bad) fdivp data16 popf push xor pop or aas dec std sahf lods outsl ret and mov notl or fbld dec sub jl sub test dec mov mov stc sub adc sahf push mov (bad) xor xchg inc icebp pop repz xor mov mov and adc cld dec movb push mov pop pop idiv mov mov das cli push int js mov jae ds dec jno xor leave sarb movsb adc fwait pop cli lret mov add or mov (bad) aas mov stos nop add mov cmc or cli adc xchg fldl movzbl cs xchg clc adc xor cmpsl into add fdivs rsm loop xchg mov dec clc inc mov xchg adc clc daa cmp mov sub fdivl cmovb xor mov pop adc lahf rcll mov out lods pop (bad) sbb data16 imul pop out xchg cld push mov ficom xlat in ret scas ljmp mov sarl mov and pop xor inc rorb sub sub lahf xor out outsl cmp sub cmp push or je pop pushl dec repz stos sub adc cmp ret lcall add mov or sbb les lock rcr movsl push adc fisttpl jmp leave mov (bad) shrl adc frstor sub jle inc xor push lret or mov fs (bad) shr cwtl mul mov (bad) mov adc out jns insb and dec movsl lods adc popf pop add mov ljmp sub mov ljmp push add es cli jmp rcrb and or cmpsl jg fucomip and leave das lret xor (bad) dec div mov xchg inc pop mov xor and or sub pop outsb xor mov jg fidivrl ds (bad) adc sub out repz or xor adc dec push mov clc aas lahf xchg jg out mov js sbb repz sub out ds iret mov aad jmp data16 or jg mov in repnz enter outsb imul pushf jb push lock mov mov int cmp mov sti xchg push cmpsl xor sub jb into pusha out (bad) xlat or xlat pusha add pushf xchg fild xor pop sbb and inc movsb mov and leave popf outsb xchg mov xchg jecxz lods jp rcrl dec in cli add xor adc push repnz sbbl (bad) stc lret (bad) mov xlat adc pop and pop mov xchg lds mov mov or xor add lahf or testl adc mov scas adc jle and and scas test movsb lods mov pop shrl icebp jg add (bad) jge mov push push inc pop sbb xor inc adc jl cli jle sbb push test lahf fmulp (bad) (bad) out das into stc xor mov out mov jmp (bad) ja sub push mov push fldcw js xchg aad aam cmp bound cmp xchg cwtl imul sahf int pop and out dec in imul dec mov and sbb sub and dec (bad) push mov inc loop jmp push dec mov (bad) movsl inc push lret scas xor sti (bad) push dec nop dec jmp out mov (bad) xor sub pusha push and sub rol mov dec mov js cmp shrb negl out sub cmpsl idivl cltd lods mov (bad) xchg sbb sub sar movsl adc dec sahf mov fcoms rcrb adc jno iret dec xlat xor pop mov decl mov out fs and out mov pop xchg std pop or jns inc sub push mov (bad) lret add inc lea jmp out lret mov andl pop repz xor xor pop rorb sbb in inc mov movsbl dec loopne ret xor in mov fmull mov mov mov xchg (bad) (bad) push mov adc call mov push popa ljmp dec jno mov cs mov adc push sub cmc shrb popf std sbb or test jmp dec xchg push pop lret xor mov stos lods cli and xlat jecxz lock mov adc mov cmpsb loope in outsb fstp out leave (bad) sub repnz neg test xlat pop or fbstp rcrb push and pop pop sub adc cmp xchg push test sub mov xchg shlb (bad) and mov or jnp xchg xchg js mov jl in mov popf xchg mov (bad) dec scas mov sub mov sub enter decb xor push rorl dec push cld push fcomps stos pop sbb sub and inc jno inc cmp pop cmp push icebp imul or lret aam cmpsb sub cmpsl sub cwtl jmp adc dec divl lret scas add mov sub xor add or negl nop ret push pop (bad) push leave and and and inc xchg xor mov adc cli scas fldenv fidivrl sarl out sub xor and push xchg repz dec bnd sub xor imul pop mov mov repz add or cld push stc mov and sbbl shll flds cli dec mov fsubrl mov movsb shrl sub dec mov fs and mov add jns test fstps push jnp scas adc pop test shr cmpsb lcall add push leave xchg icebp sub jl pop les cmp sub test sub sub loop (bad) jg (bad) mov das fptan loop shll cmc push je into jmp pop aam push cli mov inc scas mov dec cli xor fmull lods and jle jmp aaa in outsb push jmp pmaxsw jae sub xchg or int3 sbb out fnstcw rolb (bad) ljmp shrl fnstenv (bad) lock add aaa xor jo adc pop xor (bad) adcb add push jnp and jb and cs mov aam fistpll fldcw or push pop lods movsl fbstp scas repz sub repnz ficoml or popa or cmp cwtl xor pushf mov sbb out ficoml pop gs jmp leave xchg enter xchg stos and add sbb pop ja stos (bad) fcmove mov pop test mov jne rcll adc or mov iret push sahf bound add aas ja aam icebp xorl movsb rclb sahf rclb icebp stos loop (bad) adc add mov incl bound fneni(8087 sub addb or sub mov (bad) and (bad) out out in cmp jp js daa sbb sub mov ds xchg cmp icebp mov gs pop sub das sahf add repz push mov movsl in and clc icebp loope sub roll pop (bad) (bad) ds inc mov mov ret mov (bad) cli cltd inc (bad) sub sub pop mov out out cli popf cmp cmp xor pushl pushf repnz mov mov lds and testl xchg fucomip fnsave or cs mov ds (bad) xchg pop (bad) sub int3 aas jne xchg mov aad cmp push xor test shlb adc mov test push dec stos cs pop xor shrb bound repnz push gs jb les clc mov aas loope jg ss fsubrs stc dec imul mov or addl add ljmp out pop repnz (bad) in sub ljmp das push pushf mov (bad) loope sub mov out sub sub test idivb jg cwtl xchg out ljmp pop mov xchg cli mov push leave and mov mov (bad) outsb pop xlat jmp je push cmp dec mov sbb loop scas (bad) repnz stos xor sbb add mov (bad) xor push mov pop repnz mov sub push jl (bad) notl adc mov xor ss push sub sbb in jmp out in jmp add xchg popf pop sahf fwait mov aaa or xlat out mov xchg into insl mov push dec pop mov jo push pop or sti push cmpsl inc jg dec dec popa sub or push dec sub xchg dec cmpsb or icebp mov mov jecxz mov test (bad) mov mov push mov sub add sti mov cltd mov sar mov pop push mov movsl adc and ljmp and xlat cwtl xlat mov dec mov test ret or xchg xchg sti cmp cmpsb scas inc and add shll hlt push leave (bad) test (bad) lods jo pop sar addr16 (bad) stc (bad) xor xchg xchg adc and jl ret jbe pop and mov push insb mov xor mov add loope sub movsb inc lcall or test xchg adc and push sahf xchg lock ljmp sub fldl pop shl imul mov add pop lret xor sarb int dec rcr and mov pop mov (bad) gs ljmp inc or roll sbb sbb sahf and mov pop test std and outsl push fild xlat dec mov adc sub das repz and stc leave popa mov jmp cmovg mov xchg mov hlt in stc or inc in das pop loope std xor pop jne nop xchg lret lahf insb ficoml mov shrb cmp sti cs mov addb or leave pop inc pop inc or rep mov (bad) out push outsb cmc push outsl sub adc cmp push fisttp push and adc dec mov lahf test adc (bad) xor out stos xor pushf mov (bad) jb xchg xor (bad) fsubrl push (bad) pop xor mov xchg loop add lret sbb in ret in mov sub popa insb mov jno or mov mov (bad) mulb popf stos mov in subl jmpw add clc xchg push loopne or push adc mov (bad) out fucomp (bad) test inc cmp (bad) popf jae adc lret cmpsl push imul jns sti xor dec ljmp push inc mov icebp lahf pop xchg mulb (bad) in lret push sub (bad) push (bad) (bad) gs and mov inc aas arpl mov sti or (bad) jbe cmp mov adc and (bad) and fnop loop xor and lahf jne insb inc jg idivb lds outsl inc jns inc lret aaa imul sbb inc push add and test stc stc pop lret jmp adc jb jns lret arpl add xor aas mov inc pop fidivl cmpsl (bad) xor mov sub push inc or scas mov mov jns push cmp ds push icebp sub out stos mov and and lahf jle les push mov push pop lea mov (bad) out out or push dec lahf xchg and mov ljmp and ds sub and repnz mov repnz xor xchg ret sub mov cmp aas cs sbb xor jg add out mov push mov in imul (bad) testb aas sub dec mov cmp pop push les es adc loop xchg andl cltd cmp stc sbb jb je stos sbb xchg and inc lea xor clc sbb push mov loop lds push mov xchg roll dec jo or xor (bad) xlat xchg scas out mov movsb mov or repnz mov inc push ja es sub push cltd insb dec pop dec sub sub int3 pop xchg shrb pushf icebp or leave xor ljmp xor mov and ljmp test fcompl mov mov fidiv gs mov aad cmp or push cmp or setae lock lret lahf pop mov pop imul mov enter xchg out popf clc sti dec add dec or xchg mov cmc xchg push sahf and xor jae popf xchg enter jl add in sti dec leave (bad) jno or out lret jae push loope popf and lahf dec rclb mull (bad) iret cli sub ds scas call mov enter dec (bad) rcrl (bad) aas xor push mov pop clc adc push icebp test out sub or adc pop fdivl or jno sbb cmp ficompl sub sub xchg cld jnp xor xlat pop mov repnz arpl jbe lret nop sbb rcrb (bad) dec pusha arpl ret mov add inc pop pop xor rcl aaa pushf test xor (bad) aas adc in mov cld ret js mov pop pop into loopne pop pop pop adc cli add or cmp xor dec movb or shll and movsb outsb and adc or (bad) scas push or (bad) outsl add xchg add mov mov scas xchg lcall and xor scas repnz inc add lret loopne out inc sub xchg mov xor push repz daa (bad) in lds mov sub mov shlb repz cmp into cmp std mov or repz push imul lods jno fwait inc sub daa and mov xchg pop xor divb fimul xchg fwait das cmp aad adc and sbb adc push repz les (bad) sub xor push sub repz (bad) dec push mov jno inc or mov fcoml repnz movsb scas inc stos or fstps mov add or popf mov aas jmp retw mov pop ds sub mov lahf xchg fwait lds test sub xchg inc sub jnp mov xor and and mov fs and push mov in inc (bad) mov popa pop cmp pop stos inc push xchg mov pop jne push ja cs push pop push mov cmp jmp outsl push sbb pop insl jp inc xchg pop cmc xor pop cmpl lods adc mov wrmsr sbb pop add not mov add mov lahf inc notl stc jns adc inc push pop pop add sub outsb pop loope pop jge push mov fisubr dec rolb add pop xor xor repz add cmc cld xchg xchg iret rcrb and ret xor and push mov jne push loop lret ror push pop mov xchg fldl and test jmp or adc fadds push push mov add jl push mov xchg lret inc adc popf pop test (bad) cmpsl dec imul mov mov nop pop cvtpi2ps pop loopne add jge int icebp or shr not push or push pop imul test mov jo push cs (bad) adc scas mov push ss jno nop push jle lock aam sbb xchg test idivl push sbbb pop add addr16 or sub roll (bad) test and cwtl mov dec test out sub out xchg aam inc cli test or icebp adc loope push das dec mov std cmpsl std xchg sub dec cwtl mov test cltd jb ret lds movsl into xchg cmc dec mov test out add fstl test fsub into popf jl out or mov mov cltd add push xor jmp pop mov xchg iret stos cmpsb cli inc fdivs xchg in ret mov je pop and negb loope xchg test mov adc mov push push sub int sub dec jmp jg jmp shrl rol xchg out lea xor mov jne test push stos dec icebp cmp lret pop es jnp das ret lods push shll sub add sub push pop mov and adc cld loope add push add pop pop dec or pop repz scas arpl mov adc repz adc push jge loopne gs adc clc jmp stc (bad) pusha sub or mov mov ja mov out imul adc lock data16 add out cld or or ret test and sbb cmp push pop nop pop xchg ja dec pop shrb mov adc push aaa sub or mov je xchg cmp push out cmp xor inc push mov xchg test ffreep and and or lock pop mov cmp cmp jmp dec inc or mov pushf sbbb mov or pop fsubl jp push notb mov jge shlb adc xchg fsts xchg pop push test flds pop sub pop (bad) lds cmp addr16 or mov mov mov out sbb popf out pop jmp xor push xor fistpl into scas jno mov cmp (bad) repz mov adc notb push mov repnz lds out or sbb and es sub pop stc xor fdivp inc ret inc movsl push jp cmp fnstcw jb (bad) adc iret test cmp mov jle push test or dec shl popf dec test imul lcall jne pop dec div jl repnz in sub (bad) sub shlb stos mov nop test xor jl or or daa call cltd daa lret sub mov call sub add out gs repnz sarb jle (bad) rcll cmpsl into add jmp das out pusha pop (bad) mov jmp popa iret aaa xor mov mov mov daa and das sub jnp or add test sbb xchg (bad) mov push adc sbb and mov push cmp add mov int3 lret lcall sbb imul dec xchg sub mov sub dec xor lods sub cwtl outsb jbe insb xchg rol cwtl lods push and (bad) sbb xchg movsl popf inc lcall std and sub sbb loop sub mov inc aas pop sub cs shrb adc leave push cmpsl dec popa sbb lods ret xor cmp add mov or mov cmp cmc (bad) das je clc stos (bad) mov cs and xchg stos and idivb and jl xchg mov cmpsb dec mov mov cmp loopne rolb xchg or pop fist sub sub xor mov sbb orl inc cmp stos mov cmp push fprem1 or cs dec xchg lods outsb rcl cmpsb cmp stos sbb pop mov test iret jle lods ljmp ljmp arpl jnp xor mov mov xor and sbb adc push cmc scas mov rcrb shll and adc xor idiv aad and add lods aam pop cltd add xchg push pop or cmpsb rcrb arpl lock fist and mov pop cld add dec cli pop out or and or add out ja push movsl cmc (bad) jne xor mov mov push sti jnp jb repnz outsb test (bad) adc bound mov jge sub or xchg push xchg jo xchg inc addb add fstps push xor icebp lahf imul mov inc loopne mov mov adc cli fsts fcoml sub cltd dec add mov bnd pop (bad) dec ret gs dec aad mov jl mov mov mov ret bound orps out mov xor aam in pop add adc xchg xlat hlt add stos loop mov push test push or mov add iret and cmp repz mov xor dec fstps add ret or mov mov (bad) movhlps mov cwtl ss mov iret in sbb movsl inc and (bad) dec andb sarb xchg adc add or lret leave adc xchg xor or loope cs sbb inc xor leave jecxz xchg ficom adc mov loope sub cli push add add imul cli xchg arpl shll xlat fldcw out lret rorb cmp or fldl and pop into test movsb adc mov xchg scas mov pop add mov jno add lods and cmp jmp add lcall lock mov fstpl inc and sub xchg lcall popf xchg stos push adc or cmp out add repz sub or decl mov fstpl xor roll pop int or and mov cmp shrl or leave mov repnz ja and jmp jecxz mov pop insb mov enter mov (bad) in mov mov shrb iret or xlat push sub in enter inc add fldenv imul jle push insb test xor xchg sub sarl std pop add xor (bad) iret repnz xchg cli les pop add mov enter sbb jecxz pop pop sub (bad) into xor xchg jne xchg xchg lds inc daa push cltd jmp call add xchg mov sbb push ret lret lret test rcrl cli outsl jo mov pushf ljmp and or add enter int cs and mov adc pop or jge,pn (bad) cmp pop mov fucom push imul or push jbe mov sub jo xchg in xchg pop fstl adc aad or outsb lods (bad) jbe dec scas test or adc add fcoms push inc repnz out ficomp lret push push ja sbb mov and cld jmp icebp cmp or stos daa push rol imul mov sub xor fstpt lret or stc aad pop loope fmuls and pop stos and dec jo fidivr mov dec adc imul sbb and add pop fst imull sub cmp jl pop jge or cmp cwtl and jmp or into dec sub imul (bad) daa push mov jnp movsl (bad) (bad) das jecxz adc popf jge jg xor xor (bad) xor negb sub add or and repz bound add sub enter ficom add dec fwait mov (bad) push std in test mov lods mov mov xor pop adc xchg je je cli fsubr out popf jle pop mov je jb pushf fsts (bad) insb or xor int (bad) cs mov mov ret pop aam push sub xchg inc inc leave add (bad) enter stos cmp call fsubp (bad) jb xchg mov sbb or out sub xchg out mov add mul add movsl insl push jns xor loope aam mov push mov outsb xor cli jecxz,pn sbb pop xchg shrl test sub add mov mov aas test jg ja xchg add xor and add cmp mov stos iret dec dec int3 xlat loop cltd jp cli push int3 inc das repnz loope mov xchg aas dec or (bad) ds jg ret jne cld cmpsl pop dec mov mov mov daa xlat sbb bound mov sub cmc stos mov repz mov xchg push pop sub rcrb icebp jmp (bad) mov icebp mov leave push jae lods pop push leave lahf rclb mov icebp lret (bad) notb lret fstps icebp stos dec das out add adc sti repnz and or sbb dec mov sub push outsb imul dec mov jecxz arpl sub or cmpsb push ror lods imul cmp loopne mov shrl lret jne mov fiadd xchg xchg push add (bad) xlat push sub negl hlt xchg jg out lods mov icebp or leave insl mov out leave (bad) ja test or aas sahf dec inc xor sti mov adc fwait xchg dec stos xor jp dec sub cs shr stos mov xor aaa out das notl xchg push or push sub xor icebp push dec (bad) std insl mov xor (bad) (bad) pop gs and int3 dec jmp cmp (bad) xor out mov outsl sub repnz ficompl std jae mov enter adc jnp out and call jns popa ja push sbb jmp aas out push inc cmp loop sarl dec and jmp dec ret popf les cli das test inc ffree fadds jns inc into stos call mov jge out xor mov cmp fwait jnp je in add sub nop cmp movsl std xchg ficomp mov sub je stc inc lret add push xlat lds daa roll xchg sbb add add ljmp (bad) jnp sahf or rolb lock dec or mov je pop fistp daa push cli pusha (bad) and sub mov (bad) leave pop xor xchg jns inc pop and jecxz dec and test jbe fldt sub and cmp and test movsb stos pop xor adc (bad) outsl add scas test insb mov popa mov adc xchg pop sahf test jecxz fcom mov dec popf ror inc xor jno cli pushf mov int icebp rcrb xchg dec pop (bad) and lret ljmp push or xchg aam or fucomip mov xchg std xchg loop jae mov pushl in outsb sub add lcall mov arpl sub lds sub mov jl pop mov xor xor mov ljmp mov lret movsb sub adcl sbb out mov movsl mov or pop in cs cmpsb xor es xor ret jg add and mov bound dec xchg mov loopne clc push pop pushf push or mov cmp shll push (bad) sub jmp lret xor jnp jl sbb incl out and pop mov pop xchg aam jmp push xchg mov cli clc sti xchg repz and imul xor icebp push jmp jmp loop bound daa and clc jecxz jne xchg pop jl pop imul push push adc cmpsl adc add in cmc lds popa aam mov and aad pop jo fist icebp mov dec jo out mov insb inc mov mov cmpsb outsl out dec and pop mul out lods aam xor mov stos (bad) xor push fnstenv in xor xchg and imul cwtl jp pushf stos dec jne jb mov sub mov fsubs sbbl into call xchg cmp cs int imul and xchg movsl vmovhlps cld mov (bad) dec sbb inc cld and into lds insb or imul (bad) xor lahf pop adc mov xor or mov push sub mov mov js daa mov mov cs mov inc add sub and push mov test inc stos daa (bad) adc pop sbb or mov ja leave pusha fs xchg push (bad) mov fnsave jae sub (bad) mov (bad) sub fdivrs inc ljmp fwait pusha notl das pop dec inc cwtl (bad) rclb push and scas cmp dec cmp test into in lods dec fdivs sti sub in sub mov and sti mov popf mov adc loopne jns dec xlat sahf stc xchg pop xchg gs scas sub mov sbb push add sub sti sub sub outsb das or pop push (bad) (bad) mov mov mov mov lret repnz ljmp sub das add mov jne xchg mov out scas mov and cmpl leave mov and jb cmpsb iret inc lock pop and pop or mov sub div sti lods mov out pop mov adc push xor adc cmpsb lea rolb stc sub xor push cmpsl ret syscall sub or pusha mov jne ds (bad) mov lds cmpsb rcll scas ds scas adc push cmp shll and pop adcb cs cmp add cmp nop sub mov aad jge sub push adc pop lods jle inc lret scas loop mov jne in mov (bad) push push (bad) cmp or add mov xor inc pop push pop call ja mov mov aad ret aam mov ljmp mov push lret mov aas xchg lcall jne into movsb dec clc stos mov das ljmp push fdivs and test mov shr aaa popf rcrb mov xchg sub or or adc gs sub xchg out cmp push leave mov ja sub mov rorb ret dec (bad) sub jae ficomp or pop mov out add cmp lcall sbb xorb add mov push xchg dec mov movsb cwtl mov (bad) mov (bad) js mov jne js xchg push clc cmpl or jmp scas jmp push rcr test sbb or mov pop das bound sbb xor sub dec or xor cmpsb ret inc push xor sub (bad) (bad) mov pop and fcom (bad) in cmp out sbb test dec mov and cltd lods stc or fldl outsl pusha sbb mov xlat sbb outsl and daa cmpb (bad) pop repnz sub and push (bad) xchg jmp push je aad scas lcall jnp enter and pop loope xor cli cmpsb sbb mov mov inc imul mov pop jb repz adc mov outsl out sub stc xor add stos inc mov and rcrl fnstsw int3 insl out mov sbbl jnp les clc fcmovnb push and es imull jmp sbb xor (bad) xcrypt-ecb cmpsl or fnstenv dec pop subl icebp pop xor cmc daa lret pop cmp xor das sti je les scas jb sbbb out mov cmp lcall mov inc jae repz je (bad) mov aad ficoml pop test pop sbb mov and add sub cmp int3 cs out popf or pop aas lods pop sarb fdivrp in aaa jle fiaddl dec (bad) sub das out addr16 fsub inc sti stos push mov sub iret dec and xchg lret out and das or push ljmp mov and xlat jmp inc add xchg out mov dec lea repz dec mov lret dec jge cmp jecxz or push push mov pop jmp neg jns mov imul push test sub and xor ds stc mov inc sti cmpsl add ss xchg mov sub and shrb sub rcrl mov (bad) fild add movsl rclb (bad) repz (bad) sub imul mov xchg mov mov ds and repz dec sub jnp adcl or add fsubs push ret inc dec inc das in mov pop fs lods mov jle fstl std mov dec or push cmc dec aam fsubrl loop sub ret das mov push bound and ret ja mov push lds andl dec test popf jbe enter pushf js mov mov sub xchg cld mov xor sub adc lret dec and sti sub sub (bad) cmp dec fcompl into dec dec repnz in adc pop sub lret jmp loop xchg scas cltd hlt sub repz xor das fsubrl cli bound pop lret pop (bad) sub les into and jge iret sbb xor push xor and dec jmp or dec push push cmp and pop dec imul (bad) idivl in xorl negl mov ret lds sets add repnz jp stos je bound (bad) iret stos loop shr xor or or out cmc in push daa add sbb bound xlat jge xchg jae cmp jecxz mov cmp in or mov imul fbld icebp pop jnp daa sbb and mov movsl pop adc out cltd (bad) (bad) mov pop test and leave cmp xchg les shrl sub add cmp stc push cli pop shr fisttpll adc repnz xchg or push jb,pt (bad) iret inc in adc dec xor inc cwtl sub xchg pop add ret push xchg (bad) lea lds (bad) mov mov (bad) icebp push push insl popf adc add mov mov cltd sahf cmp jecxz mov das dec pop mov data16 lcall pop pusha sub cmc ljmp inc and push jae dec in mov call sub adc pop mov ja dec cmpsb jl (bad) mov out lods pushf xchg xor out xchg push jg sti sub in adcl popa je pop lret scas sub aas sbbb mov mov mov or movsb orl das out cmp out adc or xlat and pop mov out mov push or or cmc loope mov fnop out pop scas gs lcall cmp lock fisttpl clc fstps les addr16 cmp xor and xor sbb sarl enter or icebp bound inc mov push add das mov rcll scas jl sbb add adc xor add jno lods jo je lahf pop mov mov or movsl pop icebp sub cwtl lock mov cwtl mov not cmp gs (bad) mov or push cltd xchg push push pop cltd mov push sub dec movaps inc xor sub sub loop pop stc push xchg jmp (bad) repz xchg leave (bad) or shrb arpl xor enter (bad) xor add outsl mov add and dec pop mov std mov add xchg out daa xor leave cmpsl add cmpsl cmp jge push pop sar jmp push jp add fsubr shl pop xchg cmpsl mov in push xor cltd jmp lcall stos pop loope (bad) fsubl fistpll xchg xchg push adc inc popa add cli sub adc repnz dec hlt mov les pop (bad) stos sub jecxz adc icebp dec loop add mov pop inc dec nop aas cmc nop mov dec ljmp dec and sahf jo,pt xor or test sbb out dec and test mov push xchg xchg out xor or out (bad) inc mov (bad) imul mov inc jg pop fidivl pop adc je sub shrl ds pushf stc sub lods push mov insl (bad) int3 mov insl inc and jne pop pop mov push hlt xchg jb and mov fsts incb idiv mov outsb xlat xchg mov inc inc jmp mov sahf xchg add mov pop in (bad) out das das add sbb pop imul mov xor out lds mov (bad) mov xor loope mov sti je out imulb loop (bad) ja rdtsc (bad) sub shr movsl mov sar and pop mov das into mov roll int3 inc mov cmpsl fmul (bad) stos pop push pop dec rorb lods loop ja pop sbb adc popa sub add jmp add adc into cs jmp idiv mov pop xchg mov in das out and sti imull mov xchg test adc ljmp lret and (bad) js cltd and pop lds or sub lahf fnstenv pop pop mov sub cmpsl rcl jmp stos out pop mov mov out mov scas sub cli xlat mov jne loop in push mov mov inc mov xor gs jns jl fcoml out lret jp int jecxz,pt xorl mov sub sub out cmpsb in jno xor loopne pop repnz cltd gs sarb stc mov cs hlt mov lret ret icebp jae sub aam in stos jmp pop dec in das push pushf mov clc pop hlt sub cmpsl scas inc xchg outsb clc mov out cmpsl lea add xor sub aas xor xor sub nop push aas scas call add outsb jne inc gs mov sub push lahf jns or mov adc pop mov sbb xor add mov sar dec dec mov mov out mov push mov sahf mov add jg jno sbb aaa insb add outsl sub mov xchg aad mov xor loopne jg or pop outsb test and mov cmp js ret hlt test mov aam bound pop mov mov sti je sti mov mov mov mov cltd xor jecxz out gs icebp js mulb xchg enter push push (bad) aaa popf adc fisubr cmp and jmp stos scas sbb adc jp bound jmp lret sub sahf adc add xor ljmp inc xlat mov mov repnz sub mov xchg js adc mov stos mov xchg jg jbe and gs sub cmpl push xor mov or add repnz cmpl leave or (bad) ss jbe pop pushf xchg and pop add iret sub add mov mov jno jmp cld ret std pop jp stc mov sub jnp sbb and ja lds fsub push push adc and aam mov jnp cmp inc aam dec add sbb iret dec dec xor and xor mov daa xchg pop cld mov mov or xor mov and mov into cvtdq2ps mov inc mov hlt insl push fbstp xchg movl ja inc pop dec xor fdivr or xor daa aam les lods and daa loop sub (bad) dec push add gs mul stos (bad) daa lret cmc inc xchg push jmp pop shrw jmp in xor aam push imul ret xchg cld lahf sbb mov xchg xlat lea call pop adc out cld sbb out daa fdiv push mov into enter and ret push jbe leave pop inc add je leave inc push lahf jae push add aam jge aam imulb in and jmp add ljmp pop (bad) out stos lcall (bad) xor add sub mov std pop mov pop (bad) jp xor lods test push daa (bad) outsb call dec mov and mov and daa or adc aad xchg leave and addr16 mov xor cwtl pop lret sbb xchg imul lahf int3 xor ljmp mull adc dec test into add scas jmp sub bound and mov in and lock test mov pop shlb xlat sub add and lods jmp lret fistpll (bad) cmp adc pop xor add popf sbb pop sbb cli mov (bad) pushw sub add fdivr add or fidivr cmpsl xlat rcl stos clc mov inc int mov pushf icebp jo sub out and dec mov adc (bad) or lock mov scas cmp es sub or xor ret in or and xor fucomip sub add jmp ds dec jl out in xorl out cmp sub (bad) mov add dec xor sub scas repnz icebp xchg stc add aad mov jns mov in pop add mov add popf movsl fs xor clc push adc sub aas bound xchg pop jmp stc cmp jnp sti in lock aas dec mov cmp xor mov jmp repz jns inc or jge mov sub pop cmp xor mov pop stos xor mov jge fmuls or lret xchg pushf lock xor (bad) jno and pop add jb xchg xchg (bad) adc inc orb mov xor jp ljmp (bad) int push in push adc mov mov dec (bad) mulb shll (bad) xchg (bad) lcall and dec leave push or push das inc or (bad) mov insb lcall mov xchg shll mov push xchg lea aas sub mov movw xchg jne xchg jae jg xor repnz clc loop jl adc mov xchg and ret jp repnz movsb cmp out mov cmp (bad) mov jb rcrl mov in xor sub xchg jl iret (bad) fidiv ret inc xchg call mov aad (bad) imul (bad) xor pop inc mov enter mov cmp inc mov xor and mov sar les dec pop (bad) enter mov sub add and xchg xchg xchg cmpsb aas das pushf int3 sahf jg and push daa dec sbb sub or mov out nop push xchg jge nop pop out push and mov mov ret add mov decl movzbl xor fstpl sti add popf push (bad) mov out xor loop hlt xor (bad) jae push call push sub sti jne push in stos (bad) out (bad) (bad) enter movsb cmp jbe dec call xchg in pop and mov sub or ljmp sbb xchg jne mov out mov into adc lods push jne mov inc loope repz mov jle mov ret into clc (bad) push pop out in sub xchg leave in add lock (bad) or cmp das mov fdivp out or mov aam pop xchg mov xlat lcall mov sub (bad) (bad) sbb xor add fdivrs outsb popf test pop xor and jo mov int das jecxz lret adc addb lea push aaa inc sbb iret dec pushf (bad) (bad) inc add xor push data16 das xor pop mov imul mov std push push inc mov pop cmp outsl or sti sub sbb xchg add std addr16 add mov std subb inc das mov pop sti add sub enter inc sub mov push aaa jge push (bad) enter cmpsl std sbb cltd jge jbe dec and rol push mov clc xchg sub cmc push cltd pop ret sarl mov stos mov add xlat and mov dec cmp pop mov sahf cmp icebp jmp repz clc mov adc jo lods pushf sub sysenter es or or test test mov sti mov xchg add mov mov or mov xor xchg xchg mov xchg fcom (bad) cmpsb idivb and imulb (bad) mov (bad) xor in lret bound in (bad) xchg inc repnz ret sub pop addl jmp cmpsb imul bnd leave (bad) ja sbb shrw add ret shll cwtl pop xor mov xchg test cwtl xchg das fcomi push xor repnz outsl cltd and xlat test jg jo or mov ret loopne push js xchg daa out pop sub jae das int3 push mov sbb jmp popf in adc scas sub popf pop mov pushf and or in cmpsl ds fstps out shrb sub cs movsl ljmp add scas pop or xchg sbb mov xor adc cld (bad) mov test in adc ficoml clc je jecxz and xor add ret inc sub out mov (bad) push scas jo mov push aad out add das add stc ret scas leave or fist mov mov leave add jnp sbb das inc mov into xor cli xor rcl jp das gs adc daa and add (bad) and lods dec sahf and and repz mov push push js outsl push adc mov add cmpsl idivb das push shll pop (bad) or int inc push pop jl mov stc jo scas int test cmp jmp mov jae fnstenv test xor out bound (bad) jmp inc add adc xor ret divb sahf xor jnp adc xor lret mov ret inc mov mov dec mov loopne pop inc add pop sti mov pop mov (bad) call sub mov ror scas mov xchg cltd es insb or fstpt lret mov leave decl xor add push icebp pop negb mov xchg mov loope lret xor sub psubw out push gs cmpsl jg sbb subb loopew sar xchg out dec jp mov (bad) sar es mov jg push leave icebp (bad) test out xor dec xchg or adc xchg and or (bad) mov cmc pop cmp lods sahf push jb scas mov pop mov and mov and xlat pop cltd ljmp xchg or cli imul frstor adc mov (bad) mov dec faddl js push jmp or xchg fstpl outsl xchg into mov jle orb je or jmp adc mov ja int3 dec cld test outsb clc movsl daa out notl iret xlat xchg aaa adc push pop dec jmp cmp pop aad mov movb adc ret cmc out hlt xchg cmp imul dec cmc and lock insb mov out sbb xor add xchg fldl out mov imul out pop les fsubl mov packsswb xor test mov push jns lods xchg mov imul cmp sti ret imul outsb clc das popf lds or (bad) aas neg pop sub sub inc fisubr int3 ss popa (bad) mov or inc jecxz mov (bad) rolb xchg (bad) xchg cmp inc jnp movsl pop ljmp enter add lds or ret jnp lods fmull (bad) lea rol sti cwtl inc sub lods es movsl and mov aas (bad) inc jno das scas add mov stos popf ljmp add pushf (bad) jl jb in mov add fs bnd adc dec mov mov inc lods (bad) jp xchg add test mov adc repnz mov popa lcall dec xor add cmp aas movsb mov dec and and lret mov jge out xor aaa call xor cs or sbb jne dec mov dec pop sub mov or iret inc inc push das idiv jb arpl jb dec (bad) in xchg mov add jecxz lds les in into divl ret stc sti movsl test stos mov mov lahf lret leave inc sbb and dec cmp jmp inc outsb sub lcall popf out add mov in stos mov sti int aas (bad) mov add out ljmp out cltd es outsb or cmc (bad) cmc out std (bad) (bad) sti bound ror jle arpl test jg sub sub or pusha incl testl sub dec add (bad) xor cli popf (bad) cs pop fs rorb stc xlat lea sub mov notl test test adc out data16 xchg and scas into add mov imul and sub cld mull scas dec das mov test mov mov mov (bad) notb add icebp lea inc mov fnstenv or mov or xchg fldpi ja add cmp and cmp push mov jno and sub or in adc mov sbb xor (bad) aad movzbl lahf or mov (bad) cmpsl fstpl lcall add xor inc lods or lret ret movsb push or sarl fcoml mov arpl repnz push and inc cmp jmp stc rcll xor jo jle insl rorl cmp xor loope or cli sub loope adc jo mov mov xor scas in add icebp and bound sarb leave xor iret or inc sbb stos stos clc sbb shr lock push out fisubl push adc jmp xchg daa aaa dec (bad) pop and mov inc shll dec dec out and dec jp sbb aas jle fld test mov cli les mov (bad) cmc jno or dec adc sub dec lds rcr jmp adc jmp xor and jo adc cwtl push mov dec and add jle add ss mov (bad) iret mov test stos loop or idivl fcoml cmpsl (bad) test xchg lcall cltd mov sub cmp shr cltd sub and fisubr lock jmp not out push (bad) xor iret lods aaa pop pop adc pop or hlt clc lods iret mov sbb pop inc sti (bad) mov stc push and iret mov inc (bad) jge xlat sbb in inc adc and loop xchg cmpsb pop sub dec inc add cs pop pop shrb (bad) push mov test loopne,pn xor xor jmp pop loopne out gs pop sub or cltd cwtl (bad) jg xchg lret sub loope imul lret lods fisttpl pop movsb mov add xor xor xchg and cli dec mov adc sub and jmp and subb out mov and mov mov and out cltd xchg and or (bad) gs add mov fsubr push mov mov (bad) ret jbe leave je lods xor jne jg lret jle iret stos leave jg sti and data16 sub pop sub data16 and push icebp push dec inc sub cli jne push cmp adc and sub or fcmovb or (bad) cmp push mov mov or mov push insb xor add (bad) (bad) and xor cmc mov or cmpsb rcrl sub sub cmc sub inc rorb lret (bad) lret fisubr (bad) dec pop fidivr inc dec repnz test cs adc xchg push cld iret inc jg jecxz pop adc popa mov sub mov cltd sbb jns push iret cltd test ret test and pop inc adc pop pop mov test xor sbb push pushf mov jle jp lret bound or and cmp gs imul fsubr dec imul sub icebp lret or and bound notb xlat mov push mov mov lock jmp sahf ret mov (bad) and xor sub cmp clc and rcrb ljmp cmp jo adc xor pop and dec sti (bad) or xor rolb or (bad) fcoml outsl jl icebp sahf dec jno adc ror or jle jo mov test mov negl fdivrp gs pushf shrl iret xor mov dec mov shrl sub or add sub scas lret adcl mov cmp cwtl rol (bad) cmp mov dec or add into dec cmp mov sub sub mov xor add and ljmp scas dec in pop sahf adc div and int das sbb lret push push adc dec xchg xlat int3 sub and pushf cmp or dec addr16 int3 es cmp dec int3 pop cwtl leave pop dec repz ja ds out out das (bad) mov aam repz shrb push lret and sbb sbb adcl ja aaa dec hlt xchg push and mov aas rolb push mov sbb cmp (bad) out in inc test into lods ret pop out mov and fs testl mov jb add ret aaa dec and push loop push int3 arpl push pop stos mulb xchg mov push sub out loop aam push xor mov pushf cmp scas lea out xchg lcall xchg pop mov mov sub pop (bad) test xor or pop adc adc cmpsb test iret sar cmp sub mov push pop aas mov repnz shrl push or (bad) lcall dec or (bad) mov adc dec shrl or and mov push dec idivl sbb cld test or int cs mov fistpll repnz mov or lds or sarb loop int3 (bad) mov jl sbb pop sub mov (bad) mov out sub add inc sub xor xor jg popa xchg repz (bad) fdivr push mov mov pop das inc fimull jnp fstpl test mov out test mov rclb std (bad) pop mov out dec mov pop push mov mov or call adc add (bad) xor push push cmp sub and scas sti dec lcall fsubs push cli cmpsb enter jnp dec xlat scas sub testb cmpsl xorb sub jge mov sahf or enter loop jo pop mov lret adc sbb cmc testl mov jae mov push fbstp scas lods mov mov push aad lods dec adc sub mov popf add into add or fldt sub xchg cmp pop inc sub daa add pop outsb and decl lret iret xor scas pushf repz jmp dec imul lret lea dec xor movsl cmp pop xchg mov ja scas aad stc mov mov mov outsl test push adc out clc lret adc das cs jmp aad data16 stos mov rcll xchg mov push notb test std xchg iret dec (bad) mov xlat ljmp jae ja pop dec cmp jne aam stc or sbb jl inc mov clc xchg loope fcmovne sarl xor sub es nop cmp cmpxchg aad das sbb ds mov aam mov (bad) sub add repz mov test mov dec out and sbb data16 hlt lahf jb xchg imul adc clc and ds mov pop mov (bad) pop adc mov add aas mov mov xchg (bad) mov or stc xor fscale pop ljmp and or add mov mov jle dec lock mov cld inc leave (bad) insb push pop ljmp in imul repz and bound mov test mov and call rcrl aad sar mov scas into sbb test aas sub or repz add mov sub jg fsubs out sti js into ljmp add cltd adc (bad) stc dec or pop xchg cmovp lods lcall pop (bad) rcll or xor inc imul cwtl xor leave mov xchg je push out add ret and mov lret push and das mov pop mov dec lret out xor gs hlt xchg js mov sbb inc inc stc addr16 out bound cs cld fwait mov pop lahf jne nop jns movsl hlt mov and pop loopne pop sub fiaddl leave push cmp loopne mov mov enter and (bad) add fbstp movsl dec fisubr push xchg dec inc sub dec pop out mov jmp ljmp cmp gs clc jg stos push out ljmp iret jl cmp and mov and sub pop inc leave fucom and bound push (bad) pop (bad) nop cmp dec mov add inc mov das or je jmp into mov ret ret clc sbb cwtl add push sub cmpsl fsubl push cltd cli sti cmpsl push push gs lahf push sbb ja inc and test and lahf push xchg xchg dec into sub (bad) mov xlat add add and pop mov inc popf and aad jns stos sub sub mov inc mov (bad) popl inc adc mov jo adc mov test mov cmp pop xchg mov xlat add or mov xchg mov jp push and xor jle rcrb add lds jne outsl xchg xor or mov pushf cmpsb mov and fs insb push or or into cmp loop,pt cltd sbb insb jno out je loopne loop push loope jg in pop mov jnp lret mov rcl sub sahf mov jmp cmp stc inc outsb sub sbb andb fidivl dec pop adc in pop lret faddl and mov movsl out mov sub push scas mov daa adc aas and xor and decl sub ret repnz aad orb lret stos dec xor shr mov sub jmp push xchg xchg in icebp ret iret fdiv or inc (bad) pop cld out xlat push mov cmp pop xor dec xchg push popf xchg imul in lods nop mov ret cld ss push sbb dec je (bad) xchg or divl ljmp xchg pop fdivr sub mov lods ret mov push or pop popf sub mov out ljmp in repz loope add dec xchg stc jmp fmuls mov push dec or mov xchg pop in push push lret ss lret pop inc iret xor adc pop test adc sub dec xor ja xchg xchg xor xor mov mov repnz outsl mov mul cli lods in mov stos cmp out xchg dec bound lret ljmp mov das or sbb lcall mov xchg and xlat mov cltd cmp das fs push add decl inc ss xor std vcomisd mov mov mov notl fstps sub or and bnd daa sti push mov or mov and sub adc push pop mov or jo cmp push dec inc in out sub (bad) xor and xor mov cmp cmp push dec dec fs cmp jb ss xchg iret nop mov adc jge add mov lret mov (bad) pop push gs std das xor stc xor cld lds imulb sub pop add popf iret adc and dec (bad) dec (bad) mov sub clc rorb popf daa negb in ja lods xchg (bad) dec scas mov lods pop mov test xor je cld dec movsl mov insl test xchg stos stc push xlat mov dec mov jbe xchg xor cwtl mov inc dec leave aad rcrb xchg lds loop stc push je jmp sub jmp cltd mov loop ror push lret jecxz ds or push lcall push and stos xor and sub mov fcos jb (bad) jge pop mov lods xor xor jmp ret pop insb (bad) mov sti add imul or mov in sub mov dec mov out fs and add or sub fadds add xor xor loopne test mov (bad) cld push xlat and out mov enter cmp inc mov ret repz jg cmp mov dec aad inc ds aas lock jae jmp stos dec adc xchg into mov dec loope (bad) push pop and push and push aas dec fldl cmp or and fs xlat (bad) out add repz fldenv jnp daa mov es adc negl lret push xchg in ffree mov (bad) jmp xchg adc into rorb scas jg xlat dec lret (bad) cld scas lock dec mov (bad) cli out pop xor test mov or (bad) xor dec cs lahf loop xchg mov xor imul das jb (bad) mov roll ret cwtl inc cmpsl dec jg scas push adc lock ds jns sub cmc or and pop inc je (bad) shlb push cmc sarl mov in adc pop inc cli aas lods (bad) leave sti jno xchg add into movsb stos les cmc mov inc add pop jae mov scas clc inc mov fadd into shrb (bad) pushf and mov int3 lret out xchg jg mov shll fdivl shrl sbb lahf icebp arpl mov sub xor cmpsl cld jg jmp lcall inc cmpsl push adc test and (bad) movb ja sub xchg mov pop mov and pushf stos sub pop mov pushf or dec mov ja pop mov cmp data16 mov (bad) scas gs out mov insl dec idivb mov add xor or lret jmp xlat fisubr push xchg jmp sub pop add ljmp xchg rcrb push dec sub sbb inc mov and mov es cld xchg imul xor stc aad das (bad) jne stos repnz pop std std pop jp xor stos repnz pushl fst xor push lock mov cmc cmp das inc mov or add rclb and (bad) not jle iret out adc mov cmc dec (bad) lcall mov jg jle jmp adc testl (bad) imul clc repnz stc push leave pop or mov mov incl push decb lds dec ret sub mov cmp and sub add sub outsl adc cmp dec (bad) cwtl push push xlat pop adc xchg inc or (bad) sub push loop clc xchg mov jne out nop daa into dec mov in dec cmp inc iret sub sub or cmp mov sbb stos mov lahf mov xor dec and jno gs in ljmp repnz mov xchg push push gs adc inc sub js and dec lods mov stc cld lret cld add outsb test iret and je (bad) or sub nop mov jo pop jmp mov xchg push cmp add in xor or xchg popa jmp add adcl or pop push out cmp dec or add jno xchg or push mov xor adc fwait sub sbb dec mov lcall dec aas out mov cmp (bad) and pusha add sub incb pop xor push cmp xor cwtl subl mov lahf or sbb add xchg nop inc ja aaa adc mov cwtl mov sbb jl pop cmpsl xor lcall out lock repz or pushf outsb mov cmc pop mov inc mov or jbe sbb lods aam out lret and jecxz mov (bad) jmp test mov jle les daa push push mov push je cmpsb jmp movb sub sub sti pusha push push add lahf push mov pop inc cmpsl es inc xchg pop and inc sub pop lret fs jmp cld imul fucomi sbb xchg enter fwait rorb and pop dec pop divb das xchg stos enter cli repz into push adc xchg test mov pop mov xchg add insb movsl push adc xchg jge scas test sub ja bound cwtl adc dec inc fs sub imul mov push mov jle sub sahf pop aas cmp lahf ret fidiv gs sub and lret and mov sahf add (bad) lock rol insl test outsl xchg negl out mov sub cwtl das ret pop in and add insb push push add scas enter icebp mov icebp inc mov pop mov ja add das icebp imul shll outsl push ss ret loopne xor dec push xor aas in ds fstl sub scas sub loope push pop out mov mov pop icebp fmuls leave in jmp mov stos rcrb xchg mov push and cmc dec sahf dec lret mov lret or cmp in mov mov inc dec loop loop test into mov and mov outsb adc xor mov mov jbe imul dec arpl dec js sub cmp das lret mov push add insl ret xchg sub test cli jo dec fbld xor in jecxz gs mov ljmp mov (bad) xor pop mov cltd push movsl loop cld inc dec pop out pop loope jno sub das xor cld in daa jmp mov lret insb daa push pop in xor mov repnz adc (bad) mov or jne mov in sub inc pop lods (bad) gs and add (bad) jl les or (bad) repz leave jmp pop adc mov sbb and in pop loopne push push orb jb loope push mov add sub inc jmp rcrl ljmp sbb mov ss mov insb pop imul xchg sbb xchg xchg sbb pop shrl mov adc mov and xchg mov push lret les sub in mov iret pop jmp mov cmp lcall cld jge stos sub divb scas adc sub inc das mov sub inc and imul push ret and scas sub xchg adc cmpb pop (bad) and mov push xchg addl insb ret dec mov daa mov fcmovnu or mov xor and xchg jns mov lret outsb cs mov xlat test push cmp dec ljmp and add mov lods jmp xchg (bad) jmp and mov or (bad) xor pop pop movl (bad) popa sub ret mov repnz pop mov and mov shr dec mov sub popa mov mov jge dec ja xor incb rcrb inc or push and add mov and jno fs mov push xchg jmp add xlat fwait pop and inc add fcmovnu sub push mov lcall jecxz nop sbb lcall outsb mov cmp cmp xlat js dec sub push mov sub enter repz jns fs out fiaddl insl (bad) and (bad) jae (bad) cmp mov cld push push ja and xchg push frstor mov inc fs das and add out or push lret cltd je mov mov loope ret loop test rcrl out jo xor data16 (bad) mov add mov and (bad) pop jno and jge fistp shlb jnp stos jne or jecxz push out lds call inc cld (bad) in mov leave and adcl ret les xor fild test les rcll scas aas cwtl jge pop call dec fisttp add out pushf inc jmp or xchg xlat xchg ja (bad) repz jno imul and fcom xchg in imul xlat (bad) (bad) cld stos push sub ret movsb push or outsb out add cmpl sub jle push insb cmp out in mov and and bound or pop (bad) xlat mov mov bnd (bad) sti into dec inc jae lods scas sub insb sbb push rorl cmpsl or lahf xchg notb mov mulb test xchg imul add push mov push (bad) stos je jmp xor jecxz loop mov jge aad or inc dec lcall mov mov mov dec ljmp fcoms dec and mov and adc aam imul sti inc (bad) sub xor sbb jmp std out fidivl xor outsb in adc mov sub mov loop mov xchg or movsl and cs aas lret xchg das dec xor add and push daa push cmpsl pop call add (bad) mov mov push push iret cmp lret mov sub push pop or inc gs (bad) test push data16 clc mov test dec (bad) out lcall iret inc mov call leave xor sub mov adc sbb jmp push mov gs mov and lock or ja mov stos push icebp push sub dec (bad) mov imul mull dec inc rorb jecxz mov lock or pushf dec cmc sub lret push ficom jmp pushf pop gs xor adc jno daa cmp in inc rcr push xchg daa push push iret mov imulb pop sub cmc pop je,pn sti ret mov jl into mov aas inc icebp aad cmpsl inc inc (bad) out pushf cmp sub sbb cmpsl mov cs push movsl leave aam inc sub (bad) adc cmp or push test out stos mov lds ret test xchg outsl adc cli xor xor mov pop mov add adc add lods inc dec lods out lret int ret push hlt les push mov into jle lret add loope sti add push aas sub dec jae repz sub sbb (bad) sub mov and popa and jmp fcoml clc out dec mov adc ljmp pop xor adc test out popf xchg jno xchg xor push mov cwtl (bad) xlat xor subb sub mulb movsl mov and pop mov mov mov or jmp sub push add clc mov pusha adc adc into xchg pop call cmpsl sbb dec popf xor inc or insb out shlb mov jl,pn dec cmp mov popf xor cli sbb cmpsl inc jbe dec scas and mov jbe sbb mov sub push jmp movsl fidivr cmp dec loope add mov in and xor mov dec or fdivs jmp push sbb dec (bad) (bad) xor and xor sub (bad) or mov push mov loop and inc aad aas cmp push and fwait (bad) mov jmp (bad) add cmp stos ret xchg sbb lock xor stos jae cmpsb push aas mov int and and push mul pop call cld jle dec das clc std in mov sub xor movl pop mov mov jnp sbb fs push imul inc sub sub xor testb scas divl test mov repz (bad) aad sbb (bad) outsl mov int3 or repnz (bad) sbb and jno iret pop mov cmp test mov cld mov mov divl ret and lahf xchg jmp pushf mov pop push mov cmp mov insb adc push sub xchg pop pop mov push (bad) lea xchg (bad) scas bnd das jg fsubl mov or es ja roll or cli lea lret mov loope fistpll test add cli and cltd mov add or mov arpl dec or mov mov (bad) fcomps jecxz and fbld xor (bad) test mov sti sbb jmp push iret pop mov inc lods xor pushf mov or jmp lahf outsb lea clc xchg ret adc xchg aad or push xor imul mov mov lods mov and inc sahf mov cli stos gs lret add cmp data16 push loopne out lahf jne sub in mov xchg js mov insb and sub daa sub pop mov jne scas xor cli lea daa sub mov iret lret mov mov lret mov adc ljmp pop add pop sarb out xor cld cmp xor and lret add iret std xchg rcrb lds pop or scas dec sub dec scas cld ret xchg iret xchg stos sbb into sub lahf gs jne dec xchg aaa or mov (bad) xchg imul mov jo cmp (bad) int aas loope das mov popa mov or fimull rcl cli lret mov mov repz bound push lahf xchg xchg jp mov sbb test (bad) call pop insb mov mov cmp in sub repz sub fstp push sub pop ja cmp pop or xchg jbe lds decl arpl mov hlt imul mov shrl icebp push pop push dec fbstp xchg arpl lock pop mov imul adc add aam in jmp mov sub xor mov cmpsl push popa das sti ss js (bad) sub cmp je jmp and xchg hlt shl adc sub lods pop xchg decb imul lds ljmp xchg icebp dec and cmp sub inc repnz lea push sub lret das mov mov ret rorl repz and add sub (bad) into das out or sub je (bad) idivb xlat test pop je loopne xlat xchg pushf mov sub inc (bad) idivl or dec out push sbb xor and pop sti xor aam inc mov imulb stos pop mov inc ss pop mov pop loope push jne in sub xchg lds adc icebp mov add scas repz mov mov jp pop pop (bad) stos cmp push push (bad) adc mov fist sbb add pop imul cmc xor jecxz mov and jno jg push add call mov call es xor adc icebp subb gs std ljmp sub mov xor xor les imul sub and dec and lret pop cmc inc mov and dec mov sbb rorb shrl cmc mov fnstenv push pop mov add (bad) xor scas lods inc (bad) popa jne (bad) jb mov inc jecxz mov imul mov iret call or cmpsl xchg ljmp and xor pop int das mov dec into in jecxz adc cld xchg insb fidiv fdivrs aad out sar xor xor inc mov xor or pop test push or cmp clc mov jge mov jp mov ret ja icebp jb inc mov sub out pushf xor adcl std ds int3 in jo and out cmp cmp dec push dec into shl push aas push jmp (bad) sbb jno push iret scas popf cmpsb sub jb ret (bad) push sub jae bound mov inc repz mov push in cmpsb scas cmpsl pop push dec ljmp sbb jmp fnstenv xchg xlat mov fidivrl push insb ljmp cmp (bad) or gs ret std dec mov adc push dec pop and xlat gs enter add pop mov xlat (bad) pop sub hlt fcoml hlt mov adc loop jo pop into lods stc mov iret sub lahf jmp mov lock loop jge or lret ret xor sub pushf and ja push jb push fildl cwtl mov pop inc shlb or add sbb fidivl sub cmp repz xchg jg (bad) jge xchg mov jmp addr16 lods pop ret push adc or ljmp repz inc and adc rorl out adc or sarl repz xor incb sub notb daa jecxz xchg cld pop (bad) in adc mov sub sar cmpxchg mov (bad) xchg mov jle ret adc jl,pn aas lock or mov adc jecxz daa rcll ret out incl sbb mov cmp repz ror push xchg (bad) pop out xor out xor sub in mov dec pop stos sub ret cmp sub dec sub daa push add mov dec cmpsb jecxz out orb loop lds pushf jno xchg add cmp sbb mov cs pop dec sub xchg or fcmovbe mov cmp and xor cld pop cmp rcll scas sub icebp pop and out cli inc sub jne fstpt add adc leave mov (bad) loop push mov rorb inc sub add in mov pushl and and jb xchg jno mov neg mov jns inc mov aad inc dec mov and mov mov lret or pop push xor and movsb imul lcall dec adc shlb cs ret int3 test add (bad) or out and mov sub lock jno cmpsl adc add pushf pop xor out std aaa lods lahf (bad) push xor movl jb pop pushf mov sub jnp or stos adc jo mov push inc mov addr16 dec adc popf push scas xor lret iret pop xchg cs cltd sbb lock out sub or push push push push pushf push movsl pop push xchg dec mov cmpsl loop out inc add aad push daa cmp push add xor and mulb and mov rcl pop sub cmp cwtl jbe out (bad) pop and fmulp and lds push (bad) js xlat incl test mov stc xchg daa jg (bad) frstor sub shl ds enter and cmp fildll sbb push (bad) xchg into lods mov loop fistpll push pop sub sub jl (bad) xor sti add jecxz mov sbb add movl pcmpeqw cltd shlb xchg pop lret in das and mov popf andl fs xchg xor in mov test mov xor subb sub or dec pop add icebp inc ds rol xchg jae xchg lret in hlt mov test out mov push push fstl leave inc jmp es and cs and pop js repnz push popa pop jb (bad) jmp inc add scas repz and or pop mov stc dec xchg push mov or scas jp or stc pop cmp jnp add sub scas test cmp mov ret jg mov call lcall mov leave icebp call pop cld fldenv mov leave mov test cmpsb dec xchg mov sub mov lret and jecxz,pt inc aam jmp push shll sub mov pop jns sub push push test jo push cmp pushf mov mov (bad) addr16 sar dec std int3 sub dec xlat or pop out data16 sub daa cmp lahf lahf mov inc ds mov notl lds cmp repnz and imul sub pop xchg pop mov pop outsl imulb imul cmc jns lods lock pop ret sub mov push xor cmp ret dec popf jmp dec out stos cltd rorl or sub cs out pop imul repz or mov push cmpsb mov sbb loop cltd shrl add ret daa test mov je imul mov into out pop out out xor out shr pop sti out jecxz mov jmp pop leave enter pop jmp xor cmp cmpsb scas enter incl popl in xchg popf or ffreep xor pop mov inc (bad) adc adc lock pop pop cmp nop into test sbb jmp dec daa (bad) repz (bad) loop shl addr16 cmc sbb pop and sti lods fwait mov jge pushf dec data16 push add sarb aas repnz mov nop xchg add jge push sub pop aam pop adc sti cmp (bad) mov dec (bad) mov sub repnz sub mov daa xlat mov ret mov add dec cmp sbb stc or xchg ret pop inc negl push or xor leave je push call gs das (bad) cmp xchg push and cld jmp call popf je repz (bad) fstpl pop pop mov mov test add mov xchg push sub mov xor xchg pop inc mov and sub sub cs mov mov mov dec mov sub add imul and std iret mov ja nop mov rcll pushf fldl jb adc (bad) mov inc dec and popf cmc push fcoms push jmp mov movl or mov loop (bad) rcll xchg mov and jle pop iret fs mov icebp inc cmp sub jbe dec ret mov mov mov jbe push ss push jp or testl aas ja dec cmp lret add pop imul mov das pop lods in icebp cmc xchg out mov leave notb or mov scas loop movsb rcrl ds mov push je ljmp lret or int push sub add shl lret incl das popw popf push sti adc mov in adc sbb xchg or pop into ja jle inc inc xchg out mov hlt shll sbb lret aam add roll loope cmp mov cltd js cs sub mov sbb add or imulb aas mov das mov sub mov imul mov mov scas idivl push aaa aaa ljmp (bad) adc jl fcoms fist mov cli xchg pop daa jmp in das push mov mov xor dec adc jge fiaddl mov leave pop (bad) xor mov jbe outsl les iret (bad) flds sub outsl mull imul cmp mov lret lret jg es mov sub lods add in into cmp (bad) inc push iret divl ret fiadd pop xchg lret movsb adc addb dec (bad) scas sub xor push (bad) and dec lret sub mov mov scas rorb repz aad repnz loop stos adc pop test cli repz jge inc pop arpl pop and imul jnp bound cmp mov dec and cmp mov std fs icebp xchg or out out add int sub sbb add or ss sub sbb mov mov xchg (bad) loopne pop cmpsb xchg dec enter push jmp and dec daa and mov outsb mov xchg daa jge cltd mov add add rolb sti add aas and add clc mov testl ret daa xchg adc scas imul cwtl xchg ljmp jle lret fwait push repnz rcrb add jnp dec bound ror adc out pop and xchg imull mov or fwait cmp mov shll mov xor xor sub or sub stos fnstenv hlt imul pop pop (bad) mov inc jmp mov jmp pop inc cmp xor lcall add in sahf icebp gs ds loop bound imul or xchg xor pusha push out and in xchg xor fstpt insb jno or sarl jmp sub cmp cmpsb add out sti inc mov xchg and lahf stos and jmp fs sub in adc into xchg xchg out std in stc push dec stos sub pop andl (bad) (bad) sub mov adc popf jnp daa push dec mov mov std ljmp in jle jmp hlt in mov jecxz adc or pushf jmp or lret cwtl cmpsb movl inc sub pop jmp xor div pushl es inc inc dec clc leave hlt jmp pop sbbb xchg inc cmpsl add jns or shrb inc add push adc arpl adcb (bad) mov pop xor mov ljmp dec mov repnz lock pop sbb mov sti insb jae out mov ret sbb out adc in inc lahf or jns ret jg addb jnp or jno dec push mov loope mov lea pop inc push loop mov lds popa iret sub xchg arpl xor not mov sub dec scas lret fmull fsubr add push das add aas test xlat mov cwtl imul push pop and xor xchg icebp scas lret jmp or sub push iret jg icebp (bad) sti sub ret test sub and scas lds jae xchg fldenv xor jle loop sub and dec jns mov leave dec xor xor int3 dec imulb add ret pop adc frndint jle ljmp sub das mov sub inc mov leave in mov fstpt sub dec test dec or add pop inc cmp or cmp push xor pop xor clc movsl loope cmp and dec lret loop xchg icebp in mov stos mov loopne jg sub mov xor cs aaa lret (bad) ja outsl and loope insl je cli xor out out dec lea repz lret push sbbl leave xlat mov xlat push lods xlat les jmp jnp ljmp mov aaa test pop pushf xor sti (bad) stc dec test in sub ss iret sbb cmp test test loop jl in xchg cmp pop scas inc pushf clc aas pop mov icebp add rorl pop out mov inc scas cmpsl ljmp movsl negl repnz push jae or bound mov (bad) stc ja push xchg ret mov fwait stc xor pop jmp mov fwait cmovnp ljmp fdivrp lret mov jns mov mov jg adc in divb push pop iret or mov enter cmc rorl or mov dec xchg sbb xchg adc add scas mov ljmp push imul push lds mov popf aas jg mov jbe push dec sbb in adc loop dec sbb les popf loope dec sub mov jmp mov insl stc push ljmp das and fisttpll mov aam (bad) xor sub mov xchg loopne mov mov jmp lock mov loop jns add iret int sub adc mov shr push out xor stos mov outsb mov ljmp add push jmp push jo (bad) or lea jb enter xchg int3 daa sar pop stos clc push dec addr16 or cli pop add adc ret les fsubr mov outsb lret adc add mov or popa dec es cmp cwtl imul mov sub pop push cmpsl sub cmp btr (bad) ja pushl gs in cmpsb mov enter pop or jle pushf mov mov das mov stos mov pop xor cli lea jns mov subl mov and jb jp cmp sub jne pushf ja adc fnsave out movsl in das or shrl mov or mov inc in fldl pop cmpsl dec jnp lahf out lcall fdivs inc icebp mov andb sarl sti push loopne shr lea mov leave (bad) mov mov inc jno rorl dec stos imul jmp dec pop mov loop xchg mov mov sbb les daa mov xlat mov push and xor add jno xchg jmp adc repnz add cli dec shrb shll or stos (bad) insb jne aam loop psubusw xchg add bound lret pop pop aaa lds int3 xchg fcomi hlt dec xlat pop in jg stos and and xor jo add sbb repz mov jns dec leave es lock jle or xchg sti cmc dec xor or mov pop mov sar cltd cmp sbb jne movaps pop push cmpsl lock xor fmuls movb mov jmp aaa lret mov or sub scas dec test adc inc jb add adc inc cmp push xor or mov mov and dec (bad) push jne outsb mov (bad) xor pop and in xchg call (bad) ljmp jno add out (bad) xor jmp call shlb push sub in mov sbb pushf into add lret sub imulb add adc scas lret xor clc cltd icebp add sub sub lahf pop mov mov icebp imul mov sub shr and mov dec int push loopne roll inc mov pusha add dec or jne mov xor std (bad) mov pop int3 bnd mov mov repz xor mov add fs adc ss jmp push sbb mov and mov popf fsubp loope or fdivr mov bound xor fild xchg loope sub fsubrs enter adc ret or pop xor jecxz repnz sarb or rclb mov jae pop in orw push outsb sub out push push iret pop sar or int (bad) jl notl xor xor in negb fidivl push mov add pop push mov or or test push mov lea pop lcall outsl int3 xchg push jmp pop lock push adc imul rolb pop int3 insb pop push or jmp add mov add mov xor hlt lds call jnp and add mov add fldl fst popf or outsl addb sub or mov mov xor jno push cli jl jge mov call push divl (bad) mov mov adc enter adcb jns inc inc mov arpl add fldt push mov jg fcmovb loop add fidiv out or pop mul rorl jae sub test int inc mov and xchg fsubs add push push aad lret ds shlb scas dec test push mov push pop add dec movb xlat mov xor xor (bad) xor xchg adc (bad) or jns xor push mulb adc sbb or mov inc stc out xor cmp add sbb push icebp rcll dec scas dec sbb push cmp mov cmp out add fs es jmp jmp repz sub push popw (bad) mov out dec add add lret sub mov and add mov dec add aaa ljmp loop lcall mov pop inc jb or faddl (bad) sub add sbb pop imul ret fmul add fisubrl iret gs cltd shrb cli stos pusha sub mov not add cmpsl cmp stos or sub fdivrl sti xchg movsb out jmp shrb insl mov dec test fnsave adc loop lcall into and sub push rcll scas lods mov xor cmp stc fldt cmpsl out sti xor test pop imul call sub pop (bad) cld mov bound pushl js jae out dec mul pop dec icebp and mov pop mulb xor lds add lret push and mov (bad) mov pop xchg mov nop leave (bad) sub add mov jo dec mov (bad) outsl push popa enter test iret jecxz pop or jmp push repz mov roll push jo orb sub xchg lds sbb sub mov loop add mov or bound out inc roll inc lahf sbb mov in aaa xchg mov jle es pop mov sbb into shlb mov jo pop arpl fstps mov add cmp stc push pop sub idivb dec mov add leave lcall pop fistp pop out xor mov adc jle mov push and jge cwtl jmp test nop jmp test mov xchg jge incl insl adc and dec fs and pop cld or push (bad) scas loop testl sub xor mov sub add movsl xchg fs into hlt in sub fsts testb add (bad) pop pop mov sub (bad) cli sub test imul xor lret push test rclb mov and repz mov mov cmp (bad) js mov mov cwtl cld mov popf dec pop loope sub out mov jno mov dec in cli clc int xor and cltd leave repz icebp jo pop popfw negl fisttpl dec fdivrp (bad) repz mov mov pusha pop push mov lret or ret jg imull call xlat loope (bad) mov mov push int and mov pop jmp sub adc and cmpsl dec and cmp sarb jecxz in sti lahf jb mov pop mov jae sarb imul xchg mov jmp out test xchg xlat or jne cli and (bad) sub push xor push add test cmp jp mov fdivr out dec clc ljmp add aaa rorl mov dec and adc mov mov sti cmp jbe loop push or jmp mov dec aaa (bad) mov lds adc ljmp stc les stos fs int and pop ret dec push pop cmp rcrl lods lcall add or dec fidivl mov icebp jge mov jmp out sub gs dec mov leave (bad) lock arpl (bad) jmp iret pop or lods daa lret and jp dec jmp test movsb cwtl fmulp test das sub mov pop jge cmp inc loope add mov imul push jmp and leave aas and not dec lods out mov ljmp fbld fdivp and fcoml mov mov arpl data16 mov adc popf jl push dec testb popa adc push (bad) mov jns mov into fist iret (bad) movsl pop lds call mov ds mov push dec movsb pop out daa ja pop mov (bad) mov out sub sub enter scas out jb (bad) pushf std pop movsl mov (bad) leave jmp data16 mov xchg xorb bound jge fs pop dec dec in xchg mov (bad) mov push sbb into cmp aad xor xchg aaa sub and test fild xlat js ror imul dec (bad) jmp std dec mov dec dec repnz jae mov mov fucom ljmp fsts clc loop and popa and outsb mov rorl jecxz cld push jae inc (bad) push mov ret pop sbb sub popf fnstcw iret sub dec (bad) pushf add pop fnstcw cmp repz (bad) lea pop pop jmp sub stc jmp mov pop sub push decl into dec clc test cmp scas mov (bad) (bad) negb ret in xor hlt dec push not (bad) ss ret notb repz add mov push and sub leave sahf adc out cltd push xchg cmc out mov xlat ljmp mov mov std jne movb sub xor nop aas sub lahf (bad) ss test dec icebp in sub loop roll sub and rorl (bad) movzbl xchg push push fcmovnb pusha or bound sbb in push ret (bad) jbe fs or (bad) fldcw sbb cmp enter lods pop lret pop cmp shrl or dec movsb das ret xor repz adc xor fs ljmp cmpsl scas cmc mov std pop and (bad) dec lret movsl mov pop imul sub fbstp ss pop test pop dec mov xlat outsl lret in jb shll jg (bad) pop adc (bad) cmpsl push sbbl out ds sbb das push xchg add shll xlat mov and jle push shlb xorb cmp or push pop mov sti repnz insl mov add cmp pop imul stc sub jle pop push sbb (bad) stc and mov xor enter xchg mov mov xor popf jbe leave fsts push (bad) mov mov and xor push cmp (bad) jg je xchg and out adc mov jmp add sub adc jae and sti cmpsl or and cs sbb add cmp inc and adc dec xor lds mov or lea mov rcr fcmovnbe inc pusha fmull push xor pop outsl test mov inc icebp mov jmp mov sbb xchg js mov cmpsb sub mov jmp mov fisub sub mov lock lds movsl ljmp daa sub mov (bad) sahf aaa lret pop lock enter xor xlat fild scas sub rorb adc out mov test fildll rorl sub mov xchg stos pusha and rclb cmpsb push fld dec pop jge sub dec clc ljmp mov aas xchg addr16 push dec xor mov (bad) mov ret jl gs repnz das ret push lcall push jge dec mov lods jmp inc je lahf or cli push cmp cmp cli sub jge dec daa mov xchg sbb mov jmp and mov pop lret (bad) xor mov lods cmp jmp (bad) jne cmp aaa es or cmp mov divl sub jmp ss and dec sar inc ss mov out or pop cmp add lret je and mov mov cmp mov popa loop add pop fsubl lea lret lret push xor (bad) and xchg push push add jbe cs mov xor dec push mov lods sub fidivr cmc mov cmp repnz fidivrl xchg (bad) sti fisttpl push scas sub bound out xchg out repz jmp fild dec or fs sub movsb cmpsl std sahf jne jl mov xor and xchg out pop sbb pop lret or push add xchg inc fisttp stos out push daa adc push sub add pop outsl mov and jb xor into les fsubrp dec pop sub jo sub mov adc jne stos mov or imul xchg scas mov cmc fildll push lret pop movsl sti cltd subl mov js or push add or ja (bad) nop repz add negl (bad) popf mov mov and xchg mov lods mov sahf sti jb mov (bad) dec cld clc (bad) ljmp xchg out iret decb cltd xchg adc adc sti xlat mov or sub mov je iret or xor add mov xor imul push mov lret and cmpsl inc loop fwait mov inc add mov and adc scas sub jge inc out push adc out (bad) cmp test (bad) mov sub cmc into lock (bad) xlat out mov jns xchg fwait mov mov out xchg adc jb mov sbb aaa xchg sub jp xchg lret icebp mov (bad) and xchg or xchg call add insl sub dec insb mov add xchg into jmp adc mov push push ds daa clc inc dec es das cmp inc repz jle inc sub loope sub lods sub pusha jmp mov sub movb and add sub cwtl mov or sahf or vcvttpd2dq mov clc fsubs in push movsb loope cmp pop xor addr16 jne popf xchg ret inc pop mov pop add jecxz dec mov (bad) repz data16 cmp pop out sub push mov movmskps and cmp add icebp icebp jnp pop sarb mov xchg subb in test addr16 xchg lret mov jns xchg sub sbb incb idivb xor clc jmp bound xchg cmpsl xchg in das push sbb sbb xchg lcall or ret jbe jnp sub movsb add jmp fimul cmp mov mov sub push mov mov xor lret lea outsb std les pop scas pusha loope (bad) sub bound inc add ljmp jae mov cld pop sub mov mov incl arpl xor lods dec sub jg xor add sti daa pop pop inc push push mov sub addb pop sub pop adc popl xchg adc pop jne scas iret push das push pop out cmp decl add adc aad mov out jae pop add pop xor imul push cmp or cli sti cmp push ffreep roll or lock pop nop mov pop and push mov outsl push mov cwtl xchg adc stc jne movl jecxz loope dec not and inc xor pop inc data16 psllw adc lock jl int pop mov inc or outsl testl ret add sub insl xlat addl clc int3 leave idivl ds pushw popf jg mov sti minps sbb push push dec fistp mov cld dec das push push nop hlt test adc and xchg clc pushf std and aad cmp and xor lcall or pop or cmp into or pop xchg pop int3 in (bad) xchg inc icebp (bad) sbb lods sbb mov imul push jmp dec (bad) xor ret and add mov or sarb jmp push (bad) aam loop mov shrl mov movsl ret add ja out cli ficompl cmpsw dec sub aaa lahf add pop cmp jl and iret pop pop sub xchg out in stos jmp xchg imul push xor mov dec mov sub in mov test mov and or pop jne dec call out dec les (bad) negb dec mov mov shrl sub push jae imul (bad) repz jmp out sbb out xlat cmp and pop push adc mov push dec xchg in sub cli test icebp xor out pop pop fistp aaa ret jmp and sbb jno cmp mov inc repz or stc mov mov xchg inc jmp dec mov cmp jo push adc inc pushf aas fdivs or test mov outsl call xor jo dec out mov ret mov mov ljmp pop jmp cmp push jp push pushf pop sub xor and cmp and jp pop mov jne daa imul out pop in xchg dec gs push out cld mov cmpsb jg and lret mov ret fnstenv mov or rorl jnp jmp dec xor cli mov jmp outsb sub lock popf pop sbb xchg (bad) xchg push push out dec or popa xor cmp xorb pushf (bad) mov xchg pop sbb or and mov jno xor cwtl sub pop shlb push dec mov repnz out jge lret loop (bad) enter (bad) ljmp mov mov lret in js test inc add movsl mov mov dec pop mov out push mov int xchg inc adc xor pusha int3 ret and fcmovnb mov rcll pop repz js rcrl jecxz je push cmc push cmc xchg fsubp nop notl mov das sub out lahf icebp cmp pop lcall out sub push mov xor rorb stc popf jbe push ds xor push xlat ljmp cltd mov das jmp cmp sub mov push lods adc leave cli mov ror lret notb (bad) pop lds lods fimull outsl mov test lods dec or (bad) sub jl ljmp xchg rcr adc adc mov adc scas mov dec popf inc xchg xor idivl mov dec jnp rcll and fdivs pop xchg pusha call cmpsl mov or add mov and add cld adc out stos lret stos xor pop xchg bound sub jno (bad) sub repnz out cld pop and xor test push jne mov lock jne aam leave gs mov adc stc rorl sub loop xlat dec pop das pop cmp and imul sub out fs add cmpb in pop and cmp jg in popf push add sbb testl push stc (bad) xchg lret cmp add loope out sub lret stos mov xchg test dec cmp ret mov in inc jg sti das sub insb test out mov fisttpl dec jno add fs scas push mov clc cld lods lds ds loop and adc lret jecxz and dec push ret mov sbb (bad) mov (bad) or movsb (bad) enter inc mov lret or testb mov rorb sbb and mov out je std mov mov xchg pop mov jle repz sub or sub inc jnp or mov out adc add xor flds (bad) pop icebp out dec mov xchg sub (bad) not push les xchg cmc mov jns inc and or sub cmc jbe sub xor scas test cli aad scas ret push jmp dec int3 adc jnp adc decb test ja lret out push push repz and fimul dec rcrb dec test aad mov gs mov pop or movsl jbe movsl (bad) movb and ret mov adc inc fstps mov clc cli sub outsl mov cmp xlat xchg pop mov adc lret sub jne dec jno push hlt enter iret xor mov call scas addr16 cltd push xor jg pop push push mov je popa inc (bad) or mov or push outsb iret daa mov pop test adc xchg push popf fwait inc in int dec xor xlat push mov leave clc mov loope insb push xchg adc push lret jbe daa pop setb cld add (bad) rcrb push iret dec outsb push inc mov test fld mov mov xor pop xor sub aas jo or add imul jmp mov ljmp sub jbe adcb add jmp jo mov dec xor and add sbbb or inc push jg inc call and pop out mov fmul pop adc (bad) out jmp out cld sub into lea sbb jg out (bad) sub sub loop fist add (bad) jb xchg jbe repnz in jnp into dec cli xor ret daa and notl xlat and ret push mov shll xchg mov or int3 add mov aas push ret lcall xor stc add mov pop loope xor imul aas adc or in int (bad) adc stc cltd sbb xchg (bad) adc jmp adc xor lcall pop dec pop (bad) test dec mov push fadd or jl iret fidivl fstl pop (bad) imul add into in ret int mov andb enter and pop or decl (bad) lret cmp mov shlb jmp and popf jno adc rcl xor push add mov mov (bad) sub push adc mov fist out add (bad) adc inc loopne,pt (bad) in xchg push sub movsl or cmpsb sub icebp adc insb and xor loope jg and ret aad and cmp test jmp in and repz cwtl pop or push adcb out bound push scas je xchg pop or out push icebp daa adc mov clc cmc out sub negb xlat repz xor cmc out loop xchg fadds fnstenv ret push pop jmp mov adc mov bound fidivl add repnz sub in jg stos dec ljmp sbb mov sbb add jo sbb add ljmp cmpsb jno xlat movsl test (bad) out add add pop jns sbb sub mov dec outsl or push inc jo add mov shlb dec or mov cld dec push ret mov jbe jb pop lahf (bad) mov insl sbb dec cmpsb mov or pushl ret dec loope adc js add in mov sub lret add mov dec lods jne add aaa sub les ds test adc imul adc out adc dec jmp rcrb mov leave into insb cli dec lret in andl sub negl xor xlat xor scas fs testb mov sub push mov out sub mov adc dec popl and add lcall xlat push and pop pop xchg ljmp fbld cmp cli repz lret mov inc xchg xor loopne xor ret lahf push mov lock dec sub mov mov jl cmpsl jne jnp cmp decl dec (bad) fsts push push mov rcrw cli ficomp pop mov dec dec xor jb out pusha cli or mov test push mov push out icebp scas out adc sub movsb leave mov ret or xchg or incl popf cmc or scas xchg ret in movsb out ret push pushf dec mov add fst inc adc (bad) add mov xor mov aad xchg xchg fstpl pop xlat xchg and aas pop jne (bad) cwtl lea insb add sub les mov int fldt testl mov pop ja aas adc (bad) repz movsl mov out push outsb jb and pop js xchg inc push xchg lods int3 and fld add mov (bad) mov lret mov fucomi mov stos je clc push or adc push lock pop sub cli gs jmp in jnp insl ror sti push repnz push (bad) sub xor dec push lods cs xchg (bad) (bad) gs mov cmp test movsl mov sub notl clc xchg mov xor cmp push lret xor or out icebp (bad) and pop xor sub jmp nop sbb rclb cs mov stc pop or xor sbb popf sub jnp test fs or fsubs push gs cmc in scas xor mov cmp je lret negl add jl test cmp lods test stc inc mov hlt xor addr16 ret ljmp xor add add dec mov imul adc cmp jo (bad) jbe push or cs inc pop pushl orl xchg mov leave decb jb aas aas int3 mov cwtl movl jbe push inc mov (bad) and stc jae das lock sbb lret add xor fadds repz inc cmp popf sbb mov xor jno ljmp sub loop lret or rclb imul movsl adc pushf xchg popf sbb lock dec test inc out dec lret and xor lock ret pop xor ror stc cmp js push add scas insl cltd sahf es sbb sbb push ds scas fst push ja test enter std xchg lahf inc push add (bad) mov mov dec mov daa sub aaa mov xchg mov popa cmp pop sub shll or ljmp jecxz adc (bad) mov mov mov jnp inc ljmp jns jno leave incb sub pushf xchg bound pop ret cs xchg push xchg outsl sub jle imul push push sbb daa rorl popa sub stos jb or daa xchg jns dec ret sahf xchg scas jne stc push (bad) bound lods nop add call popf dec add xchg or sbb sbb jmp lret and pop iret daa outsb inc cli dec pop pop imul add mov js fwait jne push adc pop bound call sub jns xchg repz fbstp es pop repz sub and imul into (bad) popf divl adc (bad) bound (bad) xor xor dec or xchg popf pop inc and and push lret (bad) enter out mov (bad) cmpsb imul pop pop iret inc (bad) xor int3 jns mov inc push sub mov shll add push jl and stos sbb imul mov (bad) int3 push adc mov or mov xor out in in and push pop (bad) jnp jo push inc inc cmpsl addr16 pop (bad) pop imulb les in push jg sti sarb lret mov cld out mov fistpll inc cmp jecxz fwait sahf xchg rclb pushf cmp rdtsc sti sub and andb mov cmp cs dec das (bad) mov aad das add mov cmp scas xor ljmp in imul jne jmp adc scas jns add sub jmp xchg cmpsl jnp cld inc push push je rclb mov outsl sub daa sbb sarl sub or mov in shlb add mov and pop push mov rorb (bad) fsubr push cwtl fs test fisttpll xchg inc jo out mov pop ljmp xchg sbb mov sti mov pushf xor cmpsb xchg fldt ds push ds dec mov imul or fistp imul sub cli int add cmp fsts ret aas gs scas dec xchg iret cmp ss ss mov push out repz sub je mov negl mov jmp iret inc or sub (bad) pop mov xchg lods lds call sti push out sbb or push sti movsb out movsb loopne xchg jle push fsubs lock or rcll mov in push lret mov pop push jno cmpsl js dec ss imul xor sub mov sub xor not push nop popf (bad) cmc ljmp sbb cmc xchg jge sub cld and leave dec or out les popf bound mov or ljmp shll or pop lcall push or cmp jg push out fs mov push sub mov cmp dec mov dec pop (bad) mov mov out (bad) mov (bad) fiaddl push data16 mov scas cmp mov imul and cltd into jle lods dec clc xchg push mov jo and mov inc sub jns lret or sub pop push xchg adc test ret push das or push mov cmp jbe dec mov popa insl mov push add pusha add mov and or cmpsl cmp cmpsb shll loope jmp or js mov cmp add xchg ret pop jp dec icebp cmpsb sub ss mov mov and pop inc push lret xor or imul cld mov lahf jne adc cmp or sti lock inc lods repnz pop test sub cmp jb (bad) pop sbb mov push pop lods in fsts cmp pushf mov mov mov xlat out dec ljmp push aas mov pop dec mov cmp divl inc in push popf xlat mov jmp int3 int pop movsb xchg sbb lret jo dec mov je mov sub sti mov inc and sub jle stc pushf jl test test pop pop iret mov test lds into jle mov add gs inc dec mov call xchg push test pop out sub lods int3 fstl insb js xchg stos mov adc mov into push dec int3 sbb mov lea lret jbe vmaxsd (bad) adc stos adc js push stos push sub cmpsb sub popf jg adc (bad) rclb mov cmpl lock mov add and or xchg gs mov int3 dec sub clc (bad) xchg jl jmp das xor jg mov pop mov mov and pusha xor add push add push lcall inc cs inc add xor jecxz js push xor out mov jmp bound jmp popl xchg push fwait mov mov daa out out das sub jns movsl bound fwait bound mov test dec or mov out and mov pushf mov mov stos cmp mov test and lods out enter loop ja into pop xor repnz imul mov rcrb lods dec and dec mov adc leave pop in or into cld adc ja in std int3 jge es xor push fsubrl lret aam adc loop fisubrl out sbb mov mov jmp add dec stc in adc cmpsl or repz decb imul xchg or xchg data16 xchg xchg mov test fsubrs clc dec or cmp pop popf ja fstpl lock jns add enter leave adc sbb ret icebp bound lock and inc mov les pop mov and xor sub in aas xor nop aam and adc sarl mov popa sbb sub add loop mov adc fsubrl or and fs outsl decl loop fistpl sub pop dec int (bad) or out (bad) dec xchg jno xor and inc dec xor dec push (bad) jnp mov sub add bound inc jmp in mov fist out dec les scas mov pop push jns (bad) and ret cli mov ret dec pop out adc pop cmp ret push pop dec adc je mov sub mov stos xor and ljmp mov shl (bad) out nop enter fistpll in shll imul mov mov push mov push xchg imul fadds xchg xor push or (bad) push lds mov (bad) cmc rep jnp stos mov je jp test mov xor jns gs sub xor mov lods pop xor inc inc xchg and out clc adc jmp xchg (bad) mov (bad) vcomiss cmp fdivs dec mov add fmuls sub sub and sti lea xor add lret sub xchg xor out repnz dec out inc daa pop cmc or mov fdiv outsl mov pop out push xchg inc pop pop stc enter cmp lret or jne pusha mov cli push jg bound sub mov mov xchg call mov sub or les push clc test lret lret fsubl lahf test lret imul es sub xor stos (bad) (bad) mov ljmp push sub ljmp sarl sub pop les xor mov cli daa js sub dec test ficompl sub inc sbb push or addb xor pop mov popa cli call add ret cmpsb ficomp mov sti loope cmp cmpsb lcall mov repz pop pushf cltd xchg inc fimull aam mov xor sarl pushf incb jbe dec and ja fnstsw sbb and outsb aam add adc (bad) mov xchg ljmp xlat jne sub add movsb push and push and pop rol mov push dec pop mov outsl inc or pop fndisi(8087 comiss scas and mov inc aas xor mov xchg addr16 push stc lock fcoml sub xor cmp dec mov mov dec jmp lods pop sub test movsl rcrb (bad) fnop sub mov mov cmp sub mov lahf xor mov lahf jne (bad) aam mov jmp icebp out xlat stos cmpsb clc and dec mov mov mov fimul loope inc sbb or or fbstp mov jmp add sti sub and jb xor cmp (bad) sub repnz test ja imul pop mov mov in xchg (bad) xor xchg pusha mov inc out mov (bad) mov jo mov xchg push mov stc dec cmp adc lock ljmp xchg mov mov cmp sahf add test lret roll cmp fimul iret popf mov adc std enter rcrl (bad) mov cmp insb int3 mov mov loopne fildl out popf fdivp jno ret push stc mov jecxz loop test shr mov repz insb jmp mov push imul mov enter mov or add cli push jle jno ljmp inc call shrl fdivrs and mov add mov pop pop xchg add bound (bad) pop add cmp out popa inc xor scas push pop sbb sub dec adc jne dec push (bad) jp shr mov mov dec (bad) fsubs or enter mov stc add push or test in pop pop cmpsb in pop add roll aam mov jae or sub xor negl mov std dec pop adc mov push sub and hlt fucomi cld cmc lds push xor dec jmp mov cmp pop mov add mov packsswb pop xchg lods push xchg mov adc out add into pop or pusha inc xor mov inc stc rolb sbb add inc or scas (bad) hlt aad into jmp aam cmpsb jne sbbb shl mov cli sub jg pop mov or rolb dec ljmp out add pop notl sub mov mov daa and and and sub repnz fldcw jle push sub out add testb and (bad) mov sub cmc push xor sub lock aaa movsb in xor icebp movzbl sub (bad) xor (bad) mov dec das loope xor jne mov movsw dec repnz sub xor pop jno inc leave inc xor and pop int3 cs add mov sub repz adcb imul rcll popf lcall xchg (bad) rcl jns imul and (bad) ljmp cmc jo xchg rcl inc add insb add test mov clc sub jnp jbe push pop (bad) xchg pop icebp xadd and or out jne mov and popa bound push das mov or xor out xchg (bad) mulb pop movsl and das push mov repz gs push rcr push push sub xchg out (bad) fiaddl scas iret push in test or and dec das idivl (bad) jmp adc lret and dec xor sub mov popa mov lods test cbtw or divl imul lock xor add jb (bad) jbe push xor mov push mov jp jl (bad) cli imul cli lret mov leave loop in das insb sub vcvtsi2sdl sbb fimul imull les push dec movsb call sbb (bad) mov ret or inc (bad) pusha icebp and sbb call push jns adc mov ja inc sbb cmp scas sub mov jns mov out das (bad) gs bound iret (bad) xor (bad) mov or xchg (bad) dec pop in lods push xchg sti sub push std cltd push jmp cld sbbl sub leave rcl in and mov (bad) dec inc cmp sbb xchg xchg pop adc mov fist movsl jmp and adc pop scas add in mov mov sahf insb sbbb scas fst adc stos cmp idivb pop outsb push sti jmp popa push inc cmp sub stos stos cwtl pop fisubl imul inc or xchg pop mov push outsb ficoml dec push xchg into mov lret mov data16 dec dec out mov add cmpsb call cmp mov jle iret inc mov dec mov xor dec cmp pop pop bound repnz mov arpl subb test xor gs test stos sub inc mov xor xchg lret popa loope or test pop mov mov mov pop test mov (bad) enter lret in jp popf push into pop iret outsl jecxz lret out adc daa sub cmp add scas inc dec out fucomip cltd xor pushw je (bad) jmp outsb iret pushf addr16 popa loope pop loope jp pusha test xor bound loope js (bad) lret xchg lods fwait mov call mov pop sahf movsl fiadd pop add leave xchg or lods outsb dec (bad) mov pop jae jl xchg add sub mov and (bad) sub sub sub sub sub mov mov lods call add mov mov pop stos and insb add ret mov dec xchg xchg xchg test das fistp je mov xor mov mov add cmpsl sub (bad) cmp and or pop pusha sbb lock and pop or out sub xor and mov lcall mov sbb sbb leave xor push add jns and (bad) sub and dec loopne leave icebp cmp sbb call jmp mov aam aas lret lret xchg loop inc dec and sub aad pop sub aad adc sahf (bad) in leave xchg inc or jno cmp ljmp adc lret and pop xlat insb sbb add rclb and mov in xchg jmp dec mov fadds negb sub and add xor lods cmp mov scas mov and es push xor pop and scas pushf or sbb xor mull (bad) jge idivb pop ret sub add xor divl or enter bound adc jae pop inc pop mov pop add add out mov enter daa popa cmpsb das push sbb out cli cltd mov xor mov das dec sti sub xchg cmp and (bad) lcall add and xchg repz out or out sub adc out pop xchg xor loop pop add add ret inc popa aaa add and lahf mov or jno dec push inc das sbb nop and jno roll sub push in cmpsl inc and add mov push insl ret inc (bad) jg sub xlat mov lahf xor xlat mov pop pop test mov cli in es mov fbld mov mov and scas jne xchg (bad) mov pusha or xor jno clc jecxz aam enter inc sarl inc add test jmp in sub xchg outsb test and mov lock inc sbb jle jmp or sub lret movsb dec cld pop (bad) mov cmp sub and dec (bad) mov rorl loope sub mov xor jge stos das hlt pop jmp gs inc add sub xor sbb stos les rep inc daa add adc cmp add and jns lea shlb mov hlt adc push sarb bnd pop sbb sbb cli movsb inc ljmp jge ror into daa inc ja jmp add imul xor mov xchg sub sub lret push push movsl pop adc pop popa lret hlt lret or sbb inc mov mov mov imulb das shr loopne mov jecxz hlt ret xor push aas inc fwait (bad) test mov flds gs les jge add cmp out das sbb jo jo xchg mov mov push in pusha (bad) mov add mov mov xchg or mov cmp xor rcr repnz (bad) cmpsl pop pop cmc jge push fs cmpsl rcrl xor pushl and pop push sbb jge jns test or jae sub mov and cltd jae xchg jge rclb pop push out xor pop fsts pop test arpl scas inc cmpsb arpl xchg and loope out xchg jne push mov into pop mov dec decb jg jns adc or inc dec je out imul push aas and xor or mov shl inc and rorl xchg out inc dec cmp ljmp dec xor push lock icebp dec add xchg xor int3 jae cmp and push dec in or cli imul or (bad) mulb jns sbb or xchg fnsave pop pop push push aaa xor add cs sub jne repz mov mov ljmp pop jno sub sar mov mov mov add icebp test and lea rorb call lods pop dec jmp out je call mov adc popf push xor sahf jne add add aas push xor push sbb xchg (bad) mov vrsqrtss sbb mov leave rcrl out dec xchg pushf out divl inc and xor stos and fldenv inc xor adc jns cmp cmp mov xor imulb xor inc in test or sbb mov nop mov outsb jmp adc sahf mov leave fs mov sub and pop gs out mov lret push add sub add mov fldcw (bad) ja sub loopne inc and dec jge push inc out sbb movsl rcll dec in shr jnp mov sbb jle jmp pushl push xlat jmp dec mov sahf pop roll lret xlat fnsave add add test add jge (bad) fbstp mov sub repnz aas pop rorb movsb jmp add mov stc inc dec lds test add fdivrl into jmp sub pushf and mov sbb out cmp aas imul xor lods inc in inc jecxz outsb je pushl sti add cmp jno push gs xor adc out pop mov aas loop shrl sub dec rcrl jle jmp iret cltd mov inc fisubl push imul xlat fxch movsl rcll sub fwait gs in shl mov inc ja sbb mov cmp and sub sbb push out sub and push push add loope sbb xchg xor push fwait decl ljmp (bad) mov pop enter bnd scas xor mov jmp aam xchg repz sar daa pop mov sarl xlat push mov cmpsl not fdivl or add xchg xchg (bad) (bad) dec or in daa xchg gs fstpt movsl roll ret or mov (bad) mov or inc out mov (bad) cld mov negl imul (bad) dec sbb mov or call mov add iret and adc (bad) ja (bad) mov push push aaa sub mov aam out out sub imul loop (bad) xor mov pop ljmp dec mov icebp push mov and out pop (bad) cli add into bound sub imul mov or and clc xchg add and pop mov lods (bad) xchg or (bad) ljmp into (bad) xchg (bad) (bad) out lret add bound cmp lahf loop push pushf loop (bad) and cmpsb dec bound mull xor int ss dec and mov mov xor stc mov pop ret xor mov sti sub dec gs mov xor add adc pause lcall outsl xor pop into dec mov (bad) icebp scas call lret loopne aas insl sub lds xor scas int push cwtl jmp xor adc cmp mov dec ffreep add cwtl scas xor addl or je cld jae fdivrl dec xchg test fildll jno dec loop sarl cmp fs icebp repz (bad) and sbb inc stos jo repz imul divl mov jge xchg pop push xchg pop sub fs aaa push in stos test push outsb into or mov in es movsb dec adc scas mov js into cmpsl inc pop cmp push gs (bad) lahf jnp or pop stc inc enter imul mov test push or adc pop dec das repz cmp pop test lods add cld jle add pop lcall mov mulb xchg lahf mov lods lret faddp jb push cwtl cmp dec jecxz decl pop imul inc sub cld push dec (bad) in test mov xlat xchg pusha cmp shrl sti gs sub repz push or test push rorb pop ja push insb cmpsl cld and sarl and pop mov sbb jb sbb popl mov mov and inc fisubrl lahf sbb in jecxz pop sbb add or xor jp pop sub and (bad) out adc stos into and (bad) and sbb enter push xor dec sub pop sub jge testb data16 or mov inc and icebp stos cmp icebp cmpsl fldt and lods int3 incl mov inc or nop (bad) dec icebp cwtl add and popf xchg sbb dec imul jle loopne push sub movsl ja inc repz cwtl lcall mov sub jmp in xor mov insb lcall cmc dec rclb cmp les add ljmp lahf es sub mov adc mov jmp test or jge fsubr out mov or aas add out sbb sub push xor incb shr (bad) cmp test (bad) mov and xor push add ret push push jno pop mov aaa jb ret pop (bad) and (bad) mov jbe,pt mov sarl (bad) (bad) mov mov cmp mov push add cli sub push data16 es pop test imul fildl sbb (bad) adc pop ljmp dec push push mov das ljmp xlat leave fnstenv icebp xor add repnz lret mov into std lahf dec imul loopne (bad) sub scas gs in lods loope cmp cmp cmp push lret mov mov cmpsl xchg lock xchg insb fwait ret repnz push push int3 imul shrl mov lods movsb jne leave mov sub sub sub xchg jbe jno cmp lret xchg mov mov sarl jo xor cmp adc outsl mov dec and mov push (bad) and mov pushl xor (bad) mov int3 sti inc dec jmp mov lds cmp scas cmp cld mov xor sub mov dec aas ds fisttpl mov jmp clc jmp (bad) xchg mov icebp sub out fistp int mov mov notl push outsl mov (bad) or cmp jne sbb mov pop pushf lahf ret dec mov adc repnz ds test push daa out dec idiv jns xor cmp (bad) mov scas mov and sub adc in ss bound out or cld mov sbb adc mov mov les rcl jo mov dec (bad) lods pop cmp mov (bad) cli ret addr16 insb cmpsb clc lret pop or xor mov push sahf test mov cld jns (bad) mov xor inc xchg xor fstpl fwait bound idiv push aas negl lret gs test xor mov xlat frstor mov xchg cmpsl das sub add into jmp or mov pminsw fcomps clc in out sub sub pushf pop fisttpl cltd sub fxch pusha sub in xchg mov sbb loop daa rorl push daa test cmpsb fsubrs pop out jecxz into scas cmp sub inc add (bad) xor sub pushf mov sar lret lds dec pop scas je ljmp std cld xchg or int3 inc or icebp clc sub xor or jg sbb aam pop call data16 nop repz xchg aad inc cmpsb ljmp (bad) mov dec push lahf adc mov mov pop cmp stos adc inc push mov repnz mov xchg push fs push push loopne bound movsl std lds sbb jae sbb cmp aad insl testl (bad) int3 loope sub mov inc xorb lcall gs mov das mov fadd (bad) int out in adc repnz shll loope xor gs mov cmp mov sub push dec dec imul (bad) fsubrp jge ret mov stc adc xchg hlt jp push adc nop das adc lcall sub sbb push and xchg ljmp add adc cmp xlat jbe pop pop or icebp outsb cmp xchg scas arpl or mov insb add out sub ljmp sub leave dec add inc mov (bad) ds and mov and cld in mov cli jl pop frstor dec sbb test clc lods pop (bad) mov in (bad) mov mov das xchg jmp (bad) outsb insl xchg or pop (bad) push out imul ret movsl pop jecxz (bad) notb lods pop icebp jae pop pop or mov (bad) adc or pop das rorb sub xchg ret xor ljmp add xor fldcw neg rcl test add neg push (bad) mov (bad) sub sub sub push in xchg into ljmp and cltd xor in sub add mov sbb fcompl hlt gs and insl shl outsl loop fist sub xchg stos out dec cli or rep lods in sub (bad) scas lret cltd pop mov loop int3 ljmp jle fdivrl or pop dec pop sub (bad) pop mov inc mov in push js lret mov (bad) or (bad) stc push xor jbe push mov lcall scas jae insl jp (bad) enter pop orl lods movsl adc loop sub inc mov xlat cltd ja cmp idivl ret add jne mov gs and scas (bad) or pop (bad) sti sub iret mov hlt in addr16 mov cmc jnp outsl or into jg or (bad) mov test ret xchg (bad) ja call mov in push adc shr ftst sub pop or pop aas mov adc or clc (bad) mov ja mov mov pusha (bad) (bad) and addl enter xor or sub out sub pop cli add dec mov cmp dec mov cs imul icebp xchg fs mov or idivl cld push leave sbb aam out xor fsubrl popa repnz xor cli fadd xor gs mov sub (bad) mov pop (bad) rcrb dec out cmp mov out push btr mov push notb inc sub sti cwtl aaa sub or (bad) xor xor xchg leavew mov add xchg or enter test mov test pop add xor je in in xor test add mov popf gs movsl xchg jg add mov adc add negl and xor enter jns xchg cmc in lods push cmc sti shrb and push dec ret mov xlat loop mov push loop cmp inc cmp int3 or out pop and mov pop sbb xchg sahf imulb sub aaa popf test mov xor ficomp and enter cmc xor inc jge mov and in add mov mov (bad) add inc and jno mov icebp pop int3 cmp lods sub into sbb test xchg xor mov lret leave mov push das xor xor jg fwait xchg repnz sub enter sub or mov in sub mov or push adc rep andl in push fidivr dec mov add and jg mov add lock rcl call mov mov or xchg add (bad) out fs aam scas mov and cmpsl mov into mov dec (bad) mov inc sub ret lret ss pop mov and rorb sbb lods aam push popa sub movsl push (bad) in outsl lret aaa dec int3 xorl sub mov cwtl push xchg push xchg push call insl mov xor sub jp mov push pop push jb cmpsb push xchg or pop xor sbb fmulp adc repz insb push iret and add cli lods mov push add divl iret jge xor mull jg andl jae mov mov pop pop popf repnz mov mov (bad) push pop bound xor jl jmp mov (bad) out ud2 add sub movsb xchg add aad add lahf jl imul scas xor clc add add cmp mov sub bound (bad) sbb sub xor idiv sub mov and add icebp xchg jnp scas lock sub or test pop and and cmp adc ljmp or in daa hlt inc push jae maskmovq adc xor or add mov daa into jl leave in push pop or mov or adc ret sub push inc repnz loop dec scas and ret std leave xor sbb lret movsl cmpsb inc daa jl push cli or and pop or push loopne fdivp loop mov pop div ret aad test sub in xchg and fnsave cmpps repnz push xor xor mov lcall sub adc lret jp xchg mov (bad) mov push pop ror xlat or mov mov sbb aad ja mov into decl mov popaw iret outsb mov notl sub clc sub inc mov or xchg xor pop cmpsb imul mov mov jbe xor int3 iret pop xor (bad) xor clc in and lods push jmp out das in dec mov jl dec sub loop add mov cld imul ja dec lods jae and add shll dec xor rcl mov and lret movsb mov mov add mov add add mov mov ja jecxz jge arpl aas xchg lods jmp aam pop shrl xor notl leave fisub jo loope pop and cli lret adc pop lds call adc cmp pop pop lret or neg dec mov sbb (bad) jecxz es lds scas dec fist mov iret dec (bad) aad sbb xchg (bad) rorb push mov pop push dec push or jle scas xor and pushf or dec or scas sub roll add xlat pop add sub outsb mov xchg mov lock push out xchg sbb or mov test mov clc mov rcrl cltd fstpt or cli ja xchg or movsb sbb xchg xchg mov mov sbb xor fs (bad) and pop or sub ds clc xlat lcall pop and inc xchg xor inc call push lret in mov adc inc mov aad arpl dec xchg mov into out xchg notb clc addb ds jmp add in clc xchg out popf jge mov inc mov and mov pushf xchg fs mov and (bad) sub ss xchg out sub xchg dec cmp call inc push pusha push jmp aaa mov daa add js cltd adc mov push adc mov and loope and xchg sarb stos or rcll or or inc push add adc jno mov into sti push mov push lcall add std pop test subb imul sub or pushl (bad) push in test mov or sub add repz inc and sub inc leave ljmp sub inc lret in xchg clc outsb leave rol fist bound fidivrl fucomip inc das ret lcall cmp add mov and jp pop pop int3 (bad) aaa mov jle push dec xor jg out push mov sub pop dec scas xchg pop loope dec out mov xchg dec adc push fnstsw jmp (bad) idivl jnp fcompl cmp mov dec xor adc lret add sti arpl mov push call lret or xchg lret jl adc cli adc popf jne lock or mov xor xor out fist leave pop jbe or fscale enter sbb add push push in rcrb fisttpll sbbb lock mov mov and mov mov add or sub scas mov push jg in test nop daa mov icebp add and mov xor test cmp or and mov push lock cli rcrb cld add aaa cltd add dec aas stc or bound xor popa add mov push (bad) out or or jo xor push add shrl fisttp (bad) xor aas mov xlat das and sub xchg clc outsb dec or mov xchg inc cmp mov sbb mov daa push mov movsl neg adc in mov jmp push add in jno xchg mulb sti mov mov dec sarb rolb es push shlb sar outsl fs push jne stc aam int3 push fmull shll ss leave repnz mov jg push ret jecxz daa repz mov mov loop cli pop inc mov insl gs jecxz push out pop xchg loop sti std add (bad) mov nop das test movsb aaa mov adc lock movsb mov and scas leave mov in inc mov cmp (bad) mov mov add jne scas das sub aad jmp pop inc sub dec dec mov (bad) lret xchg or fstl fwait mov xor aad add sub xlat mov and lahf mov pop aas test xor jnp jecxz popa dec add bound pusha sub or xchg and ljmp in insl cmpsb fcoml lods xor mov int mov aad fdivs scas std mov iret jle pop in jnp xor jo fwait fwait xchg sub add sbb gs jecxz (bad) or rorb sub (bad) into lret rcll dec ret enter out mov or pop clc orl lods cs arpl daa xor pop arpl jmp icebp inc sbb addb adc mov out xchg mov out pop aaa rolb and sbb mov inc leave testl fdivs or divb or idivl adc ljmp cli push std mov push xor rolb xlat dec or fs jmp or fimull mov mov and dec addr16 fmuls cmp cmp lods dec cli sub aam lds cltd push and mov sub repnz aam imul inc xor cmp jnp daa adc clc dec xchg jmp inc lahf dec divb mov sar push cmp lret dec adc pop xor push mov negb jg sub (bad) notl push push leave (bad) lock add mov test andl xor loop cmc mov lret cli (bad) xor decl xor lea rcrb or out fistl pop (bad) mov outsl and jns mov lds jne cwtl inc sub lret xchg fwait in cmp mov stos jne xchg and pop (bad) in xchg adc add imull mov daa roll movsl sub adc mov outsb sub (bad) jle jmp mov jno imul sub xor or rcll add xchg imul je leave aad push add add mov lret roll lahf repz outsl adc fcomps xchg inc add inc add xchg leave xchg (bad) fsubr xor outsb pop dec pushf repz jl iret inc leave xor and inc sarl or xor jns bound ljmp cmp xor mulb xchg and mov sbb fscale loope gs mov or pop and or sbb inc ffreep push push mov pop test pop loope out and popf push (bad) es enter popf fmull insl pop xor (bad) jb pop inc ror pop and dec (bad) and sahf shrb xchg fs into pop sub mov inc push jns call (bad) mov pop adc arpl mov (bad) pusha es or fwait lock inc fcoms adc pushf dec and add sub mov pop sub mov movsb cmp fwait (bad) dec push sbb ret lret dec dec je xor in jge sub out pop fmulp push and and mov fisubr or in stc hlt ljmp out daa xor hlt ljmp xor out out daa out fcoml or and push sub dec push xor mov sub aam jecxz jl dec jmp sarb push and push jge test mov or (bad) mov jp popf jne ret xchg lahf leave push ljmp hlt scas outsl xchg fldenv xor stc mov fldcw outsl (bad) out mov dec jmp insl lret ja push inc xor iret jmp mov (bad) jae xchg cmp sub jne sar rcrl xchg (bad) cmp cs pop out ds (bad) push les xor ret mov add jg imul mov xlat mov adc mov pop fs mov out das add enter cmp add inc adcl in repnz dec aaa mov dec fcomps jecxz add xchg xchg or mov jmp les fs lods and xor stos jae lock adc mov cmp adc (bad) dec xchg test popa subl in and inc jne pop aas outsl sub and inc repz in and jns sbb popf jmp jmp imul pop movzbw push clc mov cmp cmp add rcrl and push stos mov mov add lock jmp sbb pop push add dec shr or in in sbb aas jo sbb sbb in push mov (bad) cmc add in xchg mov insb shr add jmp mov xchg and pop add sti or std jg jo xor (bad) js add clc repz jmp push push loope pop sbb inc sti mov push (bad) rclb flds repnz xchg cmpsl pop aad push sbbl add pop js das sbb jbe aam xchg push ret dec and pop popl sub (bad) imul pop pop mov add stos mov inc aad test cmp inc xor pop and dec or cwtl sub cmp mov add or jns cmp rcrl jbe pop jge lret mov or jg ja dec aad xchg not and ds pop pop xchg push movl push rcrb sbb jnp push mov pushl push xorb cmp jns jge ss fwait xchg pop and and (bad) push inc mov or push dec jae cmp jnp divl aas pop rcll orb push mov pop (bad) jle jmp dec cmp sarl push push in insl and les add and subl das pop shlb xchg jns or fimul ficom iret and in sbb jne roll cmp add push stc sub mov ret xor (bad) mov pushf sub pop xor mov push (bad) call or aam and jno cs roll xor or pop xor pop (bad) in fildll mov pop sti fs mov push mov sti xor rcll xchg les mov inc push add dec ss adc push push xor sbb jg in cmp pop arpl test (bad) mov cmp and data16 mov in and ljmp (bad) not pop cmpsl nop shrb negl (bad) cld pop add mov rorl pop dec mov add stos inc xor je xchg sbb shrl lds jbe movsl std lds xlat out sub and mov pop mov in lds add stc pop dec and test mov mov popf scas insb ret xchg fwait nop aas mov imul popa mov hlt popf pusha notl mov int push jo stc xor and or xchg dec mov cmp and sub pushf xlat cmc outsb outsb loope ds (bad) clc inc movsb mov inc lret icebp stc ret sbb (bad) pop lret dec dec ljmp mov sub mov sti leave xchg add sbb cwtl fistp (bad) (bad) mov push call data16 imull (bad) sub sub or or cmpsl pop out scas sub xchg jge fstpl xchg xchg out movsl jmp jns and mov icebp push cli les call (bad) sub xor outsl repnz (bad) repnz inc lcall pop iret cli sub or or outsb fisubr pop mov sbb data16 xor push cmp stc jl dec and push jmp das xor loop xchg mov xchg cmpsb ds test mov rcll lods cmc push dec sti cli stc xor or cmp and add sbb pop jo dec (bad) stos jo sub xor adc cmp nop lods push mov push movsb out bound repnz xchg jmp movb and xor mov add lock int3 negb aaa cwtl stc inc push sub mov into ret inc xor pop js pop jl rol pop out dec add pop xchg adc mov xchg ljmp mov jne add jge sbb jnp fcoms ret jmp cmp push sub daa sub jae push loop pop add repnz add and or imul icebp daa scas stos das into and lahf jae (bad) addr16 leave dec push pop adc sub mov dec cli fs (bad) fisttpll aas xor divl mov push in sub adc mov push test popa ds sub or mov cmp or cmpsb cmpsb cs and xlat sub gs scas sub stos cmpsl jbe daa pop lds daa pop pushf dec sbb sbb add ret mov mov mov notl jl das ja fbstp call ss fstpt std cmp mov jns insl pop rcll mov leave stos sub icebp stc mov loopne push into xchg jno icebp sub sub (bad) xchg mov mov xchg push push push sub adc sub jle aad fs mov push jno fisubl mov sub or mov je push ljmp jns xor (bad) jno dec aam xchg mov fnstenv shll call ret lcall ret mov es bound (bad) sbb push jno movsb scas inc push jmp mov lods jmp push stc sbb lret add idivb inc out popf aad insb lahf pop mov rol push loop rolb sub lret test add call cli sbb cld test mov add sub outsl testl and aaa sub xor dec or movsl movsl stc jg aam sti ret pop icebp daa push iret addl movsl mov in cmpsl push add xor xor sahf insb mov bound into add in mov neg jnp into mov and sub adc sub cmp (bad) jmp dec loopne (bad) mov in (bad) sub iret repz ficompl dec jg jg pop insl and dec push outsb mov push and pop add fimul pop into jecxz or sub ja scas shrl jmp clc fsubs jnp cmp dec repz dec dec cmp push adc ret shlb xchg mov xchg imul movsl stos adcb mov or in or jge mov or add mov mov push adcl mov inc out loopne (bad) hlt jmp sub xchg jle inc jle jp ljmp jb test imul lods jg jo mov out adc stos loop xchg arpl sti adc in mov lcall mov jae jg push xlat jae cmp xchg push or es or (bad) jno test xor ljmp mov int das push sbb adc fidivl rcrb into cs inc mov orb loope bound pop gs repnz pop popf jge fidiv jb sub or lds xchg fsubp cwtl jg leave ljmp scas out lds sarb mov and sub push add lods cmp pop in or sbb push (bad) mov insl mov icebp sub or inc fbstp jg (bad) cmc scas out stos ds fist pop (bad) dec sbb dec sub out fnstsw xchg sub dec out clc (bad) repnz std pop scas dec js xchg pop mov into dec dec push cmpsb push dec sub mov outsl sub cmp cld jno jl mov pop push mov jmp dec into (bad) (bad) mov adc ret xor stc subb add or xor in gs or sub iret es cmpsl push inc sub cli xor xor dec and mov repnz mov or loope pop sub push lahf pop xor add cmpsl sbb adc cmc xor adc add (bad) pop aas pop (bad) mov mov add ljmp mov mov rolb pushf mov bound sarl and pop mov mov xchg push outsb loop xchg (bad) mov out jb jmp mov push (bad) scas lret mov xor pop mov and dec (bad) mov dec mov pushf test mov and leave pop sub ror jg jmp inc mov loop fstl cs clc mov mov push jmp push xchg ss and adc inc push inc push in andb pusha lret cmc (bad) aad jmp (bad) push fxch pop pop je mov fisubrl stos mov xor jb and (bad) (bad) pop jbe pop repz notl mov mov mov pop or push daa into fldl daa push inc adc and push fs mov cltd repz jge pop leave aad mov leave cmp lods mov inc sbb adc inc das ret push pop fs out divb dec repz mov mov in movsl cmp insb jg out mov adc adc int jg adc dec (bad) outsb ret adc pop popf mov mov push jle cmp push xchg ja add push mov pop imull pop sub popf jbe jp aad push outsl notl add std cmp mov pop insb sbb pop ljmp and (bad) fldenv (bad) insb les in push test loop (bad) mov or ljmp outsb mov call in jle cmp fdivrl mov iret sbb pop add or mov fistpl or mov mov incl push negb repz sbb stos mov add jb adc cmp lock mov into dec loopne mov ds jbe movsl push mov sbb adc jmp sbb jl daa aad dec and daa sub add int3 mov dec or jmp or cld cld or cli adc repz jo pop inc or push fsub jp mov sub add imul and negb pushf popa stos sub or repnz pushf inc cmp rcrl test mov mov (bad) mov nop or mov cmpsw fcoms ret push or or jnp rclb push fistl pop (bad) xlat in or mov out sahf fwait xor scas mov or or cltd (bad) adc xor stos sbb adc jns sti ret cli out stc int3 fs mov ja pop xchg add shl out dec test stos lret (bad) dec mov imul clc pop xchg add add imull adc add fsubl mov sarl sub dec pop mov daa jno cmp mov jne and mov jl xchg arpl popa xchg adc mov sub das add pop add add pop enter popa xchg lret sub or sub out xchg shll sbb xchg mov xchg or xlat xor sub sbb (bad) imul call mov rorb dec stos xor in (bad) mov dec jmp out stos mov add imul jcxz mov pusha and movzbl aas adc aas test rep xor push outsb daa xor (bad) dec push sub mov push cmp push mov out adc sub adc push sarl rolb pop lahf sub loop cmp cmp dec mov in gs lock sub cmp and xlat insb lret pop xor cmpsb jle (bad) mov jno (bad) jmp pusha sarl sub int3 cmp and pop pop fdivs das (bad) hlt add idivb inc or sti div (bad) rorl inc int sub (bad) sbb je notb cmp sbb cmp sub js dec in jp mov lods or jnp stc xchg (bad) xor cmp aas xor sti lahf xchg ret cmp (bad) sti sub sub bound sub push mov (bad) sub sahf mov and adcl lods inc mov (bad) cli repnz repz loop mov pop icebp sub add ret xor cmpb xor mov pushf (bad) dec dec jmp mov cli scas fidiv negl lcall mov popf sti xchg stos icebp lahf jl cli push push (bad) jb push add xchg hlt or cmpsl inc in adc lods add and stos cltd xchg cld push or imull xchg lret (bad) imul and mov into sbb push dec aam bound or imul loope push dec fnstcw lcall xchg mov rorl test mov cmp (bad) movsb test mov (bad) and push ss xor pushf mov adc add lods test mov call pop movsl mov and sbb or inc xchg cmp setne fwait insl inc sub out rolb lret inc push dec dec sti outsl pop out scas cltd lea lods cmc xchg orl sbb inc mov gs int3 mov push sub imul ja dec imul cmp js (bad) sub loop add fild or fnclex jo lock out push repz pusha mov or xchg add popf xorl jp inc test (bad) pushf clc out pop and add cs adc idivb dec and imul out popf and xor mov cmp mov loope adc ss lods lret jae test (bad) stos les enter mov rcl in rclb into mov ret fist imul jbe repz adc mov shr cmp sub add scas jecxz add cwtl cmc add popf lcall jmp dec mov xor popf (bad) sbb pop cmp aaa addb add pop repnz xor mov sub mov inc shrb lds add mov sub pop mov rorb dec sub shl call dec in dec ror je mulb (bad) repz pop xor mov and mov push xchg push jmp cmp repnz loop test adcb out xchg mov ja pop mov scas pop mov rorl fnstcw xor sti cmpsl jo xchg mov aad dec pop test push sub int sub xor and inc cmp or jge inc outsl xor ds xor mov in dec mov sarl stos xor pop xchg jl sub and test sub push mull daa fild leave pop imul repnz out xchg std xchg sub lcall dec adc call les ret xchg mov xchg mov out pusha shlb cli adc and dec test mov das and fwait lahf mov adc dec cmpsb cmp fadd jae icebp mov sbb jmp sub imul sbb add lret inc adc out mov xor sub add add xchg xlat inc sti mov stos push push jmp fsts gs sub mov bound rcr out cwtl pop leave inc mov sub lock jge add sbb and jne (bad) ljmp jb leave lods enter imul and and test (bad) cli call mov jl and mov adc addr16 call (bad) lahf sarl mul ficom add leave aam sub test scas fs stos cmpsb fs mov mull add test in cmpsb in lret out sbb fdivs xor xor push icebp sahf imul jno jl mov jnp adc mov mov std push fisubr and insb (bad) repnz jne xor fmuls das sub push xchg imul adc repz pop pop ret sub mov ljmp sub lock std iret les fsqrt cmpsb lds inc arpl (bad) dec or in inc xchg int3 pop mull leave fs sub test pop int3 dec mov fimul or xor repnz test sub ljmp pop xor (bad) sbb stc jge adc scas lret mov mov dec in bound mov test cwtl or xor mov dec int3 lods and mov enter les lea test ss sbb xlat sub and into leave clc mov pop lahf dec or fwait test sahf push shr mov xor (bad) repz test xchg movsl jmp xchg dec fwait test push cmpsb shll and and sub push or ja shll inc arpl pop pop mul jmp cli mov dec (bad) mov out fist pop and cmp stos into cld dec sub push outsl mov bound jge ljmp jmp ss xor mov mov dec stos cmp sub mov pop repz lret rorl push and iret imul xor cmp dec dec outsl mov movsb pop cmp sar pop (bad) jecxz (bad) idivb dec stos and sti fstl popl and icebp outsb sub sub and lret pop push xchg movsl cltd test outsl stos or fwait inc sub movsb stc mov add xor mov dec enter ds adc sub pop fnstenv or fdivs jle pop and mov and in sub ret ret fwait and sub inc push xor ja into dec inc in sti mov comiss adc out push mov into xchg dec sub mulb mov decl adc jl in cld int sub cmp and xchg push dec into scas xor hlt mov scas push aam popa xchg mov icebp fimul fldcw add mov out fldcw inc sub cli repnz out out sub movsl push stc jle repz xor xlat inc or ret or (bad) mov into lahf xor enter das mov jle imul or repnz fucomp (bad) scas and sbb lods rcrl ret mov int3 pop pop fnstcw ret xchg add push lcall add pop mov shr sub lret movl out xlat addr16 lods hlt fwait (bad) shlb push push roll and fstpt scas ficoml adc xor sbb arpl (bad) cmp pop out pop lret gs mov add mov ljmp pop jecxz xchg sub push inc mov cltd scas jbe push add mov push mov leave mov cltd in push test xor jns movsl jle js (bad) pop and stc inc sub test jo or insl sub lods je pop sub xchg pop mov je leave js dec jmp dec xor daa push adc add pop lds repnz sbb imul mov jle sub test fisttp ret and int mov shll clc jp out mov pop in xorl xor push ds and fsubrs lret jmp mov jle mov (bad) cmpsl icebp (bad) mov or or jnp inc jecxz ja out cmp jle clc jg call sub mov cmpsl adc add adc sub ds cmp fnstcw and or daa xor loop or xlat xor xchg aad rolb daa add ficompl or (bad) clc loop sti jg adc dec les sub jl (bad) lret jbe ljmp xchg xchg ljmp lods push inc mov jg inc or xchg jp dec add pop mov cs sub out aaa bound sarb negb lods das push add pop (bad) shrb fldt (bad) outsb test imull push sti movsb stos repnz pusha add lret xor xor sub ja or mov jns xchg add negb jge xchg lds sub mov add cmpsb dec or xor pop sbb and mov xchg push rclb add nop pusha pop add and ds pop lahf push pushf inc loope xor mov frstor xor sbb adc mov sahf jbe pop test jbe push sub mov jae mov mulb xlat movsb stc fmuls adc (bad) mov pop xlat lret lret out mov (bad) sti (bad) out out mov mov mov lret and mov fiadd fwait movsb or add fstl inc clc movsl les and mov lock cltd scas and idivl and sub add aaa pop jp outsb mov sub movsl jne icebp icebp lea pop or cmp sub movsb and pushl mov ss repz sub aaa (bad) sbb mov adc push sub int push (bad) iret sub sub rcll bound pop sub inc push stos xchg push cmp decb jbe mov and and sub sbb (bad) xchg lcall cmp jle btr imul lcall pop xchg or fcmovb or cmp loope mov movsb movsl or mov ret je ljmp pop push lret mov mov mov mov dec fisub jmp mov xchg adc dec mov fldl sub mov into cmpsb daa movzbl out divb sbb icebp shr pop mov sbb icebp faddl jmp sahf adc mov mov imul out cmp stos xchg jae repnz mov in es and lea pop xchg mov lret add cli xor fisttpll mov sbb cmp scas cmp push daa jl stc mov pop jmp cli rcl xlat mov or pop jbe xchg cmc test (bad) loop test mov push es and sub je adc stos push xchg lret xor (bad) mov jle sbb out cltd push mov sub enter and icebp jge or ljmp outsb lods loop jecxz push movsb add repnz xchg cmp push sub or fild pop jmp clc sub lds sbb hlt daa mov shrl sti xor push jne pop mov or jne ljmp jns ret test add lret jmp pop cmp add xchg aad xor lret mov jo pop std or ljmp dec jo dec adc test xchg ret lea cmp cmp fcomps mov or or mov cmpsl mov sbb daa cli js mov push daa test jmp fucomp iret sub pop adc clc jp add xor jecxz add fisttp (bad) sub cmp sub push pop insl xchg ja cmp dec insb pop pop mov std repnz dec test jno scas lcall xor sub inc repnz add out lret js sub int3 cmp sarb cmp daa out pop mov xchg push fidivl popf mov pop popf movb aaa mov jne ret pop pushf xor mov les popf imul out fcomp lcallw and jmp inc or cmp sarl in inc pop cld (bad) mov fisubr sub gs jmp fimull cmp sub adc stc pop lds jo test leave cli jne sub jmp mov mov dec sub leave popaw fcom popa sbb popa dec mov lret mov jp lahf js mov lea sarb push imul dec push push sub mov adc mov scas add pop fdivrl std push cmc sub cmpsl mov inc (bad) stos fnstcw pop xlat mov ljmp aas je mov (bad) xor mov cmp inc outsl in inc into inc sbb imul or and scas or ret stos popa faddp cmpb (bad) int pop adc into jns lcall outsb dec push out stc sub jns lcall cltd xor movsb or adc and inc push dec fdivr pop mov clc jns mov pop pop enter dec mov repz push aad loope notl inc or or push dec stc pop mov cmp movsb pusha rolb mov fbstp cli testl jle ficom xchg test dec xchg mov stc stc imul and mov push testl mov push pop popf fsubl cwtl add push iret and jno mov add pop mov fstpt dec in mov lret push inc pop out inc mov sbb rorb stos mov sub xchg lds pop and lret mov shrb xor mov mov pop and and cmc lock and (bad) and mov dec xchg add jns sar xchg push mov loop pop xchg iret add jb mov add fidivl movsl scas lcall ja sarl xchg sti xlat test loope loop test leave stos dec jbe push leave dec outsl jecxz fnstenv fmulp xchg imul call int das mov add icebp ds js and cltd lea mov cmc rorb xor (bad) vpcmpeqb ss add sbb dec (bad) into std mov ljmp in jg inc adc add add clc xlat lds xlat xor (bad) sub addr16 mov inc add popf fdivrl xor mov mov cmp pop mov xor mov and aad inc xchg fdivp lea jecxz mov inc call decb lods mov adc popf (bad) je mov (bad) leave int mov mov out popa out pop addb cmpsl mov xchg inc cmp data16 int je dec pop sahf fistp bound jge stos pop hlt inc outsb leave add pop jb leave xchg (bad) cmc inc loope sbb xlat in add or popf add aaa loop sub jmp lret insb xlat xchg push pop push ret fcoml adc dec data16 leave pop xchg (bad) pop xor cli repz jmp shrb insl sahf daa test ret decl dec or dec push mov adc cmpsl dec or cld pop repnz test mov out sti dec pop fsts xchg push dec xor adc xor and add inc xor mov pop dec sub outsl mov jb xchg movsb leave jns adc call in mov or push add dec pop stc xor stos adc icebp sbb pop fs xor sub stos sub sub shlb inc inc gs or daa mov jbe jmp loope inc adc dec adc sub push mov fildll adcb inc or scas jg mov data16 cld negb and sub lock adc or pushf sti repz loope sub movsl sti loop pop or ljmp dec mov aad in mov cmp jne test aam lret out or xor push dec sbb adc jnp daa in inc dec fdiv cmp mov xchg std inc xchg push stc cmpsl ljmp in sti and and mov (bad) or xor push pop imulb push push sub push push mov into xchg cmp and test ficom pushl adc popa xchg fildll xor mov mov test sarl jne pop data16 xor adc mov jle in xchg (bad) fsubrs dec lds ds add adc (bad) pushf mov call (bad) push mov and repnz rcl adc sti scas gs xor test xchg fmull cmp and outsb je lods lcall or mov inc dec sub or xchg or add and sub jg mov std sbb xchg into (bad) mov ficomp jmp lods dec inc (bad) xor and dec adc shrb fdivs cmc jae dec mov adc icebp lea mov add inc push add in stc pop fimull dec cmpsb pop xor dec loop jno dec cmp sbbb (bad) sub mov and sahf cmp jmp lcall push imul lock stc loop sbb mov fisub or dec imul jle xchg movb xor sub call test add daa das or rcr adc xchg inc daa add ja sub outsl loop ficoml insb gs mov sbb add popa adc das int mov mov pushf inc in jl mov xchg out mov ret xor cs jb icebp push adc mov jg mov push bound xchg jle inc dec (bad) xchg xchg add aam stos mov pop out jbe rcll jno add fsubs (bad) mov sub jns mov mov cmpsl mov je sti or sub adc pop repz ljmp sub push out mov addr16 mov ljmp pop add nop orb cmc push or lods jle leave push lods leave into mov cld xlat daa gs sbb popf imull mov aam sub jecxz in test sti jbe sub add xor adc push xor mov pop movsl addr16 lcall lods jbe pop ret mov adc ja xchg mov negb inc rol sbb jmp or mov push sbb or mov pop pop insl cld out and daa mov jmp push lret or clc aas mov adc and mov pop imul hlt add mov ss xor ljmp sub (bad) mov mov iret stos jb xor out aaa clc das pop mov daa loop push mov arpl repz ret in lods aaa xchg repnz push and call xor adc test mov adc ss adc mov push ret add std loope push jns nop les ret jmp mov ljmp dec test movl sub or and mov inc push sbb sub dec xor cvtps2pi jmp xor movl icebp jbe ret jbe loop adc sbb and test inc adc add lea add scas dec scas fnstenv clc (bad) pop xlat int3 jnp mov mov xorb push and orb xorl (bad) push dec enter int3 mov (bad) xor (bad) mov and scas push mov inc and inc cwtl hlt xchg js mov lods push mov hlt inc pushl pop inc out out lret enter jnp ficoml mov mov repnz lods push icebp push je leave xlat pop or pop xor in mov add pop repz mov orl or pop and or (bad) sub pop ljmp mov pop lea out mov ret pop sbb scas mov sahf pop add cmpsl push mov mov adc jecxz pop scas cmp xor pop in or repnz enter mov dec lock add xchg dec adc mov ret xor stc jmp cmp into inc (bad) stc xor jns out xor divps mov daa repz fsts and call xchg in xchg hlt push repnz sbb loope addb pop push das mov jle leave fdivrs or sub movsl dec and in dec movsl push push cli push inc repnz pop jecxz outsl jl or inc stos and add pop push pop pop pop popf aaa push cmp aad es sbb inc dec test fiadd dec xor or out push adc cwtl mov pop mov mov mov mov fistpll pushf (bad) je dec ret pop xor dec xor or mov leave push jbe add repnz mov les add pop (bad) ljmp out sub and inc add xor pop add in dec mov dec adc adc lret xor add divl or and lock sub cmc sbb sti es das aaa bound fldcw jp int outsb lds (bad) ljmp (bad) clc mov loop ret lock pusha (bad) xlat jge shr add fstpl jmp into push sub divl xchg int3 in pop xlat lods repz and clc scas add jmp lods (bad) in scas movsb stos xor mov cli ds sub div shlb jl dec lret scas pop popa aam fisubrl jo dec stos cld out (bad) cld dec pop or and pop ret and lds testb orb (bad) (bad) mov shl xor repnz test cmpsb fs inc push and jl loop cmp jecxz leave mov data16 mov push pop push mov mov mov stos int3 bound fwait jmp xor cmc movb loop lret loop clc cmpsb pusha lahf icebp rorb vmovhlps xor jle jb mov ret scas divl scas push int3 rorl (bad) pop sbb ficom shrb xchg insb add mov cwtl (bad) or lcall repz mov stos sub mov aas or pop xchg popf popf push stos movsl lds xchg out inc jb jmp mov das out sbb add dec add mov enter jmp test dec aaa outsl jns cltd (bad) inc test pop imul jbe mov je call mov cmp scas bound (bad) push push in dec sub xchg inc add stos mov (bad) movsb xor add test call and xchg test rol pop add pop ret inc push xchg stos adc push or pushf into add lret push popa add sub test test or stos jb add (bad) xlat mov out in das fsubl add sti mov std and adc mov enter mov push adc enter push bound or push subl pop push cli out xor sub xchg mov es inc push mov das add xlat cmp imul lahf flds fildl and mov andl das push adc sar out push jge sub out outsl add xor stos das popa pop fsub sub add mov cmc repz fstps stc push mov sbb jae sub jmp adc outsb cmpl imul mov xchg imull or or jnp sub mov or pop cmpb cmc jmp or (bad) cmp leave popl mov (bad) push sub xchg shlb mov mov add jnp inc aas mov outsl sub or mov dec imul jle sub nop cmp or std jge sub push mov cmc in or adc cli repnz push adc (bad) leave shrb ret or inc outsl mov repnz add adc lods pop mov jne jbe mul iret xchg out js pop jb pop hlt jmp out mov out imul sbb mov jmp jbe out jns sub sbb push (bad) stos xor and out mov jl dec mov rcrb mov or sti je push testl imul add mov enter mov push and sbb push pop jle pop sub mov xchg jle andl xor push adc call adc lret pop sbb lea jbe add mov push sub mov aas cs repz pcmpgtw mov shll jg adc mov ljmp std jns inc mov ss jns mov sti in sub sbb int3 movsb inc pop xor out cltd xor dec pop divb dec ljmp xor out dec leave lret das out or cmp idiv or arpl sub sti arpl mov outsb aam out loop (bad) sub xor fistp (bad) mov pop sbb outsb jle pop aas or inc sbb and mov fild daa xor pop jecxz sbb mov loopnew jmp loope or xor pop (bad) or in mov popa repnz scas push push mov scas cmpsb push push (bad) sub add sub xchg fist jb dec into jmp lods adc mov outsb and (bad) mov jns mov sbb and cmpb xchg mov add cmpsb dec (bad) inc fs xor push xchg sub dec fimul sbb pop fmuls xor pop (bad) fcmovb (bad) or dec sbb xchg xchg int cmp cmpsb pop mov xchg fs push das mov add sbb movsb push fbld iret add xchg scas das dec mov mov xor xlat or add xchg fist mov mov or lret gs ss mov and push add out jbe (bad) cli mov loop mov cwtl xor add dec leave mov cld push jmp clc push cwtl das and jmp gs das dec (bad) or jmp loopne leave cli fbstp inc cmp add mov pop mov icebp (bad) popa daa and push sbb fstl (bad) jecxz push mov lret cmpsb std in lods ffree (bad) shll and add mov cltd sub std imul and jle imul call sahf jae sub push test sbb add sub stos movsb clc bound mov xchg pop jns xor lea push lds into ljmp sub xor mov insl mov xchg cld cmpsl (bad) jecxz mul push in sub mov xchg inc jge and icebp imul fnsave lret mov and jge out in adc ret testl xor xor cmp sub push sbb leave add loop popf xchg sub mov adc andb push cmpsl xor fcomp loope (bad) jmp ret xor sti pop pop mov adc iret das call insb dec add mov jg xor aam and push hlt push fdivr daa outsb mov fbld pusha and mov sub jl pop ja aad stos mov out sbb cmpsb (bad) mov xor mov sub mov addr16 lahf adc popa jno mov (bad) cmp out mov jle xor inc push bound xchg call test fcmovb sahf mov mov test sar aam out mov mov lret fisubr out pushl aaa fstps add fnstcw jmp and out in int push push mov push sub das ret (bad) divl push andb bound sub lcall sub std sub into jl pop mov mov sub sub lret mov jb adc mov dec stc daa pop ret negl push in or push xor pop inc mov adc xchg lds push cli xor lock mov jge mull adc and cmp shlb pop and cs xor mov out (bad) adc inc pop stos xor stos out and negb adc stos fmuls mov (bad) jmp notl and adc rol pop cmp (bad) dec stos xor stos cld xchg mov es fidiv or jo cld inc xchg dec popa and or fs imul or xlat mov pop shlb cmc imul mov leave cmc (bad) repnz xor dec leave ljmp mov lcall inc stc sub out and cwtl mov xchg ret outsl pop (bad) fnop or or add pop mov das sub fcoml stc or xlat std gs inc xor mov movsl or stc cwtl mov sarl fs lret sti dec aas pop out and (bad) out mov dec jl mov aad mov pop imull clc into movsl mov les fdivs sahf adc dec je stos test (bad) xor sub cs adc fsubp push daa jge arpl inc push mov and bound movsb and sub es mov add ret and cli dec (bad) jle popa xor xor xchg lahf or pop aas mov mov lret inc mov xor icebp jno mov (bad) lock dec or mov xchg and imul outsb xchg dec (bad) jmp int cmpb (bad) adc push out test out sbb mov dec lcall jmp dec sub add xor xchg js mov fistpl mov out sub mov jg mov mov and inc mov das ret pop imul and adc mov fwait int mov outsb cmp es cwtl lahf xor xchg jnp push fmuls mov mov sub loope lret jns (bad) scas out arpl fimull mov adc notl jp in scas aad push mov xchg jecxz or mov jle jb xchg enter lret or dec in fistl xorb pop mov xchg push add cmc dec jg and notl or mov movzbl rcrb push dec scas lret pop sub movsb sub daa push (bad) iret cwtl hlt xor xor mov pop (bad) lret mov and adc pop cvtdq2ps sar test sbb fcoms jno jnp dec mov pop dec gs and xor dec jbe and push repz nop mov mov mov xor inc xor jge add out sub dec das loope jb dec aaa mov fisubl push sbb js mov push xchg xlat mov cmp mov es or mov and add and mov jle push dec (bad) mov mov push mov mov rclb insb and xor mov lock stc stos lcall xchg pop dec add mov lcall ss rcr jne je add and fist mov jmp ljmp add pushl divb loope out jle pop test sub lahf (bad) ljmp push jne lea add fiadd jg lods movsl xchg in decb les into fsts cmp negl and lods inc lcall dec or mov in ljmp enter fsincos inc add (bad) ljmp and cwtl or push adc mov subl icebp xor pop adc aaa inc xor push imul imul cs mov xchg pop dec repz mov push xchg lods mov pop push dec loop xor ja fidivr mov into gs bound (bad) or xor adc mov (bad) pop xchg (bad) xor push clc (bad) or add loop movsl pop and sub sub cwtl push das or sbb pushf push pop into ss mov movsl movsb adc jecxz pop mov repz mov js cli ljmp (bad) fcoms mov ljmp cmpsl ljmp cmp dec pop mov sarb and icebp push dec (bad) (bad) repz xchg push mov (bad) sbb and ret or fucomi xor or and sub jo pop pushf (bad) mulb ret sarl lret scas sub iret dec inc call dec jmp daa cs xchg cmc push fs (bad) jne and test mov mov out inc fisttpl imul mulb jg inc xchg js sub cmpsb cmp sbb insb ljmp fnstcw scas lds mov div pop pop pop idiv jp (bad) xor lahf fisubr xor xor dec mov sbb and push int3 ret mov lods jae mov jno mov iret xor bound mov lds notl cmp sti mov mov mov push insb xchg or shrb inc out push mov fisubl cmp pop jno push or dec cli ja outsb test mov push and scas pop ret add cmp push js xchg jge add pop and (bad) mov sub xchg test mov push or out mov sub jecxz ret and mov popf jne iret adc fildll mov gs cmp mov and fidivrl jb rorb jl lret mov or add lds mov or rorl and add lods stos das into fnstsw jns or sbb dec fidivr add inc test mov jg repnz clc data16 cmp xchg ret cmp sti ss pop xor and in add mov sbb sbb inc daa pop ja mov xor dec add lds push imul add adc or mov movsb add aas mov out xchg (bad) mov mov xchg sub pop movsb (bad) jmp loop imul inc call inc (bad) or jmp sub arpl bound rep push je mov xor mov (bad) fist xor jecxz pop cli push fdivrs mov loope inc (bad) mov test gs sub ljmp fildll push adc decb das adc popf inc call cmc and dec sarb dec jle pop inc dec push mov add leave stos cmpsb and and xchg out cli xchg fistp daa dec ror pop mov pop stos dec insb cmpsb xchg or ret push and (bad) cld xchg inc movb ds sbb (bad) lock inc repnz pop aaa and bound cmc in jnp sub jl or or pop push mov shlb and and daa neg mov repz lea adc stc mov jmp fsubrp fs push xor and (bad) loop cmp push push aam imul inc mov pop lret out inc sbb mov neg pop xlat mov lock or or lret mov cli negb out fnstcw jmp rorl (bad) xor test out dec cld pop frstor cli or or dec jbe adc stc ss dec shrl add sub mov lea cmp loop cs ljmp shll lods mov into je popa in sub add and data16 outsl mov jno mov mov ds jg jge pop mov ret pop adc mov lahf xorl push fisub lods cmp movsl ljmp jnp cmpsl pop sub pop mov leave adc (bad) (bad) test cwtl outsb leave mov dec pusha adc lcall fs jg mov lock jmp xor out add inc add pop in test and mov popf out and ds xlat aaa pop cmc rol gs stos idivb cmp orl sub sub jne rcrb cmpsl pop aad stc les and shrl pop dec mov xchg dec (bad) add pop icebp xchg dec lcall ljmp mov jbe popa inc lret in decl addr16 and enter sub and mov dec mov lods call popl inc lods inc lds (bad) and xchg pop or cmp shr add repnz mov jno inc sbb out mov stos movsb aam pop int3 add xor idivl mov loopne ret or jmp adc aam adc add dec in dec insl dec loope push and (bad) enter mov icebp add mov (bad) mov mov push test dec add add xor push cwtl push jmp jnp mov mov dec mov pop mov push sub xchg dec xchg aam loop sbb mov std jns mov fwait mov test or loop aad sbb pop shr adc mov xchg xchg test lret sar sub add pop in clc jmp inc setb push xchg xlat mov loop mov or sbb ljmp daa in jno mov clc or arpl test test addb test add cmp sarb sbb out dec mov cmpsb push push xchg mov mov dec sti movsb inc jmp out cmp xor imul push les jnp add mov sbb cwtl leave push std gs out stc push imul insl mulb mov xchg sarl sub lcall cs imul enter mov loope (bad) xchg stos cltd jae (bad) sbb leave jbe pop cmp aas xchg adc roll cs cli popf out outsb daa xchg cmc (bad) cmpsb imul pop js fwait xchg fmul sbb jl xchg dec loope ret (bad) dec mov imul add notb xlat out xchg dec loope xor and or sbb jecxz adc cs iret sub jl leave ret pop (bad) cmp jle cltd mov test iret test repz sub (bad) pop add ljmp popa sbb cmpsl outsl xor pop lahf (bad) loope ret insl or in nop sti popf shll call out in and sbb xchg imul jae scas dec push mov xchg (bad) and movzwl fisttpll lods leave movsl scas cmpsb add xor mov mov out pop ret test mov xor repz adc mov sub (bad) sub fldcw mov push in push lret jmp (bad) call inc push (bad) and leave ljmp lcall jno mov jbe adc add scas or ret mov sub sub mov movl adc nop xchg or pop cmp xor cmc push xchg push popf cmpsb loopne mov xchg mov mov mov dec or bound xchg ja sbb lahf fmuls ffreep gs test (bad) mov push pop rolb sub and cmc xor adc pop mov inc mov pop das jmp pop icebp pop dec or std loop ja clc pop ret insl push mov (bad) push mov pop sbb repnz aas and aaa or inc (bad) incl aad (bad) jbe dec or or xlat or test lahf pushf jb mov ret mov outsl xchg mov pop das (bad) jge mov test ret add jo mov xchg leave cltd int add inc into mov push fdivl jnp push push incb out add cmp daa add test jno scas jg mov call jl mov cmp stos fs cwtl jl dec (bad) stos lods push adc adc fldcw add mov mov sub movsl stos mov sub sub shrb and add inc lret fdivs mov push inc mov pop (bad) mov pop or (bad) aad dec cmpsl push sbb add add data16 je add or lods add scas mov mov negb pop sub out lahf icebp bound or (bad) iret or hlt add movl push outsb out pop test cld pop push cmp ret ret lds fwait cmp clc jge and iret xchg stos loop (bad) jmp fcoml mov lret int jle mov rorl inc loope (bad) bound ret pop sub (bad) out clc mov adc dec repz sub mov or mov mov push push jbe gs pop loop dec mov cmp dec std into dec lods and or mulb fstl cli out or roll ret icebp clc test mov xor sti add cmc test dec mov xor insl jecxz pop lods xor repz mov testl and mov xor ljmp hlt dec pop je jmp lret add sbb sub jge (bad) sub jnp pop lock mov sub and inc out jl rcrb (bad) leave sub int3 leave data16 daa xor pop mov push pop adc add xor cltd pop fdivp push add ret cmp pop inc dec ss bound xor dec inc and and pop lret xchg dec xchg adc or jp adc (bad) push test mov icebp mov push xchg inc mov mov (bad) cmp xchg mov test add jp jge scas fdivrs dec fdivr dec sub push test btc fisttp in push adc mov cld and dec out dec inc out (bad) mov test sti dec jmp rcll lods xchg lds mov js mov movsb fucomp cmp jmp lret jle or push mov stos les ljmp repz pop ret popl push fisttp add xchg in sub jmp dec lahf mov rorw in jne or inc or sub pop jns xor shrb leave sub push mov sub (bad) notl xchg push mov imul data16 sub dec mov rol xor scas mov cmp jne lods xchg jno xchg mulb lret incl lock movsb ss inc and dec lods sbb sub or fucomp mov insl mov jo loope mov add or fs scas out cmp test aas stos mov push mov ret push pop pop mov (bad) or xor rcrl ret aad stos mov repnz or cli jne sti mov cmpsb pop or jmp movsb sub sti (bad) sbb cmp add push inc mov out xchg fstpl into (bad) out stos mov out xlat scas adc dec mov mov inc pop lret pop xchg and fsubrs cmpsl adc fwait add xor sub fldl add pop pop xor or imulb outsl add out and mov push dec cmp cmp mov mov mov xor pushf imul in (bad) shll and in add (bad) pop adcb inc mov xchg jne sti (bad) aad jle jb cmpsb movsl lock dec lret jo in cmovg (bad) (bad) sbb pop dec ja les jle ret das jmp pop dec jbe sbb scas (bad) negl and mov xchg imull cmp stos add xchg negb fcomps push and in out and test leave adc leave push fsubrl sub pop js jo pop adc dec nop cmp adc ret cwtl pushf repnz icebp dec das arpl hlt call jle pushf xor and ljmp rcl dec fdivl test xor add mov imul xlat loope sub test push loop fadds mov pop sbb sub (bad) push inc mov pop movsb xor scas adc mov push lea mov imul lcall jno inc jecxz adc aas xor cli dec push rcr sti mov mov pop mov jns insl mov mov xchg mov mov jns rcl dec out push sarb daa push mov sbb add xchg out jno fcoms imul sub cltd mov lret sbb sbb hlt lret jae out cwtl push repnz inc dec clc rclb cmp in clc scas lret into test pop test loop out sub jnp (bad) loopne cld cmp ret daa out lods xchg mov xchg sti xor mov xchg je xor test xor sbb loope gs xchg iret call sub popa cmc xchg mov cltd nop cmp mov insb js xchg sub mov mov mov inc lahf outsb sub mov xchg adcl sti int3 add adc sti out and fistl sahf and lea mov push into fimul out jb and dec ljmp sub test (bad) add jl add incl mov mov (bad) or jge scas sub repnz jecxz jecxz and or push dec ljmp pop pop mov out popa or (bad) dec mov (bad) es gs pushf insl mov lret aam ret mov pop and std jecxz test jmp aam movsl fstpl dec or cmp adc out lahf adc sti adc fwait xchg mov loopne test dec ja sar mov push or pop lds shll lea sbb pop test fsubp pop push xchg add cmc mov jne fucompp cli jmp stc push jmp sub mov rol sbb and xor iret stos sub gs mov fldcw or iret jne out scas add repz pop cmpsl push dec ds or fistl jle bound jmp (bad) fucomi daa (bad) lret mov pop std data16 or cmp or stos sub daa xor leave (bad) movsb in mov divl dec adc adc and jnp mov (bad) push push aas icebp and or push outsl (bad) jl pop mul (bad) xchg test mov fistl testl stos repz xor test or mov in push push fisubr and inc xchg into and je cli lds adc add xchg into xchg and sti sub imul add dec mov push push jae inc mov mov sbb jae ret mov mov scas sbb inc inc pop and fstp cmpsl repnz xchg add mov into jmp or cmp dec pop enter sub lret pop or jg sub sbb xchg mov loop (bad) into mov lock imul mov xor iret mov icebp stos or out xchg (bad) fcomip mov stc mov enter cmpsb scas xor xor and dec push mov stos mov push outsl loopne push add movsb lock out pop mov adc xorl (bad) pcmpgtb lahf (bad) ljmp xor mov jg in inc pop add pop mov ja sbb inc call cmc sbb mov push pop mov jnp or or outsb jl push and jno mov scas mov (bad) pop pop or add push lret or in jne ret jge cltd dec jbe mov mov outsb cmp cmp mov (bad) xlat mov fsubl push ja shl loopne cmp mov mov xchg add arpl jae mov xchg jnp clc sub mov sbb adc mov and sbb or or popf mov pop imull push add push sub test and xchg adc mov and (bad) xor aas sub dec ljmp push rcll aam (bad) outsl adc xchg or mov xchg cmp (bad) mov cli mov je das mov frstor add enter jle rcrb push popa test adc pop xchg pop sbb cli pop jge push inc pop not or (bad) ja adc jge dec mov adc jg arpl jmp add add hlt imul cmpsl cmp inc mov rcrl mov aad adc xor cld xchg out aas ret inc xchg ljmp ret lods das pop cmp add sub pop push clc fildll xchg and xor cli sub xor sti xor repz push pop (bad) add popa stos cli push fs pop xchg mov dec stos mov and xchg push test ljmp cmp shrl push fst cmc mov daa sub jno cltd fldcw xor (bad) jno pop jae aas dec out into jp lahf jle push jg fmull jp xor mov pop (bad) out je scas cld hlt movsb std xor dec inc fs pop mov pushf repnz loope pop and js leave and repz xchg mov push inc mov xchg mov pop mov ja ss repnz (bad) jo pop mov lret or push inc dec sub sbb add loop sub pop adc or or add nop rcll pop pop cmp adc mov das xchg loope xor adc lret idivl out push int push mov dec aas cmc outsb loope xor push pop or sti sub xchg push in jmp sti xchg pop mov push sub in out loop fimull cld js ja pushf and icebp das jmp test (bad) jecxz jnp sti stos xor jmp fistp aam mov ror and popa sub int3 adc pushf mov sbb movsb mov xlat fdivl jne add (bad) out daa ljmp mov sub push ret idiv dec jmp subl inc xchg je pop sub loop rclb pop in in sub popf icebp test jbe lret inc fsubs leave push mov insb lock std cmp lret dec mov mov ret mov out outsl mov into adc jb (bad) icebp bound pop mov addr16 jmp popf add les xchg pushf scas push hlt movsl hlt lahf (bad) orb dec insb dec fmul xor mov out inc or sub adc popf push (bad) jmp (bad) mov mov (bad) out mov sub cmc ds inc jmp addr16 movsl add in cmp cmp and popl leave add stc xor call (bad) ljmp iret scas repz aaa (bad) int3 rcl fist adc out bound xor inc inc insb dec jp lret fwait jecxz sub mov sbb ds shl add ret and push imul not push xor sub and jae inc adc or mov mov movsb rorl icebp push inc mov nop add sub or inc lret sbb rolb repnz cmp sbb jb xor sahf push mov jno movsl jecxz xchg add push fs and imul and cmpsb not mov fistpl jmp inc int out sub sub or mov sub (bad) jle ja inc das xor lock popf and jmp mov pop js js add inc add mov (bad) push daa adc fcompl pop rorl inc xchg cld dec daa jns imul shrl aas popf inc sub movsl jnp outsl movsl mov xchg jl out and push mov bound jo fimul add sub fsubrs pop repnz sub mov mov cmp lret sti add stos pop and les cwtl xor stos insl jnp and mov or and cmp cltd movsl adc inc xchg ja imul xchg adc push imulb stos and mov leave lcall mov adc and (bad) out repz xor fcomps and dec mov adcl mov xchg mov imul movsl xchg inc cli (bad) insb mov stc or mov xchg jmp jecxz cltd jbe mov into sti (bad) adc jne enter ror and add aam adc jo repz sub out ljmp jbe push leave jne jg addr16 pop mov frstor lcall fdivs clc sub cli aam mov or push pop xor test adc or jecxz dec in aas lret es push sbb pop (bad) icebp lret test lock mov ret add pushf shrl push enter push jecxz adc pop lock icebp xchg js dec ljmp gs add xor add jp pop das cmpsb inc dec mov mov pop push inc dec xor and inc mov xchg popf xchg jecxz pusha jnp push loop (bad) xor adc into inc xchg loope push dec push sub xchg fmuls sub (bad) push testb mov test fstl push data16 push cmp add xchg cli mov mov mov popa mov add cmp or xor jb (bad) xchg ret push add iret leave xor mov mov (bad) in bnd dec ljmp rorl js inc mov jns cmpsb (bad) daa in adc xor mov (bad) (bad) mov xlat push int3 enter inc (bad) std cli jp ret xchg inc sub imul adc into push mov mov dec sub and addl sbb jmp data16 fnstsw mov push dec sub daa push xlat cli mov fidivrl or (bad) cmpsl icebp stos mov iret fimul dec or pcmpgtd cwtl mov movsl mov xchg enter or lret loop mov dec (bad) sbb imul data16 dec jmp sahf into std es ret imul jns inc xor or xchg jge lret cltd lods jecxz lods add call jmp out fdivrl mov lret jns movsl lcall sti lret cmp cltd push rcl scas inc and daa jp (bad) mov jnp pusha xchg mov nop sub frstor mov mov jo mov jno dec fcmove sub pop rolb sub xchg sub and xchg shlb ret orl xor cld cmp into and mov cmp push xor xchg inc xor jp dec jg imul bound leave xchg call pop dec sbb add or jg mov mov aam and push mov lea xor out adc sbb (bad) jmp (bad) dec data16 mov lea sub mov rcrb inc dec jge mov sbb bound adc jg lods or cmp popa test lcall pusha pushf pop inc jno dec pop mov cwtl push mov push jle jecxz push sub or cld decb mov nop int3 pop mov mov repnz push ja imul mov jg test scas mov imul push (bad) xor xchg call fidivr lret stos (bad) fstpt dec sbb or stc dec int3 lret out scas pop out sub and cs dec les gs dec dec scas lret stos and ljmp fnstcw jp insb mov (bad) mov add aas pop xchg sti mov lock leave lret inc stos xchg (bad) popa adc and fcmovbe inc add rcrb ds and sub bound cmp fildll aas fldcw mov icebp scas sub push out sub cs gs xchg addr16 imul lea xchg jle into rclb mov imul test adc xchg test (bad) xchg push mov sbb add push decb imul popa cmp mov sbb dec mov popa jecxz cwtl and lcall insb fstpl cmpsb xchg push je lock mov imul and imul and mull and lods pushf xchg (bad) jns lods test in jne in into out pushl stos mov outsl sub mov into je pop js sub inc xchg xor sub jecxz sub mov enter sbb das fsts stc pop mov sbb jae ds mov int3 xor dec sub xor xor out or mov pop in xor dec stc mov popa into add imul and xor pop fsubs loop ret aad xchg dec pop test in leave push mov xchg cmp in dec dec and lods fbld xchg mov stos push loop lock adc ja or sti in sbb stos pop mov jb add add fs xchg int3 pusha inc and dec mov stc sub ds scas in es ljmp add inc add dec leave pushl mov in inc xchg lret int iret orb cs and mov jmp push pushf mov aam sub xor fildll cli xor aad mov xchg scas pushf adc pop (bad) mov dec loopne icebp pop mov mov mov sub mov xchg loopne add jne je jae jo sbb lods add and mov xor or push adc gs rcrl pop jge shl mov add sti or es mov mov aas jno pop sub ja,pt inc fimull int3 das ljmp insb test cltd cld dec fisubr fisubrl cld mov stc ffreep (bad) mov scas xchg enter jnp push xor xchg lret cli lret addr16 repz (bad) jle adc xor sub cmp repz cltd xorl inc aad sub call push jne je jno lret ffree js sbb dec cmpsb cld pop add mov idivb (bad) int3 mov daa cwtd es das xor cld imul iret rorb cmp out bswap jl adc mov mov and sub sbbb inc nop xor iret xor jbe push xlat xor lods cld (bad) enter pop sub mov adc aad pop ja jecxz (bad) xlat pop add popf cmc mov das fadd bound shll push movsb ret mov sub xlat shr fs or icebp dec xor je xchg mov dec xor sub je pop add mov fcoml mov dec mov pop xor push sub das icebp and mov shr stc xor or testl icebp out inc and (bad) jo xchg gs or les dec add xor rorl aas in pop mov (bad) dec test mov jns xchg sub and mov rorl xchg adc xlat sub jl leave stc loop cmpsb testb lret add and (bad) push and xchg cmp push push pop push push pop pusha adc divb add jl mov dec lock pushf loopne dec dec les mov inc mov sub or xor cmp xchg push dec pop aad sub adc or rcr fcompl pop xchg or pushf dec and jg xchg ret (bad) scas or ja fstpt xchg pop or mov scas fs or insb sbb adc popa jecxz repnz mov jnp xchg or ret jg mov mov or lret jle push adc dec dec nop cmc pop mov (bad) xlat insb or imul mov sti adc ret adc rcl ljmp or push xchg cmp stos sub push xchg and mov outsl cld movsl push test lret call mov mov push mov or test and in xchg shrb lods adc xor scas popf popa jnp test jg mov daa es jae into xor cli sub rol cld dec jb mov inc rolb mov data16 sub (bad) sti addr16 mov or mov fistpl and mov test inc (bad) aam adc push fidivr les call mov in fstl scas fld pusha popfw aaa add push inc les ljmp divl sub add and pop cmp (bad) out int3 or push dec gs sahf and sbb pause xor jle sub cli jge shll repnz popa dec fsubs cld pop pop les (bad) mov cmp sub rcrl dec in sbb pop pop jg outsl das aam mov lds or shrb (bad) mov or cli mov jl ljmp fisubrl sub fistpll das addr16 jne cmpl stc add add pop pop icebp (bad) sti add cltd (bad) and add testb and ljmp (bad) mov adc or sti pop push lods popf push shrb push add lods jb (bad) mov mov fcmovnbe adc mov dec lock negb inc or sti sub js sub pop int add cmpsb and fs pop mulb sub dec mov out mov jne fdiv xor xor (bad) push loope mov cld pusha lret daa push xor jns imul cli cmp pop ret fnstsw cmp ror rcrb jle jp pop repnz inc push ja mov rorl jbe sub push cmp lret mov cmp mov jge push adc xor pop notl cs negl or notl adc or mov (bad) or inc pop dec dec push and test mov test xor sub push lret (bad) (bad) hlt cmp or inc pop pop jle (bad) in push sbb and inc sub xor jp je and mov cwtl or sahf pop (bad) cmp mov xor aad mov stos mov loopne pop subb sub mov jnp std das in out mov push cli add pushl or stos fldcw mov mov (bad) xor js sbb imul (bad) flds or mov pop dec test das flds lcall hlt xchg notb pop inc rorl movsl mov pop (bad) arpl sub sub aas les mov aam imul (bad) pop sub divb gs mov adc jae xor cli sub call movsl pop ja test (bad) sbb jnp jbe or rcl mov push mov jns cmpsl test loop mov xchg mov push sub popa push mov das loop pop xchg es aaa hlt test scas addr16 add mov mov cmpsb adc sbb mov leave mov mov pushf loop in mov mov lea inc mov aam clc stc popf cmpsb sub ret std lcall lret adc out into sub mov jge sub fcmovnb sub add hlt lret gs fldl sub sbbb xor mov aad (bad) mov mov add leave stos lods xorl push ret popf test or dec das ljmp xchg scas jmp stos xor int insb mov cmp xor xchg (bad) div dec jno ja out (bad) das jmp loopne mov daa (bad) aam int3 mov das mov push dec pop jne inc pop inc icebp (bad) icebp mov pop out and idivl jmp iret jmp and jge sbb xor hlt jp ja add or sub and ja adc sub mov aad loope sub mulb lahf stos out pop imul std xor enter push jns dec jl sub aas icebp aaa xchg sub inc mov out inc dec idivl in aas mov fldcw cli leave xor jno lods arpl ret xchg out repnz fldenv int3 or jmp and mov sarl mulb jmp add pop pop dec fsubl leave inc repz pop jne rcll lret stos gs mov mov stc xor mov shlb mov imul clc cmp xor fldcw mov daa inc js sub stos iret movsl inc push add loopne pop imul into jo mov mov and jne mov cmp xchg nop mov cmp repnz xor xchg sub pop in pop orl loope,pt gs lcall jmp inc mov stc or stos cmp sub pop xchg lret sub mov out fxam cmp xchg cli repz push (bad) lret adc cld stos out adc mov ss gs inc (bad) xchg jnp mov shrl out xchg sbb not test cwtl movl mov pop mov bound and pop mov les mov jp sub xorl repz mov (bad) xchg push mov rol xchg pop subl xor jle daa add push pushf jo xlat daa mov inc xchg mov int call fcoml adc movsb cld sbb xor lcall scas repnz (bad) mov (bad) test jp mov imul mov adc insl mov xchg into icebp (bad) xlat in pop add or lock mov outsb xchg cmp xor ja pop mov jmp icebp mov outsb stos mov (bad) jl imul or push jnp inc and adc xchg sbb inc jo popf cmp outsl test in aam int das rcrb jne inc loope jg pop pop repz sbb (bad) lahf dec mov jl arpl add sarl sbb std (bad) push inc mov aam jmp (bad) mov adc sub mov xchg repnz ret sbb mov add xor jge iret sbb sub jns sbb mov in or adc mov and adc shlb mov je mov adc cli (bad) mov (bad) lods push adc inc out in ds mov mov dec iret mov or cs jp sbb add sub pushl aas sub (bad) and cmp pop hlt mov aas (bad) stos into mull and movsl adc lods cmp ret (bad) int jl ret pop cwtl (bad) and lahf push jge lea mov and pushf in daa test aas mov pop icebp pop cs sub and and jl jmp lds jge or mov xchg lret bound lret jge test push cmp lods dec imul (bad) les stos sub jecxz add pop insb sub (bad) or repz push mov lret inc dec and add insl mov push jg dec adcl repnz and jne out mov xchg sbb sar daa mov into inc out mov pop sub sub pop jp jmp lret and inc imul stc ffree (bad) sub pop icebp jb shll or add inc loope push and pop or mov sub jmp pop fildll rcll xchg jmp icebp jb inc stos mov xchg stos into pusha jl out sti sub and mov js push in scas sub (bad) mov push and dec mov lea pop sub inc cltd or test push inc mov sbb and ret pusha in out pop xor pop cli and mov push rclb or arpl xchg stos bound lcall test fucom add sub shld repnz scas roll (bad) xor fidivr mov mov (bad) dec je fs scas jecxz sub pop xor divl scas jmp imul push push pop subb outsl mov jne sbb jae ss lock mov pop scas inc in je dec leave and lock sub data16 cmp and pop add into push out mov ljmp adc lea ljmp cli mov and push test nop and mov (bad) lret inc xchg sbb push jne xor lods aaa mov mov subb adc mov and or xchg (bad) imul sbb lock xchg out sub dec sub mov gs daa inc mov inc loop cmpsb sarl out xchg push or fwait sub scas mov jp rcll mov cli xchg lock imul mov sub add jmp clc sub ret xor stc sub orb lret dec aas aaa in mov push or mov mov xchg out icebp pop or pop aad iret adc in scas pushw adc cmp cmp xor pushf add sbb sub repz adc call movsl jmp dec mov mov sti cltd shlb dec cmp adc lret mov aas call scas sub mov ljmp jmp fisubrl std mov push mov lret jecxz pop lods push pop in jp lock xchg fist cli lea pop shlb sub fdivp cmpsl jae das jne pop pop pushf mov push sub daa mov shr je dec ljmp adc sbbb ret clc sbb xchg fsubr push pop loop les jb and mov (bad) sbb into jp inc iret (bad) push xchg add sbb (bad) rol add dec scas sub sub in ljmp mov and mov (bad) dec xor or test fstps and mov mov adc or dec int3 mov test shr rcrb mov dec incl mov shll pushf call sub adc mov or xor outsl dec fist push (bad) cmp out pop push gs push adc sub aad xor test adc cltd dec sti cmp adc xor mov sahf lea (bad) dec ret adc test add mov out fldenv sub xor fisubr mov xor or stos mov and into jns inc ret mov out popf fisubr lock loope das stos sub mov (bad) dec sbb sub and xor mov imull dec test sub xor rol lret out jb leave mov mul (bad) aas mov hlt sahf nop or dec dec ljmp mov pop lea pop daa xchg pop mov dec repnz xor pop icebp test add icebp cld ret not push jecxz mov push xor mov shrb movsb dec jecxz int repz mov push (bad) add mov rcll mulb sub repz adc mov pop aam pop idiv into loopne mulb js das (bad) aas xchg icebp and inc mov int3 and adc xor and (bad) mulb xor stc xchg dec ljmp or les fwait subb mov jl insl cmp mov cmpsb or repz adc push fiadd jmp add sbb push xor in fstps mov pop roll pop pushf mov arpl adc add out pop scas xor ljmp adc inc push mov dec fcmovnu rol dec sbb xchg pop adc stos xchg mov lret loop out in pop and sbb sbb xchg out je mov dec sbb cmp mov aad (bad) loop out inc lahf adc popf std sub push inc out lea lret push lds sbb dec pop out xor adc push add mov jmp fdivrs mov imul xor out cmp sub cmp fldl2t xchg mov mov (bad) lock mov adc cmp lret or fisttp int add test test push pop fadd xchg ret ret or sbb push mov xchg out enter js sub jecxz test xor push std push das out sub lea mov jae dec or mov sub or fdivl ret callw xchg push bnd mov lret int3 ret xor inc stos xor (bad) gs cli scas (bad) jno icebp daa ja,pt lret mov cmpsb or cmp add sub or inc jg dec and sub sbb xor (bad) inc add push outsb sti xchg or mov fsubs cmc psubusb icebp in mov test iret xchg sbb push pop loop and inc js out pop aaa test popf aad dec xchg push jmp cmpsl jl pop mull iret push fldenv inc mov imul mov pop test int repz and das inc push repnz xlat pushf in in add or cltd aam cld jle pop or adc add or dec push fbld (bad) fdivrp lret adc fsts mov lret gs or (bad) aad mov pop adc xor idivb mov iret aad add mov movsb (bad) jb sub lahf repz pop call inc (bad) jmp (bad) std sub inc fdivrp test inc push adc aaa mov shll pop addr16 ljmp mov repz and sub cmp jmp add mov mov mov and pop push dec mov loopne std push addr16 or icebp sbb leave inc out dec out mov xor dec mov or xor std mov into dec mov xchg xchg jbe in idivb adc out mov and loope jns mov or jg xchg pop es iret addr16 test mov xchg in (bad) dec sti popa mov pop cltd cld and popa cs mov mov adc arpl inc mov daa ljmp mov repnz aad dec rcl pop cld cmp inc sub in adc sub (bad) hlt xchg int3 xchg mov and pop divb sbb stc aam sub add cs sbb in hlt ljmp gs or cmc out daa xlat mov les xor mov clc or xlat loope inc decl mov mov adc out into xor movl mov mov pop (bad) testb xchg leave out xlat sbb scas mov adc mov mov jne repnz fcoms lds repnz fnstsw test adc (bad) lret ret pop sub push movsb adc out pop add (bad) sbb cmp iret adc push rorl mov enter cwtl test and das adc and mov xchg or lock hlt (bad) lods cmc test or sbb sub stc fistp das ja rorb stos mov pop jecxz pop shrl fnstsw mov (bad) int3 add es aas xor xchg inc pushf mov adc lret (bad) sub repz or adc bound cltd fcmovne sub push sub add add xor and pop sbb fsubr incl icebp daa xchg sbb adc es ss mov sub fdivl push inc sbb sub pop mov xor jl scas fstpl dec repnz add mov int lock mov imul out xor push ss sub cmp dec repz pop iret mov dec mov lret loopne lret inc xchg mov xor sub mov xchg mov and xor xor or jnp pusha cli lret xor and mov jo dec mov push sbb mov lahf push and add mov adc mov (bad) pop shr stos adc ljmp rcl jp sbb (bad) test aas clc jb insl in sub or xchg inc loop jge imul daa inc jmp cld int or cmp addr16 (bad) dec xchg xchg inc pop or and mov xlat out fsubrl cmp push dec inc sub sub lea mov and das fistp aaa xor test xor in cs rol adc cmp xor ret mov push xchg adc jle jp xchg push and lock movsb adc adc pop shll repnz ret cli mov jge lret rolb (bad) gs mov push cwtl jnp sbb test push repz add ficoml mov (bad) aam ljmp pop push push xchg push xor repz pusha pop (bad) out and cli fs mov mov mov pop shl ret xchg je and xchg lock dec or adc sar mov repnz movsb xor ljmp cmp leave out sbb lahf adc enter stos xor or dec adc dec ss push pop or ljmp repz pop (bad) adcl loope aas sub add mov loopne cli xor cmp jb out ja std sub dec ja sbb sub popa jmp cli sub adc sub in cmpsb mov out insb xchg sub jmp (bad) out mov mov mov icebp outsl lods push shr orb and popf lcall mov inc add adc and and insb sub or (bad) mov jg push fmuls jns out sti fist pop loope and jb mov fisubr mov and mov rorl lret gs jmp xlat loope jecxz jno dec mov sahf clc push jmp (bad) jno cs nop xor mov mov and or sarl lods ret gs out loop xlat mov jbe lods xchg icebp stos cltd stc das mov loop and mov xchg fist add dec jecxz xlat mov gs jne adc sub stc xor pop daa stc lods scas fist loope push cmpsb pop imul xor out adc xchg sbb and mov push jl lret std dec fsubl sub adc repz add push imul push insb call fmuls or ret jge cmpsb or sbb jl add push sbb scas dec (bad) mov mov rorl es mov or pop jnp or fstps fucomip or ret adc mov add daa push out push push scas popa je jp push add push aad mov and pop xchg into rorb aaa out and mov out mov mov xchg add mov aad sbb jmp loope xor jle in add and mov bound (bad) push and loop cmc inc adc imul or dec cli push stos dec adc in sub fwait jne xchg out inc xchg dec into xchg outsb push push mov fimull inc (bad) les xchg add push dec mov pop ss xor (bad) (bad) mov gs das and xchg push xlat pusha mov imul jns push add lods add mov rorb sti mov pop popf in add mov sub mov ljmp (bad) mov scas loope jnp in fdivrp shl jp nop (bad) xor jmp xchg add loopne xlat pop daa out xlat mov xor shr pop daa (bad) shrl sub shll (bad) sub xchg sbb and xchg sbb mov mov pop repnz ljmp dec repnz add popa insb push call rcll xor js iret (bad) mov pusha ds loope popa xor and push and adc inc bound pop inc imul jle rep mov adc mov jl movsl pop push sbb mov test leave pop push sub pusha mov stos imul jecxz int hlt xlat (bad) adc mov scas cmpsl (bad) add or (bad) fnsave inc lds fyl2xp1 cmp or mov sub push push inc shlb test and dec clc dec jne mov aaa pushf or sti mov pop out or pop enter jl dec lret xor add push dec sub push aad sub sub jle adcl sub mov and ljmp and dec outsb xor mov shrl dec sti test das (bad) adc or movsb out dec cmpsl sub jecxz in sub aam jmp in das sub pop movsl gs scas js pop jmp cld dec lock sub push out mov and mov cmp out mov icebp stos mov ja sar jnp xor lret add xor sub shrl in aad jne mov sub int3 loopne pop jle adc scas mov pop mov stos push dec into mov loop xlat xor mov push mov pop push mov out repnz sub lods inc aam adc cli cltd and xor xor push sbb sub imul and (bad) dec or enter xchg cmc mov xor js out and sub cwtl dec pop rolb xchg pop and repnz shlb and rcr adc std jae leave and dec scas mov das lcall xor adc ret cmp leave sub mov mov daa or mov jp jae into jno pop inc sub dec pop jb jmp (bad) repz add xor and adc inc or pop aad ficoml stos mov insb push iret fcmovbe jb aam fs sub xchg lret xchg inc jb in icebp gs ljmp cli or icebp push adc nop sub pop imul insb imul push mov push lock imul xor jmp mov lret inc cmp mov out sahf outsb ret cld mov mov inc inc add imul es ret inc and movsl movsl jno or pop jno imul and or into sarb ds les mov pop mov movsl xor icebp (bad) out imul cmp dec int3 xor (bad) push fisub fchs jmp fs mov ds xchg adc mov stc pop xor mov lret xor pop jmp test mov clc ds and adc sub add jbe das sub jmp sub push mov mov and lods mov mov mov sub bound cmp fistl xlat pop movsl dec bound push jbe push push iret cli jge loope and push jmp or jmp pop add sarb das negl and xor out sahf sub or xor add sub inc or mov inc mov xchg sbb loop mov bound jmp (bad) ja and outsb aas and imul shr xor loopne lret andl cmp pop imul dec test pop mov sub mov ljmp jmp pop dec std and mov pop fidiv push ja sub into and ret mov xor add js lds xchg in cmpsl outsl adc cmp jb xor xchg lret int3 push sub mov cmp scas lods (bad) (bad) xor fbstp lods rorb outsb mov or inc and mov xchg les scas icebp and movsl xchg cmpsb or test repnz push jne imulb pop mov xchg negl imul dec pop jmp or mov or mov jmp or jbe mov ss xor sti mov cmp (bad) jno push inc and (bad) stc xchg out push dec les cli ljmp je pop ja or lret fistp leave call fistp push pop pop or clc mov xchg jl ret or pop lods jmp (bad) mov das sar jno jg or loop mov clc cli push push and xor insb jge inc xorl lret out push (bad) push mov jge cs fisttp push cwtl clc jno bound lods imul dec lock pop add shrb lret das mov xchg jmp sub xchg iret scas push or cmc in or fstps dec ja cmp push in gs add rcrl push fcmovu adc push sbb ret (bad) xor scas std lret sbb (bad) add clc ja dec pop ror xor push sub out mov mov fs dec ljmp cmp sbb push out fdivs in cmc jecxz das push outsb ficoml popf hlt mov and hlt dec leave mov mov push cltd adc iret int3 movsb repnz inc inc pop icebp loop pop lods pmulhuw xor xchg cld fwait pop mov and push and xchg in pusha jmp mov jne stos mov xchg jle push fdivs imul daa push sbb aas or add xor xchg idivb mov dec mov sahf mov ljmp push dec stos jno scas jne adc sub mov cwtl lahf add roll inc push adc inc cli in xor shrb mov rorl fcoms cwtl pop (bad) mov sbb out icebp xor ffreep jecxz jo xor (bad) mov cltd dec add sahf push daa repz push ret cli sub jo pop mov test add rol xor out mov sub jne (bad) fs lcall jecxz dec dec test icebp xchg dec and (bad) sub dec mov jecxz dec sar push dec or stos lret mov mov mov push xchg gs mov in and gs out mov repz insb stos mov fimull push sub stc fwait movsl xchg stc lret and mov inc ss xor push and xchg mov push int xor sti mov mov xlat cli cmp ret add (bad) mov loop (bad) mov lahf adc (bad) call pop mov idiv mov in add jl loop sub inc mov cltd sbb arpl sub pushf imul mov cmpsb dec and dec and shrl clc jb enter jne,pt repz test xchg inc and les inc and ss cmpsb insb sub pop popa in cmp mov cmp imulb popa les rcll lahf sub pop pop mov out cs aas cmpsb push fsubs mov mov dec test push repz shlb leave sub clc test out and (bad) mov mov clc cmp ljmp push xchg bound (bad) fistp (bad) std rorl std cld sahf sub iret fwait leave adc arpl xlat les pop mov popa repz rcl les std js mov (bad) xchg sub hlt xchg ljmp in xchg fdiv jno das or cli sub or push in pop and mov jl sarl imulb mov ret mov repnz in add rcrl pop in daa xchg sti push (bad) cmp ret gs test int3 insb rcrl pop lods mov dec push dec repnz fcompl sub add xchg repz cmc mov ds pop call sub test push jo negb pushl inc (bad) into in cmpsl rcl and stc out xchg adc dec jmp movl nop adc adc inc pop push lea mov xchg sub ficomp fildl mov jno das xlat sbb std mov cwtl fcom add push call jo sub pushf lret adc cmp push rorl push cmp cwtl and xchg mov in ret movb cmp sub jmp and (bad) ds movsl mov and or shll cli popf ja repnz (bad) jo aam lret xor mov inc out rcl and call sti cmpsl ror stc mov xor mov fs js xchg mov shrb mov aas and pop cli mov mov xor das jecxz pop xor xor subl nop mov fild cmpsl pop push pusha dec lret ret test adc outsl cs clc repnz das data16 xor add inc inc and or popf dec or xchg pop push add and mov add adc and stc lret sub sub std aas xchg scas mov stos clc insl ficom mov das jle daa in mov mov pop inc adc mov inc adc dec mov in loope sbb mov xchg pushf enter inc out inc or adc aam daa jbe pop (bad) mov (bad) repnz xlat loopne adcb imull test (bad) in not stos dec xlat jmp in and sbb add bound pop cmp inc add mov movb cs dec (bad) pop and out loop (bad) scas push icebp clc dec ror sar gs lea sbb (bad) scas (bad) cmp mov stos xor (bad) jl and mov jmp into add push mov push (bad) xchg mov fwait outsl mov out and mov mov scas cld and lods aam loope in frstor mov pop bound push add xlat jae or mov mov jg sub pusha (bad) lret ret imul pop icebp mov dec mov push cmp pusha sti mov out cmpsl jge insl daa fmull (bad) out mov stos repz dec (bad) mov and inc adc mov or dec mov xlat scas int3 nop (bad) mov dec push pushfw out inc and into cmp cld jg lds mov xchg or sub inc sbb ret movsl pop je inc lock pop jno shl push or inc out xor mov loope repnz int3 inc cmp loop aaa push pop pop pop out cmp xor aad int jns lods (bad) jbe push inc clc lods (bad) cld (bad) mov jmp pusha add mov imul add loopne mov dec shr adcb std pop or add add mov ds adc jae test call pop outsl mov out pop in sti fldt addr16 or enter cmp jae or sbb push or and in inc mov data16 mov push mov dec inc and push or push mov add push subl mov cs push mov xor pop out lahf mov adcb mov jb xor dec mov push sub mov pop pop add inc mov pop leave and pop mov adc js ds sbb pop dec push rcrl pop add sub cmp push test jle jb push jg enter in int cld lret fnstsw mov popf ljmp cmc jbe sub or lret add adc mov cmpsl in (bad) inc sub (bad) jns std pop add je out add rorb pusha fstpt xchg inc mull push adc xor popf ds mov hlt movsl cmp jmp mov (bad) and outsl mov xchg shll decb dec insb sbb lock clc dec addr16 mov cs (bad) mov sbb je sub xor test xchg mov ja or adc push push nop rcrl mov in or add icebp iret dec and lea fadds (bad) fsubrs or sub jge or mov sbb loopne int mov lret aas push mov ljmp (bad) pop mov fstps div (bad) shrb sub das dec push stos (bad) ja cli sbb or adc push arpl add mov pop cld ror or xor (bad) inc sub inc jmp adc mov int3 mov jmp xchg sub ffree gs out cltd fwait add icebp dec insl repz decb mov pop out adc add rdtsc aaa mov shrl les icebp div inc es add xor cli push ss fcoms icebp in jb lahf shr int outsb xor sbb movsl mov test clc lret or fnsave xor and int sub ljmp sti cmpsl cmpsb outsb cmpsb inc or adc loope cmpsl xchg push mov call bound push pop push popf xchg lock sub mov cmp sub lret push sub inc stc pop (bad) ret and nop mov inc mov mov loop repz xchg iret mov out xor cld dec aam fsts xlat stos fisttpll xor push das cmp or into movsl hlt shrb rorl xchg xlat pushf (bad) repnz push pop dec lret push mov dec (bad) pop cmp pop das sbb pop jg inc adc dec mov (bad) popf jnp add xchg pusha lock mov sub into nop dec xor ja mov pushl xor inc pop sub frstor (bad) pop stc ja push movsl pushf xor into aad or pusha xchg xchg push pop mov sbb jmp inc fsts lret out cmpsb cmp and and push outsl jmp icebp fiadd (bad) dec dec scas int3 push pop mov test sub movsb aas sub mov jnp out jb mov int jp into pop fidivr popf stos push lds jo mov xchg pop fist fdivrl out cmp hlt pop xor ret test nop inc fwait or (bad) and mov mov out pop and adcb xor jg jg (bad) inc in and ret sarl (bad) xor jmp sub inc sub cli clc add xor sub dec mov cmp adc subb ret ror xchg push stos xchg dec sbb dec add xor stos mov mov scas sub fbstp loope add xchg loop aad xlat repz sbb and sub xchg xchg dec aad fisubrl jecxz fmull mov call cld fdivr sti xchg xchg pop arpl (bad) xchg test lock leave or mov jne pushl push test mov and jne outsl out mov mov cltd scas push cs adc out insb ss mov insl mov sbb out cld movsb movsb jmp popa mov mov inc add daa loope sub dec xor mov nop dec add mov or rclb stos mov cli icebp cmp into dec mov das les pusha (bad) (bad) (bad) cwtl aam xor dec sti out imul jge adc ja clc inc pop add mov clc xor stc pushf mov rorl iret inc int3 sarl dec pop lret lods and jge test sbb mov in or (bad) cmc mov xor fldl2e popf sub cli fs xor fistp in sbb push or add sub xor jns inc add pop sbb dec xor sub lods jmp clc pop mov adc push jbe out stos sub xchg cli popa jo adc mov push pop dec push xchg gs in (bad) (bad) push insl popf lods sub test push (bad) rcrl leave or add ja inc cltd mov or sub jecxz sbb rorb push pop lret push sub pop and xor ret or or push inc scas xor into lahf jne or sti add mov das daa and (bad) or loop or jge xor jge dec jne fsubrp mov daa ret cmp xchg push jne out jnp movsl pop pcmpgtb jmp shrb sub (bad) aas int3 repnz mov or mov js mov or push mov test sti sub and dec fdivrp cmp idivb mov sbb pop xchg scas lret pop and or stc jne pop leave jmp pop push insb xor sub cltd push aas dec pop inc dec inc mov pop fidiv pop mov rcll pop loopne jecxz and mov or lods push mov and sub fisttpl sub mov xlat or fistp nop rcrl inc int movsb jecxz imul fwait push add out scas fldcw and fstps and xor xchg mov leave int aas loop (bad) and mov fnstcw iret stos std pop xchg mov pop clc stc hlt jecxz add mov cmp icebp xchg leave adc mov dec pop out sub cmp mov stc and mov jp shll cmp sub mov inc icebp inc jae in pushf (bad) xchg out test and iret gs mov pop (bad) icebp mov stc cmc xor lret pop (bad) leave je fs stos lods outsb movsb scas (bad) cmpsl ljmp ja sbb ficom pop (bad) xor mov cmp xor push cmp (bad) (bad) not cmp jmp dec pop cmp iret sahf mov cmp pop jl push inc loopne pop fnstsw lods jnp mov mov popf (bad) imul dec sbb mov pop sbb jp inc jl mov out cmp idivl jo mov fmull xlat hlt ljmp lret popf push shl mov pop or loop xchg mov mov lret add xor rclb xor dec (bad) xor cmp mov sub popf xchg out sub stc jmp push mov xor mov jne outsl add loope fwait pop aad mov repz stos repz jmp pop xor xchg xlat or int3 mov sti fistpl int3 daa out push and pop and push push jnp sub xchg jne jp es clc inc mov incb fwait cmpsb inc popf jle push ja cmc sti pusha test adc jne push adc or icebp cmp nop sub jmp shlb dec sub dec scas mul sub cmp fldlg2 imul or sahf mov sub adc std bound mov scas xor jge out inc push mov sarl dec xlat mov mov ljmp sub mov sbb inc into dec iret scas je mov push scas aam cli call clc dec pop inc lret mov add add jno push sti push add fldcw movsb lods or repz adc movsb leave (bad) jle add cmpsl sub orl cmc dec mov fild jae daa mov into (bad) lahf out cwtl cmpsb xor inc sub dec aad xor insb xor xlat mov sub sbb insb imul sub dec xorb fidivrl aaa sub stos mov outsb mov cmp cmp mov or mov inc inc dec push icebp lahf cs out adc mov cld sub and das cli sub push jl sbb dec or je adc and je add fadds or insb mul sub repz pop pop xchg push and mov fadds xorl dec inc addl orb xor dec and sti ss rcpps sub cmp xor stos xchg sbb sub sbb mov pop sub (bad) ret adc arpl test mov das push or cmp std pusha addr16 jle mov cmp adc add jno divl fnop lds add xchg pop daa mov call and jle shr (bad) mov jge inc or shrb das iret sub mov lds cmpsl je mov sti rcl lea pop add adc fsubrs popa pusha pop lahf pop push mov xchg xlat adc add mov and aad xor pop fdivrs or lret xor push das jmp jae inc mov push (bad) in movsl jge out mov ret test jae mov comiss out stos mov scas repnz sar dec test pop negb or fistpll scas adc int jle inc fs scas mov or push jge push daa push fwait mov sub add xor sti test xor mov gs push insb lock xor mov jb jp push out dec mov ret leave sar lods pop pop dec fdivs mov jg push xor incb lods dec stos (bad) out pop mov testl test jge sbb sub pushw (bad) or mov jno sub mov cmp imull lret fs ljmp pop daa push pop jmp sbbb xor repnz jne add (bad) dec es pop stos cmp push popf mov xchg inc fadd in pop fsubrs repnz roll insb or mov xor mov movsb inc out adc xchg push in and rolb jae jnp mov sub add xor add dec or jne xor sub popf aad xor ret mov mov pushf jnp inc daa sub xor scas lret mov pop jbe bound sub aas sub bound scas aad inc add into mov mov pop out and or lret flds ret pop fwait inc lret cli daa and (bad) mov enter jmp mov ljmp xor mov sub leave je mov loope pop push fisub mov mov adc add rsqrtps in and mov jmp pop push xchg dec sub stos add mov adc ret das cli loop rcr jb aas pop clc test and jle fcoml (bad) or aas sub mov into mov jb and add int3 loope sbb adc bound dec aad xchg push mov dec repnz mov sub pop in fimull dec ret pushf pop orl lret jne test lret icebp mov and mov mov xlat add xor dec mov jno xor sub pusha clc pop add mov cli push fnstcw or sub adc mov lret in jb sarl mov xchg jb loope aam jmp ret stc mov push xchg push leave out lret test add mov (bad) repnz sti mov jmp jecxz imul js movsl mov rol sub xor xor xchg mov dec adc push movsl mov mov fstl push mov add mov pop in mov divb sub or into pop cmpsl pop add fstps mov xor mov add popa or mov test out mov test and mov pop sub sti or jecxz or jmp and xor mov pop (bad) mov lret (bad) fidiv fsubrs clc jb (bad) xor cld loope sub les add (bad) repz xor scas push mov add out xor jmp xchg mov sub (bad) std ljmp mov or mov leave mov or icebp and add lods xlat mov (bad) leave out inc mov inc sub push int3 sbb mov das and jne inc xchg mov cli or add (bad) push push call push pop (bad) outsl push xlat mov sub sub sti sub in pop dec dec dec jnp inc dec mov ret xchg push add sub push popf push test ljmp test loope jmp sub xchg pop cli xchg aas clc cmp add push aad add xor inc mov xchg (bad) in lea scas and xchg fsubrs andb call lcall pop out mov xor dec out (bad) rcrl mov pop xchg dec loope (bad) jp repz or or mov sahf cmp dec pop out sub pop mov pushf or cmp xchg ret std jno imul lea or ss fucom mov lods ss stc and ret mov lcall ds inc iret stos fidivr fsubr lahf cld adc gs lods stos jmp mov loop jl sub fist xchg and sub xchg js dec (bad) cmpsb ds cmpsb xchg mov das imull sbb and outsb jg ret xchg push scas ret jge jecxz and cltd mov leave imul mov daa leave pop mov xor jne gs mov or mov clc jbe test mov dec jno lods notb out lret sub mov scas cwtl add xchg add not insl pusha sub add pop mov push insb and add fdivr lret or ljmp jp call fstl les hlt jmp sti xlat repz mov jmp js movsb rcrb or pop js pop sub (bad) dec sub jge enter and lahf (bad) scas aam and dec ja or xchg pop sti cmp les sbb ljmp mov mov movl push pop out xor adcb or or jmp or sub xor jnp xor mov in adc sub or fdivr cltd jmp adc xchg sahf (bad) xor pop and out inc jno sbb xor or daa push gs sub inc push xor cmp ret ja mov stos mov push jmp add lcall sub jl ljmp data16 add push imul mov xchg xchg mov cmpsb fisttpl sub ds gs (bad) in inc inc (bad) out mov in or (bad) mov push outsl adc lods push mov popf shll cmp divb pop dec dec xor out (bad) pop sub jne sub mov stos daa push insb ss mov xchg ss add callw call insl push lds stc clc mov add test mov ljmp cmpsl lods dec adc sub and push or inc scas sub movsl xlat dec sub xor mov mov lock test inc mov pop adc pop sub icebp pop mov aad sbb inc jo push pop jmp cmp add fucomip lock movsl inc std test repnz ficomp mov push std test add data16 (bad) cli mov jns jp jbe shrb mov and (bad) jbe bound adc push sarl in popf adc jmp push dec les (bad) or jbe rolb adc pop mov xor outsl loope pop testl out and iret dec and loopne adc mov call push sub xor add repz mov push (bad) lret fucomp lret popl js lcall pushf loop pop sbb and out sub or sub mov test leave rcrl gs sub jmp pop das std push inc jb pop jmp (bad) adc and mov bound dec das jmp inc out sbb push pop out stc lds fildll lret add mov rcll jg mov leave and sub mov out push pop push and jno outsb lret loope push hlt mov xlat xchg pop sub push lds and rcll sbb out inc mov adc mov mov int3 and (bad) pushl lods cmp out xor xchg mov sti outsb pop dec adc dec sbb or es pop add aas fimul dec movsl dec scas (bad) xor hlt and push cmpsl mov pushf mov and sub inc nop mov out testb xchg mov ja jmp stc add aam push jo loope (bad) cmp popf je add lcall xchg test jmp in pop or add adc adc (bad) mov and push dec xor xor or stc push jge lods xor mov sbb out ljmp jae or xor leave cmp sub inc daa and push jmp icebp push neg outsl aaa cmpsl cmc and dec cmpsl (bad) out jo fdivrl enter dec aad sub fcmovu mov in xchg mov sahf lret int3 shll lea (bad) jle stos jmp movsl movsl inc xchg mov mov inc std jo xchg and sub mov add bound jns ss push sub outsb mov sub mov sahf movsl xlat mov in int3 movsl mov xor sbb cmp mov lahf push sarb dec mov cmpsb and mov push loop sbb xchg js sahf or pop xchg inc add pop mov mov repnz dec and pop cmp stc sbb sbb xchg or scas popf sbb daa adc aad push imul mov add stc push leave mov add push mov mov je (bad) outsb or stos add daa or sub out leave ret jge fisubl mov mov xchg or push (bad) shrl in add mov fcoml jecxz sub or pop ljmp xor xchg lret push push xchg jnp das mov or jmp cltd add pusha push jnp xchg (bad) scas push mov jns dec or push es pop or je push adc fsubs mov adc dec or add dec lock add pop stos cmp or and mov pop and add rcll leave sbb push add xchg adc pusha ljmp mov stos out adc decl add jae adc and pop scas sub add sti cmpsb mov or push mov divl adc xor lret xor std push xor into inc xor ljmp loopne mov lahf (bad) ds add cmp sub add iret or jle pop imul mov bound aaa insb cmp stos mov popf inc push or sti icebp inc test cld (bad) mov (bad) sub jnp and push lods movb or sbb das aas subps pop dec or insb inc sbb sub and sub add xchg subb je ret push inc adc bound fcom push xchg orl shlb xlat dec fcomps std sub push cmp xor xor push sub iret stos test mov sub adc test mov xchg and ficom xchg das repnz pop mov lock lret imul mov sbb add lds mov sub test repz xlat imul fucomp inc mov movsl aad repz cmpsb mov sbb mov (bad) xor dec inc mov xchg out ljmp sahf dec loope negb push pop lcall mov aad and ret mov pusha mov mov and daa pop into shlb add fwait mov lahf ljmp jno ret xor mov lahf jle jb test and add jbe gs cltd push cmp out out fs popf loope push imul adc push dec xchg and cmpsl daa pop adc jp mov add push add imul or cld jp out mov loope loop loop shrl xchg imulb mulb or adc add add shll fildl adc pusha xlat ljmp scas fnsave orl xor sub push push (bad) mov add ljmp mov push xor mov ret jge fisttpll fisttpll fcmovnbe pusha fs mov outsb sub jmp cmp pop call sub xchg jmp pushl mov cld or xchg jo sbb add add adc dec call cmp inc pop mov loop jle pop jns dec push mov or faddp gs mov arpl jge (bad) xor fcoms sub clc mov sub and push push popf ret adc scas iret ja iret sbb inc xchg test pop sub xchg je xlat fchs das sahf pop nop or and jb jbe imul (bad) iret mov mov lret std gs aad or sub pop jne stos mov sub stos jmp popf cmp shr mov enter cmp and push divl jp or xchg mov push push not ljmp sub adc mov bound fidivrl push xlat sbb lock lret mov aaa and mov sub leave iret pop lods add sbb adc ljmp dec divl pop xchg mov les ffreep decb cmp test lcall cmpsl xchg and or dec inc jmp sub flds sub xlat int3 ds cmp ret lret popa sub stos xor (bad) jo cmp nop pop in inc rcll stc movsb andl mov das loope das mov sub cmp dec lret mov (bad) fmuls mov cli adc lret or jmp clc pop stc sbb (bad) mov imul imul pop xor scas fcomp sbb iret xchg push xchg jbe call add scas mov iret and push insb cltd fld xor jge jmp ret cld inc pop cwtl rolb fnstcw rclb dec std adc (bad) cli jge jp mov jle push loope pop lret sub inc arpl sbb mov xchg pusha sbb lret pushf nop pop pop mov imul lret inc add adc aas cmc call xor adc push ret mov inc popa and add cli xor jbe insb repnz div mov push dec xor or sub cmpsb xchg dec stc adc xor add push inc or sub stc lods adc jmp nop xchg jmp jl mov dec loop shl cmp sub icebp cmp mov mov xchg cmc cld sti mov shl or jbe mov pop roll inc sub fsubrs xchg in test add in cltd mov xor std insl hlt les pushf or dec cmp cwtl fucomip xor idiv mov push imul int3 inc xor in or int3 mov adc or dec bound xchg mov and mov popa das or lock stc dec aas or xor stc pop xchg mov pop sarb xlat add lock mov add fisttp pop jmp sbb mov fldl aam jmp mov push cltd test jge mov repnz xchg fs lret and mov data16 imul cs sbb fs rol push test pop jno out sar dec test sub pop jb sub mov in inc ret (bad) jge int adc cmp and mov jge insl scas (bad) insl aas xor push or mov add je cli data16 or xlat push add daa clc stos call adc mov movsb jle pop jmp dec and dec (bad) jne test int3 xor pop and push daa out cld push pop and lock lahf xchg pop mov bound negl xor loopne and sbb cmp stc vmovaps inc xchg hlt les adc mov jg cltd shrb ret or sbb bound stos mov dec repz mov hlt cmp pop push mov mov out pop jae dec lret ret xor int3 andl and pop sbb mov fist nop inc mov lcall fstps (bad) rol jecxz dec mov jg lcall cmp or rorb mov ret sub push in shlb lret lret (bad) (bad) sbb xor xor dec inc cs pop add dec movsl insb int jno clc (bad) out or jno xchg (bad) fsts das fsubl xrelease or adc scas leave sbb sub jmp pop rcll addr16 xor xor inc pop xchg idivl pushf movb inc push subb cmp lret movl add in mov add fdivrl jns inc or add (bad) lret adc aad inc lcall popa into (bad) cmp push mov repz inc (bad) or testb leave rcrl mov (bad) lret pop dec or mov mov mov pushf cmc repnz shr fucomp or mov xor xor shrb movsb test fiadd jmp fwait sub (bad) pop in mov mov in dec xor xor (bad) repz icebp xor loop mov fs or aad pop xor cwtl jmp or push mov aam lret push jmp test push dec mov sti jnp lret jnp shlb mov lret jecxz push and sub mov sub or or (bad) lea clc pop add mov add push mov (bad) mov pop out jne mov leave push (bad) pop add push fldl cmp and and add jns mov test test mov in cli or lret ret xchg std shrl loopne mov cmp movsl jb mov add add cmp cs mov push mov xor test shrl cmp add or xchg jp inc (bad) daa and xchg mov lods cli cmpsb jne int add lods push movsb scas stc cli movsl pop mov sbb and clc pop xchg aad sub ret cwtl aad test mov cmpsb and insb daa add mov popa imul idivb jle push out ljmp sub jns and mov add dec push inc int3 or dec nop sub push push push mov rorl pop cmp ja inc or and mov or sti mov pop push adc lcall mov mov das stos je mov leave mov pop scas test jecxz loope mov popf aad lock rcll cmp jne jmp cmp lds xor mov jg jmp pop adc clc and adc outsl clc dec das icebp clc insb adc sub mov jp pop sub jb add cli int3 mov pop icebp ljmp test mov mov pop mov sub scas pop cli cmpsb or cli inc push ss inc xchg rcll add xchg cmp dec mov xor cmpsb out xchg sub mov sbb mov cmp xlat sbb lret inc push cmc dec es mov or push pushf dec mov stos cmp xchg lods mov xchg leave scas sub xor mov repz (bad) and jnp lret mov movsb popf xchg loop pop jbe push pop cmc loope mov sar (bad) in sub sub dec sbb xchg pop sub int3 (bad) xchg inc and or (bad) fstps aas out and mov mov in mov jmp out fnstenv (bad) mov lods inc shrl imul stc decb jo repnz insl mov mov cli or test and inc (bad) xor and mov xlat ror lods sub pop inc ficompl jnp enter add cmp adc sub mov mulb repz out ret (bad) bound notl les (bad) xchg pop mov ljmp push sub (bad) or push sbb or cld and xor adc push jbe and jmp jp ret sub lock sbb fwait push into rorb sub push pop ror (bad) xor cmp inc xchg push and mov inc sbb mov (bad) std sub xchg xchg sahf fnsave addr16 inc xchg xor or jl js mov and movsb int3 movsl sub test adc and mov push mov idivl mov scas xor ja mov pop adc repnz xchg int3 fmuls dec shrb (bad) xor aaa xchg inc popf push push mov sub movsl bound (bad) jmp mov push outsl or jbe push ror or mov sbb sub lret out ja or stc adc mull and imulb sub leave ret daa lock lahf jl jmp nop mov or mov call dec ljmp repnz repz addr16 (bad) pop imulb movl adc (bad) cli xor jbe push cmp out jo sti sarl xor adc (bad) pop movsb adc incl arpl clc into dec mov bound mov xchg xor xor add and add rcll loope out pop incb rcl aas mov push cmp sub test lret xchg (bad) adc gs loope push lret pushf in out lds stos dec and mov notb out popf icebp mov imul ret push js push cmp (bad) mov add fs mov in adc mov and mov nop sub mov lods cs mov sahf sub or jnp (bad) in fs negb mov ret pop in xchg sub xor ds dec (bad) repz xor dec pmaxsw mov and and jle fadds dec pop out push rcrl adc fdivrs scas int add (bad) dec jmp shrb insl invd xor scas cmp cli bound sti or cli inc sbb test push pop mov add dec adc jbe jb dec add out sahf fimull pop ret ljmp ret sub push mov pop push addl cli mov inc shrl xor xor imull add pop icebp xchg lods pop cmpsb outsb lret sbb imul sbb imul stos lret out or ljmp (bad) xor lods dec (bad) sub sbb mov dec mov pop popa leave jge stos das bound stc xor outsb xchg (bad) out xchg stc or repz xchg xchg sti lahf add subb dec jl in mov mov clc pop mov mov sbb scas div jp mov or xchg add push cmp scas into loope push sbb add mov aaa test repnz sub gs stos and xchg mov clc pop xor cmpsb pop pop (bad) xchg adc xor clc pop pop dec mov pop or mov mov cmp fadd sub out dec mull adc inc and dec mov sub out jo mov jl call ljmp mov negb aam icebp sti sub inc (bad) mov dec out or sub (bad) icebp scas imul inc out stos mov ret fistp and ds adc xor xchg lds testl outsb mov sbb repz aam ret jno fs push sar loopne jecxz (bad) loopne fstpl sahf push inc sub lret inc xchg or mov inc shrb je sub cmc fwait sub pop lds pop jmp fldcw stc push xchg mov dec or mov and dec push xchg ret out mov ljmp outsb popf and mov rorb cwtl insb out pop and out ret inc fstpt ljmp jmp cmpsl imul mov fisttp xchg mov (bad) ret fwait mov out popa daa xchg push add mov test das call (bad) insb mov fcmovb and push mov sarl test and into or outsl push lret iret in ss xchg stos (bad) cmp xor mov ret pop pushf enter push in addb loop aam pop insl fldt pusha das mov loop cli scas mov shlb or push in jnp mov lods imulb sub outsb xor pop and (bad) jmp xchg sahf mov idiv pop dec leave icebp cld sbbl sub daa push aad and fimul mov fisubl (bad) jmp (bad) push add mov ds imul das sub sub mov mov movsb test add jae mov lock sahf xor shrb cmp push xchg jno and ljmp push add cli adc mov adc repz xlat scas test inc sub aam fcmovu roll sbb and fwait mul data16 out out and pop push cli jb (bad) pop add xchg xor adc or xchg xlat sti (bad) and gs or dec add iret pop mov call add das adc shl lret pop cld pop (bad) xor mov arpl addl jb (bad) mov lock orl inc scas mov sub xchg xchg cmpsb (bad) add shrb mov mov clc mov subl mov push lret pop ljmp and inc enter fstl loop addl push mov sbb sar sbb mov sbb imulb jno fs xor (bad) sub cs (bad) add inc xor jge and popf add jmp sub stos mov push and ljmp sbb push mov ja push imul dec out lds incl and (bad) ss stos mov add pop pop repz (bad) mov into dec sbb movsl adc sub out popf data16 lret push test shrl or sahf lods punpckhwd (bad) mov cltd dec cld (bad) xchg jb xor (bad) jnp and and jb popw sub popf push cmp mov stc cmpsl jns ret test and loop xchg and xor adc call xlat xchg lret rorl lret into add xchg sbb insb xchg xchg cltd jl jle sbb pop lret testb dec incb mov sub ret shrb in push and sub sbb push inc cmp repnz xchg ljmp or sbb xchg push xchg sub mulb mov dec scas xchg sar movsl mov add xchg mov adc imul popa nop or imul xlat inc icebp adc clc into adc (bad) jmp (bad) cld cli in and fnsave push push das mov rorb jmp leave xor mov (bad) in mov cmp push sub fxch sbb sahf lods sub test pop mov and rcrb jg cmp outsb or inc add jne jge and sbb push mov inc jns add sbb aad roll daa push add das mov sub (bad) dec xlat (bad) pop mov lock inc mov ja lock fstl xor int push ret cmc add mov daa add dec add xor ret dec pop mov stos (bad) lods jmp out jl test xchg pusha pop and add push sub (bad) std ljmp ljmp in pop xor shrl dec jl gs or aad ja xor push ljmp add into rclb jle ror xchg cld lcall inc sub les es adc sub xor jmp sub mov mov out mov (bad) out mov push inc and hlt sbb jl daa xchg (bad) jnp mov sarb pop jo add into push add cwtl xor js xchg (bad) fistpl push xchg das push test fildll jecxz mov cmp mov stc push out xor add inc xlat or mov sub hlt dec bound decb pusha mov jb jp jns jecxz mov pop pop jle mov mov sub dec pop dec out pop gs adc adc xchg push cmp imul andb add mov and jle or (bad) scas xchg jmp dec mov xor lahf sbb inc pushf inc mulb das jmp mov xchg add shr bound push jno inc (bad) out mov and test je jmp xchg xlat pop out pushl stos pop pop sti adc scas mov orl inc xor in ljmp aam lret roll and (bad) push inc pop mov sbb ret mov sub test vpunpcklwd push or fild mov mov or pop lds arpl sub mov mov mov mov xchg mov cmc inc push adc repz repnz sbb inc and (bad) mov dec call icebp cmp mov (bad) xor lret lret fisttp mov (bad) xor pop icebp scas dec aam (bad) xchg aad sub ds jecxz jl or xchg mov aaa jo dec jmp int3 sbb cmpl inc mov dec cmp cli fist lcall out arpl pusha sub adc in into cmp sbb shll sub mov lock repz xor (bad) stos and pushf cmp push add cmp xorb pop mov and mov sti cli (bad) mov es fistpl (bad) or cltd lcall std dec cmp push mov out daa (bad) fstl movsb sti test data16 outsb ds cltd aad pop dec lret mov outsb cmp sti xchg fidivr inc cmp daa stc ja mov inc dec push out and push ret iret inc lea mov mov bound insb jg push insl enter adc enter dec pushf imul xchg adc aad mov data16 and stos adc inc nop aas pop and fidivr enter scas loop xchg sbb sub cltd addb fld1 pinsrw lcall cmp sti cmp imul pop sub dec dec fstps clc ret stos push lea xor lahf je and pop stc imul int data16 stos xor pop jg (bad) dec pop cmp cmpsb in add repz cwtl jns inc mov sbb and push mov lret icebp out mov xor (bad) sub rolb add lret and lcall and dec fsubl and push sub das insb testl dec mov push mov adc fdivl lods out pop jmp dec mov ret test xor ret call cmp mov out (bad) out stos mov pop xchg mov or cmpsl push sbb das push out and push mov ss sub jmp mov movsl mov rcl out fldcw lods clc loope test sahf daa jg xorb gs daa sbb popa pop icebp jecxz,pt sbb adc fistl sbb movsl jmp scas je dec jge ja rorb jmp cmpsb clc mov xchg and int3 insl adc daa inc pop leave (bad) outsb cld repnz das out push xchg mov and cmp notl add sub lahf mov (bad) pop into lods pop inc adc xchg nop fimull cmp insl andb mov sub scas int ficoml pop push jle loop adc push out dec and or fistpll rorb sar mov cwtl movsb or xchg ja lret mov dec div sub xor clc lahf vmread sub cmp sbb cli divl inc sarb add leave push sub rclb imul add jg sbb lcall leave xchg jns fsubl sti scas jge dec cld cmpsl push mov jae or mov es xchg enter sub cmc mov loop ja add rclb pushf out xor xorb cli dec iret inc sub push lret xor mov out ljmp rdtsc rorb and call dec stos int incb mov pusha or push out dec cli xor test xchg add cmp aam gs mov add cli xor or or jle lret imulb dec mov es push and xchg pop (bad) sub sub loope test sub push pop mov jnp ljmp int jl push imull dec fldl es data16 or mov xor out ja inc lock pop divb cmpsl mov rorl jo xor aad mov aad or out sub icebp sub inc (bad) stc sub lret fild xchg add out loopne or pop insb pop push dec push lret insl pop cli cmp jns pusha (bad) and popf inc sub lock sbb enter and imul add movsl rcrb dec stos test arpl popa and ljmp mov test jmp adc or out fnstsw jge mov fstps inc mov ja mov shrb pop adc xor lret ret pop (bad) arpl and dec scas xor xchg jmp sub mov dec ss dec scas movsb push (bad) imul andb ret add cmp xchg (bad) mov dec mov imul pop inc sbb pop mov lcall mov mov (bad) dec and mov cmc (bad) ja or je push jo loope decl xchg js jnp dec decl pusha stc or and lods lret pop fildll js popf je push sub daa add (bad) fcomi (bad) xchg pop or cwtl or cmp or cwtl and jle daa inc jecxz add jno gs fs pop inc mov push cwtl stc mov adc pusha sbb mov xor repnz push lock jmp mov jns jmp sbb (bad) mov sbb sti movsl sar mov sbb fsub repnz adc sbbb (bad) icebp clc std (bad) jno out insl push fidivl (bad) imull mov repnz mov push xchg mov push pushl or lahf pop jmp shl pop sub sub cmc fmuls dec ss dec or adc insl mov test loop add (bad) adc jge dec mov push gs loop stc mov push cli push aas ljmp lret out xor fldcw ficoml xchg add loop sti mov and pop shll incl (bad) push arpl mov out and out pop xor mov ss dec or enter jmp lret mulb sub sbb movsl int3 pop lret das imul push mov out xchg mov sub push inc lods mov repnz pushf setge cmp fs ds bound xchg lods dec stos sub or sub or or xchg add ljmp dec cli frstor scas lea (bad) xor mov or idiv (bad) mov pop les loop cwtl stos add popf jg ret and cmpsl (bad) push and pop cmpsl (bad) repnz and ss lds ljmp clc or das sub pop mov out and cli jae cld sub ret jg pop popf jo dec out xor int3 enter push xor outsl cli xor lahf mulb test jge inc lea push mov int3 push or xlat mov mov jb ret ret push (bad) loop mov imul aas xchg and bound loop idivl dec jns adc test leave call mov push daa add out mov mov rcrb mov out aas xlat movsl rcrl inc sub mov or rcr hlt daa incb pop idiv sub add sarb fstps aad push pop jmp or mov lret repz xor ret xchg imul (bad) mov xor sub (bad) cmp fadds enter (bad) or lock dec mov ss andb mov jne dec in or pop xor icebp xor call or jae xchg xor mov adc inc lret xor (bad) cmp and add dec repnz adc scas fildll int3 sbb cmp addr16 in lods fisubl mov leave std push add loopne and xor xor fild xchg ret dec inc (bad) mull xchg bound ljmp push (bad) test jecxz sbb in enter xor insb bound add xlat push and cmpsl push mov repnz insb dec push lret pavgw sub mov xor mov ret xor loop jle sub cmpsl repz sub jecxz ljmp pop sti (bad) jb pop push push pop loope stc insb lds lret xor mov and out ja adc les mov mov sahf dec or jmp idiv dec mov loop xchg cmpsl popa repnz push ss add pop fisttp push icebp push push sub ja ja movsl (bad) repnz repnz mov cmpb xor stc mov out mov adc xor insl xchg ret inc bound stos loop or enterw mov cmp or mov and dec sbb cmp into mov or cmpb xor arpl (bad) pop test add lods (bad) mov insb test jmp mov test sub (bad) roll adcl cltd mov sub les testb add lods iret (bad) dec xchg mov ret (bad) mov rclb xor in inc dec bnd (bad) ja ss mov stos mov and push aam jmp inc or pop jae xor mov loop jmp mov imul and pop fiadd (bad) (bad) out mov dec loope cmp cli mov ja test dec mov mov pushf pop je xlat cmpsb sti cwtl inc mov outsb mov xchg ret in stc mov push sub pop (bad) xlat xchg xor bound jo lret adc sub xchg cmp cmp arpl cmp dec clc imul adc out sub (bad) pop sub xor mov jl mov xor adc mov mov xchg les inc ficom (bad) scas cmp mov (bad) inc lods fdivs out sub mov icebp xor adc and sbb jne xchg adc jmp sbb mov mov and and and jbe movsb and lret mov mov mov mov (bad) repnz cmp out std (bad) out mov repz pop or add mov mov xor xor add mov xchg jge mov add push mov xchg fildl cltd jg adc or ds leave (bad) cs sub cmp in fwait mov dec fst dec inc outsb mov push clc notb jmp fbstp ss and in mov and mov cmp dec sub dec ret mov negl in push xor scas arpl ffreep loop outsb xlat ret repz mov pop xchg mov mov cmp adc and dec js mov mov loop lods stc mov (bad) sbb (bad) mov cmc sbb fisubrl push (bad) incb pop add pop jp (bad) stos mov rclb dec inc js js xchg gs mov aas inc lret mov mov inc sub jle cmp or out leave sub daa add adc cmp shr adc mov dec (bad) pop pop in xchg pop pop lret and or xor rolb mov or addl xor bound mov clc and lock rorl shlb lea or xchg pop cmpsb add pmulhw lret ljmp jmp xchg pop mulb jae adc sub sub cmc xchg popf mov mul pusha or mov enter sbb mov in ljmp sub pop fldenv xchg xchg lds out mov (bad) clc in pop addr16 inc fcoms adc (bad) xor cmp sub mov hlt test cmp movups and sub mov sub lret mov pop sti repnz xchg mov or clc loope (bad) flds ds sub dec adc cmp push xor leave mov xchg icebp lock sti into dec pop inc leave or push jle jmp daa (bad) jae pop pop ja push mov push dec pop rcrb jecxz das out pusha vmovaps ffreep dec or sbb int3 push and xchg sub into mov or mov xchg push leave pop ljmp (bad) mov mov pop roll mov pop (bad) int jle dec icebp outsb (bad) and push lret sub xchg lret scas (bad) pop jp xchg aad into jne movsl cmp fwait (bad) and bound sti jns cmp (bad) outsl sti adc adc push add or test jle dec ja popf mov aaa dec (bad) cwtl repz xchg push jno jp mov test movsl int3 sbb adc cli lods or (bad) push xor push dec sub push cmpsl loope (bad) outsb cld push mov push movsl mov mov rcll cli sub jnp jo (bad) and outsb mov imull ss hlt outsl lds add adc call sbb ljmp jp shlb mov popa xchg sti iret pusha pop xor fisubrl not insb jmp jmp leave and dec cli in inc sbb or sbb (bad) cmp and dec and popa dec and and out jle mov sub flds pop mov pop sub stc (bad) adc iret sub cmp pop mov jmp aas sahf repnz sbbb or lock in mov add mov (bad) int3 lret inc push cmp xor mov and dec (bad) and sbb cmp lret or sub xchg lock ds out xor loop addr16 inc add mov mov scas pop je cltd sub fiaddl dec or sub dec and jge cwtl adc xchg stc loope (bad) fcompl cmpsl adc pusha hlt mov lahf jae push out sub dec mov jmp fnstcw mov adc cltd lret cmp (bad) aad into xchg (bad) mov (bad) lret (bad) fptan jg test mov pop sarb stos stos les dec and mov mov jmp bound sbb adcl adc cwtl xor stos sub lret sahf lret inc dec adc mov cltd xchg int sub addr16 xchg into and jb jecxz mov dec lock popa popa mov popf cmpsl jg sbb mov bound sub data16 sub xchg push leave or test mov mov sub add lcall out sbb in pushf call xor xchg pop mov out lcall cli iret and inc and xlat xor cltd pop xchg mov mov insl add int sub push out mov sbb mov nop mov decb pushf pop popf shll pop xlat decl jl (bad) jg push popf jne jl mov adc xchg mov xchg js xchg xchg ficoml lcall ljmp add inc jne push sub pop xchg mov push xorl and xchg xlat loope jg jne mov xchg jmp iret pop bound adc popa (bad) and sub adc or sbbl cmp test leave push ljmp movsl test add imul or test movsl xor mov mov movsl lock stc add cmp (bad) sub jle and leave sub lret aaa cmpsl fist pop lock inc xor mov ja das and and inc add into (bad) mov push pop adc je repz daa out cltd mov or daa or in add cmp mov xchg push loop mov add je (bad) and cltd icebp dec mov lcall das out and mov mov adc leave push mov enter cmp lds test adc mov fsubrl pop mov lods xor mov sub sub add (bad) repz mov jb lret pop ficom jge out push or test mov jmp clc pop xchg lds add or add movsb cmpsb int3 js icebp in into xlat mov pop cmp notl xor mov push push or mov push sub rcll lahf movsl stos cwtl mov test outsb push repnz icebp adc iret mov mov push mov or sbb and (bad) push sub (bad) mov push sub xor or (bad) jge movsl nop adc jle call xchg test xor inc xchg out fsubs rorl lcall test sub movsb cmp pop lods mov ret into xchg lret xchg add dec and xor aas pusha cmp mov and mov jnp sub (bad) lret mov cld sub xor pop and and cltd jne xlat cltd fwait pop sub sub out sub and pop (bad) xor mov ljmp add je mov xchg adc insb adc push xchg xchg in loop pushf sub imul loop pop inc pop arpl jne xor cld sbb pop mov ja mov cltd mov pop xorb fidivr arpl in jae sub sub adc stc xor jge test sbb push lea (bad) sub call pop dec push loope push cmp or cmpsb cmc and jg xchg loope xor cs popa imul lcall dec leave fmulp lret jbe dec cmc addr16 or and dec dec lcall addr16 pop adc sahf dec or and or mov fimull pop sub stc xchg xchg stos lea test lret ret fisubl or xchg movb (bad) ja push ja dec ljmp jmp xchg push sbb test push test fisubr sbb std xor add mov decl mov xor fnstcw xor fldcw mov mov out inc (bad) out fld arpl jge rcrb int outsb or out push jecxz pop sbb mov js movsl xor mov pop test (bad) mov mov negb sahf icebp jg stc or ret data16 pop out pop (bad) and hlt cmpsl jl sub inc repz and in pop out ds popf xchg push mov sub xor mov gs and in aam popa bound mov rorl (bad) push das icebp int stos pop mov inc push pop xlat fstps sub cmp lods aam add scas xchg add or movsb divl jne rcr xor inc lcall cltd dec not lret pop bound push adc mov arpl je ljmp sub repnz add mov (bad) cmp pop lret (bad) daa ret adc sbb xor mov repnz rcll add pushl (bad) and cmp mov loop sbb or shrb mov mov or hlt lret mov and cmp (bad) enter bound (bad) fcmovnbe adc mov dec (bad) mov pop dec add xchg add xlat sbb fild aaa mov or roll add jmp mov jmp popa das sbb das out add sbb jmp push sub aam dec scas sti imul push les (bad) je divb dec xlat pop gs xor add adc xlat mov dec repz leave lret aad pop and xchg push dec mov bound or lea mov adc ds inc cli jle pop out cmp (bad) dec gs and imul xor add mov test shll dec inc cmp ret sub aad cmp jo mov cmp cmp pop bnd ret ss stc dec mov mov mov rorb xor fwait jne and repz push jecxz vrcpss jp repnz aam push aad add mov stos das cwtl dec into les pop mov or jge cmp sbb dec hlt in sub rorb mov mov (bad) (bad) leave loop out add mov or fwait and add or ljmp loop fsubr push push stos aas jnp adc ret mov out inc pop xchg pop dec inc cmpsl mov add gs adc call iret clc testb sbb out mov cs jmp call sub sub clc (bad) mov adc aaa ror and mov (bad) and xchg rorb pop dec mov add xchg mov pusha jg sub sub xor sti repnz mov lds inc sub ds mov or and xor sub pop lcall (bad) sub scas push dec (bad) jb pop pushf lahf push movsb scas imul mov xchg out push xor call aad mov mov cmpsl sbb push push lea pop and add out add fucomi cmpsb mov push mov dec jmp push xchg popf or cmp sbb mov mov cmp add notl mov adc cmp inc shll pop mov fldlg2 mov or inc xchg fs scas mov and and xchg mov iret mov mov popf jl push dec xchg icebp sbb rcrb adc hlt out xor scas add mov jg adc or jle ret dec bound or out add jecxz hlt pop jmp mov insb outsb cmpsb cmp xchg les out dec xchg xchg pushf and das loopne xor and jns jmp scas mov (bad) and stos clc mov sti jb add xchg movsb and push xor cmp add push xchg adc lock mov bound pop xor mov aaa jb movsl mov imulb xchg repz mov add imul jecxz mov pop xor mov and xor popa xlat and sub push dec scas out dec adc popf and xchg adc xor sub mov ljmp addl adc xor mov (bad) setbe (bad) sbb mov xor jmp rcrb stos adc std lock in adcl inc adc sub xor lea sub xor add mov cli jg sub mov loope sub iret add stos cwtl pop out and sub cwtl leave out dec pop mov cli movsl pop mov jp or sbb out call adc ficomp add adc adc test fs mov movsbl das out sub repz stos mov loop jns push and or repnz dec cmp sbb push pop push mov fwait pushl or sbb mov push mov push cmp das test mov jg rcrl xchg sbbb or pop push pop push lahf cmp xor xor enter cmp pop mov sbb push repz clc ud2 mov mov hlt or push neg push push pop lds subl (bad) fwait add (bad) jl add cmc repz fiadd mov dec add adc pop sub sub jge fadds (bad) sub stos or or or add pop or adc dec decl add je mov push sub pop cmpl adc (bad) jle mov (bad) cs out add pop mov inc movsb test ss test mov xor push fidivrl test cmp lods mov push mov out and imulb leave xchg and jnp test push pop mov ds pop add or lods sub dec push ret hlt imul (bad) cmp pop add and lods lods jne lods add sbb sahf add inc xor aas out sub add xlat mov xchg popa add cmpsb pop xchg xor mov pop add jp icebp mov sub test inc sbb mov xchg daa loop mov out daa gs into adcb sub xchg icebp es push xor pushf or xlat lcall dec inc outsb xor fs push sarb sub rol jecxz clc mov jmp fs scas adc cmp sub loop xlat mov jns pop add pop mov sbb lret jno and mov call or sbb xchg jg mov and or jg xor adcb (bad) xchg sti out sub loop mov sub (bad) or jge leave clc or scas inc daa fldenv (bad) (bad) bound fs sahf aam xor test mov pop gs and paddsw out popf inc pop lods sbb dec mov adc addr16 mov mov jl push mov out lret push dec mov sarl or and out test outsl or add dec add jne xchg enter mov je scas push pop fldl aad sub and fldt int3 enter add pop (bad) xor fwait add clc sbb and adc mov mov js jmp cmc mov cmp push (bad) pop mov jmp inc testl aad ljmp (bad) sub cltd sti rclb pop push jecxz aad (bad) mov mov fdivrl cmpb fidivl divl adc ret scas xchg iret and push cli fildl and adc loop sahf shr not insb and (bad) and leave mov cmp sub xor mov xor cltd loop cwtl in pop sub jle loope aad mov sub jge std mov push (bad) daa inc icebp (bad) mov mov lods daa in pop shl adc mull pop rolb xor push xchg in xor scas pusha sbb xor fwait xor stc roll jbe pop ret push cmp cmp (bad) out jl push push mov outsl out outsl inc or jno dec pop and pop lcall mov push mov ljmp cltd in das jl (bad) mov jne jo dec scas fldl push add rorb lret dec (bad) cld or sbb in sbb pop mov xor push adc dec gs loop mov pop sub cmpsl subl in cmpsl pop adc and xchg out push icebp ja jge aaa rcrl scas pushf fadd pop mov sub jp call mov (bad) dec sti sub mov pusha popf jmp mov (bad) cmc pop push and ja cmpsb add jbe (bad) enter xchg test ret aaa add fcomps (bad) clc stc and lret (bad) (bad) gs sbb inc ja dec push jae pop pop lods repnz lcall imul xchg pop test out xchg push lahf jmp jo push sbb or push push lahf in mov xchg lods add push or mov sub mov inc jbe pop and lahf push mov adc pop adc mov push sbb xchg push cmp or xchg (bad) mov js dec ret cmp xchg and dec fimull in ja push gs mov das sbb sahf daa cmp and push inc popf xchg jae movsl adc out shll mov (bad) cltd out xor push out int dec sbb in or movsl insl cmp daa mov repz iret and add out incb mov inc int3 mov mov cmpl int int3 push inc sbb pop ficoml sbb or mov sub mov and jo popf adc xchg cltd xor sub mov add sub aad xchg sar loop lret imul sub mov call sti mov and add out into (bad) lock pusha or imul (bad) in jp cmp cli or cld sub dec ret sub jne mov mov cmp adc push mov mov push cmp pop into (bad) pop (bad) movl push bound hlt mov adc bound jecxz xchg mov xchg sub test sub xchg fcoml cmp repnz pop hlt and lods das inc mov adc cltd push lods pop sub insb mov mov or add jp or ljmp sub leave icebp es pop push loope fbstp jne out cld out imull pop push mov lret sbb cmp sub lret pushl bound jne or test pop scas xor or outsb mov vcomiss inc pop xor aas xor xchg xor cli mov enter xor xlat jns push fwait adc clc iret dec mov clc or pushf mov (bad) sub (bad) imul adc pop mov jmp pop rdtsc add cmp pop mov or (bad) cmc push aam ret and negl and sub xchg adc lret inc mov out adc nop mov popf and mov xor call scas sub inc es add loop add add xor jne outsl les movsl add add nop and cmpsl ret xor sub int cmp hlt pop or jp cwtl push (bad) jo fimull jae cli xor repz aas cltd cmp fdivrl mov mov insl ja xchg cmp sub iret push pop jmp pop jl lret (bad) stc stc pushf aaa xchg cmp out xor sub xchg pop fs lret xor sbbb cwtl dec adc sub pop icebp movsb adc imul popf cmp pusha mov add stos fstl aam mov dec imul jp dec ds mulb mov mov and add and es gs xor jecxz cwtl sti call lret scas mov sub sub push xchg out xor xor dec loopne adc adc and xor or and pop add cwtl push xchg (bad) jne out out shll sub outsb out bound lock loop gs aad push push xor add add pusha (bad) mov les gs mov pop hlt add insb adc jb dec (bad) stos sub push xchg mov push mov pop jns push loop mov push push lretw cli sub mov sti out pop call xor sti pop sbb mov mov pop xchg (bad) (bad) aad sti mov mov not into pop (bad) mov inc jmp in add rcrl mov loope fmuls negb xorb aaa add push push pop mov shrl nop pusha (bad) ljmp into add incb int3 add pop mov (bad) cmp pop subb cmp jb (bad) notl mov jmp mov and pop pop cmpsb and push dec and mov and enter repz cmp sbb or mov cwtl stos ret xor or shll add stc pop lea cmp jmp or mov subl in cmpsl or pushf push icebp das scas sub ds xchg sub sti push pop mov cmpsl stos or xor test inc mov lahf loop mov adc mov dec les leave push mov enter fs fwait fwait dec loop mov jl push jo loope jp imull adc and xlat int3 scas xchg sub (bad) mov sbb sub mov dec and add cwtl out mov movsb in cld xor mov jno sub jg sbb mov or cmp (bad) pop mov lcall (bad) or lret push xchg ja xchg dec repz test (bad) cltd subl aad (bad) or gs mov dec mov xor sbb aaa cltd fldt add inc rcr xor rcl cmp inc shrd mov jecxz test mov daa xchg inc bound cld aas pop xor mov push sub inc adc or sar adc (bad) ss sub inc sarb xlat inc xor cmc add int3 insb xor pop inc and mov push sub xor lret sbb mov fwait sub out je fs out jb aaa rcll movsl add adc arpl mov fmuls je enter sbb mov gs mov das xlat xchg inc pop mov and and fs stos aas jmp pusha ret (bad) lea out pop push and int and dec inc mov add xor (bad) jb cmpsb dec iret mov lret xorb fcmovnu xchg inc xor dec and adc std add mov lcall sahf loope or (bad) lock testl lret pop jecxz mov cmp lret inc ljmp push pop push mov add insb (bad) jecxz xor in ss push outsb add push mov jge lds add sbbb dec test mov push orl pop push subb ja pop pop sub xor add xor imulb adc pop pop mov pop sub jge add aad rol or push mov xchg ljmp scas mov scas jg mov loop mov pop add inc or xchg pop shlb sbb inc (bad) mov cmp call xchg cmp mov jb bound pusha dec push and into or lret or in fiaddl push mov inc dec mov std pop negl sbb nop xor push push jg add shr push mov jo push rorl sbb inc dec add (bad) out pop add xchg dec xor fisubr adc sub xor inc (bad) loop push jmp or pop push mov push ret and jg adcb sub pop fidiv add push xchg push dec cmc int3 (bad) lahf xchg dec jge test fwait jp rcrb fadds or lock cmc data16 and pop mov cltd (bad) push push pop push inc aam add in mov sub pop (bad) mov (bad) inc les pop ficompl or xchg outsl fcoms pop lds xchg inc repnz push and and (bad) out dec mov das add mov push hlt in push or aad sub jne push and mov pop scas gs es push (bad) push mov sbb in and push adc out fldl mov xor or jno addr16 add push in sub rcll cltd cmp cmp mov mov in ds xchg (bad) nop ficoml aam sub xor mov ds shrl into cmpsl imul mov ljmp ds out in data16 jmp add or push imul loop xor negl sub ret cmp adc mov add aas mov mov mov cs jge jbe mov mov add shlb xlat stc push adc xor insl pop jmp imul dec mov outsl repz mov and xor ljmp jnp or sub push mov inc mov pop jbe sub pop cltd loopne xor jb and sub mov aad xchg cmc popf push dec push pop or sub xor xchg xor inc sub cld dec rolb mov (bad) dec or mov and imulb inc or mov and xchg adc sub xor mov mov push pop add xchg std cmp sar xchg mov push mov out call ficomp scas fstpl loopne fdivs or fistpll or pop pop and and cmp sub xlat test test loopne repnz sbb or dec mov (bad) and xchg (bad) jmp or fldl mov push les xor xchg mov lcall sub ds mov daa out lea sbb (bad) mov out mov (bad) jno insb cmp in cltd jne sahf popf cmc add mov repz stc jb sti rcll jg add push pop aam jbe inc and fildll xchg clc jns cmpsl push (bad) and sub nop enter gs js lret xchg sub jb mull adc add mov test pop divl jecxz xor lret add push or add sub push vcvtss2si jmp movzwl ljmp jb (bad) pushf mov fildll dec jmp xor jge or sub sar lds cmp rorb mov add movsb popf lods sbb sub insb fmuls or dec icebp dec add sub jl xlat out dec dec in cwtl ret mov test loop shrb jne notl push cmpsl rolb pop jge mov mov xor ss insl test aam in sahf movsl loop inc nop xor and dec scas test pop and andb mov mov leave pop (bad) rclb fistp xor out sub dec and cmpsl xlat inc mov mov xor dec fsubrp push neg adc ret scas loop sub mov mov mov (bad) jns rol scas repz and call sub fsubs dec out xlat mov fnstenv adc enter or push xchg pusha xor sidtl out push dec test mov and xchg sbb pushf loope test adc xchg dec xlat shlb dec jmp mov leave out mov and das out cmp cmpsl cli jle (bad) lret mov cmp pop lds stc ds sti sub sub sub sub int3 mov das sub sbb inc hlt cmp movsl push xlat pop out sub xchg mov insb xor faddl xchg negb clc push adc outsl cmp das testb mov pop stc cmp scas ljmp xor push jle leave mov out decl icebp mov adc movsb (bad) mov sub sub xor mov pop popa xchg mov fimul shr (bad) add and mov mov ja and xor pop sar xchg shrl and (bad) fildl mov jg mov (bad) and roll mov mov pop inc clc add mov ljmp inc das pop in pop cld pushf and jne and pop icebp fldenv les pop mov bound popf cltd adc mov jbe xchg jnp out lcall xor jecxz cmp jne xchg call xor cmp mov cltd and lds xor stos clc repz lds iret scas mov xlat cs fwait and leave pop jae and xchg out cli (bad) mov movsl push test and in or (bad) or sub cmp inc jmp sarl out sbb fsubrl jg (bad) pop dec fs add dec mov jmp incb inc mov dec (bad) mov lret inc xor add mov mov lret mov xor cmpsl pop insw mov sub dec andl ret cli in mov icebp cltd ss xchg fcompl adc es vmread test or in or fmuls sbb pop gs scas jno add aas (bad) es and xor jnp cmp mov dec stos mov frstor pop mov mov mov cmp mov adc sub lahf sarb sub dec and push stos jg xchg xlat sub inc sub (bad) call push pusha sub stos cltd mov mov shrb pop pop mov sub icebp sub jnp out clc rcl lods shrl add adc ror leave out rorl lods pop jecxz adc fisubr je cld mov (bad) mov aad inc add or jl (bad) dec bound and mov mov nop in sti mov jnp mov mov sbb imul push cmc (bad) jmp (bad) das push lds add aaa or add adc jmp into or sub add add or add or fcmovne test movsl mov mov je mov jle mov add cltd and rorl (bad) fs in je in in stos cld cmp fldcw lret pop fucomip loopne or mov inc dec stc setge xlat pop xchg (bad) loopne xchg push mov inc pop mov sub sub inc daa fist xchg ret mov pusha mov dec sub lret out sbb sub (bad) dec mov mov or das out xchg fsubs and push pop sub movsl mov dec add xor out mov lret add inc mov (bad) mov dec insb ljmp iret scas lret xchg or bound ret je popa movl movsl or mov adc and adc mov (bad) lahf fsts dec imul aaa jg scas fs fprem1 sub inc (bad) icebp pop rcl dec or mov push and fstp notl jge add inc jge xor mov fist jmp in jns sarb sub cmp and dec loopne xlat cmpsb stos mov push or mov dec lret mov loope lock test cmpb test sti out xor mov int3 xchg sahf lcall mov inc mov daa dec cmc inc push and repz das (bad) adc add push adc or pop mov inc sbb push xchg sti push jns mov dec mov popf pop loopne adc cli out mov jo (bad) xor repnz femms mov sbb dec dec sub shlb cmp call repz push add cmp lock xchg inc push sarb sbb repz or jno iret or movsl jno stos fadd jmp sbb mov adc leave leave adc xchg xor xchg aad jb fisub les xor mov xor (bad) push call int xor (bad) cmp mov mov add loop mov (bad) repnz test push sti and mov push mov fnsave ffree cmp movsl xor cmp imull pop call rcr stos mov push mov fsubrl aas mov daa and daa add cmpb push add sub and jl data16 or inc mov xor and xchg fld outsl aaa leave dec fist xlat jbe pop aas enter jns xchg dec shll xor add (bad) enter add scas sub (bad) lret add or ljmp inc rorb mov jge out jle das pop out fs (bad) or lret and cmpsl mov pop pop (bad) (bad) xchg xor in cltd int lods dec call insb cmpsb cld sub xchg (bad) mov xchg and add popf call push jns inc and push jl add int3 dec dec mov scas pop ret ljmp add (bad) add or push mov insb mov movsb lea mov jne xchg adc out scas push out call sub shrb mov jle out sbb popf mov sar mov vmovapd pop push lahf pop push inc cld xchg jl inc jecxz lret test sahf adc js fst adc call cmc cs ret adc lret mov repz repnz leave jge mov and push jmp call cmp scas loope and adc adc sub jns hlt out push ficom jb sub mov mov inc jge adc cmp add mov inc adc and jns or loope mov add push icebp mov icebp inc or iret push js jo xchg mov and jge leave ds cmpsl out lcall push cmc inc push popa insb sbb sub and mov push mov mov cmpsb dec pop imul call ja and js les xlat cli call scas pop icebp mov fwait jl enter or lock sub aaa adc sub stos pop (bad) dec xor mov inc call mov or dec (bad) das pop push test sub out jne iret dec xor mov popf aad inc pop insb lea pop cltd loope rcll daa icebp push dec arpl cmc or outsl daa fldl sub mov dec pop mov aad aas and nop and add xchg lea push ret xchg mov mov sub jmp ljmp inc xor mov adc xchg pop xchg (bad) mov out daa sub xor sub sub shll jo je xchg xchg push mov aas xor ret inc (bad) mov cmp sub lods inc dec mov sub pop push add pop loope xor repnz xor repnz adc or popf (bad) inc negl mov mov mov inc sub mov bound pop add into mov jecxz push test test xor adc aaa jp mov dec jno xchg (bad) scas int3 fildll sub cli mov inc adc and loop fnsave ret sub icebp inc imul sub xchg mov mov rcl mov add jle jb xor dec and sub aam pop or daa jecxz jne sbb pop cmp repz inc lock mov add push jo (bad) and push sub xchg or repnz dec ret push inc and negl bound repnz lcall mov dec push call out rcr add adc sub add outsl and pop pop mov pusha cmp leave fs jmp imul sub jne add sti sub mov (bad) flds out mov and mov push sarl gs orl iret xchg jge dec roll fsin xchg imul int es inc dec int (bad) mov mov or icebp or (bad) (bad) mov jp inc add fisub push ficomp adc inc pushf scas or xlat mov add daa std cmp out cmp xlat test or push inc ret mov fisubr rcll test into push push cmp push fisubr jge and pusha hlt cmp mov ljmp dec push push fisttpll or add jns xchg shrl fnstcw cmpsl mov into sub aam adc rcrb or jne in cmp mov push jmp dec icebp int3 inc stos jb popa mov fucomi leave imull jmp and sub jno or cmpsl mov mov rcrl push or or fist mov or mov (bad) pop mov daa push adc pop (bad) xor (bad) xor pop lods xor adc je int3 call sub push (bad) pop icebp cmpsb imul push subb fdecstp ljmp xchg push add in (bad) and sub and call shrb lods push cmpsl pop cmc xchg out mov sub cld mov push or daa (bad) gs and cld push adc or xchg (bad) loop nop cmc (bad) adc mov jg subl cltd cmpsl or xor mov jle pusha dec push sub sub xor popf shll gs sub push mov sti rclb (bad) in pop and dec pop lahf push mov ror fcoml fnstcw rcrl mov lock xchg aam jmp push orl push xor mov pop mov fadds icebp mov rcr aad loop xchg sti int inc mov pop icebp inc jg add xor test popf push sbb out mov (bad) das mov xchg rclb cli add or (bad) xor (bad) and mov xor sbb adc mov sub fidiv pop inc enter sub repz adc in and (bad) xor and mov adc push pop stos pop pop in dec sbb mov jl iret pushf jmp bound orb cwtl test fsubr mov xchg insl or ret stc inc xchg fild lret out xor iret mov stos mov mov dec arpl dec xchg stos mov cmp adc lock sub or cmp xor retw push fsubp or pop icebp mov call out cmpsl (bad) out dec fist adc repz mov jg mov fstpt xchg lret mov lods mov jmp fsubl movsl jne mov mov gs cmpsl roll inc (bad) mov inc add (bad) subb inc or imull and push iret cmp and mov iret cmc adc cmp bnd push mov push mov jge roll and or mov dec pop mov sub jb loope dec mov mov sbb xchg xor out test pop mov aaa mov pop out ret ja dec cwtl hlt sahf ret pop fmuls mov cltd inc mov (bad) and fsubrp cs inc and sbbl insl sbb inc adc in xor icebp pop aas js ljmp pop cmp jnp or test pop dec es andl shr in mov and mov ljmp mov aas lods xchg add pushf mov addr16 sub mov or mov imul sub out xchg sub push sub jmp or pop jne push jmp mov insb ficomp mov jp sti push aam (bad) loop pop int3 lcall or sbb xchg push repnz popf adc es push sub (bad) adc sbb (bad) es imul xchg pop mov cmc movb xlat jmp lods cmp sub inc data16 push push (bad) xor lcall add pop sub xor repz add xor or sub shlb call cwtl movsl cmp sub add shr lea cld push fnsave jle cmpsb testb les push fidivr mov dec test push sub lret lea into sub and mov jecxz dec mov lock and lock add ret adc ds repz pop cmp lret stc out das sub fwait adc mov stos out pop int3 inc cmp leave leave dec aad inc mov out and lret mov imul xchg stos pshufw cmpsl adc dec jecxz cmp call js hlt mov sbb cmp xor and lcall gs das jp sub inc xor or push cmp push dec inc das push fcmovbe daa jae and dec pop sub shr xchg jne cld sbb jmp aas add push mov (bad) repz xor mov mov add (bad) or mov sub and sub xchg mov or xor sarb jns xchg xor pop mov lea enter sub popf imul mov arpl push out sub inc fcoml push mov dec es in or push ret movsl pop pop fs mov sbb ds add mov push lods sub stc mov mov pop icebp lea mov sub icebp lahf pop xchg or sti lret stc dec cltd (bad) jnp or jecxz (bad) xchg or cmp pop pushf mov outsl test adc mov mov arpl cmp into and rcll dec lahf das xchg jb or test inc scas in repz ljmp pop pusha sbb or jnp adc mov sbb xchg lcall scas je stos or push (bad) and or mov or scas mov jmp imul cmpsb mov dec dec adc scas fcomp xor mov cltd jle push and sub ljmp fbstp lods xchg xchg adc pusha lock xlat sti and add sub daa adc scas sub xor mov int3 andl mov jmp add lds jge cld push xor sub aas (bad) rcrb mov mov cmp ret jmp jbe dec ret mov dec int jg adc mov (bad) dec add mov (bad) fstl cmpsb movsb out add into and lds mov (bad) out cs adc ljmp xchg cld jne xor out movsl push push mov pop mov pushf out pop repnz mov dec xor call add mov pushf fadds out fcompl test f2xm1 xchg sahf shr arpl or ja xchg jmp call dec adc imul cwtl mov mov adc stos outsb mov mov daa (bad) fstpt mov mov push mov dec mov jg pop inc dec jmp ret ret pop push (bad) lahf cld movsl ljmp sbb and mov or dec bound stc cmp lods cmp (bad) inc fs xchg (bad) mov (bad) ljmp xor mov sub mov sbb or sub daa mov aad aaa cltd adc sub jnp insb mov rcll pop fiaddl popf mov negl lods (bad) lret (bad) fistp dec add mov mov xor out aam not pop mull ljmp add sti jmp fsubrl or pop jne add hlt xor addb lock cwtl inc loop pop sub pop lret int jecxz scas repnz xchg out idivb xor add jmp cmp test ljmp mov or push out and out cwtl dec dec mov push movb ret jbe pop jmp or add dec xchg enter bsr lret fwait aam xchg loope xor in lock sbb ret popf pop and (bad) dec mov dec cmpsl dec out add or ret hlt cmp or test xor aaa dec pop ljmp cmpb out and ret or add faddl fildll dec fistp imul xor jg leave mov movsb jmp add fsubs adc mov and cmp add fwait sbb xchg fildll (bad) out imul pop xorb aaa and into gs adc push xor ja insl scas pop ret jmp or pop lea pop addl sub xlat xor xor (bad) xchg shll adc int3 dec mov xor sub jb dec in jb shr (bad) (bad) pushf into (bad) pop adc nop icebp test daa xor dec sbb jne adc mov loop adc aaa cmpsb inc dec jmp and push inc xor xchg mov lcall popf mov jg or add push mov out jg outsl xchg xchg les lret popa and imul sub cli jne mov pop and push sub aas iret mov jp dec push in mov mov or mov cmc mov xchg xchg cmp xor ss lods pop sub inc cmp mov push and lahf adc out vmovsd cli cmp fist stos loop ror mov fisubr hlt add imul loop pop leave add stos out sub fistpl add ret sub push sbb jmp and cli adc lods dec gs sub add push add push dec mov or hlt pop lret negl (bad) (bad) icebp int3 and sub sbb inc movsb out cld ret mov adc cwtl mov mov ss cltd or and in mov fimull imul arpl cmp adc adcb lock push repz addr16 jle xor lods and out xchg xchg (bad) xor push pop lods mov decl jecxz (bad) daa mov xorl xchg pop (bad) pop pop pop ficomp loop or jmp sub cmp out ljmp mov add fisubr xor sbb xor mov sbb (bad) cmp rol imull mov fimull sti rorl mov adc sub (bad) aaa push add aaa imul sub cld addr16 lods mov sub test lret cmp loope xor outsb mov jae sub mov add sbb repz ds (bad) mov jnp jmp push out insb add jnp and add dec gs cli sarb and fwait push mov es imul dec cmpsl pop and sub ret mov inc xor imull xchg inc lret mov mov xchg jge int3 fstpt pop outsb ljmp (bad) cld (bad) mov icebp jg cli movsl imul out mov lock lcall jns jmp inc mov clc inc mov mov mov testl (bad) sbb xlat gs movsl fstpl dec cmp dec into lret adc fxch and mov daa out rep dec iret inc jo lret popf int3 pusha pop ret adc test das dec cmp dec iret add sub add popf sbb jg inc pop push push lret inc push rorl and (bad) mov sub popa and lret jge or add sub pop dec add and mov inc and prefetch mov xchg mov mov add inc sub xor cli add mov adc xchg xchg cmpsl jl popa (bad) mov cld repz xchg adc jo xchg xchg push xchg dec std hlt loopne jecxz lret mov mov arpl mov xor test stos loop (bad) xor mov jbe das repz fnstenv mov sub nop stos fldz aas and lcall mov jno lock or repz or out lea out lcall jne lret mov repz pop inc fnstcw cmp (bad) and cmp sub add sbb pop jnp enter pop jo add xor jbe out xchg stos jb and sub mov xchg push jge cwtl jmp cmp jno mov inc ret jmp (bad) (bad) aad mov sbb adc and call hlt leave mov and add push into adc jnp aas jmp pop pop mov sub je mov adc paddq cli cmpsb sub pop lret outsl add add lds push push loopne inc and pop sub pop mov add push ljmp adc pop addr16 les cmp sbb sub aad das inc mov fistl cmp mov and iret in and test out inc out repnz xorl xor dec out fwait jge lahf das jmp push shrl lock sbb lds rcl dec (bad) mov xchg lock dec out push faddl adc fmuls or fisttpll das aam pop shll xor dec push lret push push adc fidivrl lds xchg sti int and adc push bound notl mov xlat ret imul pop ja sub xor jmp jne adc push jle movsl movsb fmuls popa rcll jne scas test adc mov mov cmc repz inc push daa mov inc sub aam xchg and mov push jp imul mov xor sbb shll xchg stos jne mov aaa aaa pushf jns repnz dec add ret arpl icebp pushf sbbl in cmp stos cwtl shlb jno xchg insb enter cwtl jo cmp sub add out lcall jge in popf dec out and mov pop scas cld jns fcom out stc loop mov into mov inc (bad) mov jl push push or adc scas xor ljmp xchg out xor xchg xor popa sub (bad) jae and sub sbb dec mov stos dec lods movsb movsl xor and inc scas sub xchg je in cld data16 fsincos cs xor mov sub xlat ljmp loop mov mov loop push sbb notb mov les sub cmp cmp test popf mov repz sub add pop in xor lret (bad) les cmp xor into ret dec sti cmc cmp ds test hlt pop pusha dec js enter imul notb in and add push lods push movsb stos call jo std adc sbb sub in je pop mov mov sahf push sbb mov mov iret mov sub mov sbb ja pusha sub and js daa xor ror je call adc ret mov rcll jb mov push in sub jge adc (bad) jno or mov and and fwait push mov inc lds and xchg mov push bound adc xor loope mov dec and inc popa loop nop mov add sti mov (bad) mov jbe mov mov mov mov into pop gs fsubl sti fmuls movsb cli fucom sub cmp add fsts mov sub adc sbb scas xchg pop or lods movsl push roll xor cmp xor fiaddl jno outsb (bad) dec add jb cmp push mov stc sub mov or mov dec xor mov scas xchg sar shlb sub inc sbb int3 outsl ret push inc jbe mov icebp mov test test dec (bad) or xchg or mov and adc dec sub ficoml movsb scas lret insl jg out sub (bad) fisttpll out sub movq mov jno jmp xchg pop and mov lahf aam outsl xchg mov ljmp das inc cld cmp mov pop sti cmp in inc and cld xchg xor (bad) mov lea cs aaa or sub mov and scas repz ret pop (bad) cli icebp daa jp mov sbb jno pop shrb xchg sti lea hlt add push cmpsb imul mov push and sbb adc and iret or push jge xor jl push or mov add mov das or jns das ja adc mov dec xor xor xor jl scas dec add pushf popa mov cs push sbb push pop repnz fcomps faddl out cmp in push cmp mov add loope sub fisubl jp dec fistpll cwtl ss sub push fldl adc push pop (bad) pushf daa jge cmp push mov decl pop push mov xor and sub loopne xor and scas fiaddl (bad) sbb mov ss daa xor cld repnz pop dec inc add divl jns pop mov movsl fildll (bad) sbb cmc adc in xchg mov dec (bad) je scas repz dec mov jmp adc dec xchg adc push adc jmp aad cmp stos int3 push cli daa and push sub sub mov ret arpl das or cmpsb fwait enter xchg (bad) lret in roll push xor (bad) (bad) outsl loop test inc lods mov and cmp orb arpl mov pop adc xor jecxz jp (bad) jmp add in or shrb inc in sub add xor lods insl fucomp ror loope clc das lods in sbb xchg popa or aaa cli inc push add or mov insb pusha out aas test add or xchg add sub mov xchg dec cmp add push ret lahf sbb cmp lret cmp enter lret data16 ror add (bad) sub loope xor and push cli xor scas int cs outsb shrb push repnz lcall dec (bad) fldenv pop into (bad) negb sub mov and mov and mov movsl jnp icebp mov pop sub xor fild ret push jo cmp push pop insb xor xchg gs add mov adc jmp push cmpsl inc inc ljmp xchg loopne sub xor or test cmc cmp imul jle and cmp aad or fs scas mov and rclb and mov dec lods mov addb mov mov sub iret xor sub push stos je push mov add sub sti xchg test icebp or faddp adc sbb divl add and and (bad) pushf in in cltd leave cmpsb jp pop jg or push daa test scas mov pop adc out gs jecxz push push (bad) hlt ret xchg fnsave test or xor std les sarl sti or ret clc (bad) cmpsb add dec xchg dec pop pop ror jo test test mov jecxz lret sub xchg in rcrb push pop fistp xor (bad) repnz xor shr imul jmp bound leave inc add mov push mulb adc pop mov out mov cld inc mov ja fsubl std and add ljmp aad mov outsl jp mov or lret (bad) lods inc and adc xchg push sub or dec fistl mov and icebp push movsl (bad) sahf or insb dec shrl pushf iret dec fbstp or mov jno je call inc pop adc ss loop gs push mov stc insb cmc fs into cld divl pop push hlt jno imulb repz cld (bad) mov sbb icebp inc aaa pop or jbe add (bad) cmp jo (bad) mov addr16 enter sbb fistp adc movsl cmpsl js jne push xchg in mov rcrb lret inc jl add mov jmp and shlb not mov int3 test mov rcrb dec ret pop fmul push (bad) xor imul outsb cs mov mov pop mov lret dec dec mov xchg mov mov test pop cmp push test scas or stc pushf mov pop xor jns xor mov out xlat inc repnz lret iret jg jb sbb and test mov out add clc mov (bad) lret gs enter and xor (bad) out loopne xor sbb pop in mov cld lahf add adc sub fldl lret lret jbe dec clc (bad) mov dec or aad inc xor mov cmp (bad) mov sbb push test (bad) pushf add jno xor sbb ret popa arpl aad push and cmp or and pop lahf leave xchg loope out add push hlt xor jns dec (bad) lods mov fs xchg pop sub adc das jl pop push ret adc int3 sub mov repz scas scas jb rep in cmpsl cmpsb jp ret mulb sub lock mov xchg (bad) dec mov insb (bad) (bad) xchg aad cmp xor and (bad) std loop sbb add mov sub mov repz aas and or pop insb int3 mov mov out cmp out and xchg stc int out int cmp adc imul lahf fstpl mov in adc stos loop ror pop xor in lret lret inc push repz (bad) (bad) out mov test imul jle jmp mov bound lret and xor xchg std add mov cmp pop xchg loop xchg aad (bad) jns add stos sub xor cmpsb (bad) lods ret inc orb xor mov xchg adcl cld mov fdiv (bad) lret xchg ret sti pop pop jl in stos mov rcll inc cmpsb mov pushf pop repnz inc xor shll xlat (bad) stos aaa test subb stc dec ljmp adc aas int3 shll das test sar outsl mov and and pop or in xchg jne dec dec add stos inc (bad) jmp repnz xchg mov out xor pop mov dec scas sub (bad) dec mov dec lret loope sub jbe sarb (bad) lods sbb sarb sub cmp push movsb mov xchg out pusha je add xchg (bad) or out mov sar pushf pop xor int3 daa sbb pushl (bad) sub lods jnp and sub push dec lock adc aad inc pushf xchg loopne repnz fnstenv cmpsb stc adc icebp int xor xchg pop mov dec daa loop rcr jns dec xlat out ret jge mov out out fildll push mov xor frstor test jmp daa les mov xor dec cmp push imull or add sub add xor ds loopne pop dec in xor hlt test (bad) mov stos xor out push xor lret daa add sbb push fimul add adc ret and xchg add ret adc xchg ljmp sidtl cli xor out mov sti sbb das pop cmpsb mov divps popf faddl rorl das fstpl aaa (bad) and ds and cmp je scas lods int3 and xlat shll fist jne daa (bad) lret or mov aaa inc xor insb les xor into xchg out clc in notl jle push idivl xor inc xchg cmpsl fcoml and pavgb les add rol inc cld mov jp or add adc das mov out xchg popa or sub outsl out xchg lock popf pop pushf sbb nop xor cwtl sub mov jmp daa inc pop xor int3 xor popf jae or outsb ds sub int3 and stc xchg mov or mov pop jge cs mov ret jbe out pop lods es push gs pop xor incb push xor lcall imul fcompl push adc mov add std mov js movsl movsb sub notb pop outsb inc pop icebp stos pop (bad) sti mov pop dec jle jmp loope jne xlat mov lds add mov push jmp mov cs mov xchg push adc add mov jo mov outsb xchg cmp dec dec ljmp (bad) aaa inc sub add das into ret pop (bad) fldl push mov jg popa mov (bad) fistp adc test push loop mov sub mov orb in and jle imul mov or cmc lret fist cli and or xor loopne,pt fcmovbe jne out das jno sub addr16 sub push das sub mov fisttp sub nop cmpsl xor in popf inc iret dec mov and enter push sub pop inc jle mov mov push sub push add dec pop mov mov add ljmp in push dec mov pop jb (bad) or addr16 pop adc sub mov xchg xor lret std and jecxz add xor or test repnz repnz pop add mov push pop and ds insb and jmp push xchg pop addr16 xchg test mov mov push mov ret jmp jg in lcall dec leave pop repz repnz sbb sarl xor rorl sbb add mov pushf mov xchg pop sub dec aaa test out xor sysret repz imul or call ret es int stc neg push jns dec adc into stc or testb arpl or and adc stos sub add (bad) or mov fs jne imul stos cmp div sahf inc dec idivb cltd pop call clc inc mov aad imul pop (bad) lods pop xor mov call xor add lret in sbb add scas and push or enter pop mov dec ja xchg mov fcmovne push stos lret shrl loop xchg push pushf insl cltd jns fwait and adc xchg push dec add std xor jl sub imul out dec xchg push pop icebp sub xlat mov mov jmp outsl or stos clc sub out sbb and push xlat sti mov (bad) pop lea sub dec div push rcrl xor mov loope mov test or mov and and push lret mov out inc dec lods jbe,pt rcl and cltd dec and mov mov das xor adc xor imul outsl iret pop popf xchg lret jb divl outsl mov popf or scas test cmp repz lret adc repnz jmp sub mov and xchg (bad) and mov mov jbe sbb ljmp test jmp add xlat out cmpb jb sbb sbb mov sbb mov mov pop pop subb les sbb mov dec mov add scas mov out dec daa jae push ret cli popf jae pusha inc in sub fwait iret inc popf das jnp cltd das mov or xacquire loop pop pop leave pop rclb (bad) enter loopne ret sub ja ds (bad) imul loopne scas xlat daa add jge ficomp jl xchg les mov lods cs je mov repnz push daa cld hlt pop sub adc adc les daa sub pop shll scas mov xchg push aam fs or fdivrs daa iret jg mov and cmp aaa outsb mov ljmp dec test add xchg mov dec and sub and mov sub mov pop xor mov add cli roll sub dec inc leave test xchg insb sbb and adc loop mov (bad) dec test pushf cli cwtl lcall jmp mov rorb inc xchg jb sbb cmpsb sbb movsb aas or sub jmp add icebp pop in add dec xchg mov cmpsb sub push push jb imul xor add iret mov lock cmp out mov pop jmp jg fst dec cmpsl push repnz or jae nop add push incl sub aas xchg lods jp mov test dec or dec mov imul ja mov (bad) leave mov inc sub ret cmpsl aam mov and imul push scas arpl sbb push adc inc sub cmpsb sbb dec std jp add out sub cmp or pop movsl lret mov cmp in push idiv xor add mov iret sti into cmc dec fwait ret (bad) pop in scas fistp dec xor mov mov sub sub loop in das hlt push inc and cld mov sub xor lret lods pop mov in sub scas mov (bad) cmp rcr inc mov mov mov std push pop push sub mov sub sbb sti das (bad) mov jne mov mov rol neg cs push mov dec sub jecxz lret pop inc movsl clc inc fs shrl add mov jbe (bad) jae push xchg pop bound mov inc pop add xor bound cmp xor cwtl (bad) xor add dec lods aad adc jno inc xorb inc or jne mull int pop ljmp fs sbb (bad) sub xor pop inc push or ret xor std das aam jno add mov lods xor lock sub cwtl jp pop ret mov jbe lret clc jle and shlb negl adc popf sbb aaa jb inc dec sbb fcoml jbe fsubs je gs test mov outsb int3 lcall xor dec xchg jnp cmp and out ja daa ljmp das rorl aas sub sub mov mov sub mov adc xorl test cmpsl std push outsb xchg shrl sarb adc leave push push and sub pop lcall in sub aad add mov movsl bound daa je jns cs sub lods rcll lret cld sti pop jne xchg ret loop test (bad) cmpsb add sub mov hlt mov adc jnp mov pop jb out adc jo icebp je sub outsb enter push sbb cmc push not dec and gs mov and aad call mov scas test cli out popf or es push out jmp sbb push cmp popf (bad) lock xor pop push inc (bad) ljmp les pop iret (bad) (bad) cmp repz out ret or in mov push add xchg out pop (bad) out sub jp pop mov jmp fidiv pusha jle and dec push repnz js jnp sbb sub and mov push ja into or pop inc (bad) cli jecxz sahf adc gs mov (bad) mov mov jle inc (bad) mov ja or push sub add cli or push fsubr adc popf notl jno ds loopne fsubp lret xor pop in mov test add fisubr sub inc shr leave push push and jmp push xor xor adc add mov push rcrl call adc enter popf sub stc mov jo push jbe fs lds fisub leave int3 cs rol adc out fwait xchg and pop add mov mov jecxz pop push push enter shlb adc mov insb push dec sti aaa mov lret test repnz and xchg stos adc das (bad) jg shll imul hlt jo pop pop push and (bad) sub and lea icebp repnz cmc or sarb pop cmp fstpt out stos cmp sub push mov add jle jmp adc xchg mov jns mulb hlt inc jmp addr16 pop andl push xchg iret xchg je push dec popf push and (bad) dec push loop xchg and (bad) pop stos inc sub fucom sbb mov adc lret and (bad) jp sub push mov les and jmp mov xor add cmp dec mov xchg mov or pop dec lcall outsb mov mov test out stos fisubr add mov jnp and lock dec out call xacquire and jle cmpsb xchg lea outsl test negb mov mov dec ljmp sbb push inc pop mov test negb mov jae cmpsl push sub pushf cmp pop stc mov daa mov icebp cmp gs push xor in sub and pushf stos movsb test push mov adc adc test lods scas hlt (bad) cli lods add out jb out icebp cmp pop mov js mov jne inc sub cmpsb or fisttpl sub cmp mov pop repz divl dec std outsl (bad) xor or gs jnp mov gs push adc out lret sbb lcall adc out cmp dec iret loop pop xchg pop push sub dec and lock mov xchg enter add lcall push and push pop dec sbb stos je pushf mov les scas xor scas lods jbe insl int pusha in fs out xchg mov mov sub mov imul clc push sub testl mov add test pop mov and rorb add out pop jmp idiv test xlat mov imul jbe inc mov lret cltd mov loop daa loop aaa xlat insb fwait dec shll xchg sbb out pop icebp fbld je mov xchg pop in imul or loop orl lcall mov int3 mov or pusha testb xlat test jl cmp or loope inc xchg push popa add mov mov add pop pop test xchg int3 shll add jo xchg test add xchg stos mov test sub xor sbb add out sub mov gs int pop loopne xchg sbb xchg jno dec fstpl mov dec (bad) pop out cltd popa cli jne inc push stc (bad) or sub cmp (bad) or pop into shrb cmpsb xchg xor test dec dec daa jmp loopne sub pushf pop idivl sub xchg xor mov cmp test pop xor mov ja xlat mov or aam lret push addl add movsl mov cmp test movsl (bad) iret add in mov pop loope sub popa pop xor test fucomip sub or syscall dec xchg dec sub push ja das or inc xlat xchg sahf lahf jmp lods sbb mov and mov sarb xchg cmp pusha sbb dec or or xor lret xchg pop test mov inc jae mov ljmp test dec mov xchg addr16 push sbb add cmp ret ja mulb xchg inc fwait aas js packuswb fbld std cmp sub (bad) adc lahf test or pop pop out pop mov pop test or mov faddl xlat (bad) pushf xchg pop sub pusha into add mov mov jnp mov idivl test into and cltd test inc imul cs mov popf push mov negl arpl cmc icebp das fsts xchg popa cltd out push jo jg ret mov stc or push test inc mov imul daa jg push xchg loope leave sub cmp add ror (bad) dec xor ret mov repnz dec aam scas sahf adc mov ljmp jne xor aam gs mov jnp imul ds xor or mov fs lea and sub lahf rcrb (bad) or sbb lret dec push mov in daa rcrl fs push lahf js xchg inc out data16 xchg mov loopne dec (bad) xchg or push pop inc xchg dec js mov mov scas fs push xlat mov sahf cmp add or inc movsb test cmp mov cmpsb push sub sub dec mov mov cmp or jne mov inc imul sahf outsb push neg dec jecxz add test (bad) add repnz cmp inc add stc les adc xor inc mov imul and sub push movsl adc mov xor mov das gs out cli enter imul mov xchg call dec sbb lock xchg jo push mov sbb into lret mul cmpsb sub and adc mov jg dec xchg dec aad nop inc inc inc mov aaa js fidivl cmc in test gs inc pop or sarb and adc xchg push mov mov and andb mov hlt in test push jge mov in loope and jno or add fs xchg lret cltd pop icebp sub mov fs mov mov cmc sub sbb cwtl push mov add (bad) jne (bad) and cmc into cmc mov sbb push adc lods scas mov add (bad) stc out sub dec test je sbb inc aas into pop mov dec mov pop scas pop jne sbb push lock sbb mov lea dec out in (bad) in notl mov imulb lret (bad) jbe xor movzbl enter xchg (bad) xlat mov nop mov sub push fistpl sub adc or push xor or lret jno into ds out push and dec jmp das sahf scas push xor sub (bad) imull (bad) jno push fs jmp mov out popf jno imul push jo mov and lods mov adc je push pop out adc fstpl mov jecxz dec xor lret xchg jge scas or lret pop mov mov xchg inc jle ret (bad) mov add jl or and inc loopne cmp xchg (bad) test and pop jmp das fs int xor outsl sub add subl imul xor mov inc scas clc ljmp xor stos test div adc adc xor mov test mov pop into sbb dec lock hlt pop pop not cmp loope push cmp icebp jae jecxz xchg push int xchg cmpsl lea jo push or push mov adc cmp dec jb and (bad) lods sbbl shll movsb fst xor pop dec sti pop cmp sub sti pop out xor enter lret inc stc sub dec push cltd sahf mov mov in cmp adc mov push dec cmpsb adc in mov divl and loop push sbb lahf jnp push xor mov repnz or je dec jne mov je jecxz repnz pop sbb out pop push xor mov xchg insb and lock mov jl pop push sbb xlat insb or sub xor push adc mov into aad dec mov mov lret cli sub gs mov js dec call fsubs (bad) aam out iret les inc mov test sub aas sub mov mov cmpps inc (bad) (bad) je mov jle push outsl push sub xchg fisubr jp scas pop and sbb fcoms or jle lahf jecxz adc repnz iret push push mov push lahf jae mov pop addr16 mov sti popa add sub cli repnz fstpl inc cmp jae sub push mov (bad) sub scas cwtl (bad) jmp (bad) cs push sub out out lret sbb push icebp adc mov call movsl out lods in stos pop repz dec repz movsb and shll pop add sub cli or jmp jle out stc inc xchg call dec (bad) pop sar cmp mov jmp and pushf nop xor cmp add sub and lcall sub mov scas into jbe sti int jno imul dec add pop xor clc movsb shr aaa jb (bad) in daa ret adc jbe adc push jecxz daa mov mov ds mov call push or lods arpl or jmp pop iret movb iret out test call adc insb call aas test jmp inc cmp sub add xor sub scas mov xchg call leave (bad) or jne movsl nop sarl mull (bad) push pushf (bad) mov stos loope ss jo ret cld out push (bad) jmp push addr16 xchg mov mov pop or cli lret popa adc or dec push lock shrl adc out sahf add add test scas pop rcll repnz add outsb xor cltd fisub adc or test xor mov out mov negb pop mov add inc cmp imul ret or sub and fadd or sbb xor fisttpll sbb and adc sbb sub sub sub cs ljmp pop sbb pop das addl inc mov stos adc jmp movl loopne out lahf jno imul div mov inc out jnp daa notl sub sub scas mov outsb in popf mov (bad) jg jecxz dec xor test dec inc stos xor jmp inc call inc mov call lock add push mov jle lahf mov xor aam xlat adc pop adc xchg notl out popf or push aaa cli mov xor dec adc sarb repnz mov mov mov add xor test inc adc fdivp dec ljmp mov inc pushf jne and push mov or pop in mov mov nop xchg and pop cmp jmp push (bad) ret jge push jmp sahf pushf add outsl mov cltd adc sub leave repnz mov push mov and sub sub pusha and xor dec call repnz shl cs xor pop xchg or and out lock lahf push mov dec sub (bad) xchg dec lods das xor loopne loop and pop les mov sbb ficomp jmp fistpll fstpl lds loope pop push mov jae,pn mov test mov stc push iret sub ds test mov lods in mov jo xorl int sub or call sbb adc fidiv cwtl sub mov testl mov pop ds lock sub cmp or jge push and stos jecxz dec mov cmpsl push push (bad) mov rcrb xchg hlt xchg repnz xchg cld push push jo loope push push je pop mov push mov call or leave jmp bound fsub ljmp dec mov scas addl and sub mov scas pop push mov test push test cs dec xor jno imul lret adc ljmp (bad) push sub dec fisttp lods jae imul or push or mov cmc int3 cltd daa xor aam into dec ljmp les test push ljmp ds pushf cmp mov sbb loop xchg scas or jmp lret lret ret and test mov data16 repz cmp xlat ljmp pop cld xchg fisubr cmp adc daa sub jne xor jle fwait scas adc or std dec xor (bad) dec lret ljmp or add popa and lahf cmp es push and cli cwtl cwtl mov mov sub ja pop (bad) jmp push pushf dec lds cli (bad) dec adc or rcrl jg testb push mov fisub lret sbb dec dec sti mov test outsb lret xor cmp imull shrl dec push dec leave sub jl rorb add mov jmp sub cmp mov inc imull decl and add pop xlat cwtl (bad) push in push mov push cmp (bad) icebp test imul jns fistpll mov dec push mov xlat in adc subl imul daa push dec mov sti test in xchg and ss pop imul bound mov insb inc cli out nop lea or or xchg dec sbb cmc inc push inc and movsb xchg aad sti imul lret jge nop inc mov and xchg stos sub dec ret outsl fidivr bound or lahf das push dec and (bad) mov push sub aam lret (bad) lret data16 xchg lret divb in lret imul or pop push or ret aam jp mov imul pop and lock incb call js pop loope sub cli enter pop jmp pop (bad) pop aas jno add sub les push and mov add adc in inc jo mov insb adc add and pop in mov (bad) mov cmp mov adc sub bound fisubl sub dec sarb pop sub adc xor clc test addr16 add add scas mov lret ljmp pop mov aas xchg push ret pop hlt fs fs jle sub idiv cmp and sub (bad) adc pushl mov repz sarl dec test sub test decb mov shlb and test dec loop iret push xchg xchg or cld xlat leave aad or sbb iret mov cmp pop mov jne call insb xchg fdivl cmc imul leave icebp push int3 cmp rcrl or ss dec or and mov and out movsl jno or inc cmpsl (bad) das inc cli daa into ficompl push mov movsb push xor push das adc and insb or mov rorl mov xchg out out cli cmp mov cld aad icebp and or rorl test test and mov dec cld fcomps movb jmp icebp iret xchg inc loop out adc mov add mov inc push jmp loopne ret repz adc xchg pushl in cmp idiv xor aaa inc and mov push pop xchg push aas cld (bad) pop push lret adc or (bad) mov popf int adc xor sti out movsl cld xlat insb and inc andb mov jb mov adc ret jb loop adc sahf mov lcall adc ret jne xchg shll int3 fstl cmp aam (bad) or jo dec mull mov jle dec sub mov shll test push stos in xor dec and repz adc sar push std scas (bad) jns mov jns pop iret adc sub dec ljmp stos or div xor clc scas dec out call mov lret sub mov xor xor sarb in pushf xchg fsubrs or stos sub lret outsl push xchg and dec scas test sub lds out loope jg push (bad) xor add pushf and push cmp mov jo dec pop stos xor (bad) fnstsw dec cltd and scas sub dec shll call or lock xchg push dec push jne and adc (bad) fs push mov sub push subl jg aam pusha and ljmp push lret jmp (bad) bound rcrl inc notl aaa popa and in pop xchg mov scas gs mov xchg sar adc dec push in int repnz mov dec into push mov xlat outsb xor scas add out movsb jmp push das fisubr rcrb or clc or adc out or push push arpl data16 pop fucomi lret jmp sub or imul jge jecxz sbb je aam mov cmp jns jbe imul repz xor les push mov fbld stc xor xchg mov loope mov aas mov xchg (bad) mov pop push jmp cmp push rorb out mov std xchg pop mov in adc mov sub sub shrb loope jnp mov xor out (bad) xlat adc add xlat push or inc loope jb pop pop lock mov lahf adc aaa jmp mov jg mov jbe jp (bad) cmpsb pop pop loopne push xchg mov sbb mov pop data16 sub mov fs clc addr16 jmp push and rolb sarb cmp mov lret xlat (bad) dec mov cmp insb lahf lahf lods mov or dec adc xchg inc push dec les mov add movsl sbb and mov sbb nop lret daa jmp fcomps pop je jo fidivr xchg xlat xor ret xor jmp repz ja xlat or sahf xchg fs loop fnstcw clc xlat movsb adc stc push fs mov dec and je mov mov out cmp or ror pop mov stos orb sub aas ret (bad) jns dec add (bad) jnp jno add cli xor loopne xor (bad) cmp lods mov lds and sbb pop (bad) mov push xor rolb mov or and lcall cmpsl jno (bad) adc mov mov dec lea xchg aad data16 jne mov mov out das jmp repnz xor mov fldcw xor ficomp xlat or adc sbb mov lods sahf fmull into mov pop cmp pop sub subl es push pop xor mov movsb comiss ljmp lds (bad) ljmp das into add xchg aas movsl lcall das cmp xor dec or mov in jb cmp mov mov push mov mov popf xchg je cwtl and (bad) cmc sub add sub cli pop sub mov scas subb inc dec popa push mov movsl jmp lret sbb xor cld mov pop mov ficomp mov dec jno cmp pop adc mov xor sbb sub mov sbb and sub pop cmp int inc in sub xor sub cs imull loop aam mov push dec imul (bad) cmp pop popa fsubl inc push inc xchg bound xor decb or mov into mov mov pop add ljmp mov pop icebp xchg xchg stos mov and pop test (bad) push lods mov roll or adc popf adc cmp adc and aad and sub rorb jmp fidivrl js pop add (bad) ss (bad) mov cltd inc dec fldl ds out outsl fistl sub or mov outsl fwait push cld loop push inc movsl pop jl in cli mov pop mov repz or xor scas fsubs imul jmp jbe loope outsl mov dec xchg repnz (bad) cmpsl aam das sbb or bound mov xor nop jmp (bad) cmc xor pop lods and int3 mov popf jle adc adc fisub sub jmp cmp dec sub pop sub leave mov or mov xchg jae push into ljmp xlat cmp lret std inc add fs popf xchg or add add (bad) daa sub add jp or movzwl sahf cmpsl loope pop xor lea and (bad) out sub stos lret fwait daa mov leave outsl (bad) push sbb sub imulb pop add fadds dec divb and fdivrs cmp sbb aad out jo mov idivb add adc movsl fistl push jmp mov xchg xchg jl jb xchg test cltd xchg mov pop adc mov sub cmp xlat jle (bad) lret test mov add mov sbb or test shr loop dec xchg mov xchg sbb in or sub out xor xchg scas add das out jns inc sbb lahf pusha mov cmp mov loop inc popa test loope mov idivl lret out (bad) jbe mov xor cltd xlat jns (bad) out and ret or idivl cmpsl push pop loop and or mov cli popf popa sub out mov pop repnz adc mov mov mov dec lea jp or adcl das mov xchg lock or das daa decl xchg jnp adc xor lret dec pushl aam in bound xor cli cmpsl out or add outsb add jbe push out outsl gs movsl (bad) gs mov daa or (bad) dec jg or or test shlb cmpsb test pop mov ljmp fistpll adc lret and add or xor xchg std adc push or fs test bound push jmp mov mov pop xlat movb ljmp xchg rorb dec mov adc push aad adc xor clc lahf ficomp fldt or push jmp insl les lret mov inc not fsubs add in add mov stos xchg pop cmp ljmp ret cmp std popa shlb rcll sbb or add mov iret sub mov fldenv sar pop idivb ret inc (bad) int sbb and jg fucomp sub mov push in mov add and xlat xor fsubr mov mov cmp jb cli lea (bad) outsl mov ret mov push dec push ret dec jle or add sbb dec scas test sti xor push adc mov cmp lret lods jle loope outsb cltd addr16 fs test movsb mov iret inc (bad) sub inc or or negl es mov loope mov andb xor jnp nop and pop mov adc cmp in xchg push inc mull js mov out cltd jmp fisubrl mul or or in shll rcll sbb sarb mov iret (bad) loopne out test sub sbb insb lods jb repz and out dec sub mov lahf sti inc cmpsl out adc fistpll leave dec push icebp lods iret loop add dec inc pop ljmp push sbb dec mov cmc xchg jb das aaa cmp pop adc mov movsl dec lock inc pop in sbb mov or ret pop lds jmp push fild repnz cmpsl rcrb dec iret cli popf repz shll jmp or stos (bad) daa loope xchg mov popa mov dec cltd and popf stc movsb lret fs xchg fstl lock sub data16 pusha push fildll push daa and pop xchg ret mov sub pcmpgtb and inc cltd inc sub ret cs mov pop xchg daa jns xchg (bad) cli and icebp pusha daa loopne sbb add xor cli jns das mov adc fldpi bound fcompl mul mov and (bad) push xchg scas mov mov xchg push xchg popa (bad) stc je divb push cld and cld movsl clc sbb outsb lods lods xchg mov cmc in adc sti lret adc popa dec mov xor sti push dec sti enter mov lods mov xor aam in mov dec pop dec mov jecxz shrb aam sub andl ret fnsave dec rcrl or mov pop add and clc pushf mov add xlat iret and sbb mov and test cwtl aas daa or jg aad xor sub scas pushw jle cmp testl in add (bad) cmpsb mov or mov mov cmp repnz adc jb sbb or add pop fs mov adc add (bad) clc rol xlat cmp flds and add or pop lcall ret mov push and cwtl pmaxsw xor outsb xchg mov jo push sub inc cmp xchg jmp inc cmp (bad) xchg lcall add int icebp repz idivb jecxz dec sub xchg into jmp jp ljmp in outsb push addr16 into out dec cli xlat ss (bad) repnz repz mov pushf ja cmpsb imul jl cmp mov jmp sti cmpsl fwait inc cltd sub mov sarl aas je mov sub pop testb leave xchg mov out mov and push inc cs xchg imul dec repnz push inc call ja inc popf sti ret mov pop pusha mov xor imul mov stc ffree jecxz push (bad) sub das pop negl mov mov or adc mov pop (bad) loop ret (bad) jge or pop notb jo pushf fld imul stc mov mov aad mov leave fstpl inc jmp notl mov dec ss sbb cs ja mov pop std int3 mov mov test gs out lods (bad) mov sub (bad) test daa test and test out xor pop jmp in and je test dec loop lcall pusha xchg mov mov cmpsl add push and mov xlat faddp xor mov cmp out inc xchg xchg jmp cmp adc test (bad) out je daa fmuls push inc subl xchg xchg lahf aam push xlat rep add mull xchg fidivr xor cmp sbb sub pop sbb out xor ffreep mov cli gs adc push or pusha repz xor xor imul out aas lock dec mov mov fstpl dec push rcll sbb imul or (bad) call (bad) adc sub hlt (bad) jmp pushl cmp push xchg pop mov cli mov stc or pop (bad) push sbb adc mov and cmp and pop or rcll dec jmp sub (bad) icebp sub ret insl sbb mov test dec movsl xor cld pop pop jne ljmp xchg (bad) jl mov shll push insb mov ljmp jb icebp push popl clc dec loope jno gs add cmp (bad) in dec shrb push xchg adc adc mov fadd sti ret and adc pusha or or dec shll loope adc mov or sub lret or inc imul popa push xor cmp dec add out pop clc cltd bound repz mov rep les das xor jge mov jl fidivrl (bad) cmp add das and jne pusha sub scas push data16 bound push fwait inc lret clc (bad) push xor lods adcb sub mov data16 rcr stc bound adc jo out jne,pt mov ror and leave frstor mov mov xor shrb jmp push inc mov data16 test rcll mov insl daa push or enter je jne mov cmp jle sbbl mov pop mov xor scas mov push loop add xchg in sub xchg or lds xor and or repnz and outsb mov xchg out movsl sahf pushl and cmp lret stc enter cs ret lds jg into push inc imul push js mov dec imul mov or test fisubrl aas add xor out test pop shll or imul xchg (bad) mov jb (bad) jle les cli xor or adc out xchg cld into pop push dec rcrl dec stos les inc sahf mov jno jbe pop fcoml adc cmp sub sub fs mov imull adc push lret inc push adc mov dec push iret sub xchg mov cmp mov cli fsubs pushf hlt jno ds dec out xor fildll xchg mov or push cli outsb fmuls rorb and or mov jne cmpsl or push cmpsl mov lock into mov push xchg rcr and pop or sbb ficom adc mov and lods mov jg popf mov add into rorb inc xchg push mov das pusha mov jg xchg icebp into dec push or xor leave (bad) ja pop mov repnz or mov cmp xchg loope xor push inc mov sub js aam leave call mov dec xchg call gs and hlt ffreep loope sub mov xchg loopne (bad) lahf lds leave xor push add test mov mov (bad) pop lock push or (bad) fdivrl xor cli or loope push jbe movsl pop rcrl popa ret mov stos in stc leave xor adc enter xchg mov xchg adc pop or stos mov fist push std xchg push mov das mov pop xchg lret int3 cli iret xchg sarl xchg push out daa lret xchg push and xor xchg ret mov adc push int3 clc pop fisttpl pop pushf pop adc repnz or xchg stos or out out dec mov ret push pusha mov pop rorl arpl repnz cltd mov sub mov outsb hlt enter repnz mov les add xchg cs inc imul mov xor mov lret pop sub popa ret mov scas imul fs int3 pop sub xchg into add lret xor loope sbb ljmp xor lock dec sbb add adc ss sbb (bad) xor sub aad xor sub pop jne js shll dec dec repz les outsl test idiv xchg stos xchg out push int mov gs inc sub incb jns add out xor sub in cli ficoml xchg dec dec lret jno in das in cs add (bad) or add and jmp cli ss enter push out repz mov mov into mov jae stos dec ljmp ret fchs or push out and or pop jge scas mov insb cltd and xchg mov dec push mov cld jnp movsl jbe sbb mov lret lock mov jge (bad) and mov xor xchg add fdivrp enter jno dec std test ljmp gs jge add test lret or hlt jge lret scas sbb insb adc dec pop (bad) mov sub mov stos popf jne rcrl pop (bad) out add cmc xor gs sbb jns pop movsl cmpsb sbb and sarb stos pop lea (bad) repz stos repnz lea xor out dec in or pop mov mov cmp movsb push daa ja pop das ret imul push mov mov mov (bad) lock lods cmpl imul xchg lahf imull fisubr pop bound jge lods ljmp stc mov add dec xor mov out lods dec int and xor dec cmpsl pusha or mov cmp pop mulb (bad) cs sahf ljmp push push mov pop repz adc (bad) adc stos fadd rcrl inc arpl imul pushf inc mov stos int3 adc inc loope test mov lret ljmp push jle add lds sub cwtl and (bad) repnz mov xor bnd ja add in dec ljmp xor sub repnz int3 adc mov xchg ret add jmp test loop xchg push mov insl insl pop das or shr jp pop sbb leave (bad) rol sub mov lcall push cmp dec pushf popf lahf cmp jnp adc outsb push and std dec test (bad) mov adc cli iret stos xor or aad out xchg (bad) and popf dec pop push pop idivl dec stos int les popa jp (bad) jle out cs outsb leave data16 mov ficomp dec xchg xor loop dec cld jl xchg and into std ret movsl sbb mov or jmp test adc cld dec (bad) (bad) push test iret jl (bad) repnz dec and daa aad sbb std push mov cld xchg enter mov int3 add sbb xchg rolb xchg adc mov into nop movsb les stos mov xchg mov cmc or dec lret mov clc dec movsb stos inc dec stc out cmpsb push sub cli jb negb popa aas xor add cld shll clc dec repnz or (bad) fxch lcall sub addr16 loop jne jmp je sbb imul fwait mov jnp jne div mov (bad) loope push dec pop out les popa mov inc scas sub call mov xchg add mov iret insl test mov out push add adc scas mov call out mov dec loop mov loope lods cmpsl (bad) ljmp pop push mov dec cltd dec shr mov xor or stos mov push repnz and add cmp ror push pop jmp decl and mov cmc idivb xlat mov pop xor test daa (bad) inc sahf sub bound jmp movsb out fsubs xlat movsb shlb les mov and das scas jne out fdivr ret sti jle sub or push sbb jle pop add daa or into jg mov xchg into dec push mov je in mov inc jns dec fldenv lret sub xchg rclb movsb std hlt xchg sti test stos sub pop jb pop loopne enter sbb ret test xor sub mov cs dec cs pop cltd pop and xor das or jno int3 enter pop clc push lods lret bnd fmuls in push and dec and rorb xor iret adc dec push mulb (bad) aad fisub inc out popf xor or or xchg pop popa sub jnp add pushl in push sarb sub mov push jns dec dec scas and add or mov data16 mov cmpsb push mov add je cmp mov jmp leave scas std add xor xchg ss cmp sub xor movsl inc outsb insl pop das aam sti lret or mov add add mov decb push lret jne sarl lahf ret sub je push es jne stc dec pop pop pop lea movsb out ret insb mov sarl adc jmp fsubrl insb and and dec rcl pop (bad) mov mov pop or adc inc xchg pop push mov push loopne cli mov out popf mov jne and xor loopne gs cld push dec adc jmp rcrl push imul xchg (bad) popf ljmp sbb fcomps mov mov decl lahf jl push dec fcompl ds sbb (bad) and aam ja (bad) (bad) repz pushl lea or int3 leave sbbl cwtl call jle ret icebp or loop test leave adc cmc mov xlat xchg loope mov inc sahf xchg divb syscall jecxz (bad) popa xchg out sub ljmp lret jp mov mov fs jmp (bad) shrl pop xlat test sarb cltd and adc das mov pop pusha pop roll ds (bad) and mov dec sbb inc ret jle mov das (bad) hlt test repnz notl push out call xchg mov sub idivb lret and roll push or pop push cmp xchg negl pop inc roll loop,pt rclb and roll scas fldenv out pop out cmp jae bound fiaddl outsb les and xor ffreep add out lret sarl xchg dec lods mov pop out xor sub cltd sub jmp dec arpl xor mov sub push sub sub (bad) push pop lds lods ds add ja (bad) mov xlat and aas test lret inc pop jecxz lret out ret decl dec sub das xlat push jmp lods mov dec sbb (bad) out je mov call mov jmp and ret sub add ds inc imul cmp or cmp out sub (bad) xchg test out and inc (bad) ret mov shr dec popf inc push push and stc or pushf fwait mov cwtl sub mov or xchg or add cltd inc outsl lods dec jmp sti jmp mov fmul dec out xchg pop in inc inc sub mov sbbb sti iret nop adc add pop pop lods pop add or xor mov aas leave divl xchg pop sti cltd andl pop (bad) cmp test sub fadd gs and rorb dec sub scas dec push mov aam fmuls fbld pushf jbe stos mov (bad) aaa test push aas (bad) fistpll push mov pop or (bad) jle (bad) mov dec sti test and (bad) pop movsb stos sub sti lods outsb lcall adc mov sbb inc dec xor mov pop pop jmp (bad) mov out cmpsb xchg xchg mov cmp sub mov cltd out push sbb cld fnsave cmp push jle (bad) repz add icebp cmp lret dec sbb outsb into dec lret adcb (bad) xor xchg cmp mov repz (bad) mov cwtl push xchg dec pop das xor xlat mov in sti pop xchg and xor lea cmp sbb add notb sbb sub dec test xchg out cwtl pushl push xchg add or scas sub ret ljmp xchg dec popa insl (bad) mov sub repnz xlat cwtl mov pop call or or sbb (bad) jl and push inc mov (bad) icebp lret and rclb lret ja xor mov xchg jnp sub pop dec mov notl jecxz into int out sub pushf mov clc dec pop lret (bad) testl push jns jp hlt or add loope mov xchg stos xor xchg aas and and fsts adc jecxz or push dec fldcw xchg sub or daa mov (bad) (bad) dec jmp adc and (bad) vsqrtss imul notl lcall mov lods fcoml shrl (bad) icebp and cltd lds mov or scas ja test ss and mov rcrl popf xchg clc ror add mov mov iret icebp mov pop ret scas sub mov mov xor in pop xchg mov and pop out dec lea call outsb sti xor ljmp and mov add in push mov aas mov xlat hlt out popf in lods std sbb ds data16 lea mov or mov dec push mov movsb jne loope call call or mov dec cmpsl mov clc jmp inc jle pop (bad) es mov xchg mov or lds sti jmp sbb adc lret and or mov sub jne inc sub jne outsb adc mov iret or or xor call aad loop push push nop dec out lock inc jne mov out dec popf hlt lods push jle inc ret (bad) out jns xor xchg flds jge push (bad) pop mov dec ficomp push adc and (bad) adc lret imul mov cmp imul les sub (bad) cmc stos mov jp jecxz out inc aaa and lcall mov and mov repnz pop sbb or cmpsb adc in int scas jg xor sub xor mov sti jle iret sar repnz xchg ret pop or pop jns and leave sub mov ja add mov ret mov adc dec aad inc adc scas sub add add bnd and xchg and adc (bad) (bad) insl in xchg jecxz das rcrb xor fs mov into xchg pop sti sub or lods jecxz sub cmpsb roll cmpsb mov cli imul scas pop jg std mov stc fwait inc xor ja mov push push lcall scas ret jge dec dec ret mov pop mov xchg xor stos out imul scas in enter add outsl fs mov mov popa push into add icebp push and enter adc push cmc sub xchg out mov std repz and ret xchg ds mov dec std xor popf mov imul fwait pop dec inc mov adc sub mov cmc (bad) mov and mulb into stc ret jl out aas dec enter or or test push test mov popf mov cmp inc mov pop push jmp xlat ljmp movsl (bad) dec jp jne in movsl cld mov adc lods aas dec in stos insb fild mov xor or inc ja and or (bad) adc fildl mov gs add and add (bad) not fidivr scas bound adc enter ffreep add mov fmuls aam scas bound movsl pop (bad) (bad) or or addr16 das ss push and or mov in test fnstcw ret popa inc adc cmp inc add push jno das hlt enter call (bad) (bad) movsl mov mov pop int (bad) hlt jecxz mov (bad) mov mov push ja ds les mov sbb jmp cmp push pushf mov pop pop jns ret test jecxz repz inc out mov call les cmpsb ficoml pop std (bad) cmp mov xor pop mov jle in das stc fstl rolb fdivs lock scas cmpl mov repz fnstenv cli sub (bad) into and push lahf push fsubrp fsincos das ljmp jne xor and imul out idivl ljmp leave (bad) jo mov fnstcw pop in xchg mov rcr cmpsl cld mov sub in or cmpsb movsl adc push xor (bad) aad popf (bad) lods popf sar out leave loop xchg mov ja (bad) (bad) mov sub and push jmp lock enter enter das loope sub or out sub xor xor xchg fisub out inc int3 sub (bad) into adcb xchg mov and scas mov pop (bad) loopne negb sub jg stos sub jg clc add inc cmpsl je cmpsl fist and loop xlat in das lret (bad) mull add cmpsl jle push sub lea mov sbb cltd fdivl jnp jp dec (bad) aaa sbb lret lahf dec loopne (bad) call pop ljmp fbld (bad) call mov sub popf add out mov test sarb mov jge scas bound test add xor xchg xchg (bad) mov daa or mov and in fnstcw mov pop (bad) arpl aam mov mov jnp and icebp flds outsl jae inc fisttp mov repz adc aam imul pop icebp mov cmp or mov mov fabs scas mov mov inc dec dec mov cmp jp cmpsl movsb mov cmpsl pop fsubl ret or inc cmpsl jo xchg das imul mov popf xor aas aas movsl out jns scas dec nop mov dec inc or pop pop or adc daa (bad) icebp test fdivrs mov lcall inc lods or adc lahf jo popf dec mov or dec xlat cmpsb cld daa pop push es mov push xor loopne jecxz rcrl jne cmp loopne cmpsb lods enter adc jbe gs pusha push add mov es mov (bad) loopne add pop pop pop pop popf jp sbb iret fsubs hlt xchg leave pop int3 cli adc (bad) pushf ljmp stos and mov imul sub (bad) hlt push mov cmc push push das cmp stos pop push stos inc mov jne cmp or add mov in lods jnp inc add sbb jae sub push hlt lret xor and mov sub mov fcomp movsb andb movzbl or pop fistp mov fmuls dec ret stc xchg loop adc push loop pop mov out repz cmp and adc pop inc add jg xabort mov mov push mov out sarl fcoml xchg dec jnp sahf popa les jecxz add into mov bound (bad) mov cmc into scas lahf fdivs pop push cmpsl popf sub insb mov cli adc popa sti out jnp int3 xor pop popf je cwtl pop jbe mov fs dec sar insb mull sub outsl notb into ja popa mov jle inc jmp pop and lret xchg fwait iret mov jae and xor sbb cmp dec mov std dec xor cltd (bad) adc mov scas sarb xchg pop xchg add pushf mov out lcall jg fadds pop mov and pop cmp sub pop add call add adc cmp and mov and mov (bad) pusha pop repnz test mov xchg and pop repnz mov push test xchg dec pop mov loope cs mov mov stos cltd ja lret and jmp out cs pslld or outsb mov negb adc into mov ss lock mov imul outsb clc push and mov lea add and mov repz xor or ljmp jbe mov imul mov sub (bad) (bad) sub mov (bad) and ficoml scas pop or out out out imul push mov jp (bad) in das std cmp loopne and mov and cltd arpl sub fsubs popf aad dec pop cmp (bad) adc cltd (bad) lock dec cmp or stos sub sub cmpsl mov cmp (bad) sahf mov add mov iret mov and ljmp inc les cmpsb std cwtl aaa dec rep push pop sub shlb lret ja mov and out push jmp dec xchg dec daa xchg out push sbb popf pop imul stos sub loope sub jmp mov and fsubl and daa into mov jle pop aam arpl sbb les repz xor or fsubr xor (bad) fdivr pop icebp add pop fs sub push jmp xchg cmp movsl mov add jge cmp cwtl mov xchg das xor imul push clc lea xor sub pop ljmp (bad) in push adc or mulb sbb lret jge sub pop flds pop rcrl rorl sub cmc jmp adc das sub pusha pop fsubs andb or aaa pushf pop jnp xlat lds data16 cmp shll xchg in out mov daa mov sub dec jg push movl mov pop and imul pushf scas mov loop fistpll add insl inc outsl repnz mov hlt xor cmp sub jne jnp inc inc adc mov imul out jmp lret or sbb loope jae push inc pop dec push out push icebp mov lcall jb into xor add or (bad) mov jp xchg in cmpsb push mov push imul jecxz pop and lea leave and and rclb inc dec (bad) fwait daa ret ja into pop xor inc mov pop adc mov movl xor jmp (bad) scas adc sub inc scas add rcrb inc dec loope and or scas xor add and lods decb xlat fs stos mov mov cld inc movsl mov inc ret daa data16 sbb aad add andb sbb mov (bad) xlat push ja inc mov mov dec dec stc cmp rep test lret jmp xchg or scas jb mov into cs orb sbb xchg push pop add mov je jmp icebp pop mov loope movzbl scas das addr16 xor (bad) in andb adc sbb rolb mov mov jno inc and test sub movsb pusha xor push dec sbb add int3 or mov jae cwtl mov adc dec mov comiss hlt pop fcos or (bad) push push pop idiv lods mov xor sti xchg xor scas pop add sub popa add (bad) jp jge lods stc imull (bad) mov icebp add icebp cmp idivb aam leave ret cmp clc mov pop adc xchg lcall xor (bad) xor popf rcr les stc mov xchg jmp scas sub (bad) mov (bad) les rorl cld add sti xor bound iret pop (bad) out daa mov sbb sub std outsl xchg xor sub das jb ret jae fiadd cmp test repnz add out adc xchg adc scas loopne add mov fbstp push (bad) aam out dec adc dec xor jae movsl sarb xchg sub or insl dec fcmovb insb divl cltd xchg jle xchg fs movntq inc notb (bad) jnp xor aas xor add cmp pop sub mov and or cmp lahf cmpsl xchg push xchg cwtl xchg add mov imul adc sahf fs push in (bad) push sarb cmp sub rcl pop pop push xchg ret subb leave lea sub push lret sub xor cmpsb scas lahf xchg bound jne xchg ljmp lret cltd inc aas loope push cli daa iret push adc sub xchg and pop xor in add and jp xor mov mov xchg xchg arpl popa adc push movsl mov lds neg xchg ret sbb flds sub sti lret decl or ret loope,pt ds in pop cli xor repz dec imul hlt arpl icebp mov xchg pop mov cltd xchg fidiv repz dec repnz ja lahf add (bad) (bad) idivl mov jg int cmp adc pop cmpsb aas cmp mov jno cmpsl xlat int3 mov imul cmpsl (bad) jne out xchg pop das ret cmp add bound out notl mov mov pop mov cs (bad) jmp xlat jae cmp daa not mov sbb lds rorl cmp xchg mull loop (bad) xor dec push mov jnp xchg mov sub sub jge push or cwtl xor lret popa or cmp mov push inc imul ja cmp clc cmpsb leave and xchg decb lret sub xchg (bad) mov pop bound std cmp ret sub pop pop sbb fisttp rorl jne mov dec negl and les testl daa notb pop ret sub idivb leave fildl (bad) add xor pop (bad) cmp (bad) int jge mov xchg (bad) sub fisttpl sbb cmp fidiv mov push scas and cmp sub (bad) cmp roll and cmp xor pop cs push (bad) lret aad in rcr rclb jge (bad) cmc decb sbbb int3 decb scas mov pop mov out cmp xor movsl pop popa jmp cmp push sub jl xchg inc bswap aas jmp add stos test in cli and es pop (bad) (bad) mov (bad) xchg jns movsl std fs rol cmp xor stos push cmp or out jb ret test xchg leave (bad) xor das xor lcall xor icebp in in int jle fsubrp sub mov push test in out test ljmp popf mov test adc mov mov mov pop xchg xor repz pop pop jecxz cmp cmpsl adc cwtl cmc and xchg cmc mov pop ljmp insb pop scas stos mov sbb add test movsb (bad) xchg or aad std cld test mov arpl or in push aas xor mov out xchg fisttp mov pop rol stos mov leave ret (bad) adc (bad) jp dec ret add repnz xor sub ss popf rclw movsl mov jle cmp mov (bad) pop sub adc push push divl jae xor jmp mov sub jne js xor loope jp inc leave into aad and mov (bad) xor sbb int3 sub mov sub jne mov jo add pop jmp sbb or mov daa gs xor je add movsb das push cmp int3 push add and cli cmpsb xor vmovapd jno sub cmpsl sbb mov mov adc mov cs das xchg and cmp pop mov jnp inc test cltd mov adc jecxz pop out cmp or rorl fist push psubd xor gs push jno mov sub sub xor mov lahf push push adc scas cmp das or xchg sbb ficomp pop fcomp sbb mov pop inc fs loopne mov cmp fist pop bound mov pop adc inc test sub mov xchg mov popf (bad) repnz test jmp mov inc xchg dec fcomps and out lods mov cmc repz xchg out pop (bad) add push inc sub sub insl aas divb ja,pt icebp dec mov add out je push bound jl sbb mov outsb adc add mov into cmc cmp mov adc sub dec push push mov (bad) mov adc testb dec and cmp das sub sub pop sar imul xchg ljmp lcall aad js xchg sub xor or mov shrl out pop cmp ret out je (bad) xor mov push hlt mov mov idivb mov jmp loop pop or cld mov adc cmc sbb push lock cmpsb mov fsubrl fcomps loopne test or cli mov loope jbe pop fwait add xor xor shl pop movsb es and in cmp sbb sub shr daa and jno test popf mov jbe cs jnp pop in idivb mov xchg scas xor xchg repnz (bad) mov (bad) sub xor pop jb leave jmp inc push popa jb xchg adc (bad) loope add cmp shll jl push shl sbb (bad) sub (bad) mov xchg jmp or lret enter or xor lea sub mov (bad) cld mov sub ret and dec dec mov lret int3 daa mov push addr16 sub je fcomps and enter mov pop clc and and jne mov dec iret je mov (bad) mov pop addr16 sub xor dec sbb (bad) mov aam jmp or fist push mov cmpsl mov mov gs inc add (bad) jmp or pop lds mov jge lock sub test pop add scas xor in xchg sbbl std shll (bad) mov pop int3 cmp sub test mov frstor movsl aam xchg or (bad) pop and mov in test pop push sub mov mov or pop mov sub ret lret push outsb mov cs dec lock sbb stc std sar push loope (bad) ss gs enter sti sub shl xor cld gs mov and add in mov add stc and pop and adc (bad) (bad) das lods push lds lret push mov hlt (bad) mov (bad) dec push cmpsb (bad) ret jbe jmp ficompl cmp das repnz dec push sub and fs mov mov adc cltd nop mov lret jne adc fyl2x repnz mov dec mov je jmp sarl repnz out lret mov jb dec sub jo out and (bad) mov pop cvtps2pi sbb lret out mov xchg call pushf sub pop (bad) nop add xor (bad) pushf call das leave push cmp das sub jge dec rcrl add ss js (bad) xor lret je pop (bad) push lea or sti je cld ds xlat push dec mov push xchg mov insl je or mov push loope xor jne xor negb lret fisub and push arpl mov add test xlat mov push (bad) dec inc mov test das ret cmpsb ljmp lock jle dec (bad) sub or int3 cmpps out mov cld mov shlb lret outsl cmp daa imul test add adc mov inc in mov cs adc lods movsb cmpl cmpsl sub and add dec sbb fcomps rorb xlat inc sub out jo ss sub or mov mov in pop in adc int jmp mov add fs jp lds cltd cltd cmp mov cmc nop int3 xor xchg push das imul push fnstcw ja (bad) loop repnz data16 mov jg repnz push insb jae jo data16 pop repnz add incb movsl movsb inc fnstcw and adc push pop mov ds lret (bad) mov cmp xor je adc ss mov in ljmp nop dec xchg mov bound or pop add dec sub (bad) add movsb out xchg fsubrs loop dec fild add lret jg inc dec out xchg movsb loope push adc sbb or sti xchg xchg loop imul test jb out mov loope cmp loop cmc icebp cld xchg fildll mov xchg adc nop and orb fidivrl (bad) gs stos mov (bad) xor mov test pop stos sub mov and jge inc mov and sbb ja cmp pop cmp mov jp xchg jno imul mov xchg xchg clc fcompl cld and xor fsubrs int jg add mov in sub js das lret jbe in jecxz mov (bad) cmp mov mov xchg adc push clc mov sbb sub fs ljmp and xchg add enter sbb xchg pop dec xchg push sub cmp and mov and ja mov cmp and mov sub aad shll sbb cmp lret mov mov and cwtl dec push dec (bad) mov add mov pop pop fimul test mov ret out jl jo fdivrs das pop sbb or lock inc fidivr mov and xchg xor loope add or push into movsl inc ror push pop lret push mov xchg in sbb push push jns imul dec imul in mov inc lds pop sbb add insb xor or sub stos bound inc jns pop sub dec pop movb (bad) jo push sub fs mov sub stc mov inc and mov or lods stc ret jg in pop jbe xchg sub in in inc push popf shrb mov aas fistpl xchg pop (bad) adc mov mov mov add mov lock das into sub in mov test sti lods fstpl pop mov lods repnz push neg repz push mov inc add repz adc cmp icebp sub (bad) push add xor xlat pushf inc das sub xor cmpsl cltd dec and call aas sub adc adc adc ficom ss xchg fnstsw xchg push test push ljmp add mov dec pop mov adc push mov sbb pop arpl imul sbb cmp cmpsl jne fcoml pop mov pop ljmp pop scas sub add mov and stos push xor int3 rolb pop xor sbbb ds adc nop aas adc xor dec sub sub mov inc xor in popf pop loope or data16 cmp adc cmp jg flds out sub mov imul das fldenv sub xchg ficoml jecxz push notb dec or inc icebp ret xor mov adc xor fistpll mov pop bnd test daa mov push ret in inc mov mov sub mov divl out lds cmp xchg daa into xlat cmp fisttpl repz or iret lahf in out inc enter jno mov and push loop xchg dec loop adc cmp dec loop lahf out mov gs xchg rdmsr xchg adc fnstcw jl add int gs adc stos mov xchg mov sub mov mov (bad) cmp aas push data16 push dec cmpsl push dec mov mov cmp sub popf in aaa dec jmp outsb lods xchg fwait jb scas in scas loop adc pop or pop shr into dec lret cs add les test sub add roll sub out (bad) mov icebp inc sbb xor push sub daa or or in add or (bad) sub lret push jne int3 dec mov push leave test xor decl cwtl aas into pop mov push loop cli aam scas pop adc xchg scas adc out cmpsb pop pop stc push cmpsb push ljmp (bad) fisttpll fbld ret (bad) xor sar movsl push xchg lods xchg adc sarl add mov mov movsb ret test mov inc loop dec xor leave stos xor test mov out (bad) mov mov movsl push lret mov mov and dec sarb mov lret adc dec lret out ret lods shrl ret xchg repnz movsb adc mov push sbb sahf fisttp mov (bad) or sub inc push xchg js xchg xchg jne or jl call test jmp push or mov xor roll lds imul xlat (bad) decl in mov cmpsl test leave adc fcom add leave xor fcoms xchg cld popa in cltd (bad) mov and insb push mov lock sub aas xor mov ror stos lret ljmp sbb xchg push (bad) into loop in stos xchg js pop iret and sti fldt imulb shlb ficoml nop sbb outsb sub rorl sub xor and sbb dec ljmp mov inc (bad) or push or jbe lds imulb and add mov xor push stos push ret add sub adc and push push lods add (bad) (bad) rolb adc sub test fidivrl fstpl enter out cmp dec mov cli mov or inc pop mov ds inc and aas jecxz cmp dec repnz inc sub xor mov pop imul mov out mov xchg adc xor and push (bad) call push ljmp les push mov or push or and das mov and push cmp xor pop xlat stc adcl add outsl data16 repz das (bad) mov fild inc xchg mov test sbb or and sbb sub and xchg lods adc lahf jle fs cld divl mov jg sub out push pop es daa jg push scas pusha dec jmp imul or xor notl pushf mov mov and cmp push adc les add mov ret jae jmp out and xchg hlt ret inc ljmp das sub push (bad) lret out pop loop int xor hlt repz mov ret or imul mov and xchg lret adc in mov out cmp lahf rcll ljmp or repnz inc sub cmp pop test icebp cli out and sub lret mov (bad) gs out mov ljmp aad xchg movsl imul (bad) mov ror repz das sub pop (bad) inc push inc pop and adc ret jne sub and and add sub add fsubrp xor or out mov adc add ret dec mov incl pop fiadd sbb add mov enter add in into mov xor fdivp imul xor or jo add aas pop pushf stos cmpsb inc pop xor jno add aas stc mov cld in sub and lret stos cmpsb movsldup ret lods rcl sub movsl sbb out inc cmpsb sub jle jmp out enter cmpsl aad pop pop out sbb mov and mov mov push mov add daa sub mov pop imulb loope push sbb sbb mov (bad) std adc xchg add add idivl or jbe pop bound adc das ret test pop sub pop jl pop xor out jmp in push mov pop and xor mov sub (bad) xor jo test sub pop and stc xor (bad) cmc leave loop adc mov xchg jmp mov mov sub add inc push das out mov (bad) sub andl lahf dec xor movzbl xor icebp ja dec push cmp (bad) add mov push pop cmp test daa jmp fmul fstpl (bad) mov cmp xor shrb shr dec pop (bad) pop orb push jmp repnz pop in inc mov adc cmp xchg add or out and inc adc add mov push and adc sbb cmp jno dec jl mov and andl out jbe pop pop adc aas sbb les cld dec mov sbb mov stc pop dec push lret jge lret addl add aas fisubl sub clc aam cs shll int3 leave inc outsl lods insb in nop and mov fisubr adc faddl xor cs xor xchg add lahf mov mov stc inc mov std inc (bad) in dec icebp sbb xchg and sub shlb (bad) push out lds mov jp (bad) lock mov fisttpl (bad) pop mov data16 stos sbb push pushf mov xor or cs lods xchg movsb jmp dec mov aad dec mov (bad) mov pop cmp cwtl loopne xchg out pop pop mov insb sub imul push aas mov loopne ja loop in pop or or test scas sub call stos sarl aam mov push mov pop mov fadds sbb int3 sarl je ret push negb xchg push and sti mov xlat mov lods imul or (bad) xor sub loope je aaa jge jle or push insb xlat pop sbb add add call sub push mov sub mov fnstcw clc in xchg mov inc sarb push bound fdivl hlt imul incl sub scas insl mov inc fstpt mov jb,pt cmp sub mov test aas cmova xchg mov jle pop xlat insb jae ljmp add mov cld sbb sub into dec std cmpl push cmpsb dec mull cmpsl out out mov xor sub mov push pusha jae cmc aaa test and xor (bad) mov rorl push push add pop enter sarb stc sub pop das or shl nop not ljmp shll dec dec (bad) pushl adc addl mov cmp sub add (bad) icebp pop add mov inc mov sti iret or mull sbb sub pop xchg std mov and mov jmp xchg sbb push sbb add or sbb cmp or xchg (bad) mov adc sub push mov imul xchg iret popf (bad) sbb es aaa fldl sub lods imul pop lds add or ja jmp jle jb lcall lret pop xchg in add jbe lret or jmp mov push xor sub or dec loop (bad) sub xor and aas mov roll sub sub adc or sbb adc mov xor jns mov testb or xlat lahf int3 jnp ljmp rcrb (bad) mov sub jge stos flds test (bad) and lret and sub cmp ret (bad) stos xchg push ret or add stc push sar cmp sub lret ljmp and mov xor jg xchg rcll popa xor rorb outsl sub xor gs jle push mov iret repnz pop inc das or ficom mov and add call cmp ja cmp inc sub pop lods ror jg fidivrl add pop pushf pusha inc divl test mov test push ljmp push mov push push iret daa or mov pop frstor dec cmp cmp pop int cmpsl aam cmp mov inc aad jg adc xchg mov and mov fdivl fidiv mov inc adc pop mov dec div je pushf or and cli xchg sbb popa iret and cs lretw adc inc fcompl mov popf shl sub xchg lock push inc das fdivl add xor jg popf push mov fbstp rclb xchg stos jecxz dec stc stc dec lret sub push sbb add out jle and pop int3 rolb dec icebp out xchg insl out ja rcrb and add out pusha rorb lock sub popa cmpsl bound adc sub repnz fistpll jb stc xchg xor ret xor pop scas push or push jmpw jnp cmp loope mov xchg (bad) mov mov mov inc ss sub dec into or mov out into inc ja push fisubr mov mull lcall (bad) gs scas or xor decb pop pop out sub lret std les repz bound ret adc pop mov push mov loop (bad) sahf dec das or imul jg sub out and jnp push popa mov fcmovnbe mov imul iret mov dec and ljmp cmp mov dec jne cmp dec push mov mov lds cmc mov xor fdivl adc fisttp xlat (bad) lcall fs and rolb movsl dec ret cli mov dec mov bound lods fmull or ret sbb dec add aam jb push bound mov rol call and xchg gs ja add pop jne adc dec movsl jmp mov cmp mov scas jge inc pop mov cmpsb mov out jg and imul sbb sub jp cli xchg scas out dec stc cmp sub ldmxcsr mov imul repz mov fldenv out xchg je leave out bound ds insb loop add insb inc xchg cmpsl push adc (bad) adc lret pop scas sbb movsl xor jp (bad) mov (bad) and dec dec fbstp and xchg sub xchg clc add loopne in xor push xlat jle mov xor lea mov sar test mov cmc mov idivl mov fsubrs sub xor ds push das mov repz rclb lods lea aad adc js mov cmpsl xor (bad) adc jmp stos jbe shrl test loope movsl imulb mov clc xor cli pop test loope sbbl (bad) je lds cmp pushf int (bad) push sub dec das mov scas insb fidivrl mov lock dec sbb into sub lahf gs cmpsl push in das sub cld xor or test lahf fdivl cltd jbe cmp popf movsl test call adc cmp push inc fs ljmp ret notb mov or lods cmp xlat insb push xlat mov push sub and jo jo xchg idiv lret scas mov sub cmp mov data16 xchg fwait and out stos aad mov jno dec push aas mov pop out mov loopne jno scas cmpl rcll jbe lds fs stos or push test rorl jnp inc xchg mov ljmp ret jne mov leave aad pop mov lods fistp out arpl xchg shl mov sub sub jge cmp (bad) adc in jmp ljmp incb cmp lret xlat add mov lcall mov lds mov mov nop leave push lret int movsl xor push stos inc loop xor js pop repz or pop stos mov pop insl jbe gs jg or and pushf inc lahf mov mov add pushf orl pusha daa rcll mov add mov cmp and mov or mov lahf xchg icebp (bad) adc stos fs sarb or xchg push and fldcw push icebp lahf icebp inc dec cmp sbb cwtl or mov jbe fisub popf (bad) pushf xorl cmpsl test repz hlt sub lods push push jbe,pn sub rolb call mov pop mov ja pusha (bad) aas or xchg or dec fldenv add pop imulb hlt insb (bad) xlat inc mov mov imul int3 inc leave dec and pop xchg push idiv lret loopne pop and adc xchg or pop jge and es or sub popf test imul mov out jns mov sti cltd jg stc sbb and xor mov outsb fs push mov cmpsb popa jbe add xchg add xor mov mov and loop ficom lea cmp mov popf mov lock insb push pop shr mul pushf jl mov sbbl sub xor sub mov incl das xor shlb pushf negb ss pop sub bound jno inc out and push sarl mov or icebp or pop divl test pop inc enter stc lds fmul cmp mov das or pop push push icebp mov sti cltd (bad) sub in jmp push mov mov and xchg jnp adc lea sub out sub notb or add lret add inc dec ret repnz inc sbb mov cli loop xchg sti mov call or mov clc push sub jge shl mov sbb and sub out cwtl push or cmp or les enter into mov imul push inc mov sub gs mov call or add cmp and cmc adc pop jecxz dec add (bad) xor sub sti cmpsb cmc xor xchg outsb jmp mov stos mov (bad) je jno inc sbb xor gs mov pop hlt cmp addr16 and ss xchg fldcw outsl mov mov gs and sti mov rcl inc pop pop sti xchg jecxz mov xchg mov (bad) cltd insl pop test pop and dec fisttpl mov mov insb xchg ret lods dec xor dec fcmovbe lock jg mov inc sti sub adc mov adc iret mov pop xchg push add push adc dec bound test or gs mov inc outsb cltd cmp adc shlb add jns jle cld cmp push shrl pop cmc stc jno jg aas aas cli sub lret fcomps inc lds xchg pop repnz sarl cmpsb adc lock jmp pop mov push mov or mov cmp dec orl (bad) mov (bad) jmp outsb cmpsb mov iret je pop repnz pop in mov nop dec add ja imul pop jno imul movsl (bad) adcb xor cmp inc (bad) push sbb adc dec cmp adc rorl out mov in je or popf bnd outsb jp movl mov mov mov sbb sbb jecxz and sub clc pop repz loop add push push clc loopne add xchg and scas lret sub lcall or xor fwait xchg fistp jmp pop adc pop rolb dec into mov aas in popf in cwtl add sahf xchg fs es out popa lret mov add aas dec mov stos (bad) dec adc pop adc and xchg pop xor or cmp jb sub mov psrad and cmp cmp jecxz cld in add cmpsb (bad) leave add add gs inc jmp mov adc xor mov pop faddl mov add or xor enter int pusha arpl mov or ss push ljmp or xchg pop (bad) jno out xor add test out fsubr add lods mov (bad) out leave leave cmc sahf sub jo pusha xchg in sub sbb repnz push xchg push mov daa mov jl pushf cmp inc xchg loope cmp adc sahf and jl mov add mov pop (bad) xor fldcw and sub mov (bad) mov lret sbb mov xor jp lcall sar mov movsl jle dec jno mov push dec imul dec fstpt ficom mov pop inc pop fldl and xchg es adc stos in fwait (bad) push inc loop xlat jmp shlb xchg aad and ljmp icebp aam es sub xlat test faddl clc test ljmp lea sub scas popf and dec int3 (bad) icebp mov (bad) mov nop clc mov sub fcom xchg ja aad pop or adc adc mov in jg out xor and mov xor cmp imul clc xchg or idivb (bad) call popf aad mul sbb xchg sbb hlt ss jbe and decl sub lret adc push scas cltd das jle imul leave movsl xor out sub dec popa adc pop sub (bad) mov int imul dec or loop dec mov adc push jmp addr16 and adc mov sbb mov mov std cmp (bad) sbb insl xchg push hlt je sti mov dec push and orb xchg xor daa stos out cmp sahf shrl in and scas (bad) dec std les sub fmuls mov das pop lods lret sub sarl lret mov mov inc sbb push sub jb cmp mov sub inc adc insl pop or movsl sbb jg adc (bad) int call add sub shll and sub pop xchg mov imul jl imul add or pop pop mov push pop popf xchg or push adc add aaa adc ljmp testl notb mov cmpsb pop adc lds fldcw push inc mov inc xor sub sti test adc mov cmpsb xchg daa jmp xor jne xchg mov pop mov add add pop pop out lret dec ds pop mov ljmp negb bnd pop jno inc into int cmp inc xchg cmp mov push cli jle push dec ljmp out inc xchg jae xorb insb jnp dec fucomip and icebp or pop call cwtl or insb xchg xchg dec rcrl cld dec in and xor scas int3 scas xor sbb cmp sub adc ljmp nop jmp cmc mov add xchg push xchg pop mov (bad) icebp and mov add mov sub stc (bad) lea iret fs pushf lret and lret aad cmp sbb jnp fidivrl adc pop lods xchg pop pop lea jne sti les out cltd sub jecxz or add mov dec and ljmp mov (bad) insb insl mov push pop jl jno ja sub fistpl mov out mov or cmp mov jno insb shld adc rcrb fsubrs mov xchg iret jne or push or mov xor repz xchg (bad) (bad) bound std xchg fsts enter adc mov scas loope into fwait lods fcmovb insb icebp in xor cli (bad) daa jge sbb add mov and fisubrl into dec or int3 pop pop pop and inc leave add mov and test xlat cltd test xor adc ljmp mov and push jb adc out int3 jo pop clc xor bound or sbb jnp pop xchg pop mov out xor (bad) std mov ret cmp mov or inc stos lahf sbb (bad) jg pusha and into or repz arpl and ret sub loope aas imul cmp in cmpsl subb jmp sub cmp cmp js subl lea sahf cmpsl loop jle shrb mov xchg mov rolb das or fcmovnu fs xor inc negb jecxz shlb sub push stc mov and or and sub mov jge mov icebp in cmpsl js sarl inc leave ret ffree enter or mov and mov mov add or or lcall loop ret xor ljmp not imul mov aam enter xor xor rorl (bad) ss scas into sahf (bad) adc cwtl push repz fldt mov push stos and and mov mov (bad) sub into mov daa fcmovne mov inc repz stos fwait dec fbld call int3 cmp sarl lret xor mov push jae or add mov mov ficomp (bad) sbb leave movsl jo add xor dec jmp movsl and (bad) pusha sub pop or and in mov ret push lds and dec ljmp adc idiv gs pop dec call jns inc (bad) ljmp popf sti mov lock push mov sbb cmp inc pmaxub lret das mov dec mov add add (bad) mov pop xor mov mov dec or icebp xlat xchg (bad) aaa lret repz les repz lds aad jmp fist ret into sahf add testb adc hlt loop xchg ror push data16 ljmp sbb cmpsb pop push loop lahf fisub and ret or out mov mov mov and aas sub mov xchg mov bound push mov dec xchg cmp push shrl jmp imul clc das and cmc sbb jbe das out fs adc (bad) mov mov mov sbb daa or into add jns mov cli mov xor mov ljmp pushf adcb (bad) jle daa and data16 je add pop popa lods or call push bound mulb aad (bad) mov mov sub ficom or inc and movsl pop sub cmp test movl gs xor scas call sub movsb idivb xchg pop sahf mov (bad) (bad) mov or xor adc fwait xchg cld xchg dec jno push sbb sub (bad) lds jp in xchg scas adc ljmp pop lret imul pushf sub push mov xor xor or loopne outsl ret nop adc scas fcomps xor pop sub push xchg mov push xor xchg mov repnz test movsl and cmp push mov push rcl pop loop or add sub (bad) mov jg cltd mov aam (bad) mov add pushf cmp loopne outsb imul imul jp jnp mov jo pusha lret mov push pop mov fistp ret orl cmp inc (bad) jne hlt jb or sbb xor es adc cmpsb dec mov push and jmp add push mov pop push xlat jno adc nop sub pop add add (bad) xchg mov sub pop popf ja mov add sbb mov pop cli les or mov mov inc inc (bad) imul jmp cmp adc pop stc pop adc mov mov dec pop mov pop outsb and and inc jecxz jnp ret aad adc icebp xchg jge and repz test or jb shll pushf lock and pop or inc adc xor xor out inc sub repz cmpsl je fs mov inc and dec inc loope inc (bad) and jl mov fsts pop jb aam mov shrl sbb mov imull fs xchg pop scas mov push mov sbb inc mov jle test and stc out aas stc adc hlt dec lret pop es (bad) ss imull in mov hlt pop bound pop mov (bad) fcoml push and cmpsl pop cmp (bad) or xor out fcomip jl jns or ss lret and das jge fnstsw aas mov or ja ja ret das add lcall sar aaa imul push jmp stc and add (bad) leave jmp gs xchg add cmp dec add ret pop and rorb jle popa mov icebp jge adc or adcb xchg fcoml sbb std sar lahf repz add jbe bound lret inc pop jne sbb out mov js mov (bad) repnz add fs mov mov shrb das adc add and popf ja mov mov in jmp addr16 xchg popf sub cmp add (bad) and push add add andl mov cmpsb lret push imul out lods pop lret mov sbb dec jne cld in push test adc dec (bad) mov idivb jns dec cmc dec test sub loopne mov scas jl aaa or mov jge (bad) cmp jecxz loop xchg call xchg fs test (bad) jns movsl call minps (bad) lret jae mov mov test (bad) scas xchg loopne fsts mov pop lea popa jne push daa out jg roll lret js push in pop icebp ja push sub xor repz jmp xor jp fstl adc cltd jb add negl fucomi imul pop mov or mov dec xor sar adc addr16 sti add stc xchg cs xor mov jl push repnz sbb dec jmp (bad) push push shrl inc push adc sbb data16 fstps jns sbb idiv rcll out mov inc rorl std pop pop or push fcomip scas lahf push xchg (bad) mov mov cmc jmp push or jecxz adc fbstp add and fs jg jno sub sub add ficom lret xchg (bad) mov sti mov mov sub and sub pushf (bad) clc mov jmp mov ljmp imul (bad) mov shrl rclb decb arpl and mov test fstl xchg pop dec dec mov dec add and sub lret lret (bad) cmpsb and mov das cwtl (bad) xor xchg insl leave pop xchg adc cli loop xchg mov ja pop out pop jb (bad) movsb pop out sub (bad) xor sarb outsb (bad) mov inc test xchg and cmpsb jle xlat add inc pop in cs ret sub sub sarb xchg scas mov pop push mov inc loopne or stos imul (bad) pop mov cmc fistpl mov (bad) mov mov mov jl mov icebp movsb push and rorl in mov adc (bad) loope sub pusha add sub shll mov aam fsub add movsb jne in and cld jge lcall cwtl jp insl xor lret adc push pop mov mov xchg mov adc pop adc and jmp std aas jb jl pop lret lret (bad) jo inc les fmull push (bad) idiv push pop enter pushl data16 inc test cwtl divl inc cmpsl fsubrl out mov sub sbb jecxz xor xor (bad) add out test pushf push repnz (bad) mov stos daa leave cmc mov inc lods and insl mov xchg dec int3 xor ret mov mov das lret (bad) adc mov sub loope ja push add mov mov icebp adc fld outsb std jno gs sti bound aad pop xchg (bad) sti sub out sub jmp mov mov cld xlat pop lods dec mov cltd and imul lods das ja scas push (bad) jp mov lods xchg test cli lret sub mov pop dec ret xchg outsl and fdivs mov iret jle pop negl loop sub fs sub adc or (bad) mov mov or fsubrl jne out and xlat mov inc and or add push lods ret xchg mov imul out push mov jmp mov ljmp dec stos mulb dec scas xchg push into jnp scas imul inc xor icebp or cmp outsl popf shrb xchg dec mov dec jmp pop lods mov jmp pusha sbb pushf push fidivr jmp roll sub test dec cmp or jp divl jbe jmp std adc push cmp ret inc les cwtl xchg inc fwait das fildl cld aas shrb movb out push imul cmp hlt pop dec out je mov lret push leave out cmp ljmp or push sub cld lret ret gs and les sti jne in jnp lret add fcompl mov loope mov pop push insl add pop cltd fs mov sub push lretw cmp repnz out pop or push pop xlat xchg movl bound pop (bad) mov aas pop lods dec sahf das push sbb (bad) xor lret mov popf ficom cmpsl dec inc pop in das std add adc add jmp ljmp jo ljmp push shl aad pop or movsl ljmp scas movsb adc xchg push cmp cwtl push (bad) icebp (bad) insl push xchg stos lret push pop mov sbb mov xor notl jp pop push sub xchg (bad) xchg dec imul faddp pop mov push cmc push or sub dec ja (bad) lock ja dec and dec ljmp add je stos (bad) iret sub mov iret outsb lret iret dec (bad) out (bad) mull mov (bad) add or cwtl add mov imul xlat movsl test mov leave cmp pop push movl inc xor ja int xor add repz inc xchg pop and mov aaa addr16 jne dec popa bound xor icebp mov add mov leave imul jnp stc mov inc outsb aam mov pop add sub mov jno xchg dec test and stos mov push sbb std in ficom cmc pop (bad) cmp loopne xor aam std xchg jg mov add xor mov leave aad ud2 out and mov aaa ret xor testb xor neg sub push push and dec pop jge cwtl dec lret and inc sub and lret inc mov dec sbb xchg sbb and (bad) mov dec not mov out or (bad) clc cmpsb int3 sub movsl hlt sub or push (bad) bound jmp test adc sti cmpsl pop (bad) out push add or add int and mov jg,pt pop lea not (bad) pop or jge inc rorb jo push adc stc sti mov out in mov or stc jbe fidiv les mov gs cwtl icebp jecxz pop divb test imul test test movsb out jne divb rol inc repz xor xchg pop cs das xlat push jmp lock stos cltd push push les push icebp aad stc ljmp fsts cli shlb shrb loop mov sub jno dec jbe or inc sbb mov mov xchg jmp add jnp das cmc push out dec lret lahf inc xor xchg fidivrl push adc jmp mov add adc ljmp ds fadds out and dec sub (bad) sbb addl ror dec or fadds repz fidivr fild stos int movsb in xchg push dec imul adc jne aaa and scas lret mov lret lret dec or mov shr lret mov sub xchg jg mov xor add sti ficom iret out sub cmp repnz (bad) mov mov and aad add jmp and aaa ljmp testb pop mov xchg flds ficomp leave and dec icebp gs (bad) jno sub icebp cmc cwtl inc fimul xchg mov adc in mov pop jb add push or inc das pop cltd test jp (bad) notb mov cmc lcall add xor inc cmc icebp fcmove xchg xchg mov loop add orl or cmc cmpsb adc insb push daa repnz stos or (bad) (bad) or fwait pop int3 scas pop scas or loop lds fs (bad) imulb adc mov jmp movsl mov in ds sub bswap ja add aam in jmp pusha xlat jmp jae push out jmp inc sub dec repnz aam push or dec mov mov daa add xlat mov repz push push add loope mov out ljmp loop (bad) push xor sarl (bad) xchg hlt sti jmp je fimul pop mov cmp mov xor ret adc jg in push mov sti sub hlt rcrl movsb loope and (bad) xor or sub mov movsb or xor jo dec negb fcoml xchg icebp or lret imul test test sbb xchg testb fnstcw sub adc sub movsb cmp (bad) out cli and cs mov or popf gs movsb pop or xchg out into adc (bad) shr push pop adc xor and xchg xchg fs cmp sbb sub jne xchg imul lret xlat sub mov (bad) mov pop push icebp movsl clc adc fnop cs sub sbb push mov inc aad dec pop repz xchg (bad) jbe or mov test (bad) mov cltd mov lock mov cltd sub lds lods jns dec repz test or aam sti cs jg pop mov add rcrb mov xchg adc mov dec int3 (bad) xor icebp mov enter enter jb mov sub or je pop mov adc inc xchg (bad) jb mull sub pushf or push rorl (bad) jecxz out sub push jnp push js paddusb add mov pop cli mov add ds mov popa push into push (bad) bound lret pop xor aad std idivb scas or fdivrp pop pop arpl nop repnz aam lcall cmc gs adc inc mov add lret stos sub (bad) jg mov das or jbe or sub push pusha js lret mov adcb add aaa jbe lret flds mov repz or jmp jle sub hlt repz jbe mov in sub fiaddl mov pop fwait mov jp mov mov and das mov das (bad) pop xchg sub out cmp nop jp shrl call jp ss or rol pushf icebp mov fnstsw dec cld mov jae mov cltd rcrb mov cmp pop sbb inc or push jno mov (bad) std gs (bad) or dec loop mov std insb loop movsb adc and xor std adc lret jbe daa add xchg test adc sub mov inc mov push into jecxz ret mov je repnz les repz push lret test cmp in out push ret jmp or ss dec roll pop xchg or ds fucomp ds sub jmp fisttpll data16 inc out sub ljmp and loop shrb aad stos je adc repz in sbb xchg (bad) inc and out sub (bad) fucomip push (bad) imul mov sub (bad) pop mov and jmp decl mov scas je cli xor xchg popa loope iret inc (bad) stos fs or mov cmpsb mov in inc mov and and lea (bad) stos sub jl addl stc jno mov fnstsw cmpsl stc jp fsubrp out and stos push or xorl das aas repnz ss jns dec jne bound scas jecxz es int3 or xor and inc push xchg mov jle inc adc adc lret push pusha cli into xchg sub sub lahf fimul in lods fs divl dec mov sarb pop repz lock sub mov adc mov popa fimul mov (bad) shr push nop and fbstp mulb adc dec in ds push fs mov adc xlat inc addr16 jle mulb fidivr jecxz jne cwtl adc or rorl push adc mov adc imul lods in mov into cmpb rcrl cmpsl fcomps xchg xor ljmp daa mov sub mov mov lods dec fcoms pop sub mov jns imul jno push xchg xor popf imul xchg sbb jle push in xorl sarl sbb mov sub lea push popf ret mov push dec adc xchg pop ret inc jns imul pop xor lods adc bnd lods outsb xchg sbb fcmovnbe cmp mov xor (bad) and mov jns lods add fist jnp mov scas mov push add repz mov or gs xor sub ret out (bad) dec (bad) fdivl clc jl push sub fwait jmp pop cld and bound xlat xor ja mov movsb ja sub repnz sub pop push jmp sub xor and std roll jmp xchg pop ljmp push mov cmp test or daa imul jg mov aaa and pop xor scas lret add and (bad) shl xchg xchg into int jns push (bad) mov in dec dec and ret dec jmp imul out push dec dec inc add mul rcl in movsb inc std xchg adc lods mov mov mov and jmp cli loop (bad) icebp add cld (bad) lods xchg xchg out lret test adc (bad) sub sbb mov imul (bad) fdivs dec sub push out lret lds adc mov stos sub mov mov iret out movsl jo xchg jge adc xchg add mov or sub jbe push daa pushf pop aaa es adc scas fwait xchg push jb push mov mulb idiv leave les and pop (bad) jb bound (bad) dec inc cmpsl pop pop dec mov cmp mov movsb push dec mov (bad) ljmp push jle roll jge fcoms or jne test loope mov xlat mov xor mov or sub jmp add ret daa add xor js xchg cltd pop ret or pop add inc dec mov das lds fs mov sub stc repz push std mov mov mov lock cwtl dec xrelease pop or test out sub repnz repnz xor cs xor ret xor mov in in dec inc mov xchg in jmp push pop lods rcrl ds mov cmc jae dec adc mov sarl xchg fild pushf out jp daa inc rorl mov xchg mov lret inc and push in jge iret inc iret xor mov dec pop lret mov aam xchg or dec pop add dec xchg jmp mov negl popf notl fcoms das sub sub sub mov sahf cmpsb das xchg mov mov adc mov mov push mov pop in xor jbe pop ljmp in dec dec out pushf loope xchg xchg sbb cmp sub jmp (bad) out subb pop movsl jbe cwtl mov in test jae inc movsl das aam lret (bad) mov and out push dec jmp (bad) jb or cwtl jmp clc pop divb mov es pop rcrb ss (bad) push cmpsb loopne iret or rorb cwtl sub lahf jno sahf or pushf jne mov add into in dec mov jno gs mov add decl push outsb sbb inc or pop inc mov enter xor das cld icebp pop and xor dec sub mov pop test imul fwait cmp es loop lock adc pop and aam xchg pop popf cmp cmp rclb mov mov add push or inc mov mov push pop lret mov inc push jle push or and sar pop cmp pop je dec pop mull add adc mov lret cltd mov iret adc xor cld flds scas jg js mov in sub (bad) loop (bad) or xlat stos mov lea sub cmc jo sub mull pop xor pushf mov mull insb xchg mov (bad) test gs or out inc test movsl jne dec sbb add lods jne jg pop dec pusha mov jge xchg mov cwtl pop add pop lret mov inc repnz inc in sub and mov jecxz mov leave and push or and icebp out xor jmp daa jle mov mov pusha push shrb in scas or inc inc jno sub push sarl js popf xchg sti rcrb xchg cmpsl aad mov (bad) out daa or jl mov pop ljmp gs gs jecxz dec in lea push mov xor inc gs pushf icebp (bad) xchg in data16 xchg inc nop aas outsl sub push or mov leave lret movsb ficoml cmp mov fbld mov jb insb scas adc mov adc or movzbl xchg mov mov xor jne,pt stos push sbb lahf subl int or fcomi sub jge pop mov add (bad) lret inc test or mov lea lahf enter sub jmp ret push xchg out pop mov int (bad) std out sub ljmp or ja cmc or aam in dec or fistpll call stc out mov xor icebp xor lcall xor mov outsb cwtl lret add cmp ds scas xchg mov lret xor mov add or sbb or xchg bound ja (bad) xor pop sub ja mov (bad) xor cli or mov movsl xchg sub cmpsb fimul xor adc hlt push repz mov arpl xor add mov push inc flds call push pop xor fistl xorl sub jb lahf pop cmc push push adc jge adc das (bad) loop movsl mov hlt mov mov outsb jb xor iret mov add add test cmp jo inc xor (bad) jae sbb and lods xchg and leave adc add shlb jns add pop and jbe mov arpl and ja repnz inc cltd jb jne int3 cwtl and pop inc add mov pop jbe rcll sbb fmulp dec aad pop orl sub push mov and pop or sub mov push add sbb inc sarl sub push (bad) mov adc imull xor mov dec mov add out or mov cmc push out xor jnp sub and pop sbb mov pushf pop (bad) and and rorb xor popf dec ds icebp sbb cwtl lock mov scas lret add fdivs dec icebp stos xchg scas push cmpsb mov sub les lahf aad xor add or xor aaa mov pop imul jle dec dec cmp sub jge imul test mov jmp pop ret mov cli js mov mov or fisttp loope outsl sub pusha ljmp sbb dec pop mov cmp cmp jo lods sbb fidiv movsl addr16 sub and cmp stos xor lret fs cmp dec pop mov xor stos fstpl inc ja mov imul lock dec aad sub mov pop pop imul icebp nop scas xlat cmp cltd or sub sub add sub mov addr16 and or cli xor cli lahf outsb and int3 inc dec pop sti sarb or adc lahf bound sti lret out mov cmc xor mov sub mov or stos mov pop iret mov scas lret out adc (bad) dec push stos add pop fiadd hlt (bad) in int insl or fwait add mov and jnp mov mov aaa (bad) mov pop mov (bad) call pop icebp mov xlat add mov pop out mov cmp and aaa xor in jmp ljmp lret jl xor outsl push sbb lds loope iret jnp mov ret jg dec idivl or (bad) fs mov lds add and adcb stos sub lret add dec mov data16 jle pop xlat xor shrl push mov mov dec or ret std dec mov pop cmp or pop sbb fcoml (bad) dec mov push mov inc sub stos xor iret adc sub mov push inc xchg cld pop lret std int3 lea sub cmc or mov jb xor mov sub push and and push adc movsb daa cmp or mov cmpsb xlat mov xchg inc and xchg into stc or out adc sbb (bad) push test push sbb mov push lds outsl and cwtl mov testl inc das xchg adc xor jmp lret scas inc dec sidtl lret out dec pop jg hlt iret inc je push add sub into push mov js lcall in adc scas sahf jne dec xlat les cmp adc cmc jle ds mov enter adc pop pop xor clc int3 dec ret fnstcw or je call (bad) xor xchg ljmp sub sub dec lods arpl ficomp sub mov and xor mov push jmp xor rcll into daa mov int3 pushf (bad) mov out das sub imul rol sbb jae arpl (bad) clc (bad) das fcomip add xor mov clc add (bad) dec repnz cmp rclb sub pop aam pop mov or adc rcrl stc out lret out sub xor sub bound gs xchg movsb pop jno cmp test ficom stos popf leave cmp sbb fisubl jecxz test mov add fstpt mov push sub dec mov adc cmp mov cmp push pusha cmp arpl adc adc loop xchg fcoms dec jmp xor sub xchg fistp push push pop out mov jg dec bound sub xchg cli (bad) dec cli popf fwait leave ror ret repz jmp stc sub jae inc xchg (bad) push push push push (bad) dec in lods stos fildll fs fldl idivl mov loopne inc std fcoms sub mov xor push push add dec int3 lcall sub adc ja leave sbb leave ret daa clc and in les loope (bad) notl dec jle fidivrl jg or notl add sub or pop xor (bad) in sbb lret fcoml outsb mov mov das xor push or jne sbb (bad) push dec mov pop loopne mov sbb adc sub addr16 test out mov jae adc xor pop xchg push jne fbstp (bad) sub mov fnop mov xor and xchg pop mov (bad) jge scas sub std gs cmp icebp pop xchg xor and jg dec and cs jb mov mov push subl out adc jmp lock mov adc (bad) (bad) mov fstp cmp (bad) sub rcrl hlt mov mov (bad) jp sbb xchg imull incl xchg push push test icebp icebp cwtl cmp xor xchg jmp cmp mov sub lcall cli pushf out pop test loop (bad) mov pushl xchg dec or mov xor adc adc enter adc adc stc pop mov pushf pop push or lahf aam imul in movsl pop push sbb and out int3 xchg pop jp lret cmpb push mov scas mov sub or add aad dec pop push cli pop repz (bad) dec mov mov aam into add cmp inc and insl repnz pop adc adc popa inc xor jp mov stos les cmp test and je in dec jg in cltd nop adc jmp mov jp lcall pop mov sub int dec ds fnop daa mov imul (bad) cld iret pop cltd shr jno and sub ret call dec inc add sbb push pop and mov dec mov push cmp sub xlat hlt dec or add test xlat test and daa (bad) sub out xchg xchg mov fstpt lret cli and jl mov dec sbb dec fmul outsb cmp adc test inc or xlat push or repz (bad) mov sbb scas rorl inc stc mov sub roll add mov sub cmp lock in aad bound std in mov inc mov jge mov or sbb out das mov pop mov js or sbb and mov in add fmuls rorb jmp cwtl rorb mulb scas sti push or inc in or sbb xchg (bad) jle push mov iret outsb fstl rol and ds dec mov loopne xor sub pop int3 test ljmp mov jo dec push std addr16 mov pop jmp mov int and cltd inc cmp gs stos ficomp ret xor add stos and sti shrl push xchg (bad) out repnz jle dec ret inc dec aad cmp and mov jne pop mov cmp ret fnstcw imul cltd push pop cmpsl scas add (bad) xor pushl adc xor cmpsl adc leave jnp mov or xlat add sarb divb ret (bad) jae jge repz (bad) or ret lret push sub aas dec mov les fstpt pusha test add mov test shr mov leave add shr lret jno mov or stos clc out lret roll pop mov mov sti repnz xchg je mov outsl pushf push push and mov pop mov shll and push dec pop cld mov mov cmpl xlat jg fcomps pushf rsqrtps pop or stc sarl loope push mov xlat int3 cmp dec aas mov cmpsb (bad) xor pop jne fldt adc ret mov dec imulb adc sub mov xchg and mov sarl dec and push retw inc pushf sbb call pop mov aad inc xchg pop sbb jmp xchg (bad) ss pop mov test repnz jg sub ljmp das dec out pushf dec and and cmp jno lds cld mov cwtl out or adc outsl js es push sub mov pop mov mov mov mov fidivr fimul xchg outsb cli mov push popa (bad) mov lret and leave pop jno imul xchg dec inc adcb dec mov push cmpsl pop pop xor outsb mov push aad sarl out and dec mov mov in dec leave cmp mov dec int3 cmp negb lret es and clc rorb mov jmp cmc adc mov out jecxz mov repz push aad inc mul in ss daa fsubp orb xchg sub inc dec repnz test or or test mov push inc xchg hlt push adc std fcmovbe mov es mov pushf mov repz jb adc xlat and enter push sahf xor dec (bad) dec push cmp pop jmp cltd mov fisub addr16 ljmp push pop dec mov and mov push (bad) (bad) mov xor hlt mov sbb out jnp das xchg inc ret cmp dec pop lret shlb pop into push sub mov lods hlt (bad) stc (bad) xchg adc or and push pushl out flds cmp cmp incl pushf mov ss out cmp cli adc add mov jne movsb push mov es jp cs pop and (bad) ds cmpsl ret jg jno call (bad) imul imull sbb dec sti cld dec les jmp sarl mov jnp pop xchg scas ret rep subl cmp mov fldl scas adc push push sub sbb pop pusha add fstpt repz inc mov test or adcb jle int cld add mov xchg cwtl mov cmp mov into jnp int lds rcll cmp out in or lret inc and scas dec xchg test and (bad) out scas aas xor lock adc and hlt lahf (bad) in mulb jns jle enter xchg cmp popf addl jp arpl fs fnstenv add inc je lret scas push mov jne data16 cmpsb fisttpll test lret insl pop rorl xorl test sub pushl sbb or cmp addr16 je and ljmp dec mov pop sbb jbe jne rorl push add ds mov push inc jmp cmp xor lret xor xchg rcrb mov add out sub setbe jmp xchg insb push (bad) imul (bad) das int3 mov mov iret pop xchg pop ret sub mov cmp add imul ss sbbl cli dec clc shl sub sbb sbb gs (bad) and add or pop mov leave fldl add mov jbe xchg inc or icebp sub jge jge cmpsl enter in imul (bad) xlat jmp dec (bad) lret add jmp push push jle mov inc test pop dec push add push pop mov add pop mov mov xor mov mov mov imull inc (bad) lods movsb push ret sub imul and dec clc mov xchg pop out push push push pop push mov neg add jge lds aas ret sbb in pop fbstp movsl mov push pop push mov mov mov cmp daa push add push adcl push push push lret je into mov dec adc not add mov jb fiaddl rolb adc xchg call mov pop xor sub out subl outsl sahf sbb aam pop je mov jne mov (bad) dec push in sbb inc mov sbb mov push mov dec add popl mov mov inc frstor adc xlat daa mov or or leave pop imul (bad) push dec call mov testb movb negb stos sub (bad) stc push pop (bad) xchg outsb ja sbb inc fldl mov pop xchg call inc frstor enter lahf cmc std jnp push mov jle faddp out add imul mov and add add or add mov adc aas add push add pop push dec adc xchg notw pmaxsw mov sbb add jl ja mov out out insl jno mov mov pop pop pop mov repnz xchg mov pop (bad) stos ss arpl push push leave shlb outsb out dec icebp or cmp and push add pop mov jno or fsub or sub nop stc jge call sar push jnp xchg outsb lcall movsb sub sti outsb add add pop in adc pop ret adc add push out adcb mov (bad) sti inc ret push xlat cwtl outsl flds pop pop pop sub lock das jmp icebp stos jne call xchg push mov (bad) dec loop movsb les cwtl call add mov leave leave ja lock je roll (bad) jb sbbl (bad) sub dec xor popf push lds lret sub inc jnp sub cwtl sar mov xchg insb push lret lret and adc pop dec inc loope cmpsl pop fcompl jns xchg inc jno int xchg pusha sub pushl hlt jecxz pushf cmc mov push push pushf mov ljmp imul mov pop push xchg pop lret mov pop and mov adc jle xchg sub cli jmp ja fwait cmc push cwtl inc ljmp push sarl and sub sub fcompl xchg sub outsb (bad) sub sub stc jle movzwl xchg push sarl out lds sub frstor call flds daa cmc sbb pushf sbb (bad) pop sbb (bad) sarb sub test mov daa (bad) ljmp add scas xchg cli out es stos fs cld sub jl mov test pushf lahf int3 das jle notb add add (bad) cmp (bad) shlb sub repz mov or cwtl (bad) mov mov lcall sar cmp pop jns add loopne out mov fsubl movsl mov jno inc loop pop or and pop aas lods fstl mov mov sub iret and ljmp insb icebp in jbe xchg mov cli sarl pop sti sub icebp mov loop cmp ja movsb adc stos rorl mov fldt dec negl push icebp and rorb out das incb ja sbb rcr and inc pusha pop int3 cmp and negb dec repz popf cld mov (bad) sub xor inc movsb pop jno cs cmpsl (bad) cmpsb test imul lret gs mov div insb cmp or mov add jle icebp xor test lret sti sub lods cmp loop jae daa adc cwtl fs (bad) imul add jecxz fistp add jle push fdivr xchg outsb pop xchg dec add pop sbb sub andl rcr pop mov repnz jb push dec loope or int3 aad dec fdivrp ret xchg stos int3 add push mov (bad) cmc adc xchg pop lcall imul hlt sub inc cmp mov fs cmp cmp adc push out cmpsl test xor and lods ljmp stos out xchg inc (bad) or loop (bad) stc das xchg and push fwait mov mov push sub mov xchg mov fwait lahf ljmp movsb aas xor lds xlat xor pop or fldenv into lea sub xchg pop pushf pop mov shlb (bad) xchg imul js pop or pushl dec andl xchg and xor out inc push sbb loop xor mov push (bad) js sarl nop xchg dec mov dec pop les shrb jnp arpl dec pop loop xlat stos iret out mov hlt mov aaa jl das fadds pop mov dec icebp xlat aas int3 jmp xchg stc icebp scas pop xor jne ds mov sub ja jge inc daa lret in je insl lds fsubs xor mov jmp xor loope ds mov fstl (bad) mov inc push sub sbb push push jbe mul add iret and lea movb cmc stc jecxz xlat sbb negl mov stos xor mov and mov xlat dec cmp push sub and or jg xchg dec retw jne int jecxz jle and cmpsl cmp jp xor xor lahf push and mov fisubrl lret adc jl jmp push lret xor (bad) jl loop pop jns dec push into fiadd xchg sub stc mov mov sbb mov adc mov cmp (bad) into gs mov cmc fsubrp mov dec sarl add mov aaa adc xor and push add jns imul sbb push xchg out push repnz jne fs stos add inc loop push jge lods mov int3 sbb push cltd xchg fwait jmp mov rorl (bad) hlt movsl out (bad) inc repnz ljmp xor pushf add icebp adc inc mov mov xchg mov push mov dec mov rolb mov scas cltd dec add lret aad cli xor sbb mov jo popf cmp or sub xchg ret ret sub clc inc and push int3 jg mov (bad) xor cmpsb das mov (bad) or lock bound fcompl pop popf jnp jnp xor mov adc add mov pop ss pop roll repz adc shl sbbb jmp cltd push inc inc mov lods pop out mov cmp lret pop push xchg pushf add lret add std cmp sbb inc cmp xorb add sub out jae pop mov aas sub cld xchg outsb (bad) or cmp pop pop add ljmp fcomp jmp mov sbb add mov loop ds cld icebp push add mov cmp lahf pop xchg das movl leave lcall iret pushf jmp dec sub fstps mov mov addl adc popa cmpsb sub jg int mov rorb push test cmp xlat mov ret addl or imul push xor sub roll mov sbb (bad) in push dec jecxz add fwait loop xchg gs sub loopne mov cmp sub into inc xchg pop daa mov (bad) jb push negl popa xchg cmp push adc push test test stos sub xor stos jne xchg into add outsb gs incb addr16 (bad) cs jg dec mov mov testl subl cmp js lret and repz adc sti sub mov (bad) and sub out sbb mov pop and sti (bad) jmp and call cld in xor sub lahf fisubr inc pop xor pusha aad or sar xchg xor div out adc mov mov aad stos lock mov loop add insb repnz es mov aad mov add stos gs out imul stos fsincos jg ljmp inc shlb add add das sub nop jp sbb sbb add in sbb mov dec mov lea repz or sub in xchg int3 shl mov and xor sub and cmp xor or out push stc daa inc or cli xor scas mov cs and jle sahf add cmp adc aam push mull jmp sti dec mov dec xorb pop add fdivrl cwtl jmp stc into lret adcb mov sub jg test fldt incb sbbb jg fisubrl dec sbb fldcw push mov insb push ret repnz das add cmc mov testb (bad) adc mov stos mov or mov jns mov and push mov sub fmull leave les stos lahf (bad) mov lret and stos adc daa nop cwtl ds jl xlat sub gs ret inc mov add pop xchg (bad) cltd xchg shr sti or popf cltd enter pop (bad) pop lret push mov sub mov fldenv lcall dec pop push add add imul fsubrp ret hlt movsl fnsave ret xchg or shrl mov test ret lods push mov daa mov ja xor fiadd out sti pushf add mov and xor mov push out cmpsb jns fsubs inc ret ljmp sbb les pusha and iret decl or push xchg add outsb in or xor int3 sub xorl out cltd std outsb lods mov add sub mov mov repnz inc popf cld jno aas lret fbld out insl pop push push hlt cmp gs lods jnp and jecxz leave lret xchg xor loop int3 shr je ljmp and mov aaa xor pop adc push imul aaa and iret popf inc movsl or sub stc cmp (bad) mov adc xchg divb and cmp dec jecxz dec je cmpsb push and xor add enter push movsl pop adc mov adc movsb pop frstor and lods pop in in mov dec add stc jnp js xchg idivb push jnp imul fucomip adc pushl xchg or sub xor dec in mov sub mov gs sti pop jmp out add sbb mov mov cmp jo sbb inc dec jle push jb cmp jg scas test sub adc mov les mov sbb xor or sub mov push outsl aam inc fwait (bad) mov push jb or jl lods (bad) mov lahf mov loop jmp mov xor dec sbb js dec bound xchg decb pop or cmpsl or mov sub into mov ds repz into sub das fldl2t leave shrb mov and mov (bad) imulb adc sub fxtract out inc sub stc add add xchg cmc cmp sarl jecxz (bad) jge or push add out into xor pop jo add mov fimul (bad) aaa push sbb cmp mov (bad) outsb or int3 xchg mov or pop push mov inc or pushf xor fstpt ljmp fldcw and sub lret and std and nop lods lret ret inc repnz xor sti pop dec sub pop mov push rolb dec pop (bad) gs stos rep pop mov repnz pop cmp lea and pop cmpsl outsl adc or ret repnz icebp out and xor out pop sub (bad) repz rcrl and bound mull pushf mov sbb sbb xchg addr16 mov xor sahf xchg ret xor loop ja inc dec out or lret mov mov or fisttp mov jnp lods fwait mov sub enter fdiv rclb loop pop pop mov pop (bad) cmp fs cld xchg mov jp and push mov xor ret dec mov pop ss sbb int3 mov rorb or jg inc cmp jb sub push or mov in ds mov xor push cltd jle mov pop int3 iret xchg pushl add les xchg or xlat add dec and fiaddl mov adc sub xchg mov and ja jo xor je xchg shlb addb mov xor add popf cmpsb or adc jmp ja fwait cmpl test mov adc ja je pop loop out rcll movsl jmp out rcr cmpsl inc ret xor xor leave and sub lret jle daa ret push out cltd xchg aam sbb add roll loope loope xorl sti bound push dec lahf push inc dec xor jge and cs insb or jmp (bad) mulb push and xor xchg inc mov mov mov call and pushl sahf (bad) pop js sbb push or and js pop pop mov cmp xchg xchg clc mov push data16 inc test (bad) fwait ret xor add sub iret movsl lea mulps test out lret jne cmpl ret sub lds psrld ja in repz cmc mov (bad) clc daa add insb cmp lret add jge cltd and imul fidiv xchg sbb bound into std sbb stos ja mov sbb add icebp add xchg (bad) sti and out add pop sub pop ret add mov and or jne mov xor and stos sub add ja int3 aad pop (bad) xor xor (bad) jnp pop imul mov (bad) stc pop xor jle leave pop inc jg dec ret repnz pop jne mov push setl je dec ljmp (bad) cs mov (bad) mov mov ret fild jmp sbb loop xchg cmpsb (bad) add sbb lret mov lods out mov sbb das dec xor fsubr notl repz fisub incb loope (bad) pop xchg clc cld dec fimul sub addb sub shrb idivb pop fstpt loopne fbstp mov mov cmp mov pop in sub push gs and into leave movsb sub lds mov loop cmpsb jno loope mov xchg mov lds test adc pusha add jbe call (bad) mov inc and jmp fldcw mov or pop popf (bad) shll mov das test leave clc data16 out mov jg je int3 push dec lock adc sub scas outsb arpl das add xor cmp lahf decb daa add std adc or sub and push fnstenv lret data16 push cli push xor imul mov add xor push stos ret and adc xlat adc mov movsl mov sub sub cmc mov (bad) sbb xrelease dec cltd jno out pop xor mov and popf add mov and lret rorl pop movsb cmp std iret pop mov xchg dec and push jmp std mov xchg mov mov ja jl mov jb jp inc sahf sub dec cwtl push pop mov or icebp rolb fsubl sbb and outsb fnop sub imul gs jbe pop sub and or in (bad) je inc mov bound aam leave mov (bad) xor (bad) push dec pop add and in std fcmovb sub xor jp pop pop stos and lds mov mov in or pushf xchg outsb div xchg mov push mov fstpt fcmovnb sti or pop rolb sub and mov and inc add jl (bad) sub mov pop mov (bad) jmp inc add mov sub stc xlat mov cmp dec loop (bad) pop jmp mov inc fs lods pop jno test add test dec xchg xchg adc nop and (bad) sub mov xor cltd push outsl xor mov and or jmp and cli sub push lret xchg shr fcomp xchg fnstcw jl (bad) xor and cmp rorl jg jmp cmp pop cltd movsl add scas add cmp jmp int3 xchg cwtl test nop addr16 out int3 and add xchg jg xchg mov mov sti push mov leave fdivs lcall lea fisubr andl and lahf outsl aam inc ljmp es add out push cs les (bad) xor ja movsb lahf pop adc dec mov lea or out int jnp lahf test in lods jo fcomps add cmp loope insl pusha lret sub enter fucomip movsl xchg jne in (bad) xor cli cmp dec aas jns fsubs pop ret (bad) jp xchg mov push out sbb add gs dec stos adc adc ljmp sub mov dec addr16 inc and popf sbb sub cld mov fnstenv jg aas sub xchg stos popf cmpsl sub xchg adc cmp rorb add mov pop adc or and rclb imul movsl ljmp cld mov mov aam dec cmc add jbe pop or lret ret push movl popa sti add jl out mov nop test rcll ror cltd jbe mov shll cmp push push pushl ret aas aas sub stos test mov sbb into cmp jecxz aam or xor xor adc xchg xor sub js out inc popf jnp sub and xchg aam stos test mov sub and mov mov fcmovnb mov jns dec bound jle (bad) lret loop mov jmp xor ljmp rep pop cld fimull jno mov shll stc mov xlat pop mov jg (bad) leave popf pop lds xor fsubs jnp or xlat mov and xchg sub (bad) sub jbe mov repz mov jge imul movl xchg sub ret test insb cmp jo inc xor or jl cs shr mov dec mov cmc test mov sbb (bad) call jle pop sub xchg clc aaa je outsl shl or xor jo and icebp or fcom enter inc leave push add jmp sub aaa xchg mov stos lret lock repz sub add jmp orl or mov inc rorb jecxz sub mov sbb test mov mov cmp daa push ljmp mov stos cwtl lret mov int das call repz pop pop push arpl add dec dec inc leave cli in (bad) imul pop lcall mov (bad) int3 aaa and add cs mov mov sub daa cli stc jo mov pop cs les pop cmc lds les idiv lret lahf jl push repnz sub lds (bad) pop jbe pop add jbe or shrb dec scas push pop lock fscale loope sub hlt loope sub in fdivs stc (bad) sbb cs ljmp les jp xorb in cmpsb mov or sbb dec jbe pop icebp and jae jmp mov xor lret pop pop push mov mov xor pusha cmc out loop (bad) test jb push and adc pop inc adc outsb out pop pop lds stc int inc push (bad) dec cmp pop ss add cld mov jne (bad) pop adc test xor jno and sbbb and and sbb adc aaa lret fdivrs cmp sub imulb repz pop aad lods mov sub (bad) ljmp push arpl mov ljmp sub mov xor mov sub mov pop mov cmpsl bound ret pop cmp sub mov pop repz dec xchg das pop adc rolb mov push imul mov xor inc outsl popf jl das std xchg imul or fild fcmovnb repz xchg dec dec fstl cld jecxz push push or push xor and ja inc incb inc movsb pop mov sub mov push and and and loop and (bad) sbb sub and pop sub (bad) jg (bad) xchg repnz sub ret dec or movsb mov sub aam (bad) jmp out xchg dec dec icebp add lcall lods fist and js dec ret or sub out xchg ja sub push mov push pop adcb add dec rorl and (bad) push cmpsl dec dec xchg ja push mov inc mov nop xor cs repz das and aas lods inc pusha in daa push jmp movsl or lret mov dec lret mov (bad) cmp stos das loope cmp daa repz xlat imul xor xor data16 sbb jmp ror and pop fist sub shlb sti xchg ljmp cli xor sub aad das push hlt rcl repnz fistl addb xchg sti push in scas (bad) mov jg sub dec lret dec (bad) mov xchg (bad) fs ljmp loop (bad) add mov dec lcall pop insb xor leave xlat lret or xchg push iret pop fsubr xor leave push push addl cli lahf mov and gs mov cmp xor ds (bad) add pop and jo das ljmp ret push and mov sbb inc nop jno push in and mov jmp test and xchg sub dec test xor or ret negb mov sbb dec aad aaa scas jg fildl dec jmp sarb mov imul pop or sbb jmp jb or add push (bad) lods xchg pop les in pop loop hlt dec pop push pop sub fmull out push stc int xor ljmp (bad) fimul test ret pop add mov leave pop adc loop andl popa cmp jg mov in dec lret and add sub movzbl push and ficom xor shrb fidiv lret ret or add push ret push (bad) adc cmpsl shrb push mov sti mov dec cwtl jmp dec and fisubrl push add out lret ss adc add jmp daa movb sub mov outsb call test dec sub push or sbb push std stc push fstpt cmpsb aaa and adc pop mov xor adc mov mov add mov bound mov jg xchg jo xchg cmp daa xlat dec es movb mov lock popf cmp fist sub dec adc and sarb or repnz lcall test mov sbb sbb out mov test (bad) popf fisub sub pop add dec pop out jg and sahf cltd dec loope and pop test (bad) cmc repnz adc adc xchg clc nop cmp xor in subb xlat push int aas das into push (bad) aam cmp and jge mov mov clc mov fnstsw mov mov jb dec and inc pusha nop xchg mov (bad) mov xchg scas test lret mov call add rclb stos mov (bad) sti test mov xor cmp and ljmp dec clc xor js rcrl or (bad) mov (bad) mov dec imul mov add sbb or js or out mov add clc add ficoml gs pop sti fldenv mov lock shrl lcall lahf jle xchg add add and adc pop jns inc sub sub pop lds mov xor push xchg pop jmp pop into xor ja mov mov pop and stos or mov mov icebp xchg data16 daa xor jl sub sub sub repnz pop mov fbstp jmp ljmp push or adc pop push dec cltd xchg inc xor cs out in xor dec ret mov mov (bad) jbe cwtl nop hlt ds cmc shr sub or add mull xchg pop pop mov and mov iret insb adc (bad) in sub fldcw push mov mov mov movsl (bad) mov inc jo mov ret (bad) push cmp cmpsb push aas das (bad) jmp xor push icebp (bad) lcall jno and imul push rcl testl in mov or add push pop mov xchg xor subb cmp xor push add dec test mov cmp xor inc enter xlat aad or imul add cwtl repz mov adc mov jne (bad) xor repz dec xchg in dec pop sub fsubr xchg out mov pop shrl sarl test mov and mov int3 adc (bad) pop adc mov lret es sub (bad) cmc jns cmpsl ja push pop fbstp pop cs jb xchg imul cmp std (bad) jb and int fwait movsl jb,pn jmp cmp pop and xlat sbb sub clc cld lods xor in add lds imul lahf xor rcrb out sub mov add call (bad) insb mov sbb or mov mov pop and ret ja lahf popf adc sub or flds rcll movsl ffreep inc inc lret inc mov sub cmp adc jno push xchg push std cltd imul xchg (bad) dec or in aaa lods lcall xor or aas out imul add mov inc dec pop ficomp inc xor jge mov xor shll push mov sub pop mov repz jbe and adc mov xor sub cltd jecxz daa scas (bad) ja outsb pushf sub dec (bad) push cmc stos add loope scas sub push nop ret adc cltd cmc mov outsl jg lcall mov push ja fst movl cltd jne and test mov out repnz push icebp sub das cmp push or mov add xor pop push xchg sub jmp jno jmp xchg adc mov fsub loop push pop clc iret ljmp push pop push sub shrb movl inc ds push sub pop fistp das (bad) mov imul jnp pusha xchg push (bad) pop xor rolb scas jbe or in ljmp insl add insb or adc adc xchg mov pop mov jge and adc push push mov cli push nop mov pop sbb pusha scas jae jae xchg (bad) add and dec push ljmp push pop bound and adc mov leave out (bad) sub adcl mov ljmp scas sub lret lock inc imul pop add inc neg shl int3 call dec sahf or lcall sub je aas pop (bad) insb idivl pop dec lcall (bad) fistpll rcrl mov adc mov das ficom out lea push xor cmpsb add push pushf mov outsb iret pusha xor mov xchg xor xor cmp push sahf or fdiv jl push mov push mov or outsb jns push (bad) insb xchg mov (bad) cmp orl sbb mov daa lcall push orl or (bad) push in pop rolb xor sti jbe add fimull (bad) stos rorl xchg jecxz and lret xchg hlt pop xchg pop cmp or and mov dec fmuls popf je push xor popf nop xor icebp outsl ret stos adc pusha loope inc sub lods and je int sub shrl fwait into int xchg in daa out dec fsubs or stos mov out adc adc push decb mov push add test (bad) and (bad) xor mov loope out sub sub xor mov xchg out push pop mov add cmp or cwtl jg mov mov pop jns dec mul adc ljmp testb sti stos sub pop jns jbe inc push out mov rep inc xor and les cmpsb scas and xlat lock negl sar xor pop scas sub (bad) jg pop popf jg in aad inc jp dec iret mov repz scas test cmpsb push sbb das sub fld outsl in sti jecxz test test gs mov (bad) mov dec xlat fldcw mov ret inc dec cmp xor icebp jg sbb icebp and push insb in sbb mov sti jp xor (bad) and mov (bad) and xchg fild lods sbb mov sahf push sti int3 out sub and adc xchg fsubr pop pop mov stos mov or pusha mov iret xlat je mov aad jne add inc icebp outsl cmpsb test jecxz or sub cli int mov test mov adc mov dec das cmp daa or add jg sub (bad) xchg jge pushf ret mov lret cld inc (bad) loop (bad) or push xchg inc imul or xor dec xchg mov ret xor daa xor mov pop (bad) test dec lret pop ljmp loope jp adc testl xorl iret mov mov adc ljmp pop add mov inc gs sbb insb (bad) adc push lcall push add mov pop add les inc sub push mov sub out andb lds sti jbe loopne inc xor dec or push (bad) dec mov bound add gs or or push xchg adc mov or stos mov pop pop int sub sbb jmp or scas ret inc inc push pushf push add in outsl push (bad) xchg stos push adc js add jae sub xchg cmp inc sub add mov pop push cmp out jg xor pop ds xchg adcl push xor testl test xchg ret dec lods or inc adc mov shr cmp es mov not push push pop pop shr or nop lcall add sti (bad) xor ss stc sub aaa mov jno fistp sbb xchg mov sbb scas stc fisttp stos and test add pandn testl jmp shl push and mov xor adc ja negl mov dec xor pop push movsl add add lock jg adc cmc clc loopne inc sbb sbb push pop gs adc fmuls pop pop das (bad) out out mov push sub les pushf xchg push loopne mov dec imulb cmpsl scas pop or or cmpsl pop sub mov dec imul push hlt xchg jg pop mov xchg dec mov out call jnp add sub je inc in xchg pop (bad) fmull pushf enter leave mul loop add outsl xchg mov and leave jns pusha add and pop add sbb in ret push pop int3 arpl dec aaa mov sub xchg inc and pop xor fucomi out push lahf js enter xor or xchg cltd fidivrl cld sub mov pop nop fmull xor sub or ret mov pandn movsb mov sarl std scas sar daa ret inc jp (bad) mov sbb lahf into js add and mov (bad) jbe imul jb xor add sub movsb scas mov ret push add les (bad) or add and xchg fdivrs mov push mov mov out xlat xchg dec lret pop xor dec fild daa testl shrl jns inc ret fcoml ds cmp cwtl jbe or mov nop mov hlt ret stc and ljmp int3 loope adc cmp aaa mov testl xchg fisubl inc daa jbe call out dec mov imul out js sub xor mov pop ss add cmp in lock xchg xor out nop mov sub sbb in das fild dec lea or mov js xchg mov lret xchg dec test pop lock ret les add mov cwtl push xor cmpsb ja (bad) repz add cltd add sbb outsb mov das mov push mov push fstpl adc push in (bad) pop sub cmpsb in aam mov cs mull push or gs mov icebp pop inc xchg ret das inc dec jnp movsl std xchg icebp sub mov add out pop and lcall popf rclb mov imul fdivrl mov cmc lret inc mov out or loope addb in add (bad) or cs xchg jmp fadds (bad) dec adc scas and ffreep es jge xchg jg or jnp dec leave lahf inc das movsl shrb push inc clc lret mov (bad) stos push gs push pop inc out adcb mov cltd inc pop cs adc jnp and mov stc mov rclb (bad) sub stos into sub in test out lock dec and mov stc jae out aaa cli lret jmp pushf repnz mov sbb mov pusha cltd das and adc nop loope cmp arpl pop (bad) sub ret inc aas inc (bad) mov lcall mull (bad) jo push or push outsb mov aad or loop pop jae mov cmp add fstpl xor jmp ja xor es adc mov dec mov es aaa push ljmp popf xchg fadds or pop mov loop xchg push cmc mov sarl ljmp push dec mov ret sub pushf sub adc (bad) sub (bad) in loop and or push fsts hlt cmc outsb aad or fcoml and and or fdivl push lock xchg loope sub and enter rorb mov xlat xor ja roll shrl mov test sub fist shl jp mov cmp jae pop cs xor pop ljmp sbb jbe rcll wbinvd aam mov fstpl cltd ror jp and add fidivr (bad) ss sub mov sbb xor cwtl and jmp or pop adc outsl loop les fsubrs sub sbb jl pop iret mov xchg mov push loope or lret icebp insb dec mov mov or or ja jnp sbb inc popf dec push fstl mov xor enter addr16 dec xor sub or push out xor sti daa and fidivr aas ret and test and fnstcw cmp jo xchg dec sub ret and ret sub je and stos add bound jne sti out and push pushf gs out mov mov stos test mov sti lods push test mov jbe jg insb dec rorl rclb push movsl jae or stc aam fs xchg dec jg jmp flds mov in lods ds xor cmp xor lret popa lods call cmp push xor rclb subl xor sbb idiv in jmp (bad) lods pop push cltd jnp sub and mov cltd cmp mov adc cld (bad) xchg jg jge mov push jmp cli inc loop shlb mov dec mov rorb sub or and xchg rorl lcall xchg call movsb push stc stos mov push (bad) jb inc dec icebp jl adc sub enter aas std addr16 icebp sbb ja sbb lcall in pop das ljmp xor repz cld pop xchg cmp sub notl adc and or xchg inc lea lea scas fistpll lcall mov push jg mov add push roll fildll xor sub sub pop sub dec jmp dec pop arpl mov mul mov xchg pop pushf cmpsl add fs mov sbb (bad) in sub xchg mov xor sti mov (bad) in je repz sahf icebp inc sub xor int jg mov mov add (bad) xor rorb dec sbb xor lret sub jno cmpsl pop and ja arpl push lahf sti jb call inc mov scas test loop fbld push xchg (bad) das (bad) mov push xchg loop cmp cmc out mov shrb xchg dec daa cmp sbb cmc mov fdivl std cwtl cltd sub xchg adc loop cmp pop xchg dec push sub adc bswap sti mov iret sub in (bad) movsl out test dec sbb adc int3 and lahf bound sbb andl or mulb fs dec scas mov and mov pop flds or dec notb cmp cmp cmp pop rclb jne aam and sbb ret xor pop call dec mov roll dec xor wbinvd rorl adc sti mov dec cwtl inc lret daa or fildl sub xor mov mov rcll dec mov mov enter sbb adc icebp shll ret add (bad) fs sub mov data16 repz test test mov push inc mov call add add popf stos movsl xchg jno dec aad in lock sbb or stos sub sub xchg fstps jle (bad) jno add sbb enter push ljmp call mov inc lock jb pop push pop stc xchg (bad) iret push and repz scas mov out inc mov scas dec cmp hlt loopne rcl (bad) cmp addr16 mov (bad) pop mov repnz lcall (bad) inc mov mov sub das sub cmc mov rcll in sbb mov adc adc cmp sub adc mov mulb mov loopne (bad) pop jne cmp cli out and and xchg popa insl jmp out popf push bound mov andl pop dec add sub enter mov or mov add mov and jmp stc jp incb (bad) cmp push mov data16 mov aad (bad) mov test dec push dec fwait scas (bad) sbb pop (bad) stos repnz movsl fucomip call mov add jmp dec fildll shrb sub mov pop push mov mov ss pop mov sarb in sub xchg jae daa inc clc adc mov in lret sub and mov pop jne mov adc xor pop mov in (bad) jp vmovlps xor cltd gs and pop pushl les lods push xchg leave cmp mov movl mov aad push cmpsl pusha (bad) add mov and mov xor repz loopne negb (bad) mov or cmp neg mov stc mov lea cwtl leave push xchg push mov push call daa pop sbb mov xchg cmp push xchg push leave lret sbb nop pop pop cmp out lahf (bad) call pop mov daa sbb rcrb mov xchg xor clc mov push sub scas mov dec xor lcall stc rcrl lds stc push cwtl lods in and add cmc jno inc (bad) pusha outsb test das or ljmpw pop stos push jle pop jne iret mov enter into leave push mov repz sbb out in and sub push add pop dec sbb xchg (bad) jp ret fdivrl inc and lock icebp mov ret sti mov imul ret add jmp sub cmpb adc popf shrl je jmp insl dec fdivl bound add xchg les mov pop mov push arpl outsl and movsb into xor push lock icebp fs jmp sarb xchg cmpb and or movsb dec cwtl jne test dec fistpll int3 inc sub divb xchg inc jnp and add sub mov pop in sub sbb push out push xor (bad) add cltd push and popa int daa shr lods nop test cs lea pop cmc fsubrs out xchg lods xchg jns outsl push cwtl in jno add popa jg call mov loop aad out rcrb mov lock popf into inc leave and xor dec cmp daa mov jge loopne outsb mov or or add mov mov lret and add mov inc pushf in or mov fs fcom pop mov shlb (bad) jl ljmp cmc into jecxz inc adc or xor mov cmp push shrb xchg or jge xor push mov ljmp xchg mov pop add mov pop jne fidivr bound decl in and stos xchg stc push mov roll and xor jae or add fisttpll andl ds faddl add fadds mov xor xor scas fnstenv je sbb mov jmp inc cmp notb jne hlt inc aas jne (bad) (bad) sub test addr16 pop icebp add dec inc mov mov fcomip push push lods push mull push (bad) iret dec inc bound fadds adc shrl jmp mov fstps call dec mov out pop movb mov popf push mov xchg cmp (bad) mov mov loope cmp cmpsb pop pop les enter repz daa add call in ret sub cmp pop movsb jle sub stos leave or repnz xchg and sub mov adc pop mov les jecxz add sti frndint loop sbb xor jne xor mov push mov xchg loop push jns push cwtl or dec lret and or leave (bad) stos or jg in jno dec ja stos pop or (bad) clc pop lret mov or add xchg (bad) mov lret fdivr pop bound pop push mov add jae and dec out sub negl cmpsb dec mov inc xor bound inc enter sarl push xor and push std rclb (bad) mov pusha cmpsb mov sub lret cmovg in xor ja push xchg push adc inc js dec into out mov push or call stos fiaddl push pop imul sub cmpsl subl adc pop clc ss clc push adc pop repnz mov adc jge mov push ja and aaa out mov or jecxz,pt xor ficompl out ds dec out lods in popf lock clc movsl stos or loope repnz imull leave mov jecxz xor (bad) or outsb fsubrs repz dec xor cmc xchg dec pop sub or add in iret add xor lock cmpsl fsubrl pop (bad) repz mov jecxz adc rolb or push out mov lret mov repz or sbb jns adc pop xchg fidivr and lods mov xlat add sub bound shl add pop adc divb and es push and (bad) push lret pop inc ss mov jns fs sti mov out idivl mov push (bad) popf dec iret mov adcl dec fstpl out cld inc movsb adc out lret pop push stc inc fildll dec fildll dec pop dec mov xor sub add cmp negb adc lret pusha push push mov mov add pop je mov or inc sbb ss mov push push push push pop or jnp mov and not inc push jmp jmp push mov adc xor pop add test (bad) sbb lds int push in or mov scas and xchg fidivr fwait jmp adc scas int sub cmp shl pop mov mov cmpsb test orb (bad) mov arpl test ja add call popf cmp jnp iret mov or push data16 cmp pop push add push pop and nop mov lods scas dec iret or in jnp mov push or adc add in ds test lods (bad) scas sub or sub pop lods test das pushf (bad) push mov in std cmp sub add push sbb cs jnp enter pop mov insb xchg nop notl rolb xlat jo xor xchg xchg dec (bad) pop xchg dec es scas cmpsb fild add mov lahf outsb inc mov decl cmc add add and in andb pop push add je incl sbb neg (bad) fiadd pushl popf add pop sahf inc xchg into repz and lods ror xchg cmp faddl or push dec test sub xor or mov stc push or popf jns mov icebp insb nop dec (bad) call pop movsb (bad) xor pop xor loopne lds imul cmp mov xor xchg clc push movsl test cmp out in mov push or jecxz fdivr ret mov cmpsb jg test push lret pushf dec mov xor aad lea andl ret ds lock orl daa leave jne loopne xor fild adc ljmp inc dec dec int3 pop idivb test (bad) out mov jbe fmuls xlat rorl cwtl push pop xchg lds xchg ljmp test and pop cmc test xor sarb sar dec xchg mov xor ret ja sbb push and int3 mov hlt sub subb flds sti ret test sub or jns hlt adc gs aas test inc lahf insb mov lret lcall repnz cld pop cmp std pop movsl jg nop popl (bad) int push hlt lock negl rorl test jmp icebp ret jg jne jmp popf pop out inc lret sub popa add jo mov out mov shlb push subl aaa (bad) scas jge xlat inc xor clc or jmp popf fist xor cmp add out and and rcrb xchg insb aaa xchg jbe jns dec daa imul lock fs adc fnstenv arpl dec popa dec mov ficoml dec jle xor or cmp sub icebp jo add push jbe mov push jne out dec add pop fnsave xor loope fs aas mov fnstcw sub xor pop xchg cwtl lea and popa add or adc adc sub sub inc ficom xor add lcall sub mov loop ss fmulp jb dec pusha mov and adc pop xor xchg pop repnz shlb scas loop mov dec ja (bad) call lret cld in lods cltd dec xor bound dec adc inc mov xchg lret int das neg daa cmp or pop xor lret pop lret adc or icebp cmp sub rolb (bad) xor repnz dec out lret (bad) imul stos lea clc inc add cli mov das call ficom add cmp imul andb rcll mov adc negl jl push loope xor xchg das out jb (bad) std jno dec fwait daa out sub call jge out popf outsb popa mov das (bad) mov frstor pop inc push inc dec push pop inc cmp xor call jg push jg dec mov push adcb test popf loope imull sub cmp sar notl xor mov cs call inc add mov mov js dec and mov outsb mov sbb leave fiaddl xchg in push and mov jnp aam fs ret sbb add leave or cmc stc lods outsl lret add das rcrl add or or ljmp jmp hlt sub dec and or je adc or jbe mov daa outsb rorb (bad) jo or mov imulb adc mov sarb or inc xlat incb sbb adc or repnz sub jnp sub (bad) sti pop or cmp xor pop imul icebp daa js (bad) in (bad) imul and sub scas data16 lahf pop adc mov stc orl cwtl sbb pop mov nop dec jmp push pop int3 les dec lock pop pop nop mov add (bad) adc mov mov ja (bad) rcrl xlat in sbb loop adc cmp (bad) out dec sub sub push or jmp and out adc sub sahf xor push aam hlt lock pop mov sub mov repnz insb xchg mov or imul sub xor clc or lods pushf sub sub icebp imul mov pop jno arpl mov push les aas cmpsb jl out icebp add jmp or pop daa jmp (bad) mov std sub lods insb das sub push xor movlhps test adc adc mov aaa adc xchg add pop mov stc das stos sub das clc int3 fstl test shr or jmp pop out xchg aam sti mov gs pop or mov pop mov mov ret pop test hlt ret fcmovu push imul sub repz push xor test cmc or pop mov mov hlt decb xor stos lea icebp mov (bad) in push and jmp ljmp es push mov popf jbe cmpsl push push xor add ja pop mov sbb inc ret mov test fistpll into pop adc into dec dec mov mov cmp mov xchg mov mov decb pushl lret adc insb movsl jne popl push add or popf xor jmp adc loop fisubl or insl les pop mov imul insl rcr jp mov rcrl mov pop cmc cmp push dec adc enter mov in add ret jg mov jne pusha push add add inc dec and das add mov popf mov (bad) adc stos loop lds stc jne lods pushf xchg out push add inc add mov xchg mov inc lret pushf mov sub lret (bad) repz rcrl test cmp xchg ja shr pop cli adc sub mov lods cmpsb mov jecxz jge lods add shrb dec dec xchg and pop nop dec test push push decl mov xchg (bad) sti jecxz cmp daa out push mov and push sub jecxz adc adc cmp dec scas fldt push mov incb stc fs mov outsb mov xchg dec cs jno or dec add in leave sub fnstenv mov adc lret adc aaa sub sbb insb jae loope jb mov or and repnz cmpsl pop pop sarb out out add and sbb push stos je mov sbb daa repz dec aad js movsb (bad) movsl jg in pop xchg mov jbe fidivl ljmp data16 cmp jb push mov mov or fcomps lret pop mov and pop ret adc xchg push xor rcll pop mov pop popa daa jno xchg fsubrs (bad) cwtl mov pop testb rsm cmp dec popa xchg repz xchg fnstcw outsl dec or xchg subl xchg sbb lret and inc add loope insb and sti (bad) lds insb adc rclb add xchg mov cs xor add adc nop stos sub jnp mov (bad) mov mov cmpsb outsb inc lret (bad) call scas cmp sub xchg into jno imul sub jg pop (bad) ja (bad) cli mov (bad) insl lahf out mov dec add rcll or or sbb ja jmp das aas mov jmp dec pop jmp or cmpsl fist mov ss ret out mov mov dec call das xor jmp cmp pushf push mov outsl jmp jae sub add loop mov push scas pop out or cwtl leave sbb push jne (bad) (bad) lret sti popa (bad) sub jp ret push aas xchg push push sub fistpll cli rorb inc push cmp or xor es pop pop mov mov and fimul push pop xor xor lcall (bad) xchg lret mov mov push fist fcmovnb (bad) mov js loope in xchg popa (bad) or jg pop dec jecxz dec or fild dec icebp mov inc adc and xchg pop das dec test xor push mov lds xor lret and es cmp pop xor sti imul cmp fwait dec and xchg push ja mov (bad) loopne leave dec pop mov pop test mov xor sti imul sub test and mov jp jnp scas cltd pop sub (bad) xor mov sbb push xchg ja or mov cmp inc mov repz shlb sarl cmpsb ret imul fldenv fstpt cmpsb orl test cli xchg xor ds xor xchg jne lahf mov jmp dec dec scas and stc leave xchg scas cmp mov mov repz les jecxz daa sub das adc mov xchg inc in hlt movsl test xor inc stc xchg fnsave ret ret pop jmp xor xor add ljmp adc xlat inc push mov imul rol lods pop sub lds enter int data16 call (bad) (bad) jg and sub mov aad fucompp push shrl pop stos sub add imul mov jbe pop add or aam push ret pop add xor pop mov mov icebp fisubr mov adc push mov je mov stc sbb push jae test cwtl jae add pop out xchg aad std push out mov ljmp mul sub jno mov sbb add adc lret fsub sub dec mov dec imul rcrb fcmovbe xor mov cmpsl mov lock inc xchg jo dec iret notb cmp pop and fmuls mov in adc dec inc and jmp fbstp add ljmp and inc idivb add and popf loop incb ret mov mov ljmp fild xchg mov ss fiadd pop popa lds push jnp movsl jno leave mov sub insl mov mov cmp sub cwtl add fidivl push repnz popa push pop push jl out lret mov syscall sub mov out cmpsl inc dec aaa jp jnp jbe xchg cmp and clc adc ret fs xchg cmp push icebp (bad) sub xchg xchg dec ljmp rol (bad) (bad) cmp pushl add dec push out dec push mov add dec test push (bad) pop push es fisttpll in mov das jo mov les out mov pop (bad) out adc notb aas mov daa fistpll mov into aad and xchg sbb jl testl fnstenv mov mov aad dec iret ljmp jne lods call or or iret sub sub into mov pop adc repnz cli mov idivl xor addl aam cltd lahf mov sub push dec test flds mov push pop xchg lods fiaddl popf sbb push jmp add std imulb mov sbb idivb cmpsl pop test lret leave xchg mov sub fwait dec out jne imul jle jmp idivl or sub adc dec in je xor cmp mov lcall cmp sub add in nop imul jns mov cs xchg cmp or dec jmp push xor insb mov mov jmp jb gs mov mulb add adc jne adc adc and mov xchg fucomi mov aad imul sub jmp push sub xor cmc (bad) imull leave xchg mov shll pop mov ffree iret or jp sub xor aam in jmp cmpsl clc jbe jl loopne test xlat shr cmpsl test sub cmp xor fcomip sbb xchg push and dec icebp jno pop and rep sub outsl out cmp iret icebp pop or addr16 sub mov sbb lods iret mov mov shrb ljmp insb test aas sub mov jl push cmc icebp sub sub pop pop dec rorb idiv bnd jmp fwait mov decb mov repz push push pop sbb sbb inc stos mov mov in cltd dec loop jae out dec xor out test mov xchg push aam lods push sub dec and fcomps jmp xor push test add sti mov cmp sub bound mov fiaddl shr daa mov imul pop outsb cmc xchg mov fsts mov and sub and xor mov mov mov (bad) jmp adc stos lock add out insl and mov clc adc ret scas (bad) or or mulb fs adc pop std ljmp pop leave aas in test repnz test cmpsl test cmp shr push insb mov lcall scas mov sub cmp scas cmp and ljmp pop push sbb cs lds push cmc cmp adc aam xor scas std and dec xor aas (bad) flds jecxz lock push out and hlt sarl mov push aam adc scas cmpsb push push sbb nop pop rol xchg shlb adc mov (bad) xor and add jmp and xor sub sti or mov clc dec mov call iret dec sub cmp or mov jns mov jg nop das out and mov pop out cmp iret stc push jbe cld pop mov push scas mov pop icebp xor rorl cmc cmp movl leave jmp pop loope xlat sub scas daa (bad) or or ret mov inc mov push inc lahf lret mov (bad) ret data16 mov pop sti xor fisttp cmp ds pushf in pop mov dec cmp jb add fisub ficoml mov loope or mov xlat lock imul popa scas xchg cltd insb fnstenv mov mov xor (bad) insl pop or mov movsb sti xor cmpsl ficomp mov jo pop pop mov mov push mov add mov jg xor jb (bad) adc jg sub popa les test or data16 or scas fnstenv in clc nop rcrl cltd mov scas loope dec lds push shlb add inc mov (bad) fisttpl (bad) jg push pop sbb rorl dec scas fsubs cmpsb les icebp aad add dec mov jnp out push repz jmp cwtl mov lahf pop hlt (bad) divb adc sub push fisttpl push rorl fnsave sar jg adc dec sub icebp sub popa jo in jnp push rol sbb clc gs push mov jns out push mov xor in jmp daa mov cli fisttp lahf or cli loopne xor out sub popf mov push add pop mov nop lods xchg mov xchg stc jnp scas lcall or frstor jmp iret mov mov sbb ja (bad) and jl pop loopne outsl mov (bad) sbb out xchg (bad) pop push jne in xor dec std xor (bad) sbb cmp out ret stc (bad) mov push imul imulb jns dec ja pusha ljmp dec sub gs mov inc call cmpsb xchg xchg xor xchg loopne pop ljmp aaa mov stos push lods daa sti std (bad) xchg xchg je adc sbbb lods pop adc (bad) pop pop push clc rcl jo or lret xor mov mov inc lahf and cmp dec scas cwtl add cltd dec sahf out or inc je out loop or jno mov outsb das mov out out pop adc pop push mov mov jbe fsts adc scas mov leave ret std push aaa sub fidiv jmp cld ds ja push adc pop sub ret in gs pop xor pop or jl fnstcw xor pusha testl cmp sub pop push fsubs dec stos pop jae or add jg add mov mov pop jecxz pop mov mov sarl jo or cmp repnz (bad) mov adc dec loop in jo lret (bad) frstor das out sub inc mov xchg (bad) dec adc call jmp mov ror stos pop adc inc es bound into and scas sub sarb pop out cltd cmp test xchg rol mov mov xor inc loope and movsb xorl aaa out mov xchg fisubl xorl or and sub cmp pop sub xchg adc cmp aas ret pop adc dec subl das ljmp fildll (bad) xor mov sub int3 (bad) lods sbb pop iret sub sarl imul cld fistl or sub xor int lret fs test in aam mov dec lret dec test cs push (bad) je scas popf shrl xor aad dec movsb cmpsb shlb add push push pop mov hlt jp cmpsl mov mov pop jecxz jge adc mov jb jne test mov pusha dec movsb pop dec daa cs mov mov lods add and movsb jmp mov std (bad) xchg scas fs mov cs imul das mov mov fucomi xor ficomp stos sub cmp pushl add inc pop add dec adc xor push add and jecxz,pt rolb add addl lock outsl mov cmp mov or pop pop std push testb popa mov sub xchg negb push sbb push mov repz xor push dec adc out push inc xchg or (bad) imul lret xchg add mov jge push pop scas aam sub or add push mov imul push addl add add not adcb xor push sahf popa (bad) pop push inc popa or in cli pop repz xchg push sub popa adc aas mov jnp push pop push das in xlat cmpb rcrb or pop sub xor mov (bad) add push test je push dec or rcl mov out dec and xchg leave push les adc daa jno dec push xor clc pop sub repz sbb lret stos sub jl ret mov jno dec push lcall cltd adc fucomp jnp pop adc jb fldl sub dec sub sub mov rdtsc add out (bad) push fwait jbe push andl xchg loope ss push sti sub leave aad repz mov in andb add iret mov stos mov out mov aas jmp pop add mov fldcw sub stos cltd pop aas and inc jl pop data16 or (bad) and and xor jns addl sub (bad) and ds popa aad enter in dec daa inc rcrl add jp ljmp bound out ja in lods xchg setge or sub jecxz in mov loope sbb jg or imul add mov push repz mov lock imul bound iret jg and mov cmp jmp imul mov mov cmpsb mov std xchg test sub repnz xchg les push mov cli and flds xor xor xchg adc imul std dec mov push leave shlb mov loope aad and mov mov (bad) mov lahf (bad) (bad) mov pop mov adc xchg je sarb lods mov mov cli leave push adc icebp icebp or out sahf sbb les sbb (bad) lods sbb shr aad stos adc mov inc rclb jmp mov sub or mov mov std rcl pop or das loop fistp mov das out push sbb sub ficompl push cltd sarb cs or in pop (bad) out in stc mov imulb mov (bad) mov dec xor add mov mov mov test mov xchg stc iret push fldt add inc bound and stos int3 pop adc iret or jg pop pop (bad) sti sub jmp fistpl sub cmp lods fist xchg out sub xor mov popa push js pop xchg cld and (bad) fs jmp daa ljmp lods sbb lods into out mov xchg adc mov xchg sub mov sub jl pop and mov push out in mov nop pop xor imulb jp mov ds cmp and mov aaa pop sub pushf mov (bad) adc mov xor subb push sub adc xchg stos lret pop loope lret je fwait dec popf popa mov pop xor dec sub aad icebp sub cmc sub inc ja stc xor (bad) neg (bad) fild pop rclb fbstp cs mov fdivs lret pop and pop iret lahf cld mov iret adc (bad) mov mov out dec cwtl fcomp popf sti jg shr ss mov je pop fucomip pop stc jb xchg or mov mov lcall mov pop push nop xchg mov or xchg movsb adc add cmp ja sub push sti cmpsl out mov or imull add adc sbb popf sbb add dec sbb dec in add pop popf cltd outsl in mov push ret xchg mov adc xor jbe negl dec les pop scas fisttpl and cmc mov call xchg adc and adc xor add mov adc sub fs mov nop pop xchg jmp mov pop xor out dec movsl mov pushf rorl (bad) fiadd jns mov inc mov mov out sub xchg dec push out mov cmp popa or pop add lock xchg ja sti stc mov repnz (bad) in ret push pop pop addr16 fidivrl cs push ffree test sub xor out and xchg fistp adc ds (bad) mov icebp sbb jnp pop cmp movsl pop mov hlt out add aas fbstp lahf ljmp dec pushf test sbb scas or outsl add out scas jb lret loop cld inc xchg dec add inc movsb mov dec (bad) pushf dec and push dec and adc jmp int3 cmp add push mov sub ret je pop push test and sub and mov rcr lods push shrl in pusha xchg mov cmp push pop movsl std adc xchg jns inc icebp mov mov mov adc pop repnz shr mov (bad) adc dec movsb scas test mov test add mov (bad) dec setle mov fisttp add leave ja sahf fdivr or (bad) xor fldenv repnz mov insl or fsubs loopne fdivrl pop stc lret mov xchg (bad) or or sbb dec ret dec cltd cmp popa jmp sbb cmpsl inc jle and mov in pushf lds rcll sti loop (bad) je jecxz jle mov imul fcoml add jmp adc push inc jl push jl,pt cmpsl clc inc aaa ficoml inc enter xor pop or jno cmp cld sub add mov pop rorl lods push test (bad) sar mov sub lret or mov jecxz bound sti (bad) ds xlat dec mov fist test mov inc scas icebp push test ljmp push notb add adc inc or mov adc stc int3 mov lcall cmp call dec bound or out clc sahf mov je out lods jmp mov mov arpl and dec popa pop lods je jg (bad) mov cmpsb lds cmp push pop xchg lret xor (bad) cmp sub push sub mov inc inc xchg sub sub xor cli cwtl mov inc and out data16 nop dec imul mov jae and cli daa jmp sbb dec (bad) mov sti sub notb add outsb cli cmpsb push jg ljmp and mov add clc lock lods mov pop mov aad jnp or or jp pextrw xor popf cmp inc ret dec mov fstpt mov pushf adc out mov lret sub sub rorl lds pop out cmpsl sti pop icebp and mov leave pushl and dec popa fildll fidivr popf mov ret xchg rcpps or adc scas sar (bad) inc or out dec lods push sti popa dec inc add out mov dec jmp das mov leave ret adc push add pop fldcw incb xlat (bad) adc sbb mov add lods push leave (bad) pop adcl (bad) or insl sahf dec add add mov mov arpl (bad) es xor imul xchg (bad) aad inc lcall mov das sub scas sub and fstps int lods dec jp sbb mov rorb (bad) cltd jae lret (bad) mov mov pop jb mov das push stc imul xchg cwtl mov shlb mov jbe sbb jb xchg pop jno dec movsb add push stos mov inc (bad) mov mov fnstsw xor xor xor data16 das imul jnp repnz clc xor loop sub mov and cmp adc daa (bad) xor xchg repnz (bad) idivb in cs sub mov push jno sub cmp sub lret add mov jb xlat movsl scas jne mov pop lcall xor add daa repnz mov pop imul rclb push out cmp test mov xchg pop repnz (bad) std (bad) or sarb aas mov fbld mov sub cmc movsb mov lret inc push stc out cmp sub dec xchg les gs sti mov fwait sbb lds aad sub leave jg fistp iret out sub rcrl out add mov clc pop lock dec inc xor leave sbb jne ljmp pop lret cmp das jnp cmpsb scas mov cmpsb (bad) icebp mov imul test scas sub and sub or push push mov sub into std dec leave fs pushf push into in sub cmpsb (bad) mov xchg mov lahf std sub sub (bad) mov loopne or into test notl dec pop lea mov hlt fdivs push pusha mov adc xchg xor imul add xchg lret pop xchg xchg pop adc je mov in jge mov jbe pop jl ret jo add cltd push mov mov push orl xor sbb sbb out pop ja or sbb scas call pusha cmp insb cld in xchg repz and sub or test in mov repnz lret data16 andb cmp pop sub add fs cltd outsb popa add idiv inc dec dec push xchg inc stos dec fnstenv xchg cmc adc cli hlt (bad) arpl mov repz xchg inc aas mov mov stos mov pop xor data16 ja jle adc xor sbbl lock stc xchg test xchg insb imul xchg and and mov push pop mov dec sub dec mov ja jns add mov jge test sub and adc icebp push (bad) sbb das lret pop mov cmp lret lahf rcll sahf adc sub sti cmpb data16 ficom ret lods pop dec mov ljmp hlt or dec je cmc mov mov push std dec dec xchg in (bad) jno add cmp sub pop sub add repz loope lods inc mov (bad) ljmp stos sub scas adc in push roll pop out fs icebp cli dec data16 mov popa xor xor pop loope jmp jno (bad) xor in divb fadds adc lea subl cmp xlat inc cltd adc adc aaa scas and adc and shrl loop stc aaa xchg mov stos cmp xchg xchg (bad) cmpsl pusha xor mov pop sarb rcrl add cmp aaa loope int3 xlat rep mov or mov mov push das mov lods pop mov into dec idivl xchg mov pxor das dec xchg pop cmpsl jbe and je pop shl loope adc stc loopne rcll fnstcw xchg cmp dec xor adc cwtl das rcll dec ljmp jno dec mov loop sbb mov iret mov mov neg xor into in mov sarl test test aad jg sbb mov imul (bad) sub xchg jmp cmp mov sub pusha mov fdivl xchg or icebp xchg enter or sbb sahf repz push or aaa (bad) and jnp and or nop lret (bad) push push sbb fild dec mov jecxz push and pop mov js sub sbb repz ljmp cmp jo ss mov and add cmp lahf mov not enter xor xor pop bound mulb mov lahf in outsb push mov (bad) mov dec mov setl dec (bad) xor icebp test lcall subl add mov mov pop je fimul rcll push sbb popl jp mov sbb ss out inc or sahf inc pop aam sub in in or push cmc emms cli push cld mov pop mov add mov cld jl dec pop pusha inc scas (bad) adc enter xchg test or icebp pop movsb das jmp jg jno push push aas jmp dec mov into (bad) pop lret loop subl lds jbe cmc das loopne sti adc pop mov mov roll add mov stos push pop lock mov inc dec pop cli je adc dec lods inc xchg mov (bad) push sub jae inc xor jb pop inc sti pop fidivrl or cmpsb pop jp movl shr add sub mov mov sbb lcall or js sti ja cli or adc inc setp fiaddl xor (bad) and adc add movb cmc int add jmp ror ficompl shrl neg (bad) add inc hlt adc gs xchg out lret mov push movsb (bad) push jmp int3 inc loope pop rorl sbb std aas jg add xor jne test andl roll mov cmpsl add push mov push repnz add js (bad) dec jg add push cmp out (bad) roll add jmp stos (bad) cmc push mov cltd xchg lret jp and shlb dec jmp (bad) or fsubs mov or push xchg jne fnstsw jl and push pmulhuw mov cmc scas in sub add or xor xlat push pop cmp or adc arpl jg (bad) push and lods jle in ljmp pop sub daa out xlat adc xchg push xor and idivl xchg xor mov inc popf pop xor dec mov stc cltd (bad) iret pop inc out sbb dec push xor lea cmp mov xchg pop xor or cmp xor (bad) xchg iret mov sbb out out sub inc (bad) xor loopne xlat mov jo mov push ljmp pop and call cmpsl lret cmp jge je or mov and test ror mov pop rolb fisub mov push sub ficom loopne fnstcw sti inc or push xor mul mov xor xchg int3 stos daa (bad) or dec push sbb movsl imul es cwtl popf xor push ret xor mov out nop insb xchg sarb (bad) cmp mov cmpsb shrb out pop and or mov and mov jo add or pop xor push mov mov lret rolb push pop push loopne pop add (bad) mov negl xor pop or xchg mov scas sub add jns adc mov call mov jecxz cmp mov jmp sbb cltd xor mov push adc push lods push iret sub fadds sub mov jle inc or (bad) int3 push mov and mov add in rol add and cmp or add ja fwait pop aas or ljmp out mov or pushf push (bad) mov loopne inc add mov jns leave std dec pop arpl sbb lret subb fisubrl inc ror repnz gs out cmp jge dec scas cmp sub mov adc jl movsl jl popa pop mov rclb add aam inc pop scas jecxz jle and stos ret jle pop push xor ja jle arpl mov ficomp inc imul or adc pop lea lahf imul cmpb jns lods insl in xchg jb mov jmp pop xchg scas in or cmc add adc ljmp mov (bad) push movups test or or hlt inc jb mov int3 push inc fldenv fsub push mov jg mov pop and lahf xor add rorl fidivl jle push out push xchg insl sub nop lea jmp xor das fiaddl pop jo ja sti lock xchg pop sub and pop xchg mov movsb clc sbb sub int fdivr mov cltd sbb mov (bad) xor add cmp adc adc lret xchg bound (bad) dec lret lock jp shr repnz push jno adc out or and lret sub mov mov sub dec fld mov xchg push lea fs adc out rorb decb cmp iret iret scas xlat cmp mov inc jne (bad) mov imul push es and movsl (bad) sbb lods or mov jge ljmp cmp or rorb out sub sub cltd xchg or sbb sub (bad) adc addb test mov push rolb xor xchg sbb out xchg bnd sarb or dec shll stc mov pop mov (bad) test imul pop inc sub mov ljmp int3 daa or ret cmp lea mov sbb test shr xchg or xor inc jge (bad) jae adc decb repnz push stos mov daa aaa hlt mov sbb mov loopne and (bad) insb jmp lods int pop mov in ret push inc mov insb jge rcrb mov xlat lahf jle iret shrl sub enter lret mov lock sahf sbb movb xlat scas (bad) jl les sub sub or pop pop iret (bad) or mov sub or fstl ret bound mov xor lods in fbld (bad) lret jg dec sub or pop push push clc bound fidivrl pop or inc mov cmp pop pushf in mov fidivr push mov ds insb fnstsw in mov nop sti jg pop inc and ljmp sti pop inc in push mov dec (bad) stc xchg sub fdivrs std out or gs dec jo xchg or shr mov inc movsl scas bound lds leave cwtl imull pop push imul (bad) lock lods sub popf mov pop xor add rclb jne es jnp add dec push add push push push push aas mov mov ljmp lret lcall jmp ret mov dec push xchg and pop hlt addb jns aas push push mov lods xor cs aas xchg rcr sbb sub cli (bad) xor add pop inc dec fsubp add xor pop push mov and jb or cli pop add lods imul leave lahf inc ja add jmp jnp aaa add std dec jg inc shlb mov pop sub push out sub int3 adc sub imul aas fisub loope push xchg jg dec and sub test or sub pushw aas cwtl enter addr16 (bad) testl shr inc mov daa ret or aam (bad) jne pop orb sbb pop js dec out sbb add (bad) test scas add dec cwtl sbb jle shl sbb or movlps mov adc pusha lcall stc push dec pop decl les and sbb inc mov and shr cmc insb jbe or enter shlb or mov ret xchg mov mov ljmp add sbb push iret mov lcall pop xor lret fistpl mov mov lock pop or pop add ret cmp rcr cmp sbb xor nop pop mov popa or sub push add mov cmp add mov fstpl pop add sub (bad) xor ljmp xchg inc ret pop aam push repnz scas js repz cmp sub jg dec mov fcmovne popf bound cmp and jg pushl popf int3 add mov stos adc push movsb out cltd push jle imul xchg add daa adc cmp movsl cli repz sub daa jno insl pop aas test movsl stos xor fstpt test mov movsb into and ret jl bound enter (bad) mov adc outsb mov xor mov scas lret ljmp repnz push in pop pop imul cli mov hlt push lret cltd scas repnz push rcll jecxz pop lods sub cmp leave or js js mov push mov mov xlat mov push lods push es jg sbb iret and fild jmp cli test fistpll mov test es ja and repnz xor pop sbb or push mov fldt icebp (bad) jo jl imul sub jg push pushf js mov mov mov inc test movsb or or data16 sahf pop mov or push add jmp fldt adc inc out and xor enter or addl mov and mov out lahf rcrb scas jg je mov test push sti out push add xor stos mov dec mov es cmp pop es aaa and xchg in mov mov jnp (bad) pop xor decb test dec clc out pop out sub addr16 stos cmpsb pushf pop mov cmpsb push jmp jl test ret pop pop ret dec push or (bad) lock sbb sbb cmpsl icebp jg push or mov fs rcrb pop adc stc imul sti dec jmp sbb shrl adc ret (bad) mov pop sti addl dec mov mov jo and and hlt fldenv jo sbb pop pop icebp pusha dec frstor cmpsl aam popa roll iret xor inc sbb pop mov sub (bad) and and sub mov add cmc (bad) jmp pop pop adc adc mov fnsave outsl or out inc fidivr xlat clc (bad) xchg enter pop inc imul push xchg jb mov sti mov das out xor mov clc mov (bad) repnz adc and cli sub cwtl mov and mov scas adc addr16 inc jae pop add lods movsl xchg xor in jbe subl ja daa loop adc mov cli ds sub sub (bad) in and subb fdivrs mov pop pop fistpll mov xor (bad) pop das lods dec sti and jecxz je ljmp xchg popa pusha or mov xchg pop clc arpl (bad) xor push mov push fdivrs (bad) fsubl mov cmpl pop mov push add mov add pop push mov loope rcrl fdivl in sub outsl nop or pop push ljmp mov movsb or addr16 add jmp push mov jnp dec sub mov (bad) pop add loope inc or push test pushf in roll mov ja sub ret push push mov sub pop hlt nop adc ljmp aas das (bad) pop dec xchg mov dec ss add fidivr in ret aaa cwtl test dec pop out add push add sti fstpt pop add cltd repz je push xor cmp mov mov sbb ret push push andb je lds fprem1 adc outsb push or or add push xor outsl add das jmp hlt out push idivl aas push jl (bad) movsl daa jbe orb bound pop ret adc sub pushf mov outsl push mov testb cltd fs adc nop add (bad) shrl mov push push mov jge out add sbb sbb sbb sub inc out or and add xchg push outsb je push mov int and inc push jo jp imul and adc shr mov xor dec lods (bad) mov pop mov mov dec cld or xor and add lds or xchg mov inc out xchg mov inc testl add std and pop pop mov push or ret push mull pop adc cmp cmp add jmp sub loop jno fs sub push fsubs (bad) mov sub push dec ljmp addr16 into dec inc mov xchg jmp mov xor inc dec and jmp ja (bad) ret std or in jns dec xlat out adc inc dec mov leave into popf clc jmp addr16 pop or in jae xor mov mov push gs cmp or into ret cmp call xor mov mov dec test xchg push jle or (bad) mov vmovntps sub (bad) mov stos into adc fdivs add push sub mov jbe xor imul add cmp imul cmpl loop rorl push shl aam sbb shrb movzbl xchg sti int3 mov loop fcmovu js mov mov lea xor fnsave js pusha and ret inc pop or ret push ss sbb cmp and ss hlt push or xchg push out jbe xchg int3 int jg cmp inc and inc cwtl ret fs call movsl out movsl out les cld sbb stos insl and inc out inc aad pop sub cmp int mov in push jmp (bad) notl add repnz inc (bad) mov rorl leave stc push repnz ret sub (bad) nop outsb mov jae sub fs xchg and push (bad) cld sub (bad) (bad) int cmp jle inc jb adc lods xor mov and mulb sbb movsl std cwtl mov xor stos mov dec out xor test jecxz pop jb xor cmp mov add adc out mov xchg and push dec jl xor cld jecxz sub les rol int3 and mov sub xchg mov fisubr into pop in pop xlat pop out gs fnsave add pop inc sbb and repnz repnz xchg out sub movb in sub fist scas pop xchg and pop cli stc sub clc fs test push jecxz sub push cmp das fstps in xchg fist aad lock and scas or (bad) iret cli in mov cmp fsubs xor das fs adc into sub notl inc jb jnp mull mov sbb add adc in sub pop xchg jg inc rorb lret bnd xor clc jns loop std mov and cmp adc jg aas add pop lods lea into add mov idivb mov in cs jmp jmp add (bad) adc sbb sub adc js xor (bad) mov pop cmp or jne cwtl subb mov ret dec fmuls push fwait out dec int3 pop ljmp leave ret ret push mov sub or dec movsb pop and sub (bad) fstl sub aaa leave sarl cld in in or leave mov add add mov pop iret iret mov xchg ljmp mov (bad) pop jecxz pop mov out cmp push mov inc ljmp ljmp (bad) fucomi jne sub push xor add mov out fimul inc (bad) not les jne push fs sub xor (bad) cmpsb dec icebp inc fimul sub sub into and addr16 bound (bad) int3 xorl sub and lock mov jno cli divb or and xlat out data16 inc lahf mov je arpl or fs pop imul clc scas pop mov ja lret (bad) dec lret call sub and inc fs pushf xchg out cmp dec das cmpsl dec pop xor ret std stc add scas gs jno xchg movb mov scas adc mov mov bound push jo (bad) mov xor les sub pop mov roll inc add dec les add sarb lcall adc xor iret cmp sub ret mov pop mov cli aaa lahf add insb jno cmp mov sbb or jmp add (bad) call add bound lock scas enter pop or out fs testl and lea push dec mov cmp mov mov rcl pop mov mov imull test xlat inc sbb into cltd push cli fbstp dec movsb repz push incl push jmp loopne icebp cmp jne mov xchg push ja and loop jecxz idiv push xor xor mov xchg loop xchg mov loopne and je (bad) ljmp ret jo or sub jmp (bad) pop cmp add or sub (bad) and or xchg data16 cmpb rorb das mov xchg mov lahf xchg sub (bad) lods lods imul push push xor lds loope popa imull idivb in push (bad) (bad) cmp adc movsl mov icebp addr16 (bad) sub pop enter out adc mov mov mov out bound iret incl daa (bad) clc imul fbld in loope,pn cs negb int3 jmp dec xor sbb mov shl push int3 dec stos jb lret pop dec icebp mov outsb mov push jmp gs xchg jmp adc push cmp add or push pushf mov sbb dec flds push sub xchg xor mov and mov enter dec mov pushf jns lods push dec jl pop ret out adc mov dec mov aas pushf mov rolb rorl stc jmp test pop (bad) mov jno sahf pop fcomip in ret sbb (bad) or xchg cmpsb cmpsl mov mov pop xchg xlat xchg insb mov lahf xchg std cmp xor jae xor jmp push insb inc popf repnz push mov pop dec mov and (bad) add movb fildll into ds sti lret shrl mov add inc dec fbld jno and cmp push or fsubrs int3 xlat or mov loope lds sti mov bound divl out jb dec (bad) (bad) (bad) loop push mov out jge (bad) mov inc js mov out popf dec mov sub std ds jo loope ss adc mov pop es cmp repz sub or sub add xchg jle push and mov stos mov add js cltd into pusha sub xor mov mov stc xchg dec push dec dec (bad) jge stos leave sbb pop push sub pushf loop or clc cmp mov fldl bswap repz push xor inc lahf rcl scas jo cmpsl sub sub pop push cwtl arpl xor jge inc xchg push stos dec adc xor dec pop aaa insb adc sarl pop repz push xchg mov cmpsl cs jbe jl sub pusha cmpsb repz xchg cwtl test jmp popl xor test sbb cmp cmp add dec add test inc into popf insb aam stc add fistp punpckhwd (bad) out les ss push sub pop aam jecxz add add add sub cmp leave and sti int xor add sub mov fs inc add (bad) jmp out dec enter pop add sti jmp arpl test sub xchg scas cmp add xor cmpsl dec ret mov xchg xor (bad) rcrb jmp sub mov jmp into ljmp icebp scas add call and stc adc mov mov mov scas ret sub adc or mov pop xchg (bad) mov gs xor mov outsl in (bad) movsb mov dec lcall inc mov adc jmp in jne add and outsb push or leave out in xchg movsb mov cmp and push inc xor lcall sti das cmc mov xor dec xorl fstl jbe mov sarb nop (bad) in in out cmpsl dec add arpl mov pop pop dec sub pop into xchg jg test and mov (bad) jbe mov (bad) mov fild inc (bad) int3 pop or cmc jae inc inc rcr cmp push pop xor int ja cmp aaa pushf mov mov mov ficomp leave (bad) jne and fdivrs xchg lret out xor in stc or sub cli jmp xchg jns (bad) jp ljmp daa mov push rcrl pop ficoml rorb lret sub jns shrl aas sub dec xchg iret mov jno das repz xchg jno cld aad inc dec rcrl leave jmp mov iret mov into xlat sti xchg and adc pop dec (bad) dec lcall xor xlat stc mov lcall and sbb mov into mov push mov mov mov push (bad) push push push stc mov in mov add sub dec mov jbe sub popf push imul xor (bad) pop aam leave jg sub or loop lcall dec xchg popa lret xor add ljmp mov or lds fs out sub clc xor xchg notl cwtl cmp xor mov rorl jb div push lods dec aam xchg mov jecxz add push hlt popf dec add and mov ja movsb cs aas out push or out pushf inc imul in sub jge jle iret mov xor and add and inc and movsl stos cmp imul and fbstp dec enter in ds leave sub mov xchg out ret add clc scas test in mov cs sub jg das lret jbe push jmp xchg pop in lods push pop push ljmp lret ret std mov sbb sahf inc mov mov cld jno pop sbb leave or push pop test cmp mov stc out aaa jae xchg push in (bad) addb (bad) sub roll add scas fsubs mov orb xchg pusha sub mov xchg int3 aas jl pop xor push bound fwait sub cltd mov test mov fist cltd pop sub xchg or push jns dec pop out mov mov test aaa mov movb pop pop lock test mov stos sub data16 shl adcl sbb icebp and lret lods adc jmp xor and mov shrl out fisub or aas mov or sbb ss test sar cmc pop loope and out rolb push mov cmpsl aad push dec (bad) mov jo mov inc mov mov sti xor mov (bad) (bad) and pop xchg push mov or pushf loopne sub ret outsb fwait fs ret gs mov sbb (bad) hlt and dec nop or (bad) jb add mov push ds (bad) lds push or movsb sub pushf insb test pop mov pop es and pop dec sbb scas (bad) mov fstl fs in pop (bad) call out push mov pop pop xchg insb cmpsl xchg inc repz pop inc leave or test push ret xlat pop pop xchg (bad) repz mov xor jno pop lahf popa aam das jmp push iret pop sub xchg and int xor push imul and cmpsb inc repnz adc nop rep push sub leave jb,pn xchg mov loop int jp cmp out sub jnp icebp xor das lods add aam add cwtl pop stc inc mov mov xlat sub pop xor test mov into mov adc je mov lea fwait sub ljmp add cld sub leave sub test (bad) pop inc fs cld inc jecxz fisttpll out lret bound or jecxz mov sub cmp jl popa pushw outsl sub mov sti and stos repnz test repnz iret and enter cltd cmpl out sub inc mov xchg push dec sti cmp pop rol pop into xlat rcrl jmp ljmp mov pop (bad) jo adc addr16 lock out pop mulb dec and (bad) xchg fstl jg ret pop cltd cmpl mov dec xor in mov dec xchg mov test (bad) mov ss ja sbb and push mov sub push std and lock sahf aas bound ret int3 xor mov clc decl int3 adc lahf (bad) xchg push and add mov icebp add push adc xchg dec lock ss mov and popf js mov dec in adc adc hlt outsl or and mov add mov ret xchg pop dec jmp addr16 xlat xor ret sub std dec (bad) cmp scas xchg mov xor jmp jmp inc mov js dec mov mov repnz jb and ds sub movsl sub and add dec lock add fidiv lcall sub in sti mov ret xchg jecxz shr inc rorl dec mov xor push sub jnp sti mov add or lret adc cmp daa mov (bad) jp fcmovnbe out testb dec jmp or mov fxtract xchg divb fs xchg out lahf sti ret cmpsl aam (bad) loopne jne scas mov pop mov pop dec leave dec out mov adc loope pushf add pop rorl bnd jmp mov sub fdiv push (bad) jb clc push rorb mov decb iret cmp cwtl pop lahf push inc jl mov bound (bad) (bad) (bad) fildll dec jbe mov fstl mov push inc dec mov mov inc ret push dec jns fs les pushf mov mov pop int3 lds cmp fsts sub mov shrb mov cld in rorb pusha jmp repnz mov test jns adc add pop jo idivb shrl lahf imul stos sub dec sub mov xor jae imul push out and and loop inc mov push leave adc arpl out daa ljmp xchg inc dec mov mov lret xchg shll lahf sti mov mov jecxz dec bound xchg push jg xchg mov push (bad) icebp call pop and mov pop pushf stos push xchg dec adc js sub inc hlt enter notb lret insb cmpsb push or (bad) sbb inc xor mov out cltd repnz mov sbb xchg push bound xchg cmpsb hlt jnp lahf nop pop push push popf inc xchg push shll jge xchg pop pushl movsl push aad add push push test push rcl jl out xor xor or daa dec clc mov stc daa aad aas push push mov jp (bad) mov outsl negl inc lret aam mov pop mov lds cmp inc sub icebp sub stos les jb sti jg mov mov pop pop mov add mov push aaa sub or mov pop pop aam push mov mov add jle repz mov jl push push sbb xorl ret push lods (bad) stos sarb push push aaa push clc add sbb scas outsl dec dec or xor lea lret cltd sbb sbb jecxz loopne insb sub mov test xlat jbe dec add and sub dec addl addr16 push pop push push cmc xchg inc inc mov push dec adc fild push xchg add push mov xor jg sub sbb lds aad mov cmp (bad) jmp repnz pop pop arpl sarb adc ret mov jl ror int or loopne push inc ss jne pushf sub js jmp mov mov (bad) mov adc (bad) cmp xor das in add scas (bad) out mov xchg loop adc xor cs xor test mov aaa and fcompl and inc cmp push adc lret sub out xlat jae mov mov loop dec repz je pop daa out nop mov bnd xchg lcall dec cmpsb ljmp inc adc icebp or xlat aad xchg or (bad) lret inc out mov inc mov pop sbb lods outsl movsb xor add dec push inc (bad) in or push xor (bad) fnstenv xor cmp into xchg (bad) mov ds shrl and adc pop aad (bad) or xor (bad) add les adc or scas cmpsb roll loope pop mov mov int3 mov xchg mov (bad) pop mov popa stos aas imul (bad) std push xchg je imull in or aas jl int push jmp repz int3 mov cmp out mov das sbb xor xchg shr sbb pop cmpsl inc prefetch andb repz (bad) and mov fcomps imul mov and pop mov negb dec (bad) or pop ffreep cli iret pop aad lret outsl mov dec dec sar sub jnp sbb sub mov iret adc jge,pt test sub cmp (bad) xor jg cmp pop jle in inc add xor fs loope sub mov rclb daa jecxz xchg mov sbb icebp dec push dec xor jno and pop jmp (bad) push add sbb mov and lret in stc jg out shl jbe bound testl xchg dec mov lahf daa add push mov or xor pop ja movsl xchg imul inc movsl test lret dec stos daa push xor ja and xchg xchg pop aad dec or mov loop or and bound (bad) fstl xor mov push or sub stos mov (bad) jbe xor dec and lret jle (bad) and add lea (bad) push or cld xchg leave aad rcrb pop dec nop pop pusha ja (bad) pop dec and mov outsl jmp cmp xor sub js (bad) xor add or sbb and xor je pop (bad) cmovg pushf les jl dec pop lods or or ljmp icebp jae pop insl iret or cld mov sub cwtl imul pop mov fild movsb das bound push fcmovnb sub push aam (bad) push xchg ret mov xchg (bad) mov in bnd xchg mov gs mov pop inc ljmp je push fiadd into add xor sub nop dec jmp pop sbb movsb clc fbld ret popa adc das gs scas jecxz dec sti pop or xor mov sub test sub pop mov xor cld or nop sub in or (bad) outsb decb lret add cld pop mov push stos (bad) repnz or jge mov ja dec and (bad) out ret sti xchg lods jns gs jmp dec test jns pop clc xor sub add aam ret add or pushf jg jecxz push in mov lret xlat popf pop sahf ljmp pop dec andl jns mov sub jmp loopne sub xchg lods cwtl pop sub pop add push test xor sbb and xchg test add pop mov lods negl cmp test cld dec scas les add out dec and inc adcb in and xchg pop xor cmp mov ja and xor iret aas sub popa shrl lret arpl movsl mov divl jg js xor scas lret adc adc mov mov repz je or gs or rcll add popa xorl and into enter mov insb scas in out lret fmuls out stos (bad) (bad) mov mov cltd movsl cmp stc inc mov pop repz lret pushl in ds or add pop rorl and and cmp repnz lret int imul cmpsb push xchg adcl cld shlb lods mov sarb sub mov ficompl push (bad) cld out and push div shll fsts add sub xor and mov scas loop ds mov push jecxz add out dec jmp incb adc inc mov push adc and xor add mov mov (bad) divl jp add pop icebp sti movsl jl adc mov add push int3 mov sbb scas push cs dec ret das adc ret mov outsb and imull jne es push xchg js icebp repz aam inc insb std adc and sub aas call adc (bad) mov ljmp jb dec imul lret mov xlat inc gs daa in mov sub gs scas xor or sub data16 pop pop les xchg dec negl lds push das pop push mov mulb mov and shrl rcrb mov inc sub mov mov mov push add shll adc pop pusha push into cli negl das stos gs int xor xlat lods daa push jmp (bad) scas cmpsl pop daa cltd dec xchg cmpb pop aas in in out push jns lcall test jns jmp xlat icebp and mov cmp scas jecxz and pop push outsb push out sub and jae loop xchg jo xor and add call or or xor cmp ret lret fldt sub sub and mov ja divl pop lret call push mov add (bad) sbb ljmp dec xor add mov lret dec mov pop cltd adc pop scas cltd test xchg pop popf xchg xor dec pop xchg sub jl movsl mov mov incl xchg ljmp inc lods pop pushf pop mov cmp mov jl pop jne add testl or dec imulb data16 pushf mov xor push je or cltd pop icebp jbe pop clc push sub xchg int3 pop xchg cld push imul xlat out les ss lret fsubs pushf shl mov adc pop fmul sarl scas addr16 inc mov loope mov (bad) jbe int3 xchg (bad) insl movb adc jl cli (bad) imul cwtl (bad) out and pop pop lds mov fisttp mov cmp enter sbb ret or or fbstp movsb xor mov imull mov mov out mov sub iret aam mov dec mov repz insl (bad) out aaa jmp (bad) mov add jnp cmc jno mov icebp pop dec add xor cli (bad) lcall jmp sub and xor mov leave push xor movsl cld cmp lret pushf jecxz or out cli push xchg jnp adc sbb adc hlt std mov (bad) or push add mov xor pop jmp rcr cmpsl jle lods push xchg cld pop fiaddl add sarb dec aad xchg dec aad or cmp (bad) pop int3 and dec fnstenv push (bad) sub pushf out out push shll push jmp add sub test insb mov loop pop push sbb and fistp dec sub xchg dec jg test add cmp xor pop mov fbld jge inc iret xchg mov mov xor sti pop and daa pop imul inc (bad) cmc xchg pop dec mull xchg add out xchg je push repz (bad) mov and or add jae ficomp dec sub iret mov movsl inc add sub faddl push sub pop or push shl push fwait inc xchg (bad) xchg or mov mulb cmpsb ja sub push xor push cs add sbb push jge mov stos cwtl movsl mull (bad) jo shlb iret dec dec sub or dec jg jle je jae cli mov call sahf in ret xchg mov and xchg adc repnz sub (bad) gs xchg cltd pop jg ja jl popf sti jecxz jp repnz dec in mul or data16 pop js pop lret imul fs decb clc hlt movaps push pushf pushf jb shrb das fs pop jnp mov mov xor mov insb cmpsl push (bad) sub btc jae in pop ficom ljmp mov pushf jg mov add sbb mov (bad) cmpsb movsl push daa jle lock (bad) imull scas leave sbb lahf add (bad) xor fnsave bound lret fadd bound iret pop jbe int add rcl dec pop xchg or mov outsb mov dec inc dec les sub xchg mov or loope aas lret cltd adc shrd add xchg fldt mov and ljmp fnsave dec and sub dec shrb scas lret cmpsb cs xor dec enter push jp mov movsl divl shrb sbb enter std xchg rorb dec push or xlat outsb mov (bad) lahf jbe rorb xor mov push ret xchg cmp xor xor and pop xchg jle jp pop inc sub pop sub xchg mov into and sub xor mov lock sub iret and movsb gs outsb xor mov lahf (bad) jae sub sbb mov sbb sbb add lret push jmp ja pop cs imul rcrb into xor and sub test out mov xchg push or mov mov mov xlat dec push loope mov add das xor sbb addb pop es mov xchg mov sti push dec out jne ljmp sub int3 jg inc cmp xchg mov repz inc fwait pop push pop push dec sbb fstpl push lds mov movsb fs and in pop xchg push fildl jb repnz add pop cmp (bad) (bad) sbb mov jl out mov cmpsl jmpw sub mov mov sahf out jb frstor sub lds mov dec or pop jns xchg cmp dec lods lds dec lods or ret hlt hlt das adc xlat jbe adc and ss mov fstpt sti repz clc aaa dec or pop repnz je in (bad) mov pop jnp daa pop shlb xor out aaa leave mov lret jne aam jecxz repz sub mulb push mov cmp sub mov mov das mov jns out push adc mov pop ret push ja out xor stos in addr16 pop mov xchg inc sub daa ja dec and dec xor pusha lcall lods jmp xlat shrb and pop lock pop and lahf inc (bad) adc mov pop add jno push xor xor lods jmp adc mov repnz popf cltd dec xchg stos dec ja imull inc call aas lods jle mov xor jg cwtl je fidivrl add xor mov std leave enter ret push inc mov add leave jne cmp push mov and jno and cmp dec lret daa je and (bad) pop push addl xor pusha (bad) jne fcoms dec out out sub rorb mov inc pushf inc xor pop rorl mov jge jo test dec jmp mov adc mov inc mov imul sti cmp jmp adc cltd and mov inc out xchg cltd fisttpl aas out pop out pop divb mov hlt xchg cmpsl push add fist adc pop sbb (bad) pop mov xchg pop sbb xlat inc dec das ja push cmp int3 cmp int3 mov mov iret push push adc mov xchg mov fs mov sahf jge fbstp clc call push out es mov pop xchg out lahf insb push dec loop jge cmc shr fisttpl or pop dec inc add fsincos inc out test push hlt mov test fsubrs xchg inc addr16 imul das ljmp xchg lods outsb mov into add sub fwait shrb jg (bad) sub outsb mov and mov xor pop or cmp test stos pusha inc movb sub xor mov adc sub sbb push mov aad push mov fcmove dec and into push and xchg stos xor add scas mov mov stc data16 leave push daa inc add sub in call pop ljmp nop jb fmuls (bad) cmc mov lea sbb aam cs xchg add pop lock in mov jg cli mov or push pop int movsl shrl call in (bad) lret rorl sbb jg xlat pop sub mov mov inc xchg cmp mov cld cmpsl push sbb or and cmp push ret rcrb addr16 add jnp and gs (bad) mov leave pop clc ret dec mov mov cltd loope pop push adc inc mov out repz es negl pushf imul (bad) push jae mov sub xor sub insl bnd add xor std (bad) cmp adc (bad) xchg mov adc push mov cmp and repnz xchg xor mov xchg mov imul sahf andl cli sub adc push leave popa pop jge sub in in das and (bad) mov cmp aad sbb or in insl data16 lret neg imul xchg mov inc pop jo xor and sub inc sub push sbb popf lea mov lds stos pop pop adc mov (bad) idivb cmp or and pop pop cmpsl pop inc rolb dec jb and aas push fimul xchg lret movsb add xchg nop in loop jge mov lret jmp lock clc cld pop (bad) into (bad) cmp fsubrl pop stc out js mov push imull or iret clc xchg fidivl test add loop mov mov fwait inc ret sti inc movsl pop add sub jge adc adc in adc and repnz popf lock mov (bad) mov xchg inc dec ret stc pushf xchg (bad) cmp sub push mov repz bound cmpsl aad cmp cmp jge mov push dec inc scas fsubrs xchg (bad) dec jo xchg out xor inc push loop stc ret inc push enter call sub jne or sub or decl mov sub cmp shrb xlat mov and xor xor mov lock mov dec mov mov fcoms xor fdivrl adc and dec (bad) push push shr (bad) mov adc (bad) add icebp or scas sub cmc inc aas fldl2e inc cmp sub fisttpll adc pop das fsubrl rclb cmpsb int3 lods aas mov fstpt sub daa cmp dec or xor sbb sub pop mov repnz movzbl bound fbld sub mov sub jg jb pop mov push xor out sub cs xchg ljmp push jne push pop outsl test sub push xorl pusha lea pop ret lahf and and leave add cmc jns dec fldcw add and outsl cmp aas mov sbb add jl and sti sbb loop or add cmc add xchg mov shl pusha and mov mov (bad) push adc fsts add gs (bad) repnz add dec add xor lcall mov sbb imull pop or and lock xchg imul cmpsl jmp sbb or aam scas mov inc stc or sub les dec add push imul bound adc notl xchg in push mov xor and flds loope sub ret and push sbb test fildll sti xor gs cmpsl insb mov lret faddp push lcall ret mov mov mov in and loope jbe mov repnz std fprem1 jmp cmp cltd inc fidivrl mov icebp and mov ret sub lret loop test fildll repnz jb xor movsl jge pop fs (bad) arpl add daa lcall sub mov aad jmpw jp push pop xor testl or hlt fistpl into gs shrb into lret mov out das or int3 (bad) lahf inc addr16 (bad) hlt aas (bad) mov addr16 fs mov push and daa xchg jbe and outsl lret pop or insb bswap pop stc dec dec ja pop mov push lds loop inc fbld mov jns mov or jno push add lods mov push (bad) repnz dec and sub jb xchg loope inc imul out adc pcmpgtw test pop mov sbb das xor sbb psraw icebp dec adc sub xlat pop or and xchg insb test test mov imul mov adc and sub popf mov sub sub movsb test push ss idivb (bad) stos xor test dec scas lret push dec lea cmp rcrl jmp mov pusha imul inc andb rcrb xlat out xor in stc add xchg push mov inc je,pt loopne jnp push xor push testb cmp and out mov mov adc idivb jno bound adc dec popf fstpt inc and xor jle and or pop pop loop pop jle push jl push (bad) mov adc mov xor loopne ret popf ret fcoml scas dec rorl ret stc int3 bound test push loop cli ja mov (bad) mov aaa adc stos pop add (bad) sbbb xor add mov jmp loop push sub mov jb popf xchg push adc ret addr16 mov or sub pop jns loop pop sti mov and in and xor dec mov xchg shrb inc inc out xchg lcall dec ret pop in (bad) outsb sub into pushf (bad) dec jmp ret clc adc (bad) or mov loope repz test aad jnp add jb jl pop or or movsl push push push add loope inc push insb mov jg cltd adc add sub sub pop lret in and and xor out cmpsl insb nop in add inc xlat xchg jno lods loop push adc jmp add jbe lds xor lret inc jecxz or or pop push mov outsl repz or outsb clc in mov and push inc sbb inc push add int3 add div adc call cld out push call add pop cs pmullw pop jp mov out jle gs cwtl inc lret cltd mov mov mov ret dec stos adc jb jecxz lods lret mov xor sub ljmp mov lret loop pop nop js fstps in sub add fnstenv lods push (bad) push mov test push pop ficomp adc pusha push mov sub call adc divb or out outsb jmp dec fisubr dec hlt push xor in jl out add jle bound mov dec mov sub jne enter fistpll das sub or sbb mov jecxz push inc mov adc jecxz popf mov dec mov push stc push (bad) popa push mov xor and add jge (bad) stc dec bound and xchg inc idiv add jno add cmp pushf xor sub cmp dec in (bad) and and or push sub pop lods or cli push out out mov xchg jl jmp jecxz fidivrl cmp or add cld dec leave fs aad xchg mov clc mov pop mov nop or dec into add add jbe daa out mov lock or roll cmpsl sub sahf push mov dec pop dec ror jg pushf mov pop push mov fisub push and out dec out out daa iret sti jbe in pop (bad) push adc stos sub cmp fwait lret aam cmp (bad) jge fidiv mov (bad) loopne mov mov scas xor decb popa aas sub negb sub push jmp jb push enter (bad) sub and ret push gs or or dec loope fcoml xor dec sub sub xchg int3 dec inc lret mov insb (bad) pop mov sbb dec add lret repz fbstp (bad) jne xlat mov out mov pop test loope (bad) sub gs (bad) into idiv push loope add xor out and pop rclb jle sub lret jge std insb pop dec push stos jno out js movsb adc mov push dec fimull ss xor and dec sbb fistpll xlat sub add shrb mov xor je mov xchg aas mov xchg repz ljmp cli cmpsl gs nop xor add (bad) cmpsl jg cltd and pop cmp stos cmpsl push xchg scas rorl popf jbe jmp repnz mov pushf jns and (bad) mov add (bad) xor mov mov inc adc cmp cld lret iret fist into sbb ffreep (bad) add jecxz daa jmp data16 popf clc lcallw rcll sbb xchg fisubr xchg xchg jnp push movsl xor sub and insl and cld ljmp fdivs movlps shr leave add in xchg idivl orb (bad) xor jno adc (bad) inc scas leave xchg add or adc clc (bad) (bad) cmpsl or xchg mov xchg push ret movsb in sub sahf clc bound xlat in scas lods inc add pop xor cmp mov fstl dec jno subb push cmc or and out pop out sub int3 push fcoms push andl (bad) lret icebp jge add mov cld mov mov dec push rolb jg fistpll sti lret push out cld aaa or cmp xor xchg (bad) mov rcll and dec dec and stos jmp imul sub dec sti push xchg mov mov das mov sub inc fsin jmp or push dec mov shrb push jne push pop mov std outsb and sub pop inc into in arpl sub cmp loop into push and lods iret adc adc cmp jne scas xor adc divb fcmove lock fcompp pop jle lahf sub xchg xor repnz xchg and (bad) mov into mov cmpsb dec call mov lds out sti inc imul ret popa lret xchg xlat sti mov push add fimul add iret ljmp (bad) divl rorl fdivl or pop mov mov xchg gs mov (bad) rcll movsl mov out mov sarb mov popf sbb or aam dec jge aaa leave out mov pop sub or lea adc add out and sbb adc out lret mov stc or insb ffreep lods add inc popf jg repz jmp fstl bound sub mov push das sti ja jmp out (bad) aaa and lahf jbe jno lods mov popf jl sbb or push xor or insb sub sub xor and pop mov push dec into xor xor fildll and add dec and jmp (bad) xchg pop std and and sub out add js jmp mov jns dec pop fcmovbe mov lock push cmp cmp cmp ja adc add or sub cmp and inc fsubrs xor notb dec ret adcb mov iret inc xchg pop cmp dec sub jp stos or dec dec ret lret jg (bad) mov pop mov or out dec and aas insb jmp movsl sub movsl jle inc into int or mov mov popa dec rorl xchg idivl mov adcb in xchg jmp into cltd xor call repz xor pushf cmc add push push dec mov jle dec mov mov clc rcrl pop fstpl mov call jle push lods cmc movsl (bad) jo add add lock mov inc xchg inc sbb jno mov jg out cmpsl lcall cmp push xor xor loop cld stos test fcmovu dec mov dec int3 push add mov fisttp lods sbb shr scas pop shll fs jecxz dec xor pop or daa or jne jb out jae mov sub cmp aad setg mov in das mov mov lods mov cmp mov ret push sub push add scas mov mov pop or sub mov gs and movsb ret out out push sub mov dec int3 xchg test lret int3 pop out and jbe and pop fistpll stc xchg arpl xor and inc xor out cwtl clc xor push int lods xor add outsl and mov je xlat jge inc mov push dec ja pop xchg loope fst jmp mov mov adc dec icebp out gs sub mov pop mov and test sti sub aad out mov xchg enter rorl adc das inc push xchg jbe mov lret add pusha arpl add pop jno fwait pop add ljmp popf int3 add nop cmp movsb cmp daa cmc sbb jp ja cli adc mov dec mulb cs xchg add xor mov and jbe push pop fwait xchg fcompl imul outsl les or push xor (bad) mov add pop insl repz adc and and negb loop xchg pop pop cld fimull sub aaa lcall dec xchg sub sti lahf insb call (bad) adc sub jbe clc js mov popf test sbb stc repz and mov cmp inc clc mov jno xchg leave clc jge mov or push es adc mov and clc sbb std (bad) lock leave jp sub data16 xor jge pop inc lret scas mov mov stc jp (bad) push in dec adc pop mov rcll jns inc or (bad) cmp cmp inc pop adc scas sub adc bound into dec (bad) jp cmp test (bad) mov das mov add int jnp mul test xor or and xor sub lods cli mov stos push sub sbb push jo push popf xchg outsl xchg stos aad cwtl leave or mov dec rcll ljmp xlat cli jb fistpll xchg and fisttp call shrb adc pop add jge mov lret pop lods mov xor movzbl jmp rcl dec jmp mov xchg sub iret xchg push test lcall xor cwtl jae add sub push leave mov and rorb mulb test in gs ret sbb sti aad pop xor push cmp mov pop xchg test popa pushf repnz lret inc xchg cmpsl add inc imul add push xor add mov jno sub cmp out test popf mov push add out add out stos sub lods mov adc mov jb (bad) hlt pop daa or popf movsb cmp fwait mov ret cld mov sub or add sub cmc jnp mov dec adc xlat and rcrb (bad) (bad) stc inc xchg and mov out inc popl or repnz sub push xchg fcompl jmp mov jns leave stos fst repnz std movsl push (bad) test shl pop outsb sub cmp fnstcw mov jecxz pop mov imul fyl2xp1 das out das xor lret iret dec jns dec iret xlat mov std inc rcll xlat mov mov scas cmp add int3 pop clc daa and jle lods hlt ja pop stc jecxz or adc mov pop je push ret gs add (bad) xor push sarl (bad) and sti push push repnz ljmp insl ret cs not pop lret jno cmp jmp and imul or sub mov das repnz out or (bad) and lods insl add sub push jp xchg cmc adc xchg inc das jecxz lds inc into fidivrl test sbb pop cmp ja into sub xchg fldcw or repz cmp xor cmc bnd das aam scas push repnz repz adc mov xchg popf fnstsw dec jp mov adc mov stos fs sti test pop out add xchg add mov insl xor mov icebp in js mov popa imulb popf rorl ljmp cltd (bad) aas xor mov les repnz mov int3 test sub test mov je arpl sub or add imul mov cmp mov stc jp shlb out data16 popf aam loopne xor jo ja clc es inc mov clc in pop xor mov fist sarb fs scas imul mov add adc push jp out dec and gs mov out mov outsb dec gs xor add stc push leave xor lret lcall test mov cmp cmp bound clc stc dec out mov daa popa inc imul movsb out shrl sub lret jmp dec or jp pop shr je out pop cmp push test dec dec mov jne push push mov cwtl lcall xlat jns lods jo dec (bad) mov xor mov mov sub out mov sarl jecxz adc or mov pop xor notb cmp ret int3 sub popf push or insb popa lret pop repz lock (bad) movd cld inc xchg inc imul add adc xlat out pushf insb mov xor sbb push mov pop jae (bad) fiadd rorb (bad) mov xchg and lods repnz add mov lods fs repnz xchg test mov pop push mov jp (bad) sub ficom jecxz mov fcmovu mov mov (bad) (bad) jge add pop pushl sub mov das outsb inc (bad) out inc mov jecxz dec cwtl outsl icebp mov bswap inc mov or ljmp subb push lods inc rcll leave fnstcw rcrb aam xor int repz xor push imul and pop pop or mov add or mov loope sub mov sub ljmp enter outsl outsl push jns lods add repnz cmp mov bound jne cmpsb sub add ret lea sbb pop xchg repz adc mov pop insb inc or das jb sbb aad data16 mov imul xor pop cld inc call pop add xchg out cli cmpsl inc push pop pop mov xorb mov cli sti lret repnz xchg loope push leave dec repz je mov iret dec pop loop enter add (bad) xchg sub daa push lds outsl loopne pushf and rcrl lock sub cwtl xchg ret cmp add rcr ret inc mov stc mov adc (bad) fnstsw inc aaa adc push sub ja cld rorl lret sub xchg dec xor lret push (bad) loop and pop inc ljmp xchg mov and hlt dec test dec adc mov clc mov xor addr16 aas je (bad) jecxz (bad) lods pop (bad) or pushf in ljmp mov call mov out es push pop xor or adc cmc inc cmp out pop sub jge xchg daa insb aas mov inc scas repnz xor fucomip ret lds repnz dec clc xchg leave out mov inc and (bad) push ret shr push or sub push jno (bad) out mov and pop pop sub pop (bad) lods push loop (bad) fs mov sub mov dec jmp pop dec sti inc jns loop movsb pushf mov mov ret mov or movb rcrb hlt sbb popf test mov fmul (bad) mov cmc push adc or arpl mov arpl movsl stos push out dec mov pop mov test (bad) and cmp sbb ljmp je adc mov inc shlb jp lcall hlt and jp add fwait (bad) in sub mov jbe jb push inc or jle bound sbb sbb jae sub dec rcrb pop ret mov (bad) (bad) mov aad sbb (bad) out lret scas add fdivrs ljmp stc nop adc sub mov into pop cmp xchg ljmp gs lods inc shlb addr16 aas in sbb clc sbb xchg into in aas clc je jecxz jbe leave sti jne push pop aas iret scas dec clc xchg leave pop cld arpl cli cmpsb add pushf inc pusha push adc dec cmp cltd scas ss pop stos leave leave fist xchg test inc loope mov fsubr into pop inc sub icebp in push add mov cmp dec inc loope repnz push mov pop in jg push movzbl (bad) fstps shrl scas push xor bound ret adc (bad) lods sbb add jle call dec shll punpckhbw lea xor data16 add ret movsl jmp lods lret (bad) pop mov mov sub mov dec and data16 outsb push xchg shll iret stos popf sbb sahf dec mov mov pop testb push add mov dec (bad) xor sarl mov fnstcw jecxz std lcall dec int mov add mov ds aaa popf rclb pushf mov cmpsb aad mov imull rcr mov pusha sub (bad) cli push in call or outsb sub out mov mov jmp push rorb ljmp jbe inc add mov out mov mov (bad) lock cmp cs sub cmp pop fsubr sbb xchg pop xor dec lcall or mov inc xchg jl sub xchg (bad) ljmp xor addr16 insb pop mov mov pop mov xor dec mov jle (bad) aaa cld movsb (bad) popf and jg ljmp popf sub lds div ljmp lock or out push pop xchg sub imul ja fcomps in xor xlat loope aad das fnstcw lret call jp rcrl xor mov pop das lods stos mov (bad) movsb repnz pop pop dec mov xor ljmp cmp xor adc bound movsl inc sub ja or push jae mov and aas aas push das notl in mov adc push (bad) popfw xchg jle add insb jmp out mov push adc sub bound fist push dec addr16 iret pop or gs add mov ljmp das stos imul jl lahf inc les inc push jp lods notl mov mov int3 add dec into scas popf inc jl shr repz scas inc notl jg sahf lcall aam (bad) fsubrl out xor xchg clc icebp sub mov cmovp jae push icebp testb push push sub rcrl out lret inc inc pop (bad) mov fdivl mov jo ss push push xchg negl pop push (bad) push and mov subl dec inc stos in ds xlat xor test jmp imul out sub out pop and int3 dec push mov push add mov mov (bad) (bad) mov aas and testl fisubl repz ficomp lock pop lret inc dec xchg push and jecxz add mov xor nop (bad) (bad) cwtl dec or fdivrs mov inc cmp and lahf scas mov or rorl ret push repz hlt jl cmc stc push sub xchg aaa call dec and cmp mov lret into sbb sti enter jbe pop js xchg push cmp rcl dec adc or ds cli mov aaa addl pop push (bad) cwtl lret ljmp inc ret mov xor cwtl xchg negl mov and mov daa jp popf je push fnop dec (bad) (bad) mov out ljmp pusha push imul xchg rolb sub sub or enter pushf adc ficoml cli jg inc repnz daa divb mov cli jl dec add xchg in cwtl dec or mov (bad) shrl ret lahf sbb imul xor out adc movsl inc jae and loop cld mov mov jg out daa or test gs (bad) cwtl outsb ficoml mov pop lret stc std repz adc lods sbb mov dec lods lea dec les and (bad) adc pop xchg ljmp dec stos lret jecxz or xor lcall enter or xchg in and add ljmp dec mov pushf fsubl lock popf div les stos outsl subb movsl sti jno shr out or jg ja push add das clc jmp das add jbe add (bad) and dec push icebp mov daa or (bad) sub and jbe adc out mov and (bad) (bad) adc cmp cld out les lcall inc xlat cmc mov jecxz mov sbb jecxz inc xchg push je sub fidivrl repz out in mov or and add dec stc insb daa mov mov mov sub out sub in push dec out dec scas xor pop aam iret dec rcr mov mul lea dec decl (bad) dec cmpsb jp lret inc pop mov in pop and adc daa sub push (bad) pop ret jbe (bad) sti in (bad) xchg ret notl xor or bound and call or bound xor (bad) xor (bad) das xchg enter mov sti test movsl stos in cmpsb push shl into xor sub das lods pop (bad) mov or fdivs xor popa inc mov dec lock pop add add test or pushf mov xchg cwtl jecxz add push aad pop jno add orb inc dec ja popf adc xor add ret sti jle fcmovu xor addr16 and jnp dec fbld xor hlt push ret pop push ret shll sub idiv sub andb rorl lods fcoms sbb add scas xchg (bad) icebp sub sbb sub add pop les stos sub and stc leave cmp in fisub push jg arpl mov mov clc xor mov pop mov dec into sbb sar int3 dec pop cmp repnz mov popa sub mov inc pusha inc add (bad) stos inc dec and pusha shr and xchg imul lret xor mov dec scas je (bad) (bad) xchg (bad) push sub sub inc mov add out mov pop int cmp (bad) sahf lret xor ficom pop (bad) mull mov repz jle call shll adc cmp and out and ret pop imul gs adc scas mov and cs and mov xchg test pushf mov and mov cmp mov jo sbb add out jecxz dec jl data16 movsb xor push ror icebp xchg xchg mov jno ret je and data16 adc cli aad or iret mov aas mov daa imul pop push (bad) cli sbb inc jmp push aaa addr16 bswap inc jmp shrb cmc mov push pop testb mov cmpsl cmp push adc add xor pop sub pop and push xor xor or stc pop pop mov gs cmc js mov (bad) out cmp mov xor push pusha movl data16 pusha push frstor adc movsb mov pcmpeqw xchg xlat or shlb in or rorl ljmp and ss mov sbb mov ljmp jle not jge rclb and pop iret or fiaddl std and jb sti jp (bad) data16 add xor add (bad) dec cmp stos push sbb outsl mov push add es inc push ljmp xchg push mov push cs cs inc fwait push add adc cmpsl jno mov push cmpsl add loope inc push into hlt or (bad) pop idivl sub jbe test pop or in mov inc fimull pop pop mov sub add scas inc jg shrl addr16 mull or jg adc dec push cld cmp xlat dec inc xorb in aad cmp or sub pop and lret cltd scas or jle jmp adc loop xchg lods and sub jl mov (bad) pusha adc mov cli xor out fcoms adc jecxz daa lds mov cmp gs add mull push add movzbl lahf addr16 das push push cld (bad) popa add or jnp movsl int3 inc mov push or cmp xchg js mov jl cmp cmp out sub out popa adc repz lret out cld sub insl inc push das out or adc les push ret xchg std fdivrs neg daa ds (bad) mov adc mov add sub mov xor fisubrl cwtl or out mov movsl das sub mov xor or ds add and cmp pop popf pop outsb gs mov xchg and ret and imul xchg roll sub insb and aad jecxz (bad) je cmc mov add out addr16 imul idivw addr16 pop mov add push test insb adc bnd gs add push sar lea lret nop outsl (bad) in jle test jl inc pop pop out fs cs fs mov inc push (bad) mov lds cmp cmp (bad) lret in divb sub incb add sbb data16 or lcall stos push xor fsubrl mov add les stc sub inc cmp fbld jmp mov test lret sub dec sub insb cmp xor je fcompl jge push (bad) scas dec icebp into (bad) (bad) (bad) iret push adc dec repz pop lods push mov cltd daa popa xchg cltd jg pop repz mov mov push shlb pop cmp mov dec cmpsb cmp xor xchg test pop adc fwait pop lret aad xchg pop and dec and sahf or cmp fwait inc (bad) ret je adc mov dec mov mov fstpl xchg xor fildll jno (bad) bound lods pop sbb xor rol pushf int ret lods xchg sbb cld or mov mov xlat sub add leave sub sub out and lods inc sub imul push jno or fprem1 int3 jnp rolb les (bad) mov pushl cmpsb (bad) dec cmp mov test sbbb or and shl mov mov mov dec adc mov pop outsl sub mov cmpsb or fistpl lret mov adc push out mov nop (bad) dec ljmp lahf cmp out jecxz xchg mov fyl2x cmp push cmp sti mov (bad) dec xchg fsts cmc sub ljmp pop popf push push mov outsl lcall iret or movsb mov push sti sub sbb sbb stc dec scas cmc xor or push xchg mov and lods repnz fstpl stc lods and pop sub jl ss lcall rolb pop das add push push movsb lock jno or mov jne es cltd lret xorb and sub pop mov fldt notl and mov mov (bad) and insb or repz xlat sbb xchg out xchg in mov bound xlat pop aam jp xchg push sub (bad) sub cmp lods (bad) pusha lods lret adc xchg xor stc jmp imull xor or scas jecxz jbe xor ret mov mov fmull sub jns sbb in mov sbb pop jnp std xlat mov (bad) cmpsl faddl es jl push pop pop and inc or xchg jno mov outsl fdivrl sub cmpsb mov push push sbb daa (bad) and subb (bad) nop push xor out imul jmp push push repz mov or cmp fnstenv pop jp inc mov cmpl push push xchg dec clc dec lret das mov or add adc fisttp cmp popf loope ret inc mov add aaa notb out sub fnsave out sub xor cmpsb xchg decb push mov int imul das mov rcrb bound test mov mul adc jp arpl mov test add mov das pop out scas sub and int3 imul or add push pop (bad) pop (bad) mov lret rcrl sub inc pop mov shll lret cmpsl leave jge loop inc mov cwtl mov xchg xlat sbb fild dec (bad) add mov (bad) pop inc lret in and xor jno and and sub sub xor sub call add leave and cwtl jmp jp cmp mov (bad) in test movsb pop daa add jg ljmpw xor xchg adc pop das mov jle pop mov jno imul arpl lock pop pusha ljmp dec sti pop enter enter jne out jge stos (bad) aad jmp pop popa iret or mov cltd xchg push and jmp push push loop aam fs inc add xor and pop add xor das (bad) fisubl push add mov in js enter negb (bad) out scas out dec les add lret mov xchg clc inc xlat jmp cltd and pop sub jecxz xchg call cmp int3 xchg jno out jae aad pop fdivrl dec adc movsl sub sub stos sub enter and adc pusha and mov xchg ror inc lret stos fs out in sbb xor or jge in pop dec sbb mov mov insl daa adc push push jae daa push lahf pop (bad) sti mov stc jge lahf ss lock je imul je push mov pop jbe or stc pop movsb mov jp lcall add into icebp mov lcall sbb add loop sar inc mov and jge fnstcw mov lahf dec cmc pop (bad) mov int sub mov jecxz pop mov xchg ja adc sub mov stos jb push pop push stos rorl mov neg mov and lahf mov icebp push pop adc (bad) and push inc (bad) aas ficom sarb enter pop adc scas sub mov xchg adc pushw or and das cmp jecxz cmp xchg into push shufps xchg lods ljmp lds hlt pop into das call imul add popf sub out das mov (bad) stc inc mov insl pop xor stos mov or loopne mov jbe mov push ret pop ret xor adc or xor sub iret xchg ljmp (bad) jge fs inc xchg pop sarb sbb pop dec scas (bad) fidivr addr16 dec test sub cs stos lods clc loopne syscall xchg (bad) dec inc xorb sub or lahf or adc add shufps or (bad) ljmp sti jnp add lret inc gs add lret sti sbb add imul push dec out sub and xor loop,pn adc cmp das mov jns push add cmpsl sub push mov jmp xor scas mov or dec cmpsl xchg mov cwtl dec xchg (bad) (bad) frstor daa inc or out scas mov sub and sub sub xlat movsb into pop ret push lret out mov test mov sbb pop into out pop arpl sbb sub cmp adc loop std lds mov js mov (bad) push pop xor dec loope outsb in and pushf xor mov rol popa xor pop mov aaa mov add inc mov mov pop out jle cmc ja or or pop loope lock dec mov or xor roll clc mov stc outsl adc inc and xchg cmp xlat scas fldenv dec dec and stos lods dec sub dec cmc popa inc sub inc mov gs notl xchg cltd lods daa jg sbb repnz shr insb outsl xchg in mov imul inc inc mov (bad) pusha mov push popf push mov and ret or ficoml push dec pop xchg (bad) jne leave sub mov (bad) mov adc iret mov test loop push aas xor out out dec cltd mov dec das jbe adc mov in xchg in ror ja insb pop hlt pushf lret xor mov ret in adc bnd push scas sub sub daa lcall in scas mov push nop imul daa (bad) mov xor jmp mov nop int3 sub mov daa leave or mov adcb or fisubl and lahf jl push lock ds xor ja insl or xor arpl lret popf inc fdiv roll je cli je xchg adc xlat cltd jne jg or ja repnz cmp out and dec jecxz sub repnz into push ret pop dec test pushf popa imul xchg mov jl push xlat adc rcr inc cmp mov mov ret inc out cmp sub jb push sbb ljmp push iret lret int3 aam out bound fimul pop mov cmpsl push sub add or and and mov push xchg inc dec (bad) mov aas rolb cmp xchg xchg xlat test cmp dec inc mov add mov test mov ret adc test insl cmpsb aas test lock inc fmul push mov lock sbb (bad) std data16 ss inc xlat cmc test jmp negb cltd imul and lahf hlt xchg pop lock mov cld lret (bad) adc sub test mov jbe in fstps test xor out cmpb pop add stos pushf add pop fucomip addr16 lds add divl fs or adc xchg loopne xor cmp or dec xchg stos sub inc int3 sub push fidivrl push xchg fbstp inc mov mov iret lds adc pushf sbb pop (bad) fiaddl jg out jnp pop (bad) out xchg mov fimull icebp pusha dec jb pop adc rol jmp (bad) lret lock lea jmp sti popf loopne and sub fnstsw nop (bad) jnp stos loop lret jecxz push mov add aam and push leave xchg into push inc pop jne (bad) mov hlt mov xchg pop adc lahf jne dec lahf clc js hlt fimull out and mov mov stos repz dec push and add pop ss adc idivb cmc sub rcrl lods enter movsl mov push dec pop shrl insb or aad aad (bad) fs out fadds repnz xor loopne out mov mov data16 aas sub and dec loop inc pop ljmp je jmp xchg mov xchg jmp jl cmp mov test pop lea stc imulb jbe lret xchg lock cwtl push and fwait cwtl sbb inc out mov ret pop push aad stos jne (bad) mov pop mov adc jecxz xchg xor jb fisubr lock push xchg pop les and sbb dec and cmp mov sub jae pop push (bad) imul pop mov (bad) xlat gs imulb mov out jbe pop and out ds fisubl mov (bad) cld or popf cltd movsl into sub (bad) aas or xchg or fs (bad) mov fcmove adc (bad) loope push (bad) mov (bad) movb pop out cmp push mov call jo in xchg lcall dec lock mov sub idivb mov lds mov and adc adc mov push add imul fucomip mov out out mov xor mov jbe sub (bad) or or jg sub into (bad) ljmp xor jmp lea cmp mov stc pop fiadd jmp imul pop pop pop stc jge sub xor mov jno inc mov sti mov clc movsb xchg in jnp mov leave push fcmovu neg (bad) movsl inc mov dec adc jno or cs and repz sub (bad) pop sub cmp push or lds lock and sub jb out sub mov aaa pushf jge ja jb (bad) (bad) loop xchg xchg stos ja fs jae mov xchg gs mov add mov outsb mov xchg movsl fmul add xor (bad) push adc mov mov add test (bad) sbb sbb negb push mov dec mov stos les xchg inc mov mov mov out sbb xchg inc repnz push add in sub stc xor (bad) and fs sub sub push das lock cmc arpl cs call out mov xchg cmp and add and popf lretw loopne cltd or push push fs mov call xor and add pop test adc jmp dec dec mov in daa icebp mov das mov fmull mov frstor into inc mov push stos adc negb fs out mov mov add pop adc add mov popf cmp adc shrb sbb aam jle sub (bad) les lret clc fnsave and int3 xor xchg fbstp mov sahf push cmp aaa push mov fldcw xchg es push pushf repz fdivl cltd cmp lods (bad) aaa dec mov mov arpl or daa shll bound pop and mov adc adc xlat scas sub pop aam ret dec add loop std mov xlat mov and jecxz dec es jmp dec ljmp cli mov sub pop sbb pop jmp sbb inc shlb jmp dec (bad) decl (bad) das dec (bad) dec aaa lcall sub lds mov mov mov mov lds adc cmp (bad) fisub xor dec jecxz sub pop jo add sub aad xor popa mov sub jb dec add js dec gs stc sti test pop clc pop sar les fucomp loope mov cmp pop lods jecxz lret dec mov inc sub into mov mov cli sub jle dec mov mov lret (bad) push (bad) sub mov fcomp xor and (bad) insb and repnz mov fwait jmp pop push add imul pop (bad) sub add cli mov dec ljmp fucomi ja fs push std insl sahf sub sbb popa xchg jno and pop les and out add bound push cmp mov adc lods outsb and (bad) daa push xchg (bad) push or pop push mov mov push sub xchg mov stc aam xor fsubl sbb add sub mov lods or dec loope fdivs (bad) dec cmp or sub fadd add in shl cmp lds imul test sahf jle (bad) or daa mov add aad lods cmp sbb and stos pop cld (bad) (bad) ljmp and inc rcll jp mov mov pop or sub (bad) mov (bad) sbb movsb scas xor ljmp mov pop xor add sub imul lock sub test sub je out xchg fnstenv lret sbb xlat sub sub fldcw iret mov mov or mov ss adc bound or cmpsl icebp lret inc and or mov dec mov addl sub mov stos pop lret xor mov jnp mov push inc and mov mov imul xchg pop lock outsb jmp int3 les push xlat inc cltd repnz pop jle pop or stc adc and jbe leave xchg daa shr cmp lds xor fisttp sti jb stos imul pop xlat mov dec pop pop leave dec jne sbb insl xor scas adc rcll sbb push ror mov mov clc flds jmp mov mov aaa jae andl cmp push adcb jae sub push xlat push or mov stc or (bad) sbb mov sub popf pop repnz lret stos mov or push push icebp loop sahf dec iret mov idivl repz loope mov xchg popa jmp (bad) stos pop aad adc pop mov les insb sub and aas pop inc adc iret mov pop jmp pop push push cmc mov xchg fistp push out cmp cmpsw pop pop (bad) and fdivr mov xchg movl ret mov pop mov and fs sub pop sub jbe mov jns cltd inc or (bad) xor xor mov sbb add inc popa into xchg jmp jbe fwait bound mov scas loop addb mov mov xor sbb nop leave add jge xchg pop push jecxz (bad) mov push std lea push sbb pushl (bad) push push mov add adc push mov pop push pushl pop scas mov dec lock pop push cmp inc daa add stc xchg aas mov neg mov mov sub pop sbb ja mov sti or imul or mov mov push jecxz add shl sub sub dec std (bad) xor aad imul cwtl push inc push mov int3 aad test pop add loopne lahf insl arpl xor rcll call jne add ljmp mov pop xchg push dec stc cmp or lods push lds adc push mov inc mov std sbb (bad) icebp dec fcos addr16 outsl pop (bad) jb add outsl xor pop push inc andl sbb roll lea inc ror pop jns jbe add add mov mov push rorl out pop sbb (bad) ds shrb daa pop out cltd jns lret pop inc cmp (bad) aaa add dec pop jge push repz xchg push scas lds mov xchg out fnop pop mov popf dec push push jns pop cld mov leave and jmp xchg or pop hlt mov mov fild (bad) cld (bad) movsl mov sub xchg mulb add test lds fs les (bad) or (bad) mov xchg mov xor mov dec mov dec (bad) xlat cmc xchg sub stos mov rcrl loop and lds dec jns xlat jmp cmp gs push aas cli (bad) icebp fstl sub movsl pusha adc and leave pop out jmp test icebp dec dec mov inc pop mov ffree xchg pop imul out mov test sarl add mov out arpl insb xor test ds xchg test mov inc arpl movsl pop in in daa fiadd ds rorb ds and sub cmp mov xchg stos pop pop loop test cmp mov aas inc loope fs jmp lods call sbb xor aaa or ret fcmovb repnz pop outsb fbstp jns xchg icebp gs xor xor outsl bound inc out mov push jecxz jg dec pop pop push repz pushf test popf cmc adc pop or mov mov fnstcw mov adc xchg cwtl xor and and fnsave xchg mov pop popf icebp test jb mov lahf dec fwait pop dec mov inc adc pop repz sub iret xchg jl push pop popf (bad) negl push inc or and lahf mov repz push ret and ljmp out lret divl fist and out stos (bad) leave add popa xchg pop pop jae jmp or out adc dec xchg ljmp sahf and and loop sub and mov jmp les and sbb gs daa (bad) jo movzwl mov rdtsc xlat sub shl push lahf pop cmp lret inc xchg pop pop and aaa ljmp xchg xor sub negl xor pop mov lret xor mov ffree jle cmc rorl aaa add dec xchg mov or xor repnz cwtl das es andl lods jnp pushf rcrl add call je in mov pop sbb pop icebp out sub add inc inc notb add mov jo rorl mov dec cwtl mov xor xlat repz pop jecxz or sub pop (bad) or inc xchg (bad) xchg out aas mov xchg mov leave lret ret (bad) mov ret pop mov imulb les test mov mov push inc push adc add in lds icebp out jp idiv fs mov ds mov pop xchg out adc adc lret jae daa aad and fs mov dec (bad) push lcall (bad) pop out int3 dec add fstpt mov notl or movaps jne in cmpsl into add popa xchg sub pop adc sub jmp xor test ja mov and iret scas mov sub fdivrl adc testb scas xor aam push jge sbb mov xor and adc stos sub xor add jl and lcall gs roll out fdivp mov lods test lods xchg fstps add fild (bad) out scas out inc icebp or mov test (bad) in cmpsl cmpsl mov mov (bad) sti cmp lock shll loope imulb bound bound pop dec lret popf push jno xchg repnz sbbl inc fsubrl push movsl stos out inc or or (bad) cs out mov out daa xor sbb out sub pop xor add sub dec popa pop orb sub add in (bad) rcl and divl decb fcomip adc out pop imulb sbb xlat (bad) jmp sub pop xchg xchg xchg xlat sbb add stc xor mov loopne daa xchg sbb jb sbb mov jne cmp das mov dec scas adc add push xchg mov imulb jne adcl loopne mov popa bound ficomp lahf in out sub sub shll push inc jb icebp fsubl xchg popa xchg idivb lds icebp scas fisttpll lret (bad) or aas sub mov (bad) out addr16 xchg fnstcw and mov push ret sub sbb sarb add inc pop adc sub sub jbe inc fcmovne dec pop cmpsl mov pop or add jl,pt imul shrl icebp cmp jne mov gs dec lock dec sti imull cmp into mov call mov mov pop mov ret fstpl repz out mov (bad) in xor add sub fcomip out daa in daa push push pushf fadds pop loop mov inc jo dec xor or pop jg jl jp dec add mov rorl stc (bad) fldcw lock jg repz es gs xor cmp ljmp mull jecxz gs lods xlat lcall mov cmpsb xchg pop and mov sub into and lods dec popf (bad) ret (bad) xor jg cwtl dec aad outsb mov loop popf xchg lret mov and cmp or add lahf dec jecxz out pop test xchg (bad) xor mov movsl push mov into sub ret cmp and and daa adc push stos jecxz (bad) repnz sbb pop adc mov xor jo sbb rclb cmpsl ficom mov popa jbe sub or pop and (bad) stc push dec sub (bad) adc cmpsl lcall mov add bswap sti jg adc ljmp add adc jle dec add fldl sti outsb not cmp xor imul add pop scas ja adc add (bad) fcmovnb or nop jae push outsl xor pop push adc std daa jg mov in lret in add arpl add pop mov adc pop mov xor pop pop jb rol lock xor out sbb mov cmpsl arpl pop cmp lret je add push pop mov scas pop je mov sti jne sub lahf insl sub or adc add dec add mov in shrb xchg not or out inc out mov daa repz add fstpt adc push mov mov inc xlat daa jg jl ljmp jmp addr16 dec jnp add jns jbe push aas xchg out out pop nop xchg pop pop push jnp jecxz cmc sbb sbb adc int3 and adc aaa pop sbb mul fildl push or pop push hlt mov jge lret adc int mov das cmp push mov inc adc lods and inc lods inc or addl push mov inc rolb push loop popf pushf or dec icebp cmp jae jmp lock pop and sbb dec adc pop adc outsl xor add sub xchg fmull mov daa leave sub leave push cmpsb cmp fisttpll leave push leave pushf enter test xor int3 out jp dec rcr imul xlat gs mov pop adc bnd bound outsb dec stc (bad) or or mov mov sti bound sbb and into mov sahf js (bad) in (bad) xlat mov adc mov out xor sbb cmp daa sub adc jne rclb out mov mov jne and das and je out and jle and mull cltd aad icebp dec push jecxz icebp ret cmp data16 mov or adc mov dec orl aad mov repnz jg push lahf stc adc sub ret in je dec mov adc std jmp push add aaa inc out daa ljmp mov cmp and or (bad) pop push mov daa stc push lods fdiv or std in xchg repz in into xlat scas sbb inc xor (bad) lods and ret out mov in jmp cmp xchg add inc movsb push shrb outsb mov and mov xor mov cmp cld test jno and das int3 int jmp popa push ljmp roll scas decl and data16 lahf hlt or std push pushf dec push icebp fisttpll scas gs mov (bad) aad nop cmp pop mov and xor pop decl add sub aam mov pop cltd scas mov mov outsb xor dec scas cltd jp lods adcb jnp fdivl iret and lahf push cmp pop jbe pop jge lock jo jle pop leave ljmp lods sub hlt or inc repnz xor dec cmpsl mov sub mov cmp inc or mov mov mov xchg sar xchg cli mov dec mov int repnz sbb fidivr xor dec shr das cmpsb jns or (bad) out in mov daa in mov push test in ja and xor add pusha enter add sbb lock repz dec clc lods pop mov or mov and xchg pop fiaddl les lds (bad) cmp icebp add sbb fisttpl mov int mov or scas sub sub inc lret aaa dec out adc sub gs mov ret icebp push cmpsl divl leave xor pop sub repnz lahf mov jmp sbb sbb and adc enter imul lds cld pop lret sub push (bad) clc add add stc cmp mov adc clc cli int3 mov push ret hlt adc xchg xor jmp popf lret rorb mov dec pop add xchg into ljmp mov and pop xor mov neg sub and xor rol inc or mov les je sub dec loopne repnz push insb test xchg cmpsb inc pop xor test pop mov ss (bad) jne mov dec xlat in xor repnz (bad) mov jb mov scas add (bad) out ss adc int or imul dec pop mov lock xchg jbe enter stos xchg add roll (bad) repz xor add or fimull gs or cmp out sbb push sbb dec add mov testb insl lcall add aad cmpl (bad) fst adc and notl push and fnstsw add mov push test popf stc jge push scas and scas test movsl mov fldcw add fisttp ljmp sub jp or lds xchg xchg pop loopne ret inc push insb cmpsb cmp rcrl mov out (bad) push aas mov and mov dec pop xor test dec push push scas cmp ljmp mov (bad) out stos cmp and dec cld jbe add mov nop push xchg clc pusha sub xor dec sub (bad) lock cmp xor (bad) cltd pop and daa cli inc mov (bad) jmp pop das jb pop adc mov iret jg scas cwtl dec ljmp or mov jecxz (bad) xor arpl push rcll or repnz jb pop xor and mov test push push adc shll pop or stos (bad) les mov (bad) sub sbb (bad) enter push xchg push xchg pop nop jbe sbb aam mov (bad) xchg mov hlt adc mov dec sbb cwtl out push adc cmp outsl out daa sarl add cmp es outsb leave shll and sub scas inc mov mov fs xchg (bad) mov xor add test mov pushf dec mov icebp add out and jle or mulb or mov repnz (bad) (bad) testl push mov lret dec (bad) pushf mov inc add loopne or cmp test dec popl mov jge sbb lahf repnz push addr16 sti sub (bad) mov mov add mov mov gs mov in stos (bad) lock ret ja pop mov shll (bad) leave ljmp data16 cs xchg scas or testb add or int3 pop jmp fsts adc mov cli cmpsb jmp dec or and data16 std or jl rol jg (bad) shlb call popf rcr mov xor (bad) push adc dec hlt pop popf push faddl lret adc mov sub iret push pop out popa je cli jbe push ret push mov lret sbb xor call in jb clc hlt daa fnstenv stos push add push and lret repz cmp sti sbb daa mov test or aaa add fstps and lock dec (bad) jl andl jmp enter subb icebp xchg jbe dec jno rolb je mov xlat clc test in sub (bad) cs dec mov out das aaa mov (bad) sub stos nop cli dec push addl loope cs cmp scas mov sarl xor inc pusha push add daa sub sbb add call or sub (bad) iret jg sub pushf mov xchg dec js jge mov into and repnz mov mov icebp insb xchg add loope dec xor jl dec jmp loopne add int3 (bad) jge sbb xchg std pop shrl dec jmp (bad) and xchg leave sti fadd mov inc pop lods fmull and cmc push inc popf lcall jl jecxz jbe and clc mov test mov or flds sub ret dec mov xchg decb aaa (bad) cmpsl dec ret leave xor sub subl leave and pop test cmp into das iret roll and outsl ret jmp mov (bad) mov outsb dec call or cli ret mov arpl xor add ret or icebp lock inc leave dec or add mov icebp inc das in and and bound push (bad) dec push sub bound and or and mov sub xlat sti or out scas fidivr inc fcmovu in add sub je (bad) sbb pop sub mov (bad) mov shll sarl cmp mov mov loop push dec push lcall enter imul orl dec jg int3 dec xor add mov and movsb push negb or mull ds dec mov gs movsl jbe leave pop push (bad) mov mov lock mov push jmp sub sbb push dec clc or push mov jb mov xchg (bad) mov aad xchg daa xchg in dec inc mov sub aaa sub sar fs stc fwait test cmc dec mov jns ljmp fistpl push mov cmpl outsb adc or rep loop shrb push lods mov push lcall out and movsl sub and and lret mov fstpl dec leave add dec and pop or cmp (bad) decb mov sarl and and mov (bad) sti push xor (bad) ror (bad) mov cli mov daa mov ret testb outsb mov xor xor sub add dec and xor jo xchg inc or inc xchg add jmp adc cwtl pop out fbld decl cmp sub xchg cltd or mov jecxz test insb xchg stos cmp shlb pop cmp mov mov cmp dec mov adc pop dec scas or adc jecxz cmpsl add cmp push mov cmpsb mov loop fnstcw loop sar dec jno cmpsl pop in daa fiadd dec add idivl adc mov das fimull jge sub scas je in out lret fstl sbb pop imul test add push sbb dec xlat cmpsb cwtl adc gs cwtl push divb lds test push mov ljmp shrb mov dec add je call rcrb incb dec out imul add ljmp add lret cmp dec sti sub into lods rcrb fldenv (bad) mov adc cli jb sub imul mov cmp test push insb into aad dec enter add bound add ljmp (bad) leave into pop inc out lods mov push arpl cltd sti loope push sbb notl mov (bad) es into mov dec and and mov shlb and loope pop xchg hlt pop jmp add push (bad) stc outsb dec pop cmp outsb dec pop add mov cmc xchg daa dec push fwait and imulb sbb test mov lret (bad) sbb push out cmp arpl cmp into pop enterw negb lds imul mov lahf outsl jle pop aad mov jmp xchg xor ja imul aas in (bad) ja inc dec sbb xchg add aas pop cli aaa mov std mov in or stos mov pop (bad) popa pop out inc sub movsb mov dec cwtl cmp das iret jns mov add xor repz icebp lea arpl cs fcmovnb lahf cltd xchg sub aam popf insb ret ljmp mov jle clc or ljmp or jge cmpsl es and jecxz fninit push xchg lret mov and mov add sub xor add sub or stos jl pushf add pop pop pop pop xor push mov jno ficoml bound popf jp inc test jnp push or pop adc cmpsb and pop adc jmp cmp pop or shll repnz ret xchg (bad) int3 pop (bad) dec push das popa pushf pop sbb inc pop cltd sbb push push jmp xchg dec push mov int3 imul adc jnp and test or mov notl in mov fcmovnu ja ljmp loop cmc data16 mov pop pop popa and pop outsl xor mov out xchg mov sbb jmp aas sar and lret xor mov dec and add sub or xchg dec and mov repz mov or inc fild mov std sub mov cmp cmpsl and inc xor and in jbe std jl xchg scas sub sbb and and std sub add sti add mov add push gs sub in pop mul clc imul and ljmp into or and inc lods cmp in mov push xlat std pop sub and mov xor (bad) lods rol pop je and sbbl inc cmovns push inc mov lahf sbb xchg jae adc push sbb or scas cltd jp dec sub xchg add add dec sbb pop xchg js scas repz pop xchg iret and xlat clc and xlat sub jne jmp and ja or pop cld bound flds inc and push ret outsl ds cwtl add and xchg and icebp inc (bad) jmp daa notl fbstp jne fisttpl inc in and dec dec push cmp mov sub push mov cmpsb dec psubb mov jno xor sub repz and push notb add push or into xor sbb and cs pop pop mov mov movsb fnstcw test movsb cmp test mov in mov dec sub and jmp dec js lods dec xadd adc shrb mov xchg ljmp push push push sub mov leave mov pop push dec mov pop dec scas lea xor mov scas mov das jmp data16 cmp jnp mov fcoms add (bad) mov mov repnz jl pop ret sub shlb pop stc push (bad) mov jmp jle movsl and insl lds mov dec cmovge mov sub ret mov test cmpsl in mov (bad) sub and xor fcomi sbb call dec je rol push pushf mov sub shrl mov aad scas mov shrb jecxz lcall ja sar cmp adc repz mov xchg (bad) scas push mov pop sti imul test xor inc das sub mov lret fcmovnbe das push ficom (bad) cs stos lds clc nop or jmp inc jne (bad) fnstenv lods pop ret lahf mov repz lahf dec movsb clc leave rorl adc (bad) sahf ljmp cltd cmp xor out push movswl sub xchg jnp xchg sbbb lds mov ret (bad) aam sar or jns dec adc fs aad push xor sti jmp es popa ret and xchg jg mov movsl dec mov iret lds (bad) adc xor lret (bad) jae mul mov xchg loope and leave repnz sub mull (bad) add stc pusha xchg repnz cmp loopne rcrl test jnp sub iret mov mov pop xchg loop pop jno sub loop je dec fisttpll pop rcll pop add push test cmp jbe xchg stc test fs and add xchg pop adc gs test jl popa fbstp push popa push fs jecxz sub fnstcw outsl push xchg ret push fcmovnbe repz jbe pop pop xor aas into sbb ss out insl sub lahf inc stos xchg push or and or test pop xchg mov pop inc repz dec sub ds test xlat out or push mov xchg xor das mov sti les mov jecxz add mov sub jle sub mov (bad) or out inc add sbb mov sarl xchg aad sbb sbb add movl out repnz imul cs adc adc mov mov and xor xor jmp fildl jbe repz out and in lods pop jne out bnd pop dec or dec iret ljmp dec (bad) fdivs lock pop and cmp sub xor cmp and adc into dec jmp je je push push sbb aad jg dec mov push fisubl popa shrl pop pop inc sub xor adc dec jecxz dec int gs inc popf xchg mov das fcmovbe inc icebp (bad) shrb jo pop jmp inc cs fnstcw dec pushf iret fwait pop dec pop mov rcrb mov shl jmp shrb dec pop lret jecxz scas lret addb popa mov mov jge test push push bound add pop jecxz push ret or jb push int3 jg cmp sbb push inc jnp out mov inc mov nop xor cmpsl cltd dec out and sub pop pop imul es jno mov adc pop xor push adc mov mov and xchg into push outsb pop dec repnz or out sub sub mov daa mov or (bad) aam push roll mov out and adc mov adc mov dec push inc fildll repnz icebp sbb dec les std enter mov mov and sbb xchg int3 and test fmuls das dec sti std cmp (bad) std popf cmc xchg fistpl lahf pushf pop lahf push push int3 stc arpl daa enter (bad) popf xor mov out mov loope xchg adc ret jmp jnp out push adc popl lret hlt pop pop fsubl std sub iret (bad) idivl jge stos xor xor ds repz xor stc fisttp dec mov out and sub dec fbstp mov and mov js mov lret cmp aad mov decl shrb dec xor adc sub icebp and popa push push sub sub sub rcll or and and es jmp or xlat mov dec dec xor sarl pop leave out push mov test sub mov into pop xchg fcmovbe push fnop leave (bad) sub mov inc and clc add sub jns or test stos out dec jb dec clc insb mov das gs or into in fist mov and jmp or out jge xor xchg mov cs fsubp jmp cmp ret mov negb movsb (bad) adc mov inc jmp test or rorl in (bad) rorl jmp adc mov xchg lock (bad) push imulb in add cld (bad) fsubs pop test pop subb (bad) mov sbb pop and enter lock stos push enter pop sub lahf rorl shrb pop mov or xor (bad) mov xchg imull mov mov push sbb stc sarb fldt cmp mov (bad) addr16 (bad) stos sub movsl imul mov lret and (bad) popf fstl shr mov pop mov outsl cwtl inc or lea xorl jb ret (bad) lcall push adc sub gs push ja cmp add pop fs loopne sbb ret dec daa jle cmp pop jo fidivr mov dec in xor xor dec inc mov push mov ret ss and test rorl xor js pop xchg mov dec frstor fs scas testb jae and ret pop sbb outsb cmpsb add ljmp inc mov push mov push sbb sti dec and mov mov xchg adc andb std movsb stos cld les mov movsl aad (bad) sub adc les dec fsincos lcall jle addb or add out test aas outsb mov jmp std (bad) sub dec or cltd mov push stos jb push jnp cmp pushf jmp scas int3 in xchg pop das pop or xchg pop (bad) jo mov sub jle into mov adc sbb shl inc in out push sbb sbb mov jmp rcl pusha out fxch sub leave pop pushf hlt popf hlt scas push out outsl cmp inc das sub mov mov pop out sub add sbb into insb (bad) mov cmp (bad) sub and out imul frstor outsb push test add push pushf add sti cld pop pop xor cmp stos mov push mov pop aad (bad) out or ret ja jle dec mov es sbb and cmp jno xchg mov jae push xor mov (bad) into adc jne icebp push jae mov iret cwtl aaa and mov mov mov xor out dec daa pop mov xor (bad) mov idiv sub and (bad) push cmp cmp cmp out sub add imul movsb mov les dec adc andl rcll adc xchg (bad) lock (bad) lret jg out mov pop or pop shr sub xor add jmp (bad) aad paddw jmp outsb nop mov gs fdiv inc ss push mov push mov xlat xor pusha push add mov adc sub sub (bad) les mov stos sub sti mov dec mov xlat cmpsl push pop jno outsb jb iret push stc lods dec orb lock mov or jmp cmpsb mov mov pushf fildl sub mov popf pop sub xor cld pushf cmpsb sub popf fstl in addb sub or jge shr adc mov daa addr16 and or scas cwtl outsb mov bound xchg test das out xchg dec push sub rcr xor dec or sbb test xchg shrl dec in xor mov xchg ljmp repz xlat clc xor mov xor cmp mov movsl adc cmovne leave mov sti cwtl xor gs or xlat jmp lods pop mov mov mov cltd adc sbb xchg xlat xor mov jno sub sub out add and cmp je leave int3 mov iret subb (bad) test inc (bad) aas xor stos aam mov inc stos cld jnp je repnz shll cmp frstor neg cmp es cmp xor pop lahf outsl jmp outsb dec mov adc lcall test dec gs orl mov in jae add adc inc mov pushf jge jmp cmp jmp dec adc cmp cmp or jne xchg es (bad) in mov adc (bad) popf inc pop adc sub adc cmp jg ljmp popf notl pop (bad) mov and sub xlat cs cmp sub or call jno dec lock mov push sbbl scas int enter enter call leave pop sub cld nop lods lret ret pop in add add mov shrb aaa cmpsl aam adc rcrl xchg xchg stc push xchg sti jne std add pop fbstp push add add adc pop sbb push adc iret out sbb lods pop xor xlat sbb into pop mov out mov add popf sub cmp adc notl cmp mov or in test lock inc mov in test cmc mov repz xor imul mov ss jne (bad) lahf movsl push adc sub xor ficomp mov push repnz pop mov std imul mov pop adc sub pop out pop fcomi int ret (bad) mov cmc cmp je stc insl fs (bad) or icebp add clc push in (bad) lods or add add js add dec pop and idivl and sub dec adc out fstl loope and cli mov leave stc icebp cmp pop mov cmc push mov dec ret xor fnsave into push (bad) sbb inc xor cmc arpl ljmp xor cmp push fsubrs push sbb (bad) (bad) sbb cs inc sub das test mov and jns das sub rorl sub test loop mov das gs or add sbb aad roll daa inc add test mov push aaa mov sub xor (bad) push mov (bad) mov stos pop sub lods (bad) into sub out dec loop jl dec ret iret lods jecxz mov mov xchg fbstp xor ljmp fs ljmp pop sub or (bad) fcoml add dec push add xor jmp int or jl mov pop mov out std adc xchg xlat pinsrw cmc ret jns (bad) xor andb xchg sarb notl popf sub ja dec pop aas xor shll pushf rcrl sbb shlb jg or fucomp add pop stos jb pop pusha stos add int cmc add je add mov pop inc (bad) mov das cmpsl pop dec push mov shrl sbb mov cmp (bad) or mov cmp or sub jmp dec lret sahf add mov popa or ljmp xlat inc add dec or sti xor cld icebp fs scas jno or cmp pop dec out mov xlat insb insb (bad) out roll or add into fnop ds push mov popf (bad) adc xchg ret out xlat mov mov movsb push xor ljmp pop mov aad pop dec (bad) jbe cmp icebp and (bad) clc (bad) mov xchg lods in dec ret mov lret mov cmp repnz and iret pop negl cmp mov fbstp aas loop fisttpl mulb dec push insl dec (bad) xor cltd and mov xor scas fnstcw outsl push mov jb rcrl xor mov push fbld (bad) popf xor jne and testl popl test loop nop test stc mov sub outsl xchg mov mov pop xor jmp icebp mov cmp or mov mov jle jae das rol sub scas push cwtl dec jae sub adc pop out mov leave mov mov shrb and xor (bad) in stc xchg sbb dec lock das and lahf lret out scas pop xor push lahf shrb lea iret mov cmp fs ljmp lret (bad) cltd jle fnsave mov notl pop lahf sub cltd aad cld scas jo aam in xchg xor lock iret (bad) pop stos sub cli sub cmp mov xchg (bad) lods mov fistp mov cmp add loopne mov insb adc clc out fs repnz ret sbb pop inc lea cmp mov mov mov imul lds iret mov lcall add xor insb xor and sub mov sbb adc add pop mov aad (bad) and movsl push pop mov and push dec and repz cmc iret jnp repnz xchg push xor notb popa loop std aam lock or cwtl pop rorl test loope sub sub (bad) sub or sarb xlat ljmp xchg addr16 lret jl lds fcomip mov xor rorb ret and mov lock mov pop (bad) scas clc arpl or (bad) sub movb mov mov add or fcomp add sub ljmp jmp xor test shl inc and mov fwait loope xor push dec jmp xchg xor iret mov and fwait and dec arpl or xor pop xchg cs lret ret pushf ds push mov outsb dec add sbb aaa fbld leave xchg and lcall movsb mov aad xchg std aas or inc add mov scas jecxz pop repz in xor xor cmp popf ja (bad) mov mov or xor cmp lcall inc leave inc push das aam cli add or lock jns and stos jecxz pop lock sub jl stos loop xlat test mov dec rorb and stos dec pushf leave mov outsl stos or jl shrl std daa jge lods shr fsubs (bad) jo push pop adc sbb sub shl stc aas or xchg cli dec sub or sub leave ficompl je pop (bad) cwtl sub jae mov jmp mov dec cmpsb and scas imul push jnp mov mov shrb (bad) stos testb cmpsb ss pop adc nop jmp pop mov sbb cmc jno leave pop jnp or fist mov sub xchg push scas sti addr16 cwtl pusha xor jle mov or jmp loope imul mov jo mov push (bad) movl add data16 and cwtl clc sar stc xor ljmp notb pop or xchg jg and adc dec insl dec lret jl test leave push hlt jno imul into sub and dec add push mulb adc adc cltd ret xor and repnz (bad) icebp out jg addr16 ds sub and adc xor xchg (bad) jge adc popa ja xor add idiv and push or or adc mov or aas dec fs sub iret fs inc sub mov cmc fldcw fidivr pop roll and xchg leave cmp repnz xchg xor out pop or cli fdiv dec or dec mov push imul fstps sub ffree mov mov and sub stos mov sahf push cmp das imul ja cmp (bad) dec adc and hlt xchg inc sahf sbb mov (bad) mov mov push ja sti movsl xlat sbb loope pop data16 cltd subl jb mov sub adc xor xor dec or cli xor or repz add jb push pop jae in push divb (bad) mov mov mov iret jmp mov addb xchg xchg cwtl popf and and repz dec std sbb xlat out out jo loope cltd and jne out sub orb xor shrl jmp pop mov cli notl (bad) insl adc and mov mov xchg out pop sbb fstps movsl nop (bad) xchg popa icebp mov mov mov pushf rcrb mov xor sarl sti bound fbld ss es jp pop out adc js jmp pop mov into repz or mov (bad) outsb or push ljmp cmp dec int3 mov pop fisubr sub movsb movsb (bad) mov fimull dec (bad) roll into icebp ret test push lods cmp lret stos daa sub xchg and inc out leave cs mov lcall pop xchg iret or xor sti negl xor mov and iret neg int (bad) mov add adc icebp cmpsb mov adc lret repnz pop fcoml sub jecxz loope je jo and sti fs lods movl mov or inc imul out xchg lods arpl adc test leave loop jns dec xchg inc pop push (bad) (bad) (bad) into out in fldenv add scas pusha cli or add cmp and icebp sub pop std push aad xor mov fwait das loop push imulb or (bad) pop lock mov dec cli int push in ljmp fcmovnbe jno (bad) imul adc out dec cld xor (bad) sbb xchg lahf fiadd add bnd loope cwtl mov mov rcll dec push jecxz adc dec ret popf inc dec adc mov add jno test movsb scas mov and fwait inc pop ret mov mov xor lahf mov ret mov sub push jmp sub (bad) daa pop movsb gs stos rcll inc movsb pop addr16 lret js sahf sub sub and push xor ret movsb dec dec frstor aad ret ljmp add mov loop xchg fdivrl aas (bad) or inc sarb sub test inc xor and mov pop sub or push adc pushf xor cmpsl mov adc inc fsubrs addr16 xor inc mov in adc sub out stc lds gs or in sub shrl mov or in out mov (bad) or push aam pop test repz inc imull sub (bad) das scas xor push in out xchg test dec xor into and outsl rcrb pop push mov sub sub mov jb (bad) mov (bad) repnz xor mov stc inc into add push in addl cwtl loope pop enter leave push das loopne clc mov data16 (bad) cld shll push lret lock in mov lods scas xchg xor mov aaa daa mov test lock into sarb jae push fisttpll clc call adc cmc int3 sub aam dec leave popa cs sbb adc addr16 call mov jnp adc xor dec pop movsb fadd mov jmp pusha inc ljmp dec pop mov fldenv and psrlw imul inc mov inc inc jnp inc insb pop xor and or mov pop cmp sub dec (bad) push decw push mov xchg out mov xor and push ja or dec scas push call xchg out imul cmp sub mov (bad) mov jne push push ffree and sub int3 sub push pop dec clc daa jmp incl push push jae and inc (bad) mov jae mov pop push (bad) and pop frstor add icebp out scas cmp and push bound stc lcall int cs out dec pop jecxz out mov jb sar or data16 jg mov ja scas add into cs (bad) fnop icebp sub pop stos xchg mov or mov sbb negl xchg gs stc pushf test xor push sub xchg lcall sbb pop loopne insb sub add shrb push xchg repnz mov aad mull jb shr das rcll out sti int adc add scas fldenv pusha das div adc dec fsin xor scas jecxz pop cli xor frstor (bad) sub (bad) fdivs and in jo or push mov push shrb xchg xchg rcrl lret out xchg inc cmp ret and mov rcl dec jge sbb lods movsl icebp and imul dec or mov mov incb push pop or or icebp dec mov idivl out sbb fsubrl ficoml pushf ret lods dec push fcmovne pop lea and movsb scas mov dec mov frndint leave jo sub mov sub repnz add sub and jl push out scas sub ret dec add or imul lret (bad) push scas bnd inc push push mov lds or icebp jg add mov test pop (bad) icebp jb leave pop int3 adc xchg lcall mov mov out xchg mov push aad xchg out push adc add scas loop roll mov insl inc hlt sti xor rolb rcrl int3 int pop lret add stc fbld jmp pop pushf adc sub sub or mov ret push push sub xor mov mov push sub data16 dec xor adc push roll and pop add fimul or mov lahf in out nop das push or iret jne aaa and jmp es cltd iret pop xor lcall into lret lret xor add or pushf jo dec mov dec repnz mov dec adc mov mov mov xchg insb push cs icebp leave mul push dec jmp pop inc cmpsl jne scas (bad) push jbe xor mov dec jb or fs mov pop jmp loop and in push iret outsb mov mov sbb shrb bound and or hlt pop xor xor (bad) mov xchg mov sub mov sub lcall popa jge in and stc scas dec cmp mulb pop std insb xchg xchg int3 stc push negl pusha push repnz lahf scas push mov icebp sbb jno pop pushf jp jbe adc popf cmp dec test mov push mov sub fadds (bad) repz and inc fldl push adc xor call xor adc (bad) in mov movsb test movsb leave je jb mov sub das and (bad) jns out clc arpl xchg mov lahf inc fisttp fdivrs (bad) lahf mov jb mov test xor mov lcall jmp repnz clc stos (bad) lock adc clc mov fwait or mov add adc jle clc out dec mov ds and mull pop and push incb pop cs fsubrs xor into imul push push test mov add adc and xor out imul ret dec and mov dec fisubr icebp jb dec daa fbld pop sbb mov scas xor mov cmp insb cmp stos dec sub fucom in movsb jnp lret mov data16 push repnz jbe fs lods adc pop testb daa sar xchg sub mov (bad) icebp imul mov fistpl pusha popf std xor lret lcall jns jbe leave addr16 aad in imul ret mov pop adc ficomp notl pop das add in (bad) xorl ljmp negl cwtl jle xchg dec scas ror sub ret push fcmovb inc pushf and pop cli fsubs jl xchg (bad) lret mov cmp ljmp ret or repz inc sub xor iret divl clc pop fbld lods cwtl cmp fs adc mov xor fcomps in xchg or cld xchg xlat sti xor or repz adc dec mov in nop jg dec xor push shrb mulb addr16 mov nop push jge test and xor stos pushf gs out sub outsl lock dec pop inc dec sub add or (bad) cld push xor mov xrelease repz stos sub icebp xor fidivr jb bound lock notl cld jge xor es leave adcb xchg mov cwtl xchg movsb sub pop and repnz cwtl jecxz add sub das cltd fs in (bad) mov fbld out mov bound jno mov pop dec (bad) icebp add mov add mov movsl fisubrl mov or (bad) das cli ja inc lret les xor stc leave repnz jno (bad) (bad) or lret out and out clc outsl aam fsubs daa aad lahf mov daa jg pop das mov push jae cmp aad arpl pusha mov sub pushf inc imul push imul jns mov sub inc in sub rorb jle sub cmpsl clc loope xchg test in outsb and dec jecxz popf pusha mov jge cmp cs nop mov mov lahf mov jg push jnp (bad) mov stos roll mov cs out test in pop sub pop rolb aas jne test mov push mov xor jnp xchg add and jno push push or fdivrl bound (bad) loop and inc out lea or jg bound adc sub mov push pop fmuls (bad) xor jle popa sub mov lock ret lcall mov dec lret sub call out or repnz add fsubrs pop insb pop xchg pop ficoml das mov sbb loop lahf xchg fldt (bad) jle aad ljmp dec mov ret cltd inc scas cld push in popf es std mov sub imull sti lea inc and mov icebp xor sbb ljmp inc push (bad) out ret notl sbb test adc mov test mov daa into aad movsb dec mov cltd push or xor mov outsb test leave fbstp (bad) add sarl xor ja and movsb xchg add pop dec inc pop add mov call lea test dec mov daa cli pop in lods shrb clc je stos int3 xchg loope pop lahf push add xlat daa out xchg xchg jo xchg push roll cld call bound out dec mov popa sub and or adc inc mov add pop (bad) cltd dec cmp inc sub pop rcr cmp stc aaa pop dec fs jmp orb clc daa or clc testl push xor lea pop pop jbe ljmp mov (bad) sub jns aas mov mov jl push sahf push loopne aad sti pop sub jl inc repz sub sub enter lret or ret test mov pop call lds fsubs call in cli lret mov sub sub push jle inc sub call xchg or fwait (bad) push (bad) cld pop mov jbe jg mov pop adc lahf (bad) jge xlat or inc pop addb mov push (bad) push aas or cmc dec mov imulb pop pop ljmp xchg mov imul test adc aaa nop int3 pop mov push mov push shrb xor out xchg jnp lret or in movsl adc shr loop xchg (bad) popa fstps (bad) lret faddl popa aas xor cmp sub shlb rcrl add out stos aaa popa test and sub lds aas and jno xchg loope test sti jmp (bad) mov add jp insl pop stc pop es ss xor pop add (bad) and mov das lock mov mov aam push push jl push xchg lods sub push xor sub sub or lds cmp sub mov or (bad) pop xchg movsb mov mov ficompl pop push xor cs dec imul mov pop cmc (bad) notl imul lret int3 into cli xchg shlb or lret daa jge jbe arpl sub mov sub or mov fcoms adc cmp (bad) stc gs jp insl dec adc xchg lods cmp shrb or sub jecxz stos inc cltd push lret sub xchg (bad) mov sub shlb pop mov adc fcmovne and jecxz cmp scas sbb push xchg jne fcmovbe test push jo enter and add mov push add (bad) ds sub in sub mov cmp push add ljmp adc or jo push pop mov sub clc inc movsb or pop incl or mov jg add orl bound ret push jg add out pop neg dec inc lret adc push inc fs or cli xchg sbbb popf hlt mov les xor push push pop push mov outsl push mov icebp js add pop push mov jae dec pop jmp mov or push pop clc jb mov js push das inc mov insb sbb (bad) or xor mov rolb out push pusha jl lock sbb outsb test movsb jmp push push push xchg pop and mov dec push out pushf cmp inc dec push xchg adc lret mov mov clc fwait or shl mov pop dec in or pop xchg xor mov xor sti adc fildl mov mov pop dec add rcrl pusha jmp aas (bad) jge cmpsl xchg pop xor inc and pusha scas or out pop pop dec add add pop cld push shrb add add cmpsl rcl sub pop pop inc mov jmp not sti fmull ljmpw ljmp sub push jmp mov mov fnstsw sbb xor div movsl jmp es imul (bad) out sub sub je,pn mov (bad) and cmc sub jb (bad) xlat (bad) ja fnsave add xor fs (bad) and lret ja (bad) test fisttp incl aad or icebp dec jns (bad) ljmp or pop xor ret jp je in stc movsb scas out inc fistl cvtps2pi out or dec or mov adc out mov sub jg add dec add xor xchg shl adc jl lret in sub or and mov in pop pop pop out or mov add or repz push cmc dec dec pushf and das icebp fsubs xor jecxz gs cmp dec add jl sbb adc in nop out lahf xchg stc cli stc stos and jb aam fdivrp fisubrl push adc jae test jns scas sub jnp mov loop xor fs sahf (bad) aas add cmc insb mov in push sbb push (bad) fldt (bad) mov scas sub mov out divb adc iret stos adc fwait sub scas fsubr adc movsb subl pop mov adcl cmpsb push add das cmp xor add pop popf inc add cs mov dec stos and jmp pop jle out jmp int rcrl cmpsb or pop movb sub or xchg iret gs xchg lret jl jmp stc inc jg pop dec movsl push jge sub bound xor sbb jns lret xor popa in loop,pn sarl push mov push enter stc adc mov mov hlt es loop xor or mov push movl pusha daa fbstp iret mov icebp push mov sahf sub pop daa dec push sahf sub daa (bad) divb cmp mov jge (bad) (bad) mov jg mov mov inc sub mov cmp lahf stc andl jle (bad) test je mov enter loope or sbb cmp shr inc outsb sub cwtl (bad) repz adc jnp add push loopne cmp dec push add stos cltd orl cwtl pop sarl lea xor clc mov popa rcl fldt out cmp clc xchg lock mov dec mov lcall or sti sub add xor sub test pop out and dec repnz lret mov or adc or push lret and ds cmp adc mov (bad) les (bad) push and out or pop mov mov mov mov adc mov das (bad) cmp call ja jmp sub jge adc lret cmp lods pop test sub out xchg jne xchg mov or inc into adc movb movsb xchg pushf imul sbb push mov inc jmp sub (bad) mov mov jmp dec sahf (bad) sar cmp mov test push xor movsb leave add jge insl mov imul xchg inc movsl or pop xchg adc xor mov sub mov add xor sbb jg sbb aad ret or (bad) mov xor dec push sti insb aam mov outsl lods hlt movsl add cmp cmp out pop cmp xor sub sbb lock repnz or int3 mov xchg mov push jnp mov dec cld outsl daa movsl imulb sbb dec pusha ror mov add and jnp cmpsb add dec mov inc pop in adcl xchg iret push stc jmp mov movb xor scas xor mov or mov das test (bad) aaa add and xchg sub stc test and test xor cmpsb imul sbb push aaa jmp push mov scas cmp mov xor dec pop dec leave dec out (bad) insl xor sub pop daa or in sbb add mov mov lods sub and ret or cmc repnz mov xlat (bad) lock movsb pusha test mov xchg xor inc jno les fs das ret pop repz iret add adc push push aas sub sub add or pop (bad) jge aas mov aas imul fist addr16 add sar cmp sbb mov mov stc ret mov inc mov jle idivb cli sub dec pop mov (bad) popf fstpt cmp (bad) das mov or sub out cli sub sub test fcmovne aad shrl jae repnz (bad) scas sub dec cmp add insl mov jno cmpsl pop push fsubl mov xlat daa add std xchg daa mov dec mov stc cmp add leave (bad) in sbb iret and xchg jmp ss and testl mov push stc mov sub repnz xchg mov (bad) ljmp jo mov adc pop push dec dec xor cmp xor sbb adc xor mov cmp mov push cmpsb gs mov adc jp pop pop test push inc mov jg xlat sub add rorb xor (bad) mov test xchg pop ret loop fsubl sbb xchg cs xchg lcall es sarl hlt push outsb stc mov stc push inc and sub sub lock inc icebp mov dec push imul sub add add or fsts and mov repnz add lret and xor out into adc test cmpl pushl repz dec scas lret enter idivl push in mov cld (bad) scas dec aam call es jg loop cld fsubl and divl mov jge sub sar inc data16 and loop sub jl dec lret leave mov xor xchg jmp mov jbe jbe push fsubrl lock imul pop pushf mov add mov xchg adc ret cmp movsb outsl flds imul and pop dec sub jl enter into or das sub out hlt lock jno gs or sub xchg jl jmp (bad) out sub mov stos or shlb lret mov loope adc dec mov lahf jo cltd iret inc and icebp mov and (bad) xor mov xchg pop mov add popf shrl lahf jl movsl jmp gs negb push aad add add add stc cmpsb fwait pop push mov mov pusha dec or dec lods and jmp sub rcr std xor xchg ljmp push add and (bad) insl lret jb cwtl iret (bad) mov popf jno jle lahf mov std push mov daa add int3 cmp xor sub inc (bad) hlt lret leave mov fidiv in nop ret xchg pop jle les (bad) pushf cmpsl ljmp aaa inc mov push adc stos mov pop roll ret negb jns scas in das xor cmp pop rcrl and pushf sub stc mov loope mov std mov mov sti stc mov cmp ret xor mov mov mov outsl call out loop xchg xor mov and fidivrl pusha pop push push (bad) dec out sub sub divb mov push sub or jbe loop rcl iret mov push in mov and adc xchg adc add xorl fsub aaa pop sti sub fadd jmp adc adc fiadd (bad) into mov pop push lods mov or (bad) xor bound pop xchg iret or jl ret and divl mov jns mov loop xor pop (bad) hlt mov rcrb pop test loope xor movsb ss aad jecxz shr add (bad) mov popa add fidivr xor mov add lods bound lret sub inc push jbe ret adc push jo pop dec fcompl scas add sub xchg in pop (bad) xor or mov cwtl dec (bad) movsl dec mov aas out jmp mov xor push push lods fs dec lret jecxz mov mov push adc popf loope (bad) imul and dec push sub xchg rorl ds dec stos ret inc and cltd adc sub sub add pop pop sbb lock xor clc jb in jecxz ret jns imul and in dec adc jmp iret mov jmp lods push or add rorl push add add out sub cld fld mov imul mov in stc (bad) das data16 jl dec pop cmp sbb add mov inc or mov jo adc adc clc jge in xchg mov xchg rorl jl je pop cld in or add test ret or shr mov sub xor pop xor imul imul and ret sahf movsl repz out cli int insl sbb and xlat mov add mov cs out xor pop sti mov and or sub mov movsb ret mov add popa lret fsubl cmpsl ja out xchg jl push negl xor repnz leave imul faddl imul mov mov das or adc adc cmp mov sbb or sub pop and ret and ret int3 pop sub ret mov hlt dec sub jp,pn imulb loope xor (bad) pop test fs sahf call daa cmp dec xor lahf je adc clc mov std jns inc add lret jge fldt mov inc or sub lds and pop stc mov mov inc gs add cs add jbe dec lret mov test ds repnz xchg adc je xchg xchg push lcall jns das lret sbb fsubl dec xor aaa imul test cmp push dec repnz mov or xor out dec call aas repnz xchg jecxz daa leave pop movsb cmp div mov xor sbb or test xchg movsl fadds add movsbl xchg mov out les pop gs cld adc and sarb cli cmp repz sbb jg jp icebp sti sub into iret repnz outsl nop dec dec loop das or mov push inc mov lret and mov (bad) push cld add out sub mov jge fs repnz push (bad) adc sbb fsubrs add (bad) mov addl inc sbb push and inc in pop add xor rorb pop add jecxz decl sarl mov sub pop xorl jb test mov pop mov das scas arpl dec inc stos lret push mov inc mov ljmp repz rorl clc mov mov insb out ljmp add mov mov out outsl push es pop pop daa ja movsb xor sbb sub xchg xor sahf (bad) dec mov clc sub or pop mov xor push push add (bad) xor sbb (bad) add (bad) pop add fiaddl int3 jo dec push sti adc out mov or fprem ss or pop jle jmp inc dec shlb pusha jg jno add adc enter pushf xor pop lret push push sbb outsb mov sbb push mov mov jle pop sub (bad) aas rorb cwtl jge cmp pop cmp jle or (bad) cmc cwtl and mov or push lock pop mov or pusha (bad) decl fildll (bad) repz push push inc nop or out add cmp repz aaa aas addl sub xchg dec adc out add mov mov rcrl push jmp fcmovnu in jmp ret and fmuls mov ret mov pop jp leave or dec mov xor mov xchg jb dec push or xchg xor jne jno insb mov lea add iret stos cld fidivl adc fadd (bad) fcmovb fldcw fildll mov out xchg xor das xchg push daa scas push test std data16 jb mov add sub mov rcr pop sarl xchg fdivrl sub int3 movsl push out dec dec ret fstp aas inc mov test daa ret jl pop dec dec sub and daa sub cltd test dec dec xor cmp jb imul movsl fisub jg cmp push or cmp sub add mulb stc imul mov scas xor out mov test sub shr xor call mov dec mov fucomp sub nop (bad) and das sub aas xchg dec xor lret push mov and dec inc xchg mov hlt sbb out mov into roll and or xchg pop repnz mov ljmp push mov ja push daa sub pushl in leave sub enter leave sti out xor mov sub jmp (bad) xor xor sub mov add loop lock fnstenv jmp xor lds jge mov mov outsb cld pop leave cli std xor fidivr call insl or mov jmp orl mov fdivl or loopne pop les cli gs and xor add push and mov sbb dec imul je adc pop push lret jge xor daa divb xchg sbb sarl dec ljmp or or cmc jns dec mov push xor and push leavew jne fisubr xor sbb ret into ror fs mov mov mov mov sub jmp fs data16 dec jecxz sub mov (bad) xor bound ja out xor xlat sti cmp inc or idiv or cmpsb push pop (bad) cmp add jnp movsl inc fisubr inc pop das pop xor pushw data16 clc cmp iret (bad) and subb shr roll mov roll movl ljmp cmp xchg add insl jecxz mov test test pop add fadds inc sub mov sub hlt (bad) mov lods jge xor mov sub (bad) into out popf fsubrp push xor test jmp adc sbb add mov xor mov and inc pop ret fistpl (bad) mov pop jne mov mov pop inc sbb mov icebp cmp inc jp jne fbstp es mov int3 jle cs push push mov mov ss mov int3 and sub sar out imul adc push dec test leave in and or ficompl test cmp lret pop repnz subb jmp and decl imul insb adc (bad) pop cmp sti jne push mov jge xchg pop stc lods repz sub mov stc cwtl add lret ljmp cwtl nop roll jge icebp cltd imul ds xor or fnsave scas inc mov jb and and lds adc xor sub xor dec les insb test loop stc fimul xor nop lret cltd outsb dec pop cwtl outsl or xorl mov inc push pop push repz mov sub pop mov pop lret dec das pop inc rclb lret loopne jmp jg push xor xor push jne jo icebp sub push adc or stos push jns pop pop ror add cmp cmp movsb (bad) icebp inc lret (bad) adc jg adc sarb inc jmp int stc out jl mov lods xor sarl mov pop lcall arpl call adc xchg daa jns push xchg push xchg and out cwtl pop out mov out mov sti (bad) daa jmp mov xlat push adc mull f2xm1 inc add cwtl mov xchg push push ljmp repnz enter xchg inc push mov ret push or inc inc jno popf xlat mov mov aas xor sti jno scas pop mov add cmp (bad) push out dec out cli sub ljmp rclb das fiadd inc fs fnstenv scas jae,pn cmpsb jge add jg push pop inc mov push adc cmp mov push mov add iret stos fs mov adc or (bad) cwtl rorb pushf hlt imul (bad) jle xor mov mov sub mov (bad) dec xor repz inc mov pop out mov fnstenv fdivs ret or ljmp imul lock adc mov addr16 add mov cmp notl mov xor inc mov dec loop cld mov and gs (bad) dec mov fsubl push lret adc cmpsb lahf jbe dec sarl cmp fisttp scas out mov mov push repz sub cmp and cmp jl cld ret jb inc popa pop ss test and push aas pop xor test mov mov aad data16 xchg into stos mov and test icebp fcoms mov mov les sbb or xor cmpsb fdivrl jmp popf xlat sbb leave test ret stos out pop loop andl lcall movsl fs cmp add stos lea push dec cmpsb sub dec mov and in rcl decl cld or (bad) or out push cwtl mov sub pop fimull es mov (bad) adc scas and fldcw into xchg pop pop dec ja mov lahf xchg jecxz mov orl dec mov cli sub jns mov imul sub sub mov pop add mov cmpsb sbb stos cs sbb pop inc arpl test add (bad) lret add test test add (bad) ss or fstpl gs mov fwait mov fsubrs or or jns sub frstor pop xlat test loop pop push or imul imull and (bad) ljmp into xchg or and jne jns push icebp push dec aad cmpsb call (bad) add or cmpl cltd aam sub mov stos jmp inc xor pop leave aas lcall jne or sahf lods lock jle dec out mov xor not pop lahf cmp add clc cmc xchg and mov negl xor les outsb add xchg ss cltd inc or decl out pushf sbb jae cmpsb inc pusha sub add mov sub jl sub and pop or mov rcl xor push dec bound sbb out fdivl dec (bad) repnz mov daa pop pop jmp outsb push ret not pop gs test mov jmp das xor cmp decb add iret sbb iret cmpsl loop xor mov sbb push jnp mov in sub xchg mov sbb inc pop or and out mov sub sbb mov mov int3 mov add (bad) nop mov insl scas mull adcb mov mov imul inc shrl sbb and dec push add mov fcmovb xor cmp (bad) daa mov jne jle dec mov sub push xor mov jmp and lret movsb (bad) jmp push adc cmp sahf add fisttp mov fiadd (bad) out aam pushf mov xor ret jb out cld or sbb add repz cld push pop aam sub dec and mov mov mov mov call adc cltd rorl add xor xor mov lods stos fadd mov sti test das out cli pop jg pushf sub fadds or cmc lds mov and std inc cmpsl mov cmp popf fistpll repz shll es repz xor cmpsb dec cwtl into add xchg (bad) jae pop mov xor cli or loopne xor mov sub dec andl shll jno imul push jl pop mov clc lret loopne pop dec inc mov daa fildll data16 out xor xor cmp leave out add and or sub pop and mov push jns add cmp roll decl add in adc lds or inc adc and add enter leave les gs (bad) jmp lret roll and cmp loope mov xchg int3 push add cmp and push sub mov ret or inc xor (bad) jg and out popf test clc and call fwait shr fmul xor idivl add daa (bad) push sub pop lret and cld gs adc pop inc mov push and ss dec add adc call sub jo pop mov cmp int3 xlat dec xchg push adc cld adc stos mov dec and popf decl in and inc cmpsl movsl gs and icebp add int and cmp das fistpll roll sub push (bad) sub fild cmp aaa fucom cli in stos mov jecxz pop add mov and dec dec dec sub push push daa aas imulb xchg orb lret pop int3 sbb xor or leave (bad) adc ds roll jns cs and icebp jnp adc mov jae xchg mov out jb sarl or fs jmp leave add mov mov cmpsb test loope xor lds add fstps add pop push ds icebp xchg cmc and sti add pop repz xor dec jnp mov dec push packuswb loopne pop popf jbe in mov cmp or push cmp (bad) ljmp fs movsl out les xor movsb std lea (bad) or sub jne mov jns lret data16 cmpsl inc sub dec or in mov bound and (bad) jg cli sbb mov imul xchg fimul rcl push sbb lcall repnz and mov and jecxz out mov dec enter rolb leave test mov and icebp sub aam or sub movsb decb push mov icebp insl dec inc push (bad) cld ret adc lret or ja jne mov jmp push and adc and pushf mov jge dec dec or xchg cmp lcall cli mov jbe inc insl mov dec add into dec sub leave cmp fnstcw push xor (bad) mov leave cld sub (bad) and pushf mov (bad) int3 icebp push cmp dec and xlat mov mov dec or (bad) lret out push mov mov jmp and pop xor mov sub aas das xor mov lods pop mov enter decb (bad) mov pop lock sub mov fcom cld xchg shrl (bad) call not out fnstcw movsl (bad) shl add mov jg pushl cld jno scas sub stc (bad) xor and mov js add std cwtl sbb stc push mov es lods mov out incb pop jae daa push dec mov add outsb daa fnsave cmp (bad) ja inc ret dec adc push out dec dec add mov cmp xor and push ja out dec fldz fildl xchg aam push test xor push mov in cwtl cltd rclb pop pop test jmp xor pop into adc jmp imull mov cmpsl daa pop mov xchg imul sub cli lret xor add and stos mov push jns insb out pushf fimull stos adc das das ljmp cli xor jmp bound pushf add inc and sub loope push mov stc cs jb cld pop push loop cld lea adc adc mov sub push cmp and mov aaa or popf fsubr jb lds iret jmp addr16 sbb data16 (bad) jp dec mov movsb mov (bad) (bad) int jle popa jbe xlat mov mov cmp movsb test jmp xor sub sub mov pop test inc jecxz test movsb sti fdiv into xchg scas push movsb stos or clc jp (bad) jecxz push repnz add (bad) test stc jge xchg push ljmp mov repz mov xchg cmp dec cmpsl cmp mov std les test lock jnp mov and call in cs lret dec stos lahf scas inc jg adc inc enter sub lods sub mov cltd dec dec (bad) mov ljmp ret xorb or pop push imul sbb add sub loop loopne sti ljmp dec mov mov mov fnstenv or sti int3 mov (bad) xor and loopne ficom pop jae addb xor mov repz je mov pop cmc outsb or fnstcw fldt and (bad) and sub negl or inc das or scas sub inc dec dec xlat xor ret or or lret scas dec test or ret add dec sub lret mov add xor sahf add iret push stc ljmp sbb jge inc int add fimul xchg cmp lahf pop or mov inc inc outsb fbld or and mov push jle imul mov ret xor push test stc sbb or mov ljmp lret add sbb or in outsb xchg stos pop mov aas add cs cli out (bad) cmp mov leave jp or dec pushf mov pop inc xchg ljmp dec dec xor (bad) cmc cwtl or sub ret lea test jno mov sub (bad) or cmpsb and aas or jb push dec xor dec out sub xchg div jns inc xor test add imul out lds inc mov adc adc arpl notl mov loop push cmpsb jo and data16 sub ret adc add pusha adc sti pop mov xor or fs repz (bad) jmp iret sti fcompl xchg fistpll xchg out pop jecxz outsb sarb sbb inc inc and pop (bad) stos leave push cwtl pop or aad fiaddl ret inc pop and pushf or mov fdivl mov cs add add mov aas xor (bad) jno xchg mov (bad) mov ljmp in and or cmc dec and mov pop sub jecxz dec sbb fisubr push pop lods adc jno ljmp (bad) out adc sbb inc xchg lret push and dec les jmp enter and aam adc adc fildll ret pop icebp cltd outsl repz jecxz jg lock clc sub xlat fistpl push clc pop mov mov (bad) fldl xchg dec ret sbb test lds int3 push add xlat cs aaa iret das push adc jmp jne mov data16 rcrw rcll push and sub rcl cld rorb pop adc dec popf dec stos mov pop pop mov jge cmp aaa call xor aam dec jmp cmpsb and out clc pop mov pop sub and leave mov leave fnstenv or fidivr jmp mov stos insl xor leave mov mov push cmp (bad) jne (bad) mov fucom je add lcall sbb out fcmovu cld pop fnstenv dec push push (bad) sub or mov mov std mov xor (bad) adc bound idivb int3 sti mov adc fadds pop xor dec loop push outsl mov sub jecxz aaa mov lret xor pushf and xchg bound dec mov adc mov mov aaa das dec xor pop fcomps stos ja mov repz stos popa pusha jmp loop outsb cmpsl xchg mov xor sbb sbb cmp jmp push jb mov push shll das loope xchg stos pop sub jns pop sahf lret fidivr push leave sub cmc (bad) jmp movsl subl mov pop jl dec jns bound push pop pop inc movsl (bad) in sub fcomps bound adc pop sub dec sub jo mov jmp cltd or mov sub xor push jo dec (bad) in jne leave hlt add scas cwtl adc adc pop lea out loopne (bad) sub adc (bad) xor scas cld sbb mov and mull les xor in fdivl notl xchg cmp inc push inc mov sub xchg in inc daa add inc fcmove idivl movsl fbstp ret mov sbb mov int call cmp (bad) es push inc rcrb call inc loop pop imul fucomi cmp lret or or add and jmp pop push fs stos mov out jg and imul or mov mov pop lods dec xchg jmp and xchg cmp mov sbb fisttpl aaa js daa lret or push scas loop mov and or ret push rcrb cld push mov in fldcw lret icebp mov sub ret jle icebp mov sbb and mov xor outsb pusha cmp xor popf adc sub das or test idiv jb mov or lret mulb mov fisttpl inc fnop adc loop into ret mov or or inc shll int cs mov movsb cmp repz pop aaa sub add lahf cmp (bad) repz out mov dec hlt mov je sub adc jle jns popa pop (bad) js inc lods imul ret or sbb cmp lret push pusha mov and xchg lcall dec (bad) mov out pop (bad) aaa decl fs call ds push xor outsl pop call xchg push sub mov sub rorl lcall das cmc sbb dec pop popa xchg popa faddl mov or and xchg shrb movsl fs sub hlt xchg jns jmp lds or pop mov repz addl push repnz sbb xor jecxz jge divl or out push dec jge test xchg sub ds dec loope xor lds das adc std xchg orb push leave push es pop push lcall fstps mulb jbe hlt adc mov jmp add clc repz adc scas dec lret lock ret jg jp iret repz out dec add and ljmp lea into imul xchg jno loop jbe sub (bad) lahf out sub les fdiv (bad) lock add ja jbe jno mov mov mov push lcall out ficom add sub sub xor rol adc mov push jle cs clc shlb push mov or stos mov mov xchg push dec inc aas sub push mov bound insb jo mov test jp icebp bound ret cld add sub mov push mov sub stos jge inc leave dec pushl leave cmpsb jmp pop clc adc out lds scas cmpsb imul das mov movsb lret push mov sub ljmp xor les lods inc repnz jns dec arpl scas sub test mov adc je rcl xor inc jmp push xchg ljmp or lret jne push lock jg push dec sbb inc or mov fist inc or pusha ds sub or stos dec mov pop mov dec lcall lret push xor pop out cmp ss xor inc jo mov inc and cmp add mov adc lret (bad) lahf lret shr popf (bad) mov jae test mov xor scas jl sub lock lret xchg leave jge cmp shl mov and or stos mov out cmp xor lock xor rclb mov sub mov lock lret dec sbb dec dec les mov es adc and daa jbe aas pop ret loop aam add xchg lds fstl xor out bound divl imul mov sbb fsubs mov and repz xor pop pop jp iret jmp (bad) movsb jecxz push decb lea jmp inc stos sub into dec add aaa sub dec xchg call dec dec leave ret repz (bad) call jle push adc add mov cmpsb jmp ljmp ljmp rcll insl or lret push icebp fmull dec push out cmp push mov repz (bad) jl push jns xchg lret sti mov repz push add xor dec stc xchg mov dec ljmp and loop mov push out pop lret add xor sub mov dec (bad) mov pop test jbe xor pop mov cmc inc push and dec push outsb (bad) popf std lcall arpl test mov stos mov xchg mov (bad) loope aas in js add inc jmp and xchg andl sub pop decl add sub mov scas mov cmp loope mov lods dec and popf push add cs test xorb and adc popf (bad) push in clc pop movsl int jp push jo daa mov aad push sahf cmp xlat sti xchg and das rclb fdivr push jo xchg aaa inc mov loope cmp ficomp scas jge ficompl adc add daa sub mov dec mov cmp mov icebp (bad) add and or (bad) sub add mov jns pop inc dec repz xchg add das xor fnstcw lret test cmp data16 or push cs cs arpl dec mov or and xor jns cmpsb movsl cmc cwtl inc out inc and xor repnz mov clc jne push mov pushf lods fs pushl test mov sub or jp xchg or xchg jne (bad) mov xchg adc mov jg enter into add es pop cli sub mov faddl or ret aam (bad) (bad) in rcll push adc pop imul mov pushf adc sbb xchg pop mov or dec or enter sbb (bad) lods inc lret and push pop and add and fdivrs lds xchg jae mov ret pop pop call pavgw xlat lds lock ret lods (bad) mov adc jmp icebp insl or pushf or and ret test pop pop inc imul ljmp push hlt mov outsb mov mov lret dec push jmp jecxz pop lods sbb bound cwtl jmp xor mov adc and add pop adc dec shlb pop sub leave ds mov ret ja push sub pop mov loopne ss fistpl popa cmp and or sub (bad) mov sub push out dec repz scas aam lret movsb dec pop xchg jne in adc (bad) sbb fild loop movsl out mov dec inc xor push jbe and mov pop out dec call pop jnp adc iret jp adcl arpl mov cmp int3 sti enter iret push push cmp out sarb jb (bad) test aam (bad) loopne xor cmp inc sub shlb add sbb call pusha ds (bad) daa sub js dec leave mov mov lods or xchg and dec push rol lods fs pop add leave roll and cmpb xchg adcl into add dec lods xchg movsb test (bad) (bad) adc fwait mov dec bnd jmp sub xor call test (bad) xor add (bad) inc adc (bad) idivb dec mov fimull hlt push jmp popf ja mov inc pusha lahf js jp dec out in cmp out fnstsw rcrl fisttp mov mov notl (bad) adc ss sti cwtl icebp negb clc cld mov out sub jno inc mov jge ret test pushf aad xor je scas (bad) jns pop fsubrp push or push push pop cmpsl ja xor xchg int3 es (bad) lds imul das je lret divl out mov jge mov popf jb pop add dec pop and (bad) fldenv fucom jne mov cmpsl aam (bad) mov dec mov push cltd push or xlat mov ss ret aam adc test les mov fidivrl pop push sbb jbe and dec push dec addl (bad) pushf fcmovbe xchg sbb popf lcall lret sbb jmp (bad) cs out ret push je jae repnz mov cmp iret iret pop inc mov pop mov das shll lret or push xor pop cmp sub loopne adc in adc jmp cld mov int3 fisttp sbb test (bad) sub xchg xlat mov fcmovbe adc call cmp add hlt sub push pop (bad) sbb bound out lret pop pop leave ret (bad) mov ja leave cltd ret out cmp jo loope jno dec repz jge sbb mul or and jns xchg and mov pop adc ljmp lret (bad) cwtl je xor das setl ret in add popa lret or (bad) push insb jmp cmpsl movb sti shrl test mov lods mov sbb lods imul mov pop and or jp cld scas ficom xchg push movsb lret aam stc icebp dec jg cmp enter mov negb mov out xchg cs (bad) out and mov cmpb lods movsl call sbb pop mov pop sbb jmp add cmp into push or je lds add jo mov sti jmp pop xor out mov mov scas clc mov sub les mov xchg icebp jecxz fildll ret sub dec xor in (bad) jmp out test addr16 stc ret or imul inc jne xlat fdivrl stc jnp or test fpatan or jmp mov push dec scas popa arpl and js out fnstcw lret or sub icebp outsb jne enter xor add and xor pusha (bad) jg or mov outsb mov inc in xchg mov cmp mov mov stos mov frstor cmp xor dec mov adc dec jmp notb mov and cmp or mov fisubrl mov jno dec cltd add jp sbb xor aam out lret add push lret test or into in dec icebp xor cmp ss jecxz and mov out je stos std inc and or cmp sub notl dec or xchg adc (bad) in cli je jmp outsl xlat xor nop rcl stos push std xor mov push push and mov lock jmp xlat dec mov jg jle pop mov in adc in (bad) cmpsb cmp (bad) iret xchg mov fst call cmp jno sbb adc sub jmp data16 inc iret inc into sub lods add jle inc sub das xor jmp cs pop sub add outsl push or lahf stc xchg inc repz iret sbb mov or or sbb cmp (bad) negl sub pushf add add pop mov (bad) sub sbb mov mov ror jmp imul fwait repnz sbb add inc jl (bad) add test je push mov rdpmc add dec mov push insl and add pop xchg out leave (bad) cmp cmp das aaa rolb adc mov pop pop mov cmpsl int3 adc sub daa in daa (bad) xchg xor dec jl cmp outsb (bad) mov xlat jb cwtl cld xor lahf pop lock pop mov mov outsb sub jmp (bad) movsb enter divb cmpsb dec scas xchg jb xchg inc and sti es sub and das mov std inc mov sub outsl stos mov idivl jne mov lods pop aas mov xchg sub jmp scas dec mov ret jnp adc (bad) je lock (bad) mov mov or aad or inc test pushf mov std pop int fcoms inc lahf movsb mov loope insb das cltd into mov bnd jmp loopne leave sub jle movsl adc adc pop (bad) mov pop dec dec je and pop push pop mov scas cmp mov xchg adc ror mov xchg icebp das mov cmp xchg sub xchg mov loope mov lea mov push xor sub testb les in push movsb mov xlat xchg insl scas dec xchg cmc jns dec ja sub xchg xor cmp mov mov fwait ret sbb jecxz sub mov sub or notl xor (bad) mov adc inc insb adc out in and sarl mov sbb inc int3 sub rorb inc jp addr16 pop std xor dec mov jns movsb repnz movsb mov jno inc jmp jnp xor sub add mov iret daa add std mov push pop or aam push leave stos mov (bad) adc push lods mov sbb mov cwtl adc popf push xchg or sbb fist add jge adc addb (bad) pushf dec jb outsb xchg xor iret mov repnz inc mov ds lret divb ret test outsb lods sbb movsb dec jno mov xchg sti push icebp out lret scas push mov mov imul add jmp dec or or sub lods and test xor mov inc insb lcall mov repnz (bad) push sub xchg divl xchg ret add in inc leave (bad) stc jo or stos fist int pop dec clc sub (bad) xor push cmp call sbb xchg iret xchg pop add test (bad) and pop or push or xor pushf push stc xor or sbb sub (bad) add fstpl lcall into push dec add add (bad) mov ja lds sbb mov pop push mov call mov mov scas bound adc repnz sub xchg je fstpl cltd xor xchg mov push lock icebp into xor xchg mov mov jnp xchg movsl sbbl aad into pop clc pop in push (bad) xor jmp pop jg test jg je pop repnz pushf xchg pop sub fcoms xor leave lock mov or xchg mov hlt rcrb or dec pop mov add pop and pop gs into aad mov mov sub xchg lock ret dec (bad) into cli (bad) cltd out (bad) movsb inc das mov (bad) data16 mov aam lea cmp shrl jmp test out or add mov inc stos lahf pop (bad) gs ret sarl pushf mov dec xor add cld pop bound pop stc leave push cs fs and idivl repz lcall rclb or negb repnz push fistp jne xor sub jbe ljmp gs iret inc sahf ret bound xchg scas in pop jbe pop rolb gs mov fisttpl xor loop nop mov cltd mov jmp imul lea jle mov scas je ret fisub rolb add jmp and insb ds pop and cmp addps arpl sti or push mov pop in aas cmpsl repz adc xor out mov xchg call mov dec int adc mov gs mov dec insb mov and into je pop mov lahf out pop lock lret add test cmc sbb xlat mov nop test rorl add stos scas test sar shrb jecxz lds rol xor lret int3 out push enter and xor mov loop xchg dec sbb mov mov mov and imulb (bad) push xchg int3 add cmpsl les rorb aaa pushf and (bad) mov push lret aam stos addr16 pop push push xchg movsl pop sbb ficomp adc cli data16 pop pushf lret push loop ja mov add jmp jne frstor fwait andnps (bad) std cmp out jp (bad) pop andb cli mov push loop les sarb xlat jmp mov loop cmc sti push and (bad) enter inc add call mov lea cmpsl cmc test rcl pop cmc pop (bad) mov push xchg pop (bad) sub push movsl int3 out sub inc xchg or mov sub shll aas lea insb shll mov mov sub scas mov adc (bad) mov or and (bad) cld out xchg pop push xor jno ljmp in scas lret (bad) jne cmp sub xchg (bad) push les stos sub add imul in incb and dec add pop add adc cmp dec jge jmp sub cmp es je mov dec std stc mov push dec ljmp (bad) out fistpll jno xchg div xchg cli add ljmp js lret testl lods cmp mov mov lahf (bad) jne repnz les iret cmp xchg and adcb cmpsb mov es sub jbe push mov mov in cmp lods popa lods xor mov lea and adc and push lods adc mov mov cs popf add mov cmp pop add pop or dec xchg mov rcrl (bad) sbb inc enter jbe mov mov scas push jmp stos in and leave adc jns xchg add inc pop mov es mov rclb pushf cli fldenv clc leave mov jbe pop (bad) jbe cmc adc dec (bad) mov (bad) adc out adc mov (bad) je (bad) xchg pop sbb mov ret scas aad dec gs xor ret sti int push ss repnz jb lret ret mov mov xchg rcl (bad) cmovle xchg push cltd jl push jg ret mov adc cli xchg xchg in mov mov dec lcall mov cs popa pop push jl in stos repnz dec xchg out sti mov test mov jne and (bad) in and sub (bad) jle ja mov into and iret xlat inc jle or pop add mov mov into add pushf ljmp sbb sub or into jns scas add loope call out dec and (bad) add or jmp es shrb movsb imul test mov xchg scas xor cmp mov ljmp aam dec mov pop in pop push leave lds push pop test clc enter imul decl cmp lock adc sbb xchg dec mov and lret aad imul out mov xlat or and dec in add or mov push and inc repnz pop inc fisub addr16 cmc cli arpl dec push push mov lods rorl dec jne test test test lret xchg sub shrb scas lret and push jl pop fimul mov dec mov cli xchg les popa xchg in and xlat dec incl add lock dec movsb daa repnz xchg mov syscall dec push sub popf jl xchg jmp negb jno mov inc jno sahf xchg and sub ret pop aas in shlb ror sub in mov out xchg shrd loope mov sarl lahf mov or mov dec gs loop cli (bad) out leave jge jl loope iret or sbb dec jbe pop mov fadds adc xchg inc das inc add add bound and lods lahf cmp add leave push fcmovu adc ss push add mov sub je pop pushf ja and or dec push sti lret loop clc push mov stos sub cmpsb in clc bswap pop (bad) dec push insl adc repnz dec fildll lds fadd jmp insl daa mov test pop lea (bad) cmp push push out push das inc pop mov insb jecxz push xchg xor mov ljmp lahf clc test stos sub mov out add rol dec add and dec jg push (bad) cmp adc enter lahf or test xor cwtl xor rcrl mov loop push adc sub add ret add mov das (bad) aad or xchg gs icebp daa (bad) stc fs lcall jne pop icebp add sti xchg dec jb push lret xchg pop pushf cmp mov data16 test sub xor imul cmpl sub das pop add ds ret repz scas mov nop push mov push mov repnz and sub add (bad) xor mull or lock pop hlt xacquire rorb int3 ss mov xchg inc pop xor fxch aas jmp dec lods mov das cs cmc xchg sub rcl cli sub xor sub cmp xor stos lds lret cmp lret sub sub sub pop jb nop mov leave sti or adc xchg sarb add daa mov cwtl jo movsl dec add sbb cmpsb and popa sbb sub pushf add stos lret in cmp or and lcall sbb loop push lahf push push inc icebp or clc lock xchg fisubl sub dec negb or pop out loopne push push cmp mov (bad) jnp in cltd ret sub cmp xor (bad) dec add mov stos mov xchg imull and mov jg jno mull mov and sbb iret loopne inc mov or imul inc add push lods icebp push or adc xchg cmpsb add (bad) std xor iret mov (bad) lret jp or jnp or and sub xchg stos bound xchg mov fsts fisubrl mov fstps and sub ror add sub ret add mov push into mov lret cmp ret notl nop jl cmc fwait cmp sbb test stc sub popa add inc data16 leave sub leave lret pop xor roll cmc push pop lret sbb mov outsb lods call out inc add loop dec loopne jmp jle push mov xchg inc test scas sahf out loopne mov lds das adc mov cmp cmp mov out inc and mov adc adc adc std jo adc rclb and dec clc dec sbb add mov cmp mov push push cmp std or popl sarl test pop xlat movsb add icebp pop cwtl inc dec jp mov rorb cmp daa or sti hlt mov cli sub imul sub mov lock sbb mov jae adc fldz mov test fsubs sar loope push dec fs and ljmp xor sbb inc push icebp push or mov fwait sub jbe (bad) lock lret mov mov fisttpll xchg pop out and mov dec ret or fsubrl (bad) je (bad) fnstenv ljmp inc or mov repnz xlat mov (bad) xor adc sbb mov into popa mov or jbe icebp mov stos imul lds sub fisubr out lods insb das pushl push xchg jo shl pushf repnz lea push cmp or loopne dec sti fadds mov daa rorb nop ficoml mov inc out xchg iret jmp jo jecxz pop out xor mov std out sub nop movsb mov pop jo mov dec inc cmc add sub les idiv addr16 mov dec cld jmp ljmp mov arpl and movsl jmp out popa dec lret inc dec repz test (bad) je jmp mov or aaa mov jmp dec out xchg push jle push jl dec cwtl push (bad) mov scas xchg loope aas push inc mov lods push jecxz cmc lods or es fldcw out cmpsl pop and pop add push imul mov jge shlb ljmp rorl ret mov das in repz jae push ror ja out pop push popf aad gs sub inc (bad) data16 pop and ss aas xor cmpsb test sub outsb fs loop xchg fstps lret dec ret sub and sub outsb or (bad) fistp inc xor (bad) or stos xor cmp mov sti dec movsb push cmp leave mov sub sbbb and mov (bad) out mov xchg inc dec aad cmp and in stos popf sub or pop test (bad) push cmp rorl fbld lahf (bad) mov jns das int gs sub (bad) mov in jns jge pop incl xchg mov stc data16 (bad) cld jmp pop pop pop mov dec xor lret pop loop test add and (bad) ljmp ret pop hlt cmp jmp stos out fsubrs pop fcomip sub cli push mov mov xchg rcrb adc loop pop pop call sub out fstp add fidivl fwait in cmpsb mov mov mov or add mov (bad) jge adc aad mov cmc in or or pop adc cwtl mov xor jg or (bad) and lret push push test xor mov jg mov (bad) lret les push lahf add ljmp sub sub shll subb pop lcall sub or pop mov cmp add (bad) daa sub mov movzbl cmp sub xchg dec mov sbb (bad) mov pop fs jg clc xor jnp ret mov push fnstcw xchg fdivrs cmp push jg xor pop jno mov (bad) icebp adc mov mov inc xchg cmpsb lcall je mov js inc bound xchg mov push push repnz aaa orb push add outsl pop mov mov rcrl xchg adc xchg pop sbb cwtl mov fcomps icebp int xor fs movsb mov adc jmp push in ljmp sub lds mov lret pushf dec imul fistpll pop mov std xchg popf and dec aas daa mov mov fldenv dec and mov pop inc dec shll cmpsl movsl cmp cmp loope leave stos mov mov fisub ret mov repnz sub inc inc mul mov cmpsb dec mov pop dec test or dec lcall dec jbe pop (bad) mov insb cmp lock xchg stc pop sub mov xor mov lcall sub das repnz stc add add outsb xor (bad) daa fstpl (bad) (bad) or xor pusha sbb xchg adc (bad) xchg pop mov gs sub lds fdivs xor (bad) in mov dec leave fadd dec fsubrl pop movsl dec dec xchg xchg push rclb jge inc lcall in xchg push jmp cltd hlt adc add (bad) sbb mov fist sbb int popl dec or adc cmp ja mull add and ljmp sub mov imul in stc mov xchg mov mov cmp icebp loop clc (bad) or repnz enter adcb cmovle sub call cmc cmp (bad) sub dec or cmc out repnz fbld pop int3 bound xor das data16 fcom pop inc sub mov sarl scas jo jl stc das cmp clc (bad) mov sub dec add mov add cmp (bad) ficoml das fucomi pop mov daa out xchg xor pop mul daa out gs sub lcall sbb sub xchg sbb bound sets es test (bad) jg and mov (bad) icebp mov popf mul xchg jmp jo sbb icebp or fidiv stc jg sub push outsb push repnz xchg push and xor and mov xchg imul adc leave and daa data16 repnz fimul jp mov test fildll imul out and mov dec mov jg pop xchg mov shr adc mov xchg jnp sarl pop xor inc out mov xchg jmp xor mov movsb jg dec or (bad) incb push pop jb jl out stos xor fisttp (bad) fmuls sarl cmp pop xchg in sub sub adc xor mov pop xor mov inc andl cli jne mov adc aas dec pusha dec jecxz cmp movsb add jmp push push call je (bad) xor or movzbl mov pop imul inc xlat sub xor les imul mov sub jmp pop outsb sbb ds test inc repnz sub test push adc sbb int jnp (bad) dec bound and mov jge aam cmp bound push test movsl daa ja xchg outsb repz scas gs fldenv xor cltd icebp mov jmp inc pop adcw fwait inc arpl lds ljmp jge faddp jp sarb mov enter inc add call jge adc adc cmp in push nop pop enter das gs jns lahf ret jns dec ljmp lcall fistpl mov pop mov cmp ficom sub rcrl pop shrl repnz xchg mov xchg daa push xchg stos out sub popa lahf xor jg outsl cmp inc out cld hlt mov push outsb sbb lods pop and pop mov mov frstor pop (bad) in or push shr jmp xor cmc pop push imull bnd daa loope ds repnz dec inc cmp lret lock movsb mov (bad) in sbb test sub fisttp into lret sarb and cmp inc sbbb fdivs xchg shlb pop jno add (bad) (bad) cmc pop aas inc add dec inc int3 insl or cmp sbb pop jmp leave and mov das push and inc sub mov adc (bad) int3 inc sub outsb sbb into xlat xchg pop out into ja pop pop pop xor sub xchg cwtl icebp divl jl xchg fcoml in inc xor adc movb test add xchg sub mov lret js shrb sbb sarl fisttpll xor xor and testb mov or ds rol test outsb out neg ret dec mov jne push imul test decb inc in xor sub xchg test shll or ficomp test (bad) shl xchg mov pop stc cltd jle int3 clc fistp dec cld outsl mov movsl scas int3 fcmovb mov pop lret mov jbe lret add bound dec jb push bound add mov and add jp mov pop and fstps mov cmp mov xor mov adc dec xchg pop adc scas (bad) in (bad) mov and aam add lret dec test (bad) inc push and insb pop sub or inc ljmp xor cwtl dec jl push fstpl enter (bad) mov mov pop frstor pop push push add pop xchg mov xor or orl in or add sub xor (bad) fstpt or cwtl addl xchg or pop fistpll pop xchg (bad) sbb iret mov adc sub stos repz jno sub xor jg xchg mov xor inc sub mov cmp sub movsb xor pushf out adc push jge xchg (bad) popf outsb add pop movsl lods pop sbb mov ljmp sub inc xchg jbe pop jle in lds lods out mov dec ret test in mov xor push stos mov xchg out inc orl in sub int jnp in out frstor pop iret mov push jmp fiadd add outsl leave pop (bad) repnz ret neg sub bound or fcomi mov jmp adc fmul xor cmp cmc xor (bad) cmp movsl push pop xchg xchg mov mov insb repz push lret jle cmp into test in lret pusha and sbb popa xchg pushf jmp mov repz dec scas or inc inc lret adc mov sahf jae dec in popf cs test mov ljmp (bad) cmp dec pop mov out sub add cmp pop mov mov ja sub pop cmp clc sbb in fisubl dec xor in into or lret imull cli xor je enter sbb push ja movsl int out pop shrb push (bad) mov ljmp pop adc dec loop cld les fldlg2 imul mov dec or mov xchg in xor cmp mov je or test or mov pop jno sub mov and out rol leave add frstor stos jne or jno lret jg add add ret mov jb xor ja jne rcll push sti xchg daa adc shrb movsl dec jo and imul fimul (bad) out xor sub cmp dec mov mov (bad) iret add pop lahf sbb push cli je scas arpl lret (bad) repz pop cli les std jmp movsb fidivrl dec cmc xor mov cmp int3 fs xchg push push out mov lcall xor imulb (bad) lea sub test pop cld mov dec sub push and pop mov and insl push cmp add mov loop xchg stos adc movsb rcrb (bad) test mov rclb fbstp fnstenv mov sub (bad) lahf jl push ljmp jl int or mov mov push imull adc sti mov push pop and xchg jmp cmpsb popa das iret gs pop sub popl rclb xchg lret repz adc adc adc push mov cld ljmp iret cmpsl dec xchg movsl lahf divb in lods mov mov ret push and mov or xlat bound popa shll movsl or jecxz out sub ss or adc sti inc ret jl mov jb and fcomip dec mov mov adc add pop out dec je mov or fistp xor xor add out fnstcw fnsave scas shrl pop mov ret scas lahf or xlat leave jbe std out outsb mov inc sub nop js xchg stos and add mov shll call add in xor cli jb inc or and sub xor insb stos int jnp mov push mov inc jle or stc int3 enter adc dec imul add xor cwtl cmpsl mov inc jmp jecxz (bad) mov xor sar icebp das xlat mov in sub sbb pop jg jo std xor ret cli das pop xchg or or movsb push ljmp ljmp or mov pop ljmp fisubrl mov dec push cli sub insb cmpsl into ljmp or jle dec rclb stos mov mov xor test loope das std shrb add add cmpsl ss repnz mov jne scas gs insb dec cmp stc icebp jp adc pop pop or stc mov jno xor push inc jmp repnz jne fcoms xor daa sub push (bad) sub mov push negl sub xorl inc (bad) mov push xchg sti lahf stc jecxz pop out sub push jle xchg call push daa mov jne push rcrb adc (bad) loope mov fs into iret daa out xchg push daa (bad) sub das jne notl int cmp mov add add xor dec das iret dec jle ljmp adc jb fistpll add lret cmp xor pop inc mov (bad) pop jo pop mov and mov cmp fcomip lret push or add (bad) and mov ja jl jle pop jle loopne into add sub cmc push or movsb jne pop daa ret cmp or mov sti and cmp iret (bad) mov add das cmp outsb ds test jg out sub xlat stos cltd fdivrs mov cltd rcrb (bad) icebp pop cmp jo mov (bad) in xor enter jne jp,pt jno inc or jmp xlat xor std test into stos sub xor ja xor pop jecxz dec in sub out mov fsubrs ret push and aas (bad) lock ret or mov mov fild daa push jmp mov xchg sub push test mov sub cmp xor jb jmp in mov ret mov jo mov sub bound pavgw or rcll cmpsl mov icebp mov into lods repz or pushf mov push std in stc push mov push pop addr16 mov dec fimul ljmp shl or sub dec repnz ljmp ret int cmp push rorl ljmp repnz mov lods pop (bad) mov push (bad) scas fs int3 jb or sti imul mov mov dec cltd xor xor hlt in into pop das out push xor dec sub jns or iret data16 icebp mulb out mov jne sbb fwait or add sub mov (bad) fwait adc daa movsl repnz test mov mov inc out dec and xchg pop int cli pop repz or ret call push xchg sbb into leave int3 add lret int cmp adc jne cmc jbe and jns scas jl jno cmp cltd (bad) rorl call mov mov scas xor scas clc pop mov jne call lahf jno xchg ret inc dec mov jl pop cmpsb es add sub test pop sbb mov inc sbb sti mov sarb xchg cli pop add pop lea ret test loop aad je mov sub fist dec icebp pop ret push and and into xchg mov ret ss in cmp loop out cwtl mov mov push mov shlb test mov inc lret cwtl sub popf cmc push nop push ret push or push fldcw shll movsl scas xor pop or mov stc or nop sub or pop mov xlat sub das fs cmp add iret pop loop xchg xor or mov and jle fsubrp hlt cmpsl add push insb jbe repz xchg imul xchg jmp jle jno dec rcll sarl and jno test add les cwtl push leave lahf inc subl sar jo xor sub jp xor mov sbb lret mov int3 add mov and sub adc std movsb fadd ss xchg (bad) push shlb bound jp lahf bound orl mov mov into or pop pop in stos rclb cld (bad) mov jne setae enter fldcw lock (bad) mov adc stc mov and xor clc sahf ss pusha js jp out mov adc or popf pusha adc and jno mov cli dec fistp bound leave (bad) addr16 cmp add mov pop ss scas sub ss or sub imul out pop push int mov and les out xor scas xor and jg cltd or sbb inc pop add pop out cs sub stos ret int pop xchg (bad) pop repnz jb shr pop popf xor stc and cmc xor test jae adc add mov fimul leave jl adc mov lea mov daa add insb adc addl sahf push or popf sbb pushf sbb push sbb das fimul cmp xor mov mov add jbe mov jbe cmpsb stc dec leave leave sbb test pop dec pop xchg push jbe fcmovnb push aad test jo mov xchg pop pop lock fnstenv mov je add cmp cmp pop adc mov pop mov dec jl push add outsb pop mul mov test repnz sub xchg pop or sbb out mov daa inc insb jnp dec mov mov push push ljmp mov ljmp gs cwtl jns fwait mov mov cwtl push ret mov adc test mov (bad) xor fcompl and std icebp shrb jo lcall sub pusha add or call push call dec mov out loop shlb repnz fistl mov iret xchg push mov (bad) xlat adc mov dec xchg lret ja mov fdivs (bad) adc adc jno or or fbstp xchg sarb add mov test fdiv mov dec (bad) leave sub jbe in out and jp adc jns lds pusha call (bad) into inc iret fild or and lahf xor out into decl shrb dec xor ja dec xchg add sbb jbe sub or sbb cmp fidivl outsb sub out hlt (bad) push mov cltd cmc gs fnstcw stc in stos test lea cmp mov mov mov push jne fcompp loope xlat in es sub mov push ss leave add mov jmp adc mov jecxz aad pop jge pop fildl sub in jmp aad cmpsl test les adc les icebp or ja daa out (bad) push cmp movsl mov jnp add jge mov popa dec jne test jl pusha imulb (bad) data16 je and pop dec repnz aam dec popf add addr16 jle xchg mov jge ret xchg or movsb dec mov out (bad) stos notl je jo cs jo mov cmpsb gs jmp cli pop cwtl or pushf push xor or push les pop jle jmp sbb inc sarl push add mov xchg mov add leave mov test shr cmp mov push fwait rorb cmp mov es jmp loop mov dec int3 inc ret xchg fcoms mov test outsl ret pop mov or lahf (bad) mov jmp dec out cltd or roll or jp jg test stos push sbb mov scas sub test mov loop xchg outsl push imul inc ds mov add add fisttp adc xchg lock add push or add add (bad) or ret xor loope jnp out mov aam inc cli mov cs imul mov fdivrs testl fsubrs iret or mov mov mov adc xchg jne push sahf rorb dec inc adc fbstp aad and cmpsl and or xor or sub mov mov mov cmp xor inc (bad) mov mov leave or data16 das push mov lcall mov hlt loop dec (bad) mov aam push gs daa jnp add in sbb clc bound clc jno scas mov sbb sti pop xor push push mov xor stos repnz into fistl (bad) aas bnd sub mov mov decl lret repz xor mov or idivl pop movsl mov scas sub clc pop (bad) jnp insb or adc popa (bad) sbb in jge leave out push xchg repz idiv je ljmp xor sarb add add add negl cs ds jle lret jg cltd ret sub ret mov or jnp and roll xchg mov cmp mov xchg aas push cmpl cmp mov or mov (bad) xchg jle cli lret (bad) dec mov and and mov mov inc gs or inc js mov ja pop mov jle lahf jl (bad) mov lods xchg lods xchg lods inc pop pushf lods jmp add cmp fs adc (bad) push sti clc mov pop dec out and push gs mov sti pop and mov test mov hlt rol fimul jmp dec cmpsb scas mov call nop jg (bad) mov int3 xor mov ret aam loop rcll mov lret jg je (bad) xor sti xchg jecxz adc mov pop dec fsubr or and or add add jecxz adc xchg mov push push mov out hlt sahf out mov push push or shl lock xchg imul push mov out mov daa adc decb or add negl jmp mov pop lret ja mov (bad) jno xchg xor ret aad cmp jns sub test in mov xor inc xor fmuls out inc mov mov or aaa cltd lret ja push push (bad) daa dec loope bound clc inc lret shl push and leave jmp movsl sbb pop in jg imul adc repnz add jmp cltd xor adc fstps orl test das pop out push jne cmpsb and lret xor dec adc pop in loope mov test pop jo xor adc cli xor ljmp mov mov lret cmc inc push sti mov sub xlat stc jmp or mov (bad) aaa scas push (bad) mov imul xorb and jno mov adc mov out mov xchg mov pop fdivs sub and mov add add stos popf mov dec scas lret sub inc mov fldenv push frstor int3 pop xchg pop jb into or repz leave and fs lods sahf xchg push rorl push enter mov rclb negl add (bad) das out add mov mov pop dec pop mov daa push or xor add dec cli mov add jb gs je lods dec mov push out pop mov sub adc mov in xchg ljmp jle add push movsb mov adc add pop add xor jge mov sub ficom bnd jmp lds fisubrl iret adcb mov push sub inc mov ljmp out push roll push or fdivs pop rolb inc pop jecxz das or (bad) sub sbb rcrb fstl push pop das test out lret inc xor pop mov pop shlb sub lods jbe push cltd mov and mov mov mov pop iret leave jmp sub and das (bad) mov loope jle xchg divl pop and pop add xchg fwait dec dec jmp popf imul cmpsl jl jmp sub sarl sub clc add popl cld scas test cmc adc leave or pushw and lret (bad) or hlt pop es imul fildl repnz dec and sbb mov stos rcr mov (bad) sub xor jns movsl jge mov jl xchg cmp dec inc add into mov xchg push dec ret push push pop jne sbb movsb pop lods mov cli push or jecxz cs test xchg mov cmpb nop mov jg mov inc mov add mov iret sub (bad) mov es pop ds and (bad) addr16 mov mov sub stos (bad) sub push mov or std xchg fcmovnu pop rcrb or iret out cmpsb hlt sub notb jo dec add rcl pop mov cmp mov les insl sar sbb pop add dec cmpsb cld push repz mov push jmp pop or xor jnp mov jbe in mov fisttp sar test pop add push cmpsb cmp and lock sbb cmp rorl jo gs xchg (bad) xor sbb or popf cmc mov popa push push jge cld jecxz adc xchg fdivrl sub add cmpsl (bad) xchg (bad) idivl popa inc mov (bad) cmp lret movsb pop mov or adc das push mov cmp add mov ljmp fistpl js pop lcall cmpsl fisubr add lods fbstp inc inc mov and and (bad) jg cmpl fmuls in add xor sub movsl daa push dec jo mov mov add cmpsl icebp inc test mov mov negl mov adc lods push xor xchg (bad) ljmp repz jmp or lock daa js pop imulb pusha add je scas mov stos jmp jmp jae or dec call pop mov mov enter cmc pop mov or lret (bad) mov and dec mov insb popa mov and xor sub orb outsb jmp mov jne je mov push pop jle pop lods shr popa jecxz call fbld mov push jae les test lods push (bad) icebp dec push jge sub sub aaa nop pop inc and shrl out mov pop bound or mov sub loope and imul shrb test clc cli mov lahf gs popl ror out jmp es sub ja jno push and sbb jge rol ret lea dec adc xchg xor std jne test ret (bad) jge mov cmp mov mov les cli cltd mov add xchg xlat fs (bad) repnz mul cli sub jnp or push sub lds mov in mov clc xchg xchg (bad) lock adc push cmp pop out dec mov dec mov add test xchg (bad) or cmc mov inc push adc cli mov xchg mov push loop xchg test xchg sub jp pop xlat xchg repz adc movsl add mov (bad) into or or out sub xlat loopne stos sub mov mov add repz aaa dec out jnp xor pop lahf pop mov or stc mov sub clc or or add fbld sbb cmp scas aas lods lods inc xchg mov xor cmpsb ja mov inc leave clc (bad) lods (bad) lock lret mov and mov mov inc xchg out lea outsb loopne or cmp cmp cmc mov in push (bad) fldl2t sub test fldenv sub lods sub xor pop jae xchg sub dec cli mov add mov adc icebp daa ret (bad) xor jmp movsl shrb inc lock pop cmc xchg iret dec or jge mov adc cmp (bad) xor (bad) mov sub loope mov ret sbb sub add xor adc xor popf add and sub and xor cmp in int3 movsb fadd add xor hlt adc add jae mov repz cmp add leave sub lcall mov or jae inc jl sub rcrl jmp mov add or cmp fcmovne popa (bad) or lret sbb fsubrs or movsl shl sti pop or mov aad addr16 and jle push mov mov and xor and jns es loopne incl dec sbb and pop cmp jae cwtl gs out mov imul adc push gs nop stos sub dec mov ja sub in push mov dec (bad) mov sub cmpsl in mov mov das dec mov out xor lret jp mov in mov shrb cmp leave jl mov lret in xchg les cwtl pop pop sti cld push jecxz scas rcll lea jg cmp add mov mov aad outsl pop lods out inc sti mov test insb (bad) out add or and jg adc enter xor inc (bad) rcrb push or (bad) xor mov mov (bad) sub sub nop mov and sub sub sbb mov or jmp mov loop (bad) stos or fdivrl fist pop lea cmp lcall test gs mov push pop mov mov push ljmp push xchg push xchg adc daa stos sub cmp and in mov cmp clc and push and repnz cmp fsub sub cmp xor jmp xor adc mov add js sub frstor fisubrl (bad) mov sbb or cmc in ja test scas sub mov in sbb sub jmp sub aas in push in jecxz pop dec lret dec bound sbb sub xor jl test es in leave ret ss (bad) pop out push jo cmc xor lock fxch or jmp addr16 fidivrl add add scas mov adc ret decb jo adc cmpb aam ret add (bad) (bad) cmpsl outsb cmpsl mov jmp std lahf loop and call cmc ja jns xchg xlat test pop mov mov and mov sbb mov (bad) mov sbb xchg divl sub sub fsubl into xor or (bad) jmp lods pop aam daa xor ret out pushf sbb xchg stos mov insl mov or sbb (bad) sub (bad) xor icebp sub sub add dec xchg lods jecxz daa dec jecxz inc xchg icebp jmp xorb addb adc cld lock out mov or sti mov sbb sub xchg inc mov fldl and mov adc fdivs xchg jge sbb loope add push xor dec mov dec inc xchg or lods icebp ss add cmpsb push addr16 or adc lret nop pop rorb dec xor popf je or pop in and lahf (bad) (bad) leave cmc push cmc addr16 in ljmp int test lods shlb pop gs andb dec (bad) push mov and push fiadd (bad) mov push imul mov sti jne fnsave popf xor call pop pop mulb adc lea mov (bad) flds lea xchg lods loop mov movb xor popfw outsb mov mov xor mov out xor ret shll sub in xchg insb mov and add ficoml cli xchg push add ljmp mov mov push add mulb push repz lods les sub ds cmp movsb cwtl scas mov dec out lret mov and cmp movzbl mov in cmp and adc and or inc (bad) and mov lea xchg dec jle sbb sahf mov in popa sub push rcrl or xor in push mov dec add or cli and cmp xor inc jmp lock mov jne insb and pop xor xorl mov mov sub outsb sub pop push mov add sti pop sub and rorl push push mov xor add xchg dec mov pop mov add shr xchg std ljmp pop sahf pop and adc adc or push mov sub xor aas push sub pop xchg lret sti dec aas inc aaa prefetch or (bad) test sbb mov mov or mov (bad) add inc sub jmp mov (bad) sbb cmc jbe pop cmp push pop inc pop fldenv add add pop xchg pop cmp je outsb sub jb add and (bad) incl cmp pop mov lret push sbb je push xchg iret scas xchg xchg in xchg fisubr inc pop adc rorl mov neg inc add mov ja in dec add xor sub ret jae add test xor pop mov jle shr adc mov stc inc mov rolb mov sbb cld cmp repnz xor adc inc dec cltd pusha (bad) or das dec jle cmp push xchg push add pop push mov xor jno imul std add fcoms cwtl push mov push jmp add cmp add jp sub dec mov mov cs add sub pushf add mov or sub add cltd ja xor jns add add stos in loopne mov mov cs jne leave cltd xor out pop add lds sahf xchg (bad) push xchg fildl pop add xor (bad) sahf lret lcall sbb fldcw push sahf out and sbb pop lret cli bound (bad) dec test jne add push or inc adc shrl adc sbb ja jo,pt les adc sbb ret je clc clc (bad) dec loopne and cmc repz xor mov push lods xor out test into sti hlt (bad) clc sbb pop ret or ljmp add lret mov ja std dec stc lods das sbb rcr xchg aaa or popf rorl pushf cld jecxz subb sub and fldt cmc sbb lods inc sbb iret jb pushf inc jmp iret repz or sbb dec mov jmp adc movsb add mov test (bad) adc in mov push rcrb les cld pop ret mov add or mov xchg dec dec pop pushl adc fsubp and repnz loope rorl cmp lea push pushf add sar (bad) cmp add mov xchg ret stc insb sarb popf xchg aas int sub and jno xchg call mov cmp dec pop mov icebp fild mov pop mov mov add or and lahf adc out mov adc or (bad) iret out inc out sbb mov jmp aaa and mov lret push (bad) test lds xor gs or in xor lret icebp push mov sub test mov lcall shll cmp scas or push jg push fstpl sub or test sti sub mov or inc icebp add and mov and pop bound pop inc test or scas pushf ds and sub mov jbe call lcall xlat leave push mov (bad) lret icebp mov pop sarl sbb ja inc jg shll popf jns out pop pop dec lret and inc sbb push xchg je inc dec jne lcall stos sub xlat nop and movsb scas or daa cmc xor lahf and cltd xlat sti mov sub (bad) dec cmpsl and in popf rclb pushf mov push addl das push xor or and stc sub sbb sbb ds pop sbb out out and fs int cmp int inc ja adc xor int3 in cmpb mov shll jle mov iret xchg dec xchg out push xor xor ljmp sbb push sbb lahf jl (bad) (bad) mov mov cld lods ret push idivb fildll lahf mov (bad) cmpsl nop push leave ds or in ss xor or pop ljmp lds popf jb inc aaa pop (bad) cltd lock push in pop ds pop mov push xchg leave add enter mov leave fnstenv std xchg cmp push jmp mov and mov (bad) sti cli gs cwtl in dec add cld xor icebp (bad) lret data16 and push sub loop mov aad stos jge mov into pop ret clc gs addr16 pop lds or mov and sub aam inc imul xchg xchg and (bad) rclb loop fmul xor out cmp adc sarl adc xor popa iret xor inc sbb sbb sbb test jmp sbb or sub imul outsb test or dec cmp jae stc in mov mov nop cs dec adc mov fwait pop pop aas and add mov ss cmp push add sub fsubs movb out sub out mov lret pusha stc (bad) cmpsl pop ljmp adc pop in adc pop push mov and imul or idivl out (bad) (bad) jmp fldcw sub xor push xchg (bad) fisttp cli dec add add imul sbb pop jbe jl adc ret cmp sbb push inc lcall pop bound mov mov adc loop and cli ret jne jbe out inc test ficoml push (bad) jmp pop xor jp jno daa mov cmc mov inc pusha hlt gs leave or sub loope into mov pop xor push sub mov jmp ret pop cmp das dec leave cmc mov leave sarl xchg or cmp out jl and pop clc repnz dec xor and sar into outsl clc push movsb call mov out or leave clc sbb dec (bad) mov dec mov decl cltd divb add fcmovnbe scas cmp repnz out xor je test icebp shr pop mov and jl leave pop xchg jmp sbb shll mov dec test push push lret sub mov hlt or mov cmp mov ss jo dec mov out jp imul bound push mov je push ja stos out ljmp outsl popf roll ljmp aaa jmp sub push sti and and test pushf out lds and cmpsb push ljmp daa push inc dec push mov das or dec stc mov (bad) jl lahf cmp js out std insl mov repz mov (bad) jecxz jns dec and add pop sub mov and push ret das jno fdivl adc out fdivs fistpl adc xor ja (bad) out mov pop sti push out mov fcoms (bad) mov stos bound xor jnp sub sub sub popa pop xchg pop xchg xchg cli mov jmp jae,pt dec mull cwtl pop ret cmp js pop loop sub notl mov enter mov mov dec ljmp mov fidivrl dec scas xor ret add mov inc (bad) iret jle dec fprem lahf (bad) mov adc lock or leave (bad) outsl push push call mov ja insl std mov (bad) ds sub sub sbb lret ja ffreep add and mov pop jae xchg mov js mov jne push mov lret push std lcall (bad) xor les stos int cmp not (bad) fcoml pusha repnz jg cltd xchg cld sub adc push adc sbbb inc out je push paddd dec mov nop cmp and decb cmc fcomps mov mov mov push push clc popf xlat test mov mov adc sub mov into shrb cmp and or add dec cmp add in push mov push lods addr16 pop std xor sub mov aam lret pop js fidiv rdpmc loop int3 mov lock out psubq push addr16 or (bad) (bad) ljmp push ficompl or imul shr dec push and gs mov pop mov mov pop jno or cmp xchg jp cmpsb sar or scas and int mov jae and sub sub (bad) loope sbb push sbb fisttpl (bad) (bad) fstpl (bad) inc and rep (bad) xchg dec iret mov fistpll jmp iret mov pop and ret sub push aam or sbb ljmp cmp mov ja movsb das pop pop xchg ret enter mov imul sub ret cld lods mov xlat fsubrl mov push dec lret leave mov bound movsl jo loop pop sti dec test and fsts xchg sub imul and xchg add sub add (bad) pop or (bad) xor and daa adc push popa pop jmp notl out daa ficom loop mov mov cmp and xor shr (bad) mov sbb or jbe in out sub add lock nop popa push lcall push mov mov into cs mov inc inc and jnp mov add jecxz mov imul push loopne cs hlt pop test loopne repnz jl (bad) stos adc fcomp ljmp mov or pusha (bad) out inc int3 push in inc xchg cmp or pop lcall xchg iret dec add pop dec sub das sub jge sbb sub mov sar mov (bad) addr16 pop dec or add sub outsl and repnz add ljmp and in sub cmp gs push bnd insl sub mov dec in loop xor push lds add pop fistpll daa push push mov xor std cmpsl fs (bad) in push sub mov shr inc ret addps lods addr16 jnp stc jno jle imul dec xchg aaa add rolb cli test sub push push int out mov cmpsl push repz fnstsw es aam jb addl sti frstor arpl cs leave pop lds daa or daa xor push xor dec cmp mov adc pop shlb hlt test ljmp push les jg add stos dec pop call aad lods or cli lock dec mov loop and add adc test call mov cwtl sbb es nop out test daa idivb (bad) movsb out push mov or push jae daa jl call dec cmp ja push or out stc repnz push push mov out mov pop and cs pop jmp add push xchg and mov outsl shr cwtl loopne add cld mov pop (bad) ds mov sbb pushf hlt mov jl jmp cmp fs pop cmpl in call popf inc (bad) in popl daa rol and (bad) hlt inc jae pop mov mov add das inc lods ja mov sbb adc cmp dec jg flds outsl add cmp xchg push add inc neg mov sub por xor inc or cli in aad or pop subl jg neg add xchg sti sub pop inc lret pop push push pushf cwtl aaa adc xor popa outsb lods popa mov std push add push imul mov shlb enter popa pop mov mov add rcrb pusha les pop insb or jmp add mov pop mov shrl daa add das pop pop ljmp cltd xor xor xor ljmp call into jg notl pop adc pusha daa mov pop xor mov fsts xchg xor mov imul enter aaa cmpb bound loop shr pop test out or incl inc icebp pushf in xlat jae or and ss outsl popf sarb or (bad) or mov or or lahf pop or pop enter xchg push mov jae in movsl inc int fnsave or les shrl loopne out and mov loop leave push js mov sub pop je movsl icebp test shrb fcompl cld repnz ret dec jne jp fistpll stc and (bad) mov jl rcrb ret lock lods pop fistp clc enter in sbb pop outsl push adc call sub clc dec mov pop sub lods cmp adc push mov mov cmpsl mov jb push push jl sub sbb out sub or out mov cld repnz negb add ficompl sub js xchg sbb xor test sub jo imul (bad) lahf (bad) loopne and popa pop call or cmpsb cli call in sbb ret movsb sti mov (bad) jge insb mov pop push ficomp and lods popa pop mov adc mov xor scas int pop sbb imul aaa mov into mov xor mov lods lea cmp ret dec inc xor arpl jmp dec mov mov adc jne test mov mul out popf aam daa std xchg lret xchg std bound push gs out sub es movntps mov stc push notl sub fstpl push out push or stos lret into shl cs cmpsb mov jbe add add (bad) xor cmp lret lods xchg ror and mov cmp push icebp jo or cmp clc sub xchg stc cmpsb lock incl xorl cmp into jmp lock outsb xor sub mov adc scas loop xchg mov sub cltd mov jbe leave (bad) cmp dec sbb xor mov (bad) les std js ret icebp mov insb (bad) sti lret sub or icebp mov mov mov or mov dec mov jle add pushf push leave mov mov cs hlt (bad) push sub rcll subl cs sub (bad) dec sub xor cmp and in push push xor dec in dec test pushf popf add lcall mov sar (bad) movsl test xchg cli dec or adc adc inc or mov adc leave sbb movsb jecxz cmp push mov ret push sbb das cli bound ret add add movsb insl stos in mov jle ret sub push fisub popf pop xor cmp shrb icebp adc lods lds mov mov fbstp into mov aaa mov insl xchg cmp mov inc pusha imul pop xor fild sub repnz sub int adc sub or xchg idivl inc jecxz (bad) jae data16 lret mov test or sub cmpsb add or adc dec mov fisub jecxz cltd loope out cmp jecxz rorl sub mov sub ret fwait stc pop fs das in test add mov dec sti xor xor std (bad) outsb in scas movsl test movsl xor mov inc movsl out test loopne and daa mov xchg mov outsb push xchg outsb xchg lahf jmp inc add pop jb pop data16 call jb dec imul jnp ret lret movsb mov mov cmp aad inc jp xchg jno dec insb jge aam push shlb xlat mov mov cmpsl fisub pop out mov adc jbe fwait inc mov pop and adc xlat mov sti dec and cmpsl and iret roll inc (bad) mov mov cld imul dec fs iret xchg jle fldl mov stos sub call push inc repnz sub add fwait iret sbb push xchg into mov mov repz aad (bad) mov push pop js xchg mov inc sbb or xchg int3 (bad) (bad) push inc int jl loope gs notb lds xchg and imul sarb or notl cmp and cltd sbb sub in xchg dec mov mov xchg decl cmp inc mov sbb ret inc sub cmpsl (bad) push lods pop daa pop jmp jge mov ficomp mov sbb rorb push and pop les jle into out pop xchg add shll rcr jmp mov xor (bad) and stc pop sub push adc ficomp add insl jecxz out push push cmp mov jnp icebp hlt int3 lcall push vcvtss2si outsb les jmp push sbb movsl hlt sbb lds sub je popf add adc mov jle cmp int ret adc (bad) adc leave loop push dec xchg popf inc xor sub mov (bad) and cltd call loope and push jns imul dec xor sub jbe and les mov sti int3 xchg or test add bound add and pop or (bad) or clc lods push add cmp addr16 pop pop push aad addr16 cmp in sbbl inc xchg add pop cmpsl adc and cld sub maxps inc pop out mov sub cmc push jmp and mov push xchg int aas pop pop lea mov and imul je pop jo mov mov mov sub add inc pop fadd lods jno (bad) and jmp ret sar fadd rcll jmp and xlat fwait push mov scas mov xchg scas xchg cld mov and xchg aaa stc dec lock icebp and into in jmp inc imul pop loop shlb xchg scas mulb adc pusha xchg adc fsubrl into dec inc sub mov sub pop (bad) adcb inc outsb mov loop add flds inc ret mulb sub fstps notl mov inc mov ret rorb sub jle icebp out push push pop cmp push iret mov ljmp fdivl cmp repz adc jbe jp stos nop testl cli mov clc outsb shr and xor out (bad) icebp divb pop rorb fcomps lock pop xor sub popf insb and lret sub or push or xlat push ljmp cmpsl (bad) pop int aas call sti imul xchg push enter dec leave push lcall push adc jp aam sub pop stos cmp add jmp and add jb repnz test mov je xor shll inc push xor sbb lds aas dec stc cmc shlb roll lock mov mov cmp sti dec les xrstors jne mov call sub add and inc and pop leave xor or iret push jecxz mov xor int sub mov dec or repz (bad) out push adc add cld out out repnz push mov mov dec in sbb lahf cltd fs sub xchg push xor mov ja push pop and cld jnp (bad) sti bound xchg loop xchg insl lret (bad) jo lret pop pop stos xor and mull and outsl sub xchg lret xchg mov push lahf adc mov xor pop pop bound jle arpl into add dec leave not repz mov pop aam lcall push add ficomp mov pop push xlat jo add inc xorb push and xchg inc add mov dec xchg js and xchg mov inc fxch xor dec lds sbb outsb mov dec jmp cmp jmp sub push ret movzwl pop mov cmp pusha dec and inc add adc push js mov pop inc adcl push lea and add stos out xlat jmp dec out sbb mov and int sub push loop xlat bound jns xchg (bad) std sarb mov xor fwait daa rclb adc stos bnd daa adc mov out scas bound popa fxch sub xor lea stos test (bad) testb push in and gs dec pushl add jae pop leave dec lods mov cmpsb pop lds mov div push hlt iret gs push pop int cwtl lcall fildl mov inc gs sub cmc into fs bound push adc and lcall sbb mov push enter lahf push mov jb stos movsb je scas pop sbb inc or adc stos int3 loop xchg jp call xchg sti into mov dec mov pop loopne sub and mov fistl test adc mov out sub jl (bad) xor mov das jl ret sub fimull cmp push pushf and mov fsts sbb pop jp test xor cld xor xchg int3 jno (bad) xchg sbb xchg pop jb rolb mov mov add arpl cmpsl or adc sub mov add inc mov mov or push (bad) or cmp mov jg movsb cmp loope push mov movsb pop rorl sahf push leave pop xchg leave pop jle sbb xchg outsb inc shrb add test gs sub xor idiv inc cmpsb idivl fstl les outsl mov dec xor lret mov fnsave inc add mov dec loop lahf scas mov adc mov cmp hlt lret mov pop and and mov or add jmp and stos or mov imul shlb movsl cs push inc jmp cwtl sub push push fwait test and pop pop cltd repnz fildll movsl mov out int3 lretw mov fiaddl movsb mov or cwtl or mov mov push add xor js outsb arpl negb rclb xchg test scas jmp data16 dec push push mov (bad) in ljmp xor aas bound lock jnp cs sub loop pop cmp or mov xor iret aad push js stc (bad) iret and faddl mov mov and sbb mov (bad) or into das mov std xchg jo gs dec lock icebp aaa cltd add jbe sub hlt pop mov cmpsb (bad) mov and mov mov pop lret or dec push inc cmp xor push fstpt sub sar ljmp mov in add in pop repnz mov inc inc inc push and mov (bad) test inc push int cli rcrl add pop inc push or mov fistl pop outsb (bad) xchg out or enter roll cmp xorl fsubrl mov cmpsl ret sub xor jle ret int3 and clc mov stc add xor andl enter mov das lret pop sahf mov ja cmp and sti and popa int3 out mov std in push xchg pop mov fmull xor mov popf push out xlat jno movsl (bad) and cmp cltd sub pop popf (bad) div xor rcl das mov pop negb in fs jne or stc xchg pop xchg ret packuswb mov test cmc cli sub cmpsl adc pushf xlat xchg outsb lds aaa xor in dec in imull (bad) mov and scas mov je pop jo test outsl cwtl je xchg push pushf sti mov insl cmp and lods (bad) fxch adc sti xchg adc fstpl mov icebp shll imul push sbb and das ret mov test mov inc idiv pop inc mov orl rcr sub call pop add ret leave repz loope stc cmp (bad) xor add ficompl ret rorl test fdivrs sbb sbb ret out arpl adc fidivrl loop jge test dec adc mov xchg (bad) push (bad) jge add push in or into repz adc fdivrs fnstenv ret adc popf dec add inc xchg dec icebp or daa idivb or in out popl pop cs push cmpsb push jecxz cli sub jmp dec frstor add mov inc addr16 (bad) sarl fcom ret push sub xchg cli imul mov inc addr16 out or jne mov xor mov or mov and repz (bad) fild ljmp and sub sbb rcrb or pop rolb xor xchg jl pop fisttpll jecxz call add or test cmp jb mov mov jle nop mov xlat mov mov out sub mov jne pop js xchg dec or dec jne mov sub ljmp pop pop inc ret mov movsb mov out shrb (bad) mov mov je in mov pop test (bad) ljmp dec sbb fsub push mov mov jns cld leave repz lods inc scas js dec out mov ljmp ret jne inc ja pop stc sbb loop adc idivl lcall pop leave jb add ret out popa or and mov pop insl dec mov jmp mov pop lret sub loop insb xor mov cmc jmp and dec int (bad) lret lahf pop clc (bad) mov dec mov ds mov fiadd lret push cmp and flds out cs movsb cmp data16 add and (bad) xor pop notb push ret test out js pop loop jae inc sbb xor in sti sub pop push sbb jmp xchg subb leave mov fiaddl xlat icebp popa dec cmc fstps addr16 inc loope cltd mov ja out inc (bad) xor xor mov mov mov sub (bad) and jbe or stos out inc sbb out add add les call pop mov xchg std das sub push xchg jne mov and pop inc pop and mov scas pushf fsub (bad) dec imul fsubrs pop loopne inc sbb in fisubr into pop notb xor cs ret je out jae xchg and dec bound jg inc xor adc adc loop xchg scas mov dec and jle sub dec push nop rorl xchg lods lcall stc cmp dec mov mov pop in movsl out pop out repnz and inc out sub and xor cltd cmc int3 or xchg cmc icebp sub cmp jge add icebp fucom mov (bad) popf push fsubl and test mov cmp (bad) sub and fldl2e aas fs adc scas dec jno pop stc sub dec xor pop pushf bound xor ljmp add popf inc fadds pop adc imul pushf adc orl push pop xchg mov ffree pop scas dec fiaddl clc or cmpsl es and xor xor inc in popf (bad) lods cmp pop out lds repnz outsb push mov dec pop cmp or clc jg or pop lret (bad) mov das ljmp sbb out je out or and add jle pusha repnz pop and rcll int3 scas lret mov std fxch mov lds mov pop sbb lock add push addr16 xlat lcall dec lcall add add push dec mov mov push or mov loopne jecxz pop sahf jmp outsl cli out mov notl cld gs push repz icebp mov jle push out fdivr jmp outsl and and push sub inc fs (bad) repnz leave imul mov jle lret jmp jp push fimul iret stos cwtl pop mov lahf mov lock xor inc das fs pusha sub fidivrl jmp sub leave adc mov adc pop sti sub popa mov out xor dec (bad) std outsl sub push sub push cltd dec xor xor push (bad) fildl dec mov add jecxz daa and mov or (bad) shll xchg repnz adc fbstp mov notb enter cld cmpb das loope adc clc iret mov leave decl inc daa mov lcall out dec mov aas cmpl imul ja sar dec icebp or lret scas dec (bad) repz add xor xchg cmc push ljmp sarl fimull jle or lret cmp mov out jns movsb rolb setl inc mov inc mov ja (bad) mov push imul inc and dec (bad) cld and xor jne divb repnz adc movswl inc (bad) cli loop leave into jge lcall mov cltd cltd fimul ljmp ljmp aaa xchg jmp sub adc movsb ret jge mov mov (bad) cmp lahf mov insb fwait das xor xor add and mov sub cmp int3 in iret adc addl pop arpl mov jno or mov arpl in cs and call pop jmp dec mov int popa daa xchg dec icebp jmp movsl pop mov (bad) mov add add or fbstp stos repz mov cld inc fdivs pop pushf push dec push and lret sub dec daa loop adc xchg test and (bad) sbb or movsl daa or adc cwtl scas pushf push xchg stos sub andb pop addr16 cwtl arpl lods fs mull jp outsb pop inc and icebp and inc push jg sahf daa ja lods aas xor inc ret ljmp pop add sbbb in mov sbbl insb out in pop daa sub das sbb leave jae jnp push mov push dec scas loop std stc fmulp bound js test jmp lea test mov adc jp lcall mov in test sar mov adc and mov ljmp or adc pop mov out je scas add lret push adc adc cs or sbb (bad) fisubr test fdivrs (bad) xor mov pop push popa (bad) js scas xchg repnz or (bad) daa fs cwtl fdivs enter adc sub mov adc cs xchg test sahf jns out mov mov lahf fbstp das ret adc add or aad inc dec sub das sub test push (bad) sub or mov mov out xchg mov clc in or jge test or enter neg adc (bad) cld pop lds (bad) inc dec divl lcall call mov pop and (bad) mov (bad) mov or xchg or in lret (bad) jae jecxz in lods ret fcoml int3 and push cmp (bad) sbb div jb mov xchg push mov add lods cld add das lods in loope or push mov jnp xchg mov mov inc iret dec mov push imul aad cmpsl das negl or stc jp mov sub mov dec in jnp es lock icebp push cmp leave imul pop mov test add cmp add jle xchg pop test inc mov add mov aam pop or das sub pop fistl lret movsl dec bound repnz mov adc jae jle pop les push mov (bad) loopne xor pop add lcallw out xor and lods out shll cmp outsb sub add lock gs ret stos sub cld xchg or fldenv mov divb fstps es mov mov dec mov dec and add sub push dec mov fstl imul push stc xchg cmpsl in sti lock lret xchg in rolb ss dec sti loopne notl xchg jp sbb sub fisttpl lret inc inc enter addr16 cmpsl cltd jbe das test xchg or add mov push sbb jmp stos jecxz sub (bad) out mov adc push sub dec rcll jecxz cltd inc add push mov push ret dec pop sahf xchg xchg icebp mov (bad) negb testl notb adc push xchg js popf jge xor mov mov das xor clc std movsb pop mov mov jmp push xchg sbb mov dec cmp mov into add dec pop jecxz mov push fld sub push mov ret mov fstpl (bad) cmp cmpsl (bad) cmpsl rorl pop (bad) mov (bad) call in jmp das rcrl pop adc out dec mov sub das xor (bad) mov mov fistpll mov daa int3 lcall and jp jp add je mov pop loope inc lods fidivrl stos jg shl jns mov mov mov (bad) enter xor stos and pop jl enter xor xlat dec pop and push push stc leave dec fistpll hlt rclb sbb fcomp or lahf jno adc aaa push test lods int3 mov jne add sub cmpsl jl (bad) mov push rorl jnp aad push (bad) das test das or inc mov mov divb cmp pop cmp and jge idiv ret (bad) push sbb shll sub test cmp into mov repz mov rol fdiv sub rcrl aas mov pop stc in sti jecxz mov inc adc loope dec jbe jecxz inc mov popf aam loop sbb dec pop dec jp sbb adc not sub mov and adc dec idiv sub cmpsl push pop pop idivb sub ret mov push mov inc cmp (bad) ret adc les mov cmp cmp cmp std mov xchg mov lods dec mov in je scas and repnz test mov sbb add pop mov rcrb rcrl ret notb adc test dec stos xor std roll imul and (bad) jmp cmp aaa fild loopne or mov icebp mov pop les inc leave out xchg mov lea dec imul cmpsl xchg cmp add jecxz mov mov fisubr loop or dec xchg out xchg dec adc loop xchg lock imul pushl nop movl inc bound xchg stos sub jno sub shl dec ret mov add lock jmp and mov and pop into mov xor dec add testb xchg (bad) cmpsb and cmc push imul enter xchg cli pusha dec (bad) mov xchg jne jae shrb cs leave pop push cwtl inc xor mov pop jle (bad) cltd std cmp (bad) mov cmp cwtl das out jle pop in das add jle dec jne xchg push pop sub mov mov dec loopne adc loopne scas fldenv sbb pop sar movsl stos lret sub xor repnz add pop push mov idivb jp out mov repnz iret xchg jne lds inc pop xchg push mov jb mov jg mov lret sub in add or pop add nop fdivs popa jmp clc outsb mul inc xchg dec mov repnz and aam iret push xor cmp ja add inc or gs scas push mov push outsb dec lcall stos xor xchg mov sarl jae pusha add and inc mov shr cmpsb mov (bad) lea jecxz sbb adc popf data16 mov lret aam (bad) inc pusha mov shr ficoml out addr16 xor or or sub jbe es jmp jmp sti jns jge mov sub pop jmp out inc and jle shr mov push fs ja push dec jmp xchg fsubs mov adc movsb stos cmpsl push (bad) xchg lods inc (bad) dec sti xor and xor mov push push pop inc add jne stos add dec push cld sub lret sub adc push int3 out popf repz es mov or in das xor push sub loope mov mov sub fwait adc clc dec mov cmc add lret dec fs cmpsb push sub (bad) jo shlb aaa lcall inc pop xchg sarb mov sbb hlt and push out dec lret fsubs pcmpgtw inc arpl and rorb push add (bad) stc add lock insb aad setno cwtl inc cmpsl cmc mov pusha dec and mov add mov jae push sar aad adc lcall add mov jb mov xor cmp ljmp es stc hlt sub xor ja aas jb add rep fdivr leave xchg notl lahf incl aaa adc sub insl pusha mov or sub mov sbb cld mov gs test jmp fsubrs rorl movsl daa test and sub add js mov mov stc xor or mov (bad) add (bad) sub add dec and sub add adc sub movb aad cmp in leave mov inc mov xor mov data16 mov inc (bad) lret mov ss xlat nop xor xor sub or adc (bad) sub jg dec cli test out xchg in add gs cli mov das pop adc test sahf xor cmp cmp sub dec (bad) aas xchg mov and mov pop (bad) mov push and (bad) push dec iret lea sub jecxz push lahf jle div mov aam cmp mov pop pop scas cmp sti lcall cmp push lret repz pop lods pusha movzbl mov int push imul push das inc cmp pop xor fs in pop lret sub or jp testb or fidiv and cmp pop shrb ret push and sbb or mov shll xor das insl mov divl popf and (bad) sub cmp (bad) mov pop insb daa adc dec pop sub cmp sub daa int3 add fwait test push or xlat outsb push mov dec add cltd adc mov push pusha daa mov sbb push sbb in imul (bad) vmovddup (bad) (bad) lret stos xor scas or shrl sub hlt cmp fcoms jmp adcl pop ljmp lds jmp movsl cli incl push push (bad) adc adc cmp test out pop testb enter jp stos add xor lahf je jmp and mov cltd sbb arpl jb mov mov sbb ficom xlat lcall aaa mov jnp std adc jns jl push rcl cmp and cld pop lret adc lahf lds lods shll lret jg or mov ret movsl push add pop cld mov and xchg cwtl nop jmp mov xchg pushf pop fucomip mov dec xchg (bad) xchg loop inc jle push ret inc into js out lds imul and mov jae add sti aam jo mov jne pop rol out or mov jnp inc dec in add repnz ffree cmpsl or or fnstenv sub cmp sub stc lret clc or fidivr or popf in mov sti sub sbb call stc push xor fsubl and icebp add repnz push sub imul pop shll jle aad sbb push mov push leave mov inc mov iret add adc inc lret xor stos sub out cmc inc insb adc stos lret sub lods cmp mov mull sub jne mov dec push or push lds ficomp pop icebp stos mov repz in mov fstl sti ljmp daa dec (bad) mov and stos loop xchg loop dec test idiv stc int3 leave fcoms or add scas sbb or call clc adc xor lods mov xor fcomps xor and sub das xor insb es inc cmpsb shr xlat xor ret mov (bad) dec lret pop movsl movsl cmc lret inc mov sub (bad) mov rorb jle dec mov testb out into popf pop cs and sub cmpsb sub xchg iret mov adc and xchg adc sbb imul (bad) or ds or (bad) fsubl and testb fisubl enter aam pop subb das cmp cmpsb jge test jmp and and mov out sub loop lahf push ljmp adc lret (bad) fdivr leave lcall repz ret mov jmp jo or mov jne scas mov repnz fsubl dec imul stc dec imul add push dec mov scas push adc cmp bound xor imul cmp jmp je mov pop rcrb aas test xchg mov (bad) out cmp pop call aas popf add icebp lods add inc push stos mov les xor inc sub cmp mov dec adc cmpsb dec or cli std inc jecxz sbb mull js dec out test movsb jecxz adc xchg or call (bad) mov rcll inc inc push add xor aas cmpsb sub cmp push xor pop adc sub out inc xchg out fs stos clc dec shrb negl rcll fs (bad) repnz jmp test mov es shrb jl (bad) sub jle andb ds pop leave jo mov lahf cmp test out sub popa (bad) xor aas in cmp sbb sub or notl xchg dec jge pop jae movsl push or rcll test mov and inc or fstpl cmp jmp outsl and das fs in xchg out xor lods test and popf sbb fmul sub inc outsb and sti add jmp or ret ds incb lret xor jae adc xlat lods outsb lds (bad) add loop xchg lds in incl push add mov mov leave xor cmp popa mov sti inc ret cmpsb pusha mov sti (bad) or and xchg add inc mov pop sub das jbe pop icebp mov pop data16 xchg call add xchg sahf jmp (bad) (bad) add insl mov les out sbb dec mov lret icebp push or clc repz push jmp loope lods not test mov xor repz popa sbb fs xchg stos sub ja mov (bad) and (bad) and dec aaa pop mov cmp xor xor and sahf inc jg repnz das pop (bad) push aad repnz out pop push push fmul lahf rcr adc push icebp sbb cmp out jecxz ret out pop mov aas cmp jle ficoml push inc xor icebp (bad) inc dec cs push imul fmulp icebp call mov int jp lods adcb dec jae das fdivr arpl std jl add flds repnz jge or jmp outsl jg or mov and out and xor (bad) bound add mov (bad) xor pop sbb jno ror lcall jmp outsb mov jae sub dec jl ficompl fisttp push or sti inc inc ljmp pop shlb sub rorl (bad) add aaa dec aas push leave add lret adc enter in (bad) faddp fs negb add pop inc pop test imull roll push mov mov out adc aas pop inc popf movsl fucomip out addr16 mov add (bad) int cmpsl sub xchg aad sub andl (bad) mov and mov sub ss loope dec mov push lea pop pop popf dec insb sub xchg in push addr16 daa lret hlt int3 ret push xchg push mov jb insb jecxz cmp jns mov iret cmp hlt push jmp clc sti add outsl and pop adc sarl insb in stos loop rcrl dec xor xor inc shl cmp hlt add xchg shll les and adc push pop mov jmp xor and or mov pop jnp inc adc cmpsb (bad) in das and inc cmc sahf sub ds and inc lods imul pop jecxz and push lds mov sub dec adc leave pop fwait call fistpl call or scas add xor loop jnp sub mov mov add fildl sub test idivb in ds mov dec mov iret clc loopne notb aas push mov data16 test sub mov scas lcall pop divb sbb xchg pop leavew push ret sub lds xor or mov aam enter push mov push push mov sub pop add inc xchg mov insl inc adc (bad) aaa cmp jbe mov dec sub or cli or or lret xchg mov sub or js repnz push xor pop call push loope repz mov bound add dec pop mov pop and dec sub sbb loopne pushf out out add clc pop sub sub mov or push fsubl (bad) xor fs jnp scas add inc jae jnp add push push jns dec fs pop sahf mov fincstp shr test mov jmp sahf into pop add imul pop dec fild imul xchg xor jge adc loope popl ljmp dec pop jmp sub ret xor cmp add push pop pushf ret repz lcall scas pop and jge pusha push mov push push push jne xor sub in pop push jnp xchg fstl popf jbe add inc mov push add mov and out sub jmp imul add daa adc test sub lahf pop adcl sub inc inc and outsl cwtl jmp imulb jl xor mov and sarl iret pop decb call repnz or outsl mov cs xchg call cmpsl push sub fiaddl pop mull (bad) pop sub cmp mov or jp inc pop push mov sbb push sub jle or sub sub movsb xor lahf fwait sbb fnstcw imul stc cmp and and and mov stos adc repnz add pop pop mov sub jno adc pop adc cmc xchg scas jae pop xchg xchg xor dec jns fcomps rorl cmpsl mov loop and and lahf (bad) adc lock xor or scas and cli xor add fbstp adc sub sarb dec sbb adc (bad) push jae pop sub adc lods fild mov ljmp push enter sti pushf jmp ret decb out stos xor mov into rcl cli repnz push leave mov or sub inc (bad) jle push aaa outsb in sub inc lods cmp and loop sub add mov inc pop or cli push out (bad) mov add negb std push pop pop shr or pop adc mov icebp mov jge xlat shrl push mov test neg and les pop out rcl dec xor cli jge push cmc jns or xor or movsb pop dec and test or pop ficompl out and pop fist adc sub dec lods jb pop rcrl mov sahf out inc xchg adc dec dec out sub fisubr xlat jns movsl fstps sahf or repz push adc or mov xor iret jbe dec xchg cmp test ret pop cmpsl div pop pop sub push cwtl push mov movsb insl mov (bad) das negl lds repz out sub fldt or ja ret cmpsb test mov popa test subb add clc inc loope fldt cwtl xchg repz mov xchg call xchg inc pop cmpsb (bad) movl je add mov jne cmpsl jmp mov jns xchg leave (bad) mov (bad) xor cwtl fucomip mov lret mov mov aas xor int cmp leave jmp sti cwtl jnp inc or adc ljmp mov ficoml scas mov pop cwtl js jle call dec push movsl fstp push sti (bad) sub inc or jg dec popf xchg loope mov clc wbinvd fild xchg icebp bound jecxz cmpsb in add xor mov push mov out and push jg adc pop inc mov jmp xchg lods hlt movsb xchg (bad) mov add (bad) test pop scas jne test push ret adc xlat cmpsb sarb movsl push lcall mov (bad) fdivr add add jae clc std shrl sbb mov popa mov divl mov pop add or ret jg in and add bnd fwait call cli shrl adc cmpsl xchg out int3 push aam pop push inc adc mov cli movsl aaa add xor jnp push pop fistp ret xchg jo mov pusha mov sbb repnz out pop test pop cmp mov push int3 mov mov fldz sub mov lea cmp imul stos sbb int3 jb (bad) imul jle in aaa xchg inc push les adc (bad) push lahf inc jl aam lods jne leave popf sub mov jbe adc and or mov and cmp aas push test push fstp inc daa (bad) icebp dec sub mov jmp sar push fcoms and xchg rorl jecxz outsb pop push sbb inc or leave imul xor test cltd adc jo mov dec fsubl clc cmc icebp push in (bad) cmpsl fdivrl jo jo xchg iret xor or lods pop and repnz jb cld push jno sub lds cli int jp scas sarl lret lret and (bad) aaa test les fldt pop xor (bad) xor add iret imul mov adc cwtl push in add dec out fwait pop movsl push xchg sahf mov fmul in (bad) push mov jnp mov and mov cli xchg mov out test xor xor sub dec sbb xor xchg pop mov sub ja mov or aas push sub insb or pop xchg push pop jae fstpt int3 pop popf jnp xchg mov sarb pushf fcoms lcall push xor sub push push lret (bad) test out pop out sti adc hlt mov or add lret jl and or inc bound cmpsl jne add sarb dec flds sub out gs adc ret pop hlt xor (bad) mov mov arpl add sbb mov add and mov test (bad) dec cwtl mov xchg xchg gs lret push dec call imul mov aas bound pusha js inc movsl test sub repz push (bad) cmc flds imul jmp inc sub mov push fimul imul pop mov pop sbb push push mov dec imul sbb push push jns mov or jle popa xor scas mov icebp sahf ret jge push dec leave icebp push xchg into xchg fsubl lret popf int3 add dec (bad) mov out loop sarb mov mov dec repz stos lea scas shrb add mov sbb cmp mov jbe call mov sub mov push ficom adc fnstcw lock leave dec and adc out leave jmp jno inc adc test dec sub out jo mov push popf xchg xchg pop (bad) fcomps pop adc push hlt into xchg pop dec jne xchg jl xchg leave inc xchg cmp rclb or mov inc sbb das pop ds xor popf ret rcrb xlat jecxz das (bad) jno imul xor or rolb and mov sarb leave or cmp std cmp arpl lods outsl and fildll mov loop pushf addr16 mov push movsb dec jge and dec sub rorl insb xor dec test mov dec das pop sbb outsb xchg jmp dec pop mov jmp sbb jmp arpl idivl push mov mov std xchg call fistl les mov cld test dec inc push mov pop leave jmp ljmp dec cmp icebp jle into lahf pop xchg mov ret dec jmp and jmp rcrb out xor adc fstpt add jecxz sub (bad) mov and and loop shr mov and jl rolb and leavew nop inc xchg clc movsl popf ret sti rorl jg inc mov gs adc stc aas idivb xchg rclb shr push outsl call subl mov add leave add (bad) shlb scas hlt sbb sub inc lods mov test cmp test rcll adc xchg mov or push mov add xchg jns fisubl pop ret clc lret push ror xor pop add xor cwtl xchg ret cltd and pop sub mov sub push out daa add pop sbb jb inc mov push push xchg jno push sbb mov aam push sub pop mov clc popf jno scas xlat imul pop add and adcb fist and pop push fstl scas loope cmp data16 or or lret loope cmpsl (bad) clc lcall std push cld imul sbb fsubl mov dec pusha loopne or ret test dec adc mov jmp or add pushf mov push js mov pop cmp inc dec pushl ds inc dec stos lret call in jecxz pop stos adc mov xchg mov adc sub movsb push xchg lds dec loope lds cmp mov es or fnsave sub lret aam rorb daa fnstenv dec out pushl pop xor in mov cmp lods ret push jns mov int3 mov nop sub add lock push in (bad) or int3 pop lock pop xor lret jb mov mull dec insl daa cmp sbb popf (bad) lahf rorl sbb pop lock fs jmp sub add shrl clc (bad) xor stos sub add gs insl and out int3 lret aam imul aad inc cmp dec psubsw and mov adc xor test cmp jno movsl fcoms pop repz out insl hlt outsb cltd push jns fidivl push push test mov mov xchg cmpsl mov pop mov cmpsl pushl inc xchg into insb mov xchg or mov bts and and push sbb mov sbbl sahf and push and xchg pop xor jg pop mov pop push add mov sarl mov jmp lock cs sarb iret leave pop ror lret sub popa je call ja (bad) in or mov jo es and pop mov xor fcomip xor in out lock ret pop and push sbb in xchg std ss jne mov xchg sbb mov jmp nop test mov out jb sti push jns movsl cltd xlat jmp adc pop (bad) out cmc dec mov lret inc and rorb mov in adc jne or cmp (bad) lahf push pushf dec mov pop ret pop leave (bad) aam adc mov or mov stc fcom mov into xor jp add ds andl clc push sub es adc push cmp sub ss mov pop daa jge loop sbb lret pusha mov jp sbb sub fiadd sub cmp sub mov add mov inc imul into jb mov rcrl dec inc add outsb ret mov adc mov and pop jmp enter lea xor (bad) lea dec add icebp jmp scas leave pop imul subl popa lds pop scas repnz push aaa sub cli sub loop fidivrl (bad) stc sbb or inc rcll jle mov stos bound mov lret mov mov (bad) out ret (bad) stos jl or or add outsl and or (bad) mov loop mov add mov jl jb cmp and adc xchg test mov icebp jo pop sbb fcmovne (bad) aam dec repz cmpsl push cld fidivl mov imul idivl std push or adc lret out pop stos or out jns dec bound pop jae sahf mov or lret imul pop xchg adc mov ret pop ds (bad) or push jbe in int clc mov (bad) mov mov mov lods (bad) xchg xor pop pop popa dec push dec push mov pushl data16 fmull stos sub pop xchg cld xor xor clc cmp movb or xor rclb xchg addr16 xor push flds push ret fdivp out or out fs cmp xor pop jg inc and lcall clc push adc adc pop and lock sbb mov and pushf imul fidiv test or and and jecxz pop or mov xor add insb push xchg lock mov cmp aaa xor jle jne ret mov movb sub sub dec ds inc out repnz lock pop ds cmp xor xchg hlt mov repnz mov fbld sub mov mov xchg push jp push in sbb movsb mov (bad) ret out mov scas mov (bad) push sub movsb and idivl jmp mov dec xor mov (bad) push jns inc mov sub (bad) add shlb dec adc (bad) inc sub cmpsl add pop add mov sbb sub add jecxz pop sbb pop ror dec frstor jb fwait xchg movsl add call fimul mov sub rorb arpl pop jmp aas movsl and mov push mov mov adc (bad) mov iret mov popf cwtl rcl add jmp movsb (bad) xor gs add out mov xor push and mov js add lods and inc lret fimul xchg and or mov adc int ljmp jmp jl sar shrl xchg stos jecxz xlat jecxz dec andl cmpsl loop xor push xor lcall or or call int test ljmp mov push adcb and inc sti sub mov xor lret aas push add mov xor negl fstl jecxz rorb int3 popa sub ret or xchg mov aas adc sahf adc xlat inc mov pop pop stc out pop popf (bad) mov sub mov outsb lret (bad) call dec and push sbb fnstsw ja js ret mov push sahf or fisttpl lock xchg mov ss (bad) xor jno outsl std and shrb xor imull mov push hlt pop sub pop (bad) and (bad) aas testl dec ljmp incl cltd jmp lcall xor loopne je pop call sub out dec pop dec mov lds mov push popf pop fs lahf rol orb imul jbe daa mov sti jo mov sub (bad) iret repz mov and repnz pop in scas sub push fwait pop xchg sti mov or mov (bad) lahf mov repz lret jbe fstpl scas hlt sbb lods cmc movb jne inc and xor and dec icebp pop cmp xor dec lods sahf cld inc fiaddl add stos xor notl lds add popf and inc and icebp lahf xchg add iret cmp sub lods mov jl and add (bad) or aas add inc or clc rcrl mov subl cmpsb scas das mov pop pop ret push mov sbb mov or fcoms arpl imul in push rclb jl fsubr or mov scas (bad) lret roll or ret fdiv dec push or (bad) sahf inc pop out xor gs rcrl dec jb add xlat mov adc cld decb repz inc mov in xchg icebp mov daa enter sahf (bad) add or push decl jmp add jnp and bound cmpsl jo out add dec mov dec xorl rcrb not or mov ljmp pop push fistpl clc jbe push push (bad) pop lods inc inc or mov xchg ds dec lea and sub mulb jno cmove lock push cmpb dec in pop mov lds jae or add inc ret rorl cltd mov sbb xchg dec fimull push and dec mov inc test add sub xor mov pop (bad) repnz out cmp pop insl mov xchg ret lock das mov fstpt daa rcll xchg jns mov xor mov leave push cmpsb dec out xchg daa ds std push into pop sub mov test out lret add int3 mov or scas and xor cmp add into adc xchg and int sub sub jmp add in daa (bad) insl imul (bad) push ret fndisi(8087 xchg add mov roll add mov pushf inc mov loop xchg loope push call xor mov sub cmp dec push sub out into les dec enter into test lds sub loop xchg fisubl sub and test xor and pop add insl shrb sti je out adc sbb aam mov xchg std adc sub pop into pop xor jbe insb nop (bad) mov push dec adc mov rcrb jge add pop and sub jp jge (bad) in cmp cmpsb push sub lret dec rep pushf inc jecxz mov cmpsb dec push out nop mov lods xor ss scas mov xor xchg mov bound or cmc pop outsl leave jg mov cltd xor push jno or mov adc push into jg loop bound push dec idivb dec je stos out ds mov mov stos test pushf xchg jmp cs in cmp imul lods (bad) mov pop cmc xor dec mov clc xorl jecxz pop in cmpsl nop sub orb add xchg into mov shlb dec jae scas je push mov adc lahf cmpsl test and int cmp mov dec imul push scas outsl incb mov jo or pop fs js mov xor jbe push lea mov and ja xadd iret cld inc lret out mov xor fistpll push je ljmp inc xchg dec enter cli popa movb lret xor mov outsl xor sub mulb (bad) push out mov mov ljmp lret push cwtl test in loopne lods lods inc jo inc andb and cmp pop (bad) dec mov xor (bad) inc jb adc xchg loopne (bad) or leave jo jp insl sub ljmp iret mov lock mov jne xchg push or sub cltd cmp jle add sti test sub mov cmp aam jne popf dec mov sub (bad) or xor rclb out xchg (bad) pushf lds daa insb test gs mov out xchg leave sub leave out out sti add mov xor sub fidiv repnz mov mov sub (bad) mov das mov add cmp mov into (bad) pop lahf shrl cmp adc xlat test (bad) call inc cmpsl jecxz or push pusha repnz xchg mov outsb into mov cmpsl out add ret jns jle mov push and jl pop (bad) jecxz sub into ljmp add jbe push loope pop pop jne sub repz aaa js nop fs hlt dec call (bad) scas daa mov out js push rcrl xchg out out xchg icebp xchg and mov xchg add mov fsts ljmp roll jbe inc xchg xchg fdivrs ror mov mov sbb popf xchg ret cmp inc pusha sub lods in (bad) icebp dec fisubrl push cs adc add xorl xchg sub sub jle mov pop dec idivl out mov mov add and in adc iret iret xor fsubl mov into dec xchg inc jns pop jle popa int add cs stc cltd test push je repz aad push adc scas xor cli or shr adc add (bad) aaa dec sbb dec pop cmp pushf adc lahf hlt shlb xor idivl ja int3 or adc and mulb inc test andb js imul daa test sti pushf sbb das sub adc scas cmpsb int out xchg aad loop xchg and in stos loop xchg xor icebp xchg mov ds adc movsb cwtl lock or frstor data16 pop lret mov subl jle cmp (bad) mov (bad) add std (bad) fidivl and dec mov cmc mov out xor sbb push (bad) dec and push jp jg add dec les inc and mov xor fiaddl test fistp xchg and insb ljmp arpl mov pop cld (bad) push pop sbb lods and je lds test aad pop pop add sbb jns into repnz sarb xchg mov and bound rol jl jmp leave add (bad) mov out cmp mov and in (bad) scas mov das fild jmp orb jecxz cmc xchg mov mov in aad dec mov jo inc jle es mov push fildll push mov xchg xchg xor jnp (bad) insl pop out leave sti bound jne test add mov xchg call xchg data16 cltd push int sub fistl shrl ljmp xor jle cmpsl test loop jp or sub pushf push in in add pusha shll mov sub push mov lods hlt and loope pop and sub das sbb mov sar movsl scas mov add sub pop repz lret xchg or mov or cmc daa jns push adc and xor repnz dec sub imull fstl call ljmp cmp pop sub sub sub sub das shrl fistpll pop (bad) mov out pop mov push and fdivp fidivrl push out and daa inc pop adc mov dec les sub xor out jmp fsub lock aad mov and dec and cmp ficom sti fstpl das out xor xchg int3 fsubrl fcoms stc fs adc xchg divl in sarl pop notb add inc mov sub sub pop mov or dec xchg push (bad) ss mov sbb testl insl sarb into call lods sbb and sub xor lret mov out icebp jg adc adc pushf scas mov (bad) lret push int3 out dec adc cmp or mov and push stc xchg xor mov iret popf dec leave ficompl push lock orl das and call cmp repnz mov pop mov das gs xor pop dec lret ret sbb ljmp and pop inc inc add xlat out daa lock (bad) pop dec add inc leave or dec and pop daa pop daa mov addr16 fldl rorl daa sahf les into movsb sub dec mov xchg or mov decb add mov xchg fdivrs ja xchg rcrb jmp push icebp add aaa adc adc fs or out jne mov cmp xchg int3 pop leave pop xor add mov push out xchg mov adc add mov out insb and (bad) sub sub jl shrb add mov (bad) mov mov movsl pop jg xlat mov repz sbb sbb xor outsl dec mov push and pop dec add cmp test add icebp or and mov in jb jecxz out or pusha loop and jbe mov mov xlat iret dec mov clc into sub sub dec (bad) cwtl lahf jmp xor mov ja and mov jle movsl ret pop out outsl or jg aaa (bad) mov mov add add ljmp mov ja mov in adc in mov push push jp mov iret data16 jb insb pop arpl xchg stc or data16 pop jecxz pop push scas sub (bad) or mov jle or pushf push (bad) adc gs pop cmp out fwait decb cmp pop cmp test xchg cwtl cmp mov leave ret mov push cmc mov ja add xor dec out mov fimul iret pop jmp push stc es and movsb cld mov mov sub pop cltd jns (bad) (bad) xchg call or mov (bad) jae push or fadd ret and fwait or int3 imul mov inc or insb into addb jne rorl and js xchg mov (bad) sub in ss (bad) or pop push jbe dec mov repnz out mov test std and insl xor push sub gs cltd xchg dec loopne lock lahf int3 xchg pop jmp aad out xor sub aad xchg jnp push jmp add pushf jl shlb and mov orl sbb jne enter pop xor loop rolb jecxz and ljmp push add inc sub xlat xchg pusha ja mov inc xor addr16 xchg ja sub fnstcw out fs cli xchg hlt scas cltd cmpsl imul iret jge gs cmp mov or dec cli or not mov test xchg mov pop (bad) dec gs xchg in lahf dec mov dec xor adc scas or ja testl cli push scas popa jae (bad) movsb lret (bad) incb lods ror dec fstps outsl movsb iret ret fldcw out dec or dec sbb (bad) xor sub outsb fsts cmp or clc (bad) dec fstl rcr fcoms lods and movsb mov pop cmp add xchg mov xchg mov fldl loope mov out push (bad) adc sub sub clc cmc leave divb cmc cltd push mov jmp jbe push ljmp movsl inc (bad) mov jmp sbb xchg sbb into and adc mov lahf adc les aas mov sbb xlat inc shlb inc cmp out ficom insb imul cmp pop pop (bad) sbb and pop dec rcll gs sbb cmp loope sbb and cmpsb cmpsb pop xor mov xchg popf adc push jmp or add mov out jecxz cs dec push adc out push stos enter jle aas es stos sub pop cmp xchg jmp imul and movsl jne xor jb sub mov rol jnp stos das pushl xchg idivb push test adc out fstp cmp or xor push int jae mov fwait movsb sub push mov ja mov or aaa ja push pop test pop out dec in pop mov jge (bad) and repnz gs mov ret add mov pop lea jp xlat xchg clc rcrl xchg mov push lahf idivb sub fimull sub pop jmp test jg es dec cld cmp cli push into mov dec adc dec rcl mov sbb sub into xor dec and rep cltd fdivrs es xchg int3 cmp xchg pop loop aaa lcall lcall mov dec mov sbb (bad) sbb jge scas or mov pop lods lock mov inc (bad) inc dec je sti loop xlat out adc mov out mov cli jne pop push inc ret jmp inc stos xor push push dec sbb sbb dec (bad) mov (bad) and decl mov pop xor pop mov and and mov mov jnp js pushf das push add fbld js (bad) jmp int outsl mov inc mov add and (bad) outsl cmpsb (bad) dec push dec and lret je rol sbb jl adc pop mov les adc sbb sbb in mov sti repz cmc pop add mov inc imul neg lahf or or lods es push push push jg inc sbb pop pushf push and inc or add xchg sub pop pop sub das icebp xchg stc dec inc sti outsl xor test xor and cmp inc daa mov jl bound enter (bad) (bad) and cmp jae jmp scas push xchg mov ficomp xor push stc das cld pop xlat mov pop fs xchg pop test (bad) jl into fwait pop test or sub jnp sbb ss xchg repnz mov dec stc xchg and pop jne fwait loop sbb movsl inc (bad) adc mov inc call imul insb mov loope xchg push xchg fsubr jmp sbb test xchg add out mov out sub mov popf (bad) push xlat into jp sub ljmp sahf xchg out jmp push into fmull leave jnp sub xchg movb push insl xchg loopne push sub int3 idivl (bad) fsubrl jecxz dec (bad) sub sub lret and test inc std movsl rorb inc outsl test push xor xor std jns dec imul adc sub xor ficomp pop pop loope sub push add dec sub inc pop lret sub sub and push xchg sub rep xlat sbb xor jmp jae jns sbb fwait mov (bad) int3 mov enter movsl cwtl add pop xchg dec aad pop scas cld push and xchg (bad) idiv ljmp mov xchg jmp hlt (bad) add and data16 mov pop out or add inc and inc pop into test sbb cmp sarl cwtl cmp pushf xchg dec jmp push das (bad) xlat mov ret mov xchg push and cmpsb sub faddl fnop sub mov ret dec mov (bad) lret jmp add lret add add xlat dec icebp jnp jle mov das (bad) xor and hlt icebp xchg adc scas xor xchg rcll jo or pop push icebp sub xorb scas test add pop in mov out dec iret mov ficom add (bad) cli outsb test nop mov mov jge lds xor sti mov mov xchg decb fwait imulb mov xchg sub negb or (bad) aam jmp lcall pushf mov pop sub das xor sbb jae das call in adc push repz int3 sbb test sub or sub adc push xor clc mov and mov clc mov scas jo lcall sub stos bound scas std add cmpsl in scas pop mov (bad) lods pop and cmpsl cmpsl pop and sub ds adc xor jb adc dec jae sbb shlb out cmp cmp ret inc out popa iret arpl mov xchg dec mov lahf or loop sub enter stc add sub pushf scas (bad) pop (bad) pop addr16 pop pushf xor push dec in aas cmpsb dec mov (bad) jp jg and fadd and pop cmp dec (bad) sti mov dec mov dec scas xor add and cmp inc sub mov mov sti jecxz sub xchg fistpll cmpsl repnz dec mov data16 dec repnz fisubl adc and and xchg punpckhbw loope push outsb mov inc dec ret xor pop mov or cmp into dec and pop or xor mov in dec pop js mov das adc mov cmpsb insl cltd push lea cli add dec movsb incb scas mov xor push out and cmpsb or aam push mov push jo mov dec inc or inc jge out jbe daa dec sub adc mov pop imul nop or adc mov add push movsb outsl cwtl ss sbb mov pop cmp cmp inc es add fisub and lret nop rolb push add js and xor aad mov xchg mov and lods pop popf xchg jnp push iret mov subb add mov jle movsb mov and out scas loop xchg cmpsl sub adc xchg sub mov outsl jg pop popf sbb sub mov cmc xchg and adc sub mov jecxz gs xchg lods bound add cmc adc scas sub xor xor sub lods scas lret push add lahf xor aam call mov mov inc adc mov fsubs sub imul lahf add add dec shr sbb fsub ret mov rorb test and dec daa cltd xchg xor (bad) fisubr pop aaa pop repnz outsb leave ljmp cmpb and outsb add add fs stos (bad) jnp mov fnsetpm(287 in pop sub or cmpl cltd adc mov mov pop pusha sub add mov in push xrelease pop in daa fstl cmp rorb sub outsl jg jns cmp out mov stos pop mov enter movsl xor add fadds xchg sbb dec inc or mov push sub aam test add inc shr insb or sarb xchg iret movsl test pop push testb inc or jbe sbb je,pt dec jne test shl pushf and das divb daa adc lods loop test (bad) scas xor jmp ret enter push in sub (bad) popf data16 dec inc and sarb imul jmp cmp add popf mov dec (bad) jns add scas lret outsl or mov clc rorl notl mov lock out jmp out outsb scas push mov popa add and push adc call xor out lods and imul lods xchg in stc jmp mov jbe dec (bad) flds clc inc movsb lea push push cmp xor push fild inc cmp repz push jmp out pop out inc lahf jns mov out and jge add jae nop add iret popf cmp push fdivs rcr jg and adc addb xor sub dec rorl or push xor xor ss outsb cs jmp dec repz mov imul push icebp cmp adc ret sbb xor ds dec and cmp adc jo scas mov xchg scas mov sub pop adc or std int jge adc (bad) dec mull add mov lds cmp shrl mov out cltd hlt sub cltd in mov repz jg mov pop sbb (bad) mov inc jbe or mov lret repnz mov stos mov ds pop es mov pop shr mov leave aaa out ror lods sbb xlat test xor test and fisubl pop ret jp push pop xor repz std and sbb fldl pop jmp xchg dec sub inc iret (bad) xor jecxz das add xchg ret adc add ja or lret ljmp jl in push out and ret scas cmp mov dec jbe rcll scas fst cmp xchg sub inc push push scas mov mov xor xor push push loop (bad) ja ret or and jecxz sub sub into ja (bad) imul aad imul jmp jne jmp (bad) xor decb push jge jge lret loop notb jg (bad) mov je jmp bound mov hlt loop ret out lret mov std mov out xchg imul outsb and cltd cmp adc pop les mov (bad) cs add xor ja jne inc push dec stc dec loop test rcr into jnp lahf add sbb pop bnd in adc (bad) std insb mov jl iret add loope xchg das popf push xor jp xchg in jno xor notb sub (bad) movsl mov or dec mov repz icebp xorb mov aaa lea insb imul nop (bad) mov sbb dec (bad) jne jg ds cmp cmp or mov loope out mov mov popa jae das jmp in dec mov leave push repnz sub pushf adc dec mov xor cld pop rolb sub out xor enter xor or xchg int3 xor pop ret test pop inc add jno sub sub in pop in sarb xor jp and mov push xlat lods out ret sti std mov cltd dec sub out cmp repz jbe lods int cmp pop clc sbb cli mov (bad) jmp iret mov cmp outsl pop pop mov dec push bound (bad) lret mov (bad) pop leave mov pop inc xor nop xor pop das in xchg push lods mov out dec mov popf stos and mov sub sub xchg sti xchg mov lret xchg stc mov xor push mov out test movsb cmpsb sub iret dec (bad) in outsl mov mov dec test out fcomp outsb lahf adc js dec and (bad) dec into pop inc test push adc fidivr jno imul stc inc push cld repz mov (bad) xchg dec pop aas fwait and mov dec loop leave pop stc pop lods int3 cmp out int3 sub stc mov lahf (bad) pop pop xchg icebp dec dec lods xchg (bad) lret andl ret or lods push fstl and fcomps clc xchg cmpb xor cmpsl loop lock jns sub mov push push and xor in lds fcomi push lock enter cmp scas sub jecxz pop jecxz mull sub pop push repz (bad) push pop mov push mov sti adc inc and cmc roll mov mov add mov ja popf in adc dec daa jmp imull loopne cmc andb cli jge xor fsts mov push hlt sub adc repnz gs cmp lea (bad) sub rcl inc push jg sub mov ret aas loop xchg cli mov push andb xchg and mov shr std cmp sub mov js sub sub pop sub mov cld outsl pop shlb stos mov and fisubrl dec add inc mov in ja movsb lret lea sub stc bound adc mov lahf xchg and stos adc xchg xor xlat mov hlt xor mov push adc lahf jnp inc xor add pop and inc push mov xlat mov inc and add (bad) sub fdivl cmpsl adc ret negb pop xchg data16 sahf adc decl and int3 xchg mov sbb iret repz movsl clc iret das pushl repz cmp cmc sbb rclb enter insl mov out mov imul xor mov pop cmp dec or push in cmp sbb xor jmp fmuls daa mov enter mov or sub rclb sub dec aas jno or push lock das mov add pusha or adc or ja mov jle clc test jne cli dec into adc mov cli cwtl and popf jge cmp test xchg mov imul ds aas push out jb repnz test (bad) push dec stos cmpsl pop bound icebp shr les and mov outsb (bad) mov divb pop cli push pop out push push loop xchg enter cmp sti lret add shll cmovo jbe xchg mov daa fstpt cld mov mov inc sarl fsubrl pop pop mov dec xor mov mov mov or call fldcw and cmp insl lods or lret mov pop or xchg gs jmp fsubrs mov (bad) dec lret gs inc aas push lods jb jmp inc cmp andb inc daa jo jne push pop ret lret jno jle shr shlb into aas (bad) lret cmp cwtl call dec lock xor or jne aam hlt inc jmp mov adc divl or sub call jbe inc pop iret ds add daa aas test sub or imul xor xchg push lea mov repnz mov mov pushf addl leave outsb clc jmp xorb nop push xchg lds outsl test or jne imul int3 (bad) shr mov adc pop adc mov mov movl push cmp push fildll adc add inc sub pop in cmp or xchg fbstp ljmp xchg sub movsl pop loop push and pop je pop add movsl adc mov pop and (bad) and (bad) mov movsl test and sbb movsl mov push daa add jge adc and inc adc ja cmpsb pop mov add jg lock push enter icebp mov or loopne add mov jno imul lcall lahf fstpt add adc fldcw mov jmp aam out fnstenv or cmpsb jp icebp hlt ficompl gs dec push jo mov push add stc and jp mov nop testb sub out ss idiv fistl pop and cmc repz sbb jle and add cld ljmp sub out fisubr daa pop in lahf call jl (bad) (bad) lods test push scas fistp call hlt adc jl dec pop inc add popf pop push inc call div int ret inc and or (bad) icebp adc mov push pushf lahf add movsb std cmpsb pop (bad) pusha dec test mov stos sub or (bad) std test ret repz (bad) mov mov xchg push and add ss and dec aam dec icebp jle lret fstps mov xor das dec sti and int3 mov pop shrl inc cmc sbb jle cmpb pop (bad) (bad) sbb stc das xor dec push mov push leave mov or push or decl jo in mov and add in pop lahf push je (bad) gs push test clc sub popf out aad push enter in repnz or fisubr pop xor jecxz push mov je scas int3 lret jmp daa sbb mov gs xchg or lcall subl xchg dec stos sbb mov icebp jae divl imul dec imul cs lock mov into insb insb dec std popf lcall sbb jb mov pop push xor xchg and ret fsubr pop ret lods stc inc data16 cmp add mov or mov test adc mov sbb sti call cmpsl add clc mov push (bad) mov pop leave jle jp mov push cmp cmp xor mov adc mov push mov add mov movsl push (bad) inc jp or push popa fstpt jb lahf gs inc out idivb push push or imulb dec fdivrp (bad) loopne mov xchg cmp imul call es push jns xchg out repz fsts (bad) loop daa sub repz inc popf kmovd fs dec push sub mov rorb icebp adc pop repnz rcrl pop pop jno sub sub add cmp lds push jb cltd pop (bad) cmp les push stos repnz xor ss or jo sti mov dec mov add popa cmp pop ret pusha cmp lahf mov out std sbb cmc pushl mov (bad) (bad) jle dec inc out sub pop sub ficom jp mov out jne fisub xchg mov aam test mov sub jmp sub adc ds sub mov fucomi cmp call push add repnz pop sub mov enter pop cmpsb loopne mov mov cmc mov mov daa cmp pop ljmp push xlat dec jb jl mov dec mov addr16 or inc shrl in loope sti popf cs and add lret xor mov clc lahf adc mov push inc pop cld icebp add xchg sub or mov inc ret jnp xchg mov lods in lahf (bad) ficoml imul sub or mov jle push jle adc cmp adc mov sub lock lods mov movsl rdpmc aaa sub push int3 iret and cmpsb mov jmp ror jge add mov ret sbb dec xor fstpt mov lea test sbb and lret inc pop mov outsb faddl daa sbb rorb stc mov mov cld lock repnz aaa or or push add mov push push xchg mov dec pop stos add xchg sub sub sub je (bad) pop xor inc out sub sub mov dec (bad) mov or or push fidivl mov sub mov ja enter mov and add cmpsb jg adc add scas lret bound jmp sarl xchg push mov jnp sub das or cld lcall sbb outsl cltd push sbb xor imul xchg popf add or je stos mov or ja insl add add xchg sbb cmp pop jle pop iret sub ss mov add pushf (bad) lahf repz sti movsb int3 aas pop aam jmp insb mov imul ret sbb mov and in pop xchg std xchg rol adc out xor je (bad) icebp les std and sub mov add je cmp push or lret add fcomp aaa xor and enter sysexit or popa (bad) je stos and mov xchg (bad) add and adc jecxz stc icebp shr mov jnp mov mov mov repz push (bad) (bad) cmc stc mov (bad) dec jne xchg pop inc (bad) data16 mov xchg pop sbb inc mov mov sub bound cmp pushf fprem imul pop leave ds xlat icebp and inc sarl call mov call out lods fcompl xchg fs inc mov mov and mov push xor xor fisttpll sub pop fs mov adc js mov mov push (bad) xor jl sub xlat lods push sub cmp push jmp out cmp notl mov dec repz das repz add repz repnz subb outsl xchg sub fstps (bad) push adc (bad) sbb push iret and xor mov sub mov sti mov xor xor mov sub test push scas mov out push out insb movsb mov add add or fucomi pop jo pushf dec daa push mov aad pop out sub in aas xchg call pop imul jge push iret mov and insb xor mov stc pop leave mov sub push sub and (bad) leave xlat les ret clc adc loope cmp xchg sar fldcw cmpsl sahf dec (bad) or mov mov nop cli lahf fstps adc mov dec (bad) dec sub xor jne and ljmp cmp xor mov mov rcrl ja out xchg sub daa das movsl pop ljmp ret xchg dec mov test mov inc pop adc clc dec into out hlt jb xor xor stos (bad) pop divl cs push in add iret sahf in pop lock or mov lret std add mov shrl out sahf sub mov xchg pop clc xchg xor out sub push mov divl sbb sub jmp xor (bad) jmp sbb sbb dec or xchg sub and jmp leave rorl (bad) sub out push (bad) (bad) sub push enter mov jbe push pop add mov cmp adc ja add add cmp jnp or sub bound mov cwtl aad idivl gs cmp or ret add into cmp and ja push jne mov mov cwtl out aas sub out or test mov cli ss imulb (bad) shrb test or popa xorl jmp mov jnp (bad) stc rorb sub int3 pop dec clc mov data16 leave insb push add xchg push pop (bad) sub sti add (bad) or cmpsb add or jmp shrl fild in cli les loop int stos jmp jns repz mov mov push out mov pop cmp cltd clc gs and shl sub cli leave lahf int3 lea cld (bad) aaa aas xchg mov adc lods xchg das mov jge xchg pop mov ds dec mov leave dec scas pop lret and ret jmp loop xchg mov pop mov mov cmp stos bound ret or sub stc mov or repnz roll mov sub or inc sub scas movsl xor stos rolb sarl je push rorb shr popf rol loopne or pop mov (bad) xor frstor (bad) stos data16 scas fistpll lret push ret push je daa push in sub das (bad) movzbl and jg adc mov test test mov lret cs or add jle aam sub or shrb cmpsb xor and aas mov and movsl fisubr push stc lock jle jbe mov xchg cli mov je shr and jmp loop push lret (bad) jno and xor jae cmp popf push cmp lcall or dec (bad) rclb loop sub push fisttp pop ljmp xchg das mov or sbb add adc cli or and push es sarl jns inc add sub fadd ret dec sub xchg loop adc or jmp imul sub push daa dec push mov ficom fldcw movsl and roll test pop (bad) repnz and sarl mov push jle or and aam mov sub dec or repz jg mov and test jbe es add push mov mov out (bad) sub repnz addr16 das pop jbe loope or rorb outsb push gs into test mov mov mov ja stos jbe sub sub add sub mov pushf xchg jl push popf imul fildll cmp pop xchg leave fisttp inc das cli dec outsl cwtl cmp or stos sub push andb fs xor jg movsl ljmp (bad) push inc lret lret insb clc std jle ret xchg mov cmpsb inc dec jae mov insl jge stos and cltd stos inc mov and (bad) iret and aad loop pop fsubrs icebp or sti xor and cld sahf mov pop (bad) pop xor orb out stos mov inc push cltd popf lret (bad) xchg daa jbe (bad) leave and sub jg dec sub int3 adc and or sbb mov sub xchg sbb sub adc loope dec icebp gs mov ss pop push pop and daa inc dec or cmp fiadd and inc pop and (bad) cltd in repnz xlat mov add out xor cwtl enter mov add xlat icebp std push push jle cmpsl xchg into dec push stos je mov es (bad) pop xlat sbb rorl (bad) jge loope jle imul aam dec xchg test mov jae mov and pop jo lods fst stos xchg xchg sub div or xchg mov out mov (bad) dec lea mov push pop and pop icebp pop dec or into adc pop cwtl sarl adc jmp mov repz sbb mov cmpsl xor out mov dec lock ficompl push mov cli xchg mov fsubp xchg jbe mov pop mov iret xchg out icebp cmp jmp movsb in mov cmp hlt or cmpsb sub decb in add fisttpl int3 loopne cli das mov rorl jmp cmp sub lahf (bad) movsb iret sbb cmpsb inc call test pop add cmpsb pop pop (bad) inc cmp sahf in or xor fucomp pop clc (bad) popf xor enter cwtl and cmp scas mov daa mov into jns lret lcall cmp jmp lock es xchg lret or fwait add shl repz lcall out mov inc test inc test (bad) bound rcr sbb mov inc dec cmpsl das pop into bound paddsb das xor jle push (bad) mov cmp ret sti popa cmp and sub aaa dec sti xor xchg lds xchg in dec shlb fidivr push je adc rorb xor or lea and xchg mov ror sahf push dec fsubrs inc leave fistpl adc aas adc neg pop cmp out fsubs imull mov test dec pusha daa ljmp mov jns outsb lds mov daa lock (bad) xor stos fsubrs sub push ja in cmpsl jno imul xlat mov sbb (bad) pusha cmp leave ljmp fsubrl jg and popa sub in jg mov cltd jp cmc dec mov add jecxz call aas aas shll lahf aam pusha cwtl and dec pushf aam les lahf push xor leave inc pop rorl cwtl leave pop mov shrb pushf (bad) and cli sub mov and xchg out mov xchg push push mov pop pushf es jns pop (bad) fidivrl pop cmpsl xor lret jge jmp in mov xchg lds jg out adc leave mov icebp cli xchg cmp ror leave jmp xchg jg test bnd icebp popa fidiv cmp pop je mov and and cmp lea mov jmp fadd and xchg push ret adc and add cmp sub mov pop cmp push push mov das sub mov jmp xchg xchg movsl cwtl mov xor fcmovnu xchg xchg add into inc sbb cs ja test stos mov dec fs in and sub push sbb mov pop cli jne (bad) sub nop cmp or push add xchg in or testl movsb scas push (bad) out daa mov dec mov mov sub jg lret rcll mov xchg cli rcrl out xor dec dec mov repnz cli jns mov ds mov jbe dec xchg add add push mov (bad) and pop das jno xor leave repnz bound or cwtl and pop or sti clc jns jmp ficom ljmp dec imul xchg (bad) xchg mov cwtl jg dec or leave sub add mov xor and popf les sub fisubr pop adc adc sysexit call scas push sub sahf daa ret lds daa lret or fdivrs lret das inc in lahf push add mov cmc cwtl cmp (bad) cmp xchg xchg (bad) pop mov push stos cwtl dec or mov sbb mov int daa in popa jl push push jle stc aaa ds (bad) repz or pop and sub jb ret sub cmp add lret sbb loopne out mov inc adc sub add or popa jno jp,pt cmpsl mov (bad) sub pop repnz mov add nop ficompl xchg and leave call icebp add divb mov mov loop add les icebp fmuls add out mov adc lods fimul (bad) mov mov lcall mov in jle std gs lea or xchg ja adc sahf push fisubr into cmpsb xor adc (bad) xchg pop shll loope pop pop dec jge jle sub roll jl (bad) divl scas jecxz pop fs das jecxz adc btr xor aad sub rep cld gs xlat insb mov push je jb aas jnp sti push cli and mov push out ds jmp dec fisub sbb int3 imul xor inc fs pop (bad) jp add pop inc sarb sub mov bound cmp mov add popa xchg out sub mov sbb adc (bad) sub ret popf xlat pushf mov push test and (bad) shrl inc in xor xor (bad) ja cld push ret pushf ret mov and repnz inc in pop sub or insl (bad) sbb repz ja ret pop xchg cltd mov sub or push sub bnd fnsave fnstcw sub repz sub or push cmpsb rcrb out cld pop push out dec decl in push push xchg in jg or cmp ret pop lock jle enter jp sub and mov outsb fildll sub xchg pop adc stos sub pop mov fcoms iret lods call mov lock (bad) sahf out iret adcb lods loop pop adc cltd push clc and mov mov mov add imul mov pop xor outsl sub fdivrs ret mov icebp setbe scas pushf lds and fmuls out xchg test cltd pushl shl mov dec mov lcall xchg cmp xchg add inc xor mov jbe imul mov lret or xchg (bad) addr16 rcll or pop aad fwait jmp pop or push jnp inc in adc mov icebp and mov fimull (bad) cwtl aas mov and pop mov mov sub mov ja hlt add into or mov lea and les mov sub add jno (bad) and cwtd inc (bad) adc sub push lcall mov dec out lret and mov leave ret pop pop pop mov dec and or rep adc scas mov into xchg dec test inc add lahf test leave testb (bad) adc enter add or ja,pt add sub and sub mov add inc das add imull adc sbb lahf (bad) jbe repnz sub pop pushf and icebp nop test sub mov mov pop (bad) imul leave lret das add mov icebp xchg xchg call add imul jle sub test dec je xor or mov test loope mov dec mov xor jo je mov mov xlat pop out adc sbb xchg push adc stos int sub (bad) ja mov out pop rcr leave out cld cmp and xchg popa clc out je stos mov scas mov xchg in orb add add mov mov adc jne or mov adc or ljmp pop mov fbstp xlat dec sub cmp cmp into (bad) dec pop scas xchg push lods cli mov ret xorl repz (bad) icebp jns dec stos cmp dec xor imul pop (bad) or rcr pop or sub fnstenv cld and pop adc hlt sbb push test jnp xchg add movsb addr16 in dec ljmp shrb js cmp sub scas pop les icebp fidivr fist push jmp mov push jo ss xor sub cli adc dec mov stos arpl out ror (bad) ja xlat stos hlt inc mov dec and ja fs mov mov movsl in xor stos lods cwtl movsl cld (bad) shr or iret into inc shrl iret mov lret adc add rcl (bad) sti int3 sub sub in mov jmp movsbl mov mov xchg stos lea jnp push adc aaa lods jmp addr16 cmp ljmp stc mov ret sti imul testl ret jne imulb stos mov dec mov xor mov or mov ja and pop lods cmc mov fmulp and jae ds test loop rcrl out mov jmp cwtl lock xchg inc or or (bad) jmp sub rcll push movb jb data16 pop imul sbb or cwtl sub sub pop sub inc or xchg or aam pop leave push mov sub gs ret rcrb mov sub mov pop not or sub std inc dec sahf out and pusha stc mov pop push or or jp adc pop jge lret ljmp jae or lcall dec pop lret pause repnz ret sub adc or popf jne imul mov jmp jge in sub and pushf (bad) jmp jmp dec jne jle add movb xchg mov rcl sbb scas pop rcrl sbb orb xor stos outsl jno add jp bound mov dec js sub pop out or mov daa lret jge sub jbe pop (bad) repnz jnp jmpw insl jecxz sbb in sub iret dec inc mov adc and lret adc xor mov or inc mulb test js mov push rcll loop sbb cwtl pop icebp jg loope fxch out xor fnstcw movsb repz sub jmp mov mov mov ljmp in into shlb dec std imul and fwait lret jle or (bad) das mov sub push push push push dec repnz (bad) daa add ret mov mov xchg sahf or and pop fstpl push in xor sti sub mov cld sahf mov rorl cmpsl test xchg pop sti mov jecxz jg dec (bad) mov adc jmp mov mov mov inc mov xchg in pop xor add or nop mov lds xchg add enter pop inc (bad) jecxz (bad) adc nop or cltd lea dec out mov test fistpll ds mov and fucom jnp mov test jmp mov lret inc sub push les add mov call push push cli fmull pop fisubl cmp test cmc xor cmp in (bad) pop push sub adc jle cmp ljmp sub call mov dec sub pop cmp aad xor mov and jo roll adc (bad) cmpsb out jmp fs xchg fnstsw sub (bad) pop mov outsb movl xorl mov fucomip pop incl pop push je or pop into adc or adc mov jbe sbb adc rcl pop add add mov push push mov push neg iret (bad) push mov jno fnstcw add push enter in repnz push fistl inc add out jbe add pop push push std test inc jl push mov inc out imul (bad) jns loope or pop outsb mov add xor mov pop cmp outsl mov xor inc cli ljmp cltd lret (bad) pop pop jmp outsl lcall or and out hlt scas mov addl pop mov mov mov push inc or pop test lock icebp mov enter and add out (bad) jns dec jle pop jno pop jge sbbb fist adc or pop cmp xchg (bad) mov push lea mov outsb fild jg inc add bound pop pop push dec aaa mov pop or out mov ja add sbb je das fmull orl sbb mov lds xchg add in xor xchg mov mov dec call sbb push pop cmp ret fidivr pop imul jno dec pop gs fistp lods mov fistpll mov mov jp sarb jle sub sub add (bad) (bad) pop pop mov xchg scas lret jge jecxz jne clc cli pop jne test divb aam fs into cmp testl repz pop pop xchg mov fist imul sub cmp push and loop leave or fadds icebp in and cli lock push (bad) fs jmp stc popa jl mov add jnp into int3 int add lret and mov ret push clc jnp sub dec xor stos out and pop aaa (bad) ret popf jne add leave or jmp aaa (bad) mov xchg (bad) push lea test adc rorl popf sarl dec mov xchg (bad) ss inc sub mov push or cwtl sub pop xchg xor int3 outsb dec sub pusha push mov aaa mov lods repz sub (bad) pop clc div mov pop (bad) push inc add push scas pop ljmp pop push inc gs incl xchg cwtl dec into push and fcmovne pop pop fildl (bad) (bad) ljmp add xor jmp sub or mov and xchg out pop xchg inc test lret xor xor lahf jbe les and mov scas repz and cmp xlat jns daa pop jbe xor xchg push pop xchg add xchg (bad) shr jo fidivr (bad) pop fs and jg jl xchg dec (bad) (bad) ljmp cmp or ss sub mov dec adc jmp (bad) int3 bound add js movb add cmp fiaddl call scas lret push jne mov repnz mov mov inc mov and dec in sub and pop iret outsb mov sub das stc push les fisubr flds (bad) mov xchg in ret or cltd dec pop pop adc fsub inc sbb negl ljmp aam pusha mov ds ja,pn out xor andl ljmp hlt cmp xlat push lds mov inc jg mov dec pop stos mov dec scas fmuls add divl sahf das mov add fcomi pop (bad) sbb sub nop push idiv pusha xchg (bad) js push or and push push (bad) xor cmp jp ljmp out xor aas sbb pop cmc lds or imul dec rol push mov fidivl cmc pop push shrl sbb xor or subb pop jg,pt std push out or pop fs add hlt std stc jno mov add mov add pop mov push inc cmp ret rdtscp loop push lcall add dec icebp jecxz rcrl mov fild test cmp or push mov pusha xor pop pushf flds loope cmc lahf jg pop mov stc pop out mov pop mov in shlb or xchg popa and popf jmp push sbb jge push std xchg dec neg push xchg pop pop sub push (bad) jecxz pop and into push cltd icebp inc sbbb loopne dec inc jle sub or movsb idivl movsl out fbstp cltd dec cwtl xlat sub out sub dec dec loopne mov jle scas ret pop or jmp sbb mov dec movsb pop adc iret (bad) and xor bound mov adc ljmp sub (bad) sub fcoms mov sbb ret dec fildl mov push ja xor pop rep repnz movl (bad) cmpsl mov cmp mov mov and mov sub mov clc sbb dec cmp pop jne scas mov adc and xchg out pushl mov das pop push mov push jge dec inc sub mov ret mov das xor jo dec call popa mov xchg sub xor iret or inc leave (bad) xchg ret fs out mov sub dec fmuls or jae jno (bad) mov xchg std fidivrl push pop incb adc mov cwtl sbb sub cmp xor mov fadds and dec cmp ljmp out adc push cmp push lea mov roll in outsl dec mov data16 sbb shll inc dec mov xchg aaa ljmp dec sub or pushf mov daa add shr lods fbstp addr16 shl (bad) add pop pop (bad) and andb dec xchg jmp movl out (bad) (bad) mov mov jmp out inc add or scas push and out bnd stos lret std jno cmp sahf in jle adc scas mov addr16 enter pop das add (bad) adc and int3 stos or sub pop notb xchg jns dec je adc out repnz sub xlat xor xor mov icebp pushf inc jmp and or stos sub not pop or add nop jg sub dec and lods decl ret mov lea xchg (bad) jg mov sub out (bad) push jg xor scas repnz fsubp jns mov cmp dec pusha leave cld mov in or ds mov and xchg je push repnz and mov inc mov jmp mov lock add pop out push dec out lahf pop cmp jo mov setns fidivr std xor icebp or pop stc stc xlat lods (bad) dec std in shr or leave fldenv mov xchg mov jne fstp fcmovb stc std fcoms cmp or pop xor fidivr ljmp out mov cmp pop pop mov pop add movsl das xor add out aam pop clc lahf pop sbb xchg cltd imul fnsave in cld enter mov cli push mov sbb jmp jns pop jne xchg out into or push dec or pop mov out (bad) ds xor movsl (bad) mov das inc mov jecxz das add xor test test or movb jg mov add (bad) or icebp jae das hlt cmp loop popa xchg mov jmp popa push (bad) mov gs add jnp mov pop push mov daa fyl2x lock push aam imul leave fstpl and into add cwtl sub mov pop mov ds (bad) jne push mov jne lods sbb sbb (bad) dec or jnp lahf jbe out sub add jle pop out ds push xor test xor inc pop xor sub mov dec ljmp fmuls outsl pop and mov mov bound sbb jmp or inc mov jnp mov jp ljmp xorb mov add pop mov cli in lahf in negb mov mov not dec imul fildll idivl jno icebp or ret (bad) mov xor mov dec into lods add dec sbb xor scas mov das mov or sub (bad) fmull int and pop sub pop pop pop adc sub mov lods and adc das jecxz cmp lret test stos ret lods (bad) clc mov ror lock pushf xchg adc std scas in jb stc jle loope cmp insb mov call jbe fldcw sub mov movsb stos int3 mov or loopne cld inc xor mov inc jo adc xchg mov std out fwait cmp out es (bad) fldcw loopne test mov repnz and insl mov mov fcomps sub mov cmp pop (bad) cmp adc cs adc push inc adc (bad) jnp mov lock pusha push in mov jmp dec out lret jns bnd add andl sub leave cmpsb in pop or aad jmp jl ljmp dec lret (bad) pop into ja add inc cmp aam outsl (bad) xchg push aaa loope aas in fs mov xor mov lods std shrb mov std lcall leave inc and pop stc lret mov cmp dec xor mov jnp mov xchg push or (bad) fcompl (bad) (bad) fiadd pop sub xchg jbe leave xor bound std mov addr16 add daa into jle pop (bad) outsb inc adc and dec xor xor shrb cmp cmp cmc add (bad) in lahf out lret in mov repnz sub adc stos fidivrl (bad) scas xor mov mov mov xor xor rclb jmp mov ret jge inc call mov lock or mov ja icebp sbb add dec mov dec inc in mov xchg mov and xchg lfs movsl jecxz gs sub jp adc ds repz (bad) xor scas or pop and addr16 scas dec in daa jmp cltd mov packuswb leave pop pop movsl pop insb or sti shl mov ss clc push mov add sub sar aad scas sub add lahf push test movsl push cmp xchg std cmp loope cmp cld movsb out clc mov mov mov test leave popa push push pop int3 jo (bad) out daa out jno push gs fdivrs xchg dec mov cs pop push loop out daa pop and push mov imul and aas js dec loop xchg stos push fnop daa lret xchg cmc dec lcall notb push add mov xchg xor fmull adc lcall and insb inc lahf push repz testb imul lock (bad) fsubrs lea jno imul pusha push push cmp pop mov cmp aas mov stc inc mov (bad) arpl push rorl or pop xor in dec incb inc lea xor mov orb dec mov into mov jle repz xchg push adc xor out and sti fidivl out pop sub mov add je fldcw push pop pop lret mov add sub add ja gs mov adc xor incl fistl ljmp data16 pop imul push fmul jg push out push pop sub add test sub inc sbb repz mov cltd inc sub dec movsl and xor or jmp jb and fiadd mov imul xor jne push push or inc popf sbb (bad) sub popf aam loop sbb pop jno sub mov fnstsw and adc sbb loopne ljmp ret fstpl add jg fnstcw push sub xchg stc add ret sub add ljmp mov inc add and lods jnp (bad) test movsb cli movsb movsl aas test fisubr sbb jbe sub stc sub xor aam jb xlat xchg jmp scas adc mov or leave jno mov cld add pushf data16 les mov bound call mov pop adc dec adc add lret mov sub (bad) push sbb (bad) popa outsb sub cmp cmp cmp dec fcmovb or ljmp mov dec test and mov inc adc inc inc out xchg and (bad) mov add into xor lret mov jno and or stos dec repnz sub mov out add fiadd mov or loope nop movsl xchg stos mov pop pop fstps push inc lcall mov into arpl mov and ret out adc and sbb jecxz movsb call aaa cmp jne pushf push or or test icebp lods xor push mov jno cmp movsb mov rclb or sub inc dec fsubs xor shlb add aad outsl xchg hlt jp clc sub mov enter idivl outsl out mov sub xor sbb out adc ljmp fistpll fsubrl push jp xchg xchg fwait (bad) addr16 jbe push scas negb mov pop movsl aam mov frndint cmp sub sub out mov add xor cmp cld sub leave data16 sub mov adc ret leave mov cmp stc dec inc insl and decb sarl mov push leave cmp pop (bad) adc mov negb call fiaddl lods (bad) mov mov xchg (bad) aam sti fstps cwtl shrb and rol and jecxz lahf push (bad) adc xchg adc and mov cmp xchg fisttpl cltd popf (bad) cmpsl cmp dec imul mov popf jbe cmp ss nop mov mov adc push sbb outsb adc and xchg xlat xchg (bad) dec mov fadds (bad) cld negl sub xchg and lret imull or int cmp pop hlt insl pushf cmp cmpsl test adc das xchg dec adc enter scas sub negl mov pop mov mov cmp repnz mov pop cs xor push jb out mov frstor aas xor mov sub fist pop ret jmp mov lods mov mov std notb jecxz lret or ret clc xchg into xor (bad) fstpl mov or lret repnz stos iret inc pop jecxz or add add xor sub sub test lea xor ret add aad sbb push rolb out test ljmp add or imul push sub cmp testl lds notl gs mov mov jb mov cmp cmpsb ja pop or xchg mov les cli pushf add mov ret sub cmc (bad) div and sahf into loope and push (bad) or inc mov push pop sti (bad) (bad) jecxz gs cmp andb or add xchg call push loopew nop dec les rcrb in and or mov dec icebp inc fidivrl pusha xlat aas xor test mov cs and pop loope test jmp out sbb cli xor (bad) dec dec orb mov mov add leave cmc sarl push push (bad) test bound cmp fisttpl jb icebp (bad) push add mov dec cli sub mov mov jnp cli sub mov add loopne out add and gs mov leave ffree test cmpsb sbb (bad) repnz lods inc mov cld das push or fnstcw xor mov mov and push xchg push pusha lret jge sarl cmp mov mov repz push fdivrs aad inc clc loop in jl repnz jle fs ljmp ss pop push (bad) mov push (bad) adc (bad) mov cmc cmp int3 sub ret jno enter (bad) dec pop fs test or out ljmp sub das dec xlat push lcall sbb test (bad) push jmp adc stc mov sbb or pushf cli lea (bad) xor jnp,pn sub dec gs lods pop dec fadd add mov sbb sbb into or addl xchg adc stc xlat xor mov clc sbb daa pop test jns mov mov es popf jg mov dec jge jne out mov dec lret mov add (bad) sub and or pop add aaa inc push in (bad) pop out sub sub dec jae sti xor inc inc push pop pop or xchg cmp mov push cltd lret sbb je push cld sti popf jns mov jne inc bound pop and sub popf cmc sbb (bad) fcoms or and cmc scas sub jle imul idivl adc push mov outsl sub fnstcw test mov sarb in inc leave bswap mov mov imul pusha cwtl ret dec cli ljmp or dec inc repz mov push fiaddl mov mov ss std int3 xor or iret lcall imulb leave xlat js stc js mov adc mov dec mov push cmp jo mov je jle xchg icebp push outsl mov jno out add sub movzwl sti xchg fcoms xchg mov ror sub push (bad) mov jle sub movb hlt in pop (bad) aas add out xlat in ficomp add js dec push fsubrl mov xor rcll movsb leave leave aas jno dec inc scas pop adc add ds mov or jno xchg lret sub pop lret cmc push adc or mov lret idiv sub and cmc and cmp xchg pop jecxz andb add inc scas out pop cmpsb dec dec mov xchg mov xor xchg pushf xchg dec xlat in clc daa cmp mov push cmp add jmp call mov pop loop mov xchg sbb sti scas jno and cs test out shrl mov fiaddl clc and lds les sub out mov xchg pushl xchg dec shr inc test xor add aaa popf rorl mov sub mov imull lods out mov sub sarl imul out es sub movsb pop add int repz das (bad) lock pop mov insb xor mov pop repz cs push (bad) mov loop sarl out scas (bad) dec enter cmpl add jp inc lret jp stc inc shr fs pop in push (bad) mov jecxz das sub pmulhw push mov cmp sub sub cli xor mov fstl mov addl and inc mov sub (bad) xchg je into mov fwait stc fwait jbe xor ret orl subl fisub dec ret in andl add lock test clc (bad) repnz and daa push pop insb das xlat pushf fnstenv pop mov and sub and sub push es das add jne sbb pop adc add leave iret mov das jmp stc stc xchg mov and mov inc push xor mov cli test leave xor jge xor test sub inc mov adc add fisttp shrl scas scas idivb add xchg call mov gs mov movsl test mov fucomip push pop cmp sub lret hlt addr16 repz sub outsb xor xchg mov aaa and out notb pop or (bad) dec bound cwtl push clc or ret pop mov add jge inc mov and pop inc cli push inc lock test cmc mov xor (bad) xor and and clc ljmp xchg pop inc and mov mov sub jmp push sar sahf sysexit xchg daa jmp test ret jecxz dec mov es and push imul sti lret iret pop test imul cmp popf jne mov sbb stos cwtl pop mov loop mov cmp inc sub jecxz jl pop shrl test lret jmp jecxz das scas fs mov mov mov orb cwtl xchg xor cmc out mov xor pop test add sub daa cmp mov cli lret mov mov (bad) or sub leave inc xor cmp pop lock lahf icebp repnz mov xchg loopne dec or mov sub and sub sub popf (bad) dec gs mov test rcrb (bad) and dec or ror into xchg xchg and adc loop mov scas mov insl and dec das daa jmp pop add cmp ljmp (bad) cli pop lods inc notb and jg or xor imul adc ljmp mov icebp or in scas lret push mov mov and sub push test std cltd std clc push popf or adc xchg sub cmp fsubs mov mov mov xchg xlat into push popf stc adc mov mov dec adc cli lea xor out and mov pop xor clc into sub (bad) out push or in pop and add xchg ljmp push pushf repz out mov mov roll dec dec pop jg jnp scas shrl and or or orb pusha mov pop js mov dec sub shrl xor mov xchg out cmp cmpsw sbb push fstpt push scas int3 cmp pop sbb xchg sub out add sub jo std xlat jle out lds arpl adc aaa std and sub cmc clc xchg jecxz push stos sub (bad) (bad) lret ret xchg cmpsl mul leave pop out mov sub cli clc inc les imul or push mov push and fildl push fisubr lods stos mov cmpsb dec dec mov (bad) cmpl mov adc stc ja pusha add push dec shrl dec jg dec xchg stos cltd push cmpsl stos repz jns inc jecxz mov mov add and jg and mov xchg (bad) cmp (bad) hlt mov pop test pop and add dec mov repz inc movsl (bad) repz mov sarb sbb sti xchg scas mov pop xchg insb inc mov mov lock mov or sbb and and cmc bound hlt lock add (bad) or mov lcall pop dec xor dec pop and mov ret push add jecxz insb inc mov scas mov test stos jmp sbb outsb dec ret xlat cmpsb outsl xchg loop dec adc and and dec rcrl sbb sub out add sub and jne (bad) lods jle sbb add mov pop cltd push cmp or mov lret inc xchg mov pushf mov xor imul mov xchg outsb stos mov stos in or lret addr16 lea jmp jecxz in cs imul aas call mov je fistpll pop or mulb or add pop inc enter cmp add fidiv sar push cltd ret dec jge (bad) xor ret inc mov and add pop aam leave pop push jmp add stc (bad) leave jmp cs adc data16 pop test mov test cs dec shlb push cmp sar je mov or js pop push dec iret cld push fist and or jge or dec add mov movsb loope sub lds ret jne sub repnz inc movsb or cmp mov adcl cld out lock stos js dec out sub andb push xor dec pop lret leave xchg jnp imul in jmp mov sti fcoms xchg or add outsl mov notl paddsb pop iret mov mov mov mov jne movsb test dec (bad) pushl div push push popf in push ret (bad) mov sub jnp mov mov inc cli and cmp fsubrp insb adc add jno or sub icebp inc push scas popa cmc test xor rolb (bad) pop inc movb jle cmp js push inc arpl inc inc jl xor daa scas mov xchg or sbb out mov and stos cwtl push lock xor pop int3 xor push imul (bad) dec int3 sbb mov mov mov lret push sub or rorb inc jno dec sbb scas cmp jns mov and mull test sub movsb addl insb jge daa xchg (bad) hlt iret jge in (bad) dec inc mov (bad) xor enter dec mov dec xor mov push call pop push push sbb inc repz sub shr scas int add adc dec cmp movsl stos xor dec jl pop mov pop shl xchg imul stos incb inc cltd and or fsubrs sahf inc repnz mov movsl adc xor pushf dec jl jbe,pn inc sub xor out and imul shr adc mov and shr cmp (bad) pushf xor add dec mov (bad) ljmp in and sbb xor dec jno movsl bound mov xchg sub xchg push and sub imull sub imul cmp sbb hlt xor dec rolb call imul mov and cmp clc lods adcb inc xchg dec cmpsb cwtl call push inc jecxz in mov jecxz test mov test je fs sub mov pop and adc and dec sbb fisubl movsl xchg sub sub push mov xor lret mov or add das or insb dec sbb scas and push mov jae aas mov roll push lret xchg or jle add notb xor clc jne mov mov xchg lret push mov sbb mov mull ss jg stos xchg bound mov adc iret std pop push out sub or jo inc test jae jne mov dec call jecxz inc hlt dec out sub or push dec outsl jns fiadd push pushf les ret fldcw insb in movsb adc sub sub pop cmp hlt xor lock and insb push jo loope dec and mul cmpsb cmp and fcmovb test and mov imul les add push add inc pop mov lcallw xor push jno xchg fsubr mov je jb adc mov mov je pop ret cmp ss clc pop mov dec push sbb xchg cltd mov fsubs dec fdivs cmpsb xchg rcll add and mov jmp jp std sti test imul dec pop sub and fs xor xchg scas sub gs and sti sub cs sub mov dec enter sub test ror enter and mov dec insl (bad) xchg outsb xchg xlat xchg add xor sub xor (bad) std out xchg jp push adc push movsl or fldcw jne (bad) ja xchg or sbb outsb shr hlt lret mov ss pop push mov mov mov nop test sbb xor lea test sbb inc (bad) lock out cmp popf xchg jp cmc and sub sbb xor aad push xchg (bad) inc add jle (bad) test std imul hlt pop ljmp dec dec add or mov and outsb aaa cltd test scas mov mov lock xor and mov push stc adc push out (bad) mull adc out out inc stc push and clc frstor sub and ja mov jmp int jle ja push repz pop mov mov lds sti scas inc dec fimul mov std lds and dec out fmuls ljmp into aaa dec ljmp jbe ja or jbe or and insl xchg mov in lods mov sub add xlat ret pop pushf int cmp add daa dec sbb (bad) mov rorl fnstcw inc sub leave mov sub in mov or mulb mov call lods (bad) lahf dec jg add mov mov or (bad) jbe rcr shr addr16 movsb (bad) xor loop fist imul pushf mov lret mov and pop orb dec lahf push mov cs out loop (bad) lret mov or iret sbb mov and movsl es mov mov idivb mov sub pop or scas xor call into nop dec and test or mov mov or cmc int3 mov adc sub out (bad) dec dec out and jge xchg rclb sbb xchg dec xchg sbb push push (bad) sbb xchg sub push icebp lea lcall (bad) sub idiv ljmp sub pop or je negl ljmp repz test je out adc push aas mov cmp cwtl cld sarl std daa (bad) or cli add dec das lock pop call sub sub repnz fs clc gs mov pop dec mov dec add xlat fs es inc sbb dec push cmp ljmp test add mov cs push jg mov xor cli push scas clc jbe cmp stos dec test stos fs (bad) dec mov xchg push ret (bad) aas sub loope lea adc stc repz sbb adcb vmovshdup out pop push repnz fdivs mov ljmp or sub dec ret fsubrl mov sub sar sub call call (bad) pop jmp mov adc jecxz xor (bad) jp mov adc adc lds sub (bad) jb sbb lock push jecxz and sbb xor cmp mov aad popf push adc pop mull mov popa fmull and stos mov sti adc repnz mov idiv insb movsl stos push sbb out insb or gs and stc lds dec fild mov dec aas mov xor lock aaa and call mov daa or mov dec cwtl pop add sub rcrb xchg cld int3 (bad) fidivr test mov lret jp ficom jmp add int3 in inc or out mov jge mov sub stc or je sub push repnz sub mov rorl pop sbb cmp hlt lea mov xor rcrl test and mov cmpsl push add jl jno mov inc or xor mov pop idivl sahf jne xchg out or push popf push ret sub sub push movsl push ljmp mov xchg shll fyl2xp1 das test stos sub gs adc push sub div push stc ja push ret jb xor xlat mov xchg out subb in popf jbe aam inc addr16 and sub hlt test loopne xor jg popf rcrl cmp frstor add faddl ss iret sub xchg test and push sarl movsl jg (bad) pop aam cmpsl stc xor icebp cmpsb mov mov repz jecxz xchg pop jno or sub jp shl (bad) mov dec lret test pushl and popf pop (bad) mov cmp lret jb (bad) idivl push rcrb imul subl daa ja out outsb bnd les lret sub cli mov mov cld clc in imul pop sub jmp flds lcall aaa xchg jae das push fcmovne les jecxz,pt mov faddl or add mov and xchg (bad) std and or ret ss pop out (bad) and loope ds xor lds (bad) xor or push xchg lods or je mov (bad) dec push fiaddl lds and fs sub xor xchg int3 adc and sbbb or aam divl add stos cwtl repz je ljmp lcall movsl inc aas in lahf pop mov mov iret xor xor ja jle inc mov sub je dec jne adc sub (bad) xchg lret sbb data16 inc dec outsb call jns dec ret xchg sub out outsl lods testl loope ret sbb pop mov out and mov into ja ffreep stos or repz ss imul push daa mov sub add cs and mov and mov inc je adc sbb sub rol mov add push mov aas cltd sub daa jle out inc pop cmp mov push test pop mov aam mov das jmp sti (bad) scas cmp mov jno outsl fnstcw inc sub out mov pop int3 pushw sub adc pop mov cmpsb push and push int or orl push mov daa fadds test fwait xor mov pop cmpsb pop or and mov stos sub add adc sub and xchg aad mov jg shll push and insl das cmp out or and movsb xor aaa push mov push sub leave inc or clc or mov sub rorl or mov mov test add xchg repz or andb aad aad ret roll sbb sub lret xor mov movsl mov or (bad) out mov sub lcall test nop push in mov inc xchg mov outsl test std imulb mov loope adc jae pop call js xchg inc pop out sub cli mov (bad) jecxz sahf popa in adc in jp mov scas (bad) (bad) cmc xor repz push ret ret mov add mov (bad) std add dec (bad) cmc xlat mov push in lods push push or xchg in out sub mov inc cs mov mov idiv xchg jns and or pop push data16 sti sub dec push lret push cmpsl outsb push jne pop and inc xchg xlat xor or xor pushf stos repz and push icebp rcll sub mov pushf and inc sbb aad addr16 bound push jbe leave jne cwtl dec jo je push (bad) leave jnp sbb pop cmpsl jbe push call or or adc sbb push dec mov loope cmp scas (bad) pop inc loop test shr aaa (bad) mov push or (bad) cmpsl fbstp ljmp jmp outsb mov dec inc push or fcmovb sub jae xlat mov test mov imull cmp fldt push das mov movsl lods ja cmpsb pop (bad) lret int3 mov dec out or sub push xor scas push js je push (bad) push pushf icebp and cmp or jecxz adc sar int cli push cmp mov cmp mov fisub jmp mov sti and sub add stos xor test aad out dec cli gs mov js scas and sub lret adc xor mov js fisttpl repz je cli jecxz mov push out pushf lods add xchg (bad) test daa jne int3 add mov and dec js into fwait ds ljmp (bad) sub pop adc fsubs adc lds pop mov out jne test inc dec sub cmp or movsl pop popa or xorl push xchg add leave sbb mov mov fwait mov (bad) sub mov mov (bad) icebp pop inc mov fpatan and das lds adc sub push dec dec push out das xor xor push add mov jno leave cmc xchg (bad) mov pop leave bound sbb jno loopne pop nop jge inc pop rclb mov and imul mov bound (bad) cmc in and cltd push add pop mov add inc inc loop lods pop in push and (bad) jge lods mov ficoml fnop nop push pop cmp sub pop lret ja push hlt bound clc fldcw jg cltd ret sub dec push xor xchg sub and add sub (bad) (bad) imul popf fisubrl mov testb xchg andb push dec mov add jne mov add data16 adc mov call ljmp xlat roll loop roll dec jp je cld and (bad) mov jp push stc repz mov mov jb jle sub (bad) dec ss icebp mov (bad) cmp dec movsl (bad) xor scas (bad) push pop int3 xor cwtl sub insl xchg sarl push sub in push (bad) mov call add and popf or mov mov xlat test push stc ret gs hlt orl ds sub out dec inc sub outsb in jg int3 das sub mov movsb push dec test clc (bad) mov sbb icebp sub sbb dec loope loop (bad) mov loope (bad) sub add mov pop xor xor fdivs push cs lret lods adc stc sub imul lods xchg fstl andb enter call mov divl test sub jle mov test in and inc sub inc out in gs cs jae adcb adc icebp imul leave stc dec add enter ds inc (bad) mov mov inc popa and inc dec iret dec ret jle jns ret test faddl cmp push insb insb pop (bad) xor fldenv dec add (bad) stos mov jg mov out fdivl out mov inc push mov ret xorb stc popf je enter ljmp sub jae push push or clc inc sbb inc sahf mov (bad) mov scas push cmp add (bad) lret push push fidivr mov or and mov add and jne cmpsl daa or pop push sub sub mov ljmp push jecxz in xor scas (bad) adc pop es pop push into pop add nop shrl popa dec add bound inc inc sarl mov or lods add fstpt lods xor lods jno stos cli and mov aas out mov sbb pop ss mov push cmp repz mov xlat lcall or jmp sub pushl imul adc dec xchg sub daa sub insb push out sub cmp mov lahf jne,pn mov mov dec cmc mov pop xor and mov and mov shrl shlb dec lret pop adc sub jg push mov repz insb leave hlt in imul or aam imul sub mov inc cmp cli rorb shr lret cmp xor xchg push add lcall loop cmp in decb dec xlat pop int3 fldcw dec (bad) aaa and and (bad) mov into testb or lds enter xchg pop out lret pop or push int3 daa dec sbb popa ficompl mov pop out jge (bad) mov inc xor les ljmp pop add notl push into sub out cli sub stos dec or (bad) div ds pop adc jg (bad) iret pop pop lret out xchg mov popf or (bad) mov and (bad) fiadd push mov lock and ja int3 inc fsubrp or inc call adc cmp ss daa fwait addr16 dec and lret divl fwait xor int3 xor rorl rorl or sti push cmp repz dec fbstp test jmp mov pop or mov jmp dec vmovddup sti add cli movsl sti les dec dec scas gs mov sbb mov shrl push daa jne dec mov ficomp lret (bad) fdivrl out scas cmp dec inc sub sahf xor mov stos sub call rorl into push sub lcall push in cmp scas repz lret fiadd cmp push sarl (bad) (bad) xor cmp movd fwait add adc mov add pop mov adc mov (bad) push sbb jmp lahf xchg xchg mov ljmp mov rep ret lods jnp or adc lret xchg test xchg notl push rolb leave push cltd sbb xchg (bad) stos (bad) inc xor xor fmuls idiv push xor sub jmp outsb sarb inc in and jp (bad) sar xor mov test mov mov jg lret mov stc or cmp mov xor scas ljmp jo popf adc xchg stc pusha xor mov mov (bad) dec shr idivl sti gs (bad) cmpsl add mov sub ror push dec outsl das pop sub adc lret sub add std dec shll xor pop push data16 mov daa (bad) mov or xor adc inc cmp or (bad) je (bad) add repz repnz (bad) xchg pop repz mov cmp mov xchg pop or mov das sbb jns leave jno xorl fcomi cli mov iret cmp lret (bad) jg cs cmp aas and and test ret (bad) enter pop dec and cli das movl lods es lds les (bad) mov jle mov imul fist jmp loop test into xor cwtl adc add or xor sub leave xchg fldcw mov jno mov pop pop in push (bad) out orb sar fisttp mov sub push nop xchg cmp mov inc jecxz cs sub jmp push cmp loope pusha and pushl push aaa decb mov add pop add jb dec xchg dec mov push pop and je out in xor mov mov in dec push scas push fstl xchg mov lret mov and push icebp mov inc cmc aas cld out mov cld fadds jge xchg adc mov mov mov sti sub cmc in shrb adc adc xchg and mov movb fistp mov or and mov jb insb fsubrp aas jecxz xchg lods pop pop out dec (bad) inc sbb mov pusha (bad) leave or xchg inc sub faddp shr shr test cli xchg gs roll adc rclb icebp popf xchg test xchg push call jnp xchg xchg xchg jge push cmp stc repnz xor xor in icebp cwtl mov nop mov pushf aad loop insb bound xor push and leave mov adc and sub test jecxz aas and int3 dec out and dec pushf and repz jbe sti fst mov push jo pop xchg cld stos gs add xor mov sub xchg fnstsw repnz cmc inc push jne es in and lods (bad) dec cmc (bad) in cmpsl sbb mov xchg or inc pop sub fs out sbb or cwtd jb sub sub add add fcom loopne subb adcb dec push mov push mov add pop mov lds cmp or orb scas imul or jmp xor dec neg sub or xchg mov adc adc dec pop mov inc sbb add xchg jge insb stos lret or inc xor mov int icebp and lret (bad) fsubs xchg sarb out lret sub mov push cld out cwtl sbb popf icebp cwtl adc int cmpsl enter push (bad) mov stos (bad) mov cmp int3 int3 sub mov imul fsubrp in lods pop movsb adc mov pop bound sub int3 cmp sub ret ret icebp aam add out mov (bad) mov test mov into roll dec xor out icebp mov push mov (bad) adc mov or cwtl lcall dec ret jle pop ja (bad) std jle push jmp xor jg out in mov stos cmpsl stos pop mov ret push inc pop lods xlat mov pop xor aam scas ret pusha (bad) mov jno or lock adc sahf adc adc push mov sub cmpsb imul jecxz lret sub pop hlt rcrb ficoml gs daa ja sbbb xorl cltd cmc inc mov sub and mull or aaa (bad) jmp ret cmp pop outsl in cmc test xor add mov sub bound pop fs adc outsl xchg fs rcr sub leave fldt (bad) xor iret adc lret movsl aas sub out popf ja adc andb sarb sbb and and or das (bad) out jecxz push xchg add test mov ljmp inc lahf rcl xor lret xchg or jg sti pop ret cwtl adc mov fistpll sub jl adc mov dec mov jb jbe or dec sbb pop cmp dec aas mov add inc cmpsl jne mov andl and or sahf push mov add push inc repnz dec and and jecxz dec inc call sahf mov movsl sbb adc cmpsl cmp cmp test jo out xchg lcall mov xchg mov jne xor (bad) pop dec pushf scas xor ret jno movsl jg jg into scas lret and mov into pop mov sahf dec and xor adc popf mov and mov arpl into ret pop fwait (bad) xor into aas fmuls or xor add xchg icebp push popa mov jle mov mov fcoml idivb adc mov into and or fs sbb push lock aam mov mov mov out (bad) jle idivb ja pushf test mov (bad) leave push pop adc icebp mov adc pop fdiv and jmp sbb test mov add cli mov or xor lods push xlat ljmp xor insb lea out push ljmp fimul into and jbe pop decb push jnp xor loope aas mov (bad) pop cmpsb sbb jp sub xchg mov and outsl cmc repz xlat sbb mov scas in xchg movsl aam mov pop bound or lcall pop mov jecxz or or inc int3 mov xchg cmp cmp lret sub inc jbe push add fistp push and dec fcoms jp and sub pop mov dec adc xchg mov pop stc jge loope sub nop incl dec stc cmc daa shlb pop pusha nop cmpb insb and pop add mov adc stos mov or push jmp aad out nop inc xchg pop and icebp mov add out lret mov adc negb pushf cmp or push add jg daa push and mov pop outsl mov push dec adc testl and jmp lret mov fdivs out xchg push cmp sbb lods je push repz dec xor popf (bad) fist (bad) int3 inc negb js pop xchg jnp cmp divl add sub testl out xor scas icebp (bad) xchg sar enter adc rorl in mov aad xor rolb dec jns prefetch or sub out mov sbbl daa add fsubrp sub cmp xchg mov mov push jle lock jge sub sub sub cmp outsl test in jle,pt inc cs leave inc fiadd ret adc lahf or iret mov mov inc fimull aas test pop scas sub daa xor pop (bad) push mov or adc movsb cmp movzwl gs dec jmp sub pushf xor pop cmp stc jmp mov mov mov lret imull dec cmp fbld addr16 adc xor rorb ret mov or mov fimull dec push or cmc jns xchg mov shrb divl and jl xlat nop mov adc out inc mov push cmp inc aas adc clc pushf mov xchg sbb push mov sbb add or scas popa icebp xor cmp ficom scas push xchg loop and sti sbb push xchg mov in sub sub dec add shrb out sub mov sbb and inc cmpb test mov lea inc movsl out mov xor adc dec sub cmpsl push mov mov jne fs insb cmpsl pop (bad) xor lods test or in xchg pop icebp and sub or inc (bad) pushf xor or dec and inc pop aam stc add jle fldt xchg pusha mov xchg jg mov add call in int and or sub std bound push repz or or jbe sbb mov push jbe bound ficomp xor add fmul push cmp jecxz inc sub add mulb fs fldenv std mov int3 pop (bad) int3 gs mov pop mov movsl stos mov adc sub (bad) adc lret jge lret vmaxss mov repz xchg jne (bad) lahf cmp dec xchg stos mov dec xor mov out push dec (bad) leave icebp lds push out int aas mov daa adc (bad) daa xor jle rolb clc cs adc mov xchg jmp push push xchg push jge and lahf add mov sbb or mov ljmp adc push daa pop jne inc sahf out nop movl xorb adc mov mov inc xor lods movsl or out xlat popf inc push shll in and in (bad) and cmp rclb js scas clc add mov pop cwtl dec scas je mov sbb ret push popa and movsl add das je (bad) out mov cltd loope jg jne dec jecxz adc mov leave or adc testl lods fcmovu (bad) jb cwtl popf fcompl mov popf repz lods lods inc out mov xchg and or decl cmp movsl adcl and cltd adc sbb mov or fcomp ret or and enter dec push xor ss scas fiadd add fldl jnp jmp xor icebp int cmp das out fnstenv jmp dec shll add adc mov pusha pop mov xchg adc pop cmp and mov dec je pop in cld inc jbe sub int or sub mov mov in cs das lds mov xchg jae pushf lahf out xchg ret cld shll and push jecxz mov testb sub fisubl mov sub or inc das fsts fisubl (bad) inc fcomp mov mov cmp xor lret rcrl dec mov sub push sub sub in add or mov scas pop sbb lret gs adc (bad) out mov xor ja sbbl mov aaa jne xchg xor cli and cmp sub adc pop adc mov stos mov dec scas sub sbb in sub mov jo lahf pop dec or sub xor add lcall jae add popa into iret sub idivb (bad) mov add push and sub cmp insl add and (bad) insl add (bad) jne test dec mov rol clc scas cmp add mov jnp loope mov dec bound aaa pop fsub xlat (bad) jmp sbb addr16 xchg movswl or adc and cmp xor enter jl inc and dec in data16 and or insw mov dec fcomps ljmp repnz bound adc sti lea (bad) hlt outsl fnsave fwait push adc jecxz pop outsl shlb mov push and adcl jecxz push sub repnz and lahf jbe adc repz inc lahf push sbb icebp into dec jge call xchg pop dec idivb pop clc mov or xor dec mov add imull aaa cld and jg push fistl (bad) repz mov push cld test loope arpl fisubrl rorl pminsw pop xchg push mov xchg push xchg push (bad) (bad) mov add xorl dec iret mov mov cwtl inc (bad) or xorb in out and ljmp (bad) mov or (bad) popf mov inc in or ja jecxz push fnstcw test out push (bad) out and neg jle dec lret cmp and mov cmp and stos (bad) aam insb xchg popf bound jbe in push and adc int3 mov xchg fldl and dec sbb mul push or xchg lahf jle jp gs fucomp mov insl mov add lgdtl loope adc stos scas adc addr16 mov push jg jmp cmc sub lret and add scas mov mov sub lcall lret mov pop (bad) mov pop jg leave scas pusha dec popa ljmp xlat insb cmp movsl lcall div pusha repnz mov mov out xor call mov shrl enter sub xchg repz into pop pop lahf inc (bad) jmp and cmp xlat push or negl pop inc push push mulb daa xor adc ret jmp int3 ret xchg outsb jb add and repz sub pop stc aad mov ss test push cmpsb cmp inc dec loop test pop mov test aas pop jle into jmp mov pushf out pop imul adc add or mov ret test out das stc std pushf jo xchg xchg or lahf push out mov jb and xor inc bound sbb dec (bad) mov jns (bad) pushl rol rcrw pop pushf nop (bad) icebp dec cli imul lret mov stos dec jmp ret mov inc pop mov sub jne mov int3 and call mov aam mov jp and lahf clc loop pop jnp dec or fnsave aam add lret push ja popa into add wbinvd fdivs icebp hlt scas xor pop ds scas mov fmul daa setg xor test and aas in fdivr das mov ret and or cld test and mov inc sub clc jg or pop rorb gs sub and mov je out pop rclb int add ret addr16 daa sbb ja pop (bad) fistp stos arpl popa jmp adc adc lret ret adc jecxz inc ret sub outsb aam stc popa fmuls lock jp insl aam push add sti fmul push pop inc lea and and jmp je jb sub std adc stos flds pop mov and add push (bad) mov adc sub in cmpsb pop mov xor fisttpll or in adc fldcw and lds or push fidiv out inc adc (bad) cmp shl inc (bad) adc pop lret sbb icebp std fs pop fnstcw in call je jmp mov and int add inc push pop loope lret sub stc add add shrl leave lock in (bad) push pop aam jno sub jle sbb hlt ljmp (bad) cltd inc inc clc sub mov clc xlat and dec (bad) push mov jo mov push jl xlat pusha and xor push add daa jmp mov jecxz and push push jecxz mov imul sub adc sub cmp shll out outsl test xchg pusha dec divb and pop scas xchg call mov xchg inc cwtl mov je orl adc xchg dec cmp jp add (bad) into fdiv (bad) les cmp or push xchg sbb dec enter js daa push cmp out pop lcall mov (bad) or (bad) call xor sbb repz pop adc mov pushf mov sub push push sbb push add rcrl notl xchg sbb mov in roll popf add lret adc scas mov data16 push and pop push mov cs pop push sarb and push in (bad) (bad) pop xor xlat out jmp cli and cld or jb cmpsl bnd push ret inc or adc movsl sub xor pop testb push insl daa push sbb push mov (bad) cmpsl add jmp rcrl dec and pop stos cmpsb push mov data16 mov in movsl cmc out jge push mov bound or pushl pop (bad) cmp lods push jno adc ljmp lret pop inc or pop add or xchg insb pop push pop pop jno xchg push or pop jne stos jae dec mov pop loopne (bad) dec and int aad mov push add std vmovaps sbb mov stos ljmp repnz mov lret movsl call push inc lds inc cli mov dec add (bad) xor lds fidivrl xor iret push ror aaa push mov data16 mulb add cmc pop addl pinsrw aas pushl sbb sbb adc mov lahf and nop and pushf mov daa push xchg hlt push jmp cmpsb pop loop movsb sub pop ds arpl dec cld push lret mov mov stos rcrl aad (bad) ds mov js out lock xchg pop (bad) push xor (bad) sbb sub in movsl pop (bad) fisttp or add sub mov pop ljmp or andl setg cld and and ret scas std sbb sbb aad call mov fcoms lret add push mov shll jg xchg or in adc xchg adc or or dec jne or jmp xor inc ficompl sub xchg xchg sti frstor cmp xlat leave cltd stc fidivrl pushf push jmp adc and popf fs sti xchg cmc or sub iret sub je jae ljmp mov cmp xchg sub jns inc add gs pop push loopne jb ret and in mov iret cmp leave push pop push (bad) mov and cld cwtl pop push pop sbb xor sub inc mov lret jmp pop out mov pop imul insb arpl mov cmpsb jecxz bound jecxz push lret sub and into xor xor lods jne rclb push add lds jo gs adc cmc gs add jecxz adc shrb mov inc dec add xchg loop ret mov xchg rcrl jmp xor mov dec push push or adc cwtl repnz and or mov sub movsl mov sbb xor mov xchg subb daa and rep adc cmp lods movsl aam mov xchg scas loope add xor xor or cmpsl mov gs xchg or jae xor xchg repnz fisub push fisttp (bad) cs and into sti dec xchg and or fldcw or mov adcb js repz movsb adc sti jbe adc lret cs sub stc fisubr stos sub or ret xchg push aaa dec popf and mov out lods lock loop pop mov bound das add xor movb fldenv sbb sbb call divl out and add and fstpl and dec jmp fsts into ljmp and repz cmc mov ss daa out jg imull movb subb popa inc xor fildll rolb repnz in adc je mov jg push std jmp xchg jb push (bad) cmp js mov pop xchg aad push mov incl and lret push push push xchg jno mov add cmp imul shrb pop xor aad xchg dec sub das dec (bad) lret and lods das sti pop test adc add cmc into loopne dec popf cld sahf jmp bound pop ss and add movsl and shlb fimul and mov scas les mov out repnz roll sub jnp add cmp push mov ja cmp fcoml add stos jbe push push sbb mov pop lods xchg leave aad pop jg or aas sub or pusha shr and lahf in frstor dec push loopne in or cmc cltd inc xor jae das ja jbe cmp ljmp sub xchg or pop mov mov sub mov or mov lret loopne divb mov cmp mov clc dec repz cs or std jg sti sub mov inc mov cmp test push mov jae mov mulb push pusha pop mov xor dec push mov repz (bad) ja cmovle lret subl test push repz loope jl in out inc and mov imul cmc jae and cld cmpsb mov add push lret lcall cmp xchg cli les scas sub push pusha (bad) pop push lret inc push iret ljmp xor add adc mov fisubrl (bad) adc dec pop addb mov xor mov cmp imul and adc pop ret xor mov clc pusha and xor sub lds cmp les sti (bad) aaa das sub or fisubr or std sub add inc pop sbb push xchg inc xchg in rol cs add jecxz dec stos adc cwtl mov cs hlt pop lret fdivrp das mov mov jge (bad) push test mov stos (bad) inc int hlt push loopne mov popf dec lds aas inc mov das mov (bad) mov iret add inc out dec popa jnp jo xor outsb pop mov popf push sahf iret xchg push and jmp mov clc push push pushf pop or leave adc mov ret and sub ror mov aam lret (bad) fucom pop rorl insb cmpsb (bad) jecxz pop movsl push push ljmp pop outsl xor stos push daa cmc cltd repnz dec sbb mov sub or std cltd xor mulb pop mov xchg add (bad) adc sub xor cli rcrb mov enter fsubs negl mov and add mov push pop aad loop sub into popf gs inc fidivr frstor movsl pop dec and pushf ja decl or (bad) xor jge push pop xor popf (bad) cmpsl (bad) repnz nop rol xor and clc push hlt stos repnz adc inc xor out and ja shr (bad) jge adc xor std and and push shrb (bad) mov adc cli xor fidivr idivb gs adc dec mov cmpsl xlat sbb shrb sub nop fstpl (bad) xchg jecxz pop push ret inc mov pusha dec fidiv sub and sub fmuls fs inc sub mov or xor enter dec pushf mov mov sarb movsb xchg arpl add fcom jno movsl inc insl cwtl dec in pop mov and aaa cs cmp mov pop dec jo shll sahf xor cs popf test daa out cmp (bad) iret daa aas pusha jns inc or lahf fcompl mov jo dec xor jno adc dec mov test out dec mov mov jo lods xchg mov mov inc add mov mov xor mov or xor mov mov iret and (bad) fld in out fnstcw push mov vcvttss2si xlat xor lds add rol mov pop nop inc sub rcrb pop mov pushf pusha and mov and and xor repz xchg jmp test stc in mov lods ss lret pop pop mov mov das pushl push or mov je mov cmc pop jnp cmp inc mov or sub stc mov loop jae cmpsl js dec (bad) mov adc adc add mov fstps sbb repnz popf into cs xchg idivl clc ja xchg xchg xchg mov ret imul daa xor push mov xchg inc popf jg mov push xchg adc (bad) stos mov xchg jmp mov push pop lret mov sub ljmp sub imul int3 js mov hlt mov inc pop jmp insb mov test xor scas int3 cmp insb jne int3 jbe pop sahf sub mov rcll sub mov or push and (bad) cmp fldt aaa mul gs out adc add imul inc sub enter pop out lahf inc movsl and lods bnd shrl shll cs push (bad) hlt or add leave dec inc repnz xchg mov mov lds in aam jmp stos ljmp sbb xor enter sub aad enter imul pop out and or or pushf andb jle stc add test lock or sub adc xchg imulb outsb sub leave out lds dec out sub mov je into popf sub or aad dec stc mov pushf aaa dec jmp popf fs xor and dec and dec stos into pop dec scas xor incl mov mov movsb ss mov dec and add jne call xchg ljmp mov pop mov js lock out pop adc add mov bound movsl inc fdivp push rcrl (bad) hlt mov (bad) mov inc mov pop adc cli mov jmp (bad) dec xchg xor cli arpl lods out jmp loop xchg mov dec clc sub aam mov rcll loope xchg aaa mov xchg mull xor movsl shl fsubs lret imul cmpsl lock idiv lcall mov adcb xchg pop xchg lods jp inc (bad) push xor mov out fsub divl scas enter mov jo loope loope,pt je,pn lods pop mov pop lds mov mov adc jns imulb jmp fistp sahf pop inc xor sub test jo mov (bad) xor xor mov int3 jnp mov gs push jecxz pushf (bad) das cmp in movsl or sub jg dec lret xchg fldl2t mov cmp jbe out daa mov mov push mov push fsubrp pop mov movsb sti fnstcw sub mov jg jecxz or das (bad) jno lock dec (bad) cld fisttp cmpsl pop xlat mov adc push or icebp inc add jge fidivrl inc in adc push xor push into (bad) fnsave leave icebp sub enter sbb jmp in xorb and das mov outsb ret popa sub or ret jge or aam push std cwtl mov ja mov (bad) repz popf jbe dec test dec dec std in inc pushf sbb jns dec mov into sti test idivl or push add imul cmpsb outsb mov dec mov adc cmp inc inc jmp xor (bad) ja dec push stos mov iret int3 jge into in pop mov jg inc cmpsl ret fcmovne rcl pop divb adc aad mov adc clc ret mov pop fild mov repnz (bad) fsts enter add out leave xchg sbb jmp orb mov dec leave dec jg rep mov test ret (bad) in xor sub sub add jp int3 sbb pop push es or out sub jae jo xchg gs pop iret cld jo ds push (bad) jmp iret nop pop mov cmp fldenv sti xchg adc push adc out sub cmpsb xor insl stos jbe pusha sub lock sbb shrb mov nop in cltd pop aas fnsave pop add ds and aad repnz (bad) popa dec out pop dec ret push cmp leave out das mov push (bad) mov xor lahf not ret repz fisttpll mov fistp sbb subl inc add dec rcrl ret sbb add mov insb cmp sub cmp and repz loope jo push or jmp mov xchg jge cmpsl xchg std xor jle add addr16 outsb or mov scas (bad) imul sub in adc repnz pop mov aaa mov adc mov sub out bound repnz or jp (bad) xchg lds (bad) or fisub pop sub ss dec and imul inc sub dec adc sub imul pop inc cmpsl inc pop test scas divl data16 js or xchg push add cmp arpl sub pop lds (bad) lock in jmp dec (bad) jne test mov into popf out (bad) mov sub imul int xor adc fidivl add lret ljmp vcvtsd2si sti jecxz dec shll xor stos loope push jg nop mov sbb pop push loop out sub jmp (bad) sbb push (bad) icebp adc scas jmp insb pushf adc xor popa mov push dec jne cwtl in xchg cld jb jns mov stc dec rcr idivl popl fisubrl adc and jo loope adc ja xchg aad adc push mov pop add adc or loopne mov ss sbb push sub xlat mov mov inc xor push (bad) mov dec lock pop pop sub lods jne mov cmc (bad) sbb mov sub mov negl test into lds out fs pusha clc js or xor and pop dec mov sub lea inc jne jmp daa das inc cmc mov dec or sahf outsl cltd dec adc cld test mov jb (bad) or mov add (bad) inc stos sub gs scas push imul pop inc cmp jbe and popa aam push xor adc xor int aas cld push pop stos sub outsl call mov dec cmpb push xor pop mov rclb std cmp mov add mov sahf addr16 jmp jg inc test data16 pop jmp out loop mov cltd push fmuls xor cmpsl ror add pop mov dec movsb sar cmp mov shrb jmp bound call call inc test adc (bad) test jmp adc sbb leave pop push nop xchg adcl lret mov inc fstpt dec sub jmp (bad) (bad) fcomps jp xor (bad) dec lea dec mov out cwtl and testb jmp push sti mov stos sub xchg loope and loopne xor (bad) or imul add mov mov (bad) mov scas mov dec scas cltd das add test mov (bad) gs lods mov sub sub mov mov lret out and ds out jne test dec cmpsl pop dec (bad) in push (bad) stos pop lock (bad) or sub mov ret cli lret adc xor ljmp push and xchg pop sbb vmovdqa inc das stc jl inc rcrl repz insb mov out mov or and in mov sbb jnp sbb add ljmp sbb or nop jno push mov fstpl stos outsb test adc xchg repz lods enter into mov ljmp lahf (bad) and out add xchg ret or or or sub jge movsl sbb cmp sbbl xchg fldt fcomps cli ret pop movzbl lock xchg cmc xchg mov add push insb (bad) mov ja xchg jno pop lock out adcb xor xor add sub clc and icebp cmp jecxz mov or lea xchg inc or and (bad) sub mov and xor rcrb xor mov aas lods jne cmpsb jno mov pop push xor ja,pt xor jmp xchg dec and pop ret sub xor gs sub shlb jo mov or stc inc dec in stos mov dec push (bad) mov pop mov or jge lret and lea iret xchg stos je test (bad) push movsb lea xor jp push and mov jno add repnz add pop jmp jle pop iret sub adc sahf cwtl and xor out jle mov mov in or lret mov data16 sti aaa sub dec gs stos fscale loop fcompl and mov (bad) je scas pop adc (bad) popf pop pop mov fimull lahf jno inc add cld shlb and leave ja sarl sub pop repz sbb jg push pop jmp and cltd call push cmc mov lock leave mov ja gs xchg (bad) cmc fisttpll push movsl mov mov stos fsubrs pop mov jno sub (bad) fildl pop bnd xor stos pushf sub outsl sbb inc dec pop xor xchg push push sbb pop xor inc xlat je loope sub mov out dec xor out mov cs inc jmp inc jmp cltd mov test push and mov fwait or push out or cli pop dec or in ljmp fstpl lahf js xchg jae scas jbe lret or aas outsb push (bad) scas std shr cmp je rcr pusha inc sub das add fwait popl push ss or or (bad) cld loope pop sbb jmp inc loop lods pop cs xor clc out push ds adc lret mov out aas xchg xor shlb stc adc or jl cmp mov and mov and or pop rorl sub mov add mov sub clc jae scas sub sub mov (bad) stos loop xchg add loopne out pop mov stos dec incb push pop test xor and inc inc (bad) ds pop icebp push sub sub sub jmp pop arpl xlat nop mov mov mov and std inc stos sbb cmp std (bad) (bad) adc rcll dec xor add mov pushf xor cmp push or adc mov lods pushf cs popf aam leave push (bad) mov dec pop fdivrl cmp dec jp aam repnz (bad) cmc lcall roll lea repz imul bswap or leave out in dec sub mov nop cmpsl das mov enter fistp push push cmp ret xlat (bad) or add imull add cwtl mov std sub mov jne push xchg iret jmp jecxz and ss push mov mov mov loopne add add fistp dec (bad) jl iret sub sub aas xchg mov test pop ljmp das ret sti es pushf lods pop es out mov and sub push push call mov repnz sub inc fsub adc mov dec in inc cmp fcomps popf (bad) sub mov pop jnp pusha sub fldenv jbe insl shrb (bad) xor popf (bad) bswap sub repnz shll push cld cmc sub dec jle adc repnz xor ret pop xchg mov sahf sbb jmp add or pop add test jns nop enter sub jle out ja jp push inc cmp das jmp mov xchg sbb pop mov xor sub daa mov push stos pushf ljmp inc subl int adc and jmp stc sti notb push push xlat loope aaa adc loop out jecxz inc pop movsl lods jns (bad) sub mov cli js dec fnstcw dec mov cmc dec push lods inc xchg cld push jp xchg xchg das xor mov push xor sub xchg or mov or idivb pushf enter adc ljmp mov add stos add popf add mov pop or mull movsb in pushf aaa mov fist mov add inc pop cmp movsl lods cmp scas repnz sahf jle jmp mov xchg pushl enter and pop mov pop sub jmp mov sbb mov outsb push movsb xor dec mov mov add pop mov xor pusha mov adc lock out icebp sahf jno loop push adc jecxz dec pushl pop (bad) fcoml adc xor out xor pusha mov outsl sbbl push xchg mov sub mov notl leave arpl mov push cmpl shl inc mov jle rorl sub add mov imul dec jne dec mov push bound sbb loopne cmp pop fisubl outsb (bad) (bad) mov xor cmp (bad) movsl pop dec adc pusha mov cmp (bad) and push push mov or jns scas adc add fisub and xlat xchg inc mov mov (bad) sub mov cmp cli mov xchg push jae fild add adc das ja aam jno jl movsb jmp mov mov (bad) mov pop out or jne sti test mov push mov data16 test mov daa faddp cmp add dec xchg and jmp (bad) xchg mov jecxz scas clc fisttpl push loopne lea pop sub cmp insb dec mov jp and push inc cmpsl imul or sub sbb jmp inc dec in jp test arpl fwait daa or cmp (bad) das into fimull int3 icebp call out mov pop jmp icebp test or loope jmp nop pop popf fsub fs sbb (bad) popa jecxz test (bad) mov xor push pop push and pop out (bad) and mov xchg test sbb (bad) inc inc das fstpl rol cli mov out and mov mov cmp pop mov and mov and stos xor stos lret ret call pop jl lret lock mov sti aad sub clc les sub xor enter mov cmpsb add cmpsb sub jmp push sahf das push movsl jno dec aam lahf pop test fcoml and pop in sbb pop adc push stos jecxz xor and mov push jg aad jns insl jle fstl inc int cld sub add ret ljmp sub leave shl lahf mov adc mov scas lea jnp xor sar out int3 add adc jmp or push mov sar xchg (bad) lea aaa (bad) xlat add into adc lds jae scas pop xor idivb fcmove pop faddp adc push sarl sub sub (bad) jnp iret movsb out fdivs ret out cmpsl xor lret mov ret add dec sub mov inc aam cli mov imul pop xchg cmpsb push pop aam out jb repnz gs mov bound cmp stc jecxz mov xlat and lock cmpsl xor jmp or mov js mov dec jle les stos xor je lret je imul fnsave push jne jo xor sub and data16 cli sub add add ds out fwait test lds mov fstps ss out or je out cwtl mov xchg es sub std (bad) ss iret adc clc fisubrl ret dec (bad) sub ss repz cwtl xchg push xchg fnop inc and pop cmp add loopne sub lds (bad) mov and jae sub push jmp add sub stos out dec or iret pop hlt pop push andb cmp lahf nopl lret aas aaa add lret loop,pn leave pop ja repz xchg ret (bad) fs sbb in sub out into es (bad) fnstenv test out adc lret mov or cmp cld rorl adc shlb adc adc jecxz das out fsubrs dec aaa stos xor cli fldcw popf rorl jmp push movsl push xor ljmp rcrb cmp cmp test hlt lods add pop mov pop mov call fldenv out inc xchg inc lcall sub leave cmc sub push stos jp bound inc stos movsl into xchg sub lahf imul jmp xor dec daa outsl sahf inc cmp jno and jne popa fsub imul (bad) mov daa js mov sbb sub js or xor (bad) push add xor mov movsl xchg out icebp cs cmp je and sti ret jg or outsb mov pop jl xchg sbb pushf fimul daa push mov cmp sahf test popf (bad) dec push lock scas mov sub dec popf not push or das bound jmp gs loopne dec (bad) test mov (bad) cmp sti je rorb cmp mov cmpsb arpl int3 cld push popf ja xchg bnd sub loope lret sub out and loop jae shll sbb xchg call andb add cmp test or (bad) and lret movsl lock jmp mov jmp sti xor push dec mov pop outsl sbb push sti add adc push scas bnd mov rep sub add loop push pusha pop cs adc cmp cs ret mov inc movsb xor xchg jnp shll cmp dec mov out test stos sub inc test mov loop pop mov adc sbb and mov cld cmp (bad) mov adc in cmp int idivb push inc mov pop cwtl arpl lahf icebp test xor inc mov mov mov inc xor add loopne addr16 mov and push mov rcll stos mov pop sbb push sbb sti scas sbb scas pop cwtl lret mov daa or jle and roll ja sub push jno xchg fistpll add xor push mov addr16 add sub xchg xchg icebp dec ret movsb pop shrb (bad) xchg out cmp int cmp iret mov loop jne xorl and int3 dec pop out int cmp mov xor push add jl mov mov (bad) daa scas xor adc mov xchg loop push pushf mov pop push lret call lcall ds sbb (bad) xchg pop mov movsl jg (bad) ds adc pop xchg mov xchg int loopne,pt pop daa mov jge mov fsubrl out adc and test shrl add jp jns lret mov xlat in or add fdivs pop stc push mov push (bad) add push sub ret jbe jo push adc dec jne,pt out and daa cltd and arpl dec (bad) mov pop (bad) pop adc lret enter adc ret jmp push repnz jns jmp pop scas jg ds adc xchg mov ljmp mov adc xchg cli lret sbb and adc scas iret mov repnz jle inc dec jmp jl movsb mov xor pop jno add clc negl pop sub xor pop adc push or outsb mov dec mov psrlq mov pop movsl out dec enter sbb inc cmp xlat xor jle inc into jmp outsb lods ja push dec call sub mov dec jge push std cmp fs fdivs icebp lret and cwtl dec xchg imul fs dec xor cmpsl (bad) cltd mov repz jo and inc icebp sub sub cld xchg add dec jg js add xor push in sbb xor pop jl jmp arpl subb repz xor mov mov add mov pushl mov test mov mov jmp mov imul push xchg mov mov sbb xor (bad) (bad) std push mov adc mov call imul ljmp xor mov frstor aaa pushf cmpsb test repnz and mov (bad) mov (bad) mov cmpsl sahf daa ss jp je les inc and stos cld dec leave push rcrb add or lcall mov pop es jle jno cmp sti lcall xchg dec std pop (bad) xor dec (bad) jmp mov pop mov fdivrp ljmp mov pop sbb fwait imul lods (bad) movsb (bad) ljmp inc dec adc test stos mov fldt out stc mov add mov je jl leave pop mov sub push add outsb xchg adc test sti cltd inc sub jg notl jp imul into scas fld jno jge dec mul test or cmp xchg nop out je push dec fs movsb sub (bad) lret (bad) add pop inc lcall dec inc sbb dec and add (bad) mov inc mov add lret repnz (bad) mov adc or sub mov ret push in cmpsl inc lret fisttp insb inc leave xor or pop pop mov sbb clc stos mov jo adc int push push pop pushf dec adc sub fnstcw in or lret pop popf loope cmpsl das rcr sbb and mov or mov fbstp fbstp xchg sbb cmp ficompl sub ret mov or popf je imul add (bad) mov adc inc or repnz fs jecxz repnz pop ret call dec jne lret dec push xlat rolb cmp xchg push adc and mov mov cmpsb adc adc inc dec out mov out push out pop daa jbe imul xchg xor lock inc xchg scas test popf js mov int cs loop xchg mov and or and and pop pop cmp sub and (bad) add or jne xchg jmp sub sub arpl rorl fucomip movsb pop out testb data16 rorb sub jo add jg mov and jo dec stos mov xor int3 in and std add jmp out bound push adc jmp lret or sub or enter gs daa dec xor cltd and sarl dec add jo lcall ficom xor pop test bound popf nop stos jg push sub sub lahf sbb mov and sub shr sub mov repnz pop gs jmp imul mov push dec call mov das out pop jbe sar idivb sub add mov testb fmuls dec (bad) sub leave push bound dec frstor jne push dec push cmc inc into mov int3 jmp sub mov push into daa xor jecxz pop and stos pop and pop push adc pop outsb out pop lods jecxz fnop cmc mov and push xchg das jae adc xor mov cmp mov push das add fisubl iret scas jb add movsl daa adc jp sbb das (bad) cwtl and inc clc xlat push lods mov stos das cmc push std mov jnp push leave xchg repz cld int3 inc mov in mov pop mov mov clc out jb notb ret mov sub push pop dec cmp out cwtl lods lret xor jne cwtl cmpsl jle ret dec inc cli inc pop and ret and cmp add jb sub bound out sub adc icebp dec or dec or jb mov sub in mov (bad) stos (bad) divl out icebp pop mov xchg pop mov pop pop int3 or or loope pop int3 xchg popf jle pop mov xchg sub dec test dec jno xor mov xchg lods xor add pop lcall stc in std pop mov data16 jne xchg push lahf cmp pushf daa add sbb mov stos lret scas xor sti mov mov repz lock (bad) call and pop mov imul (bad) movl jecxz xchg aaa loop xlat jns lods (bad) xchg push pushl popf rcll out cmp push daa sbb cltd test xchg inc fiaddl mov sub jge loopne add adc les repnz lcall test mov mov push push iret stc das sub inc jno pop test pop ljmp mov repz dec (bad) add loopne mov xor mov fcomps lds scas mov add ror out loop sar pushf shrb andb add arpl sbb xchg xor inc pop cmp int sbb mov mov sbb mov pop xchg mov arpl cmp test rcrb faddl insb and cmp cwtl negl or cmp or dec push mov sahf pop dec out mov in xor add daa mov push pop icebp xchg mov addr16 sub enter lock push (bad) jmp (bad) cmp insb and add nop dec push mov jne mov cmp ret inc sbb icebp cmp pop lds xor sub pop sub xchg mov pop xor je call sbb push xchg lock mov or cmp pop mov ljmp test ss jmp xchg xor ficompl std or daa xor cld adc adc xlat dec scas rcrl or jl loop mov xor xchg jl in in add or cmp and repz cmp movsb mov or cmp pop ja lods dec jl add mov jmp scas shr or and mov loope into cmp or sub jo pop mov pop lock movsl jne in jae fbld mov mov and sub idivb or fldenv lds sub sbb das sub jmp fdivl dec xchg dec xor mov es (bad) dec (bad) cs sbb jnp cmpsb nop push (bad) ja ja enter mov mov out scas sub sub jmp mov adc dec adc sub jge dec mov ljmp sbb add mov popf sbb fldt cld sub pushf xchg sbb add daa pop pop divb paddsw daa push inc mov out dec jno mov sbb or movsb ret movsl popa xchg (bad) das scas sub mov stos lret in (bad) or in js loop sub ret pop xor push divb stc sbb clc fcomps and lock repz mov lret or mov mov loop test pop call pop pusha push add aad sub loop call stos mov imul xlat scas popa mov and push and add loopne (bad) pop inc mov fsubl bnd xor (bad) pop sub push dec jb add xchg push pusha sub push rep mov rcrl xchg ficomp pop jg xor cmp mov push int3 leave ljmp add daa adc fsts mov das mov js xchg mov js dec ret xor adc mov lret sub lcall mov or xor fisubrl outsb push xor pushl pop mov pop sub push mov movsl cld push insb addr16 jg test pop mov pusha test gs xchg mov (bad) cwtl jbe stos pop xlat shrl jne gs movsl push inc adc sub lods mov shlb push and enter pushf sbb sub out cmp sub mov dec pop mov (bad) ficomp xchg jecxz sub or push pop fcoms repz sub adc addr16 mov cmp cmp shlb inc pushf push test cli adc (bad) sub cmp jo fwait movsl and add and rcl adc cmp cmpsb mov lods and call loope bound xor fndisi(8087 sub mov cld jno call arpl xchg out pushf xor pop dec insb mov xchg hlt mov lock stos mov add mov (bad) arpl aas xor dec mov daa lea jle mov sarl inc mov ret xor cld push mov test rorb fucomp daa push mov pop enter jecxz push test out mov jmp inc add push mov jno rcll add sbb dec imul pop adc cmp mov mov movsb push imul insb inc and xchg jae shrl and xchg adc mov inc sub das out xchg je xchg dec cmpsb jp jle dec jmp fild mov sub cli (bad) jge enter xchg (bad) out mov xor mov out and push daa sub xlat in sub and mov pop sbbb adc add add ret jb jnp dec sbb je inc mov fs scas loopne add sub mov xchg jmp ret jg cmp rorl cmp das sub lea imul pusha movsl sub repz pop jg add and loopne or xchg push cmp fild xchg inc sub adc xor dec mov and jecxz and mov jmp fcomip aad ljmp and sub or insl xchg jae push out mov xor inc mov pop mov xor or mov jmp daa mov fcomps sub sub mov shll out je daa sub xor scas mov int3 mov mov xlat (bad) cld test mov pop jno dec jle mov je,pn ljmp rcll sub notl (bad) shrl sti adc repz (bad) bound shll sbb (bad) hlt xor mov fincstp imul push das pop ret ret push stos rcrb sub xor sub inc xchg sbb push out push lock pop mov adc or adc mov mov rclb (bad) cli lds lcall out lret fcmovu ficom pop scas fsts in (bad) dec and jmp pop pop mov dec pop test ret icebp pop pop shll mov xchg out test lock loop mov (bad) sub inc ljmp jno out push push test ds sub cli sub and in add gs xchg sub (bad) (bad) scas xor (bad) sub scas bound ficomp xchg or idiv sub aad sub icebp mov out sub rolw into push lds sub add push xor cmp and mov push lret stos gs mov popa outsb and popa insl cs push ljmp data16 mov test and ss push inc xor lods test roll mov gs xor pop cli negb sti dec dec icebp xchg inc dec ret adc pop lods push movsb add leave add sbb push divb into pop jne jge push pop rcll dec shlb adc lcall pop xor adc pop stc jecxz sub jle (bad) add es dec mov icebp pop mov sub rcrb push (bad) cmp dec mov in scas adc add adc (bad) aas sub xor iret pop in out cmp pop mov stos jne mov (bad) neg enter popf jge sub lahf add xlat gs cwtl fwait adc adc xchg jne sub cltd xor cmp jge sub out sub pop mov scas outsl or mov pushf sub pop stc rorb pop xlat lock mov outsl xchg sub lcall clc mov test cltd xor mov adc or mov (bad) js xor push jmp in imul push cmp xor mov loop sub lods xchg jno xchg out scas mov loope repnz push les xchg cmp xchg icebp scas repnz mov push or dec out rol jae adc (bad) jo psrlq pop push or pop gs sub and int3 addr16 cmp xor out xor scas les cltd daa lret push or rcrb or and cmpsl lahf jnp sbb popf jmp int3 call xor adc mov int std jecxz mov (bad) test dec add dec mov or xor enter scas cmp add mov loop lret xchg sbb les lock or (bad) incl and xchg pop mov loope scas (bad) in fldcw cmp clc lds mov cmpsb (bad) pop xor lods fwait dec mov sub (bad) xor out fisttpll ret or mov xlat push mov pop ss in mov out xor call adc hlt std (bad) jmp jbe ja lea mov inc mov mov pop push mov or out insb mov cltd mov cvtps2pi push jg push xchg jmp sub idivl cmp and sbb jbe inc jno in dec cmc fs push mov sub pop int3 std dec sub pop sbb addl jnp sub fadd or add lahf cmc outsb xlat (bad) sub sbb ja call push xor sub lea jnp xor sub or and add sbb mov mov call cmc outsl outsl xor mov pop push jle cmp pop xchg pop mov jmp mov pop mov dec sbb pop shrl jg mov jge stc pop jo sbb ret aas push mov xor jae cmp pop ss int3 or mov (bad) xor fnstsw out js jl xchg add outsl pop jne jne jg mov scas es mov nop or jge fistp cs repz add mov cmp dec into sub das sub add (bad) pop push (bad) push test out sarl inc addr16 pop or stos xor test mov mov inc inc push push pop outsb mov rclb xchg stos enter mov movsb adc pop mov and cmp dec outsl adcl std inc aad sub or pop and pop ret push jle jae loopne adcl cmc data16 jmp or sub push out ja xlat pop pop shr push rcrl xor lret dec (bad) adc ljmp dec cltd roll ljmp shrb addl out lret mov out xor sub mov push add lahf sbb push into movsb jmp popf cmc xchg mov divl ret xchg lods pop shr lret pop pop mull jg mov enter mov add cmp sub popa jo sbb or andl ds xchg imul mov ss mov movlps fdivrp enter inc das or jnp adc or (bad) xor std imul pop or mov fldt iret cmp push int sub enter xlat movsl pop cmp xlat cmpsl movsl or ss sbb xchg jp push out and loope stos xor mull iret std cld xor cmp xor adc lret iret cwtl xchg add popf gs das xacquire jle pop loope je mov notl movsl dec mov pushf cmc sub stos (bad) xchg push lods js mov fst cmp ds incl mov fild pop jmp push out mov ret pop icebp sub popf jl cmpsb pop mov repnz shlb xchg and sbb inc jle push adc int call sub mov dec pushf mov test je into mov loope (bad) jp ror adc mov sbb dec stc iret nop jnp or in push push icebp xchg sub inc in xchg ljmp jg and or mov jl (bad) ljmp dec mov mov out mov push mov dec add cmp jmp mov cmp lea dec enter add add cli xor xchg (bad) movsb lret sub nop es cmp add (bad) and pushf pop inc loopne xor cli ret xchg dec popf adc and in cmp mov dec scas or out pop pushf jae repnz adc lret js lock pop adc popf fstl mov dec (bad) dec pop mov bound or jge movsl rolb cld xor subl (bad) mov popa gs sub and mov xchg push xchg loope jge (bad) ss push xor xchg icebp cmp cmpsl scas sub sub jb sahf push sti popa ret xor cmpsb out xor lahf fldcw jns gs mov call xor and fdivrl ret xor mov fldenv scas mov mov lret dec (bad) pop mov xchg daa (bad) cmpsl je jmp jne xchg into and rcrb aam orl rcrl in repz js jne xchg stc cmp outsl je loope sub imul lock jbe push and fnstcw and ds adc inc and leave (bad) repz and push mov jl and scas lea gs mov pop mov push sar imul adc or and jo lahf (bad) dec push jnp or clc jbe cmpsl rcrl daa rcr shlb popf xchg leave mov (bad) fdivs sub cli out pop ljmp mov jle out add sub jnp push ret sbb mov sbb pop test dec (bad) dec mov movsl lock ja sbb xchg subl sub mov loop jle dec out mov xchg out movsl leave shrl pop sbb std repnz stc adc clc sub mov sub addr16 bound jbe jmp jno sub sub punpckhwd cli and je inc sub xchg rcr imul and dec cli sub jg bound xor xor xchg aaa mov xchg lret out adc jecxz daa repz or and fistp dec add je jmp pop sti mov xor add and loopne fidivrl cwtl adc lds in mov cli pop dec imul outsb mov dec xchg int dec push pop dec int3 pop pop cld notl xchg shlb scas pop mov mov (bad) inc sub out dec rclb dec jge mov mov mov js fnsave cmpsb cmp icebp dec stc sub in sub imul repz add pushw push mov push jp ljmp mov arpl in jmp dec (bad) jns dec pop xchg mov mov mov and push pop in movsw mov cltd or mov mov mov mov jmp mov stos mov pop or push stc int3 arpl xor repz cmpsl movsl (bad) adc inc add pop add mov jnp or pop imul jge push jno sub mov add jns (bad) repnz or sbb adc imul rorl jge sub sbb popl mov adc notl std push popf scas push fs cmp push out jns dec or arpl loop or (bad) or int3 sbb or dec mov mov rdtsc rolb (bad) imul mov pop mov bsr fisubrl mov (bad) pop mov and rcll and pop mov xchg push adc mov adc sub ret dec push sbb mov xchg mov and add dec push or testb mov cmp pop dec lret xor shrb mov inc (bad) or repnz add cli call ss or rorl rcrl stos lret lods dec xor mov and test pop add fmuls add mov dec xor mov jmp repnz pop cs clc or fmulp jae out dec cmpsb inc pop lods push and mov (bad) out call stos popa cld xchg dec pop (bad) adc clc and fiadd xor iret mov rorl jnp sti (bad) (bad) mov fisubr xor and cmpsl (bad) mov xchg pop and pop nop out mov pop inc cmpsb icebp ljmp jnp pushf cmp (bad) mov xchg bound minps dec add sti pop jbe push push or ret (bad) xor test sar sarb adc std sti mov (bad) dec and add sub lods pop scas bound push sub je and or mov mov dec pop push cld daa in mov cmc movsb cld (bad) repz leave out push sub int3 imul dec pop mov decb shrd into fstpl dec lret rorl cmp pop lea int3 insb sub cmp notl add daa or fstl xchg mov mov mov mov push adc (bad) sti push or mov pop scas std hlt loopne cmc jae mov (bad) out or jns dec je push mov sbb push je outsl push pop stos or into jmp jle insb aad stc lret mov mov cmp inc mov xchg adc add or jo or pop daa push inc xchg cld add cmp jne out adc or cli aas je cli mov pop sub mov repnz stc out mov sub and adc mov or dec mov out add ret and cwtl jbe add push xor jg gs popa repnz repnz lret (bad) (bad) lock or push dec inc rcrl dec push mov call jb std and mov fsubs addr16 enter mov pop popa adc add lahf inc stos inc xlat fsts data16 xlat add sbb gs movsl mov fsubr cwtl xor push sbb jg leave lret sub pop jmp ficompl cltd and pop jnp xor add cli pushf mov cmpsl out jge aad add pop xor ljmp push ret pop aas fisttpll mov (bad) cmp or mov xchg test mov sahf add insl outsb test xchg bound (bad) xchg mov push addr16 loopne (bad) mov das ja lcall dec add js in outsb mov pop and scas call pop daa xor lret cmp cmpsb push stc xchg out lret out add scas call das mov push out pusha mov mov fdivs lods sarb mov push pop fimul and nop outsb xor mov lods jae jmp stos jno sub out frstor jp das jnp inc (bad) mov adc mov loope das loope dec xor mov ljmp ret stc les cmp nop mov sub jge icebp cmp add ret dec dec inc adc mov cmpsl (bad) xor mov jge sub sbb mov mov dec popa rclb mov mov add adc mov popf repnz out or std adc mov mov or fldcw sarl jnp dec icebp stc int mov dec mov ds popf les xor popf lock les bound mov push test mov and mov add out repz and orl js leave ljmp fdiv mov decb clc jge hlt add mov mov sub sub cltd pop call call movsb cmp mov shrl dec jbe xor out mov bound movsb mov or xor xlat (bad) pop js icebp ds mov or repz xlat ficom cmp add lret and (bad) and or jle jmp dec inc pop or cmp insb mov jbe nop push xchg xchg or daa daa rclb dec mov dec js pop sbb adc fisub cmp cld push pusha cmp pop jge and sub stos lock jg stos outsl inc (bad) fwait and pushf mov icebp xchg sub jno xor rcll cmp scas imull pop xchg or sbb sti jne loop lret scas jbe and lcall jecxz pop mov repnz out lods and mov sbb das out or cmp fimull dec ljmp or repz pop adc std inc out pop push add test sub add jns xchg lods lods pop mov dec lea cmp and jae daa mov or mov mov jne jmp pushl mov adc xor fdivs jbe xchg (bad) ljmp mov dec jbe sbb std jns adc test mov out into xlat sub sub cmp aas dec pop xor inc xchg idivl daa cmp outsl ja or ljmp imul cmp pop push mov cmpsb popf sbb add scas jecxz and dec icebp mov es mov mov push xlat mov sub negl xor idivl add clc aad xor adc (bad) xor call fsubs inc and mov js pop pop imul mov stos adc negl mov or fisttp push in add dec imul and in jmp or lds ret dec or lret mov jne add xor sub rcll or xor rclb cmp mov out mov xchg in cwtl fcmove pop faddl es imul and and jecxz test scas insl push outsb test mov aam pop aam js into (bad) jno mov adc sbb and lods rclb cli mov rcll inc inc dec shr xchg mov call and aas call push push xor fcompl xor add dec push clc repnz leave pop ljmp (bad) sub call inc stc xor jno xchg repnz rcll push xchg xchg icebp mov pop icebp popa das test movsb ret adc lret jbe ljmp popf pop mov jp mov lds mov cli pusha dec and mov lea xchg push clc jmp js mov fstl pop pop loop inc inc bound ja pop pop mov outsl pop mov insl movsb mov sub out add xor daa xor pop cmc jmp pop repz xor cmp mov das sub aas dec int3 xor les mov sub shrl xor jbe dec mov enter dec mov std in jae cmpsl mov enter fisubr int push sub add ret cmp jbe in adc out xor sub jg dec mov idiv pop inc mov sbb mov jp loope or in pop mov stc jmp xchg pop xchg fadds rorb mov dec sub mov daa xor cmpsb icebp dec pop add and std ljmp mov xchg jae and out pop insl shll or pop xor cmp jb fidivrl loope sub xor ds sbb iret add je mov ljmp inc repnz test popa jo cmp mov mov into mov (bad) xor mov or int xor movsl fdivl jmp and jmp stos cltd or cli push mov jne or xchg je in dec sub insl jbe and popf jnp inc leave or mov ja lret mov and mov test push mov jp,pt cltd (bad) leave xor hlt sub enter repz mov pop ljmp push (bad) sub mov divl ja pop jp sub or je pop or mov std add sbb div mov lds stos mov dec jno add inc jo ret mov sti fidivrl aam (bad) and daa cmp (bad) cmp sub or ret stos mov cld add loopne ud2 cmp rcrl pop int3 add push cltd sub mov or dec (bad) cmp inc xchg (bad) idivl push repz jl or adc mov lret pop add mov (bad) adc imul repz ljmp xchg stc shrl shll inc sub jbe push lret test sti cmp dec test pop xchg rcrl adc (bad) cli (bad) cmp pop jmp fadd in fisttpll mov pop mov rep dec out adc repnz notb div inc adc mov into xor xchg not imul imul into fmull xor scas arpl (bad) jle pop and dec jp fcomp adc cli mov add addb jne cmp or dec fidiv dec pop cmp ja loope ficom sub cli fisub dec jecxz das idiv cltd sahf xor push fsubrs dec mov mov enter xor cmp lret mov pop ljmp mov adc mov xor xor ds sub leave fwait jmp mov fisubr add (bad) stos sbb cmp insb das and aad adc xchg fldt push movsl fdivrl xor jg pushf cs adc std mov lcall test jb lret pop xor in lret lret iret add inc fsts addl or into aam push add stos mov arpl loop leave (bad) push xor lahf xchg aam xchg popa pusha es pop pop pop out dec out jle jbe pop ljmp sub (bad) addr16 jl test sti fmuls jb es mov lods sub xchg rorl popa test mov fsubrl push jge sub test mov pop xlat sarb or dec mov fist push pop and mov mov pushf bound or aam push pop add push mov push or loopne out xchg jno imul sub rcll inc lret and mov insb cltd push in fadd mov jle or sub mov push and mov ret in roll jb and sarl lret xchg adc insl dec ja jle xorb xchg das add jb decl ja mov cmp mov fistpll inc inc lahf stc inc cmpsb pop das inc in sub sahf movlhps ljmp sub push popf xchg jne pop xchg loop lret outsb or xor daa fsubs leave cwtl ror lahf pop xor jg push imul sub mov fnsave xor pop cmc mov and das jle int3 adc ds jno dec lock test mov out sub fstpt mov dec fcompl pop sbb imul ljmp test sbb add adc xchg xor repz lret inc ds sbb xor mov sbb sub sub in dec jmp js fisubl and inc pop repz fsubr mov add cmpsb pop outsb add mov xor and ret jg je pop in mov xor inc fidivr lret sub mov dec mov add mov cltd idivb mov mov xchg fldl2e sub sub into sahf sahf (bad) lret adc loopne push inc out mov mov cmp pop pushf add xchg clc dec dec cmpsb rcl iret outsl dec mov das into adc xchg cmc mov and ljmp loopne mov in xchg xchg addb (bad) push out test test in xor pusha pop aaa cmpsb je mov lea fwait (bad) (bad) pop jno scas jno mov pop pop andb movsl pop jne call (bad) fsubs dec sbb pop ret mov jns lods jg push (bad) push sar pop xor add xor push cli adc inc push gs icebp add xlat mov push daa adc pop flds xchg ss xor sbb sub jns leave jg xchg sbb xchg pushf and xchg sub push pop loop std out or rcll mov fcomps mov mov test mov ret add sub daa mov pop cld cmpsb sub shrl in jno add testb jne ret jb aaa add mov rcrl leave xor aas test (bad) xor mov das mov daa and rcll das iret mov icebp and and push out cwtl test xor notl and and dec dec pop iret sub xor mov pop icebp (bad) sub vmovaps or andb jno das sub shrl add and jno lret out mov scas repz xchg (bad) mov das xor fdivrl xlat mov mov jmp sbb and (bad) (bad) int ja dec xor (bad) mov xchg mov gs push push in out sub out (bad) pop icebp mov jg int3 dec enter aas push cmp jbe push or push or lea cmp vmovapd or dec and sbb repnz adc xlat into icebp nop or xchg jns mov (bad) dec mov jmp sahf scas in mov (bad) jne (bad) scas jl in jmp mov (bad) mov jbe dec div sbb mov rorl dec (bad) xor into jnp push jg sub and jg int3 insb lret adc ljmp jne mov push dec dec and pop xor pop sarl pop mov mov stos adc lret xor mov inc sahf mov xor push (bad) mov jb stos pop test cmp into dec inc popf insl scas push arpl jb (bad) xchg cld leave jne mov jno sub push stc std push fisubl fnstcw xchg add mov inc add lock ljmp dec pop add inc mov mov ds jno sti adc (bad) ja leave mov pop xor icebp and push xlat out mov sub xchg inc mov sub mov imul icebp imul pop xor popf loope ret jbe dec or rcrl (bad) xchg das or lock repz pop nop into lret ret mov jne mov cs mov jo cmpsb test mov push jg mov imul mov ret das mov mov lock sub push mov int3 ss xor pop imul jg popa das jno mov xlat pop jne and push add lret push lcall loop leave or mov push dec add mov pop jecxz and sar and sub hlt out mov loopne sti fwait loop sbb je pop push add add xchg lret jge cmpsb je in nopl or cmc int3 dec (bad) sbbb mov dec push cmp pop or nop nop and mov pop ja repnz (bad) sub cli adc xchg test xchg and inc and shrb ret cli xor jnp leave inc xchg xchg push gs adc and call popf mov pop lahf pop insb adc scas out dec mov mov mov inc mov pop (bad) dec mov inc mov pop dec test mov lds and popf (bad) cmp daa xchg mov lea xchg cs ret xchg inc mov sub mov adc lret icebp bound out and push scas fstpl sub idivb and push or pop xor out (bad) cli and dec xor stos shr lahf pushf pop mov cmp push adc xrelease push and cmp add icebp dec ret aas adc cmp pop scas cltd cmpsb fcomps (bad) out out loope in pop sub jge inc and les dec (bad) repnz fwait adc sub push imul sub sub fsts std mov and clc sub add and mov and scas bound fidiv sbb xchg std push repz bnd inc sub loope jnp mov ds cmpsb push test jge sbb data16 xor mov aas mov out add pop mov out push or pushf sti mov cmp dec mov add xchg cmp popf push mov add lea gs movsb (bad) xor sti fisubl mov jmp push into or mov aaa mov mov adc hlt mov or imul repz and and call xor outsb mov out jecxz adc fisttpl fisub and cs (bad) fisttp cwtl push into call les mov pop and pop mov mov popf es add or stos cld mov fistpl in mov jmp jle ds add int3 mov (bad) out (bad) mov sarb jo repz out popf stc loop aam and dec imul mov jg sbb out lahf lcall adc cmpsb jnp mov notl dec imul (bad) or mov mov int3 inc or push call imull adc xor out fstl mov dec add jg aam aad nop cltd outsb xchg aaa mov inc mov inc getsec xor xor ret lahf mov aaa jle insb sub jmp outsb jle inc ljmp rcrl out cmp mov and sub addl mov sub shrl mov ljmp repnz (bad) cmp inc ret dec adc aaa lret mov lret or aad xchg or inc inc ljmp es (bad) push dec pop sahf mov (bad) xchg cli push add pop scas add out mov aas das sub sub mov frstor fcomps fs jmp mov xor scas dec loopne and mov xchg add mov cli in pop xchg push (bad) or mov pop push je stos clc jmp mov mov lret (bad) fsubrl pop and cmpsb daa mov push push jl insl adc inc push xchg daa adc stos pop pop jl mov or mov pushf lcall add daa or imul sbb mov mov xor inc aad clc xor scas dec lock (bad) lock pop pop dec xor (bad) xchg cwtl test xor fisubr notb add mov jge loope or test xchg mov or movsl add add ss sbb xor mov push lret ds inc lcall sub mov mov dec push inc or xor xchg pop sbb data16 push push jb or adc js rorb adc or rcll mov xor mov fwait adc adc dec lock loop adc jnp cmpsl ja sub pop adc loop pop lods pop or rcll and jb pop ss and mov adc xor pop psubb mov add adc insb psubw jb adc jnp xor mov stc push es pop xchg mov jmp leave sahf pop push das in stos mov shrb mov pop and mov adc fstps out popa inc or sub xor mov cld outsb inc sub adc mov ret inc rcrb sub cmp clc add and sub mov jne pop xchg pusha jp or pop cmp inc aaa and sub mov adc jmp and ret and adc shr lret outsl call imul outsb and fwait jne stos repnz dec mov out mov pop xchg orl fs scas out sbb adc nop loopne lcall add sub les lret xchg pop int3 xor add sub jmp push sti in test lret mov adc mov out fiadd (bad) lahf stos adc out mov adc fdivrp jecxz test ret mov into (bad) dec clc shll ja adc push ja cs jmp mov add jmp and mov jg popa imul sub pop and lods inc add push and fs out call add cmp or lret addb (bad) adc ret std push jge clc cmp pop clc cmp sub jp mov dec sbb xchg test pop ljmp inc add into xchg add jge inc push cli jmp dec dec fnstcw or xlat scas sub lret sahf insb inc push xor mov (bad) ljmp pop sub sub cwtl pop jecxz and xor das pop mov ljmp dec push add lock jmp and ljmp popf out test mov (bad) dec aaa jbe shlb sub nop daa pop push cmp and lret out inc repz inc movsb push and sub lret fisttpll imull mov mov dec jmp nop test cli xor and ljmp test sub mov fadd insb daa cs sbb cmp shr lea clc in mov (bad) and mov cmp negb loop repz bound (bad) ja sbb sbb xor ret std outsb aad jg into sub (bad) out nop mov (bad) push xor popf pop dec movsl jne (bad) movsl ja sti out outsb fs mov cmp fsubp in sub sub pop movsb ds sub sub xor pop aas (bad) xlat lea movsb cld ret popf lds nop out rcll (bad) scas loop pop loopne and xorb jmp lock jno (bad) ljmp add and shrl push sahf mov or mov in mov push add cmpsb ja gs jne cmp pop mov fs es (bad) mov fdivs xchg inc ss dec mov rclb pop aam and cwtl push mov or daa outsb test movsb fs push pop add push cs sub push add dec ds aas mov dec icebp sbb jo push jmp jle dec jmp sub and push add (bad) repnz inc or lods push adc push popf push mov inc xchg pop inc sub inc nop xchg cltd je roll stos add jg pop mov rolb js imul sbb mov push subb mov adc lret pop push cs rcrl (bad) outsl jns int add push mov pop scas jle push mov jmp pop das ljmp push jge imull pop push inc push dec sub add out ja inc rorl add mov cmp cmp addr16 or fstpt call add sub xchg jno fs ljmp sarb in loop out aas fiadd inc neg xor pop add xor pop nop jmp mov mov pop cmpb or add sub inc lcall movsl jp jecxz push pop and mov jge decl add xlat mov lret adc jl push add in xchg rclb dec lods ljmp cmc les call jnp (bad) ret xchg pop clc jbe loope out fistl shrl mov ffree out mov gs fisub push add rcrl sub repnz add dec inc cmpsl sbb and mov add stos xor xor cmp out sahf clc fs cltd insl jp push or sub das stc jle lret inc enter gs cmpl add fs (bad) or xor div and and out inc orb lods ficompl outsl cmpsl aad insb mov sahf in cmpsb movsb and jae icebp insl or mov mov out xchg add jle loop and pop repnz mov and cmp cli push test mov sbb push adc int add ss sbb xor je leave jno or (bad) push mov add out jns or fiaddl dec mov or push mov mov loope insb test cltd xor es test mov mov fildll and push adc adc stos scas mov mov jo xchg sub movsb outsl sar cmp xchg and (bad) push fstpl mov sub pop (bad) jecxz xor sbb push stc call push notb out imul xor movzbl cmc ljmp cmp add pushf or dec jmp sub imul repnz mov add pop dec lods jle out lret lods mov or add dec lcall iret cmpsl fsubr push or (bad) cwtl loop adc lock cwtl dec xchg jns mov test loop aas mov add pop and dec or ljmp cli pop int3 mov jle mov cltd sub add shl dec add inc and mov xor icebp ds shl push movsb fwait push mov pop jb dec js (bad) ficom jb add psllq enter jns jg hlt dec sbb cmpsb sub jge mov aaa orl pop pop cmc adc adc add rolb loop dec inc sahf mov mov jg mov cmp lock pop xor inc (bad) mov mov mov (bad) lock leave call dec ret pop int jg daa xor not xor add dec pop add xor shl or inc int push xor pop sarl mov inc and fildl cmp add adc mov in adcb dec adc leave adc (bad) rcrb enter add fimull jnp (bad) outsb adc and pop mov out and pop sbb cmp jbe fs adc mov sub test mov jg mov and lahf pop lea or sub mov dec cmp xor push xchg and add call inc rcrl insb out (bad) call ret dec pushf mov pop lahf adc inc mov xlat mov cld xor add into pushf push (bad) sub add or iret imul inc icebp or scas cli fdivrl push insb push imul loope mov das jg aaa rorl das jge add insl leave stos jbe fldenv jg push and sahf mov jmp xor leave gs (bad) xor inc sub dec mov sub jl and push gs xchg pop cld std into mov mov and lods rolb mov out scas sub cmp shl dec jbe inc add out xor lahf mov pop dec sub jb xor lret adc xor mov cwtl pusha or mov xchg jno imul lret dec xlat pushf sub flds inc int3 rorb pop mov push lcall inc mov sub jg dec mulb mov add push repz imull cmpsl lds inc mov mov push dec jge add lea sub imul jns ret arpl mov nop notl call jnp push pop addr16 adc mov sub add mov loop adc jne pushl cmpsb hlt add mov hlt adc aad xchg cmc insb push pop add mov jno mov inc out jl call (bad) movsl jnp or mov push jo testb or and xor adc cmpsb movsb daa rcll (bad) ds bound xchg (bad) cmp aaa jnp mov add idivb leave es cli xchg pop sbb outsl and sbb jl aad xchg add ret (bad) xchg add mov xor mov iret mov imul mov ja lret movsl mov sub xchg and cld pop hlt decb xor daa out adc stc out mov shll xchg xor or (bad) or xor mov jnp repz movsb mov lahf (bad) fldl sub cmp push or ds lret dec and jge fidivl jl mov bound pusha shl iret jmp mov into adc jmp bound int outsl int jp imul dec mov cmpsb pop es loopne and movsb adc idivb das fadds cmpsl outsb fdivs aas movsl icebp and daa or pop ds lahf pop into push out mov jbe pop push imul (bad) push mov rclb shll or outsb xchg xor loop daa or pop test imul loop jns lret (bad) hlt jbe jmp hlt pop lcall loop sub icebp xor into pushf push mov sarl or pop clc fmuls add cli mov mov or xlat mov lds popf xchg jecxz sub out pop dec jbe push into push dec jmp in jecxz pop test dec dec pop mov sbb push into xchg imul xor dec push sub sub scas fsts xchg jg rorb (bad) testl ljmp cmp push jmp int jl pop lock mov push ja push ret inc dec and cmp fs jmp pop jle add pop dec mov shrl mov jnp jg xlat sbb movsb aam lds sarl sub out fyl2xp1 bound (bad) ja or ss lods add pop ret xchg nop out test ret test rclb xchg mov jae daa dec push xchg stos or jg imul mov (bad) lcall xchg test shrl into xor mov jne sti repnz rorl daa fimul push psadbw mov fild sub adc (bad) ja mov mov loopne outsl add add mov add push xchg lahf pop pop rorl pop push mov inc call mov std cmpsb adc std imul cmp add mov pop add sub inc js push fstpt sub and cmp idivl and push es adc jmp push sahf jp cmp pop lcall movb adcl pop scas jp into enter jg adc sar xor (bad) mov pop add mov add jl push mov or sub jns xchg push xor add xchg loop je lds scas je (bad) or stc and add push mov pusha inc in mov rcll ja neg enter cmp push jmp fdivrs add lret xor (bad) mov pop inc push pop outsl jns push inc add cmpb inc in add cmp add subl ficomp and (bad) xor scas or push push push fwait mov imul add sub orl xchg sbb ficoml jnp iret jl add xchg push cld sub pop nop dec mov jo push add (bad) jo xor push out sub sbb adc pop push packuswb sbb imul test or out push push scas xlat andb jmp ljmp mov mov std sahf inc xchg and sbb sub mov mov inc out adc rcll jo xchg (bad) jnp lock add mov outsl int3 mov or pop push jne js xor pop adc in jle mov call cltd inc pop imul xlat ja sarb (bad) xor int3 push add cmp xchg dec cs lahf xchg fsubrs mov dec pushf fistl pop jl push sub rolb sahf xchg js add mov fist inc pushf jb jmp aam (bad) lret mov xor test sub sbb push dec cmp mov cmpsb inc iret add mov mov fucomp cld xlat insl lods adc enter dec gs ljmp push lahf inc xor push dec js sub leave sub gs gs mov jmp xor cmpsb (bad) stc or out and mov sbb das aam out mov cmp xor pop daa notl imul je and or mov or inc jmp rcll test jne sub das stos xor (bad) fwait (bad) xor xor in (bad) cltd cli ret lods movsb sti int les in ds divb insb jp or sub imul inc cmp popf push sbb data16 and movsb push sub ss sbb or js add xor pop add stos ftst sub (bad) or xor mov (bad) repnz mov sbb sarb pop mov push jge fist out sub xor jmp mov popf icebp test (bad) aas popf mov lods dec leave (bad) ffreep xchg pop sbb jg loopne incb pop inc and cmp imulb roll clc lret fwait or pop push xchg sub test popf and daa jns jmp in cmp dec mov pop mov lret or xor cmp push loop xor out (bad) fimull pusha das jmp cltd shrb popf pop popa pop (bad) stos sub add lock stos or cmc jnp adc and sti pop sub cli cmp xor je lds mov cltd loopne sub xchg pop std jmp movsl stos (bad) lods push dec jp mov and sbb movsl leave push sbbl or ds xchg test rcrl sub aad out js mov fldenv dec lods fcom popa inc out or cmp push lcall dec mov jbe or (bad) out or das adc (bad) mov fisub xchg pop add xchg cmc jg out and inc xor cld adc iret mov jno dec or stc and xor outsb jo xchg cmpsb mov popf jecxz movsl mov and (bad) mov xchg and inc das les jge fldz sub int movsl clc ret lods mov xor stc pop in ds mov (bad) xor in ret jnp mov pop mov imull out jbe or sbb ss xchg mov sub jecxz cmpsb hlt pop mov jmp outsb mov add push adc insb scas and xchg (bad) ljmp pop add out mov adc fs add ret loope jecxz,pt cmp push mov int3 popa add (bad) sub lock and scas fcmovbe imul sub test in daa add icebp popa push add dec (bad) fnstsw insb add leave and push gs bound int3 adc or adc push dec out bound insl xchg jnp das mov pop lret pop (bad) popf ja int3 lock sub and into push lcall das xor fcomi push repnz mov sarb popf cmp leave jecxz push daa lahf enter sub mov sub inc ret mov insl rorb mov jecxz jle xlat (bad) fmul data16 repnz dec xchg xchg mov mov pop sub xchg sbb aas cwtl mov repz mov push push mov jns test mov scas data16 xchg gs aam rolb add cli adc cld inc in aam clc dec neg mov add and or ret cmc inc push pop sub dec sub add or sti outsb dec jge lahf pop xchg mov ljmp xchg xlat leave push jnp xchg stos fstpl in out mov mov (bad) mov jbe or add xor leave mov and call mov rorl xchg xor xlat inc arpl pop inc xchg sub rorb xchg jae repnz mov fnstenv mov mov mov mov xlat mov mov out xchg jecxz nop mov cmp or jbe adc sbb ret mov xor fs dec xchg xchg jbe div icebp lret pop out or lods and (bad) jnp cli cs pop lahf adc std sub fdivrp movsl mov out es mov inc xchg test scas out mov dec scas arpl mov or gs xchg sti (bad) (bad) lret jmp out pop xor sbb fadds adc mov adc add stos bound push or mov cli and jmp xchg and pop cmp inc or or aas mov sti mov leave ret or outsb hlt cli xchg fcmovnbe inc loopne cli scas lret outsb dec mov mov push jl cmp je adc andl mov pop (bad) mov mov mov sub xchg enter cmp sub test icebp sub mov sub repnz addr16 icebp lods xchg mov lret dec pop jmp into jmp icebp mov xlat bound fist in mov and jmp out fcmovb sub cmp addr16 inc out mov (bad) idivl or or cmpsl pop mov inc push jle icebp jb loope jno dec mov leave and pop xchg aas int3 fld test data16 mov shll sub mov inc lods push ret jae cmpsl pop js dec sbb outsb stos mov stc into inc pop shl adc add movaps pop mov xor add sti sub sar mov (bad) pop inc loope jle idivl and (bad) xlat mov mov mov ror cmp mov xchg sub adc cli mov xor fistl dec inc cmp pusha mov pop cmp jo dec add in push dec incb sub arpl aam mov (bad) mov fcomps sub (bad) fnsave pushf (bad) cmpsl xor mov sub mov push repz (bad) and xor jg xchg or stc shl negl lret add mov xor or fildll cwtl cmp dec je sub jns and out lcall shrl rorl xchg add pop pop pop and xlat out lret sbb mov sub cmp mov xchg stc fsubrl or jnp popf jbe sbb adc sbb call mov outsb lock into popf lds xchg add mov xchg cli les pushf mov inc and cmp or or into loop push fucom insl adc push inc push (bad) das add popa nop sub pop sub lret push ja add mov mov lret rcrl mov orl mov dec movsb stc push (bad) aaa (bad) cmp xchg imul sub and jb adc fwait in push push mov fwait push add push cwtl out ja xchg imul ret pop add gs lret or pusha ret rorb or or push je idivl lret icebp jp adc repz fisttp inc ret enter fcomps xorl add pop add not fwait add out (bad) push pop mov pop mov ljmp loop aas xor in cmp pusha jb jl dec incl add pop push push jg sbb fldt pop mov push push mov pop mov pop scas dec in add data16 sbb ds pop lds or data16 jmp mov shr addl nop sub mov jmp sub pop add mov lret pop push mov pop add cld xor jg and cmp dec (bad) mov jmp dec ja inc or outsb mov xchg adc lret inc adc sti pop dec pop adcb nop mov sbb out in cmp add cmp or sub mov lret mov orb push jle pop (bad) lret sub movsb add dec into int3 cwtl xlat mul (bad) adc enter sbb push adc adc out sub out lock mov pop pop test test faddl sub jg push insb repnz popf mov loop mov push stos rcrb movsb mov imul stc rclb addl int3 sbb hlt leave scas roll push or add mov pusha repnz sti cwtl push icebp mov cmp sbb int3 and jns xchg decb test and add mov dec ret xchg push dec ret pop lds mov imul inc mov adc out roll out fadds (bad) jge inc iret xor loop std ror pop neg ljmp repnz mov imul cs outsb xor mov jbe lods das adc dec iret out sub and adc xor or int3 js pop push cmpsb adc sub sti idivb and add add mov pop mov pop icebp cmpsl ds sub xor pop cld iret sub mov in lods sub push sar xlat mov mov push std insb fidiv sub das notl pop pop roll repnz ret sub into sub sub popf fnsave cmpsl shrl mov loope xor popf (bad) imul stos gs out sub rcll lock xchg mov pop jg icebp pop aas cmc in dec add xlat gs repz add mov mov pop mov repz stc dec add xor push adc roll mov and cs stos push lock and movsl cmc insb inc jle mov mov xor push mov je icebp stos cld das movsl mov jns imul fstl pop fild jae pop icebp and lock stos (bad) xor jb mov pop mov in pop rcr call add mov jg mull jnp mov lock in adc ljmp divl leave je daa mov mov fisub add (bad) pop pop insb jp (bad) dec mov loope fsub push jne sbb lods push sbb pop lea pop (bad) xor push ljmp dec daa fidivr mov push cmp sbb int3 or mov and cwtl fldz dec and pop pop or dec pop mov cmpl or and fisubr sub mov and (bad) mov (bad) nop out push push add xor sti sub out sub enter mov add sbb adc and mov pusha push jnp and push add lcall adc push lcall lret mov rorl outsb int inc mov mov jno dec test push mov cmp shll sti inc xchg pop cld inc push jl insl pop sub or or (bad) (bad) inc imul shll mov testb das sub adc mov pop (bad) mov insb push or xlat pop scas add dec ljmp cld pop push dec push add xor sar rcll adc dec or or (bad) cmp repz cmp ret in repnz pop iret mov dec data16 jmp jg lods leave lcall sub mov fistpll cwtl push leave add jecxz or and ja les add mov adc rolb xchg mov shrl outsb data16 sbb (bad) sub (bad) into into ror sti movsb jmp aas stos push jg cmc inc (bad) sub into xchg jp cmp sbb (bad) and (bad) mov push ficom adc dec into mov xor xor sti loope ficom dec push sbb push xchg rcll scas repz add dec lods in leave (bad) je out mov mov push mov fstl add imul data16 out adc adc jmp fucomip and push jnp jl (bad) ficomp jmp push out mov or mov out loop shrl adc lret shrb dec mov dec dec jge bound mov inc mov xchg pusha lods xor xor jp (bad) das mov push arpl dec lea xor xor mov popa or pop xchg mov inc mov pop mov xchg gs fs mov stc das idiv mov icebp mull adc movsb cmp stos sub fstl mov and add cwtl mov (bad) xchg xor mov xor pop (bad) mov ja dec xchg and cmpsb fcomps add test xor mov insb imul mov dec out int3 movb insl add xlat mov inc loop,pt xchg mov add xchg (bad) xor mov out dec xor mov dec call and call scas negb mov jb sub and jecxz (bad) inc int and call out sub fcoml lods mov mov cmp test out lods dec nop in pop lods roll inc mov call xchg push ror xchg xchg mov cmp stc leave out (bad) imul pop xor jbe in jp dec (bad) loop mov jg mov push push push mov xchg mov xchg ret sub xchg (bad) cltd mov in cmp pop (bad) leave adc sub jmp dec (bad) cmc and in je pop stos sub int iret jle lds sti xor icebp inc dec push jbe mov lods or xlat cmp sub mov fstl sbb sti xchg cli cli jno sub test les lret sti cmpsb stc daa mov xor stc and jl dec out lret repnz daa pop lret inc ret ds lock ret in aad out aad mov or inc pop mov hlt add sub daa xor ja addr16 scas repnz lcall xchg (bad) push stc stos lret cld inc out push mov dec push loop push gs test pop mov gs ja fs (bad) jmp aam sub ja scas pop mov adc data16 in cmpsl pop cmp icebp in jle aaa jmp pop roll mov out and sub xchg and fwait das jmp imul das scas sub test sbb add or mov les adc cmpsl outsb xchg cli fdivl imul cmp xchg push push adc jb fidivrl jl (bad) jne mov std ret lcall lret scas xchg pop dec cwtl mov and out inc daa xor insb jmp lret into stc inc call movsb jae mov dec out and scas cld inc inc loop mov jecxz aaa das and insb xchg inc in popf pop aad out shrb addl sub (bad) lret mov test lock lods or mov leave or cmp cmp sub sbb leave xor pop ja sub mov push xchg stos fbstp (bad) jne xchg gs add fldt in stos lods sahf xlat test (bad) clc lock adc xor flds outsl ret (bad) sub jmp pop ret add loope xor xlat clc arpl mov int ret and fildll loop lahf mov dec add add pop inc mov add iret mov (bad) stc ret and test in xchg xor mov and daa (bad) imul leave sub fcompl sub mov mov inc inc (bad) aas sub dec mov sti and mov cmp (bad) xchg sbbb add sub pop nop xchg mov fistpl add sbb xor jns inc add xchg jmp lds xlat cli fmuls xchg push push pop or sub loope inc movzbl outsb in mov xchg stos cmp gs call dec in jp scas adc push fdivrs (bad) sub pop sub push xor mov pop cmp sub das push jno xor dec (bad) pushl xor pop xchg into pop into into repnz sub mov inc and dec add sub test imul jecxz xchg into es add out sub dec push lahf mov push (bad) aas repnz aas mov add lods fdivrl and xchg popf jmp (bad) (bad) xor xor add jbe or dec add jne sub pop xchg sahf adc xor arpl dec out fs movsb lods jge out jbe dec jmp inc lock and (bad) jnp lods and jecxz icebp xchg aad sbb lock dec cwtl loopne or pushf jmp ja add sub movsb mov cmp shrl push jle and cli xchg jmp sub adc xchg stos lock xchg jnp cmpsl push stc mov pop add cmc ds ds adc sbb pusha mov adc mov dec call xchg or jmp mov movsl imul cltd pop (bad) sub sub sub hlt js xchg jg scas pop mov push fcompl fsts ss cmp test neg add fisttp mov fist clc add das or repz shrb cmc xor pop adc data16 push and xor xchg xchg mull cmp daa add ficom cs sbb stos lret insb dec aam (bad) mov loope cmp adc in xchg (bad) ljmp ret or popa (bad) mov dec mov add dec pop mov out sbb icebp int jp cld loop mov jle rorb xor or int3 pop add scas cltd xor mov dec insb dec call or stc out sub sub jb sub data16 mov and or mov cmp dec cwtl sti loop push subl clc js xor add and jg ret xchg or inc gs add pop fldenv inc (bad) mov push push scas mov in and arpl aas loop dec stos mov mov sti adc xor sar sarb mov and push dec pop mov mov xlat sbb rcll fisttp fwait xchg xchg gs cmp lret and adc xchg ds jl push (bad) mov sub lahf int3 ds inc jg lret mov xor cmc xchg les jg,pn dec inc mov adc lock xchg jo xlat (bad) push aad out mov fs cli fs jmp xchg es add pop adc aas lods mov adc sub add scas scas je leave test xlat fwait pop pop or pushf mull mov test pop scas sub adc sbb cmp sub xor mov mov mov or add jne or (bad) mov add movsb (bad) xor mov push shr cmp xor and fistpll rolb sub dec arpl (bad) loop jno imul lods loop adc sub lahf int3 inc add ss sub or push cmp mov xor pop cmp adc sbb (bad) and pop pop lods or fsubs fsts mov mov pop test mov push leave jl daa inc dec lods push push outsb sub ret lds clc dec shlb movzbl popf jl push dec js cld jne leave xor mov adc test mov add adc out pop jmp sub sub inc and adc push ret fwait sub inc add xlat add sub push lds fiadd dec iret lcall test add in jmp dec lea push push adc stos cmpsb out or mov call push ror jne daa push mov dec cmp ljmp pop shrl adc inc adc ret (bad) cmp sbb enter test (bad) not ret inc aaa mov ljmp das mov add push in and test out inc xchg test pushf cmp out sub mov ds ja test (bad) ret jg gs das xchg push mov xchg sahf xor repz jne mov movsb cs cmp mov cmp jo sar addr16 lret push cmpsb mov adc fsubs add cs je mov daa cmp jb fsubr fs shrb daa mov xchg mov mov pop jo or mov push insb ret pop out call sahf out outsb (bad) roll movsl fucom inc mov enter mov mov sbb push stos dec mov lret push mov mov pusha imulb dec inc (bad) (bad) pushf sbb sub ljmp sub das in xchg lahf jno xchg lret xchg xor xor add or and mov gs inc add adc in push and repnz sub mov sbb adc inc roll dec (bad) (bad) out xor stos and les sub sub ret jp pop add mov sub (bad) incl fwait xor shl fist dec dec or stc add sarl icebp fidivrl sub outsb mov int3 and push lods aaa and dec xor push (bad) out out dec stc sbb lds mov int3 dec out scas je push int3 out lret js leave mov repz mov mov xchg inc lahf lds and jle gs mov push scas (bad) in mov sub adc pushl pop pushf lea xor cmp sub cmp lret jmp mov adc dec jle aas leave dec cmp or dec imul aas (bad) mov (bad) mov int3 clc into cmpsb call xor sub jmp pop pop data16 adc ja popa xor jge pushf jle fist pop sahf ret mov pop or inc or sub (bad) mov stc imul cmp jno rorl ret test mov sub push sub inc mov roll jg push testb movsb mov add adc ss (bad) testb std int3 sbb xor out jb aas push fsqrt cmpsl data16 xchg sarb mov dec fs fidivl jnp push mov lret jmp ret mov sti adc mov mov rep dec stos xor ret push pop lock add mov shr cmpsb pop shr dec rol cmp loope out ds pushf ljmp adc and xchg popa pop xor inc outsl xchg pop sbb iret mov mov push inc imul cmp mov sub insb sub std add mov sub xlat mov and wbinvd sub push or js daa mov pop aad and fiadd jmp add leave hlt jle lock fs mov pop xor mov aas inc adc and dec xchg add mov jmp dec mov sub sti mov pop (bad) xor test lods jae pop std mov out dec mov popa shll mov pusha xchg out ljmp imul pusha imul nop lds clc add inc xchg cmpsb leave and jns sub or repnz fs and xchg push fisubr pop mov pop out mov in mov push or in fldenv mov and or and sub inc dec and sbb call cltd pop add add mov imul movsb daa xchg aad scas push mov xchg test xor cld jne inc adc adc xor ja jge pop sub sbb or mov pop sub ja jg pop std mov sub and lret xchg in jb (bad) pusha mov (bad) icebp imul xor and mov out sub sbb or push lds mov movsl mov aas and and (bad) mov pop stos andb cld and dec bound xchg mov adc mov xlat mov and sub dec xchg loop pop xor stos push enter sbb (bad) mov adc fxch cs js call sub out sbb call pop rolb sub cmc loopne push cmp loop ja xlat mov mov stos mov xlat mov and aad lea inc lods jo dec and (bad) xor pop int3 adc and pusha mov xor sub push jns leave (bad) cmp lret sub sub (bad) cld jp sub and sub stc stc xchg sahf (bad) push into jecxz js cmp mov popfw dec push or (bad) jecxz ja mov sub (bad) insl dec mov (bad) mov xor sarl movsb xor das lods daa mov jbe loop notl cmc dec push lahf push xor adc or sbb sarb inc sub xor stos ja lock and xchg cmc (bad) mul fisubr sub stc sbb mov or xor add jmp cmp mov daa push jmp cmp mov in and lods (bad) movsb push push call hlt pop repz mov inc aas sub sti sub cmp js (bad) aaa adc (bad) jge inc pop sub mov pop xchg sub xor mov sbb add mov (bad) adc fistl test out popf pop add push lret test or std cli daa pop jge lahf mov lahf pop and push js lds push mov xchg insb out add fucomp add rep sbb xor pop aaa sarl mov xor xchg adc out lret mov into inc sub jne push pop inc cmp fldt xchg or stos jo xor decl aaa popf rorb gs add bound dec dec outsb dec push pop mov int3 stos mov cmp and fdivrs ss jecxz xor mov mov call sub mov sub notb icebp stos daa mov bound ljmp sub or adc enter pop add adc lods ret das icebp fstpl ret jle xor mov push mov ljmp push xor ret inc dec pop rcrb fs mov fdivs cwtl or stos xor scas mov les cmp cwtl sub icebp imul loop stc fnsave shrb cmp lock outsb mov mov outsl mov mov pop orl mov call ror icebp jmp movsb into into mov mov jge adc stos popf arpl mov inc stos jnp sbb sbb or rorb out jns inc sbb loop sahf and in mov dec cmpsb inc dec (bad) negl mov cmp mov (bad) pop pop testb ja icebp inc ror enter jl add push mov pop loopne and pop mov repnz xor in mov cwtl adc leave mov call pop mov xchg out pop add cmp inc scas dec xchg test enter movsb push mov lret add orl sub das xor inc push scas sti ja rorb push and mov fbstp jp jp mov in stos mov (bad) jmp popf cld pushf push and mov repz dec sbb insb mov inc sub out lret or fldenv daa jge adc and add xor dec add and test lds rorb imulb mov xor popa (bad) lock dec cmp daa divb xchg or and or (bad) imull mov rcr dec adc cltd and add in (bad) rolb sbb out pop adc test ja insl loope jge sbb jecxz sub adc sbb sub ss lds or ds add das mov outsb lods pop fisubr pusha pushf push xor shrl push jbe push rcrl sbb xchg cmp mov daa inc icebp stos mov stos out daa pop inc adc rcll push and or mov pop or int3 mov sub add ret mov lret mov inc adc dec (bad) xor ljmp ret push scas push sub push test cmp idiv sub dec ljmp adc jnp add add inc mov test fdivrp xor fchs sub lods push inc sub mov gs mov cwtl or pop mov gs cmpsl test aam add xor add icebp and test cltd dec add (bad) mov xchg cmc cmp sbb icebp scas or roll mov mov and jp mov divb leave jmp jno inc loope int and cli push stos and pop mov cmp dec orl ds xchg out leave mov xor out mov pop icebp inc jnp sub out xlat (bad) jne stos lea push push movsb lahf dec xchg jne mov test jno cmc roll mov (bad) mov xchg mov and jl imul popf ljmp ror jno inc push fimul jl mov ret push jle or fistpll out insl shrb mov aas mov and and jmp inc movsl fs sbb (bad) jno fidivl div or sub dec mov jne sub lret notb jle pop into sub mov fcmovne push push push lock hlt psubb jmp mov pop sbb mov mov add inc jnp xchg icebp addl repnz push mov movsl dec inc push adc and or xor mov jo cs dec mov pop hlt notb jecxz std mov mov div push sbb sub rorb or test mov cli iret mov fnop jecxz dec (bad) lods bound dec out scas je cli xor stc cli popf xchg into scas mov mov or jbe mov xchg inc cmpsl push rorl or gs lds dec test xchg cmp adc fsubrl scas mov inc outsb push sbb ret icebp cmp sbb sub leave xor out mov (bad) ja lret push hlt inc stos sub push loop and xchg ret sbb mov xchg mov pop push test mov cmp and or repz decl and lods testl popa push cmp adc or push sub jmp sub addr16 (bad) pop xor push scas pop out rcll (bad) and mov inc mov cmc mov jle or popa and ret sub cmpsb cmc add xor mov imull sub (bad) mov and mov dec mov leave mov or pop pop int loope sub cmp mov mov xchg in add mov mov cld jo shll add or push stc jmp xchg cmp repz insl mov sub ret ja or add dec sub jge xchg add call mov mov jno imul sbb xlat dec test lret ret das or pop fcmovnb (bad) jecxz cmp push mov shll rcrb negb in movsl mov les pop repnz daa adc inc pop mov jp (bad) jb mov iret mov dec push test dec add fbld or mov xchg dec outsb cmpsl mov gs das in das jg sti sarl add and js out mov (bad) pop (bad) lret push mov lret shr fwait and jecxz push mov js popf jle in mov fbstp push je sub jb leave or (bad) jg mov test cmp sub out or jmp clc pop test fnstcw xlat (bad) int xchg mov mov mov out jnp ret inc push add push ja sub or mov cmp (bad) dec cli inc ss mov jge daa daa jg cmc sub mov mov shrl gs sub icebp ds add sub sub (bad) cs add or fs jp neg cwtl bound cmc test push sub or pop aad xchg iret into lret rol add mov es decl add bound mov bound cmp mov sub dec or mov mov inc add or scas push repnz jmp lret ret pop ficom add jnp cmpsl xlat lcall gs sub xchg repnz mov and xor and push fsubp loopne jb jne jle imul loop xchg mov adc movsl jecxz or ret add mov pop cwtl divb repz xor push decb pop sub pop and in xchg jae add mov or fstps xchg lret jecxz inc subl clc and xor and dec andb sbb mov sub in mov xor clc or fstpl mov ljmp push fs stos sub shr add (bad) mov jnp sub popa sub sub xchg (bad) int3 jmp (bad) jno cmpsl inc sahf push sbb fs xor enter cmp movsl pop out ja std inc xchg negb xchg (bad) mov or cmp mov lahf mov push adc mov call or cmp jne orl cmc out push movzbl jae xor cmpsb jecxz lods lret test into cli jne mov sub lock mov hlt repnz rcll inc xor jp jno repz add mov (bad) push pushf mov mov dec and (bad) scas data16 cltd sub inc shrl sti adc (bad) xor outsb mov aaa ja sbb (bad) adc push mov xor (bad) xor nop sahf dec scas cmp sub dec jno add dec push cs (bad) ja jno add ds xchg push inc bound into mov xor mov and mov clc rolb xor imul leave sub jbe bound sub sub cmpsl pop inc cmp or jo test cmp mov aas pop pop and adc repnz cld jge sub mov mov jl imul movsb insl adc stos mov cs sahf jl pop sub lea mov hlt cmp dec icebp jmp mov mov clc aad pushf sarb outsb xor repnz mov adc xor les sub outsl lret fdivr std add das mov mov fdivl or mov push jns imul stos outsl roll sahf add stc xchg or rol dec or lock sub (bad) mov cli fidiv (bad) sub fdivp sub push ret (bad) or or xor in push movsl (bad) fnstcw dec mov sub mov mov add add or cli sbb js nop jmp xor cmp push sbb xlat cmp loope add and (bad) mov das and add push aam pop jno scas mov pop int3 repz and or sub jge jmp sub mov (bad) repnz popf xchg ljmp stos dec ja or mov pop cld cmp int js movsb fdivs cmp imulb pop rcl and call pushfw xor jl jmp add cltd ja mov adc dec in popf roll push lods push or xor divb sub ss pusha dec lret xlat pop and jecxz pop sbb jns imul mov popf inc das lea icebp inc jl movsb ret jbe jmp (bad) and (bad) insl (bad) cs je pop xor or pop (bad) loopne sbb fldt add sub or sub insl loope sbbb sub outsl sbb mov call sub push aas add shl mov notl lret add lods xor popa or push movsl into pop mov xchg idivb in pushf pop ljmp div pop in mov lock mov mov mov jmp add or jmp or jb out aas or test and (bad) stos mov das xor fidivl repz repz mov push push cmpsl (bad) not sub xchg mov fcoml idivl adc mov in fisttp jns mov clc or push sti mov lret jle and icebp ljmp pop dec mov scas cltd loope bound incb and data16 jns cmpsl test cmp mov push push mov hlt pop enter pop stc popf dec sbb and test call fs push pushf and ret lret push pop int sub (bad) mov daa xor ret jg (bad) sar push (bad) xor add popa cld jmp outsl sub jg stos push sarb inc mov es out mov inc and sbb dec mov fs cwtl or and leave sbb sbb xchg cmc xchg sbb sahf pop fisubrl aaa pushf incb cmc and sub addr16 popf fdivrs mov pop insb pop add push mov sahf lock mov mov (bad) lahf cld cli pop call or loopne pop mov xchg daa loop fldl and (bad) fsts lods xchg dec nop cmpsl xor call (bad) icebp and (bad) repz clc add and call and pop pusha sbb and ljmp fmuls mov pop in out loop mov xlat xchg add xor cli imul cli test fsubrs inc and cld bound (bad) mov dec push (bad) or iret cmc inc or or push cltd (bad) (bad) jns cmpsl jge mov dec dec mov or iret xchg push or pop out arpl mov (bad) mov jmp mov js rolb lahf sbb pop jl pop or hlt add mov call xchg aad pop dec push pop divb mov or aam pop jl imul and add test mov in cmp les add add cmp sub loopne sub popa ds sbb ret out gs add xor jns cmpsl jo loope mov (bad) pop lret mov cmp out in add sarb and mov insb imul sahf push push ja setg and (bad) int3 or scas data16 push pushl pop outsb ja ss mov jmp xchg mov daa pop jle imul mov xor lret sub frstor or sar xor leave cmp sub add mull pop imul inc dec lods (bad) sub ja and sub cs xorl je sub cwtl mov popa mov in out xor (bad) pop mov iret mov fcompl jbe pop pop xor xchg push mov in xchg push or div repz call mov cmpsl pop dec adcb add mov pop fnop inc add in cmc mov dec fstps (bad) mov cs fs mov aad subl (bad) fisub mov (bad) xor cmp mov inc jbe std pop lret add ror sub xchg out repnz sub loop lcall ja cs xor mov dec stos sbb sbb mov inc add (bad) nop data16 hlt or into add and pushf sub push xor fisub popf xchg out push mov test mov push in inc sbb mov mov mov pop decb iret pop cltd mov shlb hlt movsl xor lret push inc adc leave fnstsw movsl mov pop dec cmovg sti fdivl pop xor stc insb xchg mov xchg out mov repz pop push dec sahf mov mov lcall xlat nop and sub mov scas repnz xchg lret call lods loope mov mov mov fsts fistpll popf xchg jmp push xor inc sub movsl mov pop cli arpl fldenv adc (bad) cs mov adc movsb les in inc movsl testb pop mov sub or (bad) in (bad) dec popl rcl out out push mov mov or cmp cmc jmp pop or negl cmp lahf push jo ret or movsl adc mov inc outsb sub dec sub ljmp push xor cld test cmp pop insb dec and and pop or fcoms jmp add mov and popa out sub je arpl sti ret addr16 adc mov inc cmpl mov sub mov (bad) xor pop addr16 adc xor pop loop ja test test or or je cltd pusha das ret jno les scas (bad) dec pop inc shr mov xchg wrmsr sub int3 mov and jno (bad) (bad) call test movsb xor jmp jb scas movsl jg out jp xchg pop shl sub push loope mov ja sub add mov xchg (bad) stos fstps or daa cmp and ret mov mov shlb mov cmp ds dec jns lcall add out stos lret dec push jge dec xorb ret cltd (bad) lret jmp sub fsubl inc xchg cmp cmp or mov aad and stos popa andb inc lods call jmp lret (bad) ljmp sub ret outsl mov pop xor or scas jae and and cmpsl fbstp scas jecxz pop jbe in (bad) cmp out and imul xchg and cmpsb sub sbb xchg xchg cli and or and adc pop add and push cmp push cmp jecxz jmp loope (bad) stc sbb ljmp mov ret sub int3 xlat lahf pop xchg jne cmp xor xor pop addr16 call cmp dec mov ret sti imul push add xchg jmp add push movb cmc cmp or arpl lea jnp imul lret sbb xor mov es test xchg in shl roll lahf and dec sub jle push int3 cs jns movsl push adc push push mov pop jmp mov push push fnop cli mov jae mov or xlat push pop mov sti psubq divl int int3 das jae aad in pop mov dec add (bad) aas sti add jmp push out xor add out int3 out push sub pop dec das ret or pop xor xor xchg or lods ret in into mov push dec mov or push adcb mov add xor mov repz (bad) jae add and mov pop pop (bad) cmp inc shlb pop add push pop mov mov sub lock sub push sub andl add fsubrs cmc stos test xchg jg add mov (bad) jge add pop neg sub add mov pop sbb pop rcrb pop rclb popf sub and push push cmp fidiv pop add mov hlt add pop add push mov jno int rorl dec nop pop pop mov jo cwtl cmp xchg sub ja pusha fidivr das pop dec add out push or ljmp rcll jg not and icebp inc icebp js test pop sub cli sub push jae dec loop pop sbb mulb cmpl rolb lcall cld pop movsb cld jb,pn push mov out inc dec movsl xlat xor cmpsb pop mov aas xor cmc in out xchg fisubr or mov jg mov cmp popf jb pop (bad) xchg jmp das loope push adc sbb adc pop push mov add ljmp push mov in xchg shl hlt or enter movsl cwtl mov fldenv inc and cli sub dec fnsave (bad) and add aam imul xchg or repnz into mov mov fwait bound jge ja inc (bad) xor mov out cmp or nop loop dec jp cmpsl in or and mov insb cmp xchg pop in loope mov push mov lea int bound ret mov in enter popf fimul xchg test bound jae push and sub xchg jne lds sub jmp mov cmp lods xor fcomps cltd je push add call leave ret mov jle mov daa loop hlt mov and pop ljmp loop adc mov jle leave pop (bad) in xlat js mov mov and jle (bad) (bad) ss fsubl leave rorb leave push ss jns lods inc icebp or js divl dec lods push adc pop add idivl mov fstl lods mov cmp and bound sarl mov and and sub push pushf mov push je icebp mov imulb stos sub cmp (bad) mov pop jle xchg add or dec lods adc and or int das xor out call out sub mov fildll sub or dec adc imulb out lock inc rorl (bad) fld1 or sub (bad) daa (bad) cmc cmp inc pop int3 mov and fisub mov repz divb push fldpi gs scas sub cld xchg lret push push dec into mov jmp out and pop iret jmp (bad) mov sub test jns std lods adc adc (bad) pop mov add fisub (bad) ljmp mov add lret jns lret xor dec adc cld pop out data16 (bad) sti inc sub es sub jecxz ljmp cltd push fsts or pop decb ror add int3 loop mov std jecxz bound ds cmp jmp push adc out mov xchg dec push enter outsl adc in fs ret xor jmp pop rcll sub dec lret dec add movsb gs push (bad) clc jbe loop fdivs cmpsl sub sbb jp or pop fdivs mov rolb or rorb jns mov xor jns cmc out inc xor fdivrs jne scas or jl jb jns mov rorl or movsb (bad) inc (bad) cmp cltd test outsb pop pushl bound not mov dec cltd stc mov jmp mov int3 pop add repz insb mov in xor ret pop movsb lods mov in or (bad) iret xor lret and pop add hlt es jg orl icebp mov add dec or loope js aad lahf xlat sbb or loopne jns (bad) inc push mov in lahf mov repnz rorb and add mov xor cmpsb sbb xor mov dec in fimul dec mov (bad) jbe xchg leave and ljmp into mov mov xchg js push imul in add dec out cwtl pop xor (bad) adc and xor test jecxz inc iret out inc and roll lret add sbb roll stos dec mov lcall push push (bad) push xlat and stc imul cmp mov mov bound negb jae xchg popl out jb add lea inc push rorb mov sub sub (bad) mov mov or imul and fsub mov inc dec xlat int3 or or retw into aam imul popa add pop jbe fs cmpb repz mov add pop add div addb xor mov js sub jns pop mov jno imul xchg loope (bad) cltd cmpsl sub out mov imul ds push sahf pop enter mov (bad) xor cli pop pop pop inc jg (bad) mov aad jnp (bad) sti (bad) mov sbb pop pop pop sarl (bad) adc mov gs lods lret mov mov pop mov xchg divl mov pop mov push aas cs imul xchg push jne mov add lods pop adc pop mov lret add repz mov dec or sub (bad) stos (bad) (bad) call vmovshdup mov sahf lret xor jmp in dec xlat cli fdivrs dec sbb pop cmp bound iret pop ror sbb pop pop (bad) push xor int dec xchg scas out cli jecxz xchg sub xor mov xchg in add push fcmove leave mul adc outsl mov lea adc rclb into adc xorl jno push mov pop lds stc mov out sub pop mov hlt pop out xchg dec pop adc mov add cmp das mov adc in adc into std inc mov movsb mov xor call add dec pop ljmp mov cli sub add leave jno xchg xor sub pop sbb pop ret aam pop cmpsl out pop stos jne out sub jbe add inc sub loope add or pop insb push aad dec pop sub fnsave cmp iret test mov mov mov (bad) adc mov mov adc lahf push enter sub lods das loopne mov and into mov out mov xchg or fsts in cmpsl inc fisttpl fmull imul mov cli jecxz pop (bad) je cld cmpsl pop rcrl lret pop icebp divb out das clc adc into and pop jecxz cmpb adc lret pop mov test cmpsl test stos mov aad shrb jne jge imul outsb aad xchg call jno or fs inc sarl xor stos sub jmp ret subl ss adc cmp dec fs mov int3 mov ret push rcrl jmp dec jp aad je xor jmp pushl and popl pop add scas ffree fsubs ds cltd stos jo and sub push mov jmp in (bad) dec add mov cwtl rclb dec clc mov ds sub ds dec lahf dec xor add xor jnp fnstcw add sbb insb sub dec sahf adc pop cld or out xor fidivr mov mov pop cld (bad) or xchg ja in (bad) leave imul das xchg gs movsb test stos sub sbb sti jno sub imulb push sarb push or mov mov sbb sub inc jno add and adc adc mov xor pop jbe push sub cltd xchg outsw das and adc loop movsb or add jge jb sbb aam repnz dec movsb push xchg mov xchg xor ficom js sarb push jno add rdtsc lock dec and sub fcmovnu daa mov adc jae cmpsl (bad) mulb dec les stc test into fist (bad) mov mov pop fmull aas mov sub xlat icebp into popa mov cmp jmp pusha pusha sbb (bad) jae pop mov add testl dec jp fild (bad) decl cmp mov (bad) and xchg outsb xchg ljmp sbb daa gs inc add push mov out jmp or out test movsl add sub mov dec adc xchg aam mov jb adc xchg fdivl sar mov inc scas cmp xor or mov bound cmovo jecxz add and ficomp push lods arpl das or (bad) push ja loope cmp scas insb rcrl and icebp lret cmp sbb lret mov xchg outsb lret push stc lods adc push int out je jmp push mov xor je mov add movsb jmp sbb dec adc pop stos lret in mov xor mov ja loope,pn lahf dec ds lcall inc sub xor mov dec mov jne out out sub dec mov fucom cmp enter cmpsl scas or cld das cmp push addr16 sbb test leave inc mov push int3 xchg or xor test mov dec push dec insb xor jmp nop out popf std adc cmp call lods or jb lcall stos xlat mov pop scas push pop repnz fildll inc movsb cld into rol aaa lret sub imul xchg test das jns daa shrl fcompl ret jae push xchg mov jbe mov lea cltd or xor push xor xor js decl (bad) or lds and dec bound mov ja ret or sbb or in pmulhuw jecxz das stc push cmp pop out jg in inc (bad) lahf fstps cli test rcrb nop add push int and sub mov push sub (bad) dec mov push mov xor mov scas lock out jmp (bad) jmp sub sti push ret dec aad pushf repnz pop jne std and mov or out mov dec add fnstsw pop stc ds je jg dec shrl loopne repz and dec (bad) repnz sarb and nop push inc gs leave fstps stc sub shrl jno imul fidivr leave sbb mov dec mov icebp mov lahf adc and mov movsb mov dec lea pop inc insl fs aad ss sti xchg loope mov jmp mov outsl push cmp mov jl sbb xchg push cmp pop movsl mov mov xchg push fnsave cmpsl lcall not daa out or negl dec or cmp lret pop icebp shrb movsl negb or scas out (bad) repnz pop lock or repnz not inc nop jnp enter call cld and xor mov shrl fwait in das xchg push mov xor dec dec ret xchg ficoml mov adc shlb repz or stc pop dec inc lret lahf fidivrl jle sub xchg (bad) jne jmp pop cmp not add mov sub dec icebp sarb xchg lea xor sub lret pop movsb pop xlat (bad) repz fcmove lret aad dec inc ret xchg jmp sbb mov dec iret in icebp xor ljmp lret jnp or and out xor cmp and scas inc add ret mov xor pop or mov mov add pop fnstsw sbb popa sub rorb dec or dec (bad) test xor repz push pop out test dec daa loopne aad lret sub xor xor arpl (bad) sub (bad) pop sbb enter dec (bad) mov lea sbb or movsl notb (bad) cli lea hlt cwtl and jo popf stc add mov les mov ja hlt imull test mov xchg adcl add lcall mov sub je push out sti mov ret out sub and ljmp push or fs insl and and sarb xchg clc (bad) or pop mov xor cmpsb daa xchg (bad) and mov mov je bnd push bound jg,pt es sbb rcll les push add ret xchg adc mov add jecxz fst mov and test mov fs imulb or (bad) flds sub pop xor xlat adc dec mov (bad) jne mov xor mov es imul xlat adc fsts scas push jmp push dec es pop int3 xor (bad) imull je ds mov mov or (bad) ja xor adc xchg aam xchg movsl scas pusha (bad) sub mov lret repz test ja push push push rcl push mov mov sbb idivb out mov popf jnp xchg mov or xor scas call stc jmp test hlt jmp pop mov push jb cmc imul ficompl sbb bound sbb xor xor inc dec pop xor loop xchg test push ljmp fidivl xor fs push frndint iret mov xor mov mov dec nop mov mov xor hlt fsubrs rorl dec fild ret cltd push std inc pop cmc repz (bad) or pop push mov inc jne push adc mov mull scas adcl and call incb and sbbb scas inc inc rcrb pop push push mov pop mov in (bad) (bad) or sti lock in push sbb add push sarb mov (bad) incb fld mov add test inc add mov pop jge fcomi jns pop pop add add push addb jl add not push push mov int3 cmp push stos mov andb xchg lock inc dec call inc int3 mov arpl bound jg xor add mov inc fsts jns lods jbe cmc add push add clc in jnp incl pushl xchg add pop inc incl shl aas xchg or push hlt sub pop nop xchg or jg jo push ljmp cltd mov ja arpl lea imul daa add push and cli inc xchg mov andl xor and cmp out fimul jp pop pop fcmove cli dec sbb outsl adc inc ret ror stos sahf push pop pop cld int3 fisub mov insb sub inc push divb fisubrl jmp or jg in pop nop push or xor push mov jg sbb (bad) dec sub pusha fdivs movsl mov push mov pop mov sar (bad) mov sub jbe and cmpsb pop rcl rorb fs int jnp jle mov push xor and nop sub mov and pop pop jmp out cmp sbb push mov in pop inc inc or in jne cmpsb sbb lods popa adc and lea rorl arpl insb in add xor lods and dec pop mov out xor adc fisubl mov test sarb popf adc xor into sbb outsb notl mov dec lods xchg and lret xor cmc dec cmp lret lret push sub jp sub iret ja pop imul in mov and sub mov xor lahf push add inc fldcw daa jae pop jecxz sub xor xlat cld add cmp and (bad) cs rcr push sbb mov bound and add lds push ljmp jmp ljmp (bad) (bad) aas pop aad out and lret adc mov rcll jle xor push mov (bad) sti add sub popa je movsl push ret mov je and loop push in lcall pop out stos cmp mov and pop sti movsl sub push dec cli push das ds fcompl enter aaa (bad) adc mov popf xchg and neg vmaxpd push sbb les and or daa movsb pop mov sub add sbb cmp sub divl and inc loopne mov xor mov jmp xor repz lret out and inc add cmc cmp (bad) out hlt dec icebp push inc and xlat push mov stc sar pushf sub je das rcrl ret xchg (bad) jmp sub dec decb add lods jno out push aaa and es pop fldt mov sub mov and or (bad) int3 mov or clc imul les pop pop bound push hlt mov in or imul mov into sbbl inc aam adc sti je mov push mov nop (bad) xchg jbe pop insb sbb outsb int3 fistl lahf xchg mov cltd add loopne and xchg jns jg adc ret (bad) outsb lret std inc mov add lods pusha push hlt pop cld dec repnz pushl fist inc es ret cmp (bad) bound dec je pop inc lret cmp xchg dec loope mov push ljmp jl push pop pop test js dec gs loop sbb pushf das imul cmp cltd adc stos xor push fnsave cltd roll cmc and aaa mov adc xchg scas push out dec lret jmp inc mov stos xchg fist xchg mov outsl push adc enter repz add add xor gs mov (bad) lcall imul push fdivr repnz adc ljmp fmuls or test popa daa adc jle adc or lods jp xchg out or sbb xchg dec hlt cs pop cmpsl ja insl mov mov add enter and sub std jmp dec aas sub jmp mov out out xchg mov cwtl and xchg in test lds or push xor icebp sbb pop mov jmp lcall mov lret sub sbb outsb push pop test mov pop push jg out sub icebp push cmpb push mov inc das cmp out xor dec mov cmc std pop xchg lcall es stos iret jae sub xor (bad) mov pop jmp test lret sub scas (bad) js sub push ljmp mov int3 cmp sahf dec inc xor xchg enter inc repz add sbb cmp jb mov dec jb xor mov mov add pop cmp int3 loopne flds jg add repz inc add dec (bad) cmp pop out inc push mov out daa inc pop mov cltd in mov cli xlat add (bad) movsb lahf push xor mov jle leave sub jbe jmp mov push and dec mov add lods adc push stos out mov in das aad mov call (bad) cmp arpl add imul movb daa imul imul out inc aas lret (bad) pop rcll scas (bad) mov and pushf les fld sub (bad) adc aad mov xor pop xchg mov sub push cmp (bad) test xchg push ljmp cmp inc js movsb test rclb fimull pop cmp cmp sbb and imul lea and popf outsl dec ret das inc pop out mov pop push enter lret es add fdivs or aas xor pop push aam rclb fstl sbb jp lods cmp cmpsb jp stos cmc idivl push push mov mov lret jge shlb xchg mov cmp pop adc jne xchg (bad) arpl add ja stos add aas (bad) mov icebp pop add ret adc add xor cltd mov frstor gs adc dec addr16 sub or xchg sbb inc test out push push inc testl loope and das (bad) out loope cmp sarl or ret cmp std and cmp jecxz (bad) mov mov popa pop fnstenv cs ret icebp push cmpsl pushl sub pop scas (bad) negb sub mov adc (bad) mov popf sbb or pop jl push xchg dec push (bad) pop pop lods push sub std loopne push pop jmp add jns leave test pop mov pop into sub out inc mov dec fadd and xor mov dec cmc mov pop inc and cmp test add dec mov test aad jns or add add jp mov adc call mov xor lock cmp cmp xor pop dec jmp sahf xchg xor notl pushf clc lret adcb fisttp lret stos ja pop dec cmpl cmp cs popa js ret test stos int es sub repz mov sub (bad) mov sub in pop inc jp push jmp mov push je inc xchg bound int3 dec jmp mov nop sub fdivl lods xchg cmpsb sub repz xor out add in and bound mov daa iret cmc xchg jns sbb cli and xor or jo and mull (bad) push daa add notl push xchg daa adc lahf fcmovne imul jmp loop dec mov fisttp push push dec ret mov pop setno xor loope cmp sar xchg push in ljmp cltd punpcklwd xlat popf xor lcall and imul mov dec insb cmpsb lret daa out push xchg xchg stc jle mov lret and bound mov sub repz or jle add xchg and lret pop pop (bad) icebp movsb call and popf push mov sub imul out test (bad) mov dec idivl dec cwtl inc sbb sbb jmp mov ja in dec pop dec out dec sbb push inc out out scas cmp sub mov (bad) pop imull jmp lods fidivl add adc jle mov test mov or rcrl outsl mov sarb das pop mov mov mov xchg ds fnsave outsb cltd xchg sub int3 lcallw jmp add push popf pop mov and pushf (bad) pop int3 jns or jl jle call mov jp sub es push inc sub or mov loop cltd test std inc lds lret ss rcl jge inc mov and pop mov das lret in mov push bound lock mov jle mov scas pop (bad) dec stos xor ret fnsave stos jno mov fmuls cmp lahf negb sbb xor jmp mov dec dec mov xchg cmp icebp lret sub ret or push cmc notb adc and pop repnz dec movsl adc fldz fs mull sub xor fcmovnbe sbb mov insl or pushf add test xchg xchg inc and int3 stos and inc add sub jns sub ret test sub xchg lcall or jb aam cmp (bad) ljmp addr16 xchg dec pop lret loop sarl sub (bad) ljmp aas mov pop mov mov data16 cltd jge add fucomip or aad pop pop adc mov (bad) cmc cmp addr16 sub daa out pop add repz push adc mov xchg into out xor mov adc dec add adc jmp cmp add divb xor jp pop xchg mov push in pop mov bound and lahf xchg shrb clc inc ficomp xor or fdivrs pop (bad) (bad) sub or in ffree fidivl fs push ficompl xor mov sub nop mov jbe adc ret sbb cmp dec clc add stos cwtl and mov sub out push (bad) divb gs das or js call pusha xor inc addr16 inc std cli dec scas mov mov mov mov pop mov sub not sub ret and icebp call jmp sub addr16 adc cmc jl mov lret gs aam fs clc aas shl inc out mov rorb mov ss mov mov dec inc loop mov out mov dec or std cmp outsb aaa push mov imull ljmp and cwtl adc mov lods ljmp mov cmp fsubrs mov and gs jecxz xor lcall jb dec jmp adc les je icebp mov popf jnp or out ja pop sbb fmuls jmp jmp jecxz (bad) mov test pushf or push mov mov mov xchg loop nop xchg sub inc mov out adc and mov fsubrp leave icebp (bad) cmp movq dec movsl mov fcomps adc mov fsubl xlat sbb xchg or pop ds test cmc outsb add sahf add push repz repnz pop negb or xor adc insl outsl xchg push add pop ljmp add js sbb jmp or iret and add out jae sbb fldenv or mov cld and push sub test loope test mov ret pusha xor sub stos das jmp inc cmp adc xchg xor fdivs ret cmp (bad) or sub add jnp (bad) imul dec sbb icebp flds test (bad) sub movsb es and cmp ficomp jmp rcll sarl push or cs dec cld cmp cltd (bad) imul adc in mov or add fistpl dec pop insb decb int xchg lods xlat scas fnstcw loope aas in (bad) mov icebp sub sti or or gs int3 lock adc xchg lcall inc pop or lret push leave sarl jne popf xor sub test sub imull sbb les cli adc imull aad cmpsl and push mov pop (bad) xchg clc sarl mov out fnstsw cmp test fnsave lahf sub mov lds aam int and cmp or stos xlat pop outsl cmp push pop loopne ror ret sub and xchg out loop fbld inc push fildl orl push xchg stc mov loope clc imul adc jns mov add mov pop xchg pop lret jecxz dec mov jnp out test sbb jno mov dec idivb into repnz loop xchg test pop push mov jbe dec and stos daa jo push movb mov imul jge jp cmc jno imul fldl clc push in mov push dec outsb cltd (bad) std and adc in test repnz pop xorb popf mov mov out clc dec xchg shr jg out or jl and icebp loop adc ds mov in outsb dec test or mov loop mov sub dec sub add sub push scas and xor icebp dec jmp (bad) add mov (bad) mov mov pop div in (bad) loope sub outsb mov sub pop cmpsb mov testl leave push inc subl jg or sbb jno imul jge test lds call mov cmpsl stos daa adc dec xor and inc (bad) outsl imulb movsl out sub push inc leave pop lods js xchg adc mov jnp cmp sarl test jmp fnstenv ljmp jo mov and lods pop sub mov imul rcrl ret mov sub ljmp and popa adc xor pop insl (bad) dec push pushf mov xchg (bad) flds xor out and cmc cmp and psllq xor dec hlt insl jp or fs pop fisttpl incl xor pop fcomps repz and pushf add (bad) mulb cmp jo pop test insb nop sahf aaa dec xlat shrb jp (bad) pop repz push iret add arpl or add out gs pop test mov ja fs xor xlat xor das sub mov aam or cli idivb adc ret sub pop xor fisubl mov jae cmp (bad) mov js xchg call stos repz lret mov or dec popa sub (bad) or and movsl aad cmpsb add sbb cmpsl adc jae mov ljmp rdtsc roll xchg fadd or fsubrl cmp in leave pop shr imul insb in cld adc pushf adc lock mov add mov out push adc notb mov aam ret lds or mov ret sub add pop or jbe fs int3 inc into popf push sbb xchg lahf data16 mov sbb jnp (bad) jmp pop out int sub dec sub jne mov sub sti cmc mov imul je mov loope inc dec push xchg sub xor fldcw decb mov ret aas imul push clc and sub (bad) notl jnp xchg mov scas cltd pop fadds negl test xchg jmp fstl sub adc inc dec jmp stc add cmp (bad) mov gs xor loopne icebp mov cmp sbb lahf or adc xor push xchg inc loope mov dec mov jg pop enter dec xor imul test out mov add loope clc mov pop adc dec cmc shr out lret add outsb add push mov pop wbinvd js dec out lret mov enter sarl dec add mov dec bound scas fs sub or into mov and or inc or mov sarb dec push adc or jg outsb int sub sub lds inc sbb fisub add (bad) aas mov or push push jae daa add fistl push jnp jl sub mov cmpsl mov push and and and popf sbb in incb cmc iretw repnz je int3 in dec pop mov cmp lret icebp dec jmp adc add mov push mov mov fsubrs jmp mov push negl pop jecxz stc mov lret mov xchg dec fstpl and ret mov xor pop insb pushf jmp cld jno jmp in daa pop or add jmp lea (bad) or sub insb (bad) and xor ds mov pop mov jb fidivr call pop lret pop out pop mov mov push cmpsb fwait pop out adc inc cmpsl jecxz push inc sti aad sub std lcall xchg xchg mov lds lods mov jge add sbb mov add mov pop hlt cli or gs push mov and lahf jno mul inc xchg mov mov stc add mov adc sbb leave mov repz add and xor dec in daa sub pop addr16 push jo movsl inc adc mov or arpl dec and cmp dec dec dec dec in inc adc subb mov lcall xor jecxz pop adc clc xlat stos test stos outsb mov mov aaa cmp cmpsb leave push sub leave icebp cmp or lock (bad) mov in jae mov enter jecxz pop jb faddp jmp mov add cs (bad) out and push inc fcoms jbe ds fisubr mov lock aam mov std iret mov addr16 inc into daa (bad) inc lret pop daa fnstenv mov and je mov mov insb sub stc sub fidivl push adc stc dec xor cmp movsl and jmp push mov xor push sub stos or cmpsl idiv mov sarb pushf mov mov leave adcb popf nop (bad) mov addr16 dec addb loop jle sti nop dec xlat into mov aas wbinvd popf sub inc pop push adc into and dec fildll (bad) adc dec xlat bound pop ja jmp (bad) jne xchg imulb adc pop daa hlt aaa ljmp pop or cli (bad) mov loope sub xor das sub jb or or fcoms rdpmc dec loop pop xchg add lock out add adc fmull repz loope out sub cli xchg int std or push sbb sub mov (bad) or aad movsl push loope,pn bound outsl jle pop adc iret sar jecxz xor sub mov mov lret add sbb jge popa fwait jmp and data16 daa mov leave cmc adc popf pop sbb mov cmc pop xchg pop (bad) fs sub add idivb dec mov (bad) repz cmpsl inc jg mov scas fstpl mov sar lret xchg pop mov and lods leave add mov repz xlat xor jmp cli lret mov in es loope xor adc ljmp xchg dec sub mov leave dec pop mov dec rep jl cmp pop mov inc push imul adc popa repz xchg adc test js jno cmp (bad) movsl test sbb dec and add aad jnp int3 negl jle outsl mov aaa adc add loop xchg clc mov sbbl call in pop push mov rorl inc pop out test cmc cltd or or push jb lret notl mov inc xor enter sbb mov sub dec fidivr jmp iret xor pop mov mov xor lret mov mov xor xchg data16 pop jmp movsl adc sub outsl dec jecxz adc sub mov leave leave pop push xchg rorb mov int3 fdiv ret push cmp ljmp pop dec inc pop std je divb js xchg pop clc and mov addr16 shll icebp out je adc mov inc mov mov and out in add cmp sarb cwtl mov jns movsl push adcl ret cmp lds or mov shlb (bad) xor fisubr sti std cmp mov xor sub in lahf fildl rcrl push adc or mov mov iret ljmp and xchg fnop push xor (bad) dec and mov into inc xchg js ret mov in xchg jmp xor fwait test and xor incl inc (bad) mov sub notl jge loope dec scas cmp icebp xchg xchg cmp push repz inc mov inc subb jns add or jle add sub repz add test and bound cmp mov repnz icebp into push cmp cmpl fldt int3 cmp in xchg pushl or ja mov xor das movsb inc ret test mov movsl insl sub jb les fsubr jb into add pop dec inc pop sub les sub scas mov mov xchg mov test stos or loope loop pop stc mov jns or (bad) mov test mov or sub sub vcomiss imul sub (bad) jge bound leave jle mov sub add cli cmp jbe lcall mov out xor testl aas jne std movsb push adc and xchg call mov inc xor lret sub or xchg repz flds xor fidivl daa and stos rep inc xor inc cmp mov repnz mov leave fucom mov add icebp add clc push mov push mov and sub pop lock pop fldenv insb adc cmc ret pop or clc xor or clc test mov pop cmp and out mov dec jne outsl das or sub and mov (bad) sub mov movsl xchg dec pop leave ss inc xchg xor sbb xchg push sarb dec pushf mov ret outsb fsubs xor jecxz jnp (bad) mov pop testl sub dec mov lret ljmp mov sti and ret popf sub les cwtl pop xor jge call jmp xor push loopne mov jne push mov mov cmp mov pop fnstenv push mov lahf jle pop mov push pop push mov xor (bad) das ss fadd mov (bad) mov mov sub cmpsl jl mov dec pop or (bad) xor push movb or push mov ja xchg dec sarl adc stc cmpsl sub pop push add adc pop lock lea adc hlt sti jecxz ljmp mov ret aas ds mov xor jnp notb xor pop add shr lcall imul (bad) xchg xor addr16 mov and pop aad sub ret sub ljmp adc call imul outsb xchg adc add shr push dec mov xor jnp (bad) lcall cmc adc lahf (bad) dec leave jne sub push ja jle ret pop adc add ret shlb repz sub pop mov xor dec jmp mov add pop pop in cmp in push int jle test pop xchg imul cltd ja xor dec loopne cmpl jecxz lret adc loop (bad) sub and leave popf xor add fdivl dec stos or dec mov addb into xlat or or push mov fild into jmp ja xor jmp push daa ret popa adc cltd sbb jg loop cmp iret cmp loopne in push das adc ljmp sub (bad) int mov cmp jae add and mov push xchg cli push add gs fwait dec test cwtl in mov (bad) sarb mull imulb adc sub cmp mov and dec mov fstps mov dec jne dec imul loop fidiv mov dec xor mov (bad) xor mov rorb iret dec imull out and insl ret lahf aam push xor lods mov add pop mov add xor decb pushf or jge icebp mov or lcall and add lret mov jno push dec mov out imul into dec sar not cld sbb dec sub xchg rclb jmp dec popf mov int3 adc sub fiadd add jae das pop xor daa pop lods dec ret or xor mov roll xor add or xor scas jne xor mov aas sbb mov into and shlb sbb sbb jmp stos gs orl push sbb ja ljmp add enter pushl sbb adc jmp cli xchg lcall ljmp clc or fstl jo and mov dec addr16 cwtl loopne add rorl mov jmp pop out loop fist add cmpb dec leave push mov movsl scas pop test jo loope outsb cld push movsl jmp mov jle,pt inc cmp negb divb clc aad repnz xor ja imul adc ret add cmp xchg push xor dec xor ss scas jno xor js movsb mov cs das mov hlt test or cmp xchg jl pusha jmp aas push out or xor ret lcall test mov sbb outsb out dec stos cmp sub sbb jo adc lret push faddl and jmp or mov stos xor jae (bad) decl (bad) lret and sub sti popf jbe imul add jmp std decb mov mov daa repz xchg xchg (bad) xor cmp repnz jp xchg mov nop movsl dec mov adc insb daa jbe dec sar adc or jae mov mov loope adc lods dec sti mov dec (bad) gs mov sub inc or add pusha cwtl inc mov lahf int3 ds loop push icebp sbb or sub or cli cltd push inc jmp test mov scas aaa or mov mov xchg sub adc add lock loop push fstps dec push xor adc inc pop xor push (bad) leave jge sbb inc xor add shlb leave into dec imul jmp test pop test gs call loopne lret sub push sti adc cmpsb cmp aaa sub jno aas lret dec dec mov pop ret and popa (bad) mov add adc cmp cwtl sbb scas das mov dec imul push pushf push dec out mov dec int cs (bad) loop xchg fs rolb lret xchg lods leave pop jnp mov (bad) bound pop sbb loop lret or in cmpsl clc fimul inc nop cli dec sub jecxz xchg dec pop data16 and sub and sbb lock mov enter sbb jl ret pushf pop sbb xor mov rcrl mov loopne rcrb jecxz push or iret jmp or dec lahf or rcl or sbb (bad) scas sub cmpsb xlat dec in mov or mov std mov push (bad) jns (bad) lock mov (bad) imul adc lret sbb cmpsl movsb cmpsb aas dec out sub scas add xchg popf imul divb test ret or pop sbb xlat adc push fisubr imul mov sub popf xlat sti call je mov fstps push or jmp jns imul enter mov fsts dec add mov push fidiv sbb mov inc cli pushf ror adc ja ficom icebp sub int3 (bad) xchg ja test push insb aaa pop and xor loopne jecxz das xor and mov jmp clc mov cwtl mov repz push lret ret in scas pushl mov push or fstpl mov icebp and dec (bad) jecxz sub jmp or or or leave xor add cwtl dec cmc outsb movsb pop and cltd jb lret pop pop imul add sub push jns test mov mov pop sti cld out jno outsl andb jp bound fwait and and cmpsb movsl stc pop xchg fnop loope ljmp xor fs jmp mov les scas xor cli repz cmc sub ds fdivrs aad pop mov lret mov dec mov ja test out daa sub jl vpsubd mov and pop jne (bad) repz sub dec pop mov lods ljmp arpl scas enter or cmc mov int pop popf xor jmp dec dec loop push add mov dec xchg pop bound push or in inc loop mov push pop or sub mov repz ret sub sub sti and sub pop rcrb bnd mov mov pop lock inc sbb pushf mov scas sub or test mov daa jne dec pushw and cld insl pop out pusha lret and xchg add xor xchg icebp jne mov lea mov fistpl pop mov (bad) (bad) ljmp ja push pop divl fbld into lods scas xchg scas mov mov idivb ret inc pop fldenv shr mov icebp and shll leave or loope data16 ja mov or data16 lret add jge adc jge arpl jle jmp sub jo pop repnz (bad) (bad) push xor mov divb dec pop xor xchg data16 pop mov stc jae adc sub sub mov lret xchg jmp mov loope pusha dec mov or movsl pusha pop sbb sub xchg mov aad jbe jbe push aas addl adc fdivs int3 rcll or ss mov and icebp jmp push test test (bad) mov scas sub inc insb mov push insb cmp and inc add sub mov loope aaa pusha pop xchg and in and out sub jmp xlat dec or (bad) imul lret (bad) and push dec jbe imul in test xchg pop or sbb into enter mov fisub pushl lods cwtl and fsts imul xchg in mov mov imul repz mov rclb daa jne (bad) cs pop ret jnp cmpsl push sub fstpl bound push jl pop lret out sub lret dec rorl fsubl xchg cmp nop add fistp loope or ret xor sub pop dec repz sub xor mov shll ret out and (bad) and flds imul ret jg gs cli adc test xchg imul std imul sti jne fwait push out cmp outsl jmp inc (bad) xor pop fdiv xchg jle push sub mov flds popf ljmp xchg (bad) mov icebp inc imul inc pop iret pushf jae cmp jb cs adc push mov movsl out leave movsb push dec xchg rclb bound in jne sbb dec add popa outsl xor jbe js xlat xlat mov icebp xchg iret scas pop test out popf shll and fdivrs sbb mov rcrb xor jbe ret mov loopne popf hlt outsl jmp push pushf aad std movsl bnd inc movsl jle daa pop popf imul adc out test xor lods add mov jmp fldcw leave mov and inc aam gs mov out or or ljmp push in inc dec mov mov xchg mov xchg lret pop arpl and mov pop mov jge gs adc dec mov xchg mov add (bad) cltd and cmp int (bad) or inc and pop scas int3 mov and xchg out lret fldcw mov lret sub negb cmpsl pop dec es or in (bad) enter sti jns hlt or sbb xor lcall add add data16 mov bound movsl push sub pushf xchg jmp stos pop (bad) aas mov arpl adc jp sbb and rclb cmp mov or sub call lods scas or add push lahf mov adc mov paddsb nop xchg mov mov dec or adc jmp mov lret andl jno leave shrb mov mov ljmp jge add out test or (bad) mov insb inc clc mov push ficom lret jge xor sub cmp aam popa add popa outsb sub inc shrl mov adc (bad) aam or sub mov mov ljmp and xor jge mov test adc test sub rorl mov ja xor mov clc cmc shrb mov fsubs out rcll add or mov push mov add movsb cmp loop adcb sub lret fs ljmp dec fsubs sbb lea inc mov cmpsb (bad) and fidivr xchg pop ffreep pop pushl jbe pop pop or jmp js ja adc in push mov pushf mov scas sub dec pop dec pop std mov int3 ffreep mov xor lcall mov mov icebp xor shlb jge mov repnz pop in stos inc dec idivl fsubrs dec or cmp divl jp pop popa pop and mov int3 fcomps in (bad) icebp andl (bad) mov jle inc insl sbb fsubrl sbb pop or xchg mov dec or sub aam dec mov test ret popa imul jns loop mov pop stos int3 (bad) imulb mov cmc sub or xchg push lods mov loop test in stos lret or or in adc cli mov mov gs movb das mov jns test mov inc loope loop xchg repz adc decb (bad) lret push push dec std outsb cwtl push stc xchg negl push les shll xor sub popf or cwtl insl pop cmp ret mov sub mov inc leave jno lahf shll and cmpb and push cmp xor mov mov dec adc pop shll jb dec ret mov or sbb jb iret xor xchg shlb enter loop mov mull sub sub add pop into adc jmp push cmp or or sub mov push cmp out lods mov inc xor jge push xchg (bad) aad and fisubrl xor xor pop outsl scas jne test xchg in pushf or jbe je add and xor mov (bad) fimul (bad) movsb xchg (bad) scas mov add fstpl imul or cmp lock lds jg aaa dec sub add out mov xchg xchg js adc push xor mov dec adc ret xor sarb daa clc les mov adc or scas sub xor leave pop mov or pushf insb and int3 es adc mov or mov push add sub pop push lods out ljmp sti or cmp push icebp mov mov pop sbb and sub rcll dec mov cmp jl test or imul daa int3 push (bad) cmp add push and and clc les and xor and das out pop pop mov leave loope (bad) fldenv fstpt xchg sbb incb mov or sub lods dec mov (bad) mov (bad) push cli mov lret orl add rorb sub inc cmp xor pop idivb sbb data16 cli out mov dec ljmp pop and (bad) push adc stos in sub push xor sbb pop loope loope cmp jmp (bad) idivb or sbb mov ljmp mov out push jle lock add stos mov cli popf add (bad) stos pop mov je,pt mov (bad) mov jge nop lcall das in push loope cwtl (bad) xor das mov movb aas nop push in push lret (bad) lcall and xchg shr adc rorl jle and rcll or add gs adcb adc dec adc stos xchg and out jg sbb (bad) lret mov repz xchg lods dec (bad) aaa cmp fisttp sub mov mov test jne test jnp icebp pop js lahf in xchg jbe adc dec mov sbbb in loop lds int jp cli dec test mov dec ds leave fcomip mov aad ds fwait cmpsl jle adc scas push pop stos popf jmp icebp out outsb xlat cltd cltd inc mov push ljmp add pop sub insb repnz aam mov loop cmp push ds pop idivb pop mov and add cmpb pop xor dec sub and iret fidiv pop mov out sbbb insb cmpsl cmpsl (bad) xor mov out sub jecxz and outsb xor negw push popa mov lods fwait movsb ljmp divl stos dec incb idiv mov jp mov pop cwtl mov xor dec stos fadds pop daa ret and sarl cs mov fldl rorl mov or mov cmc dec pop adc ljmp xor fsubrs int3 inc (bad) xchg sbb jge fiaddl mov out popf fildl jmp add das rolb add pop adc jge xchg push xchg test add jg xchg and es xchg iret or jne cmc pop clc scas sub out pop jl xor sub pusha rcll mov daa mov arpl fwait xchg xor mov lock jbe xchg push jge sbb mov pop cmp dec cmp add stc dec cltd sub sub xchg cmp icebp lods sub or jle and dec jo divl cmp xlat scas jg mov ljmp inc shr jno or outsb mov (bad) pop xor xchg das (bad) cmp enter mov dec or push mov xor mov adc xchg cmpsb test and mov adc mov mov or dec mov adc cmp repz push xor and push loop pop repz add in hlt daa (bad) cld je adc mov lods mov clc (bad) in stos addl add imull jb jmp fcoms ds mov popf stos cmp pop sub out adc scas ja nopl cmp adc sub fsubr movsb adc mov xor stos mov dec scas int3 push lock int3 andb shrl cmpb notb cmp sub pop cmp push fisttpl mov dec cmp mov out out mov pop pop mov mov mov cmp push mov add mov clc push (bad) (bad) fsubl call negl popf sub push dec imul loop ret jno inc and nop push pop sti data16 lret inc movl icebp out and pop mov sbbb add push movsl stc (bad) jbe adc repz and adc push lods sub scas sub cmp test out js xchg mov push add scas popf in sub and mov leave inc jnp sbb mov xchg sub jnp jg mov mov les loope das lods xchg call in inc mov push cwtl xchg xor add clc (bad) out or push out mov pop int3 xchg and test ljmp push (bad) adc (bad) scas or push sub fnsave add xchg sbb or mov fidivr mov stc xchg (bad) mov sbb repz and iret mov mov jne and mov iret fldenv xchg gs scas mov jge xor sub ffreep (bad) or fcmovbe xor enter and mov xor leave stos mov sbb out and push sub dec sub push popf fcoms hlt add std sub sub add jge cmp lret pop push cltd sub mov push mov push mov pop mov push adc and pop pop fcmovb pop sub mov mov xor xchg cwtl lahf xchg sub outsl xor sub xor (bad) mov (bad) nop jl sub call out repnz inc call shrl std jo xchg jmp adc pusha jmp sar mov shrl dec gs sbb xor notl or pop lret fcomps mov ljmp pop (bad) call cmp mov stc xchg sahf lret sahf xchg dec push xlat jns (bad) jo cli icebp push popf in mov mov mov adc and jbe jp mov ret push ja push sub push loop mov mov push mov mov sub or add shlb (bad) lods sub adc mov cli and pop push (bad) je push pop decb mov pusha repnz sub dec mov (bad) dec clc outsb inc mov and and sbb pop cmp sti int inc lcall in and std inc or adc adc lds xor or int3 out push sbb push mov shl add mov jnp mov sub add out pusha jmp rcr cmp lock push jecxz not sarb mov sbb mov xor ret xlat pop cld loopne and inc mov fdiv push push dec pop mov aam sarb divb mov rolb repz (bad) lods (bad) jo mov in mov add add add cltd lcall jo dec jmp outsb mov inc cmp iret movsb push xor clc cld lea sub push pop jmp dec mov outsb test pop je push and movups popf fistpll push sub sub xchg jmp push test pop addr16 adc push jno inc sbb pop or jmp (bad) xor xchg xlat sub sbb jp mov aam imul andl sub loope sub mov mov lret jmp aas lea cs lods ret and xchg div and pop stos dec lahf sub mov xor out pop and scas sub loop pushf hlt add fwait jnp movsbl cmc dec ret aam pop ja faddp sbb lahf notb lret or jl xchg pop (bad) and sub out or or or mov jmp adc cmp enter lcall dec (bad) (bad) jne mov jge je leave mov mov shr pop mov je imul lret ds in (bad) dec sub jmp add mov sub call and insb or jmp adc lock ss shrl (bad) pop fldenv sub push mov aaa and xor mov cwtl xchg push jo in jmp in dec cli push sbb push push aam fs lods xor push cmp adc xor jbe or daa out (bad) xor push das add cwtl not pushf mov (bad) and movsl jb xlat stc push ret pushf xchg ljmp push iret mov dec sub ret jle lahf jnp sub gs or jmp mov pop mov out push pop mov pop mov ljmp push cwtl mov sub pop dec loop mov mov xchg sbb rcll loopne mov imull cmp gs jae adc mov push icebp adc and pop inc jbe mov idivl mov jns flds fimul out cmp dec je stos or fbstp add sub mov xor jecxz xchg mov fstps repnz sub jge add mov mov mull dec add push out adc lock fidivr into sbb and pushf push cmp mov xchg std stos mov mov xchg gs mov sub lret cmp mov lret pop fbstp and sbb das xor add popa loop xchg add addr16 lea enter jmp mov cwtl dec clc popf hlt xchg push or sarl push mov data16 mov or flds (bad) xchg out sbb outsl lret and and in daa (bad) rol fild xchg sarl adc mov jae jg mov xor sti push adc mov fstpt xchg repnz (bad) aam pop (bad) rcll leave (bad) cmp rcl push pop push adc daa jmp insb jb mov cmp call xchg (bad) (bad) and fidivl dec leave mov test ret decb jmp sub xchg hlt popf push jbe fs and fist fwait mov mov jb add mov inc icebp pop icebp xchg dec xor test (bad) jmp lret mov add mov xor aad icebp lahf sti popf sub bound (bad) data16 das sub je jp and push add mov test pop mov xchg push daa sub jle lret mov jmp jnp add adc pop sbb jg mov push push and loope loopne inc scas sbb test jmp outsb test pop sub pop testl jb in outsl loop roll (bad) movb insb les repnz mov (bad) pushl mov sbb lds loope add or sbb push jp sbb gs adc mov jb data16 lds mov std jmp stos sub dec push add ljmp xor cmp adc popa loop pushf add mov push out data16 (bad) icebp ret push pop int3 dec pushf jle jne push ret sub jmp push xchg imul mov xlat xor pop sub loope inc repz jmp mov adc mov dec sbb scas leave leave pop shl cmpsl cld pop (bad) out add (bad) dec sbb mov bound sar and inc stos push xor mov movsl in sbb xchg or cli mov dec push (bad) cmp (bad) int xchg jmp pop mov in add call mov jp push push push in push or addb stos sub cs xor and push mov xor pop rorl pop icebp jno repz in pop mov add fmul clc add jg in add push push and js or jmp mov hlt cwtl pop xor pop addr16 push push pop shr dec or push add pop adc in inc mov pop push jb push jno jae ret sti push push mov pop clc lret outsb lret or div cwtl pop and nop push mov cmpsl jl and add add push push sub ret adc sbb sub addl inc mov nop ds aad and subl mov mov push mov hlt loope pop daa cs mov adc add dec xchg inc aaa mov sub pop xor addr16 dec (bad) ja inc ret push popa popf bound xor rolb mov xor push mov aas fildl cs jg loopne pop jo shr adcb jbe rolb or lret xchg push push add pop jg xor (bad) xlat xchg pop push outsb and pop mov pop mov sub and cmpsb inc pop mov xchg pop cmc loop lret xor mov sbb add iret rcll pop pop cmp and dec sub jl js mov pop movsl pop cmpsb fwait sub shl iret imul testl in mov and add (bad) fst inc pop mov mov mov pop fadds pop mov mov or movsl sahf sbb dec dec sub xchg cmp push push inc add rcrl movsl jns mov inc aad insb cld mov and inc ret add shr cs cmp jp ret das (bad) bound dec outsb cmpsb sbb movsb xchg sbb or pop (bad) sub lock lahf addr16 sub fisttpll inc mov div xor sub ljmp adc jl dec repnz xchg mov xchg cmp cld dec pop lods pop clc (bad) mov inc das (bad) cmp jg in ret in fbstp and lahf pop or (bad) dec mov push push add loop add adc cmp mov shrb icebp jmp out xchg inc xor rcrl mov push (bad) cmpsl push mov lcall lret stc dec add ss pusha inc popf rcrb cli divb sub add adc popa sub inc push mov call fs popf xchg xor xor cmp mov movsb mov sub xchg out mov lds mov jae lods cmpsb (bad) icebp les and test and add and and sti cmpsl cld xor sbb rorb stos add (bad) xor mov mov xor divb mov scas insb clc loop inc xor cld mov add and std adc sub cmpsl jmp sub inc push loop pop and cmc or inc iret lods pop and fidiv and cmp mov data16 push jmp js in dec and scas addr16 inc ficompl adcb dec lea mov mov mov lcall inc cmpsb lret test mov stc xchg mov push js ficom rcl das loope int3 roll sarl roll sbbb cmpsl and pop cmpsl jo and test icebp push insb (bad) lahf push mov cmp (bad) mov daa pop mov push movzwl fcomps inc scas sub adc xchg jb fidivl push aaa out fcomip sbb scas les out repnz xchg cli (bad) hlt pop aam push sub mov cmp cmp enter and cmpsl cmp fidiv in xor or push and lcall xchg pop and ret sarb icebp mov not movsb adc mov gs repz inc adc push mov push insl fsubrl (bad) stos repz adc jecxz or hlt fisttpl loopne movsb adc out sbb lret xor bound sub dec push lods data16 int3 les pop cli orps imul int3 outsb test fs jno or and add jg test inc outsb sub sub sti add xor mov adc mov imull (bad) pop xchg (bad) clc rcll push mov or repz iret aaa or stc lods imul out cli repnz (bad) xor or xor pop or out or (bad) aad in daa loopne mov push or cmpsb ret das jl cli notl (bad) (bad) leave pop push push in cli test cmpsb cwtl sahf outsl add sub adc call sub sbb dec fidivrl push mov cmp dec cli les lret movb fdivrl adc xchg xchg mov add pop je mov pop aam lds repz push inc fwait neg loopne (bad) aas mov mov pop cmpsb dec jns mov dec incl xchg mov repz (bad) shlb movzbl ljmp jle fild loop jle add mov xor rorb sub ja ret add dec sbb pusha out and mov rcr dec mov dec sub (bad) xor or arpl mov inc shrl sbb adc mov std sarl stc or mov mov pushf sub aad pop into lods dec cmp bound xor lret fdivp inc jmp xchg lea xchg jp or sbb pusha divl cltd clc call xor imul enter shrl mov push ss or mov pop pop jmp std mov lret or movsb fxch (bad) and adc push addr16 pop xchg mov sub xor push xor xor pushl into inc push (bad) jle ss sub push leave or lea ficoml stos sub notl in and popl das test mov mov push jae dec push lret lds inc add adc jb cmp sub pop jno mov rcr mov add cli sub inc jle add jnp sub mov add mov mov sub add dec mov cmpsb inc mov mov jne adc (bad) mov or and mov cmp scas pop (bad) rcrb lret ret mull outsb sub and dec pop icebp clc imul lcall sbb in daa mov ret pop sbb (bad) fnstenv cwtl or cli push repz xchg xchg pop and dec xchg je repz daa adc and fidiv iret out and and push cmp mov mov testb jb (bad) push into shrb ljmp xor mov clc (bad) dec dec xchg dec push adc daa imul cltd movsl fcoml fiadd out pop pop mov pushl popf movsl fdivrs inc sbb cmpsb add jmp add mov lds cs xchg call hlt mov (bad) mov (bad) das jge (bad) fcompl daa pop in daa mov mov rcr cmpsl push inc imul aad add aas (bad) or or push into push xorb mov inc lret sub (bad) mov jp mov fwait (bad) fbstp push out int cs pushf decl sub ror dec jge inc push cs insb cmpsb inc push loop mov sub sar fimull movsb loop jno dec jl xchg mov and out fdivrs aas data16 fbstp into pop mov pop jne or scas scas (bad) iret js gs mov (bad) repz ds xlat sub aam shr je push mov pop and xchg mov inc sub sahf adc xor scas bound fldcw and xchg addr16 inc mov inc movsb or cwtl pop dec or xlat mov adc int3 pop (bad) dec pop out pop mov mov cmc loop test and stos sub and and and push mov cld pop add ror test jae and std or mov xor add sub add sub pushf push add aaa (bad) hlt pop dec xchg das pop flds jb fildl or repnz mov jne andb sbb subb push popf stc fadds test xor lcall (bad) xor jno add idivl add jae das and jle (bad) add dec cltd scas dec jb (bad) aaa sub adc push mov stos leave cld daa lret pop lds pop mov out outsl cmp mov rorl fidiv rol fs in popf outsl pushf adc gs cmpl pop adc mov mov or jp sar popf push cmp pop sahf test shrl jbe xor inc (bad) mov ret xchg iret xchg out xor stc xchg sti int add repz inc mov mov mov pop or pop sti push out mov (bad) out mov or cmp std out dec ret cld or jecxz push fsqrt nop out mov dec and inc pcmpgtd pop inc xchg add fcoms and cli sub jbe cmp or ret int add mov imul xor clc xor (bad) mov scas mov pop imull inc xor xchg push xor stos testl in jnp or ret jnp je xchg lret and ret (bad) xor lds mov jge cli jae stos test lock sub je ja lds mov ds (bad) movsb ljmp idiv shlb sbb sti jns jge lret cmp out test (bad) aas decl (bad) sub xor pushf nop sbb jle push stos push sub lods push jbe loop pop pushl out pop pop sub mov popf jge (bad) call lret or cwtl push adc dec ret cli pop inc cmpsl fadds popf push int3 jmp sub outsl ficompl lret add mov lret in es mov adc lret mov lods fmul lret jmp push lahf (bad) adc sub loopne sarl mov mov aas lret dec lret lcall xor leave pop pop (bad) lret push aad cld (bad) sub mov (bad) sub or jle leave mov xor bound add (bad) hlt push incl push sub dec icebp inc jp daa cmp jb test xor ds and pop rcrl sbb mov push not pop sbbl lods inc in or leave pop mov xor cltd adc mov repz adc and sti cmp and cmp movsl cmc xchg pop xchg jo xor lcall fcomps fwait add stos loope dec jmp das mov insb xchg addr16 jnp nop cmp outsb loopne je leave pop (bad) cmp test sub cmpsl sar (bad) out mov dec icebp pop cs dec mov pop cli dec es ljmp enter pop mulb loope sbb scas cwtl mov bound mov jne xor adc cmp cmp sub fstps cwtl rcrb sbb push mov scas jge leave lcall xchg jmp sub push scas cld add outsl lds pushl out cmc stc gs xor rcr add pop dec fwait pop or imul sub or xor loop xchg test adc or sub jno fxam xchg (bad) int das enter ds xchg and sub dec mov inc loopne xor xor (bad) jg insl jle ljmp (bad) mov push clc mov xlat or daa enter cmpsl sarl xor xor push pop std jmp sub mov jb sub aaa adc ss and stos or div into adc push clc lods leave xor dec or loopne (bad) ljmp jmp scas icebp ret dec sahf xchg sarl aas rcl repz adc push in pop fcom repnz or push jne in sub mov mov xor cwtl insb dec push xor clc fsub leave fstl and dec idiv ret inc pop je adc loop push sti popa loop push sub leave fcmovnu (bad) xlat mov aaa add fisttp into lahf dec jge or (bad) mov jmp mov ret addr16 cli xlat dec out repz xchg (bad) hlt (bad) int3 divl add xor aas mov or add cmp sub ret jecxz loop (bad) stos xor leave clc jl or xor fild jp hlt lahf add adc sbb pop into add arpl mov push xor mov mov pop mov mov clc scas shrl movb pop push dec mov jmp insb paddsw loop sahf xchg pop mov iret pop ss pop lea mov sarb call ljmp outsl sarb and push cmp enter add in mov lret call ret in mov dec jp das das cld sub and mov push das push rclb mov lds (bad) ljmp jg repz add lret rorb mov adc add dec lret ljmp pushf mov ret popf fistp gs shrl das sub stos je cld mov push mov (bad) sub jns mov xchg lret mov mov ret mov mov or mov inc add push (bad) popa shlb and adc bound in cmpsl ja adc mov data16 sub daa fnstenv orb cwtl and pop pop outsl loope sub sub add jecxz inc int adc sub shrb aas iret daa xor fdivrl and shll idivb movsl hlt cmpsb jb in clc stc xor xchg in dec leave (bad) jne int outsb (bad) inc lock xchg pop sub cli clc dec xchg mov lods std pushf es pop gs es pushf or scas mov adc (bad) dec sbb xchg and leave sub cwtl xchg iret mov adc stos popf test adc ficom (bad) adc lcall decb and mov sub call dec lds popa cmp mov pop loopne push jl shr testb enter adc xchg lds lods sub call test cmpsb sub sub xor in outsl push and addr16 xbegin sbb ficom notl or adc rcr mov dec fidivr add or fstps (bad) xor or inc movsl mov or mov dec push fstpt jmp movb loopne pop cmp xchg hlt pop and jmp das sub ret xor and es xchg fwait add cmp mov push mov add xor fsubs lock dec aaa adc mov wbinvd fiadd adc into scas (bad) jmp daa fist dec mov add adc lea out dec mov fwait jp mov sbbb daa xor ja mov fiadd dec iret mov sub lahf in mov pop pop outsb push loop pop mov daa xor sub leave and jl xchg out cmp sar outsl cltd call data16 or xor stc pop xor out and cmpsl xchg out jl iret and xor mov jmp add mov xor iret pop (bad) leave jno mov adc push imul lcall pop orb jno cmp pop and mov or sub and cmpsl movsb rorb lock mov das (bad) cmp dec fsubs mov stos loop es jl adc mov jmp sub fucomip sbb jl lret sbb or xchg jl adc arpl out cmpsb imul and push mov sub fstpt ljmp adcb jbe push pop cmp pop and push (bad) outsb roll ja lea pop test mov sbb push sbb sti fnsave mov movsb repz adc adc jg loope sub sbb mov sub jne mul outsl call pop cmp lret cmpsb ret xor repnz rcll roll (bad) sub rolb movl mov lret or xor sub subb mov adc into fist (bad) xlat dec test xchg out jecxz adc repz and and mov sub divl cmp dec mov mov sarl inc sahf xor dec shrl dec clc jmp or adc ret popa pop in lods push imul stos mov cmp fs jg cmpsb jno mov out test mov add les mov dec pop ret pop mov test xor sti mov cwtl shr mov icebp pop stc xor dec sub sahf sarl inc dec mov inc call or jg sbb (bad) mov in push mov inc xchg test mov (bad) dec sti add mov xor mov inc das mov and push xor cwtl movsb mov dec imul pop xor fnstcw and add sub and cli xor jle fmull push and (bad) push sub mov cmc adc daa push add mov sub jp xchg push fnsave pop jno cmpsl push pop loope or push pop mov xor lahf and jmp pop out imul pop fdivrp pop add popf sarl out jmp push pop pop add cli (bad) jmp scas xchg add pop (bad) sub fldl inc cmp mov xchg out fsubs insb cmp aas (bad) xor fcmovb imul dec repz pusha into (bad) rcl stos int pushl ljmp fist add and in push push hlt cmp sar cmp adc lret xchg stos test imulb out dec ds int das pop mov repz clc jge xorl test push pushf mov inc aas test and sar or outsb cltd sbb jmp pop cmpsl push inc data16 dec scas jno movsl rcrl xchg sub and movsl jmp out and bound push pushf xchg nop jecxz mulb sbb sar xor loop,pt pop int3 adc inc and cmp out jne gs cmp js mov repnz fbstp clc test sub push addr16 shll xchg fstpt out dec mov sub jb add mov inc sbb ret push dec popa into movsb mov push test jnp sub in stos cld fiaddl cs ss inc cmpsb data16 sbb lods call movsb data16 imulb adc (bad) frstor jns test mull add mov out mov sub jns (bad) sub xor bound rcl sub cli or imul ljmpw je scas xchg xchg push lret ljmp xor pushf jnp pop jo pushf jecxz dec inc add mov and dec mov pop dec mov push mov aas mov add cmp inc ja push add aas mov xor jmp iret sbb xchg push in idivb (bad) pusha mov sbb inc jne dec fwait data16 and or cs ret jg push fucomip xchg out scas mov mov xor mov rcll stos push out xchg pop cltd cmp negb imul add mov xlat int3 jbe movsl pop xor jne cmp pop xor sbb and xchg pop sub jecxz adc mov scas jae xchg inc lret mov fmul ret into mov shl mov cli lods (bad) lret inc pop mov jmp jmp pop (bad) sbb loop test sub sub pop sub ret xchg mov stc mov jns outsl pop mov daa pop xor and (bad) mov mov lods xchg ljmp pop and out mov add enter fsub out or adc push and rclb lods inc sub into imul dec rorb and xor in cmp repz adc jb jmp outsl xchg (bad) cmp or lahf pop popf out add in add and out push jo xchg push mov and lods imul sub add fimul xor in rclb test mov das ret imul adc iret and fadds dec subb add (bad) into cmp inc xchg fsubs iret ficomp ss loop adc cld mov dec jne out sbb mov ret jo or icebp mov xchg je dec lret mov dec jo add test dec stc inc lret dec jmp testl addr16 add pushf sub stos mov das and sbb cltd add xchg mov jg bnd (bad) add repz add cmp xor dec cmp dec rorb cmp xor repnz xchg lcall xchg shl jle dec or xchg and js in pop fnstcw and pop add sub add mov call push insb add sub adc push leave adc fcomps push cmp lcall nop adc enter iret fistl inc mov inc push (bad) pop ss adc jle xor pop idivl dec jne mov xor out fcoms pop mov mov jmp int3 push mov inc ja mov scas mov cmpsb lods in mov ljmp popf pop out iret (bad) lock adc cmpsl ret xor dec out dec scas mov cmc in and mov and push int3 xor fwait pop repnz jne sbb dec sub mov and mov fnsave sahf inc leave add call and cmp ret (bad) sub sub movsb sub adc mov xor cmp out ds and cltd sub daa je rolb in mov lret fdivl xchg xor out xor mull or sub test mov inc sub icebp stos lret sub and cmp loope fbstp push push xrelease adc out scas enter push std xor pop adc popf push lock push xor sub mov xor pop in iret inc cltd jecxz fdivp xor ljmp sub mov fs mov pop cltd bound test xchg rcrl pushf dec xor dec add fisubrl push cmc fdivs mov push jo mov push dec sbb mov movsb mov add xor cmp dec sub add das or imul inc cltd push dec rcrl pusha test pop iret out test movsl mov leave cltd imul in sbb and dec dec (bad) jg out add push sar ficom lret aam inc and xor add ret cmp popf sub popf dec jne xor dec and stc cmp jg and cmp aas jecxz jge jbe fiaddl (bad) mov lods lahf in jb jp rol out lea and cmp (bad) rcl rcrb imul enter cmp lods imul movsl int xchg jmp cmp adc mov add sbb lcall lea movb and lret (bad) pop sbb add cmp pop pushf xchg into adc and cmp lret and cwtl pop loope or xchg jp sub mov inc icebp enter out adc mov inc push ja add lock and ret or inc movsb cmp mov iret cmc jns inc xor fisubr hlt sarl xchg fcoml and xrelease mov scas je scas xor mov dec in shlb (bad) ljmp sahf cmp call cltd pop ljmp inc inc movsl pop imul pop scas lods mov pop ret dec stos popf cmpsb jle ss pop shr mov fisubl or je in inc gs inc cmpsl ret das or xor push js fdivrs movsl cmc mov ljmp insb loopne xchg sub cmp out je push mov (bad) into mov xor mov mov std or and or (bad) add dec fnstcw loope mov icebp xchg push and pusha out fucomp lea daa (bad) pop xchg cmp cmp mov xor mov mov xchg sub das jge arpl and xor push cs adc jl lret aad mov pushf fistp or stc cwtl dec hlt loop jne dec inc push sub fsts cwtl icebp jmp pop pop leave (bad) pushf add mov dec daa les mov aaa out pop dec shll into rolb adc and mov pop or icebp or xlat mov addr16 mov pop lods data16 or mov lret stos sub xor add dec pop fistpll xchg imul sti mov ror mov lods xchg dec dec dec pop push sub sub (bad) mov iret jmp repnz lret cli adc mov sub ja inc into stos mov and and and jb out fs stos xor mov imull out xchg sub xor repnz lret sub mov pop push icebp adc lods das out pop sbb pop in imul repnz xlat imul daa xchg stc xchg stos cmp bound daa push cmpsb scas stc adc (bad) sub sti out bound pop push test repz sti add jge loope ret mov xchg shll or test lret and (bad) mov loope icebp mov imul aaa addr16 arpl mov xchg mov repnz outsl sub mov fisubl sub and or sub es jle dec pop and testl mov stc mov rcll test popf adc mov mov xor arpl adc jo mov sbb sub mov xor jl leave (bad) inc mov (bad) xlat ja mov jle pop jmp jne jmp sub sub adc (bad) out push mov int cmp mov push jmp cmpsl or scas das js mov mov (bad) mov out lds mov fidiv push sub push (bad) das mov cmp push loopne enterw iret es (bad) cs in or pop mov xor lea inc imul lret movsl pusha into sub xor (bad) or fstpl aas adc xor mov pop fcomps pop mov cmpsb pusha xchg adc test xor sub xchg jo xchg xchg testb sti dec imul jp lret movsl and (bad) mov rol jle popf jg inc add xor iret fdivs rclb fstpl xchg in mov scas pushf mov xchg std xchg out xchg jl push and sub adc icebp push imul sahf adc aam fsubl push pop pop jb pop call xchg lret std in push lahf lds repnz scas sbb jge and sahf fisttpl cmp in mov dec (bad) xor mov int mov dec sub outsb push popf mov mov dec dec mov das mov dec stos lods adc lret mov into sbb cmp stc mov subl jecxz sbb sbb repz and mov pop sub leave xor xor cli mov xorl jp jo adc jmp (bad) jne pop loope je scas std xor loop adc outsl xchg xchg sti mov pop bnd adc push movsl ljmp dec jmp out mov add data16 rorl or pop outsb mov jg jbe mov or adc and outsl xchg scas mov lret popf cltd clc add add dec loop incl int jecxz sub inc dec add mov ret add jge xor inc scas adc imul mov das (bad) cmc cmp lret cltd inc add daa (bad) xlat movsb divb sbb and dec (bad) xchg jp xor js shll mov adc cmp repz fs cmp dec mov aam (bad) insb mov daa xchg mov or outsb xchg mov add adc mov into test out mov imul mov test negb pop inc iret mov std ljmp cmpsb sbb test (bad) or and xor push repz sbb or cmpsb push cmp jmp inc jge stc gs fnsave push jnp xchg (bad) mov rcrb stos testl lret sti mov sub frstor mov cwtl jl push xchg mov (bad) jbe adc add jo xchg sbb push or jecxz pop mov outsb mov or add mov aad stos jb fstpt adc mov rcl mov cli inc andb pop adc cmpsb dec into mov stos inc cli pop call test xchg pop dec leave jge add sub notb sub out aad vpmacswd push mov sub mov ret sub jle pop fistl sub push push sub iret inc or call test dec in addr16 mov cmp push js add jge loopne cltd adc or xchg addr16 cmp lret jnp cmp outsb adc push ds lock lahf push inc dec add cli pop push mov push daa repz sub mov jbe push aad test aaa lcall jno dec ja sub fistpl mov dec cmp sub pop in pop dec neg scas mov add loop mov ja push mov and (bad) ja fist jmp dec sti scas cmp adcl ret subb or cwtl push cwtl jnp pop loopne out mov lret ds loope ljmp mov fcomps das pop test push mov testb fistpll cmpsl xlat lcall xchg fwait imul ret gs jmp mov and ja test (bad) jae orl cmp ror and xor xchg jg fldt sub mov pop xor ret movsl push out sub xlat mov jl pop dec popf (bad) clc out sub xor fnsave sub pop mov test mov pop in jo fucomi and int cs es pop fadds mov in xchg and out in cmpsl mov push jno cmp lods out pop stc mov push (bad) aas jmp popa sbb inc int loop lret or hlt stc sub mov xchg (bad) mov or fild data16 xor pop rcrl mov sub pop mov clc jle jmp cmp mov mov jge xchg out and popf outsb pop sahf lea add int adc jne cltd (bad) sbb mov dec sub mov xor add or test add adc adc pusha adc and mov rcll cmp mov adc add scas mov subl mov rcll ds lret add fs mov fistl popf push pop fimull dec in test mov mov mov dec mov and xchg repnz or mov add or cmpsl push ss pop xchg adc sub jne inc dec dec adc inc mov xchg int adc gs cltd push mov addb out pop add mov mov cltd xchg xchg gs mov pop in sub cli (bad) fbstp cmpsb pop callw test out xlat mov dec cmpsb cmc movsl out popa inc (bad) xor mov mov xor test sub pop mov pushl or xor call mov push or adc stos insl xchg mov mov sbb das jle push mov xor cwtl mov into out adc or jmp cmc fxch inc imul loop xchg insl test pop mov test enter jge das mov fs mov mov jns or mov and jl push pop fcompl jecxz add pop pop das ljmp popa mov jle jbe adc cmpsl loope sub and stc or mov xchg and mov mov mov cli xor adc mov fstl shr mov stos dec mov leave les gs repz loop or mov mov and sbb xchg xchg push xchg insb jno xor and pop or (bad) inc (bad) sbb xchg push idiv push pushf (bad) dec ljmp xchg in xchg bound test dec imul and pop (bad) scas sub push jae mov sub xchg cmp in push mov adc cmpsl and xor dec ret shrl mov mov pop fdiv ds and and aad xor jo and or xlat jmp ljmp mov sbb dec fs lret add lret mov jo dec (bad) scas into outsl dec mov cmpsw cmp mov fimull cmp xchg pop xor ficomp in lods ja sbb pop jbe mov dec call xchg mov sub push fist or call addr16 push push mov push ret pushf ret cmp sti mov fisubrl push xor out mov (bad) adc mov mov inc mov mov xchg and xor call cmp push test loope imulb xchg lahf jmp mov push pushf xor cwtl adc jecxz adc and or das add movsb inc ret cli jecxz adc or mov sub fldenv jg pop mov xor cmp shrb and pop xchg leave aam xchg repz fmulp push cmp mov adc shrb xor add inc adc sub aas adc scas lret and bound or cltd sbb push (bad) push sub jge xchg loopne xor mov sbb popf jge movsl jg cwtl xchg jns cmp daa inc ret mov std aas xchg mov pop ljmp (bad) pop lret daa push scas add cli sub out or sub push push sub or mov sub ds xchg notl mov or and jbe push add nop sbb mov sub push lahf loope out jnp mov dec enter daa or movzbl cmp cmp xchg fs mov ja adc or lret sub xchg xchg scas iret mov push or and inc pop xor xlat xor (bad) iret popf mov imull (bad) sub and mov test (bad) sub add xchg stc scas dec fxch daa fmuls add sub imulb mov sarl jge mov xor jae adc mov pop push pop popf (bad) mov iret and adc mov mov push mov pusha rcrl sub js mov hlt push in mov pop cwtl adc dec sub sbb mov xchg dec mov jb,pn pop push xor lds (bad) or into pop rol xchg jmp stc jl out mov neg daa pop jb popf adc jmp fisubrl push cld call and mov xchg xor lock xchg pop push dec mov push xchg loop sarl mov iret mov ret addr16 movsl (bad) jg xor ss in ret inc repnz or lods dec cmpsl sti daa icebp push xchg pop in pop daa jmp mov jmp mov mov loope mov mov leave sbb rcrb mov add push pop xor or stos jecxz adc lret xchg dec adc jbe fdivrs sub mov icebp or cld lods and lahf cwtl pop xor fwait cs jle inc add xor sub movaps cmpsb ljmp mov int xor jecxz lret iret out mov shll xor call cmp xlat (bad) xor stos lea leave mov mov lahf cwtl into lret add cwtl ret cmp xchg cmc jb dec cmp cmp call sbb xor (bad) enter rol mov jae mov mov push clc jnp popf lret xchg rolb push or fcoms lods inc mov sub xor movsb pop leave sub (bad) mov pop gs cld pop popf add add loopne repnz pop daa add sbb pop scas jno sub push mov sbb lods xlat cld mov mov pop push ret (bad) push cmp ret clc add cmp dec je negl jnp mov (bad) out shr push daa dec (bad) push mov (bad) ja and mov inc out repz cltd sar int3 mov ljmp out sbb cmpsl test xor jae dec xchg lret loope outsb mov pop cmpsb fcompl and mov mov sahf call xchg adc sbb mov daa xlat pop lcall sub imul dec mov test mov mov or jbe repz mov pop sub (bad) xor pop je xchg pop ja ljmp lods repnz xor cld pop add jnp push loop repz aam add dec ret mov loop int push ret je movsb stos lods stc or mov std gs xchg dec enter subl dec xchg or pop out jmp or jo stos cwtl lcall nop wbinvd xor pop loopne into sbb cld dec mov (bad) loop pop inc mov sub cltd bound nop mov mov repz sbb imul jns pop mov add add xchg pusha popf and mov and test dec out (bad) es or xor rcrl xor xchg iret std insl shr jno add das fsubrs jle sub push inc sbb push insl push test sbb sbb (bad) mov popa jbe cmp dec pop jb add rorl iret xchg mov movsl (bad) jns inc shll adc cmpb or add imul xor ljmp data16 aas mov into aad popa ret adc xorb xor xchg mov add sub int3 leave adc out ja dec dec fistpl cmp pushf xlat inc mov sar mov test xlat ljmp or add iret cmp into pop adc mov gs rcrl jo xlat pop sahf ret loope or mov xchg jmp outsb std xchg (bad) xor in outsb adc movl cs push ficom or (bad) fcompl pop pop test sub lods int mov imul mov mov pop inc add or mov cli sub gs jle aas pushf mov shrb rorl out dec int3 inc ret pop mov mov sub sbb (bad) pusha add clc xor ret stc shrb cli sbb popa aam jle push xchg sbb jmp js inc out dec loope sub repnz sub add das test leave out incl cmpsb cli imul dec loope mov sub pop and mov add test out (bad) (bad) ljmp movsl fnstenv add movsb loopne ret xchg dec rcll mov ds movsl push or enter fbstp lret mov adc cld mov add test es sbb pop sbb (bad) popa pop pop push popf push sbbw dec test cmp adc mov add dec decl inc pop test out dec test loope sub fsubrs and mov sub pop packssdw stc xor mulb setnp mov stos mov mov inc sti add push outsl cmpsl xlat rcrw and int3 in xor mov xchg mov xchg ljmp out ficom xor lret mov jne adcb xchg xor aad iretw dec mov xchg inc adc lret push push gs out mov mov test mov scas into mov jbe popa jmp (bad) jge test xorb push xchg stc daa imull int3 mov iret jmp fs xor ja jge int insb push cmpsb (bad) into dec (bad) lret push pop mov mov test imull mov notl dec nop leave pop (bad) mov mov dec pop outsb orb mov fisttpl mov cmp or roll cld sub ret or repz (bad) repz fildll push hlt repz sbb lahf leave ffree ret popf bound gs fisubr jp cmp jl mov popa out ret adc xchg inc or fucomi (bad) xor and ja mov mov xchg jmp mov out mov mov test out and test mov stc and rol ja aas cmpsb lock fstl in adc jno sub ds test sarl mov inc lds mov lcall and jle data16 (bad) cmp and (bad) sub and es sbb cmp inc adc xor mov out loop push cld aaa push add mov nop sub inc and ds pop repnz add data16 lahf insb dec mov xchg jbe loop inc pop and outsb jno inc and js push lret xor aaa jl (bad) xchg daa dec fisttp hlt jb icebp mov jbe lret mov or xor jnp sub push nop xchg xchg mov ret xor das jmp mov mov mov push popa outsb sar out dec add jmp stos sub sub lahf add jecxz popf gs repz jmp leave push ss outsb leave (bad) in or xor stc mov dec mov inc jmp scas mov ffreep adc jnp rsqrtps out xchg jb xchg ret jo pop sub pop adc or (bad) ret pop and pop add bound imulb xchg pop or ds (bad) scas sub add cld mov mov mov and adc (bad) mov mov sbb sbb std cmp mov fs push push and lods mov push (bad) das sub (bad) mov ja popa adc nop sbb mov leave pop or (bad) mov insl jmp pop mov xor pop add mov idiv int js es scas cmp rcrl add jmp and adc or mov fsts sub pop jb mov shr leave xchg xor xorb hlt xor xor stos pusha pop ret and cs cwtl xchg divb cmpsb faddl mov mov xlat ljmp rcrl out jnp xor push fs out dec mov jle sti dec cmp dec repnz inc hlt mov sbb xor cltd sbb loop lods hlt inc mov sbb push lods adc pop popa (bad) outsl mov pop movsl push mov pop mov sub popf mov shrb sub adc inc push and and jne mov push lods ljmp mov adc ljmp add pushf (bad) aas testb push jno mov cld pushf sbb fsubl aad ret clc jbe leave sti inc sub dec xlat pop sbb movsl pop adc mov les in dec push or js iret mov add mov xor or ret jle movsl int3 xchg push out adc mov fsubl push sbb mov pop loop (bad) mov incb ret rcll jne stos in add sbb or and and xor leave and das stc int3 orl loopne cli and xchg jno inc shlb outsb mov adcl cltd aam mov mov jl lock cld frstor xchg (bad) add mov sbb nop fstpt js mov xchg aaa jno scas jo dec jecxz sub mov ret sahf or mov xchg lret icebp iret cs bound das xor fldenv bound mov rclb (bad) insb test push sub pop push jb divb pop push push subl pop jp les dec nop cmp mov neg mov push xor jle or xor rcrb xor or sbb push mov test pop add outsb (bad) ja jg (bad) jle sbb push sub das iret pop pop int3 rclb cmpsl and js sbb inc pop jp aad sbb jp adc mov out push sub cmp push out sbb mov jg shl pop stc aas inc sarb test sti fiaddl lret cmp jbe sbb and scas or out push xor sub or pop lahf pop push or sub add xor dec sub and pop pop lods add in pop divl add pushf xor fcomps lcall movb mov mov orl addb outsl add fsubrl pop pusha pop push dec negl sub sub (bad) in mov push mov mov (bad) mov cwtl push pop mov nop add das cmpb orps xor mov or add fnsave xor mov lock arpl pop jle jns std pop sbbl mov mov push pop pop sti adc or dec scas (bad) sarb add mov pop add xor add sbb pop push (bad) out mov or or lahf lret or jp mov and mov aas mov sub xor or movsl or mov cltd xchg or loop dec push add adc cmpsl repnz push push mov sub adc mov out dec out and push mov leave popa imul xchg adc mov mov pop in pop fs call repnz mov mov lret pop sarl mov (bad) and and out bound jmp xchg push xchg xchg sbb (bad) mov mov rolb pop add jmp cmp daa in pop push imul jb dec jl jge enter xchg aam ljmp push jmp lahf mov fstpl lret sub mov push out pop cld outsb jmp int dec aas pop cld cmp xor (bad) xor fsubrs (bad) lock pop cwtl lret xchg mov shrl add lcall (bad) cmpsl sub mov ds pushf add xor out pop pop sub pop gs sub add dec mov out js idiv jmp (bad) into (bad) ja into adc sbb cmp fildl ljmp lret jnp add jmp loop out mov pop push mov push cld push mov or fisubr sti jle (bad) cli pushf in mov dec pop (bad) jns and sub flds imul cltd (bad) loopne and cltd or fistp aam lret and or and add fbstp into nopl (bad) jne push mov or jnp das movaps inc cmp sub fisttp or lds ret sarb ja push mov jmp fbld movsl pop pop addps add fisttp pop ljmp fldenv fs std pop ret push lds adc mov push (bad) call jns dec dec popa inc movlps sbb pushf arpl xchg sbb shlb xor in dec xchg cwtl pop mov je xchg lea imul sbb xchg (bad) ljmp out out mov dec mov repnz or pop sub stos fsubs iret test mov push xchg cwtl sub mov popa jle add and jmp cld jmp dec sub outsb std jbe or sub jl push js lahf xchg mov xor and dec cmp in cmp xor and sub lcall mov std and rclb call pop add cmp mov xorl test jmp xchg fstpt repz pop (bad) cmc imulb jbe push xchg xchg in lret mov loopne std lcall sub dec ret decl mov xlat dec cmpl inc jg mov rclb add and sub push pop mov push (bad) push lods js pop mov mov xchg in mov std (bad) (bad) and fsubrs ret lahf roll mov ret jle pop sarb ficompl push sub jne test xor out mov sbb or ss push add in jo sub loop and mov sub insb sti fdiv xchg lock gs sarb lret pop push shll lods or (bad) or cmpl fmuls inc pop cmpsb loope mov test popa add add stc loop jnp popf imul into or jno ds jne xor or push stos sub sub movsl (bad) in add xchg xchg push mull out fwait sub (bad) jno xchg xlat sub cwtl enter inc add jge inc jno std (bad) sub shlb jo imulb fdivs sub xchg adc test cmc scas divb mov adc mov inc lret in xchg ljmp call aad clc cmp ret repnz stc lods xchg mov movsl cwtl add fdivs sbb mov jecxz pop cli cld mov mov inc repz cmpsl pop lret adc addb cmpsl fcomps jnp out or push fsts das xor data16 dec jo adc ret adc xor mov fidivl cmp lret ret push rclb out xor push outsl repnz xlat mov and cltd daa sub in addl dec sub and sub jecxz aad lret cld not push cmpsb shll dec and test aad int jge push call in (bad) sub clc mov jmp nop sub adc add xor xor notb or fiadd enter jge imul mov test cmp inc sbb cld jo daa ret gs add mov mov inc ljmp mov adc mov mov cltd add jg xchg insl mov inc push into popf (bad) fisub mov pop mov and cld daa in and push push pop or sub popl popf adc popf fcmovnb adc adc sub sbb outsl lock shr sahf mov pop andb nop mov lock pop cmp push xor ret ret in mov scas xor cmp sub adc and cwtl xor and mov pop jmp dec out jmp mov call sar sub xchg mov (bad) std and sbb rclb decl iret insb popa pop (bad) test mov cld ljmp (bad) xor dec stos xor jmp jb je lret and jle adc lods jne mov movsb call stc add pop cli int lods (bad) jne scas sahf or mov fcmovu mov mov leave add aad dec cld cli repz mov cltd outsl fldenv add xlat rcl cmpsl ja popf pop pop mov sub jge call or hlt fldt cmpsb rorl mov push xlat repnz fcoml inc out pop push lods add test cli out out sub mov jne xchg (bad) or lock fincstp cmpsl sarl push (bad) out cmpsl xor add or jp pop inc faddl repnz mov shlb mov sub pop xor in ds sbb mov sub ficom ret jo aam iret xor mov in cld repnz ljmp jecxz fldcw xor ja lds xor xor or mov cmp mov out add jne icebp mov and andb das dec add fistp into movsl clc enter add and inc xchg push adc ljmp (bad) lea pop imul aad (bad) pop imul jns or pop push sbb xchg cmp and sub fneni(8087 adc test out imul push out out repnz dec ret jo test je int3 in push xchg ds shlb lahf xchg in fsts lds lods test mov xor ret sbb add dec rorb pop mov aad mov (bad) and push mov mov es sub jmp mov or (bad) mov pop pop divb in xor (bad) pop inc int mov xor push adc add mov cli mov push sbb add mov aaa mov ja out and (bad) lret lahf dec mov or mov pop xchg popf mov je push add mov and popf fistpl or add push loopne mov and mov ljmp xor outsl aad cli mov sub and fdivs (bad) (bad) scas cltd mov lods call inc or loop lods sbb and and iret sbb imul sbb fildl popf dec lods adc mov add jmp xchg lds sub xchg fdivrl leave xor jne xchg dec in jne ret test or into ljmp int3 fucomip das xor int3 inc xchg jecxz (bad) cmp lods jbe enter jns test movsl cwtl inc jmp push bound push xchg (bad) mov rcrb lods inc daa jecxz sub jns lret addb xlat lret dec fstpt scas jne xor xor aaa out (bad) push repnz cmp adc xchg enter xchg mov pushf (bad) xchg and mov dec fdivp movsl in lea (bad) pushf mov shl mov mov pop in xchg cs sub call mov fwait cmp test repz push jmp and mov pop shlb push mov fild call popa loop (bad) jmp add xor in ror loop mov and fs push add and add adc inc mov jle pop fisttpl (bad) call out sub or (bad) adc je (bad) out repnz ljmp out mov f2xm1 imul mov stc repz sbb sub dec push test cs mov or cli js or jl (bad) mov jg fildl xchg vcvtdq2ps into sub dec mov and mov movsl adc mov or xor imul sub rcll adc call or fstpl (bad) and call mov call pop lret fnsave loope and jae and mov and pop or fwait scas lods push xchg mov jnp arpl jle mov or add sub jge push cmpsl jg lcall inc fisubl fcomps icebp mov mov shll leave pop es mov popf jnp aas dec cli mov imul push out mov ss cld cltd jb xor iret std cmp xor imul sub xor mov das inc ljmp stos das mov orb inc push mov push int lahf dec or mov loope lret or xchg add imul xchg nop rclb cmpsb mov idivb mov divl bound (bad) or or das jge lahf pop push fstl nop les (bad) xor xchg add pop jns ret push cmp es cld xchg jo add repz pushf sub mov popf loope xchg (bad) mov aas pop out add into dec push push ret jmp pop xchg cld loopne xrelease mov jecxz push inc ljmp push daa mov or ficom adc int3 je das xor push xor inc or cmc or inc stc fiaddl mov jge mov test xor daa loop push mov push fcoms repnz (bad) or sub inc pop jae scas push popa xor adc outsl outsb cld aaa in shrb xor push and les mov (bad) dec dec pushf add inc dec mov rcrl shl dec adc (bad) stos into mov imul scas repz (bad) and or test xchg aas es in sti or mov dec (bad) jmp out mov pop loop xchg les inc jns test add mov stos xchg in sbb lods adc out sub sbb lock mov push adc push xor mov sub rorl push add je scas repnz orl mov sub and outsb clc not mov (bad) cmpsl push flds or jecxz adc icebp ret repnz push out jmp push mov sub or inc add stos ja push insl sahf mov or fstl lock pop call cmp xlat add sbb push or cmp (bad) dec pop add mov mov mov add jne adc xchg adc or aaa push inc pop das jle in (bad) sub add mov ljmp dec cmp or jb ljmp sub div mov ds in (bad) sub sub mov daa add lds sbb mov cmpsb mov in andl ds addr16 repnz loop (bad) sub leave dec sub and sub inc xchg dec sahf sub sbb pop in jmp jmp enter xlat out sub push movsb clc push mov mov mov gs stos (bad) or add (bad) mov shll xchg jmp push dec addr16 and jecxz adc sar cmp sub sub mov adc int3 scas ret popf jl imul xor and fptan jle arpl enter shrl inc lret and sub leave or xchg cmp adc add mov mov push loope outsb fwait pop mov ds ds out test add lret in xchg jmp dec sub adc adc sub out pop js jae mov flds js icebp fisub shll push inc fbstp mov call jne dec jl aad popf sahf adc orb or adc push (bad) notb cmp cmp (bad) xlat mov js mov aad push imul sti fdivrl sub jl movsb lcall clc je sub cmp inc push dec es notb jge mov leave fimul adc jg mov imul sbb add xchg push xchg in lret mov inc cs sub pushf aas mov (bad) iret out test mov mov xor mov jmp mov aas inc xchg mov push or pop (bad) mov mov adc icebp sub lret or and jge (bad) dec divl xor jns or lods pushf lret scas jl das pop xchg insb test jo jb call xlat pop out (bad) add xor (bad) lahf inc or push aam ret gs mov and stc scas xchg mov mov push movsl cmp or jmp js mov loopne and xchg add pop mov cmp push mov aaa add sub add sti inc jmp aam shlb outsb add pop mov into or jno les leave and sub push mov xlat aaa mov add icebp in xor hlt adc decl fcomps rolb inc lea pop jns push outsb xor ja lcall push in push push sub imul add sti pop pop shr xor aas xchg rcrb mul jl xchg mov xchg js ljmp jecxz xchg aad out fsubrl in (bad) notl int jmp (bad) ficom pop pop mov mov push mov pop outsb xchg push std lods adc sub jne lret push pop pop mov nop mov das or mov rcl add lods pop (bad) je addr16 add mov loop (bad) jo mov sbbl push add pop popl cltd mov arpl xchg stos mov fs ljmp popa xchg or mov mov mov js push call lcall int3 lret xlat mov rcrb loope in mov into mov jp test or shl pop dec sub mov (bad) mov daa sub mov adc add cs pop loopne mov stos test mov int3 or popf jno or adc shrl xlat pop jns into dec mov sarb dec sub push ret add ffree sub pop xchg xor mov pop mov adcl shrb ljmp loopne add mov sub jmp loope adc out les in stc movsb mov and pop ss mov ds mov jp addr16 movsl jbe out arpl leave pop hlt mov negl fistpl or pop repz test cmp sbb mov xchg jmp mov add iret inc and push imul movsl jmp fist je or sbb cld aaa movsb sti sub push (bad) mov mov mov negl cli and or sbb movsb cmp sub test mov or push mov inc push inc loop jl push mov sub ret mov aad adc lret add sub loop or xlat test rolb push (bad) or mov (bad) ss mov negl (bad) mov mulb ret std out and test push jno lahf call fdivp loop cmc jno imul out pop jmp loopne into mov mov (bad) and (bad) xor popa out sbb cmp and les mov sub inc push or shrb mov dec xor cli mov xlat push lea fwait hlt mov lods lods sbb scas xchg adc pop movsb lods icebp cmp or repnz mov dec mov dec mov mov mov in jne aad (bad) pop jns lahf lret push mov xchg fmulp jnp jge mov hlt mov sbb dec push ret xchg pop ss dec test inc mov enter push out pop and sub sub or shrb or add xorb dec (bad) mov and jnp adc mov fimul jle aad cmc hlt andl popf fildl pushl mov imul cmp push idivl dec adc cmc adc xchg pop ret cmpsl (bad) or jo mov mov (bad) mov jg out push push ja fisubr imul jge loope jp shll mov mov jg out imul add adc or sub xchg mov sub and push (bad) movsb push daa ja xchg mov push dec mov dec mov adc mov cli xchg loope aas mov mov cwtl outsl add push sub (bad) cli sub mov sub push add inc bound rclb in mov in cmp les sub dec inc popa hlt icebp mov mov popa mov mov bound lret or out jne mov inc ds sbb push cltd jae mov cmp jno dec and jg into xlat mov and push pop mov daa negb xor mov xor int3 into pushf mov (bad) and ret into jne and sub adc cmp in not mov and mov cli add adc or jmp and repnz mov ljmp fnstenv inc inc mov inc pop es add add xor mov (bad) repnz lock jb dec stc (bad) frstor cs fptan or repnz test nop les jbe pop mov dec mov test sbb push out fisubl push fisttp scas mov mov pop lods (bad) (bad) movsb out lods outsb mov xchg stc pop je jb std pop mov sbb add repz or lret fcmovnu aad push push adc mov movsb lods out sti test sar mov xchg dec (bad) rcl mov push push mov movsl loopne pushl lahf lock add loop pop cld xchg adc enter push aam cld sub sub xor (bad) in mov lds lcall or jmp scas out pop jg cwtl dec add xchg jnp scas jbe lret push ljmp stos cmp jp sub push cmc pop push jno ss enter adc pop push push movsl out or push pop sbb push and pop nop cmpsl outsb adc sarb hlt lds (bad) (bad) ds das jmp stos pop sub pop mov rolb test jp orl enter fcmovu (bad) add and push xor and daa jno pop add pop jle mov scas cmpsb andl (bad) vpaddq (bad) xor scas jo sub and and dec fcoml test adc pop (bad) icebp push cmp (bad) sub add cmp xchg jp repz pop pop iret lods les and insl xor (bad) arpl add test lds fdivrp xor jnp lds mov cmp or ret sub jnp adc stos movsl cmpsl lock sarb fnsave in ret add cmc adc mov push cltd insl inc sub pop insb mov mov mov jae daa jo mov fbld sarl xor sub ret pop lret icebp loopne notl pop sbb xchg scas lret cs and and dec mov sub sub aas mov orb stc inc xchg decl xor enter sub (bad) xchg ds mov test lret mov sbb xor imul jg in xor jg dec mov jl (bad) mov stc outsl mov add sub clc mov out and xchg ljmp mov dec jno or je adc and jp rolb clc or (bad) in in push xchg jge out and push test cmpsl ret dec loop fstl imull (bad) cltd test adc scas xor out pop icebp push dec insb mov lret (bad) cmp das xor mov shrl pop inc lret xchg imul add in arpl mov sub bound movsb push fdivrs sub mov sbb lods xchg lret lock in (bad) xchg out adc leave test xchg ror cmp cld leave xchg negl iret pop or push adc mov mov xchg sub and daa xor stc jae fistpll out cltd fcmove jnp pop (bad) mov les leave mov mov and ljmp aas ficom xor sub cmp inc loop jp ret testl popa push push xor ds dec and sub xor fs add xchg dec adc add push mov idivb ret (bad) fisttp add xor (bad) icebp and mov stos add (bad) aas pop pop inc or test pushf and out cmp daa out and (bad) cmp mov jl xor xor and push push cld das decl ljmp mov or mov fwait push pop pop jae into and dec sub xchg push sub xor cmp dec lret shrb xchg cmp mov pop push add xor outsb push cwtl dec out cs es sbb aad sbb dec fcompl xchg sub add jl sub out pop ds xor les xor test popl jmp sahf xchg out gs std mov repnz cmpsb lret mov in ss bound not adc pop or push mov test call fwait dec sub leave test (bad) movsl jecxz sub pop add push mov rcl (bad) test mov and cltd in add rorb (bad) sbb and mov arpl fsubl xchg push xor es and xor push outsl call jne xor (bad) nop imul jbe push pop xor and jecxz xorb ja rolw add enter int3 sub fisubrl adc repnz scas lds jmp ds std jmp fs pop sarb xor loop (bad) mov xor pusha xor or cmc add sarl xchg lret out sub add dec cmp (bad) dec subb out push cld xchg push loop push popa (bad) mov les cld fs push dec dec dec (bad) push pop std or ljmp (bad) cmc lcall out sub mov sti adc clc mov mov (bad) aam stos mov (bad) add inc mov jl fstp lock jbe lret sbb mulb pop dec (bad) outsl negl incb add out and mov stos mov rorl imul clc imul (bad) lcall out and outsl hlt lock pop adc sub jns add or call std xchg sub sub jmp xor shrb sbb and xor dec pushf mov das mov xor pop adc mov iret ror mov repz out inc popf fstpl or xor jns js int3 fistp shrl (bad) push bound lret push sbb xlat mov lock mov jle lods cld cmpsl pop inc stos es push jp mov mov sub rcll pop out data16 icebp mov bound (bad) cmc xchg cld lahf adc std jmp sub (bad) imulb cmp movsl mov add divb (bad) mov cli bound dec and inc cltd ljmp inc add and nop push mov cmp or add mov xchg adc pop jae mov leave sub mov lcall adc fst adc sti mov imul mov mov jle push iret stos arpl (bad) negl cltd imul dec or add clc sub mov lret cmp xlat sbb pop inc sub daa pop and add pop stos sub adc aas (bad) dec cmp sub jle pop loope das lret or pop mov cs fldenv icebp push outsl bound xchg sbb sub sub enter sti movsl pop cmp mov int sub sub addr16 jecxz mov gs xor mov aas mov repz and sbb jge scas mov cli jecxz xchg ljmp push xor movsl int sbb push cwtl fidivrl cwtl mov dec or or stos test lds ja (bad) imull popf mov adc (bad) lahf ret xor lock scas int3 stos stc mov cmp or and loop xchg call mov inc jmp popa mov sub cmp pushl xor fcom popf jo push pushf mov aam out dec ljmp pop push mov test xchg xor cmp pushf test dec cmp divb js (bad) and das inc xor setbe adc mov jo adc push ss test mov iret sub add add iret pusha push sbb adc aaa (bad) cmpsb push push es xor iret call mov pop clc adc repnz repnz in lods (bad) (bad) out enter dec out negb jecxz fmull inc movsl push inc imul loop push (bad) mov xor das clc add lcall fisubl add int3 cmp xor or out je and add xlat enter clc cmp lret fist outsl pusha das inc fisttp mov mov jl cltd xchg shrl es adc sub push xchg cmp xor push jle jb xchg inc xchg decb jne mov or mov pop ljmp mov add repz cmp gs es not fldt out repnz jne les repnz in popa leave push ja mov jno sbbl pop scas mov mov and adc mov out in push inc cli popa stos or es (bad) ljmp out popf (bad) not jbe sub fidivr jbe inc jmp sub pop popl fbld xchg out xor mov xor stos stc pop cwtl int3 mov or incb repnz or sub push jno imulb mov mov bound sub sbb or popf mov pop (bad) push jns dec mov (bad) mov and and outsl push pusha push xor push add divb push sub mov pop sub rorb mov dec dec mov push lods xchg es adc shl sub xor in sub sahf jecxz std or daa push xor jo mov imul mov ljmp push jp pop push push add adc orl cs inc push lods mov adc inc int xchg mov les je cs fcoml loop pop adc mov mov mov lret pop pop push enter jmp not push xchg int3 sub mov adc fsubp jns clc ret sub jp cmp dec dec popa (bad) icebp push mov in mov aas nop mov pop dec jmp nop mov sbb inc iret movaps xor aam inc sub in es gs push inc add or sbb sub add test (bad) fucomp xor add fistpl scas (bad) jbe xlat sbb hlt dec sub mov es mov in das shrb xchg in pop es lret inc pop shll dec sub test push mov lds jg into mov dec fnop lock cmpsl bound inc xchg and aas mov sbb xchg pop mov ds fs mov out pop sbb lret imul daa (bad) mov maskmovq fcompl testb jmp loope sub out mov ret pop jno fs pop xchg pop mov and or fisub jmp loopne mov je dec dec cmp mov (bad) aam lret pop sub out inc sti pop xor jl fs rcl xor outsb and (bad) jo and sub dec pop pop pop mov push mov aam jp mov out xor and sbb or pop mov adc mov (bad) int3 loopne mov xchg pop shll dec scas divb mov in sub cmp mov scas cltd xchg leave jg mov decb add sub (bad) fnsetpm(287 ljmp scas or add call mov sub mov fisttpl mov ret inc test lret cli (bad) push sub add movhps (bad) cli addr16 ja xchg idiv mov sub and cmp inc enter inc out mov stos clc push mov iret popf les sub adc divl (bad) and clc loope dec sub pop push (bad) add movzbl cmp and sub lret sti mov and or shrb push xor or iret and and pop push sti mov jecxz (bad) je pop sub out lods aam rcl (bad) scas pop stc ret leave jmp das (bad) stos test movsl (bad) fs jmp adc popa cs outsl xor stos clc rcrb enter rcrb adc cli sbb pop push pop shll and ss (bad) and nop ret (bad) mov enter or dec xchg jo insb mov pop mov push (bad) jbe mov xor or (bad) mov into add jo xchg lret xor mov lods jmp jle and xchg ljmp pop addr16 mov sti (bad) sub das xor push and fdivs std push pop and pop aaa sub clc and icebp std in mov rcrl mov dec pop sbb jmp (bad) mov icebp mull icebp xor push dec sbb ret scas mov xor dec icebp push jno dec mov cmp cs sub lock dec mov repnz mov jo fnstenv mov lret pop or rorl std lcall jecxz lret (bad) cld rcrb fisubrl push mov push mov jge out mov mov rcl repnz sub stc daa cmp sub sub add xlat xchg xchg (bad) cmp (bad) int and cmp jae or mov (bad) movsb mov adc xchg sub cmpsl jmp fldl pop or add js popf cmc adc mov xor loop xchg xor dec push clc test ret in and fcoms leave sub out out dec fcmovu cmp out inc outsl repnz test mov xor ljmp stc xor ret notl dec subb and xor std (bad) sbb sub add dec mov data16 sbb jnp mov pop adc jmp das cmp pushw sub ret jge xchg push pop inc imul cmpsl clc pop and push movsbl ret xor bound test mov lea scas dec push icebp sbb pop push xor repz (bad) mov cltd popa jg mov push lds (bad) in push xchg std sbb sbb (bad) and sbb (bad) and and rcrb lahf loopne push mov jb insb and pop jmp lret popa add cwtl lods push decl inc pop mov dec repnz mov pop add push stc loop pop or push stos out shr popf dec and push mov jbe sar mov daa xor push clc cmpsl pop xchg add es call jne (bad) dec lds shll (bad) push mov subb mov jp (bad) loope add hlt mov jmp push ret pop not nop fcoms or pop and outsl int3 xlat adc hlt in xor mov add pop push add out aas mov cmpsl sub jg xor or add mov rcrl pop push or adc add xor pop add das out and mov sub add xchg jnp push daa xor adc mov mov out outsl ds mov add pop idivl out stos arpl cltd ljmp mov push mov pop push add and push push push cmc pusha pop sub ss sub pop jo adc add mov jge push add dec sbb sti pop fdivrl push pop (bad) fidiv adc xchg enter xor stc lods movsb lods daa xchg roll ror incl sub mov xchg imull (bad) scas lcall outsl cmp dec into and loope mov add mov xchg or add cmp mov rol out frstor push adc pop cmp fwait orl sub scas test scas push pop scas lret (bad) pop push push loop lahf add xchg sahf lds les and jmp out loope,pn std pop or mov lcall lock xchg jae xchg lret imul clc scas cmpsb or mov sti int3 sbb pop fldenv wbinvd repz ret jge popa dec shlb mov jno adc test jecxz aam je mov inc sub or ret sub cmp dec out xor mov nop mov and leave mov dec rcrb inc js scas lret rol movsb out inc push sar iret xchg stos sub push inc lcall pushf lret xor and icebp jl icebp mov add mov out pusha push xor jne std popa cs int3 in dec enter mov loopne add and lods fnsave out pop and int3 rolb add into or push sub stos imul scas je mov (bad) sbb jns cmpsl (bad) loop clc mov fucompp mov xor icebp and sahf push cmp push jle nop out lret or (bad) push cmp push clc les xor sub rclb (bad) cltd dec (bad) jp push xchg mov sti jecxz adc inc bnd repnz dec cli (bad) das daa movsb sbb dec or inc into pop pop and ja dec jle xchg sbb inc mov lret push jno leave cwtl sub mov sbb mov lret inc dec mov test push int3 sub lds ss (bad) icebp mov push mov xor lahf ficoml or mov mov push mov call in mov fcomi or xor jmp or mov popf stc or jno or xor dec daa inc and mov loopne jecxz mov les hlt lds sbb xor repnz sbb jle popf mov bound dec imul and add pop push daa mov (bad) pushf cmp jl push pop sbb decl pushf or inc and and (bad) aaa inc add jge fs stos je ljmp lret fist out xor gs int3 cmpsb and push inc (bad) cs nop repnz and scas pop and (bad) cmpsl fist mov test stc add push pop ds idivb sub aam pusha xor pop ret notl daa or std mov repz inc aas adc icebp insb jne pop (bad) sbb or xor std xchg xor mov push cmp rorl lods (bad) shrb xor sub sbb mov outsb xchg pushl mov iret xchg scas sub sub insl mov adc sub es mov enter pop and (bad) out mov xchg xor sti mov xchg xchg popf bound pop or inc mov jg pop mov inc mov pop xor bound stos ss sbb out loope out adc mulb out je pop fsubs stc xchg out and lods inc inc shll scas mov shrw jmp sub imul sbb aad out lcall out (bad) jl (bad) cmpsl jg lcall push or cmp mov jno inc mov mov jmp pop inc xchg adc mov je stos stc inc (bad) ljmp fcmovne out dec lea ljmp jge roll sub sub (bad) das in jg outsl jge rorl call or xlat adc sahf stos push mov (bad) push sub shlb fldpi sub mov (bad) xor jns cmpsl ret xlat add inc dec push (bad) leave pop call or xchg (bad) das xlat xchg sbb push xor out jb sbb inc dec inc and js out inc push adc mov leave (bad) jmp sub push mov fcoms repz and (bad) cld xor mov mov add gs sub sub jmp (bad) (bad) xor repnz cmp jne jb dec imul pop idivb lret stc ret cs jo and xor or lods lret jmp push repz int mov cmp cmp imul mov mov jmp decb fisttp insb xchg xor sub mov push xchg sti mov push popa decb (bad) das ljmp jb ret or cltd push lds lods fsubs setne out ljmp and fs fidivrl adc mov pop mov jbe insb sahf fldt cmp (bad) jbe lods and das adc lret xor add out bound pop adc mov out test jmp and add loop (bad) adc mov (bad) loop jecxz lahf and outsb mov (bad) jb sbb (bad) or xchg bound ret xor and pop xor fucomp loope mov jg adcl inc sub sub arpl out lcall cli aaa fbld inc mov inc addl xor fs mov xchg sbb jecxz jns incb mov or mov notl inc in pop xchg jae jg pop mov ret xor mov and jno sub mov xor imul rorl jge test pop inc jmp add or add mov xchg cltd jb sub pop pop push jno mov stc ja inc popf xor and daa (bad) andl in rorb jl pop (bad) gs inc pop cmp add sbb sbb push out insl mov xor xor xor push mov lret xchg pushf lret (bad) pop stc adc lret popa (bad) sub jmp mov roll cwtl sub jo pop fldcw cli std into sar sub add xor bound das mov das mov and in shlb add stos mov cmp cmpb inc pop pop mov das out adc pushf pop leave mov or bound sarl jae and mov push push cmp or inc sbb mov mull push imul jg cld das fsubrl outsb mov inc jmp mov dec inc mov sarl pop mov push xor fmull mov hlt int3 push sbb sbb pop mov stos aas jl ret adc sub ds and mov mov movsl shrb aas addr16 roll push ret mov sbbb std int3 hlt dec push xor mov push xchg ret std insb xchg dec icebp cmp xor shll scas mov xor add sbb xlat pushf mov jmp sub clc mov or xor mov and cmp insl aam call pusha roll xor inc test xchg cmp js rorb into clc cmpsl fsubrs and pop mov sbb mov jmp cwtl mov lea pushl xchg lock mov out sbb (bad) sti pop or add sub inc add or int3 lea cwtl daa or insl js xchg imul pop pop mov pop inc test (bad) mov mov dec stos mov clc nop push dec or xor xor mov fst add sub mov stc push enter out cld adc shrb sub je leave (bad) into sub fdivrl sahf mov mov les je enter fdivs push add gs ljmp clc ljmp repz and xor sub or lods call add jmp inc xor lods xor das inc aad mov mul pop adc inc lret xor test mov cmp andl out push fsts sarb pop pop add faddl (bad) sbb int3 (bad) cmp ficomp inc push pushf lock pop je enter lock pop dec xor nop fstl cmp cli popf and jge mov add and inc ja mov inc xor jle sub ret data16 jg mov fsub es lcall jno and and ds cltd lods mov inc adc (bad) xchg hlt sbb sub adc pushf stc cmp adc test jo push push mov lods in icebp stc push ds pop mov out sub pop aaa cmp cli xor ja pop push push jns dec (bad) adc cmpsl out sbb repz push pop adc (bad) pushl adc dec call out pop mov leave data16 xchg xchg movb push adc (bad) flds xor cmp icebp mov or gs mov add xchg pop out jae (bad) int3 adc push add and cmp dec cmpsl jmp ret scas cmp add add mov adc imul inc lahf jg stos pop movsb dec jmp (bad) xlat fildl jg pushf das (bad) mov jmp mov dec add pop adc mov push (bad) lock xlat jnp jmp stos xor test cs out cli and cmp aad adc pop popa sub inc movsl out sub add inc xor or mov daa mov outsb in mov fist out rcll or pop sbb movzbl scas inc jecxz (bad) stc mov pop and pop bound add mov es and stc cmc mov xlat xchg stos and lea xlat dec inc add icebp dec mov sti ds out fcoml lods inc aas out inc roll sbbb push int3 pop pop dec negb dec add mov add cld fdivrl iret daa fidivr xchg ret xchg pop cld icebp xchg outsb sar add popf fsubrs mov imul xor pop mov cld mov repz ljmpw sub lods das popf lods push and mov ja push pop jl push dec sub push mov and xchg negb or jmp jge ret push dec loope je daa (bad) pop add xchg shrb movsl jae mov mov add (bad) mov js and lods cmp pop dec loope das sub jg imulb sub and inc and ja and or add mov xor mov xor fimull pop add call lret jmp push cmp mov loop test lret mov sub push xor mov cmp dec int3 incb pop ds or pushf mov mov loop dec mov lret or les dec xor xor sub test push pop insl sbb sub jmp imul sub ss sub sti xor stos js aam xlat xchg jp aam imul (bad) mov xchg or adc mov arpl sarb dec clc outsl mov and jne xchg pop cmp rcrl inc cmc ret and hlt in mov sub fucomp enter jmp lds lods test cmp (bad) mov movl push popa mov sti mov negb std xor fisttpll dec dec fcomip pusha cmpsl clc adc jmp cmpsl aas jecxz or add dec ds gs cld ljmp fmul or divb dec mov jge (bad) dec mov ret xlat adc testb fdivs es mov or xchg cmp dec xchg subl jns xor jp pop adc (bad) jp fildl (bad) mov xchg int3 mov mov add (bad) cmpsb push jne cmp rclb cmc dec outsl imul (bad) test pop xchg or stc jb push sbb daa sbb push jns pop jl inc push scas mov bound aam push push rorl sub jne lret mov cwtl adc xor mov pop into cli mov dec enter icebp mov inc mov adc in push or xlat pop jb jnp sti mov add and insb icebp xor sbb lds inc fnstcw inc lret cli pop sbb jbe fnsave icebp pop dec xor data16 aas cmp out mov rcl mov pop sbb add and out rol movl mov xchg mov push movsb (bad) adc std or jle xchg rcl push scas loop (bad) loope cmp and xor sub xchg out notl pop adc bt mov jg sbb fnstenv (bad) add mov mov sub cmp add mov es loopne pop push test hlt pop divl dec repnz mov outsb mov mov xor (bad) outsb xchg pop pop ret in lods cli leave inc popa xchg test jnp sub test movsl mov xor loopne lods cmp mov and daa or cmp lods imul cmp pop jle pop inc cmp movsb in cmp shrb mov sub cmp xchg and mov (bad) mov mov pop lods les shlb dec xor lock adc out mov fdivrp pop imul jge push icebp pop (bad) cld pushf mov les clc mov pop push mov mov xchg (bad) test int3 icebp and ja push push scas dec (bad) sub jg out mov cli or (bad) push dec sbb add repz cmp and and inc dec out mov ds mov xchg mov (bad) push push std stc pop dec xor repz ret stos push adc stos cmpsl push (bad) (bad) out movb push xchg or jbe leave jbe push mov pop clc jecxz sub repnz jno repnz jns xchg ljmp clc fnstcw and repnz sub cmp movsb movsb xchg cld pop jp mov mov xor out iret hlt dec call mov xor stc mov inc das xor xchg mov sbb int3 daa je sub xlat fs sti pop inc repz lret in scas test and xchg mov shrb mov push adc push jae movsb xchg and cmc pushf iret mov scas cmp or stos lret into push push mov outsb cmp ficomp sub push sbb adc or xchg popa xchg mov testl jbe xchg adc lret bound push (bad) fdivrs (bad) hlt test add lods mov clc (bad) mov sub xchg pop sub cmp pop inc test outsl mov jp das cltd xchg dec (bad) mov adc sub ds push lds lret and (bad) (bad) adc out gs mov jne xor mov adc popf fist faddl xchg xchg sub mov inc push mov leave and xor jl jmp inc xor ljmp push (bad) xlat add pop mov mov pop in dec xlat repz sub sub lods cld clc icebp xchg data16 mov std iret push test lock xchg scas imul mov sbb adc push int3 inc out mov ja pop mov cmp and pop es xchg xor and mov scas sbbb (bad) ss pop sub xchg out or xor fisttpl cmpsl std mov rcrb add jl xor pop mov adc jmp push out pop inc int3 (bad) mov or aad mov push push sbb sub or adc sti lods inc stc mov add or push in xor aaa push and or inc fisttp icebp jb jmp cmpsb xchg adc dec testb jecxz sub sub adc add scas gs push pop cmp push add loope sub mov loop push jae mov pop ja xchg inc push jb xchg hlt pop jb dec push jp sub push adc sbb push dec jo mov incl adc int xlat test and stc jl and repnz fcmovne dec js xor sub in jg add adc add and adc movsb icebp jnp xlat xchg sti inc cmp sub aaa imul std movhps push fcompl (bad) pop cli (bad) cmpsb or out xor scas mov adc push mov ret scas data16 jno xchg into jae rorl sbb sub sub mov ja orl push mov das jge sub leave rol mov fstl int3 popl dec icebp fisttpll xorl ret icebp inc lock lret add lret add or mov ret pop cmp fidivl lcall pop mov das mov (bad) (bad) in pop add pop mov lds mov (bad) idivl popf push in mov xchg jmp scas sub clc add fist mov cmp sub call insb lahf movsb stos call cmp shr and inc xchg addl and pop aaa adc mov pop idivb fstpt xor and add xor ja loope out stc mov rclb xor iret and imul dec dec pop lds popf push fstps sub les xor (bad) and je cwtl sbb bound push jl (bad) icebp pop cld mov push cmpsl cmpsb hlt jl (bad) repnz clc pop popf jge xchg dec aas shrl adc out call mov into mov add xorl mov and cli sti in (bad) mov sar mov pop mov push imul and in mov xor sub and lret cmc xchg xchg mov jns fs int or cmp sub stos cmp test rorb sub mov mov sub xchg mov mov loope aas lods lret cltd fnstsw xchg cwtl inc mov jo jmp mov sbbb (bad) popa js mov jle pop dec lret rorb sbb (bad) push mov jbe dec jmp mov sub add jecxz adc std enter mov fisubrl (bad) jl (bad) iret inc inc mov xchg cmp sub or mov icebp add dec in mov and sgdtl pop imulb stos push mov mov das or add add add add mov xchg sub sti sub ret (bad) adc jo pop or nop mov jne sti mov enter mov aas mov shrb sbb jns lahf repnz and mov (bad) lock pop cmpsb lret orl mov mov xchg xchg adc mull adc push dec pop cld in and shlw and push scas out loope divl push push mov outsl add in cmp sbb neg mov mov inc loope aas add repz add int ljmp pop dec inc addr16 outsl add lds pop mov mov std js pop push mov or ss ja sbbb aad lds cmp movsb out jae pop mov mov and dec pop pop adc push xchg jno je (bad) sbb sbb lds andl nop inc or in pop add stos (bad) xor and cmp lahf int3 js cmp lods fwait rolb add ds outsl push jnp dec es shl add pop das pop jge xchg loopne push push add fcmovnu aam or dec add pop xor pop ret cmp movsl (bad) sbb pop push add cmp and mov lret or sub fs (bad) pop mov ret jle ret xlat ljmp mov cmc inc out gs sub push test jl loop iret push fdivl leave pop pop dec xchg fbld add jns (bad) lret (bad) cmp repnz xchg fcoms sub push and por mov push xor bound sub cwtl sub ja loop andb (bad) pop sbb lock or test fdivs rcll xlat fcmovnb sub mov or cltd imul (bad) or or gs daa mov fdivl mov mov test repz dec popa sbb repz icebp ret xchg push or add push test andb jmp in lods mov lods push and fs scas jecxz mov sub sbb mov mov adc dec inc jnp,pn aaa (bad) xchg add mov sbb add mov jnp jnp or scas mov xchg mov imull into sub push adc push pop dec aad adc inc ds or add or xor push int3 xchg mov lods cmpsl pop dec icebp sti sub loop loop xchg pop jmp mov data16 ds push xor xor dec sbb fnstenv and inc cwtl cmc push aas ret pop pushf pop cwtl dec and sbb (bad) mov jbe rolb lcall mov scas std (bad) inc push loop cld (bad) mov push mov mov dec jmp pushf dec les and (bad) repnz pop insb or jmp data16 cld mov test add and mov and jle pop testl xor xorl aam cwtl lahf jecxz sub cld sbb mov out test sub xchg jmp movsb mov sub aas push ja mov (bad) adc mov jmp pop cmp into scas sub or (bad) add (bad) sub sub sub mov push mov mov in or cli cltd and fcomip mov sub or cmp jg,pt outsl movsb or or lret (bad) pop pop mov and in adc repz pop popf push push pop jmp clc pop cmp arpl cmp push cmp add ljmp and lock popf (bad) dec pop jge sbb xchg icebp scas cmp push or jge ror daa stc xor fistp cmpsl jle dec mov divb or add pop push sar dec ret add push adc sti or and idiv and je adc stos inc shr lret or shll ljmp daa (bad) popf es dec mov jmp divl leave (bad) dec sub clc rorb sub icebp pop or or inc add xor daa push sbb pop mov inc mov add mov pop push daa jg mov imul jmp inc sbb imul add bound push pop cmp mov rolb roll xor xchg movl jae mov push xchg jmp sub and das xor cmp ret xchg or xor lret or repnz lret jl cmp bnd call add enter sbb hlt or xchg mov leave cld sbb pop xor clc dec mov mov icebp sti insl jp mov jbe,pn fsubrs sub lods pop xor sbb mov or mov aam jecxz jno pop into test jle repnz jg repz rclb pop or add xor cwtl jg sbb inc (bad) dec xchg xchg sti sub lds fs inc inc mov jno (bad) sub pushf add test cmpl mov (bad) cltd insl inc lret lods aaa sarl test adc xchg aam gs into fisubl xor pop repnz xchg push (bad) push mov fldl fldl cs aaa adc daa mov ja sub push mov fistpll inc das aas lds or mov push cmp mov dec add ljmp pushf sbbl leave push rorb addr16 popa push icebp sahf iret mov lea and das (bad) stos (bad) push and xor (bad) pushf outsb push fdivl jmp push fbstp push pushl stos ret push (bad) out stos test dec ret idivl xchg xor or pop inc push mov sub xor test mov lods test iret iret and jmp and adc ret add cmp insb push dec jecxz test sti test daa (bad) std xchg pusha lahf scas mov add leave cwtl dec or xchg jnp lods sarb add test xor sub and clc scas xor pop sbb jb icebp jg fisubrl add gs rorb sub mov std jno in pop fcoml test out mov ret stos and lahf adc out mov enter xchg sbb xchg or aad scas pushf xor jne mov lfs lret ja adc push fdivrs jns sub popa push xor dec scas sub push cmp (bad) pushf ljmp pop pop scas xor and mul iret jb popa (bad) xor jne xlat jne mov pop sub rcrb mov sub xor ja cli mov pop loop mov ret shlb popl arpl pop pop aaa insl stc mov fmuls jle (bad) into mov mov and add outsb loope add adc stc or mov ficom (bad) leave and adc mov dec rol sub test bndldx rolb mov mov xor cld lret mov loopne or mov roll std sbb bound shrl dec aad subl lea mov mov inc mov test add and push adc push insl cmpsl dec jmp notb pop (bad) imul and ud2 sub and (bad) jge leave pop test sub jmp test mov push js mov push push ljmp repnz out adc (bad) imulb jge inc jne gs stos insb jge push sti aas stc jl xor clc jne jns inc outsl add sub (bad) sar cwtl or mov out pop and lahf xor adc bnd lret pop lret sbb mov scas mov pop pop lock inc jns and idiv into mov push inc shr cmp add cli je test xchg out dec lods xor iret pop and mov xchg ret cmp repz pop mov adc sbbb push adc rcrb repnz sub aam jmp mov or nop push out testb je out (bad) in or pop data16 popf add ljmp cmp movsl lods push (bad) icebp (bad) adc adc jge cmp fucomip sarl push ret pop add test clc cmp xor popa pushf xor into xchg xor push mov out and (bad) rclb push inc lcall or (bad) imul sub mov ret fist or push dec das jns cmc add ljmp les dec xlat loope lret in dec and adc mov aas lret scas sub xor push hlt mov or cmp inc (bad) xor xor jb lret fs mov lcall into inc lds jne loop bound adc subl lods mov sub sbb adc sbb cwtl xchg lock nop mov (bad) shl adc loop je idivl fidivrl sarl lods pop xchg inc push and jne decb vxorps fs pusha push icebp add in sbb test flds lods push xor push push out push roll push or push mov jnp in (bad) mov addr16 cmp mov xor lret jns cmpsl pop xchg adc cmp (bad) mov in mov pop jge xor into fnstsw daa or mov and sbb jmp xchg out push out ja ret std addr16 popf popa lahf mov leavew inc pop sub cmp and sub cmp sar mov xchg movsb fadd xlat sub lret jne int3 add xor mov cmc sub xor arpl mov pop bound rcrb or aas movsl std cmp mov adc cmp push adc sub mov xor fdivrs movsb movsb (bad) (bad) ficom mov (bad) and out (bad) xor mov (bad) call xchg jne mov pop idivl xor sbb adc dec popf xor jge aaa cmpsl jno xchg loop sub (bad) xchg in xor dec sbb and repnz mov je sub push fdivp push jmp xor add mov ljmp aad push xor mov xor or pushf pop (bad) stos mov test out in cmpsl loopne xor mov add mov xor (bad) lret xor dec enter dec out stos fstl sub bound cmp mov adc leave cmpsb jns mov repz negb outsb ficom ljmp cwtl and mov mov faddp leave jno sbb hlt or lret jne mov stc (bad) leave push adc mov jns dec xor and mov mov mov shll icebp and mov imul sti dec aam xlat je repz dec ja or bound bnd arpl lret xchg sti pop ja ret bound cmp das jecxz cli adcb pop leave bound rcll pop push stc cmp xor gs xlat in mov xchg lods or adc aam push dec bound jo mov stos pop cltd mov out push pop dec push in add or adc mov lock out int3 dec iret mov pop pop jmp sbbl cmp cli sub lret add adc sub ja mov sti scas cltd je fs and ds cli push (bad) mov (bad) and push mov rcll inc ret mov fild add or sub pop idiv enter mov je push fnsave gs loop xchg cld dec ret divb sub pop mov out movsl lock jle inc cli jbe imul cmp sbb shrl ret sbb jg xlat or lret pop push aam xor aam fldz xchg popa cwtl sbb or clc or rorl mov mov pop dec in sub cli or mov xor lret hlt mov push add or cld call cmp ds mov out mov sub jge dec daa or sti stos daa jbe or and jl mov adc sbb or sbb in ret scas inc mov push mov pushf daa add and jg xor jno mov mov inc sub jge push xchg divl push lret int3 ss or rorl loop test push sti mov lock jnp lret push mov sub xor out loop xchg stos out or mov (bad) mov cmpsb (bad) mov adc mov xchg fidiv (bad) adc xchg adc mov icebp js ret pop mov repz movsl xlat dec lahf mov sbb nop and add sbb mov ficompl sub mov sti fmull into pop add dec jp es sub repz mov loope push in push inc stos sub fsqrt add mov and ret add mov adc dec or or stc rclb out inc push sub jno shll (bad) add pop out and fldl fisttp fdivrs push je add sub mov cmp mov cmpb inc xor dec push out lret sub inc lret cmp movsb adc inc xchg (bad) in lods into movsb arpl andl add mov (bad) sbb pushl cwtl sbb pop (bad) loope jnp repnz out jl push push and and xchg mov (bad) dec jl dec enter ficomp ret cmp push testb sub dec push cmp jle and out jbe add movsl sub mov push inc mov imul adc xchg sub (bad) pop dec and or repz aas or decl mov mov fild or sahf dec pop shrb mov inc xlat (bad) testl int pushf mov inc inc push or or les daa ret jp and or jae cmp mov cmc cmp inc ds pop or jg scas iret mov pop mov pop xlat cwtl sub dec add xlat scas mov push mov mov sbb iret call fldl2e cmp jne ljmp or test and std test mov call (bad) pop mov std stc imull in fs imul ja ljmp lds or jbe dec mov pop outsb fs loop daa and sub iret push xor mov (bad) ja fmul push mov out fcmove (bad) mov dec jnp pop out dec daa sub imul fsubrs clc test mov dec inc aam ficompl push repnz xor loop jae and jno xor jl dec cmp ret xchg stos lea push xchg loopne jmp push sar and mov xchg fldl sub movsb call lea push mov movb ret jge (bad) push std pop pop and xchg movsl jo dec bts cmp test mov sub bound dec jmp jo xor decl aam mov fldenv jge loop add mulb pop sar push iret mov test clc scas lret push dec cltd (bad) cmp iret dec lcall sub xlat insb and sbb sub aas dec test out and pop lret ja je adc push xchg mov rclb mov gs lds mov add ljmp inc and cmp leave into fstl pop mov push les fsubrs or jb mov mov lret jecxz mov pop dec icebp stc sti jmp vpaddusw dec jl lret lret ja jl (bad) mov jmp inc mov into mov fidivr (bad) in lret push push dec popa mov sub int3 mov repnz and into add xchg in jae out test es out or rolb push dec jns pop pop and jge ja mov inc jmp js pop call sub mov fstl xor mov push fist or push iret ret fldcw or add repnz xchg dec pop data16 dec repz adc les ret cwtl jno adc mov mov std inc adc mov mov fnsave or out pop or das dec testl jle nop aad add or push cmp adc lahf dec jne subl jae push pop idivl movb jo mov popf les xchg xor arpl dec jns sbb pop sub sbb add fwait decl dec xor xlat or gs fidiv decl mov je or pop in mov or pop pop fmulp push xchg mov aas flds push mov outsb lods mov hlt jae xchg pop push mov xor fchs sarb not or pop push mov mov sarb cs pop negl xor jbe inc jmp sub ja jmp popa neg xchg out out lods add cmp and xor mov outsb pop mov or sub pop mov inc mov cmp mov or mov dec and pop xchg adc insl add movsb cmp scas lahf add popf popa popf inc outsb int3 int jb mov aas add xor hlt mov mov bound std pop inc rcrb rclb lret adc add ret sbb cli pop leave xlat pop add sub mov jp and push add gs jnp xchg clc add out xor pop pop test push pusha ljmp je divl push fstp pop aas leave mov cmpsl ljmp pop jle int in neg or sub pop adc incl fisttp clc sub dec out push or ret std addr16 orb sub push js sub cmp mov dec ja cwtl icebp mov (bad) (bad) and pop test add fildll add fdivrs pop xor addl ds push mov jno adc sbb data16 stos xor stos int xor notb test mov mov dec enter sub mov xchg pusha and sub xchg jnp adc popl pushf xchg (bad) addr16 movsl repnz mov fisub xchg pop sbb cwtl shrb add jbe imul pop test mov pop clc and sub pushf xchg jns push add test aaa lret into inc inc mov and loope sbb (bad) mov xor movsl out cmc mov pushf adc mov call xchg pop mov add mov push jnp and scas mov cmc insb das popf gs add inc aas sub (bad) pusha mov cmp add in or xor cmc in jo loope fsubrs sub cmp and mov dec mov das ljmp dec xor mov and mov jno (bad) or add sub fildll push push dec jnp dec pop scas jne (bad) mov pop lods scas mov aad pop (bad) testl xor sbb jmp cmp and std ds jo loope decl (bad) lcall xlat xchg dec hlt sti xchg (bad) js int3 or mov push pop mov shrl mov ss dec scas shrb jge mov iret xor loop pop mov push repz das lock dec mov outsb mov add leave fyl2x ja into mov leave inc ds push pushf das xchg push mov sbb sub adc gs mov add xlat repnz pop ljmp insb inc incb scas mov pop ljmp mov dec in lods and mov ret fcom jmp mov push add jno repz icebp xor in decb or mov xchg mov sub xor cmp popa pop ret push dec imul jg inc fildll jnp sti sub push outsb mov adc xor or aam test push mov subb xlat cli or inc sub push (bad) xor mov fcoms mov fdivr xchg pop outsl sub ja xor or add jnp data16 sub xchg lret or dec in dec (bad) cli sbb (bad) mov fisttp (bad) mov idivb mov leave cs jne std inc (bad) out sub outsb cmp push pxor and stos lret scas gs xchg jbe xchg xchg mov push sbb fisttpll fistpl loop push xchg mov xor and dec pop out xor push loop sub loop jns cmpsl jbe xchg xor sbb lahf bound jno ret mulb xor mov xchg mov repnz pop xor and sbb sub push inc cltd dec mov fucomip loopne pop add mov cmp push dec xor int3 pop mov (bad) adc das in pop jge adc mov and push mov sbb or lods dec xchg sahf je (bad) xor (bad) sub jg sbb pop jmp shr jns (bad) xchg shl test jns dec fimul or cld jo frstor pop sti mov pop roll daa pop lds es in pop pop add xor dec inc lret rorl mov ret add fisubrl (bad) pop fnstcw out and add shr dec push int3 int sub (bad) or mov inc push mull inc lea call (bad) xor pop pop aas dec (bad) (bad) outsb les popf pop jl (bad) push cmp or jne (bad) ljmp sub cltd xor out ret inc xor aad add adc push mov push and push adc das inc scas lret push stc iret xchg repnz test sbb stos or (bad) pop les lret push sahf add stc aam and mull xor xchg clc mov lret push mov and orl sar lcall cmpsb jae dec pop mov mov shll push sub imul xchg mov into sub out xchg jnp (bad) (bad) and data16 add les daa xor jmp movsl icebp cltd mov cli fildll jno movsl ja (bad) xlat or mov cmp push std out pop iret jne and push ret stc dec jmp mov rcl jecxz jae mov jmp outsl test movsb frndint das lods pop mov dec fdivp mov inc movsb push mov add ljmp push divl (bad) mov clc test fdivr push xlat out fstps clc jecxz mov (bad) jmp cmpsl aad icebp lods ds or mov dec or divb fist inc adc out movsb aas (bad) mov add mov (bad) aam or scas jecxz adc mov fnsave aad mov fsts xchg add mov push mov ret (bad) push sub push or cmpb out std and inc cmpsl cld push movsb mov and rcll lds std jno inc ljmp dec repz lods jo loop roll pop inc (bad) repz mov pop data16 xlat mov and mov xor imul and pop negb mov std jns scas or push push in (bad) mov into mov test movsb ljmp push pop lret test popa cs and xchg nop cmp sbb or mov sti sub inc xchg daa and lock out aas (bad) daa repnz pop lock xchg outsl lahf push in lds adc in xchg cs jnp daa dec adc dec mov add add repnz dec jp adc repnz push movsl aam pop or xchg loop xchg mov add mov scas mov sub mov push jne cs and cmp mov push pop repz and hlt fnstcw dec jnp push push dec out int mov mov dec pop mov push pop mov sar push mov inc (bad) jb sub mov orb push (bad) into in fstl scas jecxz xchg fwait mov cmp test test lock or xor mov out sub dec dec icebp push dec lcall icebp sub add mov or cwtl repz and lock repz xor jbe pushl pop ret int jl dec mov lods push subl push ljmp popf in push adcl inc push mov and imul (bad) fdiv or test pop enter test mov aam dec rcrl cmp hlt and pop jmp mov rorb mov (bad) mov aad cs cmp adc or adc inc push movsl push jge add loope adc add lcall pop push mov and loop cmp cld mov out (bad) pop pop mov dec (bad) icebp iret cmp rorb out mov fist push popf aad fisubl fdivl jmp out sub out adc xorb lret pop iret bound push pop pop pop lret pop and mov ljmp pop pop pop mov pop das lcall imul inc xchg movsb mov into mov xchg into and xor cld and push mov (bad) mov xorb sub cmp sbb jmp mov pop icebp out fs push inc jp repz push cmpsl mov sub (bad) cmp rcrl mov out pop out fsubs push dec jecxz inc xor sbb ret pop jmp les dec je mov pop push sub fnclex popf shll xchg cmpsb mov rorl sub (bad) cmc xor out mov and mov icebp nop inc push movsb dec xor sbbb lahf jg or pushf mov cmpsb (bad) pop push push icebp xor xor jmp xor insb jl mov sub jecxz inc xlat outsb imul mov push in pushf test mov mov inc sbb cli and adc cmp sub scas sbb inc in and and sub jmp mov inc dec fdivrl dec sbb pop mov mov mov cmp and (bad) outsb pop lret movsb jns js xchg gs xor fwait mov ret add jnp inc dec adcl (bad) mov movsb jmp xor adc push fcoml xor out xchg and mov push int3 mov enter lret inc or mov add mov adc xchg inc insl pop cmp into daa loop cmp add sub lock push bswap std sbb lods jp repz or sub xchg lret xchg repnz cwtl push mov ss and adc adc cmp lret out aas push cwtl dec and not scas loop roll or sub or (bad) mov lret pop out mov xor mov out mov mov in adc mov loope jle ja or bound pop in int mov arpl xor andl cli mov sub mov pop mov jge lock sub mov mov xchg (bad) sub adc cltd xor in and xchg dec dec sti jne in lret mov sub or shlb (bad) ljmp sub or add nop insb push mov push mov or arpl leave jge (bad) sbb xor shll mov jne,pn lret movsb mov xor sub ss inc rclb inc mov sbb repnz push add testb dec cmp sub add jbe scas fisubr (bad) mov mov mulb sub rorb iret adc (bad) xor mov adc push cmp dec dec add popf pop cwtl jns rcrb int3 fadds loopne and add mov jmp xor lret pop mov mov pop jb mov xor pop push or stc pop insb ficoml out xchg bound in mov mov mov mov sbb shrb push in inc cs jns ror (bad) jle shlb jmp shlb and sub sub pop repz and mull loope and jge decb add das xor pop lahf jns (bad) loop mov mov lock xlat adc mov imul (bad) jb stc int jmp add mov sub ljmp xchg aad movsb cmp dec push out dec add jg sub js xchg xchg movsl dec loope imul pop inc lret cmpsl test fcomps xchg push insb and mov lcall (bad) xchg mov xchg stos popa cmpsb out inc dec (bad) lret mov aaa xor (bad) sub mov fadd fs clc mov or into mov movsb cs imul lret and xchg xchg out out dec shlb mov jp xchg pop push inc cmc pop mov mov outsl out dec xchg sarb xlat mov cli mov repnz mov adc loop or push mov adc dec (bad) stos fnop and cmp call jmp pop (bad) lods insb dec sub es (bad) iret (bad) into mov outsl dec ret mov cmpsb or or or mov mulb and icebp fisttpll push jl imul pop dec (bad) test pop or iret and xor jae sub adc pmaxsw add ljmp outsl loop xchg stos xor adc ljmp sub mov pop pushf call adc mov xchg inc sub iret mov and mov cmp cmp sub movsl jle push lret xor jecxz jno leave hlt fbld xchg sub pop adc (bad) (bad) cmpsl fisubrl xchg jns dec jo mov mov or lods data16 pop mov sub jmp lahf leave jns cmpsl rorb and jp xor dec (bad) lret pop dec lods or xlat lcall xchg testb adc loopne jl push mov ja loopne out (bad) pushf pop mov cld adc int3 jae imulb xor lret mov repnz xor dec jne mov loop jbe push add addb jne push icebp mov fcmovu pop imul loop lea dec xlat pop jge loopne or jb cli (bad) loopne shrl lret dec dec mov test sub xor jmp (bad) push add sub mov mov push dec ret jge dec mov lcall fsubrl pop jne (bad) (bad) adc lods jo mov xchg push push fwait inc ret repz std out or inc adc sub into shlb dec ja mov inc dec jl add add xor movsl mov daa rcll rep lret push or push pop jae fstps aas mov cmp fs xchg add or fisubr icebp push mov idivl xchg clc mov sub imul adc js cmpsl (bad) mov dec or hlt pop jns imul inc xchg pop xor pusha pop scas sub (bad) mov hlt shr pop lods fs stos push outsb push in in pop mov xchg push add mov inc sbb push xor dec div fnstsw pusha mov push pop stos cmp sub jnp mov rcr enter stc xchg dec addr16 push aas loop and in test inc sbb lea mov out negl and aam inc out stos mov pop shrl insb scas and sub loop cmpl mov cmc xor xlat movb mov and iret out mov xchg test cs sbb pop sub jb mov push jb icebp push movsl cld cli mov stos cmp negb or mov push hlt cmp ljmp dec fcomps data16 or xor push (bad) (bad) cmp lods mov xor xor dec popf pop ja test inc jne sbb mov ror cmp mov mov imull or xor add scas sub add dec or push and pop add pop add sti andl inc pop mov and repnz fptan jmp adc inc das rolb dec adc mov stos mov outsl movsb jns add or std in stos aas and shr pop jmp icebp cs and sti repz das mov sarl cmc sbb movl or jbe shll dec or xor pop adc jg push or xor imul lods push call sbb or sbb or fistpll inc and cmp pop cmpsl (bad) push mov outsl pop gs adc jge push cmpl inc cmpsb cmc in lods (bad) jb mov cli mov imul pop push out inc and (bad) and fisubl push inc scas gs and inc pushf sbb and mov enter fistp mov add fcmove push cmp pop mov out divl or in cmpsl pop push (bad) add xchg and cmp push and xor jge or dec clc imul loop push lcall cmc pop adc imul pop (bad) out or mov xlat gs int3 xchg lahf adc fcmovb xor mov cmp mov pushf push inc adc mov arpl bound (bad) push dec dec das pop jle out adcb inc ret pop xor stos leave pop jg mov fist movsb imul out sub or dec and add xor mov mov and mov in movsl push (bad) push gs ds daa xor fcoml repz call mov sbb fadds mov or iret pop jns jmp mov cld imul xchg xchg pop stos dec pop sbb pop push push fidivl push ds outsb push gs add adc repnz int3 daa sub sbb lret lds sub cld (bad) out pop or in pop mov clc (bad) jae push xchg dec fildll jae repnz xchg dec je and enter xlat nop fnstenv sarb mov push ljmp ret stc lods repz sub fsubrs sbb pusha insb iret (bad) jnp repz xor cmpsb inc pushf (bad) and xchg (bad) rcrl xchg or gs push xor dec cmp fldenv insl les xor call imulb cmpsl loop mov xchg ret jg mov cmpsl insb xor sbb xchg mov bound ret in into sti add lret andb cmpsl dec or sti fsubrl daa xlat push rcrb mov cmp rorl cli sub xchg (bad) pop in cmp lahf mov shrl jmp dec xor cli or (bad) ja xchg mov mov jp ret sub mov jne mov or cmp in inc aas addl inc dec lods inc dec xchg inc dec pop inc push out inc push mov add add push (bad) jo sub jno add addl mov add adc adc adc adc xchg mov pop mov inc mov inc ret les add lret add iret add roll fadds faddl loopne jge add out or push out out push inc hlt mov stc mov mov outsb sti add push add add add and mov add add mov add inc or lds dec and and push and push and pop and pop and popa and and and and andl mov lock lret (bad) and and and and and and jmp pop mov mov and and loopne adc addb cmpb sub sbbb mov subb sbbb push xor add adc add add sbb and and loopne push movsb xor inc xor cmp ds inc inc inc inc mov dec lahf inc dec out inc push fldl insl inc pop jns pop (bad) fs sub outsl add jno (bad) jne sarb adc aaa xchg (bad) mov xchg les cwtl add fwait add popf add mov fs add mov mov adc adc adc enter adc rclb pop rcll sub adc xor or adc jmp inc repnz clc inc cld adc inc stos sbb les xchg pop add or or mov push (bad) sbb repz pop in add cmp cmp flds dec add dec push rclb push adc pop adc cmp rorb daa inc jo inc je inc js inc jl inc (bad) dec inc mov inc mov inc mov inc xchg xor lods inc fwait inc or sahf add mov inc stos xchg jg mov inc mov inc rcr lds lret cltd rorb or (bad) or or pop loopne test or jmp and and add and jns jo xor adc popf adc out or sahf sbb aas and sub add or sbb xorb adc adc andb test nop pop xorb repnz call or es xor dec jle xchg and add mov inc nop add xchg and cwtl xor pushf jns add add add mov dec ret add and iret and and and pop jecxz and and push repz clc and cld sbb add sbb or incb dec adc jecxz add sbb cmpsl es sub les add add add add add movsl push add push add pop add and and inc jo fs js jg add (bad) add xchg mov add xchg add xchg add pushf add mov and lret mov push ds inc shrb jns push add dec inc rorl fnstcw add out push in add lock cmc add add incl xor adc adc mov mov or adc out push or and loop or mov or xor add or or or dec or push sbb in adc adcb xor and subb cmpsl jo test or jge add aas mov fs inc xchg add pushf add mov sub or sti mov loope add int mov add aad test add fiadd loopne sbb add out aaa in add lock repz testl or add or sbbb lods sbb repz xchg sub sti xor call add cmp insl ds popa inc adc inc adc adc push adc adc adc adc adc adc das jg fildl dec mov sub adc xchg adc adc adc mov lods nop or inc mov inc mov inc roll (bad) xchg lret into add roll xlat add fildl fldl loopne in add call push icebp add testb add incl xor adcl inc (bad) nop (bad) jb pop dec inc sbb inc and inc and inc sub das loopne xor inc les adc in inc inc xchg inc inc mov cmpb subb aad and cmp andb (bad) insb subb adc sbbb and addb xchg cltd fwait push lahf add cmpsb pop out inc inc lods mov scas pop inc mov inc mov inc lds inc lret mov iret cld inc aam fs fiadd jecxz inc in pop call data16 sbb jno cli jge in js mov mov and sti sbb xor and and addb pop xor cmp testb subb sbbb subb gs shrb jno jb or jns jg add nop test rorl fmuls push xchg or cltd or or or or or or mov mov jne orb je sbbb (bad) add and sbbl xchg add add aad mov adc loope adc or sub enter sbb cmp out xorb shrb cmpb inc add subb ficom or ficoml stos pop or pop or bound test push imul outsl or jae js xchg jge aad orb les mov xorb cmp and subb (bad) stos orb insb mov enter mov inc ret sbbb or sbbb data16 cmp cmpb loopne jmp and xor out xor xor add incl xor les sub add adc cmp adc adc adc pop sub mov adc adc adc adc dec sbb addr16 add add add add pop add add jge inc addl add mov add mov xchg and sbb outsb inc mov enter inc mov mov rol xchg lds ror inc aam lret xlat or or loope xor or out or or cld pop xor sbb dec add adc adc aas mov cmp push sub pop inc and inc sub inc sub inc xor cmp inc cmp inc inc mov dec xchg inc push clc inc push mov popa mov addr16 inc insb pusha inc outsl enter inc jns inc jge inc addl xchg inc mov inc (bad) push inc xchg stos inc xchg out inc cwtl mov mov shrb xlat mov mov addr16 sub adc or adc (bad) sbb fisubrl add add in push insb lock inc xrelease xchg popa nop push loopne bound or add adc icebp adc in add add pop add and dec and lods xor push add add add fmull popf push add push add pop add pop push fwait pusha test imul outsb dec jae pop jns dec jle (bad) xor push xchg cwtl mov sbb sbb and ret cli mov test add add mov dec mov jo or mov and and (bad) and out loopne adc andb or xorb subb fdivr sbbb xchg data16 add and mov adc lock adc add sub add ss cmp aas add inc add dec add dec add push add pop add pop add popa add gs imul add js mov add addb add mov mov popl xchg add cwtl add popf add mov (bad) test fsubrs imul add leave add int pop aad mov pop hlt fiadd sub mov out inc jmp inc out pop inc hlt inc sti cwtl inc lcall jb mov decb inc adc mov or or jae or inc das andb adcb or orb jl xorb loopne addb jno or arpl add mov or jae pop js cmp fldl int3 mov ret nop or or mov test push lods orb cs call or or aam mov or or fisttpll loope in jb subb out or xor (bad) roll sbb push push adc mov adc or cmp adc adc and aas and aam adc adc adc inc jle dec stos inc dec push inc push cltd inc push inc inc pop pop inc pop ret inc pop jge pop repnz xorb scas imul outsl pop in pusha and and outsl mov enter xchg mov or (bad) fwait adc adc sbb icebp lods add add mov jne nop jns adc adc fmul sbb sarl cltd popa fidiv loop shr mov adc lock cmc adc adc sbb out or invd rorb sbb in sbb ficomp or or sub ret sub sub and mov les pusha inc add dec add dec add push push aaa push jns pop xchg inc popa jb gs inc imul fnsave aam add add add add add add add mov outsl stos add mov fs jnp add mov pop (bad) mov or into and and aam adc xor sub add in stc pop or in or repz subb fisttp nop or adc adc adc adc adc adc adc das adc xor (bad) cmp addr16 adc inc adc adc adc adc je adc adc arpl xlat je mov adc xchg and xor mov popl popf xchg add add lcall and cmpsl and xor mov imul or or iret or or fsubs fxch cmp or loope jge or or jmp icebp and andb lods sti cmpl adc mov adc or xchg or ficom adc push (bad) mov arpl mov xor xor cmp dec add or dec or or or or or or or jo daa jne jns mov addb cmp int andb cld popf subb andl mov cmp ffree or imul xor or or or or hlt or clc or sbb pop and add jg or inc or inc adc inc sbb mov nop xor insl sub mov adc adc inc adc dec sbb pop add cmp push mov adc adc jne stos jns pop jp lret jge dec (bad) adc xchg pop or mov jne nop stc xchg adc cwtl adc adc mov push stos adc adc mov push mov mov adc ja lret test add flds add call add add repz clc add std push cli or push movsb add and and adc sbb and sbb into pop and and js xor add xor pop aaa add cmp ds add add dec and and dec and push and push and and and iret outsl inc je inc jns inc jle inc (bad) add mov (bad) adc push add lods fs add shr idivl jns and rcrb cmp pusha popa pop pop leave mov insl fistl outsb and jmp out scas and push (bad) dec outsl mov mov xchg push aaa mov jg sub pop shrl add cmp addb mov xor pop push pop adc aaa sub pop sarb aam loopne std not int3 or je flds or mov push ja mov pop xchg push cli sub test mov cld jg std sbb js add (bad) lret in add push and pop jb push fwait pushl subl sub mov pop sub xchg loope jb or sub mov sbb adc push sub mov mov (bad) cwtl pop add pop and mov jl clc dec push add pop cli sub push dec cmpsb inc loopne mov sbb lcall popf jge lds adc push push and dec jbe rorl scas int3 push cli xchg sub jmp xchg mov imul popf adc xchg les (bad) mov add rcrl push jb push (bad) jmp mov xchg sbb hlt sub inc pusha dec dec rcrb mov mov loop adc mov jb addl loopne ljmp test pop out mov sbb repz loope imul outsl sbb jmp ret (bad) testl sbb add pop fbld push push mov sub push in and mov leave cwtl sbb cld daa jno push or daa xlat ljmp scas pushf sub sti add xchg mov xor (bad) aaa or repnz cmpsl dec sti pop xchg inc dec ficoml mov dec or push mov into jnp adc fcom (bad) dec dec mov notb pushl aad mov add mov push xchg and incl hlt aam mov repnz add ret add call xchg or loop and pop pop lret test push push pop mov cmp sub pop xchg mov ss outsl addl sub add in call ds test sub pop pop mov aas sti sbb vorpd pop pop xor xchg xor ficoml popa sbb jnp lahf pop xor aas and rcll (bad) aas mov (bad) jmp in nop fisttpll add push pop push xor (bad) inc or push jle jmp pop stc jnp fs pop ret or mov xchg cmp rcrl lds cmpsl jg lds pop lahf fmul ss sbb ret push or adc jae loop jb fwait inc lret jg out pop int3 pusha xchg notb or popa pop add mov and (bad) (bad) iret xor jle add inc (bad) negl (bad) fcompl or repz and xor mov xchg fisubl lret mov in (bad) jmp jb lea test inc cltd sbb xor test iret daa and mov pop xor jg mov sub pusha pop mov jp ret insb (bad) sbb rorb mov ss sti jne mov add jge mov nop add cmp add jmp cmp stc inc mov mov fisub sub outsb outsl adc xor sti outsl lahf ja call rclb fisubl ljmp rclb pushl shll cmc out sbb subl mov fisttp imul adc aam add cmpsl fistp xchg xor inc not fild movsl mov sub loop ljmp fcoms pop xchg cmp movsb dec test mov lcall add int3 (bad) sbb jnp es shlb das jg xchg push and lds xchg sarl out jnp push xor add ret cwtl dec mov mov push dec popa inc iret sub das jge dec lods cltd pushf rolb lock mov sbb mov pop cli sub loope jne or jp imul dec pushl cmpsl add or ljmp (bad) fiaddl jle and cmp insl nop loopne push inc (bad) jle inc mov int3 pop in xor js cmpsb outsl sti sub jo mov sbb jge lock jae mul movsl mov cltd ret and out pop or (bad) pop loope add rcrl es stos and out add bnd das jp sub mov adcl mov lahf pusha cmp adc or adc mov sbb jae push mov (bad) fist push or idivb and mov lods (bad) xor mov div jo pop cli test mov out mov addr16 loop mov jp loope xchg xchg mov and adcb lret nop mov roll fwait cmp mov sub sbb push sub sbb pop aas mov sub jns stc jae or mov je sub in outsl add dec sub imul add loop cmp (bad) out pop (bad) sahf cmp or cmpsb lods mov add or or out add call ds and jg in mov rorb nop ret imul fisttp add push push sub xor push sarb push mov jle pop inc and jge call or jle sbb xor mov pop cwtl decb cmp mov dec imul add imul push shl pop xchg inc leave push jg pop or test and jle (bad) or mov push jne mov jb mov jge (bad) lea andb movsb pop jnp pop sbb cs cld jl shr bound cmpsl loop sbb lock pop mov rolb cmpxchg scas xor bnd sbb (bad) mov and in or push jne push lock fistp cli push mov mov add divb xor dec inc clc or std add leave mov or or mov je outsb into jmp or add inc adc sub sub lock mov shll cmp inc add (bad) jae mov sbb lss std jge add xorl mov jg (bad) aad or aam cld test xorl pop data16 push mov sub shll xor add pop not adcb insl add cmp sub dec add popa clc sub pop neg mov loopne mov arpl or mov xor sub (bad) std aas xorb sti in jne pusha negb int3 movsl ds cmp fsub or push adc add fnstcw jge mov ficoml mov adc push fldl nop adc pop add push jge mov mov cld (bad) or xchg mov and daa xlat inc notb push push pop fistpl sbb sbb repz push jge mov xchg popf enter sub cmpsb ds add daa sahf jg popa sahf or sub mov cld neg add (bad) icebp mov rcl and push (bad) jg xor sub popf popf les jnp xor sub repnz sub (bad) mov jnp sbb pop test push rcl test dec ss cmp int3 mov inc add mov and mov or stc imul movsl test sbb fdivrp jp js imul add mov stc ret inc or fldcw insl lret (bad) and es scas and jmp movsb cltd stos push push nop xchg neg dec mov push enter pop movsb jmp add push adc cmp rorb push cmpb stos jae xor test (bad) std aad fsub bound (bad) cmpsl add sub mov loop dec cld add add incb pop es cmpsb out inc fxch lds popa das loopne in clc cmc and add adcl xor cld jnp adc fwait push and dec xor sbb add aad jg and test and and mov or jns int dec adc push nop push inc cli xchg testl push dec stos das mov (bad) add cmp out neg pop mov jmp xchg imul or dec push pop cvtdq2ps fucom xor xchg jmp dec inc push add add aas pushf xor cmp inc pop mov outsb pop cli sub adc lds sub mov js shr divl test push push (bad) pop (bad) in xlat mov mov add cmpsb jo sbb mov fwait push pop mov add xlat out sub fimul mov push cmp mov mov pop pop call add add aad add movsb cmc jl push and add or js push sbb add dec enter adc int jl mov push push (bad) jne dec into pusha sbb inc pusha xchg shlb dec test mov mov pop fst sub sub out ja inc bound dec stc ret cmp fwait jns (bad) in push popa bound out add xor loop mov add test mov pop push popa lcall ret scas sbb mov mov (bad) lret jo mov push pop lret or or lret inc repnz out add incb ret out add xchg and out jge neg rcll fbstp inc cmpb jnp loope cmp aas jg dec leave and push or sbb stos cwtl and pop mov cltd icebp cmpsb lods adc xchg jns es ret sarl mov add push (bad) jns (bad) cmpsb lahf (bad) jbe psubusw int3 fs push je loope xor add add dec jae cmp or idiv (bad) sub rorl jl fidivr sub jecxz pop stc inc adc mov mov insl mov push sub repz out add negl push ja cmp xchg ds pop repnz push and pop icebp jl dec lcall push mov (bad) mov addr16 push pop push mov mov imul bound pop inc adc add leavew push pusha (bad) loopew into js ret mov in subl sti xchg fsts push add sarb jl xchg or loopne add or ret mov fsubr cwtl das cmp (bad) lods in pop (bad) xor mov repnz sub xor sub inc jmp out (bad) je and sub inc pop xchg add push push pop neg push out pop insl cmpsb das pop repnz xchg mov push pushf dec adc lods dec cmpsl adc pop xor jmp negl mov fild and adc dec adc in cmp je jle and imul pop lods or mov je push decl jl mov in repnz mov push adc mov jg push in repz adc and stos or rcll mov inc sbbl dec push mov or mov pop push jge or push movsl inc or ret or fstpl pop adc pop int xor shr xchg mov pop xchg test and mov or push cmp inc loope xchg jns sub in push leave push add mov jns jno iret pop andb pop pop dec call lods jg push orb and rorl xor or incl add fcmovbe sarb or fstl inc xor and shll push jl ds cmpb cmp mov mov push pop pop fld das push pop jns dec adc push add sahf insb cld xor add fsubl cmp fisubr and das lds push sub push inc fldenv and dec push dec add and in mov flds inc push cmpxchg loop pop mov inc lcall and push leave ss dec ljmp ljmp add (bad) sub std call les loop out nop out mov cmpsb sub xchg push jno sar and pop mov mov mov pop dec clc push scas gs xor mov (bad) ds ret or enter dec (bad) out push orl pop idivb ffreep pushf adc lahf cmp rolb cs jns pop or add subb lcall and mov mov push or shl jle mov fsts mov cltd icebp adc cmpsl test (bad) rol lea jbe or repz pop jmp das rcll ficom inc popf sbb outsl push lahf lcall pop dec sbb sbb jns loopne pop negb xor repnz pop or xlat mov sbb pop negb cmpsb call dec lcall or push jge mov std xor rcr pop popf sbb (bad) pop mov in (bad) mov mov cmp test std jmp (bad) inc xor fldcw cmp push in push pop mov inc dec cmp cmp jnp add loope int3 mov add mov dec xchg movsb push clc ret sarb pop andb push iret ja idiv and sarb or loop xchg aaa jne popf mov lock add repnz cmpsb ljmp nop adc jg add lret push mov jae jnp push jmp movsb ja loopne decb or mov mov mov sub adc mov mov test xor shlb push lret cmp mov out and mov dec xchg insl lret and ss jmp dec lahf jno mov xchg gs std pop jo test test mov jge push push inc mov xchg adc bound mov cmpsb rcrl push push in test aaa rolb or push lea push scas cmpsl jp in dec (bad) insl in int mov cmc cltd and add ds add xor jnp sti jmp pop aaa xchg sbb test and add test inc ficomp xchg paddw rclb jle mov es or add add fs push or cmpsl add ja or sti dec aaa push orb out jnp mov dec int3 add (bad) jns xchg pop test out jp cmp je adc hlt js adc mov ja mov inc iret fwait inc (bad) xchg lock cmp or or jnp popf loopne loopne xchg pop dec pop add mov jo sbb repz test clc xorb fistp je xchg lcall add ljmp subb jmp lahf jae adc or pop push rorb xor jecxz ss push jns dec sub and out out addr16 andb daa jle mov (bad) movsb mov in in cmp fcompl or aas cmpsb std loopne dec aad stc addl ja sbb inc push add mov (bad) pop adc push mov mov adc pop jl cltd mov mov popl icebp mov pop in daa xchg mov mov or xchg icebp cmp and inc pop or cmpsl add mov cmpb leave sub inc or push dec pusha cmpsb arpl push mov push bound and std pop pop cmp sub jbe fnsave lds jne mov lods add push push xor sub pop movsb aas dec push inc push mov frstor sbb or pop in daa lds out movsb adc fmull nop fistp ljmp hlt mov inc xchg movaps stc inc pop mov pop mov pusha mov (bad) mov das push xor adc popl daa popa mul xchg test cli push addr16 test jnp ds das pop dec stos jle enter cmc in cmpsb daa mov out adc jle faddp and pop push jbe push mov dec mov imul cs lret nop lods push push adc xor or jne shr or pop fs push fidivrl bound test out test push out js dec sbb jnp iret pop add inc sbb inc lds lahf imul inc sub sti mov inc jae aad shl or sub pop pop mov dec in mov iret test lock loope xor shrb cwtl addr16 push insb pusha xchg push push dec pop std orw xchg out jp pop lds push pop fistpll sub bound cmp fisubr dec inc (bad) idiv aad test subb gs dec cmp fmuls add jmp cld and mov push pop mov aam push aas mov inc ss adc xor aam dec cltd pop andl pop mov dec mov cltd dec jg sbb push push hlt fisubl xlat jge inc ret sbb mov add daa ficomp add es jecxz and out leave push add outsl inc jge fbstp mov add sahf push imul xchg leave arpl ljmp inc jle dec mov sbb pop xor not push bound ljmp dec sbb pop out jge inc dec mov cwtl mov mov sbb push add insl or jns fldcw fwait adc popf jno lock push cld cmpps icebp xchg push push dec push mov inc movsl inc cmpsl fs mov xor mov test jns mov pop das fiaddl push push mov push repz or popf push inc add pop xor (bad) pop add add pop sub fs pop sub out push pop ret cmp mov rorb mov jecxz fadds xor les clc xchg xchg movsl enter or jmp mov sbb pop xchg sbb push and enter mov adc push pop loopne jecxz xchg rorb sti pop dec and adc js push lret mov bound xchg inc mov es aas into and (bad) mov sub dec adc mov sahf insl jnp push push imull rclb add ja and dec pop push aas cmp dec andb (bad) (bad) cmp adc pop mov mov ret imul push shrd dec outsl mov xor fcomps push loopne jl cmp movsl aam xchg pushf jbe mov and sti das push addl mov ret or push ret aas or sbb add push pop or sub jb pop pop mov jle int or add pop add lds or sbb imulb pop mulb push sub mov add pop xchg in (bad) dec mov rorl push aam lret pop sub push mov mov rcl xchg loop ffreep sub dec xorb clc mov add mov or inc pop dec push fwait mov std or mov shl xor xor push adc out sub add or dec cmc out add xor and jg or and pushf popf add in xchg cwtl sub inc add rolb repz dec jle ds push and notl iret arpl mov inc out pop or mov add std push rol and pop imul push jge test dec pusha add fisubrl mov or xchg and flds or mov (bad) je shlb jbe push lock mov test sahf nop (bad) mov imul fs jmp xor add imul xchg inc movsl gs (bad) leave mov pop xor rol loop in popf pmullw nop or add rclb dec fistpll test push (bad) lret fs scas dec pop jno jnp jns add add aad or fstps jge insb jle neg shl push in jge mov dec pop lcall sub sbb ja mov fnsave jae push iret mov push and (bad) lds or pop cmp push (bad) lock sub fsubrs push lds inc repnz mov dec cmp xchg lret xchg stos xorb popa ja push pop cmp and push std inc or adc push and pop xchg test mov mov lahf mov jno (bad) jle movsl xor std pop ds repz mov insb and shrl adc xlat mov add (bad) lds mov xor sbb cmp icebp push pop pop clc cmc sahf push in push cmpsl push dec mov subl shll bndstx push test (bad) xchg les icebp xchg bound imul xor push js sbb xchg xor pop push repz repnz leave stos in addr16 test cmp or (bad) push shll cmp inc (bad) mov negl insl dec pop rcl push (bad) cmove add jl ret leave push (bad) jbe jl pop negb jle pop push dec pushf or sub fldenv pop jecxz push push cmp cwtl dec shrb mov or xchg add xor faddl xor (bad) stos cmp xlat mov pop push divl shll repnz jmp add stc (bad) or ja negb mov (bad) sub adc jecxz xor aad mov ljmp and mov pop jp inc dec or push cmp dec jmp add mov ja les cmp add addr16 pop cwtl pop push popa mov adc lret dec sub and pop ret pop xor cmc scas repz xchg test mov and pop inc push sarb (bad) mov ds add xor add add pop ret cmp add divl add int xchg ss hlt cmpsb or into gs js or repz insb push ljmp xchg push or mov test (bad) mov mov lock lcall sub out cmp push rcrl icebp rorb cmp sub sub add in aaa mov pop cld xchg leave add divl cwtl scas test test push dec xchg mov rorl xchg jmp cmp loop xchg lret jno dec xchg mov ret (bad) mov repnz mov lds repnz push xchg test shll lahf repz nop sub in inc dec (bad) movsb int3 test push fistp xchg add out ja lret adc xor adc lret iret cli push inc cmc rolb add push mov add rolb jmp push xchg jge in or fs rclb lods jb nop in ret mov or xor and outsb in cmpsl adc sbb out sbb pop and icebp stc pop dec push aam sub push enter xor aas or xchg cmp gs mov in jae or inc mov outsb cmpsb xchg out inc out push push addr16 pop adc test or imul lret pop push lods lds push (bad) insb test and add (bad) hlt lret or ficom sarl inc mov jle xor dec cmp lret dec mov xor stos or cmp mov cwtl add pop and dec jne pop mov leave (bad) mov sbb push pop ja sahf add cmp dec jae xor jne mov mov jecxz sub and js,pt and jle out fcoms hlt ret sarb leave out mov clc lea dec (bad) jns cs xorb stos push (bad) int int3 lcall cmp repnz mov xchg ds or sbb adcb xchg lret jle push insl imul xor bound add xor push mov inc andl inc icebp push pop push je sar cmp in or pop int3 bound cmpsl imul sti sub cmc adc pusha xchg dec cs test mov pop cmp push scas xor lcall pop cld call aad mov (bad) jp sub fbld pop cmp jle mov sub sub jnp xor and daa mov and pop aaa scas jg xor add popa sub test (bad) rcrb nop mov jno test pop data16 inc cmp xchg inc ss call bound lock popa push mov (bad) fiadd out push idivb insb call xor out out pop dec out dec sub iret (bad) ljmp mov das pusha std loope outsb pop jg out sub int3 xor lret pop bound (bad) iret mov jl push testl inc cmc imul push push mov pop pop shrb loope test test mov push mov sbb jns pop adc outsb inc add jecxz lock cmp or sbb dec and xor mov arpl xor fcoms sub pop pop and (bad) sub int fcoml push mov dec add xchg push gs ljmp popa push pop imul inc cmpsl push xchg shr sarb mov mov adc je sub lea iret mov enter pop imul roll pop push dec jae sub or enter rolb mov and loopne adc call ret sub sbb loop fistpll lock dec push pop mov stc (bad) xor aaa push add leave and mov fs nop cmp mov mov das fbstp mov idivl inc shll and push clc movsl xor repz shlb (bad) (bad) (bad) cmp icebp dec es push xor test mov jp das xor xor mov sbb lock push nop mov aaa divb and cwtl dec dec popa enter mov add jae pop daa decb js clc pop push arpl test xor and enter inc or ret pop rclb loop scas xchg push mov pop cltd xor in or mov or mov xchg mov pop mov adc push or test addr16 ljmp ss mov mov cli loope mov adc shr aaa fstps ja push mov lds movsl call cltd (bad) and pop repnz mov and ret jle outsl in mov sarb test dec lods es (bad) repnz push jge cmp xchg pop (bad) pop jnp js push mov pop cmp and out pop imul test insl pop add mov pop insl push sub dec je pop in sub out in testl outsb outsl pop orl add adc add pop jp aas mov pop scas cmp cmp jg ror cmpsb sbbb ljmp bound add push ljmp mov (bad) jp or jp movups dec push cmp pop sub xchg (bad) (bad) cmp out jmp push call jmp lock enter daa pop ficomp ret int ja call mov pop pop pop dec nop scas pop cmp decl sbb dec jo (bad) mov pop mov int3 out inc in out ret cs jb int lock sbbb mov and jp lods (bad) xchg adc add mov icebp sti inc xchg leave imul cmp sti pop cmp inc sbb pop (bad) push mov lods test ret movups jnp add jmp imul leave stc jo xchg adc mov hlt insl add in push push sbb cmpsb pop insl scas cmp fsts mov icebp lret sub xchg push dec pop pop pop mov sti mov movsl sbb dec leavew inc or pop pop popf push push xchg dec daa test push in mov in push cmp lock fildl fidivr xacquire or and rcrb adc movsb cmc shlb mov stc sti cmc sbb sbb adc add and sub and loopne push jmp add sbb cmp jg sbbb inc jo sti cli in nop cmc push icebp ljmp rcll enter dec mov int sbb rcrl lods in hlt mov fisubrl rcll fdiv push mov jg sub inc push adc mov inc cmp xchg and mov out pop lret pop leave add mov xor jmp mov push jae in call paddq pop ja flds jne or repz sub cs dec add lcall and xchg add cmp je shr (bad) xchg loop sti ja insb mov lock repnz and pop sub pop movsb nop mov push push inc inc out lcall loop push sarb jg mov and les lret pop and fmuls mov test (bad) adc hlt dec jle scas neg cmp (bad) icebp ret (bad) jle test lock insb cs lahf pusha jne mov aam jbe aas les inc mov fs mov add and out inc jno sbb (bad) pop and test push insb push bound fdivs andb cmc pop add (bad) data16 inc or int cld pop mov push inc add jg mov pusha xchg inc cld and xchg and dec ljmp and xlat sti sub dec sbb xor loop test lock out jg fadd pop add add arpl sbb cmp and pop inc mov inc or adc pop and pop push push (bad) cmp adc xlat cmc repnz aam scas gs scas cwtl mov daa (bad) cmp or divl flds mov mov (bad) pop data16 rcrb pop rcl lcall sbb negl pop in dec (bad) mov pusha cmpsb push sub pop dec loopne inc push dec notl push mov sub jbe xchg pop pop pop cld roll repnz mov push dec mov and push push idivb rcr sbb in add inc push pop jnp xlat gs add (bad) fdivl pusha xchg or inc push pop mov imul daa cmpl lds and dec pop pop mov shrb cmp cwtl sub push pusha push xchg xor clc jp pop xchg push fild sub xchg (bad) pop stos test ljmp rorb cs std imul nop ss xor pop mov cmpsb fistp cmp ficom push pop pushf push add fst aas push pusha inc ftst int pop rcrl xor push pop (bad) jb out or mov int cmc add add add subl (bad) mov repz iret into mov (bad) and lods xlat add pop xchg mov dec std sub add js (bad) push out xchg pop and sub das bound add mov dec add cmp test sbb mov or fs inc or or jge and pop jb and add and jg (bad) fbstp shl leave push add (bad) xor jp mov and xor push test mov adc push xor or pop xchg pop or insb dec js or dec jb sub pop fist push hlt and dec dec arpl notb call sbb xchg push inc or or gs repnz push in dec add shll scas loopne sub push or mov sbb inc dec or mov adc jne mov sub movb sbb and (bad) add mov mov jg,pt sub xchg repz inc pop pop loopne and pop fdivl or aad inc hlt push or sub add pop pop pop rolb inc inc fistpll add mov jo add ja sbbb add stc sub or dec repz aaa inc mov or cmpsb insl add sar mov inc dec or cs jecxz arpl push lahf dec (bad) shlb push mov (bad) sti ret pop loop sar cld cmp in cs (bad) imul mov jecxz mov loop jne xor or fstps pop lea fisttpll sar sub cmp lret xchg pop xchg add jne imul cmp neg or jbe adc incl jmp adc out mov xor das outsl push shrl enter cld xor je or loop push jge xchg push cmp ljmp add roll xchg push adc xor push or sub icebp popf out sbb loopne push pop jecxz push pop pop mov xor mov jle sub scas loope push push out inc mov imul xor leave rorb push push fadd adc sbb sbb dec (bad) cwtl or mov or jnp divb sahf ds (bad) mov push mov out inc mov or rcrl push rolb cmp mov xor popf lds arpl ficompl (bad) push jnp add push mov mov adc inc cltd sub js aas inc push ljmp dec ja in xchg or sbb outsb mov fdivrl push push test and xor sbb (bad) push repnz je sbb outsl pop sbb inc das ja js or add das add jg jl jbe sti jb pop xchg xchg imul cmpsb push sarl addr16 add jmp mov outsl inc sub cmp fs rorb and inc mov jecxz pop add inc push sti lds ror call sar sub test sub faddl dec nop mul mov and repnz mov aaa inc and fisttpll push inc jbe,pt (bad) aaa neg loopne lds pop and sub in xchg test dec xchg subl rcrb ss lock comiss cmp nop xor pop or mov dec jle add push inc mov dec mov leave orb in movsl mov popf hlt or jb dec push sub rol xchg dec pop stos repz sahf lea nop in pop and fs fld mov sarl push jo (bad) pop sub adc int out mov or fdiv or push jno movsl fucomp pop jle xor std sub mov xorl inc and mov pop sti sub shll jg pop dec dec xor xchg jp sub add pop cmp movsb dec mov vmovd pop clc sub cmpsl adcb mov movl add xchg jmp add out pop xchg mov push cltd pop mov xor movsl cmpsb popa popf adc subl cltd pop gs idiv push jmp rcll push ret and dec pop addr16 mov int sbb and lds dec rcr jg add add inc add dec stos loop jae adc roll in jg xchg jecxz out dec loop push icebp jg lock bound stos xlat pop ficom push outsb and jnp lahf add ffreep das ljmp loopne pop and sub cmp mov stos xchg cmp cmpb adc dec cli or or pop ret pop mov cmp fsts cmc idiv jb xchg mov repnz pop lahf sahf xor (bad) hlt lret push push (bad) mov out adc mov pop decl ficoml stos and push shl mov dec dec add mov mov or mov ds or in imul in or inc sar push in push mov push sub lds loope cmp sub push jno test push popf mov pusha insl ret (bad) stc or add mov std out lock jb pop mov sub loope pusha or shrb or xchg xchg push clc repz add push js or cmpsl pop jg out add push mov aad add push pusha add pushf out cs sub mov adc test pusha xchg mov jecxz pop sub jecxz mov pop outsb inc mov xchg and lea ds stos outsb test mov xor sbb enter pop fidivr adc or dec push test push add loop js es jmp lret sub mov mov leave xchg cmp inc pop ret pop aad push mov mov test pop adc negl mov add mov sbb das pop ja sbb and pop dec mov and jg ret pop sub mov push or jno xor mov mov les push fimul fincstp adc pop cmp and mov test and adc into psrlq jnp push in or je jg xor adc mov mov dec int and je popa cmc jmp pop fldl push and lret popa sbb sub mov sbb idivl orl in cmp fbld je pop xchg std dec inc push sar adc mov jmp mov pusha cmp sbb sbb mov scas push (bad) sahf pop mov or pusha xlat fnstsw inc mov minps mov ja jbe scas imul sbb roll dec xor fs pop (bad) neg inc push jns sahf rcrb or mov sub mov imul pop push popf cltd jb xchg ret lock cltd jne and nop push or shl push or push dec dec mov cmp outsb fnstenv rolb pop pop pusha cs xor lret push adc nop jnp mov mov nop loop lds popa fs add sbb dec sub add rorl pop or inc mov mov sbb sub rcrb je dec jbe jb pop sbb jno fs std lds jg jo add sub sub lock jnp stos adc sti xchg push xchg int outsb xchg and or enter (bad) aam loopne ja cmc and dec mov fs cld sub add xor or negb mov mov in test sub or xor pop stc jmp adc mov lods add das mov popf cmp fistpll (bad) stos jns xor inc (bad) sub add mov xchg add sub jg mull iret inc (bad) push xchg loope xor std ds aas cmp xchg test aam test jne pusha repz lret inc xor push dec xchg outsb les pop pushf add xor adc rolb mov or xor insb or xor push push lds pusha lock lods sub negl cli scas popa pushf shl cltd fnstcw int cs les push inc xor sbb hlt or cli lock dec dec movsb je das insl cmpsb and dec xchg push inc cs add adcl sti cld mov insl xorb pusha dec add ljmp push sub (bad) jo pop stc jge jno pop mull aas daa jmp (bad) and adc jae mov lods ljmp adc xchg sub cmp mov lcall daa jp or iret and rorb sub pushf add repnz gs inc add sub pop shr dec shll popa push sahf das mov cmpsb cld xlat stc enter push in jge pop adc push decb inc pop add inc insb adc stos lea ret pop rorl sahf scas push jg mov jp lcall in lahf sahf mov in es inc push add mov xchg adc add popf mov pop pop sub add out (bad) pop pusha xchg jle repz imul ret adc clc dec (bad) loopne mov adc aad jg mov add repnz jg scas cmp lret adc loop stc ret imulb call rorb add lret cmp xor jbe jmp jb stos repnz dec sub icebp ljmp push test or xor lds jb in and cs push push inc xchg mov push pop and xor fistl je jne push mov pop sti lock cmp aas add pop out cmpsb rorb jbe inc sub stc std cs bnd push adc sbb loopne inc add es jo and popf and cmp mov or adc mov pop sbb scas xor jbe cmp pop (bad) or dec testb arpl xor (bad) loopne mov and pop or fcompl subl or addr16 (bad) icebp (bad) cld dec rolb sbb (bad) in jg dec mov jns daa adc es or test pop push lcall mov jl insl jmp jns adc into inc dec xchg imul dec js push testb repnz loope das cli aas pop cmpsb mov lods xchg or pop (bad) ss xlat mov cmp gs rolb out sahf lcall lret jecxz add adc lods out add pop (bad) xchg andb lcall (bad) popf (bad) out add inc outsl push fld int3 nop add std jl mov mov jge add jp mov adc out inc jmp (bad) sub cmc out pop or aas mov out loopne mov lock push push cltd scas add pop jl sti add (bad) ljmp adc jp adc mov ret negb repnz xchg adc shl cwtl push add dec inc out loopne sti dec aaa shrb out cmp cmc test shlb mov lock ja aas lahf mov or mov adc push push push add mov je dec add mov add hlt imul in sub jmp jne movsl or outsl sub push add imul and jb popf loope mov and shlb sti dec add add je outsl adc dec addr16 ret add cmp jnp je push pop pop mov xchg xchg jmp sbb push sti mov jge sub inc sub or mov das fmuls ljmp or or pop cmpsb sbb repnz lahf or push (bad) aas lock jle stc xor add inc mov shr adc or (bad) popw or popa inc test cwtl fstpt (bad) xchg idiv sub adc scas shll test mov or insl jl lcall xor jns fimul cmp stc or add pop push addl icebp xchg outsl lret daa add inc out jle pop jb lods call jns mov xchg adc mov sub pop (bad) pushf sub and fprem push out pop call dec cmp rcrl pop divl adc cmp das fwait movsl pop popa add add add mov push cmpxchg jge mov (bad) adc add cmp sub enter mov xchg or ficom push add add (bad) scas idivl aam adc mov aam sarb mov add and (bad) pop hlt iret add fnop push test jge jge mov fchs in arpl jns mov pop repnz (bad) xor ljmp adc lods pop push ss test sbb bound mov mov xchg in shr test or jmp cvtpi2ps mov movsl sbb dec sbbb sub push dec adc mov mov sub scas cmpsb divb mov les mov inc insb mov (bad) push adc (bad) xor sbb fninit imul int3 (bad) mov lahf pop fcmovb clc nop pop (bad) faddl adc movsb mov adc xor pop push adc xchg xchg xchg pop push cmpsl (bad) pop sub ret adcb cmp pop mov out (bad) icebp sti popa je xor mov add pop mov (bad) xor (bad) jb mov sub fistpll enter movsl xchg arpl push inc sub push test adc inc pop test enter out pop loop pusha jecxz rcll out jecxz outsl inc (bad) loop ljmp dec xchg lods idivl (bad) mov jb add mov dec inc loope roll pop push lock inc dec push subb mov xchg ret add jmp sub cmp xchg testb and scas sub push das push push fnsaves jns xor pop in sub mov pop into test icebp faddp dec mov sbb popa cld bswap push cmp sbb push cmc outsl test or adc daa loopne dec mov sub aad adc outsl movsb mov cmp jnp lret cmp enter das (bad) outsb cwtl hlt mov stc test sbb add pop jl popa outsb or sub xor and aaa sub negl xchg push sti cli mov pop push leave jp or dec ret (bad) loopne cmpsl imul cltd fisubrl sub push pop movl add xor addl xchg xchg out jmp int3 negb adc int push push push pop imul lahf adc sbb pop cwtl or faddl ljmp (bad) pushl negb jns ljmp clc pop pop lock rcrb inc into loopne and icebp js add aam addb sub add dec add hlt in mov add or mov inc mov and addr16 cmp jbe push mov mov nop and jg decb xchg aam lds cmpl jp lea inc (bad) sub aad add add outsb jne fsubs jge addr16 cmp add inc jge mov aaa das inc jmp or sub xchg add cmpb addr16 jnp xor dec fadds xor sbb cmp mov jb or push jp mov xor aaa dec imul push push (bad) inc or les sub jmp cmp sti popf pusha outsl test or xor push sub ja in xor sub dec adc mov sbb jp push mov in add xchg mov or iret pop les pop aad repz cmp xchg rol mov jmp jecxz bound repz fbld popf fsts sbb js mulb ja dec or or jnp (bad) pop in jnp pop stos iret push outsl das out ja fwait xor addr16 dec push out sar mov popl jnp popf sbb pop cmp mov mov insl dec in add out jge jo dec (bad) and mov or movsb fs pushf in and cmp adc jecxz inc shr das push mov hlt adc pop cmp fistp add mov fiaddl xchg xchg pop (bad) insb lds loope hlt dec mov or movsl pop movsl sub imul fmull cs out sti jle in mov dec std dec arpl icebp das adc or push sub and sub pop pop push mov lahf push mov in pop or les in add outsl neg dec jge xchg jg mov sbb jmp xchg push daa stos popl add pop mov (bad) clc (bad) out sub pop out sub mov imull mov aam add in insl jmp dec imul xor repz lret sbb pop cwtl jecxz loop mulb aas pop add mov ljmp add sub aas dec stos add xor in loope int outsb mov dec or std pop pop jecxz fdiv lahf negl mov (bad) adc jg or sarl xchg ss pusha or or sbb sbb mov push into or lret add test add inc mov push sahf or mov jnp mov sbb xchg xor sub stos sub rorl mov outsl cli mov je or push push push arpl insb sub shrb pop and and xchg pop inc push jbe add movsb jg push mov or push rol les aas insb lock mov (bad) or cmp imul (bad) bound xlat test push jmp inc inc xor inc push cmp (bad) lcall incb shlb add cli jns out jmp sub adc hlt and pop inc inc (bad) mov in add pop pusha dec adc push dec addr16 inc sar sub dec xorb ficompl xor (bad) push or aad dec (bad) or mov and lds inc sbb add pop push testl add sub xchg pop dec add out pop xor cmp dec push repnz in imul pop scas lcall cmp dec fs fsubrs pop mov and jle add lods lds sub (bad) pop repnz icebp std jno fs dec pop repnz mov jle aas lret (bad) loope lods pusha cmp ja pop sub pushl dec mov push or loopne adc adc in or sti jg pop popf mov push pop push shrl sub add ss jge aam xchg adc add pop push shll dec test insb lds in mov pop mov popa xorb fnop push ss inc imul pop dec pop int3 push mov sub push into jge shr leave push xchg push dec mov and addr16 pusha lea cmp xor fadd andb movsb cmpsl sbb cs push outsb clc decl adc idiv call cld stc jge pusha ret aam add or pop push cs cmpb sti adc jmp xchg and fsubs wrmsr pop bound clc push popa add mov ja insl ret pop pop dec push mov out jg push (bad) into xor dec mov cmp dec insb movsb push das mov push and add int3 test dec inc incl mov dec clc xor xchg mov xor add mov add cltd xchg cmp pop mov adc outsl push jae repnz mov or (bad) adc sbb sti test loopne push xchg (bad) push mov add or mov pop xchg add loope jb nop adc xchg sub mov mov jl adc pusha popa (bad) xor or out push inc ss out mov xlat not inc or mov adc lds jbe (bad) mov je mov decb hlt add pop (bad) pop mov jg add pop shrb or push cmp push push cmc jnp,pt push cltd add mov and inc or lea mov adc scas cmpsl sbb jg jl mov xchg push je cs xor outsl mov popa pusha data16 and jmp cmpsl and in inc cmp sub aas out daa pop pop adc jae xlat iret and mov mov mov sub rorl roll and push inc inc adcb inc cmpsl inc sub pop loope push inc cmc push lahf rol lods push fimull ds lock pop pop xor pop adc push out sub pop cmp cli rorb std adc pop push and test add mov nop insb jb jo js cwtl dec pop dec xchg mov jne mov mov adc ret mov fcoml mov jae or adc js sub push dec push push aaa or sub sub mov cmp sub pop nop dec push clc sahf xchg cli xor stos mov or lahf xchg add dec cmc imul jnp jg rorb stos adc pop jmp dec cmp xor je outsb inc and mov jl out or pop and test jo jmp cmp xchg adc addl jbe pusha addr16 jp out mov mov aas push das jg mov jnp sub cmc cmp pop negl xor cwtl fimul add push sbbl jno jb cs and mov lock add inc loop fadd insb jge jnp mov jne push fcomps mov pop jl nop jp adc push es in imul sbb ficoml xchg lcall lret mov fsts and daa daa push jmp mov lret or push push jle and adc popa mov daa dec mov dec cld pop pop cmc call pop roll push lds add sub mov imul faddl aad pop jmp pop pop pop outsl dec cld cmpsb inc or and jmp repnz dec sti test jg xor xor mov notl cmp push mov add push sbb push (bad) aad sarl or inc lock xor lret sbb dec sahf sti outsl add mov mov dec (bad) les and cmp fisttp nop xchg add xor and fcoms inc shl adcb mov add jg add sub cmp jge sbb add mov icebp test fisubr push cmpsl push outsl add push mov push pop add scas xchg out shr int3 pop sub (bad) adc add in adcb mov mov cwtl or jp pop pop jnp push mov add (bad) mov cli add add and or clc iret pop ret pop popf jo adc ret cld (bad) xor xor add xchg adc xor fimull in or and push inc (bad) out hlt mov pop xor mov out dec push test in pusha jmp mov sub adc inc sbb outsb das add ret cmpsl (bad) cmp loop push pushf out add mov repnz xor es std cmpsl push jb in scas scas loope loope fninit pop out popa jmp into movsb out iret stc add push fistl push popa icebp jecxz lret pop sub mulb nop xchg out loope fcoml nop cs ficomp scas insl fs add adc jb sub sub fwait cmp lods aam dec dec (bad) xchg push inc xchg shlb out sbb dec pop fadds mov mov and in (bad) cs jg push sti (bad) cmp lahf and sti sbb in movsl inc add sub pop cmc leave add dec icebp mov or push mov test dec scas scas dec push mov fsubrp sub or pop insb push add push xchg add jne clc gs mov xor aam loopne add rcrl cmpsl pop push not scas or xlat dec mov pop mov data16 lock repnz mov (bad) cwtl inc in jnp jo pop push int3 int3 add mov push pop (bad) fdivrl sub movsb imul mov xor pop mov add test push push pop loope imul push pop lcall ficom mov inc mov lods or (bad) mov js mov (bad) cmp and pop xor pop adc mov sbb jbe gs push mov lahf pop push clc aas test (bad) mov xor hlt mov arpl fildll loopne push pop sub jnp test push ret xor jp dec test xlat or cld sahf ret jl in mov outsl xor jle push andl dec std lahf in sbb push jmp add push inc jbe and jge in sub xchg sub push push or (bad) fcoms and pop cltd mov scas jne mov outsl cltd mov and or test (bad) divl cmp pop push or cmp or sub les pushf (bad) (bad) inc jnp ljmp sbb jg sti (bad) sub repz (bad) sub imul or cmp and pop push (bad) and adc stos mov adc sub or mov cmp add inc mov fs mov out pop fsubl lock adcb incl imul sbb insl pusha jge popa or xchg cltd fidivr or lds in cmp or adc xchg gs icebp fisubr adc repz push lods jecxz jg repz popa addr16 push (bad) mull jg inc or (bad) fstl sub push (bad) int repnz and push fildl cmp cs popf jns dec jl movsl adc lahf xchg add dec adc pop mov fadds andb jg (bad) and sub xchg pop loope in stos jle leave scas mov das aas dec rclb mov or add stos andl subb jnp pop cwtl cmpsb mov or sbb mov in (bad) add cmp cmc sbb out ljmp adc cli test cmpsb sbb leave (bad) push sub mov push fisttpl cmpl jmp outsl (bad) sbb or fdiv jle mov pusha fadds jge xchg pop or dec sub inc push add mov les push dec js xor mov jp cmp push add inc nop clc mov (bad) jno adc xlat jge mov ret lcall cs sub sub cwtl or pop push rcll jg jl addl ja (bad) lock movsl or mov adc sub int3 push arpl pop pop push xchg pop sub push push cmp fsubs (bad) pop andb pop aaa xorb gs adc xor cmpsb cmpl int3 ds adc incl mov and pop sbb out jns (bad) icebp cmp (bad) je adc dec push and mul jae,pn (bad) xchg dec inc push jg out pop sbb xor pop popf mov jbe cmc push cmp in add mov sbbl in or shl mov cmp aam test pop cld or test xchg sarb outsb sbbb outsl fisttpl test addl js in out or or lock add mov dec repz sub and popf mov or jo daa dec xor fwait cmp jno fsubrs xchg mov mov xchg xchg push sub or mov hlt fstl inc push (bad) and mov mov pusha dec jno lods sti jno push inc add aaa aas and add jnp inc mov movsb fs push mov pop push dec call pop adc mov mov (bad) push loopne mov cmc and dec (bad) xor rcl dec jno push pop popa dec and pop xchg or int3 xchg and int3 outsl fimull and sub jp incb imul xor or rolb sbb adc outsb cmpsb add push mov rorb xor loopne pop xor lcall mov cmp nop xor or mov ret push stc and inc ja inc or movsl fadds cmc psadbw and jb pop and mov shll xor int3 sub addr16 daa pop outsl mov inc shr inc xchg jl mov xor xor daa mov jns inc cmc pop pop mov hlt mov pop ret adc daa pop ljmp pop cltd lcall ja negb lahf jnp push stc jmp or xor ficom push jb dec pop jle aad dec js fstpl cmp sub push repnz cmp pop ljmp inc sbb jnp sub xor jp dec push repnz pop rclb jmp test pop jnp and jl or cld xor mov dec movb or inc add repz dec cmp mov aas test dec add das sbb ret xor and lsl mov pop cmp push jg push cmpsb mov push sar cmpl sbb mov sbb mov lret sbb xchg xor gs xchg pop hlt sub or mov push push int3 push movl cs pop daa (bad) es xchg (bad) mov loope mov pop xchg xchg sbbl mov mov test loope rolb iret cmp mov pop cmp push es les jnp and xchg arpl push add cmp lods gs mov jo (bad) fadds movzwl and aas or fnstenv add std aas enter push add sbb andb iret sub xor or add mov (bad) (bad) cli and (bad) cmp and mov aam add xchg xchg (bad) dec stos cvtps2pd cmp out push mov mov ja adc stos out dec cmp out test (bad) icebp stos xor fisubl notl rcrb imul jns push cmp cs xor fwait mov adc fs test cld jnp mov movb push sub fcompl adc rorb shlb sub jb pminsw lds dec jge or lock shr cmpsl bound rorb lret or enter pop push mov imull or and aaa cmp test sbb pop or loopne cmp out push inc mov pop dec xchg or push push add call insb add mov in cmpsb xchg andb out jge jl pop bound add adc popf mov and mov aad push mov or inc cltd (bad) mov dec mov push pop cmp dec rorb outsb insl sbb leave lock shlb pusha daa mov in mov inc dec out jg ret out (bad) push mov insl inc sub ja (bad) mov or daa fcmovnbe and inc xor (bad) out or cmp mov mov and mov push icebp clc pop fwait imul sbb push and push mov mov or daa cmpsl pop cs scas insl add and mov sub imul adc loope,pn aas pop stos lahf addr16 call ljmp (bad) test mov add adcb xchg loop out sbb outsl scas xor lock add div inc ret sub jp (bad) sub adc fidivr ret js dec jge int inc mov sub adc sub cmp pusha mov or xchg lea insb stos sbb scas fisttpll pop push inc mov pop push xchg ret mov add (bad) mulb (bad) jp mov pop cmpsb (bad) arpl mov test sub cwtl add or and push sarb stos add orb dec xchg inc push inc cld push cmpsl leave sub loopne inc mov or push je mov inc push or jo mov xor adcl iret hlt mov ss les loopne inc in inc cmp cmpxchg8b (bad) lret or sub push and pop push inc adc (bad) sub sahf push or dec rcrb loopne adc mov xchg ss (bad) jp jmp push jno scas xor inc and cmc daa or xchg shll mov cmp sub mov jmp outsl adc jg data16 mov (bad) daa std add fildl lcall sub rcrl mov pop jg aad sbb cld sub add sub dec not add push aam ret cltd ja (bad) and pop fcoml hlt pop jmp inc push repnz push pop aas rolb sub fimull or or sub dec dec jne imul pop inc lock outsb adc pushf sub packssdw xchg adc add cmp ja jae nop cmpsb cli out jmp xor (bad) xadd inc mov jnp or pop xor jnp sub mov fwait stc sub add repnz loope mov pop inc mov out push cmpsb popa je lds orb in push mov loopne pop pop mov xor dec jne jns push dec and gs mov lds push push dec mov adc sti xor mov outsl sarl pop pop push mov add test cmpb sub push inc mov in mov adc icebp or je sub jnp and shr xchg push add push xor push sub adcl add or outsl sub push or mov pop add test test sarb and sub aad icebp pop aam inc outsb sub cmp test add and adc push movb push or adc pop cmpsl and push xor xchg nop sub or add sarb call rol insb fidivr xor adc xor mov imul and pop jmp ds push push push lock cmp clc inc fstpl pop mov pop std mov add cmp dec jp cmc jecxz fdivrs mov sub pop adc fs ret popa push daa aaa push mov sbb pop or jmp lret mov jbe sub mov inc adc fldenv adc outsb cmpsl lcall jp adc fwait mov push xor push jle or inc cmp add push push add xchg mov add loope dec out sbb inc add mov hlt cmc inc pop jmp jb addr16 dec cmp (bad) jl pop hlt pushf sub imul adc rcrb lret int3 mov mov das sub jo jne imul lcall enter daa mov aas or adc sti xor push fimul sbb jle lahf mov dec shl ficomp test (bad) xlat rorb or push out pop mov inc mov mov imul dec sbb (bad) lods push xchg inc mov pusha movsl jb fisttp test pop nop jp,pt in dec sbb imul adc or pop pop ljmp dec adc jmp add test xchg adc jnp dec inc mov mov or jne push xchg jmp xor jae repz aas add insb in insl or adc or js pop or or or xchg and or sti call jle mov inc cli je jne and pop adc add or mov ja js jns mov sub sub sbb dec cmp loop sysret xchg adc pop and xchg pop mov adc adc stos jb xchg cmp (bad) ljmp lret push aas inc push xchg add cmpsb subb mov into scas test add add (bad) mov jmp mov std aam mov or call cmp or mov scas jne xor rorb pusha jecxz cs jge test scas add and push xor sbb test and dec pop mov lahf pop ret das jae cmp push mov das leave mov lds out or push push (bad) jno jmp sbb add faddl or inc mov dec add aas iret sub and mov cld mov mov push pop push (bad) or stos add inc jp aaa pusha push loop es xchg add xchg mov mov hlt inc ret mov cmpsl sbb subb in mov mov cmp mov lds xchg cmp cld add mov loop jb in fs xchg in xor cmp sub neg inc movl call out loopne adc add (bad) ror lock stos lret (bad) enter in xor mov incb pushf negl mov ds xchg clc lods nop or mov jo mov cwtl test pop outsl xchg aaa jge jmp sti jg out popf push adcl push out xchg dec and mov xchg dec scas xor lods mov pop xor sbb mov jnp ds mov imul loope xlat cmp add push (bad) fisttp jge push scas cmp sbbb cltd pop pusha int3 or adc pusha or lahf mov cmp aam add outsl dec adcb jecxz pop xchg shlb pop or mov test fadds add inc cwtl jno or pop xor imul pop jge (bad) imulb push adc adc dec dec sub xchg push xlat ja xchg inc sbbl adc loope push jg inc add push pop jnp cltd push rorl or push or and (bad) jb outsl jg mov sti cmp sahf sub push add es test stc dec hlt ds stos xor pusha xchg push (bad) and leave pop adc sti dec mov gs sti dec xorl pop pop popa push push pop adc rclb sub icebp fisub (bad) mov push push pop pop sub push inc outsl push adc push nop clc jae dec (bad) xor adc add mov add add frstor (bad) sub jle add subb add pusha mov call sbb xchg out add repz mov (bad) hlt (bad) xor dec jg fstpt enter mov jg inc push pop cld lahf xor adc push adc push stos and in sub fnsave push dec test in outsl push lods cmp adc jne fisubr or jne push mov imul xchg icebp push xor adc mov ss or mov aad dec and and sub stos popa push das add into mov push insl add stos dec ljmp addr16 dec mov (bad) pop cmp xchg or fistpll pop imul jo xor xchg xor pop pop jmp xor stc mov pop push mov jmp fldenv inc (bad) lods cmp gs cmc mov aam mov push cs leave sub jo orb or push lahf push (bad) sbb xor sbb push xor push adc test dec scas jmp jg decl or in mov and mov std and or jle push and jge push aam pop xchg imul add sbb jge jp orl pop push sbb push (bad) mov mov jae and xchg adc rorl sub jecxz add cmp addr16 and scas pushl inc scas ret jae dec lock sbb (bad) scas enter sbb in add inc fwait ds push sbb jno adc jp scas inc fdivrp push add movsb loope jle loop mov dec add mov popl outsl pop mov loopne loopne pop xlat ds push inc and add jg subb sahf dec push mull int push cmc popf push and js mov clc fsubl les faddl das add adc push inc sub push (bad) pop test dec testb or jb and jno andl cmp cltd std test sbb mov lods mov pop jno push mov xchg jo in scas nop inc loope mov lea xchg mov jae add stc dec jnp or or test movsb loope and sub pop mov dec repnz (bad) mov dec int push dec push sub jl loopne xchg xchg out negl or xchg pop mov ss stos mov scas sbb decl loop xor mov sysret lret adc (bad) sti push pusha fsub aas hlt outsb mov push cmpsl hlt dec pop add or pop cmp sti jg adc in (bad) movl imul sbb (bad) mov or (bad) lock test dec mov lods push mov roll lea xlat jge or pop and bound dec cmc jnp repz jb push jns in scas mov (bad) xchg adc sti jns test pop or dec scas pop jg aam push jmp loope cmp out fucomp fldt inc (bad) sub and add sbb pop jns nop mov scas lahf shlb sub pop jg std inc aaa not and jmp adc adc repnz loopne xchg enter xor push push push push pop dec xor js xchg xchg rcll add xor add call sbb int3 neg adc sub jg (bad) ss xchg rol daa sbb inc shl insl sbb lret cmp stos adc xchg mov xor push push pop les sub pop es pop das xchg jmp lret add sarl push push sbb jb sub lcall push insl dec popa or cmc and mov sbb pop (bad) jmp xchg xchg (bad) push call mov ljmp inc and bnd fistpl push stos cmpsl and rcll (bad) push inc idivl inc pop out cmp jb orl fnop and daa pop xchg and pop sub add jp (bad) int3 je and fbstp inc movl xchg pop das ljmp jl jae add iret das pusha stc aad mov xchg xchg (bad) push sub out outsl rcrl sti daa add lock arpl push dec insb das sub insb add dec jb add sub fild insl mov packssdw dec add jg pop mov mov sbb roll push sub push jg dec aad jge sub sbb pop add popa mov jae sbb leave mov add fnstsw imul add jg ficoml ljmp jle or int test addb add sub or pop inc js mov pop push xchg imul rcrl and add add mov or sbb pusha push into out cld call add test leave xchg fcoml xor mov push incl jmp xor rcll repnz sti mov cmp cmc pop ret popa (bad) ja aam or pop aam (bad) test pusha ja jmp and aad xor adc add mov hlt (bad) pop cld xor fisttpll lea inc xor push les insb xlat nop xor addl sub jnp in pop inc sub cmp fstl (bad) xlat in (bad) negl js push fisttp cmp loope xchg push stos cs das repz das loop imul xchg and mov (bad) into push push mov add inc adc lea bswap xchg ja loopne adc idivl (bad) rorb sbb aas dec inc mov out popf dec sub pop in jmp and xor mov add cli inc loop,pt jecxz xor or aad insl xor hlt adc lahf (bad) stc movsb sub pop cmp push pop xchg push stos imul push jmp shlb jle sub outsl add jge pop call mov ja fnstcw add dec pusha sbb aaa es jge add fwait pop jae sbb int3 adc mov sbbl orl cld mov add mov dec sbb push jg and push add fstpt lret lret imul fistpl fbld lock addl jge lret cmp shll mov add jmp ss xor loop push and cld pop ret hlt sub push pop test pop clc sbb gs ljmp ret push rclb sarb test stos mov cwtl fsubr dec sub mov sub enter adc adc in in sbb lods and pop xor and add loop insb mov cmp dec inc mov cmp or scas mov pop sub mov shrb cmc dec mov sub lods test or ds xchg test push scas jns lret add lods inc pop je pop test mov in loopne lret mov push nop inc imulb sahf gs add dec pop lods sub int mov dec xchg jbe movsb or xor leave push add xor lcall sbb aas test enter les xor pop mov push lods (bad) jno loop decb fdivrs jae jmp testl andl xchg push cmovnp push stc sahf cli add icebp (bad) out lock add jmp add xchg es adc scas jmp mov int testl mov jmp fstpt ret les add inc and adc inc push repnz jbe nop fwait orb add cmc lret inc mov jae push adc (bad) xchg call push sub (bad) (bad) mov cld lods pop xchg push push push cmpsl or add jp mov sub sarb xor pop and repnz pop popf and ret mov pop or punpcklwd jg rcr das fidivr (bad) fidiv (bad) pop fdivl mov push popf jg push pop in into out ljmp (bad) xor aas push or xor xor or or push push pop inc pop int3 sub mov mov cmpsl add icebp jbe cmc sbb and mov test nop dec jae xchg pop and inc (bad) stos jb push int3 ret adc loopne jp add xor and (bad) fcomps jne sub (bad) xor cmpsl inc rorb sbb daa xchg jmp dec inc add add or cmp xor dec push cld add (bad) cmp es dec bound call testl in mov push mov incb dec jp jle outsl cmp cltd repz das lcall lret pop and pushf imull lods dec pop add push cwtl dec push sbb call scas add out lds add jmp orl adc inc pop add add cmp out mov add adc in adc test mov daa and ja mov cmp pop or cwtl (bad) add or repnz in cmpsl iret je imul pop cs ret sbb test popf xchg ss push mov dec in xor xor cmp ret repnz mov shrb outsb sub and pop rclb jbe inc (bad) jmp xor (bad) sub ret in pop dec cmp and mov sbb fldenv push lcall push jmp sti inc decl pop aaa xchg arpl or loop sub inc xchg gs adc (bad) xchg add dec mov sub lds add (bad) fidivr ret xor dec inc xchg es pop dec add clc jb js movsl lds adcl dec sarl xchg jnp adc xchg cmc ficompl push aaa je jp shl mov icebp lret fs sti jp cwtl push add nop or pop cli jbe or cld aas mov mov sub inc xchg mov push sub dec and es idivl out dec add sbb negl mov xchg movsl mov test cmp add push mov fildl movsl xchg cmp sbb xor mov out add std cmp mov push int imul out insl jmp or add cmpsb mov xor adc push stc fyl2xp1 push jle outsl nop add fwait outsl push push or xorl adc aas push fiadd stos shlb repnz dec dec xorl scas cs scas enter add sub mov or and sub ret jecxz push push mov aad or inc and push sub test pop push xchg xor insb pop cmpsl jo jbe pop jae xor insl sarb push and push jl popa xchg push push add jle rorb out fnop mov push addr16 fstl or movsl jg pop sahf mov push push jp lods loopne mov mov addr16 jbe pop out push adc bound not cmp loop stos ss (bad) jl mov adc int aas xchg xchg in scas nop or push pop jo mov jg push les das js sbb das idivb pop into jns dec cwtl nop sub cmpsl pop jle cmp or int sub xchg push fnop add sub ds inc pop pop push cmp dec or in (bad) adc loop movsb mov pop add xchg push sbb jg jp or push sti insl fsubs add outsb add sub mov add cmp ds nop mov push mov push cmp popf jns insl test test pop xor xchg or jg jnp and cs cld cmp fwait aaa xor mov xor xor cld lods and ljmp les add (bad) outsb push mov insl mov pop inc into pusha cmp push xlat inc and pop popa outsl (bad) ljmp inc fnsetpm(287 inc aad lock lock cmp xor in in xchg shlb movsb pop imul adc mov add adc cmp shr jg addl xor outsb in stos (bad) add repnz and mov icebp lret pop xor cmc cmpsb or pop add inc pop subl pop faddp and jno imul mov mov push add add sub pop daa flds jmp or inc cmp iret shrl pop dec push pop add add push shrl adc shrb scas in push popf gs lods call iret cmpsl add call ja xor sbbl pusha addr16 arpl xchg or xor mov xchg fcompl mov push pop and dec pop mov dec mov aad fistl pop inc xor ffree dec pop add decl cmp mov rcrb mov pop (bad) add push cmp movsl jo aas add outsl sub sub sub pop add push push stos dec sub add add sbb loope mov inc and and sub xorb or xchg and mov fadd ljmp sub lds push inc adc jmp cmp pop xor push inc pop pop sti dec xchg push inc in mov rcr mov mov cmpsl jg int3 sub daa (bad) jle mov adc pop mov mov xchg pop daa mov push orl and add mov leave ljmp mov leave rolb dec pop add (bad) xor ja push add jne dec pusha adc inc in xchg sub xchg dec in popa lahf cs xchg mov test sub push cmp gs addr16 push rcrb imul in loope js add xor lahf nop imul fldt dec sub push aam add xchg or int3 add cmpsl test pop adc xor sarl dec jle inc inc ret pop cmc scas push dec add mov mov shrl lahf pop (bad) dec les lods xchg es push push push cmpsl out xchg push rclb mov dec cmp lret in xor scas clc ja lods push pop pop loopne mov int3 and pop sbbb loopne lods dec test aam ds inc or pop xchg (bad) and xorl andb pop pop fs jns,pt fldcw je les pop cmp divb jne and fild adc pop movsl push mov int3 loopne cmp adc call xlat mov in add sbb inc cvtps2pi push mov div pop mov fild push das fsubl pop repz divb jbe outsb loope lock jl mov sub out and add xchg aad dec inc push xchg sbb loope fild dec fnop cmpsl add out push sbb dec jae add mov pop lret inc stos pop pushf sbb jo mov ljmp dec ljmp xchg outsl punpcklbw add (bad) addr16 stos and shll sarb hlt inc jmp cwtl sub or (bad) stc pop cmpsb pop or mov or loope lds push lods inc jo aaa dec jns dec mov or es mov or andps or jge cld push jns dec dec stos cmp or xchg adc jb (bad) fmulp pop mov lods mov fcomip xrelease shl mov out sub ret sbb imul jbe icebp jecxz push fldl ret pusha aaa push add xlat aas add push mov pop inc adc lret mov pushl mov add xor fsubr or out sub jge rcll cmp aad mov fbld pop push push push nop out inc pop cwtl add lahf popa outsl ret rorb aaa ret orl xor pop push int (bad) sub push or sbbl call mov jp add sub (bad) xchg outsb or aas jns mov cmp push xchg std and sti jle xlat add mov pop cwtl mov mov or pop xchg ret mov xchg les scas cmpsb ja cmpsb mov add and call scas pop add pop aaa andl jp add push loope lock je ljmp sub (bad) loop xchg jmp mov arpl test push mov xchg loop jle repnz nop pusha xor idivb push cmp and sub mov sub jecxz shr sub dec push adc dec mov cmp ja mov mov and pop mov mov mov enter xchg fidivrl add into stc mov jp add jne xchg pushf arpl push faddl ja mov add (bad) sub das rcrb fimul loopne loop lahf cmpsb std jle es repnz std add dec mov adc mov loope rolb and mov fildll add call jnp push sub and dec pop in mov jg push stc mov xor push sbb (bad) mov cld dec cmp addr16 rcrl je shr sbb adc add adc or jns add leave sbb pop sub cli loope sbbl out adc cli call cwtl stos je adc jle cld pop dec sbb out (bad) test cmpb test add fild push and jg mov mov scas imul leave sub adc les rolb in mov add mov mov mov mov test mov adc jnp mov ja int3 xor enter clc stos ret notl imul sub dec xchg add sub movsb sahf sub lcall add add xor jmp sahf negl or bswap pop out adc jbe add and rclb and cmp or push add mov and cmp gs mov jmp adc xchg repz test lods icebp hlt scas cltd ret and das sub pop add push jle ja faddl dec ljmp in mov imul cld or mov lcall scas inc imul bound or mov hlt mov mov sub ds xlat mov sti sbb lahf xor test mov mov and nop ret jb aas scas sub adc jl and imul fcoml lret imul and jmp mov dec roll shll fnstsw add ljmp stos nop ds mov mov sub ljmp jg rcrb xchg and out mov mov add pop adc adc or jne mov jbe dec mov mov add clc xor add hlt jmp arpl imul pop push add adc push movsb inc push adc outsl mov in mov push and das cmpsl dec mov and dec xor loopne dec sbb sub ljmp or jge mov add sub test loop sub dec out cmpsl mov (bad) mov and jae (bad) push das xchg roll cmp imul mov xchg xchg pop loope mov jp in push cmc int3 pop mov add adc push push or push push push add fnsave outsb movsb cmp cmp ret and fistpl fimull mov pop lret pop mov add das jg mov cmp add mov mov add sarl popf es cmp and inc sbb pop sarb gs pusha outsb (bad) push push jae mov enter or outsl pop xor or add test mov mov fcompl sub clc push adc test (bad) jo and or xchg adc jns je or mov push push xchg xor cmp adc dec dec pop stc jecxz add sub push sub adc into xchg leave hlt cmp add mov test push adc mov inc sbb and ret fsubl mov add in dec push mov add lea call add jnp leave in test sub add fild scas fs cmp xchg add jg testl mov jnp mov and js dec in push pop mov fs fldenv pop ljmp push pop mov xchg push cmp jmp adc pop (bad) pusha xchg sub mov sarb or add mov fistpl pop push enter mov jg ret mov or scas mov mov das test pop ds dec pop sahf mov add mov mov xchg adc push rcrl jp hlt push mov xchg movsb inc idivl cmpsb sbb or xor mov mov hlt mov jp inc mov xchg cmpl pushf dec das dec dec xor mov (bad) jne lods jae sub dec stc pop pop loop dec jmp push js stc mov sbb arpl pop sub rolb dec shlb push mov cltd xor or test inc jle cwtl and sub ds or push add das add pusha sub mov xchg add repnz or inc fs mov dec mov and pusha pop push mov mov pop xchg pop pop call arpl incl cmc mov and mov cmp jns dec lret mov addb or mov adc xchg dec dec cmp rcrb inc or pop or adc or sub (bad) adc xor roll rcll sbb and daa mov push mov (bad) in in lds inc or std outsl inc mov inc addr16 ja mov and popf lods dec shrb dec mov cmp xchg jg,pt das es ja mov cmpsl jns sbb add insb xor add rolb mov inc div rolb jg pop jl push mov mov pop dec inc shlb iret or sub pop sbb imul cmp mov in test subl (bad) hlt push inc mov mov fisttp mov adc xchg jb jns jne inc pop fstps cmp push inc xchg mov out xor data16 jl add cwtl xchg mov mov scas sub and dec cld pop outsb movsb mov jp add jbe push pop pop jp mov aaa neg cld add or and enter daa add sbb (bad) fidivrl add xchg mov mov popf sti dec add and add pop pop push cmp in inc loopne jmp rorl jae stc (bad) jae stos and in aas (bad) mov in ss shrb or into (bad) adc lock push mov fnstenv mov sbb mov int jbe pop nop cmp inc and nop pop xchg not pop push aam pop into xor decl sub jg mov in xor cltd inc push pop push pop mov mov cli std push icebp or pop push inc cs enter dec gs stos push test add (bad) cmc jne inc mov push jg mov xor xor mov xlat mov imul mov push inc mov mov maskmovq divl jnp call adcl lret add (bad) pop stc sub fisttpl sti movsb add test mov fsub dec adc adcl xor jg decb push mov loop lret cmpsb add push ss inc mov sub sarb (bad) js test lret sub out push out xlat pop pop int3 test xchg or or sub xor sti mov pusha mov icebp add push mov add repz aad jmp cmp icebp add jns sub nop fpatan push jg pushf mov icebp pushl mov pusha lea insb push (bad) je mov mov sti stc xor dec test mov iret rol mov clc pop lods cmp sub ss and mov pop movsb aad aas not pushf xchg add jns sub js lods out adc xchg inc or loopne pop xchg jl push push in mov repnz inc push (bad) dec shlb pushf scas pop mov jo ret cltd adc rol test popa jg mov sub cmpb aam shll sub repz (bad) out jns rcl test pop add or sti jo test xor sahf enter inc sbb iret jo in pop add (bad) aam dec and xor in js adc mov sarb stos mov xor add fwait and test add test sub jno xchg add cs push mov xlat push sbb iret adc push xor pop sub outsl add scas stos ret xchg dec inc or mov jae cli mov out punpckhdq xchg or jg dec sbb or clc aas es or lret jbe div lret cmpsb mov cltd inc pop push push dec imul push das aad mov (bad) cmp sub mov and jp dec add lret rorl or dec cltd inc cmp lcall daa sbb jmp pop pop mov jnp xor cwtl xchg mov adc dec push xchg cmpsl aas in xchg ljmp dec add pop or cli add mov popf das sahf pop push sub add imul xchg (bad) jns imul lret in (bad) aas cmp lock xor inc add inc das (bad) ret test imul mov out xchg push bnd out or ljmp cld or fstpt mov inc mov repnz jno lcall pop call mov orb out jns (bad) mov add lcall add mov test mov nop push sbb aam inc sbb stc xor andps mov ljmp (bad) enter inc xchg (bad) das add aaa add xchg shrb add push push mov ljmp (bad) or push das psraw xor (bad) pop or pop ret (bad) aaa sub int3 mov mov repnz xlat loopne ljmp loop push mov push divb out add popf xchg adc jbe dec sub pop mov push ret in sub push sahf adc ror jae sbb push pop push sarb clc in xchg cmp mov jnp dec aad in push xor sub ljmp add xor pusha fdivp lahf fnstenv sub push add (bad) jb idivl push pop out mov dec inc subb lcall push or cmp fbstp in cmc or inc outsl xor add hlt xchg jp xchg cmpl jg mov add pop xor ljmp fldcw xor and jge lahf mov sti pop xor sbb xor add jno jp xchg xchg pop in mov jmp int3 ja and inc pop icebp adc add cmp dec xor mov addr16 stos add mov bnd adc out mov add and pop xor nop iret add sub add popf sbb (bad) iret ja pop pop lods mov xor dec add sarb add (bad) xor pop mov out lahf jp mov mov push stos repnz push scas cltd insl xor xchg mov or pop ja mov popf (bad) push lcall (bad) mov mov repnz repz mov ja mov mov add hlt dec push mov xchg sub fstps push push cli add mov stos cltd push insl test pop jp pop int das add jmp pop push clc not cld das push lds cmpb or aad loope xchg add cld xor sarb push leave and add push aas add and in jle testb xchg jg add inc push cmp mov push xchg add dec add mov adc cld out pop in inc sahf (bad) mov pop (bad) lret mov aas sahf add inc or lods aas call push xchg mov sub push mov cli ds addl push lods scas mov jecxz and pop push cmpl mov test fidivr mov or adc or mov test in fwait xchg dec jbe pop pop jns jb push push jle mov jp fstps mov dec dec push add mov daa test push sbb push cmp push iret mov cmp pop jae dec (bad) jmp cmc pop sub xor cmpb push mov jo add or dec fcoms jbe mov pop (bad) mov xor pop inc inc add adc pop mov out dec rclb xor ret mov sarb mov sbb dec mov pop adc in xchg add int3 xor ret pop imul xchg rclb inc mov or xlat outsb jb sahf dec adc ds mov push cmpsb xor dec inc or inc push les jmp enter mov ljmp or add or pop sar xchg jmp nop into mov mov addb or into xchg cmc inc call pop inc sti pop dec test into (bad) dec inc and mov mov xchg add pop adc dec mov mov scas por aaa stos and adc mov adcl push or fisubrl lret mov add xchg aad and push fmul dec stc cmc in in outsl ds add and jnp out add push push pop lods push in (bad) pop xor inc in sti cs pushw push jg xor and pop daa jne,pt js mov pop mov pop in mov mov jnp mov adc das ds add decb mov cmpl repz (bad) (bad) (bad) repnz mov pushl test and cli pop inc xlat fnsave jb daa rcrl cwtl push push dec dec adc mov rolb js mov cltd adc jg nop or push sahf mov add (bad) enter ss and adc xchg outsb cli jge dec xor in rorb adc or xlat mov or rorl nop scas add dec xchg pop cmp fdivrs pop in adc imul xor fdivrs jge adcl mov mov jp mov jno pop fsubrl popf jo pop pop sahf mov cs jle lcall and movsl fistpll inc js pop push add push mov cmp (bad) mov jp out test xchg or or mov add outsl cmc xchg stc (bad) xor repz aas or fisub sub out jge icebp pop jecxz std addb push cli jmp sbbl mov sbb fnstcw shll push mov jb aaa pop push lods test mov aad cmp pusha mov add add lods and sub add (bad) repnz sub mov jns jmp fdivr jnp cmc (bad) push adc mov jg pop pop adc adc jmp cli cwtl (bad) or jge mov adc cwtl mov mov dec clc push mov jmp ja pop push add or or adc dec mov fdivrl add bound in sbb daa in (bad) jl mov sub daa add jnp loope adc mov repz lea insl fbld sets pusha sbbl out (bad) xor xchg loop ja push sti jno loop jg push inc pusha dec jecxz loopne xchg jae xchg insb (bad) lret inc or lods and in stos cmpsl xor mov push inc cwtl pop pop cmp into xlat lahf push lock js pop push jl in outsb hlt add xor outsl shl add (bad) dec out pop loopne push pop iret mov arpl repz mov jmp std into xor lcall popf hlt dec xor je aad popa pop or pop sub adc push int3 cmpl fisubrl jg push inc pop sbb mov add cmpsl dec popa jbe xor push adc dec jp cli je rorb mov add mov sub inc movl xlat xlat fcmovb (bad) out push cmp inc or xchg or mov dec ljmp xor pop data16 pop rorb push push pop push out (bad) psllw mov mov inc sub and aas neg shrl adc mov fdivs and out stc cmp ja dec add dec lock push mov pop cli arpl ss push mov and jnp (bad) faddl or push xchg sbb fwait cwtl add xchg data16 mov outsl sub test mov inc cmp stos das sarb cs aaa popa jle inc mov and jge rorb pop daa fildll popa xor sahf imul xor leave mov jp or fldt pop pop inc (bad) aas pop cmp lds sub mov cmc rcll cmpl pop ja and (bad) pop push cmc adc mov lret cld xorb adc js adc lahf jge jg push pop dec jmp mov push (bad) sti and lret adc iret jl test bnd hlt jg les push fs pop and xchg mov lods add aaa cmc jmp pop push stos mov inc jo mov test iret xchg inc mov outsl or pop aam pop scas fldenv in fwait (bad) and and jg mov add loop shl xorb stos add outsl mov add xor shrl adc lret scas sub xor repnz cmpsl add stos push loopne stos insl daa ljmp jmp adc push push stos sub test or cli pusha add add insl hlt fimul cs out das jle xor cli das push add adc jmp imul push pop lds in and pop enter sub lret shrb push arpl mov add jmp mov rcll jno xor or push stos mov push sub inc sub jp mov lcall idivb dec cli and adc das in outsb push in xor in in mov sahf das aad jp pop pop repnz add cmp push adc jmp and xor loop aad mov dec cld pop xor pop adc or jne fdivrl add inc mov pushl out mov jge mov btc shlb int3 lea shrb sub mov pushf inc loop cld jl inc mov xchg scas jle subb push loop push loope lret popf cs inc mov shlb cmp mul xor add mov aad jnp sub inc in jl and test scas pop sub xlat ds mov sar dec add or cwtl decb out clc das and sub imul lods das ret repz fnsave loop fildll push gs mov js xor in sbb push std cld aad sbb rcrb sub add lahf dec scas mov pop xor add (bad) sarl incl push sub ljmp or xchg mov dec mov xor push push dec mov andb jl sbb pop pop xchg adc jns cwtl mov das pop sbb add cmp int scas movsb mov xchg iret add lret mov iret or clc mov cmpsl add and ljmp jns xchg lret mov jecxz out jecxz idivl mov clc dec jp cld ja iret dec jge mov gs aas lods xchg nop jecxz ja fimul and stos popf pop in add sahf jbe outsb jnp nop loop (bad) imul shrl addb mov mov add cmp jge push loopne (bad) push sbb add mov sub in xor pop push dec push dec movsb (bad) (bad) bound cld clc pxor xchg inc mov fimul iret jecxz decb mov aaa jle pop ljmp add mov mov loop insb negl mov inc in or jmp xchg and mov imul jle xlat pop or mov repnz (bad) xor ja neg xor inc jmp lahf ds dec out imul fcoml sbb mov cmp push iret add jnp adc (bad) jmp ret adc push xchg mov jp xchg cwtl jbe in imul inc (bad) xor gs add add xor add push repnz in cmp mov imul dec add cs sub insl xchg pop std mov mov loop outsb mov and lahf mov push adc sub addl out outsb xor jecxz mov (bad) push fistpll sub mov pop xor mov jne mov je jmp jns mov sub in popf mov shrb sub cld aam clc call loopne loop sbb mov repnz nop pop ss and add test lcall mov sub roll mov cmp inc mov jle mov stc or mov and aaa test inc test cmp xor jle mov push stos into roll cwtl das int mov xchg mov or push aaa pop xchg sub jge lcall out sub push push mov (bad) or divl add sahf lahf ja jmp dec mov cmp insl test roll add jns or pop push movsl inc pop mov out dec inc faddp lcall cmp or fidiv std outsb lods mov dec gs pop inc aam mov cld push mov fsubrl cmp clc xchg push inc mov scas xlat or inc jecxz jg sub in add inc lret cmc jmp jns pop mov push mov pop mov mov loopne out jnp sub imul push push fsubrl aam iret mov js das push call inc imul push push and adc dec loop mov into aam dec xor cmpb ror jb aas insl mov push sub add daa jnp jmp sbb add lcall xlat jl pop sub sbb and mov mov sbb xor or push dec jne mov inc adc loope inc push rorl sahf xor jg daa sbb out jle add sub xor adc sbb xchg test (bad) push mov push xor mov adc jge add add popa inc pusha stos shll xchg inc mov mov adc test in pusha cmp xor mov xchg ror pop mov xor ret dec scas jne ret pop jbe je inc cmp push inc fwait outsb cmc rol ljmp (bad) dec and cmp adc pop or (bad) xor or addb dec iret in push or or insl loop push gs adc mov jg mov adc push sub dec jbe jg idivl int leave daa and push aaa pop shr test add push push pop push and jle pop lcall mov mov push push addr16 (bad) ss lock lret xchg jle lret data16 je enter adc inc ljmp je stos add and ja insl sbb in add inc mov xchg ja nop or in dec lret and add div and ljmp test daa jmp in add xchg dec out (bad) mov insl mov fmul jecxz inc inc dec (bad) cmp jmp jns inc cmp ret repz lods pop or (bad) pop sbb push sub in out push outsb adc push jae,pt loop pop mov cmpsb push adc mov mov jp sub push pop cmp jp addb outsl pop aad mov or cli sahf or xor or add jmp repz loop inc mov adc in jne out jo,pt mov mov xor dec mov sub pop sub or mov sub ret mov fdivl call or (bad) in add je add js sub ret push lcall movsl add inc xchg mov push inc icebp mov or imul xchg scas cmp outsl mov push adc imull cs pop jmp test stc test pop jg jecxz push cwtl xor (bad) das insb jo or cltd add pop mov cmp pop lret and adc jne movsb lods decl push or aas fisttp add movl mov call cmpsl add bound mov jp add in jno pop loope lret sbb pop sbb rcll negl xor sub add adc movsb xor pushf repz add arpl push sbbb add mul cmp rol (bad) out pusha je xor xchg adc sub sahf bound fildl add test pop je lds mov cmp dec clc dec scas sub fnstsw or mov mov inc jno xchg mov (bad) daa jle loopne xchg sbb (bad) jnp loope in sti jg mov dec add and jp addl inc or xor (bad) mov jg jmp cwtl pushf or nop xchg mov shlb scas inc mov cwtl mov imul push ret sti mov add pop xchg or or fisttpll repz leave add ss sti stos and scas lcall movsb in daa das pop mulb ds jbe (bad) xor das fst jbe test add mov incl ljmp pusha in pop xchg adc insb pop mov dec loopne,pt push lahf das mov jae shrb push and pop pop rcrb inc fdivrl cli mov add mov or push add adc pop add lret out fs icebp lahf pusha sub push (bad) mov jge stos add inc xor (bad) dec (bad) mov add mov mov jns jae rcll dec jns xchg push mov je cli push xor push mov push loop pop out and lcall or add lds and lock push pop out cmp cmp and jge cmpsl push fnop push jge mov int stc (bad) cmc roll dec cltd hlt insl sub cs dec and ret popa jle and jns cmp cmp mov or test out das or repz pop (bad) orl or add pop ja hlt scas dec lret mov mov and pop sub inc repnz pusha ret push mov cmp je les and xchg insb mov (bad) or xchg ret ljmp mov fnstcw cltd mov hlt pop and scas push or cmp mov xor mov jbe (bad) loopne mov jno xor popf push cli sarl fildll mov add sahf (bad) incl sub sub inc mov outsb dec fadds enter ds imul dec (bad) movsb daa loop adc cli push imul jge jg test stos adc daa fisttpll loopne mov xchg mov outsl les and icebp pop jmp iret out lahf fbld pop or dec jmp or push mov sub pop cmovbe sar cltd mov inc test fnstcw xor dec arpl inc roll sbb jge xor cli (bad) or test mov std (bad) push add call into inc push add inc sahf jb fbstp add aaa addr16 aas hlt mov or cmp cmp movsl push aam das into pop xchg pop push stos jmp inc pushf xchg mov sbb je imul stos incl adcl pop xor mov sbb and push mov pop adc pop jge mov dec popa dec pop and insl or push not xor dec ret or xchg shl bound (bad) or fwait mov mov inc adc jmp dec mov pop jl add das xor (bad) mov sbb or adc and jo repz inc xchg icebp shlb cld subl jle pushf scas and push push mov cmp xor inc add je sbb mov int3 rdtsc cmc adc loopne out add push mov test iret xchg jnp lods adc outsl mov add aad add push cmpsl lock inc pop pop scas sbb mov sbb pop or movsl loopne (bad) jnp sub out jo into jb xchg decb lret dec int3 outsl cmc sahf mov pop fmuls nop mov out add pop sub add xor inc fwait jmp sub cmp psubb or mov pop xchg lahf and sub lret fnsave lock insb or imul (bad) push push mov add jg (bad) and jbe or out push aam pop stos jl scas jge loop hlt repz mov pusha cli push dec jecxz dec lea in pop fsubrs or in insl add add jbe cwtl aam aad mov orl les mov cmp out mov and inc shrb mov push int clc loopne xor push add pop add stc inc pop jae scas add mov push mov cs jns jmp aam out loope xchg pop sub jo pop in inc or cli fistp or (bad) sbb lock data16 jno int xor adc push scas xor mov adc not (bad) out sbb cmpsb repz jl push cmc inc loope dec jmp mov sbb pop jnp out sub imul xchg decb fbstp pop mov rolb std ljmp ret add lret in inc outsb call in push mov cs pop mov or icebp sub outsl nop xorl cmc add mov iret scas pushf push pusha mov pop es (bad) cmpsl aas adcl xor idivl cld es push mov add mov clc dec sub pop push dec adc (bad) test mov bound push push sbb mov sbb jp insb (bad) gs inc sahf (bad) scas ja notl aas inc dec add push stos jge rcr adc mov mov popf pop xchg mov push add dec iret gs mov and in jmp and push mov pop mov (bad) add fmulp ljmp (bad) add push inc mov pop cmp or je jmp cmp inc das data16 mov sub cmp mov daa (bad) push (bad) push in cmpsl jle mov xchg sbb adc mov inc push dec movsb ljmp iret stos pop pusha lret or cmc pop outsl pop sbb hlt es test jno sarl ljmp (bad) fldcw cs add (bad) shl cmp jbe test stc pmullw (bad) std maxps mov jge outsl sub pop jb ss hlt jg or mov (bad) cmp or dec je mov rcrl cld dec lahf shr repz push shr in lock inc add push out addr16 push rorb dec fnstenv stc xchg ljmp push fsubrs add sub call das adc pop xchg and dec out movsl mov jge test pop movsb mov dec adc mov jno mov int xor push push sbb push pop or jb gs adc cli jns test or lahf inc mov adc mov pop jp inc xor cli cmpsb addr16 jg les das orl add mov dec hlt mov or push orb outsb ja movsb inc loope mov cmp clc jg inc push mov lods pop inc mov das adc xchg adc jle sbbl and jg roll pop push jae cwtl sbb je out push adc jnp decb inc dec xchg in cld fild push inc sub cmpl jge imul inc or mov shr and cltd and js cmp cwtl or inc or fstpt std pop rorl adc pop adc pop pushf adc movsl pop dec mov js out pop mov or and fwait cs rcrl sub (bad) (bad) iret push movsl lds mov jp push add sbb push xchg enter jl inc (bad) sarb (bad) jnp movsl push push push es inc fwait add xor (bad) aas add pop push in std es call push sbb mov jg pop pushf mov dec mov adc lock mov jbe (bad) xor je sbb mov mov xchg in jg mov mov enter inc ret cltd or push jg xchg not push add xor sub dec push scas jl sub punpcklwd outsl repz mov movsb outsb cld or pop mov lods add push push (bad) negb imul (bad) fbld in test mov dec scas sub pop aaa test and enter dec out add push adc shl iret mov out adc in xor call jl setle sti (bad) aas or adc adc jp in add pop pop sub roll xchg shr mov fbstp lret or adc out rorb push mov mulb lcall aam andl jg (bad) or cmp jb sub jl ljmp inc xor es orl sbb sub mov cmp adc mov stos adc sub fldz adc daa lret push fbld inc ljmp adc adc (bad) adc add call movsl mov mov inc push and mov out fdivl pop test mov sub hlt aad loop inc iret pop sub fistpll jl xchg cld push adc inc dec push and and cmpsb mov out adc mov lret pop or call jo push aas and incl out into cmp or inc xlat dec mov outsb das sti imul mov aas (bad) (bad) and add fistpll push cli dec add pusha pcmpeqd and fstpl mov push jl lods sub add push rorb jle pop add outsb or mov adc add aaa mov jb mov push xor push dec adc lea out out push icebp cmp jo int cmp ja cli xor sub xchg adc pop jno add and lods (bad) jne or dec mov rorb mov pop (bad) ljmp repz lcall mov xlat sub clc push pop and or sub xchg movsl adc push enter cmpsb jbe mov adc bnd ljmp jns outsl test in cs jle push fstl imul xchg ret loopne add pop cmp test in in adc cli in sub movsb repz jge stos orl or loop,pn (bad) repz pushf add mov movsb and inc fmul jp ds enter aad jle enter cmp mov sub loop mov dec pop mov jns hlt xchg xor outsb adc stos addb scas mov and jp,pt movsl clc in rorb test adcl xchg and dec adc and (bad) jo sub jmp roll pop mov daa cmpsl inc and add daa mov jne aas dec enter insl ljmp adc shll pop push xchg sarl movsb xor out jmp fnstenv xor not (bad) sub sbb add hlt cli xor popf cmc loop ds jp dec or orb xlat jle or cmp dec xlat sbb adc lret hlt pushf dec mov dec jmp pop xlat xchg jb (bad) jg and addl nop mov hlt adc pop test scas lret lret pop adc (bad) cmp sbbb addr16 dec daa sti dec rclb or push addb and imul add mov dec std jmp shrl icebp movsl ds out fildll mov mov jge xchg mov add xor jae sbb inc lahf jle dec std sbb sub xchg pop inc repnz push call add imul xorb mov dec sahf jo or xor ds sub push add jns mov sbb rolb out lret bound test or fstl daa push pop ja adc lahf rorl insl mov cmc neg (bad) mov inc pop testb jle and jns pop test fwait sbb or push jo mov jge inc mov cmp dec sti imul inc pop dec mov mov dec in mov outsb aam fimull call or fildll jle fsubs pusha iret mov mov sub or in in sub scas jbe repnz push popa cmp enter (bad) mov mov adc and xchg push test push mov jo and andl popa test pop aaa xor or cmp ret scas adc dec in jecxz pop imul jmp insb inc push jle or xor rolb mov fnstcw xchg or and or pop cmp or add xchg fldlg2 insl aam cmpsl pop jo imul add fsub mov in icebp lcall dec sub shr jne sti push pop or jnp sub lret (bad) pop xchg inc movsb push out mov add mov sti jg push push add push (bad) add mov js incb pop and pop inc cmp or jl cmp je rcll cmp push repz push dec xchg out sub outsb call pop or xor inc lds sub pop pop fldl2e ja xchg fcoms and adc pop pop mov xchg inc lret pusha int3 cltd ja fsubr lds pop jl dec cld mov jl insl mov call cmp aas cmp push xchg and dec push repz mov push outsl jle pop or out pop pop pop sub sub pusha faddl nop rorl out jns jp dec hlt mov xchg bound jo (bad) push pop dec mov and lock dec jnp xor sahf or lahf sbb sub or insb jp add cmpsb mov sub mov sbb sbb or je or orb mov adc cmc pop add pop inc dec out mov roll lds jge aaa inc mov in dec pop arpl jmp hlt push mov sti cmp (bad) push mov inc add imul lods roll rorl mov mov add loop andb push mov ds push adc and add pusha in push jbe outsb add mov jb fidivr decl jo loope bound push inc lret lds jge pop repz push inc push inc sbb jns mov loop jae or jg mov arpl push add das rclb push out pop or aad inc sarb inc add jmp xlat in loope pop xchg sub mov loop xchg add mov mov cmc mov dec (bad) aad aam push xcrypt-ofb cmpsl push insl jge push lret add nop ret mov (bad) cli std pop cmovp sub pop out jp push jmp and push cs and mov mov (bad) ss dec inc lock push sub iret test inc inc pop fcoml fadds imul or mov loop fiadd push dec das pop push push setle idivl xchg mov jbe pop std mov sub (bad) fsubrs adc jae aaa push mov loope aas mov add nop lods xor and mov (bad) pop jmp cmovg adcb dec out xchg out cmp add xchg das dec xor pop mov daa jns sahf out mov inc loope adc outsb xchg or pop jp sbb or mov cs test mov jae dec mov mov cs or xchg (bad) hlt and cld dec (bad) mov add jle sub jl ja jge cmp pop dec mov and push push inc mov jp stos insb ljmp pop or into sub sub sar das sub dec add cmpsb or pop push dec mov sbb xor je or jl inc inc or push jo enter jmp cmpsl fbld jle js jnp sbb mov fdivrs ja sub orl add sti loop inc jg lods jns and sbb sub js push cwtl adc cld inc ja adc cmp pop mov jbe push jns lods push in mov pop loopne jo sub pop dec popf mov or xchg outsb jmp cmp xchg sub and rcrl jl and or and nop sti je add rcr xchg push add pop push (bad) jmp sbb je ljmp adc and loope std mov jns rcr jns and pop add aas cmp inc pop push or jge jl jb lock (bad) push push pop pop mov adc addr16 inc call and jno push pop inc loopne xchg push aas mov hlt mov mov cmc je paddd les add stos mov prefetchnta sahf dec outsl arpl test and mov (bad) imul inc dec bnd rorb jle mov dec or sahf sbb and xchg xchg inc add call xlat jle sub loope add or mov ret ficom add dec (bad) dec je push fnsave call push push adc push jns mov incl mov test mov fstl or sub ret pop jmp ss gs cvtps2pi lock and add mov mov (bad) repz pop mov rolb dec popf movl mov in and push push cli ficompl shr add decl neg sub push (bad) lcall xor mov decb leave sub dec jne push cltd mov mov in push ja lcall enter aas mov out adc (bad) jbe push sub xchg (bad) shlb mov cwtl aam pop das stos push jl sub leave sbb inc pusha in mov jge mov add sarl jge sbb adc or int inc mov test bound cmp dec xchg sbb hlt xor mov scas popa adc cmpl jbe test push outsl in (bad) hlt mov dec mov mov mov addr16 out lahf cmp or mov cwtl in or xor xor mov (bad) add lock inc adc xor inc push sbb and dec pop imul push addb jmp xchg or pop sub aam mov fdivrl jge aas or mov lret mov or test push xor pop inc mov outsb xchg jge decl rolb test je out mov push leave pusha loope push rclb cli cli fisttpll push fwait das sarb pop fistp test subl mov pop pop lahf (bad) sub xor push mov pop push and push push push or xor mov push xchg aam mov ja cltd push pop push sub je adcb notl sub pop inc movsb out clc pusha mov mov repz push js movsb mov dec in mov xchg mov adc pop popf fsts iret pop jle and sub dec add cmpsl jb jg pusha shl xor sahf sbb sub imul fucomp pop mov das xchg mov fnstcw xchg pop mov push xor xchg sti jle sub (bad) or push rcll ja outsl loopne dec cmp lcall loop pop jmp scas and sarl movsb xchg inc adc outsl ds test inc pop daa mov popf fldl (bad) aas test mov pop popl push push aas lods jae pop cld or push push push test ficoml outsl jmp scas push ja std push pop scas sar neg test cmp xchg cmp cmp mov idivl cmp xor loop scas mov ljmp subl das lods jmp adc mov xor out sub push das push and pop aas movsl push loopne or push pop lcall ljmp imul push scas mov push sti das add pop mov push imul sub shll cltd dec (bad) rcrb jmp cli add adc scas popa movsl jp inc mov pop sub jle (bad) xor sub adc jo cli ret mov stos push sarb xor jg sbb lahf cli insl sarb in jae pop dec ljmp jne add add or pshufw popf jo add push inc or in or popa idivl aaa int daa int mov mov test push mov leave add std das sti sbb dec js sahf mov sti xchg pop faddl push test cmp frstor cwtl push or and sti pop xchg jns scas les push test cmp or or in sub enter out sub divl jns or bswap lcall fnop fisttp add fistpll inc cmc push or adc ja pushf mov lods mov add cmp loope lds int insl or mov sub or icebp cs inc push pop jl sub ror mov jmp add (bad) lsl sub push adc jns test xchg xor push icebp jbe pop cmp rclb xchg mov lods stc out loop dec hlt mov jge add xchg or mov sub setg out aas push dec in xchg or jl jnp dec add or aad gs add sub or repnz sub sub insl std imul dec push mov push push imull push lahf dec hlt mov cld cld or rorl cmp mov xchg outsl (bad) fild sub and in shl jmp (bad) mov pop push into push outsl cwtl push sub daa notl mov test icebp sbb adc jnp xor jl cmpsl not in ljmp push ret popf jnp nop (bad) pop repnz sub cmp and mov ret add ror aas test push add mov in hlt mov into arpl pop out jne mov int lcall and and mov lods lcall ret dec mov mov or std scas pop lret (bad) in and pushf mov pushf dec test dec call iret fcomps mov inc mov sbb jle (bad) fwait sub or (bad) shl push jne jecxz int3 add testl jg push adc push xchg int3 add xchg mov pop aam xchg out cmc pop add push (bad) stc (bad) push xchg or add pusha push out sbb jg sti xchg lds stc jp gs data16 inc and aas or loopne push add xor push push fisubr xchg adc or dec xor les push movsl push or sub cld pop push adc leave aas aam pop pop pop mov mov cmp cltd cmp mov lret pop add enter and (bad) mov in sbb and jg (bad) les xchg add mov mov dec add sub scas test xor sarb xor or cmp rcrl stos outsl mov mov jae or call jns add jno xchg add mov sub into and cwtl sbb push sbb xlat orl (bad) jno mov repnz xor and push inc test dec inc loop dec mov (bad) pop push cmp adc sbb xor fldenv inc fist aas imul outsl outsb dec adc jp lahf rcll jmp cwtl iret push dec mov out loope jmp (bad) dec (bad) aas repnz push pop pop push dec mov out mov push dec push test mov ja dec jne fildl add aam pop mov imul dec adc add push outsl jnp stos or mov mov adc shrb add mov dec jl and jne pop sub outsl adc jmp and mov mov inc clc rorl push or imul and adcl std jp sub xchg and mov and das pushf mov jne or mov lds xor mov or pop inc pop cmpsl je pop mov push scas adc popl cmpsb inc daa inc sarb adc mov jne or push (bad) je mov sub inc add mov pop or push sub mov cmp (bad) pop jge mov or repnz aam imul jg dec jp add adc imulb adc push clc popf or jg (bad) in nop repz jmp bnd pusha pop dec enter mov or mov mov mov adc clc and outsb xchg (bad) sbb or and mov ss movsb icebp jnp pop repnz mov inc or add aad jle pop add jle cs mov dec in xor int3 int sbb (bad) rep xchg xchg mov loope cs dec ljmp jb add adc jle jb cltd test or shrb ja mov imulb xchg push mov je sub fsts dec es mov movsb repz dec test in push sub aas push sub cld xor mov jns fwait out sbb cmp cs add rclb mov push (bad) repz repnz aaa pop dec movsb int pop push mov sub loop repnz push jns or add shr push jno xchg cmpl fcoml (bad) push inc add add push push cmp loopne push sbb jno test pop ljmp xchg (bad) jne and ret (bad) and pop pop shlb cld stc xchg dec pop cmp or cmp les repz rolb into dec jge xchg ror sub cmpsl jo jg jp push lods (bad) pop cmp cld sbb fsubrl fs insl inc aad addr16 or (bad) je mov and push cli inc jno aam (bad) add negb dec jecxz lcall (bad) and mov pop xor aas subl adc mov jle outsb push or pop (bad) lcall arpl cmp push mov push pop push loop (bad) push arpl sbb ljmp dec scas test loopne inc adc sub repz pop push jb cli bswap jle and loope push rorb push or mov adc cmp add mov or lahf jg ds and pop push sub and pop mov pusha rcrb or ret mov or or fldcw nop jne cmc mov outsb icebp cmp push push xchg cltd inc add daa out cli rolb sbb and xor mov (bad) jge or and adc out cmp and movsb sbb orb rorb aam lret or (bad) push data16 jg mov or sahf adc mov sbbb movsb sahf pop jbe and ja push (bad) sub ret inc pop jge lahf inc or add addb push imul cltd mov mov add fcoms or cmp jp mov mulb jl add jmp data16 shrl xchg test jbe movsl jne mov hlt sub cmc or xor jno ja add mov pop push negb add aas js cmp push mov push add xorb insb or dec in pop cmp data16 add sti aas and cmp mov lods adc inc cmp pop andb add cli out add add stos mov test mov out dec scas add lahf jl into fucom shr nop out dec (bad) mov or pop mov rclb add aas sti adc push mov cmp sub sub xchg xor ljmp std test cmc adc insl add dec or sbb cltd std pop imul push mov out aam in gs insl sub push jns xchg push nop and mov stc rep ljmp jle push out pop pushf in add push push jle aad icebp ret xorb mov or aaa jno adc imul sub adc adc push mov adc lret je rorb or fmuls je (bad) sahf lcall inc repnz outsl pop fdivp roll sub aam pop pop popa cmc or ror xor pop xchg (bad) lahf xchg push cltd bound js (bad) ss andl mov mov push pop ljmp in dec inc daa and clc xor dec jns outsb test mov fst in cli std pop fdiv push ds stos cltd andl add repnz pop push and mov fisttp (bad) in ret push pop rorb add popa lcall test push pop (bad) sub pop jge cli adc or lds and test movsb mov loop stos bound xchg pop sarl aad pop ljmp movsl icebp push imul jl inc scas js inc cmp je int insl mov mov mov jmp das add cmp push mov jg mov sbbl ffree sbb adc cmc sub or sbb dec inc scas loop or fwait (bad) fsubs and xchg cwtl jl add push or mov popa in jbe mov lahf xor aas xchg cltd dec mov mov dec cmp pusha cmp dec stos outsl or nop jbe mov lcall dec (bad) outsl test cmp dec ja or adc xorb jno push stos lods std ja clc xchg xor pop pop push inc mov lret int3 xor dec push mov outsl test pop dec push aas int sbb mov and jg xor mov or jle dec push inc jnp add out sarb inc xor sar out inc outsb gs and add jle insb mov rclb push in jo push dec mov jo ja sub pop mov inc das adc dec in xor xchg aam mov and push push ja (bad) jmp mov in shrl dec pop dec adc pushf xor or push xchg test mov add data16 mov lahf lock or data16 or adc inc mov in iret xlat neg int3 pusha add jmp stos sub icebp rol xchg inc shll lea push sti out lds and push fiaddl adc and fwait (bad) adc aad dec stos loop and pop push in sub bswap cmp xor cmc jns sub xor dec xor in inc inc addl rcr decl mov or push ficoml insl or aas repz or jg or cmp pop pop mov add fs push jno jmp lcall fsubr and sbb push mov pusha pop outsl mov inc ljmp je or aas dec push dec add in (bad) pop push dec sub sbb xchg dec xorps out cmc or xor iret sub or (bad) shrb sub push loopne cmp pop xchg gs jne jne,pt mov in sbb sbb out jnp dec jg jb in and dec ja push lds sub add mov incl ja or adc out js ja push add jmp or adc mov shlb mov dec cli bound push xchg inc jg ret inc mov xchg add cmp inc xchg jne sub movsl push arpl mov mov std and add jg (bad) outsl or clc inc inc xchg stos call mov (bad) push mov cwtl retw xor sbb sub mov dec lcall mov (bad) (bad) jbe imul jmp pusha jle,pn in inc xchg adc pop dec out pop arpl xchg or leave in gs mov outsl popa leave pushl push jp lds xor push mov ljmp or push ja push out jge dec mov push cmp jp int3 dec sub nop pop push jo cmp cmp cli jne aad stos fprem pushf inc mov sub (bad) stc cltd adc inc sbb dec sbb jge or in sub test cmp or mov add push std outsl call leave xchg ja push and loop cmp push or jo mov pop xor and dec pop movsl lret cmp leave jbe in nop fiaddl cli shl loop fisttpl lock xor movsb aas pop sbb and sbbb and nop pop lods pushf in movl pop push push mov and cmpsl loop sub push pop jmp xchg adc adc outsl imul jle dec int3 push push (bad) cli xor (bad) mov mov jecxz mov mov add or into sub mov or arpl pop jle cli into lret push sub inc dec pop jle add orl je push lcall (bad) push out jns das push push dec aam pop dec cli clc add mov in jge push pop push inc push pop fistpll out inc in push jae push add sub cmp add scas outsl fild mov xchg nop xor into pop push inc fldt or gs lea sbb adc jecxz dec bound fistl (bad) sub mov (bad) pop mov add xchg xor push push cmp xchg push lcall movsb cli inc loopne push dec push das add aam adc push cld loop shll rolb cld push subl sub mov jp cmp and in lds cmpsb pop movsb (bad) jne fdivrs (bad) pop inc mov cmp sub dec ja add mov (bad) (bad) push das aam sbb or adc and mov mov pop clc cmp insb das or mov jg mov or push cmp or pop daa dec push pop push test pop and fcom push ss inc (bad) (bad) es movd adc je (bad) fistpll add rclb xorl cld mov inc push jnp push (bad) push std dec cmpb mov xor aas jecxz popf lds lock std fucomip aas mov call jbe mull outsl push mov cld adc pop inc lods (bad) xlat mov js xchg inc jns fs and outsl (bad) aaa push dec stc inc jle shrl out jge nop or lret jg ficom xchg cmp jl fmuls jnp ds inc aam add ror mov cwtl jne movsl pop inc movsb xor enter into aaa jle ficomp sbb push lret jg jp aam or adc mov in fistpll xchg jl pop push jge pop scas cmp mov pop or and roll mov inc push (bad) dec jg ds outsl test aad jp nop sub fimull pop mov add es sub adc jge addr16 pop dec mov ret int test rclb je dec mov daa rcrb adc or xchg insb ds repnz inc (bad) mov push shrb xchg dec mov xchg pop (bad) cwtl pop push repz pop shll add or xor out pop mov or add sbb ja push lds (bad) aaa inc pop leave mov cmc pusha inc jmp pop cmp inc inc (bad) mov mov mov add (bad) jne fidivr loope adc roll (bad) dec shr or (bad) daa pop pop sbb mov and incb (bad) xchg jne fadds pop jg loop xorl cmp roll and (bad) jbe je and fistpll sbb push iret fbstp cmc lods stos popa sbb or pop not pop pop mov icebp cwtl rolb add out jge add std jo xchg lds aad inc pop xor jg outsb xchg mov cmpsl dec sub sub dec pop push pop (bad) cld mov xchg cmpsl icebp push pusha mov or sarb ljmp fldl jecxz and mov push pop pop add fbstp mov (bad) in aas pop cwtl les pop inc sub pushf xchg pop sbb sbb ja stc daa loopne jno imul aad xor fist rclb sub cmpsl negb xlat out rcll dec test push mov ficompl jg popa push or or jmp fild imul add das sarl adcb jnp imulb mov xor std daa mov push outsb ret push test pop decb fucomip imul xor and pop rolb cwtl pop pop lods adc scas push mov mov (bad) mov adc fild repnz sbb pop push and fidiv roll sub shlb outsl and jmp push pop inc xchg lret pop clc xchg cmc out (bad) int add cmp push popf xchg pop push adc jecxz test sti repz dec fisubl movsl and add test push inc mov or movb dec movsb lahf sti enter add adc pop divl loop in mov scas outsb cmpl out dec or and adc mov jl mov cmp fldt addr16 mov fbstp iret dec add rolb std cli sub push jp aas push ret syscall jp hlt cwtl jno movsb fs xchg pop and push sub lret enter clc and and daa push xchg dec or in scas pop scas in or cmpsl pop das std (bad) in clc std jae lret jmp std jmp pop (bad) pushf push rcrl pop dec jbe push mov pop pop push sub in stos jne xor arpl aam idivb out outsb add pop or mov or mov sti or cwtl lret (bad) sbb add jnp add xchg or push mov imul dec jp add outsl push cmp cmp movsl add lret sub push xchg cmp mov iret xchg aas dec push mov mov dec popl rol movsb jl and in hlt mov jg add sub jbe lock pop adc adc add test dec lock and xchg mov daa test fstl or out pop push lahf jno add ds xchg insb inc push push mov (bad) pop inc jp add push nop stc dec js cmp jle (bad) rcll push data16 mov inc out daa xor movsl xor xchg push add pop stc mov rcr xchg dec mov lods stc add loop cmp inc xchg outsl in mov xor cltd adc sub add ds mov push push ljmp call adc iret rcll daa push ljmp idivl and inc enter sar aaa ret mov (bad) int3 jb jo push sbb pop jmp push cmp pop decb and mov pop cli mov (bad) repnz fmuls jbe and add jnp mov mov test xor xchg inc in or jnp testl xchg popa jecxz lds out and sub jg push loope andps pop jmp movsb dec add int3 std fs xor dec push adc nop sub call push dec jg in push or adc jns xchg stc loopne movl jp or xlat sbb dec push or push jb mov mov pop fbld push or imull jbe adc jo add ja loop pop pop out cmpsb popa fisubrl adcl cli fldcw lods repnz scas mov dec mov clc dec (bad) xchg pop pop push les cld push mov js pop fildl test add sub testb mov cli and push xchg dec scas lret fstl add sub jae cmp sbb push dec outsl jae push mov push insb iret rcpps fs adc add (bad) mov (bad) mov es stc insb xchg in add cmp cmp icebp xchg mov xchg repz fdivl push imul ds stos xor inc movsb inc int3 (bad) jg sub in inc add out rorl push arpl or sti xor or sub add push out testl xor and or pop fbld stos popf fnstsw pop pop fildl cmp mov xor push mov add out je dec and ret pop int xchg jecxz or fldl pop mov popa sub mov mov and shr add push add les xchg daa pushl mov popf addr16 es jl jnp js add xor jns scas loope outsb cmpsb push dec and inc sub loope add and out xor mov push lahf adc pop mov outsl leave inc push sub negb adc gs pop popf ds cli out add (bad) jo orb jb in test rcr jg push (bad) arpl ret mov sahf jmp jbe pop adc sub push in cld pop add lock pop icebp xchg outsl (bad) xchg sbb (bad) lock dec inc ljmp outsb outsl stc sti fcoms sub (bad) clc pop xchg inc add inc jb lret pop jge cli cmp decb push cli mov add or dec (bad) cmpb in ja mov ljmp mov mov rcll ljmp popf inc je mov mov mov add cltd jo jbe js (bad) mov mov je loopne cmc or cli xchg (bad) mov dec pop icebp (bad) sub add ror pushl pop (bad) or mov (bad) xor insb pop cmp mov ret decl add inc or jg push push shl lds negb adc ja movl fldenv xchg roll push mov jl sub add (bad) add mov cmp out pop push mov dec add loope rep sub ret sti or movsb dec scas notl mov adc ret ljmp and (bad) jne popf ret push pop pusha dec ret verr push mov cmp fisubr std jg or xchg (bad) jnp pushf push xchg jne gs lahf add das outsl and adc pop cmpsl pop sbb fidivrl aad decl xor xor jle mov lcall inc inc dec in dec std cmpsb aad jge mov pusha lock cs jnp jb mov mov inc sbb ftst lahf or mov dec or inc insb add jb or mov mov fisttp pop cmpsb adc or sub sbb jns dec dec rclb mov test add loop cmp test nop cmp sub jle push nop cs nop jl jge and push push sti add je and nop nop cmpsl pushl and inc pop mov rorl out jbe xchg shl dec xchg jo push mov in stc jnp mov sub pop push shll hlt dec inc adc pop xchg ds jmp ficom or pop mov cmc add into lahf jns (bad) xor pop lea clc push push sahf (bad) mov add imulb push enter jb adc jge pop in lds sub cmpb (bad) add ljmp mov andb insb (bad) mov cli push out inc adc outsl mov inc add dec ljmp sti pushf imulb jle xor es jg cmp ja sbb jbe mov mov imul cmp mov push push imull lret pop roll ret xor test or push adc pop lds sahf cmp dec mov add push je mov pop sbb sub pop xchg ja sbb test cmp mov push scas mov add push nop or fcmovbe xchg mov (bad) iret movsl in add dec aad out je ror add out push push jl jmp pop jnp imul (bad) sub (bad) cwtl and repz jge movsl jo sysexit test call or add sbb push sub push jmp inc popf aam sbb outsl pop xor push pop popa mov loopne in inc adc xor fsub jg dec (bad) addr16 pop and push xchg pop fadds ja std aaa jne outsb mov cmc sbb mov adc inc enter push mov push cmp pop pop in cwtl and pushf push repz sbb notl aas icebp pop cmc jl or dec push sub out jb pop aad movsb inc xor mov xchg mov xor mov inc push out adcl push or mov mov add jg xchg sti sub btc cmp xchg xchg inc xchg idivb cmp mov sub sub pop jge fcompl mov sub jbe or lret push repnz jne (bad) in xchg testb ljmp sarl aad outsb inc (bad) or mov pop cmpsb jb push frstor sbb addr16 or xlat jnp pop mov je push scas imull clc mov mov mov jo in into popf stos and pop mov ret dec jg inc fistl xlat cmp lods inc pop in push xorl mov fistpl in (bad) xchg out iret mov stos ficompl imul inc xchg or sub fistpll inc dec ja insb dec cld push test dec lcall pop xchg lcall push (bad) sti fimull repnz pop in jle and daa dec sub cs cmp cli sub pusha or sar shlb out inc jge pop andb stos nop (bad) mov mov or lods adc add sub (bad) jp out adc sbb test out cmpsl jl jp inc sbb out ds push adc jmp cmc pop imul pop push jecxz add xchg fstpl pop adc clc dec aas mov mov sti daa add mov or jo sbb cmpsl movsb xchg push sbb stos gs push lock push jle push dec push pushf mov push in iret jmp mov mov jb add ljmp push add roll ds cltd jg and inc push pop lret push add cmp push scas add dec fildll lods dec inc or into pop cwtl lahf out inc sbb test or ss sub push adc int mov jne test or pop xorb mov push out cmp lods jg std movb push fsubrl rorb dec jmp push xchg xchg push mov outsl mov sbb jne rcll inc in lret jg lret push xor mov cmp adcb dec test dec iret dec add xchg dec fnstcw loope aas lods inc add mov mov add sub fsubp jns sbb add jl push push or fucomp or test or push in xchg daa dec fnop mov aad add (bad) and jg fcoml pop and movsb test shrb out or ljmp rol repz fbld repz lods dec aas ret mov xor xor mov pop jle cli jo in test inc testb sub cmp pop or push pop pop push movsb popf xchg adc cwtl add sbb inc not xchg inc pop or sbb push insb mov sbb clc cwtl sti hlt in mov cmpsb add dec pop jge sub fs sub lods and and pop pop (bad) cmp mov jle and imull or add ficom movsl mov mov sub nop (bad) out inc fs enter and pop push rolb stc push xor cmp inc or movsl xchg cmp mov insb out mov cmpsb or jg aad and pop pop clc cmp xlat cli call loopne sbb sub cmp (bad) icebp mov (bad) jb cmp push das and add adc pop in mov inc add add inc sub inc (bad) (bad) jbe icebp mov mov dec imul sub xor ss xor scas dec divl cli push les pop and out jbe arpl ret push ret pop loop cmp out dec pop xor and dec faddl cmp outsl xchg repz int cmp cltd mov fisubr xchg and andl add jge sbb adc jnp or mov dec test shr lcall mov push jge mov and pop and mov mov (bad) sti outsl pusha insl or test inc xchg jp dec ljmp dec das jbe mov inc and jns incb push fstl xor and sbb sub pusha jp or sbb inc mov jmp je fs or test mov adc mov out jnp add ljmp add hlt sbb add lods sbb or lahf sti sub mov loopne sbb ds push jl mov cmp cmp lods cli add enter loopne jae pop xchg xor ja rcll or shrb or and (bad) cli fidiv mov cs jnp jge icebp pop sbb (bad) subl decl or mov adcl cmpsl dec in fiaddl negl jmp icebp pop dec test mov jg ljmp cltd mov (bad) or push in push and fldcw mov out jmp scas sti or outsl jecxz mov push andb (bad) add arpl jmp inc jmp lahf add push outsb aaa add xlat xchg fiaddl inc aaa xchg enter inc sub movsl cmp pop jbe insl test out mov xlat mov dec mov dec (bad) repz pop outsl cmp or inc jnp xchg les clc cmp or (bad) into popa sub dec imul ds mov fisubr adc cli (bad) push fwait jo xor sub mov mov pop mov push pop push add adc std fbstp aas test and sti mov icebp mov test mov or fucomp dec dec or in or (bad) int3 push adc push push fadds sbb push mov jno xor cltd mov pop cltd xor imul xor pop or in lcall inc pop dec cli push cmp test jmp hlt dec stos jge orl ja loopne repz divl add pop mov scas in mov repnz adc lret xor stc push popf outsb cli lods mov rorb fwait add xchg outsl mov mov push fsubl das mov sbb cmp hlt pop xor pop cmp (bad) rcl dec test mov leave das mov mov ja add sub jge (bad) imul pop mov je cwtl lock rolb push (bad) (bad) stos ret push inc inc or bnd shrl int3 nop jl ljmp inc imul pop insl stc inc push xchg fmul push adc xor xchg mov pop push lea push cmpl sbbl push lcall cli jle mov adc cli push dec sti pop and push out lcall dec mov xchg scas call mov lods (bad) or sub adc jge inc or cmp xchg (bad) jbe mov add add mov jl movsb lods popa lock add cmc sbb bound or std adc jne jmp fidiv mov or mov addr16 pushf loop inc clc pop or xor aas inc fsubrl out fisttpl mov push push aam bnd enter xchg pop jle pop fmulp or cmp fdivr fcmovb lret pushf addr16 mov cs add rcl fstpt dec decl lret pop xchg add dec hlt fldt aam pusha out lds mov sbb mov test mov jmp cmp inc pop inc sub imul sbb scas xchg daa cmpsl sbb add pop jmp lea or adc pop daa pop sub mov jge ljmp push xor decl xchg test movsb mov lret ja sbb mov dec sub sub daa cmp cmpsb fisttpll int xor stos inc mov pop stos cmpsb inc or pop jg aas push mov mov cmp js out or cli test mov imul mov push cltd adc mov dec push test mull clc push sbb or jp lret xor mov pop sub fnop rcll and sub xchg js pop dec push add outsl ds mov sar add pop push sti neg mov insl xchg sbb push pop mov rcrl jg mov add and xchg (bad) jne js mov push sub or es sar push dec inc cli std ja inc adc jne or rorl enter pop push js scas sub loopne cld add ficom or mov rcl mov add lock cli subb add std pop adc sub mov pop mov jge insb pop pop cmpsl jg jnp push aas dec loop adc shr inc sbb and jb push push push and daa outsl gs mov dec (bad) cwtl ljmp xor sbb (bad) aaa aad fwait sbb ja mov stos out sbb xchg jnp movsb mov xor mov add das stos mov (bad) mov sub cmpb cmp and sub add push sub insb add inc mov out call or lea bound push es (bad) jl mov out dec push push add mov jmp sub addr16 out inc cld mov add test test inc or inc xchg out nop cltd sbb jnp int sbb dec icebp mov mov pop xor push push rcll xor mov subb mov mov (bad) xor ret pop jno rcrl repz mov cld sbb in in jge cmc or cld das stos push stos aam jmp sub mov add pop cmpsl inc cli (bad) adc pop out xchg jge jl push mov daa and xchg aad push pop pop (bad) movsb es jb push cld dec push sti xor sub sub (bad) pop hlt and inc stos inc aas inc sub push sub jmp rolb sub push les push pop mov mov sti mov out std mov and xor cld jae and mov inc add jp add stos test sti mov out or in imul adc sahf in sbb loop in (bad) test loop std inc mov push daa pop pop pop mov negb fs mov cmp mov push push jne pop xchg out das ljmp push (bad) sub in gs mov add sbb jmp push jle push jbe push fsts add or mov sub add push cmpsl xchg push mov mov jg fwait dec inc stos or mov pop popf shlb ds popf push call nop (bad) jmp enter lret jge lods roll scas ja gs add dec (bad) jg dec dec cmpl (bad) popf in test cmp (bad) sub or jb dec out pop cmp pushl fcomi (bad) add push rcr adc pop pop add ljmp push gs repz sarb out (bad) pop add inc mov hlt (bad) out or adc sub (bad) daa subl xlat fcoms (bad) mov mov pop orl mov (bad) lods aas or test jmp out adc cltd gs mov out dec inc push addl add (bad) repz nop and fadds jge mov leave pop sub xor ja mov mov or pop dec cmp in mov loopne fnsave mov or in andl xchg shr pusha ror dec push inc jmp mov xor scas or pop pop xlat mov (bad) cmp in adc (bad) sub gs push mov mov mov das hlt bound pop call int3 add pop xchg pop mov xchg scas mov call fdivr dec cmp adc loop movsb repz leave mov ja push xor in stos mov and sub mov dec out rolb xchg jns outsl aam or cltd jo lods adc bound mov xchg jp pop xor add mull mov loope cmp dec das test lods arpl lahf dec insb clc and xor adc out cmpsl xor xlat push mov cwtl or mov cmc pusha insl out inc or lods adc jmp sbb movsl mov ret cmp lods push icebp loop mov mov mov push pop clc jmp and xchg icebp jnp dec (bad) popa adc outsb nop pop push insb loopne add sbb pop sbb ja dec orl mov test cmpsl jmp rorl sub push add jb pusha repnz push imul lahf divb mov and insl cld test inc and and dec pop pop out mov push xchg test mov cmp mov mov jecxz jmp mov stos jge (bad) and mov les jns stos xor xchg out ljmp decb push inc pop mov psllq jmp inc jae repnz (bad) or dec push pop push mov xchg pop (bad) imul jb hlt mov mov pusha ret xlat jle scas cmp adc jg das stos dec adc jle mov push push fidivl ljmp fdivr loopne jl rcrb xchg and sub cs push mov (bad) jmp das lods jge push add push loop rcr in or cmpsl push subl dec xchg ljmp lahf faddp rcrl mov out das negl insl sbbb xor sbb stc (bad) jg in and ljmp mov stc jp cmp movsl std ja and les pushf iret cmc (bad) xor mov or jae push or and pop scas das jne pop in cmp lea xchg dec inc imul sub inc lahf or (bad) mov icebp pusha cmp stc pop cltd ret sub lahf hlt and push pusha mov or add cltd lcall les mov dec cli xor push das fstpl (bad) mov fwait out (bad) out std pop mov enter jg sub fisttp (bad) adc adc adc inc icebp jno jns or jle and add pop mov sub arpl jg les in or xor bound sbb repnz rol jmp jae jl std addr16 jmp std or aas cmp je push and ss stos mov adcb adc stos imul insl or incb push lds adc (bad) loope outsl clc adc (bad) loopne loopne (bad) dec xlat or sbb mov push xor push cld cmp jg and xlat std pusha sbb cmp push or sqrtps lods dec dec lods fist lods mov jbe add xor imul jecxz fmull add decb mov push aad sub pop mov xlat inc xchg add adc add inc xchg sub lods shll hlt test mov pop push adc or xlat pop add push cmpsl xchg inc xlat negl push in or lret insl bound in xchg (bad) xchg fnsave leave bound or rcrb inc cwtl or cwtl pushf cmp mov pop bound and data16 shrl aaa push or or adc cld out negb push ja mov sub inc or lock push pop push cmp push cwtl inc cmp mov sti dec jle int3 sub negl add adc or push ljmp or int3 std lret jb orl or pop punpckhbw mov adc in rcr and stc inc lret pop xlat outsl mov fdivrs inc std push (bad) scas loopne stos add sbb ficoml ds adc or std pop pop pusha push push fs pop dec add repnz mov jle stc mov push and popf dec sbb sti and mov xchg sbb adc jae cmpsl sti std mov xchg cltd mov push clc div imul jae jge sbb (bad) jmp inc cmp aam fistpll lods or (bad) popa xor jle ror jl rorb push inc cmc sbb or ja add ficom pop push jg aad cmp test mov dec clc imul imul into movsl mov push xor jge add sub jo add add aas pop jg and add daa xor xchg in sbb push rorl fldl pushf bnd push (bad) jp das test loope jl int push or test cmpsl jo mov jge leave sbb or repnz or mov dec inc adc jge lds mov mull push mov push outsb loop test push add icebp hlt out sbb adc sbb pusha add sti aas not xor pop setns mov icebp icebp push (bad) fsts cmpsl cmpsl and xor pop inc inc or fmul stos dec xor dec mov jb imul mov mov (bad) xlat mov idivb rorb cli mov push cmpsl xlat adc icebp xchg add mov int sbb jle push pop into daa ja adc or add leave push mov cmp sub scas sti dec pop lock dec idiv sti xor sub sub cmp push fdivrs xor or loope mov fisttp xchg mov orl or clc outsl xchg daa pushl outsb je add or ljmp pop mov adc out jp ss outsb or fs mov std shll jmp ja mov stc jns pop outsb sub gs push adc ret mov push jmp mov mov arpl jp pushf push (bad) push clc adc push xchg mov push inc notb push jge push ror cmpsb out xchg inc or popl lahf inc dec mov add mov sbb das push xor sbb ds out leave cmp push into jg dec jbe divb jl sub and push mov andb push outsb out and fisubl (bad) lds (bad) jle fs cmp add in pusha add push mov jle mov ja pop imul aas adc neg enter push sbb pop adc jge or add add nop or adc cs pop mov ret add sub lahf dec fmuls jle inc jg adc outsl sub cmp decl xor mov mov orb inc subb icebp jl,pn lods (bad) push ret jne inc or xchg fs lcall insb and cmp lods es add push add repz int aad clc or arpl cmpsb sahf push adc cli and add clc aad pop inc dec pop movsl or mov daa inc mov pop push push inc lock cli and dec sub pop bound mov inc mov lds (bad) cmp push fidivr adc aam push adc mull sub pop adcb xchg aaa mov popa lahf lock or shr and jp pop and and mov repz data16 dec clc xchg cmc clc push and (bad) jmp fcomps add mov dec not add (bad) jmp cs enter in (bad) mov std cmp xor mov mov movsb push sbb ljmp mov cmpsl xor clc push sub push sbb pop orb notl sarb add cmp sub push addr16 push adc inc nop adcl jns push jg push mov arpl jo push mov stc mov out adc add outsl mov fnstcw add (bad) (bad) cmc call pop addr16 inc add mov dec push jb lea jae sbb aad enter ret push xchg mov je aas (bad) mov xor pop xchg stc ljmp sahf mov aas push (bad) cmc or sarb (bad) jg mov pushl out add scas mov in adc mov or out jne jmp cmc cs inc popf (bad) in inc dec xchg scas movsb push inc mull popf (bad) in inc push call xor roll push add jg (bad) cli mov mov mov push jl push stc rorl mov mov dec pop add out pop jns int xor dec inc testl test mov lea repz adc and mov push test mov rcll mov adcl nop pop mov iret inc outsl add jno adc std ds loop mov inc aad mov jns mov pop ret flds cmp push std mov push push out or loope mov dec add and add or fcoml ret inc ret arpl gs or pop add push sahf mov mov add rol rcrb aas lret test xor add iret cbtw je mov lock xchg test pop mov arpl push lds je rolb push inc adc repz insb pop test inc add add jne fistpll and add sbb lods ss test or push in and add pushl push je and lea jmp mov rcrb inc mov andl dec ret adc fiaddl add sbb dec jmp jle jl xchg push imul out inc or xchg jl mov (bad) lock xchg xlat lret xchg mov int mov mov jp mov inc bound cwtl sub pop push sub mov test psubsb add rolb cmp xchg jp pop xchg enter pop ljmp sub ja or ljmp adc dec (bad) pop push in fwait jle add nop (bad) cmp subb stc pop mov jbe ljmp and mov icebp adc or dec and push test fstp cmp subl ds sub xor imul mov subl jne call push in dec xchg mov repnz dec mov push mov aam test add push push jle iret rorl add xchg and popa pop or mov sbbl jg xor icebp adc pusha das mov cld adc push mov cmp rcl sti jge mov pop and rcl ficoml jno mov ds out in jge mov test mov sahf (bad) mov pop pop scas cmp call ret pop adc add add add mov mov jge or adc cmp xchg cmpsl sbb sti das neg push enter cs add loope jg cltd test out mov test dec loopne jb popa dec sbb xor (bad) outsb adc dec pop pop js mov sbb mov inc add push les in push mov lds lret popa out jbe xor sub call inc or loop jno (bad) jmp fbstp fs sbb push adc mov xchg adc stos lea sbb adc lret dec stos rolb in and mov add inc in sti add sub orb sbb sub fnstsw sub jmp mov and dec notb mov in or sub stos sub jp movsb and (bad) jle xor test add ja aam or lret push mov ret jne bound repnz cli fdivl jl and outsl mov dec js dec dec and adc clc inc jmp push push mov cmp push lock push add mov pusha jg adc fistpll or (bad) int3 push or pop lods movsl pop pushf (bad) pop out (bad) js mov fmul imul movsl sub sti pop add adc (bad) jp xchg sahf lcall ljmp xor aad test xchg pop outsl in iret cmp dec and fdivrl mov jge aad (bad) jb sub cmc cmp sbb dec dec xor mov sub jge repnz cmp cli addr16 ret ret xor xor lods jp loopne push jnp pusha fcoms aam mov mov sarl jns lret inc jg orl xchg add xchg mov cmc rolb mov iret add in xchg cld push push add ja push pop pop add lret bound xor or stos scas aaa jmp mov inc xor mov stos (bad) outsl cmp inc add not loope add xorl mov icebp add add push xchg push mov push inc add mov insb or notb push push pop (bad) or push xchg sub and jb cltd or sub sub jle jnp lock and sub cmp rclb notl sbb in mov ds jb pop sbb pop addr16 jp mov into rcrb cmp test movsb jb adc jne lock mov fild sub in xchg and dec adc sbb test and popf mov or jge xchg add daa mov int3 jno pop sysenter stc les jne rcrb in rcrl in mov inc mov outsb test sbb sub inc add pop cmpsl shlb ss (bad) push jmp fs sbb (bad) or mov push test pop cmp cs or inc mov in jmp lret hlt and inc push push mov lahf adc adc or daa notb cmc arpl or movsb xlat inc rolb sahf fild loop cmp decl push icebp or add jecxz mov push push mov dec aas jb rcl cmp push (bad) or pop decb mov inc xchg pop pop dec xchg std (bad) out jo or dec fsubrs add add adc mov ljmp xchg cmp jnp mov shrd mov xchg or and ds clts sub dec xchg xchg jmp cli inc jo and (bad) pop jl test mov cli out cmp adc decl sub loope inc xchg out sub sub sub mov jns,pt jp incl popf push mov js lret mov pop dec mov push (bad) into stos mov mov sbb xchg gs (bad) js add rorb mov inc xchg (bad) jle jmp cwtl jmp jmp dec test (bad) or shr jge cmp outsb and xadd inc fwait sahf test pop xor add int3 insb sub scas gs stos cmpsb xchg lret push (bad) push pop jno movsb add sub jb insb or and daa pop in add push cmp sub inc loopne and xor sbb adc xlat iret fimul jmp or std xchg xchg push push ljmp push pop sbb push and push pop and in out daa std jbe mov or addr16 inc lds in push xor les into xchg daa mov cmp xbegin mov rolb clc sub and outsb popa mov or mov cmp cmp or cmpsb das fistpll das push dec fsubrp sub imul jp lods es lcall (bad) pop or aaa jbe xchg jp lahf lock xor dec sub inc jg lahf cld push jmp (bad) pop xor incb push ja shll js mov mov adc lods pop add lods cmp jp xor dec sbb out fs aam ljmp popa jbe pop or pop xor sub xchg sti test add outsb andl fnstsw repz imul insl repnz sbb pop or rorl or into lcall and dec mov outsb std addl push cmp das dec mov mov fcoml sbb or call sub jb jo pusha std add and pop cmp inc mov (bad) push repz cmp jle xchg sub (bad) repnz mov stos dec rcrl xchg pop jge inc dec push adc xchg (bad) lock jecxz lds sbb ljmp dec std enter sub jne mov repz aam push xchg fstpl mov hlt inc inc xchg inc ret cs out ret aas xchg not lcall aas out sbbb fucomp ja shrl jle sub fisttpl and rolb dec push inc xor mov adc jo pop push pop pop sbb subl mov pop sub ss cmp mov xchg mov mov or add aad push add and jmp sub neg aaa dec fldl fwait call ss leave sub xchg mov insb imul nop fwait pop (bad) adc ds jbe ja cmp xlat jns movsl push jg mov jl or (bad) sbb test lret sub add add cmp enter dec lock push adc mov daa loope dec aas nop mov fildll jmp cmpsl pop or or xchg mov push mov gs dec sbb stos mov or (bad) (bad) cmc ja add dec sti leave push icebp mov lahf dec das sub daa cli shrl cmc xor rolb add push adc out inc pusha or sarb inc and pop add pop push mov pop hlt cmp xchg je xchg push imul and sti jmp xchg ljmp mov or pop push lret mov lock and neg call add push aad shrl jmp or loope jmp imul dec add sbb mov push push jecxz daa pop rep mov (bad) jl dec int hlt cmp sub mov jo pop (bad) inc jge pop aaa rcrl lock ret jle ret test sbbb xor cltd lret repz ljmp or dec cmc sar pop mov fsub push cmp outsb jne int stos xchg dec dec call mov cmpb or push das cmp sbb sub pop add push rcrb pop sub cld popf fnsave and sbb dec rol inc (bad) mov sub (bad) addr16 push lds pop cmpsb xor stos cmp push mov mov xchg fidiv push ljmp mov pushf lock mov dec add cltd ret add popl push inc mov push (bad) jecxz test (bad) mov out sarb ud1 push scas repnz leave lret add in addl cld adcl inc faddp sub jge mov sbb xor inc xor mov gs mov adc popf and mov divl ret (bad) decl jle pop pop add jge shr xacquire outsb ds shrl orb gs jg push mov test push rolb mov sti adc mov xor dec xchg push pop ja (bad) ja nop push sbb push xor and and pop pop mov xorb push xchg loop rol bnd movsb add or add jnp adc test aaa pop ljmp adc loop xchg and cmpsl scas push mov sub outsl dec pop add (bad) jae pcmpeqw add inc and push lods sub dec add add jns jp rorl sub and push movsl mov xchg rcll fbstp jmp xor cltd pop sbb xorb lret pop push mov or hlt jle mov sbb push jno mov inc push sbb dec xor mov mov sarl out (bad) or push cld in iret (bad) aad icebp mov mov push or cs fwait cmp out sarb push arpl sahf lock inc mov cmp pop add mull mov ret jle test cld pusha push add inc push stos jae add shr push sub mov popa lods out dec xchg enter pop jge add out mov shr jns and inc adc push push leave sbbb repnz sub mov xor jg popf pop jns sub dec ds pop leave in loopne out push jge dec stos lcall sub push bound lcall or mov loope rclb sbb or dec add hlt cmpb stos xor sbb xchg mov jecxz xchg push icebp divb push nop add pop aam lahf push or add add and jne push pop ds adc jge mov add jg jle inc push pop nop mov and movsl cld add add inc pop outsl cmpsb jbe xchg xchg out xchg bound pop push push mov xor stc pop mov cmp push outsl mov mov sahf scas lds inc jb jbe,pt lods cmpsb dec movsbl dec aaa xorb jmp xchg xor pop dec or mov (bad) add push into subl lods or pop push jns add mov cmpsl lret add je adc test or mov inc data16 push pop or xchg pop sub dec es adc xchg mov push or adc jmp mov pusha push repz scas mov sti add sub lahf ret pop xchg adc pop push les sub into inc adc pop sbb jns push inc not pusha cmpl inc movsb mov cmp push mov xor out sub into pop push jns xchg lds jp push in and sahf jnp inc fcomps mov mov jb imul dec jne mov pop add mov mov adc jl jmp outsl and or pop push and pop pop (bad) pop jle sub jle mov in dec push addb stos sahf add jp inc dec icebp jl sbb mov data16 fnsave out jp rol add outsb mov out push das pop (bad) push dec or jne dec mov pop repz lods sbbl adc aad ljmp cltd (bad) shlb xlat cmp sub and cli cltd sub mov sbb clc scas or in sub dec push push lahf lods mov add loope js fisttpll dec ljmp mov mov push (bad) not daa and movsb popa fisubr pop pop (bad) cmp xor sub xorb stos ret fcmovb mov in xorl lret push fsts cmp push and sub je repz pop add out cmp divl sub popa adc or clc dec dec loopne test in and dec pop nop xchg cli add shrb pop mov xchg fldenv push pop sbb shr or push jb dec pop xchg sbb add notl (bad) adc jge das or push dec pop je mov outsb dec xlat sbb lods ja mov int3 xchg push add jae jg adc fnstsw iret imul jbe add ds or xor sbb insl fbld mov pop inc sti inc sub or and nop fidivrl push outsb ret lret dec lock fist jg sahf adc cmp xlat icebp test std aas rorb mov add add ret mov or cmc sbb inc inc xchg push mov cmp outsl nop repnz adc sbb inc test lahf jg add pushl pop mov lods sub and and aas dec sbb fwait std rolb daa or adc adc pop push orl cmc jae cwtl or mov push mov sub add sarb jg mov adc test jg add push xchg jge stc lods insl ja lret mov jg push adc jno sub cmp bound jb ja dec or or add sbbl mov push scas mov (bad) mov xor outsb outsl daa outsb lret lods fstpl xor sub sub push fiadd and xor hlt fsubl cmp or mov cmp xor xchg jle imul ret cs jne jg pop das aas or dec imul idiv push add push push adc stos xor pop enter dec inc dec divl enter jnp hlt jb jle add push sahf cli sbb cld xor dec or pushf popf or jmp cmp es in jg mov pop mov jp iret push fdivp aad loop xchg dec test sub jnp lret jne out and pop mov jo push inc and mov fbstp push add mov pop sub scas push mov jle repnz jne jg cmp xchg mov popf in repz ds mov add push push mov ljmp ljmp scas std mov and mov pop pop in mov scas mov fmulp lret inc addr16 sub push das fistp mov out adc mov or call addb movsl add imul xchg xchg mov movsb inc repnz add (bad) or fs jmp mov in sbb or icebp jno repnz dec push jmp push push dec mov maskmovq (bad) dec jns inc push push xor enter add dec push push add daa cmpb pop mov dec xchg outsb aam movsl aaa inc pop jle push inc or xchg mov cmp push scas in pop movsb inc stos push and (bad) ja aam inc cli jg fisttpl push or jnp loop shrl add pop add icebp stos add js add and nop std cld iret in out das lds repz shrb inc loopne loop pop sub aas insl in push daa sbb push adc xchg std jg mov repz jbe cmpsb movsb and lahf in shrb pop xchg cld xchg aam jmp xor push leave outsb add sahf jecxz lock (bad) pop (bad) stos movsb rclb push dec out je cld ror pop pop shr movsl xlat out xor repnz cli push aas lahf hlt sbb (bad) outsl mov add add push das mov popf ret and adc xor mov cmpsl sbb aaa mov popf pop repz dec shlb inc pop lahf in mov outsl push xchg in add int or in adc jae lcall (bad) jnp in push imul flds mov movsb xchg lea or jno fsubr pop xchg stc mov stc sub aaa push pop movl xor mov jns jl xchg test fiadd pop inc int pop or xchg pop mov mov mov test mov fistp (bad) sarb cli pop sub scas push (bad) or sub jmp push mov jle dec push xor lahf pop ss lock xchg std push into xchg adc ret ds leave aas imulb (bad) cmp fldcw loop mov push push xor repnz aas pop mov sub push mov loope pop sub jnp mov cmpsl outsl pop push jno aad dec cwtl mov shrl mov fldl (bad) and rorl call fistl mov stos dec hlt (bad) jne sub add mov jg push aaa and push add stos repnz aaa sbb sub sub out test out dec push push and pusha lock add mov fnstsw pop pop adc pop inc xchg push clc add jo dec and jle (bad) or outsb add mov sub je mov cmc das rorb shrl xchg add lret outsl add pminub push inc sbb jl xor xchg mov jp (bad) fbld stc aas lret jg inc push rclb decl fistpll push dec jae jno pop jg and test add xchg dec or mov jecxz cmpsb jl mov or movsb repz lds insb push bound fwait cmp add data16 jnp pop mov (bad) jp hlt std fidivrl aaa dec and xchg push inc mov mov add add sub popf and or or xchg dec std mov xor mov out fs stos sub jmp add in sbb add lea insb push je add adc test and mov test mov enter dec or mov loop out pop aas pop push xor xor or fisub jg not jmp pusha mov or add mov adc jmp add dec xor (bad) repz fldt loop xchg in (bad) and mov (bad) arpl sub push out or pop sub jmp add mov loopne pop mov xor shrb xchg pop paddsw pop les in (bad) jg insb leave pop or sar cmp mov push insb add call test decl mov outsb jmp mov dec aad or clc aaa add cld push jne jl jmp dec mov xor adc bound mov out icebp or dec outsl lods iret cmpsb adc jne aam add or cmp inc mov ja dec xor jge sbb fimul push sbb (bad) add inc ja pop ss ds lds jmp lods fiaddl cs cmp mov add or outsl inc or push mov rol out jp add adc fs int3 fndisi(8087 jne notl jmp das or repnz mov add aaa cld jnp scas stos in into mov pop xor lret push or daa dec (bad) push pop imul ja (bad) lock or pop pop std inc in sti call add jmp mov jmp fs ss xchg push inc jecxz jle cli ja mov add adc mov xchg jmp cmp xchg and cmp mov inc or pop mov (bad) pushf dec push scas xchg fs mov cs fldt or std icebp outsl nop fwait lahf nop mov cs jo or inc scas add mov xor jecxz adc pop inc movsb jp xorl int3 aad mov sbb mov ds sbb adc push adc sbb fsin xlat repz std bound icebp jmp jg add test dec out adc pop lea xchg push negl dec pop arpl xor js std push (bad) das add arpl out std xor jmp insb push push mov andb mov pop or fbstp loop orb jmp or mov or bound repz add adc mov push sbb mov fdiv pop pop pop mov jmp mov push pop pop outsl idivl idivl (bad) imul xchg test inc add test lret in pop lret cmp cmp daa aaa lods mov iret mov jne out xor lahf xor (bad) jns popa loopne pop mov mov mov jp or dec or aad cmp pop cmp lods (bad) iret push stos or xchg push stos gs test pop pop out das stc shl push xlat adc mov dec loop xchg jmp je in cli jb or jmp fwait (bad) lahf mov lock push cmp dec data16 cli jns mov mov pop add xor aaa out mov dec push cmp mov dec aas icebp movsb adc xchg pop mov addb dec jne icebp cld mov aad mov xchg or inc scas sbb pop mov es insb daa dec lret mov cs push jae and pop movb push or jmp mov imull js adc sbb pop and jo or icebp imul aad popa fs imul ljmp jb or out movsb mov clc stos repnz xchg popa divb inc jmp xchg jmp jge leavew mov aam pop add in sub xorb out add xchg mov (bad) ja jmp mov mov (bad) push insl and dec push xchg pop rcrb mov cli jg ljmp push push jbe shufps bound or xor mov inc xchg or or pop out fiadd xor or cltd subl in cmc or mov push pop dec loop or inc pushf (bad) cmp mov addr16 popf sahf inc xchg jns sub sbb sbb std ret xor jno fwait sub adc mov ljmp lahf aas decl shrl mov lret ret outsl jmp push xor or fs jae mov mov nop pop inc (bad) test lds shll lret adc sti push add fisttp sub xchg cmpsl sbb or adc mov xchg mov clc dec cwtl xchg rclb ja mov xor ljmp fucomp adcl dec mov jp fwait jmp fdivr jbe mov xchg inc jmp mov andl add fsubrs xor mov fistpll mov xor sar sub cmp xlat lods loopne nop pop lods fldcw or jae push cld test push and mov ljmp jmp jmp pusha lret add bound movsb xor imulb imul mov inc xchg pusha in cmpb pop inc xor push jg neg and lds mov mov pop stc mov lahf pop cltd dec add repnz adc xor push jo and xchg cltd cld aad and mov cmc and mov push mov mov dec add adc xchg push les xor fisub mov jnp or imul xchg xor pop push js cltd or lds aad push mov int rorb push inc push or add fs insb aas (bad) repnz or adc and jmp cmc das xor add aaa push sub jae mov repnz adc dec xchg call sub adc jns mov or call ljmp push xor test call pop fwait inc dec pop jmp mov cmp jae pop clc mov mov ljmp adc mov or stc sbb jmp clc dec cwtl ret test test arpl sbb dec adc (bad) xchg dec mov push ret or sbb cmp push cltd cmp adc (bad) mov inc add in mov imul mov pop idivb dec and sbb add cltd jnp das divl je int3 movb stos push and (bad) gs adc or clc fwait (bad) fisubrl cli call cwtl mov sub push stos xor data16 jmp push push pop pop dec jmp andl dec imul mov or lret mov push mov ja in jmp loop (bad) dec sub das rorl int inc mov add jge dec lret rorl cld mov adc ret rorb push test mov and out in aas xor jmp pop xchg shr stc add cmp jmp rol outsb xor pushf push jg call push xor or add in icebp test and mov add arpl sbb mov icebp adc push dec sub dec or cmp cmp cmp (bad) int mov xchg leave mov xorb xchg mov mov rcrb lock popa leave pop sarb mov (bad) mov pusha ja jle lcall loopne add clc sbb movsl fisubr imul xor loopne add adc movsl and add sub fwait push sub adc rcrb add icebp (bad) or add jge sbb and lock arpl jnp addr16 nop sbb pop (bad) (bad) mov icebp cmp mov inc in jae call inc xor push cmp add hlt cmp add xchg cmp movsl icebp mov pop mov mov fsub jae add mov addl pop aas lea fsubrp (bad) lock or clc sub xor add mov sbb add pop dec jb test inc shrb rcrl adc fisttpll or cmp sbb jg add movsb sbb sub push div lahf add adc inc jnp jmp aaa bound dec dec dec int shrb dec sbb xor mov mov xchg imul cmp xor andb mov pop adc aas std sub call sub dec xor test mov adc dec pusha leave push lea outsb nop mov mov lcall out pop add dec cmp cmpsl icebp xor add xchg movsb add mov push leave and pop jno adc imul add sbb mov push fimull push pop add cmpsl mov dec popf adc mov xor out test add push aam cmpsl loop sbb stc movsl add mov and push xor in xor or cmp ljmpw roll push sub jbe (bad) or daa mov dec ret push pop pop inc pop jg adcb push push lock popa push leave xor sbb xor es mov mov dec mov int3 jbe sbb push sbb and sbb aas mov adc shr sub xor loopne xor dec mov add xor clc fwait xchg dec add popa jne pushf out inc je xchg or fs fild popf js insb (bad) pop sbb aam jae mov jno and in adcb std adc imul in pop pusha mov jbe cltd nop imul inc pusha dec ja jae push push dec fldl stc icebp sub addr16 ljmp sub sbb xor pop cltd and dec fs cmc xor lret add (bad) cmp and fcoml dec je or adc leave add outsl int3 adc mov sub stos pushf lock mov and add test pop push es nop insb dec mov push xchg aam mov sub push adc je push fsubs jmp push dec push nop and push ficoml stc cmp push int dec lret adc xor nop adc xor xor imul hlt movsb add pop adc cmp dec jno push xor pop mov mov pop sbb js xchg mov nop sub insb scas xchg pop xchg rorl loopne mov enter nop movb push adc xor mov pop and pop idivb (bad) pusha ljmp adc pop rcr rclb lahf or movsl pop xchg xchg data16 loop add adcb mov dec dec js mov test lock dec test cmp push add or fsubrs stos add adc cmp sarl loope (bad) or or adc xchg sub cmp sbb aas lods and jbe lea (bad) in js xor rcrl mov add ret xchg nop adc sbb lret dec test lcall sahf fs xchg leave pop cmp test cli sti ror addr16 inc mov psllq xchg add pop ja mov inc gs add push out (bad) mov xor in ja loope push test adc inc push test mov mov pop xchg rorl xchg adc mov adc dec mov pop adc dec pop xor pushf mov and mov jae aad pop pop mov add mov in push adc les mov enter bnd push sbb jp rorb push mov xor mov xchg je bswap sub mov sub add insb pop in loopne rorb sbb lea fisub fsubr or mov or vandps cmp dec or mov cmpsb or or test adc fs sub mov or lahf push mov loopne jmp xchg jo sub mov rcrb mov sbb loopne mov dec xor repnz hlt push jg jmp mov and jnp mov je inc or and mov xor fdivrl jge loopne adc dec mov adc pop dec mov inc mov outsl and call lods outsb push xchg sbb mov jmp loopne clc adcl pushf adc mov ss pop add popa pop lock jg sbb insl cmc ret push inc pop aam xchg jns dec and push push sbb fsub cltd icebp mov sbb dec xchg xchg xchg outsb add cmpsb arpl sar out xchg jo test mov ds jle cmp dec mov das sbb mov push pop fsubrs test outsb stos xchg test test pushf mov js ja or rcr inc jbe rorb cwtl addb sbb mov adc cmpl loopne je mov add mov mov sahf jno add fwait sub adc add in leave out mov fwait imul ror lods fcoml sbb jo sub adc aaa mov cwtl movsb mov leave jmp mov (bad) loopne out mov movsb push js xor loop lock and xchg movsb sbb push push loopne add mul inc dec (bad) mov movsb cmp mov ret push adc push sarl jo xorl pop mov movsl add sub pusha iret mov rolb xor sbb imul or sub xor sbb sub fmull xchg (bad) xchg sub in xchg addl pop (bad) xchg xchg mov loope loope pusha add or push loop adc dec test andl sub sbb mov andl push fisubrl and sub in jl nop imul mov dec cmp outsb dec and mov leave add mov cmp ds add add lods xchg pusha mov sbb pop or mov and cmp fisttpl dec cmc add cmp pop call xlat incb sbb arpl icebp imul cwtl push into pusha js scas pop xchg push xor sub imul int3 decb jge push rorb cmp int push mov pop (bad) push (bad) out pop (bad) mov adc add clc icebp mov nop (bad) mov xor sbb fnstenv movsl add and mov inc fiadd xor and loope (bad) in sbbb jmp sbb xchg ret cwtl cwtl xor xor popa jo ja shrb sbb imul enter ret lcall in ficomp repz in mov loopne (bad) or xchg mov cmpsb inc test fldt add cmp addb dec cwtl outsw mov xor fistpll adc sub mov aas inc aaa or shll (bad) cmpsb push sahf add mov cmp cli cld mov add mov cmp scas xlat and sbb (bad) clc sbbl bound add adc ret test adc clc leave stc xchg sub cmp add aad add pop pusha sub pop jae ja add or push dec ljmp push jo sbb sahf aaa inc sbb outsl test mov push push sbbl imull xor jmp mov iret sub (bad) push rcr ret inc push (bad) fstl sbb mov call mov rolb insb add dec icebp mov or adc sub add (bad) jno andl lret xchg add (bad) cmpsb xorl pusha push pop mov pop or push es dec mov insl mov lock wbinvd (bad) cmpsl subb push test add mov dec sbb mov xchg pop xchg mov in pop xchg push add aas or fucomip fwait sub mov dec pop out jnp add test jo fldenv aaa cmp push popa mov dec inc clc arpl xor test sbb pusha push pusha xor pop cmp ja incb jl sar mov dec pop fwait mov (bad) cwtl ljmp add adc lods stc adc jecxz adc test mov fstps insb rcr push pop rclb leave sbb addl popf inc cmpsb adc inc call sub subl fsubl js lea push stos mov sub stos mov sbb lea movsl xor xchg repz (bad) cwtl xor jne cltd dec mov jmp push add iret les loop pop loope lods leave pushf out sbb rcrl andb mov int pop bound jecxz js lods loopne pop sbb lahf imul and rcl xchg mov andl (bad) add pop fnop pop (bad) int dec push cld cmp adcl subl dec jne fbld mov xor pop incl or sbb mov inc fwait loop pusha or and enter mov add jge fs ret int3 add aam sbb add call mov int3 mov adc mov loopne and fnstsw fs xchg leavew mov or out sbb sbb sbb add and add or popl sbbb lcall mov loop mov pusha xchg roll sbb nop incl push mov clc movd outsl xor js inc cmpsl ret inc inc stos dec sbb nop rorb flds addr16 add hlt cwtl or cld (bad) shrb loop or pop xor cmp dec pop or mov mov jb add xorl or pop aas add out je push xor sbb adc add insb test (bad) rclb add xor xchg sub xchg nop test out sbb rorb push mov jns imul sub xor pop xchg out inc cmpb add (bad) stc xchg dec or orl mov sub (bad) popl fiadd jge nop mov xor mov mov adcb lock pop and rol and and mov inc pop movsb les dec movsl daa nop int3 sub call nop add aam insl add or jecxz shlb xchg in jae dec enter mov cmp add jo pop xor testb xchg mov fsub mov add sahf imul out xor (bad) mov xor test shll adc lock ljmp jno jmp sbb test dec push pop inc pop test and push dec rolb pop mov rol inc inc adc push mov lret pusha mov cmp clc hlt shlb sarb rorb inc stos test test data16 pop adc sbb mov lds adc xabort sbb xor roll or fdivrs push mov dec push mov sub mov in mov add jno mov mov xchg mov dec dec jmp adc int3 add or gs push jae cmp (bad) adc sbb mov stc dec or movsb bound les mov jmp mov and inc push pop dec adc xor leave out aas mov test push push cwtl cmp pop push adc mov bound lret xor sub rolb fwait dec mov cmpsl mov xor xor ret inc and and xor adc sub inc jmp mov cmp (bad) hlt sarb lret add loop inc pop std pusha aas xor lds mov js ss push outsb sarb mov inc (bad) ss cmpl mov ror icebp stos push inc test repnz imul and inc mov or ret mov or mov sub cmpsb lock push dec mov jnp or push dec in add inc push movsl xor je push jns mov push hlt xchg cmp emms dec (bad) call or pop imul xchg repz lods xor xor pop push sbb mov inc push stos jns pop xor inc push pop and add ja add cmp sub fsubs inc (bad) fninit or and mov push pop (bad) sub adc cmp dec add mov xchg add sar cli adc rorb sub ljmp sbbl inc push out enter pop adc and icebp aad movsb xor or mov pop std enter fmull sbb adc in sarl insl arpl outsl sbb addr16 aad mov pushl add jle push shrb test sti int cld jecxz imul les push insb js cmpsb and cmp adcb lahf mov pop into cmp push jo ds cmp orl or cwtl inc rcll mov stos hlt test or sub test mov cld in add mov xor imul test test iret fstpl scas shlb fsubp cmpsb shr jg rorl aaa pushf subb or out insb cmp icebp and les pop pushf stos jp xchg sub shrl adc pop or data16 and xor xor (bad) mov xor or mov scas xchg xorl mov mov cmp sub and lcall and inc xor cmp sbb or add xchg and icebp dec adc bound loopne cmp xchg int3 addr16 inc dec mov test in add insl mov jge lock push mov loop inc fldenv sbb adc add inc xor mov andl sbb push push ret (bad) loopne mov pop mov mov jp sbb icebp push sub dec test fwait add scas imul stos cltd nop adc pop push add add sbbl mov aad add push (bad) adc sbb dec sbb or mov inc pop sbb pop lds insb xor shrl xor jg lds cmp out inc (bad) rorl addl push fisubr popl mov loopne ret fucomi pop add adc xor jno pusha or inc inc int jmp adc push fadds cltd mov adc sub xbegin dec inc (bad) sbb fsubs cmp rorb jno out pop adc xor push xlat sbb daa mov cmp and insl add cmp and xchg sbb cmp dec lret fadds sbb rorb dec aam xchg fs fs xor add enter xchg xor dec and and sbb jl mov push add inc scas dec faddl adc or cmpsl jge test mov pusha pop xchg dec add jl lret test sarl mov hlt (bad) sahf add mov xor adc ret sbb lret ds pop dec jb add stos je mov lret xor cmp leave fcmovnbe dec nop jle cmpsl aas pushf mov (bad) mov or push cwtl inc sub in dec add mov fs nop in into push aaa fmuls orl out jo shrl sub cltd add leave jl sub dec dec xlat and insb adc sub xchg mov add and pusha enter pop cld jno add and add jle imul xor sbb into push sti xchg xor fwait dec mov int xor pop sub int3 xchg add scas mov cmp adc add iret push inc dec rolb push stc cmp add inc aad test mov and mov mov fidivl sbb sahf bound dec mov (bad) lock pop dec scas jbe inc and sbbb adc sbb je cltd xchg orb sub pusha dec add jb xchg pop xchg adcb in and lret scas sub in mov cmp pop inc mov and fwait imul inc ja cld or mov and in test xchg movsl mov inc nop pushf cli mov hlt add (bad) sub mov (bad) dec sub or inc xchg add dec test stos loopne cmpsl sub pop enter and xor adc or inc orl xchg pushf clc rcl push xchg cmpsl addb repz js lods add std mov cwtl mov cmp cmpsl pop sbb sbbl ljmp test out outsb mov pop mov in add xor pop mov fs sahf pop in mov cmp inc mov leave cmp cli cwtl rolb and iret (bad) push mov jl mov pusha sub pusha and cmpsl test test dec mov and xor add (bad) jne inc addb pop fs sarl adcl addb call leave insl dec mov lret fadds jge dec pop scas mov push jbe cmp adc cmp xor push imul mov add add pop addr16 adc lods mov jle dec cmp jecxz inc rcr rorb mov pop adc pop mov pusha js dec test pop inc cwtl mov ss push ret jb mov add push ljmp arpl addr16 fcom push sbbl mov dec pusha and xchg adc scas cmp pop push or cli outsl andb add and and inc (bad) les pop sub mov mov mov and repz dec xchg ljmp push addr16 es pop or sbbb in sbb mov or mov and aad jo clc hlt sub lret aaa mov call mov pop mov jbe inc jo xchg adc cmpsl xor leave add push cmpsb add popa cmp or push pop inc mov insb add out and pop mov lock sub inc into mov push sub fld arpl jecxz pop adc jle or stc fdivrl jo in nop fsubrl test lods cmp or rclb push jno dec dec inc aam addb or call ss jo and push cmc jae js (bad) shl and mov sub or or arpl push cmp jmp jge pusha inc iret (bad) nop adc sbb or sub inc lcall and adc es sub add clc inc cltd push das orl data16 or inc mov js or cmp xchg dec test stos cltd jns jl and pop lods rorb pop xor ret mov mov push jno jae cmp andb scas fsubs scas add pop out inc sub mov sbb add push pop xchg xor add cmp test jge xlat mov cmpsl sbb inc mov mov add loop mov fs aad inc jo add mov sahf xchg pop inc out inc pusha push sbb xor dec ljmp cld xchg adc mov push push lods jae mov test or sub mov xorl push test mov mov xor (bad) lcall test and idiv add popa add push mov jecxz and add enter xchg pop xchg push fnstenv pop push scas orb sti xor pop sub cmp cwtl add and insb adc jp pop fild (bad) mov mov pop (bad) (bad) jns mov lods pop sub pushf scas jg and clc aas cmc (bad) xor add inc mov add popa mov js sbb int lds adc out xor pusha add pop ret int add loope lret adc pop dec data16 fistp lcall test (bad) ror dec sbbl lods inc or dec push dec cwtl testb aad sub and or add ds lahf mov rolb jb add addr16 mov ret iret cmp and outsb test add dec (bad) mov mov or pop cmp icebp loope cmp mov insb push test imul jno xchg push xchg push subl sbb fstpt pop xchg mov enter loop cmp inc andb cmp dec pop jb ss popl push subb daa sub add mov fucomp mov xchg (bad) in les in mov add outsl loopne mov xchg xor jmp mov fstpl sbb aam fwait adc inc ds xor out mov adc pop adc cld and cmp les xor mov out jmp sub out sbb cwtl shll (bad) fsubrl ja sbb rcrb and mov (bad) xor dec clc aaa jno lahf test adc dec adc or cmp mov int3 mov add cld ret xor inc mov or nop sub or mov add rol mov popf ss (bad) mov dec inc xor push pop leave adc dec inc sbb clc addb mov idiv add lds pop mov inc rclb fmuls in insb mov dec dec push fimull jmp adc mov aam add stos mov addl add pop xchg (bad) ja dec mov hlt int sti fldt subb cli aad lret sbb shl cmp in sub mov cmpsl mov or test mov in add int cli rolb or pop inc jecxz and lock (bad) scas ret ret adc or mov or leave shl push out sub out add pushf adc sti add and and out dec mov pusha rol push xchg test (bad) in aam scas mov pop cmc and inc test orl popf or insb pop and cmp and stos stos pop adc inc sub add mov xchg daa xchg stc ret push enter in pop rorl mov nop lods mov mov js xchg movsb inc std mov js add (bad) lock push pop sub inc inc mov ret or xchg cmc adc xchg mov in or xor aad mov adc xchg and stos push add xchg sbb add mov add dec xor or js push fwait or jge mov pop adc push mov jecxz stc xchg daa xchg arpl fcoms rcrb subb push cmc xchg aam dec ds nop add popf or xor fcoms loop cltd das sbb and add insl orb jne gs cmp repnz xor mov std sbb cmp insl enter jle sub or or jae cmpsl adc or pop aaa push mov cwtl inc pop cmp xor xor push push add ret add inc and rorb push add (bad) sub inc leave xor or subb mov jne jno adc push and (bad) xchg dec mov push ljmp sub aas xor lcall mov jg rol pop dec cmpsb xor pop scas pusha rclb sbb dec insl scas lret icebp add add (bad) stc test fimul pop stos inc nop and call jb jecxz loopne mov pop sub daa inc mov and dec pop pusha inc sub sbb jnp cmpsl sub xor into adc jb jecxz inc mov add repz xlat movsl mov int3 outsl xor or xchg or ss pop psrad jo jl lods sbb notb inc (bad) xor jl daa int xchg call (bad) add mov je fdivrs ds fildll lods dec iret add mov lcall popa pop jne jmp shl add fcompl xchg inc adc out add cs and das insb lods into jg xchg dec adc add idivb pop dec gs shrb aam add sbb insb cmpl subb es mov add (bad) mov cmp loope pop mov xorb push add dec lcall mov cmpl ds clc mov push arpl sub mov les add or push leave inc in xchg pusha in jb out jmp insb lds clc mov rcrb int mov inc (bad) mov add push inc push jno notl mov cmp inc mov or aaa jb inc dec adc stos jb add (bad) loopne loopne add and lds cs or cmp adc pusha cmp add lods push sub push lods dec aaa sub aad push js int or lret in (bad) push stos add xor push dec fs (bad) loope test xchg les clc ror bound xchg push sbb dec add cmp insb shll dec sti andb push push aad call in dec add repz inc cmp adc fwait mov imul mov add jecxz or and cmpsb insb cmp xor jmp dec sub sbb jbe mov mov dec dec clc scas or je mov cmpb aas mov push nop cmp sbb lcall pop jg and in adc enter dec dec nop rol sbb shl mov fwait sbb or pop call fs (bad) fmull dec add rcll nop xchg movsl mov mov cmc mov lods inc les or scas jmp imul pop insb adc scas mov mov add mov add outsb pop int3 test hlt mov and add jg mov pop test mov int3 push lret ja adc repnz xorl sbb push pop clc xor sub addr16 dec mov test or inc sub ljmp test outsb push icebp into jl cmp int add sbb push push jo pop push mov sbb or loope mov mov js adc out push pushf das mov adcl emms insb sub xstore-rng cmpsl (bad) push lods fs cmp cwtl and loop rcl cmp (bad) mov adc xor xchg daa sti add addr16 fstpl jo fwait lods mov mov sub cmc dec aam scas (bad) jae shrb mov clc sti or sub dec mov (bad) je leave addb lret movsl je mov add mov aas std dec mov mov imul adc pop inc scas out (bad) jge xchg fwait cmp fmull cmc movl test pop loop sub xor hlt aam (bad) cwtl adc sub xor or sub push ds mov test insb sub xchg or lods test xchg add lods cmp push loop sbb cmp daa loop jbe xchg and dec add sub popf test clc sbb arpl call jno sbb pushf and test (bad) cmc push jl (bad) jno mov mov or or mov enter dec inc pop (bad) adc xor dec in jge cmpb test inc push or and jns add xchg and xchg adc cmpb jge icebp aas lock mov cmp inc sub fistpll push jno sub cmc movsb sub dec hlt jmp add aam add (bad) call pop xchg pop shlb mov mov or hlt nop adc std push xchg clc or sbb add (bad) cmp xchg pop pushf pop dec add pop add (bad) mov xchg (bad) movsl jo cmp pop xor movsb or lock dec imul andl jp test lods cwtl and les mov adc ljmp add sub in or cli push test and leave or jo test sub push les pop dec xchg push jl das enter rorb cmp loop,pt pop nop adc sbb sub inc jne jno pop out or lret movsl icebp test in sarb hlt jge dec adc add cmp xorb xor arpl rcll add sarl adc repnz dec data16 add sbb (bad) loopne sbb stos mov mov stc mov cmp jge xchg mov sbb leave sbb test push sub cmp aam fdivl adc xchg rclb and (bad) adc sub and rcr dec adc enter in sub jmp aam or push lods push sub aad add xchg insl adc ss cld test and xchg repnz cmp lcall mov fs xchg mov mov inc sub cmp inc adc push cld clc cwtl cmp inc xor mov push ds cltd adc aam add shrl cmc pop loopne or ficomp pop sub test and ljmp sbb loop mov mov ljmp adc sub and jae push pop and add loopne sar hlt cmp mov movsb cmp mov addb mov fs lcall add adc test mov in shll lcall test movsl jns pop or lret dec xchg mov sub aas shrl sub dec loope cmp test rolb sbb sarl push adc lds and push mov xchg push cmp mov int3 out adc lock enter hlt (bad) push mov dec add (bad) mov add adc sbb pop pop xchg jo add inc dec sbb and push (bad) inc jle xchg addr16 xchg mov sbb aam sahf negl xchg mov sbb call dec xchg into ja ds cmp inc mov pop xchg inc ss sub sub cmpb pop and jbe inc push jne clc add sbb pop imul fsubl mov icebp data16 aad sbb mov pusha add pop mov mov sbb dec cmp shrl into jl add sbb popf xor (bad) mov jo in xor (bad) inc inc fcompl insb divb xchg les int3 lock xchg les pop mov xor add outsb lea loopne and cmpsl test add ds ja fldcw les mov aas pushf aam cmp enter xchg and or mov inc into dec mov add xor out movsl imull dec mov add add jno pop push jge adc fmuls lock fcmovu adc sbb stc xchg (bad) (bad) mov mov (bad) aam sbb and jmp lods xchg rorl dec repz adc test enter and cmpsl adc jo xchg xor inc lret push mov fmuls (bad) sbb js xor and in int3 test adc mov jl cld inc pop xchg clc dec dec or cld enter lahf dec mov cwtl into add add xchg outsb test push aas cmp push andb int3 mov cmp enter sbb sahf test (bad) sti jmp xchg sbb or add xlat cmc sbb sbb or dec int jp pop call in pop dec sub in cmp pop lock and or fucomi inc icebp adc cltd test push jecxz mov adc loopne inc test xchg mov pusha fsubrs subl sbb repnz leave lds das loope and ret inc dec leave add add ss loope cltd mov fsubrl and xchg mov jecxz mov jnp mov sbb inc imul push mov (bad) jecxz test add pop hlt stos pop lahf inc sbb add dec aas add mov push outsb mov es push daa cmp sub jl insb pop std adc lods fdivrl jbe ffree cmpsl mov sbb es shlb subb icebp sub movsl push mov jne adc out cmp js dec xor mov adc mov xchg enter cmp lahf sbb (bad) push push int3 mov add xor popa call dec cmpl aas sahf inc lock mov mov (bad) or in inc xchg (bad) add pop fwait leave xchg jo adc (bad) cld jo mov mov imul sahf andl dec push pop mov or fisttp lock push or mov cmpsb sbb mov (bad) push lock add xchg in jno jno imul mov sbb das add adc sub in and pusha adc and push nop push mov dec or and loop fsts mov aad or fimul (bad) dec xchg inc push sbb popa ret adc add jecxz flds pop push nop adc in test mov subb push lds push adc adc push jae sahf or ds and test nop pop sbb lret ret jo addl int3 mov xor adc aad dec enter push jmp sbb jnp,pt cld sub push push scas (bad) mov xor and in adcl and pop pop mov (bad) sarb pop movsb dec add xor testb test xchg adc dec les dec outsb add dec jne leave pop aad xchg jl mov lds es mov arpl outsb sti mov jle add adc push add mov and cmpsl mov pop jb movsl movsb add xor dec loopne sahf push sub gs xchg loopne xlat mov mov stos dec nop sahf add cmpb fwait in and lcall lahf adc xchg repnz aas sub xorb lcall push inc ljmp inc sbbl ret ret cmp aad xchg js nop mov js xchg dec add lret movsb mov add xchg add std dec rcrb dec mov xor cmc lods adc fcoms mov js icebp cmp mov cmp adc inc mov pop cs push popf icebp mov xor cmc jb add jae pushf push adc loopne mov xor dec jb aam out or sub adc shr int in jbe mov mov or pusha jecxz mov mov fidivr sahf or add or sahf cmp xor scas push insb test mov pop dec jl jl ljmp cmp aam repz sub insb pushf movsb js imul mov jmp rol movsb xor adc or pop pop sbb test stos mov js mov xlat in in test enter inc push xor xor loop jp pop mov mov popf add sbb hlt cld xchg xchg adc jns jnp fimull cmp insl jl das loop rolb or or jecxz cli pushf xor fs loop mov adc inc mov pusha pop and rcrl imul xor push shrb push dec iret push pop movsb js mov and icebp inc das fwait sbb fsubs xchg outsb xchg popa sub add addr16 hlt int out or fsubl in adc cmp push dec les mov xchg pop mov repnz xchg pop sub cmpb inc cmpsb xchg xchg add sub sbb int inc cmp fidivr dec add sbb and push pushf pop (bad) adc push push adc mov or cld sbb (bad) lods ds jo add ficomp cs xorb mov fildl gs xor jno bound mov sub cmp loopne das aas add decb pop mov into ficomp test add mov adc cmovl in and xchg cmpsl clc pushf push int3 sub loopne adc add cli add jg or scas out cmc rcll push sbb jnp xor pushf mov add sahf sub mov add sbb mov jl add aas addr16 xchg mov lds cmp cmp mov pop xchg mov shrb mov cmpl inc mov insl push fidivl sub out jle xor adc and adc or pop xchg add out dec cltd mov and mov add ds out cmp and pop sbbb aas pop inc call mov xchg pusha call xchg addb and and movsb ret push dec es jno pause in in jle loopne outsb xchg and add mov inc hlt lock push roll popa sbb inc push jo cmp add movsb addr16 lcall in and leave push (bad) sbb lods and pop and pop mov adc negb fist mov mov jo mov repz orl xchg test xchg movsl cld mov clc push push test loopne add mov or mov mov add sbb and sbb add out sub pop mov cmc sub or sbb sarb pushf sub mov cmp add out sbbl dec insl movsb push dec cli xlat sbb scas xor push into jmp (bad) mov nop test sbb pop clc in pusha mov cltd add cwtl add jl cwtl jae mov xor mov push int3 clc out inc loope add xchg push popl out stc add fidivr mov outsb pop sub mov fsubs and jle movsb xor jns add dec mov sbb dec adc clc das mov call pushf and sub pop daa movsb jecxz push xchg push (bad) jno jnp mov lret xor xchg bound (bad) push pop pusha loopne stc in push pop loopne jmp pop lods pusha aaa imulb inc lock aas xlat leave pop cmp mov mov dec loop cmp enter sub add aam or mov cmp xchg rcl xchg sbb sbbb (bad) (bad) mov (bad) int3 outsl (bad) (bad) xchg push mov adc push cs cmp jmp adc fisub pusha ds loop in in lods and pusha (bad) cmc xchg push pop mov repnz es pop das arpl sub xor push or pushf fcoms out push cmpsl rcrl mov cmp fadds mov repz inc push rcrl sar cmp jmp xchg sub mov sbb adc sbb mov pop mov or and imul and loopne movsbl mov xchg call add cwtl scas shrb imul loope push cld ja push iret mov out lock mov sub adc push sar in push push aad jb pop das add test push rdpmc mov or pop nop mov gs (bad) (bad) test xor aas add xchg push dec sbb jae popa mov lock jle add test jno rclb pop adc hlt fcmovbe cld js mov xor (bad) arpl mov imul shrl pop cmp or ds das sbb xchg and xchg sub faddl jbe or add push or pop dec sbbb popa pusha xchg sbb (bad) mov and or outsl mov add addl loop inc and mov mov mov loop test adc adc mov imul imul dec cmp xchg les add sub adc add loop pop add jl hlt dec mov mov jno outsb aas add xor fidivr pop adc adc loop pop or jmp add imul add gs push xchg xor fldenv push inc and js pop mov cmp pop std pop (bad) and mov sub mov pop addb out leave aam je sti add dec add mov adc loop add or pop nop call ss pop or arpl mov or adc fcmovu clc rorb fwait adc and std and xor les (bad) subb aad xor mov shrl sahf ja into call fisubl mov add in push cmpl pop sbb xchg pop mov and add xor add (bad) in popa push pop jne or imul mov dec and add adc (bad) aas xchg or sahf push ret stos mov sub add flds loop mov mov push loop xchg adc mov or add or sub add push mov fist into out mov pop and and (bad) and push push lret or imul jmp add jp xor sub mov mov dec mov and dec and push mov push js sbb xchg divb sbb movsb add int popf mov call jbe adc mov push inc jno bnd test push imul sub mov fs das xchg adc test sbb es xchg mov addr16 mov daa dec (bad) sbb add mov dec loopne sub xor loop je sub fiaddl mov gs xchg mov mov int3 push popa jg jno pop int loopne mov lds pushl pop sbb or pop lcall shl or js push mov imul mov icebp adc add pop les repnz fsubp enter icebp adc jg pop sub push inc lods mov mov xchg inc daa (bad) mov and pop add and sub cmp test and dec dec lcall les clc popf (bad) (bad) jo inc push jns xor mov and pop scas jg lods mov outsb mov pop jg outsl in sahf sbb add in xlat xchg clc jg push or cmp push jbe mov jmp das outsb sar lods dec jne pop setbe cmpsl mov mov popa sub push jecxz add and mov imul pop and sub adc inc add aas lock cmp mov jmp pusha push sub test les cwtl cmp js xor (bad) imul and adc outsb mov cmp sbb repz in mov pop lret adc mov xlat pop add sub push inc call jbe ret lea pop xchg push pop cmp add aaa jno in sub sub fadds je adc imul rclb add icebp incb aam add pop arpl sbb test sub or or add add and add lcall cmc arpl push repz mov insb and and xor xor pop mov pushf adc cs je mov push shlb sbb cmpsb pop out jl icebp int3 cmpsl inc sbb (bad) mov cld or in pusha adc jle call sbb dec mov mov mov cmp mov add mov add cltd jno pop stos adcb dec loop lods dec mov sub mov in insb inc cmp or cmp fmull mov je or and mov jb stc add pop cmp mov push insl sahf leave rcrb inc add xor mov xor mov mov lea mov xor xor addl outsb es jo or repnz jo sub mov or add mov xchg ja cmp mov mov adc call jg xor fist shlb dec mov test mov sahf pop cltd imul adc mov cmp add and and add mov imul lcall inc mov mov arpl aam ljmp lcall jge,pt stos pushf pop mov fmull pop adc dec sbb push adc pusha mov je (bad) sbbl sub mov lahf mov fs push adc fimul mov mov pop lods imul cltd sbb and push adc and mov and icebp add mov mov mov inc xor mov push std mov test aam mov rcrl mov sbb aas add adc add mov dec adc out or xchg test or mov pop popa adc inc aad and push mov imul mov mov ja sbb xchg mov push sahf lcall add cmp out fs rcrb mov subl test daa xorl push out jns pop add fmull jecxz shlb dec add andb (bad) jbe enter sarl (bad) addb jne es into or sbb add cmpsl rcl outsb mov sub and or cmc cmpsb cmp mov xchg dec push enter loop xor dec pop push movsl stos cmp leave xor and add dec ds adc push dec dec mov lds or addb cmp or push mov xchg or subl sbb sub loop (bad) fistl mov pop and sbb sbb cmp add push cltd std outsb test xor pop (bad) push arpl pop sarb cltd nop mov lock adc bound cmp (bad) in sbb insb cwtl add imul lods add push int3 mov roll pusha or imul push mul lret xchg (bad) stos int jecxz add mov dec inc cwtl test (bad) in scas adc mov add sub jmp rorl sbb mov lods cmp sahf sub js lds lahf lock adc sub jmp push adcl out inc or loope push xchg call mov fs test adc jb dec jo ret lock mov pop xchg aas insb mov inc in and sub loopne pop popa jno insl pop dec mov mov stc pop (bad) iret test push push xchg clc mov jbe mov adc (bad) cmp cmpl subl dec cmp xor mov add mov rcpps push mov loope pushf pusha sbb and aas jb loopne mov outsb nop mov mov cltd jbe push jne adc xchg out test bound push and push fstps add jge and xchg adc cli mov or ret adc jno or sbb mov into aad xor and adc and xor xor lret push loopne ficom cmp cmpsl cmc mov or push enter or dec scas repnz cmc adc mov add (bad) test movsl xorb and mov add push xor jmp add or imul repnz adc and jbe add adc xchg pop mov mov jbe mov inc in push dec sub in (bad) imul movsb mov test dec mov mov call cmp xor xchg mov adc in xchg loopne push xor sub pop xlat and jo or ja sahf repnz js pop mov pop out push clc xor mov pop ljmp insb pop fildll imul xchg jo add decb or out or lods in adc add pop and jns or sbb stos and xchg add mov mov xor xor lods call ss xchg loop xor inc and dec sbb or lahf ret mov ds add xor add shrb add cmpsb jmp inc push mov orl clc xchg push test nop xchg (bad) xor push mov pop daa or cwtl xor and cmpsl mov xchg adc push mov adc (bad) lock add aaa lds es cmp shlb cmp stos mov and xor in shlb pop jo xchg roll jo push out orl (bad) ljmp or push aad (bad) popa pop mov mov nop and (bad) (bad) aaa cmpsb pop push cmp je shlb add xor loope enter add jns inc int adc (bad) (bad) jmp nop mov inc lock rorb dec shll xchg dec xor je adc outsl inc jae movsb arpl clc aad nop mov nop pop and or mov cmp je and subl aam mov sbb aam hlt or inc es cmp add inc insl leave mov (bad) dec loopne push mov jmp xor pop add add insb xchg (bad) leave in adc mov int3 pop inc rolb sbbb sbb shll das dec fdivrs and loope mov dec je mov jmp sub nop and popl mov sbb lods lret add push and enter jecxz shrl lds adc movsl and sbb adc push rcrl add insl out jmp mov sub int popa lds mov addr16 mov or out mov leave cmp pop push pop jg adc jns pop hlt xchg in mov sub mov dec cmp jl mov fidiv loopne cmp test or inc and stos and push aad add adc test lahf inc fsubrs bound inc fs sbb rcr dec push sub cmp mov repz adc pop rcll xchg xchg test pop jnp or sahf mov jno push adc adc mov xorb and adc push outsb movsl bound and pop jmp add dec mov add adc jmp mov test xchg ljmp mov jnp cmp push movsl sbb push push cmp adc enter pop or add add test (bad) mov mov add sub test add adc jmp push js dec push test sub pop sub popf repnz hlt loopne jo add mov sub adc xchg xchg inc movsl mov int xchg xchg repz in mov sub clc mov add xorl jp pop jle push lret cmp movsb scas jmp sub lods fmuls adc ds xchg movsl leave jecxz fwait xor out pushf loopne dec ficoml mov lods je push xor adc dec enter mov adc add sub add jbe add pop ret mull push mov mov dec addb ss sub xor movsl jno inc adc pop test or and add or arpl or fwait leave sbb cmp clc fsubs add add xchg pop mov out mov lahf sbb xor sbb jg jmp add mov shr cmpsl pusha shll cmp add lds add lods sahf sbb fcompl mov aam xchg dec scas pusha cld mov and pusha cmp sbb shrb rorl (bad) in add pushf lods bound dec xlat mov imul mov aad mov xchg xor and in pop ret jno adc or jl imul mov xor mov es pop adc jno mov bound sub xor mov push pop mov mov pusha pop sub orb mov dec rclb push outsb xchg sub xchg pop repz dec jecxz bound data16 xchg cltd inc push (bad) mov add jg pusha sahf push dec mov cmp aas js dec (bad) sbb mov mov lea adcl sub xor mov les xor loopne push cmp lahf push dec sbb loopne mov adc icebp mov pusha jmp icebp xor and mov cmp and dec addb ljmp sbb mov pusha or pop ja or push jl add in int3 test and sbb pushf and push jmp cld add clc cmp andb xchg or fs mov cmp pop pop xchg mulb int3 mov xchg in add pop sub sahf ds jno cld movsb mov add adc daa imul jae rcl repnz add cmp rclb test ja sbb fyl2x fcomps popa mov push (bad) jecxz je or inc (bad) (bad) push mov fstl loop aas imul lahf cmpsl mov shr fnsave js aaa adc or popa cmp mov jle and jae jmp xor lcall rol lods inc push xchg lock pop cwtl and xlat in stos jo js loope sub jne sub dec fldl dec sti xor xor ljmp mov out dec into mov mov inc (bad) push cld mov (bad) push (bad) add andl add mov or add testl jl rcl or pop mov mov enter sahf jne stos add add or aas push add cmp outsb lods xor fwait iret adc fisttp outsb cmp mov pop imul cmpl sahf adc (bad) das and sar sbb imul mov test add sub addr16 and lock sbb in sub scas movsb mov and push jg pusha outsb popa data16 jecxz es mov in rclb sarl mov psubusb lcall loope test ljmp fyl2x and mov cmp pop add and stos pusha sbb pop dec and dec aas sbb dec cmpsl (bad) les in jns dec out mov lods pushf add ja cmp jo popa push or popf add call aaa lret mov mov aad mov mov test (bad) mov adc add pop adc mov add xchg loopne lock push rcrl imul mov push imul sub add sub adcb or repnz pop adc (bad) fdivs test add mov dec ja rcrb cld add mov cld in clc push rcrb mov or (bad) push gs jno les ljmp xchg insb add cmp mov sub pusha push fwait imul addb mov adc push sti push mov pop popa and aas nop es out and loopne adc cmp into jp scas add or in pop or or sub or imul icebp cmp mov jle and decl sbb cmp (bad) pop xchg xor jl add stos cld mov pop or addr16 adc outsb mov or bound add test test adc jbe test push ret nop loopne mov sub push mov in and sbb xor push clc negb lahf mov je dec sti sbb fisubrl (bad) mov dec aam insb adc pop test mov and dec add sbb loopne xorb mulb add (bad) or jbe je cmp sbb repnz add sbb push dec stc pop add jbe jmp push and mov add pusha xchg mov mov cmc adc sub cmpsl fmull cmp daa add loopne adc pop out sbb cs loopne mov push adc push jge adc mov mov cld add mov test or adc cmp jl inc outsb pop sahf xor pop or xor and hlt inc add pop cld test mov xchg add or loope adc adc push jg out mov mov push icebp fs or and dec or sub mov in orl je adc std clc mov push dec mov subl fs nop cmp push pop add pop mov add lcall imul cmp test jg stc and bound fbld add imul cmp sub cld notb push xchg in xor cmp add aaa xor movl daa insl pusha clc (bad) mov outsl jecxz js aam dec (bad) add add js sbb cmp fsubs pop mov pop outsl pop inc push les testl fs lock add xor pop imul fwait aas mov leave add mov pop fldenv inc inc and dec shl sbb xorl sbb ds (bad) dec add nop ja add and pop subb cwtl adc mov or or and xor xor xlat cltd pop test adc in or mov lods xchg fs jne aas mov fs mov mov icebp and mov call mov inc test xor pop sub fiadd or mov cmp imul nop in ss (bad) repnz mov sahf and mov cmp pop mov lods js or stos inc mov mov inc fisubr js inc or testl sbb and jg cmpb pop add aad push test push mov or pop dec sbb lcall sbb mov faddl mov and mov sbb jle add outsb lods push ret or jb adc mov push sbb mov push and add pop movsb (bad) in cmp aas test xor pop sub repz pop cmp lahf sarl test scas popa adc jbe mov jae add adc xchg aam fwait or mov add jns and push push rcrb mov and push js push add ja outsb cmp jg jmp add ret add out ds xchg inc mov and jo sub pop test jmp sub (bad) push repnz outsb cmp pop imul cwtl sub clc arpl adc jl sbb jmp shlb add xor xorb ss imul aas bound pusha mov add scas mov sahf outsb add fstpt nop pop clc xor out inc inc or lea sub push add inc loopne jns div mov sub rcrl pusha add ljmp adc std push adc xchg and or xchg add xchg cmpsl aas sub loop sti cmp mov and dec divb mov xlat cs dec add jge popf fs jle jb mov fildl sub (bad) (bad) jg adc add ja pop dec pop pushf nop lret inc pop pusha mov mov lods mov and mov lods sbb fwait jmp das add xor adc sbb fildl mov out sub push jle or fidivl add dec add repz pop idivb loopne sbb lods xchg pop mov fidivl xchg sub mov pop push lds push test push clc jnp shrb sbb adcl es mov xor push mov and (bad) pop sub xor mov jp dec mov add loop in ljmp mov dec loope aam cmc mov pop adc sub mov test xchg fcmove subb enter inc bound test add sub inc adc mov xchg mov iret sbb imul push push lea fs in mov dec sbb aas jp lds loopne inc movsl mov push out nop and lock and mov lock out mov cmpsl cwtl inc (bad) es push pop pop add jp add repnz rclb add inc and or dec inc inc or dec sub (bad) or adc loopne sub push cmp ljmp mov cmpsb stc or xor or cmpsb lcall adc (bad) xchg pusha xor xor add ss lret mov and and and pop inc pop lds mov lock add sub insb insb cmpsb repz jl pushf add je pop mov adc push fild out scas jo add xchg pop add pop mov or add dec leave sbb adc mov add mov in inc and in add mov lea push scas adc es adc inc mov sahf and (bad) push bound rolb jle je sbb and hlt add mov jns jl add jo outsb adc xor cmpsl mov andl cmp movsb add inc test dec lcall push loope fucomi sbb cmpsl int3 test mov cmp out mov lods in lea lret mov and add sahf pop aad lea or bound or jbe mov shll mov adcl xchg xor pop sbb add cmp mov aam int3 or adc mov (bad) mov ja pop mov add adc push xchg xor and mov xorb repz push mov add xor mov popa xchg out push imul out out loope ljmp mov sbb push sub mov dec subl cmc call insl popa in ss xor xchg dec test adc cmpsb xor jno pop and aaa aad stc add popa or jno (bad) sbb inc xor or sbb xor and shrl call stos inc (bad) shll cmp mov lods scas xor dec dec negb and ja loope adc test xor nop and icebp bound in and cmp push ljmp sbb jg cmp and jmp fwait loopne mov push xchg inc sbb add xor testb dec outsl cmpsl push and clc stos add mov shlb cmp jle add mov or repz lock mov in test lea negb pop out (bad) lahf cmp sub lods push xor imul jb push (bad) pushf mov xor and lods add and mov nop insb jno sbb ficomp add inc (bad) ljmp lock cmc jge add mov jae bound push loopne les sbb outsl mov sub in sbb std cmp decl push imul mov cmpb sub adc je lock sbb cmp adc dec push mov and hlt xchg sarb mov xor fwait jecxz nop call test xor sub nop mov pop mov jge jo xchg (bad) sub jecxz popa cmc push in fdivl jge xchg mov jb jo mov push daa xchg inc xlat push push lds clc jae xchg pop shl loope ss xchg jle cwtl in and orb mov nop sub cmp out or pusha lahf sbb mov push jl inc xchg jne sub sbb lahf adc pusha sbb mov inc loopne or ss stos inc and aas sbb pop add jmp stos movsb adc fiaddl popf sti aad mov and fldl jnp sub roll push cmp jle add into (bad) popl push dec push or xor xor push mov adc inc shl jmp mov push cwtl xor mov movsl add pushf jno add inc add sub lods mov mov fisub pop push int3 sub cmp push in xchg popa adc shlb pop lods in mov jbe pop loope push test mov inc scas sub inc call xchg push loop xchg mov int3 push jle lods inc mov cld xchg (bad) jmp pop movsl call insl (bad) mov mov int3 xchg xchg push scas inc ljmp mov xlat xrelease push add lock rcrb sbb add xchg pop out sub fldl (bad) xor in clc and push aad add inc (bad) inc and sti cmp push sub scas jb adc sub ljmp jno jp xor xor push stos fimull mov jo lret or adc lcall adc inc test dec jno jg cmp fstl mull out les add int3 xchg in lret cmp outsb inc or roll xor xor cwtl shlb call push enter (bad) (bad) inc es jae push fsubrs loopne out mov dec iret jno cmp add jle jl jb cmp adc inc mov xchg and xor test pop pusha mov (bad) xor push xor aas mov in scas popa roll push push xor cwtl and test pop stc movsb icebp push sbb adc lret push ja add push rolb ss loope dec sbb or icebp or lods inc in stos mov jge cmp divb jo call inc pushf pop xor pop pop out push fs (bad) xor nop add (bad) lret inc arpl mov inc adc inc xor xor add dec sub add sbb loopne mov in add repz cwtl sbb aad jae aas push cmp nop xor jmp setnp aaa lcall mov faddp in hlt fiaddl stos xchg or xor inc pop sub sbb je lcall pop popf push imul pop and xor lds shl mov and dec out sbb pushf scas fwait push dec ret stos xchg lods mov xor cwtl adc loope lret in movsb add out lahf cltd dec outsb ficom mov add mov jmp pop adc jg mov test je (bad) mov add inc jl ja lock jp and and std mov pop inc ss nop dec (bad) orb insb or divl push add pop sbb and lret les shlb insb pop out pop mov (bad) movsl lcall dec mov (bad) mov or shl pop mov cs inc aas mov and imul lcall pop ja mov mov sub rolb sub push adc and shlb jbe adc mov (bad) cmc test mov pop mov push in js in sbb lock rclb cmp add inc out mov and stos cwtl or lret mov cmp mov xchg cmpl dec inc and out in xor out (bad) mov bound lret xor adc clc mov jl and xchg ficoml jle test or lret or rorl in jmp add jge add add daa xchg test jnp js and push fs pusha adc in loopne push and out add push mov jle aam sub adc in xchg aad (bad) sbb enter cmp sub and mov mov mov int3 add push out fs outsb cmp in or sbb mov pusha cli cltd into lahf ja jecxz stos inc xor push pop mov in pop sub nop andb push nop adc outsb adc xchg cmp add add enter and xchg or mov push inc insb js inc out lret mov mov lock xor (bad) dec adcb mov aaa clc inc pop add mov sbb jecxz addr16 add or jp sbbl fs lods lock cmp imul adc cmp clc leave xor lods scas call outsb add in movsl sbb lock stos mov es scas mov and fs and movsl push jne loopne (bad) add dec push xchg pop cmp subl iret ret ret push dec xor clc sti sbb adc jnp push sub dec jnp sub (bad) in sub mov nop mov and add jge sahf cmp repnz add lods mov jns movsl rcr jb stos call push arpl jp xchg pop xor mov and or dec imul inc xchg movsb xor faddl push test push mov mov add cmp arpl outsb add loopne mov push fs clc pop movsl cmp inc pop cmp arpl daa sbb dec sbb fldt in in rcll in cmp mov test xor cmp add js out inc and xor jge cmp inc or xor cmp inc or aam stos dec adc xor sbb xor (bad) sarl aam ret inc inc mov sub add push pushf mov adc ret add jle jmp outsb add mov xchg decb sbb cmp or rcrb inc (bad) push xchg mov and pop pushf cmovge mov sbb jbe push lret inc dec sbb add inc mov mov push ds stc add cwtl loopne pop cmp and and cs in add jb adc and in arpl mov add push sti stos test cwtl add popf sub in xor insl jo clc and pop stos mov in pushf xlat mov pop in subl repz jecxz pop icebp insb add mov add mov fstl xor sbb dec (bad) or lock adc stc jns add cwtl pusha dec jne dec jae stc and sub rolb stos xor jl inc loopne cmp outsl pop mov lret out movsb xor inc je cmp sub jnp ret adc in js push mov in int3 in push clc mov mov xchg xchg jb,pn cld or pop mov push pop dec jne push shr and xchg in ss inc inc call hlt xor sbb aaa enter mov lock subb inc jne sbb dec pop xchg pop incb xchg cmp pop mov jno xchg mov int3 or add adc lret jge int3 xchg sbb mov bound (bad) lret xor js add outsb xor jo xor stos push xchg dec xchg add add pusha enter lret dec js dec xor xchg int3 pop jae test cmp adc imul mov add fwait btl adc outsb adc aad cmp fisub mov subb imul js lcall addl scas lock loopne dec mov push movsl mov add jg sbbb or loop mov jl out fiadd xor fs sub mov repz dec test js add mov add cmp dec stc pop bnd push sbb sub mov pusha mov out sbb xchg std aas sbb lock jo lock xchg push bound jnp lret jne repz dec loop pusha nop xlat mov test lock add je in mov xor pop lods aam add xchg inc sub aad and in jne xchg xor push add and xor adc or outsb popa pushf mov mov xchg and jecxz xor loopne mov sbb push xchg es cmc lock inc (bad) scas adc push and js and inc sub adc and lret popa cld inc dec cmp adc fistpl dec in sbb or add mov or ljmp ss aam popf add scas mov push shl sbb cmp add xor pop dec adc cmp fs cld add pop pop cwtl add hlt loop fs dec enter push sub push xchg push mov add fmuls scas sbb mov sbb jl and add mov xchg add pop mov jp outsb jae and sub add lcall aaa jecxz roll push sub mov stos cmp lret (bad) icebp mov nop jno (bad) dec fcompl xlat aam jno rcll lret sahf dec and mov or adc inc test cwtl adc add loopne (bad) jb xlat jbe mov jb add mov and push mov or cmpb mov adc sub in xchg add sbb fimull xchg inc orb mov sub or push inc pusha clc dec push fstps mov test and jne sbb rolb adc add sub or push jns (bad) cmp jg dec out addr16 aaa sbb cmp xor pop outsb sbb enter cmp mov loopne mov in movsl mov nop mov cmp adc or jg sar or in push arpl call daa xor dec js bound push imull mov dec repnz adc jnp pop xor dec mov inc dec and or dec jo adc jle cmp mov lock sarl test cmpsb scas cmpl clc les pop jl movl jne scas adc adc movl xchg sbb das imul and test mov out sbb sub lds bound movsl lcall movsb lds test add cmp ret sbb and subl or loop sbb subb sub fidiv xor mov jns mov adc pop je add insl push movsl rcll and mov mov (bad) scas push sub outsb xchg sub xchg or fs xchg cmp mov imul movsb push mov mov (bad) popa sbb push (bad) lock lcall pop in test fldl out mov aaa fldenv in loopne dec sub mov add lea into mov sub push mov cwtl mov ss xor xchg add testl jbe or and sbb data16 xchg dec mov sub add aas arpl cmp add scas add mov lcall and es rcrb ljmp daa cld add cmp push and pushf andl les mov and test xor data16 lcall ja xchg jo enter les scas sub test add (bad) push cs out add (bad) insb ljmp (bad) out push aaa xor and sarb nop dec add ljmp mov or sbb (bad) jge jo fildl (bad) xor cwtl dec xor inc arpl mov xadd mov enter (bad) dec fdivl add adc adc push jb xchg sbb jo movsb cltd pop and adc popf inc push gs add jo (bad) fimull sub and dec ljmp in or mov xorl adc pop sub fldenv je jo sub lods lds jle cmp mov imul hlt sub aaa bound jmp int mov jg iret jl dec xor cmp pop int xchg pop pop xor ret pop ret jo mov xchg movsl or cli movsb cltd sub (bad) ja loop push pop loope jle add popa inc loopne lds sbb mov dec cli cmpsb xchg mov (bad) in cmp lds cwtl test (bad) cmpsb push sub addr16 js jmp rorl pop xchg mov xchg test and or or notl jmp dec sbb dec mov test cmpb rcrl iret out push movsb pop xchg ja fmuls loopne push jb (bad) mov mov popf iret xchg jae clc sbb aas or adc or xchg stos and decb lea clc pop scas sbb insl iret dec adc push cli dec or cmp lcall popa stc mov shrb aas lds or mov imul or orb fisttpl aam add inc inc mov mov cmp arpl pop loope dec addsubps (bad) add cmp cwtl xor cmp mov fmulp or loope sub lds nop insb or and rcrl test into or or lcall add xchg pop sbb mov int add xor push cmpsl jns ss adc adc (bad) shlb sarb je cmp test mov pop pop aad jb in and adc ret mov xchg std enter out and adc and pop push test rolb jb inc jl pop cmpb mov or cmp mov sarb and fwait add enter sbb and inc mov fnstenv es repnz stos rcll jge jo xor sbb mov jle push call lds push shlb or repnz mov push or inc pushf pop pop xor and adc add test adc push scas sbb enter adc push hlt cmp adc mov das pop mov out or sbb add mov or or fwait in out add loopne imul jmp adcb jb and fcomps inc insb sbbl xor pop and sub or cmp push or cwtl sbb sub pop mov cmpsl inc mov lds std inc add aam test (bad) clc repnz xchg xorb sbb pop xorl fnsave je xchg shr jp jae imul pusha xchg and testb out sbb in test and and call fimull in jg lahf mov aad hlt popf shlb cwtl or mov in adc xor pop lret mov sahf lds and cli xchg mov call lret push rolb sub les imul repnz mov test inc clc xchg arpl es je aas xor enter inc (bad) in cs xchg dec and daa sbb cmp sub popf pusha ret sub outsb lcall dec mov out je dec jo nop dec fdivs in jp insb fstps xchg loopne dec add adcl in mov das cld popw ljmp imul mov ret sbb shlb stos lcall inc sub les mov adc ret (bad) int3 lds je icebp adc mov lcall pusha ljmp xchg inc sbb inc xchg pop (bad) sub pop xlat dec int fcoms test enter mov rcll jno jmp xor fadd sub mov sbb and fs cmpsb jecxz push adc loopne lock sbb inc std test mov hlt cmp aad inc lds mov add jae das data16 mov subl adc (bad) jb popa out add and push jo mov mov xor aaa sbb sbb arpl js (bad) aaa das add outsb out pusha jae repnz mov mov stos add sub push pusha xor and sarb xbegin (bad) push sub push adc out fcoml pusha lahf jmp push bound push subb or clc inc ljmp les int aas popa jle jno mov xor or testb (bad) out or xor jp push (bad) hlt dec add lds dec and add adcl and mov jecxz addr16 push imul int3 mov out add mov jns arpl dec add out das fwait pop and insb mov xor adc fsubrs rorl push add or movsb aam lods xchg pop and pop dec xchg movsb ret adc (bad) in push adc ss adc (bad) xchg clc dec add adc dec mov and leave sub mov push jmp mov xchg notl aas je adc aaa add add into fidivr lock add int sub sub dec sub mov cmp popf and sbb pop inc in (bad) mov sub mov inc push pop data16 xchg cwtl mov push cld dec shr xchg (bad) sub jo push add (bad) les cmpl out push int mov rolb and aas add mov out je push and or and insb je mov stc push pop popf add imul pop pusha lock sbb das stos mov test out push fcomp mov mov out in mov scas out sub and enter ror test push push mov add xchg movsb add adc adc mov xor cmp push mov mov xor ficoml addl and or (bad) out ds add das orl test adc sub nop dec daa or sub bound out (bad) gs adc mov add ret cltd push add mov inc sub push js movsb das mov enter adc and (bad) popa inc int3 adc enter das faddl fldenv pop lods xor daa jle xchg rorb ja dec mov xor pushf outsb lcall cltd xor mov inc ja jns leave sbb dec test mov pop into dec mov and popf cmpsb leave sbb xchg push pusha cmp inc add lods clc add pop (bad) fist movsb add es dec sbb xchg les inc insb jmp adc nop push imul (bad) in cli pop jecxz pop cltd adc mov sbbl mov rclb push pushf js daa mov add or sub xchg fwait imul xchg sub mov repnz sbb jae (bad) cmp pop dec or test cmp push daa add add stos mov mov icebp fldcw call fwait (bad) jae out dec add and and shrb (bad) xchg mov jecxz jno jne or clc or or je (bad) sbb rorb mov lret sbb push loopne ljmp nop jge movsl pusha mov inc test fwait int3 add and addr16 lret inc xor enter stos (bad) mov nop test test mov sub and sbb mov pop cwtl jle add pop add xor or xor cli lret clc jbe sub mov add lea rcr test aad or add (bad) xor js pop movsb test or frstor and jmp lcall and sbb outsl enter or add (bad) mov and ret shrb push inc enter (bad) xchg pop adc pop movsl dec sub inc push sub xor lret mov mov adc xor pop (bad) icebp decl mov xchg mov ds and pusha (bad) bound adc shr jo fstpl sbb sub sub mov pop rolb into imul xor mov sarb in roll sub (bad) call inc loopne dec (bad) or xor outsl add stos movsb sbb adc and pop cmpsl add mov or inc xor add cmp lds add mov sub out arpl add sbb or jo dec sbb sar xlat daa inc pop add out jl add push jae cmpb pop aam js mov mov dec lock lds iret je incl scas (bad) xor stos xchg shrb jecxz or das mov mov fdivr js sbb push add mov loopne das (bad) icebp cmp in test and add and mov (bad) pop cmp push in mov jo adc loopne lret pop rolb push mov add dec mov xchg outsb mov xor xor push mov int3 pop daa pusha sbb in jmp mov mov sarl cmp sub in sub hlt nop (bad) (bad) pop rcl add and jle testb shlb outsl push mov dec lds or push (bad) push mov add (bad) mov comiss outsb xlat jne add fstps and push jge jns push xchg icebp scas cmp mov mov xor xchg sub inc out xchg or fcmovb or pop jne ljmp sbb adc aam xorl adc or test xchg mov xor mov add out xor dec or loop xchg pop and rcrb xchg jmp in sub mov xor adc mov inc adc mov hlt dec mov adcl jl mov rorb xlat mov jle or cli jb dec jl cmp pop inc test andl pop (bad) sbb stos test lock mov adc pushf and mov cmp stos int mov mov sahf add movsl add sub cmp dec enter pusha lods cltd loope and sbb jle icebp xor ja and pop adcl js xor and test pop add int pop and push sub je dec icebp lock or push jne cmpsb ret mov add in aam hlt (bad) sbb leave and pop (bad) xor push in cld das ret add stos pop shr and lret jle mov inc fdivrs stc push push js imul cmpsl adc test inc movsb jo (bad) jns mov lods test (bad) pop jae pusha adc xor push sub stos es mov add push iret test xchg int and ja adc hlt int3 loopne sahf push dec or push sub clc les sbbl inc andl arpl add xor jo sahf mov mov add mov adc ror clc movsl cmp sub add sbb js ror mov add xor stos ret or insb lcall xor andl cmp pop fs adcl or ljmp push es int3 and test int popa add adc mov mov xchg xchg out add push ret repz push loopne sbb push movb in test push cmp and push (bad) adc add cld inc scas adc mov add shrl mov data16 nop mov dec or addl jecxz js add push jp mov mov and adc adc call mov cmp cwtl jmp and sbb movsl mov add cwtl or inc add sahf cltd push movsb dec cmpsb or pop cmc add mov pop xor cmp in inc out adc cwtl pop mov mov ljmp in adc int leave add not test sub jb mov and lock fmull sarb xor sbb lods jl ret js outsb hlt test and or int3 push cld dec xchg (bad) inc sub xor (bad) out jbe movd js adc fistl xchg (bad) dec mov js pop mov (bad) rcr cld xchg daa inc lock fwait pop aam inc mov mov pop push xor dec lahf xorb cmp mov pop xchg pop mov inc push add int test inc mov ror js push jg shll sbb inc dec (bad) imul pusha xor add leave ret lock adc in pop shr jmp or int3 mov xor lret lock or nop mov imul movsl adc in and mov in fwait sub sti or hlt sub or and sarl loopne scas add lcall push (bad) mov fimul pop adc sub pusha push jns call push mov imul mov stos cwtl rcll mov movb jl xchg cltd cmc movsb pop pusha mov call out pop pop std sarb xor cld and repnz xor popa add mov or jle push mov jge xor and daa loop sbb push sbb scas or sar adc xor mov or inc fadd pusha fucom shl (bad) mov cmp mov rolb push movsb aam je std pop popa test mov pop or sub and outsl cmpsb jecxz std mov push push add xchg icebp cli repnz testb cmp xchg xor lock iret push aas jbe mov les test fstpt push or pop iret mov stos lahf push cmpb loope (bad) in out inc mov nop jl dec stos shrb mov lods in mov dec out addr16 repnz xchg dec xor push xor sbb dec inc hlt xchg sub sbbb jge mov sbb add insb xor and xchg fwait test fsubs xor add enter dec fs mov loopne pop dec (bad) icebp lock and sbb aas xchg xchg dec les repz or jl popf xor and ja pusha pusha mov flds sti xor dec dec fist adc cmpsb mov mov or faddl sbb pop dec int3 mov stc test mov fwait in mov shrl dec jnp mov shr dec sub mov mov pop imul dec push cli dec push or mov les push jns (bad) cmc je adc inc ja pop loopne call and add add js in rorl loopne cs nop xchg call push jl pop lock lahf aam lock jge pop inc les jb dec movzbl fidivl js mov mov clc pop fidivr jne js cmp test adc aas mov test cmpsb in aam out adc cmp sbb inc shrb pop jmp aam mov out sbb sub pop in sub jl and jmp sbb nopl sbb xchg mov push mov adc daa pop loop lock sbb adc sbb push cwtl add push xor (bad) or adc adc bound pusha pushf mov dec mov lock mov cld int cmp mov pusha dec jmp inc add aas push cld sbb (bad) loopne aad mov dec adc mov cli lds and or rorl mov dec cmp xorb js mov push mov (bad) add jmp jno mov in add xor add aam mov add or (bad) pop xchg mov push divb inc (bad) xchg leave mov and outsb data16 mov cmpl dec rorb sub mov sbb sub mov es movsb xor mov inc xchg add or and jl scas xchg outsl mov (bad) push dec jbe fprem leave jae adc mov loopne push and mov lock xchg dec mov mov mov or test adc int3 sub cmpsl fs in das and jl sbb repnz int push imul mov jg xchg and push xor xchg sbb in cwtl push in sbb ja outsl js inc push mov dec psubusw aad xor movsl adc and das imul or test jo cmp or and stos jns orb or pop mov movsl xchg or mov clc mov or pushf jo das or es shrb (bad) cld mov (bad) mov adc push clc cli sbb xor sub adc mov mov sbb push jmp sti andb mov xchg data16 inc xchg mov adcb outsb movsb rcrb xor (bad) out jl add cmc icebp call jno arpl fsts js add data16 jae (bad) sub sbbb cmovns jns test add das jne lahf fcmovne push cmp jge nop rorb sbb lods enter sbb loop sub loope sbbl and pop sub cmpsl movsb mov outsl cmp das sahf jp sbb and mov pop dec sbb inc pop enter xor sbb inc dec aaa mov push add mov mov cli pop mov enter xor stos inc push add xchg or cmc loopne add enter add cmp push ds add or dec add testl add sbbl sti mov mov xchg mov xlat pop inc add sbb int xor aaa add leave xorl push adc fnstenv nop push sub pop jb (bad) insb xor insb inc rclb insb shrb lock add sbb fnstenv xchg rcrl or jp sbb enter push out dec test shl inc mov js dec inc adc adc mov les mov mov aaa (bad) mov cmp in (bad) fild jo enter rcl fadds out mov pop and mov (bad) pusha cmpsl jno movsb int dec xchg je test and mov cmc adc push inc loopne imul loopne add inc sti push add insb jmp add outsl roll subb jo incb xorl (bad) roll jno xor fs subl dec sbbb cmp jo push dec sbb cmc push pop cld sti jle hlt cmpsl (bad) cmp jae pop adc push pop push js add ret xor sbbl or xchg adc add add notb gs sarl xor sbb add mov testl xorl jg aad pop (bad) loope mov sbb pop or xchg lret fsubrs loopne xchg dec shrb adc sub add cld xchg in ja push aaa mov and add cmpsl inc movsb mov xchg iret pop push cwtl xchg jp subb xor add mov inc shr sub pop mov das lea and or shlb inc sti sbb cld sub outsl scas inc xor fs or mov aam xchg add xchg popf mov ret jns inc push adc sub nop push jl xor loop jnp xor inc pop dec sbb and sub cmpl rorb cwtl and jbe sbb pop ret xor mov cmp xchg (bad) jne leave ret cmp mov inc xor sbb adc jno mov in adc sbb rclb sbb rorl aaa loopne adc push push lcall fistp sbb push dec pop pop adc dec orb dec movsl or push mov mov inc mov test dec cld push sbb inc js and cmpsl movsb loop cmp clc inc repnz inc push mov sbb mov adc inc xchg add or inc mov lods pop inc push jno adc lds or inc adc test test aas sub dec sub test push rcll adc xchg dec lods add sbb clc dec int3 mov push std xor mov xchg adc xchg adc leave adc lahf sub les jecxz out arpl push xor pop pusha inc push dec and je mov cmp or mov sbb fisubrl dec enter cwtl xchg sbb hlt pusha enter add nop addr16 pop pop pop sbb and jae inc lds imul cwtl dec fcomps mov or or (bad) xor mov dec push cwtl dec rcrl movsb adc popf cmp adc pop mov add jl mov sbb (bad) mov pusha mov dec cmp stos cwtl xor nop mov adc cmp dec dec (bad) repnz pop xchg faddl xchg nop cmp xchg pop gs test dec xor xchg add stc inc push and in adc adc mov std adc mov or and mov loop gs mov pop jo xor sahf push sbb lahf es (bad) inc aam test jl sbb enter jbe mov add jmp dec js cmp add push (bad) fiaddl insb jne add pop aam je add (bad) jg out jle jo (bad) xchg lock pop push in push mov and inc push jg cmp jne cld movsb inc clc nopl (bad) xlat (bad) push insb cwtl jae adc sbb inc add sbb loopne jne packssdw pusha sub or (bad) jo sbb jne sbb cld jge hlt add jle dec push stos pop or adc je add push push jl or jmp adc push mov in addr16 (bad) xchg adc jo mov xchg cld insl inc jmp rorl push sarb stos call jnp ficompl daa icebp mov hlt adc jno add pop imul sub sbb orb (bad) popf inc jmp adc push mov movsb inc jg sbbl add dec or push jo cwtl inc cmp nop lret cmp test je or mov cwtl inc mov pop pop cmpsl (bad) ja jecxz jo incb js loopne out mov addl pop add dec adc shll (bad) (bad) jb cld sti fs add popa clc mov xor arpl adc add lods pop pop cld add jo pop cmc insb ret xor imul mov outsb add xor cmp mov sub pop pop hlt cli test clc mov stos mov pop idivl inc add incb lods pop pop or push mov add loopne add and call je xor push std shrb packssdw (bad) push mov js loope (bad) sub insb mov jo in push cwtl add fdivl sbb jl mov sbb lods or popa les jl push jg rolb jne je clc add imul push xchg and test cmp imul pop xor imul int3 mov lret sbb push (bad) movsb jle fistp pop addl insb sbbb stos push dec sbb fsubr jno pop cmpsl push jns hlt or jmp (bad) push mov loope xor cmovp in outsl (bad) popl subb jo adc sti pop shrb pop add pushf out (bad) pop or add hlt fs mul mov adc xor rorb pop push movsb add jg aam inc rcr (bad) jle add stc mov dec jo call stos ret fnstenv mov fcompl xchg jmp jmp enter loop pop add mulb leave je jo outsb call loopne or mov mov mov cmp xor pop or mov cld jle clc loopne hlt sti outsl nop add cmp push pop add cmc and sub push mov dec inc loopne (bad) loop je push pop xchg pop xchg pusha negb adc add adc outsb inc and adc mov mov cld pushf ljmp mov and imul mov pop sbb and inc rcrb aad push (bad) adc loope js test insl xlat (bad) call xor and adc pop push lock pop inc jl lock push test sbb pop add (bad) jnp incl (bad) insl stos js mov or sarl jge,pt xor call mov je adc add pop jl mov mov push cmpb loop popa cld jb cmp jae test pop or pop inc add adc in or jbe shrb cwtl ljmp ret cwtl insb rsqrtps bound popf sub add aaa out pop pop shl fiaddl ror cmpsl js into sbb (bad) adcb sarb cmp sti cmpl xor bound push (bad) aaa mov mov jns or jae dec out sub mov jl pushf rcl push lret add inc nop test addr16 out js xchg in ja in cmp fild pop jl fs mov push and lcall add scas lret in ljmp push adc in inc sub aaa hlt cmp lret ljmp dec fs jle pusha mov push and mov rolb jmp pusha inc aas inc mov les loop xor mov out cmp hlt and sub push add repz xchg cwtl stos jmp fisttpll fdiv jbe mov loopne cwtl (bad) adc call xchg andb jge xor std add dec or fs sbb jne stos movsw cmc out sahf in in dec dec inc add or jno jno add test or sahf push mov push dec movsb in mov loope or adc xchg mov push pop fsubr cmpsl push inc call ficomp orl sbb or jmp pop shl cmp in xor xor dec pop in loope ds outsb out call jmp xor add (bad) mov pop cmp and jmp mov add rcrb mov dec out xchg mov lods stc nop adc mov jmp pop push mov cmpsl jg pop or daa stos push push (bad) cmp and outsl sbb jns push pop arpl or cvtpi2ps jbe sub jmp mov lea test xchg inc adc int3 out mov pop jle test cmpl jg insb das aas lcall xchg push mov jmp sub xchg or test loope mov push out push push xchg mov pop push mov jmp add adc mov add xchg jg jl push inc or mov cmpsb push (bad) or xchg pop xor lds mov push cld or sahf je adc push push sub (bad) pusha add xchg jle cltd bswap push outsl pop fs sub outsl xchg pusha and mov push push jmp cmp push mov into add jmp inc ret mov cmc dec pop mov push mov jne xchg sub hlt add (bad) mov inc and mov mov cltd pop push mov outsl sbb sbb call test cmp lret fdivl sub and pop or (bad) dec outsl push cmpl sub loop mov jmp dec inc loopne xor push mov and roll add into out popf pusha sub jb setb push push shl cli clc push mov scas sarl loope or xor adc pop mov dec mov push (bad) scas notl or mov pcmpeqw sub mov mov mov push sub or jle jge pop push jmp (bad) jmp fwait mov mov aas xor xor lods sbb leave adc out inc xchg push jno mov add mov out jbe arpl sarb cmpsl les lahf in add jmp cmc stc mov and push jl mov inc sti pop add mov xor jmp cmp fidivrl int mov cld lea icebp rorb sahf xchg push cmp repz in jg jnp lods inc adc xor inc fisubrl rol jb cmp cmpsl pop jne enter pop push push push push jmp mov icebp xor das ljmp and push push (bad) jmp cwtl add data16 lock movsb fstpl pop das sbb mov js cli add out push jne add xchg stc jmp or sub movswl imull push push int3 out mov or xchg fmuls (bad) pusha pop adc sbb test sub add (bad) stc jno clc popa or add pop cmp adc insl xor jl daa push gs test jbe addl mov decb push and pop push push and inc mov aaa enter sub jns shrl stos cltd stos cmp call adc scas sub in xchg jae or fnstenv incl test jmp cli xchg xlat xchg or cwtl ljmp shr or and rolb sub mov sbb sti pop inc punpckhbw mov and pop scas out push jl mov pop pop xchg pop sbb mov imul sub lds mov and adc fsubs repnz loopne push lods add aad cli loop cmpsl neg or lea (bad) icebp sub xchg xchg out lock xor (bad) mov jnp push fild rclb aad les jle std cmpsb adc sub sub cmp sahf sar das push add xor pop adc repz jmp sbb sbb aad push jmp in inc cmp mov dec nop ret sarb jae lahf ss in test shll dec xchg cmpsb roll jae and sub push adc or add fdivs outsl sbb jg mov jge push ret add dec pop sub inc cmp sbb (bad) sub mov test call push gs or sti gs mov les cli pop pop and xor sub xor stc push subb adc sbb movsl or mov and fistp adc pop push mov insb and or add mov lea jg dec test or pop pop shl xchg xchg in lods push xchg (bad) sbb insl leave lahf scas or adc or inc xchg cs xchg gs aad jmp jb inc stos mov dec jmp mov and mov cmpsl xchg pop stos mov jg lds sub add adc mov es jns mov xchg adc ja dec add pop sub jmp jo das jne shl sub outsb jmp pop push push cltd int3 das pop push mov pop jo movb push cltd pushl cmp push rclb push adc nop loope or inc push push adc sbb sbb fabs pop xor add adc fidivr addb jae (bad) adc or mov mov xor movsl push add mov cmpl sub xor mov cmp sbb push cli sub lock outsb mov cmp inc push repz pushf rorb fs repnz push into imul or and and ret adc push push cmp incb dec mov icebp test int mov ficoml out push and pop add push (bad) pop and loopne or pop mov in dec sub cmpl negb test mov addr16 pop aas add or pushf jl add mov mov or mov int mov dec pop cmpsl jo or pop mov fstpl int3 mov adc push push jmp (bad) pop xchg in sbbl mov or in sub sar adc sub sub push xchg std adc outsb aas jns pop add aam (bad) outsb rorl add sub add or pop rorb scas jle das or lahf int mov fmuls daa push outsb jl sbb out add and testl sti mov xor iret mov push (bad) hlt out pop push add add cmp push dec (bad) ljmp jbe push cltd inc jg shl not xchg pop jmp icebp daa in test or std sbb cmpsl sbb sub ret jne fist cli daa pop push jge pop cmpsl cwtl xor sub xor notl pushl xchg je mov fildl mov fimul push (bad) cmp mov add jp xchg lcall jp clc or push and cmc cmp clc lret sub clc insb and stc js dec fwait xchg dec sub mov int or (bad) cmpsl scas lahf inc movsl mov loop loopne pop outsl or loop dec ja lret test daa aad push gs push or mov ja pop cmp pop fcoms cmp add out das out pusha push ljmp (bad) rolb or add xor jmp testl jmp sub call push mov into test jns adcl fbstp pushl jb xor adc and imul jmp adc pop mov enter push shr cmp or fstl pop adc arpl or scas fdivs fildll mov mov ds pop int icebp fidivl scas int3 or dec repz push stc adc mov or imull nop dec push pop add cmc and js xchg jno lahf rolb jb pop aas push hlt adc inc or add mov adc add ss mov add insl sub pop push movb lahf xchg xchg xor add mov pushl pop cmp jp dec add xlat hlt cld pop not cld inc add adc jg jmp push push iret jb xchg push pop jmp pop (bad) and sbb jle pop shlb jmp add adc call dec (bad) lcall push add fdivrp push (bad) or movsl xor pop xchg jns add lods push and pusha add aaa lret aad outsl sbb add push dec sub (bad) fsub dec or dec pop mov cmp jge rcrl and mov not add out adc pop inc hlt lret fistpll mov loopne shrl shll push add cmp fisubl shrl add jbe inc or cmp movnti push mov or push add pop xchg push push mov xorb sbb ss dec jle push or jne xchg adc aad jb fbld push or imul xchg mov add clc pop xlat inc insb xchg push test pop not xchg or mov add mov ljmp xchg jg cmp jmp leave and psubusw add mov dec out (bad) dec cwtl mov les out xor pop loopne inc cli lods push and push lret add addr16 aad rolb mov inc (bad) pop gs push lret lods xchg nop movsb xchg frstor xor mov out test mov int push inc mov cmp dec pop push push bound and aas nop push imul push add and pop dec lcall test or (bad) aas xchg mov jge dec inc icebp xchg or in jnp mov mov pusha jae xchg pop xor or addl sbb mov add cwtl insb push xor mov pop cltd popf push mov enter sbb loopne std push in mov pop das inc and pop jp divl in mov sbb jno adc movsl push frstor dec add test shlb aas jmp sbb mov pushf stos adc adc hlt movsb sub jg mov in adc mov sub (bad) das mov jg test cmpsb and and dec sub (bad) int3 enter or sti adc test imul (bad) dec lds dec xchg and lods popa push push pop sub cmp jmp inc adc push cmp push xchg daa push jne add sbb xor mov adc cld bound inc or popf jge push add jmp xor cmp and leave push or rorb xor mov xor sti adc inc pop shl xor das dec cmovle and adc cmp or pop les popf jge out mov loope push mov sub clc lock sub sahf pop mov pop jge mov and fldl imul and ss xor sub add mov or pop pop nop dec popf lret push mov movsb and mov push es jo dec rorb cmp mov jmp pop (bad) push inc rorb mov cs add rolb pop or pop outsb jp (bad) iret mov jle sarb mov push insb xchg adc call fild push rcrb aad into jle neg jmp cmp and lods adcb into out dec add insb not fisub xchg das out jg or add (bad) jmp nop mov fwait inc out cli adc sbb shr sbb ficomp xchg add mov mov mov inc mov (bad) loope adc dec pop decl scas pop shr inc std ja gs and xor jmp or loop (bad) outsb (bad) lock bound mov pop sub or mov pop xchg inc mov jge fmuls aam adc push jnp mov mov sti loope adc mov mov push or cld gs or outsl add inc or mov mov push push out sub mov ljmp movb push jb or insb sbb repnz rcrl push adc into xchg das or pusha xchg push pop shll push push ljmp xchg aad mov jo cmpsl aad mov xchg cmp xchg loopne int3 mov pop xor in or push push mov insb hlt push ficoml pop xor adc daa (bad) lock scas jl pop aaa not jp push add push mov add lock mov icebp insb fs pop xchg xchg data16 mov sbb xchg xor out dec sbb cmc pop mov jo in (bad) cli jp cmpsb lidtl iret jo ljmp aas fldcw icebp sub xchg cs add loope imul out jge jmp jae add mov jmp (bad) (bad) mov mov xor (bad) pop xchg fistpll or adc popf insl pop push xor fs js shll jg sub mov xchg daa pop insb inc sub dec bound ret mov pop or pop push int clc mov mov (bad) aam rol inc add ljmp or jae addl mov clc les pop out imul fmuls repz jecxz inc dec sub adc sbb cmpl movsl pop aas add cs fldenv dec cmp cmp das adc sbb pop add jmp pop lret xchg lcall pop shl or inc adc jae jp stc inc push scas loopne cltd jmp cmp js addl cmpsb adc (bad) addb or lock bound mov mov dec xor and icebp xchg sarl add sub push xchg push sbb mov ror fildll pushl adc push adcb push push popf sbb xchg dec or jmp nop les lret cli jmp out inc (bad) divb (bad) mov or and sbb push out jmp dec cmpsl ljmp loope mov shl xchg js aas or lods (bad) fldl pusha rolb fiadd mov rcrb stos ja aas addr16 lods fcoms xor jl out imul xor inc imul pop (bad) xor xor rolb xchg or or dec faddl scas xchg sub inc rorl neg out push mov add adc add xchg xor inc and mov jmp or xchg push push cmc lahf or sbb nop cmc bound or lock push nop int3 dec pcmpeqd xchg and addr16 int3 adc xor and and andl add out jae mov sub add fwait out ss cli sub cmp and inc test jle and jns lahf cwtl dec cmpl or in jb mov add push mov sub mov cmp pop gs jns xlat mov xchg test push mov adc (bad) jbe loop adcb fistpll mov cmp call xor xorl mov popa aad jmp sub adc addl loop out lock lods les sub enter jle insb mov pop cld jo push sbb ror aaa aam int xchg cmp xchg xlat cmpsb or (bad) outsl add jmp cwtl push or sub cli jle pop pusha (bad) cmp mov (bad) or dec je pop sub loopne data16 xchg (bad) jo xor xor inc test push test bswap xchg pop push jle cmpsl mov rcrb arpl mov aam adc and mov mov and add jp clc sub mov pop add ljmp add fcompl adc mov nop and or jge or push sahf push repnz push mov jae sbbl pop add cmp (bad) mov outsl adc push je cmp xchg lahf inc or lret push add or mov pop mov cmc push mov insb sub lods and mov mov push jg hlt or pusha cmp pop call or jle pop (bad) es lret (bad) mov pop out pop xchg xchg rcrl (bad) adc add mov push mov mov sbb mov or sbb cld scas test (bad) in cli inc jle jo lret movups jg test outsl cmp lock inc inc lcall faddl out mov mov shrb pop and mov pop outsl jmp push push push jle or add cmpsb and push or sub stc add sbb lods cld adc add in pop pop js jae or cli rorb stos nop sub mov mov add test div fcoml pop sarl sub fsubrl fldt or push repnz std inc movsb mov fdivl xor adc inc mov or mov outsb jo add xor idivl or and jae add xchg inc (bad) xor cltd ss adc ljmp daa orl sub push mov imul inc shr popa dec and sbb push js inc in subl add pop shlb pop (bad) jl shlb mov stos sbb cli cmpsl cmp jne xchg enter mov nop mov rolb inc (bad) cld push xlat ret cwtl and (bad) fimul add loope pop outsb jo (bad) (bad) enter push push je and loop mov jmp jl addr16 sub in jnp sbb ds loope shlb (bad) shr pop pop cmp out in mov cmc add dec lock test adc push mov cmpsb sbb jnp aam xor ja lcall jp jnp mov ja jl popa add test ja movsb sbb ljmp movsl cmpsb stos mov mov fnstsw jbe test clc repz mov lcall push mov adc xor aad push pop out call fidivrl aas daa faddl ret inc pop jns push cltd incb jecxz in je es push out push mov repz add jle or or jo mov mov xchg nop push call xlat or sbb pop sub jge addb xor or (bad) mov leave leave das ljmp loope ficomp sbb (bad) aaa adc pop push lcall mov jo pop mov popa add pop cmp es mov pop test jmp test popf adc pusha je mov outsb shrl int pop push out pop pop insb pop in add clc call pop sub jmp add add mov leave fistl cs mov cmpsl lahf mov dec orl cmp pop int3 xchg push xor imul cmp movb cs jg mov jnp repnz push repz xchg add icebp loopne pop cwtl movb xchg mov xor mov pop pop push sub sub stos out addl daa pushw mov adc jae mov push xchg (bad) xchg aam dec or gs jmp popf cmc mov push push pushf rolb outsl pop es cmp or pop jge pop shr negl or test (bad) cmp or mov jmp leave push fnstsw sub push jae pop inc pop and or daa pop int es aas into inc cmp push jge test or inc mov das js shlb dec repnz add push jmp add cmc inc pop cmpxchg pop mov pusha cmp lea (bad) fstpt mov and test mov xor scas aas mov rcll iret adc and stos (bad) jno jb mov sbb aas xor enter aas jle repnz or sti repz inc adcb lret mov stos test inc pop xor data16 cwtl mov (bad) mov sub lret ds push (bad) cmp addr16 fs gs add pop in imul stc in sub jmp sbb sbb dec fcomp jae leave insl fbld xor sub (bad) iret (bad) mov push inc add add pop pusha jnp adc add add push add cmpb pop mov cld and sub or dec test out xchg or jmp enter mov adc add jmp push push ds xor push not jmp mov addl cmp sarl jns ffreep adc jmp xlat jns pusha mov daa cmp mov loope xchg adc sub dec and sub add aad sbb mov jl outsb hlt push mov out ds sbb aaa pop cltd pavgb xchg aam ljmp repnz mov cmpsb and bound inc ja scas iret stc imul ds xlat sbb invd jmp push into out negl sbb sub int aad sti dec xchg push sarb add arpl mov adc loopne ret shrl sub lds pusha mov xlat ss pop jmp pusha fxch adc dec cmp jns pop dec rorb orl enter daa add cwtl sub inc pop jge jns,pn jmp aam pop fdivr inc imul sbb orb jge ljmp or dec in push dec lock xchg inc pop pop inc out push pop and lcall add jle dec pushf add pop pushl incb mov fistl xchg cmpl dec in add lret mov jo popf es adc adc cmp lret xchg lock jge mov jae push pop jmp jmp fisttpl and inc ljmp push lods push in mov dec mov mov into (bad) push pop movsb mov and insl pop aad adc or push repnz pop add fmul fdivs push and sub clc mov push mov clc pusha dec out out dec lods jo mov xchg xchg out mov fwait adc mov sub and popf xchg pop nop and xor pop cmp cmove ret jle int3 xchg xchg (bad) fstp sub fs cmpsl sbb bound add add add mov pushf in movsb adc adc cmc or enter jmp adc out insb shr or mov in das mov ja or lea jmp out adc push mov push ljmp inc jo mov sbb call data16 xchg std mov cs push pop fcoms mov call idivb repnz dec push ret lret jns jns or mov xchg leave push adc movsb out (bad) adc dec mov lahf imul adc cmp imul jp sbbl jle dec ljmp cmp mov pop inc leave jge pop sub or ja sub jmp lret loop xchg fs test hlt inc jmp add and rcl sbb les in cmc xchg or std cltd flds xlat cmp (bad) and test or dec mov add push mov mov adc xchg lahf and fist xchg popa cmc loope xchg (bad) pop dec and sbb add lret xchg orb decl pop aad unpckhps jg jmp repz pop scas fdivs test ljmp dec cmp ljmp js add addr16 add (bad) xor jp inc push sbb add rcll je jne push xchg cmp movsl inc cmc int3 mov stc push or or ljmp mov add push push pop jl pop mov and aaa loopne mov or jmp and add push sbb mov in sub push cmp cltd lea sti movsb mov mov fist add inc adc or mov inc jno sub adc rcl popf fldl lret jl push push mov add fucomi sbb mov add inc dec and lret div adc and cwtl push aad jnp rcrb test jbe ja mov jmp mov cld pusha push push mov pop mov popf enter xchg pop (bad) incl pop pop loop fnstsw push add push lahf pop mov jmp es adc stos in bound fadds and out stos cmpsb or mov sar dec (bad) sbb jmp pop push repnz imul movsl fmuls test loop mov mov push inc xor jl pop push fistpll shlb scas push rcrl or repz pop cmp adcl xor mov mov enter sbb loop mov sbb pop and adc cli (bad) jle and mov or push ds sbb js mov pusha xor and shlb lcall dec in jae popf adc or adc mov sub std jo inc push pop add adc mov mov sar fistpll or mul add (bad) cmpl ljmp lret pop xchg imul mov xor cmpl into inc mulb or add dec orb and jbe dec mov add data16 or jb insb dec mov xchg int sub or movsb xor mov fcomi ret xor push push or cmp xchg pusha inc push push sbb pop pop out nop xchg ret and mov xor das pop xchg sub dec push push nop push pop popa test in jb add or ljmp movsb jno dec jbe push rorb mov jmp jbe popf jmp inc push sub push and add aas jmp in movsb pop int dec loopne cmp scas leave pop in rcl jle add nop mov movsb jbe aad fisub fsubrs adc aad mov push pop dec pop mov es clc push (bad) sti push outsb fisubr push xor test push mov adc push hlt fnstsw pushf dec dec xchg push rorb xchg mov mov aaa push leave out out jle mov gs (bad) bnd in (bad) dec loop addl mov cmp and xchg adc or push inc mov jnp adc testl shr pop es xchg mov int pop (bad) and stos or add pop lahf and inc push jge or roll mov dec cld (bad) outsb frstor mov imul nop xchg and aas jbe sbb test xchg jmp xchg and mov dec ds sub jge mov and mov sbb repnz fldt xor add imul pop clc adc sub cld ss and xor ja data16 loope je test adc or add ret mov movsl test sub out push fstl push xchg cmp add or lods jnp ret test inc push mov js pop cmpsl mov sub and cmp push aam pop lret lahf movsl ds jl mov (bad) jmp call jb add mov pusha pop faddl enter negl jecxz cmpsb mov push mov pop (bad) jae push mov ja push pop add div std (bad) xor add cli in jnp xchg mov mov shl mov mov fimul sbb xor add dec outsb cmp cmpsl lock enter lret sbb xor (bad) nop fucomi sbb mov adcb adc repnz pop ss adc ror pop test inc gs lret je dec repz jae add sub std imul mov movsl fmul dec xor call (bad) mov jl repnz or pop xor scas mov add jg push cmp ret push jmp lahf mov stc into inc jmp adc pop loope and notl dec neg or mov cmp (bad) ja test inc clc adc mov hlt daa outsl pop jb popa or xor push adc jmp (bad) jb push stc sub dec les fsubrs and inc sub je je and les inc pop mov dec adc (bad) add or jge xor rcrl add sbb lods test hlt or loopne jns cs shll ss jmp not pop sbb aaa icebp (bad) xor jns ret fdivr ds (bad) xor dec out mov rcl lods lret or xchg xlat andl sbb lret pushf lret dec repz scas stc sbb (bad) repz sarl inc adc jmp push or iret jb add or mov lock daa push inc mov mov or or xor lods adc cs pop cltd or cli imul xchg sbb popf nop mov push mov bound jae pop ja rorl test lock mov das sarl or orl xor inc mov int inc add clc add out push jno jbe repz cs inc dec lret test (bad) mov loop inc pop and (bad) cld xor cmpsb daa rcrl popf push icebp adc sti fisttpll popf jle clc push xor (bad) in pop popf notl add or (bad) fist push daa daa fs cmp pop xchg jmp mov call das fidiv in pop es cmp repz fisttpll cmp call inc and push jmp lret dec mov push xor push pop aam dec lock jl outsl jmp jb cmp aam push pop inc push pop mov out jmp aaa into mov shrb mov (bad) and dec add add popf mov jmp enter cmp sub fsubrp pop out or shrl stos inc sub rolb pop sub mov xlat push add repz push andb push xor cwtl dec cmc dec das ljmp (bad) dec push xchg std lcall push adc and sbb movsb jg mov inc jmp sub xor pop lret adc mov pop add mov daa dec es push in rcrl and mov mov mov ret aaa jmp (bad) pop cmp out ljmp int es xchg jg mov es es jno pop jmp loope push xchg repnz sub or cmp fdivr loope fidivrl fstl jmp push rcrb leave cmp jge bound enter cwtl sbb ret ja fwait cli or pop lock xor jg lret mov movsl loop pop fiadd pop pop add xchg fistp add not loope mov push push or ret pop pop mov lcall ljmp idivl fiaddl pop sbb ljmp shr loop push pop out inc loope lods sbb lds fsubr mov pop cmp notl inc (bad) xor add xchg cmc sub fstl lods push jno das jns dec lds push stos mov dec idiv dec inc dec imul das sub add js mov xchg arpl out imul sub cli out mov adc enter cmp pop enter xlat dec jae dec jae sub and dec jae mov inc shlb aas jg repnz xchg adc std inc jl int (bad) lds loope inc jb paddb add cltd pop xchg jmp mov outsl popf jge xchg add out xor pop add xchg xchg xlat das shl mov pop push or pop test sbb lea xlat sub or and inc or popa sbb push mov adc (bad) mov pop outsl pop mov das add bound or sub mov daa int3 fildll hlt jns lock mov sub cmpsl push add clc xchg inc dec cld add loope pusha ret lock push popf aam jecxz (bad) add or cmpsl jp jp mov dec sti out dec scas push mov dec dec adc lret pusha std sub jne xchg ljmp popa ffreep dec jno dec push insl or arpl jbe subl cltd push pop or sbb inc dec xor xchg jb std icebp xor mov xchg jecxz (bad) mov ja hlt pop je cltd (bad) out dec outsb push cmp or notl mov ljmp stc outsb jnp inc scas cld outsb jmp jge lods add pop push xchg ss adc jbe or push rcll xor push rol into popa sbb fstpt mov adc mov jmp inc outsl les xchg fidivr or push int pop das fsts xor sbb lahf pop jge lahf pop and test fdiv dec jns test mov inc aaa jmp rcll add push fbstp fisub sbb cmpb daa (bad) in xchg repnz adc push in or (bad) jne mov sub adc mov fcmovnbe dec inc shll or fildl sbb dec jne mov pushf mov popa cmpsb xchg cmp or cmp movsb (bad) and daa cltd inc and sub push and adc test lcall jle xchg pop lret ret incb pushf pop gs andl shll inc std lea roll jbe movsb cli rcrb push xchg jb wbinvd flds push inc xor movsb and mov pop das jle outsl movsl rcr test xchg fsubs ss in jmp mov rcrb outsb int3 jne ss sub mov test xor jbe lcall inc sar adcb (bad) dec (bad) ror movsb orl jecxz add loop (bad) (bad) jg add jl aaa psubsw sub add push leave test loop or stos xor stos fistpll andl roll ja mov loope pushf fwait mov jne lahf jae stos sub jmp lea shrl dec aaa (bad) fisttpll adc movsl test push or popf jg add jmp add mov hlt inc rclb or shrb xlat das das and mov out mov pop jmp mov or dec adc jg mov add fisub sbb inc mov or loope xchg sbb add push push mov test adcb xor sbb test pop pop test pop inc add movsb jmp pop test icebp sbb repz fdivr mov dec nop or outsl push jmp ret loope fsts jbe xchg push mov push pop fldl sub ret stos popl stc enter movsl mov adc add stc or dec orb (bad) inc in pop and bound mov cmp mov add loope repz fs scas dec or sbb cmpsb inc sub push int push lea push push dec test loopne outsl inc push fstpt push mov pop dec push cmp mov popf orl xchg add or xchg es push sub clc lds add xor dec lea push std push inc int add cmp adc mov sti pop sbb sbb insl inc (bad) push add in xchg pop out add jg dec adc sub leave pop add push dec add sub ja shll test cmpb and movl or dec sbb sbb pop adcb adc in push mov sbb lahf (bad) out add int3 and xchg pushf pop push mov and pop in (bad) pop dec or sub out xchg mov fadds mov out mov loop add fs mov sub ljmp jecxz adc push fld push mov xchg imul xchg gs out or sub mov out call stc jns out jmp mov aaa mov pop fsub xlat test (bad) sbb pop jmp cmpsl pop insb popa jmp add int mov fs push xor cmp sub push jp add popf ljmp adc mov xchg cmp mov adc xchg jmp test (bad) repz lret sbb in in and in jg daa push adc mov jle mov fidivr fcmovnb (bad) lods iret loop cmp js sbb dec or mov xlat pushf pop cmpsl iret (bad) fldcw pop pop mov mov lcall int3 mov mov ucomiss lods xchg movsb scas adc stos fiadd dec sub dec mov jmp push sub in or xchg sbb push rcl cwtl or daa jg (bad) dec pop lock push rcrb xchg xchg jge sub jmp cwtl je xchg fidivrl or xlat add or cmp or sub xor (bad) lock push dec repnz jmp push push mov or in or and push dec pop lcall or mov cmpsb pop sub lock push mov xor add inc aas in add rcr aaa jp outsb push mov sub not or push sub add jmp sub add xchg sbb scas pop or lret pop push mov jg sti sbb xchg adc daa (bad) std mov jg pop (bad) out mov cs mov es add pop sti jne stc test fiaddl add ljmp add pop lods aaa sbb addr16 int shrb xor les sub pop out cwtl fldt imul push push cwtl dec popf lods cmp imull out mov (bad) in rcr push icebp xchg adc jg xor aas pop inc inc outsb cwtl cmc sub popa imul mov les xchg and xor pop push mov aad pop dec mov add mov add and (bad) ja mov mov test std jle leave push xchg out or or xlat inc mov mov rcrb xor mov loop daa pop fs ret je repz lahf push mov int xor add out pop cmpsb push inc lret jmp or jmp adc jo cs jno inc ret outsb (bad) pop das mov in or out clc mov add fs cltd mov sbb clc jle xchg xchg pop bnd xor add lds and imul (bad) es jb add cmp mov out jg das ds and vmovshdup fwait jno and push inc jmp mov cmc les xchg insl sub push mov or mov inc dec or push mov cmpsl lock and adc inc add hlt dec adc loopne dec rorl fldcw pop dec pop stos addl or xlat and add dec repz rcrb cld inc cmp mov adc mov lret in adc jnp pop hlt stos jl pop jbe mov andl cwtl add jno data16 push xor pop adc dec jge movsb imul adc inc inc jnp dec jb lock mov jp popa pop into jnp movsl cmp dec push loope mul pop das sbb or jmp sbb sub jmp adc ja xor pop mov and sbb cmc and xchg jecxz mov sub test aam fwait mov les dec mov xchg movsb mov shl in insl sub out lea jne mov in pop adc enter in neg mov jg dec add adc call mov mov dec std mov cmp pop loope outsb pop mov push push jmp mov push xlat and cmpl add idivb or not jg push dec and mov mov add pusha jl shr lods pop or outsl loop push repz in xor jno cmpsb xchg push in jle mov clc pop dec aaa pop jnp jl sub inc push out add rorb sbb repz mov call sub add shrb cmp jl,pn adc mov pop out xchg lods out add inc mov jae lret in test mov into add xchg sti push xorl or scas imul cs pop in mov inc shl mov push xchg jb and cmc and push dec movsb and add and pop pmaxsw and dec idiv xchg mov outsl mov (bad) or cmpsl adc lahf es xchg ret or scas mov out pop xor mov in jge (bad) nop (bad) or jge out or push cmp push stos fsubp and mov xlat addr16 xor fcomip push add call daa jnp in add xor (bad) or lret je pop daa inc or jp mov xchg mov xor or repz mov mov test mov jno push push lcall ljmp rcrl (bad) aaa sub jmp and daa add inc lret jle jecxz gs (bad) and sti mov cmpsb xor or ret incb push test cmpsb sub repnz pop add lret sbb xor test sbb faddp pop insb cs cld sub call jnp dec add popf outsb sbb pop lock jmp stos pushf jbe lock sbb jg js adc add lock loope jp in add test xchg call and xor push jle mov or sbb (bad) adcl mov jnp mov rcl xor leave (bad) jmp and sub aaa jo mov mov movsb dec push sub sub orb push or stos pushf sub adc jmp or lea cmc cld jo std sarb inc sbb jge hlt loop xor ds jmp repz inc dec bound test popf in (bad) dec test (bad) fwait sub pop pop pop and adc adc imul dec inc mov xchg inc and clc jmp sbb pusha es jae sub dec or jmp addl pop pop push enter push mov cmp rcrl test loop les in sbb jo add (bad) adc push fmul sub pop mov xor cmc jle rcll scas (bad) xchg xlat pusha lahf or pop mov sub cmpsl dec fs fs mov lahf lret xchg add stos push rclb sahf loopne xchg bnd fnstsw push loope adc outsb adc jmp das pop in and push sub popa and xor push dec movl dec adc fildl es cwtl and inc dec test outsl cmp jmp push in push shrb jbe xchg jmp push pusha jmp dec jl js fchs data16 and push aas pop push arpl pop fnsave lcall imul mov js mov pusha mov xchg sub arpl add sub stos cwtl outsl jmp pop icebp pushf push jle push scas lcall mov adc dec sub lea std mov push push push and out pop cmc push and fsqrt lods cmp das sub add js dec push or sbb pop jge insl cmp pop inc fildll mov push mov xchg (bad) icebp mov pop add jmp call and push add xor cs test push mov pop jnp divb inc mov pushf insl bound pop push in pop icebp mov test cmp mov jge aad sub adc sbb add xchg imul jno cmpsl or push hlt repz mov jbe test sub int3 test add arpl loop mov fwait sub cli dec and adc lods add test sti fprem1 add stc jae mov xchg lods scas arpl pop and jle mov pop jl out cmpsb outsb mov out mov mov add add cmpb roll jmp or inc pop pop jg xor inc stos shl or lods mov cmp jns sub pop inc fsubs je or ret (bad) push and jmp jmp sahf add cli cmpsl shrl xchg sub adc add popa push mov add push dec add or cltd mov out call sti cmp xorb jge stos cmp repnz sbb cmp (bad) movsb out adc mov jns dec jl adc loop test add jge xchg sti out clc loopne jmp stos (bad) pop and ret or add jb sarb add dec (bad) or or jnp xchg pop pushf out push jne jge andb push xor and out add sbb lods jmp movsb adc lea fisubl mov lret or add jp dec sub dec shll xchg loop xchg iret (bad) cld outsl or mov out adc hlt decl or ret push and xchg add mov cmc mov cmc and push cmp sub jns adc jp pushf nop pop pop xchg xchg mov push int3 repz mov push dec aam aas fiadd mov lds pop clc add or inc pop and pop push iret pop cmpsl bound jb call push and and pop mov dec dec or addb jns cmp pop subl xor dec push pop jp es add add dec add xchg ss cli and lods mov test (bad) in add cmp nop in icebp dec fidivrl mov arpl mov cld ja pop or mov test and pop push pop mov sbb cmpsb shll mov les enter xchg inc sub sub adc sarl punpcklwd lahf jle sub add shrl jmp or pop loop call add xor in incl icebp sbb dec xchg mov adc loop add pop sahf enter outsb ds addl stos inc std loop mov fimul (bad) dec inc and mov or sub mov lods ljmp mov es mov push out sbb cmpsb loope in das sahf or xor out stc out idiv fs adc xor (bad) jae icebp cwtl xchg sbb pop ret sub or mov add dec out xchg (bad) testb int3 pop adcl sbb adc push xchg fcmovb push aaa sub test push ljmp inc rcrb divl xor loope call dec ja or scas ss sub mov and ljmp mov dec mov lahf addb or add sbb addb outsl add push iret orl push jmp push cli push jg or adc cmp dec inc out lea jle dec adc push add xor (bad) sub mov inc xchg out mov out add pop dec jle or or ljmp lret adc and stos dec sub xlat out (bad) repnz inc add xor mov jmp decb cld rol add rorb arpl fdivr mov in dec ret in cmp push adc loopne mov daa syscall add pop es mov clc sbb adc aaa inc sbb sbb inc mov or push popa push or adc sbb cmpsl outsl jmp pop pop sbb loope pop iret jnp mov adc push aas fldl cmp ja pop pop xor mov aam mov pop push ja outsl mov sub fs jl inc popa lahf cmp and mov or fadds sbb and xor shrl lock movsl fimul pop push mov or out stc rcll loope jnp aas loope mov mov push add sub xchg pop push push ss outsb pop xchg fiadd xchg ja add adc xlat push mov (bad) pop mov in inc inc in adc pop and add sbb pop push popa sarb inc test mov inc push lcall and xchg jmp int3 in add inc and xchg pop stc lds jo xchg pop add cmc inc mov add pop xchg loopne inc add gs imul data16 popa or cwtl cmp gs arpl je xlat lahf mov pop popw ja jb fs jbe insb cmc jo (bad) ja mov insb lea addr16 jecxz,pn push jns jne or sbb jo jae outsb inc push push dec sub (bad) jmp js inc cmp fs jmp or clc fisubl ss inc inc lret imul cmp invd dec push push loope jb decb cmp inc in cmpsl cmp outsl sub push test dec cmp mov je cmpps add ss pop mov loopne mov add inc adc sub arpl mov sub dec or sub add pushf mov push push jge (bad) shlb jle pop or das inc inc sub xchg aas addl rorl mov insl push add das jmp mov inc add mov imul adc faddl and sahf outsl cmp sub lahf stc xchg leave (bad) sbb jmp add test xchg mov dec push jmp or inc movsl pop int out (bad) in inc pop mov js mov popf ficoml push mov fstpl jo add pop enter fidiv (bad) pop push push jmp in movsb mov daa push in rorb idivl loopne adc out jmp ret clc cmp jnp cs dec adc mov aad sub pop out fsubs cli pop push dec mov jecxz pop test add mov push or adc xchg inc add outsl inc dec shl pop xchg push dec lods inc push xchg call (bad) jbe (bad) aas or (bad) arpl mov jmp xor sub sub or movsl fildll faddp cmp jmp mov pop das dec push test push dec jmp sbb out and or add (bad) push test loopne sbb inc lods loopne out add out push mov mov push in add xchg lcall lahf mov pushf loope insb sgdtl pop ret pop sub dec xor hlt outsb inc sub imul adc outsb push jl das adcl insl cmp pop mov je pop cld add mov (bad) add out pop ficomp adc push lock or cmc mov dec je loop cmp mov ret and jae mov or add xchg lcall cmpsb sbb or jl inc neg rclb repz sti mov (bad) ret pop or scas dec sub fs xorb jle xor push call jno dec adc cld sbb iret iret into mov (bad) sbb xor push aam inc push fcompl (bad) loop ja push dec push mov jmp fisubrl testb js nop scas sub scas in setge mov push sub inc sbb inc stc sbb lret mov adc cmp add dec stc sbb jmp test xor mov or jmp mov dec adc mov lock jnp jae and cmp (bad) xchg scas or aam add pop (bad) mov or hlt mov mov xchg movsl sbb xor sub ljmp adc and adc fldt jmp pop push int adcl clc pop dec lods stc movsb xchg dec pop popf adc push push add pop (bad) pop out std popf hlt loopne repnz xor cmp jl sub add pop add pusha arpl iret jnp mov or xlat dec sti je and int stos push ror inc xchg pop adc lods xlat mov adc iret fidivrl pop inc rclb dec not mov cmpb jmp push inc mov mov jno jge in ja jae add pop pop inc xchg andb sub fwait jmp repz or mov dec movsb gs pop jb ja mov leave cld pop mov jecxz sti adc gs aam cli (bad) sarb hlt jge adc xor addb fcompl dec or (bad) jmp xor jg xor pop mov cli les pop pop out lret push dec adc repz dec outsl sub rcll jg jl pop or lret js mov pusha leave push cld adc jne or dec lods pop pop mov inc lds cmpsl cs in push cwtl int sub inc push mov or xchg mov push push (bad) cwtl inc daa mov (bad) cmp jne push xchg jno test pop or sub or add xchg mov jo dec loope and inc imul call jmp dec dec lds (bad) rcr (bad) (bad) pop sbb mull dec push and inc ljmp ss pusha or popf sub jmp lret sub push pop cld pushf mov sub mov or and dec jae pop outsb lock push pop or sti inc shrl incb cmp push jp jl negb push cld mov ficomp xor (bad) mov (bad) pop std dec icebp outsl imul mov push push mov jmp jp push push adc aaa pop push sub mov fisttpll aas mov loope and pop imul sbb cmp pop sar repz sub pop sbb cld adc test add pop mov xlat add or dec lahf movq cmpsb add loope (bad) adc emms adc add dec mov lds dec insb cmp shr inc cmc push pop ja cmp gs int test xor push inc sub stos test pop adc testb adc jbe nop add div and sbb xor sbb or mov (bad) xor cli inc adc xor xchg mov insb push push cwtl sti adc cli lods cmp mov sbb add jbe call or or nop ss outsl hlt inc out repnz adc push jge ds mov loope jno std adc sbb fistpl jge test clc ja fsts add icebp out loop daa lds sub in fimull sbb stos pop out std xor outsb adc add dec lds push adc push add call (bad) in push aad cs jmp sti (bad) pop xchg pop scas sub push imul xor jnp ret pop jmp rcr dec ret xor cmovs sub adc sarb int xchg cld or mov dec cmc jae roll mov sti ja outsl xor stos xchg jae aas ja mov mov inc jmp push xor pop or outsl leave or jle jmp push and or pop push xchg pop push inc addr16 add or pop jmp pop lcall cli lock or push jmp enter adc adc xchg pop add fs mov pop shr sub (bad) lds jb add push mov scas dec sbb jns outsl pop imul add loopne ljmp or pop daa rclb sbb xor cmpl fiaddl or popa xor sub sub or push movsl adc inc pop insl push jmp dec adc push mov push mov dec pop dec mov jb sbb (bad) mov xor jmp push pop and jle repz out into jl bound jne mov test fwait (bad) jae call adc lcall sub call (bad) lods or outsb mov (bad) mov jmp sub push or flds cmp dec js jg repz or js dec lea add scas and (bad) xor add insl sub jnp push lods sarl int dec push loopne popf daa arpl inc mov and pop add sbb or xor imul pop stc mov cwtl lret test (bad) fisttpll mov cli jge pop (bad) aaa out daa int rcll fadd fldt push dec push mov push testb je popf pushf inc cmp dec std adc rcll add stc add mov loopne pop dec dec lcall dec jg addr16 add lods cmp pop repz and cmp mov xchg data16 adc in pop mov jo push fnstcw int3 or adc nop xor aas or xlat pop in jmp mov cmp ret or jge sahf sti nop addr16 outsb ds and jp jg mov or dec stos mov mov jmp fldcw jbe sbb imul pop (bad) jbe dec cmp add aam arpl jp and inc imulb out inc and aad lds xchg push adc pop dec repnz stos push lea xor push test lods cli xor adc out addr16 dec and or fildl jb loope cmpsl jg leave or add xchg inc nop push dec ret xchg add fstl and enter fnstcw jnp outsl sbb add cld sub mov outsl imul push mov xchg and pop pop inc sbb imul into (bad) or lret mov jmp xor and in sbb jbe fistp mov fst push or sub repz adc insb int stc rcll repnz sbb mov sub and ret xchg icebp dec mov push outsl (bad) cwtl inc or inc imul pop or xor jae out loope lods call xor xor dec mov (bad) leave jl inc (bad) xor cmc jp sbb push rorl push cmp lahf rep lret lcall fnsave mov repnz pop push pop mov sti aas pop shl decl arpl cmp xchg xchg cmp pusha loopne inc sbb inc add adc cmp or mov dec mov pop rorb add jmp std mov leave aam jae dec in jle mov xor lahf dec fbstp mov mov in lret push pop inc and fcomps (bad) dec ljmp aas (bad) adc xchg mov push adc popf jns mov push add xchg cld sub cltd mov cmpsb arpl push icebp add ret push in mov jg sub cmp mov pop (bad) or jae aad and inc clc push popf sbb jmp (bad) jb rep daa lea xchg sbb inc mov jmp adc or repz in push lret push daa jmp iret add dec ljmp cmp out push popa pop clc je pop scas jle in (bad) in add mov jb rorl jbe mov pop jb mov (bad) or cmp jno test push push inc in mov mul pop jo pop sub out pusha cmpsl mov sub push add scas inc push into jnp shl pop pop sub cmc inc sbb and pop pop sub jne cmpl into cmpsb lea dec add add mov jnp mov icebp mov les rorl or inc fistl ds inc jmp loope fwait popa ret xor jge cs jmp mov xor repnz sub mov enter int in add push pop fiaddl fucomi add push pop and call jb xchg sub es push adc jmp and mov testl shr loop fxch xlat insl push popa popa fs cmp cmp jnp lcall sub pop sub inc push dec out xchg add mov mov mov xlat pop lods mov push push fiaddl lret cmpsb mov loope mov lcall cmpsb not jmp inc sahf or add pushl or add mov lcall jb iret addr16 pop ja int repnz inc shrb sti lret inc or or mov cmp (bad) arpl cli sub cs int3 rolb decl add jno add jmp mov (bad) push add xchg mov cmpsb leave and dec scas inc imulb dec or adc fstl loop push mov push adc inc ljmpw sar ja add aas cli or das mov jg and scas cmp shr orl mov adc ja (bad) pushf mov xlat std adc notb in (bad) not (bad) ret or sub pusha pop add adc popf out pop addl push add jae sbb sbb inc inc or or pop mov xchg jg inc cwtl jecxz dec add shr adc jmp mov add jge mov xchg xor jge aam imul adc es lret adc pop cld jg (bad) call sub push out cmp or sbb mov jg pusha cmp test pop jp dec jge fist xorl and std mov aas in xchg mov sbb add cwtl xor inc xor lds and xor sbb stc inc test or xchg mov scas jne xchg stc mov mov shlb push pop mov pusha test xor push es push pop push mov insl xchg lds cmc jno (bad) sub loopne xor pusha dec mov and dec es test fild adc gs aas dec fwait dec jg jecxz sarl or in sub pushaw inc scas and sahf adc add nop outsl cli mov rcrl ret inc dec xchg das sbb pop inc add pop sub cmpsl in cltd pop outsl aas pop mov xchg or int pushf (bad) or das pusha dec popa cmp inc not or dec xchg pop lahf fildl mov daa mov dec or push adc into add mov repnz movsb dec lret and pop repnz pusha push mov inc test mov insb mov pop dec cli movsb int3 sbb inc (bad) sub push or test insb inc clc pop mov push adc sub push mov jne mov dec call add jb adc in lret mov andl aas mov and js mov push leave push das call call inc (bad) stc and inc dec add and das and pop dec loope imul stc popf inc cmp push cld scas ret fistp mov mov rcll rorb xor or inc pop arpl add aaa inc shr xchg add jns sub and in mov scas add pop out sub inc ds lea add mov pop cmc dec fisttpl ljmp and inc pop dec push shr outsl cmp test add in cmpsb dec inc pushf sarb test lock dec lods lods ljmp inc outsb add mov rcrl daa pop xor mov repnz pop movb pop call cwtl out repnz add insb add jmp lock sbb jb call sub jbe adc inc repz add sub pop sub stos (bad) lcall testl ja outsb dec push xchg enter sbb pop push popa int push repz insl lods xor rcrl fisttpll aam movsl icebp and lds sti or push dec dec and xor call inc sub arpl repnz adc adc pop and add js sti jae icebp movsl jbe test push inc cmpsb ljmp nop imul ret test loop push adc in pop shlb or adc or push jge idivl and daa or mov jg movsb (bad) icebp shrb loopne mov cs push jp add push sub gs pop or add pop and inc push sub xor mov and lret mov cld mov jg fisubrl lods add add imul jmp jae cmpsb inc pop lret or sbb jge cld ret xchg repnz push push outsb add clc cmc out pop nop pop fs loop cmp push sub cwtl ja negl xor fwait enter cwtl pop sbb pop out dec sub (bad) (bad) (bad) (bad) xor pop add hlt jns ffreep aas testb push add mov faddl out xchg mov int3 push stos mov add idiv inc jecxz test push and pusha push push push in sbb in sub or cmpsl fwait add pusha jmp sar add adc ror pop ds jmp outsl (bad) jns ret jmp push test xor mov mov fsubrl imul cmp icebp sub add movsb loopne push mov pop mov pop mov out mov mov movsb cltd aad rcl mov imull sti test jae ret (bad) sbb and jg sub adc outsb mov sub mov jmp out out in mov inc sub push sub or dec and dec sub adc sbb pop sbb ret pushf xor (bad) push sbbb add fistp ficomp out or stos iret lret cmpsl (bad) mov push stc add push pop jle xor jo scas pop and push mov add hlt (bad) jne jo fcmovb iret mov sub cmpsl adc ljmp xchg cmp dec out mov xchg push test pusha adc mov loopne and mov pop nop int dec adc push mov mov ficoml hlt and mov inc push loop jg sbb push sub jmp cmpsb jno jo mov sub icebp jg mov das pop dec inc inc jmp out jmp cwtl daa shrl cmp cmp stos cmp cs push sub mov pop sub out (bad) neg aas mov pushf xchg lods jo xor or xchg loop les jl jns adc push daa inc adc pop leave sbb in push lods or (bad) in out push lcall lods push loopne imul sbb icebp insl and push sub add xor mov pop in dec cltd (bad) and ds sbbl pusha pusha (bad) in mov scas mov dec shrb and das jecxz loope sarb mov xor nop std jo (bad) add repz xor push sarb jg jmp mov adc inc icebp fldcw addl dec push pushf pushf mov arpl jnp or gs jecxz jg roll pop sub in shr jge mov or push repnz xchg negl adc test sbb pushf mov add xor (bad) push push cmp pusha cmpsb fwait cmp push jnp mov pop sbb cmp subb mov jo (bad) or pop jbe or push add dec inc push mov fsubl rolb mov (bad) push lods clc imul add mov push jle and out cmc inc faddl cli pop jo or test pusha xor mov push pop pop pusha inc xor gs mov incl rcr add mov jl mov xor or xchg dec mov lods or jne xchg sar in in jnp js clc (bad) das cmc push sti aas push mov add pop (bad) fdivrs xchg daa xor jge or push and xchg cmp adc mov and mov rolb ljmp outsb jbe jle (bad) pop addr16 (bad) out jl pop movsl inc and and out loopne mov or (bad) adc push push xor stos adc psubd add lcall scas clc mov jge (bad) or pop mov add push cmp pop (bad) push popf fist aad ljmp pop sbb aad mov push mov enter pop nop adc adc mov jns cmc mov mov cmp sub cmc mov daa ret fildll add into pop cmpl mov cmc pop outsb in outsl push dec jmp int cld adc push pop xor jmp shr xor and (bad) js out test adc dec jns les adc sub imul cmp jbe push aad jnp push xchg pop in push jo fucomp orb stc jbe stos inc cmp (bad) adcb das das ficompl testb loope or int std cmp inc inc icebp and or in sahf into add mov std adc fbstp ret xor pop icebp fs ja jb push arpl fsubr cli cmc xchg fistl in gs (bad) in imul cmp adc and xor xchg push cld in jae adc ljmp nop inc jmp jmp pop lret push xchg or sbb jmp xchg mov xor pusha cmc inc mov pop add and stos or jb sar adc out add mov call pop ret adc adc ret hlt xchg mov cmp add xor adc (bad) cmp add test cwtl inc mov push das lret inc pop fiaddl sbb ret mov inc push ret mov jp sub xchg and inc push ret add test (bad) pushf test mov cmp mov adc pop (bad) and mov mov lret repz cmp fbstp xlat add xor push fnstcw xchg and pop add inc loop sub ret and inc push ret aad jmp mov das lret sbb add pushf outsl data16 rcrl push mov iret addb add loope cltd xor call inc aas (bad) adc dec inc xlat repz lea mov mov jae push aam mov xlat punpcklbw xor rcrl notl sbb dec mov mov rcl add pop fs jno add cmp inc mov jl popa xchg enter pop ret xchg mov addb icebp jp jmp (bad) xchg lock out jl or xchg add test mov sub jmp stos inc dec outsb cwtl dec mov enter pop xlat int jmp xchg xchg and ret enter inc sbb push ret mov sub dec push push cmpsb gs push mov add rcrb xorb icebp pop mov push (bad) loopne pop es adc push mov es popa loop inc pop add pop int3 fisttp cwtl add adc orl aad sbb arpl xchg shrl push (bad) mov pop pop pusha inc das pop inc cmpsb push loop stos adc push movsl or mov xor push pop fsubs fnop jg inc cmp movsl add out pop xor call aas cld test mov sub mov dec std cld push and icebp rorb inc adc cmpl dec mov adc pop push ret ds repnz fidivr xchg and adc out mov adc cmp scas mov cmp fildll sub mov test scas outsb fadds rorl push push scas inc sub arpl sub mov inc add jmp in add les pusha inc jno sti xchg popa mov jmp adc or test dec or ret jmp mov (bad) sbb sbb sbb subl push mov cmp xchg push (bad) and lahf mov data16 enter aam pop sub test or les sbb xor iret sub or push and dec incb push inc lret mov cld adc lret call or mov lret and sub pop jbe (bad) xchg mov popa mov sub jl sbb jmp and mov and ds xor cmp add mov xor rclb or (bad) in js push adc add mov rcr or shr and lea pop pop mov xor lods call mov jge dec or jmp pop call rcrb ljmp out fildll add sub xchg test sub daa and mov cld fistl inc loopne pop repz sub lahf cmp inc ficomp push pop lret fiadd mov push jmp scas jl adc lds add mov in pop jg sarl mov das fs dec cmpsl fsubs jl pop call popa mov (bad) jle cmp xlat xchg mov xor repnz or add mov jl dec push test (bad) hlt push repnz jg std or jo (bad) sub sub ja adc dec leave test mov loop into xchg mov and sbb (bad) jmp movl sub pop das cwtl outsb ret leave xlat pop pop fwait mov out xchg ss mov cmc inc xchg cmpsl pop shll push push jp mov cmp leave jne inc pop jl pusha je push jle adcl repnz pop inc pusha sub add ja addb xor push lods cmp mov fwait adc jmp push cli lret sub loopne jl repz jle add sbb outsb mov in jle adc sub imul jae aas incb add push pusha push sbb or jg cmp add mov (bad) add push (bad) cmp movsl mov psraw scas outsl adc add aam imul and xor add arpl pop mov sub popa js ss mov daa inc imul out add inc cmp je sub mov lods add mov (bad) fnstcw cmp aas mov add std (bad) in inc jmp aam xor lock add or mov roll outsb sub jge and dec arpl xor repz in add add mov mov jl sub sub pusha out push rcrb sti popa add int3 push nop (bad) jne sbb mov xlat jle aam mov std jmp push xchg (bad) nop xor arpl enter addr16 mov xchg pop jno jmp pop mov jg xor fild mov dec add lock pop push push std mov inc pop ret in add mov loop dec adc nop das not (bad) gs ljmp mov push add xchg es popf rcr xchg dec hlt aam mov push in xchg fsubr jle fiadd roll dec loope push xchg es mov xor pop mov dec xchg in or icebp pop daa jmp mov jge pop inc in les rcl mov (bad) jg adc enter push mov popa adc adc jecxz add xchg sbb push push jl sub cmp add pop xchg int xor sub mov pop aas cli dec stos test (bad) fild fcmovnb and mov scas lods (bad) mov loope mov jg out sub je shrb push pop pop neg xor jp orl pop lds adc lcall call push push daa xchg or pop pop sub push dec std jge mov dec pop ss xchg jl pusha jns push jle pushf jnp insl jg jecxz push sbb adc mov int jnp push mov lods loope dec add xchg mov (bad) cwtl adc jae adc (bad) or sbbl or jns ja pop push pop mov push add out xor cmp stc lret sub fimull xchg or (bad) cmc or dec dec push add mov cwtl pop push push xor push scas push pop push repnz cmp xor in cmp cmpsb jge jge outsl add andnps es push or std mov jmp fstpt aas mov mov dec popf stos repnz fstl pop std adc les (bad) leave roll fbstp lea lock ja adc pop add jle mov dec or adc add adc movsl ret inc xor (bad) repz aad mov push mov aam mov or lret addl and jbe (bad) or fstl stos shlb cld adc mov pop mov xlat cmp pop jl xchg out pop (bad) adc inc dec dec arpl lret or xor inc cli fisttpl pop mov and add (bad) jae es sub xchg lahf add mov mov mov jmp in sarb (bad) decl dec jg repnz pop sti hlt inc jbe add lret popf addr16 (bad) jmp popa sub in stc sub leave pop aam sub outsb sub xor sub push popa mov mov add dec jbe add dec cmc jmp push inc or adc jmp add das mov dec stos xchg pop stc pop inc shl dec movsl jg fsubr movsb mov aam jno mov jg sbb icebp pusha push jo aaa ficom icebp push out xor jg ret movsl (bad) ror aam scas mov add lret jle fs test mov cmp mov and mov enter or xor and mov mov mov xchg clc (bad) mov mov xor add clc push mov rorl movb xchg ret dec repnz inc mov xchg pop int cli inc inc or (bad) dec rcrb jmp cmc and inc mov ljmp xchg int3 xchg xchg jp push mov bnd mov xor inc pop push add ret pusha iret and jg or enter imul jno inc push push int3 icebp add push daa jmp mov adc pop push dec out xchg dec bound inc leave fxtract in xor sbb std add out xor fcomps sbb inc lret mov std dec add aas call daa sub fmuls leave cmp add test push sub sub push pop jl dec jl pop push mov icebp pop enter js sub adc push and cmp ja dec test sti sub mov and movsl stc test ret inc mov jge jle mov pop neg sub lret in jne xor dec (bad) sbb inc hlt push jb sbb out ficoml loop sbb cwtl divl popf mov pop test adc lcall and out rorl pushf flds ds mov ds jg xchg push jp xor sbb push ljmp push xchg rolb int3 push sub outsl cmpl mov test das sub dec and fwait add dec push dec cmpsl jp popa xor notl pop xor test movsb xchg cmp push mov push ficomp or add and add xlat (bad) jg inc xchg add fistp das pop or adc jnp bnd cwtl sub cmp sub cmp push jmp idivl gs cmovb loop cwtl jge lods es imul and jno enter push mov dec sub jp and or in dec cmc and in cld test mov mov or and mov adc adc movsb cmpsl lahf adc cmp add mov and add ret icebp pop inc test xchg push hlt add fwait and es into test aaa push add pop xchg enter cld add lods pop sub xchg jbe add rcll les sub pop inc subb adc insl pop add push push cmpsb lahf push aas clc idivb jecxz cwtl test adc cmc sbb adc sbbb rcl notb arpl mov icebp dec adc mov sbb mov movsl int3 and loop pusha arpl fsubrl popa dec push scas and add hlt inc pop sbb fildl repnz push test outsb xchg incl mov int dec rep jmp adc mov movsl jle addl fiadd mov push jl sbb mov add rol sarb mov mov jecxz cwtl fldcw mov add and cltd mov hlt clc popf push inc jge in jne and leave scas pop push rorl or mov scas sti inc mov test mov push insb adcl test push testl cld imul lods sbb loope or push scas lds mov adc test adc pop sub das lret mov xchg mov inc lock jecxz test adc movl push and push cmpl fmull cld negb pop dec shrb addl call imul pop lods or xchg push adc pop add insl js cmp push je cmc mov push (bad) push mov pop add in jbe rolb or into hlt cmp ds mov mov xchg outsb push push std mov (bad) dec scas mov test jl ficomp hlt jecxz mov or sub test cltd or fucom jge add inc out cmpb imul sub in inc add mov bound loopne cli sbb scas xor jp outsb cs pop inc sub js add fwait adc xor sbb dec sub jmp mov push dec out stos cwtl dec or outsb sbb mov xor xor rclb mov cld or pop dec adcl aas outsl scas adc imul aad push add ret jecxz push mov js pusha jbe leave xchg add sub sub rclb mov lret mov adc int3 xor sub inc mov inc push cltd pop add fsubs rolb mov sub or (bad) jmp or loopne add fs push mov or daa dec mov cmp mov int3 cltd mov test pop adc inc push dec cmpsb cmovp outsb mov sub xor mov test loope (bad) and adc ds jae leave lods or lock daa jl jo push mov sub cmpsl test rolb mov inc add dec js les aam fcompl loope rcrb sub push sti movzwl or dec mov push clc fcoms dec lods addb test jecxz cmpsb rorl cwtl push cmp jb cltd add scas mov outsl pusha (bad) pop pop pop or loope mov add cmp popa ja test adc mov push rorl add divb lcall mov nop or add or sbb sbb inc mov inc dec les mov mov inc dec add xor or xchg jge mov rolb imul add xor mov inc loop jl dec add out add and jb lret add pop imul add cmp orb jmp test test je push lock dec stos xor dec push das call add lahf les sub sti mov or mov and clc jecxz xchg cmp or test mov add sub push cltd pop lods int3 stc test xchg add ret movsl test aam test push dec pop outsl and test inc jo mov jmp jle inc dec or pushf scas ds mov and xchg (bad) xor adc ds pop add lret lds mov xor mov mov inc inc mov add and hlt jae add inc jb jo jl dec sbb lods fcompl cmp and mov jmp sub loopne mov faddl add pusha and cld (bad) insb roll and jl and add aaa js xchg inc cmp sbb mov dec add (bad) (bad) mov jp mov nop jnp js push cmp jo dec fsubl cmp lods fs and cltd rcll jns push aam add jnp adc sub cmp aam push sbb js add add xchg (bad) aaa jp xor cs push test jnp sub xlat mov or incb ret mov dec xchg or cmp pop add and sbbb mull test xchg cmp loopne call mov inc rolb push and pusha xor mov nop arpl push mov adc outsb out data16 xor sub ljmp inc adc cmc xchg mov mov xchg or fsub sub inc add inc stc jbe and movsb mov clc ret popf imulb add xchg mov or (bad) push mov pop sbb movb mov cmp push int3 inc mov out dec jo add jb and test and nop je add jmp push adc lock xor fcomps xchg mov pusha push or cli dec push push mov call cld pop movsb dec roll mov push mov lahf inc and sub push push dec loopne add addb faddl stos or push ds test cmp movsb scas mov xor add sahf aam xor aam cmp adc (bad) mov cmpb mov pop cli pop pop ds push inc int3 adc imull nop xchg in dec push adc xchg loopne nop sub xchg pop dec pop pop lods xchg ds push or cld in mov hlt mov sbb cwtl xor push movsl test je dec jmp call lock dec inc rorb mov pop movsl daa inc jns je xchg in cltd rcrb in mov es adc add (bad) push and sbb jge mov add push cli mov stos xor mov add cmpsb fnstsw in scas daa sub fisttp sbb add cmpsb mov outsl jp adcb jno dec fist push std ficompl pop out cltd sbb xor cmp add mov popf jns mov pop fldt es test cwtl movsb adc leave ret ret sub sbb and jmp and loope test add pop ss pop loopne dec mov and or js mov and push xchg pushf (bad) mov inc hlt add in jne xor andb incb xchg xchg in dec mov or movsb hlt sbb flds dec and sub mov and mov dec or and pusha push or fstps lahf xor dec (bad) mov add (bad) pop xor cmpl arpl adc add aad adc sahf mov arpl ror ds icebp scas or inc ljmp inc mov mov cs add sbbb add pop into fwait adc adc add cmpl mov adc mov adc stc sub inc xchg xor cmpsb test movsl or lahf xchg xchg xchg cmp or cmp xor push dec xchg cmpsb sub and dec inc test sbb mov fs and fcoms or in or lahf int and icebp (bad) add or inc add (bad) scas xor outsl gs es jmp insl sub leave or or jle je add push nop mov sbb xchg mov sbb (bad) std aaa jmp pop cs fldenv pushf add mov call adc test or adcl sbb ret mov lea imul push mov test mov sub dec rep aad and pop add xchg into and loope pop mov repnz inc adc adc lods nop nop push icebp insb lods sahf adc xchg (bad) mov jo loope jnp js ret cmp ds adc xor jno or movsl fnop sbb fs les mov lcall mov add and dec fsub xchg add movsl arpl sahf mov push inc outsl cmp movsl call or xor or in imul insb add fxch outsl and lea jmp js adc add (bad) out ja pop dec mov out lret orl andb in add push movsl xor mov adc xor dec out add xor lds (bad) mov or pop xlat adc add mov (bad) fildll in sub and loopne fstpt movsl dec cli data16 jns dec and push icebp jp (bad) mov sbb rolb xchg inc inc stos sarl add inc cmp ljmp std cmp sub cltd add aaa daa xor add jle stos mov mov insb adc sbb adc push fst add jle lock xchg add repz or pushf sbb cmp mov (bad) fdivrs cli add mov xchg pop nop inc nop lods adc hlt or or push jb js lds jnp ret js in add iret add jl push inc pop cmp pop lock and sub xchg and adc test adc inc sub ja push movsb int in add sub sbb fs mov jmp jo add arpl int3 push mov stos jg dec inc adc or xchg pop push mov mov cld mov and arpl add enter mov and add lock xor pushf mov out testb clc xor xchg inc inc stos push mov jns xor ljmp movsl (bad) mov mov pusha repnz push adc call sbb dec jo movsl and mov test cmp cmpsl dec sbb cmp mov push inc and add sub xor xchg popa inc sub dec insl leave sbbb movsb and ljmp jge mov adc lds in or sbb inc xorb and shrl (bad) repnz je cld inc mov push mov add push ret int push xchg loope and (bad) xor js cld add rolb adc (bad) mov sbb jae popf pop pop sub in or jle jnp pop push cmp daa cwtl xor adc imul xor mov push push cmp inc or push add sahf push sti test xor test cltd int3 xchg xlat xor leave mov sbb fmull (bad) lock jp lret cwtl popa bound mov jo (bad) clc xchg jo adc add in or stos add pop jg sub mov es ljmp cmp xor and jl hlt (bad) dec jg fisttpll test lcall roll add fcmovu cld rorb and xor lock inc or loop testl xor js mov and jp stos xchg xchg and addb (bad) sub push inc ret pop addr16 mov repnz and pusha dec inc imul inc dec (bad) je in cmp stos mov jo pop push fsubrl mov cltd sub or jo cwtl sbb sub loopne test sbb or xchg mov mov add mov rolb xchg sbb mov pop xchg js and mov cmp or enter popf pusha adc cmp mov xchg fidiv add or mov cwtl add fsubl rcrl push into add xchg popa push mov pusha xchg je daa inc and mov jne frndint jle xchg jo je and adc lret lods mov cmpsb pushf std xor jns xor and (bad) xchg add lods jl push cmp sbbb add rolb and xor call call push and les je jg sbbb ja add sbb xor inc add push aam and pop inc (bad) daa pop mov xor xchg sub cltd out (bad) (bad) fimull ja pop pop adcb pop out and or (bad) fisttpll fsub mov popf cmp add mov and and hlt lea test ret and insb sub add imul push into inc es int test fs cmpb scas (bad) mov fisubr pop and or xchg das fdivl pushf xor rcl in cmp leave fbld adc adcl push push repnz push sbb dec push out add pusha insb pop mov pop bnd xor hlt movsb outsb or push mov cmp stos xor cmpsl cmp stos mov hlt push mov rclb movsl mov mov push adc xchg fs cmp mov xor adc shr pop mov (bad) xorl and subps xchg sbbb cli jecxz nop pop in ds stos mov add push cld pop (bad) sbb test sub add and aas imulb ret ret sbb repz dec out sbb mov imul or (bad) jno movzwl imul aad (bad) sbb xchg xchg push cmpsb adcb push add mov cmc mov je fist adc push movsb jb cmp xor dec fild xor into lret mov adc bnd sbb sub mov jp adc mov sub or push cmp or movsl mov or or test invd mov sub adc mov dec mov mov add xchg jle add push das enter ror icebp and popa jl cmp (bad) stos jns push fimul dec or pusha push sbb sahf cltd cmp hlt je dec xchg addb add push jae data16 sub lret add push jb jle mov ret push in adc js push clc movsb mov jecxz gs andb repz enter imul mov nop inc shlb pop ds or popa and push jecxz iret pop push mov cmp pop mov hlt pop add pop enter mov sbb inc add mov mov sub jbe sub int mov out rcl mov daa ret loopne test (bad) jo fdivrs mov mov push add jno xchg ret cmpsl mov (bad) lcall inc lret xor push mov rcrl lock inc cmp push or das (bad) icebp push cmpsb aam cmp js or add or or sbb test scas cltd call mov (bad) add or adc dec fadds lods and sahf jle or add in cmp out popf mov test push insb or cmp bound adc xchg rolb in jns daa sti mov call xchg das mov xor mov aaa lahf mov das mov bound aas push ret mov (bad) mov in or add xor gs adc lods push mov xor adcl sub and (bad) pop repnz pop frstor add cltd jbe cwtl les push push lods adc test sub lret cwtl xor scas mov add xchg cwtl lock aaa push jecxz ss push jo repz ret sub or dec adc sub or push sbb fisttpll shlb rcll mov add xor sbb add lods and inc in dec mov lock add push inc jmp xlat inc les int3 rorb mov add mov imul inc sub ja sbb lods fadds (bad) daa push movsb cmp inc (bad) fs lret insb xchg inc mov xor lds outsb xchg dec push hlt or fs pop pop cmpsb sub and inc hlt pop jecxz inc movsb sbb cmp and enter cmp or lock ret push dec pop imul daa and fcmovu xchg sub (bad) lock (bad) add lods push add cltd or add mull mov xchg sbb pop and jmp add les movsb add inc pop and dec inc lock aam mov clc pop xor fdivrl imul sbb (bad) sub cld inc dec adc xchg nop push adc loopne lock into push push jge push add inc popa or mov loopne in sub push sub jecxz fs popa cmpl mov xor pop outsl stos test mov decl or lret pop cmc dec xchg mov adc sbbl sub dec movsb xchg fcoms adc das sbb mov aas in xor sub jp xor cmp int3 dec lcall push add cld add add (bad) mov or cmp enter pop xchg push mulb pop sub ret jl jecxz push adc lret xor cltd shlb xor test sti bound lods xor sbb dec mov dec je cwtl xchg mov test mov mov mov jmp jae rolb cmp push rclb imul lea push (bad) mov add (bad) push mov fsts loopne pop cli push push ret hlt insl add dec inc pop mov in adc xor add cmp scas adc popa add sbb mov test call push adc or pop fiadd (bad) fstl add pusha push push push add gs mov or add add add push sbb push xor sbb enter leave inc lock fistp dec mov insl dec push lret cwtl or or loopne adc or mov sbb std xor and xchg test cwtl mov loopne xchg lods add dec inc xchg cmp leave adc jnp fidiv imul outsl mov xlat test pop adc mov enter dec sti int3 dec dec push sub push inc push dec shrb test jecxz adc call les mov popa test and je mov cmp push test dec mov mov push shll aas les in test je dec pop outsl inc jg imull and xor xchg sbb jge aas mov dec les pop test lahf imul addr16 (bad) jo sub xlat jecxz mov pop mov sbb and push inc push pop mov scas or dec hlt add cltd out inc add sti bnd jno (bad) xor add cmp sub and mov lret rorb dec mov clc test scas xchg inc mov icebp bound in lret es xor mov movsl mov push imul lods sub pop andl mov mov les idivl lcall roll and loopne push jne outsl mov std inc push nop mov mov dec scas sub test and mov fidivl iret or push mov test adc adc lods mov dec cs add push (bad) int xchg cmp shlb push jne add cld mov push add add cli lret inc (bad) push fidiv inc push and sub dec adc fsubrl jecxz in add scas movsl xor push loope sar into cmpb fucomp lret mov add mov test pop sti xor popa outsb cmpsb orl fdivs inc dec lods pop adc scas mov or rolb lret dec mov insb mov add lret sub xchg xor ret scas incl pop mov push add (bad) fcomip mov push (bad) adc test fsubl cmp mov mov jecxz sub loope and mov fdivs mov add mov mov cmpsl pop inc adc inc sbb dec inc addl cltd sti lret call mov enter inc lock mov mov iret dec mov push xor add fmuls pop adc psrad sbb jb loope scas sub xchg mov mov jg mov cmp mov dec frstor xchg and add push push (bad) and pop mov xor push xor lahf push push and add push sub mov lds rorb sbbb aam lcall lds notl xor cltd nop xchg push dec push dec add or add or mov mov sbb imul outsl add outsb pop push mov dec imul bound (bad) xor adcb int3 dec push add aam inc pop cltd loop adc mov daa jmp mov cmpsl (bad) push push mov mov pusha lea cli mov jb sbb jecxz xchg les dec push mov fdivp jecxz dec pop fadds pop sarl and ret adc subb lret pop xchg pusha (bad) adc push rol pop lds sbbl mov loopne mov fcomps sub rolb push xor push adc in mov cmpsb pop adc lock scas jae add mov add push mov call das push mov or xor int jg and lds push inc adc mov les es aam inc dec aam fcompl int inc (bad) adc adc sarb cmp mov push and and test pop loop adc mov das icebp cltd mov sub out mov inc int3 scas cmp lods loopne clc add lcall adc xchg cmp out xchg mov es xchg testl shlb xchg cwtl or dec add push jnp jae stc jl add add (bad) rcl loopne or in xchg sahf rorb aad rcrw leave mov pop je or sub add sub add hlt pop inc xor cli loopne xchg jae shll lock orb adc jl adc dec (bad) je addr16 pop add xchg movsl inc adc jp jle xor roll test jno sahf mov in bound jecxz add in sub addr16 sbb mov mov enter movsb js xor in sbb mov fs lods call jp or test movsb jecxz clc pop sbbb xlat or popf in push inc and lds hlt inc shrb mov push pusha mov (bad) insb sahf dec lea pop cmp ja mov subb dec push cmpsl push fwait dec cmp inc js push mov sbb jp pop loope adc sbb je sub out or daa or push rclb test jo xor or push mov fstl or mov and mov inc cmp lock adc dec or jl inc pop nop sbb test xchg sti jns cwtl mov mov int bound or lret inc test hlt xchg in popf ds inc add jmp cmpsl dec (bad) jp aad pop ds mov and pushf aaa adc xlat cmpsb enter mov test inc movsbl add add xor cmovbe push pop jb inc adcl mov cmp dec pop mov jo popf xchg mov js fsubrs arpl xor sbb sbb sub cmp imul mov je es xchg mov in pusha sub movsl daa lods mov outsl mov add in jbe push (bad) mov adc sub cwtl and jbe bound xor push pop gs push jno hlt mov mov dec xchg cltd pop aas add or add xlat je addr16 pop gs cld call lea pop and and xor nop inc fistpl loopne loop sbb pop and xor push (bad) adc aaa in sub adc mov icebp xchg shlb out imull push push pop push (bad) fildll imulb outsl int3 xor pop scas mov pause lock pusha push xorl or mov (bad) jecxz popf cmp sarl add lock shlb mov pusha lcall test mov inc mov mov or or test daa inc sub pusha adc jmp add adc pop fisub sti pop ljmp or inc enter cmp cmc adc jp aam mov push insb cs pop pop and outsb mov (bad) mov inc leave sub insb adc outsb cmp mov cmc adc pop xchg adc mov outsb push pop sahf dec out add inc sub es and sbb insb stos sub mov fdiv pop pop pop out mov mov sub int (bad) dec outsb data16 or sub xchg jno (bad) pop mov lock hlt pop jl cmp aas adc xchg xor adc dec add inc ljmp sbb xchg dec push or sub in imul xchg fbstp mov add in repz lods pop push add dec dec xchg adc and add xchg mov int3 xor mov xchg and inc xchg add sbb add push sub adc les (bad) aam cmpsl sub add cmp lock iret mov or xchg (bad) imul dec popf or or dec pop or adc lods ret add inc pop icebp lods movsb dec sub addr16 (bad) mov test add fwait mov clc jmp ja (bad) adc lock test roll push sarb sub mov xchg cmp xor xchg mov dec xchg jnp add sbb adc push arpl dec (bad) mul jo cmpsb cmp jp (bad) hlt mov push cmp sbb add sub xor dec jne add nop es pop outsb add add cmc std xor in pop dec xchg xor and jo rcll add push loopne aad es pop roll daa sbb data16 dec fwait arpl and hlt test mov sub xor xchg iret pop cmp add inc in cld in shlb and sbb mov xchg jno je cmpsl clc lea push sbb sarb faddl data16 sub jle sbb aas bound and mov and or pop or popa andb mov xchg nop xchg js xor cmp pop adc or (bad) es loopne mov dec pop enter adc fmuls xchg fwait xor into loopne fs test add fisubl cwtl test sub xchg push add mov jb push inc jle mov or imulb add lret xchg add ljmp adc mov cli lret add add jno push add mov outsb jo ret cwtl addb pop sbb cmp dec push xor aaa mov cwtl mov cmp cli iret and mov adc and mov add and mov imul dec ja in cmp xor mov pop and ss or add out jb adc testl notb jnp add addr16 push inc xchg mov lret xor adc add pop adc shll mov sbb aas sub cmpsl in call and pop cmp in inc cwtl hlt xchg les mov movsb and jnp test xor adc or dec push ret cs daa sub or sar cmp mov cmp push jle jne test mov movsb shlb sub mov mov add mov out and scas int3 pusha inc stc loopne mov lds sbb iret adc xchg gs out jp orb push sub or out mov subb das in xor out pop sbb or pop and cmpsb test data16 insb lods and dec les jl xor push dec lods lods xchg add das aam stos adc icebp xchg and pop add test and sti lcall xor fsubs addr16 adc jo or or fldt out add arpl lahf repz test shrl sbb or clc jnp or mov lock mov adc lock fistp or jmp lahf pop test cmp xchg les sub lods mov in push push insb mov or mov pop and mov clc fwait sti mov add les lock scas lret hlt aaa or pusha (bad) push push mov cmp cli dec or cmc and add ljmp adc nop aaa add movsb pop or mov mov or add shlb in (bad) nop pop add mov inc movzwl lcall mov add icebp pusha cmp xor sub imul sub (bad) idivb sbb int3 lods rcll xchg stos inc inc cwtl lods jne push jmp dec mov inc adc and js xchg rolb and xor xor out jmp in loopne (bad) mov mov jnp and xchg nop add out and mov or (bad) test pusha out push push xor leave sbb push loope je lock cmp lock lret mov adc nop sbb dec inc lea les inc test das enter adc out jae lahf sbb sbb adc inc lcall aad cmpsb mov iret fistp and in pop pop xchg cmp adc mov xchg and andb iret lahf mov add int3 adc cwtl add sub mov sbb into sub or pop dec add lods cmpsb and mov pop mov insl (bad) sub add popf sub test mov xchg or pop xlat test mov and (bad) push loopne popa and fadds push jge in sub dec icebp sub scas adc fisttpll (bad) ss adc mov dec xor or bound sub in pop out (bad) sbb enter cmp movsb imul sub pop test mov mov pcmpeqw sub pushf inc mov and pop mov inc gs out xchg add sub fdiv add adc mov inc fisubr cmpsl daa jo mov cwtl lds aas sub cmp push xchg sub inc pusha add fnstcw mov lret cwtl aas lock jnp inc icebp add jns dec cmc mov sub ficoml and adc dec xchg imul sub inc cwtl dec in pop fidivl repz mov cmp pusha jb push sbb add pop xor (bad) xor xor push ds mov sub cmc sbb call adc mov js pop imul cmpsl pop fsubl nop sub dec js jae dec rcr sti dec int3 or push xchg dec mov scas dec cmp cmp jae sub pop push add xchg fs decb pop outsb dec mov cmpb int3 repnz mov (bad) or sub mov mov mov xchg lds faddl mov cld ret sbbb xor xlat mov je dec cmp dec jns test xchg lock pusha jl inc mov pushf adc fldcw adc cmp jae add pushf dec xlat jns and add pop imul inc in add cmpsb into and jno xchg popa aam pop sub test mov mov jl and fiadd pop out mov icebp es hlt cwtl sbb in ljmp mov in mov cmp pop sbb test mov xchg (bad) xor xlat ljmp (bad) xchg pusha in stos aad stc mov nop clc subl (bad) lock and hlt sub adc fnop push add aam sub mov mov adc rcll push nop addr16 push pop inc inc cmp movsb pop rcrb mov nop and or inc out push call adc call push sub adc xchg clc cmp bound jno dec (bad) adc mov les lahf ljmp rcrl inc enter (bad) in inc in push mov push adc out in or push add aad movb subb movsb addb loope or lds cld mov ret xlat mov add jmp mov adc mov mov push pop ds push imul jo push mov std pop pop test loop outsl inc cmp repnz clc push iret loop insb pusha enter mov cld xchg adc outsl jle stos or xor xor push xor xor cmp or mov icebp or xor (bad) dec shl pop add lods lahf hlt and lret popf and aad icebp mov test jne (bad) jno mov sub scas clc cmpb stos inc mov inc fptan rclb rcrb add and loop les fdivrs push (bad) hlt hlt inc fs in lock jecxz pop addl (bad) dec pop std sub inc lods mov cwtl dec rorl dec jl adc push mov add xchg btc jb xchg pushf lahf (bad) divb mov bound sub xor cmp push sti xor xchg rcll sub shll mov push nop dec mov jecxz cmp mov in (bad) jo add cmpsl jecxz adc lcall loope push sbb add add push pop insl push scas and aam push add (bad) in add and das mov dec sub and mov inc outsl xor sub and mov mov inc (bad) lock stos mov sbb orb pop mov hlt mov pusha scas jne mov or cmp mov adc xchg outsl (bad) or hlt xchg push and xchg mov shrb xchg loop jge dec pusha adc fs leave bound cld popa pop push adc adc popa mov neg add jnp insb es push repnz mov xor sahf test out xor and js and icebp aad notl and lret pop shlb lods xchg mov add pop inc add sbb sbb mov loope pop jg dec cs dec pop dec jno les mov test and pop ss jno les repz pop in cmp movsb loopne test pop (bad) xor popl adc sub cld out in nop js sbb inc mov adc leave pop scas mov mov push cmp sub in jecxz es imul xchg mov les pop shrb xor subb add movb push add pusha sbb pop push push and pop mov xor int3 add fistpll pop sbb push mov test sbb or rorb aam je sub outsl pop xchg shrb mov jmp add adc ljmp push fstl xchg jmp ret and stos lods mov mov xor jmp loopne fbstp (bad) pop lret xor ficom dec mov mov and popa and sub das mov fnstenv and int cs sbb mov push push sub push mov jae pop push adc icebp inc push aad dec rolb add pop fsubrl add lods sti adc loopne or cmpsb xor scas push fdivs push insb cs xor jnp adc int ret and and xor sub pop add pushf mov int cwtl loop lea popa test movsb mov adc xchg lock adcl (bad) adc push xor in push hlt jbe pop dec add push repnz and pop mov test fs xchg int3 and sub pop test clc dec pop add jno das add maskmovq negl dec and jmp add cmp cs push push add stos (bad) stos xor mov outsb push mov or jmp add out std dec int3 or icebp pop push jnp js sbb cmp cmp pusha scas pusha adc mov add testb dec or and inc push fist inc ret insb mov and xchg xchg hlt sub enter pop mov and mov add test or nop or rclb dec lock pop mov shrb dec es movsb xor inc mov clc mov nop jecxz andl mov jno and xchg in loope jo add (bad) enter push inc adc lock ret mov icebp fs mov push nop lods pusha adcl int dec push fcoms fldl ja lods subb decl jp lcall cmp mov test pop gs add jmp shrl jnp mov clc lcall shrb mov fnstcw outsl clc imul js inc jge xchg orb sub dec leave add aaa xchg dec add mov dec or xchg jecxz fld add cmp std test and and in pusha add shl je int hlt jecxz xorl mov cmp std arpl cmp and xchg add sub rorb sbb add shlb inc fsubrs (bad) int in dec stos and nop mov in rorb adc sub cmc jno sbb mov jecxz adc pop pop mov in xor adc (bad) dec js xor inc mov add lods repz lret ss mov mov dec shl xchg add sub int (bad) das scas imul pop inc fs cmpsb mov adc lods scas mov mov shlb cli mov jnp mov popf shlb stc test insl movsb ret pop imul adc and cltd jo rclb mov mov and data16 pop iret repnz jno pop push std leave add dec pop mov pop movb push in shrb les jg daa adc xchg mov and mov adc dec mov or xor data16 adc ljmp xchg adc sub push adc push mov xor roll and hlt (bad) insb sub mov hlt pop pusha push push mov outsb inc push adc dec pushf imul pop adc inc mov push dec scas mov push or das (bad) sbb rclb loope xor pop jne rolb dec add movsb loope inc xchg faddl inc mov scas scas daa fadds mov sub fnstsw cwtl mov push lcall add rolb int3 or xchg jecxz inc (bad) stos or addr16 inc and pop movntps push (bad) or xor loope jo push sti js aam xchg movsb std movsb add adc aad xor pop lock adc cmovns mov inc push push mov hlt test loopne test and pop lret push sbb mov push shrl lods stos dec jno push inc inc xchg into inc loopne cs lret pop mov and popf test pop lock add pop inc and add xor pop push pushw or dec inc adc std hlt xor pop in inc push frstor scas cld insb xchg popf test jbe push pushf xorb push pop fstp cmp and popf mov mov push adc test shrb cmpsb loopne mov and mov push imul mov leave pop jmp insl inc and pusha (bad) xor add data16 jp jbe je das (bad) imul add mov (bad) pop packssdw out in push inc push das mov inc rol xor fdivrp cmp cmpsl add or mov jbe arpl pop add or outsb or mov cwtl lahf adc jno inc ficomp add aas inc sub adc xchg sbb jle or or in adc and xchg jo jb daa pop jne sbb push dec jecxz mov shlb into jo daa mov fmull add aad add aam cmp clc jmp inc call data16 xor adc lock outsl in jno mov sbbb iret pop and sahf xchg pop inc mov pop and add jle or rolb mov add adc jae mov call popa cld jo add pop mov mov pushf ja,pt xor pusha adc aaa les int3 (bad) cmp add pop lret cmpl mov mov sbb jo test lock mov pusha jle pushf (bad) roll xor mov add fldcw jno lret (bad) mov xor nop aam ret aaa das jecxz clc mov in lret imul movsl stos pushl push loopne mov add add jl in sbb out xor in popf mov push xorl xor sbb leave loope mov insb add add outsb lock pop fistl xor scas test js sbb pop mov das xor inc call clc cmp push lahf jmp add xlat ja cltd popf fs mov jo in push adc dec ja add xor push sbb jnp das xchg pop cwtl cmp repz data16 add mov ja subb pushf push xorb dec or in in lock nop pushf push add cmp sbb xchg and dec jl repz add add ds lock or mov out mov pop xchg das sarl aaa lods (bad) fistl roll out int3 jge sbb add pop nop clc mov adc mov mov aam pop addr16 scas icebp cwtl (bad) jg mov inc add mov or adcb cmp mov mov pop mov pop add sub rorl jp pop aam into loopne cmp add scas add test repnz adc insb add fdivp bound into adc aaa insb dec and imul insb jo ss cmp ret jb jo pop mov hlt subl mov mov cmp add pushf dec cmp lea in cmp adc or inc adc inc and sbb add repnz mov outsb push in test or inc in mov cmpsl inc dec sbb sbb cmpsb pushf push adc or cmp fdivrl fdivl push push cmp or push sbb inc push push or and xorl (bad) sbb xor call inc sbb ja sbb push lds or sub xor push lods lahf add xor dec jp cld scas mov sbb loop in clc cld fadds mov inc mov cmp ret mov adc insb cmp mov sahf add aam lods pop fmuls inc sbb rcl (bad) repnz ss mov cmpb addb and push sub mov sarb dec hlt mov xchg into xchg popa movsb dec rorb add popf sbb mov dec adc fcomps mov fmuls aas lods add roll shlb mov fcomps mov aas pusha mov mov lcall pop lds xor dec lahf (bad) jl aad add adc cmp test mov push (bad) pop ss lock or mov xor lock (bad) mov add adc jno (bad) mov cmp xor or imul sub pop loop (bad) or data16 add adc jbe or cli xlat mov mov test adc add sub inc push mov push (bad) fsts and mov push inc (bad) mov movsb cmpl mov xor cmp lods pusha rolb inc pop lds insb pop mov cltd (bad) lock pop inc add sub pushf cmpsb and cld fsubrl push add out cmp cmp pop pop (bad) mov rclb ret dec pop adc repnz cwtl mov pusha cmp cmp std add adc pop test movsb mov mov push push das mov xor adcl push mov push cmp mov mov jo repnz dec mov pop add movsl add sahf popf nop add outsb dec xchg add push mov inc std or or push lds rorb push pop lret pop cmpl inc and mov xor nop push in sti (bad) adc pop js cmp pop mov inc add mov test rcll scas cwtl jno lock cmp pop and inc test or and add out inc ret push mov inc jns adc push test insl pop adc jno aam sbb scas je roll mov and test enter adc loop aaa adc dec daa push das js fs jns in xchg mull icebp in add pop pop jne mov jns sti (bad) mov mov sub aam or mov xchg add das (bad) push jg cmp ror or jl fdiv or mov add xor sbb mov dec jnp orb add les int3 sub leave mov popf lds je sti cmp jg add dec dec test xchg loope loope xchg adc mov cmp add rolb jb add lods push mov mov push pop dec movsb test shl jns inc add or sub imul add sub mov (bad) or xorb xchg mov je or aad pop and outsl mov jbe aam sub sub test xor cmpb das aam add cmc lret add (bad) cli aad outsb pop add push icebp cld xchg adcl lea hlt jecxz icebp data16 fsubl jb orl and enter or jecxz fiaddl rolb or icebp dec cmp loopne shrb add sub add lret mov dec cmp adc mov cld addb cmp pusha mov jo mov pop cmp jecxz mov inc sarl sub test sbb outsl xchg scas test nop push or inc or daa mov loopne rcrl xor mov fdivrs add aam lret or mov and or or dec jo test push in cmp pushf mov jbe nop pop fadd cmp inc or push lock in add jns icebp jne pop jb popa aam and jo push dec loope push test sub lret adc scas mov roll adc mov repnz setl addr16 xchg jp cltd rcl popa adc cmpb pushf jecxz xor je dec cmpsb (bad) sub lret inc mov in or scas (bad) xlat dec add ret movsb loopne sub ror cmp mov nop mov inc xchg mov lret rol or pop mov in jmp or add aad hlt inc sti scas sub sub in pop push gs in fimull push and ja roll xor jo lock movb sub pusha and mov mov inc movsb and jecxz (bad) andl shrl pop sub daa dec pusha sbb add mov sahf sub pop gs std hlt cmp and sub jle ds push lret or sub push loop add (bad) sti pop add adc and mov repnz sub pop packssdw insl hlt inc pusha add in xlat cltd sbb and sub call cmp mov dec in hlt leave dec add je adc not xchg and into (bad) jo add xchg mov pop gs stos xor mov jecxz inc (bad) out add mov imul pop pop push (bad) xor mov pop hlt jmp and mov push xor dec adc dec lea push stos jecxz mov add or xor hlt (bad) scas (bad) (bad) cmp lds call and add sub aas or add sub xchg fnstcw (bad) and dec jbe mov mov cli or loope jno push out aaa rcll xchg adc push cld xchg in push pusha (bad) and andl shrl js mov rcrb fnstenv mov mov cwtl mov pop cld fs and rcrb cmp test mov mov xchg xchg jno xchg lods js mov inc xchg cmpsb jo lods mov cld fistp ficompl add nop xor ljmp push add mov fildl or push fadds cli mov or sbb mov and xor clc xlat sub fadd fwait addl mov std pusha (bad) shl movsb push test add mov shrb in imulb push test pushf and mov dec outsl ljmp or js jmp add and jp jbe repnz inc (bad) xor and loopne add shll (bad) mov sub mov lods imul outsl lret inc push sub rcll pusha movb addr16 call adc push daa dec dec mov (bad) push jnp xchg add and testb dec dec jp stos adc add sbb or sub add bound movsl sarb cmpsl pusha jmp jecxz mov inc jb jp mov je adcl (bad) push mov xchg adc dec sbb sub or rcrl xor inc mov xor adc inc call jge or je out xor mov xchg sbb insb jmp dec lret and push mov les es fcoms or cmp dec popf lock fcoms fcomps and fcoms adc jmp xor fld movsl hlt or xchg sub dec sbb jb and das mov punpckhbw cmp adc sbb pushf xchg popf xor mov sub mov xchg and cmpsb pushf int3 enter adc push xchg sbb xor ja sub inc sub add lret test mov or jecxz add or fist es sub sbb nop or stc or out sahf sub nop or pop adc outsb data16 int3 lock test lea fstpt pop add and ficoml dec mov leave push add stc inc mulb lret cmp rcrb (bad) mov cmp pushf or subb loope add or aas lcall fidiv mov and mov push or add fsubrl dec inc dec cmp sub jecxz push xchg mov mov (bad) (bad) std push cld in push add cmp test jecxz fdivs pop pop repz repz loop add int3 cld sub out push add aaa and rcrb rorb outsl pop or push aam mov cwtl and push xchg jge mov rcll add mov dec mov ja loop cwtl sbb xchg lds mov leave lods or mov jle inc daa push or jae cmpsl data16 div mov add fwait hlt in and mul xchg xchg push and push sbb mov sub mov dec xchg shrb pop test enter add outsb int3 add jecxz add adc mov dec sti add std inc jmp xchg icebp xor push xchg outsl sub loop cld popa adc xchg and xor mov clc cmc sub js out pop inc pop pop mov test lock mov xor and xchg jo jns mov call pop mov in dec loope xchg adc fs cltd pusha lods adc jo dec sbb and test and add mov ror std xor add inc mov scas outsb cmc js mov (bad) aad ljmp es push xchg mov xchg adc pop icebp pop pop popa insl adc stc xor aas xor repz mov add cmovg movb out test xor lds (bad) cld daa pop lock push cmpsb pop int3 inc aam pop rolb lret fsubrl jns xchg (bad) xor push and cmp pushf or scas hlt jno add mov add pop clc in jb cmp dec outsl inc mov inc dec jmp std dec lock fcoms mov data16 xchg push (bad) addr16 mov fs inc enter push in xchg mov lock and push inc hlt or (bad) mov stc sub push jp cs adc add lahf aad jge mov sbb mov shrl jecxz fadds (bad) push fdivrs je sbb rorb and int adc cmp das push adc aas push pushf xchg out dec enter add mov (bad) dec mov mov and dec setge loope pop xchg test icebp or scas lds cld imul das cli jo push jnp and xchg fdivr jno test push add iret adc jbe xor inc pop scas add jl sub bound pop mov jecxz pop data16 mov mov jo dec xchg mov rep mov mov push sub cmp and aam (bad) sbb jecxz mov pop scas cwtl sbb cld add push pop push jge mov shll or add pop mov das mov das push push push movb cltd add sar push push adc scas sub pop mov fdivl adc fnstenv push ficom dec mov add and sub cwtl mov push js mov int3 xor cmpsl or test fcoml xchg (bad) lock xor pop test lahf dec dec jl add lret lock mov add mov mov ljmp das mov cmc pushf cmp adc push in jge loope test je test inc and dec sbb mov jmp add cld xor and popa loopne adc push std mov adc mov lock les and fs pop dec jo jo xchg (bad) stos pop ret loop cmp or push or mov nop stos sub xlat lods dec mov xchg sub enter xchg insb add pop fsubr sub mov xchg lock xchg sbb scas or in call push pop jle or shrb jno cmp and xchg ret sub push popf and xor stos psubsb je or fcoms lock sahf mov adc sub sub fcmovnb mov lret decl ds add cmp rcrl out addl add xchg push pushf push add xchg push and in cld jae and jl (bad) aaa add lods ja fs fiadd int3 mov xor (bad) and fimull xor or fs in adcb outsb (bad) lock lea ds xor cmp push sbb sub faddl xlat sub inc jns mov (bad) jo shrl insl xchg mov loopne fiadd sarl out rcll mov fwait stc push test add mov addl and and (bad) in push or push call dec ljmp movsb es jle jecxz addb cmpl rcrl and scas push sbb insl and jns xchg jecxz adc xchg jecxz pop int3 sub jno or xchg dec cmpsb fmuls mov shl fstpt repz add lods rcr jne sub stos aas or int3 rclb cmp mov (bad) pushf shrl mov jb ret xchg adc int3 xorl insl repz hlt or inc cmp and add fstl test sbb call lcall divb popa adc mov push lods xchg add jns or pop or adc (bad) jl nop xchg push mov add scas adc psadbw inc lock jno subl adc daa stos (bad) dec dec test (bad) jne sbb je daa (bad) fcom clc add scas (bad) xor sbb jne repnz jae dec jp mov dec mov add mov jns clc pusha fcomp scas and push and ss xlat push adc imul fistpll jo andb xchg stc sbb xchg fist xor mov adc es push or mov jmp movsb sub (bad) jne movsl mov mov mov or notb (bad) cmp out xchg sbb minps push ss sub xchg loopne mov scas pop (bad) cmp sbb imul stos jne xchg call jno jo cmpsl sub in mov sub mov push lcall fs test push push stc push adc icebp cs cs cld xor leave pop cmc push dec es add popf je sub and lock ret xchg inc enter ret clc or (bad) sarl arpl sub pop mov inc pushl mov test sub les add xor nop push ffree add and mov pop rol add popf cmp lahf push (bad) jo decl xchg jne inc mov hlt xchg lods mov jecxz or sbb daa loop push and nop push jb jge imul pop mov pop add sub cmp ret enter push adc andl sub clc push xor rclb imull loopne fisubrl fld int3 add adc add test loope movsl xchg inc dec pop push push add sub (bad) out or xchg and jnp jae dec adc sarb push pop sub pop xchg fs jmp or je call dec push dec and mov inc fcomps mov sbb dec lds or call pop ds sub mov mov clc cmpsl imul movsl adc adc insb ror add popf dec lock popf cmp jl test dec (bad) pop (bad) cmp dec aas les mov lock popa sahf adc (bad) loop,pn int3 dec pop iret pop dec movsl cmp roll dec sti pop dec mov push xchg out xchg inc dec adc mov mov sub sbbb das cmpsb ljmp out shlb fsubl push mov pusha out lock jb xor imul sbb xchg lret xor jecxz subl (bad) jecxz sbb imul rolb fdivs add outsl pop pop insb cmp scas sbbl push cltd and mov mov mov add mov xchg cmp loopne jne add enter cld push shll push neg mul daa (bad) xchg aam cmp xor mov jnp repnz mov push xchg stc fsubrs mov (bad) hlt or rorb xor bound leave pop mov push sub add lds and and cld add inc (bad) xor pushf dec sti and hlt xchg sub dec mov jmp inc jne int3 sti jecxz sub cmp dec pusha xchg test xlat pop or test repnz and bound add decb lahf adc mov ds sub add sti mov pop mov lret inc or adc pop jo mov pop push xchg add jbe jecxz orl fcomp jno mov hlt sub ja add scas (bad) or jnp ret mov pop adc and add sbb xchg mov and movsl mov sbb and xchg inc or mov cmp lods test mulb (bad) adc scas loopne mov pop fsub sbb inc jecxz jl loopne dec hlt mov mov mov adc or jae mov sub pusha cmp aam mov (bad) clc repnz dec xchg mov test xorb push mov fsubrs shrb mov pop push xor and jge (bad) and orl inc jge add das add mov xchg stc adc jp daa mov pop int3 xchg fdivs adc rcr rorb insb mov add push xchg hlt in dec lahf cwtl js mov xor or lahf adc mov test dec enter adc mov pop sbb fldcw fldt movsb stos add loopne or cli dec dec xchg sbb xchg pop mov xor scas fstps mov pusha mov in or scas lock xchg adc rolb popa pop mov enter int3 das mov xor pop js (bad) int3 cld jp add inc fcomip mov cwtl push into adc sub in add mov dec rclb xor add mov mov mov shlb inc push jmp call dec adc jecxz mov mov in fnsave rclb and jl cld fdivrl add mov aad add adc cwtl nop adc imulb jl pop mov cmp inc dec sbb lock inc cli push adc push movsb inc cmp or add xchg push mov frstor sarb inc in mov testb imul outsl ror lcall (bad) sarb lock push jp daa xor sub testl jns push adc scas dec stc inc push in enter mov test adc add into and decl cmp push mov jae (bad) outsb call rol decl fisttp jmp add outsl lods stos orb in add sarb add jne (bad) sbb int3 ret sub or movsb pop mov pushaw das jae add mov push xor es subb dec inc ret cmp data16 pop movsl aad cld movsb cmpsb inc mov enter iret sub mov jnp jo mov out sbb cmc (bad) add add sahf jge and sbb dec shlb pop int3 out (bad) pusha mul js add push hlt inc adc incl xor dec dec inc mov aas in loopne dec imul add mov clc adc ficoml or sbb pop mov pop pop dec sbb (bad) mov pusha and sub (bad) jnp test sbb (bad) fadds mov orl mov push call inc aam rorb cmp mov inc int3 add sbb daa shll (bad) xor int jno pusha lock pop mov shlb cwtl push sub test inc fwait adc pop mov mov xchg test sbb inc daa and cmp ficomp adc sub fcomip sti mov cmpsl add lea out f2xm1 andb lret push mov xchg in (bad) (bad) push je push or fistp int3 sub fist shlb mov xchg mov sbb and bound je addb mov rcl push or iret push cld (bad) mov pop hlt in mov pop fidivr bound (bad) or or fstpl dec sbbb loopne hlt dec pop jle push or (bad) (bad) sub xlat rolb jne pop loop loopne add outsl movsl lods cmpsl pop jl sbb lret sti add sarb add popa mov dec jecxz pop cld xchg dec lret decb add inc mov add dec fnop dec repnz (bad) test mov mov dec mov hlt out sub cwtl cmp lahf lds je mov imul leave movsb test xor sbb lret and add push inc push or sbb gs or mov repz fnop fsubl push or test or stos pop and pushf ret push cmp jbe push loop pop xchg test bswap dec cmc loope cmp iret (bad) jmp pop jmp jl mov lcall add (bad) add add jge mov add int3 mov jg jmp enter xchg pop pop cwtl shr (bad) dec (bad) out xor push mov cmp push pusha outsl push jae popa xor add pop sti into popa aas push mov mov add outsl not jmp xchg scas test mov lock pop sti mov cltd sbb pop out pop jg jge iret push push and mov cmp rcrl (bad) (bad) mov arpl cmc pop rep and stc fmuls xchg idivb lods test repz sub cs cli das nopl mov adc xor pop push and inc repnz cmp fsts add outsl jnp sub jne mov sbb movb addr16 jp repnz or out add mov push sub push dec (bad) or xchg push mov (bad) pop inc sub add sbb adc xchg int3 sub sbb out int jp loope pusha mov inc jno dec rcl pop das neg fisubr das push jno push jg add push pop (bad) scas test push ret jg mov sub sbb pop jmp ja push iret aad cmp ss lods cmp add aaa jmp push (bad) mov ds push mov jg cmc push enter pusha inc rorl ret pop push mov adc adc aad adc rorb jmp std (bad) or inc sbb popa ret daa test add and or stos imul mov adc and adc pop pop mov push rcr jmpw das test inc push or xlat mov into fs push jmp aaa ljmp sbb (bad) fistpl pop adc pop or push jge aad addl cli or and lods jmp lahf push sub flds jmp lds xchg ficom mov ljmp pusha mov das pop dec or sub dec cwtl fwait lret sub sbb mov ljmp cmp push push jmp in mov pop adc sub cmp decb mov (bad) roll pop jge imul xor xchg inc add lea inc sbb mov bound lcall sbb fisubrl add dec fstpt push push repnz dec addr16 mov iret mov push lods and cmp push je push gs int3 test xchg pop inc enter push xor out jle mov sbb jo push add decl ds ret add lea or add push pop push pop jne pop pop nop lds pop fiaddl lahf add xchg mov xor clc pop sbb sbb (bad) push dec xchg xor or push popa jl xor sub idivl rsm and popf nop sub scas cltd hlt jge adc mov xchg sti pop push pop add in push jne xchg sub inc sub andl cmpsl adc inc jmp aad jnp or pop push inc mov cs aad xor (bad) (bad) mov lret cmpsl mov add inc (bad) (bad) jle ljmp iret stc jmp push pushf xorl xchg divb lds loop std (bad) xor push call roll and jp add ss add or mov lcall notl (bad) hlt xlat dec inc dec gs sbb xchg add pop cmc js dec stos ljmp out xchg xchg sbb xor outsl das stc xor dec out adcl aaa pop and in jle clc and or or push out fcoml add fdivrs add cltd mov icebp push pop ja cmpsb in sub fisubr enter sbb roll test push popf pop bound add push cld add add pop sub rorb js aas jecxz fdivs xchg push and out divl xor mov sub cli jno test lahf jle jp (bad) pop std mov add mov push icebp xlat subb call add jg jmp lret sti jo pop sub fnstenv notl loop inc fsubl push add ds out jb xor cmp xchg mov or stc incb mov les cltd mov out xchg test loope xchg mov adc cli pop mov mov out jo jle icebp add jmp or pop sbb cli pop faddp stc jnp mov xchg dec rcll lret pop xor jmp imul or aaa pop add inc cltd stos adc sub adc adc ret pop push pop mov ret pop pop enter and mov dec not push sbbb stc jge push push and andl xlat popf add outsb pushf mov fadds dec xor and roll and mov (bad) iret pop add jmp inc or push out int sub addr16 nop dec mov (bad) out jne mov fisubr pushf test xchg jge aas sub outsb pop push xchg and fwait lds sbb out jge adc xchg dec pop sti xor cmp repz push add flds lock nop mov sarl dec (bad) xor or xor or ljmp lea sbb cli sbb out adc arpl cli stc dec fnsave pusha sub pop mul xchg pop adc add inc mov pop inc jmp and fistpll jmp (bad) pusha std adc push add ret pop push iret cmp and sub inc and stos test dec and adc cwtl push lret nop xlat mov js jecxz mov or stc fisttpl addb pop jmp adc test or sti xchg jle cmpsb idivb inc scas nop mov cli iret push sbb pushl jo or int3 xor cmc mov pushf int3 xchg and push fiadd add idivb stos fmul (bad) cli xor push stos sahf push inc mov mov decb jbe stc call cmc imul subl adc adc (bad) mov xor ret stos and iret mov jge push sbb rcl mov mov jb sahf fstpl fldenv mov inc ljmp or cmc cli int cmp movsb pusha xor lahf jl pop jo adc (bad) dec add repnz inc cwtl sti daa out push dec jmp lret rolb sarl push cmp aas jno pop pop pop (bad) xor scas cmpsb cmp int3 or or incl ret imul popf jbe mov out mov vcvtps2dq in cmp inc xchg mov jns inc pop add push jnp cmp dec js xor mov fisubrl push jge gs sub xor out and push jge adc stc push push jns mov int add loope in xor push fs add lock mov testb sub xchg xorl stos repz xlat out and (bad) fwait mov adc sub mov mov push adc mov leave push (bad) mov gs adc mov mov cld pop pop add jns mov out lcall out movsl and sub not mull dec rcrb pop inc (bad) dec movsb test loop lods movsl add ljmp jg int3 in inc push cs dec pop movsl stc mov mov pop or mov sub cmp bound mov frstor jg dec add ljmp add jbe inc cmp out sbb neg or insl ret mov push pop jnp xor in jne popf rorb bound out arpl adc push mov stos push xor push sbb push adc push jo repnz dec insl cli sbb xchg ror sbb and mov pusha mov (bad) mov scas ljmp jmp add add xor inc and mov sub push outsl adc fcomps mov test add adc outsl sbb jno scas (bad) loope xchg test adc ja xor insb add push cmp cmp push add js xor mov stc ffreep ret jp add mov lods inc daa mov add cltd sub gs roll xchg mov test mov xorb or mov jmp sbb out xchg in inc dec pop mov or and push loopne aad loop into add mov loopne jae add jg add mov leave mov gs mov cltd bound jae ret iret ret mov ja loope (bad) mov cmp popf (bad) push into jb (bad) outsb test add sub pusha mov (bad) inc jo popf mov mov add inc out orl or jo xchg push add pop int3 sub popf test jno sub (bad) xor mov adc mov loope,pt and add sbb imul into test clc addl add sbb adc push or scas test ds insb adc mov dec mov add out jae sbb jmp mov test popa insb imul fcoml cld scas xchg popf mov inc loop add movsl test and gs call mov frstor shl jg add mov clc add repnz imul xchg mov dec cmp pmuludq mov clc xchg sbb and scas add sahf pushf int3 (bad) je adc add shlb nop (bad) dec clc dec movsb pushf push fs jp pop pop pusha test jg setno jo mov dec xchg daa in gs fisttp outsb jp add inc xchg nop in push aad imul mov shll xchg jmp add int3 mov into out lret arpl enter adc ljmp aam es shlb add scas popf ret out push add cmp fnstsw cltd xchg sub iret stos cltd and dec push and in aas push xlat or es loop les movsl stos inc dec push lcall inc jno dec aam push rolb cli fsubl int3 out add dec mov add sub lods add fwait ljmp test inc cmp mov or mov sbbb cld dec or ds xor jbe lcall cmp je add lods fcmovnbe ret push cld xorb mov add push add sub add pop in insb inc add inc in out mov arpl lea test mov jecxz mov scas xor (bad) adc mov adc mov aas jmp adc movsl adc data16 test and pop pop fldenv bound mov and test cmpsb add adc fildll jmp sub loop mov adc add sbbl sbb push rorl add jecxz in adc add sub push xlat mov xchg add cltd jl je add es aad push std mov jl rolb sub sub movsl and daa and (bad) lret fsubs mov inc call or (bad) in js mov cwtl mov movsb cld dec jge dec lods and rolb pop pusha lret mov or loope aam fiadd int push sub pop xor clc add mov dec les jp mov sbb aaa movl pop inc push les rol and call movsb fucom mov add into cld insb movsl or and mov fwait call std jb jo jecxz aas mov popa add andl jmp jae cmpsl inc and push push rcrb and add leave or and ljmp mov and rclb lods adc adc (bad) rolb das lret mov cmp aaa add ds pop int xchg rcrl jl loopne inc subb and sbb popf lods les or scas push mov int3 cmp popf fs outsb jb mov fsubrs push and push xor sub insb mov clc mov (bad) xchg mov add add add cmp mov loope mov js xor jne nop cmpb push jae je scas xor fcompl xchg dec or sbb and test cmpsb add mov jo add sub enter inc jnp sbb mov sbb add cmp test xor jle out sbb push test add xlat dec mov xchg sub jo aam jo add inc lods hlt in xchg sbb adc bound aam lock mov inc dec inc dec jmp imul add add loope lock mov xor mov adc inc cmovae insb pop sbb adc dec sub imul sbb out push int3 add in push test cmp add leave xchg out xchg jecxz insb push test and sarb xor dec insl leave adc sub lcall cmp in lods test fcoms ljmp sbb xchg mov push (bad) hlt idivl (bad) mov aam inc or dec pusha push icebp aas push sub pshufw pop ljmp inc shlb in dec and ficompl in scas cmp inc mov dec jl push jns das js rolb mov push mov inc add xchg (bad) data16 gs xchg call daa mov out aam and outsb aas push mov add or sbbb into jb sbb pop mov addl jl push test rcr adc push ja data16 cli sub mov roll jb mov rorb mov pop xchg inc push and sbb mov ss in push lds mov push mov (bad) cmp test pusha (bad) je dec jg inc hlt jne ljmp ror xor mov and add or fisubl inc push and mov mov sub call or hlt xchg faddl arpl xor add scas movsl mov and insl mov addr16 pusha push (bad) dec inc mov pop ljmp mov cmp rcll cli inc inc xor add nop xchg les or dec pop ds sub inc adc xchg jno sub bound xchg (bad) push xor rorb call sub pop int3 loopne xchg cmp pushf add aad jno test js cmp mov pop pop dec pop xchg inc stos lds enter js nop sub jecxz cmp add sub daa roll and popa fsub cmp push in and adc cs xchg sbb jmp push (bad) ja aad das int stc cmp pop sar dec and sub add mov cmpsb test and adc inc shr add lahf add xor and insl and imul dec ret inc cltd inc xchg popf xchg out mov mov sub movsb inc leave mov loopne lea fiaddl inc cmp rorl and add incl ja push add pop xchg aam in sbb add jmp sub or xor and or add (bad) mov jb (bad) call popa nop hlt add clc lea fmul jl sbb lods stos mov cmp dec sbb pop ror movsl inc stc jbe inc stos mov xor sub and add add es ja imull sub push xlat jbe xchg sub nop add movsl mov push sbb add mov fldcw xor stos (bad) xor sbb add mov test (bad) jo js push daa add xchg insb dec rolb add clc and test adc pop xabort adc sbb ljmp jecxz jecxz jne push test add ljmp xlat mov movb pusha cmpl dec jne pusha aad adc imul jmp cmp loop xlat std xor mov inc ss push rcrl lock mov add rorl cmp push lret mov test mov or push js ja loopne mov mov push roll fcmovu dec jbe das loopne mov jnp imul (bad) adc in cld add enter fucomip fdivl xor mov jbe in mov cmpsb sarl mov insb call (bad) ret sbb jo dec into pop test pop aam xchg mov adc ret sbb cmp fisttp int call data16 jno aam jno fcmove nop fisubrl inc pushf es add inc xchg push xor xchg test cld adc je or pop roll cmp mov dec (bad) repz mov daa repz push call adc fistp sbb push adc mov pop (bad) add jmp mov cmp push dec add out std and arpl in add call int ret outsl add out dec xchg xchg xor push stos pop mov outsb test sahf push adc and dec fdiv and jp rolb pop push sub xchg dec ror sbb or pushf in andl jnp mov fidiv jns cmp ror test call je inc in fsubr jns sub mov cmp xor (bad) shrb and ret adc lock jns sub (bad) push sbb adc pusha aas fisttpll (bad) outsl inc lds movl jmp loopne add mov inc lret inc cmp add mov icebp enter inc mov pusha add add movsl push int3 andl ds sbb pop sbb cmp les movsb jp outsl sub xchg rcll pop gs (bad) cld mov or dec and aas inc leave xchg push imul xchg sub add into cmp mov jno pop inc adc adc dec cmpb push cmpsl dec cwtl loopne movsl jbe cltd sub sub pop push fadds mov out and pop enter xchg call add dec jl mov or sbb add xor add movl pop inc add mov (bad) mov add cmp test es xor and jne xor dec dec pop loopne jle sbb in iret je cs int3 mov nop movsb push inc sbb pop dec fwait push inc or or or xor and xor pop or fildll push jl jl je cmp test push adcl inc xor imul pusha cwtl sti outsb cmpsb sbb adc cmp mov iret mov jnp test add xor inc jnp outsl das mov leave adc cmp sbb dec adc call or nop out mov insl lock mov add faddl test sarb mov mov jns mov lock mov push (bad) hlt jecxz jo pop movsl sarb fdivl hlt mov and (bad) and and xchg xlat iret mov or lea or and loope sbb insb iret dec sar inc add imul cmp cmc iret jmp decl xor adc inc in adc and xor pop mov in daa dec clc loopne movsl fisttpl (bad) repnz add cmp lds adc test pop cmp xchg pop sti dec jno ds or hlt adc es add repz or jno iret push scas jb pushf push sahf add mov movsb mov and dec mov add mov outsl mov js popf clc rolb mov add and or push inc mov push scas clc jle xchg (bad) inc fsubs sarl (bad) mov clc and into in dec pop and je pusha push scas sub shll test sbb mov call out and (bad) push mov iret imul mov mov enter lret enter and in xor icebp insb xor add mov ja sbb jg ret fsubrl stos setns xchg dec fnstenv (bad) lcall mov push movsb fsubs pop add sub pop pop mov jbe fadds mov sbb loopne cmpb xor inc cltd pop push lea mov xchg js out cmp push call add bound push lret xor rcrb xor mov push test adc add pop (bad) insb jae inc hlt or or mov (bad) leave inc cwtl fcoml loop and repz (bad) push sub outsb and movb dec sti xchg and mov (bad) cmp mov inc mov imul loopne mov adc push data16 iret sub add (bad) loope mov and adcl into (bad) insb and push or mov nop or fmuls mov jl push mov sbb pop sub rolb add add dec or xchg adc sbb cmp rolb and mov xchg les xchg jae es sub clc sbbl vmovaps js cmp sbb sub pushf mov mov or mov cs clc xchg xor xlat mov dec sbb or push pop loope gs mov insb cmp adcb add in fild pop jo popa lahf mov (bad) test data16 pop add mov test cli and inc or adc aam add dec xchg xlat cld leave mov (bad) fimull insb ret sbb cltd mov mov jg mov add adc sbb add jmp dec int jns mov pusha loopne lret and jle xchg add sub or loopne push sbb mov mov test cwtl adc xchg or js xor lock mov pop and sbb daa sub lock sbb or mov lcall add mov sub cmp sub out out push push orl insb gs frstor (bad) cwtl add jmp movsb ret clc add outsl jne push mov mov and and std enter cltd pusha sbb mov test push es and push stos or adc fs jbe andb or mov pop fs push and dec dec jl sub sbb pop add popf mov (bad) mov mov inc mov lcall arpl jle sbb adc sub lods cwtl sbb sub or wrmsr inc les push xchg sbb das cwtl mov and add gs rorl push mov xchg lds cwtl push stc sbb sbb mov push mov call in es andb lret mov sub fsubrl (bad) mov gs movsl xor inc mov jno (bad) and (bad) lret sbb mov push sub inc fcomps sqrtps cli roll inc mov adc pushl dec adc imul test jle ret dec inc fdivrs cs add into lea andl sub scas mov inc rclb xlat (bad) psubd cmp fisttpll js sbb sub sbb jo clc cmc adc (bad) negl insb clc mov sub xorb push and pop add lock or xor mov push fild add lahf in and ljmp andb in not out or sub and ja add sub sub add sbb mov cmp cmp mov rolb outsl cwtl movb mov pusha adc insl push mov clc pop xchg aam adc mov cmpl xor push icebp sbb in xchg dec aam in adc push adcl cmp ror cmp mov xorb and insb xor mov aad xchg in mov inc incl cmpb iret popa int sub dec pcmpgtb jge adc mov and inc insb sub fs lds pop lds adc xchg push xor clc pusha sbb fistpl xchg add (bad) jmp fxch clc lods or xorl aas add or sbb addps fldl or fisubr and mov dec mov inc inc popa dec cmp insl mov mov xchg add fs stos shrb bound fild icebp fmull pop mov je cmp add xchg lahf sub cltd gs clc lea subb rorl pop inc je mov inc sub fdivs fnstsw negl cwtl mov dec add mov movsb or add mov mov ja sbb movsb dec addb lock movq rcrb nop or mov xor cmp movsb add addr16 mov lds push push jle xor fs test mov lods cmp test aad jno lods lea mov negl test sub pop aaa mov mov rorb xor (bad) lock xchg imul negb arpl jmp dec gs and or jo lods add stc xor xor je mov ds pop dec outsb pop xchg pusha mov push sub push xchg movsl xor (bad) jo lcall in cld jle dec mov cmpsb (bad) mov add xchg rcl sbb push mov push cmp and lods out push and mov leave (bad) adc push mov pusha sbb ficoml std or pushf dec pop ret add pop negl cmp addb jb roll add nop xor fiaddl subl pusha jle adc xlat and mov mov sub test mov inc or cli sub clc or imul shr (bad) outsl out push fistp loope adc bnd xchg (bad) add push pop jecxz stos dec cmp add xchg call inc pusha or jb add aam hlt inc fsubrs jne lds movsb add jecxz inc in leave shlb push xor adc jno adc (bad) xor movsl lods sub sbb test or sub add stos dec aam aad inc pop pusha xorb pop xor and test or and xor and (bad) cmp out hlt test hlt add (bad) mov popl dec pop dec and add xor mov ja sti ja inc test add mov hlt mov and addb call xor push dec xor and lds ss mov sahf popa adc and adc jno iret shlb fistpll mov mov cmp loopne dec jo mov jmp add pushf cld add nop enter (bad) lods adc ja fnsave lret aam pop adc pop stos or hlt dec sahf sarl (bad) dec dec shlb into push mov xlat mov nop inc and push dec clc roll xor orl je xchg cwtl jbe mov sbb lret lock jb xchg scas mov push mov add mov ret fsub mov pop jg adc or push dec inc push cltd adcl in mov sbb add lock sub pop fnsave mov dec mov jp dec dec (bad) adc mov xchg mov jl pop pop and fldcw hlt add mov scas fist mov fucom jns les fiaddl (bad) aam out in dec inc and cmp insb and mov inc gs loop pop clc xchg or test inc in fmuls jno cmpsl mov orb or sbb mov xchg mov mov or add mov xchg mov mov orb mov push (bad) adc lahf or xor jp cmp ret mov jno cmpb mov or xor dec xchg out stos lahf loope fist in adcb xchg pop popa aad repz xchg push or or insb rol in sbb scas sub orl out mov movsb sbb flds cmp xchg mov sahf inc mov mov sbb fs cmp pop call jae dec add cwtl es iret xchg cmpsb or pop or inc data16 mulb add cmp or imul cltd xchg push pusha mov mov sub movsl int3 xorl nop pop dec mov adc fnstenv arpl xor pop pop sbb mov clc addr16 jmp (bad) and dec jg,pn inc test aam movsb lods sbb adc lds repnz inc sbb pusha decl das inc mov out or dec xor add xor nop imul push inc mov push adc cltd fst orb fistpll hlt add inc clc dec out pop icebp mov arpl mov lods lcall adc add add and das lds mov enter jecxz push lcall cmpsl adc subb xor sbb sub mov call and cmpl movb lock nop js jmp cwtl pusha adc and popa xchg add mov pop push jno adc icebp inc pop push leave mov cmp lret add addr16 or arpl (bad) dec js xor mov sub pusha xchg push fwait sbb add jecxz add push and js repnz ds cs add scas adc lods sub cwtl mov pusha inc dec inc popf adc repnz mov add add (bad) fcoml repnz cmp lods xchg add js cs pop cld nop pop add cmp push cmp push xchg ss dec sti mov sbb cmp cmp cmp lods add sbb mov push add dec pusha pop subl loop jl insb and inc cmpsb ret or or and jecxz pop dec or push mov clc mov jno lahf jno ljmp mov adc mov add hlt bound loope dec push cpuid sub repz and rcr std dec jbe jns scas pop xchg lret test rcr sub mov cmp adc jecxz add sub pusha mov lret mov jl (bad) mov add adc jg add in and adcb jno cmp pop fistp dec stos imul ret dec aad int push fdivs pusha xor dec jne pop add and dec sub enter out mov inc imul xchg push xchg sahf repz add mov imul (bad) add andl sbbb shr sub ret xor fidivl xchg mov push dec data16 insl sbb test je imul xchg push movsl mov ja sub sub cwtl jmp lret cwtl inc inc call and out scas and push lds addr16 fadds pop sbb sbb clc pop inc les xchg xor pusha loopne insb add and lds out subl inc adc mov cmp (bad) nop add rolb test mov mov sub (bad) imul add add adc sub or pushf add movsb icebp addr16 mov mov nop jns inc push pop test shlb popa leave add jae push (bad) mov dec push out pop mov mov add fcomps mov ret push (bad) nop mov cmp sub or inc fcomp sahf pop push mov insb jge fild mov jns sub mov inc movsl popf clc jno jl jmp pop inc sub xor pop push cmc sbb add xchg inc pushf inc fisttpl jnp (bad) xor enter ffree jmp repz in push jns xor popf inc sti mov movsb mov xchg cmp insb cmpsb add cli lods push jg xor or jecxz xor pop or push or push sbb pusha test enter daa inc sbb pop clc inc lcall dec sbb ljmp xor lcall (bad) jo in mov jne,pn inc aad push inc and mov lret popl xor push inc or lds xor mov and xor in pop cmpsl push (bad) xor ja jbe jae div js add mov xchg push loopne lret cwtl in rcrb in inc pop (bad) adc mov sbb sbb pop inc fs inc shll shrl cmc sarl shrb mov add push lods mov fs loope mov pop cmp or add sub pusha lods pusha pop cmp add add mov adc movsb lods add fsubrl ja fsqrt pop (bad) rorl add xor mov adc jo mov xchg jne clc jecxz add push movsb lock add cmpl push jle rorl adc adc ret mov sarb dec stc push xor mov and cmp dec and clc (bad) cmp cmp pop xor lcall pop and mov or pop add ljmp xor mov (bad) stc lret hlt sar lea and shlb sub xor sub push gs sahf pop in (bad) mov mov pop dec dec sbbb loopne adc movsb sbb gs in adc sbb jno test cld dec mov pusha aam cmp mov mov test sub out movsl and and mov orb fucomip scas pop mov mov mov add xor add mov dec adc xchg repnz cmp ljmp arpl adc divb add mov lcall mov or add cmpsl jle sbb sub adc and iret into mov cwtl rol (bad) add add (bad) mov add mov inc cltd mov add daa rclb (bad) dec repnz and js adc push sbb xchg (bad) sub push adc addr16 cmp in mov sbb mov subb leave loope and pop (bad) push popa cwtl and adc and hlt (bad) shll cmp jne cmp xchg mov mov cld or add iret es xor mov inc enter mov std rclb (bad) inc xor je adc and and add pop jecxz shrl dec push outsl xor adc push call dec lret dec insb and add jecxz dec xchg adc pop pushf add mov dec pusha pusha push inc loope lcall ja push les push cmp sub daa repnz testb inc int3 and (bad) add mov xor jecxz sub inc add icebp add fs cltd stos sub rolb push sub sub pop lcall rcll out dec inc in jne pusha push mov fsubs or js add pop frstor enter fcmovne or push mov (bad) aad dec in std adc push mov xchg jo hlt sbb gs mov arpl dec ret sub xchg mov pop lods add jecxz scas mov arpl aaa sub mov sbb int3 jne add in xchg enter jns out cmp mov xchg dec add mov das sbb jnp enter mov push cmpsb cli xchg pop idivl jnp xor mov xchg mov push add hlt adc (bad) repz loopne fcomps push mov (bad) pushf sbbb pop push insl pop insb ret test cmp add mov insb dec enter mov add inc (bad) int lds jbe push push jl je lock sbb and fcmove mulb das sub inc push xchg cwtl fild aad fwait hlt data16 in add repnz xlat mov nop mov rorb add and enter test movsb and inc and jmp mov inc notb fcmovb add ret sub mov lock mov mov and adc cltd loopne imul mov sbb mov movsb xchg shll ss or jl add xor sbb xor adc cmp lahf xchg adc das daa push loope lea movsb xchg ljmp loop mov mov sbb inc loope insl mov (bad) push data16 loope jl pop lret inc lock roll orb cld jbe es sbb mov enter adc add loop mov or xlat mov out push fdivp mov scas rcl dec jb xor cld jle clc push add clc out xchg adc sub aas les cwtl push sub jg push fs adc sarb mov adc xor sbb das mov pop sahf lods and add xor pop mov rcll mov in xchg movsb icebp jl ja shr adc dec fsubrl mov aaa xchg push mov lret cltd call push sbb cli popf mov mov pop push push aad daa ja icebp jl add xor stos les lcall inc mov loopne clc fsubrl mov repnz xchg (bad) xor cltd adc mov push jno xorb add fdivrs add sbb xchg scas rolb pop aam popf or inc mov cmc scas xlat test adc adc ds cmc mov in iret adc sub shr sub insl std sub leave adc push and pusha xor xorb pop aam push dec pop mov and mov push (bad) mov scas (bad) xor xchg add popf mov push push sbb insl add in mov ror or addl xor add insl push or pop stos sarl xchg add dec ss inc add sbb or cmp shr std cmpb pusha into in add stc or mov fsubrs inc and sbb mov lds (bad) repnz mov (bad) daa lods xchg cmp mov mov or pop jle and outsb sub add pusha sbb in jecxz les or popa mov loopne in les push add cwtl and test repz enter dec push cltd xchg xchg push das mov bound lret hlt and xchg inc xchg inc add sarl subb mov or xchg repnz in jnp xchg lock pop scas scas add jbe das aad nop dec sarb hlt pop xorb pop xchg nop imul aam dec pop insb sbb shlb out pop and hlt sbb rolb arpl cmpsb int jmp sbb xchg sub repz and aas add push mov sbb adc pusha js jecxz insb popf push mov inc stos add repz pop mov push jne xchg cmc andb mov mov (bad) mov pop lds push outsl add cmc in mov sub cwtl mov call mov hlt popf test or hlt inc jmp push xor pop pop jg inc cmp and int3 (bad) es sbb push ret cmp sbb in and cwtl jl (bad) nop test int pop cwtd push or xchg pop jp cli jne into test pusha dec xchg in (bad) stc sbb cmp mov je fwait mov test out fwait jne dec je inc pop cmp dec jbe mov add in push sbbl loop test mov dec js push outsl mov adc out add cmp sbb lds data16 mov cwtl xchg enter pop das insb aaa ljmp and cmp (bad) sti add lret js mov mov inc xchg push js mov aas fs cwtl addr16 into pop movsl sbbl jecxz ret add cmp xchg bound lock enter xchg test xchg xchg in adc jmp sbb pop repz aaa test pop dec push (bad) mov adc add stos pop lock or xchg lcall testb cltd mov loopne dec push jo dec cmc loop int3 jne adc adc inc or insl pusha sbb cli nop mov iret (bad) icebp fiaddl dec imul cmc dec lret push xor pop lret jo movd jmp scas sbbb xor mov mov cmp mov cmpsl insl mov mov sahf ret negb mov fisttp pop mov xor add fstl adc outsb pop pop movsbl mov inc in mov mov insl xchg adc nop das mov fs in mov pop test xchg add cs xchg sub and popf mov (bad) pop pop frstpm(287 inc xlat enter mov enter mov push div push cs xchg mov in mov add inc test xchg pinsrw (bad) add movsl ss cmp js (bad) adc and bound cwtl lods (bad) cmp je push push mov mov outsl mov add or xchg add jg loop mov test lock or iret dec adc xor pusha out test pop (bad) enter dec popf mov aas in test and add push in mov push dec subb add in jo cmpsb sub mov add jl fildl insb das fwait sub and (bad) (bad) loopne adc mov push cltd out cs and test dec ret faddl dec and mov loop inc stos les cli mov mov out in inc pusha jg pop sbb addr16 cmp dec shrd (bad) lock sbb push adc clc sub call and xor xor leave xchg dec les add pop enter test adc aam ffree test aaa pop xchg stos or nop mov xchg ret pop jnp faddl dec shrl sub xor ret xor mov sbb movsl fdiv leave data16 or out stc or xor fbld inc add dec jb fnstsw clc mov mov jmp inc stos push mov pop add out js cmp call (bad) lock fwait (bad) jno xchg and movsb and (bad) (bad) fsubs xor insl mov sbb sub cwtl xor adc xor in add jge ds dec pop and mull clc imul inc (bad) jns cmp add cwtl shll fldenv loop mov mov dec aam sbb mov cmp jo movb cmp jo cltd pop push or inc cmp dec jecxz and and pop repz and push sub cmpsl push in xchg andl pop sub mov (bad) fnstenv js stc add in int3 add adc cwtl clc cmpsl js cmpl mov scas aaa mov push (bad) sub addr16 (bad) addr16 loopne (bad) js push mov or jns rclb rcll inc ljmp test rol and cs in hlt sub xor imul or fistl jge (bad) fbld xchg or popf mov leave push and lods leave into outsl sbb and mov pop sub (bad) movsl push and rorb clc sbb mov test mov popf mov roll pop mov fsubr lods (bad) xchg call cld sub mov xor bound add in es pop or dec stos mov inc or lock push pushf loopne (bad) jo cmpsl or inc clc mov les jge sbb mov int adc push dec cmp dec inc ja dec js xchg dec sahf or mov add sub push loope int sub js nop adc cwtl push pop inc lock popa dec jmp mov push fisub adc ds lret or daa push pop mov adc and in clc (bad) mov adc adc imul lods dec lret enter mov pop xchg or (bad) lods inc mov test push cmp movsb lahf cmp xor loopne pop outsl popa pop dec jb push sbb xchg ret or mov sbb loopne mov cmp psraw lcall pop dec mov push xor inc fwait xchg add imul les cmp push jne pop xor xor gs add cmp jb scas dec (bad) shrb xor setp fidiv jecxz dec inc mov or cmpsb dec xchg and sbb lea jp imul aad cli testb or add insb pusha lret cltd jae cmp add lret sub andb roll xor movl fcomps or dec push test orl insl add (bad) mov ja adc sbb mov jmp dec loope andl xchg cmp or mov das call clc mov inc add jne cwtl or xchg popf add dec call add movsbl out sbb and inc insb imul dec fstl and fwait scas adc xchg mov out sub mov cs dec fs lods lock add or loope cmp aaa adcl mov sub inc call push lcall add sti jno cmp fisttpll psubusb xlat or cmp repz mov push jns lods push fsubs dec mov sub addb fdivrs pop or sbb rolb push mov les and sbb pop mov lods ret adc lods mov push push mov add fisubrl fmul pushf xchg or in mov inc sbb push push rcrb or adc int3 inc adc and test inc or repnz xchg pop outsb jo push sub into jp sub in jno pop mov and xchg pop jp js or push (bad) call push xchg or pushf adc lret mul pusha mov incb cmp and dec ror mov ret inc adc sub and push adc mov lods add and jg gs xchg inc js loop test fidivr in jl pop in cs sub and pop dec and rcrb dec lock mov es pop call rorb cmp test or xor xor les (bad) aam dec lods subl mov xchg dec cmp ds cmp dec shrb xor rcrb loope push add dec aam orb lea pushf cmp and das pop add mov add push add add or lock test jnp add xor rcll pop cmp and lret faddl pusha and push or sub lds adc pusha or inc adc push push cwtl cmp push and ljmp mov (bad) aad xchg xor nop call add pop movsl cld orl jp push int cmp or or (bad) lret mov add pop clc aad dec sub mov out add lea (bad) mov jl mov pop mov loop leave pop sub movsb xor mov mov icebp xchg xor adc add lahf cmpsb sahf mov movsl out dec stos sbb sub pop cs addr16 xor adc mov add test out in pop adc nop neg roll fisub js xchg mov test out (bad) out iret fcomps nop add push daa nop nop xchg (bad) or push (bad) cmpsb and pop mov sbb daa ja or xor mov orb stc dec sbb ljmp mov sbb js scas xchg or and shr push dec mov popf mov inc pushw addr16 rcr add scas ds jnp stos jp sub adc xchg mov add insb push and mov adc push scas in sub or adc add rcrl in mov add sbb in xor test mov sahf rcl push lock push pop arpl sbb aam arpl insb nop outsb into loopne dec xchg fcoms push add adc stos xorl fadds or cmp out ljmp pop dec cmp aam pop sbb lret inc insb dec (bad) cmp std cmp push adc jmp gs div pusha test aaa sub lahf mov repz rsqrtps pop in clc aam add aas mov pop and es leave iret add aad imul mov dec adc mov cwtl rolb das repz mov and imul dec lods inc mov leave jne icebp xor insb movhps cmp js shlb scas int sarb mov shlb add jecxz push fnstsw in fwait mov jbe loop (bad) les aam mov mov fs mov mov call inc (bad) xchg push push xor sub adc push mov cmp push push push fs push adc cmp hlt lds cpuid (bad) xor add popa sbb mov nop jno pop ss bound mov xchg out or xor xor lock pop mov cmp int3 notb push popa jmp and sub (bad) nop imul fildll ret mov sub xchg in xor or lds orl xchg add mov dec outsb testb jnp jns popa imul xor jmp mov adc xchg cmp xor or scas daa mov dec adc mov sub add fwait ljmp jb pusha push mov mov clc sub mov mov sti das rorb dec push stc imul xchg sahf xor je lods leave fisubrl sub xor popa out mov (bad) sub test xchg ds stos mov dec inc aam xor and or (bad) jmp inc jmp pop inc test mov cmp and cmp sahf mov rclb mov mov arpl call fbstp fs cmpsl pop cs lret lret fstps xchg sbb or xor inc dec lahf shrb or add movsb repz (bad) popf lods mov test dec mov sbb js sbb scas add popf push lret daa sub cmp cli or arpl pop lcall xor test nop aam sbbl mov lds movsl mov sub push mov clc mov dec ja jo add adc andb sub add push jbe pop mov pusha aaa xor shlb pusha ret or jo lds mov lods cwtl (bad) mov dec dec and inc xlat inc mov mov shll sub lahf clc icebp pop mov rclb mov xor rolb adc sub in jecxz imul call fnsave jno int imul push add loope pop repz xor fsubs loopne cmp mov add dec movsbl arpl (bad) adc add pop rol jb mov iret xchg xor fsubs hlt adc jae out pop mov push daa dec aam js les mov push push int3 (bad) mov push popf int3 sub pop sbb sarb (bad) xor xor jmp mov pusha add stos adc cltd adc inc (bad) (bad) movsl popf mov lds cwtl cmp pop int3 fs add inc mov lds xor fldenv nop cmp dec mov (bad) lret roll daa sti adc lock out or fwait dec sbb loop or push insb or and mov ss mov mov push lods fstps push add cmpsb jae xchg shrl fsubs subb push (bad) push dec call xor pushf add ret pushf add in mov cs ffreep mov mov and daa fwait push enter rorb xor pusha add pshufw rcrl and or fldl2e jns daa mov test pop adc orl popa sti andb daa (bad) jge cld lcall enter jno cmp pop ret in in adc adc lock add fdivr ret sub and cmp in jo in (bad) or jl dec adc insb mov stos jl rclb fdivp and mov lret fadd daa pop cmp pop inc mov adc sub pop add insl cmp rclb sub sub cmp imul cmp mov inc dec outsl (bad) stc in fcomps lods or mov dec fmul sti add insl stc in mov loope or cmpsb sub movsl adc sbb cmp dec or bnd push lods in lock and jge andb add jb lcall add pop cli lods push and adc pop mov imul xor add shl aas cwtl clc movb lret push stos adc mov aad (bad) or sti scas (bad) adc popf pushf mov pop inc mov es add icebp mov mov lahf and add int3 push cltd pop les (bad) xor out insb xor sub mov cli xchg outsb mov xchg ss leave lret aam das jo (bad) rorl daa push popa insb andb test add scas mov mov adc fisttpl pop and (bad) into cmp aam cmpb (bad) mov (bad) sbbl mov adcb and insb pop pop cmpsl fcoml fldl das test loope clc jg or lret jbe rorl adc push sub or and adc xchg fs sbb mov (bad) cmp enter dec xchg popf into mov jecxz inc lcall sti inc inc or int3 call sahf mov fistpl adc inc pusha int int3 adc fmuls lahf (bad) jecxz lods ss das addr16 pusha xlat add (bad) and or or mov dec test loop pusha movzwl add shll xchg mov add dec xchg add xchg das mov in xor enter cmp xor push or xchg les std cld cltd mov pusha jo pop (bad) loop shlb test dec fdivrs mov xor addl dec jbe mov add arpl rcrb fs add out test add push sbb fldt sbb addr16 sub scas inc nop (bad) mov insb cmpsb popa and jnp test icebp mov movsl nop je sbb imul or mov or inc fidivr inc call roll push loope xlat xchg mov inc xchg and fsubrl xchg dec lcall mov add dec subl cmp mov ja movsl xchg aam sbb cmp aad sub fisubr bound inc xor dec insb add add sub mov insb cmp out sub jge es xor arpl mov mov add or cmpsl mov (bad) fsubr add sbb and stc add imul into clc repz lock test add sub push cmp fld jo jl orb pop or (bad) enter aas les loopne imul lods inc xor mov call inc arpl jecxz (bad) mov dec sahf es push cmp incb or fwait subb adc cmc std mov cmpsl jecxz rolb xor inc sub mov stos jg jnp mov iret push xchg out and test pusha add andl push popa fistpll adc orb arpl mov in sbb push mov rorb test add rcrb adc fwait cld cmc in mov push rcrb add and mov rorb movsb xchg or cld pusha add mov adc pop loop rolb or and int3 sarb cmp ret jl outsl push push lmsw mov jbe jg pop stos andl fs out test inc jno xchg fwait jo pop fnstsw or adc xchg adc mov inc je test fdivrl adc add fcomps mov sub sbb fisubr inc popf inc mov push or mov pop sahf cmpsb nop popa inc pop stc aam in rorb sbb xor xchg fldt inc lcall sub xor mov lds pop mov adc pop in adc ljmp lret add push subl cs add jnp xor adc loopne lcall stos xchg mov aaa push inc lods dec push adc scas pop fcomps sub lock (bad) (bad) enter repz inc stos loopne lock nop mov mov imul ret (bad) aam mov add (bad) sub add mov in push xor outsb add les shrl mov pop shll lahf sbbb popa xchg in movsl mov sub xor push sbb xchg xor das mov movsl push dec fwait aaa lock cwtl inc inc jg cli dec inc inc inc bound std mov add aaa aad (bad) sti pop pop (bad) pop fsub push aam add sub mov pusha add cs les adc add test adc add loopne sub push mov mov scas push dec aam add cmpsl loope loop inc lock jbe dec mov jl dec add inc and xchg adc fstl mov test jo sbb mov cmpsb loopne ds ret sbb loopne aad outsl out xor outsb cmp xchg cmp xchg sub sub dec insb sub cmp mov (bad) xchg jl daa mov adc sbb add jo movsl cmp lcall xchg imul (bad) xor jle ja xchg jo imul adc or or xchg dec insl add pusha cmp sti add adc into fimul jbe mov add out movsb or movsl push mov fisubl nop mov and push xchg insb or pop xchg gs out cwtl pop adc out lret scas ss mov int3 ret js insb lock pop les hlt mov aam cli dec fs pop in add je xor jo call push inc sbb or inc add jb orl adc pusha insl insb sub or leave in les aaa fnstenv arpl and loopne jb ja cwtl ficomp xchg ficompl jl (bad) cmp push cmpl pusha js push sbb jl sbb add mov cltd daa lret mov xchg enter adc cmpsb xor cwtl rcrb mov cld or dec mov (bad) je pusha inc mov lcall je bound in in cmpsl rcrl add (bad) sbb mov jns or nop leave scas adc sbb add imulb and mov or inc ljmp sbb push cs xor inc sub pop les jmp rolb mov add mov lods push test adc lea flds sub cld jbe add or mov dec add cmp je adc pop in stc xor bound lock ja xchg arpl pusha fmuls das cmpsb out mov mov mull ret insb add xchg data16 sahf hlt das jno inc jle push daa jecxz mov xlat xor mov add rcrb and sbb cmp (bad) stos scas lret test adc pop inc push sbb sti jbe or std cld adc and add dec push call or xchg loopne rcll xchg out xlat loope xchg movsb loopne adc mov or pop push popa movsl int xor mov push dec addb dec fstpt cmp aas push xchg sub pusha xchg inc push cmc fsubs jp push cld ret and inc push jb xchg mov sub jo movsb push push add test (bad) dec push xor or xor add adc lcall dec ror in sbb lods and xchg gs pop hlt movsl (bad) insb sar clc adc adcb sti mov into or pop mov xor pop rcrb adc insb mov add cmpsb xor cs adc add cmpl hlt mov lods adc add rolb mov push inc xrstors dec into mov das pop jle cmp test xchg xchg popa push add jg out repz push rorl jp and mov xor cld inc inc pop pop lds or in fadds or (bad) adc int cmp repz xchg mov cmp (bad) xor push and push in fstps loopne cltd cmp test sbb (bad) pop sub test cmp mov cmp xchg out pusha jl sbb dec outsl mov pop sub mov std inc jmp pop stos rolb push out testb sbb insb pop out jl addb cmp inc scas stos outsl inc fwait cltd add mov or push (bad) pop sahf aad pop hlt movsl add or and andl insb mov dec lods inc mov repnz jo sub fsubl int je xor cmp push lret scas dec and mov popf cmp clc jmp out jne xchg ret mov sbb mov in jne ficoml pop shll sbb lret or cmp lock imul dec push loope xchg inc aas jo in xor push mov arpl dec sub add jl xchg lods jne or mov aam mov and imul mov dec mov rclb pop xor jo mov inc in sub mov out sbb aas mov inc sbb icebp in xor jne stc gs cli push mov (bad) dec js xchg inc cmp shlb mov adc loop jb in pop mov push js int imul adc mov jl insb add mov and sbb mov sub adc adc add jnp je sub pusha add or fld insl inc jo inc jns (bad) adc adc add sbb mov sub inc les xor rcrb shl cmp cmp test in bound xchg imul push insl mov les pusha fistl fwait jb jmp sbb pop lea mov pop les popf dec loop ss pusha add (bad) insb or mov mov mov fsub (bad) fisub bnd pusha into dec imull cmp fnop aam mov mov cmp (bad) sar mov pop sub int pminub xchg mov xor dec addr16 pop movsl and mov xchg (bad) xor xchg stc rcrl xchg push pushf fs jge ljmp and push or icebp pop and and cmp jg ficom dec mov test nop in in out pop mov bound sbb jge les movsl and shlb adc pop sub sbb jo push pop decb test mov dec xor fsubrs jl lods dec sar scas dec mov add ja pop or sahf into (bad) pop loopne rclb cmp loopne lret call sarl add ret mov (bad) je dec push out adc pop mov pop mov xchg rcrl ljmp dec and je dec pusha add cmp outsl stos push add daa jns (bad) hlt inc inc and add jle aad stc sub sub call jns push pop add test push xor pusha mov cltd aad nop aad test int movsl mov rolb lahf jno or mov or cli mov mov mov cwtd mov (bad) lock push mov subl ja sub (bad) hlt mov jb dec scas stc pop add mov add jmp fsubrl or sbb push lods cmp sbb xor jno pop mov or inc and xor test loopne pusha dec mov (bad) adc xor popf imul fadds mov push test decb call and fdivl ja inc insb fs fsubr mov sub or jg (bad) mov mov ret daa add (bad) jg cmp lahf jo sbb dec mov aad jae add push (bad) inc jl add pop sbb (bad) push adc loop push adc inc sub test shrb add mov dec push sub ror rcl adc mov cmp lds sahf push cltd arpl ficomp adc clc mov adc in ljmp jecxz sbb xor sub test inc (bad) fwait push xlat test cwtl mov ljmp mov jns dec push and arpl ds in test mov subb xchg add inc jb mov inc pop bound incb fs cmp insl les mov mov (bad) int3 fsubrl or fwait in out hlt rclb in dec cltd pop inc mov mov pusha imul (bad) enter sub enter sti ljmp mov lret cmp cmp mov jg imul pusha pop xor mov sahf dec int out mov rorb jns leave mov mov mov pusha lds js js add (bad) movsl jo addr16 divb mov cmpb mov xor mov mov mov adcb inc mov xchg dec pop ja (bad) cmp mov push cmpb je cmp sahf jb sbb cmp dec jns mov inc dec daa mov mov xlat inc sub imul dec xor inc pop lods das jo insl dec jns and xchg adc sub jo clc and and arpl xlat fstps mov adc push add inc push pop or aas or je arpl mov push mov lock mov or inc inc mov call xchg add inc cmp add push sbb loopne pushf lcall adc add enter push pusha (bad) ljmp das dec and add mov and mov add mov mov rcr (bad) imulb fcmovb je das mov (bad) xor aam test (bad) je mov inc xchg test jg je test test pop inc and push dec fs or in pop inc xor movsl push loopne mov mov test jae cwtl inc or mov repz insb imul mov das inc xchg mov sahf pop and (bad) repnz cld cmp dec les aam lcall inc les jns cmp test mov jmp mov dec aam (bad) insb jle jg mov inc push dec and and aam nop test adc dec or xchg test xchg insb andb dec aas in movsb mov xchg jno fsts add cmp mov in dec mov or outsb aaa sbb ret sub sub clc lcall loopne aas add and cld mov xchg into ret shlb jno adc pop test add or ja lods push or xlat mov shlb add stos pop fcoml sub daa dec (bad) jle sub insb arpl jo sub or ds jge xchg dec pop imul add loop scas inc or data16 mov jge fmuls fsubs adc and xor jl fadds mov and mov dec adc adc mov mov ljmp jo pop repz (bad) (bad) stos cmpb fstps or je inc push mov adc push je in leave decl test pusha mov cmp cltd sbb dec fadds mov arpl (bad) mov fsubl mov xor dec xchg push add dec push dec and cmp xor push lods aaa cmp dec push and aad sub cmp xchg fs pushf data16 inc dec push ljmp mov je je in loope das sti or xchg idivl push xlat outsb adc (bad) jmp rorb aaa (bad) and pop mov push addl mov cmp and inc mov add rdtsc das pop pop jge xchg sbb imul push iret sbb sub les outsl out call cltd mov lods lret cld addl jg popf inc daa jg push add xchg pop jb mov pop addl cmp ds mov inc or (bad) cmp (bad) int aaa add jg add jge enter pop roll pop iret movsl pop xlat ret je push sbb das xchg in jp (bad) sbb ficoml xchg add mov pop inc or add adc ret pop cmc jno xor mov popf call dec sub sub push gs mov ss sub insl inc inc test dec dec sahf add jmp jnp les movsl xor jns adcb jnp loop jno std jl imul pushf (bad) mov scas jbe lods and pop sub and fwait into xchg pop add mov aad popa int ljmp outsb mov dec add cwtl or out cmp and inc adc pop add rcrb (bad) jb cmp das push out mov adc pop cmp sub fcomip movsb mov imul cmc pop adc push xor jb add pop mov js adc dec mov push pop pop push push out iret jbe int3 mov lret ljmp cmpsb pop ljmp popa mov bound add (bad) daa xchg push jne push dec and (bad) jo mov adc addr16 (bad) test arpl push jns mov shlb insl imul inc cmpl pop nop inc shrb out jnp add fimull push or lret rorl mov adc push scas repz push add and pop dec andb sub (bad) pop xchg push push outsb mov pop mov push dec mov flds pop cmp xlat jmp sti jp jecxz sti mov cs sub jmp outsl nop enter imul mov xchg dec out in adc arpl popf ljmp pop push or outsb cmc dec sarl push jno lret cwtl dec sbb xor ret or imul rorb push mov scas sub repz ds xchg pop add inc enter pop daa mov inc push dec stos lret cwtl pop mov fisttpl into imul ljmp lods adc jg ds repz xchg mov xchg (bad) xor xchg or test jmp fistpll orb lcall fistpl shl push lods lock addl pop scas stc mov pop jg add pushf stos mov mov or push xchg mov mov push jo xchg pop pushf pop xchg pushf and (bad) cmpsl inc fdiv mov add lcall inc xor lret mov xchg ds jns add cmc incl cmp ffree in add xchg or add cs xor int mov sbb sbb or sbb xchg lret (bad) mov cmp mov jg adc sub fsubrs inc scas ja adc or fnstsw adc pushf insb call adc jnp xlat in enter pop pusha aas push adc fcomps jno,pt xor add or scas mov (bad) enter lods scas jle jp push scas mov int pop xchg pop mov sarl add out sub jb push xchg lods or js mov movsl ja and rorl and push jno push ljmp verr inc pop test out add loop jo push or dec mov ds pop rorl aad aas push out xor test inc roll (bad) arpl idivb xchg pop xchg cmp cwtl loop jg int3 mov insb (bad) idivl sbb add pop scas jno scas shll xchg jae or inc jnp mov leave fwait and dec incb dec jae mov pop es aad cltd rcll in and push mov jge mov gs add mov (bad) aas (bad) xcrypt-cbc cmpsl xchg sub mov jle dec pop cmc jnp cmpsb xor xchg (bad) mov mov dec cli fldenv jmp xor aas cwtl mov mov (bad) mov add push push popf add das stc inc int3 out inc pop aas lcall lretw xor (bad) mov lahf jns or call pop test add sahf or inc fsubs xchg (bad) inc sub lock push jno xor add not shl hlt add test xchg and enter mov add (bad) mov aas mov lods scas pop (bad) dec pop sub sub sub nop push lods (bad) push jl push fidivl xor push dec jnp in ss cld add xor mov pop or cmp add cld add mov add cmc sub inc fimull ret in loopne es rolb insb (bad) inc sarl fcomps xchg mov push xor mov test rorb xor (bad) sbb pop pop and aaa xor sti xor pop clc add dec mov push out cltd add and jb jl clc dec mul popf jne jne imul jmp sbb cli pop inc sub repnz sbb xlat lds jno mov mov insb and push cs fs loopne xchg jmp lret (bad) push xor xchg pushf inc cmp ss push pop pop test or repnz mov dec nop xchg andl jge jo pop cmpsb icebp dec sub int3 aad divl test das push pop aad movsb xchg jne iret xchg popf pop sti gs daa pop inc int3 mov cvtdq2ps or stos push mov pop xor xchg iret mov stos fisubrl lods mov add dec pop add stos test test stos subb adc lods mov cmp mov mov push pop and push jecxz cmp mov sbb and add repz cmpsl aad jb cmp lcall call pop es push (bad) lds xor (bad) xchg in repz dec call jne dec add sbb cs mov scas pop (bad) aad dec cs lcall push pop dec push scas mov mov (bad) lahf jnp addw sub mov std (bad) into adc add dec bound sub jg lret push dec cmp aas pop jmp dec dec loop jno insl (bad) sbb push push push ja sub mov adc fstpl push ss mov mov fs es push pop pusha mov lods xchg rorl andl shrb sub sub or jge (bad) jle inc jg sub rcr push pop xorb xchg test loop push enter and dec sete outsl ret sbb lods adc call add xchg mov cmp inc repz leave cmc pop lret movsb mov jno xchg push add int push inc neg dec xchg or cmp add or pop (bad) std pop sub bound push lods or jp jmp inc test daa push jbe or push insb imul enter pushf mov pop sbb rolb dec jne cmpl push ss cli jnp add in jle add ja or rolb imul xor inc testl daa sbb pop xor hlt out dec je sub jne mov les sub jmp fwait repnz iret jp jbe inc (bad) and (bad) aam mov inc pop pusha xchg jle dec jne cmp lds in xchg addl test and jmp mov ljmp jecxz fsubr cld sbb call dec inc sbb sti cmp aas push push out or outsl mov push mov jge lea dec or adcb and pop (bad) fildll push push aad seta sbb adc je sub dec cmp std sbb sub mov pop jmp sub adc lock push faddl mov inc stos inc in call mov imul dec push mov pop or fs xor outsb adc pop add jae insb xchg push mov mov outsl cmpsl cmpsl pop dec jae pop fs mov adc sbb xor jb popf xlat cmp lahf pop xchg sub popa out sub punpcklbw jae mov pusha xor mov stos dec cmp movsl or pop xchg out sahf mov xor jne ficomp scas adc int cmp sub in in das ljmp push xchg fwait inc adc xchg add mov enter jmp in push cld inc and jle pop (bad) inc or sub ds arpl bnd sahf xor pop pmuludq sti inc aas ja popa sub inc inc inc adc fs add das or jg and gs lods daa data16 and push sub push pop daa xor push push push pop xchg (bad) (bad) jmp add push test in iret sub test jnp xchg pop mov push jno push or pop bound push xchg xchg fs in push mov push ja das pop aad loope mov adc mov leave sbbl push faddl push lods jp clc lret mov dec push aas cmp fildl jg and cs or repz cmc (bad) jg or pop movb jmp pop xchg xchg incb jl pop add dec sub or jp cli (bad) adc pop sub repnz push jns cmpsl sub mov pop mov mov enter pop pop jge jae shrl xchg xchg and jbe jmp cmp jno lret jl dec js out adcl push xchg je mov mov loope jno sbb js inc mov adc cmp cli push sub jne rorl add xor cs sub or rclb jp in add sti jne mov pop jle add pop jbe orl test in mov rclb je adc dec pop cmp inc mov xor inc pusha add or xor (bad) test notl mov rolb mov aas dec xchg sbb js inc pop inc push push jbe cltd fldl (bad) repz repnz dec fidivr les cmpsl sar add (bad) xor xchg push test add lea std ja inc outsb push sub sbb ja inc mov (bad) jbe push and lahf int3 jg fmuls sbb or mov or add pop jne inc sahf jmp and dec sbb add xchg mov and aas push jecxz or or jg xchg xchg out dec and sbb jle add push lds iret mov rorb sub jbe loope out pop notb or scas sti outsl dec daa jge (bad) cmp ja insl rorl cmp or push (bad) xor pop mov mov mov shr out dec js push dec push adc cltd xchg fist es pop ljmp inc jmp and inc mov pop dec and nop ss add out mov leave lock das clc mov and add es xor ljmp add cwtl sub inc pop pushf jmp jno push mov pop mov jae out add insl aas in jnp pop dec enter es mov leave push sub sub repz push mov ds push push sub shrb das push dec lea testb ret jle inc adc mov pop data16 loop xchg dec dec xchg push scas test cli jl cmp ljmp dec movsl nop aas jbe and pop push cltd push pop jecxz es sbb cmp (bad) aas repz jg inc xchg mov mov cwtl push fdivl cmp (bad) jmp or mov je int xor cmp lcall outsl nop sbb shrl (bad) sub xor out lcall leave pop fld add gs out sbb and push cli imul cmpb sbb sbb ds fnsave (bad) add jae int cli or fbstp xor mov jg sub sbb (bad) sbb mov cmpsl add ljmp jne fiaddl jle adc mov leave mov jle add and pop mov ret inc std jl mov test sarl xor add repz xchg scas pushf mov jne (bad) add cmp mov jmp and into adc lret push xchg mov mov cmc or clc pop xchg and mov out shr add or jns push jp add adc in testl cld jne loope dec out push icebp and (bad) and iret test mov fnstenv nop mov or mov mov add and cs testb inc pushf jg mov dec inc push add or jmp cmpsb ret loopne pop push push jecxz sbb push xchg ja add push (bad) das fdivr and inc push mov add mov or divb jmp adc mov pop pop cmp arpl inc adc repz gs nop and je push aad (bad) inc pop iret (bad) mov stc aaa pop scas mov xlat loop aas ret mov push jo aas inc gs hlt mov ja pop lock sbb push pop and pop mov into cld insb mov xchg jmp fs ret push pop xchg sub psubb jg lret add xor xchg aas cmp and jmp inc add jmp add xlat dec pop dec push mov push cmp dec pop and addb and sub aaa adc test add cmp or mov movsl add pop ucomiss outsl repz inc shrl or dec jmp loopne mov jg sub mov xchg repnz add jmp mov jge cmc jg pop adc adc adc jg mov loopne adc jg inc dec xchg jmp gs aam jg outsl mov fs aaa mov orl add add pop jmp mov inc lahf jne iret jmp sub adc fs mov xchg fisttpl (bad) out sub inc pop jmp jae pop ljmp ficomp ror and dec jne xor and lahf xchg int3 inc push ljmp es pop add mov sub sti dec xor repz jmp shrb out cmp xchg or cwtl cmpl scas movsb xchg cmp lea fildl rcr mov cltd push lea inc rcll jl add mov lahf inc jge (bad) repnz or inc adc ds pop push or jge push xchg sarl ja push daa or sub adc shrb mov call scas jge or or xchg sti sub cld js ret push scas jle leave push lret sub xchg icebp add std outsb jmp sbb inc sub xor stc dec in stc mov outsl jmp je cli test iret push inc in pop dec loopne sub fcomp outsl rorb pop add push inc jne jae (bad) inc call mov inc and and ljmp pop pusha and mov fild clc mov pop dec push ljmp adc sarb outsl dec sbb cmpsb add leave jns pop jecxz pusha cld dec and punpckhbw lahf shrl jae jge addb (bad) adc mov outsl shrl std pop xchg xchg or sbb push mov sub idivl mov push or pop out or cli fist mov add scas leave adc andl jl int ds dec inc adc rcrl pop add fsub or sbb jp inc xor add mov jecxz sti jnp jge mov mov mov add roll loopne fnstenv mov fistl mov add dec aad pop movsl int3 cmpsb test dec pop xor inc cmp lret mov pushl lahf add stos sti jae pop push cld xlat lcall xor jno test mov (bad) sti shrl pop enter pop or imul fmull push in std pop dec mov js sub pop into jle jmp rdpmc sub insl imul sbb mov jmp mov jae mov add add rorb xchg add sbb sbb int pop lea adc popa jmp ror add xchg decl mov xchg loop sbbl mul push xor mov dec pop aad push xor pop jne ret add in sub leave rolb ror dec push cmp cmp addr16 and inc and sub jae pop mov sub mov ds cmp rcrl in test xchg jge add imulb outsb jle mov imul mov mov ret mov addr16 cli call ficoml jmp jb daa xchg (bad) add popf pusha push ds shrl inc cmp add mov push cmp imul adcl and push nop jnp xchg xor sub jmp inc aas push push add loop cli rclb dec mov ret inc mov dec or mov scas lods daa (bad) cmp daa inc lock fwait mov imul or or sbb jbe or repz not in dec roll sbb jg add pop shl hlt jo or mov dec loopne addl inc decb cwtl (bad) sub inc mov lods mov out aam sbb cli add push sub push enter add pop dec xor pop mov jmp pop dec dec das ret bound xlat dec jmpw stc jmp or ja push xchg imul nop (bad) adc arpl loope add sbb and mov xor clc out mov lcall movsl cli fildl sub add add push cmp add (bad) mov cld gs push sbb xor fisub cld cmp sub jns ja push pop xor xor cwtl mov leave xchg (bad) jle dec lcall mov sub jg adc mov add dec ljmp (bad) or pushf sub jo movsl xchg int3 addl negl clc pop xchg adc and testl insb std add (bad) mov mov pop jne mov xor outsl xor fstps or adc div pop dec inc xchg push adc insl out and ret add ret add mov addr16 sbb movl cmp (bad) cmp inc xchg jne pop push fs inc (bad) cmp inc lret mov xchg icebp insl push cs bound cmp rclb sbb mov aas sub pop pop sub fisubl sbbl fldl stc (bad) lret or test sbb push xchg push (bad) leave test je jmp in mov pop pop and pop mov xchg negl sbb outsb jbe and add pop pop push call lret add pop mov cmp cmpl fsubrp or pop inc pop hlt nop fs mov sbb jmp (bad) or push je rclb add add jmp xchg (bad) outsb les jg push repnz sbb cmp ss and popa vfpclasssd in fsubs and sbbb push jmp sub mov je add add inc dec jmp adc inc lret and inc das jmp pop push adc fwait or cmp addr16 pop jns dec inc rorb sbb sub (bad) mov cmpb add jnp lret sti lcall scas sub add mov fidivr jmp sub push cmpb xor roll inc fmuls cmc sbb pop sub or pop (bad) das inc sbb jmp imul or sub push fdivs addr16 imul ds mov test leave shll (bad) lock lret cmpsl mov sbbb jmp loop jno (bad) and ds fadd pop jb out adc mov fnstsw pop sar sub lock mov stos pop jne jp sbb sbb sbb fcoms (bad) aas xor (bad) leave addl rorb (bad) mov jns inc dec out fisttp cli cmp inc jns cmp adc out adc jmp out ret add or or daa into mov add inc out test sub ret inc and xchg mov cmpsl push enter js repz sub push xchg idivb test fcmovu add aad lret test cmp lret push push mov outsl inc add dec add inc jmp popf loopne cmpsl ds xor sub cmp dec inc dec imul add pop repz out ja dec dec (bad) cmp mov adc push push outsb add mov gs mov out push js cmp adc inc pusha pop outsb idivb or rorb adc push adc repnz adc sti dec out rcrb loop out cmp dec rcl (bad) (bad) push lahf (bad) cmp add mov dec sub lock mov inc ss pop gs xor cmp cli xchg mov scas repz jmp fwait lds lcall arpl aad les rcrb (bad) mov or sub jne dec loope jmp or scas mull in fstp movsl dec mov into and stos mov cmp loop mov cwtl adcl sqrtps jg nop and add cs adc and inc add ret stc pop test inc imul jle mov repnz out dec xor adc (bad) lcall addb (bad) cmp or sub jle pop add mov test je cmp jne inc sbb repnz pop pop shl movzwl xchg (bad) inc push std cmpsb mov bound shl add out sarb sbb mov xorl js in or ret push loop push int or cwtl dec mov xor enter test xor out push pop mov dec and mov imul roll insb or jnp popf outsb jp sbb leave inc cmp pop insb push push dec fnstenv xor sub lret sub fsubl xchg (bad) jb imul push push icebp insb pop roll repnz out outsl push das push push and mov jb add jg (bad) aad jo dec inc hlt dec imul leave xchg outsb add (bad) ja and shrb push inc shl cmpsb jbe cld jmp in sbb add inc push inc pop sub cmp (bad) push xchg inc fsubrl sub dec mov outsl dec lock in sub sbb dec adc sbb aas mov mov push std pop add xor sub jae mov in es sbb cmp jnp movsl sbb (bad) pop inc inc pop mov sub push mov cmp add loopne xor (bad) jl lahf out push int lea and loope add and mov stos sbb lcall mov in pusha out dec sub sub std add call cwtl xor repnz sub add mov ret pop les rclb push sbb push dec mov leave adc push sub xor pop mov add stos lcall ds sarb and addr16 inc (bad) and in sub pop jbe mov test enter mov imul sub enter stos jecxz aas pop and dec scas out lahf cmp sub lahf (bad) adc adc aas dec int orb mov (bad) pop mov or (bad) negb and jl push or xor mov icebp insb gs adc pop daa pop and push aas not jnp divl mov pop fwait aaa repnz test pop jno es pop sub std das into roll add (bad) or push add clc xchg mov repz int3 add rcll or pop out xchg lods xchg pop push lret pop test int mov hlt add mov jge mov insb out aaa cli mov andl adc mov add sub loopne and xor mov dec push (bad) jnp sbb jecxz push jns es add imul push add leave xlat in inc mov lds mov lods and pushf push mov cmp and fs add push scas dec or rorl lcall inc call cld xor and jmp mov dec push or jmp push ret jg sub sub push aas and sub sahf cwtl mov mov xchg (bad) mov mov mov push jmp sub aaa add xor and mov imul jmp call js pop mov push jmp pusha sbbb leave hlt add shr pop xor cli ret fadds out daa adc push cmpsl imul imull push les mov mov (bad) js (bad) cmp (bad) nop fadds sub jmp ja sbb pop mov arpl add add mov repnz sub mov push icebp mov inc mov fildl ds dec in les (bad) dec mov test stc nop inc loopne dec incl loopne ljmp fildl dec jnp adc xor sbb mov pushf pop jnp add jmp xor add les scas mov pop sub leave jne orb aad dec push dec dec sbb out pop or addr16 push mov sub inc mov adc out (bad) and dec out pop xchg xchg xor repnz push add inc jmp call or lea cmp scas pop mov push mov ret nop sbb pop push jecxz (bad) shr and in xchg pop add add ss fstpl (bad) imul sub ret dec fwait jle lea es and inc ljmp ret push jmp push dec in test movsl mov call lods cmp xor push fist jl,pn mov scas or push or pop sbb mov push orl neg sbb das mov jg (bad) or sbb bound jb jmp arpl add push xchg push sbb jno es ret push push cmp adcl dec push add cmp add test sbb out push sbb cmp cmp aas dec xchg rolb and sub cmp cmp sub xor sti sbb add (bad) iret movsl mov arpl aam out push (bad) jmp es dec lods sbb movsl add roll shrb pop sbb lods mov das add pop mov fldenv jge add dec mov push hlt fwait sub and mov lods add test roll clc daa and add xchg cmp jbe gs testl jp xor cmpsl ss dec ret sub xor add cmpsl std dec sub push jne push add cmc inc loopne adc pop pop xor (bad) jmp inc ja push inc hlt jmp sub and jo popf sbb pop (bad) jle pop int3 int3 (bad) or mov jae jmp ss dec jp lods dec gs cmpsb lds mov adc mov or pusha xor cmp addr16 push push xchg mov es mov mov dec (bad) flds push cmp cmp idivb sub outsl inc icebp xor add add xor cltd push mov mov popa pusha or fimull inc sub lret movsl sahf cmp out out adc fisubr loope fistpl repz pop push or adc cmc dec test setb pop mov inc imul dec and and sbb cmp movups out sub push dec mov fsubrs inc xor mov (bad) dec jmp fistp cmpsl (bad) hlt rcll push cmp add scas dec sbb js sbb into pop loop dec add fcomip sarl insb mov jo dec xchg mov ljmp dec mull cmp pusha sbb sti add repz jg imul push neg xchg and pop adc push push repnz data16 stos mov dec rorb push jg outsb cld (bad) or icebp nop and loop inc and jg stc mov jb or add aas sti int xchg push push mov xor es and ret sub jne xlat (bad) icebp cltd mov ss mov dec xor leave shll pop cli and xchg movd and jge cmpsb xor pop into decl ljmp jno mov mov mov push push pop jmp and inc mov mov xlat (bad) ret mov fisubl push stos jbe gs rcll insl pushf addr16 ss pop and sub outsl shr loopne push addb cld mov sbb dec push pop pop das mov dec lcall cmpb pop lock icebp ds pusha or es mov xchg mov push je jo pop mov sbb mov mov jg imul jp inc shlb fs mov xchg mov scas test (bad) adc in inc stos push jmp add add or pop jl jne adc or add (bad) icebp pop jnp xor dec and lods add mov dec xlat idivl xchg push push sbb add cmp cli push push xor sub adc cmp sbb rcll pop mov in sbb cmpl xchg lods dec and jg sub dec insb cs es sbb xlat out nop jg xor shrb sarb mov add call or rolb fs add out or inc pop push (bad) sub inc inc adc mov push xor push pusha daa sub xor sub fiaddl cld pusha outsl outsl mov add add das loope jb sbb fisubl test adc fnsave cmp clc or popl adc add inc movsl mov mov aam int3 or lods addr16 ds cld lea movsl addr16 cmp rorb cmp inc sbbb and jge add lods mov fiadd adc inc add push add das mov xchg movsb (bad) cmp stos insl movlps fidivrl sbb incl and insl or mov xor (bad) cwtl aad int adc cmp sub cmp push xchg int push sub sbb sub ret push test inc (bad) (bad) pop dec daa adc pop in add ss add test lds negl xchg jecxz push pop fsubl add xchg adc cmp push mov jae mov adc mov (bad) cld nop int3 and adc add and and lret mov rcll je xor stos dec movsl dec inc adc data16 nop in fidivr imul lods fldl inc mov sbb sub push test outsb cmp or or adc sub mov and add (bad) xlat sub push add jmp inc imul out xchg sbb xchg lcall cmp dec mov rorl mov xchg mov es ret xchg pop jae jbe add outsb inc inc lahf enter cmp jbe nop out xchg fnstsw scas xchg mov icebp push popf cmp fwait bound insb stos cmp inc jmp pop or xor sbb imull or lret sbb pop rorl fwait in mov imul pop jno jle add sub inc xchg and mov push pop add xchg and pop inc xchg inc shll pop and and js loopne bound pop xor and mov sbb (bad) stc inc int add cs ljmp int pop inc pop and xchg (bad) lret nop (bad) mov cmpsb and out mov push push add mov test (bad) repz xchg mov cs aaa and mov pop pushf jb or fisub ret xchg add idiv jp inc out and (bad) lock cwtl pop add hlt cmpsl adcl testl ja insl repz xor sub inc out jg cmpb inc aas movhps mov inc or (bad) ja add ja inc adc idivl ds ret mov or push out pop jl adc sub add call mov pop push xor push push lcall mov stos push push mov icebp adc test inc mov movsb cltd cs cmp pop push dec fiaddl mov sub loopne mov xor (bad) inc shl sbb xor jnp and in test (bad) push mov imul pop sub jl inc pop mov xorb jo mov xchg sbb inc or clc dec ja xlat xchg adc push addr16 lret add das push notb dec cmpsl (bad) jl inc mov push out inc cmpsl push mov nop ficompl dec (bad) or or ljmp pop sbb repnz leave (bad) pop cmc jnp mov mov add mov add sti jle clc jmp xor popa pop lcall push or (bad) jg pop adc push sbb cld imulb das dec shrb cmp inc adc pop xor outsl or hlt mov imul jne addr16 pop into jno movsl cmc out std mov (bad) adc js loope std movsl mov iret fldenv push stos lahf je pop cmc xchg mov in adc je in popa (bad) xor push mov insl pop outsl cmc repnz movsl sbb push mov xor repnz push jmp pop pushf and out bsf adc xlat sub sub dec sbb in adcb das adc dec mov lcall xor mov ja jbe jnp add notl xchg push dec stc iret cmc sbb ds popa idivb imull adc jno adc cwtl dec inc dec mov jg cld mov inc or pop lods dec das cmp inc sbb cmp insb sbb fisubl gs je mov js stos loopne mov stc add repz call das mov pop pop pop iret and scas adc or add aaa outsb aas outsl push push push push jbe (bad) dec jl arpl sahf imul out lock jb ret push das clc push js das (bad) sub loop test ljmp cmp dec (bad) pop xor pop icebp and push (bad) scas pop ljmp sbb push cld mov std pop and xor jecxz cld in cmp xchg ret inc pop inc and int push jae cltd add subb pop and jg or ja out dec and push daa sub leave mov and cmpl hlt pop jnp les xchg imul push xchg enter mov jbe aaa mov adc add dec add movsb sbb or mov xor cmp imul mov call fs inc jmp mov and ja fdiv jns sbb imul jns and add cmc pop jmp icebp pop jns ret test pop xor out add mov enter add jge and add (bad) pop cltd cmc cmpb inc xor in pusha mov push push (bad) popa in pop subb jb stc add rorl adc mov pop popa (bad) jle add jp lea add imul test adc in adc je imul std push xor cmp sbb test sub icebp sbb roll and imul (bad) mov rcll mov adc ficompl les xor (bad) cltd or add pop mov or aas imul adc inc ffree in inc jno les push ljmp dec insb mov gs out vmovups mov push push pop ret inc mov jle inc push ret add icebp pusha out dec stos dec jno add aas jno xchg loop add mov or adc mov jge cmp inc adc enter gs pop fistl (bad) andb movsl inc shl xlat or test sub rcr test or and inc sub gs ret test mov adc dec (bad) push repz pop lret fiaddl adc pop pop or out popa push push sbb fbstp xchg mov pop push cltd rol clc inc pop xor sub movsb subb rcll adc aas into (bad) jnp adc pop jb insl pop jl enter lea adc or or cmp mov data16 js (bad) (bad) mov xchg fistp ja mov dec test mov adc or jmp ret mov into popa lahf adc jp lcall adc test push xchg int3 or dec idiv mov out test pop xchg in nop sbb or xor call and pop add ret and pop icebp cpuid fcomps loopne std pop movzwl popa mov push (bad) scas add inc pushf bnd ds mov push (bad) sbb adc arpl (bad) jg adc nop mov mov or popf mov xor pushl push les pusha mov xor (bad) sub cmpb les add sub lock sbb push into lods jmp jmp and jno nop mov mov add add shll cmp inc add outsb mov and pusha aaa mov mov sub ja (bad) mov fisubl pop adc or or test adc and negb (bad) or loope mov mov sbb adc pop push loope js jne out dec test jnp sti fwait inc sub clc andl adc subl jne add (bad) nop dec scas pop add jnp sbb mov out dec mov lea aam mov iret sbb (bad) nop out inc sbb add fsubl pusha mov xor shrb insb dec loopne xchg xchg jl cmp mov sub loop xor mov push xor or adc icebp jae inc add iret (bad) dec pop inc lret orb jbe sbb pop fs negl adc jae xchg sub jns push dec inc test cmp add add fwait add xchg jno rolb test add movsl xor lret js sbb pop fdivr adc push out and mov ljmp int3 test mov sbb leave mov dec (bad) arpl enter push loopne push loop add std jb or pop xchg push rcrb out popa out jo js xor sub mov pop pop je dec xchg in adc push jecxz xchg inc or lds nop je pop jp rolb adc cmpsl mov adc and inc aad add aam pop and loopne push mov adc jno lret adc xor cmpsb (bad) sub mov mov orl add andl jno out dec mov push in outsl xchg add shl and das int xor inc adc or add pop push nop xor std pop out jae lods ss or push dec add fldcw push xchg add jmp jp cmp add xor xorl jle mov sbb add pop pop cmpsl dec cmpsl dec outsb loop mov sahf iret (bad) into int3 popa add call xchg push xchg lret cmp and movsb adc mov mov cs repnz rcll and cmp (bad) xchg pusha in pusha cmpb add and mov dec adc iret mov aaa sarl cwtl addl adc lahf call data16 aas sbb pop out fwait pop adc int loopne xor xchg movsl push cmpsb loopne push incl into les xor mov popl inc mov and lods int3 je sbb dec nop pop mov inc mov mov adc push pop inc cmp or pop clc pushf pop inc inc pop jo roll xor fwait push mov adc rcr cmpsb cli inc pop cld xor dec mov pop (bad) add movsb lret fsubl (bad) fidiv arpl mov in mov bnd xchg mov roll mov nop test (bad) pop (bad) mov inc xchg jnp add push cltd dec push scas iret lods pusha nop mov in pop add xchg out (bad) jno out js js push add adc or sub rorl sub iret pop mov xchg jo and mov test inc mov (bad) faddl jae lods push push jp jne stos cmpsl faddl add cli xor add or orl add call lods push push (bad) les mov enter addr16 mov repnz dec icebp sub jae xchg bswap xchg cmc leave jge push mov faddl push or jl mov cmp mov inc xchg push call or cltd or aaa dec stc subb xor ljmp jbe xor out add mov js fldl in inc cmp jecxz scas rclb push sbb inc ret or nop cmovp (bad) repz mov in leave pop test cmp push adc jno adc adc sbb adc fimul fadds bound repnz pop jle fsts cmc xor mov pusha push dec das inc adc pop nop xor test xchg push push or cwtl add cli cmpsl mov mov movsl add or addr16 push jnp sbb inc sub mov mov fdivr stos cld mov push jne fxch add add sub sbb pop in adc (bad) subb test icebp add cmp adc and sub or es inc and mov sarb aad sub adc sub sahf mov nop ficom mov jnp ret loopne sub js aaa std or cmc jne push or inc int inc leave pop push (bad) out ret cs push xor adc ret dec adc sarb cmp pop fistp push mov (bad) xor rcrl mov dec test mov es inc xor test jl bnd push push cmp sbb lods xchg and rorl inc test push cmpl pop scas or add stos jl ljmp (bad) rclb orl subb mov gs jmp and lods push push ja xchg sbb lock xchg enter mov mov add pop jne push jns jbe add pop sub push cld xor sbb shll sbb mov popf ljmp jmp push fdivs (bad) xor add dec push dec jne xor cmp dec mov not inc rorl adc jne pop cmp je pop pop add pop mov fsubrl lds mov mov loopne inc dec sbb pusha or ret push and iret daa inc add add inc push add push xchg mov orl push xchg pusha mov add (bad) and pop xchg jb (bad) cwtl mov sub xor loope inc and pusha xchg add add popa jb loopne jbe (bad) push push add pop fimull mov popa mov push adc jle shlb xor loope sarb lahf test leave push fwait mov mov xor popa ds mov push pop mov fld test xor mov lock adc add push xlat push mov aam sbb dec subl jmp or loopne aad xchg pop fisubl and addl es clc xchg inc and lcall and add mov lea mov fsubrs push popa inc repz add sub jge arpl adc mov add pop icebp push cli mov jmp mov pop outsb test cmp popa cs ss js jb push xchg jbe xchg ja rcr jl cmp shrl insl jecxz push xor mov add imul mov add mov leave xchg fisttpl sub pop fiaddl mov mov fstps leave push cmp mov push jp in call add dec iret in push mov icebp dec and lcall std xor test addl popa jnp or xchg jge sub imul add lcall data16 nop push xchg imul movb (bad) lock jmp rcrb mov inc jge gs ja lcall iret es jl add jb add and adc jne mov mov xlat and pop addl push cld sarb (bad) jae paddsb push sahf inc jne add cld jge (bad) (bad) adc dec add movzwl jmp cmp or sbb inc pop add adc clc jae adc adc (bad) pop pop pop pop addr16 cmc addl mov mov call fadd or xchg repz cmp lods gs mov int in lods dec (bad) lea imul mov (bad) add (bad) dec (bad) jo push add sbb add sub subl es addr16 addr16 lock gs mov push push test xchg rorb sbb out popa clc lods in mov (bad) test je sub ss sub add add cmc (bad) adc arpl fwait mov xor xchg adc inc xchg add loopne inc cmp xchg ret add mov push je outsl sbb inc xchg mov addr16 xchg int3 push mov add xor cli add gs xchg mov aaa ret fild xor sbb pop (bad) push adc mov lea add das (bad) jbe daa mov stc mov sub repnz xchg xor lock test cmp mov sub jb adc inc clc icebp ret inc cltd (bad) call and mov mov inc or add and int fsubrs sub mov jmp dec sub pop cli and insl icebp sbb add scas jno pusha mov pop mov popa stc sub jmp sbb jo mov add movsb mov popf jge ljmp addl (bad) mov pop ja inc repnz adc xor inc adc pop push add out sbbb gs add mov adc adc sbb repz mov or pusha mov sub mov inc (bad) xor push dec popa mov or (bad) ss dec aaa cld push clc mov sbb mulb cld jp adc jo js mov xchg cwtl xchg (bad) leave add int3 adc testl xchg push rcrb out xchg or add test fcmovbe pushf nop adc lcall je daa jmp sub and lret adc scas cmpsb push sub int3 rorl (bad) je mov jo popf ja xchg lahf push adc push fmull and or popa lock repnz (bad) lea xor and inc shll mov adc push aas (bad) shr cwtl or stos sbb sub sbb adc rorb cmp sbb in fisubrl mov mov jns dec cmpl in xchg add jae repnz call xchg xor imul add pusha jns pusha cmc lcall das cld fldl jb in dec subl push pushf cmpsl adc movsb mov insl jb lret lahf adc add xor pushf jge cwtl jo scas ja scas (bad) cmc cld dec stos or fdivrs sub dec sub sti adc stos push xlat icebp sbb add scas mov mov daa cmp outsb jno js lock aad push into sub sar xor xchg notb out mov xchg pop dec popa jmp (bad) adc push sub inc insl cmp and cmpb pcmpeqw pop pop je sub adc xchg pop pusha xor rol xchg pop faddl pop test aam (bad) cmc pusha sti ret jo mov test lods mov add cmc ret or dec adc inc mov ficom sidtl dec mov push pop mov cmc stos js ret mov dec nop in adc xchg (bad) je sbb jecxz or jno out pop sbb jle adc imulb sbb push cld sbb mov scas jecxz pop jno sbb nop push dec ss aas andb pop sub gs nop movsb dec iret mov mov cld cwtl jmp inc push mov mov add cmp cmc popa inc jo dec jne sbb arpl pop leave add sbb (bad) push fcmovnb nop or mov push cmp loopne xchg push pop into cmp mov cltd add stos add in adc xchg inc mov psrlw mov cltd sahf cmpsl sbb mov jno outsb xor mov sbb call cmp lods loopne jns popf sbb xor dec pop inc add aam inc es and jno sbb in or fldenv clc fldl cld les adc cmpsb sahf mov push test fs aaa les lret scas xor fistpl popl sub dec add out sbb rcll or push xlat fdivl add add shrb and adc inc xchg jp or aad fild mov stc pop clc xchg adc cli mov stc pop rorb aas or mov mov ret out pop pushf sbb jl add data16 xchg or lahf xor ret pop in push outsl or push pusha push ret lcall adc push ss xor (bad) mov (bad) rorl sbbb push jo cmp pop sbb enter jnp push add sti cwtl addr16 xchg xchg sub add dec pop xchg loope sub in ljmp or cmpsb dec fsubrs xchg jl lods adc or cmp out sub jb loop pop fwait or rorb jbe inc sub add jno icebp cmp cmp popa or pop and dec inc mov fistl arpl sbb pop test and add pop jbe pop pop frstpm(287 cmp adc mov jp les outsl das and loopne or lock or sbb push push insl xor jae inc in mov sahf inc inc stc mov and jo (bad) xor adc lock dec pop nop pushf add jmp dec push sub add cmp test and inc lahf and xchg fcoml dec popa mov sbb sub inc icebp jmp add push dec inc push and add (bad) nop or adc xor pop inc dec pop inc push mov dec stos mov shll (bad) mov add dec (bad) cmc nop xchg fs pusha xchg mov (bad) enter cmp mov or movzwl in scas sar shr adc jle (bad) cltd mov or lret ror cmp mov cmp std ffree aas cwtl ss mov add inc cltd pusha call pop das (bad) xchg adc push sub loope addb sub stos pop ficompl or cmp lret bound sbb lahf add hlt cld clc cmc subl pop daa sarb xchg mov add mov mov xor pop mov fcomip jno sbb mov mov pusha movsb cmpsb lds add (bad) sub decb and push sbb cmp inc or sbb dec adc mov daa add push push popa xchg mov aam mov mov xchg andb test cli jg add popa jmp sbb mov leave (bad) icebp xor cli push scas jo (bad) addb push xchg add out sarb sbb push and xor pusha or mov add imull inc and jb (bad) mov rcl adc cs push into pusha mov inc mov lods jo mov add adc xchg jbe pop test add dec xchg xor mov xlat je icebp mov daa addb xchg mov dec or push insl cwtl add jb inc movsl andb andl cmp decl add xor enter add jmp push sbb test leave (bad) out sbb aas pop xchg sbb mov (bad) fsubl cld js out pop mov jle push shrb fdivrs add pop inc inc icebp in cwtl push insl sub or xchg inc or loopne mov xor ret jecxz,pt cwtl xor mov popf das in aam mov cmp push mov ljmp adc mov loopne xchg js shrb out adc cltd inc xlat mov push lea insl xchg add lock and clc mov test sahf xorl rcr stos pop mov addr16 test andb int3 mov or ret xor cmp add stc and add mulb mov enter mov dec pop pop adc add mov mov push dec jne jae cmp stc add mov mov mov faddl push and or int add adc fimul add sbb mov jae add dec in fs xlat and add sub (bad) adc dec inc adc and and add bound pop cmovns and pusha jp pop js dec test add xlat inc xchg jbe xchg push hlt stos mov movsb cmp lock mov stos mov orl pop loope or ret cmpsl xor mov and aas xchg adc xchg add push ret sarb push sbb pop fistl mov ljmp pop pop mov bound call (bad) sbb add das fwait lods rorl rcrl and bound cmp xchg loopne push jmp push popa int cmp or je lea mov andl mov xor inc cmp jg cld rcrl mov jmp ret mov das iret mov add int3 lcall add repz mov out in in les cltd insl mov xchg out pop jmp mov dec lods in mov push or xchg not cwtl xor mov aaa dec pop mov sarl mov aam es daa jo shr add fiadd ret nop add pop push mov lahf js mov daa push scas add cmpsb inc jge jg (bad) push pop cli lret in mov jg enter js shrb sub in or xor std adc aad mov sub push push (bad) add xor aad or das (bad) xchg insl daa or fdivrl sbb dec adc push lahf jno or iret sbb insb les outsl shrb jmp cmp dec clc sti fsubp addb push or cltd sbb adc sahf jns jmp jnp xchg pop out push insb jmp push fmul sbb add jne or jle jg cmp add jg push pop popa in sub pop pop lods push lods jg loop add add jmp mov push pop mov jmp pop sahf aam sbb adc repz xor or mov or push ds pop add or sub addl sub fcompl or int mov pushf pushf and pop sbb movb cmp (bad) dec lods or ret mov push ret and inc sbb pop sbb rcl fwait mov jge inc adc ret or sbb jns pop jmp pop push xor or fistpll pop mov jmp aas repnz mov inc push scas and sub shrb test dec xchg cs mov or lret xchg fldenv add ljmp sub pop fidiv aam xchg adcl and mov in iret addb jp lcall pop inc out push mov pusha sub lods push push ds mov iret sarb pop cld dec das ret andl js cli in rep rcrb fisttp lcall add jecxz sbb icebp push aam jmp adc push mov push add out loopne mov jle in lahf sarl mov xor pop addl shl inc loopne sti lret mov (bad) and push ds xchg es cmp pop orl sbb xor mov stos inc jmp mov or pop stos dec lods mov xchg daa sti jae xchg add add (bad) jg sbb xor mov nop mov daa (bad) popa (bad) arpl mov rorb rcrl sbb adc xor loopne and stos xchg sub mov xchg jp fwait pop mov out sub dec divb jo cmpsl inc pop dec lods mov jle xor pop repnz rcrl shrl test loope sbbl insl scas popf add popf push pop fsubs pop cltd gs and mov in out or (bad) rcll push dec cmpsb inc jecxz jne push add jmp insl cmp lret movsb pop sub fsubp jno sahf or mov out inc icebp aaa mov lcall mov es pop or sti add lret inc and imul adc xor out lret cmp call or imul push cmc das mov mov sbbb cmp js mov out cmp out push insl andl sbb add lea into pop out mov mov mov (bad) mov inc repnz test (bad) loop or dec sar es or xchg or or inc mov imulb xchg and std dec xor ja mov je cli dec (bad) and mov jbe movups ds mov cli xchg pop or add ss cmp (bad) xor pop xchg xor mov pop in sub bound sub stos sbb push xor cs push testl mov ret cmp jno sub push add inc pop add push pop popf lock daa divb push mov adc push test or fisttpl (bad) mov call ljmp test adc shl cmp inc (bad) (bad) aad das mov jo xchg sbb xor jnp and inc jg xor and fisttp pop rolb icebp lret pop fsubl mov insb push push xchg les push std push dec clc test mov xchg jg sbb aaa add inc xor (bad) mov sbb or inc rcll sub js xor inc imul and dec leave xchg adc or jg sbb dec js adc push (bad) daa dec jl sub aas mov add aad push std push mov sub and adc popf dec mov cld add sub adc xchg jle roll into or jp imul mov mov (bad) mov and jge mov mov fisubr and pop nop (bad) mov mov fwait lock ljmp scas xor scas or test aas sti dec les sbb sub enter or adc push aad roll mov jae (bad) loopne jnp dec lock notl mov mov pop aam sbb ljmp xchg and adc in mov sub push push xchg jnp pop cltd lcall sub push in add push (bad) pop inc xchg dec xor (bad) (bad) sub mov jns movsb test mov popa test and pop out lods dec pop mov (bad) fbld jecxz mov sar mov mov jbe xor or cmp adc stc les add sub inc das push std nop sub adc pop aam mov sub jmp jmp js and decl insb sub dec pop leave jo mov out fsin icebp jae jge lahf fld sbb outsl inc sbb push mov js cltd aaa mov pop pop cli repnz out and sub xor cmp adc inc cmpsl dec (bad) or lds sahf pop inc mov insl inc data16 push or in push lcall mov xor mov shll stos cmp loop pop lods ds addb mov ds cmc jbe es inc test out idivb or xor sub dec sub and xor icebp nop bound dec add adc fsubr inc hlt enter push and nop sbb cld or dec aad xchg imul dec decb (bad) sub addr16 cli jp in ljmp hlt out mov test sbb sbb xor adc ja mov lds or in clc jmp mov or fbld jnp,pn inc rcll xor dec flds sub daa xor leave xchg idiv enter sub mov pushf in shl addr16 jp mov mov adc testl jmp xchg dec and xor push push push mov sbb push xor adc xchg adc sub mov pop mov dec jmp popf pop outsb repnz aam dec and xchg bound pusha fstl or cmpsl test cli sahf mov adc mov nop lods adc mov or and pop movsb mov or hlt xchg mov pop push mov jl inc add dec ljmp movsb mov xchg por pop xor xchg jg stos push add test cs cmp xor jmp rcrl dec setne mov and xchg outsl outsb or stos inc repnz popa mov fnstenv pop insb mov xchg cmp fcoms add std cs imull add mov mov movsl cmp jne mov icebp outsb pop add xor xchg push movsb imul push xor es push sbb fs popf arpl mov fcompl std test cltd loopne,pn leave mov or jge cmp mov add cli jle (bad) mov sub arpl pop jmp mov pop mov xor lcall stos fnstenv repnz dec test cmpsb xchg sub and pop repnz mov repz pop push push hlt orl cmc enter push mov lret sbb cld bound (bad) mov lahf pop jl sub mov test mov pusha leave mov mov pop enter cwtl inc jb or xchg nop rcr push adcl adc iret lcall add or add mov andl inc ficomp adc lock mov js test pop adc or add ror add pop test mov or cmpsb xchg xor mov imul sarl add add imul sahf fist or outsl rcll mov rcr (bad) dec push adc rolb lret enter sub dec push shlb and mov mov add lcall or es or inc lods sbb cld arpl gs shlb sbb cwtl and mov mov lret clc xchg dec sub sbb xor sub and call imul sahf cmp dec mov jecxz pop call mov mov inc subb insl adc add rcrl nop push int loopne test mov in repz addl push lahf cmp and stos xchg mov popf sbb dec xor sbb loopne or pop xor mov cmp jb adc dec ja add test scas and enter dec sub mov repnz (bad) sbb adcb xor bsf add inc jbe xchg mov repz mov rcrb insb adc push out lock out sub or push nop push add push hlt mov arpl psraw sub jbe into inc mov scas jnp les push subb out adc or adc xchg or adc dec cwtl xor adc gs xor and or test add imul (bad) or pop mov shlb aam aas add or push mov and add ret fimull xor insb int3 sub and jl sahf adc (bad) repz inc mov sbb or sub repz outsl ss sbb push rcrl xchg scas rorb push cmp nop cmp imul and test rolb mov add adc inc es adc inc sub cmc aam arpl iret add insl xchg xor insb adc gs add cmc jecxz loopne push adc enter ljmp lret cmp jns push dec or adc es sbb jae pusha xchg push xchg push mov mov sub jle nop mov fldl int3 push push add in dec int inc sub daa xchg pusha add lcall or push or ret leave outsl adc popa sbb rorl lahf fcmovnb sbb sub insl ret inc aad dec push add inc enter lret int3 shr jg sbb inc nop cmp fidivrl lret push dec add lock or and rcr in mov rcr inc orb adc dec loop call sub jecxz cmpb sbb dec push pusha nop (bad) or xchg inc lds xor add lods pop mov sbb lret hlt xor sub xor or test mov enter fstps mov add fsubl lods inc mov mov inc xchg rcll xchg and xorl pop push and lods arpl xlat pop inc push adc mov jae or sub jbe dec pop adc lcall adc mov int3 or mov cs adc lds pop int3 sbb adcb clc and test mov or rcll in jns push popa or push mov xchg stos mov or jp xor sbb in lahf mov test jbe nop fadd shll fistpl std xchg push in mov je cli pushf lret push jo pusha add pop outsb pop add and add mov loop loope inc cltd nop or shld (bad) nop xlat mov arpl pop rcr push add add pop jmp jecxz mov jo (bad) mov data16 rcll push add push or mov cmpsl xchg xor mov (bad) jo dec push inc (bad) lea les push mov xorl or inc add cmp cmpsl xchg shlb and adc or mov push pop and (bad) mov mov mov dec bound loopne lcall int mov cltd adc inc add and les aam lcall mov mov xchg add fucomi add xchg xor dec and pop jp in test xchg add push and mov cwtl or sub and sub pop sbb and push lret xchg pop push jne mov pop mov ror adc and movsb inc mov mov roll and enter dec pop inc or jnp push (bad) int3 adcl aas iret adc loopne sbb aam leave mov mov fsubrl add mov and or popl cld test mov jmp rolb sbb inc dec push in xor cs mov mov je (bad) ds dec add outsb test jp rcl or pusha hlt pop mov roll or mov inc lret int3 add inc push adc jae scas mov les push mov imul cmpsb push xor inc pop sbb add (bad) (bad) xchg nop mov pop adc jo xchg mov pop add (bad) mov add push mov mov cmp add je aaa outsl mov dec or dec xchg mov es loopne push push mov aaa arpl xchg nop clc adc pop or out sbb enter xchg or movl cmp sub push les andl xor je fiadd mov add (bad) inc dec lock es fwait lret push sarb add jo xchg push dec xchg ds xor dec imul sti icebp nop add adcb movl nop ja jo pop jns or or or int3 xorl je push cwtl aam xchg daa push cs (bad) outsb xor lahf pop push fmull adc icebp pop in and mov fcompl add jbe jnp add xchg push mov mov add adc fcoml inc int ss mov insb adcl xchg mov repnz sahf mov sub mov je sbb (bad) mov xor pusha or mov hlt test adc and imul cmp jo mov test mov jge lods pop add jb loop sbb lods sub jno xor mov and out lcall dec push pop (bad) std or dec cmp or les lea aam sub push add fldenv inc mov js adc daa gs in inc cmpsl rcl xor add jge fist lret and mov cmp pop sbb inc aam (bad) ds jae dec xchg mov and xor out lret out test gs stc lea and out nop xchg aam xchg mov mov loopne cs sub fcoms addl imul add fimull lret fsubl fmuls xchg jp add xor xor pop cli inc add loopne pop andb xor dec mov mov xor cmpsb sub push jl push arpl (bad) jge or inc sti dec stc daa and dec sub push int loopne pop outsl imul cld nop popa popf mov or stos xchg cmpl (bad) sbb add adc push and jl addb xor fcoms or cwtl lcall dec mov rorb das add inc out fcoml bound int mov pop sub push rcll cld stos mov inc push and dec sub aaa mov jmp adc pop add daa aas add (bad) fimul (bad) sub push (bad) or add xchg scas dec faddl jns add or fwait mov bound mov rorb cmpsb push inc adc notb jne test mov push push add lahf jno cmpsb add mov mov daa fisttp test or lock jo test je or loopne mov mov pushf cwtl js xor movsb push xchg mov xchg mov loope clc xchg and cmpb test sbb lock mov xor adc jmp or jl pop stmxcsr add xchg pop loopne ljmp mov stc hlt fsubrs add cmp mov jb pusha movsl inc adc dec out sub inc dec into inc test js pusha cli and mov scas jl sbb sub mov hlt jp add cwtl dec pop add fstpt push mov in adc sub rorb xor mov flds add test pop xor adc lods adc outsl cwtl lea mov add rcl add movsb fwait add and addr16 lcall arpl xor test sub jne xchg cwtl pop sbb inc mov es mov xchg mov add inc ja sub test scas mov orb mov aas add aam (bad) jmp (bad) fist je mov jmp pushf or mov sbb inc (bad) ss outsl sbb ja ja,pt pop arpl lret and aas adc inc scas inc into sbb cmp adc ljmp and inc je cmp inc insb adc rol scas add dec dec aad or fs cmp mov mov add sub cmp sub out mov cmp adc dec insl add sub sub inc jo in loope sub scas mov fs add xor pop add fadd pop xor jns insl in sub test out rolb cmp loopne mov xor inc mov mov hlt cmp inc or pop pop or jno in lods and xchg pop mov and or push jmp pop int3 or sarl jecxz popa add movsb cli orb push and cltd and cwtl (bad) xor add ja xchg fsubp sbb icebp test adc leave das adc adc sbb or rcr dec (bad) or inc add test add or dec inc sub adc je dec mov std leave push sbb rorl repz adc push loope out pop inc wrmsr mov adc sub out cmp add sbb sub cwtl aam mov add popa xchg sti insb aad rcll aad sbb mov cld mov xchg dec push pop push jns mov pusha or icebp ss add dec mov mov insl mov sbb lahf ljmp and xor in sar pop add sarb clc fstps add lock sbb mov sarb cmp xor stos aas mov xchg inc bound (bad) cmp dec jl xchg xor std add mov incb adc sub inc jno mov jo mov (bad) in adc push add pop das pop inc in pop sub or xor sbb sub mov cld movsb push dec or sub cmpsl adc sbb mov jmp dec daa push adc and or addb mov inc add mov pop (bad) in les sub xchg aas mov mov add cwtl inc xor dec dec add (bad) mov sarb or or sbb and mov push mov es pop aad shlb js dec add jnp push loope sbb scas add in pop adc in into test sbb rclb inc inc nop add inc xchg push mov or push sub mov and xchg or or dec loopne mov aas sti (bad) mov fs sbb sbb pop aas mov bound lods mov adc es lds lods dec lret inc dec push sub push fdivl and sub nop jl add lret mul pop sub je jns or test sarb push pusha xor mov mov cmp sub je pop and sub adc sub adc loope xchg cmp cwtl sbb jge and push dec sub loope je in fldenv mov loopne push add and popa jp pop adc mov push roll mov (bad) cltd add mov inc movsl fstl mov sbb and in add mov pop loop add das in and add cmp add fldenv cmp enter enter or rcrb add xchg insb popa lods pop int3 loopne push xchg dec adc jo stc movsb or subl add dec adc xchg cmp mov fs lcall test sbb js in push inc movsb shrb lods and add and jnp cmc cmp sub xor add loop (bad) imul (bad) sub adc add jl dec lock add and add push cmpsb push sub mov mov dec lcall leave xchg push add mov pop add cmp push ret les aam xchg outsb push mov (bad) sub add pop mov stos mov (bad) lock and jge pop icebp sub test rorb cmp or leave jl sbb nop nop cs out rorb je int test push dec mov sbb sbb sub cli imul pushf mov out cwtl js pusha call cli inc test mov add xchg push js cmp add mov in or jb fbstp dec sub fs ja inc cmpsl xchg mov cmp mov mov adc ret aas lcall or cli mov adc cmpsl in fstpt jns in rclb cwtl and ret push jmp in add dec dec xchg roll iret jnp inc pop jb add scas std or lcall adc inc into jecxz mov loop in imul insb adc add test pop mov cmp or pop clc arpl lock test (bad) adc add sub pop test pop xchg hlt adc test sub cmpl xchg ret add mov std dec (bad) or push and scas int loope fs sub and ret adc (bad) jl xchg ret jl daa jo adc push mov and int3 out xor cmp mov ret xor add in inc sbb outsl cmc add cwtl clc sbb pusha add stos into (bad) inc shrl add cld cli fcompl js and sub add imul jnp lcall push or lods leave add pusha jnp sub sub inc inc js out or xor pop cmp stos sub pushf mov and and jns cmpsb cld sub in dec (bad) xor ja xchg adc jbe mov cmp out dec fldl shl lea hlt mov je pop mov and or jae int3 sub cli mov insb nop adc and (bad) mov in or push sub loop add xor inc and fist andl mov sbb add jmp cmpsb and jnp pop jp icebp outsl or jb add mov insb icebp in xor add and push mov ret sub cwtl lods sub ficoml call and scas scas jne dec inc inc nop add out or dec add mov jmp cmp pop insl fstl clc push push cmp in mov lcall jns lock lcall or rorb ret and sub mov dec cmp (bad) icebp fcom lret in mov fmuls jb jnp add add aad cld loopne (bad) pop repnz mov xor mov push addb mov add sahf push dec mov mov xchg jg xor aad test ret pop cmp sbb or add mov push sub add push lcall cmp jmp add push stc jnp cli int3 inc mov and push movsb outsl and daa imul push adcl and xchg cmp ljmp sub push fstps dec adc push and outsl rorb fucom sub mov or rcll aaa push rol inc and add pop cmc and cs pop lods mov cmp and xchg mov add (bad) cs nop mov or pusha je or shll sub cmp js mov mov mov shr and int sbbb in xchg scas add sbb cmp fucom pop push mov push das out jecxz push xor xchg or pushf rorb pop btc push or (bad) sub shlb (bad) jecxz cmp xchg pushf jmp and cli ss gs inc rorb nop and add mov add cli in or pop push sahf bound repnz xchg lret aad sbbb fcoms adcl hlt inc push or mov adc lods mov add ja test xlat add mov js pusha sbb cli cmp adcl or mov out pop nop nop xchg add mov mov mov shrb loope and push lret inc pushf inc cli into cltd push or aas test add scas mov pop stos jge rorl cmp push (bad) ja in pusha cmp rorl cld sbb or cmp jl fistpl in in push mov je add mov rorb sbb repz adc push test mov js mov dec cltd clc sub nop enter pop xor or cwtl out movb aad shl dec and cmp out pop stos jns bound loopne or cmove movsb out js sub sbb sub inc sbb test jbe out mov mov into adc push popl inc mov sub sub js cltd push xchg inc cmp xor add push fs mov mov push xor cmc dec and mov mov popa repnz in pop xor xor or int3 clc hlt add es xchg les das popf add nop hlt jb pusha popf std push aaa push sbb jne add or pop lahf shrb add xchg xchg outsl mov fsubrl mov testl decb ja add scas sbb cmp push out aaa push in xchg xchg pop inc or (bad) call add mov cmp mov fldl insl test mov adc call (bad) int3 imul loopne inc jo jnp push (bad) xchg and xor test add pop mov add dec xchg aam cmp jne xchg cmp adc or mov add in push out int stos jge sub pusha clc aad rolb out in dec shlb dec sub (bad) cli inc push cwtl enter in xchg push pop pusha xchg mov lcall inc lret and fwait adc stos add int3 mov sub in out test test mov daa adc call inc cli push xchg test mov cmp mov movsl fcomps mov cmp test sbbl mov sub and loope pop mov daa jne stos jg mov pop into push (bad) int3 scas add movsl or loopne popa xor repnz (bad) roll mov sbb test outsl adc add insb addl paddsw add xor jb shll and rcrb push shrb dec cld std pusha iret mov jl pop add scas adc pop mov push push cmpsb xchg add (bad) (bad) mov addl pop xor test jns sub sbb xor inc inc lods inc xor add rolb or add mov sarb pop push xor (bad) xor jge addr16 inc aaa inc leave adc test sbb cmc rcrb or push rolb jns adc sbb cmp mov add arpl orb mov push inc test add scas pop push inc or add xchg jnp test add and bndstx ffree mov inc test adc and xor ljmp mov adc push cwtl adc test sbb roll data16 imul out mov inc inc fisttpll imul pop or add cmc pusha adc sbb fdivrl inc shll cltd adc rorb test std push cmpsl (bad) xor and test (bad) shlb jno in loopne mov (bad) fmull xor or (bad) (bad) mov nop fs arpl sbb sub (bad) into add pop mov mov xchg js add xor sub mov cwtl fstl das adc or dec adc movsb and ss pushf push and mov lods pusha cmp pop dec test mov stc push lods sbb fist mov (bad) imull xchg enter enter roll push mov pop add mov rorb (bad) sbb rorl jne mov sti push xor push cmp or add lret pop mov inc adc arpl jnp add xchg stc add scas pop in lock int3 sub ss cltd adc ficompl sub dec sub mulb ret xchg vprotd shll or or mov hlt (bad) shr pop stos (bad) aas jne repnz outsb data16 xchg nop (bad) fistp mov dec les mov sub in dec or pop xchg push xor ret xor xor xor pusha inc mov add aas enter cmpsl sub xchg inc or adc lret dec sbb adc mov rolb adc out and push mov out dec lock pop test add cs and fsubs mov mov adc cmp sbb or push (bad) fcompl scas into gs les shlb test push in adc xchg adc add int fsubrl pop or xor sub add sub test add ljmp pop xor xor adc pop xor lret push movsb jbe imul gs outsb mov mov sbb push je or and jo sub mov adc lret repz nop pop xor pop xchg pusha push push mov dec mov xchg scas sbb xor and jle outsb andl cmc (bad) cltd adc pop adc xor and cld je pop add sub lock outsb xchg test add adc adc loope cmpsb jno xor and push or pop fadds xor adc mov leave or or add rcr push inc xor ja stc pushf lret cs mov pop and (bad) mov sub mov (bad) ljmp xchg adc pop je push icebp dec adc int3 imul js mov push or loope and add mov out sbb dec outsb or mov and insb faddl std add cs cmp cmp jae std loopne sub push pop dec push add loopne jo mov jb repz and adc cmp lahf pop dec clc or lret jbe sbb cmp cmp or push andb sbb push adc je test mov xor and std dec inc shlb xor outsl adc xor shlb sbb adc dec fs movsb or pushf test xor xchg lods in popa shrb and mov inc jne xchg inc jl mov test sbb test rclb sarl out mov (bad) mov mov xchg js cltd aam pop push into jb mov xor dec mov cwtl (bad) out jns jmp xchg enter imul imul or cwtl je mov or and sbb movsl sbb pop add leave test (bad) lcall int mov add inc push fst test ljmp dec inc xchg pop add or outsb xor mov leave fwait mov mov inc cmp or imul sbb incl push xlat xor xor fs rcrl std outsb iret push xor and cmp sub pushf iret or enter jb out adc xor cs push sub lock sbb pop mov hlt inc xor xor pop xchg mov inc int3 or rclb push and xor push sbb ret pop fmull (bad) xor outsb adc addr16 inc push cmp push enter push rolb sub or inc adc lahf lahf pop lock push or out fcoml std je dec outsb or mov nop jl xor adc cmp adc cmc adc xchg fildll jge and push lods ss movsb rcrb mov stos test add nop test int3 or mov xor mov add jno pusha clc loop cmp das or mov add sbb es jo pop les adc movsb ljmp fwait ror call mov jns sub sub xor push leave jo sbb clc out dec lods es test enter xchg adc sbb mov push dec call fidiv sbb aad push xor aam jge fiaddl inc jne cltd push clc test cmp cmpeqps adc add sbb rolb inc lods cs fstl xchg adc sbb cwtl rcrl test inc mov push arpl push js ljmp lock inc ds xor jo adc mov aaa jne add fs pop xor fs fsubs test push sub stos xchg adcb jge mov dec or rolb sbb in enter mov xor imulb adc mov add ja mov mov call popf sbb and inc addr16 lock dec popa and enter aam loopne inc rcll xchg test stc dec test jnp or leave fisttpll sbb movsb repnz fs dec mov shlb xor loope lock cltd lcall cwtl incl adc cmp sub fucomp mov movsb adc stc cmp adc int jno or sbb dec stc subb cld inc fsubr fcompl pop pop aaa pop add add loop xor jbe sub rcr popf pop lock in jle xor dec insl pop or sub stc testl push sub insb cmp adc lahf inc push adcb jmp add sahf jge jl sub imul shlb mov pusha add sub in pop pusha cmpsl xor lods inc adc pusha or push (bad) jb adc adc mov mov mov inc adcb mov push test rorb mov mov mov (bad) ljmp push pop push aam xchg add push and dec test add divb stos dec mov andl pop pop sbb or sbb and repnz repz add mov je adc or add inc mov sbb and fiadd mov dec xor cmova add scas leave mov pop lods push dec pusha cmc sub fistpl aad je push cwtl js or lret or aas mov arpl nop mov clc rclb inc or pop call in hlt je addr16 jns xchg addl sub (bad) vpsubusb xor ret push iret add pop dec sub or hlt in test (bad) into cltd add fstpl add dec xchg (bad) (bad) in loop jo xor push cmpsb pop icebp adc test push adc loop inc pusha dec adc push pop sahf cltd insl nop add and jb ret mov es add loop int mov mov jl mov movsb mov shrl (bad) roll inc sbb push mov fcoml mov aad add dec lods pop rorb sub fcoms cmc pop cmp aam or adc fwait and shll xchg dec hlt push inc dec inc cmp (bad) mov pusha xchg hlt or jmp mov push std loope adc jno lea push jg add xor js mov dec repnz es lock xor loop inc add hlt into iret xchg (bad) sbb ljmp xchg lds add cwtl jle or xchg xchg xchg stc (bad) ss icebp sub or scas cmp mov dec test mov hlt xor cmp pop push icebp sbb mov into and add popa sub cwtl sub loopne mov jp pop mov pop inc adcl out inc mov mov mov mov add rcrb pusha je movsb xorb ja fildll lds and inc pusha push cmp push daa fnstcw cmp rcrl out scas movsb stos dec add mov xorb aad xor rolb cltd insb lahf fwait cs sub xor std add xchg gs and dec pusha mov orl xor jmp xchg cmp pop inc outsl xchg sbb imul sbb sub dec fdiv or and dec or enter outsl sub push pusha or push mov mov pop cwtl push add cli leave (bad) jae cmp test inc inc sarl xor sbb adc jmp push xchg inc aaa push ljmp daa popf cmp jo mov add addr16 push or dec movsb jo aaa pop pop or imul mov jne (bad) cltd les fisttp jl lcall pop stos mov int3 or arpl mov cmpsl out xor jmp sub xor enter push jecxz cs xor sti add push lret inc add dec idivb or mov call (bad) icebp pusha sub loop mov sbbl mov clc popf frstor ja cmp cmp outsl mov es adc outsb pop mov mov xor push mul sbb push cs add cmpsl cmp add sbb xor xor mov mov aam push lea data16 addb add sbb or iret sarl adcb jge push clc addb enter das adc fs add mov and stos movsb pop sbb jns inc jb push aam jno jns lret sub sbbb fnstcw jb (bad) ret out cwtl insl inc addl pop lock fnstcw inc (bad) pusha mov ljmp add xchg add gs je cmp fnsave sbb sbb clc pop jge int3 mov inc adc test jecxz pop cmp mov jl xchg (bad) xchg jmp jne (bad) cmp xor sbb sbb mov cmpl add pop out add xlat bound scas roll sbb and repnz or cmpsl leave adc aaa icebp sti nop add adc xchg jae xchg cmp xor mov sbb jb ja mov mov iret hlt sub lds add mov sub add cmpsb push loopne push jb jo mov adc mov hlt adc leave stos or push fsubrs das insb roll sbbb jo loopne mov add sar imul sbb cs sub push in adc adcb lods or and arpl sub mov xchg xchg and fs pop sub adc scas push out add fnop adcl fstps shlb rcr xlat dec cld xor push xchg sub dec sub inc shlb ss pop mov pop rolb sub adc rolb iret std jl or (bad) gs shl xchg jo mov jo cld insl bound je imul and push clc adc pop xchg or out sub sub inc adc xlat xor ss repnz add xor dec jl loope sub gs xor sbb push sbb fisubrl out xchg aad adc adc push and adc je out jnp lret mov sbb xchg js inc mov sbb data16 jns pop xchg int3 mov mov fstps cmp inc jo adc dec cwtl mov gs mov insb sub xor dec lock pop dec addl (bad) jno add bound dec pop call lret jle mov mov mov aad dec mov mov lds jne mov faddl or sbb icebp sbb fnstsw sub dec and rcl cmc dec cmp aas pop inc out loop add sub gs sub nop inc mov mov stos fcmovb cmpsb mov add mov push loop mov jp jno dec mov add ds push adc add pop sub inc add ss cmp cs add in test adc repz mov loopne test addl mov or jmp push fs and sar test (bad) pop and shlb pop mul inc int and xlat repz nop je jo inc out jb les push inc and inc adc add aad adc push sbb push cmp lock sbb ds mov jb (bad) push or jge add cmp cwtl xor sub decl data16 lock add aaa mov loop jo loopne sub fmuls dec nop aas (bad) pop hlt (bad) mov cwtl jmp sbb xchg inc lret pusha mov mov jl add pop pop and sbb add or lock iret loop xor test inc pop add mov push mov add xchg cltd inc in lock add sti sbb inc xchg call push add inc test pop out hlt (bad) jno loope add jmp mov mov inc es pop bound sub mov jns and add lods cs xor ror mov lods add pop sahf (bad) nop lods add mov fs and leave push jno xchg inc dec lock pop lods insb or aam cmp and pop mov xor mov movsb insb lods stc sbb aad sbb xor jl add test push mov xchg cwtl sub ljmp test imul jp mov and dec add (bad) ja js sbb pop mov cwtl stc aad jbe hlt adc jnp xchg mov mov xorl push aas and inc pop sub (bad) nop sub mov cmpl movsb (bad) int hlt cmp out pop xchg in cmp imul jecxz push ret (bad) xor dec mov adc fwait xor mov mov ja arpl push xchg pushf add cmpsl or xor sbb ja jp adc inc hlt cwtl js add out jp inc aas xor jge add insl lret notl add push jge sarb push in mov fsubrs jecxz fs test mov sbb sub (bad) test enter mov xor xchg and dec cwtl (bad) sbb sub add cmp cmp not in cs pop pop or imul mov gs pop push aad (bad) sub dec loop popa lret xor (bad) mov mov dec enter lret lahf sbb add adc (bad) js cs popa xor ret pop xchg in lret xor sar call inc in insb lea subb stc mov jo push adc jne xor jbe adc adc in and faddl inc jns pusha mov orl push movsb rcrb push add jbe push scas loop hlt xchg lock mov xchg pusha aas push mov rclb aam fsubrs mov xorb jg cmp mov dec pushf loopne mov xor push add lods cwtl loop hlt ja and js adc je and mov push xchg dec xchg call adc inc inc jg push inc mov imul std das inc add push idivl sub and test pop ja cwtl mov xorb imull lods fnsave test xchg (bad) mov pop mov mov inc cltd insb add stc adc add sbb rcrl nop loope push stos idivl sub cmp or push ljmp jbe mov pusha loope jecxz or aas movsb jo push push jo pusha insb xor adc imul je rolb jne sub cmpsl into add inc (bad) bound cmp inc (bad) mov inc je leave add fs xor test pusha lret xorl adc ret dec in pop popf icebp rolb ffreep orb ret or xchg sub sub mov mov sbb rolb fs push out loop idivb push add mov iret xor sbb xchg test repz lret insb jnp jno shll jmp data16 lret dec movsb jmp xor sbb sbb inc arpl adc loopne enter pop pop xchg scas sub dec adc fmull pop call movsl inc adc push sub or dec clc xor jnp jle scas sub (bad) out or movsb jecxz je or movb mov xchg call mov lods roll in and mov (bad) adc adc mov adc and pop push inc adc pop xchg sti dec cmp bound cmp scas add mov pushf lock sub cmp call adc xor dec and loope pop pop es adc mov sub and add add data16 pusha mov sbb popl popa sub cmp add inc inc cmp scas imul push sub rcrl test mov imul sub rcll add dec jnp mov ja sbb jns sbbb in mov pop jmp les lgs sub out pusha push int3 pop cmp sti adc mov (bad) out dec adc push push add movsl mov cmp or mov xchg in inc add and daa mov add mov fistpll das mov inc loop pop xlat flds push (bad) out enter clc fnsave dec or and mov lock (bad) xchg add andb aad sbb jle sti (bad) jo rcrb rorb add pusha or mov pop cwtl lods bound rolb sbb fmuls pusha mov and mov add dec pop movsl or mov insb xchg scas lea test dec or mov mov cli jp or popa pusha sbb js mov inc loope jl insb sub mov dec inc sbb jno leave push les sti mov lcall xchg stc aaa cld fmull xor adc rcpps push js push xchg aam rsm iret and shl cmp js push jmp aas push cmpsl or fidiv adc bnd adc pushf addr16 or xor mov les add outsb sub daa fmulp vpsubd fisubl test jbe xchg adc cmpsb push inc pop add sti jo in cmp or sub inc xchg xor jp pop mov mov dec out sbbb inc adc sub push test arpl rcrb adc push mov sbb inc repnz xchg (bad) push cltd adc addl shr scas pusha add leave push xchg add sub mov sbb ret insl pop inc int3 int3 mov in movsb pop push jp jne iret sub fisubrl hlt pop aas repnz fs shrb sub sub fcmovb dec sub sub js and jbe enter fistp jp cmp (bad) mov sub lahf rclb xor xor inc xchg add xor test sub xorb sbb push sub cs (bad) aam repnz lcall lock add push loope bound cmp push pop pushf cld jae jg pushf lock test dec push in dec dec pop sbb lret shrb inc inc sahf fcompl mov aaa push movsl or (bad) je call js pop sub (bad) jo pop push sbb xchg inc fadds hlt mov add sbb xchg (bad) fnstsw add pop fmuls leave inc add add shrb mov pop adc inc cmp sub cmpsl fs sub fimul aam notl scas sbb xchg push pop addl movsl pop push xor fild lods mov cmpsl jae add repnz sahf xor adc in cmp sub cmp inc int3 popf or mov pop inc sbb icebp aam out or fwait pop fs (bad) rcrb add xor xchg data16 push faddl hlt insl dec inc fmul push add push xor pop cli mov sbb popa adc popf add (bad) mov inc mov sbb add mov adc sub mov sbb add jmp pop fwait inc js mov or out pop push lock data16 sbbb push adc aam dec add xchg mov orl ret push call shrl jl jno loopne and xor cmp pop ds add fist mov or in aam ror pop cs fcompl add mov mov je push bound data16 and jmp call and xchg xor out jns mov pop sbb sbb mov push inc pop adc (bad) and (bad) lods shr ret sbb fdivs or adc pop je (bad) xchg add dec not pop adc cs loope xchg repz jo mov es push lock hlt rcr enter cwtl adc or pop test int3 lods pop pop push jle je or adc add (bad) lret jns xor sbb arpl and and push adc jp pop cld dec adc adc lods out adc push or xchg adc pop pop andb jp clc dec maxps fistpl in testl lods mov clc (bad) xchg cmp test pop push xchg pop mov icebp inc lcall int3 jae mov notl test enter daa and cmp cmc xchg pop mov loope iret mov test pop fs pop mov cmp (bad) pop fxch sub addr16 sub (bad) lret mov cmpsl mov sahf faddp cmp add mov push jo pusha mov cmp xlat jb lret rol dec mov pop in and cmp nop ja jbe add nop (bad) js dec stc adcl inc and mov dec cmc jg add ds add pop adc andl sti js mov fdivs cmpsl push jb xchg sbb mov sbb adcl xor jl les mov adc sub xor push lret mov sub jl sub bound pusha int mov add mov pop jo add push mov cs xor test xor xor insb nop cmpb scas movsb and pop pusha lock movsl dec jns xor test add out lcall hlt pop je jae stos or mov jne add pusha jmp inc nop jp mov or jo lret add inc addr16 call and mov imul push fcomp add xor mov jmp sub fwait add popa adc mov add jmp pop sarb xor adc test adc sbb xor mov sbb inc mov pop fwait mov imul mov add sarb sub inc inc nop add sbb mov xor in insb mov adc push cmp leave lcall push mov int shll sub adc int push inc nopl add or sti mov into push dec fs pop mov js add cmp sub pop inc sbb jno sub and pop sbb sub lock cli aas add popf out test cld mov inc pop aaa in cltd test iret stos cmp cld sbb (bad) cli sub push hlt adc pop sbb push popa jl mov test xchg mov rcrl push adc (bad) lcall test pop iret js fs push in loopne js out push fs ss xor add adc outsb loopne out pop push mov mov (bad) add ljmp pop mov fisub cltd dec mov and jb pop or mov jo repz test add dec lock push lds mov push (bad) jo xchg dec aaa xchg mov push les subb dec dec mov aam lret outsb add inc add cmp orl sub loope push mov pop xor cmp ljmp or cmc jge outsb cmp sbb imull dec lods xor daa insb pusha sub jns dec leave pop cwtl (bad) add test adc jo push or test jp add push pop sahf les add inc push xor mov mov or mov in adc fucomip mov add icebp and (bad) inc push push lcall sub and repnz cmp push and jns fdivrl mov rorb adc sub movsb push ficom and out push sub test (bad) cmp inc sarb mulb xchg aaa inc mov lret push jle pusha out (bad) and fimul push dec and xchg scas and mov lods or adc mov inc ss or or aad stc call dec je push ret xchg inc ret mov repnz cwtl dec lahf mov rolb or dec pop inc mov xchg orb (bad) je xchg inc and xchg insb jb sbb ret xor outsl sub sahf jne ret popf outsb adc xchg dec pop test jmp cltd (bad) pop cmpsb je cmp mov add or adc jne adc iret add das push scas roll or loope cmp or (bad) push and sbb xchg rolb mov ud2 ja mov inc xor rcl add call sbb xor push dec fsubrl nop cmp ret add roll push and inc (bad) pop rorb or lret and inc sbb adc xchg push push lods xor adc addr16 pusha mov bound inc cs pop test scas adc push and xor adc stos rcrl jno cld xor fdivr (bad) clc call cltd arpl sbb or test jmp sbb adc adc inc pushf negl sbb ds inc sbb ffree lret call test and pop inc pop cmp xchg fcoms notl cmp or mov dec leave and inc xor sbb xor stos dec pop push mov or jbe lret ljmp jle add push xor dec sub movsb mov jo add xor sbb adc shlb dec mov sbb std addr16 clc out push push lret pushf pusha aas enter jno in adc lock push std fs imul pusha jl and orl push cmp mov jl xlat cmc pusha add outsl sbbb pop cltd lea xchg out add mov pusha sub data16 lock leave jo dec xchg add cmpsl mov pusha add mov stos test sbbb cmp add and lds mov cmpsl jns mov cltd and or (bad) and lods xor xor and inc add test into sbb xor sbb pop cltd sbb aaa cmp push loopne and clc inc and pusha jo or xor scas inc push add call jo inc je ffree and mov mov dec sbb (bad) mov rolb aaa jbe,pn sub and aad loopne add lret fstl sbb dec ret adcl (bad) or cmpsb mov mov (bad) fs rclb out mov cltd mov adc test in pop loopne dec out clc add ja outsl ds fs stos cwtl je cmp rorl add dec sub cmp mov pop mov int (bad) hlt enter lds sub xor nop cmp xchg mov push mov adcb pop or std enter add or leave mov and sub xor adc hlt and pop mov je dec pushf pusha push adc in std or sbb shrb xchg sbbb push test cmp jno and sti inc push or inc pop es cmp xchg add mov sbb push xor cltd add (bad) lret out jg jl add add lcall and dec add nop sub xchg cmp pop inc inc outsl cwtl xchg je push jo or mov xor and in pop nop cmp out aaa lret push test shll mov rolb pop daa mov inc cmp and (bad) je push inc repnz popa ret scas lret in pusha in fcomps jns lods pop call je sub sarb pop lods call fucomp xorl sub mov ljmp adc int3 and add stos mov clc lret and pop fs icebp (bad) inc popf outsl data16 dec or pop push and jns aas enter imul rolb call mov test dec loopne pusha popf jns rol das add cwtl lock shr pop test (bad) out sub dec outsb aad inc cwtl stc push rol mov test jns or xor adc and jmp sub fs add cmp dec mov cmpsb das cld mov rcr cmp mov add add leave lods imul and adc in insb ss cmp aas loopne (bad) outsl sbb js pop and pop jl mov inc int3 mov add out orb sub add enter int3 les cmpsl call fs xchg fsubl mov shr sub rclb and xchg ds sub test inc test xor push stc std jae or dec loopne dec pop lea push pop sub xor loope adc push mov mov and (bad) adc in add add fnstcw jle outsb dec dec and ljmp rolb fistpl (bad) add xor sarb xchg pop jbe add aam decl je add xchg loop repz cmc add loope ljmp sub es pop in inc in repz or int cmpsl xchg andl cmp rcl cld add fs ficomp arpl lahf (bad) dec movsl rolb int3 repnz and addr16 out shrl enter cs xchg bound out dec pusha push sub in xor mov adc insb xor add jno rol sarl and push add mov xlat cwtl sub add mov cmc push clc adc or sbb cwtl sbb and xor fadd xorb incl pop ja rclb testl mov xor or rorl or inc mulb into sbb lea fsubrl and in cwtl lock rep add mov (bad) add or push mov inc and xor scas mov ds data16 hlt or sbb push cld dec xor pop imul fnstsw mov fild push js sub cmp ret bnd jecxz cmp cmpsl ds mov sub pop sbb dec xchg lock add call and rorl push insb lds pop jnp adc jg andb or xchg or cmp mov cs jo fldl sti or movsl hlt stos (bad) inc (bad) xorb dec jns hlt jno int outsl sbb inc pusha sbb cmp jg push ss fnsave mov push add mov les jecxz sets jb and dec cmp pusha int inc pusha cmc xchg ficoml mov (bad) mov enter adc or sbb adc lahf (bad) mov mov or enter mov pusha xchg and push or shrb push add daa sub jmp jns xlat xchg inc cmp or mov rorl sub add dec push mov xor xor jae ret add cltd push les pop cmc sbb fsubl and cwtl lock emms out jns sbb daa sbb inc sub aad sub cmpsl nop mov lret cmp call jg xor fs inc mov adcb add sub std pushf add add scas js adc push iret (bad) sub lret das pushf inc testl push jl mov ljmp lcall jl fsubl or pop xor fsub cmp dec rcrb jo xor add add shlb movsb mov jno add fs sub cmp in sarb ljmp rclb sbb or stc xor sub jl lods push xor mov lcall cld add into out fiaddl mov add fnstsw int3 and test mov jo mov out cld test or pop adc dec dec inc add inc dec mov mov js jo test adc add push inc adc mov fs aam xor negb les pusha and movsl push gs pop xor sub repz dec sbb cmp sub test push push xchg fisttp jnp mov xor push cwtl sub iret mov or icebp sbb insb (bad) cmc jg lods pop or add adc enter sbb push dec loopne aaa xchg scas mov fildll adc add out push and dec cwtl push lahf fdivrl ret mov test pop xor fdivrl inc aaa jl ret push xor adc sub add and xor push enter jno test sarb add stc add dec les add or leave movsl push rorl mov fs enter divl mov xchg das mov push add or cltd mov clc cmc shlb cmpsl std jge cmp lds mov addb and xlat adc cmc (bad) test xchg or xchg roll mov sbb aam push push jns add or nop aam insb mov imul imul (bad) mov add pushf push sarl mov data16 in outsl inc add outsb dec xor call (bad) mov push adc es xchg pusha ret or fs cmpsl pop (bad) cmp add jge aas hlt mov fbstp mov and and mov faddl mov rol xor jae rcll mov pop adc add das lcall jmp xor push add stos shlb and fildll dec push adc nop cmp notb cmp pushf lds add push mov cmpsl xor inc test leave cmp out xor shl sti cwtl mov lock jle xchg adc and and adc sub std and dec loope in pop in das (bad) cmc nop nop jge loopne or rolb loop or dec outsl rcl test pop adc mov pop mov sbb xor cld test and sar arpl adc fcmove jo or fsubs lea jle in movsl lahf xor cmp jae push sbb (bad) or sub xor push stos push sahf add daa adc mov cs xor sbb dec push icebp xor add jp pushf in cmp mov fidivr xchg mov movl mov gs sub test adc in jbe jge and pop popa loope or clc dec iret jo subb inc sbb xchg add (bad) std divl xchg add pusha inc je cld mov call stos out shrl xchg mov movsb xchg sbb pop mov pop mov mov bound or inc fcoms fwait xor pusha dec and sarl imul mov pushf cmpsb call int3 cmc sbb fs call sbb inc rcrb subb into xor clc cwtl negl push and jp adc adc nop fdivr ds push lock sub push ljmp xorl cwtl mov add sbb loopne jns fnstsw push je inc mov inc addl sbb cmp xor (bad) xor scas adc hlt push add sbb clc ret cmp jmp adcb jl add jae pop cmp pop push sarb sbb jmp outsl popa push mov imul add xchg cs adc mov jp and or ret xor push sbb add pop mov pushf enter sub pop jmp inc lahf cltd in les or out cmp rcrb push and shlb mov fs iret bt pop cmp hlt fsub pop enter xor (bad) cld mov inc mov sbb les cmc push pop add imul dec cmp push cwtl pop pop (bad) into xchg rclb add pop add sbb mov pop ljmp aad sub cli shrb cmp push and xor loopne inc test (bad) bound sub aam and add into jne mov inc pop fidivl jb sbb cmp push add xchg mov jnp cmpsb pop (bad) mov push cmp fstpt sarb xor data16 or jle add mov sub stc jae jne in adc ret sbb add in xor insl int3 loope adc xor or dec or adc stos sbb inc lds (bad) bswap xchg stos fs sub in xchg sub pop (bad) xchg push mov mov mov popa jb adc inc data16 je adc inc movsb or mov cmp (bad) out orl (bad) sbb mov xchg ret mov jne cmpsl int gs xor xchg (bad) mov rolb int3 or (bad) jecxz mov mov (bad) int pop sbb xlat add jbe dec jl or jne cmpsb sarb sbb jno pop inc xor mov and push mov cld sti inc push sub sub hlt mov dec adc or sahf jle dec sbb cmp int3 rcl add inc lods pop add lods jae mov arpl sbb or clc int xor negl jbe rorb pop int3 pop add jns roll or adc dec mov shrb repz loop push jl rcrb insb popa stc lret sub and fstps fistl mov inc hlt ret mov aad mov xchg pop rcrl mov sbb pop xchg fcoml and jl fsubr mov and cmc mov cmp lock xor insl xor dec in pop das add pop enter in scas add xor andl add imul in jno enter out out hlt (bad) gs and add pop dec stc inc aam scas xchg add add lahf mov mov fs cwtl jmp or je sbb sub or es xorb mov leave cmp add inc mov pop sbb sbb mov call pop push arpl mov xor mov sub ret sbb mov cmp inc add std je sbb mov das rcrl mov fsubl lea rcrb add stos inc push nop mov es aaa cmp daa xor nop lods dec jns fisttp stc or gs xor fsubrs add xor pop lods push adc stos lea push loope jmp rcrb cwtl and cmp hlt xchg push ret jge test add adc and adc fstpt inc pop push (bad) dec lcall in mov adc push andl add sahf sub sbb cltd lods adc fdivl jb add out xchg rsm aas nop ret jl jl add or pop add ret xor out inc lret aas adcl add test sub bound nop rolb jg xchg cmp mov insb aad fisttpll imul pop test sub add mov mov push (bad) inc lds jecxz xor data16 push add int icebp testl rolb add cmp push cmpsb call fdivrl mov (bad) add (bad) mov rcrl push les sub mov or in sub xchg xor movsb sub cltd dec pop andb fnstcw outsl sbb sub mov mov pop or iret xchg int ja mov aaa pop mov cmc cmpsb sub add or sub test and xor inc jl sub inc jae push int3 pop imul (bad) out mov addl xor jge mov pop mov mov cmp push add cmp enter add (bad) inc jne jo xchg es faddl sub xchg inc cmp adc pop push push mov js aam cltd inc je movb cmp aam push cmp dec loopne adc mov sub pop cmp incb sbb imul ret icebp and adc adc push or (bad) dec call lret add stc insl sbb pop es pusha sahf jns mov add movl add xor xchg jae sub cli dec clc out pop sbb xor (bad) mov mov sbb xchg push rolb dec pop (bad) icebp mov cmp nop aam inc add xchg fsubr cmc das jae mov stos nop push or pop idivl sub lret xchg mov ret jnp push fdivrp ss stc ljmp and ret ss xor add mov inc call rcrb or jecxz les sbb jno iret add in xchg fdivrl inc add stc in xor add nop lock xchg movsb adc das lret jge xor xchg sub into movsb and lods add and inc movsl sub sbb inc ja clc sbb test mov add data16 xor addr16 mov rclb mov js,pt in or mov adc dec ljmp pop call xor test add fisubr lcall jne cltd mov mov or nop rolb add xchg ret sub xor jge,pt xchg push xor jl repz and negb popa rcll xor sub pop add lods lret pop test into les pusha adc add pop cmpsl lcall pop xor add pop popa cs adc adc and dec add add pop adc cli xlat pop inc sub xor fcom jl call aam pop lret sub jne mov inc jae or cmp xorb cs add outsl int3 and mov mov jp test mov sub adc push rolb hlt jae in add rorl push xor roll add lock mov test dec ss and mov iret adc aas xor add mov (bad) xor in fistp add stos fs adc adc fadds dec jl add das cwtl cwtl rorb xchg subl out mov movsb mov add sbb ret or icebp inc lret std add sub adc xor xchg mov push shlb mov test js mov mov mov xor enter mov add sub ja and or inc lea push enter cmpsl clc (bad) xor subb mulb ret mov push hlt das sub inc push adc mov and (bad) push mov pop iret mov or call int inc add add scas fsincos dec icebp xchg add cld hlt pop pushw dec popa sub add movsl in add sbb mov inc insb pusha out jns xchg or iret mov int3 jne dec les ja jecxz fdivs mov loope push mov data16 fadds and cmp arpl imul mov shrl sbb jg and lret ljmp pop fildll dec xor lods add sbb xor or mov or int and sub sub dec sbb inc ret mov out lock pop xor dec js pop or movsl sbb cld mov sbb fucom shrb sbb mov dec xor mov aad (bad) mov jp rclb mov iret fdivl lock outsb in xchg aam mov push rol sub adcb lock mulb mov test mov mov xchg jl jle mov js shrl stc aas dec loopne push jne or mov rclb outsb in sbb add rclb jecxz sub cmp jb fucomip add push jl add enter xor adc (bad) jo sahf add sbb pushl pop sub loope or mov mov mov xchg andl and jo sarb pop and mov jmp scas cmc ja jg add lahf xchg xor int jo lea loop add hlt cwtl fsubrs xor loopne cli xorb add scas xor pop popa add out adc push xchg or imul pop stc sbb and and dec push lock dec data16 xchg movsb mov sbb adc inc jl lock dec pop lcall lcall mov ret sbbb xor loop inc or notb sub in xlat mov mov and xchg ret stos adc jno daa mov lret jno shrl mov pop add xlat test (bad) addr16 mov rclb jno add push add inc ret xor ss sahf push pop aas roll lds push mov pop dec syscall hlt (bad) insl outsl mov cmp push fldl cmp and rcrb add inc xchg lret sti add shlb mov popf cmpb hlt inc xor popl sub add mov push imull pusha add ljmp enter jno sub ret adc or add xor pop add lods dec mov adcb mov inc aas push lea out jno lock idivl inc insl add and xchg sbb rorl push mov lds nop pop sub in sub lret pusha movsb (bad) or sub inc jo lods cmc fldl mov imulb add daa add loope sub dec add test fs add enter addl add cli hlt (bad) mov or jbe test ret pop add mov inc (bad) jg xor lea adc inc je pop pop jnp les pop jecxz push pop xlat and pop xchg add mov pop push add divl push pop push cmp jge pusha fs xchg jne pop call adc lea pop pop add add mov dec xchg js add cmpsb pop fsubr ud2 std sbb shlb pop sub rorb cmp icebp adc inc adc add and adc xor cmp cmp push in pop fimull push and mov aam test cmc cwtl (bad) push push popa mov mov inc enter xor jne inc xor movsb mov subl imul adc aad popa hlt sub jo sbbl pop xchg in push or add notb jno xchg dec cmp add int3 cwtl aad mov leave and icebp lock mov pop cmp mov pop mov add pop mov adc in sub aaa js inc (bad) (bad) in jge and add xchg lcall inc or mov xor and cmpsb les add mov das data16 fsts cmpsb out inc or enter mov and insb or lock and mov or stc mov mov loopne pop mov pop xchg fisttpl push jne pushf clc call lea sub stc pop push sbb add push fcmove shrb pop add or ret mov rol cs mov inc aam inc movsl add mov pop repnz clc (bad) popa ret js dec inc bound pushf ret outsl mov inc add lock ret fs das dec into scas dec cmp icebp les or adc cmp adc pusha mov mov addb fsub lret call or adc movl or lret cli ljmp add dec cmp sbb lahf (bad) push js jae and je das mov sub shlb jle cmpb mov in xrelease push cwtl or mov sti adc or test adc jne flds in ret cmp mov loopne lock (bad) stos test cmpsb ljmp shrl xor cmp xor fistpll xor fdivr sub push sbb xor stc or call cld mulb dec subb sbb std lds cwtl or pop sub rol (bad) mov repnz imul add imul add sbb dec (bad) add mov add lcall sbb into adc dec gs (bad) pusha ljmp je dec loop add stc rolb jnp test dec pop dec push dec add jbe push aas (bad) or add sbb jno sub add jae pop pop rcrb pop or sbb sub faddl add or out xchg int loopne sti inc (bad) jge or mov movsb test inc mov add add adc xor mov jnp and push aad xor (bad) xchg mov fadds or adc (bad) (bad) mov mov shrb dec les aaa fwait jns pop xor jae sbb push popa fildl push lods jne icebp das push mov adc (bad) sbb int3 mov mov in sub add push sti jge add (bad) divb jle add mov inc xor repnz add jae andl xor or add pop adc mov jne mulb sbb add dec unpcklps inc push fidivrl add mov clc or add lods movntq out inc dec sbb xor xchg add loop (bad) int3 cmp sti mov or fildll add std cmpb fcompl add push sub call fnstenv inc inc xchg lods cmp ret jbe xor shll js mov xchg jl ret push sub add inc mov xchg repnz add test mov js and sti insb int3 xor sbb rolb sbb adc loop pop sbb ds lar imul movsb cmp cmp ljmp mov pusha pop sarb pop push fdivr hlt xchg push push test add or xor mov push mov and sub ret adc (bad) push (bad) push incl aas arpl lret addb stos and mov test lds mov std jbe push mov mov mov stc notb js sbb push add test aad ss leave jno jecxz push cmp xor sbb mov pop fsub loopne imul mov xchg insl int aam pusha inc hlt inc shl mov cmpb dec shlb das push into mov call (bad) mov lods dec sub sbb dec adc out mov pop (bad) adc cmc imul jne clc xcrypt-ofb cmpsl stos (bad) xchg fdivs add shrl ret or add pop xor pop jb call (bad) and bnd sahf add hlt mov andb mov clc sahf mov add aam hlt and push cmp mov push pop push adc loop xchg sbb xchg js jo xchg inc outsl jno dec pusha jl outsb test pop cmp cwtl dec sbb nop addr16 rolb lcall or xor repnz ds ss punpckhdq gs adc loope nop pop and movsb xor sub inc xor add sbb stos notl loop add iret sub inc and jbe insb push mov (bad) decb push push mov loop or movd add cmpsl add pop mov mov cmp roll dec movsb repz xlat pushf or sub push add nop pop into cmp xchg aam iret imul sub js pop ret add or cmp shll sti bound aam xor pushf add mov xor (bad) je jle add (bad) leave test add (bad) add or cli jnp cwtl cld sub jl jns pop push jne lret cltd mov push lods mov (bad) pop lcall and roll jl sub jl jl jp mov xlat fcoms lods mov xchg or or mov mov mov fcoml sbb fsubs pop add or pop aad ja mull cmp add pop aam iret jl add add test xlat addb pop arpl (bad) lea testl xchg sbb add and iret pop ffree popa fwait pop cmp jbe out into jge orb fild push int sbb mov xor xchg orl mov cmp inc pusha imul add and sbb or (bad) xchg adc rol pop mov xor in mov test adc orb cmp cld mov cltd mov push popa mov enter sub inc adc xchg push sbb out xor inc lock test or xchg test outsl or jp (bad) fwait movsl and ja cmpsb (bad) xor add push incb add mov adc sbb push and adc add pop push rcl or sub movl mov and mov mov cmp lea sbb ljmp adc push andl fisttpll pusha adc mov test test testb nop mov test out pop jnp test test (bad) aad outsl cmpsl or dec incl add popf je (bad) and pop mov daa lods mov (bad) add aaa pop mov popf lock sbb (bad) scas je adc mov mov and fnstsw dec xchg xor sbb mov sub out mov adc in cs xchg push insb test add inc mov mov stc mov mov adcb inc dec loop inc js push mov pushf cmc push or movsb inc jne push push sarb add lods test push mov cmpsl mov add sub les add mov adc nop dec out sub lods mov inc adc xlat mul popf rclb sbb pushf ja adc jmp inc or mov cmp sub (bad) ret xchg sbbb test and popl bnd or ja test in jo dec cmpsb rorl and cmp push xchg mov xorl ss in xor lahf xchg lds and mov insb cmp movhps mov mov cmp jp cmpsl pop add iret (bad) data16 sbb (bad) or mov and lods or xor mov mov dec xchg xor addl loop test mov addr16 jns movb add add daa shlb lret cwtl lahf push sub aad fsts psubsw pop shrl add test call (bad) (bad) dec mov test aaa aam fdivrp xor mov jno sbb sub frstor mov lahf dec push pop outsl or xchg lods je ret mov mov fnop jo sbb cmp stc inc sbb cmpsb fdivs mov cmp rclb xchg xor add xchg mov mov jp rclb call push sub or (bad) sbb fldenv push inc pop roll icebp add inc adc cli mov outsb and divb inc sbb stos stos pop cmc sbb mov inc xchg repz dec out imul cmp jns,pt push add adc (bad) insb cmp jmp scas xorb orl movswl xor push xor loop add nop aas nop mov fbstp loope push cmpsb or mov sbb fsubr jns clc dec mov sbb and and pusha addl pop jmp pop pop icebp adc subb xchg push adc lea mov push adc cld call lret aad lock test dec lods shrl sub adc mov or stos ljmp jne ret xor std fstps lods mov (bad) jno popf jl cmpsb adc push sub push sbb mov inc or ret mov dec mov xchg pop rol push pusha mov in imul add lret hlt lds cmp cmpb shlb adc xor scas cmp and insl xchg pop xor mov int mov (bad) movsl adc jecxz or cmp add sub movsb call or sub mov adc ret mov jl cmpsb jbe sbb sbb cltd scas loope xchg and loop xor and mov popf and fs add imul lea in lret lods mov fwait ret scas in xchg movsb ret sahf pop imul out push xchg (bad) in add dec roll pop imul fidivrl jl mov (bad) fs sub dec or cld jle mov push test jmp cld (bad) cld adc aam mov jmp xor int3 pusha cli or jmp and jno jo js push pusha shl cwtl dec lea call repnz nop sbb pop mov imul sub xor movsb adc rclb lods stos sarb mov (bad) cmp pop hlt outsb pusha cmp cli add pushf xchg nop mov fadds xor add test and adcl pop bound or xor icebp pop (bad) (bad) bound iret add or js mov xchg sub jmp lods data16 ficoml push dec mov daa nop jg pop sbbb fcom push call outsl into or fmulp stos add mov cmpsl add jo daa loopne xchg in jno dec push gs sbb aam xchg sub push dec jb repz mov outsb roll (bad) jb (bad) out inc mov mov outsb push test or ret mov and add sbb enter cmp mov loope mov out xchg adc xchg dec pop push inc jb pop inc cmp push add popf test lds fnstcw nop out mov ret stc xor cmpsl (bad) in fistpl sbb mov popf pop xchg push and loopne out (bad) sbb js out roll nop fwait in adcl stos mov inc sahf xor jb hlt mov sbb pushf fcmovnb jo loope ret push mov movsl push ficom out jo or adc cmp dec mov cmp mov xor pop test roll jno jg adc inc sbb jnp sti push jo les mov inc psllw sbb cmp cli bound repz jo jbe sub adc push push or add mov faddl jo lods out mov lcall sbb mov es pop dec add pop pop out testb arpl out lods lret push sub jg xchg cmp sub add xchg js or pop adc push mov (bad) ds dec xor divb cmp mov sub mov sbb (bad) xor pop loope sbb or pop adc pop pop dec push push sub cltd addr16 jmp cmpsb loop fs pop fisttp dec fs xor shlb (bad) leave pop sti dec shl or test xor xchg in cmp lahf sbbb sbb les add mov xchg cmp pop sub stos fidivl push xor idivb xor lods mov jmp lret jecxz inc (bad) rclb add jae pushf dec insb xor mov movl inc stc jl cwtl (bad) (bad) cmp rep pop adc xchg out int pusha pop or sub in push sbb push push add and cmpsb pop nop pop xor mov inc gs pop nop push mov mov push imul adc incb out lcall or inc inc cmp mov xchg cmpsl cmp xor cmp loopne mov sarl or bound andb mov mov rol repz dec and xchg sbb jne hlt dec popf sbb dec hlt jecxz fmull jmp mov inc mov adc mov fucom test push mov mov jo and jl jecxz leave faddl mov mov insb call mov lea movl dec daa loopne lcall add addl pusha or jg add mov add imul dec loope rcrl xlat (bad) xor roll pop popf (bad) daa or jnp xor xlat js test sti pop sub daa lds ds pop mov add out outsl jbe sub mov mov icebp sbb cmpsl jo mov movsl mov lret or vsqrtpd fdivl repz lods in add adc xchg dec adc (bad) int pop add es or cli or and negb push and sub cmc repz daa jge cmp jg (bad) mov jl add out pop xor fisttpl xor mov cmc dec fcoml adc movsb lret mov rcrb sub sbb stos inc mov es mov les addl sbb cmp jne into lcall cmp loop or sbb out loopne (bad) mov fs push test pusha cmc add and xlat and pusha ds pop mull push push cltd fucomip jmp pop ja nop cltd and push xor in xor cmp xlat in adc mov lahf or add int shl in loopne cli in and inc jne add inc inc mov mov test mov mov mov addr16 pop int3 movsb ljmp push jno insb sub arpl popa sub mov xor stos pop add lods add pcmpgtb cmpsb and and movsl xchg lret add xchg push ret sub mov cmp and mov push movsl mov mov mov imul mov pop sti xor out je pop jne sbb cmp jo cmp or lea add mov insb or pusha mov ret nop pusha push jmp pop lock test jne xlat adc sti xor es adc (bad) arpl sub add jne push sub es push in ljmp cmp push leave sbb inc add ret (bad) sbb add cmpsb pop loopne loop add or inc sub inc mov mov jnp adc lcall inc leave ret add jmp mov fmull jo loope clts cmp enter sub jo inc nop mov add cld mov mov add sub add lea test mov popf sbb xchg fsubrl pop cmp or xchg mov mov ds icebp (bad) testb or xchg loopne cmp jmp or sub insl xor mov xor cwtl jnp mov adc je ds add sbbl xor jo lret add dec rcll cmp dec loope lock lods inc call mov add push jbe mov fcompl shlb pop pusha and test xchg sub call imul cwtl pop daa sub inc mov jmp les add mov adc jle mov inc fldl rorl gs cld inc mov add dec mov push xchg pop mov icebp sub push outsb adcl mov and ret dec push jmp add mov std pop movsl mov movl cmpsl pop jb mov lock nop cmp mov dec ds aam sbb push mov aam std mov pop ds lret fiadd cmp xchg mov mov xor mov or movsl add pop mov dec cld bound es mov sub and popf xor enter mov pop push jns or cltd lcall sbb xlat mov nop hlt (bad) sbbb sub std push dec stos aaa das fsts stos mov mov dec nop pop andl call push or repnz jo mov (bad) out jae jno jo test movb add sbb jno jae pop dec aas or jp les mov add call add sbb mov mov nop jl mov fmuls mov and add xchg dec (bad) aaa mov cmp ret call inc push and add sbb inc sub les lcall mov mov mov les jo (bad) sub cmpsl mov loope xchg fs push mov sbb and test inc and sub in pushf mov loopne,pt cmp lcall pusha add pop sub notl pop push adc call mov push jne movsb push and and mov xor pop add out xchg mov (bad) push jecxz adc mov add ficoml lds imul ret sub mov mov add jns lods push and and xor fstps scas push fldcw push loope mov test mov pop xor ss and push in fcompl push pop fadds lahf add adcl xchg ds int3 rclb stos sti pop les jmp lcall mov roll add push jo lods add xchg sbbl pop sbb jecxz imul fiaddl mov mov mov xor dec add xor add adc lret jge push sti and sbb xchg adc xchg jge mul mov xor add mov sub jg add int3 add push sbb frstpm(287 (bad) xor or xchg out add inc adc data16 jmp int3 pusha xchg push js add fisubrl dec push lock loop xor xor arpl test mov add jp xor data16 add aaa mov mov and xor cmp xor loopne mov js mov jno adc push addb add icebp (bad) aaa sahf das fwait bound mov xchg add or jbe movl adc pop fndisi(8087 fs jecxz out sub dec scas imul lcall leave xchg dec sti cwtl jmp in inc cmp scas inc (bad) pop xchg add mov (bad) jns lret lahf mov pop adc xchg mov sub sbbb jmp pop sti (bad) jb cmp mov xchg cmp pop lds scas mov push jl aam rorl cmp imul ja push mov xor mov dec (bad) jo js adc push or xchg jmp pop popa push or xchg aaa fist add push sbb and repz push fs xchg or js fadds xlat mov mov popf fistpl or (bad) mov aad (bad) pop xor ret mov jl fcmovne rorb or lea out sub pop mov pop add mov mov jle add test lds out pop shrb lea (bad) fist dec fld xchg iret sub dec add add in lds sub sub push mov dec arpl inc sub jmp testb stc cmp and dec adc and xor adc out lock cld dec push (bad) lock jmp cmp dec aaa sbb mov (bad) mov pop push mov outsb jle mov lds loopne aaa dec add jb test (bad) push sti mov mov push cmpsl push test adc sub (bad) incb mov idiv mov sbb bound pop mov xor jmp inc mov mov icebp xchg subl lret jbe and mov push js test les sub jbe mov jno in pusha (bad) adcl mov and lea stc es dec dec xchg in pop xor jmp and jmp sub and arpl xor movswl popa (bad) (bad) inc mov lods ljmp (bad) nop mov push mov pop iret mov mov and outsl cmp push add aas in clc add push add (bad) aaa cmp xchg es loope mov jle outsb pop nop in cmc mov or cli sub in fimull push or pop add (bad) cs mov adc out mov sbb rorb and sub sbb out or loop shll xchg pusha push push out xchg jns add mov and fiadd outsb leave cmpl push hlt mov rcrl and or xor jo in and or pushf dec (bad) cmp dec xchg insl xor mov rclb lock sub lahf mov (bad) stos test mov fisttp mov xor cmc cs outsl and jo lea push clc fdivs xor shlb testb sar mull xchg nop sub fnstcw lret iret cld xchg test mov pop jle xor cmpsl push cmp lret jbe inc ja dec add ss adc lds sub jo addb pop int pusha mov dec add pop mov add test and jno inc push add cli xor lea in push adc (bad) (bad) jb sbb into cld fildl add shr popf push mov lea adc ljmp dec and rcr add mov lods adc scas inc mov imul add add outsl mov pop push adcl xor fiadd xchg int notl jnp pop imul or xchg add jnp mov out scas mov pop sub mov repz arpl shll xor ja scas pop and pop (bad) shrb mov pushf sbb fcom clc faddl aas xor nop sub scas xchg add repz mov lods dec mov andb add cmp dec dec cs push jns sbb pusha mov mov lahf mov popa into into inc sub pop adc repz rclb push test cmpsl jmp jp je xchg aaa mov jl dec daa ds dec fsubrs lds enter and inc js push and pusha jg pop mov pusha les imul shll call mov lret (bad) sub mov (bad) jns xchg ret and fsts loopne lret fiadd pop add sahf xlat popa (bad) jge xchg mov aaa jle (bad) jbe and dec test aaa push add loopne rcr dec push adc sbb mov pop aas lods adc fistpl jno inc std or add shrb test or lea mov jnp dec xchg add imul (bad) pusha subb icebp in nop xchg dec fild xchg pusha xor adc or popf mov push shrb dec xchg je (bad) rcl add xor add sar imulb and xchg mov (bad) mov test mov scas mov mov jg idiv in adc notb (bad) jecxz repz jmp sbb dec add pop int3 mov push aaa inc in pop stos out fistpll add fsub (bad) mov push clc jo add mov cmp lods inc mov or mov loope push sbb aas (bad) int add sahf into push inc xchg (bad) mov inc adc add or daa push mov lock push mov subb mov mov imul rorb pop aas push add out (bad) je add cmp push jns add jo pop call and cmovne lahf hlt (bad) faddl and dec movsb fbld add and repnz jo or and lds jae cs push sbb popa push xchg and fstpt stos xchg (bad) lea pusha popf inc cmpsl sbb inc (bad) dec lahf ljmp add mov push adc repnz dec mov dec (bad) inc rorb test dec out dec fiaddl test push (bad) sub popf jo xor sbb clc bound aad js fcoml dec sbb ds (bad) ja add divl mov xor sub cmp xchg or dec mov movsb shlb stos cmpl or loope xor pop movl rolb test cmp mov mov jae sbb mov ljmp loopne cmp roll sbb and mov mov ret xchg mov inc sbb push xor or js mov and repz inc test mov lcall and adc icebp je mov push shrb mov and sbb xchg sub xchg sub icebp mov pop pop repnz xchg add clc dec movsl jne pop xchg inc adc lret dec popf jge addr16 sub add and movsl mov pop aaa sti push adc inc pop jecxz or fnstsw cli push and fs mov je add out add mov and gs mov insl jmp fndisi(8087 hlt out mov inc (bad) cwtl ret pop jl jno into and cmpsb jns push mov int3 leave pop add cs jae xor lret mov outsb call xchg fiaddl adc mov lock mov jl rorb or mov mov outsl xorb xchg push dec push dec adc cld (bad) mov mov outsl fdivrp inc xor lds adc pop xor push jmp and js adc std sub insl sahf aas add sbb incl fcoms daa adc pusha int3 repz ja xchg pop pop add push rorl nop jl adc jg sbb adc movsl loopne and push jne xlat in (bad) jno daa mov mov and and mov nop add fistpll jno push mov (bad) xor int fdivrs ja mov dec mov aaa rorb sti push fmul adc lcall jne test aaa int3 mov jo pop and mov sbb mov call nop out jb add movsl adc jno mov aad and out dec fadds jp jne orl sub test push mov mov adc sub or pop stos imul es jbe xchg dec mov xchg loope jnp bsr push ret or push (bad) dec mov inc repnz pop mov cmp xor xchg adc repnz jmp jb or push fmuls (bad) cli pushf mov push int3 jp mov sbb push add and xchg add mov test or adc mov xor sub jp or movl sub add sub adc dec lock shrb inc test (bad) or pop fs scas jnp cmp xchg aaa andb arpl dec cvtps2pd sub and enter jo lahf xorb orl loop sub nop pusha mov add dec in sub insl mov fbld xchg data16 xchg mov xchg mov xchg sbb and dec push jp push mov or sub add and or push jle push jb imul adc sub lods dec push add mov mov lea pop not and enter xchg xchg xchg mov mov xor mov repnz add adc xor sarb popa cld stc cmp add imul dec add add lock cmp sarb inc outsb mov jmp fadd add push fldcw or repnz inc and test sub sarl and enter pop cmp add xchg stc xor jae fisubrl push pop push xor or jnp inc mov xchg mov jmp mov nop xor push and dec pop dec push repnz lcall icebp loop sub stos loope mov pop and inc fldenv fimul mov sbb mov or xchg mov and out mov pop fsubrs fsubl mov dec push inc mov and jo pop in mov add icebp mov fild fstps inc cwtl xchg ljmp add fwait into rcll repz outsb mov sub dec jl aam fsub mov cmpl cmp push add pop mov pop cmp mov pop sbb icebp cmp rclb dec test (bad) nop mov mov add das xor bound mov movsb ljmp jg push (bad) notb mov (bad) add sub dec cwtl cld popf imul (bad) jno inc (bad) push movsl and out adc dec add dec rclb pusha add mov loopne mov or jo into call in sti popa jo push in xchg xchg es push xchg cmpsl push adc jecxz cmp jnp fdivrs cmpsb jo sbb add addl inc sub jb andb (bad) lahf loop ja (bad) aam stos scas imul add data16 inc add jb cmp pop lahf mov repnz ret mov loopne add mov divb mov adc lea sbb cmp (bad) push pop adc and pop data16 sub jp les clc (bad) sahf inc mov imul jno push insb hlt add (bad) cmc pop adc xchg popf xchg adc pop jae sub loopne push pusha push (bad) ljmp outsb add sub inc jg aaa popa fimull dec mov aas jg add mov ret (bad) je fmull add and es pop sbb les mov push jnp pop xchg lock das add push push (bad) daa xchg xchg fsubrl mov sub and inc hlt mov ljmp mov pop dec iret fisttp add sar sub pop adc repz adc ret jecxz push mov add sbb add push int sub or push jbe push hlt les push jmp test imulb in mov sahf add jmp add mov sub pop sub jo cmc mov xchg inc sub mov fdivl mov fisttp stos xor repnz xlat mov mov or push sbb mov loopne das shlb jno cmpsl lcall in les pusha jge lea int pushf nop test (bad) pop pushl add cmp mov add push ljmp sbb sub pop pusha adc lcall ss mov jge,pt push loop nop in repz mov outsb bound je nopl popf add in daa push sub push andb sbb xor push mov inc rorl pop mov sahf mov or pop inc sub (bad) jecxz mov mov dec mov ja sub cmp mov jle mov popa jmp or imul jo dec mov sti loopne or and fisub sbb mov testb jp dec cmp add (bad) insl out stos lea xchg jae inc popa sub add pushl stos (bad) add pop (bad) mov jle pusha xchg jmp mov mov fcmovnu cmpsl mov or add loope xchg cmp mov cmp and cmpsl jae shlb adc mov lahf movl adc pop mov fcmovnb cmp add add sti loope fiaddl adc movd mov sub xchg pop aam mov (bad) scas ja aam shll stos and pop pop jge out repz jb call jno ret or or sbb dec bound add cmp sbb sarb or mov mov pop jo in lcall (bad) test je cmpl or sbb inc adc add inc fmuls icebp and xor ds adc mov psubb mov cmp pop popl incb lret nop loope xor mov fsubs mov lods sti xor push or adc repz cld mov push add pop add xor mov mov popa fs mov jp icebp lahf push pop dec mov xor pop add pop inc xor add or add adc les ret pop stos push pop outsb in (bad) xchg out sub adc jmp sub nop daa mov (bad) js adc stos lods scas pop clc push sbb daa mov pop push dec sub mov in xor pop idivb stos push or pusha push cs sub test loop pop ret push leave fdivs inc std push xchg roll in notl insb aam loope (bad) je pop sahf jl sti jno,pt inc in add icebp sahf orb testb lret inc mov xchg imul mov push pop insb push add rcrb add movsl cmpsb cmp iretw (bad) ss xor add fs scas fidivl cld inc wbinvd movsb (bad) jae add mov push add jne (bad) xchg adc iret or loop mov dec push in sbb mov sbbl mov mov mov mov xchg dec and and stc adcb test fnstenv test pop mov mov ljmp push nop cs sbb xchg pusha push test ds pop adc clc add aaa jle adc (bad) into push (bad) mov loope outsb sub inc jae cmpsl dec out add cmpl xor xor xchg pop out pop dec test mov mov sbb cld adc mov lds (bad) pop int3 push fisttpll push xchg add add enter aaa repz cmp pop cld push testb or adc test mov mov dec sbb jno add incl add test int insl sbb inc incl fs pop fisttpl clc pop mov les out dec out movsb ficoml popf mov and nop inc add pop sub xor push inc or jmp mov shlb inc xor pop add xor fs (bad) je out push cmp movsb sbb xor test and mov in in pop or jo pop sbb cmpsl dec inc adc push pop add in xor dec dec rolb mov or dec stc mov jnp or mov outsb push lea fldl ja and in pop add mov scas sub (bad) cmp or mov adcl push mov loope js shlb fwait xchg into and cmp fcom daa inc sub or push pusha pop or or cwtl testb icebp or dec lahf push sub fdivl nop add push adc pop das cmc aaa jl xchg xor pop mov mov insl fimul inc cmpsl out pusha data16 xchg adc mov iret scas adc std lret loopne cmp lods sub nop cs add push rclb dec or pop gs sub add push inc adc xor mov dec int sbb std inc subb addl hlt xor inc and popf push push dec adc xchg imul lods repz mov int3 fsubl das and jae xchg jge add push add test cwtl mov insl inc xchg bnd inc inc orb cmp negl pop xchg pushf faddl popf mov movl inc add xor mov aaa inc inc and orb aaa js add dec xchg sub bound sbb incb out push xchg leave sarl stos or popa push pop jb add in fwait aad add lret in or cld mov aam pusha into jp xor fildll push ficompl jno pop nop xchg outsb out pop out lea outsl mov push pop rclb dec xor push orl push mov icebp mov and lcall mov or rorl cmp mov mov mov sbb fs jmp dec pop xor adc cmp mov jnp (bad) lock gs faddl jp pop mov add cmp pop (bad) sub pop pop cmp jl jae fsubrs xchg add frstor cmp test sub push mov mov imul mov repz mov (bad) and sub jecxz mov add xor add (bad) and cmpl pop pop xchg mov mov and (bad) and mov xor sub inc add shr pop or xchg push inc mov add or push pop fildl lods adc adc push rcrb mov data16 adc jl (bad) and sub add mov enter dec dec and lret cmp lea and adc shrb jo cld xchg sbb xchg push jo pop xchg nop push mov sub fisub cmp xchg mov movsl nop mov icebp aas sub int add and cs (bad) cmc out pop ds dec cmpb jae out rolb les rcll jo lcall adc xchg lods fsubl pusha dec adc cld popa test push inc jmp test mov repz add shl and adc pop push cmpsb sbb outsl js inc jb mov cmc ret pop xor sub pop mov jno xchg jo xchg sbb popf jno xlat ds dec push mov jne rorb inc push divl pop (bad) dec sbb push xor mov dec loop das test or and sbb jno sub xchg xchg add push je (bad) into add aas push pop jmp add pop inc sub inc cltd add pop dec xor aam mov push enter fadd jecxz inc inc repnz jbe mov lods xor sbb or movsl int inc xor mov lea sti mov add hlt notb pop add push push loopne popa daa nop stc outsb es or cmpl mov add rcrl pop add add add sub icebp adcl or inc mov in and and add xchg hlt pop mov pop xor pop mov (bad) insl cltd aam imul ret xor jecxz in and je sar dec cmp add jnp test jmp push pop sub sub dec clc mov ret xor inc xor mov dec jo sub dec pop loop sahf xchg jp popf fs fidiv orl stos (bad) xor pop or jle dec jno push cmp push subb push sub or (bad) and test fcompl in ljmp add pushf data16 add into and mov mov rolb das sbb dec jnp push jecxz add in movsl push jbe mov movl adc (bad) leave mov dec push ret xlat mov mov add pusha outsl mov xchg aam push jo leave pop adc mov mov add inc or cmp jl (bad) lods imul inc icebp xchg int sbb push in rcrl pop (bad) jo scas popa lock les ljmp call xor jg cs lret sub je mov and xchg inc jge mov pop pop cmp dec cmp sub mov adc insb in inc mov pop jecxz add int3 pop data16 fmuls jecxz or or jg mov cmp mov cmp test push sbbl mov jle insl pop shlb xchg ljmp or (bad) and cld jle inc sbb adc adcl nop and sub daa or mov lock xchg out andb ljmp jbe in js daa xor lock icebp imul mov (bad) add pop mov mov or nop mov fwait leave sahf leave cmp pop mov add mov (bad) (bad) push mov push mov das fwait push subb stc xor mov mov jle push dec add out out mov hlt icebp sar rolb mov movsw lock mov cmp in cs xor pop pusha sub jb push ja cmp or loopne jp mov das and cmpl mov cmpsl pop sub aaa in movsl fdiv dec or mov jl mov scas mov popa and sub inc dec mov mov inc mov sub into or add mov loopne mov and (bad) mov movl sub cmc xchg cmpsb aam inc xor cmc sbb mov lds add push repnz mov push out divb loopne rclb rclb outsb and or sbb popa pop movsl inc and sbb xlat sub loopne enter scas iret or ss mov in mov dec mov adc shrl pop ret popf outsl jnp ds add mov dec nop cmpsb mov or sbb push movsl push fwait pop test push fcompl outsl dec sub out cmpsb lahf fimul push les inc pop sub jp jnp mov xor in gs mov add mov sub and pusha lea ljmp mov enter mov adc dec mov loope dec in xchg jb and cmp or add adc and push cmp fwait addr16 mov dec test fwait xchg rcrl subl popa (bad) sub push pop popa popf jmp imul stos mov test movsl sbb add inc fmull daa mov scas or or adc enter push push clc (bad) ss movsb cmp lods (bad) sbb sar pop in into xor xchg daa mov (bad) repnz pop ffree sub pop iret iret fild (bad) or push das jo (bad) sub jg add jns jg add sub pusha push xor sub dec sub or inc call cld and pop mov popf jl andb je jno (bad) popa or les (bad) mov add and lea push pop enter jb sub push dec inc (bad) push add push xchg and xor adc cs inc jb jo cmpsb mov cmp push sbb sarb loopne jo data16 sub push mov gs ss cmp mov loope jmp or lcall out or and mov (bad) jmp mov lock out mov jns cmpsl in add xorl ja add leave xchg test dec sbb pop popa adcl xorl xorl or rolb lock sub pop pop sub pop bound fwait add mov jge addr16 mov js push (bad) adc dec cltd mov push dec dec test sub clc repz add mov pop ror fstpt andl cmp je mov stc mov add nop mov pop mov and xchg cld subb add and pop sub es fist lret mov rcrb jge add mov lds loopne cmp stos inc nop and lods push nop sbb and mov mov add dec sub mov inc int3 xchg sub sub pop lea or (bad) repnz dec add loopne mov aam sbb inc push out add inc cmp xchg xchg jo roll mov int3 lret fadds data16 mov test mov sub add push pop cmpsb mov stc add pop (bad) or mov xchg rclb mov out mov adc stos xor mov aam and add inc stos pop out pusha sti lret test jne cmp testb xchg lret push push jle aad pop add mov dec notb in sbbl mov sub push fsts adc lret fisttp xor data16 xor mov sub test addb mov mov pop mov outsb cltd adc mov pusha imul and add push sbb leave and test mov add fldl add (bad) je sti sub loopne dec lret loope mov dec insl fild dec nop out xor xchg loopne and pusha cwtl xor scas rol sbb insb test adc std call (bad) xchg dec orl push push fistpl and push mov push cwtl or mov mov jbe repz adc dec mov nop jnp push cmp lds in (bad) movsb test mov mov jmp add fs loopne hlt or xchg dec nop push dec nop clc rol mov ljmp cmc mov sbbb outsl pop xchg add pushf std mov aas test in (bad) neg sbb ret sahf popf sahf gs cltd and cmp es adc fmulp add push push jbe mov push or mov fnop nop push push push adc pop and adc stos bound roll cmp inc adc enter repnz or mov sub lahf mov pop jp enter or sub lahf and test adc push dec pop add inc add icebp pop xchg aas sbb jmp add test fsubs jecxz push and roll xor dec ss dec sub push mov sti call nop push int3 leave (bad) jno into add push pop pop mov sub mov push push jmp imulb xor cwtl push roll stos xchg add daa fldt jo mov lock es inc dec inc jle add push push mov push jle mov add push push test adc outsb lock lock aaa daa data16 into test dec add jl ljmp ret push pop inc mov into inc jge add add push pop ret jbe and sub aam inc push pop subl bswap stos std and add aas adc add shll pop pop mov into push mov jno adc rolb add sub cmp or xchg lcall or adc sub mov lea jp sub (bad) jmp nop jnp add jmp xchg inc xor scas add jne push movsb or adc xchg jg lahf push paddsb in mov dec and add add mov push nop push sbb or sbb add out ljmp sbb add xor or pop ja add push rorl arpl das gs sub mov adc int add ss push push enter xchg mov inc sbb push add mov scas xor cmpsb ja cmp es pop or cltd and hlt add dec sbb pop call inc add nop jo and (bad) fucom insl aad mov push sub nop sbbl dec or pop mov dec pusha push or push mov (bad) xchg out sub (bad) shrl adc mov sbb lret xchg mov stc mov jb out das popa (bad) or outsb mov aam lahf pop mov cmp xor and pop lds add xchg int3 movl sbb mov xchg inc push dec aaa add es xor addr16 sub add arpl sub mov xchg rorb mov cld aam xchg add add loopne xlat dec es sbb push mov cmp jnp lds push ja push add roll int3 adc inc push sbb mov mov push xchg mov icebp or and cld jge fistpl push fstl negl dec inc clc scas xor xchg xchg ljmp stc add das not pop mov ret xchg (bad) mov sbb or divb test daa jmp add and cmpsb movsl sbb icebp pop aas mov push push lds and dec lds cmp add inc mov or das or outsb mov lret pusha xchg movhps or adc je mov mov loopne pusha mov mov and jo cmp adc out loope jnp ljmp mov es fiadd sub add pop push daa adcb jno stc outsl mov mov mov rolb xor lods outsb test mov sub out fs dec pop stc or pop mov mov outsb loop scas addl pusha lods adc outsl or fstl shlb pop sbb sub or xchg cltd push xchg popf cld mov and mov sbb mov clc cmp mov mov adc sahf adc rcrl fiadd icebp push mov jo xor das or movsl nop mov out cwtl pop add aam push dec addb lcall sti pop inc mov or mov scas lods movsl shlb xchg mov (bad) daa out nop movsl lcall push cmp push nop add cmpb scas xor test fildl imul sub addb aas or icebp aam xor sbb pop (bad) (bad) sub push xor sbbb iret adcl test xchg mov (bad) fisttpl push pop add mov push dec fcompl push sbb and inc add movsb arpl jmp push push pop imul lea pop mov pop cmp fcomps mov outsb into icebp push stos sub ret xchg jmp adc jno add xchg add out mov cwtl xchg (bad) (bad) rolb repz jo mov sbbl dec pop cmpsb mov into push clc cmpsb int3 add lock adc mov aam dec dec pop jle add imulb sbbl shrb mov add ss jns pop xor lret add sub pop stc (bad) rclb add pop push js sub sbb xor add adc mov mov cmp std inc (bad) adc lret jp cmpl jmp push add bound sub pop pushf xor outsl sub xchg xor outsb fistp cmp imul pop repnz nop push aaa dec pop sub stos sub xchg push and nop mov push faddp pusha lock addr16 negb out cli wbinvd shl pop aam fidivr xor es cmc add bound push out dec pop cmp addr16 fwait dec adc mov imul or add pop cmp pop icebp mov xchg xor inc popf or les inc clc jmp and push and lea shrb add push rcll int3 or dec cmp xor movsl rcrl fiadd mov mov inc sbb test adc sub mov orb popl popa mov test xor test cmp add loope (bad) lret push push (bad) sbb push adc jne popa mov pop push pop repnz adcl test shlb lea cltd movzwl sub mov and xchg jge xchg test imul jne xchg adc scas lds push push or jae cmp inc ret push push xor pop jmp aad inc mov pop or stos shrb jno or ja mov adc jmp fnstcw add push loopne add sub movsl sbb push mov jo xchg out or data16 lea cmova or inc xor pop pushl mov ds mov popf mov loopne cmp call pop (bad) int test out pop sti cmpsb pop lock xchg outsl loope mov xchg push out nop cmp mov pop add fistl lock xor mov scas mov add push pop and sub lds clc mov and out mov std push popf mov daa fldt jns les testl and scas cld push (bad) xor shrb sbb std incl in mov sub jp adc xor xor xchg push jbe pusha iret data16 jle push xchg fwait data16 lods popf and jecxz or and cmp jp jl jecxz lock pop lods xchg mov cmp xchg sahf nop pusha aam lret cmp inc fldl and add jne adc in add (bad) (bad) aad aas out xor xor xchg push ds fwait stc sarb outsb sahf mov mov mov pop or push data16 cwtl (bad) (bad) out fldl xor xor add add hlt fldenv js enter in sub cltd add cmp mov push xchg add pmulhw inc mov loop or daa jl,pn pop push je adc push adc cmpsl cli mov pushf addl jno aad mov xor movb jp adc and out mov xor nop mov pusha ret sub mov add subb je mov inc popf push ret pop push test inc lcall jge jns lds mov sbb sarb jecxz xorb fs out sub jbe lahf dec jmp lock mov adc mov xor popa shrb rorb aaa (bad) jg shr push and or push sbb xor mov push test xchg mov sbb jl push shrb add shl push sub cmp enter into push mov negl testb mov jmp shl (bad) cmc ret aaa pop std sub mov shr rorl dec iret dec lahf push pop test mov add jg sub pop push cld pop rcrb sbb jns int aas scas mov cltd add pop inc popa out or bound (bad) call in mov push (bad) out out bound pop jmp test in jecxz xor pop loope jmp outsb ret rcl jmp add push jo popf push adc xchg (bad) mov inc jmp imul adc jnp push sub mov push inc pop push mov add negl out popa sti cli mov add jge mov jmp xor (bad) hlt jg dec fistpll xchg adc sbb pop sti add cmp pop mov push dec jne mov jge dec imul mov (bad) mov jl loope movsl es inc mov cld aas jno lock mov mov test dec out mov dec scas lea and jmp push push xchg jns pop in jg pop and cmpl adc call xor std push movsl std push lds cmp dec sub out xchg aam cmc sbb out loop push pop add sub leave ss loope pop push in pop inc jle lret idivl sti jne mov sbb or add add pop cmp repnz and add pop jbe jge push mov mov adc jmp enter lock sub ret or test xor leave iret stos or popf fist fild jno incb pop lahf push adc fisubl aam rorb xchg loopne pop in daa int3 xchg pop rcrb rclb jo test dec imul jg ljmp jns jp in adc sbb xor (bad) bswap (bad) adc xchg out xor imul repnz xor test sti jmp shrb mov nop dec and pop dec push cmp mov (bad) sub inc add js xorl sbb frstor rep repnz sub xor add push enter fs in add sub (bad) mov out xchg jge jp add xor inc jmp call mov jmp aam ljmp mov jo test push mov jnp test xchg pop ds and or pop inc xor add pop or cmp fistp push add push mov push lcall ja mov sbb cwtl negb fistl popa clc ja ret (bad) sti pop dec push inc push ljmp repz or mov mov or data16 fwait lahf jge and out add sbb add sub dec mov ret (bad) jg adc inc cmp push sub addl dec testl jle aas and jmp add push fadds xor lret mov gs cmp lahf iret pusha jle mov and inc fdiv sub hlt pop xlat add lea sub jmp jb dec jmp adc mov jmp cli fiaddl arpl outsl jb or jle dec dec out push sub aaa rorl mov stos mov jg xor xchg jge jge push inc sbb ficoml lret pop mov or int add pushl push adc mov stos int cmpsb cmc pushfw addr16 mov lret pop sarl push std sub in inc or adc jbe fs cmp pop or and pushf dec (bad) ds mov xchg or xor sub (bad) popa push decb sub xor stc push mull mov cmp or or andl jg cltd add lods jbe add push popa ss jg fcmovnb push (bad) jg push inc pop xchg (bad) add fs xor mov mov movhps pop fnop push add int sbb pop cmpsl push pop pop (bad) xor in in ja rol fsqrt add mov push jnp cmc loope in (bad) lret jg add ljmp adc push add pop stos xchg jae push xlat push xchg loopne push stos (bad) mov add pop jno sub popa add ds pop add sub sti push fiaddl (bad) mov mov dec std pop xchg xchg (bad) fwait insb add pop xor sub es adc pop movsb dec pop xchg aaa cltd sbb ret notb nop movsb cmp inc mov cmp mov popa pop add cmc shlb aas push push inc pop or cli cmp add mov pop lcall jle and mov into xchg adc outsl je jl (bad) push cmc add adc mov stc xor jg sti sub stc leave inc icebp xchg stos pop sub xchg call push pop mov jl sub mov cli inc lods sub dec loop insb fsubl cli and pop dec push add dec sbb or push sarb jge jno mov fmul pop add jle call jns aam mov pop or and outsl add popf std add mov incb sub cmpsl jmp pop movsl addl mov or dec loop mov add inc addr16 daa mov dec sbb fxam rorb mov cld sub or pop aam cli mov push add lret cli pop mov jmp mov add insb push notl xlat xchg push adc or jecxz test fiaddl mov push mov push mov incb pop lret add sub arpl inc cmc repnz sub nop cli and je mov scas xor push sbbb lds jmp pop js loope xchg xchg inc cmp adc mov mulb xlat and neg add cmp or stc pop call mov loope lcall add jnp push dec mov aam push add add sub fstpl call adc mov jge ret push cmpsb mov add pop lock push mov xchg mov pop xchg push push lods scas sbb ret mov ljmp popa mov mov jecxz dec in cld nop in pop dec adc or fnstsw (bad) pop and insb pop inc sbb jnp and add mov add insb fwait (bad) jmp sub pop add xor pop or cmpsl (bad) push sub movsb out cmp fildll dec aas add and jg loope orb addb lock inc push push adc outsl jle adc repz mov pusha push xchg fiadd out icebp adc adc fsubrl xor jmp inc add inc fldl2e aad scas cmp mov hlt sbb mov sbb das inc ficom sbb outsb mov shr push imulb cli bound or (bad) sub movsl push adc cltd push mov pop jae and sti cwtl mov xchg push push sub sub sub stc push jo (bad) lahf add les and js fnstcw scas dec push (bad) dec xor xchg insb loopne push cmp and jmp add lea add adc movsb lahf (bad) pop scas fistpl push or in sub add (bad) jmp divl add aam fcomps sub or or cmp ja (bad) or jmp mov xchg xchg cmpsb ret dec shl add stos lcall test pop sarb push (bad) xlat cmp gs add pop call stos lods add adc push pop jb or and mov add pop cmpb push or sbb or xlat movsl and jmp scas lods add call rcll ja dec or jns fistp push insb sbb push inc adc pusha xchg mov icebp mov leave adc adcl or adc jns dec and sar or loop test sbb jo pop sub jns clc cmp cld hlt das add jp mov adc adc lds testl cmc mov jmp js and or pcmpeqd jo push adc pop sbb push dec mov outsl mov ret popa xchg lock mov das push aaa pop mov popf mov xchg adc xchg xor xor dec into es mov into or fiadd mov jb and subl or cmp jno adc ror pop push sbbb leave push mov movsl pop out sahf add xchg xor call ficomp loopne (bad) push mov jle testb jmp lock ljmp imul dec and out mov adc aad jle mov xchg xor add and daa adc in cmc fnstenv loope (bad) or popf dec rclb pop movsb es das ret adc insl in adc and adc fwait push sub inc lods (bad) into pmaddwd ss addr16 sbb push or sub scas test adc inc xorb xchg cld jmp cmp in pop repz pop out xchg and call call or out inc dec and sbb (bad) and mov lds movsb inc mul rcl cmc add jb mov add push jmp enter in jl sbb sub dec adc push popl repz test nop mov sub add adc pop stos movsb add jae xchg xchg or mov out adc aaa jp xorl mov xor xchg je inc mov jno insl das pop shlb icebp dec add fdivp repz notb fs adc fwait lods jae (bad) sbb adc sbb sub test mov sbb cmp pop pop dec xchg in pop xchg mov nop dec mov out icebp mov lock pushf xor and pop pusha inc nop mov jno and push inc xchg sub inc dec fsubrs sub inc pusha lock insb sarb icebp lret jno add popf mov jbe pop cmc jle or outsl jnp cmp test mov adc xchg inc loopne into pop adc and ret add mov in xorl lods mov js lods daa es push pop sbb rorl jbe mov outsl xchg fwait std jo mov cwtl mov add notb out add repz jecxz or dec in movsl add jo and jns or outsl jno or leave test ja and push aad sbbb (bad) ds push or mov arpl mov mov (bad) jo pop aam sbb enter fsts ja outsl inc add out in cmp sub (bad) dec ret cmp or push cmp cmpb push push push (bad) jnp jae push shrb adc lds int mov scas or andb mov je decb lcall in ret pop add push (bad) icebp lods push add push ds cmp push je and shr in stos add push clc dec mov inc idiv adc mov mov dec sbb xchg movsl or andl sbb lock mov pop jo lret loopne (bad) ja dec add jns push imul cmp pop jns std jne xchg adc inc and jns mov stos andb fstl fcoms cwtl out add insl push psubsb (bad) notl or sub and sarl (bad) or scas adc mov lds push mov loopne push daa push xchg add (bad) mov push jg sbb push (bad) imul test add fs jne push mov dec repz push test (bad) or adc lods add sbb jecxz or inc push cmp out mov pop mov jle push out incl mov dec test or (bad) lcall sub int pop pop sub pushf nop cmc mov pop and inc adc add adc cmpsb push ljmp out mov movb mov int3 sbb loopne mov or (bad) lcall sub inc adc repz adc inc rol das lret mov cmc pop test jl (bad) scas jp add (bad) push cmp jg or cmp xchg inc js pusha sub or leave das (bad) jo lahf and add loopne add pop mov inc cmp int cld clc adc jl jo pop xor roll es inc pop add lock add nop ja push mov rorl or es add les xor insl fdivrs call sahf out sbb cmpsb lock testb sub and sub add rol lcall push fldl sbb pop xor cmp popf pop scas xlat push mov in pop adc lcall mov icebp xor adc call xorl mov sbb es jno icebp add repz and jns sbb iret and stc push pop or add and jle jg pop and das les add daa add loopne pop stos add adc mov or lcall adc lods or mov sbb aad mov sbb aas repz jo mov rol xor call sub repz (bad) push adc cmp jne mov sbb or lret jo ret add xchg push test fdivrp pop pop movsl jl or cmpl imul push xchg mov int3 les mov and cmpb lcall lock jae add pop arpl es hlt lods jecxz outsb mov jno stos (bad) push sbb movl fbstp xor cwtl mov ret cmp mov es adc mov (bad) loope scas imull inc adc insb call push mov (bad) sub sbb js or frstor jae dec sbb pusha ficoml pusha jae sbb scas pop dec mov add cmpsl and mov mov dec setl mov clc rorl cmp adc inc in inc lods xor or xor add stc and mov lahf add popf sti test xchg rorb jge out or aaa lock jo xchg clc (bad) xchg andb mov lods mov iret pop xchg (bad) sbb (bad) in adc add mov mov push xor outsl adc stos out pop int jns dec in mov dec mov and adc jns cltd nop (bad) mov es lea mov mov cmpsb pusha aas imul mov sbb out inc add jo sub arpl ljmp je aam xorb mov xchg aas clc mov pusha dec pop leave add idivb mov enter shll or or adc outsb mov jo xchg xor and dec dec ja rorl dec xchg add int3 jo lcall cmp mov mov insl sbb jns ss (bad) shlb clc lock ss dec cmp decb sti push iret in or adc std adc add rcrb shlb mov or leave jns sbb jle add imul add lock and jmp add jle adc xchg xor pop orb psrlq push test imul les (bad) push cmp test stos mov xorb xor call cmp and push jne add add lods push mov stos addl and push mov jg scas mov ja jo popf (bad) or jns dec iret push jae xchg addr16 adcl and sub nop movsb add (bad) jg les push fs add lods daa jge sti mov mov sbb or mov test rcll movsl add lcall and jge pop jecxz nop insb fmulp mov loop add addr16 dec shl mov sahf fs and loop xor sbbb (bad) fnop scas add movsl stos jecxz mov lock daa push pop psubusb adcl dec scas adc sub adcb (bad) mov jp ret adc lret pop or pushf and jl push loop jo aas xor xchg imul dec cwtl jmp mov cwtl sbbb jno rorl push dec je (bad) hlt adc mov sub mov mov pop jp mov cltd jecxz sbb aas pop lods add test or imul int add aaa (bad) mov mov jb or add push dec outsl dec sbb add call std add push sub rcl mov pop dec (bad) sub cmpsl pop mov adcb lahf add jecxz push push cmp jle fmull fdivr rolb pop (bad) push cmp add and dec fisubrl lret out sbb gs subb dec clc pop outsl or ja adc push jg in add jae inc xor in fcmovnb sbb js push sub in add (bad) repnz icebp std adc sbb movsl insb out or mov cli adc xorb nop adc fdiv or prefetchwt1 popf inc jmp enter add ret inc add push adc jbe xchg lock imul in sahf mov enter jp mov fisub pop mov cmp fmuls mov fcmovne pop adc mov push out scas movl push and (bad) jno popa lret outsl out mov add enter daa iret and mov stc xchg pop mov sbb add xor adc repz lods rorl pushf shlb jge inc add xor imul pusha or out xor sbb addb jne jp mov stos vmwrite push rep inc mov sbb cmp xchg and addr16 jno jne outsl push cmp push adcl das (bad) roll enter mov adc fcompl pop flds push ret jmp cmp push sub sub cmc clc and add xchg sub out pushf add fincstp icebp pop out add repnz imul repz imul movsb xorl or adc add xchg dec ja cld imul push xchg stos test inc lock push mov pop fcompl insl pop jns pop (bad) bound xor pop or pop and mov pop push insb cmp cltd call mov add xor int3 sub rcrb lcall loope jno add xlat notl repz mov jne cmp loop in and jp push mov or loop push or movsb rcll mov xor jb cwtl push shlb fcmovnbe repz data16 and aam (bad) loopne outsl outsb push dec cmp jb mov inc adc cmp in (bad) xor lret sbb adc mov in nop add add push mov inc jnp sub jp popf js dec out cmp iret fisttpl (bad) sub fwait mov mov and and fwait addb pop cli pop (bad) mov mov dec outsb mulb call cwtl icebp pop inc hlt sbb or roll (bad) sbb ret (bad) mov xor push inc jmp xchg add pop sub jo test imul dec pop into loope xchg cmp inc cmp lea sbb mov rorb repnz mov cmp orl dec or inc pop add and push and int3 push xor mov sahf cld add ja cltd clc mov in inc verr insl pop js mov call adc insl inc int rorb cmp xor jo in mov xchg lahf dec push xchg pushf (bad) push dec add push cmp pop repnz fwait or lock lock mov sub out dec push rolb xchg xchg iret adcb jns mov push add jnp and push repnz rorb jne fdivrl loopne xlat add mov dec mov cmc mov imul sub mov add add cmp add sti xorb mov mov inc xchg push shr sti cmp xchg add mov xchg add es ret add mov xchg in loope xchg orb incb xchg push add xor and add lods pop mov push add inc adc loope pusha pop push dec push mov cld add fs mov punpckhwd adc rcrb imul sub push (bad) xor stos lret lcall movsb xor mov icebp ljmp aam (bad) lret pushf fs push xchg jno jmp outsb cwtl mov adcl mov mov adc js or aam mov jb add xor add outsl loopne ret push sahf clc pop inc (bad) add jae jg rolb mov inc pop lret (bad) mov lock arpl jno imul repnz add add fimul fs das dec adc adc sbb mov sbb adc inc sbb faddl jge pop mov nop lds or repz loopne rcrl shrb mov mov and ret inc fcoms inc adc inc add js sbb clc lock repnz xchg out mov inc mov xchg pop add test clc rolb out mov or adc loopne add xchg lret sub xor mov shlb add repnz pushf sbbb es pop pop imul je lret clc inc and dec jp andb mov fimull int jecxz mov xchg inc or mov fadds jns sub (bad) rcrl jl leave repz mov sub sbb paddusb xor addr16 ret jo sub add flds sbb add jmp or jbe repz mov in cld add shl mov lods sbb add scas notb add jmp pop aad cwtl sub ljmp and je out je pop out lret data16 inc adc les sub popa and lret adc xchg imul hlt popa ja loopne stc outsb cmp or pop insl jo dec pop sbb loopne or push data16 mov repnz cwtl add repz hlt jne adc bnd enter xchg fwait mov mov clc loope mov in adc and sbb xor push fcompl cld adc les jno adc dec push mov or mov mov adc nop data16 adc or pop mov mov or mov cld adc xorb lcall lds sti sub aad icebp or ja sub imulb mov cwtl cs nop aam je test pop out sbb iret in call mov in mov add xchg cmp fcoms (bad) mov adc pusha clc outsb (bad) and (bad) and addb stc das add repnz in cs push pusha jnp imul xor adc mov inc insb inc add sbb enter lock add mov enter inc add add sahf test xor pop stos and pushf jl sub ret pusha and xor out fnstcw insb gs pusha mov mov mov push in cmp daa jge in clc and jb nop dec dec rorb and pushf inc std js add jae mov add add xor mov std mov add rol push sbb les js test dec pop pop aas xchg int3 xchg enter repz cld adc out sub sbb cmp loop and add adc loopne add mov sbb adcb bound sti test jno lea jl xchg aaa stos insb jae pop push insl add out cmp sbb orb sub movsb loopne jbe outsb pop daa into test pop fnsetpm(287 cmpl inc mov aad arpl adc mov imul (bad) mov daa pop jmp adc (bad) nop addr16 mov add add xchg cmp les push mov add enter aaa adc fs dec sub jl cld push mov jnp and xor scas add lock cmp pusha mov iret pop sub rcrb fiadd xchg push lea add sbb call mov (bad) (bad) mov call and push rclb (bad) mov jno aas push jns jmp inc push (bad) jo int3 lcall cwtl adc pop pushf adc aas and clc push sbb push pop outsb xchg cs mov and divl xor jo enter add arpl loope outsb push xor adc sub aaa arpl jp push sub push xchg and add push mov imul lret xor scas xchg sbb add mov js mov arpl dec push or repnz add mov (bad) xchg in dec add jb test xor sub lods cmp add dec push shl xchg mov pop mov dec mov add sbb push and adc xchg pop push lods adc jmp mov push or xchg dec pushf (bad) adc in jmp mov sbb test lds incb sbb stc cmovge jns inc adc lock push pop in adc pop arpl or push scas add lcall pop movsl push inc dec add inc insb push test push add (bad) pop or dec mov dec mov and cmp xor and popf jp cmp push sub pop ret cmp mov lcall (bad) cli or add xchg pushf nop clc in jg sub fs lock les shrb sbb push add mov mov in adc int3 sub loopne jp mov xor orb repnz jp inc adc psubusw or call or addr16 inc ja lret dec in icebp js push cld mov (bad) jp and mov inc pop (bad) insb mov add inc je cwtl cmp dec cwtl sbb cmp popa or mov add stc loopne mov hlt push xchg dec and jno pushf pop (bad) xor aas daa push cli es faddp cmpl imul xchg xor and sbb test add lahf test ret cmp int repz mov xor fsts mov xchg adc mov cmpsb enter xchg mov vmovmskps mov xchg add push mov cs out push aaa imul out stos and pusha mov cmp push push mov lds popa ret adc and add lcall in mov and add jmp mov ds jns jo pop mov lcall adc aas aam sub sbb inc (bad) xor imul ret mov pusha mov push rolb fstpl subl xchg xchg push nopl popa cmp push mov movsl sub dec int3 pop inc xor push loope outsb add rcrl or and sub and mov and xchg nop cmp jmp and jg xchg xor dec fwait and loop sbb dec roll add insb pop lcall push push push and ret fwait adc es pop cld inc fdivrl sbb pusha daa add or repnz sub jl stos in inc adc mov cmp ja pop imul mov nop dec inc gs leave mov movsb jns subl shrb mov sahf mov dec enter adc fcomip mov adc imul je sbb mov jno mov push jo in and xchg sub adc clc mov mov pusha add out in mov xchg push and adc call loop and sbb dec and adc or addr16 out dec xchg aam mov dec push jno bound and xor add imul rolb stos sbb jl in push (bad) cld add push pop add out sub in xor lcall and test inc adc les rclb fcmovnb andb adc leave cmp ja push repnz and sbb fld repz add add movsb adc int3 xchg pop cwtl and inc sbb xor and dec fcoml stos adc mov icebp or mov daa mov sarb jb and dec pusha icebp adc mov mov into daa in cmpl push mov xchg xchg add fbld mov mov cs shrb in icebp sbb lds dec out add add ret icebp jp mov push hlt mov and addr16 dec mov sbb cld mov push popa test mov or sbb xor adc jno sub dec cwtl in xchg loopne sbb xor push push xor cmpsb nop icebp and in mov setb adc das xchg jo enter nop add mov lds and adc or push mov mov imul fs mov ljmp push mov sbbb call ljmp push ret mov adc icebp insl xor shll mov inc push jecxz inc lock insb lods movsb inc inc mov cld pop scas pop mov faddl mov push mov outsl out sub xchg jns repnz mov adcl xchg add push jns or jo ja pop outsl mov and dec pop adc push in mov sub imul (bad) mov mov iret jle pushf out test dec mov mov adc popa loope dec pop test lahf mov mov xchg dec daa arpl lcall jmp cs test enter icebp or push inc mov mov imul adc adc sar ja out rorb bound inc mov dec loopne add cli fiaddl rclb popf dec cmp lods push or inc nop insb dec sbb add in pushf xor int adc add fldenv pop loop sub cwtl add jo stos scas nop les call pop test cltd jo cmpsb or lret or lods xor inc cmp mov sub dec dec mov push jge fsubs in mov jo icebp xchg add test xor pushf mov orl dec mov lds or inc sti add lret adc cmp inc dec in dec mov sahf enter xchg gs stos es or or mov sar sbb cmp xor (bad) mov nop lods repz push adc lret cli jp lea mov mov mov inc mov jbe add (bad) cwtl dec xchg fsubrl lock xor arpl hlt cmp fwait mov into xor push clc outsb (bad) mov ret adc subl loope pop cld mov mov pusha or (bad) sub nop inc paddsw add add les xchg in sbb incl ret repz jl stc cmp add xchg push jne inc xor or adc sbb jbe or jle add mov jae int or lret test in add or test loopne jne push rcrb or mov mov stc push xor cmpb data16 int3 dec push xor cmp rolb fdivs xchg push xchg push mov or lods and or loopne nop cmp xor xor push push inc (bad) js mov rcll dec sbbb iret sub lock pop adc shr loopne out xchg cwtl int3 add subl inc arpl and adc inc sahf pushf sub xor scas js jb add lock inc jae call sbbb (bad) dec fwait cld mov and imul sbb ljmp out mov pop out push out cmp fs sbb xchg mov ds add mov sbbb movsl mov push mov ds pop es cmp cmp adc (bad) lret sbb aam or add dec call jae xor bound jecxz mov addb mov jo and icebp push into sarb push mov popa pushf out call inc sub in imul mov mov lret adc inc (bad) ljmp scas sub aam xchg xor imulb mov aaa inc in cmp es loopne imul pop out mov out adc repnz cmp sbb outsb pusha sbb mov push insb adc in pop mov xor or sub andl push fidivl (bad) imul xchg inc add and aad loope in xor or jae inc call out test out jo out sbb insb cld xchg add pop addb adc add sbb mov or xchg jl xor xor xchg repnz outsl sub lcall adc loope addb inc jp jmp and shl adcl and aas add mov xor mov mov imul out pushf test mov mov add xor into rcrl rcl jmp or das xchg test mov xchg or aas jo das push outsl clc popf inc jne add in pop add sub sbb test and fiaddl adc repz sbb adc sub mov add or xor jae adc and mov loope mov je pop test and dec sbb sub movsl lcall in imul sbb add mov jle push xchg push pop jno dec mov adc fcoms aaa mov dec test inc lock or enter mov xor cwtl add push test cwtl sub fs movsb xor add fldl or dec imul adc pop lods push inc or and aaa mov cmp arpl and fbld or xor mov push scas repnz pop or pop out add lock scas mov push xor and cvtpi2ps cmp es enter lock lahf adc add sbb jns subb dec mov (bad) in add dec add mov bound fadd aas push adc stos inc sub jl enter xor or call pop fstpt or or enter jmp jg jbe sbb sub mov pop sub xor or sub mov cmp mov shrl cmp add enter std ret imul xor push pushl pop mov call sbb mov dec xor jbe test call push xchg mov add push mov imull es xchg pushf sbb mov std lcall mov adc movl gs push xchg sbb imul push stos pusha mov imul enter ret sbb add mov arpl ret pop push push call aaa push jae pop and add into mov adc enter in aaa int3 mov add sbb lods hlt cmpsb add and push xor mov xlat mov xchg adc add mov or xchg add flds insl cwtl and les add xor or shl je and ret lock dec or mov adc loopne les jae xchg mov sbb pop aam sbb inc lods adc mov clc pop fs add mov or sub addr16 add sbb loopne outsl jl pop movb push push inc out pop inc shrb cmpsb cmc push add lds push aam rolb call outsl flds inc iret mov (bad) cli or cwtl in mov ds (bad) push add and ret icebp pop rorb cmp mov add dec les ja jo mov push test xor mov int push pusha pop rclb push jp,pn cmp add lcall enter mov in push pop mov dec shlb lock mov in adc xchg jno dec add sub sub adc shr add mov (bad) sbb data16 push or xchg add add pusha mov leave mov mov jmp jmp pop adc sbb mov push add jl xorl add dec sahf icebp push mov add flds je dec ljmp int3 mov mov repnz imul adc cmc clc cmpsl mov in scas mov jns stos adcb mov sub push cwtl repz sbb adc sbb xorl adc push adc popf add (bad) out push mov test mov push inc adc or mov and inc ds (bad) sbb jne mov mov add test xchg enter sbb jnp fs fnstenv jl jno add cmp sahf ret add dec xchg imul and lds daa es pop mov mov das test adc clc sbb or enter les loopne fsubrs or fldcw add jo add (bad) push mov adc andl les xchg sub shr sbb rcll scas fidivrl and pop enter mov xor int3 das pusha inc mov sub xor fistpll dec fidivr enter mov xor mov paddusb jno inc pop add imul movsl aad and int3 out sbb jp inc ficom push push lret sbb xor mov popa les out lock pop roll enter jl or mov sub add pop push shrl add pop bound ret sarb add stos xor test sbb and addb xchg pop lods idivb adc sbb sbb bound and mov or push cmp loopne call lock dec mov xchg test ror mov fisubr push add mov clc mov ret lahf cmpsl xchg dec add pusha sbb adc add leave test cmp daa jmp ret dec push jo ljmp into or xor or bound clc mov xor lods lcall xlat and dec dec shlb fcoml mov pushf xchg mov iret leave push mov jno jecxz ret dec add mov cmp pop shrb jne xchg add cmp (bad) pop cmp fwait sub in js (bad) pop add ljmp jne add xchg cmc cs outsl or pusha push xor rorb out mov outsb test mov xorb push push jo prefetch rol mov dec inc cmp loope add jno cmp sbb cli pusha pop xor repz xorl sub jne lods fstl lods mov and xor and pop outsl ret xor int aam (bad) mov sbb mov sub jge adc add jbe cwtl lahf (bad) push xchg sbb xchg inc or or push vzeroupper mov cmc enter dec enter and lahf stos or testb (bad) fwait jmp sub mov and jno add add out fcoml jl inc fsub cld adc or adc jp mov dec pop inc xchg outsl hlt jnp fimul icebp insl ret inc pop jecxz inc jle add aad shr inc imul xorb repnz ljmp sub xor cli mov rorb add (bad) aas xchg imul js add fwait inc or subb lds inc adc pushf inc jb mov push arpl stos and and fsin sbb add sub ja push adc clc into push mov pop je std adc dec pop and loop je cmpl repz das js enter add lret nop jno push dec std mov sub call jns outsl push imul inc and add sbbb push ja and idivl insb mov or lock sub pusha clc dec popf fbld or push push push pop mov sub mov sti outsb cmp pusha jmp (bad) icebp int push sbb mov pop (bad) or push pusha js imul dec add add addr16 and xchg out sub leave rcrl (bad) pop sub mov mov sbb stc fs mov jae cwtl fdiv outsb xchg add ret add jo adc mov push sbb fnop stc sahf lret shrb add sbb flds dec add push mov cmp pop pop cmpsl jns cmp mov or cld mov es inc cwtl (bad) cmpsb int3 add iret and add bound shl jne add mov lods leave fsts add mov jne adc dec add mov outsb push mov rolb ret jmp adc repz mov xor jbe xor xchg sbb stc insb adc (bad) out lock addr16 cltd out sbb jecxz add imul fldenv push and in fwait adc pop adc shll inc add sahf clc repz lret adc add mov mov ds clc sub jp add dec enter sbb add mov decb addr16 add call or and cs or mov clc adc mov in cld or pop mov or or icebp pop pusha clc jg in dec add mov xor repz test sub and jno data16 add mov repz adc (bad) stos daa js cld xor add mov sub pop (bad) je lret addb add xchg and add repz ret cld push (bad) enter shlb loope leave icebp adc in subb add xor cmp (bad) dec adc lods push into dec sbb pop pusha ficoml mov add rol sbb push add xchg and loope cmp icebp dec push mov aam arpl push in and push push into pop mov push clc clc (bad) in jl insb stos repz add pop outsl scas adc insb in pop inc adc dec mov inc in mov push enter cld cld jne inc (bad) cmp inc or sub jo ja jmp xor int3 sbb adc imul enter cvtdq2ps push xchg arpl cli int3 mov rol dec add notb push pop adc push sbb pop add jo test xor jo and mov pop adc pop ret jecxz fcoml out sti fiadd das push data16 arpl test and movsb test cltd out outsb cltd in cmpsb cmp xchg dec sti cs addb add arpl mov lds push sub or and xor sbb push add insb and jle fstpl cmp jl adc daa rcrl int3 mov or js dec cld ret fdivl jecxz and mov repnz xor test or add mov cmp push adc mov pop nop and je or ljmp add pop cld daa jge add dec xchg icebp xor mov repz mov loope divb out adc lock add int3 and repnz dec mov push fistpl xor ret pop (bad) and jl int3 inc sbb pusha add add pop pop inc mov xor or sub roll outsl out popf lret mov pop cmp cwtl andl fbstp ret or dec sub insb shrb clc mov cld add lds xor add loopne sub pop call outsb out sbb sub adc mulb cmp sbb out cmp jns sbb out in cwtl mov loop jp js js inc or je inc xchg or aad (bad) mov dec dec adc test xchg nop cmp mov ja adc jl outsb or add xchg movsb or add shl add pop cmpsb cwtl pop sub jecxz add int3 jae insl mov mov aam das xchg adc imul dec xor out push mov mov enter jne xor cli xor xchg ret xchg stc cmpsl das test je push out enter hlt hlt jl pop push adc adc and std out add adc rcrb adc cmp (bad) test and add jmp shll adc push test sub jecxz dec lods jbe pushf cmp mull in or loopne jecxz bndldx dec mov movsb add sahf mov cld cmpsl add push loope aas inc xchg xor js add push add jnp or outsl adc popf jnp (bad) ja fs dec xor adc gs and adc dec sbb push dec adc shrb lfs psadbw push or xlat out pop mov ja fsubs add out lock imul lods sbb out ret or jl mov sbb ret loopne lock out adc jno mov lock cltd in inc inc stos ja add sub test or test mov mov ficomp add sub test inc mov xor pushf sbb clc fsubrs pop jecxz test js inc jg sub add fs nop add pop add ret mov das stos mov inc mov imul and dec adc and mov cmp adc repz mov lods xor js push mov push jne ret cmp xor push mov inc ja mov jg call ret out pop xor dec push jmp pusha add mov and jbe cmp outsl jmp repz jb outsb test push fidiv add lret stc adc push fs (bad) (bad) mov lcall jo add mov mov subb add sbb enter test test gs out mov sbb add pusha insb xchg cmpsl clc push fdivrl sbb es pop adc mov sarb adc inc mov inc adc lods lods add arpl sbb ret cmp loope cs xchg stc gs jmp xchg lods cld cmpb push (bad) push stc out mov push daa ja aam outsb and (bad) out xor mov repnz fisttpl lock outsb inc nop jp sbbb ljmp add (bad) dec xlat out movsb push mov call or sbb or (bad) call es add sbbl fs leave lods or push sub stc jo clc js add ja mov out (bad) js sub dec and inc call sbb andl gs sub add cmp mov mov add inc xorl sub hlt and jbe add cmp add pop sbb imulb cmovp mov repz pop xlat test mov xchg int add cmp ja icebp hlt hlt jmp pop lock pop lods fsubrs ficoml adc mov or movsb inc stos cli rcll stc pushf and add sbb enter jecxz xor mov mov test cmp and add dec jmp adc les adc jae mov enter push in hlt push or (bad) mov rcrb xor mov adc test pushf loopne xchg pushf mov mov fprem1 sbb push mov sub shrb test jbe push shlb aas movsl jl add fwait sarl pop sub mov push lret aam loop ds add scas and stc repnz pop dec mov or add popa mov insb lods xchg add fwait xor cmp and jno jl sub adc notl push sbb push inc pop mov aaa out mov out cwtl test xchg int cmpsl ret sub xchg and dec mov adc imul cmp loop ja je popa (bad) enter mov pushf xchg and lret cmp enter negl and jns sbb add sahf jb add mov ss cwtl bound imul mov jo stos inc js xchg cmp mov cld ljmp pop imul pop add mov insl jmpw test stos int jl lods and push inc add mov pop push repnz leave mov lret enter jo jg jg adc (bad) xor inc sbb call adc in mov push mov cld (bad) and (bad) (bad) fcoml mov ret mov pop sub mov pop je push test addr16 scas push mov ds mov xorb movsb sub jl repnz loopne mov inc or sub bound (bad) and (bad) notl inc sub xchg and jnp rolb lea add push mov inc in jp pop pop or out fdivs icebp jno and mov jns jo fmulp mov sbb adc xor xchg js and loop and pop les test mov xlat movhps sti and adc cvtpi2ps js or mov lret lahf cs lods nop enter add or mov es adc xchg loopne ja data16 roll cs cmp jbe mov mov das pop rorl sub jl das inc mov cs in adc sbb in push mov mov push (bad) mov adcb repz aam loop repnz lret adc test int3 mov icebp cli adc sbb outsb shrl mov dec shlb movsw dec jmp addb and loope pop fbld mov and add fisttpll xchg lret cld repnz roll (bad) pushf adc dec mov add adc das cmp cld and je test and jno push or stc loopne sti sbb icebp jne push aad enter js push in mov outsb push and sarl add cmpsl sub jmp in shlb sbb push insb jmp and and in mov js dec add jecxz add int3 pop inc sub in dec fcoms inc xchg sbb out and adc mov mov and lcall je shrl repz cltd pop in mov xor outsb out or insb pop ljmp cli dec dec (bad) rolb (bad) lods test sbb pusha jb fidivr jnp xor int (bad) shlb imul add sbb add xor sti das and addl inc cli mov jns (bad) pushf mov je ret and pop jnp int3 pop insb add mov dec jno add mov ret ret push jns (bad) mov into pop loopne mov mov movsl hlt lret mov xchg push and insl jb adc lds mov or inc adc mov lods adc push push stos ret and xchg inc dec mov lret pop iret lcall mov int3 dec mov mov xchg push (bad) mov or out or lods insl inc inc xchg cmp insl xchg popa daa adcl sti xor loope push shlb pop movsl ret aam sti adc sbb repz cmp dec stc add lock jne fs js das or fnstenv sbb sub xchg mov mov and xor gs add add sti push jnp das rep repnz stc outsb sub xchg iret cmp mov mov in sbb dec (bad) sbb or push addl fiadd leave mov ljmp mov jo inc decl lret mov ja xchg mov or sub pop pop inc addb xchg das mov movb lret dec leave jl and das dec cwtl sarl cmc sbb or repnz bound out or cwtl ror push cmc pusha or push add pop aam pop adc cltd jo push ja mov push leave mov repz push stos push rol (bad) hlt lock cmp lret adc fs data16 or jbe lods addl xor sarl cmp ret ficomp or add pop add inc cmpsl movsl jl and dec adc push push cmpl repz nop (bad) int3 xor lret pop fisubrl in insb pop repnz lock dec inc xchg lcall cmp adc clc push adc cmp aas jno subl or popf es inc and popf pusha jae inc cmp add inc negl pushf aam cld insb push cwtl insb ds and and inc mov xor inc lods fucomip (bad) jnp add cmp pop ret insb add outsb out and imul sbb or nop (bad) lock call jl (bad) and push mov add sub in add cmc test mov sbb fdivr notl adc push dec scas mov add out mov add out cmp mov push nop push mov cltd and js push dec push adcb (bad) ja sub xchg jae clc int3 das mov push imul int3 add or dec enter pusha ss (bad) sahf fs add fcomi push outsl pop cs arpl lahf aaa adc pop imul in or sbb lret cld mov int3 and pop (bad) cmc sbb repz pop mov and or (bad) mov shrl in lods lret mov repnz and test mov fiaddl aad (bad) js cld std jo xchg pusha clc mov in inc shrb mov mov insb inc sbbb out xchg rclb add je xchg jae jae (bad) mov sar fbstp adc imul adc repz push repnz dec pop fmuls dec daa xorb addr16 or xchg out int3 adcb fcompl sbb inc jmp mov popf pop (bad) insb jns dec loopne je fs cmp mov push pushf js sbb add push insb pusha push and cwtl or xchg add xlat mov push dec sub mov xor and mov jo test push adc adc adc xor mov pop fiadd ret dec and sbb cmpsb insb or popf mov push xor mov adc dec push and jmp daa stos adc xor outsb imul int3 and pop xchg pop adc mov call jae ffree xchg arpl std xor add hlt test lods call jle push rolb rcr or inc (bad) pop in xchg push pop in repz or mov sarb insb mov or xchg sbb cmp faddl cmp int pop and and addr16 fnstsw pop push nop push mov and sar push sbb pop and out adc jmp xor clc dec dec loop jg stc push jnp pop adc (bad) push or lods imul int pusha push push je or aaa xchg clc dec das lea outsb ret js xor add and pop pop mov push dec aad dec cmp insl sub out mov fdivrl add jg insb les shlb and and popf sbb arpl stc fsubrs dec and aas enter mov inc add test cmp dec mov jno mov xchg jmp out (bad) movsb add outsb out xor xor mov adc mov pop scas (bad) (bad) jmp mov sbb jl int3 or cmp and leave add movsl adc repnz cli or jns imul clc pushf je call add outsb out sub inc xlat mov push jmp mov jo add rcr imul js test call clc insl inc repz and mov fidivr dec loopne jl lods (bad) jno or jmp pop xlat negl pop jmp xchg pop adc pop dec and pop add call jo test decl xchg loope sub cmp inc fdivs pop and (bad) daa pop sub jbe sbb dec lods add mov pop and xchg push sub popa add mov push or jge adc add xchg inc jmp xor in sub cli mov in push in cmp jae test icebp cmpsb dec fisubl add jmp outsl mov adc in pusha mov adc sbb push ja out sub sub stos aas sbb fneni(8087 and or imul imull pop sub int3 enter mov test pop mov mov aam and insb adc sahf cmpb (bad) into cmpsl lret xchg or push lcall jns outsb xor fimul cmp xchg sbb or jno in inc jo pop jecxz mov call and mov inc (bad) addb push shr pop add fidiv fwait stc push mov push shlb xchg adc test inc and jne push test inc pshufw adc add lock dec fadd mov clc incb js les cmp inc lock ficom mov or dec and cmp jno repz lret call add pop repnz icebp or add pop movsl push das iret add outsb pop and outsb lods mov push inc test dec enter or sbb sub call mov mov fadd jge jo add mov sbb push sbb in es dec adc rclb testb mov mov cld adc xor push nop pop sbb mov add sti (bad) dec int3 mov jno loopne jo iret or pop jns push shr inc jae jbe add dec pop mov pushf mov mov cwtl adc mov mov push nop push jo cmp xor sbb push int add imul mov push sbb fcmovnbe add dec leave pop ss or sub push pop into pop fdivrl mov pop cmpsl and xchg xor push jno and xlat add loope jg adc andb mov sbb push lahf sahf and call and outsl fidivr loope insl or xorb fcompp into cld or jnp add mov push jmp fisttp negb and dec sub and cmpsb pop adc repz mov pop movsl (bad) cwtl sub fidivr scas inc mov nop push cmpb adc addl pop out and hlt in add outsb xor sub movsl push jns sbb pushf je jecxz cmp or dec pop clc mov jl jg sbb sub add xchg lods pop les mov insl je (bad) jb js sub stos push or jmp jl add sub dec push inc mov add pop adc xor mov jno sub or and add aaa add scas les mov daa and les mov pop cld adc jb pop push fs jge decl and stc adc and push xchg js and cmp xorl clc mov daa int3 sub out or jmp jle cmpsl mov jl fmull repnz lds or cmpsl icebp cwtl daa ficom inc push add pop sbb and jge mov cld ret xchg sbb and mov xchg pop mov add mov mov mov xchg push push push test call or pop and add sbb pushf nop and loopne pop mov xor jg sub add arpl xor rolb pop add add addr16 xchg sbb rolb das adc outsb mov bound xlat (bad) (bad) repnz adcb lahf inc aam insl or pop dec push pop inc fadds jno dec insb lods rorb adc std xor addl cmc mov mov lods jo lcall push and int3 cmpsl adc cmp jg pop lret or icebp imul xor mov push jmp adc mov add test jb les mov jg add jne inc fildl cmp adc (bad) loope das das xchg and cmp sbb popf pushf lea mov lods jo adc add data16 (bad) int3 mov adc cmpsb test cmp inc sarb xchg add (bad) imul jae add push add out repnz and insl inc inc (bad) icebp jp mulb adc push in test aam adc shlb push add inc xchg cmp mov outsb out pushf cwtl mov mov (bad) xor push sub jg or cmp and pop js cwtl pop jmp dec xor xchg inc mov loopne loop pop repz cmp pop add ds inc jae xchg mov add add and leave das mov jge mov bnd std addb sbb clc and insl popa out orl push jmp adc pop xchg xchg sbb xorl pop les mov dec es or clc adc sbb sar out in jge ja sbb push mov xchg ror add cmpsl add mov insl mov jle popf inc mov xchg add ljmp xor imul lods popf dec (bad) push pusha faddl push shll dec loopne cmp or sbb add arpl outsb adc pop sub and ret pop js add sub ljmp inc adc ljmp stc mov out arpl ja xlat adc loopne jmp mov jnp shlb shll xchg xchg jne loopne adc (bad) jns add pop (bad) in shll lret dec (bad) jmp test add fs xor mov jno add fldl cwtl jae aad subl sbb push and xchg in add int3 push cmovns cmp das pushf and add sbb jno lods push xchg dec push int3 aam push adc push lods test pop push add and icebp push repnz add jbe loopne add jg sbb inc icebp add iret daa ja sti inc push pop out or lods or mov andb xchg stos ja adc lods sub or notb arpl iret jb jmp jmp sbb lret pop dec imul inc fwait xchg add or fdivr gs lret rcrb leave mov pop mov ljmp sbb in jno and pop adc cld ds cmp outsb (bad) jg in pop xchg or push cmp stc test sbb mov pop dec shrb push lcall sbb xchg push shlb inc push adc add jo stos and loopne push insl scas icebp inc inc jge stc sbb xor cli and dec movsl inc nop add out aad sub pushf adcb adc mov fildll aam jmp ljmp xchg (bad) test lods in sub pushf insb lcall xchg mov add imul je jae or xchg mov push repz dec adc xchg and out xor lahf mov stos daa add pusha jl pop add scas sarb add sarb dec hlt or lcall mov mov flds jae lea cmp out add inc add pop inc (bad) mov add inc push (bad) mov dec outsl test add push mov pop dec adc dec test dec pushf mov mov push (bad) sbb add jne push or pop std mov sub mov jno or aaa xchg lea gs add movswl mov adc loope mov enter lea add rorb or xchg popf popa sbb lea sub xchg pop lahf (bad) push arpl mov cmpl fistpll add jns dec jnp cli xor adc sub mov lds mov popa (bad) add clc int3 rorb out lret mov inc add mov or jbe sub hlt lods aam sbb adc rcrl sub push repnz decl pop pusha std in push addr16 addb dec rorb orb jne push dec mov fldz cltd push push (bad) xchg loope push fbstp arpl test fwait adc sbb and in xchg mov or test inc nop jb xchg pop adc and inc sub inc add xchg repz sbb xchg push aaa popa pop test inc add ret nop xor cmp or in push fcos in cmp jne fmuls mov mov xor pop das into idiv push inc xchg fwait gs mov testl adcl loope add imul add mov sbb mov push pop mov add pop dec mov and mov add jae aam mov push push pop pop pop pop cmc or xchg fwait daa adc adc inc cmc mov or dec push lahf push and lds mov cmp imul and popa jo lcall cld icebp mov jns push sbb and pop mov rep xchg xchg pop jge push pop xchg fimull mov adc stos mov inc popf xor pop test jle es add fiadd scas cmc cmpsb and inc pop pop xchg cld lret add cltd rolb pop xchg scas and out add inc das movsb cmp scas add (bad) fnstcw femms mov iret and mov adc inc jbe cs fistp lret loopne (bad) inc loopne xchg push frstor xchg push push (bad) pop into pusha neg adc push sub cmc push daa jne fist fisttpl add ret pop add fdivl adc xchg into leave sub inc movsb mov push cltd pop rol cli ss scas push and xchg mov xchg loop mov ljmp sub test imul pusha rol in push popa mov test jmp and out push add in and mov bound inc push cmpsl or insl (bad) loopne mov loopne addb push xor sbb lret add (bad) ds push inc jne clc add mov ss add or sbb sub adc push test loopne dec sar jo inc fwait ss call sub xchg dec cwtl addb mov add out imul movsl sahf push fwait ror sub test mov test es and adc aas inc push ljmp add daa cwtl push pop fsubp inc mov mov sbb ljmp pop pusha jno cli rorl mov daa imul inc or jge push add adc cmpsb push loop (bad) (bad) xor movntps mov mov mulb or add test mov popa mov dec lcall sbb pavgw mov mov adc xchg lods pause add jp daa pop xor jns shlb push pop lock push and fwait jg or adc jge loope movsb repz jnp jle (bad) add nop insb lret add mov mov xchg addb or inc add pop add xchg add and in (bad) lret xor into jo idivl jmp dec pop test add insb popf pop mov pop xchg insl adc xor sti cmpsb popf lock push jg mov push (bad) sbb push lahf inc mov dec es loop test inc push mov and dec outsl imul out rclb pusha sub scas lock movsl mov ret mov or pextrw mov data16 jbe or pushf mov push leave jne cmpsl loopne mov mov sub push and out outsl cli xor push mov jo sub add idivl mov test (bad) or add mov jns orb ss pop inc and xchg adcb pushf rol (bad) test nop mov scas negb cmc pop add nop cltd dec repnz mov stos push pop jmp xchg clc call cld leave bound add or (bad) repz test mov das enter pop adc test daa xchg xchg inc xor movb ja mov inc pop mov fwait cltd (bad) mov lea mov push xrelease xchg (bad) mov stc outsl and sub mov pop sbb fdivs cmp add lret dec and in push adc call aam in aas xor xor jb in repz scas mov push pop sbb adc xchg xchg add (bad) enter leave adc add sti inc jb mov push lahf push cltd inc and sti add clc shl cwtl hlt cmpl jp or xor xchg popf push sub stos adc jle or (bad) xor push les push pop popa pusha inc (bad) test xchg inc cmp cmp jae subb (bad) pop sub outsl mov mov repz clc cmp int3 mov arpl adc xlat clc cltd ja cmp mov or or pushl sbb sub adc je sbb ds or and add and std fwait add lods cmp js sub (bad) sar mov inc bound das adc fiaddl loope and cmp sbb idivl movsl add pop nop jg push mov mov sbb mov inc dec xchg (bad) or xor iret shl jle add adc or pop stc inc mov int3 inc push xchg rolb add add popf (bad) push repz jp clc dec push out and push or add call xor push movzwl push pop stos add push push cmp test nop pusha (bad) scas sub mov or lds das and out inc ljmp jno std out mov add xor loop es pop sub xor mov jns shll mov xor xchg pop inc inc repnz arpl mov sbb scas jp push lret mov test loope add mov stos dec jmp inc jmp rolb and cli enter aas rcll pop push or or icebp sbb cmp mov xor lret and ret cmp and xlat les jmp dec adc jmp (bad) sub xlat jo inc and sarb shlb cltd outsb inc jne push sub adc mov inc adc je and or xor dec sbb xchg mov stos (bad) mov outsl scas mov xchg sbb pop pop sub or xor mov sub push xchg cld mov push add fdivp aad (bad) leave push sbb icebp pop pop shrb call xor xchg out add fmuls loopne xchg lret or rclb mov jecxz sahf dec mov fmull repnz leave dec add mov push repz pop aas mov dec (bad) fsubs or iret inc lea iret fs mov addb pop inc das mov or adc pop adc outsl repnz add (bad) fisub leave mov sub xchg sbb enter pop mov and mov push pop outsb xchg add inc outsb sub inc data16 pusha repnz mov sub fldt dec mov (bad) jns inc add mov outsl imul mov mov pusha cmp or je dec js cwtl repz (bad) sti cmpsb cltd mov push push add int3 std out mov stos add jae aas out inc or inc int aas clc sub push andl repnz in roll lret (bad) loope jp add cmp das mov or mov push faddl pop jo pop pop push rorl testl jns xchg (bad) stc and and mov pop imul jne or repz ss cs jnp pop push sbb and xor pop jmp insl gs pop imul pop xchg pushf push icebp jecxz push ljmp lods pop cmp mov adc (bad) cld sub mov sbb notb stos faddl mov out shrl pop movswl push sub adc dec xchg dec pop ret mov xchg bound stc inc and rorl sbb jno and out (bad) bnd add mov cmp mov dec (bad) out into pop adc mov jmp ss imul sub push fistl repnz push jle inc xor or pusha lds (bad) add mov (bad) mov mov or mov (bad) push clc jp push std clc mov add loope dec mov inc adc loop jge std sarl mov sub pushf adc dec movsl mov push add imul icebp cld push jmp faddp (bad) jb fwait js sub or loop rorl cmp movsl ficoml cmp shlb push inc es fwait inc (bad) dec fadds or (bad) jno inc (bad) fbld hlt xor jp mov xor mov cmp mov dec add mov mov mov add push and fistl lret aad mov and lea data16 push rol sbb sub repnz xchg popa bound aaa inc mov inc xchg ds jae jg andb frstor pop mov jp stc jb inc push mov cli dec scas sub add ljmp push add popa xchg sub add pusha sti lahf loope dec decb lods and add popf sub dec stos lret and bound lret cld cwtl cmp fnstsw mov pop mov insb js inc sub inc cmp xchg mov jp adc mov mov push and and adc mov mov jne add mov and adc (bad) xchg ret mov xor popa js rcrb ja add ss adcl cmp addr16 stc dec xchg add in repz sub or xchg cmc outsb jbe pop add adc dec sub xchg sbb sub xchg jbe hlt add pop test (bad) add mov or mov aaa and in push jno (bad) pop mov aam cmp add xor mov mov push sti mov idivl ljmp and add adc pop sbb mov aas sbb pop dec mov sub add je lods shrb xor jb (bad) cmp dec mov lret and (bad) sub cmp decl popa (bad) and jge add adc mov jl adc lods aas xchg jmp adc loopne fistl adc mov push js lret sbb push stc sub or adc pusha mov dec xor pop dec pop push mov jbe add jmp xor mov addr16 mov xor add aad lds inc mov in enter lock xor out mov imul mov stos xor mov pop add xor pop neg pop jp xchg add inc imul (bad) fucomip inc push add add push mov sti stc jnp in dec int3 cmp sbb add jne mov test push pop add push pushl shl add in or rolb mov movsl add nop xor jmp andl inc and rorb shl jle,pt sbb pop push rorb lock loop mov xchg jl mov push popa insl cmp mov aad dec pop sbb fld xchg out sbb push push add (bad) outsl push sub adc mov sub dec inc xor adc sub jo mov sti pop into aaa add sub sbb sub add mov xor addl pop push inc hlt mov and outsb pop add popa xor fildll adc pop pop pushf sbb cmp and push xchg xor aas add dec pop mov push mov jmp and or inc add mov call mov add push (bad) cld mov jp push test xor cld lret adc add (bad) mov cltd mov sub out aad push mov or (bad) out mov js cmp mov addr16 ljmp not test or jnp jmp xchg aas jl jmp fist js out sub pop xchg push mov xchg (bad) mov mov call daa and loope (bad) repz add add add ja rorb popa mov mov rcrl lret ljmp push loop push sub xor pop cmc xchg clc jl lret push xchg jecxz inc das adc xchg pop xor add fist xor nop push add or (bad) pop add sub (bad) stos xchg xchg es dec dec xchg fsubl mov jmp mov ret sbb fmuls jno hlt push movsb mov lea or idivl mov adc push jge roll (bad) sbb adc xchg sub dec loopne mov push aaa lcall push xchg adc and mov adc cwtl repnz aad out repz enter xchg mov addr16 in add sub addl push lock ret mov mov or sbb jns mov ss inc neg mov cs enter inc mov es addr16 push and mov dec cmpsb xlat aas jmp movsb scas fistl xor and mov xchg rcrb mov (bad) (bad) cmc mov out or mov jge aam push pop pop mov sub dec adc pop jb frstor pop mov fisubrl fbstp pop cli incb or shl add cld out pop fdivrs add ret xchg je mov scas repnz sub pop ljmp sub add cld repnz (bad) mov sbb (bad) clc pop mov stc mov mov in subb sahf or jmp cwtl loope adc jmp rol jno mov dec sbb sub xchg into dec sbb imul lret pop or cwtl pop fstps and mov call sbbl dec inc and mov cmc lods or daa ret push push loope (bad) or ss xchg push in or add imul ss shr mov out push and int mov jle push adc icebp and ficom lret testb jbe jmp popa in stc add and dec in jnp orb das in adc mov jmp mov or jbe inc lds jg xchg stc orl fbstp xor mov prefetchnta or out fldcw jns and ja mov add xchg notb jmp mov push push testl and aaa or int fildl or jno push xchg adc popf outsl inc out das mov test xchg insl loop add push mov dec stos sub test or cmp xchg imul pop jle sbb or adc call jo and icebp leave pop jg fst (bad) mov int xchg mov xor mov arpl dec add or clc xor shrl nop out ror mov lea dec and pop jb sub cmpsb jnp dec insl push fsubl ja,pn or lds dec mov xchg push and enterw sahf mov jecxz and (bad) xchg push inc and xchg cmp mov pop push sub test push push add jp popf xor iret jg negl xchg jae pop jmp (bad) jns mull inc xchg mov push push push xchg mov leave shrl repz push push xchg sti and nop push jg or call enter lcall sub or aad mov add push sub or lahf xchg lea je or pop xchg aam xor in rolb add imull cmc fsubrl (bad) leave pop in mov rcll loope mov arpl adcl adc or incb and scas xchg stc xchg loope xchg fnstcw inc inc repz sbb push xor sub adc adc ja out and (bad) pop (bad) sbb cmpsb push jp aaa xor lahf inc loopne add aaa or dec push lcall roll icebp sbb mov pop int3 fcmove cmp add (bad) or dec cmpl repnz sti stos in jecxz cmc jbe jae fisttpl jne and add (bad) jno in lea insl inc movsb subl add mov add inc jge add daa aaa mov mov leave jae pop mov push jne mov jb insl aaa fistp add xchg jns sbb mov nop roll fcoms test dec adc sbb fistl dec repz push or sbb sbb adc mov mov add pop insb lods sbb pop and sub add or cwtl xor icebp in cmp push popa lahf and add mov sbb sub jno int inc pop imul mov les jmp jb mov mov xlat fwait mov push adc and movsb ds mov jne movl ds dec xchg lcall adc pusha jns xor pop inc push sti test dec mov inc daa mov jmp push and fsubl pop fistpll movsb popa loop add and or rcl enter adc fldt adc xor xor dec sbb adc sbb arpl popa sbb add (bad) push and call dec sub das fisttp movsb sub cs ret push jecxz xchg (bad) in add xor out (bad) xor mov or ds dec sub fiadd aaa das sbb jp push mov and push inc lret stos ja adc addr16 add sbb mov xchg sub pop and dec cmp mov pop (bad) adc add adc mov xchg adc mov rorb and pop jp cvtps2pi jle lods sbb dec loop into dec cmp daa dec adc test dec and aam xor fnstcw inc jmp mov add xlat jmp add dec repz push sarb mov sbb inc push sub out sbb rcll cmp mov inc (bad) int test leave dec inc fisub xor pop jae add xchg addr16 mov add sub xchg repz adc cwtl jo rcrb js mov test xchg scas bound mov sbb push rolb rorb test fnstcw fs sbb push adc or xor clc sbb jp push data16 stc and shlb push mov das mov push movsl add imul cmp add call or jnp xor es inc aas sbb xor cmp cmp pusha and xchg cmp fiaddl jnp jp jg mul sbb xchg pop popf jno into sub arpl mov or mov push cmp sub outsl mov js call mov mov sbb fsubrl (bad) ljmp (bad) and int3 movsl insl xor test mov icebp dec mov mov push add mov xor arpl inc sbb and mov sbb pusha jge or push cmp push jns pop dec mov or sbb jecxz add popf push ret lods pop sbb add mov les adc adc or loopne rcrl iret and pop pop or addr16 mov add dec pop mov add loope cmp push ds pop scas mov sub add repnz aaa lcall xchg xchg sarl adc xor fnsave push dec or pushf add pop mov mov daa cmp mov icebp fildl je movsl sbb inc sahf rolb or add mov outsl xor leave xor mov pop jnp push pop cmp popa inc lcall push rorl xorl adc aad outsb incb push mov loopne je daa popf addr16 xchg pop mov cmp dec sbb and pop stc out sub imul push out pop addr16 in or mov call push clc jmp cmp mov jae ror ffreep sbb neg add out add repz fwait pop inc clc out jl push cmp (bad) jl mov sbb inc bnd jnp sub stc jnp sub jnp (bad) dec (bad) cli add sub movl call pop add cmp imul pop ja mov scas jg cli fwait push insb or sub adc nop mov pop je ret sub jb xor enter xchg xchg test push mov mov fcmovne ret push or ror sbb and jmp push lcall aas jns cmp and push or ret push jmp pop push ja andl mov sbb lahf testb mov aad out fbld mov cmp mov or adc mov or int push pop cmpl pop xor lret add fldenv dec outsl jge jmp dec pop inc jg sbb fcmovb jns clc popf aam xchg pop mov cmp shr xchg rolb popf dec and ja aas loope daa jl and add cmp call int jns (bad) jge cmc (bad) sub jecxz and lods aaa leave xor push mov mov nop mov (bad) enter fildl rorb subb jns jmp mov pop leave inc sub (bad) cmp add aas and mov rcrb xchg push push and mov ljmp jns mov pop add jmp dec arpl fcoml ljmp fwait into inc jae in rorb add cvtdq2ps cmp mov movsb sub cwtl and xlat lret fnstenv xchg add mov mov lret or pushf inc add xor sub xor (bad) aas adc hlt cmp roll sbb sbb or jo xor ljmp jnp add adcb pop add lcall jmp xchg push ficoml pop push (bad) pop or add aad outsl icebp cmp xchg and pop and jno test scas mov neg push dec xchg or push stc ja repnz pushaw add xchg or es push enter fildl pop int cmc jns jle in adc xchg cmp pop add add inc adc push clc jge,pt mov js pop in inc inc pop das pop push xor add add nop mov dec je jnp add inc jo ljmp ljmp pusha out rclb add or jns out push jne aaa insb (bad) cmp (bad) leave add add scas das into sub fwait test (bad) pop enter adc and pop pop push pop shr stos dec add dec jmp add mov in dec or cmp xor aas push movb jecxz popf addl add or popl testb es pop dec (bad) lret pop and pop and mov cltd fdivs or nop mov test cld lea push jle add xor (bad) fadds std rcrb pop mov jo pop cmp inc push lods outsl or jb btr sti inc inc test fsubr int scas jl push and mov dec dec (bad) testb pop sti xchg ret pop sbb adc arpl push lock testb jb mov shl shr enter xor xchg jl lret test add arpl mov lahf add push push and inc sbb xor clc ljmp andl loopne cld add add (bad) pop jle push pop pop div or cli cmp out in pop pusha stos into mov dec xor xchg sub xchg push and adc dec push repnz xor mov push sub pop mov icebp cli mov (bad) lods push xor and jl add xor xor ret shr stc push into and lock imul xchg pop in decl push pop ret mov sub dec aas sbb jnp mov insl xor push jp in or mov frstor lds add xchg lret jmp push xor mov sub das ficom idivb mov adc loopne jmp dec rcl mov je in lret or push (bad) or or mov mov push sub or in cwtl dec xchg xchg fwait pop outsl and repz push fs pop mov sub dec es out lahf aas jmp and sti (bad) jg jge dec pusha jno repnz jge xlat out inc dec push inc pop xor adc nop insb push imul div in sbb call pop pop shr add xor cli sub aaa popf lods dec xchg xchg mov fistp add mov mov and pushf (bad) push enter mov jg xchg (bad) cmc in clc cmpsl xor push out not and push sub jg call lock dec lds sbb push cmp adc pop add dec out xchg adc sub xchg cmpsb imul jmp push jno push mov mov inc add (bad) and push aas sub pop cltd shlb dec lret out push mov add imul clc popa mov xor sbb or xchg mov (bad) mov dec sahf inc (bad) cmp dec pop mov jmp (bad) popf mov push stos nop xor fmul jnp mov fs adc mov or call imul shrb aam push xchg push mov xchg out js and mov xor jnp imul mov int pop mov sub pop imul push mov adc mov lret aad or adc (bad) cmc jo push loope ja lods push or insl jo xor lock jno jno adc fisub sbb inc sub jg stos jmp jno fidivr cli pop push mov xor repz loopne xor pop jo mov aas push rorb mov xchg pop ljmp fstpt rcrb adc je sti lods decb mov sub push push inc sbb add push xchg mov or pop ret sarb cmpsl pop or scas push xchg (bad) repnz add lock js into pop daa repnz insb pop outsl and jge cltd loopnew pop inc ret cli jl push loop sbb test test sbb sub outsl ja repz popa fidiv mov (bad) pop rclb movsb mov jnp xor pop pop nop xor sub fwait ret mov gs movsb rolb scas (bad) das daa push pop ja cld andl or loopne adc cmp test add cmp mull xchg xor push push ret dec lods pop fldenv aas outsl and and mov sub add add mov inc xchg adc cs (bad) mov xchg jg cmp add pop xor js sub xor jg sbb push add out ja imul mov dec and imul in es out ljmp dec pop loop pop add adc out test mov mov popa mov jp push cs es or jl sub inc test gs ret and aaa push nop imul decb dec xor movsl inc mov fs (bad) push xchg in cmp dec adc or pop push mov push ja jo mov ds pushl mov mov jl lds stc pop add jne ds (bad) dec xlat push or inc xorb out cmp cmpsb leave mov mov add fildll pop shrl jno add (bad) in in jae and xchg add jae pop dec icebp xor testb aad jb add rcrl popf xchg out add xor out in pop sahf ficomp mov sarb or out loop (bad) sub sub push pop (bad) jbe dec je xor jecxz idivb lret cmpsl mov push adc xchg and in cmpsl test mov or into adc push jmp push mov xchg repz into cmp pop out mov stos shr sub jnp ljmp dec mov mov ficomp pusha or and mov cmp imull push addb fsubrs pop faddl imul cmc add add push jb sarb aaa movsb push mov adc mov xchg sbb or add mov int3 or add aas rorl jbe cwtl mov (bad) jg xor bound daa test add fwait sbb shll insl test xor mov mov or test idivl test rcll mov sti vpcomd pop add aam dec sbb jnp nop iret jbe dec sahf rorl jecxz test inc jl or in push (bad) xor push mov or fbld and cmp add je push or cmp inc xor rcll sahf cmp or bound jno push lods aam es sbb push in and (bad) out cmp enter pop stos fmull xchg pop push xor ficom pop (bad) and or test adc mov out pop mov int3 cmp iret je popa cmp popa mov std insl js jge test add adc in scas mov bound add aam cmpsl dec add out rcl (bad) pop aas adcb std cli inc inc jecxz push sub sbb jns mov add adc adc or inc xlat and and cmp sub mov dec popa sbb inc ss cmpsb insb sbb sbb cwtl push jo (bad) cs xor scas dec jecxz sub add fs test pop call adc push pop push mov sub cwtl andb mov or and xchg pop inc inc xchg cmp (bad) push stc pop mov mov daa push push pop dec (bad) xor inc inc or test sbb sbb imul dec jb dec xchg or jns repnz add loopne cmp sub (bad) aad idivl xchg stos nop sub jp push ret jl add jo lock add loope xor pop jne sahf aas xor daa (bad) push inc je lock pusha cmp pop adc jbe insl add push cmp jb or fistpl pop jne pop sbb adc outsb jo shll leave adc and std fldln2 andb xchg dec xchg add daa cmpsl lds cmpsb popa dec sub push adc mov xchg mov jne xor movsb mov cs add inc shr fwait mov fs aad add add xchg mov pop loop push fwait push inc or push xchg ficomp pushaw setle dec mov add cmp js bound jle dec test call and add push pop xchg sbb mov (bad) nop mull pop lds jp cmp inc adc jle lock lock add add cmp loop mov in add inc or inc lret cmp fcomps ss mov dec jne fmuls mov rorl sub jnp das cmp es sbb popf loopne and (bad) mov nop add stos pop adc jmp daa sub fwait sub or lock mov fistp hlt lea lock adc int push (bad) adc shl push mov and and mov test sbb xchg lret data16 loopne add mov jge xchg xor ffreep in popf xor dec imul and ja fldl push mov das cs mov lock push add pusha sub testl mov js bsf or outsl notl fiadd add imul (bad) push xlat push pop add flds pop in icebp add into pop sub negl push dec je jge lea mov push lret xor aas cmp (bad) cmc mov test push sub and pop dec cs add xchg or pop int sub sub popa mov push add jge insb adc xchg dec adc mov adc cmpb repnz notl sarl (bad) dec mov or loop cmp xchg xor add xor cld int3 xchg fsts out cmp or jg loopne push dec jae mov mov ss movsl sti dec or push xchg mov push sub addr16 idivl pop and mov mov sbb out add push and xchg adc jle mov adc and dec inc std jg in dec fisttpl add mov push push jmp xor sub insl movsl pop scas movsl mov xchg lcallw jp push add mov bound add loopne jne (bad) mov xor dec xor push in add push outsl mov es lahf jle leave jae pop or rcll cmpsl mov dec push pop mov xor je mov pop ret js sbb cli sbb xchg jl mov jns addr16 jmp roll fnstsw sbb adc jp dec sub clc inc in das imul dec (bad) leave cmp jae cmp loope into scas pop sahf into aam or mov xor fsub int3 push aas std push fdivrp adc shrb mov mov (bad) mov sub sub arpl sbb (bad) mov fwait pushl jmp adc push jnp movsb daa (bad) push push dec adc mov imul push cmp and loop add inc repz dec (bad) clc leave jmp es out and mov ja ja clc out lret repz sbb or mov mov push and lea (bad) pop insl stc mov cmp loopne sub sub push mov mull ficoml testb orb subb jg adcb out mov xor pop or fwait jg shr pop stos jl add inc movsb mov clc imul mov jmp shrl dec jmp xchg cs out movsl dec out adcl mov test in test adc clc cmp mull call dec xchg adc inc lret dec enter pop push mov sub push pop add pop or push ficom jp adc push ljmp jne xchg jmp dec xchg addr16 arpl xor aad daa mov in sbb cmp shrl pop xchg add ficom sbb mov js movsb clc pop xor test arpl aas inc pusha mov out (bad) lret adc lods pop nop dec in lret or cmp sbb jl pop lea adc fist imul das sub mov ds sbb mov cld xor pop mov mov mov add lret andb popa icebp mov mov jmp rol mov out addl sbb and jg out in inc push or push jno pop jbe or pusha push pop jge and in fstps cli out sti cmpsb mov add (bad) and scas scas add pop xchg push hlt lods lret add aad dec cmp cmpps xchg xchg xor push mov cmp xor xchg add xor and int pop test pop (bad) and nop (bad) lret in xor pop adc jmp es sbb stos imul cli push pop inc xchg jns mov xchg xchg mov push repz out cs test mov add outsb xchg into or pop ss pop aaa push add icebp loop pop xor push stos scas cwtl jnp inc sbb pop cvtps2pi push pop out out xor aas out add push outsl jmp aad sub call fimul xlat cmp and std pushf xlat and stos cltd sub out loope scas pusha mov aad jmp jno add dec mov test jno push inc inc lods and dec incl jne out pusha push push pop into (bad) pop data16 rclb push dec jmp xor (bad) jne pop adc and or xor mov stc pop fstps mov jo pusha daa sbb push cs mov jno xor incb push or xchg insl push add testl pop cmc add xchg cmc js enter pop pop aas ret sub les (bad) and add popf cmp push enter roll std lret out or in and std adc sub dec push mov add xor sub stc sub mov or cmpsl mov adc and pop push (bad) mov sub enter and xorb push xchg bound mov add and mov sub pop call popf push aaa sbb xchg jg repnz dec fbstp loopne add and mov or mov pop pop repz pop lret inc sbb jns sub mov fistpl cld call push and inc clc rolb popa pop pop cld push push sti fdivr inc add js stos fild (bad) mov pop (bad) add ss jge fmull stos int jp pushf xor lcall rclb adc and (bad) mov add jo xchg xchg sub pop add cld std call nop or sub pop push cltd jecxz jmp repz or add rcrb xchg ja adc mov jmp xchg mov insb push push inc loopne mov addr16 mov or push adc (bad) xchg mov add cmp stos sub inc mov or xchg push cwtl imul pop mov or inc sbb shr xor shll sub sub jbe loopne (bad) rcl into fnstcw adc pop cmp jno sbbl lret mov add xor imulb addl inc push adc icebp mov cs fwait and jnp add inc bound jle (bad) mov faddl addr16 mov mov jns adc xlat jmp mov adc lds mov xor mov xlat repz popa fwait mov addb (bad) and adc test pop mov je jmp aaa and data16 xor notw in add adc pusha jl and cs xchg pusha into es bound loope cli mov sbb popf add fildll lea ljmp cli arpl xchg push int3 jno add mov pop cmp scas ljmp lods out sub roll jle out lock jb dec add cld and mov gs pop test add sub rcrb stos jne cli outsb or aam jp jmp (bad) adc andl add ljmp rolb mov pop add push jl stos int popa dec jp jo rclb or mov and adc les jnp,pn iret xchg push rclb leave add mov and mov add or sbb xchg pusha push push (bad) in pop push push in shlb or inc inc pop xchg push lea clc push pop imul inc sub dec out add xchg push add mov lea push test rol jns jns add pop or push and inc push cld jmp add xchg sub sahf divl add or lret xlat loope cmc push pusha push popa int lcall icebp add mov dec ds add sbb cli fs inc (bad) popa fwait das sbb imulb mov rcr cmp pop and repnz sti pop pop xchg decl mov es adc xchg inc add imulb pop mov ljmp xor popf jne lcall add ljmp push adc imull mov pop sbb iret mov adc sahf dec and mov xor sbb std sub inc mov loopne sub mov sub dec jne cmpsl xchg inc pop outsb int mov int3 push in das (bad) push sti sub es mov xor push dec pop mov xchg mov stos faddl add push repz pop adc add lahf das mov add fadds cs hlt mov popf push test pop push sbb jnp les and mov stos int cmp fisubrl sub cmp and cmp rcll cmp mov sub xor adc int es adc cmp push sub jle push mov adc outsb (bad) add push stos sbb mov cmpsb fwait loopne dec aaa push inc cmc add fisubr jb loope add lret out mov push rcll mov pop push push mov xchg xchg jge inc rclb enter push popa aam xchg sub inc loope jno jmp mov lods jne add popf in pop es add clc push dec pop lods movsb shrb and bound add test loop cmc jns orb movsb setge mov popf jnp jo (bad) jo or stc notb fildl dec cmp stos ja adc mov jmp lods sbb inc les pop mov adc jg ds sbb hlt lea loop push xchg add add push pop icebp adc xchg jb cli jmp xchg in popa outsl sahf sub jp adc add orl cmp (bad) dec test mov pushaw cmp adc cmpsl scas cmp lret add or add inc icebp aas test (bad) call enter xor loope push dec stc push jge adcl daa mov adc adc mov cmpsl or mull xchg mov pop scas into cwtl dec fs insl sbb or mov (bad) xor or popa popa pop nop sub add out mov les sbb mov adc xchg push popf jae addr16 jmp jno push and and mov add or xchg mov std mov sarl clc and ret and xchg dec in lock mov xor inc add insb shl and cwtl push or add imul enter jnp mov add mov pop call dec scas fldt cmp fsubrs mov mov pop addr16 pop dec fdivl dec rolb xchg mov sarb jb add sub in cmpsl lods popf cli lea fs adc dec lods cmp dec jl adc (bad) mov nop dec push leave ret xor sldt jne sub jp data16 pop arpl mov push cmp adc adc inc mov dec add push ja jo mov add xor pusha push adc mov xchg fcmovu insl inc push in cmp or (bad) sub dec cld jp jle push shll mov mov jo adc ja mov stc lea add repz mov mov inc xor ljmp inc add mov inc mov pop mov out pop mov add jno in jnp les cs pop adc scas mov xor mov fbstp jo mov adc idivl add rorl mov mov pop shr and bound mov loope pop outsl mov xor push adc or jecxz (bad) je cs popf push pop pusha adc dec or ljmp add imul xor sti mov data16 xlat mov inc and (bad) or loopne shll rclb jae gs xor enter mov pop xchg jne inc popa push cmp push push dec pop dec in loopne lea xchg sbb push movsb dec hlt jl add xor test loop ljmp adc xor add mov mov pop sbb into sub mov pop fwait jb jb push add js pop adc mov arpl dec mov mov out push add shl fyl2x cmp inc jp aaa popa add repnz inc cmpsl xchg repnz inc les (bad) nop movsl dec and (bad) test fimul mov lea jae movsb ds sbb mov mov repz (bad) iret dec lods cmp cli xchg jns sbb jne repz es rorl fstps adc jb (bad) xchg mov push daa or mov or decl push mov cmp pop mov loopne cld cltd add imul ljmp scas test cmp incb jb andb or pop xlat sbb ljmp sbb inc scas es or add mov jne dec pusha in adc es loope test test jmp pop subb (bad) aad add vmwrite ja insl xchg dec (bad) jmp and sub repz aaa mov arpl and push enter lahf adc mov jo xchg pop aaa ret jecxz add je jmp lods add pusha mov adc cmp fistpll test arpl adc (bad) jne int3 maxpd cmp loopne insb mov aam sbb jp jecxz out jge add test sahf xor push cmc fsts push mov adc add pop dec adc enter push pop pusha fwait pop es rorb dec xchg xor test or fisttp dec (bad) pusha add addb mov rorb test popa (bad) mov pusha push sub in lds mov outsb push push rorl cmc sahf popf lock (bad) jmp lret add cmp pop push mov add mov frstor adc or stc pop inc nop add xchg add arpl adc mov xlat test xor sbb mov (bad) xchg loopne lret imul jle add sub es mov mov or jbe js mov add push out loop adc xor adc aam aaa in rcl add (bad) push push xchg xchg inc arpl push or loopne add mov jbe outsb je roll mull cld sub add mov pop push shl inc (bad) in js mov fisubr push fs neg xchg fwait test mov bound dec dec xchg push push pop push inc push scas call and in (bad) mov imul jbe loop xchg les push xor mov mov test inc inc add pusha sbb lcall nop fistl inc dec add lea stos test sbb pusha test outsl in adc xor shll popa cmp inc loopne or pop sarl out cmp andb xor adc xor sub je rorb push add mov fisubl jmp test inc ljmp adc mov in add outsb push out sbb fisub xor inc fcmove mov cmp mov xor cltd pop push mov int3 popf sbb jnp aas add inc popa mov cltd add push insb dec and jnp mov xor bound sub ljmp xorl push and mov sbb push add test scas lods dec test xchg adc mov mov (bad) in xchg cmp (bad) mov mov add gs iret add push adc movsb xor sub rorb sarb jno scas jge add and mov fistpl inc xchg dec sub pop das xor stos std xchg sbb adc mov mov xor dec das xor mov adc mov mov and out jno mov (bad) fnsave pop push leave mov dec mov jbe ret pop push sbb xor fwait cmp xor loopne mov sub cmpl mov jae jo sar xchg sbb xlat push mov clc inc pusha jbe (bad) or or jne xor mov bndldx mov add cmpl pop xor psubusb ss pop nop ret dec xchg lea cs and mov xor xlat fs pusha icebp dec xchg les sub mov dec (bad) scas or jmp sub loop cs xor mov push jmp cwtl pop and stc fcoms add sti jecxz sbb dec adc popa dec cli pop aas repnz and hlt loopne ret aaa mov mov push xor hlt xchg pop adc mov out add and cmp and daa and jge loop movb pop test pusha inc js push adc dec jp inc enter cs push popf add add out js fcompl lods xor cwtl dec daa loopne push js (bad) push xchg inc insb stc inc imul push cs sbbb xchg aaa pushf add in sub adc add movsl and lcall fisub cmpsl fiadd pusha sub push lret dec mov jp xlat test add sahf cmp aaa shl jge adc push push rorb aas das and or jns xor (bad) sti pop push sbb push (bad) push in jg add pusha mov cmp (bad) jmp out bound jmp push mov cmp fwait mov lock mov fadds sbb jb cmc ljmp mov inc jo jae movsl mov add (bad) jns mov pop movsl fucom rorl jmp fisubr add dec cltd rcll mov pop mov inc adc pop shrl pop movsb or clc push mov int3 (bad) push and adc pop cld mov in adc pop sbb mov push out stos clc sahf lcall cmp movsb or decb bound ret in andb mov dec adc mov sub adc push sbb cs lret mov mov sbb test mov enter mov jmp xchg adc push push lahf out mov (bad) (bad) flds sbb adc aaa scas sbb fdivrs mov jmp mov sbbb push jmp sahf in jne cltd loop xor aam xchg or mov ret dec stos fcmovu xchg jo repnz hlt dec mov jg repz loop adc adc lds push or out mov or mov xor pop mov je lods push mov mov dec push bound push mov loopne sub inc xor and test sbb rcll mov pop std sub adc rcrl and nop xchg sub pop and or ffreep rol icebp sarb xchg ud1 andl cwtl imul cmp sbb or or repz push (bad) jno fwait push pop add xchg mov jns inc dec push ljmp inc aad xchg nop (bad) mov or sti pop mov add push enter movb pop mov das sub mov pop jmp xchg adc push xor ds jo loopne mov xchg or sahf ficompl xor adc (bad) xor sbb xor dec hlt out xchg outsb cwtl and in popf call mov jle push mov jo pop mov or aad rorl scas and push jne das gs test nop (bad) adc cwtl (bad) pusha cltd mov cs pusha mov popf fidivrl rcr sub jl dec into lea mov mov jp mov xor inc js lock xchg leave adc jmp cld mov or shlb cmp rep or popf mov lods jne lods pop jg (bad) es sarl add sarb ds push inc int cmp leave add inc inc ret jmp jmp adc aad fs add mov jne add cmp lret out outsb insl add fildl mov repnz cwtl imul ficomp mov inc loope cmp adc mov adc ja test push or insb jnp and notl and mov inc xchg mov loop dec mov lock jbe insl mov xor add (bad) and pop mov pop and xchg adc push push cmp add sbb rcl (bad) leave inc cwtl in pop mov je pop fimull mov mov lods insb in popf nop fildl rcrb imul sbb int3 ja xchg addr16 push add popf jg cmp mov test push lods xor fs lock bnd fcompl dec mov jmp (bad) clc and sub pop in or cltd sbb xchg pop divl outsb mov xchg popa popf fcmove in sub bnd adc xchg add inc or shrl pop or fsub pop or fdiv hlt add mov push add sub andb dec aaa mov mov xor sahf rorb and out stos sub push or pop andl xor rcrl jno jmp shll (bad) repz push or je lods sbb and call mov jb xchg pop sbb xor popa pop push and (bad) pop loop xor push jae outsl pop pop dec ret xor jae scas dec pop and jge add push loope (bad) dec insl or lds pop test adc sub xor sub xor loope and lods mov aam lods push rcrl xchg add negl adc mov sti sub jle mov aad dec fcmovnu (bad) cmp push jle inc xchg std inc sbb jne mov mov or dec push into or pop sub sbb cld mov frstor orb pop aaa add inc das xor dec fiadd sub (bad) or adc dec lea pop add jo jp das daa xor jbe dec sbb mov dec or out test cltd push jnp movsl mov jecxz push cmpb fistl pop pop pusha or pop dec cmpsl mov add push xchg les imul dec std pop pusha pop jb mov dec inc negl jnp mov and enter dec lcall pop add mov insl jnp lock or cmc mov clc roll inc mov dec push aaa sbb ficompl stc (bad) movsl cmc int3 cmpb cmpsl cld ds push mov push fwait ss inc xchg scas imul shll js and and pop add mov out add xor xchg jge or xchg fwait ljmp lock imul mov pushf loope xor add shr in in adc mov sub sub jno adc xor test dec int3 mov mov push xchg xchg lcall add dec push push (bad) inc adc adc sbb push or nop or push push pusha adc cli inc fwait pop pushf xchg or and and jg aas add js nop and push pusha mov xchg fs dec cmc out loop xor jp les adc and es push mov add mov nop hlt inc and lcall fs ljmp mov mov into mov add lret inc shll scas and cmpb out jne stc or jno inc pop adc in push pop int3 cmp xchg pop mov jmp add (bad) or adc sti push sub (bad) push jb dec stc les lcall sbb push jl pop shlb sbb cwtl cmp mov (bad) cltd shlb xor or test dec sbb or fbld sub mov fsubl and and (bad) aaa pshufw sub fimul faddl adc cmpsb xor mov pop in (bad) dec mov xchg mov sub pop loopne rolb mov stc adc push into sub dec stos leave pop sub and loope jl add adc add pop rorl andl out sahf sbb aaa jno addb cmp mov mov cwtl sub dec cmp rclb sbb gs popf mov (bad) fwait ret and pop fwait xor add xchg iret inc in arpl iret fwait inc dec rorb cmp mov and clc adc popa lock adc in mov divb or in dec (bad) cmp dec push xchg sets xchg mov mov add out lods aam mov gs fstps sbb add loop call xchg push test or rcrl xor clc cmc and sbb cmp fwait orl imul test pop hlt dec clc (bad) fildll mov sub cmpsb mov sub mov and adc shr pop pusha jno sub sbb test test mov and and test jns mov fs add sti movsb (bad) or mov jae movsb xchg (bad) push cmp loope es pusha call into inc data16 clc or mov in daa popf inc in daa cmp imul outsb jecxz xchg cmp mov inc mov cltd fidivr lret lret test mov inc and outsb daa add sbb mov cmp jnp pop pop xor das loop push imul popf int inc popa or orb pop (bad) test add adc adc mov pusha lcall lods mov xlat add les in add xchg or pop fsubs fs xchg mov xor insl cmp in mov shrb pop pop jecxz add cmp pop nop sahf cmp add mov mov or sub in sub dec sbb andb and adc add or in mov pop or addl lods (bad) lret lret fcoms mov cmp dec add jo sub add mov mov sub mov mov or adcl (bad) cli and lahf xchg aaa sub mov push mov xchg cmp movsl push mov xchg outsb lock sbb mov and mov xchg push (bad) mov inc or popf insl cmp dec adc test popa cmpsb inc jecxz add push pushf fs add nop out sub sbb jge loop mov and ret inc jo stos or ret dec (bad) loopne sub mov push mov pop scas dec les mov scas iret or cmp mov dec les xchg or sarb push pusha xchg gs xchg sbb xlat in pop xchg xchg mov dec pop inc movb (bad) in add mov stos (bad) rorb inc inc cmp add ljmp pop push int outsl fdivrs push push push (bad) jp push pop xchg je fcoml mov scas pop mov imul sbb xchg add mov jne sbb or aam pop or push cmpsb loop sarl push xor mov bound test sbb xlat add mov mov stos int xor ret notl dec popa and rclb loopne jecxz adc addl rorl scas test pushf jne dec imul pusha and xchg mov add dec adc jnp xchg sub pusha ret out cmp loope dec inc sub mov fisttpl inc jge xchg pop data16 stos pop dec add xchg lods jmp (bad) push nop pop pop maxps and mov add mov in lahf jecxz pop insb (bad) dec xchg movsl inc sub jnp sbb add hlt push in add cltd in ffreep sub test lds dec int xor pop dec sbb jle sbb loopne je mov dec pop scas outsb inc pop pusha and movsl add push scas pop xchg mov in xchg adc inc jo mov lret popf jge push add add je and xor jb jnp (bad) ja xchg popf dec inc pop sbb les or or sbb fcomp sbb sub push lds sub enter inc clc cmpsb add and int repnz add lea mov orb jne pushf pop lret movsl in dec cmp ret imul js in loope push inc and stc sahf sub fs nop push pusha xor xor cmp insl cmp adcb push sbb jmp outsb (bad) push cmp adc bound push out add cwtl pop push fisttpl lds mov outsb add jnp pop test addb mov out cmp mov inc xor xchg xchg and inc mov imul loope mov sbb push mov outsl lods and pop or loopew sub xchg mov roll push mov fcmovu lods test push dec mov xchg sbb sub mov popf add in dec adc (bad) dec mov xchg push add cmp pop adc cmp hlt mov sbb push fucompp xchg loopne dec loopne inc cmp adc call fs lcall les jg add cld inc (bad) xchg adc and fnsave xchg mov mov pop pop or fild nop jmp mov fs scas mov push mov movsl pop in das int inc mov stc lock adc sti loop jg adc push scas repz sti nop pusha je jp mov call insb dec pop orl mov call mov dec fs xchg je and bound hlt loope or sarl and xchg sahf and xchg dec push scas cwtl cmp das clc xchg fnstenv sub out mov in pusha xor dec sbb mov clc add or sbb or icebp test (bad) js pusha mov push xchg loope repnz stos xchg pop outsl or js adc dec (bad) fucompp out sbb cld sbb mov add rcrl sub lods (bad) inc (bad) pop lret and mov mov sub add mov jmp clc xchg dec push mov mov and into and ret dec push les int3 (bad) mov dec out jns adc dec and out mov or ds mov sti pop scas sub jo push into dec pop fnop dec cli outsl lret push push mov dec cmp add fsts xchg xor push mov mov out out adc sub mov jnp xchg pop pop imul push adc ret dec sub cld testb jo shrb hlt out mov shr sarb cmp or and std mov int inc mov addl xchg test xchg test je jnp hlt xchg stos sahf fwait ret call add mov stos mov push pop adc pop or fcomi addr16 xchg daa push arpl xchg and sub bound fsubr push inc sub dec sbb push add xchg push orb test movsl or int3 sbb repz lret loope add add (bad) inc xchg mov dec mov and sbb mov pop test sbb add scas aad jbe (bad) pop jb jge adc hlt or test sbb push xor pop subl cmp push insl mov push test test scas sahf mov in cmp std outsb inc sub pop mov mov dec popf and and idivl lahf clc pop xor (bad) insl push cmc push mov xchg sbb mov xchg or mov push xchg or and das aaa jae addr16 arpl xchg out mov adc push daa pusha push sbb add mov lods or jmp cmp push add inc out (bad) jb adc popa lods inc add adcb out shrl add sub xor add nop pusha and pop mov pushf pop push shrb or add mov imul pop ficom shll mov imul aad scas imul sbb jns nop test dec test mov scas popa inc mov and adc and and pushf inc inc popa and jge xchg push push push add inc stc sbbl adc repnz adc out cmp icebp fisubrl stos jns xchg add std cwtl xchg cmpsl lcall push adc icebp mov adc xchg lods popf push jmp xchg pop xor push cli lds jg jb xchg xchg aam mov or sub popa mov aad xor bound push shl (bad) cltd int3 sbb pop pop pop pop pop and xchg cmp inc mov loopne pop mov mov sub cmpsb fs jo push (bad) cmp in scas lods out pushf add add jle and aas shrb cli push dec imulb or mov imul jmp popa jp cmp jb xchg add xchg pop sub daa popa out cli je dec imul add adc pop jnp cmp adc mov push add fucomi mov popf xchg int3 push pop loopne movsb dec ret scas sub lahf inc adc jmp (bad) movsl xlat xor shlb sbb into or add mov xor call dec and pop mov adc mov xor popf dec mov cmpb gs loopne pop dec mov sub scas insb cmpsl cmpsb dec daa adc mov sarl add cmp dec sub inc popf lahf les std icebp dec das imul sbb add dec or cmp (bad) mov mov out outsl or sbb aad dec iret fmuls mov adc push test pop fimull push mov fist mov je lcall mov cmp or inc xchg and mov ret xor addl arpl mov inc inc sub jmp jle jno das mov adc cmpsb loop (bad) and test cmp lcall xor mov mov pop mov adc mov adc push fnstenv cmp shl (bad) or jmp fstpt pop adc mov enter add mov test call add push fwait push and push and (bad) arpl dec xorl pop push jne into adcl (bad) dec add loope push push inc pop jge mov int (bad) mov push mov mov les sbb mov mov pop jnp or popa pop push mov scas cmpsb or inc jecxz iret daa pop jbe shlb fwait or clc push aaa cld adcb loopnew or xor xchg into fist daa sar pop jne add add outsb mov addb add pop pop adc sti addb adc out mov pop jmp mov or adc inc add sub lret ja pop xchg cmp fist in sub dec icebp push sub sub adc push add mov push mov test ja icebp int3 and mov lds scas fmull mov xchg notl and je lret int mov mov int or lcall mov test lock push lahf lcall mov (bad) int loopne add mov (bad) push ret iret icebp add repz rorb push xchg sar rorb pop popa out pop mov add xor mov push jle push movsb jg (bad) repnz add push subl icebp loope mov mov mov adc pop gs call or pop fdiv dec cli mov jno sub aad mov xchg inc sub shll outsl mov in xchg dec repnz lret (bad) cmpl dec push inc mov mov sbb pop ret sub cld jmp inc jle aad lcall rorb push jo (bad) mov pushf jecxz push mov and xor jge fwait dec popf xchg xchg cmpsb int sub mov xchg lock je cmpsb cli jmp pop xchg (bad) sahf out loope dec mov lock dec mov stos addr16 repnz sbbl subb leave dec pop inc mov je (bad) je js insb inc jne lods imul mov adc push mov mov jb dec lock stc mov mov pop js aam adc sbb adc insl add arpl mov or sbb adc lods sub and mov (bad) mov sbb fisub mov les jno lods rcll and fs data16 and mov dec lods and and mov xor jne les inc je cmc jmp inc pop fistl jns add popf rclb dec (bad) dec outsb leave push sub inc pusha cwtl jne add adc lods xor adc jp,pt push and ljmp aaa push sti adc adc jmp (bad) (bad) imul mov and mov ret jbe test push dec push or pusha pop jmp and negl rcr or dec pusha add lcall adc pop jno jl mov je mov (bad) xor ds (bad) push add xor push push int3 scas repnz xchg cmp (bad) sub out push sbb stos mov cmpsl and or fpatan scas (bad) mov dec fcomp adc jecxz dec out xchg in fbld pop pop push ss mov adc jbe int cmpsl sbb rol sbb clc sbb dec movsl mov cmp mov inc push pop out xchg add xchg cmp in cmp cltd mov stc push or mov mov cld inc xor movsb insl adc fstpt in or xchg in push imul outsb aad add ret mov dec dec lods lea (bad) idivl add push cmpsb roll xlat and nop lahf jl cmp pop xor rorb iret xchg mov xchg add xchg cs in and push dec (bad) lock les mov scas pop push mov inc mov add xor das popa mov cmp notb cmp aas inc sbbb mov test fist (bad) mov mov xchg cwtl les in add int js pop rorl pop push add adc sbb dec arpl out repz jb jne pop test xor add lock mov xor fisub mov popa sub cs cli mov ret jno xchg repz out popa push lcall add gs nop addb push jp sub in adc pop mov andl cmp cwtl and mov loop xor xorb dec cmp and stc loop push leave push fsubrs ret and mov mov popf push add and pop add push mov mov test cld sub push push push mov out das repnz dec lds sbb jg call loopne xchg or imul and scas int inc mov pop and dec push push jnp add lret ja loopne das das pushf xchg and jo imul push xchg sti pop in mov outsb cs cld mov int3 loopne add out nop (bad) mov inc or pushf pusha iret lods leave add outsb addr16 xor push movsl icebp mov in fild icebp fcompl out adc pop stc pushf loopne add fcompl rclb scas pop push mov das fwait enter inc add mov sbb adc sar subb xor pop inc icebp hlt add insb adc aad mov mov sbb pop pop inc push jno lods clc and adc test sti fisub dec test js push add (bad) lock push xor xchg adc not mov movl clc in dec pop jecxz mov inc inc push cs cmpsb inc loopne (bad) pop add les push out lret fdivrl xor incl outsb aad stos sub lcall cwtl dec movsl popa popa mov push pushf adc mov test subl xor mov mov daa add push rcrl addb test jl jmp test std or sahf imul sbb enter mov lahf jle cmp push loope ss and das add movsb mov and stos lcall sar mov pop pop nop mov inc div clc pop das roll sub in jl rclb popa fsts mov xchg repz pushf dec inc sub mov jmp pop fdivl adc add jecxz pop push add fisubrl sbbl xchg sub enter adc mov jle aaa ret nop cmp fnstenv icebp cmp sbb les cmp mov sub inc aas inc ja jb dec xchg out jbe call mov pusha jecxz dec cltd cmpl inc xor dec loopne push cld sbb aad std adc jmp incb divl cmpsl sbbl enter ds mov andl stos add adc add inc and push inc fistpl clc push pusha pop push mov xchg mov add cltd dec ja imull xchg push push jg (bad) stc vcvtsd2si xchg popf ljmp or inc jno adc adc inc hlt add mov mov inc add push add cld scas fcompl repz or xor in dec sub mov ljmp xor push adc dec mov fs sbb out sbbl lret out mov add rorb cmp movsl dec ret std fistpll sub popf test add cmp fidivr xor mov nop mov mov xchg cs jbe das xchg hlt lret jmp sarl mov sti dec xor push sbb mov outsb das std jecxz sub sub pop lret test movsl push mov daa mov pop lea xor sbbl add mov xlat pop inc ja sub push andb pop adc add mov sbb nop shlb sub cmp push adc sbbl cmpl bound or bound add mov push lock sbb (bad) xor pop pop faddl push scas jle xor jnp sar xchg das std (bad) stc cmp and add pop int3 (bad) aas push hlt out mov loop or xchg mov popfw loop ret cld idivl fucom dec out (bad) dec xor jg xchg dec jns roll sub xchg dec push leave xor xchg adc stc pop aad inc adc or sub sbb and cmpsb jg jl bound xor push and adc jg xchg fistpl aaa mov loop add rclb test mov (bad) shl or xor dec sub cltd sbb rcr icebp xchg add xchg xor xlat sbb rclb mov mov lret mov and mov push pop jbe pop mov add test adc mov sbb push icebp (bad) mov push shll add imul sbb pop pop ret fimul adc scas jp lcall ljmp jmp cwtl mov sti add inc jbe (bad) repnz adc push loop jle push pop std add sahf or out sbb xor mov sub xor mov and pop lcall popa inc mov insb sub mov in aas movsl (bad) adc and inc push sub pop scas imul adc out adc movsl insb jnp shr and sar stc sbb repnz popf jmp repz adc sbb cld pop ficom push mov or xchg dec inc xchg push lock pop sbb adcb adc or sub mov fs add pushf dec mov or push addps (bad) jbe cmp (bad) jae add mov inc lods std push cmp add (bad) push daa popl add mov mov push mov cmc jne movsl dec push mov fucom mov cmp hlt iret test mov bound nop jge lds mov add rcll xor sbb mov add fisubrl dec enter push lcall fs mov mov jnp ss cmp addr16 lahf jp add dec adc bound aaa jo xchg mov push cmpl scas sbb nop negl pusha (bad) daa pop clc add inc loope fst push (bad) fwait ret stc sahf push pop stos dec (bad) mov ljmp lods pop nop fwait mov lcall clc adc lahf and rdpmc sub cs xchg add mov call (bad) mov pop test sbb cmp push loop arpl pushf jae add xchg push outsb out test sbb lds xor test mov lds dec imull mov nop cmc aas loop push call push divl arpl (bad) insb add nop pop cs inc dec lea lret cltd add je fisub ljmp jp in cld fimull push rcl dec pusha mov add xchg repnz pop popa (bad) dec dec stc aam jns lret jb aad mov bound mov shrb push in dec ljmp cs sub pusha mov push icebp cmpb jl sub pushf fnstenv rol or leave mov or pop leave aad cmp pop int adc pop inc add int3 and adcl xchg fdiv fcompl shlb subl adc fwait and icebp xor pop nop (bad) mov scas imul paddw adc cmpl sbb in and mov mov and popl popa mov aam mov push testl pop lods outsl mov jb stos or add xor pusha xor popa xchg out and bound push dec jno test cli out dec xchg mov cmc xor repz push iret jge notb sub gs push adc out je mov push mov ds loop pop fbld pop lret xor push fs cli icebp cmp fcoms cwtl inc (bad) pushf cmc mov xchg mov add ljmp popa ds lsl and mov jl (bad) stc in mov pop (bad) fidivrl andb insb test push mov lock and (bad) icebp inc jo jno pop (bad) inc adc or push add xchg push rcrb (bad) pop mov test add xchg xor mov insl push sti add outsb cmpsl inc mov lea adc clc jns xchg adc loopne divl pop pop adc cld imul mov jae lcall cmpl pusha push flds pop mov aad ret je lods loopne push pop adc out push jo add fabs jae mov fisttpll outsb xchg sbb push dec mov fstl rorl pop (bad) jp dec popa popf inc mov in test mov and outsl mov add jle adc or jno hlt cld fistpl add or inc addb push nop stos push xchg es pop xchg mov dec and repz in xor fstp movsb jp mov and ja mov ss jo (bad) sub dec sub mov sbb aam mov mov sub jmp add xchg lret mov stos popf lea xchg fwait cli cmpsb jecxz mov add jne aaa inc and jo mov xchg xchg fisub mov mov insb push popf ja or loop jae scas pop mov in dec aad (bad) jnp add mov adc fucom imul out xchg push (bad) mov ljmp and or adc in mov pop stos xchg fisttpl cs and clc pop xchg dec test sbbl mov push imul rorl lret mov mov xchg mov mov jg xchg sti sub fiaddl imul xor xchg xchg (bad) fidivl loope rcl mov and insl sbb fisubl aam mov mov cld pop lea push (bad) fcoms out dec or xchg xchg jae xor jmpw cmc cs cwtl jmp dec jge push out xor lret dec ss lock data16 cltd and nop mov pop pop sub popf xchg adc and mov sbb xor and arpl lds cld cmpsb pop loop inc push push pusha clc pop sub (bad) sbb sarb mov xor push pop faddl push (bad) cli imul popf roll ja pop add out push pusha mov cs cmpsl pop mov sub add ss std mov vmaxpd gs pop lret and incb jp enter shrb lret out lcall (bad) (bad) inc call or sar cmc xchg lahf sbb pop lcall push adc mov inc and daa mov sub mov imul ret fdivrs xchg add pop mov addb insb mov je add pop lods aam mov push add movsl cmpl sbb outsb add fisub fnstenv mov inc jno je push inc movsb dec out cmp dec sub mov clc xchg test adc test emms jns and lock pop insb aad aaa mov cmpsb add and test in pusha mov or popa je das in add test shlb mov adc popf cmp fcmovbe popa movsb xlat (bad) add (bad) xor jle cmp cli js pop sub adc or add aas mov setnp js and inc in mov lods loop popf sub fiadd lahf mov inc xor (bad) test inc add and inc cli stos push mov int3 add icebp les sbb daa mov push mov sub jne iret cltd popf adc push dec inc out bound add jmp pushf imul pop mov andb popa jne fisubl jmp push std das adc out jnp add or and push cwtl and mov orl pushf push fimul mov out add mov inc outsl jg in fnop jp lods xchg or fisttp inc pop cmc cmpsb loope push stos out pop jb push xchg or push bound sbb jle xor add (bad) int lods push cmp (bad) mov sub pop out xor inc sub and mov mov bound or mov int loope fild lcall and das push lret xchg leave mov add shll lods push shr lcall sub ret xchg jbe loopne xor adc mov mov test add jp and add (bad) cld (bad) hlt negb shrb lods ret xchg (bad) fisubl sub das or movsl in mov arpl imul adc mov jnp,pt dec out dec or mov pop xor nop leave (bad) fucomi daa mov loopne jge ljmp push mov bound scas dec mov hlt sarl in cmpsb lds lahf adc imul movsl or daa js inc (bad) popf push push dec push in iret shrl mov cs mov add rcll sbb dec pop stos push dec fsubs scas lahf incb pop adc cmpsb xor cmp xor js add test sub jno leave jae jo fwait loopne das das mov and xchg xchg jg mov mov xor sbb rorb imul or lret iret arpl mov test popa outsl xchg adc popf push mov push push fmull out xchg and iret and imul push xchg sbb or lret add mov daa pusha dec data16 mov xchg adc imul fimul cmc pop push rcll dec push push pop pop or andl mov imul mov adc mov fnstenv or cmp cmc xlat mov xchg sbb or std pop and nop lea mov dec sub mov adc jnp add dec lea fwait mov xchg test call sti mov adc mov xor xchg xor ret xchg paddw sbb icebp cmp inc aam adc dec jns mov test fdiv call mov pop xchg movsl cs test add push sbb mov push cmp sub int and add leave mov pop sbb xor test mov sbbb pusha pop cli adc push mov mov xor leave push jns add pushf xchg push cltd outsb add xchg pop push dec rcrb add dec icebp or outsb cmp cmp div xor jp mov push das rolb mov into xchg adc push lods cld pop dec imul add jge dec icebp mov add push jns mov cld cld test xchg loope testb adc ret fdivs jle mov movsb les stc jno dec or fwait scas testl cmp lea or push dec cmp add mov adc and test mov xchg (bad) xor sbb sub cli or lock lods andl dec pusha leave xchg jle aad mov leave ret addb sahf sbbl repz jmp fsubrl mov push hlt fdivrl inc jp pushf dec xor jp add xchg (bad) mov mov or stc test gs icebp rcrb cmp call lods jae rorb in push lret mov out or ftst jno pop dec sub ljmp pop out lock pop scas bound cmc lcall mulb sbb sub and jns rcl outsl ror repz popa js test mov and adc sbb push std mov jne or aas adcb sub test iret (bad) pop and movsl int3 add (bad) (bad) pop lods jo sbb cmpl cmp das add nop fmuls mul jns popa out and sub out adc push mov mov adc mov loope ss je mov mov mov shrb pop sbb add adc ficomp repz (bad) loope (bad) repnz out sbb out aad ds push sbbb lods cmp adc mov movsb ja cmp adcl pusha mov inc sub popa sub mov pusha pop jbe jo jmp cmp mov push je or sbb push cmp xor aaa ja repz sbb faddl and popf sub xor and xor pop pop xchg adc imul and cs mov dec daa repnz dec outsb cmp mov cltd xor mov popa xchg mov cmp sub sbb loopne ret imul jne daa mov xor lahf ja loope pushf lods fdivrl pop rclb lock xchg in dec fs sub (bad) mov sahf sub stos cmp sbb xor negb add rcl das mov gs fistpl lods mov rdpmc add mov jge in mov push adc test dec into clc push mov lahf adc sbbl push add push test call movsb leave or aas fildl int3 das stc add repnz test je sbb sub inc pop sbb mov mov cs loopne jge cmpsb add cmp pop xor push mov popf call mov cwtl in xlat out and stc sbb addr16 loop adc add ficompl mov jnp pop lods push dec stc je movl lahf cld mov or mov es out dec (bad) fild rcrl int3 lahf jns cmp push or dec inc push subl push inc add cltd outsl push jae add push sub stos mov rorl adc outsl mov (bad) mov push cmp mov subb sbb fsubl scas push dec mov add xor cmp int3 jne call shrl and in sub and dec xor lret or xor mov stos inc out out aad repnz hlt mov out and pop lret sbb popf xor xor pushf mov mov mov add js jecxz jno sub dec mov pop jl push or jnp or mov mov sub pop add rcr inc lcall test xor jg jp pop stos xchg stos popa mov test push test jne push popl cli aaa push jmp mov and cmpsl dec pop in cmp inc fstps cmpsl in add xchg mov in or pop ja popa pop xor icebp std mov dec fsubrs or xor leave movl sbb movsb add push test pop repz or scas rolb stc sub subl addb push sbb dec xor fldcw and mov add push in add pop pop sub clc adc js add mov sti jne,pn imul lea scas add shlb sbb cmc insb pop dec popf dec sub xchg rol hlt popf add lahf pop dec xlat mov loopne sub bound xchg lcall sbb das mov in push loopne pop pop add dec xchg (bad) jnp mov push jno mov jae sbb sub add aas test cmp sbb jne fisubl xchg mov imul outsb jo out movsl push or cmp adc enter adc popf sub xchg push mov mov pop mov das divps jl dec inc xor loope popf mov aas or xchg lret pop or flds lods jle (bad) or sbb add outsb adc xor in (bad) lcall rclb inc inc dec mov or movsl clc jecxz pop pushf clc pop pop mov jo mov shlb outsl or dec and call out dec stos and stos xor test popa (bad) push mov sub dec fimull sbb xacquire lds jp (bad) push mov lods lahf pusha cmpl rcrb and mov jmp ds and mov xor mov adc in jmp pop mov dec dec daa (bad) jo xlat test pop xor loopne lea mov mov pop data16 ffreep lods mov imul push add jns pop xchg push sbb pop fs pop out and pop push lret adc pop xchg cmp add mov pop popf xor pop jo xorb cmpsl sahf cwtl repz xchg push in push dec repz lock xchg pop mov push mov pop mov dec mov and jmp icebp add ljmp int jae rolb jmp xchg mov push hlt add or (bad) and add xchg pusha out xor sbb repnz and xchg gs add mov pop and cmp inc rorb popf jno and mov and (bad) add mov ss int3 aaa ljmp inc or add loop mov das (bad) enter in mov adc inc add mov (bad) lcall mov mov push sbb xor jp or (bad) xor repnz (bad) lret popa loopne sbb sbb cli lods (bad) out loopne inc push (bad) mov stos jne jge repnz jo add ret loopne pop mov roll mov movsl shrl add pop add rcrb mov and fcomi ret and (bad) pop (bad) inc push mov sub ds imul sub and cmp and inc ds and nop and dec aam stos rcrb xchg adc repz (bad) mov pushf and in ret (bad) lret and and dec push pop xorl push pop jecxz mov cmpsl mov test out mov loop and pusha sahf arpl jnp loopne and cmp sub (bad) iret cli inc push adc add rcrb js xor enter xchg xlat push add bound mov sub cli jnp scas xchg popl cmc popf movsb jbe stos or repnz jmp mov cwtl push cmp insb add dec cwtl in and add test cmp mov sub mov das inc jmp fldt mov sbb (bad) sbb push cli lea pop rorb in lock mov or loope mov mov rorl cmp fcomip pop and add cmp jo in scas sbb mov rorb jo mov negl fcom add adc xor fistpl dec mov test mov adc xchg adc lahf push mov push fdivrs add adc fldcw and fstp flds cld jl pop aad cmp sub xchg xchg xchg (bad) scas imul inc and divl or xor pusha inc dec adc mov mov test dec test xlat jno and add in adc mov inc (bad) popf adc das cmp mov xchg outsl jb pusha cwtl adc imul jbe (bad) repnz jle imul scas aas test cmc out sub add dec loop mov cmp ja out jae pop dec lcall pop add push gs sbb lds testl adc xchg add arpl mov adc cld xchg popf jecxz loopne push and (bad) bound shl mov pop cltd and into push mov repnz movsb (bad) mov mov in adc add loope lods xchg sahf push dec sarl leave pop mov icebp mov repnz dec add stos xorb mov jbe icebp lods (bad) fs mov ljmp in les xor xchg mov shlb pop inc or pop xor dec jno xchg push stos mov test jl push mov loopne sahf out sbb mov pop adc scas popf ror addl sbbl or fs les pop pop test xor xor (bad) dec (bad) cld ja or mov jo mov int jno add (bad) in cli test movsl xchg cmp xor sub lret cmc mov stos idivb out mov (bad) popa or push sahf jno jae add shll dec or fcomps mov jne and add sub roll in inc or cmp insb dec imul or fwait inc subb lock idivl pop or push mov andb adc enter sbb ds jae pusha scas xor mov xchg pop mov push mov mov enter movl in add inc add mov mov popa (bad) mov (bad) adc cmp and dec loop (bad) incl sbb xchg adc xor dec stos push push enter adc les inc daa pop inc arpl xorl popa dec pop mov pop and add lret hlt add in in mov mov repnz out gs jp mov add push dec jae test cli iret jbe adc sahf in push pop jmp push popf dec mov dec mov xchg out cmpsb push test sub (bad) rcrb xchg mov inc bound negb fcmovnb jb popf add xchg pop xor popf xchg mov test add insb sub fs and pop loope and nop dec add adc jl or push test lahf bound mov jb adc pop add jg,pt sti or pop (bad) incl mov push jecxz push fiadd fs cli call loope pop cmp aas sahf mov data16 mov sub rorb and pushf add sub repz add int3 mov out fimull clc mov fstl xchg push flds mov nop mov push hlt add mov pop cmp add movsl adc (bad) ja in les lret jne dec push cmp std cli inc sub test popf les mov adc mov xchg jmp jo dec push cmp jl lds pop sub lahf xor cwtl in dec mov add fild aam mov add sbb dec jns and inc jae xchg outsl inc push dec in lds push fnstenv sbb and jmp mov mov loopne lods in pop aas (bad) jnp (bad) xor push stos jns addr16 (bad) jmp add mov adc sub lea push cmpsb cmp dec xchg mov mov sub jae dec cmc or lock and sub les and mov loopne popa lea lods loope icebp cmpsl dec pop lods xchg sub pop bound jns in or or cmp cmp add fidiv or push fxch orb add cltd push data16 xchg jno out add jns lds and arpl mov mov mov sub mov (bad) call cmp andb inc sbb (bad) add idivl sub dec or sarb add xchg out xor cltd pop and scas rcrb push loopne ljmp jnp or lahf (bad) notl add fcoms clc sar mov jne andnps cmp scas lcall add adc pop lret cwtl or sbb cld or sub incl (bad) xor xor adc add and xchg data16 loop add pavgb imul mov shll imul lock je pop imul inc cmpl mov in cwtl or stos sub out jns pop fcoms adc les outsb mov dec mov mov mov pusha cmpb jle je push or lret lahf add popf shr fildl dec xchg pop push mov sbb sub jecxz call xor mov enter popl and adc or dec dec or jb leave lods adc and cli push sahf mov es xor loopne sub push lcall add mov addr16 cmp popa shrl pushf xor and popa out or and cmp inc jl and cmp (bad) jo push jge xchg mov shlb je (bad) add mov mov dec jb cmp mov daa ret inc mov lret int3 or in pop scas jnp pushf add xchg mov nop jne adc (bad) fcompl stc or cli les lea add les jbe shrb mov mov add bsf inc clc jo sbb adc cmp adc js add or adc and jmp in lahf pop push movsl sti sahf add dec mov stc iret dec inc sub pop (bad) mov jp adc lcall popa add shlb push sbb and sti push pop mov jns cmp cli push pop lods stc and test fsubr cs lea mov inc cli sbb push shrl jae imul mov mov mov sbb fisub and xor mov inc push dec add sti sbb and sarl cmp jg fidivl mov ret lock pushf xor lods xor icebp (bad) icebp dec adc imul push or out inc mov sub add push dec insb pop mov jne push and movsb sbb sub adc test and inc add out mov xchg cmp test inc add fildll xchg fsubrl nop lahf sbb sahf ljmp mov and sub scas add adc add mov adc jns push out or outsl pop adc rorb add push mov mov popa cltd add xlat cmp aas sub sbb aaa or test add call in imul xor popa add rolb fidivr inc incb add addl jecxz out std xchg pop lods add insb fsubl decl sahf adc add ds icebp movsb sbbb jae out add dec add or ss stc and sarb inc sub hlt outsl sub mov jg sub sbb mov out push mov lock js sahf rorl xor xor and sbb ret mov andl loopne inc mov leave test xor pop cmpl mov push imul movsl in leave dec (bad) and adcl dec clc add mov sub or and dec jns loop hlt or test into inc sti lock push push cs ret adc test leave or sbb mov int test mov sbb cmpsl adc dec dec mov jg push fidivr iret daa xchg test das arpl adc repz or lods inc in adc dec mov fbld jmp js or sahf adc mov jo or lcall int3 mov sahf push aas push mov sub adc cmpsb push push jno push add mov push fisub (bad) xchg rcrb div add jecxz js inc adc imul out clc or imul fadds mov pop add cmpl push fmuls adc push cwtl pop ret xor xchg adc sub adcl stos jmp or je les cmpsb (bad) mov (bad) mov arpl inc mov bound addl fnsave jbe ljmp mov sahf cld xor and jp sbb js popa pop pop xchg out add adc or adc (bad) clc jns lcall inc loop push jmp ret shr into push pop add sub stc js push inc or and mov adc loopne enter out enter scas fcom or add mov sahf jl push mov dec or sbb mov inc sbbl les leave push mov test dec cld in and cwtl inc shll sarb xor ret pop cmc adc lock aas out jnp aas pop (bad) xlat cmp inc imul dec mov adc aaa (bad) jo std add sbb pop pusha jnp cmp cld xchg movsb cmc push add add mov adc pop and orb test adc das mov dec fldl test popa cmp insb adc clc mov xor add xchg or (bad) jns clc orl hlt dec sub and mov xchg inc (bad) and and mov add iret push xchg cwtl ret or push leave cmp mov fistl rorl lods imul nop jl add push xor add mov cmp push call xor pop inc mov jo cmpsl lods es add jo jb (bad) cmp cmp xor std mov (bad) (bad) pusha or mov inc loopne pop add push loop mov js stc cld test pop jl popa popf pop jne pop test test fdivr cmpsl aas dec pop or imul adc or sbb add mov icebp jne cmp adc js test aaa clc fwait sub jns cmpsb mov jb add and hlt cmp add xchg inc dec adc or sub mov mov js outsl mov lret rcll sub jecxz pop jl arpl mov (bad) aaa or insl cld mov or or adc (bad) lods addl xchg sbbl jge out pop rcll or cmp cmp sub sub test jns xor sarb add or inc sbb sub test dec inc add mov sahf cli jnp add mov popa jno loope adcl shll add js lock pop sub loope stos test sub adc cmp and mov out xor add jnp (bad) je inc push xchg sbb adc subb mov mov fiadd jecxz and jecxz add add pop jne adc mov pop jns loop mov and lods xchg add or adc pop cmp cmovno enter (bad) dec hlt daa dec pop mov jo loopne push mov mov xlat aaa stc jnp lds or xor les cld into cltd in pop je inc dec push dec mov cmp lcall add (bad) imul adc mov and xor popa arpl scas xchg adc (bad) jo outsl mov dec je icebp rclb cltd pop xchg shrl xchg mov cmp setl pop into jo (bad) add pop mov add jae mov nop (bad) lock dec sti pop pop ret aad fnstcw sub call jp insb inc jmp sub xchg pop scas and jge and adcl insl dec and out cltd sbb xor cmpsb push adc aam or jg cmp fimul aam lock or pop stc test add (bad) in lcall fwait mov in cmc jb mov clc mov jl inc imul sub loop pop lret out xor cmp jne push xchg out or inc cmp mov cmpsl orl and stos push data16 repz ja push pusha xor pop jno or mov hlt jl or ds addr16 inc adc jb sbb jecxz cmpb shlb sbb push orb fdivrs sbb lret int3 sub shl add lds pop or out mov jno xchg or jne shl push fdivp add mov pusha jo or cs imul mov pop fwait sbb or (bad) out xor loopew mov jbe xor add cmp add xor or cld add xchg in push lock jne sbb jnp aam adc and clc xor push cmp aas adc and stc and aam inc loopne push sub scas add xchg and dec int xlat or push je cli out dec std push push and addr16 sbb orl xorb das pop mov enter mov push xchg out movsb and pusha stc (bad) or push add insb pop and jno inc mov call dec faddl cwtl cmpsl xor sub mov xor and cmp test sub fdivrp jecxz mov or jo xor mov mov xchg push fstpl xchg pop outsl pop xchg cmp orb push push in outsl and (bad) or leave and inc mov push movsl and ds adc mov push xchg shlb sub xor sbb or loopne and xor fstps into add mulb jne mov xchg mov je add add push adcl test enter dec int3 call or enter imul hlt jns or int jno inc mov adc mov shr xchg (bad) jle lcall subb mov (bad) xor mov xchg mov lods cmp lahf mov repnz dec sub xorb add les xor cwtl inc addr16 add sti cs fstpl andb sar push movsb or rorl repz jae leave lahf xor or dec in call fstps cld loop mov and pusha adc inc rcrb cwtl inc adc insl pusha test cmp push aad sub loopne jmp dec or cmp jnp cwtl add cmp mov fs lahf xchg mov ljmp fnstenv mov movsb icebp xchg lock xor dec dec xchg adc dec lock sbbb mov jmp and cmp fimull lods dec fdiv inc pushf lds mov xchg jb,pt or stos insb nop enter lcall push inc jmp icebp ds or cwtl in xchg add lds adc inc lock add mov xor jno ja pop rorl mov hlt cltd pop add ja jne dec add sbb out fs xchg js mov dec dec fptan add rcrl icebp popa les adc test sbb movsl push add xlat pop mov arpl push add lahf dec push js mov or adcb dec mov jae or and test xor xchg xor sbb adc cmp pop sub addr16 and loopne fiaddl fadds cmp fnstsw mov je,pt add pop mov lods es and dec xchg dec adc dec add xor dec add fsubs xchg sti add ds les mov and jno sbbl add sbb mov inc sub lock xchg inc or or and inc sbb sub mov pop or cmp inc and mov int3 adc cmpsb clc xor (bad) sub je push mov adc shll pusha in fadds dec xchg adc mov mov sub mov dec lods pusha lcall pushf out add jmp xchg mov loop and cmp loopne ja jbe in cmp sbb loop jns add lods gs lret push fisub pop mov and and mov call sbb adc add push arpl cmp pop ret cmp xchg cmp nop stos rorl mov sahf inc lock lock jns popa cwtl outsb out push push jl imul xchg sbb jmp (bad) xchg xchg lods mov daa push les or js loope xchg sub (bad) mov mov lods sub jb dec sub add sti aas or pop mov and ljmp loop outsl xchg push push inc cmp push hlt fdivr jg fistpll adc popa je,pt push pop xor pop jo lcall and jmp adc and push cmpsb sbb mov dec sub mov lret mov mov pop push pop jmp xchg inc imul adc jo xchg ret test scas int fimul push push push sarl fstps dec inc add movsb push push add sbb addb outsl pop repnz and je or rcll imul addr16 fsubl add inc cwtl or cmp mov test sub xor mov pop mov cwtl sbb shlb clc dec sar and dec aaa (bad) hlt std stos dec clc adc push lods test inc repz orl sarl cmp bound xchg dec (bad) pushf xchg cltd xchg jg inc rcll mov pop mov push aad sub and call push popf ret rorl xor sbb mov push dec enter das ret or sbb mov in pop or mov sub mov out pusha mov add icebp mov add in adc and rorb xor mov cs inc add mov push shrb xchg pop out andl sub mov sub push pop dec dec lahf pusha adc jp cmpsb inc push cmc sbb aaa adc xchg (bad) mov add sub cwtl and inc aas push cmp push shll mov jbe pop insl sbb sbb aad add test pop add cmp stc sub orb push push icebp mov push mov dec fwait stc mov ficom in (bad) jo lahf sbb inc cmp push sbb jge add in push (bad) jl xor das push dec inc or inc movsb pusha dec sahf add xor fiaddl in xchg xor mov lods xchg or fisubrl add sub sar adc in insb in add shll adc jns popf adc adcl addr16 inc dec pusha lods adcl add iret das mov xchg fcomps test iret xor icebp je lods and add cli mov ja pop push fistl scas and popa adc or pop xchg loopne add rol out cmp or cmpsl inc in mov imul dec cmp adc daa adc cmp pop and mov dec pusha stos cmpsb xchg cmp icebp repnz sub leave inc xor mov addl or test test pop sbb cmp call stc sahf adc cld mov jns sbbl inc flds fcomip adc jno (bad) mov mov xor lret inc or pop (bad) test daa add jl (bad) dec test rorb mov outsb movsb leave mov sbb test mov sbb pushf jb ja les (bad) add (bad) or icebp inc pop xor adc add je mov adcb pusha enter or jno cmp aas scas inc add push inc fcomps sbb fs in js add movsl mov or inc out in mov cli cmp cmp add jmp add dec dec ljmp dec push cld add xchg dec mov xchg xor popa jge mov mov mov mov (bad) mov xchg mov push punpckhbw sub orb and xchg adc je andb mov aad leave sub lods pushf add cmp insl add rcrb (bad) (bad) sub mov clc loopne adc mov add mov js mov jo scas cwtl or mov out cmpb aad jnp push lods lcall xchg mov inc popf mov jmp cwtl push push jmp in dec mov xchg jns addr16 lds add cmp fisubl sbb mov lahf test jg xchg add lock mov out xor sbb adcl pop sti test roll or sub insl addb clc ds xor jb subl cltd mov arpl rcl sbbl ror sub mov (bad) and jnp pop add and push xchg test insl fstps fs mov mov cmp dec aas jns and test pop mov lock aas jmp bound and push in in cmpsl add (bad) jmp inc addl scas call sub sbb outsb test cld fcoml sub aam pop les test mov popa aam (bad) cmc and scas adc add (bad) (bad) ss jo decb imul clc add adc inc adc cmpsb lret cltd rcll sbb outsb arpl dec sub inc jmp popa imul pushf in add cmp mov adc sub ret mov clc jno adc xchg sbb and push adc and mov subl cmp push fdivrl xor ja test and add fldl push add mov xor adc cmp outsb sbb or xchg (bad) std push add mov xor and inc in addr16 dec (bad) inc enter imul or aaa je xor lock (bad) cmp dec or aas and pop adc bound fisubrl push xchg add xor inc pushf and mov push push jp (bad) insb push and push mov out cmp jnp xor roll xor pop xor adc movsb adc xchg and ret sub and mov and cmpl dec xor inc shll dec pushf mov shrb fiaddl lahf test add pusha adc push adc pop lods sub sbbb cld cmp add dec int3 jns ret pop addr16 lock enter sbb xorl sbb sub cmpsb lods adc or sub lahf sbb add push adc jle mov pop xchg pop popa jle mov cmp pop sbb (bad) out lret and stc xor inc xchg stc pop ret mov js mov jnp pop cmpb std cmp test cmc mov outsl mov popa jb popa adc jns mov push cmp inc les lds xchg and sub pop lret mov sbb jle popa and loopne lock mov push daa mov hlt dec push xchg fbstp popa jmp push daa mov jecxz mov mov mov inc gs out pop dec icebp cmp mov xor or adcb test mov or loopne jecxz cwtl lods (bad) sbb std sarb hlt add cmp bound and leave jp mov add and ret in (bad) cmp loopne roll arpl fist imul stos loope adc push mov and in outsl mov mov cmp push cmpsb mov push insl movb add cwtl fcomip test mov popa ds add mov fadds mov outsl enter dec mov mov cmpsb dec test lea add dec adc pop (bad) loope pop inc sbb das popa mov sbb mov add adc adc xor divb mov out (bad) mov dec and stc add notb sbb pop push adc orl xlat shrl mov push pop es pop loopne hlt xchg xor in push repz adc das mov aad sahf repz leave cld xchg inc rcll mov pusha repz mov and enter add cwtl dec js dec mov pop inc inc pushf sbb jns cld add jmp dec insl cld adc push lock dec subl fcmovbe inc add lea jns push mov fstps sbb jl mov loopne test das pusha xchg lea cmpsb or mov lods int3 mov push dec shlb jo add mov jmp push push fs ja inc xorb push pop add cwtl clc and mov leave mov test xchg add sti mov or jnp or fsubrl jge xor cld and dec leave fs xor jge add out jns sub adc push repz int3 inc inc in repnz dec fwait add pop sbb mov sbb (bad) in mov jno nop pop dec imul addr16 push into mov xor mov xor test pop xor test adc lahf add out in mov add out jl inc and sub (bad) lds xchg aam js or arpl icebp mov cmp inc pushl sub mov loope push sbb cmpl or in into ret and pop or (bad) sbb dec xor sub test or adc or sbb mov jmp push aam leave out clc outsl addl xchg pop dec mov pop mov in push xor cmpb daa sbbb add pop test add xor or add xchg outsl cmp jno hlt (bad) adcb sbb jns push mov js test pop mov inc cmp mov pop and pop mov fist mov add ja push jp sub add mov inc fiaddl shll aam sub xchg mov andl sub adc push add outsl mov mov add dec xchg sub push stc fimul lock mov push cmp in cwtl sahf add inc aam scas mov rcll cmp ja fs fnstcw and or (bad) mov std test mov mov repz mov aad add sub aas sahf cli add outsb xchg popa mov cmp push mov rclb icebp movsb xchg mov xchg adc test add pop mov inc stc sub push int3 loop xchg mov push cwtl add rcrb mov sti pop pop mov ffreep adc aaa inc adc subl into outsl add adc (bad) cltd js jns in inc cmp pop push adcl push sub cmp jns jns xchg and int3 dec adc nop icebp push xchg mov dec lcall popa inc test and sub sbb xchg enter ret rorl outsl mov add mov shll out cltd in call shr jmp les call pop mov adc mov rolb sahf sbb add bound and jge pop dec and repz cmpsl dec adc push and (bad) sbb mov adc das loope inc or and lods test enter sahf das dec gs imul xchg add mov and or push push inc xchg pushf cwtl mov inc mov lea sbb add stc les mov add pop gs dec pop in pop pop lds (bad) add xlat mov mov xchg (bad) dec ds test inc addb int3 inc int3 enter stos cmp pop pop or mov mov xor add mov and (bad) idivl pop xor sub adc and inc add loopne pop push push into xchg adc and mov insl mov adc sbb add jl dec mov mov fs mov jp mov push push imulb mov sub pop movsl mov test mov fsubrs jns shlb mov pushf or in nop movsb clc add add adc push push xor pop add lods jns xchg pusha add mov inc xchg pop and js add ja xchg add repnz nop movsb xchg push mov icebp push ja inc insl cmp mov add repz inc and sbb push out gs mov dec pop jbe int3 and dec incl sbb add aas add rcrl ret je mov movsb cmc push je push adc or mov mov add add push mov popa sbb cmpsb push sub pop sbb fiadd rolb mov adc movsb je sbb sbb fst jmp nop sub inc adc inc shrl imul mov xor pop in test fsubrs leave mov and inc push add mov sub cmpsl inc cmp push pop hlt fs pusha add push and mov xor cwtl or push aam add (bad) (bad) jae inc js sub cmp xchg clc jne pushf sub dec xchg movsb js scas arpl mov or add pop mov xchg subl mov sbb pop pop dec in mov aad push popa cmc xchg mov mov mov push or cmp mov fsubr popa lods addb or mov cmp adc and push shlb aam push or push sub loope or or mov xor mov aas add popf movsb adc orl inc lock sub rcrb movsl enter adc push in and adc add pushf mov pop push mov in sbb fisubl hlt (bad) xor ja or int lock std or lret push mov lods mov test or int3 xchg out push push inc repnz clc add rolb sbb jnp sbb cmp fist icebp loopne inc or cmp cmp stc and loope push sub add inc stos mov testb clc adc ds lods test leave push scas inc cwtl (bad) popa cltd sahf jmp and add test adc cmp pop sub jae mov iret sub mov rol test (bad) les nop andb jo xchg addb mov pop adc scas das mov push jl xlat lcall mov sub sub clc mov out and (bad) mov add pop adc shr pop movsl mov rcr divb js xlat dec xor xor lret sbb sub sub je push mov or addl adc push mov aas mov dec stc sbb (bad) or mov (bad) jae and sub add mov push (bad) (bad) pop fdivr pop cmpl dec loopne pop in sbb sbb insb mov add jg test iret adc xor or xchg inc mov add dec sarl mov unpcklps mov in ret mov addl adc imul mov mov flds sub or inc call adc dec jae pop iret daa sbb cltd shlb clc sbb scas mov je or cld ja mov dec push out push adc or jp sub inc ds movsl mov and add xchg mov mov test mov sbb rclb xor fsubs xor fmull mov (bad) xchg inc adc inc enter pop icebp mov in call out cmpsb loop mov xchg and or cs aam inc sub jae inc xchg inc add hlt mov and stc sbb dec and lgdtl xor add inc sub inc push pop sbb cli repz mov stos call cmp fstl push sub adc (bad) pusha out lds mov fisttp xor lds and outsl push pop or mov xchg adc sub negb out aam sub inc jbe in xchg mov dec and popf adc mov jno adc (bad) inc mov mov sbb sarb pusha push imul cmp addr16 jl call dec mov shl notb pop xor add xchg out xor push add sbb inc pop movb mov lds loopne dec inc xor add push mov (bad) cmp jbe sub out or or mov movsb dec xchg sbb test out xchg jp cmp push add lods ds fdivrl loopne arpl xchg jmp mov loope inc outsl mov sbb push ljmp arpl add movsl ret callw cmp jnp xor inc xchg out xchg cmpb loop cmp pop inc movsw and jo adc in cmp mov fsubrs ja lret mov (bad) cld add dec stos repz add fsubs int3 mov andl jb adc incb int xlat int3 idivb push inc or add (bad) out push dec or jo fcomp rolb pusha dec popa mov aad (bad) sbb aam xor cmp ret adc cld movsb adc dec inc clc push and inc and mov add (bad) cltd lret test das cmp mov sti dec cmp dec and gs sbb dec inc mov inc jmp sahf mov mov sub add flds orl inc xor nop push loopne add loop es pushf fisubrl pop lret in mov sahf rolb adc pop xor mov xchg dec xchg adc outsb push add lock add mov (bad) jae add jb and mov loopne inc in xor push and mov ret fsubrs cld sub or jecxz imul inc mov das insb and call sub inc xchg lcall mov push fsubrs add nop ss out xchg add add fdivs mov mov leave (bad) ljmp dec pop pop or repz mov cmp pop ds lret cmp cmp cwtl mov or mov jno mov in mov sbb add aaa jb and xor mov xor pushf aad movsb add pop sub (bad) sbb or addl cmp ja lcall (bad) fmuls (bad) dec sub xchg add cs pop cmp pop xor dec les push arpl inc test sbb cmc in sbb and imulb pop and adc lods mov popa inc pop jle js and push shr das outsb and xor pop mov cmp data16 pushf in jmp sub mov xchg inc rcrb push dec ret subl loopne mov jo sub (bad) insb stos add mov or xor leave adc pop inc movsb sub add shrb or movsb mov sbb dec hlt pop pushf add pop push subb int3 mov push pop cld scas add add jo jp mov (bad) and add jge aam icebp addr16 pop or add cmp rcrb mov dec pop add cmpsl adc cmp dec imul leave xchg and or add int3 int push shrb mov dec add inc and js leave and cmpsl mov adc rorb stos out imul in fcoml or aaa add push and jb cmpl leave adc rclb dec add xor pushf sub dec subl repz mov pop xor jp add js mov sub inc xor pop xor cltd in or cmp ret push mov mov cwtl dec aam and rclb js nop lock sahf add adc sahf adc xchg sbb dec pusha lods mov dec pop push mov or pop (bad) mov stos push pusha dec pop aad sbb repnz mov mov scas out xchg inc sbb sbb mov lcall cs leave es cmp jbe loope sub (bad) and enter and mov inc nop popa (bad) mov mov sub je add add dec xchg clc adc jge (bad) test inc nop repnz dec nop pop or mov sub jne dec cmp inc aam sub xchg arpl cmp les (bad) adc les add xchg mov add arpl call dec rcl in ret ljmp inc in or xor cmp add insl test add fisttp movsb daa and ret in insb dec jl pop repnz add into push std and rolb push popa mov mov add xchg mov inc sbb cmp push sbb mov test add jbe (bad) xchg out inc mov push sub push xchg inc dec sub jl sbb push adc add ret insb or clc mov lds in mov pop xor imul das add dec rol mov mov cmpsb call pop ret or shlb cltd pop adc add pop scas cmp sahf ret mov test fwait cmp add jle or loope and xchg add or les loopne fwait out dec loop sub mov rcll subb cmp cmp and insb jle adc and push orb dec jo clc call in and mov imul popa pusha call and fiadd add lock rclb idivb push and add sbb sti pusha mov js adc push mov or jle addl mov mov mov fcoms dec rolb push jge (bad) push mov sub xchg add cmc incb into aad aas sbb xlat mov int3 xor ret add mov clc sub push mov enter jns inc adc jns adc inc and xchg loopne ja std mov xchg jle sbb lods data16 add callw call fwait adc cmp lret cltd pop pusha push (bad) cwtl pop notl fld1 mov mov roll cs mov call add pop ret rolb mov mov jecxz sbb sub lcall ja adc (bad) nop cmp mov sbb mov pop mov pop cltd inc pusha pop xchg cs mov cmpsl adc mov inc into xchg js add cli sub aam sbb arpl jo daa sub and xor arpl fcoml aas sub jmp and mov mov out adc xor inc sub ja inc pop iret stc jo ficomp lret dec mov loope enter cld jle mov test sub and out mov out sbb roll and xor inc inc mov pop jmp add ret insb enter sub loope jg inc pop jbe or test jo or sbb cltd stos sbb (bad) pop push mov inc and cwtl rolb out adc sti int3 and mov data16 mov scas lock (bad) pop dec in add scas shlb mov test leave xor call sarb das (bad) out jno dec sbb mov or push popf sbb mov inc test test ljmp xlat fnsave pop (bad) movsl sub (bad) mov mov ficoml fild dec jecxz add repnz xor xor add clc pop inc dec pop pop mov sarb int3 ja cmp andb insl and lret dec add sbb test jo cmp leave enter stos cwtl pusha add arpl dec xchg pop out movsb inc rcr pop pop sar mov jns add and enter std mov dec mov bound sub dec mov mov rcll adc adc jns add pop cmp dec js mov cmp mov icebp xchg sbb and dec lds (bad) jmp inc rolb addr16 lock mov inc (bad) subl js sbb sarb and pop (bad) out clc in andb mov push mov and dec scas je sub xor jbe loop sub das call jo dec sbb decb sub inc pop and arpl jl loop in inc xchg mov out jae cs xor aam (bad) push inc mov je pop rcrb mov add mov xchg cwtl xor pusha sbb jbe or xor mov jno clc call or or nop mov add push les push dec or test std stc lods dec add lcall jae xchg scas xchg cmp mov cmpsl and mov cmp dec cmp in push call add mov mov cs xchg or jmp dec les je or pop lock clc and push pop mov lds push call add leave dec adc add lds add push add sbb mov out nop cmp adc push mov dec add inc pop add daa call jmp add sar inc pop push (bad) fsubs enter adc xor mov je add cmp (bad) gs jb sbb add sbb js inc sbb orl or aam inc clc jl in mov inc cmp test loopne sbb jbe scas and pop test pxor fsubrs xchg dec pop push mov inc push push inc adc adc cmp jmp lea xchg mov mov lret xor jecxz or and pushf lods inc mov sub push dec gs int3 mov gs loop and pop and je dec dec push jns shlb inc imul add loopne or pusha es adc mov and mov std test add nop xchg pop movsb ljmp pop push pop pop addr16 repz aaa lret std sbb stos je fiaddl or (bad) arpl icebp mov mov out push stos xor shll mov (bad) pop add pop xchg pop int3 aad xchg fnsave mov adc add add (bad) loopne push fnop sbb jp rcl push inc fisttp add xorl decl pop xchg out mov out ret jmp aas fiadd and ss cmp mov sub sbb cmc sbb or shrl or shr push cmp call or mov rcrl repz push or and ffreep cmp push loopne xchg pop test fadds cmp pop xor push dec jae inc addr16 cltd add mov pop bound xchg inc ss mov lds insb cltd repnz mov xchg sub imul mov and cs and sub repz mov cwtl mov add add push or ret sub adc mov int xor add movl add jg sub inc jmp js xchg adcl stos int3 inc insl xor jge lcall push ja mov inc sbbb in push aas xor aad movsb stos lds and in add lods sarb add fsubrl cwtl rorl mov sub mov add jle pop and mov movsb dec push push aas pop sbb inc rcrb and lods sub imul movsb aam scas push xor or and push add testb sbb mov aam mov sub out aad jo mov aam scas xchg cmp mov mov and stc add xor xchg out adc sub rolb loope and push andb ljmp pop add addl mov in xor (bad) mov mov mov daa adc pop cmpl and cmpsb sub nop mov cs and and inc icebp push out pop add add mov xchg adcb imul push mov push inc or fsubrl bound mov xor inc into popf jge addr16 xor aad jbe mov fsubrl add or repz outsl or das add in pusha lods jp xor and mov add insb repnz add aam or or push push push icebp nop nop cmpsl and cmp push fcmovnbe (bad) sub inc mov add subl loopne stos jno arpl test mov xchg dec stos add rolb cwtl nop insb add out sarb sbb (bad) xchg inc aam pusha jmp xchg out mov ds or inc movsb push scas movsl mov add aam xor lods add nop rcrb inc cwtl mov test inc and inc lea fdivl jb or in int3 cmp push sbb sbb (bad) and lock xlat daa adc mov add fnstcw pusha divb inc stos popf add (bad) scas sahf adc or rolb cmpsl adc enter fidivl shlb add sbb insl jnp (bad) xchg subb inc jno in and mov mov cwtl or je in inc mov mov pushf lock sub stos sbb cwtl inc sbbb mov mov cmp sbb sbb adc rorb cmp mov rorb jae pop shrb pop jp inc mov pop rcl sub push push add xor lret jno roll cmp cmpsb sbb and push cmp pop les loopne and mov inc mov fadds mov inc inc push sahf rcl test lods mov popf loop loopne adc and lea sbb pop out xor push jle mov sub and push adc inc and les outsb fldl adc mov call xchg jo add jl test sub mov mov ret adc cli cmc jno clc sarb mov cmp push jecxz mov or aam inc xchg mov nop xor lret insb sub hlt add and cmp and xor fmuls xorb xor es xor clc pop pusha cmp pop ljmp lds mov es faddl out dec and pop inc mov mov push add inc lea inc pop xadd push xor (bad) mov pusha es add adc pusha xor popa outsb add sbbb test push cmp (bad) mov aas adcb in add es roll cmpsl mov xor ljmp add add push mov cmpsl sarb mov int3 push rcll rolb (bad) cmp xchg jns add inc mov xor mov xstore-rng cmpsl inc inc dec mov dec jns lret and xorl mov movsl out int3 mov call pushf imul lret pusha imul rorb fdivrl pop mov jl dec push xor pop xor pop or roll inc add jno adc mov fcoml cmp mov insb push jno mov inc in jne xor add mov lock push fs ds fadds outsb add je test mov sbb pop fs push inc xchg cwtl adc inc dec inc subb mov and add push xlat xor push or mov fisubr mov add imul fldt das pusha lock or xchg mov xor xchg fldcw mov mov cmpsl mov or andb clc xlat adc in add dec adc sahf jmp and popf lds jle or cwtl lret adc lea (bad) add (bad) jo dec loope xchg inc nop mov rcrl add ljmp mov les or jbe jo mov stc push or inc push inc nop test fistpl add xchg xor (bad) xchg add rclb insl pop test and inc push and subb imul adc push les add or loop jnp xchg sub decb mov mov test xor xor adcb mulps or push subb sbb xchg and fdivrl sub adc repz sub inc (bad) sbb lds mov xor jbe pushf xor mov xchg mov sub jl jecxz daa enter or cmpb icebp add inc adc xchg int3 adc xor mov add stos incb mov les orb jl sub movsb dec jnp add mov cli or inc icebp cs fdivrs add inc sub mov in jg dec mov push nop xor xchg inc push les and cwtl loopne xchg push orb sub cmpb imul pop test aaa xchg jl add out movq add or (bad) xor popw js jle pop xchg pop stos loopne sub xor scas and xchg or mov out lret dec xchg adc fidivl mov cmp or jg and jae xor test jno push and add (bad) xor add btl pop aas out fisttpll lret pop sbb or std rolb stos (bad) cli cli (bad) ds cmp lret mov sub mov add ja ficomp mov xor and setbe (bad) shrb jecxz mov mov enter push sub and push mov cmp inc sbb mov push inc orb mov sbb and (bad) cmp scas dec and lods jno or fisttpl mov push pop rclb lods popa js sbb es into hlt or xor mov jmp xchg xor xchg ss (bad) mov sub push insb jl mov and mov push jle stos int3 mov push iret inc aas dec add cmpsl sub sub mov pusha cltd add mov mov (bad) repz push cwtl jae (bad) out xchg punpcklbw pop cmp pop inc pusha movsl sbb sbb mov cvtpi2ps out (bad) xor stc shrl xchg and inc add pop xchg pop insb adc pop mov pop cmpsb je sbb xchg and mov imul and or cmp loopne les pop (bad) cmp sbb cmpsb mov jns cltd test stc adc pop sub pop pop cli or push popa outsl and inc loope orps in rorl out loopne dec repnz cwtl mov jb add push scas adc jo push push cmc fucomp inc inc inc nop xor fldt and aam add adc lahf dec call jp jns jo test or and rolb add dec jge dec xorb sub push test adc ret inc mov inc pop adc fisttpl fisttpll movsl push js pop fadd clc adc fwait mov add push out push xor mov clc jecxz add or jp cwtl gs xor inc jns dec shlb (bad) sbb hlt add ret cmpsl dec imul sbb ja rorb hlt pushf test iret lock adc and xchg sbb mov test decl mov nop inc aad stos xchg cmp sub mov cmpsb rcr or adc add ret popa cmp clc inc cmp and pop add jg jae inc adc xlat lods mov mov inc sub hlt out fidivr cmp add in scas mov add add inc pop es loope add into pop pop push sbb stos pop test adc and shl adc fidivrl shr out ljmp arpl mov (bad) add xlat movsl in mov mov add loop divb ret adc jbe sarb cmc insb sbb inc shr add pop inc mov movsb sub (bad) add xor dec pop sub adc movsl inc add ret movsb shl int fistpl loope imul js psllw push add stos adc add jne add mov lea rorl fwait inc call inc mov cltd ljmp aas and add jl lock fs mov lcall adc lea cmpsb push test jae dec pop movsb inc mov inc aam ljmp fist cmp adc push jl call inc (bad) adc imul add outsb cwtl (bad) push mov aaa xchg mov cltd in adc test mov inc ja jle and dec lods nop dec lods test and test xchg (bad) or adc push dec pop adc jae cmp aas pop shlb cmp jmp xorl int3 loope test bound push pop pusha mov inc push fsubs std inc add sub inc push imul dec xor push pop and rolb adc inc cmp mov pushf stc or dec cmp dec inc pop mov cld mov inc rolb sub push pop xchg pop and in jbe add add jecxz les (bad) into mov inc nop and and add mov clc ret test loop add xchg nop and stc pop mov ljmp shlb daa xchg sub xchg xor inc les jo mov aaa add add jo jb sbb push fdivrs xchg inc fistp clc aas imul test add jl loopne inc jae add or mov call ret inc int3 xchg arpl das add inc test xchg inc push (bad) dec js xor lea lods cmp mov je inc push pop fcoms cltd (bad) mov lcall jns outsb call ljmp push rolb leave inc add addl dec lea fstpt mov inc les pop aad lahf add out jo or push in stos adc and mov sbb dec mov mov adcb xor ds jg cmp add bound pusha push addb scas imul das or sub sbbb bound in pop pop jge jl lock sti add fisubl add jge add scas mov pop hlt push aas addr16 inc loope,pt sbb movb xor cmp iretw xor mov push mov pop lret jecxz clc xlat add pushf hlt sbb xor jp and (bad) imul sbb int3 lock jns add inc into je and dec cmc sbb cmp push shrb xor push pop mov sub jmp pmulhuw push arpl cmp add test in fdivp add scas je (bad) and aad xor sbb xor xchg str lods je add cmc or mov sarl add adc pop ljmp add xor data16 pop or sub push mov (bad) int3 jl inc and mov xorb or or xchg or jp enter pushf sub sbb jnp mov cwtl mov jp cli adc xchg or cltd orw iret add js mov push mov sbb pop out cmp sbb dec loopne or stos repz in stos xor pop arpl cmp andb xor sarl add repnz pusha adcb pop cmp loopne std lods test push shrb cltd movsb aas cmc add inc leave sbb and pop cmp push out or cmp std mov or (bad) rcrb push js test fcompl jnp loope movsb outsl xor (bad) call cmp fsubl xor int3 or sub leave xchg enter xor shll add xchg xor add lds add fs jnp mull mov push (bad) xor add mov mov loopne adcb xorl mov sbb jne outsl movsl std cmp add clc test pop in pop jmp sahf dec pop xchg jle mov jo jge add imul iret test cwtl scas add add lcall stc and mov aas cwtl or jle push loope out dec cmpsl inc jo movsb fcoml stos xchg or sar (bad) mov pushf dec xchg int3 add arpl xor loope dec push hlt cmpb add inc sar add mov mov jns out push (bad) mov push inc dec or fsubs int3 mov push push adc in pop dec inc loopne lods pusha (bad) int3 out inc adc icebp push push pop mul mov lods out adc scas subl inc ror pusha je add enter shl imul movsl and and mov outsl loop add xchg rcll (bad) (bad) leave incb jl rolb clc fs mov and testb sub add cmp jo lret add xor fisubl jne shll push insl sub pop pop xchg test inc mov and shlb out enter add jl xchg data16 loope adcb js push scas pop sub outsl loopne and mov push xchg push and in add lds ljmp xorl adc insl jge or add mov in add fldt enter jo and testl fnstenv lods xlat dec jbe xchg stc rcll pop jo pop repz clc or mov subl push xchg xorb adc mov mov jl test jecxz movsb nop mov nop adc add jae xchg jp dec lret pusha or pusha lock push jp scas divl scas sbb addr16 pop push adc add iret push mov aam add inc insb std pop mov sbbl mov inc flds xor sub rcll push xor jl pop lods sbb sub cmp jae add or fwait das jo es sub cmp test rclb insl arpl les cmp adc clc mov add sbb je xor dec lret mov int into hlt sbb inc nop outsb enter mov xor les jmp sbb ljmp cmp loope inc or xor insl jle int3 xorl adc in fcomps xchg add xor add adc inc cmc iret adc or jl inc sbb jp call push dec jns sub cmp mov test xchg or push and stos cmp push pushf push lock jecxz xchg mov in adc daa fidivl ds mov xchg pop jnp sub les in pop adc dec xor xlat pop pop call pusha faddl js adc push pop inc fdivl jl bound test in ret xor cmp jl mov in inc hlt hlt and inc je iret pop dec lds jl fmull mov push jb enter xchg mov mov jl cli jae inc ljmp sbb xlat cmc pop add shl mov hlt push add ret mov mov sub or mov enter dec push in dec pop int3 sbbb hlt sarb push mov inc rolb divb cmp ja sbb dec sbb cmp outsl pop call add dec fchs xchg push jl lods xor in imul loopne add dec lock subb dec mov xor fcmove ror sub shlb std gs orb add xor subl and (bad) in push sbb ret push mov mov and and inc sub jns and fdivp pop jne das lea imul dec sbb add insb leave adc inc push test pushf aam add bound xchg sahf and (bad) mov add ficoml stos sbb and mov incb add sub out jnp mov outsl out sbb cmp lcall repz add (bad) test adc dec pusha (bad) dec mov inc pop xchg fsubrl je cltd lods lcall ret fdivrs fildl into std mov jo mov lock ficoml dec inc cmp push hlt (bad) jmp in fisttpl and dec add pop stos xchg pusha sub enter cmp xchg push dec lods cmp and dec lock add les adc pusha or pop push test nop mov inc insb xor adc sub nop mov push (bad) cmp mov push cmp jbe push or ja,pn inc pushf call stos std movsb pop aas jnp (bad) popf jle add je (bad) inc test adc or add pusha mov xor jle bound scas mov lock sbb nop sbb es inc mov sub mov adc pop rorl and add fcoms jge xor xor sbb jmp push in jp pop sbb dec add sbb push xor xor es mov lcall mov enter inc in xlat cltd in je loopne xchg cmp mov repnz mov scas int3 sbb jnp mov xor mov (bad) lods leave cmpb xor cmp in or jl pcmpgtb inc push pcmpgtw mov push out or mov xor add pusha xor inc xchg popl mov les add (bad) push mov or daa add lret mov pop (bad) xchg aaa dec mov cmp sbb sbb xor clc lret add es mov nop pop dec jb add hlt or pop ljmp js sub adc jl cs cmp jnp mov inc xor jno sbb add xchg dec ds xor add or mov pop add jecxz test xor sbb std mov jo ficomp cmp (bad) imul push sub imul mov adc xchg mov dec inc outsl push and jo or scas adc popa push repnz imul inc cmpl std test loopne jg imul sub and mov mov insl push sub or sub push fildll bnd popf leave mov jo test std scas shrl sbb adc mov and sar mov mov mov add ds sub add outsl int in sbb pop inc xchg shlb xchg in jp push xchg sti fdivr add and add pop dec or inc data16 and push xchg arpl pop sbb lret xchg push pop and mov jmp add jecxz fcmovnbe ja pusha and add xlat arpl fcomps or and roll andb lret add sub popa sarb sbb iret xor pop incb test dec pop jp mov add call orl ret xchg add mov xor jo add syscall push add es fimul lock mov out (bad) pusha jne mov adc mov add xor sub jmp ror pop cmp mov pop add (bad) fistpll pusha sub xlat outsb fstpl and or pop mov scas mov pop ds xchg sbb xchg add jecxz add shlb push jno add lcall outsl in iret punpckhdq cmp loop sbb push add das push icebp jl mov mov pop push and sub xor push sbb jg test in aas jle ret push loope or jecxz sarb popf jp clts mov ds pop hlt xchg add xorb cmp arpl pop stc std add inc push dec sbb (bad) mov imul xchg fnsave outsb loopne add in fstpt add lods dec shrl imul xor js pusha mov loop jp mov int3 outsb xchg jecxz pop lcall fisubr xor test adc add (bad) int add insb lock pusha (bad) sub jmp cmp pop fidivr stc jns add xlat jno add or mov dec shl and idivb ds adc xchg inc sbb mov adc gs testb aas mov aaa addr16 cs aam sub ja incb pusha jbe or fildl sarl cld mov add pop add mov jo push push incl adc cmc sbb and lret nop dec cmp add sbb clc cs cmp add or mov pushf pop jno xchg xor cmp testl cwtl jecxz sub or add pop xchg and xlat js xchg sbbl out lcall inc shlb mov idivl push adc pop and loop inc lcall cmp dec and inc pop lret sbb xchg fstpt mov add repnz andl fbld adc cli fadds (bad) lret in loopne adc push (bad) int3 sbb pushf test inc push jle std nop jl loope adc jecxz add sub sarl adcl es inc mov add lahf mulb fnsetpm(287 addl xor nop pop addl popa fisubrl add jbe int3 or cld arpl dec out sub std neg jle adc add mov fidivr nop pushf ret (bad) jne push scas out sbb mov cltd je add loop leave ja adc push inc mov aaa adcl hlt add sub int3 in nop sbb ja dec clc dec (bad) cmp add jle flds lods xor lret cmpsl xchg xchg (bad) mov repz cmp mov sti xor jno punpckhbw shlb pop sbb mov mov dec iret mov mov pop xor or mov icebp rcrl les enter push out cmpsw dec aam mov xor add push mov mov add iret mov mov punpckhwd nop sar add xchg sbb jl adcb sub imul cmp idivb and sbb aam xor push test pop fidivr adc and andl insb mov sub jns rclb icebp xor cmpl dec loope dec cwtl adc sbb push enter lret stos cli sbb popa sub dec cmp jnp test pusha jnp dec sbbl popa lock ja inc adc fwait sti adc jbe or cli cmpb or dec adc lods xchg scas adc mov sbb pop movsb and gs mov mov jno xor bnd mov mov nop in mov add lcall mov int dec mov push dec inc testl mov loop pusha mov ss or insl lcall cld mov aaa sbb addr16 mov xchg adc les push loopne and (bad) dec aas aam fstps mov push popa or cmpl rorb sbb in dec mov pop dec fimul push sbb mov jb leave les ja fs imul push lods cmp add or clc js xchg mov dec add push xor ret inc lods add and pop inc or movb xchg aas jo test or cmp stc hlt pop mov cmp (bad) aas and mov lods sahf dec les add in or push (bad) aas mov cmp mov push stos (bad) xor mov scas mov or or cmpb fdivrl xor cmp aas (bad) mov mov add xchg outsl adc popa add or or cli in sbb add jmp inc add and pop add ror mov add xchg js add and and or cmc test pusha jecxz ljmpw sbb xchg sub jecxz xor jmp stc lods adc and mov inc or xor add fistpl clc je or dec inc aas push fisttpll nop jge pop js pusha popa jno xchg pop hlt push out pusha stc and js mov cs and (bad) sbb rcrb jecxz,pt pusha pop mov divb loopne adc arpl into and adc add xchg mov mov mov les lods mov nop add test jp and and mov inc scas cli sub popa mov xorl popf or addb add es pop bnd stc bound push sub fsubrl push or adc dec test lods lahf lcall faddl fldcw cli adc les insb cmp xchg icebp nop mov popf pop mul sahf fs add jmp adc push and push (bad) cmp jg dec push es cli mov pusha data16 mov addr16 pusha pop adc mov mov gs cld sub cmp clc add daa mov or leave bound inc mov mov and or sub adc mov cmp or adc mov mov push into adc push mov adc ret or cwtl lods aad es and in ja in sbb cwtl (bad) out push (bad) cmp ret lcall inc rclb add adc adc loopne adc incb inc adc imul jecxz popf hlt pop mov rol lock cmp sbb hlt jp xor ds dec in xor outsb jecxz daa pop iret lahf inc push inc dec pop or mov add pusha or test lods addr16 dec hlt add sbb jae sbbb add dec add inc xor cli sub shr xchg (bad) sub add push stos popf and imul cmp rolb popf aaa lock ret shlb mov cmp add jmp mov inc imul add mov or nop addr16 clc jle jo inc cmp cmp testb mov mov cs and imul pop dec fadds imul cwtl add jp mov mov jl add loope daa cwtl dec sub dec jmp stos xor inc jo mov fs mov or shr (bad) repnz imul dec pop pusha sti icebp mov xor in push and mov sbb xorl or pop inc jae mov shl push pop insb adc dec inc jb js sbb test cwtl or sub nop and xchg mov push and outsb lcall jb stos repnz dec andl cs mov adc add pop loope add pop jle add in xorl pop sbb inc imul (bad) cli sahf insb fwait pop mov mov add pop lock outsl fsub or mov and jmp scas sbb add aam (bad) mov and js loopne ret xor jmp stos movsl mov popf mov scas add push cmp pop out add iret in or cli fnstenv fdivr and or xchg popf lock pop lods pop push mov loopne xor loopne in roll scas mov pusha sbb pop pop xchg mov mov nop xchg or (bad) push clc rclb add xlat adc andl inc stos les fwait jge jo les xchg scas xor wbinvd ljmp xchg push push inc add xlat gs lock cmp mov sbb xchg adc xor add js adc fs pop mov dec movsb jg fidiv cwtl stos inc sub shl and rorl jo add sbbb pop sbb out adc add mov mov inc andl jno stc push lods mov pop push nop popf (bad) jl or mov add in mov cltd jmp pop rcrl mov (bad) jmp add xchg in pushf les insb dec mov nop dec out incl pop movsl inc mov pop jle push add cli lcall icebp add pop pop in fwait in and inc imul repz mov (bad) adc xchg sub mov mov loope aaa xor lods inc fwait (bad) mov jbe mov dec cmp (bad) pusha pop cmc pop pop lret add pop push pushf lods xor push add gs push test imulb sbb and and mov data16 jg or or mov inc sbb jne es aaa or bound out test cli ret dec pushf add mov cmp xchg test int cwtl mov mov sub jg out jle push in (bad) fldt push push jl cmp add or dec pushf ret repz inc push clc lods pop add add je pusha daa ljmp sub mov mov cmp add or mov inc punpcklwd cmp push xchg subb mov xchg dec int3 call jge dec int3 xorb nop scas add add es pop ss aas and xor pushf add push jecxz add ret clc ss inc mov mov movsb jle xchg adc les mov les or inc das rol push rcrl cmp shrb popa js imul in fs xchg mov add jmp js js mov fwait or sbb (bad) nop mov push push or jecxz shrb into ds fdivrl in out loopne aaa mov pusha pop dec int in inc nop clc and push gs aad icebp dec pop cld xor dec popl mov fwait mov adc rcrb or fcompl dec inc add jmp and ljmp adc and inc cmpsb and xchg adc ja xchg adc mov fs dec idiv and mov outsb push jno dec cmp nop or sbb sbb movsb rolb or scas cld (bad) or popf bound adc sub mov or mov mov lock add fs cmpsl xor pop (bad) jns and and lock pusha movsb pop xor punpcklbw lahf inc fsubrs nop (bad) ror sbb sbb add jle call add and push dec sbb or (bad) xchg icebp sbb sbb stos push sub hlt movsb fs xchg cwtl pop xor shr sub pop cmp cmpsl and dec rorl cli popa sub or push jl mov sub in scas pusha and sub clc mov mov je (bad) int test adc xor into cmpb imul mov mov adc mov (bad) pop in add addl add xchg sbb loop aam stos insb out and out adc xchg sub ljmp mov or inc adc jl push mov inc stc (bad) and mov test dec js mov dec xchg cmp mov aas js je movsb call dec adc movsb or inc pop cmpsb stos stos pop ljmp jge add sbb xchg adc repz call inc mov cmp add iret push dec mov sbb and (bad) mov movsb cmp dec fdivrl das lods dec xchg mov test cmp sbb out outsl loope loopne lods mov pusha sbb push pop popa or or mov cmp xchg (bad) add out adc nop add enter cltd int3 xchg adc in xor sub sub pop lcall sub add jmp xor xchg pop pusha mov (bad) jl add ficompl xchg sub fild cmp mov pop ret cs add xchg push and sub xchg and and sbb jo rolb call mov add inc xchg mov leave mov cmp xchg pop test jno into fwait sbb adc or ss jbe push push jmp and rorl mov sub mov rolb jmp sbb sbb jp les or push xor add jbe mov cs lret pusha xor push mov xchg movsb call push xchg cwtl push adc xor inc inc pusha fstps jo (bad) pop and rcrb add sbb and add mov fnstcw push (bad) push inc xchg pop scas std in jecxz sbb outsb repnz adc shll add sub jns and xchg push inc sti and inc rorl stos loopne mov jl ret outsb out xchg add sbb xor or or xor xor les lret mov pop mov add call das and sub pop and pop lods call jle push fadd sub dec mov ret add (bad) outsl pop subb add dec pop sub aaa xor pusha push jo jno add sub (bad) int3 mov (bad) fiaddl out lret int fstpt inc sbb outsl (bad) xor test les fisubrl into decb mov test loopne mov add jmp inc test sbb pop mov pop sbb shr repnz jbe jb call outsl movsb arpl pop or jl popa insl sarb mov pop mov flds lock lret popa ss jae add inc mov add xchg mov movsb push loop loopne aad adc (bad) cmc dec push pop xor dec mov jmp xor xchg xor adc sbb cmp rcll mov jge pop mov out xchg iret adc or je pop out sahf imul sbb push fnsave rclb jle rorb cmp repnz add daa sbb cmpb (bad) adc dec stc xchg sbb mov lea les add cmc and sarl mov sbb mov inc mov mov adcl fcoms fadds xor nop nop push sub or (bad) (bad) or adc out sub inc dec fs xchg out and fnstenv into add xlat pushf jns xchg loop ljmp ds add add out icebp and lds xabort dec add sub cmc rorb pop sub and sbb inc adc adc inc inc dec rolb mov cs sbb add dec cmpsl jo xchg flds imul arpl xor (bad) (bad) ja rcll mov jns data16 fsubs shrl push xchg js xor aam and and test xor xlat hlt lcall and (bad) mov incb pop lds sbb in add mov push mov xlat xchg bound or in out lds (bad) fxch lock push fsubrl xor clc add mov add in push rcll push or call mov mov inc repz lock std fcoml into add stc add pushf testl addr16 dec inc and shll mov movsl scas push mov or adc rorb and loop cmp test cmp shlb xor pop cmp mov and xor nop pop nop int3 nop rclb movsb leave xchg je sbb popl dec rcrl hlt push jl push fcmovu add pop test fstl inc dec dec and cmpsl addl sbb lret add add mov or out adc sub andl and lea test (bad) xor pop sbb and insb ret or int push pop mov pop xchg cmp fadds test push cmp mov enter adc add loopne lods cmp mov xchg aam add cmp lods loopne adc dec dec test or pop jns popf sbb push daa adc out imul fisttpl pop add outsb arpl add mov and rcrb popf mov push mov inc test out pop or inc and and cmpsb shlb pop sub add std addr16 mov sub cmp add or (bad) pop adc insb pop js push add sbb shr inc adc int3 es mov add jl sbb insl aaa jo inc add jg pop xlat arpl push add je pop sbb push stc xor sbb popa add arpl cmp mov fbstp add adc pop add jle pop imul idivl sbb adc rcrb test cmpsl loopne cmp push pusha aaa or testl or add or jno push xor (bad) loopne imul arpl andb adc sbb and test adc push sub mov adc es addr16 inc push push or add je cmpsl add ret push aaa nop pop push jge jg and clc or pop test and fcoms sub push rolb add int3 pop cwtl or sbb call or and data16 mov xor in imul (bad) and ret test mov sbb xchg call xchg ljmp or jg adc fs psrad mov daa data16 fsubrl inc popf outsl add pop inc inc mov push adc dec popa fildl add jo bnd push (bad) inc pop cmp mov xor cmp dec std xor mov loop (bad) push ds paddb test test cmp push test movsb lods rolb push sbb mov std dec test xchg pusha jecxz push dec mov inc dec xchg inc idivl mov loopne push jg xchg add sub sbb je or mov test daa cmc add jbe push mov pusha pushl mov add movsw enter aaa ror (bad) fcmovne jg mov cmp stos add fisubr repnz flds inc inc cmp mov je cld mov and and push and adc add addl hlt cs pop clc fmull les and mov xor pop test inc cmp or cmp cwtl je aas outsl add push mov xchg pop xor cltd and je sub lock (bad) (bad) and or lahf cmc lds push dec in sub iret sbb jbe ljmp rolb ret and inc sub sbb or inc imulb out inc mov flds xchg imulb data16 outsb test sbb leave add movsb push sub adcb pop cmp enter mov mov or or inc pusha loope mov sbb test cmpsl sbb push xchg inc xchg jmp cwtl jo jns nop lahf bound add add (bad) adc je rolb dec mov adc mov mov cwtl xchg xor lahf add aam sub es inc xchg aaa add lods or (bad) gs dec cld sbb mov push add aas test and xor test adc cmp adc jge ror mov test aam inc ja enter inc cmp fstl mov mov mov sub lds lock mov (bad) (bad) sarl inc sbb inc and pop mov call add lock xor jmp outsb test xchg adc mov insb cmp sub hlt xchg xor repnz test test sub jae add push fadds loop int3 mov or test cmp insb fs cld sti aam or pop xchg pop push push inc push clc jmp mov lock out jne add psubsb adc (bad) rcrb xchg mov add adc or sbb xor enter and sbb (bad) cmp cmp adc jbe (bad) fninit inc out cmp xor cmp cmp pop adc loop cwtl or cmp aam xchg pop pushf sbb push pop xorb xchg sub sub inc adc fdivrl and test and ret or dec cmp test inc sbb push add in adc inc cmpsl push test pop pop popa jae mov or addr16 sub sub lock test cmp dec or cmpsb das sarb jae test ss addb movsl or cmp repnz sbb ror push in dec enter xor sub xchg test (bad) inc nop cmpl sub pop mov nop enter inc jae xchg movsb xor loop outsl add mov ffreep and imul add fisttpll and or fidivrl inc push sbb mov add and test cmp fwait ljmp test mov add fldl int or pop jnp (bad) vmovupd sub mov mov cmp mov dec sarb mov test dec push dec cmp mov aaa int3 insb push inc pop pushf fs test pusha out pop sbb hlt inc inc push fldenv adc out pop test pop cmp push xor adc movsb and hlt dec mov pushf int adc adc in jge test mov xchg (bad) jo rdtsc jp and les push fisub sbb or mov inc add jb shll or jle inc decb pop pusha sahf adc nop sub arpl push xchg adc xchg dec xchg dec loopne repz dec roll adc or aad inc and sbb add and and mov fucom sbbb lea ficom cmp push mov loopne nop add push mov mov adc inc test loopne lret push sbb sub inc pop repnz add xor dec and fnstcw mov cmp pop xor lock in aaa call inc fs (bad) inc or cli inc int3 mov adc pop gs pop mov mov movsb push and sbbl pop sarb les inc cli mov mov and pop jno movsl mov jmp dec mov mov popa (bad) and nop cmp outsl ret or out in nop loopne cmp outsb inc int3 sbb adc mov jecxz int3 push (bad) and xchg pop or add xchg cs sbb gs mov cld stos or into jo mov mov xor cmp adc mov incb fcmovu das xchg sbb pop xchg mov fmull lods leave sub sub pop cmp mov loopne pop loope nop cmp xlat mov nop jp or fs add sahf out cs (bad) repnz mov fstl bound daa pop dec or mov and inc push sub push les out mov mov adc sbb inc inc jo mov inc add es sahf xlat mov movl push pop cwtl mov sbbb lret dec (bad) je jge or sub xchg push fisubrl ss gs daa in nop jge (bad) fsubrs add ljmp jo cld test adc adc ret sub clc add test inc out sar stos in cmp cmp adc sti inc nop ja aaa add sbbl pushf in push rcll outsl (bad) nop xor xor loope stos dec sbb inc pop xchg dec mov hlt mov cmp mov jno add jle add in or lock pop xchg cmp pop test mov adc (bad) pop lcall pop xchg add das xchg rorb cld jl add or fcoms inc mov aaa push add push mov ljmp out sarl cmpb fidiv mov adc pushf mov pop add inc outsl jmp inc and (bad) mov adc mov or hlt movsb testl stos flds es sbb adc mov cmp xchg or mov inc rcr nop aam aam mov adc ds mov cmp test rcrl cwtl pusha push xchg sub jmp jle aam fcoms and jl in lret cltd aam adc pop or mul pop aad lcall or sbb es stos lock sub lret icebp cmp popa cwtl rolb jbe mov or and jno sub add clc mov enter sub inc shll je test and repnz push inc xchg or icebp cld mov or lock mov lcall lds mov das dec addl add mov push sbb mov popf or jl loopne add (bad) out wbinvd pop inc loop nop and push inc bound add cli sbb mov xchg xor (bad) jbe dec fucomip fdivl movsb rcrl sbb push faddl dec test adc lahf and pushf aas mov (bad) negb sub or cmp lcall xchg nop adc ljmp pushf or or fstpl les in or cmp dec adc push cmp pusha data16 out mov outsb dec aam rorb mov test and sbb sub daa arpl rcrb mov gs fs cld add and pop cwtl xchg test dec (bad) test push lock in shr jl fwait add fcoms adc fmul lds cmp mov push xchg test int3 (bad) sub call and xchg mov (bad) mov imul dec adc cmp mov (bad) or mov sbbb xchg sbb or test sub cld adc xchg enter xor sbb mov in add out xchg test jbe movsb clc daa push dec popa (bad) push (bad) sbb cwtl sbb or shl sub add mov in fmul adc (bad) repz mov or dec fmull sub test adc dec insb jae sub add adc mov sub mov fldenv sub cmp insb aas pop jo testb clc out cwtl adc les mov xchg add sub test or jecxz pop out (bad) cld sbb rcr in cmp pop push or dec dec das add xchg loop in nop mov push cld or and pop adcb or cmc xor lock pushf sahf push xchg addb fsts dec or roll aaa call and inc popf mov xchg (bad) js testb fldl pushf mov xchg movsb popa ret in jl dec and add or inc sbb xchg add in mov loop xor in cmp add fcomps xchg add insl in sub (bad) mov and push fmuls pushf mov pop mov add add in int3 sahf adc ss cmp pop mov cmp inc mov fwait mov rcrl add (bad) es xor iret dec pop cmp adc jge cs xchg and dec inc mov cwtl add push out and pop cmp mov outsl das nop adc stc les mov and adc xchg adc dec inc sub jmp rclb out mov inc inc xor xchg dec inc int3 and es and test sbb scas xchg nop xor and rclb pop push lods adc xchg jl mov ret pop mov ja cs fs out sbb inc fimul and icebp add push xor push push mov xchg dec dec mov aaa das sub je mov loop mov mov insb ret in arpl dec inc mov inc dec (bad) pop mov inc jnp mov inc dec lret lcall jl mov repz outsl sbb mov xlat enter adc stc lods lock xchg ds sahf dec jmp les xchg fmull inc jns xor (bad) negl mov cmp mov jecxz pop sub add movsb pop out (bad) inc or add and add adcl ljmp adcb cld sub jmp mov (bad) in or inc out imulb test mov mov dec adc shrl aam aam test ret dec cmpsl mov xchg stc movsl test xor pop sub (bad) xchg les xchg and jmp sub xor cld dec pop inc sub sub (bad) sub and fnsave mov pusha dec sub movsb push jl xchg inc dec notl xchg push push stos int3 or les inc add xlat xchg jo (bad) imul mov and or add dec or and test pusha and lds jge mov mov lcall clc xchg daa cmp or or mov adc add hlt push mov loop mov jle sub push popa fisttpl add push cltd (bad) or lcall test add xchg pop push or das add clc loop shll sub dec xchg sbb dec and shlb test sbb add sub adc pop sahf mov mov add inc sub inc (bad) in std push mov and je fldcw daa and mov lock or add lock mov cwtl add call fcoml mov std adcl inc pop adc mov sub dec jle sub pop shlb fstpl jl cmp arpl push in jecxz mov dec or movl outsb es insb mov sbb ret or mov mov dec fadds push ret sub push add xchg add xchg sbb and mov adc aaa mov xor lock and or orb js add sub jecxz inc inc mov js std subl pop divb dec mov and or dec dec clc das mov lock xchg mov test add sahf insl pop cld and std cmp lahf pop rcr fcmovb mov dec adc addb rolb dec outsl and mov (bad) sti and jg fnstcw out xchg inc sbb push cwtl mov aas and inc shrl sub fstpl dec add out addr16 stos (bad) cs cmp jecxz dec out jo iret ret mov push (bad) and add adc jmp imul dec ds inc add loope (bad) xchg js xor and jp inc cltd add sbb aas xor xchg xchg push push pusha les inc push add or and (bad) sub test aas mov stos push xchg leave call cs in push in xchg clc not lock jge sub shl and aas mov iret roll loopne (bad) xor subb cmp out jb shlb push loopne (bad) lock test loopne push les cltd mov es std xor push (bad) and cmp push ds adc ss xor add push mov and sub lds fwait dec mov sbb dec mov push cmc outsl mov int3 push inc pusha add adc inc nop repz xchg rorl scas add dec mov and adc test adc adc cwtl and iret rcrl call lds adc in rcrb add push and cmp (bad) sbb pusha dec mov stc lahf xor iret jb push or into dec js adc repz popa add fildl jmp xor pop push loopne mov int3 jne nop cmp push aad sub ja push (bad) mov sbb lods popa mov ljmp mov push inc inc xchg stc or test inc cmp stos test pop shrl xor add pop and dec or mov in ds hlt adc and js lcall sahf jbe jg mov enter cmp iret imul and push dec jg add test inc dec nop cmp orl rolb neg outsl outsl jns in and rcl mov popa (bad) jecxz insb fwait push xor stos out aam les cmpsb in sarl leave mov fsts dec ljmp cmpsl fcomps add xor xor inc adcb popf mov leave and in repz orb cmpsb push fstpt ret and pop out mov or out outsl aam pushf stc imul adc rcll and push inc or xor dec push lret lods (bad) int roll lock push shr and loope out mov push ja insb inc imul divl inc cmp inc xor and movsb adc je sbb mov test push call adc dec and fadds inc or lock xchg insb hlt dec js ret add decl sbb int3 inc inc shrb out sub popf xchg push fstl rclb inc aam test adc test lret xlat cmp movsb jecxz mov jmp mov add mov and ss es cmp or mov pushf orl pop sbb and inc outsb xchg or cmp les add into out and lret gs mov sbb mov sub les and xchg jg cmp jb dec in mov xor rolb sbb into cwtl mov cmp push call mov push adc ret or xchg mov sub out nop dec and nop nop adc xchg cwtl and outsb mov in out push std inc and inc sbb jno mov call sub and js jo push push shlb fdivl mov movsl pop ret loopne sub imul enter je or fsubrl adc ds scas lea inc xor cli xchg add (bad) dec (bad) iret add cld xchg jo mov jbe movsb repnz mov xor pop (bad) sbb dec adc push xchg jg nop aam inc stos mov or and mov nop dec mov push inc mov adc add pushf ret adc mov pop (bad) add je and adc stos adc inc int3 mov loop sub jge stos das push add gs dec (bad) movsb mov lock pop sar inc xchg xor xor in iret int3 mov xor inc ret in or mov xchg pushf and dec mulb (bad) mov movsb pusha es or or outsl sahf loope std shll ret rolb loop cmp mov adc push shl xchg or and add lock pop call test mov sbb sub xor (bad) movsb (bad) xchg inc in mov iret add pop mov mov add js adc xor xor adc jno mov sbb mov mov jae add fdivs idiv mov jns popa enter mov popf pop mov mov pop sub or sbb movsb or adc mov cmp pop (bad) and inc jle push mov aas das shld inc in mov jg sbb je out in adc imul inc jl or add sahf jl addr16 addr16 mov test cmp movsb data16 xor adc movsb fisubr sub add cmp inc and cmpsb icebp sub sub mov leave or std add out dec add (bad) push mov adc int jecxz mov call cmp test sbb insl sbb leave (bad) rolb shll (bad) push aas mov faddl jns inc jb jno sub dec outsb ds push sbb shl dec imul mov int3 push dec mov xchg pop and enter push xor jl daa adc decl sub je clc push js or sbb mov jno and mov add sbb mov push shll mov mov fcomip mov cmp mov dec inc adc icebp inc insl sbb mov cmp adc sbbb mov outsl aas mov mov inc movl xlat xor push lret in mov (bad) mov ret mov dec xchg add (bad) out cmp mov jo mov stos adc loopne and xchg cs test insl or jns stc push call add test test int test lock push shrb cmp xchg xor push scas lods andl notl jl and mov js in rclb pop daa hlt (bad) sbb cltd mov mov add imul subb in jle inc cwtl adc rcll repnz jg fdivrs das sbb cmp sti add shll inc ja mov loope mov mov or mov inc loopne mov mov cmp add es std pop loopne mov adc jnp push inc jp test cs sbb or movsb sub cltd test add dec or das mov mov fadds inc fdivrl add mov pop xchg call mov pop mov mov shrb mov nop stos in stos xchg int3 cmpsb mov (bad) xorb adc push insl out enter adc les mov jo xor out mov dec cmp and fadds insb add sub mov jle mov mov scas lret mov or mov jge lods js or data16 addl xor mov dec inc bnd mov push inc ret in and inc mov negb (bad) outsb mov jno fwait push aaa inc dec adc mov inc xor sbb dec and lret movsb add popf mov push lcall insl js pushf hlt imul mov in add cmc enter movsb push jo pop mov inc jl cltd push js mov adc frstor movsb movsb adc sbb jno,pt jnp add ret stos mov test dec rorb sbb adc sbb add mov jle and xor roll adcl subb add les xchg adc sbb aam push iret inc xor and sub (bad) shl mov mov rcrb inc jle or ss pop cmp test inc mov inc mov pop jp or pusha or ds dec jno add inc dec lahf movsb sti sbb mov inc cltd mov orb fs jp and ja inc jge push push (bad) cmp adc lcall mov enter hlt jge movsl aaa sub dec dec or aam movsb jl aam push sub test movsb js ret test xor in jae enter push push pop or or adc rorb adc call inc or push or inc fwait mov (bad) add mul fsubrs enter sbb mov dec mov jo clc sbb imul and inc mov sub jnp aam mov (bad) xor mov cmp adc adc mov aaa jo add and js shrl or dec push sbb jge dec xchg push cmp jno mov inc pop rorb xor adc cmp repnz push dec fsub mov xor insb mov inc cmpsb jl pop sbb or jo dec aam cmp dec ds adc inc pop or cmovns and js sbb dec mov ret inc jl dec add mov adc rcll orl je mov inc pusha and dec imul xchg ret loopne dec jp dec pop jge jae and sub mov adc jne sub mov mov dec inc add dec aam mov sbb or enter les nop ss add loopne mov cmp cltd xor sub mov mov leave inc mov mov dec out add orb cltd mov add jne adc xlat cmp cmp dec push cs jnp bound add adc and lahf out pusha xor test lods mov inc aad adc inc bound push movsb movsb adc mov and dec xchg les es dec mov mov (bad) adc add push inc jnp push cwtl mov or dec out fcomps push xor xor notl loopne inc push test dec add lretw pusha adc xor push adc icebp dec and adc mov jl cmp inc sub rolb pop or lods xor js mov mov mov fcoms and jno rolb in cwtl adc (bad) adc movsb or add xor or mov and add mov mov sbb test adc jge inc and push call sub add mov sub movsb xor mov mov sub daa inc mov fstpl cmc lahf push (bad) fsubrl inc dec popa cmp testl xor mov pop js test sub lret inc ljmp xchg rorb sub sbb fldl fdivl lods add cmp jae pop jmp mov sbbl out mov or or inc or inc ja out jge int3 (bad) or add and xchg xchg inc push aas dec adc or out mov inc rcrb mov jle hlt dec nop mov add popf dec dec xor imul push or inc mov or rorl pop arpl aaa xchg std inc or daa jns cwtl mov add hlt inc aas jae fadds loop inc sub sub test stc inc push out xor test call xchg mov (bad) cmpsb xchg sub pusha pushf sar xchg add jb xor add call inc mov add sub xchg mov pop cmp dec inc mov dec or push stos dec test inc cmp inc scas push xchg out inc add jne add and sbb sub dec mov adc adc jae add adc push mov loopne jmp out adc into sbbl dec popf stos xchg rclb inc les repz sub mov adc jne xor and (bad) cmp aaa dec test stc je aam sbb movsl pop leave sub push fwait xchg or lods pop sub scas mov mov mov inc (bad) arpl dec sbb lock imul jae add add add inc fsubs lds adc pop push cmp (bad) int add pushf mov in jne cmp fidivr (bad) rorb push lret les aas xor inc mov ss adc sub hlt enter push cwtl xchg push popa movsb push sbb or push adc sub add cltd addps and repnz (bad) jo and mov add and inc cmp rol orb jne call outsl (bad) cld cltd shlb xchg test lods sub clc das dec xchg scas push push cmp and addl xchg fsub pusha sbbb repnz fdivs movsb movsb add lods cmp shll jle cmp jl sub adc pop add test mov arpl aas push sbb sub rorb mov ss imul fsubrs dec xor xor adc add js rolb les pmullw jne fs xchg or cmpsl fs incl in cmpsb push decl fs enter xchg inc repz jl or sub sub sarb jmp push popa rolb adcl fcmove test std add jne pushf pushf mov hlt pusha mov stc sub sbb push jns mov (bad) clc (bad) mov mov jge or dec scas repnz jp mov dec adc imul sbb outsl dec and dec cmpsl push xchg rorl xchg icebp inc add dec or adc fsts xor xchg (bad) shrb push sub scas (bad) mov xor add jp loope stc cmpsb les fsub sar rclb imul or je adc jo push mov nop aam sbb sub lock lcall imul sub push sub (bad) iret xchg inc xor dec push (bad) mov xor pusha je test xor stc and in in pusha inc shlb test jb add dec std test xor sbb popa xchg push and xchg addr16 in scas leave int3 loopne sbb punpcklwd int pop dec test popf xchg sub and aam adc pop aad fs mov adc add ss scas mov test aad ret pop mov test add xchg ret push xor pushf inc nop push adc xchg js insb sub xor nop xor dec fdiv mov push cld (bad) lea xor jg mov add loopne arpl jo,pn sbb cltd int3 adc pop adc inc mov pop negb or test push lds mov ds js pop enter in (bad) lret enter ja inc ret and inc dec jecxz pop je out stc subl es xor push nop xchg cmpsb aam mov loopne add pop xor or sub aam cmp inc and cld ss xor add xchg mov test gs test popf push jo mov cli cmpsl aad mov insb jno or fistpl call aas (bad) mov pusha mov mov fldcw dec xchg or mov jns dec pushf daa mov add push in sub inc dec mov jns int3 jle sub ret sub push sbbb imul scas push mov add add int3 mov aaa adc sahf inc (bad) fsubp sub and push mov dec inc sbb aaa mov ss loopne pop aam sbb xor js push or cmpsl jbe mov xchg jno fwait pop outsl mov dec pop les and adc adc push enter mov jb pop cmpsl add mov or nop int3 xchg (bad) in or pop es cmc aam inc mov lret mov fs inc lds xor call xchg insb in xor xor popf pop popa hlt inc (bad) xchg hlt sub call outsb cltd js adc inc cmp xchg adc sarl dec mov dec jle pop sub or pop sub jecxz and nop xor push jb adcl cmp popa loope movsb xchg je dec push sub jg les loope mov mov inc clc adc sbb stos sbb and adc out fs rcrb jb inc cmpsb cmp lcall jl fwait mov test out adc mov in ljmp and mov mov mov leave dec pop xor xor xchg mov sbb cmp push iret pop mov dec adc seta fistp (bad) ljmp mov test in inc cwtl push roll test pop movsb add lds mov sbb push mov sbb or add jg mov xchg xchg xor and insb cmp adc fs sub xchg inc mov or enter (bad) shlb test or enter and mov mov lret lret icebp push hlt pusha and pop sarl fs mov jl mov push xchg or xor add xchg jge dec pop and adc jp push push xchg push pop loopne es into jge pop add (bad) divb jnp push aad xchg call adc dec dec cmp mov jl imul mov fldcw pop cmc (bad) aam push and mov test iret jg hlt or fcoms sbb fxsave (bad) jne pop mov sbb push jecxz fisttpll mov add add xchg jge loopne and fistpl or daa sar stos push inc outsl dec or pop or dec inc add dec mov test lods test icebp pop jne pop add or enter icebp ss and pusha enter sub mov xor rolb mov (bad) pop mulb xor test pop inc call cwtl imull inc adc xchg mov ss mov mov outsb imul adc dec or xchg dec and je jmp dec dec cs dec sub adc sahf inc pushf mov nop or scas int3 imul add dec cld mov inc cld fs (bad) imul iret insb cmp mov xor pushf mov push inc sub insb xchg cmp movsb dec (bad) pusha pop mov lcall sub and lods jp push enter pusha xchg cltd les and loop,pt xchg adc inc and jnp push adc les mov loopne mov inc sbb arpl jno sub xchg sbb lods xor xor int or push ss xlat je sarl insb and lcall shll pop xchg fldl adc leave cmp fcompl xchg cwtl or ss pop mov fistp test stos sub scas sub adc fsubl scas arpl je adc xor adc in add movsb rcrl cmp and bndldx inc ja inc fs lea aad loop orl dec sahf xor imul add or lcall cwtl lret adc nop cwtl and nop adc int fadds inc es daa mov icebp cwtl shlb xchg mov push mov and cmpsl jae lea (bad) lds sub pop fwait sbb mov shrb mov je aad mov inc xchg push sub inc mov and push lods dec test lock cmp push mov push test cmp fsubp push pushf sub inc adc addl pop pop and push sub (bad) bound and sub inc mov sbb mov in addb dec orl pop push mov sbb insb scas pop push xor repz jne (bad) or sbb shr popa mov out incl push jbe enter loopne sbb test pop (bad) dec outsl data16 fmuls add xor add ficoml loopne xchg mov inc or jmp andl fmuls xchg xchg rcll inc movd inc outsb clc mov mov mov andl insb in add enter nop xchg jle rclb xor sbb test adc addb in xor pop jb cmp es push mov pusha imul decb shrl add mov loopne sbb xchg or jmp cld lock stos add sbb std sahf addl pop pop in out dec push add cmp cmpsl out mov js ds pop sbb jno (bad) add clc mov mov xchg mov outsl inc popa add add testb jg pop stc sti clc ljmp loope out jmp push imulb or mov test lret jecxz xor sahf leave lock push icebp or dec nop lds push sbb sbb dec insb outsb cmp in adc sub cmp dec and dec xchg sub adc popa in js sbb insl adcl je adc sbb fs aas inc hlt lret add sbb cmp cmp sbb push cltd xchg adc cmpsb pushf push jbe adcl adc fs (bad) (bad) (bad) and adc ror lret ds sbb adc cmp mov mov sub or nop adc js mov movsl (bad) xor (bad) out les or xchg xchg xorl fild int3 pop or mov std sbb push adc stos lahf dec mov inc fmull inc into mov adc pusha jecxz mov cmpsl movsb inc cwtl pusha add je (bad) dec dec cwtl jmp addb and jne mov push cld pusha scas push enter imul push push jns bound scas add pusha pop cmp (bad) xor xchg rorb or test pop popf cmp and daa mov push inc hlt lods into add inc push dec mov and cmp sbb lahf xchg rolb xor mov push aaa cwtl lcall es xor js movsb cmpsl mov cmp sub popa aas dec mov add and insb ds xchg pusha cmp inc add sahf movsb xor add sarb mov ret and or lahf and push mov dec and fstps js in icebp jns loopne mov dec add xor jg and cmp popa adc ret xchg pop inc rolb int3 dec in mov dec adc nop insb icebp adc and mov pop pusha test je mov lcall pop pop or jge push mov imul daa xchg js jl inc push or and js and rolb mov push nop cmp mov jb push (bad) pusha mov dec imul shrb inc push xchg add xor push cld and xor mov mov icebp push aaa dec inc pusha mov aad mov pushf pop stos sub inc xchg lock push fld loope or jo pop inc cmp addb das mov mov jecxz popa and xchg cwtl and (bad) cli push inc sub shrb test mov shll pop popa jnp push movsb or xor hlt movsl adc jns jno rcl mulb lods aad mov mov adc sbb (bad) mov bound and pop adc add cmp flds es call add (bad) xor sub sub push aas or dec movsb or adc push nop or lcall lahf sub or inc mov mov cmp ret dec hlt js aas jnp mov mov cmp add orb mov shrl or icebp mov and mov lock mov sub dec imul test int add movsb add push pop pusha mov dec popf xorb jge jno jno movsb pushf (bad) lock aas mov out mov les loope sbb mov jl sbb icebp sahf nop inc mov add std fcoms push test ret dec sub cmp mov movsb or and ret jne cmp pushf gs push or mov sub rolb iret mov pusha or mov dec lret sub pop jmp jmp int3 mov and sub cmp pop mov xchg xchg mov les xchg add mov lods imul incb in dec xchg imul inc sbb xchg lahf lock idivb or les xchg add adc sbb xchg mov xor or add push and pop push or cmp mov or test push (bad) test sbb mov dec dec pop and dec bound sbb cmc mov adc mov push push out ror popa cwtl inc mov and scas sub and ss leave dec scas hlt lahf sbb lret mov movsb les cmc andb mov and js imul (bad) cli adc cld test loopne push int3 (bad) mov xchg dec push pop pop xor lret cmp sti data16 xchg pop pop sbb mov xchg or jns xchg je jl add outsl pop cmp add jns and inc (bad) decl orb mov cltd rcr (bad) mov or sub inc cmp mov out dec aas dec dec or testl xchg ljmp mov add xor enter (bad) dec add cwtl jl pop in and hlt mov jnp cmpsb sbb (bad) jae inc movsb adc add int3 cli adc lret add dec pop lods cmp dec and lods outsl xor test inc test sbb in stos cmp insl cmc clc adc test mov inc lcall loop cmc and enter pusha stos xor push sub sbb cld mov mov nop and mov dec mov lea shrb repnz iret mov in bound mov jbe sbb lret jns pusha lret inc dec adc rcrb enter xor add movsl out or or jns sbb inc mov mov test or loope loope mov and add mov mov sbbb (bad) jmp and fmull cmp loope rcll mov sub inc push and scas bound sbb outsb repnz inc idiv jmp fdivrs arpl pop sbb push and popa clc hlt enter test inc lret xor (bad) aas insb inc sub xchg sarl jl negb and sbb push add pop js aam stos lahf popa jl pop sbb aam mov add inc mov (bad) mov call hlt stc test or in push ja or xchg inc inc and xchg pop clc adc mov je call xchg mov inc jae jne xor lods adc test shlb mov icebp push or dec mov pushf push rcrb imul or cli pop adc and push ja cmpl je movl adc clc mov or jmp cltd sbb push lock call adc push out dec adc sbb xlat jp xor dec call dec push sub pop clc mov mov fwait xor mov push adc or xchg push jo adc cmp aaa inc popa js leave ret push mov sbbl add aaa xor lods push into jno adc sub (bad) aaa push pop push enter enter mov cmp and or push call popf xor or inc or cmp mov in hlt call ret mov (bad) mov into mov cwtl adc test inc inc mov sub mov add mov push aad (bad) push jo pop jmp push and mov and and sbb pop dec adc adc xchg mov test clc jecxz sbb mov mov mov or mov dec xor xor push push cltd nop cld mov add pop sub call in mov adc mov in cli lcall add xchg sti sbb mov stos jge or call mov add sub test mov dec mov js dec mov dec cmp les scas adc (bad) hlt adc mov push or lds xor or (bad) xchg and xchg andb xchg pushf xor adc (bad) and ret xor or add mov sarl mov push (bad) adc daa push cmpsb imul ret sbb or mov (bad) lds and adc sbb pop mov test adc mov or mov in sub or cltd rolb enter jb inc adc jge adc jne in inc mov js pop leave js sbb clc adc add call sbb xor inc push movsb notb aam imul xor mov inc xchg gs xlat sbb sub add adc shr sbb and xor inc inc mov inc faddl and and mov inc adc out mov mov pop pop adc in test repnz pop pop enter mov test mov pop (bad) jp lock js xchg aad rcrb push inc mov cwtl ja cmp scas mov or push outsl and adc adc cs cmpw ret sub js and xchg adc mov popf pop and mov fdivs mov insl lods xchg sbb mov mov or add cltd adc mov pusha aad sub xchg clc adc (bad) adc das inc mov (bad) sti leave in repz bound (bad) and and mov push jmp out and mov aam sar leave cmp scas push adc xchg sbb dec inc mov inc lods mov (bad) mov and pop les xor inc and push pop and adcb or xor shrl or pusha and or repnz imul sub mov pop pop lea mov jbe cmp or xor push or nop das faddl dec inc gs je jo or imul adcb aas jb loopne adc push lea add xchg addr16 sbb and sub and xchg cmp inc xor in mov aam gs add jb outsl arpl loope jae repz es push dec or fiaddl cld pop dec sbbl mov jo and xchg sbb or inc cmpsb ds adc bound or icebp pushl push pop xor (bad) fsts int icebp sbb cmp mov or cld sbb mov and rorl dec fisubr dec mov pop jp xchg sbb clc or adc inc sbb inc sub popa push xchg pop sbb mov insl sub push push repnz and adc adc sti cmp cmpl bound adc sub je arpl or movb test push andl xor or pop sub or and push inc jge push and sub int or and and ror movsl pop inc sti les scas sub add push cli mov xor push xor in (bad) mov and jp psraw scas sub push xchg stos clc sub sbb (bad) (bad) or inc add dec jno or test or lret jl or mov fcomps sbb sbb loop packsswb inc sub adc pop addl or inc sub jo and nop push mov mov iret (bad) jmp inc push cmp je inc subl xorb and inc mov xchg cmpsl lret pop cltd xchg (bad) nop mov adc sbbl push mov mov imul add push movsl pop mov xchg (bad) and lods test pop orl push adc imul mov add jo fstpt inc jl push mov test or and push and or movq das and dec incb pop mov jl test xchg popf (bad) nop int3 mov mov mov or shlb rcll cmpsb pop sub ds repz orl adc mov repnz fbstp lds mov inc mov mov xchg xlat xchg mov dec mov cmp pop rclb pop rorb je fnstsw in hlt inc push popf inc inc das mov enter mov sub jg push (bad) insb push pop add lds pop ret cmp mov hlt lods jae ficompl mov cld push iret jmp jle lods mov cltd (bad) mov adc aas push mov addr16 jb lahf dec gs mov adc or pusha add sarl (bad) cmp aas sti ja lods int3 cmp aas jge (bad) not inc iret loope push lret js lret and aad inc rol mov mov push cmp pop mov dec (bad) leave pop out sti notb insb cmp lcall add leave vcvtss2sd (bad) xor dec insb inc pop adc mov mov or mov add into xchg cli aas enter jle push int aas enter cmp cmpsl cld incb faddl cld xchg aas enter dec and idiv inc mov mov repnz push or ljmp inc cltd adc cwtl loop sti and dec outsb pop cli xchg cwtl nopl and xchg mov mov aas enter mov mov add and ret aas leave lods (bad) xchg add insb data16 adc or lea jle add in inc lahf cld cmp std mov in cmp adc cmpsb (bad) and mov rcr stc int3 (bad) bound out pop inc jle repz pslld and nop dec lock inc (bad) cld push sahf sub add nop pop mov mov mov pusha sub aad xchg pusha or push mov pslld (bad) mov aas fs and push jmp rorb sub and pop (bad) idiv lods iret add mov loopne into aas leave je lds (bad) or jg js mov xchg and cld andb test mov jl inc aad pop in stc test add xor aas pop dec das and jmp push jmp dec mov dec pop mov push aas dec mov push stc in popa rcrl cli insl data16 sbb jo ja jne ss popf adc sbb push xor push cmp pushf pop leave call pop test cmc mov into (bad) lock daa test ja and cmp inc and push and popa (bad) or ljmp dec inc mov cltd inc jns (bad) cmp fwait adc mov or sub ficom or mov mov mov or pushf and lahf stos cmp cwtl xchg test xchg and cltd mov push cmp xor push test add test mov adc aam dec and jp fdivs or jnp push sub sbb mov (bad) xchg bound gs int3 in or cmp jg test dec sbb adc test and and inc movsl or mov xchg icebp sbb popa cmpsl test and push test jns test hlt xchg or in cmpsl cmp sub and and stos adc mov adc xor adc test sub sbb and dec inc stos adc (bad) dec sub mov mov and push gs mov test sbb popf inc push mov inc scas adc mov mov and (bad) adc or test and sbb in adc mov addr16 mov mov fcompl mov popa pop in inc adc mov jns sub popa jb int (bad) mov jmp sbb xor xor push cmp cmpl push sahf lret jle and sub dec and mov cmp adc call or add xchg adc gs ret call add (bad) fmul pop stos mov subb lea jno mov mov push enter sub (bad) adc jp mov sbb insl arpl mov addb pop or ds add push call std push dec cltd les mov (bad) ss push loope pop std loope hlt or sbb sbb adc xchg popa fiaddl add test rorl adc fidivrl sub and lock (bad) adc push add xorl incl push sbb clc lock adc mov rcr dec ret mov (bad) fisub push push pusha aad push cmpl (bad) pop pop jmp jno (bad) push push push push adc int or lea add push or pushf pushf inc pop cmp and ret inc push (bad) and mov or lret sbb test shrb mov lds xchg add sbb test int and sar xor shlb add movsb les mov (bad) nop jo popf jne outsl pop sbb into fstpl aas sbb cmp adc cmp mov hlt xchg push out leave popl test sub sti mov pushf pop sbb fistpll xchg loopne faddl nop mov in add fadds cltd add inc sti cli dec jns lods add jmp (bad) in fs loope in lods les push push add das loopne scas xchg add cmp jmp sbb push add adc les testb inc or popf (bad) mov add add orb daa push xor and sbb adc mov inc mov setg je cmp and cmp push mov or adc lret and cs cmp pop pop addb shrb cltd imul enter add inc pop leave and mov cwtl push mov leave test add mov xor repnz les mov push add iret popa push inc cmp inc mov jbe daa push iret jno pop or fdivs add sub mov xchg incb out loope inc or sbb add rcrb xor mov jl and ljmp jle pop sbb popf test push xor cli rcl jl add xchg sbb leave sub inc mov jl mov mov inc or add mov mov inc sub add mov in xor sub adc sub sub jmp adc test mov sbb fwait (bad) ds int sbb mov icebp add loope and mov pop cmpsb pop repnz inc xor stc dec xchg mov push stos add dec cmc pop add adc loopne xchg pop inc out imul push in mulb ficom mov mov leave mov sbb insb jl push rolb xchg xor fstps dec cwtl sbb stc rcrl orl mov arpl dec imul cwtl rcrb sbb sbbl inc inc jg adc fdivs daa out adc test xchg aam push aas outsl rcrb xchg pop push xor or (bad) (bad) mov push icebp mov sbb add stos lock js cmp ret mov mov pop adc xchg add add xchg sub mov pusha js stos outsb (bad) iret cmp fs call mov xor pop call push adc add rcrb lock mov pop or or adc jp cs inc or cmp lods mov push pushf (bad) in or cs sbb dec sbb pop and hlt out xor vrcpss xchg xchg jl inc adc sub add pop test dec xchg imul aam pop or add add sbb mov popa into (bad) lock adc sub or jmp xor and pop jnp adc out mov loopne push popf cmp add jns sbb adc mov (bad) adc mov push out addr16 fwait cmpb sbb mov mov (bad) mov add cwtl fcmovu inc jns test sub inc ljmp loopne sbb daa imul mov dec xchg xchg add xor daa mov outsb pusha or adc shrl lock dec repz dec cmp jnp rcrb xor sahf jle mov enter xor imul push addb xchg sbb add add cli lea mov sub sub adc fwait mov aam or add lods sbb lea movsb add stc and sbb test pop pop rclb dec mov push push mov xor xor lea testb mov lcall add adc lea test js iret or fwait dec jecxz in dec adc lds push and (bad) adc pusha inc dec pusha stc sar in clc sahf xchg sub (bad) jg insb xor enter lods daa inc push mov pusha rclb or sahf nop jl ja add cltd lock mov aas sbb pop ficompl sbb mov (bad) mov sub pop pop mov jo fdiv and cltd and sub imul loop aam inc pop push in test stos aam aam xchg loopne dec and and inc adcb cmp movsb adc mov loopne jno fstpt adc or or push loope lods pop sub cmc cmpsb orl adc adc jbe stos or adc and dec shrl cmpsb lret pop int3 movsb cmp lahf (bad) (bad) pop mov loope sub pop adc mov sbb fwait jle test or push pusha xor int push push jmp (bad) mov movsb xchg inc mov xchg lcall call xor enter ficomp fs rolb adc xor dec sub call test enter mov mov mov shlb js in sbb pusha add cmp jo out pop insb pop sub imul and data16 gs pop testb int3 push (bad) sbb in and test push mov inc xchg fsubrs mov rolb pusha mov orl sub pop addr16 sbb sbb push data16 fs xorb pop jl mov add mov xchg mov inc and xor sbb or in push inc dec leave add iret inc int xor mov and inc xorl mov ret adc cmpb or sub jo das push xchg mov dec divb push or pop sti fwait xchg cmp inc fsubl mov loop cs push mov (bad) in sbb mov test push jno mov clc stos sbb je mov int sub insb pop data16 inc push inc add lock lock add push xchg add and cmp push jns sbb dec clc insb cmpsl or mov xchg inc mov psrlw xchg sbb inc inc mov fnop pop cwtl xor adc mov and pushf or loopne stc cltd xor negb nop inc xchg enter sub fcoml dec mov mov xchg sbb cmp rclb pop sub add int aam inc and and mov push adc add mov enter sub nop fs xor push popa int3 push in cmp mov or and int movsb fnop xor mov sub cmpsl dec push sbb adc pop sbb add negl sbb xor mov or nop inc imul jb xchg lcall mov inc or mov push aaa addb inc loopne and nop jl sbb push xlat pop push (bad) test pop insb inc sbb dec stc addr16 xchg test pop test pusha adc sbb xor inc add sbb sti in fs jge nop mov enter daa and call insb mov cmp das (bad) xor and cwtl in call sbb sbb sub int sub add cmp mov xchg or in or lods test mov iret fldl in adc repz pop lret and stos hlt int3 and fistpl mov lods inc push dec je int3 inc daa push and shlb popa jb out mov fcompl test add jne xlat pop lods sbb into test add mov scas cmp push mov sbb (bad) lcall cltd jno inc scas test and pop cmpsl imul or push mov adc aas add lahf cld outsb xor pop sbb mov pop mov imul inc enter std and jbe cmp ret test lods repz popf movsb push rcrb pusha and aam pushf dec and inc and push push (bad) or mov or test push (bad) pop fiaddl dec and mov movsb nop mov sbb fstps xchg add push std pushf adc das data16 or add insl add push rcr stc jge cmp push ljmp (bad) in cmpsb mov rcrb scas sbb add mov push dec xchg jle inc push dec sub pop test loope stos push ret pushf mov bswap dec xchg mov loope push or xor mov and mov pop mov in subb inc pop fisttpl add mov ficomp or mov lret dec mov cmp and fnstcw nop test add mov lods sub and sbb int3 aas inc fldl iret xchg aam mov or shr lret repnz xchg fsubrl (bad) int3 mov pop iret sbb mov bound pop jno gs inc xchg fucomi cltd jnp push jge mov ret jno sbb inc fs cwtl or jae lahf es js sarb push in sub pop mov fadds jae rcl sbb fwait enter and daa or cltd cwtl hlt inc pusha mov sti roll mov data16 daa sub pop ds jno adc pop daa add sbb pushf int3 rclb mov push cmp jb dec xchg xor and pop cltd les (bad) (bad) repz jg aam mov stos sub and shrb outsl add sub popf imul lock sbb adc (bad) mov inc jle sahf adc mov or push mov in clc and or xchg rclb inc loopne and xor add sti sahf xorl mov ret inc mov pop add iret cltd test js xor js popf and sub addb add out mov test push or decl and mov mov push sbb in push (bad) js in add jnp jno orb in hlt shrl mov ja dec jge lock pop sti andb mov je add inc mov adc xchg sahf and int cmp jnp pop add pop xor push mov in adcl enter (bad) adc cmp lods imul mov xorb xor fs mov push inc pop cld movsb fnstsw sub push mov fsubrl (bad) push adc mov push sub sub xchg pusha leave nop and pop mov cltd je ret xor test popa bound mov shll or add sub inc cmp xor test je dec cltd mov xorb movsb jp clc jle in mov leave xchg push xchg pop sub test loopne shlb movsb xor and adc inc pop cltd call in and int and fdivrs sbb and mov pop hlt or mov add mov push sbb ljmp cmp mov cmp push fs or inc je xor inc mov xor add in push out or xor subb testb push dec loopne add xchg pop fwait repz mov incb pop dec xchg add orl xchg or push add xchg dec scas mov test std add cmp addl jmp call add das xor fs xor gs pop test les dec test nop mov dec subb jecxz add in movsb and add pop in pop push andl xor sbb int3 mov dec and dec sub mov sub pop sbb lret or fdivs sbb nop push xor dec roll push enter pop pusha mov rcll out (bad) adc movsl xchg push stos cmpsb mov mov loope add xor loopne mov add mov push or jae add cwtl int3 vunpcklps pushf push adc sub inc mov repz dec mov push cmc lock mov jge scas add addr16 repz ljmp sub hlt add daa push sbb mov mov roll xor loopne adc xor push enter pushl rcrl ret mov mov ljmp mov sbb inc clc xor int call daa pushf adc inc dec sub and xor (bad) lods aad hlt leave xor cmpsb fdivrs xor hlt std lcall cmpb fcompl add lea dec fcmove jmp push xchg sub (bad) lret stos adc (bad) repnz mov cld data16 lret pop add cmpb call incb sub movsl gs cwtl dec or mov jns cld call lods and mov xchg sbb xor push shr sbb sub xchg (bad) xor imul cmp insl xchg adc sbb cmp (bad) lods dec and mov sbb xchg sbb shr pop mov ljmp xchg adc add imul lret sub sbb adc add xchg dec add pop inc mov add fild jge stc adc jbe inc xchg push test ret shr add sbb in jne mov (bad) mov js pusha xchg push test orl ja pop sub jo adc or add adc (bad) out fnstenv jne enter or fmull lret test pop ficompl popf sar pop gs push setl leave jmp mov adc inc pop incl adc lods inc sbbb dec pop or movsb inc xchg adc repnz and insl adc push or or stos test ret int3 aas movb jg mov cs aad cmp pusha movsb aas adc push lahf and add mov and (bad) shlb pop (bad) adc cmp test aas pop mov (bad) std and cwtl push inc xchg insb fisttp rclb (bad) dec out inc inc lret add pop cmpsb aam lea inc inc adc (bad) mov or fwait and in mov ret adc sub add (bad) xlat lcall sub rorl int3 dec cmpsl imul idivl xor xchg dec and dec push aam or adc and das rolb cmp movl sahf repz outsl loope nop scas int3 jg shrb lret out and pop jecxz mov adc test cmp inc cmp add cwtl mov add imul xor pusha and aaa mov out mov xlat and adc mov mov fist adc clc add dec push adc test xchg jmp dec (bad) mov lods mov cmp jne cmp push pop or call mov es add mov js pop add jle sbb push push mov ss pop mov mov or mov icebp out and test lahf ret inc nop add inc inc cmc dec test adc fistl or pop scas mov ficom xor pop sbb icebp out inc and sub xchg mov test or ret add dec and nop xchg mulb sub cmp lods mov daa add sub fidivl sbb jo push adc lods out loopne sbb ror xchg (bad) xor in mov inc sarb push adc ficom loopne jl aas mov testl xchg push popa hlt xor in loopne ljmp (bad) jae aad push data16 push cmp rcrb test mov mov jmp pop orl fsubrl outsl loopne and movsb in sbb dec add xchg sbb or add mov sub and mov mov loopne sub push or cs adc (bad) push mov jge add xchg roll dec lock lret int3 add inc mov xchg sbb imul lcall sbb gs mov lds and lock pop fsub int or inc jle fs push mov pop sbb into cltd jo xchg or push int3 adc sbb cmp clc push pop push fs xor jmp leave fwait mov or movl ret adc push or push test or mov mov adc lock loop sarb mov push inc mov nop call call inc push lds int insl ss inc add out popa push cmc xor and push aaa adc xchg and pop jo and pop inc cmp ja andb fildll cmp lcall mov dec jle lret dec jg orb repnz inc sbb fwait sub jo adcl popa pop dec cwtl sahf dec arpl xor mov add (bad) jmp outsl (bad) dec data16 add inc rol or cmp mov pop mov add add mov lods les aad push mov push mov push (bad) out adc arpl jae or pop mov cmp push inc xor cmp aam clc sbbl cmp push dec pop les sbb cmp mov push pop cmpsl (bad) lcall add inc xor or cmp dec rcrl push xlat in test sbb aad movsb mov add dec int dec mov clc (bad) xchg mov cmpsb (bad) pop enter sub and pop insb out cmp xchg stc movsl aaa mov mov pop mov xlat imul adc adc inc add sahf lcall dec inc inc orb dec test test pushf movsb sub and sub push jae imul mov dec daa sbb adc adc das in or mov or cmc sub sbb daa addr16 mov inc sbb clc adc push test and aam dec pop inc mov mov addr16 dec inc (bad) lods xor (bad) xor in adc adc loop imul mov mov inc dec adc mov bound and test pop push sbb test in cmpsb lods das mov cltd cmp xor sub push inc int add jg pop out inc push out inc nop adc pusha ss mov add mov push sbb rcrb pop pusha jl in sbb xor fild xchg cwtl insl lock jmp jno xlat pop sbb inc push mov or pop loopne adc repz and mov out or adc mov insb mov jmp push sar outsl popf jg sbb add daa lds mov sahf adc cmp andb pop and shr xor movsl mov insl mov cmp sbb xchg mov mov call test test mov sbb incl or jge add add or int3 mov inc dec jl inc push js push jmp adc ret adc sbb add push mov pop popa fldpi inc mov mov adc lret int3 push pop nop mov je and (bad) jae mov adc test adc cmp pop push pop push dec xchg nop insl out sub pop adc dec pop mov roll icebp test push inc je popf lea addl nop push sbb mov pusha add shrb mov jmp sti mov mov and fcompl mov mov add add push imul hlt fcomps add inc shr aas xchg cmp mov sahf test push ret dec adc movups test mov lret movsb sbb dec int3 and jge nop insb pop iret test lds adc or lock (bad) mov and mov out push iret negl (bad) mov cmpsl lret add jg fcmovbe ret sub and (bad) xchg bswap jns mov cmp adc push xchg hlt jmp pop mov jae or mov test xor mov and push inc loopne sub mov add or dec push ret xchg lods es rclb cltd js sub ret cld aam in dec popf adc and adc sub xor iret cmp push xor decl xor in cmpsb mov lcall pop jecxz sbb test sub cmpsl inc inc aas cmp sub shlb pop sarb mov and sbb pop add lods push pusha push inc adc fwait dec inc pop dec cltd jo lret gs test aam inc sub adc pop xor nop (bad) mov les int3 ds add sub fstpl sbb pop dec std (bad) testl aad rol add push and or and mov add cmp sub movswl addr16 xchg nop lret inc jl push mov add or adc aas pusha add push jge mov enter or int3 add rclb dec dec cwtl lds lret fdiv add mov pusha mov inc fnstcw lahf aas sbb pop mov cmp cld or rcrl js mov push les divl or cmp les xor aad dec stos xor icebp js sub lret sbb or mov pop add xchg dec je mov lret jl xor mov sub add (bad) out mov data16 push jo mov or fcmovu or jg or sub dec push cwtl pushf das fidiv pusha add cmp inc adc sub push xor mov push fiaddl jno cmp sarb daa inc dec lret adc jno mov and (bad) out pusha ret jo jns aam dec insb enter pop add xchg arpl or push jns adc stos test loope lods or rclb xor inc xor sub jg mov adc shlb adc mov xor (bad) xor arpl cmp xchg add sahf mov sub stos ret xchg or cmpsl jp es lcall push xchg loopne jno dec or shrl outsb arpl arpl mov adc std fdivrl xchg nop test cmp xlat lds and pusha add ror pop (bad) and xchg hlt das adc rcll mov xlat add cld lock adc test fs pusha mov sbbl and pop push or sbb add insl ret shrb fimull bound cltd nop sbb leave mov shlb xchg xor add enter fwait out rcrb addr16 gs cmpsl rorb add push mov ficomp gs mov pop adc xchg (bad) ds lret (bad) rcr mov fs xchg xchg cwtl adc insl call mov cwtl xor stos pusha push mov xor mov dec aam sbbl push imul fbld xor lods mov sbb mov movsl sbb cmp push and mov mov mov add lods pop push repnz push popf fsubrl xchg push cwtl cmp and pusha loop insl and or pop nop (bad) mov add mulb and sub pop movsb adc sbb xor sub fsubrs dec les pop sbb cwtl inc pusha (bad) sub dec or mov or call push test push pop cmpsl dec mov lock in xchg outsb xchg cli rcrb mov sbb pop add pop in inc cld dec clc push cmp pop movsb lds adc stc cs fcoms bnd add int arpl jecxz mov int3 or test or sbb daa aas mov mov xchg xor les and clc int cltd cmpsb aam xchg sub push loope push mov dec push push int3 dec xchg xchg pusha out in ret out ljmp and loope sub movl jno pop je leave std sbb pop jbe sbb pop cltd rep adc mov adc sbb mov popf dec lcall stos ljmp nop ss imul rcll and clc loop int3 adc aam push mov es xor mov std sub mov add xor inc xchg sarl push not mov popf jno (bad) enter mov fistpl pop icebp movsl add adc push dec roll stos dec mov sbb arpl ret cmp cs adc or nop aam dec pop add jle imul jnp iret cmc sbb hlt inc mov test add xchg sub mov mov pop sbb in test jecxz jmp pop add sub inc rolb jp inc call or imul fs cmp stc in pop int pop mov orl aaa pop inc pop (bad) loop mov xchg and mov inc xchg dec add lret push fs mov cltd lock adc mov or ds jmp xchg int3 pusha and lods rorb xchg rcl mov xchg addb fs inc sarb cmpsb push (bad) adc dec pusha and mov mov dec negb xchg fwait push xor inc leave add adc jns push int3 mov adc ret shl jae or pop aam inc and push mov push and test add outsb insb je sbb gs pop add nop lea xor and push std add push fld push loop dec mov subb enter jecxz push push dec sub (bad) hlt mov cmp xor or cmp xchg xor mov loope popa adc hlt lock int inc adcb adc icebp mov lcall jb lea clc jp sbbl jnp or cmp mov jo scas mov psllq inc xor out or jmp mov rolb rol mov adc add adc cmp lock and sbb mov xchg cmpb movb add cmpsb das mov fnstenv jmp fwait sahf sbb adc shrb fstpl pop jno daa and xchg packssdw sub rclb cld in add sbb dec leave mov aam xchg xchg loop or xor mov leave mov loopne stc lahf jl and out dec mov adc mov or repnz addb sbb add fwait mov xor iret std dec mov xor je je js cli daa rcrb sbb sbb nop jo cli xchg add mov aas add or adc jmp daa sub test lea lret mov mov add test inc adc inc cwtl loop dec ljmp add stos dec lcall test sub test pusha add pop and or scas std push cmp add inc mov je dec enter nop mov push or cmp daa cmp fcomp mov or (bad) mov fs sbb mov aam add xchg (bad) lock (bad) and rep push test sbb mov adc dec repnz int3 mov js repz test adc cmp orl inc nop pop sarb mov sarl clc mov lods xchg jl xchg in ret jg pop xchg mov push cli mov add fldcw adc mov loope cmp stos ret mov add inc xor (bad) out push add fs cmp add std pop es out add xchg insb repz jg mov and dec stc xor pop inc sbbb and sub js lock add fwait mov mov test jnp in or imul leave iret repnz sahf loope dec lea or and mov inc or jnp and into adc jp rorb loope js,pt xorb xchg or hlt in push rolb adc dec loopne mov cld xchg sbb inc sbb xchg fdivr loopne push adc xor xor std add div push lahf cmpl adc add dec in iret pop or jmp mov pusha adc out push xor sbb push insb sahf sbbl xchg xchg or test lods inc mov leave push add pop mov out mov sbb add xchg movsl fmul inc aam sti sub add shll or dec dec gs xor jo in outsl and scas nop cwtl call cmp rcrl or sbb and xchg xchg je pusha mov sbb pop and out icebp inc jge jae or xchg xchg adc int3 inc dec cmc push cmpsb inc sbb scas call int inc add pop jne ds push loope pop lock cltd xor xor (bad) jno mov mov jmp dec clc movsb dec pop inc push inc adc loopne cmp or lret pop insl pop xorb insb pushf jmp fmull sbb (bad) mov js popa sbb xor mov fcoms or mov or push in add pusha add push sub icebp mov cltd lock (bad) xor push and mov inc in sub iret jo fwait push (bad) std or sub dec mov in or mov mov dec les xor adc or cmc pop ficompl (bad) loop (bad) and jns inc push mov add (bad) (bad) jp pushf and stc mov scas (bad) stos cs sub mov idivb lret sub ret add add outsb icebp sub nop sbb push mov xor sub mov adc out clc sbb jno (bad) aaa add add push stos jne add insb notb (bad) add stos mov adc out orl xchg push mov out je dec aam and cmp inc adc xchg ja pushf adc xchg les outsb adc xchg bnd or xchg stc pop and dec ljmp sldt shrb (bad) loopne mov xchg icebp add (bad) sbb sbb in mov test inc xchg mov dec gs or (bad) je imulb ja js and sbb and dec aam inc mov inc imul nop or pop add mov fimul xchg lods jo in inc cmp inc inc loopne in daa shll xchg or dec dec inc or les rcrl ret jb inc test test sub (bad) lock xchg mov lahf nop lods imul lea pop mov cwtl cmp add inc xor add dec pop mov insb or sub push xchg cs lret stos cmovnp xchg jg and push addr16 push jbe mov sahf push or add pop fs xchg mov arpl cmpsb in mov push lods sub jmp lock xchg mov or fadds pop (bad) sbb add mov mov xchg insb nop or jno sub mov xchg push insb in pusha mov sbb test inc adc xchg jp jl daa xchg cli lock (bad) xchg mov add arpl add xchg nop cmp sub jmp mov sbb into sbb in mov add pop popa and mov mov push scas ds (bad) in add scas xorb rolb xchg push mov cwtl xor pop das hlt inc xchg adc xor dec rcr les mov mov enter add cmp xor mov xchg out add js pusha mov movsl test test clc das mov icebp cmp and jmp pop lods in out adc dec sub fdivl xchg clc mov popa mov cs mov push lods adc outsb mov fisubl (bad) fadds test hlt xlat xchg mov lods lods jno xchg hlt sbb xchg push mov clc sbb inc xchg xor repz dec mov xchg popa insb les (bad) lcall dec and loop and and add out xchg aad or inc stos inc out mov adc jl pop lock test add js push and cmp loop push push dec insb in int3 ficom push rolb in cwtl mov (bad) cmc lahf in in test stc movntq mov inc mov push add or or arpl fnsave sub mov gs cs cmp int3 sahf cmp repz mov in adc test cmp jl movsb xchg xor mov outsb pop inc add (bad) aaa cs mov pop jl sbb jno inc jge mov loopne (bad) icebp shrl add lods adc add lret lret test and push ja test and mov mov shlb stos cmp add stos push pop iret (bad) fadds test pop xchg xchg cmp or cmp add nop test mov add mov rcrb xchg in sbb xchg fcompl popf xor dec sbb pop add mov pop push add leave push pop jmp and jge add add sbb cmc iret repnz shrb push jne hlt negb jo sbb mov and cmpl add xchg mov xchg mov popa mov fs cli xchg mov pop test stos jmp xchg jb jno sub jne loopne cld add mov jne sbb xchg mov fsubl outsl rcl rcll test push push out add test adc fdivl call or mov daa mov into mov notb sahf add (bad) pop pop les add sti cmp fsub nop add icebp daa movsl adc or fcoml in pop (bad) repz pop lock (bad) (bad) mov (bad) fcoms xchg add and xchg mov push add lock (bad) mov fs mov iret pop mov mov fwait adc pop sub addb lock lret int3 and std mov test movsl add lock xor insb mov mov daa xorl add push xchg bound add aam xor push sub dec pop cmc insb xor sub movsb (bad) sub xchg pop push pop mov pusha adc lods adc loopne mov fcoms or dec or dec pushf and cmpl popf movsb nop lock pop xchg repnz in push add cmp outsb ja add imul out nop (bad) jae mov mov add out cltd sbb sub mov sti jbe dec xchg je nop es daa sbbl loopne icebp sub push xor push imul fsubl mov xchg pop daa bound pusha cmp add xchg mov outsl add call rcrb add shlb jmp daa dec shlb dec pop jmp cltd mov xchg inc dec imul lock add inc jle push daa loope insl bound and xor xlat out cmc add xor std addl or cwtl sahf aaa mov popf mov clc jg addl ret mov sahf adc fwait cmpl cwtl mov stc rolb test call pop js jno movsl sti mov ret mov xchg orl lcall cld pop mov mov mov nop sahf icebp push sbb mov scas lahf inc test mov mov xchg call mov mov in xchg xchg lahf std mov sahf mov rcrb mov sbb adc cltd das stos add jo mov mov xorb stos jnp push (bad) mov add adc or pushf sti loopne jmp and jne sub or xchg jecxz mov movsb (bad) addr16 addl mov stos fwait mov xchg dec adc std mov cmpsl and or nop out stc sub adc jo or pusha mov sbb inc mov cwtl orb popf cltd fstl mov shr in push mov sub popf mov lods jo cwtl dec fwait lods js inc mov aam fsubrl repz push mov test mov mov cmpsl sahf cmp lock dec cwtl add adc adc or add in fild push jo fnop out inc in mov cmpsl nop add mov pop mov call sbb xor sbb mov sbb or cltd arpl inc lea (bad) das scas or mov pop dec xor inc test int3 mov sub test push mov push mov out (bad) addl dec jle cwtl clc add cmpsl xchg lcall sbbb jle lcall or ret adc (bad) adc dec leave mov mov mov (bad) and lods push movsb call movsb enter and sahf je adc test sub nop js scas xchg popa cmp popa js or mov loop int3 ret pop and push mov xor in jecxz cmp mov js push shrb sbb or nop test popf mov jo cmp mov pop clc adc ljmp sbb mov inc les scas and pop test xchg test orps mov mov dec lahf fdivs shrb test in xchg ffreep mov fdivrl mov pop lock in mov adc mov dec and mov lock fbld int3 or add xchg popf or push clc push add pop cmpsb jg xor add stos (bad) jecxz icebp adc mov dec shr js pushf mov enter lret dec lock iret arpl xor xchg fsubrs ljmp les les dec xor xchg sbb aad shrb push add mov ja xor and sbb adc cmp enter and dec sbb mov mov daa repnz (bad) pop fwait pop xor jo push bound dec dec cmc sbb jns in xor jno popf pop adc out jo jge ds test add icebp sbb jl in out add jbe std js negb daa add mov sarb add xchg mov aam fucomi sub inc mov (bad) mov adc fsub cld test lock inc cltd lods add fdivrs cmpsb xchg pop lds cmp cmpsb inc nop mov scas cmpb (bad) hlt loop lret pusha sahf add jg out xor inc ret and or sub cwtl add add mov sbb leave adc sbb jo mov and es pop push add sub and outsl mov sub adc es xchg mov add and ds or fs push and rol sbb xchg xor mov fs dec and rcr cmp sbb inc je les sub aas popf cmp push dec or cmp daa mov pop pop pop repnz mov add xchg je imul out fstpl sub push sub test mov fs xor xor mov arpl adc push sub cwtl cmp mov xchg and flds repnz adcl or lea (bad) icebp xor adc cwtl jecxz adc into in cmp hlt outsb adc aaa or add les mov movsb scas int3 clc mov push adc mov and cwtl fidivrl or pop push pop push xlat je add imul and or jmp pop int mov pop pusha lods dec cmp add movsb in pop inc shr jmp lds dec add cwtl enter test xchg outsb xchg add adc (bad) adc fisttp xor fstpl xor cmp or mov ficom pop xor mov std daa dec inc orb jmp jl mov (bad) out mov pop mov sub add lods in call lds clc mov mov test js jl stc sbb shrb xor mov aam sbb inc loope pop add cmpb lea mov add das (bad) mov lret bswap jo mov jl in das (bad) inc loope push lods inc movsb add aaa add test mov std aam loope scas mov pop and in or test adc cmpsb inc enter testb in mov (bad) push enter and repnz xor cs or data16 sbb adc icebp xchg sub push data16 mov cmp cmp adc jo ja test xor fidiv add daa enter and call adc and test test lds out mov daa lea js pop add xchg int3 and test add loopne mov xchg mov xor add rolb xor inc add adc and pushf adc test (bad) jae dec and cmp add dec std in adc gs loopne sub dec insl dec add inc sub mov xor stos mov rolb xchg lock xchg daa add jmpw nop lods dec dec clc sbb sahf sbb add cmp scas roll nop add xor xchg dec add call mov daa adc mov shrb inc aaa ja cwtl lock jae add or xor dec push jl sub add inc cli mov (bad) popl dec sbb mov daa mov push xor mov call mov mov sbb inc adc cld orl das sahf mov sub cmp stos cld movsb dec aas call inc nop xor call or or mov mov mov or enter lahf mov inc or inc adcl mov dec mov aaa and and push data16 clc test jmp dec insl mov mov test inc fs pusha cmc pop xor add loop ficom test xor movsl mov dec pop nop and dec mov sbb or test or add mov mov cwtl test daa push xor push add nop clc push xor aam inc mov jmp insb bound fadds sub push sarb sbb loop (bad) adc push adc push sub add (bad) add and and adc insb inc sahf adc mov xor mov (bad) leave adc test shr xchg ds jo data16 repnz xorb and and addl cmp shlb dec dec or in es jne cmpsl sub mov mov lahf jnp adc sbb jbe movsb adc lret jg clc iret or nop repnz fsubs shrb and cwtl sbb xchg daa or and cmc mov je loop pop sbb adc sbb dec test in popf repnz dec mov inc push bound add ret or test scas lds and adc pop scas dec sub pushf mov lcall xor mov lret cmp push mov outsb or mov cmp dec inc out je pusha dec pop xchg add mov xchg test test aas adcl sub lock scas sahf add scas fdivrl inc mov cmp sub sarb out stc adc (bad) mov mov out mov push sub pop je leave or ret mov dec sbb mov or fiaddl stos loope mov jecxz test insb pop add aas lea dec (bad) sub mov mov lock adc xchg inc je push rcrb stc push in es cmpsl popf (bad) pusha add push outsl test test inc mov out rcll call or icebp mov out les daa inc xchg mov popf js sub mov ds push lahf mov or and ret es pop loope cmp outsb sbb lcall and lcall movsb int3 aaa fdivl sbb lods int stc enter inc ds popf cmc je (bad) jo sub dec inc inc mov fwait push pop (bad) adc in sub movsb cwtl xchg cmp jg mov sub test cwtl add rcrb mov stos pop pushf or sbb mov adc push and add xor add mov rclb cmp dec push or cwtl adc xchg or lods ret leave cld cmpsl movsb in inc sbb add loope mov xchg and dec mov adc addl loope ret fsubl cwtl negb inc lods adc dec sbb xor jl into cmp mov and cmpsb movsb fdivrs mov movsb cmc mov sahf xor and push push rorl sub fistp push test inc test sbb es mull lock loope icebp test pop popf test or enter cwtl inc mov and add lds xchg pop add out push mov sbb je shl (bad) stc ss sub insl xor mov mov movsb shrl fisubl xchg or adc push es adc sub ret mov clc lods sbb (bad) lods and lods pop xor mov adc aam sbb fistl cmp popf loope lss xor mov sub lea xor pop adc lea sub mov sbb sbb and push add jne (bad) nop inc sub cmp lret or fs shlb daa clc mov js inc mov adc or leave test mov xchg (bad) in mov ss outsl or sub push mov add fwait test mov pushf pop xor mov add pop jg dec and sar push mov xchg enter add pushf movsb pop inc leave dec call je adc int3 adc xchg fsubr dec sbb ja jmp sub icebp push sub xlat dec aaa lret jne aad leave adc xor ret pop dec inc xor cli pop (bad) rorl and xchg sbb add test mov mov and xchg add pop push int3 xchg cmp xchg fs mov fs lret enter adc dec movsb xchg add pop mov out pop mov or pop xor mov cmp mov aam jl push sbb xchg inc xchg mov std loope add xchg aas outsb jg mov mov test loope inc xor daa adc (bad) js test push iret or cwtl (bad) and scas adc xchg enter mov mov test cmp or inc sbb jns pop inc nop push sarl xchg xchg push mov or or cmpsb test mov sbb iret and clc push dec inc mov mov loope (bad) repnz inc mov ret ret rorb and or sub cmp lea inc and in and fs andl cltd lret gs movsb sbb nop pop imul jbe jmp inc in inc je cmp daa sub in xor add sbb addl jmp sub cmp xchg mov mov sub and adc leave pop mov mov aaa pusha and rcrl push xor test pusha ret inc adc sbb mov pusha push sbbl mov scas cltd faddl lret test popf mov insb lods mov add dec sbb mov scas cwtl sub and repz and in lods and stos cwtl loopne orl sbb mov mov outsl push pushf jns mov mov xor aad add stc cmp jge cld jae sbbl out add test dec rcrl mov movsb dec cmp cmpsb sub adc mov fdivl jl xchg je lds inc je sar or inc repz sbb lahf inc mov jbe and test cmpsb pop xlat rclb in push or int fisttpl sub dec or jl data16 movsb add and ja sub call cmp or add popf mov sbb int3 inc dec jne add cmc ljmp iret rol or inc add lds mov add add adc sahf cwtl sub fs push mov mov je lret cmp cmp mov cs int3 pusha aam lahf fwait sub xchg inc imul sbb lcall inc adc adc ficoml sbb popf jno imul xor pop bound push lock insl or faddl push test dec pop fcoms and daa aam and adc js,pn in pusha fmuls mov xchg pop rclb mov aas repnz add mov js cmpsl ret inc shrb out and inc and inc add xchg xchg shll push mov jbe insl pop pop nop push mov sbb inc stos and pop and cmp in sub mov and mov fs adc adc cmpsb in mov push cli mov stc jo or sbb and (bad) outsb pop inc sub mov lds into lods xor add loop mov sbb lea sbb ret pop jae or or pushf test shlb inc lea loop push inc mov sub sub lret shll std inc enter lcall fs push int3 xchg imul inc test push mov movups sbb sbb mov cmp cmp mov lcall mov xchg mov sub xchg xor mov dec or inc aas les and out pushf addr16 cmpsl pusha sbb and sbb mov xchg jmp test xlat xor mov and in jno inc or lea pop movsb ret sbb dec sbb (bad) mov push inc data16 dec and dec or lea cs push data16 xchg mov lock inc bound inc inc dec daa xor popa xchg mov sbb dec dec sub je lahf sbb inc inc adc repnz mov push cs push out sub push inc dec xchg addr16 sbb sub push ret (bad) aas dec sbb std xchg ret call pop add mov test mov jl nop lods icebp std es inc jge fstps loope jl mov fstpt test cmp mov mov popf (bad) xor fmull xchg push je adc sbb xor push dec cld sbb movsb enter fs sbb inc adc notl mov xchg pop mov scas jnp cwtl iret call sbb mov bound sbb faddl lret std pushf sbb (bad) push pushf and xor orb inc xchg lds sbb xor repnz and or and (bad) pushf enter cmp (bad) jl inc jle fbld sub jmp sbb dec xchg adc xchg andl rclb js sub dec dec movsb cltd inc into adc js sub pop lods divl into xor imul outsb orb call push (bad) ret lods stos dec addr16 adc and inc sbb insb or into inc push outsl loope push pop jg daa into pop sbb pop jmp cmp dec xor sub dec adc mov fisttp jnp call pop inc in out int add sub xor adc push (bad) push push dec and push xorl in mov andb push cmp shrb ret clc and divl inc and dec sub mov add cmp js add testl sbb xor or inc cld mov stos adc dec jp lods adc xor cmpsb adc enter pop push dec cmpl clc sub jmp adc add adc xchg pop mov adc mov lds jg shl or add jo mov xor cmpsl lods rcrb dec sub pusha pusha mov xor adc jecxz xchg clc mov into lock arpl (bad) sbb (bad) mov jecxz cmp or jmp cmpsb popf sbb pop scas and mov sub push add popa call jmp sbb pop addb ret cmp out ds lods sbb push dec enter mov movsl xor xlat mov mov and push xor rorl inc jle adc rcrl dec inc jb int3 and mov popa test inc jae adc pusha call mov loopne pop mov (bad) mov or rcll icebp jo loop jb cs xor jne sub neg call dec out jmp int and or je lea inc cmpsb jne dec aas push ljmp or shlb iret sbb jmp sbb icebp mov std xor pop push nop pusha push jmp add pop inc pop ds inc or bound (bad) in ss mov jmp sub std xchg inc sbb cmp stos jl add jo in jns out lds mov ror (bad) cld jbe push loop stos jle sbb mov mov cmp pop xor pop add add fsubp addr16 loop mov sbb jns pop sub or loope adc pslld lret inc inc mov cmp xor pop jne repnz add add imul ret mov pop aaa mov push lds insb adc sbb push xchg roll jge sbb loopne pop push test mov adc sub aaa adc jle fld in push mov leave or push push (bad) mov fnstenv stc nop pop cmp jge outsb loope add jmp loope push mov pop mov (bad) push pop sbb rcrl pop push xor sub jb jg movsb add cmc repz (bad) (bad) pop add xchg aaa loop pushf and push mov push xacquire mov xor jmp (bad) shlb enter jge push loope (bad) mov push mov mov js ret pop std fadds aaa and mov adc int3 push andl scas sbb adc push and inc jmp loope inc or inc subl pop push xor test mov ficompl rorl dec daa ret int3 xor (bad) shr scas xchg and mov (bad) push inc or jge push ljmp cli mov insb pop (bad) xor mov adc adc mov add add sub pop push cltd dec pushf sub sbb pop ljmp and xchg or lahf jmp lock adc pusha adc xchg cmp xchg inc cmp ss adc mov xor and sub add cmp cs push xlat or test jge cmp jp jns sub scas push mov inc adcl imul pop into push jmp jge mov andl mov sub adc mov (bad) repnz or xchg add insb add popa push test das jns stos addl les setp cltd cli and shrl js or jmp and outsl pusha xor push inc add dec mov negl lea mov push xchg divb mov (bad) in insb cmpsb sbb add lock push jge lret es or push adc xor add xor sbb repnz mov dec add push xor in shlb ss jns mov arpl pop bound into xchg jae (bad) sbb cs sub add push mov add mull or sub or lcall and js call mov jns and ja or push adc cmp dec hlt daa mov sub add pop lret aad cmp mov mov test out ret jb icebp and es push jecxz (bad) loop jb ja adc push jge mov and (bad) dec dec pop and pop out mov dec and cs popa cmp jmp inc jnp xchg sub ljmp sbb test add pop loope xor jb mov loopne inc cli leave jle outsl out adc xor ljmp and test stc xor xor cmp ds add push les add jg add add lock fisubr roll push mov adc adc cs rorb popl fnsave imul clc adc addl or xor outsb mov out js dec lock or and pop shll fisubl xor or inc add dec jp insl sub sub inc inc repnz sub and cmpsb cs adc adc in mov or and dec and out (bad) add dec push jl and popf push and test jp sub mov pop adc repnz sub out mov fwait mov xor jbe js ficom jns sbb or add sub push fs andw mov dec popa sbb jle and mov add push hlt sbb mov mov popa sbb and add popf pusha add cs scas je pop jne fisubr push and jge test lods mov pop ja push pusha mov cmp out or xchg fcmovu sub and cmp cmp mov or jne adc (bad) jbe sub fs xor inc sub jecxz pop dec add inc xchg loopne sahf fistpll dec (bad) jbe pusha pop xor inc out cmp les or pusha push lods stos cmp sub adc pushf dec (bad) notl lret mov ds pop fbld and pusha pop movsb and ficoml dec xor out xchg ss shrb rcl adc adc jns rolb pop dec pop sar and pop adc test xor mov test imul flds mov cmp xchg xlat ds add sbb mov ret and insb mov cmp mov pop test cmpsb clc push or add add fdiv and dec jb xchg inc jae xorb add scas sbb mov push xchg mov jbe sbb iret scas lods mov adc or icebp add fildl pop rcrb psubusb sub xor and sbb addr16 adc and add insl push inc xchg sub sub jo leave or out add cld cli xor sub outsl pusha popf dec push pusha inc or (bad) xchg test xor dec addr16 into shrb pop push pop mov data16 and jb xchg add ljmp mov (bad) or (bad) mov punpcklbw xchg cmpsb rclb push mov repnz xor sub and pusha mov dec add xor jne clc xchg add fcmovnbe sub or test or test dec sbb in int3 incl xchg jno jge outsb notl jmp dec push clc jp or push add sbb push pusha subb push movsb in or test or sbb pop lcall sbb adc andb dec outsb add ss mov mov jbe test adc scas mov mov inc sub mov push loopne (bad) jo jl xchg jbe test sbb lea xor sbb insl daa and es add std push outsl out xor mov aaa dec imul aas add mov add insb cmp pusha test stos out in mov jge xor sub mov or dec mov pop orb push and jl imul inc inc or fs cmp aad dec (bad) cmp insl loopne add dec addr16 data16 mov popa in icebp cwtl cltd xchg or adc shrb in das and xchg cld xchg stos sub ljmp ror xchg out and hlt clc rcl lds stos sub sti pop call cs jo inc cmp scas outsb mov dec jp jnp add jo lods mov andl call sub dec stc and push cltd in je dec xchg mov add mov adc sbb sbb jb lcall and push push imul stc dec xchg pop std xor xor or popf in dec jne jecxz movsl cmp xor mov xchg mov pusha and sub mov fdivrl jle add cmp call dec jge imul mov frstor adc inc into xor stos inc mov mov insb bound in push out push repz inc cmp (bad) hlt rcrb xor or data16 add (bad) jb out out adc push sti and pusha sbb mov and repnz loopne (bad) bound push lret pop adc or push cmc push loope pop add inc mov mov fistpll pop js rclb add mov add sub push popa out add add pop and es xchg int hlt jmp add sti pop push sub call mov lods mov (bad) les addb dec add cltd cmp push aas (bad) cmc les inc cmpb js aas pushf (bad) hlt clc incl (bad) xchg jle pop lds stos add adcb dec jo sbb fmuls or stc mov cmp in xchg sahf add sbb fcompl or cld add test outsb inc ret mov icebp pushf sbb or gs data16 sub mov sub movsb enter add inc cmp xor out bound outsb jecxz inc xor push or pusha aam pushf icebp test (bad) ss dec cwtl jl xchg flds cld sbb xor sbb sahf add jae dec or add push push push ss or iret dec insl pop jae mov jns aad push loopne adc mov sahf adc dec push mov jge jns (bad) pop pop pusha xor pop or mov jne xor fnstcw sbbb and push cltd in add mov out or mov dec xchg lcall fldenv jo cmp add pop sub fwait push idivb cmpsb inc cmp test push mov mov sub add cmc jnp adc push cmp adc scas xchg and jp jge hlt repz push shll lock loopne test test rorl sub dec jbe mov push bound shlb xchg adc sarl jb int3 (bad) (bad) mov stc sub push cmp outsb pop push pop jb dec adc xor jo mov add popf jmp cwtl mov popa pop inc add lds pop out call xor in pop or push add bswap add cmp add shrl mov xor cmpsl pop mov sbb outsl (bad) xor pop jg sbb jg test jns push or xor rorb adc dec in add lahf jne js cmpsb or inc add or clc scas push or movsb add adc xchg dec dec popa lret test aad or pop jl push add punpckhbw mov out fild and and rcrb sbb adc lcall pop ja push scas push add mov pop fs (bad) dec or rorb je and add cmp cli mov or inc (bad) fsubr or adcl sub mov lods mov xchg sbb xor rolb fwait push xchg scas inc cmp inc aaa hlt (bad) adc xlat push pop test lock cltd push imul frstor inc mov xor inc adc push mov jge push nop mov sub jge dec fsubrl xor pop es in inc or push out data16 jne out ffree test mov lods push jo loopne pusha pop cmc fwait add (bad) mov pusha mov cmpsl cmp gs loopne jecxz sbb cli addr16 sub jp stos adc mov dec mov fucom gs add enter popf rcll cmp push jo rorl stc (bad) cs mov subb in push (bad) ret pop call sbb jle and call or jae (bad) xor adc adc add cmpsl push ret insl jp adc stos loop pop pop dec adc jmp cmp mov (bad) xor add data16 xor fwait jl jnp ds aaa mov push movsl push adc mov les mov subb pusha adc arpl push shrl negl cmpl jbe ss xor sbb or dec std cmpb dec cs mov imul pop shl jle cmpsl inc nop popf or jns mov pop push jo cmp jmp add dec pop int jg jae or pop pushl dec adc jl aas jae adcl mov inc push or mov add nop add xchg inc cmpsl cmp sti adc or inc push xor and pushw or inc or add in dec subl cs push cmp cmp mov aad shrb js or dec pushf push and push loop pop movsl add pusha das (bad) jge cmp add and stos sbb cmpsb hlt jecxz idivb inc in mov inc or sub dec push call or fsts xor cmpsl out addr16 xor jb sub push repnz jmp aaa out dec cmp aaa sbb push into cmp xor lock mov pusha push mov movsl pop rcll mov adc inc lods dec fdivrs xchg cmp lret pop cmp xor xchg mov (bad) mov xor push lea sub pop add cmp mov lahf nop mov push add in push das mov adc pop and movsb lret cmpsl scas in xchg arpl mov int arpl and add dec pop addr16 test sti sti adc cltd std xchg test push sbb mov je dec ja pop add fistpll or addr16 mov and loop cmpsb push jg,pt ret add sub xor outsb xor rorb pop ds jp sub jge pop pop cmp sub cmp jl sub inc push push pop push shll push xchg cmp hlt fs sarl lock sub jmp push or pop dec add mov mov push jle sub addr16 into rcr sar andb cmpsb nop/reserved mov adc mov or outsb mov inc cmpsb fstps loope adc mov loopne ret call and mov mov es int out mov dec mov jg pop (bad) jb mov pop ret sub imul jecxz aas mov ja or push mov test lods sbb mov inc pop mov adc pop addr16 push fcoml call xor jg dec das add (bad) std inc adc mov push push and add aas mov stc xchg push cmp pop es (bad) test mov out (bad) and xchg mov jecxz roll xchg push loope jmp sub mov jmp loopne add pop mov imul in lcall adc xor iret negb dec test xor (bad) les cld dec mov sarb push inc mov xchg adc adc cwtl mov jmp int lret mov pop (bad) cmp adc jb jns imul clc dec aas jl add std mov jge inc addl int3 cmp ja outsl pop movzwl inc xchg dec add neg shr pusha loop push push ja rol not inc ret push xchg pop push mov pop pop mov add call xchg add icebp lcall adc sti jp inc sub popl pusha pop push ret lret and hlt xchg sarl pop stc ror sbb pop neg fsub sbb mov adc pop xor out pcmpgtw pop xor add mov cltd mov (bad) mov sub cmp adc xor mov mov rcrl sbbb scas push (bad) jmp xchg jg mov add jb sti adc shlb orl add add xor mov je clc sarl popa mov lret jmp cmp leave pop inc inc mov jmp insb xor mov inc ds (bad) ljmp cwtl cmp add loop inc jmp sub ljmp xor pop xchg mov jle add add arpl inc and ljmp add adc enter mov mov push mov jo enter sub add push out pop xor shr mov jmp test jmp fxtract outsb jbe pop outsl cmp mov lret mov aaa int daa subb cmovo cmp incb jb cmp lea mov add and adc xchg cmovne inc and pop stos mov scas mov scas (bad) add mov mov inc hlt add (bad) repz push jns or push push sbb add jmp ret mov cmp pop push mov (bad) in jl lahf sub and stc add roll add sbbb (bad) enter cmp xor iret stos or cmp cmp jne mov out daa sbb nop scas pop mov push dec cmp inc popf test jg incb sub dec das add xor icebp xchg adc jle les pop data16 in adc jmp cmp pop dec std out and push sub xor xchg mov inc inc mov push xchg outsb push xchg hlt sti add dec jnp mov pop xchg push mov mov addl jne outsb inc or jl add inc stos ja daa cwtl xchg dec divb push rcpps pop call jo push xchg test add imul out nop jns ret shr (bad) cwtl neg sbb test test rorl xchg sbb aad push ret mov sub or xor ja ljmp cwtl sbb mov rcr mov dec cs push mov frstor in cmp inc movsb xchg mov and and cwtl lret insb rcrl icebp mov xchg and scas inc ds mov add andb movsb inc enterw and mov jp jmp add mov nop mov fmuls mov iret enter jecxz xchg sbb in mov xor (bad) dec int3 daa xor push dec sub out rcrb rolb movsl jns or add enter jne and hlt mov cmp add add sbb and pop mov pop inc adc rorb mov mov push push inc call nop sub push mov mov sub add inc stc add iret mov das cli dec sub int xor lea in sbb xor (bad) sub sbb and (bad) iret or mov jno inc iret lock test loop sub mov and negb movsl xor repz cmp cwtl adcb mov and add dec dec into sub xchg sbb pop insb dec add mov out sar test xor js xor mov xor lods ficoml push int fs add mov pop dec adc outsl and pop lock add int3 nop push push add mov push mov outsb add jl es cli incl divb dec mov insb (bad) nop mov xchg mov repnz les mov cmp ret jmp cli cmp cs (bad) lret push xchg test mov insl mov push hlt push out dec pusha mov daa push ljmp sbb in sbb outsl dec (bad) gs out add mov pusha pop push call sbb shrl mov pushf and jmp and adc lea jmp stos sbb push in cwtl cltd cmp push stc pushf xorl adc mov movsl mov add sbb push aad test push mov xor mov push lds adc or sbb fmuls xor add loope xchg shrb sbb in adc popf sbb mov add mov sub sub das mov inc cmp jg enter enter test mov test xor sbb fs sti sub repnz sbb mov adc test pusha adc js or cld push add xchg outsb xchg push sub lods xor pop sbb icebp roll mov adc insl or pop sbb and nop push incb dec outsb rcrl and insb popa mov dec and mov sub adc sbb xchg rolb jle lcall popf add xchg xchg popa je cmpsb bound xchg jl icebp inc add push lds adc or test dec inc call test or jbe movsl xchg cmc cwtl pop jbe add inc shrb push sbb sahf (bad) jo jp orl jo stos xchg in lahf jno gs adc sbb sbb cmp mov adcl mov add sbb add ficomp popf ljmp movsb (bad) mov sbb dec das lods add movsl dec jne push jo mov xor mov jle sub cmp in xor rol fnsave and lock pop dec sub xchg fdivs test adc (bad) jmp adc xor leave aaa xor xor int idivb sbbb xor jno jg sbb sbb cmp cmpsb cwtl test and mov mov fsubrl pop xor movsb ljmp xorl cmp iret jmp (bad) mov sub sbb cmp xchg and negl add loop popf dec adcb add mov adc add dec mov test hlt cmc xchg add xchg faddl mov xorl pop dec mov pusha push int or in daa push mov jo pop (bad) push out dec sub mov stos test loopne cltd les mov mov or mov jne sub scas lock add ret mov xchg sbb or daa push push mov add mov add or mov lods adcb jge jmp cmp movsl rcll daa add or xor shlb sbb xor and icebp cmp mov or add and pusha jg insb xchg mov aas test xchg push sbb repnz test and fnstenv les pop cli out add or hlt loop dec in or or ret or jp pushf sbbb enter sub in nop cmp adc out or rcrl xor xor fsts and rcrl or fsubs add sarb adc pop mov add (bad) nop add out cmp lret mov mov sbb dec roll mov push outsl into inc inc and or xchg clc add xor (bad) push xchg jmp testl xchg mov add mov xchg xchg insb test dec pop add sub in push je mov popa xor test jne dec mov xchg js addl test pushf or mov inc in xchg pop loop lahf jp mov lahf lock mov or mov mov jo mov add cld add rorb and dec clc andl xchg pop xor mulb mov inc imul cmp adcl pusha xchg test add cmpsb xchg mov push test (bad) es and or rcr sub add dec xchg pop mov mov or xorb test rolb out sbb mov dec lock mov xchg fiadd cmpsb xor out xorb inc sub scas add insb lds inc es add jb add push ja sbb inc scas lret dec inc mov mov adc nop int3 cmp pop add add in out jno lea cld fnstenv mov add xor and add push inc lds cli lret add and inc test mov sbb mov dec es pushf push lret clc add popf push mov add movsl mov lock sahf lahf call int3 ds adc movsb mov outsb pop xchg add add jg cmp push sbb sub pop (bad) movsb sub ljmp nop inc int3 add lcall sbb scas mov add add lcall clc (bad) jle in add mov orl sbb xchg sub jno mov out mov jne pusha sti out add jno cs in jbe pushf or sbb enter int3 fbld xor cld addl (bad) cmp hlt fwait sbb and sarb test das mov nop mov inc jl and xor aas push mov and mov xchg add pop data16 test ljmp add sub lea clc dec ficoml les jg add xor xchg xchg jne negb mov xor rclb movlps cwtl pop and enter test sbb addl mov jae xchg sbb or nop pop dec and lds sbb popa enter inc fdivrl mov (bad) fdiv stc insb or sub inc int3 daa pop sbb inc lds insb lock push pop test add (bad) loop gs call adcl adc mov add out ljmp add pop dec je jb int inc loope js sbb nop fimull push pusha add mov call aaa (bad) ja inc sbb cmp std mov xchg rcrb rorb sarb inc inc out bnd and sahf mov add xchg jnp lock jl leave addr16 jmp imul sbb adc stos or les or rolb add add add jg rclb sub or insl arpl add cmp ljmp test mov inc insb xor xor out xor and cmc mov pop jle add call stc sub and push cld cmp push sar inc enter xlat xor push std loope lahf nop nop subb sbb stos xor push mov popa ja arpl das test pop in std enter mov inc roll or jae xchg in cmpsl xor add add sub jne inc xchg ficoml add mov imul push lods inc dec pop in xor addr16 js or push test mov add jae js inc test je dec mull xchg jle std inc icebp and enter mov movl lret stos push adc xor xor test fs inc testb cmpsb sub cmp rol xchg sub add xchg js insl inc lock lret jecxz mov pushf inc loope xchg adc lods or adc (bad) sbb dec adc (bad) and mov fwait push je cmp mov cwtl aas movsb hlt and aaa sahf mov in add les sbb inc adcl lret add ja rcll in dec outsb iret jge xor mov popf push mov mov sbb mov (bad) rorl int3 add xchg push (bad) or jbe psrlq xlat cmc and pop add insb iret lea inc mov push dec arpl in sub mov mov out cmp push inc aam jno sarb or cmp repnz sbb mov push stos inc mov mov pop mov cmpb add cmc jne or add jp sbb xor jg sub add sub mov fsubrl rorb jnp cmp and clc add repz add push xchg add ds out andl add inc add mov movsl nop add (bad) dec rclb jmp xor sbb stos inc sub pop sahf jbe cmp xor cwtl int3 add push aas call scas and mov push adc les jbe rorl loope and scas mov inc cmp pop dec jmp jnp inc mov decb inc sub out and test adc in mov loope inc mov rclb adc add out or das dec push es clc dec add aam or lret add scas mov mov pop jae punpckhbw add push mov pop cli add xchg rclb into (bad) stc push orb int pop cmp lods and push cmp cltd add sub mov jg push (bad) add fcoms mov sbb pop ret lods adc in rorb mov je pop push enter sarl mov insb cmp and pop push jl and roll cmp scas mull rcrb xor or lods add and arpl add pusha mov test movsb add push lahf add push dec xchg xor testb jo or js jmp bound pop (bad) push lret push ljmp imul adc xchg dec pop sub or mov sbb mov jp cltd inc and mov (bad) cmp jmp ret aad lods call inc dec adc (bad) shr xor mov push outsl xchg dec div cmp loope mov dec pop dec pop aaa les sub push add mov mov arpl jnp and loopne xor lahf rorb cmpsb xchg (bad) loope sbb jae jns sub (bad) add push sub push inc je hlt cmpb xchg mov or xchg jg ds sbb cmp mov fisub mov lods or lods std adc movb mov (bad) mov mov test inc dec mov movsb xchg add pop outsb add sarl add xchg add lret pusha mov add jbe movsb bound bound mov mov hlt sub and jmp dec stc in dec daa mov push pop in or dec sbb lret cmp cmp pop sub aad iret or insb cmp dec in sbb addb xor outsl hlt pop xor dec or inc sbb and cmp incb and subb sbb stc cmpsl aas hlt dec and adc and pusha mov ret aam nop mov outsl mov aad ficomp jb hlt mov arpl cmc add xor and inc and test sub or insl add in mov hlt std lcall sahf movsb lods add movsb xchg test je ret dec pop negb fwait insb cmpb jns jno pushf (bad) adc jg xor sbb sbb dec push sbb adc mov and push call aaa add push lea inc add js mov add pop dec inc xor sbb aaa xchg mov subb js jnp les mov clc mov jbe and loop add push inc and lcall add sub mov std add arpl sub add mov leave add xchg orb mov add inc pusha add sub std push cltd shrl mov js xchg inc test nop add cltd mov sub lods sbb (bad) xor cltd mov rcrl cs test lret mov push mov mov lods (bad) pushf icebp jnp mov dec cmpsl aad mov ret out mov sub arpl in test shrl and adc mov and inc sub popa orl and ja adc mov lock adc imul inc add scas mov inc call arpl sbb pusha inc xchg add sub int3 add rclb mov rcrb sar (bad) lret mov sub or ja jnp aam out cmp pop aad mov mov sbb add add inc xchg mov pop cmp cmp or cltd xor fwait cmpsl hlt add inc cmp xlat jle inc call push aam mov xchg int3 test (bad) push adc cmpsl adc add add fmull and ret jo sarb adc mov nop mov add add test xchg stos movsb pusha hlt dec cli (bad) (bad) cmp mov sbb sbb leave repnz push daa mov mov mov and dec or in pushf shll inc into lahf cmp add insb mov aas and popf mov push iret adc jl aam es dec pusha mov mov mov orl stos test pop inc mov xor push ljmp cld mov mov lods pop add dec mov add mov mov push subl add xor out rcrl sbb lret jle enter sub push add cmp add (bad) mov cmp ret jle mov shll dec das rorl inc sub add jmp leave inc xor divl push fistpll add dec add in push dec (bad) and mov enter imul inc movsb push rol pop test pop push mov popa add loop adc das bound cltd add sub insb pushw lds xchg add mov push cmp aam (bad) jae dec movsb cmp mov sub in or xchg (bad) ljmp in xchg adc ds mov lret mov sub or mov repnz fwait js in (bad) popa xchg cmc and pusha and adc sbb fistpl test sub out dec (bad) push push inc mov push add or (bad) push cmc pusha xchg xor mov push (bad) insl dec insb inc mov push fstl and ret jp adc sbb movsb or arpl loopne dec mov xchg dec push sub jo inc rcl cmp enter and (bad) and xor pop push pusha xchg add clc add dec data16 mov js std fadds stos imul roll in pop cmc sbb cmp or mov test dec and push mov mov pusha mov mov or jo dec test xor inc nop movsl sbb std mov inc mov cld push aad mov adc add fdivr pop adc xchg pop add iret pop xor adc and (bad) fs fs and out inc lds insb push in adc and jmp cmpsb inc pushl push mov adc mov shll lods leave cmp xlat mov jns cmp sbb sub mov adc sbb sbb fbld enter lods jns sbb or push xor sub das (bad) rolb bound jl pop pop push inc js jecxz jnp mov ja stc test dec lock add cli add sbb mov (bad) test ret inc xor sub inc call clc cmp add xchg xchg jg mov inc dec and add iret (bad) sbbb lods (bad) cmp jle ja add xlat dec pop pushf mov add mov loopne add jl adc add add dec cmp mov jbe push push movsb iret jl pusha mov pop add out (bad) jmp xchg dec inc insl or into jp push lock mov iret movsl insb fs dec xor aad jno add (bad) push push push mov pop repz daa mov mov push mov stos pusha push inc sub movsl mov adc popf inc add cmp push adc adc sbb add push dec xor lock inc inc pushf add nop cli cmc rclb mov add or xor test or jae loopne mov and (bad) push stc or jle rol add cmp cmp bound les sub push cmp (bad) add jns pop movq mov or leave or mov inc xor xchg out cs test xchg fmuls inc and inc (bad) notl cmp rolb leave cmp inc cwtl push pop cli and les sbb push test jae insl and mov add stos insb outsl int ljmp out sbb jae dec push pop add pop xchg dec lea sbb xchg sarl iret xor or nop or je sub or inc dec dec int and xchg xchg fadd mov cmpsb (bad) (bad) dec push je popa loope popa push idiv adcb movb cmp push dec fdivrs push push sub outsl add jge dec ret mov aas inc adc or nop ret push and and scas sbb mov cmp fsubl in adc and jo (bad) add (bad) xor popf pop xor nop outsb imull adc bound call pop push dec orl rorb sub mov insb mov sbb and or js dec mov (bad) sbb in jmp xlat je ja movsl xlat push addb sub pop fwait push test (bad) push repnz fs movsb rorb js add cwtl xadd add ret and xchg insl fadds out (bad) sbb cmp add or stos (bad) xor rcll mov push sarb sbb sbb add add stc pop mov sub push inc aaa out pop movsl xor add loope and dec add (bad) into inc daa outsb lods mov pop xor rclb push cltd repz mov pop aas push pop dec push jl xor xlat (bad) adc bound push dec jo push push push xor pop mov push add xor dec mov gs add addr16 push mov xor dec pop push or loopne repz or inc (bad) cmpsl ret daa arpl call push lock ljmp lahf faddl nop adc ret fs loop pop ror add test xor (bad) jb add pusha inc ficompl scas add lahf xor pop and dec std jns mov int3 cmp mov and test pusha mov lret leave cmp mov cmp shl rol int3 xor xchg or arpl pop ret adc sub jg or mov movsl add push mov jae push sub push add pop leave test push rclb js in iret xorb inc add es fmuls inc arpl rclb hlt jnp add mov fnsave enter dec fwait mov test add push xchg jo or add sbb fiaddl lock and das cmc and push xchg pushf lock test fadd push and int jo cmpsl lcall lds cmpsb leave sbb insb or mov movsb or push push xchg jl inc mov iret fcompl inc inc jle loope test rclb pop int pop pop and xchg hlt push add and or or add pop push mov xchg call scas and cmpsb sub pop cmp xchg push in pop inc add std and dec rorl pmuludq pusha pop rcll (bad) int3 adc icebp sub stc cld or hlt not and jge fldt outsb cmpsl xor cwtl js dec push rol rcrb add imul sub (bad) enter leave xchg add cmp add loopne mov cmpb das lea fs mov test test mov scas or add inc or push cmp data16 test shrb stos sub fsub xchg xchg pop cmp gs (bad) adc push lds and rcrl mov inc push inc shrl cmpsl pushf js inc lret pop shrb negl and std pusha dec js imul add sub (bad) or lock pop cmpsb fs lret jb mov leave xlat adc test mov inc pop clc fwait shlb stos popa scas add in adc fcomps pop mov dec add (bad) adc ja cmp les movl cltd and imul adc out mov or gs push jo js movntps aam push lea mov pop or inc or (bad) hlt push icebp fcompl xchg sahf add mov and adc loopne mov pop leave push and rcll sbb add jp rcl jns mov xor test sbb insb arpl mov xor fld call add push lods daa pop imul popa mov pop clc iret movb fadds push insl xchg mov das pop mov ucomiss sbb push js shlb jmp lods mov jo add jae pop mov add pop insb out movsl add lds loopne mov es push gs incb sbbb sub sarb add or or sbb mov mov mov add mov sub or es or das fcoml into mov sub xor subb push out jmp aam insb add jo insb das and add mov sbb adc or add enter push jmp adc adc mov lahf pushf mov dec sbb cmpsb xchg shlb loopne mov sbb mov clc lcall iret aaa or loopne cmpl sbb mov sbb int call cld je mov adc inc adc scas or imul repnz lret movsl push pop and add jle lods lock lods or adc or les inc pop das xchg add push fs xor xchg mov jns add lods sbb xchg (bad) xor cs cwtl mov mov call xor mov push orl and inc pushf loopne fnstenv add adc mov jmp xor push aaa cli xchg or add ret inc or shrb or rcl mov dec cwtl add mov push sub jp andl sub lret pushf mov cwtl push lds call sbb adc das xchg mov out push and (bad) enter push cwtl dec add dec pop cmp cmpl push pop leave das (bad) xor rcr enter fildl fsubs call and daa cmpl sbb negl pusha inc jae pop mov adc sbb cmpb xchg pop in mov jo stos roll or enter and and int3 cmp push cwtl mov add push repnz pusha in mov stos push xchg punpcklwd std xchg nop xor cmp cmp mov addb inc shlb ret test mov stos (bad) pusha test outsb push fadds push outsl adc adc fstps or leave lods pop mov xchg mov and push popf pusha and fsubrl push aad insl das adc push sbb lea nop xchg addb push or mov add cmc rcrb cmpsl js aam enter stos xchg xorb dec popa rcrl (bad) add js and xlat push test sti mov push cmp push dec xchg nop mov test sbb or fmull fsts out xor scas rcrb sarb and outsl hlt mov sub rorb mov popa cmp fsubr or js cmp and cmp push pushf mov mov add mov int3 sub rcll mov rorl sbb push inc (bad) aam fcomps add (bad) lret sub mov (bad) shrb push mov (bad) adc lds addb in dec pop or or add cld rorb arpl adc imul sub arpl push push clc nop dec cltd mov cs add loopne lcall iret das mov xor dec sub adc cmpsb scas xor mov mov (bad) jmp (bad) pop push adc fimull mov outsb mov out xchg pop jg dec sbb push loope insb mov or pop add push rorb inc (bad) adc add sub movsb add cli repnz cmp shr adc movntps adc or aas cmp lods stos in cltd add (bad) call mov inc pop int3 insb adc fimull out sbb add mov or mov sbb sbbl adc adc lods scas jae movsw or and outsb popf subl push es inc add jmp scas jns lods dec add dec clc sbb add repnz cs aaa or bound loope xchg pop add add int3 or daa cmp in lock pushf xor loopne (bad) ds sub xchg push leave nop jo rclb push sbb xor or add psubusb jns sbbb push xchg fnstenv push shr add xor mov sbb mov cltd add jp ja push inc mov mov add mov adc push pop pop popf jecxz mov add jae fiadd in push mov scas xchg dec aas fistl test cmp jecxz add add xchg push mov rcrb lahf adc inc loop cmp clc sahf add pop aaa (bad) sbb fsubr pop pushf push inc arpl dec jp iret push add and jne add mov (bad) dec arpl daa nop ss out cmpsb lods mov (bad) nop repz and (bad) cmp inc xchg xchg lea push cmp and in sbb and xlat fsubs cmp push sbbb xchg push pop sub sbb scas lret jae add out mov dec imul loop and sub stc mov gs paddsb xchg mov xor push add dec xor cld ss loop add sti push idivl adc inc xchg add dec jne xchg fisttpll es sub sbb mov out add shlb movsl (bad) mov loopne jg mov popf add test or jg ljmp stos dec sahf cmp add lcall dec insb or sub jbe sbbl ljmp stos adc add add mov out push cmp pop add xchg jbe xor ror push add fistpl lods test sbb stos cmp mov pushf adc aas insb mov imul mov add and (bad) cli lock js mov cwtl jbe add sahf inc cmc out (bad) jo push cmc xchg dec sbb and sub sbb call fisub inc in test clc (bad) fmuls xchg pop jmp or cmp pop add jb mov mov inc clc cwtl adc sti xorl jns dec sub push fildl sub jbe fsub daa pop pop dec ljmp jns loope lock je lret rolb adcb mov pop cmpsb add bound data16 dec mov push add adc add int3 adc test cltd inc xchg inc jl xchg adc call pop pop jnp outsl (bad) mov or pusha loop ljmp stc jb pop mov inc insl outsb and (bad) sub xor or lds test sbb iret push mov dec xor push lods mov xorl shlb loopne aas pop ret mov lldt movsb cmp popa xor jmp sbb mov out stos dec pusha add (bad) xchg xor push sbb ret or out mov add xor enter (bad) ljmp cwtl cmp adc je lds dec clc xor jno out jo add pop xchg or push xchg inc in and xor xor aam ss out jge and sub pusha gs inc push xor pushf mov or mov push enter test pop (bad) push lods inc inc pusha lds dec test add jns add ret pop jmp adc popa jge mov sbbb insl out test dec add stc pop loopne out mov subb mov jmp xchg mov mov test loopne aaa and xlat bound in or xchg and sub les enter int and add in mov cwtl test sbb fnsave sub add cmpb mov out outsl xor movsl cwtl sub je hlt add push jl popl inc lcall inc mov ss addl mov add insl (bad) sahf sub out ret push push (bad) orps adc dec rorb stc mov stc adc rol aaa out and pop dec sbb mov pop and into je (bad) fiaddl mov iret pusha clc mov mov xchg adc test or push xchg mov adc std pusha mov mov fildl lds or sub leave sub imul roll mov or loopne mov inc or into and cmp cmp aam shll inc xor push cltd mov ja mov hlt adcb add jb in (bad) inc loopne or add aad adc inc pop add out roll xchg push sti shr data16 rcrb adc cmp dec push mov sub dec pop mov sub pop pusha add scas jns or gs add or xchg subb movsl add in jne add mov pop mov inc lods loopne subb add pop xlat pop push inc jb cmc repnz dec sub test lds data16 lock xor or iret and pop and xor fs mov loop xor mov mov call pop negl scas repz and sbb loop add or xchg (bad) lret loopne add push jge fdivr popl mov jmp jae mov les (bad) mull add lods pusha xorl inc sbb push xchg and push dec test dec sbb inc cwtl mov add push mov pop xor jg pinsrw inc adc mov adc push mov xchg add sbb aaa or cmp jbe mov xor fadds lds xor mov jnp add add inc cwtl ss cwtl or pusha sub add nop sub mov nop and dec fwait inc sub mov jo movsl mov mov and adc shrb mov pusha cmp add sbb pusha int3 inc push paddsb pop add inc mov jb pop inc jo inc sub or scas lret and mov pusha jb loope adc jle add cli lock lcall nop mov push add ds dec push inc add xor movsl (bad) lds mov xor lods xchg movsb aad add scas mov movsl das add and rcrb add inc mov add and mov jno dec pop cld push gs cmp mov mov mov adc call sub out scas sysenter out lea lret mov test dec fs mov lods or dec mov rcr lds jns addb ficompl and cmp scas xor sub pop pushf mov dec xchg jl ss push mov push xchg mov inc adc or out test (bad) pop (bad) xchg adcb xorb inc mov popf add mov fs out cmp mov jbe lods xor js hlt xlat out and in xchg cld mov mov (bad) mov cli mov gs es xor mov sub xorl push fisubl cmp cmpsl or (bad) xchg push mov sub dec or lods repz add or mov and mov lds sub ljmp in add daa hlt idivl xchg mov dec hlt inc pop pop nop out xor lret fisub fs jmp dec seta cmp das loopne cmp aas xchg pop in or push xchg enter push stc rol dec sbb loope adc nop cmpsl test iret or rolb in mov xchg pusha sbb pop je popa les pop andl add mov lods mov dec std push in mov mov enter popf sub adc mov mov xor jmp cld inc mov (bad) jno add mov add daa out pop and or jl and repnz adc and and ss pop or (bad) int3 or sar test sub dec add js mov dec cmc sub jmp stos cwtl mov pop and and and cmp adc outsb aam adc aad jns cmp mov mov lret or or mov pop test push movsl or and pusha mov in adc xchg loopne aaa cmp add out addb jl dec sub or and mov push mov jge idivb sbb ret inc and xchg shr add into std add xor shl mov aaa add mov xchg or jns xor mov add dec jb fimul ret push sub inc mov dec out add jmp addr16 jbe fiaddl pusha mov lret mov shrl sbb mov sti fimull jbe aas sub mov addr16 popa cmp (bad) or call outsb add mov (bad) dec xchg cmp rol and push addr16 rcrb lods jo (bad) jae lock jb mov int3 xchg sbb in mov pop fidivr out aas sub cltd jno enter addb dec or cmp push dec and shrb je add sub or jns push add aas ret clc inc sbb push push js push gs out cmp cmp sti push push ret sbb add mov push add fnstcw adc or xor pop sub (bad) jge add cmp gs or add rclb sbb push push pop sub ss xor or sub outsl sti xlat inc lock adc add loop and inc xorb ds jno int3 test mov add jnp sarl pushf push sub rolb and mov andb addr16 in xchg dec test pop mov cmp push getsec mov add dec sbb loopne mov adc or jecxz lock or stos dec jo push push sub scas in (bad) or scas xor add sbb aam and repz jo ds inc sub aam or inc adc in test aas push frstor cwtl and leave out addr16 jg add call pop inc or mov int (bad) xor lock ret adc enter stos fdivl inc js mov rcl xchg (bad) mov inc js rcll pop adc les popa add pop inc mov mov sub and jb and ret inc pusha test mov push les mov inc sarb dec or or inc xchg cmp jl mov (bad) enter cmovae push jnp sub int and scas lods cmp sbb aam mov aad push sbb jl int push inc rcrb loope pop xor les add scas cld outsl xchg aad xor mov sbb inc pmaxsw stos mov xchg push data16 sbb mov (bad) insb fisttp cld and sti adc (bad) jno stc add push mov dec js hlt push dec add inc leave fcoms xor inc cwtl adc pop adc addr16 test inc pop call add cmc stos sbb enter push jnp xchg add into mov out xchg dec push insl mov sbb xlat cld adc dec fsub (bad) les inc call mov rol pop iret rol popl mov cwtl fcoml arpl sbb call (bad) mov jo mov gs and mov jl dec and mov fs inc andb jno sub dec fcom pusha or repnz xchg dec or sub cmc test stc mov push scas or mov or mov dec xchg add rorb xor add sbb sub cwtl inc repz and pop jg add cmp call mov xor push mov fsubs add add and or add xchg inc loopne jo xor mov push imul stc dec add mov dec insb mov fistpll adc (bad) jb add xlat add push dec and int cltd loopne mov pusha inc mov mov push popf popa sbb shrb repz jb or xchg mov adc cmp jo and mov mov mov inc gs stc add dec out adc fisttpl xchg sahf in (bad) push add aaa mov push stos dec xchg jno stc loop loopne (bad) sbb rcrl xchg ljmp mov mov sbb push jge cmp xor add out mov add leave adc xchg ljmp add ficompl mov rdpmc repz scas sbb fldenv clc daa sbb jecxz fs pop stc xor add cmp dec scas ror (bad) cmp aam scas pusha ret mov rolb in lds add sub cli fadds jae jmp jg loop add pop outsb add in add sbb ljmp add outsl mov stc ja ret cmp clc push xorb daa sti scas add mov xchg dec add xor lock dec mov (bad) incb sub lea xlat cmp pop mov pop (bad) add lret adcl jg xchg pop enter jecxz xor add sti rclb inc xor pop inc cmc inc dec pop (bad) call into aas cs test jecxz pusha sbb jns mov shlb lods add leave aaa jge call sub adcb cmpsl push js es lea pop mov lret inc mov jb inc add mov add sub pop push add rcl push rol add push push addr16 and sbb rclb sti pmaxsw dec lcall popa leave pop repnz aad cmpsb jmp emms test lret out xchg je popa bound mov aas pop add lret aaa cs cmp aad add ss mov jnp pop test gs and ret push pop mov test mov fldenv sahf add push inc insb bound in xchg sub fwait sbb out rcrb mov add adc hlt mov int3 add out inc in cli pusha cmpps in mov enter fiaddl aas push jbe dec fiadd cmp inc pushf mov les add pop xchg mov push (bad) jns repz dec or mov jl pop cmp mov ss mov push cld rorb pop adc mov scas (bad) jmp test add and sbb mov je sbbl fbstp cvttps2pi flds adc push dec (bad) mov arpl (bad) xor mov pop or and es mov push sbb lock or add inc rolb mov aaa mov rolb jmp mov js sbb (bad) imul aaa sbb jo or mov xor (bad) enter arpl loopne xchg or inc jo or mov insb nop jb mov jb and add mov loope jo faddl lods lods adc imulb shlb enter dec push pop jge push dec xor popa and xchg js dec adc sbb lret jp mov insb mov xor iret mov mov pop sbb (bad) repz mov pop mov aad xor dec adc mov jno sub mov jecxz (bad) mov nop add (bad) lock arpl push test orl add pop sbb push dec dec or enter sub aaa and mov adc xor cltd adc cmp js jo ror negb xchg lcall add std mov (bad) push mov inc imulb mov not les or aas aam je or and iret (bad) dec sbb test inc and scas ljmp push dec adc jo dec cmp test scas jo pop adc or xchg adc add jnp mov jl loopne je test adc dec add mov and push mov pop aad inc iret jge sub add add inc clc mov das mov hlt test (bad) lock dec inc xor sbb push push jge dec pop push or or jo andl sbb pop jmp insl inc pop clc jbe lock dec mov mov xchg fsubp mov ds mov xor pop test aas inc mov sbb dec jge lock push sub and mov add in xchg js je daa sub inc adc add aam or mov sub movsb (bad) push daa push nop push pushf jbe ljmp sbb mov adc ja leave sub or or cs sti into sub lret mov loope cmc or fcmovb or ret ret inc lods imul nop aaa mov xchg xorl mov mov add or rol imul popf cmp sbb mov inc int3 negb xchg gs sbb push enter cmpsl push cmp leave xor mov inc ret lods (bad) mov pmulhw sbbb (bad) mov mov mov add sub lret sbb push and in sbb and stos add or test pop sbb push (bad) inc inc aaa or mov mov mov popf shrl shll cmc in or mov (bad) in inc sbb xor call jp sub mov imul mov pop xor dec shll call inc sub (bad) mov rcrb push sbbl sahf add inc cmpsb pop popf nop jo lock lret mov adc mov call add mov pop ret pushf add and sub cs inc subb rcr push mov sti xchg mov dec push and push mov inc add (bad) imul inc dec popa lea sbb ja pop ret adc mov add leave cmpsb xchg cwtl mov mov or sub xor andl pusha mov testl and das sbb in out divb pop add push and mov and mov sbb sbb mov insb and or mov xlat dec ret xchg dec out pop push loopne mov cmp inc sub push ret mov or (bad) js mov (bad) mov xor xor outsb xor mov inc dec push in inc cmp iret lahf ds cs jge imul arpl adc mov daa addr16 mov jns adc pop cwtl fnop cli adc adc jno inc in leave mov jns or call pop scas xchg mov add (bad) push repz jae dec into inc cmpl mov (bad) cwtl jge push mov jle and ljmp addb or cmpsl push test add into cmp pop pop inc int3 mov stos je xor pop add mov mov cltd data16 ffree mov test imul jno icebp or mov lcall cwtl dec add or repnz xor pop xor mov rorb sub aas in pop add mov aas and test cltd and stc dec add dec pop add insl aaa repnz pop cmp add pop in add pop (bad) xor sub pusha cltd data16 adc inc bound and xchg in pop sub data16 add add push inc add or mov add pop ljmp jecxz inc add xchg sbb (bad) out popa or jle cli dec test add iret inc test pushf xor push jo push pop add stos lea fsts lock push lds lock mov add and dec mov sbb es adc pusha jae xor and lods popl subb xchg fs arpl mov jp lret cmc sub inc fs lcall push movsl adc adc mov es xor iret xor jo lds add fxam add pop or pop and je and jo add rorb add test or push (bad) sbb mov mov adc subb pop jmp pop sub xor jo xchg jae fistp xlat adc int add adc dec pop add add pop jo cmp test in adc cmp xchg push cmp (bad) repnz imull ss icebp xor jae mov dec pop je push sahf adc and add or add push mov xor mov sbb lock lock add scas dec mov sbb outsb fwait icebp xor lds mov add add or dec str imul cltd add adc arpl pop test pop mov hlt mov mov sbb add jae sub movsl add sbb call cmpsb dec mov fcomps je dec cmpb (bad) xor push push pop and or aad mov sbb ss inc sbb out outsl push xchg adc loopne push dec clc push loopne add or inc dec lcall cld sub lock fs (bad) mov gs ficomp clc adc shrb jo mov lahf cmp test les sub xchg add pop cld or dec push ja je mov adc rorl push cwtl inc add shlb in mov inc or push and mov jns mov (bad) jg ja out cs xchg cmpsb fcoms jmp cld add mov lock add jp divb inc sub les fdivs adc xchg or out and lods aaa stos sub mov cltd jo popa cs sub lock jge das adc les sbb jmp das ret dec addb fsts cmp or dec fadds ds or mov jl add (bad) stc mov cltd cmp in sbb add pop mov in push jno jb adc fwait nop cwtl stos fnstenv sub js and xor enter mov add dec (bad) loopne mov mov push cmp movb popa adc rorb xchg inc call addr16 inc ds sub push or mov repz enter mov lret pop test fsubrs xorl adc sbb inc (bad) lret xchg jae and mov fstpt jb ss pusha and mov rcll xlat sti push test pop add movsb out pop loope repnz dec xor es fcomps cltd add push lods loope clc mov clc lret ja mov test in insb mov aas pop (bad) adc and pop sub xchg inc mov movsb cld stc add fisttpll cmpsl loopne ret cwtl sbb xchg rolb dec ret adc test add mov nop xlat jp (bad) sub and xor fimull xchg push push jmp xor or xor lds loop adc and loop pop cmpsl test mov and lret inc iret dec push fadds cmpsl ret add mov rolb push mov add xchg mov hlt inc or dec sbb mov sbb loop add sub xor je jp js mov add dec jbe push add jl inc cmp hlt leave loopne mov inc arpl out dec inc cmp xor lock jmp xor movb xchg add cmp push push cmp insl test jbe add mov out jae clc pop dec jmp (bad) mov jl mov fnsave cli (bad) and mov jmp sbb pop mov add mov add shlb sbbl loope loopne into or stc pushw pop push jmp adc push insb adc add (bad) leave xor nop add jo jg mov mov test add mov mov xchg and mov add sbb cmp add adc icebp dec out mov sub lea mov in or and inc int rcrb add mov pop sbb and andb jmp adc pop mov lcall push mov call lret mov jg aam fsub add test sbb sub shlb addb lods or jo dec je addb push or push inc nop jno mov adcb adc (bad) nop xor shr add shlb adc (bad) pop fwait cmp xchg xchg cmp ja rorb aaa pop add add fs scas jbe sub inc adc mov sub sbb pop add lret jns int adc dec push jmp js loopne mov cmp sbb clc sub add add mov fimul mov sub pop add cld mov lea mov mov js (bad) in pop shrb lock in (bad) divb pop enter in pop push add enter aam or sub lds jl mov pushf inc sub pop pop jp ret shlb push dec js aas fisttp aam pop mov test push (bad) loop pop inc and into dec sarb fwait dec add cmp jg and pop cmp push add gs in jb movsb xchg js or addr16 sub imul sbb shlb mov shll push inc pop cmp pop rorb and and loope pusha add ror fcmovu sbb andl add mov cwtl xchg andb lahf mov dec mov jecxz pop mov lret adc mov fwait or pop pop jmp (bad) jno or mov push hlt inc cmpsb xchg int3 mov fisttp adc jb shrb (bad) xchg in pop adc mov xor push jns les je pop (bad) aaa or mov add fs rcrl stc mov mov pop xor push lea sub push mov nop add jne mov mov ja inc in int add rcrl inc inc out (bad) cs mov fisttpl xchg lret int cwtl in push add mov add jno jg mov sbb pusha loop add rcll push adc cmp xchg push inc clc add pusha sarb shll clc mov xchg jp es cmp inc adc add xor inc fcoms loop fadd cltd add out iret mov xchg fstpl mov (bad) cwtl add test jg lret add inc std popl dec iret or jge and sub xchg pop xchg pop jo pop adc or das dec aad and mov test inc and mov test push (bad) pop nop mov xlat popf out push ffreep add ss or and xor mov add sbb cmc int3 lahf xchg sub jp mov xor outsb cmp inc pop and lret push dec (bad) (bad) add pop or push shrb add push push pop mov or fs or xchg adc int3 rorb test adc (bad) mov xor jb dec push inc mov add dec push xchg mov in movb or xor ja or mov push addl mov cmp stos lock mov xor pop or xor pop out test loopne enter cli sbbl enter push mov lods cmp cmpsb jo xchg sub mov and in rol or es sub in mov push nop loopne adc dec adc mov or data16 cmp lea inc pop (bad) xor jecxz dec movsl hlt stc dec fmuls icebp adc mov sahf popf add mov (bad) loopne in push cmp adc test cltd bswap add stos imul mull ret jne inc and andb rorb mov pop daa pop (bad) insl ds adc and cwtl fdivrs fstps mov and popa sbb jle sub dec (bad) adc ret inc test dec fwait mov cltd in movsb insl loop enter outsb mov loopne push add push fdiv daa mov dec pop push lods jne cld add and cmpsb push sub mov sbbl cmp dec jecxz int3 (bad) je mov rolb add inc arpl test add or loopne xor sub adc in or cmp mov push push ds sahf andb xchg repnz pop dec insl pop prefetchwt1 add and xchg pop clc adc subb xor xor push mov sar jecxz iret jns rolb adc inc mov dec pushf and xchg xchg and and xor and or or in mov in adc clc and xchg inc subb xor jl adc je xor mov test lods adc pop (bad) sub jo add add sub mov pop imul sbb mov cmpsl cmp fcoms pop pop lahf adc jnp bound rclb stc sbb shll adcb xor mov cmp mov add inc gs in cwtl xor pop mov lret test lcall xchg inc cltd test aam mov mov divl xchg fimull inc sbb xor or movsb dec aam insl adc fwait out pop je js mov jp pop pop jecxz fcmovnbe dec or ret shll adc rolb xchg push dec jmp jb shrl adc sahf sarb jns adc orb (bad) bound push insb insl cltd inc addl pop into push leave clc xchg or cltd orb xor je hlt not (bad) mov out dec add mov or adc mov or mov pushf pop fwait lret mov in or lret call mov lods rcl xorl (bad) push xlat xor sub cli lds mov or rep inc cmp sub enter and scas outsb xlat mov sbb sbb fsubrp cmp in xor fwait inc repz addl jl movq add or adc fstpl mov pusha push lcall not fdivrs sbb xor (bad) loope ficomp cmp subb and dec pop outsb test dec dec push (bad) mov loop js test in out inc sub loope inc int3 add or sbb mov mov idivl xor and or ficompl lock incw repnz out mov dec ljmp jo int3 jl jp add lea xor dec es dec add mov ja cs rcrl sub enter stos or clc sbb call (bad) repnz xlat jb sub pop mov imul out js add inc cmp mov rolb jo inc rclb mov lods jnp xchg inc jmp cmp or sbb inc xor aad adc mov sbbb add adc mov add inc mov add lock mov sub sbb pop pop xchg test sub loopne inc pusha inc add push pop aam adc std orl shrb pop add sbb or nop adc cmp test mov in push jp iret jecxz lock mov lret or (bad) loopne xor loop aam jnp cmp mov (bad) fnop sbb inc add dec leave xor inc and jns,pn cwtl test mov sbb sub xor repnz mov add fisub or imul movsl js repnz dec es into pushf (bad) js fldt mov lock xchg enter sti add and xchg mov in pushf sbb mov sub xor and mov je sete jmp mov and pop xor test dec loope cmpl nop test gs lock jno add dec dec sbb dec xor movsl jge jmp lret mov stos xchg and sbb or lea (bad) push xor pop (bad) into mov ret iret push mov test jo in push adc movsb je je icebp (bad) loop adc jo sub sbb xchg sub sub adc repz pop icebp stc xchg sbb xchg pushf movsl dec mov push pop loop lock fisubl mov test add pusha pop outsl mov mov and add push mov or add cwtl jp (bad) test sub add xchg aaa mov xor imul push dec xor int mov mov mov imul sbb aad mov ret sub inc dec aam or push roll jo or xor push xchg xor xor push test adc out int3 sbb cli lods dec ss loopne mov xchg add in jae fistpll sbb lret sbb add iret cmc push out ficompl stc jae add in mov inc insl cltd lods sbbb sbb add xchg sub rol xor les clc repz cmp int3 test adc cmp fisttp test and rorb push ficompl jle push jmp push sub addb sbb xor add adc lcall idivb xor or xlat dec leave jno pusha inc mov imul dec add (bad) fildl and push sub cwtl insb movsb movsb mov fidivl adc clc sbb add rorb inc push lret mov push rol pop shrl adc cld add mov cmp sub movsb int3 insb mov jmp aam xor add fdivrl mov mov or cmpsb jnp bound addb sbb js js adc pop nop lods add ljmp push test mov mov xor add push cmpsl lock hlt repz and mov popf icebp sarb mov xchg in xchg xor add js dec push cwtl add cltd push push dec jns add cmpsb or inc insl in sub les jmp popa mov sub sub dec scas in test rclb lds int3 push xor dec loopne mov (bad) cs in mov stos lcall jae sub cmp and out mov fmull add ret movsb arpl stos or andb in add shlb test mov and mov add inc js imul fwait leave xchg sub sbb rclb sbb xor sub mov xorl jnp add pop pop nop push xchg dec jo int3 dec pop or lret ljmp or insb push test cwtl xchg aam sub (bad) in dec jo mov enterw ret ror push cwtl nop fs add pop test (bad) cwtl add aas pusha push dec repz int dec xchg push xchg clc pop sbbb sub add negl fldt popf pop sbb (bad) mov imul mov jg cld jae adc pusha jo add insb fwait ds sbb add sub fs push sub push outsl mov fdivs fildll fmul stc cmpsb or lcall sbb sar mov push sarl daa fbstp stos outsb js out sub push gs or scas fwait enter push inc (bad) es pushf inc inc inc mov psubw and mov cmp inc (bad) das aad daa push out push or mov cmp add mov imul xor mov out cmp inc mov outsb and insb (bad) or icebp repnz rolb cmp nop orl lret jp sarb lea mov sbb pusha dec subb subb rcrb add in mov add cmp stos jo popf or xor test insb xchg mov add mov mov fmuls adc or adc dec test jl bound xchg mov loop sub sub pusha imul addb cmp lods adc sar (bad) (bad) cmp mov iret xchg hlt movsl sub imul out push cli add into cmp lods popf fs (bad) mov in sub movsb dec mov in push or push add dec add jbe pusha dec pusha jecxz cmp jns dec fsubrl arpl add fst test cmp jbe incl ret push push mov pop and movsl push stc ret push jmp pusha lds pop add orl out sahf push inc mov push mov outsb ljmp shll adc xchg repz push adc add mov fsubrs sub or or int pusha add pop aaa sbb sub push push mov xchg data16 pop arpl cltd js repz xchg jecxz js add popf call sbb roll mov and add add mov popf dec (bad) je int daa sub push enter ljmp xchg pop inc push push xor pushf adc mov mov or add pop out lret mov inc xorl xor pop and mov jmp enter loopne fs int inc add popa cld cmpsl mov cld (bad) lock add sti or jp dec les push hlt mov cmp loopne movsb cmp dec push loope jp sub cmp xor loope cld inc (bad) xor in rcrb cli (bad) sbb enter (bad) cmp add daa (bad) in xchg inc xchg std inc mov xchg mov int iret lret jne xchg nop aad jl enter dec fimull add cld add cmpsl cmp fidivl or das rolb (bad) jb dec sbb pop inc sub sbb shlb xchg dec int3 inc fdivl add je cld mov jo jb and pop sub jle ja test sahf or sub pslld mov aas shrb rclb in mov push sti clc mov or or dec mov add mov cs in jno mov add cld ljmp cs xor and xor pusha js in or enter or sub adc mov jnp mov jne jns pop jmp mov jg pop mov movsb inc lret int3 xchg xor or mov adc xchg mov add jae sbb mov stc pushf mov pop notb inc int3 repz pop clc add hlt push mov pop inc inc popl jg lods sarl pop lret mov adcb cmp loop in mov mov mov jl pusha pop scas add dec fmul int3 into add negl lods or push imul sub lods xor pop mov lods test push (bad) shlb pushf js xor add scas cmp shll repnz clc mov pusha cwtl mov sbb dec jb mov sbb scas inc sub mov movsb push inc mov mov or or lods dec sub add mov call sbb (bad) sub sti daa pop data16 or sbbb dec insb mov push dec fldenv outsb std mov stos or dec pop xor xlat lock mov xchg push cltd mov lea mov and outsb pop test push add xchg pop insb inc xchg jnp fxch inc cld imul add pusha dec mov push notb jo pop push mov cwtl dec adc lcall movsb test add mov add into push and adc jecxz idivb add out negl sub cmc lret add out (bad) xor add add or outsb inc dec push pop sub push testb or (bad) push shrb or je ret mov insl mov fild arpl pop mov xchg pop sub in inc repz rol stos cltd xchg pushf push push jl sbb xlat repnz js (bad) es test dec or fs ret push test (bad) nop and insb lock stc mov cmpsb orb mov pop in add xchg movsb sbb xor fprem aaa inc loopne sbbl adc sbb xchg xchg shrb adc in sbb push fildll loopne add dec add xchg aas mov mov sbb inc in sub sub subb inc in and dec or and rclb xchg js js jl xchg sbb sub jmp xor push pop mov mov jp push mov push xchg sbb lods gs add push dec and loop sub loope add int3 mov jge cmp scas push and out notl xchg lock addr16 out pop ds push dec pop fcomps mov divl movsb add ret or and inc fcmovnb push mov outsl pop add pop xor bound mov stos add and lods jno and mov (bad) out or add sti or xchg fiaddl fldenv and or xor repz (bad) ds nop mov test or pop push mov fimul cmp mov mov or xor mov (bad) aaa pusha sbb (bad) ja aam lret imul xor add cmp mov mov push add (bad) into nop lds addb adc insl add or push popa mov insb fadds iret cmp cmp pop adc push fwait sbb cltd mov int3 sbbb mov inc jecxz insl mov imul in sub getsec dec dec sub scas jmp lock cmpsl movsb pop lea testb push subb mov ss inc jg mov jno sbb subb and push push das cmpl inc mov sub inc ret (bad) clc gs out popa pusha or sub sarb pop test loopne xchg inc mov and xchg mov sbb mov (bad) adc sub push mov and icebp stc and lods mov es mov (bad) popa jo mov enter cltd push xor xlat push xor cltd jb or test fdivrs repz mov mov cmp call std jbe je sub inc test dec sbb (bad) xor mov std pop mov xor (bad) loop call dec out sub popf aas or mov push mov inc xlat mov xor sbb lds aaa inc adc loopne lods add in pop pop inc mov lods enter add sti pop sbb cmp mov (bad) dec sbbb mov jle jae scas sub add xchg rcl cmp pop mov jb jecxz cwtl dec jmp add xchg call (bad) sub les xchg iret cmp mov push in cwtl sbb fs icebp jl sbb xlat test push arpl lods clc fmuls dec or (bad) fdivs and sahf scas xor loopne pop ret hlt inc sbb mov mov pop mov push xor mov fisttpl inc mov add cwtl movsb int3 pusha mov inc xchg lds push mov leave pop insb xor lcall int3 add push test addr16 pop xchg add lret je push push nop or lock orb repz inc pushf inc add pop or aaa push in cmp fdivrs sbb int clc push (bad) or mov shlb cli das mov adc test push push cmp sbbl sbb jl adcb adc dec xor xor adc xchg mov cltd test je es mov (bad) push push or in and call es inc pop fstpl (bad) mov mov jne pushf ljmp pop mov push repnz enter (bad) (bad) cltd jo aam icebp hlt stos push testl js outsb pop fild out cwtl and test sub aam in cmpsb stc sub cwtl pop (bad) and sub pop xchg ds mov pop add negb cmp adc imul and sbb es out mov jl rorl add dec stc pop stos add or lcall fildll das sbb inc cmpb bound push test int3 inc adc mov stos fisubr cmp jmp adc out pop jg and lret push icebp mov lods ljmp hlt xchg add sub sub (bad) fisubr ficoml add push test popa sub jno imul mov movsl add dec jmp fnstenv add or out push pop pop add outsl das jge or js mov mov xor in jg jmp (bad) adc int ja push je test mov mov enter sub inc and fist mov mov pop mov ds xor out pop clc adc pop add call cmp or add mov jb mov inc pop lds sbb daa insb add mov xor xchg or test stc add mov scas rcrl cmp add sbb add and test je adc pop fdivr mov hlt adc int insb add movl leave sub sbb std aas xor pop rclb idivb adc sbb imul je shrb clc xchg xor mov mov or mov adc mov mov pusha sbb cmp dec sbb jno jne je xor cmp icebp mov out sbbl sbb add clc shrl hlt xchg (bad) daa sti in les icebp fadds add jnp or pusha push popa adc jbe xchg cs add popa jae js lcall (bad) xor movsb pop popf stc insl push rclb cld inc sub mov test jb push mov push add ds jg fistpll cmp jge ds out pop push bnd sbb xchg (bad) pop jle push push and add (bad) jl add or adc mov cmp inc jg adc rorb mov adc call add cmp (bad) push inc stc popf dec dec pop push ljmp push lock arpl or jecxz popa xor xchg adc xor jno jg std push addr16 in sub xchg adc xchg cmp pop daa arpl add stc cwtl stos add fstpt jae call cmp sub dec mov jmp xchg xchg fstpt push aad dec idiv int cmp int3 sbb ljmp lods jle lea mov btr mov inc cmp adc dec or add jno jg add je sub cmp adc sbb xor clc lock icebp repnz roll js cmp add jl add sub xchg fnstsw xor and xor and add pop inc (bad) xchg dec rorb or dec inc (bad) call or pop es clc sbb bsf pop sub rorl int sub xor mov pop movb or mov movsb add shr jns adc mov xor sub repz mov imul mov into or (bad) test test jg adc arpl cwtl xchg sbb cmp sub mov lods lahf mov sub outsl adc fs add xor ret icebp dec lock lods add (bad) loop add sub fcoml cmp and mov push xchg add sub repz mov and push pop sbb mov jo sub in push sub andb nop inc mov xchg sbb mov fldenv inc xchg push or jmp adcl mov or rcr jne mov push mov add mov xorl (bad) and pop sbb or mov pop push add mov adc push jns cmp add imul or xor push les push out rolb mov pushl sbb adc add jle out out leave jl sub pop inc mov inc xor push jb subl outsl arpl sbb es sub pop jno add test push or nop movsb cmp or adc inc pop xchg std cmpsl mov cltd hlt add add insl ficom ret emms sbb sbb pop xchg add mov jg sbb push dec add jle push sub pop mov mov xorb pusha or dec stc and and sbb mov out jge repz movsl cmc out mov lret sahf in and call add or adc and mov sbb dec dec cmp cmp push or add adc test sbb mov push mov test cwtl cmc mov sub and or lock pusha pop xchg xchg nop jne or cmp mov pop icebp jnp test xor lret mov add out cwtl and test mov sub adcb fs and stos pop add or cmpb aaa rcrl push in pop dec out jp out fidivl aad (bad) and (bad) hlt jl and div and add inc add outsl aas push lcall mov repz outsb adc or int leave sbb outsl or nop inc dec (bad) fsubrs inc pusha nop jns jo addb inc pop sbb add cltd pop mov adc mov fmuls and cmc sahf or cld inc xchg xorb iret push jge mov test out add cmc inc jo jge sub add xor adc add add nop xchg push push (bad) loop jnp pop sub or mov mov mov jo mov lock push mov inc mov cmp jmp and cld cmp push cmpsb push nop lods xchg lret shrl xor js pop cmp sub and lea xchg enter test sbb pop iret or xchg lock and sbb nop outsl lcall xor dec call pop out xchg mov cs test sbb cmp jno notb (bad) mov sar mov movsl mov cmp movsb jb and inc jmp push cwtl add pop lret rolb out pop xor jl test test je js lahf stc pop cld notb sbb js lret lock dec xchg adc dec mov pop push in xor sti cmpsb mov mov imul xchg enter dec mov cwtl dec movl clc or add stos or jns mov add add enter jnp out cltd fsubrs dec sub or cli jo push mov pop xchg in inc sarb jbe gs push inc and notl or rolb and or push out cmp enter imul adc adc pushf xchg xchg bound dec or pop mov fsin test inc pusha or add shrb add push dec add sbb (bad) lock je in jg pop push es enter sub xchg xor cmp bound scas xor jl fmuls fwait sub inc jl lahf imul jp sbb fstps stc sti cmp bound test lcall inc fcoms cltd shrb jae or test or mov and push sub (bad) lods loope stc mov pop movb inc sbb cmp and and and sub fstpt cmp lods mov loopne or add (bad) fucomip loopne push mov cltd js cmp cwtl and js inc sub or pop cmpsb out jno aam fdivr loopne or mov paddsw test dec jecxz xchg or and out adc rcrl and mov cltd sarb in sub add cmpsl push pusha movsl dec leave push je bound imul dec mov cmpsb push cmp into cmp (bad) icebp mov sysret ja pop jle mov lds daa andl jno dec (bad) pusha test jns sub sti cmc mov in sarb push mov lods sub icebp add test je mov dec add or jp movsb add dec push aaa and call addr16 xchg xchg cs sub or cmp cmp and pop repnz fs adc xchg xor cs or xor jno add or xchg cmpl jp icebp cmp mov push fbld and xchg in rsqrtps inc cmpb add inc mov popf pop inc lds repz cmp and add mov and hlt mov arpl or dec int3 rol xor mov add leave mov and jmp push out pop cmpb xchg and push or sbb cmp or add inc cmp fs sub lock or xchg int3 xchg or or mov lods push in add mov les pushf pop add add out fs jecxz,pt jae bound mov cmp aas flds mov ret jne inc (bad) xor sub push std or dec mov cmc mov and mov add sbb mov and add xchg lea insl das pop lods aam jb and fs movsl mov ret sub sub mov jb fsubs inc enter and and leave and pop sbb (bad) call or stos xor sub and sbbb adc xchg mov xor or and loopne mov ss cltd js mov adc push mov inc sub add div or mov or stos mov sbb adc ret xor int fmuls dec and fadds pushf jns fisttpl call lcall mov les mov int3 rorb les jae adc gs jno push mov mov add stc pslld pop adc movsb mov jmp sbb adc leave mov inc out sbb (bad) sub pushf add dec sub cmp xchg movsb adc mov adc fsubrl les rol mov into (bad) or sbb loopne or jl adc imul (bad) cmp insb inc mov mov sub enter cli (bad) cmp or xor pop mov push pusha adc ffreep lods xor orl push adc iret adc les mov lods and cwtl nop xor ljmp dec mov add or dec nop adc movsl cwtl jmp cmp xchg dec mov xor test aas out adc sysenter lods cltd add jl xchg jecxz ficoml sbb xchg xchg std cwtl cmp add or pop add test roll int out xchg cmp repnz pop call add notl dec adc outsl and aas movsb fildll and pop mov mov fs mov lods pop fs fcoms shr hlt xchg push sub in pushf out sub (bad) jp add cmpb add pop mov mov sbb or popa or out js pop fucomip cmp cmp sbb inc inc lock dec adc cvttps2pi fnsave nop enter sbbl daa cmp add cmc repnz push aam xchg jo out dec rcl aam pop adc adc mov or mov push clc pop mov movsb xchg mov xor mul pop pop push cli add (bad) imul mov les mov cltd mov andl ret fs pusha xor pop adc scas lea nop dec and and adc jl fiaddl int3 insb test inc ds mov inc xor das (bad) or add pop sub xchg jae dec xchg cmp mov and arpl repnz and nop scas js dec insb add xor xchg cmp mov push dec mov xchg jp fs (bad) cmpsb shlb adcb dec ss pop add test mov je lock cmp xor pop shlb sbb add mov rcrb push loope loope inc or gs lret imul mov in push xor ja jg dec (bad) jne pop push iret sub mov out mov and add jmp inc xor loopne ljmp fcoms inc stos lcall or add sbb jp pop sub mov rcrl mov jne jo xor aad xor stos jmp loopne mov add pop adc aaa and pop call mov sub mov scas jne pop lcall lock push xchg rcrb inc sbb add dec pop adc rcll mov andl out mov rclb sub cmpl mov inc or dec cmpsb cmpsb pusha setno push pushf sarl jnp fnstsw sbb sub out cmp scas cld sub and pop dec xchg rorb sub xor mov jl pop and sbb pop cmp jl popa mov jl pop out jmp xchg clc rcrb and popa cli xchg push add mov cs cltd add arpl mov mov nop cli rolb lret pop enter hlt sub (bad) add jne icebp pop rorb sarl ret addr16 sbb lahf adc inc insl loopne sti sbb jp push cld and jmp jmp inc and jp adc or push push iret leave add arpl aas pop lcall xor int3 mov dec into xor jnp pushf add rclb mov push sbb or push mov insb (bad) ja xlat dec add adcl jg mov or adc xchg sbb or xor jbe shrb push push fsts in bound mov xchg cltd inc cmp inc adc sarb mov dec pusha aad add sbb or repz or hlt or cmp cwtl rolb xor add adc (bad) jmp xor test adcb shl add add je mov loopne and sub pop lock int3 popa out into cmp push inc xor and stos add dec push pop fs sub cmp push and add pop mov mov sbb flds jmp ja jl pop mov movsb mov sarl sub xchg sbb jmp xchg mov sbb add xchg add rolb cmp xchg push pop dec pop cli jns lods fdivrl dec mov aam rorb jno adc cmp addr16 push nop jg and int push lock xchg cli pop lret jno sub cmc inc xor sbb inc adc adc add push les inc aam shlb or (bad) xchg aaa dec in je call jae jnp lcall xor sti repz int3 add mov cwtl bound shlb dec loopne xor je,pt arpl roll ljmp inc mov jns ss push sti stc jmp mov push sub cmpb fnstenv lcall mov sub dec daa add dec clc in testl or dec fs ss adc es inc lods add mov fadds pushf pop rcll sub and mov fsubs inc test xlat add pop mov sbb stc add es mov loop pop test fstl jne xorb mov or lds or dec icebp pop and inc inc cmc stos shlb add xchg and adc nop or adc add push int arpl lret push ss pusha aam dec out mov stos add scas sub xchg jl ret or fwait stos push mov cmpsb dec hlt in adc (bad) leave test outsb popa cmp xor test (bad) xchg shll adc dec jmp pop (bad) fldenv rolb sub cli pusha jp mov add add lcall cmpl and sbb push popa les les adc ret call inc js xchg push inc cli loopne mov push imul and sbb cmp ds mov cs dec adc pop imul leave sub xchg mov pop inc cmp mov pop out das add sbb (bad) movsb or gs mov pop hlt sbb adc xchg mov addr16 xchg test int pop leave insb xor xor sub pop (bad) push lahf inc dec adc mov pop hlt pop movsb (bad) jae fsubs jl mov pop or test jp xorl push inc icebp xlat and loop push (bad) hlt fldl2e xchg sbb bound subb in test out ffreep inc fwait lret je in ret add imul jae jl ret fcoml std sbb dec dec sbb xor pop and in rcr cld lock ret adc leave cmpsb ret rorl daa js jbe call stos rol (bad) mov idivb repz cmp xor jno xchg roll dec mov adc sbb (bad) and fs lcall scas cli lea xchg xchg leave jnp and add stc cmpsb scas popa mov fmull data16 mov cmp cmp test and (bad) bound test aam loope xchg add (bad) jae out add mov inc jl repnz imul dec loope ret imul orl xchg pop mov push xchg or imul sbb add repz cmpsb inc mov cld sbb pop jo ret sbb mov push scas clc adc pop push xchg inc inc popl icebp adc sub pop lcall pop mov ret popf mov adc ljmp add xchg jbe ds add inc push in inc mov sub sarl push inc mov jae mov shrb pusha (bad) hlt and leave orb mov aam lods (bad) rcrl loopne xchg sbb (bad) loopne pop aaa add ja test add test inc test lods jp sub dec sbb rcl xor and and in lret or or add inc push push test or shr sub and inc icebp mov cmp nop fcompl roll xchg imul mov pop and (bad) insb mov inc cld or xchg imul insb popa push nop add add (bad) xchg lock or imul add cwtl in and and pop mov test pop test sets cmp xchg (bad) (bad) insb bound sbb push add sbbl cmpsb jg xchg add rorb adc out loop test mov loopne insb dec inc rcrl pop xchg adc mov dec inc add outsb sub popa pop cmpsl xor movsb sub (bad) negb dec (bad) rorb mov incb xchg cmp jo add jno lods xchg in inc or xchg and jg (bad) xor je mov jo test outsl push or cmp out pop inc push out mov fistl ja add jge push lret adc sub addr16 jle add dec pop mov test repnz or cmc sbb or and leave push push scas dec inc mov shr adc pop lods push push or xchg add jge andb sarb mov arpl jae add jmp push int3 cmp mov xor in push mov leave arpl xchg fs es test xlat cmp or psubsw addb inc xchg xchg pop imul adc or lods (bad) jno mov xor iret lds fisubrl shl dec rcll and iret xchg clc cmc adc pop or lahf cmp incb add popa ret add sbb cmpsb jno (bad) dec mov idivb sbb test lcall sahf add xor and jbe mov enter cmp pop mov std mov xor imul inc push or incb fiadd lods test test repnz (bad) and cwtl or push or daa cmp dec and mov dec xor add xchg mov add mov push mov jp incb or xchg pop mov test or or es cmp pinsrw xorl andl add fstps or mov in or hlt in rcll push dec addr16 push sbb mov ret jmp rorb mov (bad) or stos mov sbbb add mov sbb cmp pusha test inc jae test push ret or push cmp cmp push push adc push imul roll cwtl xchg negb test imul pop and dec adc mov aam and add outsb dec dec xor mov pop imul mov adc or push add leave jae push sbb pusha and push in mov popf sub xchg push cmp je xchg jmp sub sub xchg test aam cld imul push sub push adc stos push mov mov and jl out mov loopne loope pop sarb and add jl cmovo out or nop jecxz add lea mov or lcall lods test mov cmp jg mov add sub jo pop mov or xchg push mov jle and push cmp pusha es fmull inc mov or cmpsl dec imul fbld out xor or jg hlt call (bad) sub add outsl jae shll in cmp aad inc mov movsb int3 shl or push outsl mov dec lea clc xchg roll js loop fistp enter dec push imul dec xchg cld add sahf dec mov arpl orb sub fdivs rolb cwtl push movsb (bad) fidivl or popa test or push add fs lods push adc xor inc and xchg add adc mov pop daa icebp add leave add pop xchg mov ror loopne add push dec jbe and call paddsb dec nop add into cmp or add mov or shr enter andl or inc add adc addb or insb pop inc sbbl mov mov mov pop dec or (bad) dec push and mov fs fs ret mov je or scas cmpsb dec add hlt insb fwait or mov movsb adc cmp inc adc in data16 rcrl (bad) dec (bad) mov xor scas lcall jo mov xchg or or cmp mov es pushf jo adcl adc cmpsb or jg nop add scas mov jno enter outsl loopne cwtl mov sbbb dec outsw xor es xor fdivs pusha ljmp adc in sbb inc sbb push mov or stos pop mov hlt cmp cmpsb insb mov test add cld loopne rclb or outsb in test pop push pop or or adc mov fadds adc stos xchg or dec mov push aam mov std pop ret pop mov pushf inc pop mov sbb orl sub sub sbb sub lret fs dec bound dec inc mov mov fdivrs inc test cmc push jb inc in sbb mov mov or sbb pop add or pop push nop inc push pop jb shll mov adcb enter xchg adc push add jge lods popa loop add dec pop subb pop insb adc add (bad) lcall or lods mov outsl mov push (bad) mov loopne pop mov inc cmp fdivs clc std subps inc pop add cmp into fcmove xchg xor in sub clc sbb jge xchg push stc xchg cwtl push je cwtl add xchg push in lret sbb fsubrp daa repnz mov pop (bad) dec mov cmpb xor mov jne xchg or push gs jae add movsb test jbe jge push add (bad) cltd pop mov jae icebp xchg loop loope into xor mov or orl test cld les adc fisub inc clc imul jmp icebp mov in je emms lret daa std sbb stc icebp fucom das lret iret enter (bad) icebp mov pusha enter rcr or push adc add dec push lret test add push or cwtl bound dec adc nop adc orb xchg stc mov adc xchg inc xchg rorl rcll jnp sbb or rorl leave mov pushf or aam jo inc and and sub sbb xchg stc or pop sbb sbb into nop adc add cltd inc pushf xor lret or cmp adc sub xchg mov and mov jmp stos dec addl pop sub mov lds ss push jmp lods mov sbb adc mov icebp jno and dec gs orb rcrb shrb dec repnz add les clts pusha mov inc in fcoml mov sbb ljmp xor mov popa mov mov lcall and test loop es mov nop mov xchg fmul mov xor andl add daa jl movl inc test push cli push xchg mov sub pop rorb fndisi(8087 rol mov idivb add inc push lods iret cmp push scas rclb nop aas add cs and pop je push adc or test xor adc push adc xchg pop inc or mov dec mov outsb rorl call test or lahf ljmp and pop xchg outsb pusha mov push xchg sbb loop out xchg add (bad) in add dec inc in mov or rcrl aaa test mov xor int mov inc fucomip sbb dec nop clc inc cwtl jb push aam cwtl xor adc push jle add test fwait dec bound incb mov mov orb push add mov mov popa andl push add nop xchg outsl adc pop xchg and and jmp mov fisttpll test fs loopne xchg add rclb rorb mov lcall in xchg adc into ds mov subb cmp sbb fcomps and pusha jmp outsl je jne push dec cld loopne or dec cwtl sub xor jo mov mov je nop iret and sub add (bad) test fs (bad) clc orb test inc addl call cwtl jmp sbb dec lcall test adc out roll dec fwait pushf mov hlt xchg cwtl enter sub outsl pushf add and bound (bad) repz lods add out (bad) push mov sbbb loopne push nop sub test add imul sahf add lds sbb insb dec xor xor or (bad) mov mov fildl loopne mov data16 add mov xor and add or xchg add xchg scas jecxz mov cmpl xor das or push (bad) pusha in dec xchg arpl stos incb mov cltd ret scas iret fwait rolb sbb pop loope test dec add lret inc jl pop and mov xchg sbb cmp xor push mov adc and push (bad) jl data16 pop or mov aam dec pop or pop sbbb rcrl pop dec pop rcll and lahf xchg outsb jle jmp (bad) adc pop inc add xchg xchg (bad) cmp lahf addb frstor lcall or (bad) js mov mov or sbb je aad pop inc mov imul sbb data16 dec mov test and jecxz mov xchg push mov xchg mov jg adc add xor inc mov and cwtl hlt add jb int3 rorl or pop push push sbb mov push scas add pushf mov repnz sbb sahf or push sub fnop cmp shlb add push je inc (bad) xchg sub in fcom jno add out pop test test jg (bad) loopne pop add xor popf mov mov mov dec int3 loopne adc nop je xor push and iret cmp xchg scas movsb jl xchg and mov cwtl aas add xchg pop push mov stos in clc rcll das (bad) adc mov hlt cmp nop add dec call xchg add clc jb mov in dec and fs mov inc pushf (bad) aad sbb or ficom call iret sbb add xchg add ss sbb mov add cwtl mov push inc cmpsl (bad) mov xor sbbb add pushf pop dec lret xor jno out add movsl (bad) push dec stc dec std cltd je mov inc adc arpl std dec jmp into xor insb inc sub test cmp pop mov enter push lcallw sub add inc mov xor ficom ss les (bad) inc or or add nop push or fidivr pop cld xchg add stos (bad) mov and les aam add dec aad xchg movsb call or xchg lods fnstenv add popa push mov flds loopne cs pusha inc cmp sub add shr or les add inc aam es jmp sbb enter lds xor xor fnsave cld fs mov notb or add loopne lock (bad) lods js or sbb loopne (bad) loope xor add add jge movsl andb xchg icebp xchg (bad) adc or pop adc loope (bad) das push xchg and pusha dec add adcb fadds mov jo icebp andb rorl dec mov pop fwait cwtl dec add repnz dec mov movsb add cmpsl sbb push ret jmp sbb clc mov jne inc dec (bad) jbe add movsb push nop mov xchg mov lcall nop loop dec inc pushf push xchg hlt movsl jno mov (bad) and je mov ret xchg inc dec mov add cli fbld rcr xor or loop mov push les mov inc dec push aad add call lods daa cmc adc mov ds nop mov add mov jle test nop add arpl adc loop xlat mov push or ja fnsave or push mov cmp add lahf outsl call popf add outsb stos mov mov shlb fild test cmp xor sub and dec dec out cmpsb subb jp add jnp,pn push xchg je daa add clc pop xchg cmp addr16 notb outsb repnz dec jge xlat lods push mov (bad) rorb mov dec jge cld (bad) adc jmp pop sub rcrb add aaa mov or add daa pusha aas rcr lret mov and insl leave push and shrl lea jo rolb daa leave xor push xor enter arpl jg loopne out pushf idivl mov push lods cwtl push pusha sbb mov dec jmp pusha int add or insb shll pusha pushl jp cmp shlb std sub fldt cwtl pusha ja add push cmp sbb jne lods sub mov cmp push mov mov js xchg mov push dec mov mov cmpsb subl and loopne mov sub test scas or add sub loopne adc sahf cmpsb xor jne nop call and xchg int3 cmpsl sbb loopne fild mov mov sbb ds mov loopne mov test sti std sub lds pop pop inc mov or mov test jns push mov xchg xor test sarl jl mov inc call mov dec adc subl adc in lock adc jecxz aad leave and sbbl icebp out adcl xchg pop push int3 jns pusha ja xchg decb loop pop fidiv mov sub lret leave sub roll push xor dec das jge fisubr inc xchg js mov inc popa xchg icebp mov test or and aam jb pusha (bad) repz popa in push rorl ret nop pushf cwtl jmp sub cwtl mov pop outsb and call mov add add orl push push movsb cmpsb mov pop sub inc nop cwtl and add lret (bad) pop outsb xor (bad) cli mov add nop mov dec cmp inc xchg pusha push mov jl jl push cltd mov sub fisubrl inc cwtl inc adc outsb cmp sarl mov push mov (bad) xor fdivl dec add rcrb ret inc insb mov mov cmc add pop xchg mov lcall mov adc cld mov add popa and movsl mov aas jle or in pop sbb pop adc sub pusha push xchg pop clc xor out sbb pop dec push jno cld jns or leave mov data16 jg imul pop xor sub add inc mov sbb cmp jo sbb lock lahf xlat ljmp imul pusha ret les push pop xor test pop fdivrl push or xor fadd movsb leave add dec lock cmp stc pop int3 or sbb cwtl xchg push leave and (bad) (bad) xor xchg or sahf mov push mov and ret adc mov add out icebp hlt or fcompl in into divl in cli (bad) mov add fistl aas shlb jp add imul sar cmp or (bad) mov aam add (bad) (bad) jl pop inc jnp pop pushf push and mov xor mov push pop (bad) enter inc or or xchg jmp jo add stc mov xchg pop std and (bad) cwtl inc inc add and mov mov add (bad) pusha pushf inc addb imul or subb mov sahf shrb adc mov rorb cmp xchg mov xadd adc pop enter fbstp push sub lods dec dec js mov jg mov pop enter shlb cmp fdivl and arpl adc push lock lods cmp or out push in push xchg rclb jae mov data16 xchg xchg loop mov popf pop sbb and mov lret (bad) mov dec pushf nop enter dec lds mov pusha jne lret add and mov loope lret js rorb dec dec cmp add cmp inc lcall jg push orb xchg popa mov jle inc inc and mov lods mov lods loop push je add mov aas arpl cli dec push jne jno jge jmp stc push ret and mov rclb inc dec mov push shr repnz mov ffree dec add xchg loope orl sub sub inc jbe les je inc push inc push sbb sub add loope adc cli or mov sahf call cs or int3 xor push es repnz mov push in and dec sbbl clc inc lret mov faddl pop out add mov cmp or jbe movsb fsubl loopne ja insb orb orl push lock int das sarl clc jp test fsubrs je adc xchg pop and shrb sbb bound and xor scas inc and adc pop push mov sub lods mov sbbb es ret bound mov and dec xchg adc inc incb test insb roll dec adc stos sub cltd mov or (bad) in pop loopne cwtl pop push jg add aas xor pop inc and popf and (bad) add out xchg rolb fs cmpsb mov pusha aas cmp leave xchg sub out or adc xor or les pop mov jo aad dec adc push dec lahf (bad) dec xor pop cld movsl ret ja inc jecxz mov mov ljmp inc or mov adc sbb mov inc icebp mov loopne add movsb mov or jne test clc mov mov xor or adc cmp std ror popf sbb jns lcall movsl (bad) addr16 cmp ret bound add dec dec imul add jle mov aaa je sti sub add (bad) cmp pop mov aam iret cmpsb jecxz scas push cmp push pop or clc xchg sub xor push sbb inc sub lock popa mov and pop fsub rcrb leave jmp (bad) lods jp rorl cli mov inc and dec out mov sahf add xchg jmp cmc ficoml roll inc or push scas test gs xchg sbb mov adc push jne sbb dec xor lds stc insl or mov cmp sbb mov rolb stos and lahf test and mov cmpsl pop divl adcl pop xchg pop adc push stos and aas lods in mov jns jo inc cs push mov cmp sbb lahf fmull jge jne dec add out lds mov orl xchg xchg testb push xor adc int insb cs loopne mov test rolb inc dec fldcw inc or push dec or sub and cmp jmp shrl insb sbb icebp mov push inc add sub add rcrl or xor das mov pop push icebp lea sbb gs pop inc mov repz jp xchg int3 dec stc add movsl pop inc xchg or subl into iret pusha jge sbb and dec pop clc incl jg sbb push xor dec scas xorb mov rcrb lret jns ret and sub xor mov out ret and add loop inc bound scas adcl pop (bad) pop fdivs xchg xor sbb stos mov cmp out xchg add dec orb sbb pop insb mov cmpsb mov xor add sbb out add sbb sub sbb xor out or xor push lahf mov dec or push loop stos js ds scas or popf jae and xchg add call pop xchg bound xchg mov sub xchg test test jmp xor or das adc or insl pushf and push je mov add cld fstp adc add or (bad) and jo and pop inc outsb cltd stos ret mov jmp (bad) sub pop xchg aam mov push xor dec xchg or cmp (bad) mov mov cmp inc cmp mov pop inc cs lea inc inc icebp aad sub sub add cs mov fwait add add adc insb push outsb jl (bad) jb adc cmp add or xchg lcall aaa cltd xchg cmp or mov leave adc add pop or pop push arpl cld pop sbb push xchg xchg jecxz ss sbb mov repz or cwtl test cld adc adc jae shl xchg sub cmpsb mov hlt inc xchg dec leave or mov movsl popf jmp inc loopne imul leave aam in pop pop push jne pop (bad) add sbb movsb outsl inc dec add push shrl xor sub out add or and out rcrb test cmp fcmovnbe popf rcrb ficompl pop adc sbb scas xor outsl adc std jecxz outsb push loop push and sbb mov add jl xor insl add data16 push sub or sub mov jbe dec inc cmp fsts stos inc cltd pop add aam add jo leave add popa adc popa lock jle cld imul sbb dec mov pop bound jno psraw je pop mov mov add mov sub add add cltd inc dec mov push pop cmp dec xchg inc push das push or adc inc decl shlb inc lds sub xchg pop daa jo lock jecxz xchg aas in out scas je mov push add out imul mul stos jecxz add push mov fcoms add push add enter mov adcl (bad) lahf dec lods popa push sbbb push dec lds cmp rolb jg aas add test mov or mov adc jb dec popa notl cmp popf and add mov aas sbb sub push test (bad) les jp cwtl mov xchg test jbe,pt roll or icebp add adc (bad) pop int3 or nop fadds xchg xchg pop aad mov jne rorb push mov pushf call mov sub push daa (bad) cwtl icebp add inc pop cmp pusha leave cmp xchg stos sub dec dec in or or or push shl add mov cmp dec mov lods test mov into cmp dec push push xchg inc push add jp repnz and pop out jns or pusha and aaa ret insb inc jp jnp nop fisub cwtl mov mov inc out xchg or repz adc lret insb je push in mov push dec sub xchg or test add int3 xchg int3 jno pop mov or add xchg add adc addb xchg jae (bad) lret jbe dec orl daa and jl adc (bad) mov sbb jbe repz add out sub bound inc das jg cwtl push fistp cmc aad ljmp (bad) std jmp jo or lea insb inc push xor dec cmp sarb push out inc adc mov out sbbl cwtl daa fdivs mov sub dec push mov push stc xor scas fdivrl cs outsb movsb add push nop call mov mov movsb stos loope and mov xor push es rolb sub insb or add add adc or cmp jnp dec add inc push push int3 sbb and push or add scas xor adc les repnz imul mov call adc mov mov push dec into sbb add (bad) out sub and pusha loopne inc mov add lds outsl adc fxch hlt movsl scas movsb fimull mov cwtl ret inc xchg push dec lret mov iret gs add dec fdiv sahf das arpl lock mov ljmp mov lock lea test rorb lock cltd xchg sub cli mov mov jno xor mov (bad) adc cmp cmp xchg push sbb mov insb pop pop adc add xchg jae jmp dec je lcall lcall jp add pop mov jo jbe cmp cli dec add iret cld enter add and and (bad) lret mov push in dec rolb xor loope xchg pushf add inc test sti pop mov stos push mov lods movsb jno fbstp or xchg mov add in stc fist jg adc cmpl mov dec or inc andb out popf mov push push cli jbe mov lcall dec test mov imul dec inc jnp shrl rcrb sub cmp add jecxz movb fisttp sub (bad) popl ja sub and jp add js outsb mov jmp adc xor cli aas push cmp fild int3 mov lea dec stos fistpl mov les les mov sub jns or mov cmp js insl dec mov xor push shrl pop test incl sbb addr16 out test nop fst mov loopne cmp imul sbb aad cmp mov (bad) aaa pop sbb addb ficomp xchg sar xor mov or es dec dec inc jnp add sti enter and ss fstpl cmp or push popf sbb mov push or adc mov jecxz mov jge hlt movsl sbb xor inc adc dec or mov sbb jno pop sub cmp add nop cmp add inc add sub mov test stos cs je push xchg (bad) loop cmpsb jg aas cmp popa mov push mov bound xchg popa or cltd jo xchg sbb jbe mov ret sbb xor aad pop enter xchg hlt push sar jmp xor push mov cmp xlat adc mov mov dec mov das mov popf (bad) aad pop add repz pop ret add call js pop mov sahf mov loopne mov sbb shll insb add in push mov cmp add stos pop jb sub adc mov mov in jl add xchg push mov jne fs add jno fcmovne aaa add movsl (bad) repz arpl adc enter andb ja add inc adc mov dec mov xor aad push jl pop push test jnp xchg xor les xchg call xchg lcall xor adc adc rcrl int3 in add push cs mov mov push jl and add mov cmpsb fs je push sub dec xor add notb or fstps (bad) xchg lds add mov sub lea test cmp fild push jo add scas xor fimull fdivl dec adc xor sbb adc inc pop pop add fdivp cs mov sbb sbb mov adc cmp pop and mov int3 sbb jbe (bad) add pop fdecstp leave mov rorb cld or jbe push or add dec addr16 rclb or shrl outsb and (bad) dec add lcall xchg sub xchg push add sub stos dec mov add cmc mov push pop adc lea lds mov loop mov hlt pop inc push scas mov push sbb xor sbb popf add jp insl inc add das jae adcb inc std cmp hlt mov push xchg fnstsw or lcall sahf fcoml aas imul dec mov push sarl arpl mov mov push xchg repz add fldenv adc mov jl (bad) fisubrl adc ret add inc mov push jns cmp and jb arpl in loop xor sbb sub in inc insl in inc andl lods enter push xchg outsl std push roll sbb subb xchg jmp push pop in mov dec xor xchg test push add rcrb add es add int mov bound enter jmp jp push pop xchg loopne adc sbb pushf and movsl loop cs roll mov and les loop fstl das xor repnz pop lea mov dec add jmp outsl add pop push in pop shl xchg nop js (bad) dec test pusha adc insl lahf dec pop inc sahf sbb pop xor in mov out shrl xlat sbb test (bad) fnstcw sub or add add cltd ret insb enter add movsb nop jae push mov mov lds fisubrl or clc cmp mov add sti cmp inc mov idivb fadds loope mov or adc adc nop lds mov dec adc pushf cmp push iret pop out cmc enter xor or push push add push or pop cmp and ss inc push sub sub jae xor add inc sub sub adc push in fldenv sbb sub cmc call nop loopne out ss mov jno (bad) dec xchg xor insb leave in jae or lret mov mov cltd xchg jge jl push or push jnp idivl inc aad loopne mov orb (bad) mov xor inc lock cmpsl add pop nopl lods push and lret push fcompl xchg dec mov test pop mov inc ss cmc sbb cmp adc jne inc (bad) popa pop or xlat add lods repnz mov cwtl scas add dec je push (bad) jp ficoml xor wrmsr ret loope push cmp add jmp jecxz jl pusha aam cmpsb xor push adc pop pop jo pop rorb subb jg push pop std or mov shll xlat mov call mov sub push push add jb rorl ds xor xchg cmpsb adc loop fimull sub mov ret sbb and add xchg and push mov jne xor rcl push pop or xchg mov ja jo add or pop or (bad) and adc rcrl fwait push push loope push jle jns cwtl aaa pop xchg into adc std push insb mov sub push loope adc pop jp imul push and shrl pop dec iret aas loopne add movsl xor add push sbb repnz lds mov jle inc push cwtl in pop sbb aas aas sbb jbe jmp js dec xchg pop inc and add push in jl loope cs out jne out jns pop repz mov cltd daa xchg aad add or dec pop movsb inc nop cwtl mov sbbb mov cmc enter adc add ja outsb cltd insb add fidivr jns adc je ds add out inc push arpl fwait in add add add pop cltd add cld mov js mov ret pop add xchg add fdivr adc lret dec add out movsb mov iret push pop pextrw test daa jo das aad mov push add mov lods pop add add or dec jg imul dec fwait cmp lret add push dec pushf in into (bad) lock jge repnz fstpt mov arpl les repz outsl sbb and push sbb nop dec sub push push cmp lahf jl jno add in out je aas pop sub and pop adc push in pop mov xchg xchg nop sub mov add inc das fbstp xor cltd inc dec adc iret ds orb and and xor subl test push and cltd xchg push push outsl nop pop add jns dec and pop pusha sub push pop sbb push inc mov cmpl sbb jno pop and and out pushf cmp inc sub or add lock and add jecxz push subb add movq inc sub jmp cmpsb jbe adc rorb je mov mov jnp or cltd add push int3 pop jge mov mov xchg jmp fnop cwtl addr16 sub cs inc adc lock mov push adc mov repnz and jne add push and mov ja add fildl loop,pn inc xchg adc fldenv jg xchg icebp int dec xchg pop jp int adc ss mov in shll pop push fs xchg xor sbb imulb int3 mov fwait or popw aaa push jb mov add enter or xorl lds add jmp jbe add ljmp inc cmp jl pop nop inc xchg add push sub add daa fnstenv add jge mov adc out and lods xchg iret sbb and mov mov dec gs mov and inc (bad) (bad) pop xchg loopne out adc dec push xor jb xchg lods adc fsubrs mov je mov push sub cmp into xlat add (bad) dec mov clc or dec xchg add pop call adc jne adc xchg in jnp inc jle add jge jo (bad) rsqrtps pop psubq loopne or pop sbb idiv outsb push das push dec push fstpl push nop sub in mov lret or add pop cmp pusha stc pusha sbb mov xchg push bound inc nop ret in xor sbb clc outsb mov jge mov aam cwtl adc add xor fist push pop dec and add add aas jo,pn lcall ficom adc loop add mov mov push pop pop push hlt push ljmp sub add push pop pop mov sub rorb mov pop push pop fnsave idivb imul xchg xor loopne bound stos xor sbb cmp or push adc jno adcb ret dec data16 add jne aaa call shlb push scas rorb sbb in (bad) fdivr adc cmp xchg fwait aad js mov mov fisttp mov or out inc (bad) adc or sub in wbinvd jecxz mov cli shlb push mov outsl out addb dec loop repnz jp push fldt cmp jb push add sbb ud2 add dec jo inc (bad) jae scas mov xlat push popf cmp adc lret mov mov push mov pop adc aas push add dec sbb adc stos pusha add pop push (bad) sub cmp mov and jb sbb in mov mov and add (bad) iret mov add lahf test mov jb lods fisubl jecxz adc lret pushf adc cltd pop adcb cmc in xor or movsl or mov or scas dec adc push xor leave cli mov ret fcmovb push add aad (bad) jbe xchg outsl sub fisubl inc dec (bad) hlt lds inc add lret call popa inc pushf mov add int xchg xor mov ja push sbb jmp fwait xor and sub outsb test sarb fisttp std mov inc pusha sub xor add cli movsl push adc push imul pop pop mov in addr16 add call (bad) and cmc push add xor mov sub pop xor nop cmp test vmread sub jle cmpl jecxz add jecxz nop mov and loop push iret and jmp pop decb ljmp dec lret mov jg push mov popf push out dec repz mov das or call imul push ljmp into les add pop xor popa test int3 inc xchg fbstp or (bad) and xor add loope rorb xor adc push bound out clc xchg loopne cs je dec and (bad) scas jmp mov nop sahf mov cmp fs pop add and mov push pop mov enter adc ja pushf or test pop cmc add add xchg sbb adc (bad) jp xchg not or add mov aas decb in pop jge or cmp xlat or pop cmp inc cs push ret jnp push cmp mov inc dec pop das xor mov xchg mov push push (bad) loopne fist repnz push pop xor xor lret or adc scas sub mov mov mov dec push lock cmp hlt mov inc inc xchg icebp (bad) add pop push lea pop fistp mov (bad) lcall fcomi pop popl imul loop push dec cmp pop pushf mov jle out jge sbb sub fsubrs ja (bad) cmp stos pusha imul fwait jnp (bad) inc inc pop orl mov arpl ljmp inc clc sbb (bad) jg addl jne xor icebp mov outsb cmp stc jmp in adc pusha push add pop mov lods pop mov and pop push lret push jge cmp neg inc repz mov lret repz push add xchg out orb add pop ja hlt (bad) popf fnstsw dec ja pop test in nop pop dec jo mov jb idiv adc pop sbb cld xchg dec loopne add aaa mov int3 mov jns push pop xchg sti xchg pushf subl add adc mov xchg mov in adc adc cwtl (bad) inc pusha dec and mov push xor xor nop xchg mov and push cmp leave cld out nop or mov xor or mov adc sti jg push mov xor xchg lret adc push pusha punpckhbw out and adc dec das (bad) pop push jmp jg pushf or push (bad) dec (bad) sbb sub sbb and jo adc call xor xchg lret or dec out (bad) push add and pop inc and adc out es sbb jno pop inc ficompl adc jmp jge or and add addl aad mov dec int3 push fimul movsb cmp jmp inc jl mov jo stc xchg orl roll sub outsb push jbe add std jnp jmp popf enter sbb sbb inc mov mov repz inc adc sbb jg,pt (bad) nop and cmp xorl lea out cmp out jb cmp lret lds (bad) push fistpll jb and cmpb mov sub and pop push sti mov ja inc enter in jo push in cmc cmp lods arpl mov pop push pop mov and jmp mov es arpl lahf movsb mov ficompl loop mov jbe adc push pusha mov aas mov xor pop mov outsl xor idivb xor push (bad) cs adcl cli mov adc mov or mov jp adc divl lret jno hlt push sub pop popa cmp aas sbb in push push add scas add test icebp std ljmp xchg rclb (bad) in lret pop ficom sbb outsb in mov lock das xor movsb xor mov push mov (bad) jb adc jnp sbb add js mov add pop pop pop push jbe pop bound dec jbe dec call cmp jg or cmp dec and jle pusha push test push mov xor or inc movsb stos mov out mov sar push sti pop push mov push xor icebp call outsb pop prefetch or or xchg cmp outsl or into dec cltd repz xor jo sub fs pop or sub jle dec lea jb rcrl jmp outsb xchg adc jle cmp push jmp pop jg dec add negb cmp adc add add loope roll xlat pop and adc je add dec xor mov xchg rcr dec shrl sub sbb push or xor inc add inc cmp gs xchg insb fs push adc (bad) dec popl xlat (bad) nop shr pop movsl loop inc in cmp add xchg fiadd mov adc flds and orl sub shrb pop push mov and lret scas icebp add xor push out hlt mov pop inc fisubl xor pop std iret jp jne push push and pop mov add dec (bad) fiaddl jmp push dec xor push stos add fnstsw sbbl pop mov add cmp neg dec enter add pop add adc rorl adc fisubl push repnz imul outsb mov ss or inc adc add (bad) pop nop imul rolb sub pusha xor leave add add sub ret dec lret mov sarl fistpll inc ret stos scas pusha add (bad) insb push hlt adc or jns stos adc jg,pn pop (bad) xor int and xchg lahf jmp pop and xchg mov ja sub pop or pop inc cmc fs addl fbstp inc sbb inc cmpsl lret pop std mov add rcrl pop int ljmp fisubl inc dec and outsb and call and or addr16 inc pop insb push pushf add cmp stos js adc mov and mov adc jo sti jg add or in dec ret sbb inc add (bad) loopne sub cwtl pop xchg push xchg imul and je cmp pusha add and jecxz mov mov and pop dec xor in int3 fadds fist fmuls mov xchg (bad) cltd gs or gs or pop stc insb lea in mov sub mov bound (bad) pop pop scas cmp rolb leave and mov jg daa pop pushf scas lar std jnp or jb rclb jae xchg jge dec add adc mov push enter hlt loope inc std jge andl sbb iret mov stc std lock jo push jo pop inc bound (bad) pop pop andl inc jg ret adc mov push xor sub sahf bound aaa inc xor add gs es jg fsub cmpsl dec mov jmp adc add bound push clc pop sub jnp int jb jle sbb bnd in cmp xchg ret ljmp lahf xchg mov orl (bad) mov and lds mov mov push js and inc adc outsb cmp setnp popa xchg stos push inc fcoms clc xchg push ret dec scas fdivl data16 sub pop adc jge repnz push inc and in or test ja add jmp std dec jmp imul fistpll fcmovnu mov adc sbb setg or imul push out ss or xor jnp pop push xchg sbb mov cltd bswap pop xchg lcall xor push out fnstcw mov idivl loope dec fist and mov cmp fidivr std inc mov or push sub add sub xchg test int popf jle cmp pop mov out adc decb data16 push mov push cmpsl int3 and les inc mov pop mov inc mov pop test cmpsl (bad) and dec rclb or or pop mov sub fadds or dec in push pop jmp aaa xlat jae orb dec mov jb mov jnp add psubd dec dec xor push cmp or int lock sub push sub sbb outsl sub mov pop pop sbbl std int3 (bad) mov push mov push scas (bad) push xchg xchg lea rcrl repnz mov hlt rcrb jno xchg scas cmp pusha jmp repnz scas mull pusha (bad) xlat stos call scas cmp jne push test arpl adc jno (bad) mov or fs mov add xorw push push arpl sub jo (bad) iret imul cmp push add mov pop out xchg das cmp add mov inc rolb icebp rol es cmp fsubs cs dec fldl (bad) adc shrl test or mov sub int3 loope push add push or popa sub pop sub mov lods test imul inc xor fldl movsb mov mov inc mov fbstp popa cwtl pop add pop js pop mov lea rcrb (bad) xchg sti xchg push adc jp mov pop adc test add insb stc or add lods test push mov mov aam dec inc sub mov pop andb dec or and ja out cmp outsl inc cli testb pushf repnz push pop stos mov outsb sub movsb aad aad data16 pushl add jg jle (bad) mulb xlat adc cmp clc lcall push ja add cmc cmpsb pop lret add push cmp loop inc imul sbb ja add add xchg lahf or out add sub jecxz inc popa insb or push add sub outsb push aas jnp or jmp (bad) fdivl jno negl add jmp push adcl push pop clc pop pushf into stos mov jnp cld dec (bad) es je rorl mov lock shld inc mov icebp sbb push dec or and mov mov and arpl bound mov mov jge daa aas lcall jbe rorl int mov into xchg dec movsl iret out aam lock or mov ficomp dec data16 jmp or xor push push jnp mov fadd mov mov sub fsubrp sbbb mov push jbe out adc shr or dec imul ja xor (bad) out scas cmp inc push fiadd flds pop dec sbbl inc mov push mov push (bad) push dec add (bad) repz jg div test adc push pop mov mov pop vmread daa sti cmp inc push mov pop mov iret inc incb and push test shl mov dec pop leave stos jl xor jle ret dec add adc cmc dec (bad) adc inc stos orl hlt cmc mov jmp cs ficom mov mov stos sahf in les int3 dec sub repz pushf movups cli add mov hlt hlt dec pusha dec enter and aam popa icebp pop mov test push push lods and mov and mov std and pop adc push sub mov or jno add dec or stc add into in jmp iret jle cmpl sub cmpsl rcll push icebp push sbbl shll popf lahf clc mov icebp sub jns xor les pusha jns hlt lahf jo mov push lods insl dec pop pop les in stc in add int or rcr dec pop lret mov insb push cmp arpl mov pushf jno push push push fisttpll mov pop mov inc sbb mov rcrl jecxz movsl int3 enter lods das nop pop cmp sbb push cld out mov ficoml pop sub mov imul xor push fs ja dec fdivr inc pop in imul mov or jbe adc icebp scas es add pop sub and push lahf sub imul push push outsl jg add mov in repnz add adc imul mov add cwtl pop sub cmp add push (bad) add ret pop ds jmp push mov inc fwait divb cmc push pusha (bad) xor cmpl add mov test pusha and mov arpl jmp push into ret jmp stc xor mov add pusha out or cmc ja pop aad jae insl add scas sbbl xlat jnp sbb pop fdivrs adc fwait test add pop outsb jnp (bad) dec int3 in mov mov dec mov (bad) jmp push push cld lock xor (bad) (bad) adc ret (bad) add test icebp jmp scas mov jmp dec xor test (bad) (bad) ss mov pop enter insl inc mov in lock or pop xor pop jmp push call xchg adc stos jg mov sbbl cmp mov inc xor aaa add (bad) lret ds not pusha fwait enter decb xchg dec xchg out mov arpl push add pop lods jl mov lret jle arpl sub idivb lahf pop jmp dec jnp pop or mov imul sbb jmp pop mov and cmpsb mov hlt shrl aam mov inc xchg jge out pop incb repz mov dec or repnz push repnz sbbl push push sbb xchg fwait and xchg sbb out jae xor (bad) xchg sbb push call rcll adc inc push jle mull pop in pop jns pop push pop add test xor sahf sub por (bad) cmp int outsb add adc dec out cmp xor push or cmp cmpsb pop fidivr ret mov mull lods scas jp and std add xchg scas inc push jo je pop dec stos gs in and add ds adc repnz aaa pushl and int test push adc stos loop mov push icebp mov mov pop (bad) bound sub (bad) fwait or outsb test add addr16 push sbb jne arpl pop mov add pop (bad) sarl ds into loop xchg xlat scas int xchg jno jnp test sub lret push cmp cmp sub (bad) mov repz and (bad) mov jg (bad) (bad) sbb cmp cmp hlt push mov mov dec and mov enter inc repnz leave jb dec test lea stc cltd push jnp cwtl movsb mov add (bad) and div xchg or pop neg inc xchg rcl into and and jg and inc push sub add mov ret or pop jno mov mov push test jle jmp lods jmp and gs xchg inc lcall adc xor hlt dec leave push ljmp out shr xor inc or insb jbe jne test cmp lret or sbb jno add cmpsb js add sub adc add cwtl mov rclb push cmpsl aas xchg cmp decl xchg push mov jmp fildl or lret test sub fdiv or cmp jnp iret mov out movsb into scas das add jmp lods lahf lods push inc arpl inc mov into fcoml or add jg mov xchg pushf cmp repz mov jecxz or popa arpl loopne push movsl outsb stos or iret or fs pop or xor push les in push jbe bound dec pusha jno fidiv jge sbb test add cmp sub dec or pop add pop mov and int pop neg aas shl add xchg ds pop dec inc xchg pop lret in movsl pop or xchg jmp xchg add mov xor or (bad) pop rorl outsl inc idiv jle mov fstpt jbe fwait icebp ds aaa or inc loop jle in int3 add mov (bad) cmp or or loop aas pop pop push xor sub push fist inc adc sarb les lock and aas cmpsl in sub add jmp push push sbb insl sbb pop pop mov loopne jbe stos push xor outsb stos mov lea xchg dec pushf ss (bad) add jmp jl add mov jmp aad cmp lret and pop inc add aad aad nop sbb push pop neg in je sub cld pop mov xchg sbb inc pop mov add sbb add pushf push imul mov cld pop adc imul cmpsb jmp push js jae pop mov xor inc (bad) jmp push jp pop lret adc jbe adcb mov mov xor push cmpsb notb push (bad) loopne pop ljmp (bad) roll cmpsl fwait cmpsb push scas sub ds add pop add pop stos sub sahf js call or pop pop push jmp int3 fidivrl xchg stc movsl scas lahf xchg ficom repnz dec pushf push aad sub mov cltd cmp (bad) mov shrb xor xchg addr16 or inc sub dec pop and fucomp sbb ud1 push arpl jle adc sub xor fisttp mov lea or icebp lock mov xorl sbb (bad) cmpsl jp mov jmp pop cld ljmp call mov pop shl dec aam mov add fdivs and pop (bad) movsl adc or push adcl cmc or pop aas sbb mov dec push into add mov sbbl out out mov inc dec sar cmp adc lahf adc sub sbb roll (bad) jmp divb sbb lcall add pop fdivl (bad) mov pop aaa nop xor into ds cmp mov outsl and push cli dec and mov lcall add pop shl add ret leave in xchg xor ss incb pop xor aaa idivb xor and pop mov mov lahf jg inc stos pusha adc mov jge mov fcom mov pop inc addb adc lock lds lret adc dec lret cmpsb fwait sbb adcb inc mov jno mov jns shr test or push xchg mov push (bad) clc xchg loope pop push cmpsb dec mov pop lea xchg xchg inc repz ds mov and pop add decl fldcw mov xor jne xlat inc out xlat jle push loop sbb jmp (bad) cld and outsb dec call insl pop cmp xchg pop popa (bad) pop add sbb add mov sbb xlat cmp mov push mov mov cs add frstor sub adc shrd jae test jg cs dec lds dec pop or out push int3 mov mov addr16 adc std mov je insb enter xchg pop (bad) pop jmp pushf xor daa push push int3 mov or es insl xchg and add xchg hlt (bad) insb lock stos addl inc mov addr16 das sub movsb cwtl in mov jo or test and std dec je add movsl sbb mov and imul inc aas ss dec lds push cld mov shrb add pop or and jg dec fmulp flds mov dec cmc out lods andl push imul jmp adc xchg pop dec loope fmul push xchg sub sbb sub sbb jmp pop das bound or jb in and mov sti cmc test lcall lea jge cmp (bad) push xchg adc pop push xchg or clc inc mov int inc pop inc pop add out pop or pop mov out imul movl negl and mov jecxz sub or frstor or leave dec decb push xchg fwait push pusha rcrb cltd push js mov test rolb inc (bad) mov pop pand jl sub xchg iret out xchg pop lds or test push add and push scas sbb aam test cwtl je pop repnz repnz (bad) cmc or pop cli loopne (bad) mov mov neg add pop push adc ljmp jp clc add les test loope adc sbb add jecxz not jmp cmp fistpll xchg pop pop push stos jne adc lret jnp inc jne xchg adc jp mov mov dec and xor aam push add add inc lock das add clc int xor cmp test inc lods push cmp jmp repz and pop pop test or mov and lret es pop adc aas push in add shll xor lds sub outsl mov lret add sub cmp ret pop stos mov sub push cmp jmp push sbb jmp addl sub dec jne and adc xchg ret and sub inc (bad) jp xor ret hlt add pop or pop iret sub test in js add scas lret je mov loopne add loop sbb inc adc ret mov adc xor cli adc (bad) jp mov ljmp push test nop mov mov (bad) xor pop jns add sarb lcall sbbb lds sub and imul cmp cmpsb in xchg push ljmp dec add xchg pop jo int xchg (bad) (bad) sub imul js inc hlt iret jecxz add shrl ljmp add adc sbb or or repnz or sub xor jl mov xor and mulb inc sti aas pop enter jp push andl cwtl xor test jl scas cld lods iret add mov xchg sbb sbb add jns adc fwait add push lgs xor imull (bad) cs jb imul push test bound dec add xchg pop imul out xor sbb ret pop sub inc adc xlat add movsl lret add lds add in aad pop add and cmpsl dec jne mov aad and mov jbe andb mov adc xchg or inc fisub outsb lds or sbb push in inc push inc jae and pop xchg cmc sbb addl adc mov add pop sti add in or xor inc pop xor adc xlat leave xchg shlb sbb or push cwtl (bad) cmp int xor inc dec mov aas inc mov push push imul sub (bad) and adc rclb cmp mov adc aas cmp aaa cmp (bad) sub or sub inc pop sbb add cmp inc xor cmp rcll arpl pop ljmp out dec std or or xor js loopne pushf add and jge test mov in or xchg pop pusha jne push jl add push fwait jge mov subl dec insb pop add cmp add and imul sahf add out inc mov sbb movsb dec mov ret adc xor xchg arpl ror add (bad) mov push imul jo lods ret ret outsl (bad) mov sub (bad) xchg jno or cmp cmpsb or inc cld fldenv push add mov daa adcl cwtl (bad) pop je xchg mov dec repnz addl insb xchg aas or xchg inc inc mov jae push rcrb push pop mov aam inc dec data16 add mov inc cmp fisubl push imul jmp or fcomps mov jnp insb je mov dec (bad) ss sbb je repz pushf pusha add pop and das mov movsb cmp and rcrb jnp icebp inc add mov adc pop mov call cmp jb dec fwait jno call daa xor and xlat push add pop xchg jp lock stos mov mov or mov jne cmp push cmp ret pop (bad) push xor mov mov or add in inc mov mov (bad) andb or mov es loopne ds or lcall add push dec add jge fnstsw and jl xchg mov gs jg es popa insb or add ss sbb sbb maxps cmpsl jno add mov mov outsl add add xchg inc repnz push xchg popa addl mov int inc adc pop or mov jp lcall jg sbb xor stc add xchg fnop inc mov insb (bad) add int3 or aaa mov call adc jecxz add (bad) (bad) adc mov pop jge pop and dec xchg inc loop xchg (bad) mov add and cmp inc or dec dec (bad) in jle notl adc add mov ror push flds sbb or jmp roll cmp dec rclb dec push add rcll jno pusha lcall mov dec add icebp shrl adc mov hlt cmpsl and test movsl int rcr xchg out add mov dec dec mov fdivrs pusha xchg inc inc add xchg jns pusha jl (bad) in test xchg push xchg adc and sbb pop test out push jp push rclb (bad) mov out movsb add iret cwtl mov in outsl vpor lods jg jno sub push fcmovnbe nop or ja data16 mov mov out cltd add cmpsb push cmp or push adc (bad) movsl popf ret popf fsts pusha xlat rcll call jns lods cmp mov pop mov mov popa sub inc loope js dec fs jb mov lahf inc xchg les mov mov adc rcll sti push xor dec add cmp test aas jnp call mov lods jns mov push add icebp pusha xchg js mov arpl cmc loope sahf cli nop scas inc dec clc stos in pop add ret adc mov jg sub mov imul dec rcrl fcoml jb and push andb mov js leave std (bad) xor add sub fxch or push xlat jle test mov or fucompp and add mov xor xor or jl sub pop inc (bad) enter pop (bad) stos or xor push xor push adc mov sub pop or dec xchg enter cli add fiaddl pop pop add cmpl (bad) add dec pop lds mov add xor das xor push scas mov ds daa test add nop jo pop xlat popf imul push cmpl and pop mov pushf push xchg lods mulb mov leave adc adc mov mov or mov cs cmpb mov cmp pusha fsts mov insb jle outsb arpl mov aad pop popa aaa jne add dec dec fstps fs pop fstl sub shr jp add mov pop push mov mov xchg mov lea push es fs add mov push adc mov (bad) jge (bad) lahf and push cld pop add or and or xor xchg pop (bad) out or push (bad) mov xchg and jge sarl inc sub mov add jge adc rolb rep or mov dec adc inc movsb add clc sub jb sub adc cmp in jl xchg stos aam mull cmp dec ds pop roll ja je add es xor add movsl incl mov daa mov add outsl scas sbb clc xchg mov and inc inc jle cld push pop sub add in sbb pop je cs cmp jno out scas sub sbb cmp ss mov jmp popf sbb or arpl cmp mov stc inc sub mov cmp push popa inc sbb sbb mov add xor out ljmp sub and out fdivl cmpsl repnz subl jp inc fwait inc pop xor pop mov loope scas fcompl nop push or cli fnop xchg imul jle (bad) test mov fsubl int3 or fwait and cmp sub inc fdivrp adc std sub test out add adc push in pop lcall js jmp push jge add or inc or in sar pop out loop or fistl push lock add and pop sbb mov dec rcr mov push and dec add test xor in push gs pushf lods and jg pop xor cs pop pusha das fbld cs dec jne cmp add pop fisttpll rorb (bad) hlt or popa (bad) jmp je xchg push mov lcall imul adc int loope inc cwtl add mov lds add adc pop or js mov cmp sub das xchg je aad dec les adc mov mov outsb push push sbb lea or sti ljmp (bad) mov or nop rcl pop (bad) jmp and sub push (bad) popf iret ror adc das fnstenv xchg push push mov mov jne (bad) pop xor mov jnp add inc (bad) lahf pusha inc push xor cmc dec sub arpl and dec add or call pop lods addb inc sub inc fwait aas pop xchg fcoms insb test mov push ljmp (bad) jecxz aaa pushf add xchg sub inc lcall int add sbbb (bad) sub fdiv adc xor cmpb int sbb lea aas loopne pop mov xor pop inc or push in iret int xchg std cmp inc bound add sbb sub rolb xlat mov adc push aam ljmp mov fwait xchg xchg cmc aaa out inc dec sbb mov dec stos add shll adc adc nop aam add dec mov out lock popa add arpl add or mov fstpt pop fxch mov ljmp fucom dec lcall int3 push jp lret fwait pop cmp xchg cltd bound call mov in sbb dec dec mov mov setne cmpsb add xor pusha push push hlt sub xchg (bad) stc test push inc sbb and inc movsl pop bound mov push (bad) jnp or and cmp mov out lret push pop xor inc test lock push jg jnp cmp or icebp in repnz xchg adc cmp add cmp in fsubp cs mulb jg jnp push cmp int3 dec int3 dec add push inc aad sub or fwait sub cmp in xlat roll iret std lcall dec ljmp xor xchg mov add push shll mov or inc pop push hlt (bad) pop add inc hlt mov insb or add mov xor inc insl xor inc dec cmp out push jno enter nop mov mov and dec xor or push pop aad sbb jle sbb add pop cmp dec test inc xchg sbb mov pusha mov add enter aad fwait sbb adc mov mov dec push push push outsl dec and ljmp push insb in sub xor and pop lock mov daa pop das inc jae jo xchg shl or adc and pop add cmp out mov lcall xchg mov push sbb ret cmp mov rclb out cmp out adc xchg mov jbe les scas mov xchg lds aam adc sub testb push (bad) push aam jmp add cmp loope ja mov cmpsb ret xlat inc fisub fildl cli and dec add jns lea sbb or test push (bad) lret mov jle mov mov pusha or rclb adc fwait mov addr16 jo mov daa stos add nop loopne inc mov or loopne out es push pop xchg mov jp sub add sub cmp sbbb add add jge lret movsl push fimull xchg or int rorb fldenv pop push sar and dec (bad) cltd sbb loope outsl je dec jns test pop inc inc xor inc nop pinsrw adc cmp adc fwait jno xor sbb test repnz outsb inc xchg add xor std dec in mov push sbb dec (bad) imul movb sub rolb jmp sub xor push (bad) outsb (bad) loop xchg stos dec outsl rol cltd mov imul sysenter cs fist mov inc sub xor push mov xchg push int3 test pop pop xchg js rorb daa clc stos add sbb (bad) ljmp fucomi add mov andb mov or roll es (bad) and add rorb or jle jp push adc repz push pusha dec and movsb or pop cmp je xchg icebp out dec loope push imul sbb push dec dec jl cltd mov lods arpl test cmp mov sub push loop xchg jno cld mov adc push inc or inc dec test ss lods (bad) popl dec (bad) sub and (bad) cwtl ja jae adc movl sub or ret add and imul jo push mov dec jb jns pushf push daa decl pop loopne jo outsl add cs mov xchg mov dec and xor popf sahf cld mov add cwtl mov and es jmp dec es dec add addl test add jbe imul xor and fiadd loopne mov adc or jp or jge push and leave stc cs or inc pop lahf int3 push mov and and push pop inc jmp adc movsb add mov add stc mov and dec add dec xchg add call fadd cmp mov popa dec movsb dec xchg add inc mov mov cwtl push cmp out dec into pop mov and stos movsl call mov or outsl mov adc hlt sub add push push enter sub scas insl xchg push mov data16 out mov rcl or xchg cmp ljmp ss dec jne pop cmc adc and stos sti aad xchg add inc xor add jmp scas fmuls and inc fs ja je push sbb sub mov or loope lea push push inc jnp mov mov mov push sub mov mov stc iret add mov out and mov imul jecxz mov pop add out lahf inc inc and mov arpl adc xchg and sub subl inc fstl (bad) mov inc xor sahf dec xchg popa push popf jno clc adc in xchg jmp xchg jno and lds mov and mov hlt stc cmp punpcklwd jo or cmp out and aad hlt cmpsb add fdivr aas xor cmp mov movsl and sahf lods add sub fidivrl sub mov xchg sbbl jecxz jne sub xchg fisubrl out pop outsb inc add cmp enter cmp jp xchg dec adc sub add sub xor rcrb aam jle imul cmp add mul or mov pusha je sbb pop js push sub movsl pop pop call outsl adc js jecxz cld in xchg and add add pop outsl ds ds add and rorl push pop rolb push adc mov test push mov test sub mov je jmp sub add test or cld pop enter add sub sub rclb sti sub jp adc mov adcb arpl jl pop rcr push loop imul mov jge popf adc or sbb add test pop adc test pop call in mov cmc test in cmpsb dec push adc imul daa pusha dec cmp xor xor pop dec xor mov jo push es or aas and sti mov sub btc xlat out inc push and insl mov dec sub into pop pop lods cmc fbld nop pop daa or daa inc (bad) fisubr jb jmp push lock or dec sbb xor jp cmp test add pop roll jmp bound jl adc and fstps adc adc dec or dec adc add mov stos pop movsb xchg mov mov aas repnz xchg mov mov (bad) aad pop add xor lcall and xor in dec jno out sub add (bad) and (bad) loop lret bound xor daa jmp inc sub push jae add jecxz or jns sbb (bad) sub inc jnp mov pusha daa fsubrl add sbb inc jne add push int3 out and jge jge jbe pop mov lods pushf inc adc jbe mov or or xor push xchg add inc inc push add mov pop jl mov add mov data16 dec jb mov mov pop sub outsb les sbb out mov enter push dec roll add das lcall sbb push jb fwait mov addb add jmp addb mov test cmpl mov mov push sub lods cmc dec ficom inc mov xchg sub add decb jb insl add int3 push mov aas pop mov mov idivl aad xor dec mov cwtl pop clc nop inc xadd add mov xor cld (bad) in jmp jno ljmp pop out ret or dec ljmp leave and rcll test jns movsl ds pusha shrl mov mov add or in or mov test lods or clc or and decl mov por adc popf cmp pop aam xorl cld adc out adc inc xchg pop push add mov test loop pop enter push testl inc aas cmp pusha sub push push and pop add pop in mov addl sbb fwait daa outsb clc je bound fdivl sar les jmp aad daa sub fistl std push pop stos sub add aas mov sub add sub loop neg into xor push (bad) pop and dec out rol faddl in out repz mov xchg movsb clc xchg sub pcmpgtb (bad) shrb and xchg xchg enter dec lret xchg hlt sub inc rol jb jecxz aaa jnp aad lea jl popa repnz mov xchg add roll sbb pop xchg sbb test nop gs ret loope add xor (bad) je in ljmp mov int aam (bad) jecxz stos xor stos ds or mov movsb imul push and add loope mov pushf movsl jno dec push add movsl pushf cmpsl xor adc (bad) mov insb mov nop sub adc sar or fiadd cmp or inc xchg andl into arpl cmp lock push sub or dec dec inc aas adc lcall add cmp sub fnstenv in inc ret xchg cmp cmpsl push sarl roll or and and pop fcomps lret or jno lock rolb jno pop and mov and or add pop push in loope fisub mov dec (bad) jmp sub mov es pop add push cwtl mov sub dec mov sar and add cli dec popf jns pusha push pop xchg nop add mov stos push fisttpll orb mov mov mov loop rcl in mov popw in sub faddl mov push ljmp push jmp mov sbb pop sub das pusha cmp imull pop shl mov inc out sbb add lods jne dec cmp mov or mov adc and xchg loop cltd inc movsl int3 lahf ds sub cmpsb shl mov aad icebp je mov (bad) xchg (bad) xor into jle dec push add or out and mov sarb mov imul cmpsl shr stos lahf call adc loopne mov sbb std xchg cltd sub and testl imul jo sub addr16 mov fistl in mov add les aaa jmp push dec test scas sub enter cmp xor dec rorl roll inc dec (bad) push inc xchg (bad) int add (bad) out ja or lock in xor push inc decb push pop jmp bound test pop fsubrs sub mov jno mov mov insl les sub xchg push pop je cli inc add xor pop mov in push mov push imul add es mov push add jae aaa pop pop or cmp aad cmp out dec movsb movsl mov out ja add in pop fcompl add shrd add jg push cltd or stos pop cmpsb (bad) fstpt pusha sub rolb lock inc data16 add sub jp out pop jbe scas mov mov fwait mov std in sbb faddp pop inc sub adc fsubl out add (bad) in ret mov pop daa xor cwtl roll mov fldl jg mov dec lcall dec push (bad) dec jnp out xor ss adc push imul add int mov mov test xchg pop pop dec xchg and mov mov xchg add dec gs cs roll fstpl lret sub iret xor lods vmovupd fldcw jns fisubl scas int sahf in (bad) sub pop lret or push (bad) popf pushf dec mov cmp popf and es cld cmc movsb clc icebp xchg out add adc xchg jg mov inc pushf sarb (bad) xor dec add sbb cwtl imul jp sub flds cwtl pop xor or inc adc or inc adc lock jns dec repnz in movsb xor or mov rolb mov cmpsb pop mov iret nop push jae incb in mov or pop cwtl shr and jne jo addr16 and lea sbb sub dec les or pop outsl add fsubl data16 leave pop roll and jg xchg shll hlt mov add dec sub adc (bad) rcrb adc js enter pusha faddl fimul aaa and inc into add sarb jne test sub fs js pop movsb sbb and popa stos dec test cli popf arpl sbb inc das and inc add xor xchg mov or jno (bad) sub ja mov int3 adc addr16 shll call imul ret and or into pop aam (bad) jl mov loop add push (bad) jnp adc add mov (bad) mov loopne fwait and add add or push xor xchg leave inc dec add mov (bad) mov or lods inc inc mov shrl pop cmp je ret push jge out mov ret mov dec add push aas and add and enter push addr16 cmp adcl push adc cmp mov lret rolb dec dec adc fsubs xchg add jmp xor xor push rcll fsubrp mov rcrb arpl push outsb test sbb sub or or scas jge imul in pop pop or push sbb shrb data16 dec outsb pop adc jp pop jne out mov ds jle and sub mov cmp pop adc dec sbb js in in mov sbb cmp mov mov mov dec xor je add pop jo mov jnp xchg dec in mov adc fildl jp xor lcall loope and icebp je adc nop xchg xchg adc ja inc clc pusha jbe cmc gs mov xlat cmp bound shll inc add push xor xlat add sti sub rcll add out js inc std int sbb xor insb stos testb mov sahf cmp jno mov xor pop pop pop rclb or call inc sti cmpsl fxch rclb icebp nop or xchg and xor pop push jge dec jne mov mov mov adc (bad) mov shll cmc mulb js xchg xor dec dec and pop das push mov jg cmp inc dec mov (bad) mov pop and (bad) daa call pop add push sbb divl insl or out sbb scas repz insb outsl cwtl jmp ss ja adc cmp push mov xor fiadd mov sbb inc dec loopne in aas ret cmpsl in mov sub inc jo xlat dec cli jne aas mov out add mov push xlat fistpl xor xor or das out cmp imul xlat out mov scas fucomip data16 sub ja lock and push adc lret (bad) and andb xor xor (bad) ss loope add jo std inc and cs adc xor inc mov or add scas mov (bad) mov addr16 adcb dec inc testl push loopne add loope (bad) xor push adc test dec in or mov pushl sbb fidivl xor add sub lods fildl push sub test (bad) cld push popa lock mov jl fsubrs mov int lea stos pusha and sbb out mov pop or pop cmp fs push es in loopne mov push xchg lret movsb cwtl pop cmp jo movsb std aaa xchg test add pop clc jb paddusb or loopne add lock push aam pop clc cmpsl test push push or mov and imulb mov push and inc mov push sahf push out xchg mov leave gs fs shlb jno xchg js xchg or adc mov fldl xchg popa inc pushf lods (bad) js add daa cmpsl iret pop or push in std test js aas push in pop andb cli and sbb sub fsubrs arpl aam push mov xchg mov push (bad) scas (bad) divl ds ljmp dec inc sub out dec add int or xor push sub mov sti add popf jbe mov out sti test insl sub in push jbe,pn or pop xchg dec or xchg sbb add pop sbb imul or sbbb jl mov or xchg cltd int3 xor pop jb loop mov xchg jbe xchg enter aam cmpsl mov movl fist add fsubl (bad) or mov (bad) lret dec test stos cmp add cmp leave jecxz std test fdivrl jbe add xor push and in jns xor jg dec adc frstor and sbb (bad) jl jp and cwtl in and or arpl rclb push test push xlat add ljmp sbb or ljmp ss stc sub (bad) mov xchg inc lods sbb or jne adc outsb xor sub std push push mov shll repz or jmp sub xchg mov out xor lock lret cltd daa cs jb inc add int push scas cld mov hlt push sub add and int3 popf sbb inc icebp and fistp jb sub inc and (bad) pop aas outsb bound sub inc jmp addr16 and mov xchg sub xor dec inc lret mov or jl ret movl pop cmp adc adc or mov mov add shlb mov pusha push mov push out or stc ficom push imul dec pop mov push fbld ljmp inc mov fs adcb dec jae add pop mov scas popf mov inc sub lcall mov push adc mov pop dec adc xor jl mov xor add lods push sub divl fmull in mov pop sub mov xchg aam mov mov nop sub sub out mov jno add outsb (bad) out out sub push mov lcall jns scas out cwtl jle jns iret imul subb mov push dec or mov xchg lds push push fldcw and mov add xchg clc and push or movsl pop fistpll sub les dec and xor mov dec ja,pt add pop jg std push sub xchg jns (bad) dec or mov nop test imul jl inc mov popa add rcll jae push adc ss lds adc lret xchg mov add push pop pop pushf cld sahf (bad) mov lahf jg (bad) inc not mov aaa and cmpsb mov push ja push push mov or std daa push or fnstcw pop jmp fdivrl rcr popa xchg add xchg dec mov aad push (bad) ja pop lods add cwtl xor ds andl call popf pop cltd bnd lds (bad) push call cmpsl cld dec je rcrl push push (bad) mov add cmp or pop lock bnd mov add aad cmp cmc xor test xchg pop das inc cltd popa jne leave and add (bad) xchg sti jge pop pop std test in insl add repnz and cmp xchg xchg stc inc and lcall addl cmp cmp mov leave cmpl mov and sbb js dec pop sbb jg jbe call push mov mov and les adc in push aas shl mov jnp push add fwait jg and jae cs jmp pop in lock xor lret jle mov jmp xchg and mov movsb pushl flds sub dec jge push popf shll push xchg ret xchg repz push pop inc adc push xor addr16 add xchg push sti adc add aas add fildl idivl fiaddl fs fbstp test into jmp mull jae pop (bad) or xchg int3 dec mov xchg scas xor push pop push pop pop clc xchg push lea test push mov add aas leave pop ja push or sti dec jne and pop aad fcoms sbb bound test scas mov test rol pop jae push out out push sbb mov pop sub enter fwait nop adc shrb das cmpsb jecxz fnstenv aad leave mov cmp cmpsb add pop decl icebp inc std outsl xor mov movsb loopne sti into incb mov shr pop jl add leave aas ja add out mov pop mov push pusha mov mov sub (bad) nop inc loopne sub mov sbbb insb add inc jmp icebp enter add mov subb pop mov movsl icebp and jg daa jle sub dec xor pop setbe push push push outsl pop pop (bad) adc jbe or das inc negl pop mov mov xchg push adc xor jle pop xchg fprem1 mov mov adc stos add push int3 pop call shl add push add or mov push lcall mov mov inc dec test test das divb pop nop mov add das scas push or add and aas inc ja pop mov adc xchg jl dec arpl stc push shll fistpll jg and in cmp cmp out fiaddl aad and jne repnz cld lret ret fs cmp mov or mov test sub imul cld xor insb and gs es inc icebp cmp jge push sbb movsb js sub out cmp ljmp add out and pop repz adc daa fsincos and jb daa and dec xchg out and aas inc shl xor xchg sub (bad) pop jp lret xchg lods int3 cli addr16 daa push leave rclb pop cltd inc mov aas outsw dec aad add xchg loope sbb popa and add mov and add cli pop ror xor sbb inc lock sbb in pop sub dec inc jns aad or popf dec pop mov sub add xchg sbb jno pop data16 dec cmp mov mov mov xchg mov sbb jle cmpsb addr16 mov cmpsl fildl mov cmp pop xor adc cli aad fsubs dec jne adc push test ja dec dec ljmp pop iret push test fistp orb xchg test and mov sbb push movsb add clc (bad) in mov mov lcall rclb pusha mov lds and subb jg push xchg cmc adc add pop loop mov xor jns xchg outsb in mov push pop fdivrl ja jle int daa cmpsl pop dec dec xor add dec shr push or xor add cmp lock jns dec std mov out and decl mov (bad) pop js mov shrb add scas gs int sub loop mov cwtl repz les test xchg or dec cmpsl (bad) push lret push in push loopne mov mov jmp push orb pop xchg fimull ja popa add dec xchg jo test lods cltd pop push xor inc pop popa inc pop inc mov (bad) mov fwait and add not repz fimul cmp xchg mov call mov (bad) rcrl dec and imulb mov sub adc stos xor mov add mov sbb push fldl push xchg pop xchg cmpsb xorb or idivl xor adc dec std xor in (bad) testb xor rclb push or pop push sbb push mov and push jo arpl clc inc outsl inc add push mov pop repnz sub add sbb cli daa push xchg out xorb pushf push adc add dec dec cmp inc pop xchg decb xchg push add xchg sub adc call push out lcall icebp (bad) (bad) cs sbb fisubrl cmc cli jmp add (bad) jbe into sti (bad) mov loop divb jmp fnstenv bnd fildll (bad) xchg push mov pop and push xorl mov cmp push sub add shrl ficomp add clc sub pop sbbb ljmp (bad) pop outsb xor push inc outsl add pusha inc xchg add xchg inc push rcl insb es cld outsl aaa cltd pop cmp (bad) cli push loopne and and sti and sbb enter in rcll lods jns insb imul sub imul mov in pop xor add jnp and orl sbb addb pop call or adc jne leave jns ret (bad) cmpsl cld mov add or popf jno leave std mov pushf mov dec jg jo lds cmp jl repz or sub shrl or paddb sbb jmp jno push pop push (bad) sbb pop loop shll jns hlt ja push loop inc aam int3 jbe mov xchg push and insl add mov stc push xchg out mov sbb mov iret stc cmp movsl push or mov xchg adc lods add in xor fxch ja xchg jge xchg pop jle scas or jmp outsl loop mov jl ljmp pop outsl sbb stc jl add imul jg add inc sar add movsb loope inc mov pop add push clc cmp pop cli jne ds movl and mov cld scas rcll mov mov inc xchg or push sbb xor or (bad) aaa leave dec pushf mov xorl mov push xor in xchg (bad) cs (bad) pop es add pop movl (bad) fidivrl dec imul sbbw out aas and lds arpl (bad) or jg inc jg mov fldt idivl mov clc push add sub xchg (bad) inc dec scas pop push sub (bad) pop je push mov shll orb cmpsb arpl (bad) gs dec rcll pop clc js push add dec lods bound scas sub mov test imul aaa push xchg mov xchg shl mov call outsb jnp test lcall mov frstor push xlat sub insb dec xorl sub mov pop fdivrs dec and cmp xchg inc xor test pop xor pop xor or dec cltd test lea pop addr16 outsb (bad) popa dec pop scas jmp shr mov pop leave xchg sbb mov or mov mov fwait add pusha cli stc lcall mov cmp pop pop lock xchg pop aaa mov inc shlb dec xchg fs leave xor dec push mov into dec cwtl sub sar xchg loop dec movsl xor sub pop clc or mov jnp jp (bad) cmc insl mov push gs insb shr push mov fnsave mov cld test cwtl daa and push or (bad) and cmp cmp push fstpl xchg cli jg or in lcall loope jg lods push dec mov pop jnp repnz (bad) sti repnz fstpl cmpsb pop les inc rep pop orl jnp xor inc lea insl and mov add bound (bad) dec daa xor or nop xlat aas sbb gs pop ret sbb push sub dec xchg (bad) pop repz test dec mov inc mov push add mov xchg mov or adc and jp adc push mov jp and ja jb in adc and mov mov das mov adcb jne repz and push adc mov push dec insb or jbe daa xor rcll imul xchg jae mov or pop add cmpl je jb aaa cmpsl je imul sub in mov adc fstpt fnstenv or loope push pusha jne aas sbb (bad) mov in insb inc sub mov mov imul xlat xchg mov cmpsb rcrb mov inc pop pushf insl int3 or lcall mov push mov adc clc sub or cmp test dec and sub ret or adc cmpsl (bad) dec shl or pop (bad) ljmp add in adc mov test movsb pop mov add adc (bad) mov out pop cmp xchg mov aaa js pusha ret aas and sbb pop mov inc dec movsb aad mov jp dec cmpsb dec int daa fcompl dec imul jle add stc mov dec roll add aam sub mov jl push push pop jmp rcll and fdivr jmp lock sub enter fdivr add int3 xchg push mov jecxz add icebp test sub repnz add add push or adc adc popa mov mov test or (bad) mov leave cmc add push add mov out jge lahf xchg pop mov jno dec or adc movsb xchg dec push gs stos ret mov ljmp mov ja and jle jae icebp sbb mov or out cli mov loope add and int3 pusha mov pop sub pop fs push aas cmpsl dec dec mov mov add mov movb push jmp sub jge in add jecxz or and pop push lahf insb ds movswl xchg jb,pn push sbbl (bad) mov push cmp mov pop add and cmc sub lret mov lret jns (bad) adc cmp inc mov outsb ljmp dec lret or addl test xchg in dec xor cmc jmp cmp inc mov loope cmpl cmp pop sub pop (bad) mov add cs call cltd outsl jl neg pop xchg call xchg jg int push (bad) pop xchg mov add sub cmp dec push or test sbb jg adc ljmp or jge xor add pop sub sub ret repnz dec adc pop (bad) (bad) or adc push ljmp fnstsw xor mov aad add and leave out fnstenv sar js cwtl push cli mov ficompl (bad) dec add pop bound add call (bad) or and adc cmpsl imul (bad) push mov jmp dec in push cwtl dec fsts ss mov dec movq ja (bad) dec jecxz scas (bad) js mov call cli push jle cmpl mov fisttp jne rcrb mov (bad) xor stos pop mulb push jmp inc add cmp mov xor jle lret outsl dec xchg cmp xor ret adc jecxz cld sub push ja inc push js pushf jp or and int cmp add sub push jg out inc pop xchg fdivl push aam add jecxz mov lock pop adc dec cmp in dec mov sub add fisubl addr16 cli dec stos mov es push cmpsb jl lods jo (bad) fisttpl scas fadds clc in xchg (bad) mov das pop gs jb jnp daa pop mov fisub and dec cltd data16 clc cmpsb fstps in inc mov cmp push cwtl es sbbl mov (bad) cmp inc out lods js mov add mov in enter pop stc cmpsb rclb jmp inc pop jecxz dec push lds add push (bad) jge add rorl fisub test fisubl cmp pop mov dec or inc mov fwait mov and repnz pop push lcall add cmp add out pusha faddl sbb enter (bad) int3 in mov pop mov pop and adc xor xchg dec mov popa or pop sub push add and inc shll pop cmove mov push shr adc iret and mov in or enter add adc ret lock add xchg jg xor lods arpl imul nop fnsave cmp shrl and sbb int3 out xchg sbb not sub jecxz add cld lret mov adc jp adc pop adc pop (bad) lcall cwtl leave jmp add aad cmp or mov or out jle cmc ja incl mov or mov (bad) loopne (bad) jl cmp push adc jl data16 dec push inc scas ret bnd mov jg push dec enter rol sub xor adc dec mov sub ret imul sub xchg and jl mov sbb or jmp arpl adc push mov mov jmp mov push cmpsb and pop ss pop add dec outsl (bad) aas inc mov movsl jge out adc scas (bad) sbb popa jns daa inc adc shrl mov add jle (bad) out pop ljmp jnp xchg and mov or push fisubl xlat das push add and add mov fistpll ljmp dec push pop pop sbb pop jae mov inc jge (bad) dec sahf aas xchg scas add popa push ljmp dec pusha shrl sub inc lcall push fldenv sub insl imull rcrb cli and orb and daa adc add cmpsb lret sbb sub xor in es rolb mov outsb add dec arpl inc sar and in adc cmp fnstsw xchg pushf dec lods jle jns ds add hlt in sbb inc pop pop dec push bound rdmsr mov jmp lods push push iret cltd jb fcomp mov sti stos (bad) lds data16 jge (bad) push push push cltd mov sub xor lcall jns sub inc push push ja jnp or ja scas and imul jo jmp das adc sbb mov popa outsl or adc jp cmp inc scas adc sbb aaa add or repnz adc movsb pop add ljmp pop push inc push (bad) fist sub icebp stos pcmpeqb pop jno leave push ret pop push push pop push mov (bad) jbe mov sbb xchg lret sub push mov aaa add out repnz (bad) (bad) mov jmp (bad) push popf xlat xchg push pop cmp rolb fcomp mov mov jmp add data16 mov (bad) adc sub pop (bad) mov arpl add lret jae repz mov jnp xor jmp add jg fcomps cld xchg jae mov pop jmp sub out test dec add fs dec add ror cmp test mov cltd add cmp je adc sbb sub mov pop fcoml cmp push xchg adc into pop (bad) pop and xchg aam jl ret outsl pop ret ljmp mov mov xchg xchg or neg dec xor inc push scas (bad) cwtl dec xor push mov xchg inc inc ja repz or addr16 enter out add (bad) sub xchg cmp jb cmpsb imul and pslld nop xchg xchg mov jns test add in jns sub pop mov jmp push jmp ficom adc (bad) mov sub cltd adc pop in (bad) test lret aam xchg xor lahf call aad repnz sahf popf dec and jns ja xchg pop cli (bad) cli popf and xor xchg inc pop insb jae push xchg sahf and cwtl lret imul sub sbb mov imulb push movb or and jmp push cmp and ljmp ret sub shll sub add out daa push xlat lds movsl aad dec loop loopne add mov decb cmp add (bad) push sub or jae rclb add pop int mov add lock in ret sbb sub and push pop adc out test jno pop inc push adc dec sti dec add cmc rorl sbb lahf pushf jb add mov icebp ja cwtl test add adc cmc add mov mov mov cmc mov push into scas lods xor xchg jp xchg imul push adc repnz inc inc test (bad) pop pop jmp int3 shll (bad) popf sbb jecxz jne lret rorl out cmpsl cmpsb mov mov iret xor test xchg add mov popf shll add push push (bad) jnp cmp pop stos fsub add jo or add dec jp incb dec xchg addr16 inc popf xchg xor imul in daa xchg cli jno dec add cld pop mov sbb adc sub inc sbbl lahf daa pop xchg or jne or mov pusha movsb inc jge sbb lea popf (bad) mov inc jne xor (bad) sbb xchg and outsb fs add sub icebp xor lret call sti and mov movsb sbb jle dec sbb cmp jno out pop out cmp sub out sbb inc pop divl push add out out mov bound out cmp hlt cmpb in out xchg xrelease mov fbstp ljmp dec jne fcom xor inc in outsl cmp cmp stc add (bad) dec mov inc add dec add adc mov movb imul xor mov jmp aam int3 rcrb add mov pop ds dec mov xor jl roll pop xchg sub jg dec imul sub dec cmp add adc arpl sub aad mov dec jns jno adc add xor mov in or ret popf xor vmovaps stos fcmovnbe dec push fwait sbb dec (bad) (bad) or sbbl adc add xchg cmp fcomps push add cli and lret pusha inc or inc ror and mov lcall stos jge xor cltd (bad) int or sbb add cltd dec or xor hlt jg adc je orb fisttp icebp mov cmp or jge jg jnp mov push out je xor lods and mov inc xchg jbe arpl add icebp sub sbb dec cltd pop iret mov shlb push adc repnz jg roll dec das dec jno push jns add xor test sub mov loope cwtl in pop xchg lods mov push arpl jmp dec (bad) cwtl neg add outsb ljmp dec ret sbb mov sub jmp add pop pusha (bad) xchg jl and push scas xchg leave xchg push xor test mov jb mov dec lret push insb and adc dec cmc int3 je add inc sub movb xor pop sub and popf jns jne mov insb xor adc push mov in pop rorl sarb adc es std rol push adc ja and add bound mov add in or je enter pushf and pop push dec mov mov xchg add (bad) cwtl or cmp jnp pop cmpb fmuls loop jg,pt negl addl sti pop (bad) mov orl add sbb int int3 jnp mov movsb js dec adc and mov pop cmp and jle mov scas int3 and stc adc orb add xchg mov daa adc mov lcall jge adc movsl test cli icebp add mov jbe add mov incb add shrl addb sub mov fiadd pcmpgtb adc push pop xorb imul inc push jo mov push sub enter lock inc add int outsb popf out mov imul dec fs xor push cmp shl add mov aaa and or add cmp and fwait push xchg jns ja andl adc pop stc push push mov sbbb xor adc sub adc in pop leave jne xor mov add flds rorb ret sbb cmc or xchg xchg mov xchg mov jns fwait aaa cmpsl icebp in outsb add cmc inc in mov mov cmp jp jl fcmovnu add lds push sbb xor repz cs adc adc (bad) or (bad) jmp pop shll push aad fldcw dec xchg push add cmc mov add cmp out push mov adc loop and xchg in fild jb and lds mov sub pusha inc push add fnop imul insb dec add cmp mov mov repz xchg cmp inc lods add add daa in idiv or aaa sti sub add add lds enter push xor sbb sbb add mov add movsl cmpl xor or fmul sbb lahf cmpsb add adc jnp aam jmp ljmp mov cs fild dec bound icebp rolb xchg outsl jle mov clc fadds and add push insb inc sbb mov mov popf imul cmp stc (bad) sub xor bound xor sub xor pop cs jnp imul xor push mov pop pop add xchg xchg cmp jno cld and (bad) add sub es enter xchg or mov les les pushf jb dec out clc cs mov dec cmp movl and mov xor jne mov or cmpsl fs adc icebp jns rorb xchg push or adc lock xor add (bad) fs sarb xchg jns cltd sbb add dec movsb (bad) lock inc repz lds cmp push sub dec lds jl add dec cmp out jns jns inc fs (bad) sub aas clc sbb repz mov fs loopne rcll shll jae std cwtl add test mov jle add mov andb or movsl cmc ret pop pusha enter lcall xor sbb sub out fistp out push les push push (bad) cli dec dec inc pop sbb fsts add jns cli pusha pop and add and jo pop mov loope insb mov inc clc dec and push add mul add mov and sahf andl or in cmpsb push jp xor cwtl add xor add repz sbb out shrb and cs mov fnstsw adc sbb add cmc add call aaa mov stos lock or sbb jae xor add lahf mov loope adc out dec movsb lcall arpl ss loopne (bad) jb divb fstps add pop inc push roll fiadd pop dec es mov iret mov and push inc stos sbb fs (bad) and sub dec mov fisub cmp jns xlat fstps dec push xor add and xchg push dec outsl mov test lret add add data16 or push mov mov scas mov fidivl mov je mov jmp jno add jp jo rorl mov dec mov cld aad pop sarb fildll inc xchg nop jo pop mov out push roll mov and push jb pop cmp das adc insl bound dec faddl stos lods pop adc (bad) js test add out rol les and mov lods pop int bound push pop cmp jle jmp mov add dec cwtl push ljmp mov dec dec test mov push mov jb add out mov pop or je and pop sbb mov sbb inc adc mov movl mov jl mov push push mov pop jmp pop push clc mov pop xlat mov (bad) aas mov mov cmpb sub inc fs ficom mov sbb cltd push pusha inc mov cmpsb aam fwait scas cmp roll mov icebp sub (bad) adc xor push xor mov in testb add loopne into add test cmp cmp lods or aad inc hlt add or mov mov push (bad) repnz call das repz and cmpsb jne or fistpll inc stos popf jns dec cs std sbb test hlt jnp inc mov add aaa jne lods hlt cmp pusha mov dec mov mov mov adcl cmp jmp or lds or xchg xor cli cmp pop loopne test stos or dec dec jne cmpsl in mov mov mov pop std xor lock xchg stos xor outsl gs mov mov pop ljmp subl (bad) mov arpl outsb mov js jb lcall cltd iret xchg xor add repnz movsb (bad) xchg pop dec push sbb cmp adc xor inc mov bound (bad) cmp data16 icebp push sbb cmpsl lahf je fdivs xor dec pop xor dec mov and icebp fstpt mov push mov orb jb adc ljmp xchg xchg in (bad) lahf xchg lret add add aas mov aas push enter stos jo adcb jmp cmpsl add mov in sbb bound fstpl in mov and add and push xor std and adc xchg (bad) mov fisttpll lcall aad int3 add lahf aam int3 mov bswap sbb inc pop and sarb mov lds jbe cltd (bad) je and dec divps push data16 lods pop imul mov inc mulb stos xchg int3 sub jge sbb inc mov push xor and sub xor xor adc xor sbb sub sbb xchg jnp inc add int add inc push or mov jmp add push in jecxz push outsl insb and cmp frstor subb sbb (bad) repz mov and mov test jmp lret jns daa out add and and outsb inc xlat dec adc mov push dec cwtl int3 inc push shrl fiadd and xchg shll sbb imul inc push inc xor aad adc mov lret sub lock lret loopne mov mov mov add sub jne into jecxz out sub fdivrs add adc dec jmp sub or cmp sahf out cmp stc stos rcl pushf add sub mov (bad) jge (bad) fadds pop and mov lahf icebp imulb cmp inc dec fcmovnbe cmp incl mov or and mov xor cmpsl fnstcw and pop lds pop fs xchg test and mov hlt movsl aam pop loopne mov mov imul jl insb inc inc push xor jns or jg dec jnp addb stc iret rcrb (bad) cmc mov pusha pop insb (bad) aaa push mov add (bad) xchg cmpsl insb cmp repz inc jecxz dec xchg dec fldl cmc add mov (bad) mov cmovno sub pop push dec pop out cmp jecxz add movsl jnp lea sbb adc mov scas push pop dec adc pushl jl sub push add mov jge add daa or jbe add xlat push dec sub stos xor aad outsb cmc insl fstl jno lcall inc or jo and jo dec add negl and lock popf (bad) push push and xchg add dec add pop add je sub pop cmp adc rorb push leave nop pop jg sub into add cmc cld adc cmp ret addr16 fwait daa sub loopne ds std jae int xor loopne in sbb flds in sarb arpl mov mov in xorb ss mov inc cmp dec or push mov sub mov sub lods lret jge cmp sbbb fstl icebp andb pop mov cmp pop pusha sub inc cmp pop add mov rorl movsb add or pop sahf mov rcrb add push std cmpsl test and xchg jae lcall jo jp push push (bad) sahf orl pop add xor mov ds push nop movsl popa pop xor add mov mov fsubrs xchg insb cmc cs addb (bad) cmpsl fild dec scas rcll (bad) sub dec sbb and xor ja shll cmp scas sbbb fnstsw pop rorl or fisubl in xor add inc dec stos add (bad) or mov pop ljmp popa outsb sub mov jmp lcall movsl xchg ffreep sub xchg ss or pop or roll cmp outsb inc stos xor imul cmp test outsl popa mov fldenv orl or sub add pusha sbb pusha adcb mov iret push mov into push fbld adc or scas push jae add pop fsubl subl add jge loop xchg jns xchg dec repz dec sub sub cs nop (bad) in adc dec pop mov (bad) pop and sbb add lret outsb pusha test cmp ss in enter jno sub scas jmp xor push jnp push orl (bad) mov test push sbb test sahf pop or in in popa sbb cmpsb roll aas or cwtl jo add pop outsl fldl and es sub push aaa paddw mov add xchg mov jnp mov or addl arpl xlat or sbb mov or add test cli push inc xchg (bad) hlt xor and dec loop add cvtpi2ps cmpsb out lock add sbb or leave mov or pop stos test sub sbb mov or mov adc pusha aad nop repz cmp or mov cld add rorl sbb fucom ret scas xor dec inc es test push push jo dec int ljmp ror inc push (bad) mov cmpsb xchg jns mov and jb int3 cmpsb xchg dec (bad) fst (bad) or mov jb push jle,pn insb cmpsl je push lods push add addr16 dec cwtl or rcrb ret loop subl jnp xor mov pop arpl ficoml ss insl push sarb jecxz fwait jmp repz mov jne mov subb fwait sbb repnz ss sub adc push mov sub jo xchg clc cwtl add out adc loop cltd mov jno adc stos out or jge mov subl arpl or jl ret lods pusha movsb sbb mov add into and fs lods orb jno push sbb nop scas adc rolb popf sub push or push mov or inc mov jbe (bad) gs and xor jb movsb clc and cmpsb adc lahf (bad) xor jecxz ja outsl dec dec cmp pop pop dec inc fwait push fnstenv mov add sub roll mov pop orl push mov pusha mov add inc je lods dec push xlat and mulb adcl and out gs lods push add jl ss cld cli add mov mov pop push rcll loopne xlat daa cmc mov xchg xor notb jbe sub xchg jae cmp xchg xor jmp jle nop aaa ljmp fnstcw cmp push mov add cld stos clc (bad) cmp int mov sub hlt adc xor ret icebp (bad) push xchg and jae (bad) notl imul push jb push push sbb or mov (bad) and leave icebp insl leave std sbb xchg cmp call jmp and sbb outsl mov mov mov rcr inc lock int3 or rorl loop xorb jge subb or sub ss inc push cmp (bad) xchg or mov outsb cmp push or mov (bad) pushf cmp mov scas push std sub popa imul push push xchg in imulb repz add flds call repz das gs cli mov push movsb int3 jo pop adc dec pop cmp mov std sbb xor aas mov pop dec pop in in cwtl repnz add test mov push je lahf dec sub mov mov pop ljmp mov nop pop clc add or or push fadds dec sbb cmp push addb in dec xlat mov dec icebp iret xor jne pusha and ljmp sarl mov test (bad) aas clc adc fwait test (bad) jb push cmp loopne into xor xchg fs pop std subb adc test insb (bad) add push into sub add pop sbbl aas mov xchg add pop cmpsl and add ficomp adc jae mov adc mov push xor je add pusha cmp xchg scas int3 and jl mov and out out cmp mov aaa pushf jge xchg and adc clc add aam mov push push push push cltd js pop fcomps rorb jno push in push xlat push daa call (bad) es cmp pop mov mov xchg adc dec addl xchg cmp (bad) repnz and loopne pop (bad) jb sub aam mov pop inc (bad) (bad) loop loope push jns (bad) lret loop pop jg aaa mov or or loop iret cmp add cwtl and add jns lret cli dec adc mov sti mov push cmp inc sbb lods pop mov inc or xchg roll ss in (bad) adc aaa and out add pushf cmp aas jno les ljmp (bad) sub cmpsb add xor push mov fisub jg lahf call jg scas inc dec push test mov pop in mov jbe call mov and cmpsl cmc adc stc ret in inc xchg add mov xchg nop (bad) rcrb and sub sbb push add popa and inc into mov jecxz adc add push xchg out iret sbb mov xchg pop or das mull lret jp sbb or dec punpckhdq add jle pop dec push lods mov sbb dec pop ds xor iret clc das push js into xchg lods test add rclb mov decl push adc ror cwtl add mov rcrl cld adcb (bad) cmp (bad) roll insb stos dec push js pop jo jmpw sbbb dec cltd xor pop call xchg iret dec loopne push outsb jle inc dec pop rolb push jge mov xchg xchg xor out fsubrl mov mov cmp dec int3 roll sub (bad) stc cmp test or aaa mov inc adc in or mov xchg jge cld xchg or push ss or sub xchg data16 jns xchg dec loop dec inc outsb idiv and pop repz or cmp or and icebp ljmp pop fnsave dec xor cs dec adc cmp xor inc jle jnp sbb les dec pop fisubr and out cmp push cwtl or bound mov fdivrl pusha xchg xchg js add std sbb push divl pop fcmove xchg iret hlt sub enter or xchg sbb data16 xor lcall push mov pop insb (bad) xor inc mov sbb (bad) inc mov pusha mov jge cmpsl add push jo mov pop sub jae,pt inc push insl mov imul test dec sub aad cmp insl or int3 stos daa inc xchg rolb jnp daa loope mov stc sbb and xchg mov mov or cli ds lock pop mov and add adc in push pop aaa add shlb lock iret pusha xor add cmp push pop cs cmp flds and xor dec inc loop jle add je and xor insb pop mov xlat jge lock lahf je in daa test sbb lret mov jge and paddb xor adc push sbb popf mov loopne mov mov jecxz mov jg pop xor or lods push dec cmpsb clc test xchg push aam imul out lret and in in and cmp (bad) mov in mov mov xchg ret adc andb adc add xlat add and xchg fwait cwtl inc mov xchg xchg popa sub sub xchg loopne in std clc adc push rorb sahf or push or clc fmuls test mov int or addr16 gs xlat add mov leave or int daa sub pop pop xchg and movsl or pop sub and jbe mov and (bad) mov sub arpl sbb lcall jmp dec add add mov push jmp pop jo add out and and cmp into incb aas sub popa lock push mov popf div inc add outsl and (bad) out lock lods adc cli cs mov pop fsubrs mov in pop insb cmpsb or sub lret cld push lock xchg movsb mov cltd mov les cmpsb mov fnstsw leave lods js fistpll shr and mov inc xchg cmp shlb lahf mov mov (bad) ja jl ret loop jg and out cmpsb dec pop test lods push or add xor bnd or or dec add lock pop les jbe in dec test hlt stos lret fcoms clc addr16 push roll add push push imul test sahf movsb or push or adc add pop pop dec (bad) call jg push or cmp popa jg dec add jne aas cmc (bad) fcompl push mov cwtl int fs call sbb or dec scas push (bad) jmp mov jge int3 fildll popf (bad) jge lret jmp bound stc jnp jecxz neg xlat sti push lock mov adc decb fcompl test pop scas repz adc pop mov sub jns iret jg xchg jae add jg mov mov push into pop xchg xchg shrb push dec pop jmp jnp stos adc repnz test cmp add inc add mov pushf cmpsl mov popa mov iret dec push test (bad) pushf pop mov test fcmovu mov sub pusha push mov jge rolb in hlt sub jnp sbb xor mov (bad) bound out add mov fcomip push and rcrb push and icebp jmp lea pop scas cs sub and scas cmp or or das out and mov je stc mov arpl inc (bad) or std pusha test and jne add ss loop pop or push xor pop inc add add adc popa xchg jns or imul mov pushf push dec mov call and mov xorb push dec movsb cmp aas lahf pop mov ja jg push mov add adc pushf push out sub push xchg pusha xchg rcrl adc imul dec pop mov inc mov out shrb cmpsb xor repnz xchg daa lahf pop add push push fs sbb addb mov adc sti xor or out dec mov xor es repz popa push das sub (bad) and jg call daa sub cmove mov jg fmulp push subb ficompl dec stc shrb daa or sbb sub dec pop mov dec dec mov add cld test sub sub add sti das inc sub dec and fistl aad cmp pop movsb jmp dec mov mov lret ss dec cld movb (bad) and neg mov cmp add pop sub mov cmp movl outsb mov pop dec sar (bad) (bad) lahf pop dec xorl push mov inc pusha jl pop fistp repz inc xchg popf jnp add fimul test test add push inc aas mov adc bound nop dec xor xor movsl sarl cmp jmp jg rorl xor cld hlt xor and jp iret mov mov jg,pn add fadds xor add xchg jnp outsl mov mov inc lods mov add repnz cs mov mov int or pop lret mov adc mov push push dec or pop mov adc push sbbl xchg mov pop pop lret sub push push daa pop pop adc addl pop dec and and dec push movsl xchg stc inc dec imul add and cmp dec inc xor jl cli jle pop popf pop mov (bad) into pop stos mov (bad) pop (bad) lods or mov pop adc loop ljmp imul sti pop jecxz,pn mov movsl pop and mov xchg gs sub mov pop adc fdiv jmp inc push pusha test mov inc pop addl xchg out iret add xchg roll popa stos pop xchg fildll or in dec mov popa jecxz fildll in pop adc lds test mov or xchg mov sub xchg (bad) pop fnstcw xchg or inc xchg out pop xchg sti (bad) mov add out dec jnp add or jb (bad) sahf adc les (bad) test aad push in lret mov push fidivl cmc scas mov jne sub pop jmp lcall sub bnd push mov mov cmp mov or push adcb sarb add dec push outsl imul xor lock add ss (bad) leave and test pop std fwait xlat lods sbb sahf add sub pop fldcw xchg push sub shlb cmp add ja test icebp int3 or xorl xlat cwtl mov jno dec clc or push jp stos (bad) mov and stos mov mov (bad) mov dec imul jp fsts pop clc jge ja fwait mov daa xlat aas fstpl scas jg ja mov jnp add repz inc rcr xchg inc mov jecxz add dec popa and xchg out jg dec push jmp dec add cmpsl sbb roll das cmpsb pop xchg out pushf push addl push lods jl mov cs mov dec cld pop out add cmp (bad) addr16 cmpsb xor enter dec push pop popl rcrl je and add push js push or cmp jg (bad) sub sbb stos movsl pop push js cmp movsb push in push dec inc add loop dec stos push inc ljmp iret cmc xchg stos fdivrs lods add sub sub xchg scas fidivrl ja add jg and mov loopne add dec pop mov dec lods jle les cli imull xchg mov repz (bad) fnstsw repnz gs cltd dec inc ret inc jp arpl jo sub (bad) pop push jle (bad) test lret iret dec pop adc jge mov add js sbb jp push in rorl dec pushf mov out cmp fldenv xchg pop sbb push xor ss push mov jmp ret nop jle mov adc xor add daa push inc cmp or sti push ljmp mov mov subb dec in lahf icebp push mov inc stc movsb jg mov and add out push addl xchg jmp pop dec stos movsl push cltd add (bad) iret and test data16 add shr xor and push xchg cmpsb repnz stc in and mov into sub fild or jecxz mov xor cmpsb aam pushf push sbb push push push xor mov mov fistp pop setbe pop popf and lds xchg mov mov loopne xor cmp jecxz add mov dec mov push popa push sarl push popa jno xchg icebp sub cld adc xor inc fist adc ret add add ret mov inc cmc sahf sub jbe or stc xchg in test mov mov add jns movsb loop pop mov dec faddl push push pop pop jmp or xor jg mov out adcl pop shll or sbb xor and rcll cwtl (bad) int3 sub mov ja sub push or iret or lea xchg jnp push pop cmp fistpll add jle outsb xor xor inc aas jmp pop mov loope icebp jnp ljmp pop daa xchg pop in enter or out cwtl sti in (bad) sub aas rclb cmc daa dec jmp and fidiv stos pop out test mov dec sti jge insb mov outsl xchg cli push or cmc mov dec jmp dec jg or fiaddl dec repnz ret jmp sahf cld std pop pop mov je and adc add pop push lret rcrl mov lods and inc push mov (bad) mov sub ret sub push sbb add push add jmp add and jge test int cmpsl rcrl in push fs or jmp fstps jp or cld add imul inc dec adc test xchg imul shr subb ror inc jmp ficomp (bad) cmpsl push mov push xor and pop incl enter dec inc mov jae jne sub pop loope ret sub xchg fcmovbe decl xor addr16 or popl xchg mov inc push pop xor and stos mov pop pcmpeqw not push test dec hlt sub cmpb (bad) dec mov fdiv dec (bad) pop mov sbb push mov adc (bad) loopne jne pop mov shrl lods xchg push outsl movsb jb dec or mov lea jmp jl popf dec mov int fwait dec fldl add push data16 rolb sub sbb fistl adc lret add push push cmp je cs repz lahf jno dec push add sti jg inc testb pop shlb ret jbe (bad) cmp inc daa mov lds jb dec in push push add fsts into or add not dec push cmp push std mov sub cmc lret pop cmpsb out pop out sub ja imul (bad) dec dec scas push stos or enter push fcomps add push mov ds insb fbstp mov leave mov (bad) mov cli pop mov iret ljmp sbb xchg clc sub pop xor sub sbb js pop xchg cmp aam sub or add (bad) (bad) iret es mov xchg inc dec std jae aam outsl cmp cwtl outsb push add addr16 repnz cmpsb and repnz idivl (bad) push pusha (bad) jg sti out in and sbb push push pushf push pop ja xchg rcl jmp jg dec data16 jnp jge pop in (bad) leave or rol xchg pushf cmp test push sub sub nop js jp cmp dec ss sti xor jmp aad int add pop (bad) mov push push dec pop mov mov (bad) push cmpsl adc sub jmp ret aam inc sub orl adc aaa and pop adc adc popf orl dec push cs push jns add mov dec repz mov cmpsl and mov popf dec xor inc jo jp aas loope add cmp daa (bad) sarl (bad) int (bad) mov pop add (bad) ss fldcw aas fsubrp add lret fisttpl daa or enter adc movsb sbb pop sub cmp andl or sub push cmp ret in dec insb call inc add pop mov mov add and jns mov pop inc (bad) int3 pushf inc xchg imul ret and inc push ret add jo adc dec sbb push movl push popa pop ret enter inc sbb push ret ds add or pusha mov jle inc mov mov adc dec dec popa xchg out inc sub mov fs push test adc dec push mov pop ret adc inc push ret out mov loopne mov mov adc es sub aas sbb push bound pop jb sub push ret mov xor xchg mov das nop je xchg adc pop add and loopne insb clc js test cmp cli adcl add jle incb into popf dec stc lahf mov shlb incl stos jmp paddsb js cmp insb arpl or leave mov add lock stc jge orl mov cmc jg pop in pop enter jbe stc imul and (bad) call shll add xchg mov aad pop inc mov adc cmc sub fadds je jno rcrb push pop inc or bound or (bad) cmc stos add push rclb mov ud2 pop sti push push lahf sarb jnp inc (bad) dec dec roll fimull mov mov xorb je adc nop add xor inc fcmove stos hlt mov add lahf jg add cmpsl push sub and pop fmull popa enter aad cwtl add callw pop sbb pop or stos (bad) jno sbb psrad pop mov test pop xor cwtl cmpsl popa pop sbb addr16 adc sub add popf adc imul add aaa push pop cmp add pop add push rol mull stos mov addl loopne pop cli iret mov addb jg int push push clc or mov aam (bad) imul cmp inc jge lea add cmpsl mov mov dec mov test daa mov scas jno movsb dec sbb add mov dec push xchg push (bad) inc fadds enter adc movsb enter js cwtl push xchg inc shlb sub movsb mov enter add mov fistl in ljmp and pop inc cmp xor add sub pop nop adc dec dec movsb subb mov arpl shr adc cmpsl mov fnsave dec loopne push sbb add mov mov push mov add lcall inc ja stos (bad) outsb or ss inc lea pop adc jns pushf addb or adc rolb imul int ss cmp and and xchg arpl fild enter sbb pop shrb stos sbb popa test enter add sbb fimul int3 add and (bad) sub or (bad) orl mov repnz pop lahf push rcrb xor pop cwtl and out pop cltd test daa or addr16 andl shrl pop andb popf dec pusha xchg mov pop gs cmp push and push jl pop pmulhuw rclb jbe cmp pop sbb and inc pop or lret popf add mov and pusha pop cmpl fidivl add push aam out add (bad) andl pop into fbstp inc and aas cltd and lea int shrb jne sub enter js (bad) lock pusha rolb fstps inc rcr stos add out inc jno push cltd addr16 pop mov pushf add jae dec jns add cmp dec mov fdivr pop lock imul fs add xor mov pcmpgtw jge shll xchg lock into es jns mov hlt scas xchg enter and js push dec andb sub mov adc adc xorb jno pusha pop fucom push pop jnp or sub pop and xor movsl inc cmp fs cld mov xchg xchg dec and js,pn dec pop icebp dec xchg push es jo cltd add jnp cmp push sub mov aam pop test adc inc mov cmp add mov push orb dec or scas sbb sbb xorl fadds cmp add (bad) clc pusha js jno and ljmp xchg add mov (bad) dec imul add rolb fsts xor jne sbb orb mov push in mov lods nop sub repnz push int3 xor add jmp xchg inc mov pop jns lock in mov cltd sbb add mov jb xchg pop jmp sbb bnd ja dec dec orb stc or test je add (bad) xor or bnd mov aaa jle repnz nop dec jl cwtl jae ret mov dec hlt add or adc lahf scas jmp adc test ss xchg mov jae lock cwtl sub add mov or mov leave dec dec mov (bad) mov and rcrl mov push push add jb shll or inc pop mov add fmul mov push test outsl sar fadds dec jnp add (bad) pop js sub sbb ss mov dec cs (bad) sub test cli xchg out jae cld xor addr16 stc jbe xor add rcr hlt adc cmpsb aad cwtl leave and adc or (bad) adc mov imul and and sub add jno pop jecxz inc lods add and cli xchg dec cmc subb ja lcall jne push push cld dec push dec hlt add cwtl int les ret test add sub test and xor jge cmpsl adc or sub dec lods rolb inc cwtl popa jo mov sbb loopne mov pop sub inc addr16 sub push jne add or dec mov roll addr16 xchg cmp mov clc arpl add dec inc inc daa enter fimull inc (bad) negb xchg loope rclb les cmp mov dec jl sub sbb aad sbb xor push shrb add dec dec dec (bad) les ficoml mov pusha inc mov jmp xor push (bad) jne xor dec xchg add cmpsb add mov bnd je cmp add jns xor jmp (bad) add cs and and mov pop jl in xor jecxz xor add pop je pusha and inc aam stos loope in cmovs call jmp mov sub fsubrs movsb mov jp cmp xor mov add jge push xor roll fsubrs test pop paddsw js rcl nop adc fldl jecxz jne jb shll je mov cli aam cmp add (bad) je pushf mov cmp pusha nop add add xor sub xchg sbb test mov bound shlb mov mov or or inc sub movsl mov loop enter push ret and xor aad bound loopne pusha or add sbb les jb push (bad) loopne xor pusha dec sub insl (bad) lcall nop or popa xor out scas mov in fildl or adc jnp mov xor pop add ja test mov pushf loopne in add popf push push sub imul nop mov cli jns jl add inc mov les xor dec (bad) roll jl bnd sbb enter pusha int3 faddl pop jns xor notl xor cmpsb ja fsubr ss mov lret and ret or into or out sbb in sbb inc les enter imul pop addb push mov and sbb add dec xor xor mov fistpll outsb and xor push pusha xchg mov jbe test mov jl (bad) sbb push pop xchg test add inc xor jg jne mov sub or adc mov stc test sahf hlt aas stos stos mov inc inc xchg inc mov xor xchg enter nop pushf mov pop pop push fs dec add push sahf xchg dec add movsl mov lahf mov xor add mov xorl shl dec xchg test in fnsave lock mov add pop dec push cmp xor or pop fdivs or dec inc mov and push mov or add xor scas sarl out (bad) jge dec popf rol imul jb rcrb inc push shll or xor aam ljmp adc insl pop xor inc outsb psubsb jne xor push int or add (bad) repz or fdivl adc add lds add rcll xchg xlat push cmp mov sbb aad dec std push ds inc aam and push dec sbb jbe push xchg mov sbb and cs fdivl adc pop out xor xchg adc cltd addr16 (bad) fmul or jo popa outsb pusha rcrl mov add fdivl test mov xchg dec xchg aad mov add sarb sub paddq inc jge sbb xor fldcw add pushf (bad) inc mov sbb pop mov and test add and adc sub cwtl xor adc sysexit subl add sbb xchg push aam sub enter add andb daa push pushf addr16 ja dec add push push loopne enter outsb imul mov jno pop xchg dec xchg scas lods faddp (bad) mov adc mov jo dec or pop pop jno js fcomp imul xor mov scas je dec jg sbb pop fstpt scas cmpsl pop in jge,pt or add and jns fucomp aam dec add mov scas test xchg inc mov xor sbb (bad) sub adc and dec cwtl outsl push xlat dec adc dec pop pop mov adc mov lret cmp adcb rcrl (bad) repz hlt jmp mov out ror add aaa mov hlt cmp lahf popa cmpsb xor inc pmaxsw jno mov sbb add repnz lds adc add jecxz inc push push out push xorl ljmp dec aas push popf fstl mov or sbb xor add inc cli jmp push push xchg xchg add test fimull mov and add xchg stos mov test or popa cmp imul and add mov mov sbb or pusha faddl in mov (bad) cmp sarb xchg fnsave lods mov sbb xorb hlt sbb xor cld sub fldenv lock pop pop or add mov adc inc xor cmp xor int3 dec xchg push fnstcw int and pop sbb mov rcrb jnp mov adc scas mov rclb cmp lock push stc aam cwtl add (bad) hlt leave pop fidivr add xlat jmp pushf fild aas mov or add mov pop jl mov adcb adc imul mov lcall rorb dec lock inc mov test repnz test sub scas (bad) cmp add mov in add inc mov cltd mov or mov jns add add lret pusha dec fimull stos add inc lods mov adc aas sahf or and add aaa stc cltd jmp add lret add test stos dec add pop and pop mov xor ds addr16 das sbb loope ds jl fcmovnu dec add call add mov lahf fstp jl sbb adc add lods dec cmp fdivl mov in rcrb adc jbe sbb inc scas psubb popa add sbb shl (bad) mov add xlat faddl sbbb pop jb adc lods divb dec mov inc loopne gs fcoms test mov add mov lds inc pop jno sbb and dec inc mov pop sbb sub (bad) and in rorl loop adc roll push lret or or cltd adc cmp sub mov rcr inc adc push jo fnstsw pop dec (bad) xchg call popf bound mov in arpl pop sbb jl nop adc nop faddl mov jg shrb and adc out fcomps fmull addr16 jge add xor in jns push lods clc mov xor ds mov dec xchg inc lock data16 lret mov adc hlt ds mov cmp icebp sbb rclb dec and scas loop or loope inc and imul mov ret int3 xchg push nop mov stos test test push fisub fistpll push inc add sbb cmp inc and stc and movsb inc fwait hlt xor adc mov inc jle cmp pop mov pop jl adc add adc aas push les xor iret dec loopne ds add sub lods orb ja add mov movsb push add mov fmulp or and sub mov add jbe mov pop loope inc or xor leave mov sti sbb and pusha adc addb (bad) jo ds pop or rdtsc movsb cwtl jae or push enter and inc mov es mov aam and dec mov (bad) cmc and push add inc insl enter lods lcall inc testl fs adc or mov xchg jnp cmp test and and xchg clc push and xor push pop xchg ficomp sub push or es aad mov xlat jecxz dec out xor pushf and jb pusha pop pop jle xchg testl xor cmpb popa int3 add or push lea inc in jo gs add fisubrl out lds add fcompl xor aas enter das fstpl and xchg pop in (bad) repz jecxz sbbl push or pop sarb add (bad) (bad) adc mov push (bad) lock pop add jle dec js push and pop stos xchg les mov movsb int3 lret cmpb pop cmp pop cwtl cmp xor inc xor cmp js test pushf fdivrl (bad) dec sahf rcl inc movsb je jg les movsb test nop add dec push xor sub xchg enter dec push fs aaa mov jo cmpb add test cli inc add mov rcrl or test or cwtl dec jo mov in xchg scas jae sub mov rcll and je jnp (bad) mov iret ja inc rorl jnp and or push or es push pop adc xchg xchg cwtl push in cmp add pop sbb add xchg icebp xchg fsubs mov hlt push or call lock cmpb lret add call pop xor mov rcrl sbb lret cmp dec das mov dec adc rolb jns mov loopne add mov pop add or jmp cmp sti xchg jno scas mov orb xor push andb cmpsb cmp add fldl cmp ds adc in xor pop pusha in sarb subb repnz cltd sub nop add mov int3 mov adc cmp and cmp (bad) iret or sbb dec jg jb outsb pop popa jo popa je scas inc and push fimull rcll mov test mov cld cmp or push cmp dec add mov jo mov cmp iret out pop and adc xchg add xchg fcmovu notl (bad) test jbe pop and es dec add imul push lret or pop inc xchg add mov adc rcll xor dec adc add orl sub in cmp mov or adc popa or push je mov in adcb bswap sbb push mov add sbb scas loope or add ret xchg in pop sbb addr16 mov add aam push pop out xchg bound or icebp sub adc and pop xchg jecxz lcall sub pusha push push aad mov jo into add dec mov loope push stc insb test add jns cs dec in add idivb push outsl aam mov mov xchg jnp test jmp jbe les (bad) xchg add mov cli inc das repnz sbb or in push jp inc jge add push mov sub xchg add push pusha xabort add pop mov sarb sub sub mov push ret sbb sarb mov fidivr sbb subl (bad) out and out loope dec cmp arpl sahf sub mov add push call xchg dec pusha cltd xchg push add mov mov or daa imul add mov xor pop ret adc in add sub pop nop sub inc push test nop or stos mov or xor scas mov stos jne out mov das push and xor xchg testw xchg pusha out icebp movsb sbb sub or add ds add add in and push mov pop add subb in stos adc in sub pop sbb add jecxz push out arpl xchg (bad) mov adc xchg adc and sub lock (bad) jp ret inc out daa stc call inc jp or imul inc int3 xor jg pop mov pushl pusha push dec push and sub or (bad) xor dec loop test mov mov insl add sub bnd das adc adc sbb inc dec aam add sub add popa jno push xchg xchg roll ljmp dec inc (bad) sbb fiadd mov cld adc sbb mov push jmp xchg leave push add enter add outsl rorl add mov leave cmp xchg js xor sub imul call pusha pop mov cmp and sbb mov (bad) sti mov xchg es push pop adc jle mov sbb xchg push dec scas add les push in add or xor cld cmpsb sar lcall mov or std xor add stos dec ja add mov clc lods add fmul xchg imul dec xor dec add insl (bad) aad xchg inc or add cmc push in daa loopne add gs lret inc dec bound xor jecxz push js xor (bad) fcompl xchg jl pop arpl nop push enter add faddl lret add dec xor leave inc out mov subb pop xchg mov xchg lds add pop dec imul adc xchg jno xchg mov sub comiss xchg or pop js mov sbb mov mov sub add inc pop and push dec (bad) aas jg xchg stc imul sub data16 xchg enter cwtl xchg sbb out and rolb adc lahf or mov push dec push jbe adc das (bad) and mov dec data16 call jbe adc (bad) (bad) out xor hlt lret mov mov jl push shrl das movsb popf mov mov mov push shrl fwait mul pushf and loopne out add mov mov test ja cmp or and mov add orb xor mov push andb push lock test (bad) mov fs pop rcrl leave bound jns push les or jl xor push push mov fs rolb xchg mov push shl inc stos fimul in or jb or mov dec repz sbb in mov and add fimull hlt jg dec in jne sub enter push jl or inc rorl or add adc int3 iret or mov mov leave mov out pusha or cs dec add mov jnp out push stos aam mov xchg int3 xchg aam (bad) mov xor popa inc jmp clc cld fadd enter pop imul and xchg call cmp out xor lods inc fildll xchg lret add xchg and sbb (bad) cli mov and sbb pusha adc pop sti je arpl xor insb inc mov nop mov add pusha jns jae mov pop sbb orb or add xchg and sbb mov pop lret mov and subb xchg inc xchg and xchg fistpl inc inc int test dec bound enter out push in stos pop xchg mov lods sbb mov pop pusha sub push xor or stos add add sbb cli xchg insb bound mov shlb arpl and sub sub movsb les xchg mov enter and pop sub ja sbb mov or xchg call xor (bad) (bad) fistl adc mov xchg sbb xchg test and or and mov inc and je mov pusha sbb dec mov or dec shl or cmp inc mov and stos mov jmp mov xchg arpl int3 mov cld imul push ljmp add (bad) cli add daa sub or dec add mov rcll scas into or jge pop std (bad) pop mov mov push mov xchg das mov xorl lock xchg popf je add decb and jne and call add call cmp sub add sub leave sub inc loop xchg xor jecxz int cwtl pop les or stc add ja push out pop add jge inc (bad) hlt paddd or inc hlt icebp mov sti orl movsb sub shrl pop adc pop sahf or xchg outsb cld xchg std and repz jo ja fs dec aam stos mov add adc inc out push or adc in cltd add xchg loop or push xor les out mov xchg dec je add js xchg mov push das mov stc mov push (bad) fimull mov xchg mov sbb repnz lods (bad) jge rorb and dec mov sub and cmp cmp pop scas mov sbb cltd inc clc cmp add lea adc fild or xor call lret pushf and mov or pop add inc add sub mov pusha mov dec adc test dec mov jmp rolb inc les add testb lcall pop outsl cld movsl add (bad) aad inc mov rolb shr add leave test xchg imul adc cmp and push mov inc fs cld add push pop pop xor mov mov aam add bound lods lods loopne mov mov pop ljmp dec or xchg dec lahf inc lret stos sti rcrb or add rorb pop push cmp fs (bad) je xchg sbb pop sbb xor ds xchg add rol bound test or mov clc movsl jle ret xor lock xchg fsubrs sbb bound stc sub sbb xlat xchg sbb jo loope xchg xchg dec adc add in dec or inc push dec xchg je cmp cmp sbb adc je add push (bad) (bad) pusha lods pusha mov dec out nop or sbb dec add xchg stos xchg mov adc or adc cmp mov mov pusha lahf inc cmp push xchg sub pop nop push int popa mov scas cmc lock xchg decb push add or or push xor testl sub (bad) mov test sub loopne cmp jne rclb add inc mov xchg test add arpl out push xorb jns inc mov sub adc or mov adc addb sub dec xchg fsubrp mov dec frstor mov xor jno in adc dec rolb out and shrl xchg leave and pop mov and cs test push iret or loop xor js outsb mov cltd inc xchg xorb mov out xchg sub adc pusha gs mov loop mov in sub sub cli fidiv mov loop (bad) jb cmp and and or insl enter outsb adc sbb xor mov js xor inc or imul loop rorl test lds sub xchg pop ss std push mov push cld sub add pop jecxz jns,pn ffree sbb int3 test arpl or mov (bad) pop mov push adc adc cwtl pushf add push (bad) mov ret ficompl stos (bad) xor (bad) or sub loope in fwait iret out loop js mov mov and hlt or mov je shrb add fwait or xchg rol (bad) pop jg add cwtl sub add shrb mov push add jmp mov xchg jl cwtl add ficomp xor and cld in xor jge pop jns loop rcr pusha pop rcrb cmpsl std sarb mov (bad) lods pop (bad) das add mov add popf cmp push xchg add outsl mov lods inc mov movsl sbb out sub (bad) or push push pop mov cwtl (bad) lods in inc dec cmp add pop push in arpl and adc gs addb loopne add outsb mov or ss movsl inc or lods rol jo sbb push mov push icebp jmp jo xchg add movsb adc mov movsl cld shrb sbb lods fld1 inc lret sbb es sbb out push xchg mov adcb (bad) negb push adc les xor dec jecxz lcall and add mov pop stc bound push mov enter pop xor adc adc xchg js and rolb mov or xor ss pop test cld and fisubr mov or xor test lods ljmp add push adc ret icebp sub xchg cmp and jg sbbb xlat and hlt cmp push inc add rorb mov add fcompl sub out push inc and dec enter stc mov adc rolb mov int3 sub (bad) dec xchg adcl mov push mov addb aas add data16 sbb jnp daa sub pop xchg fist push repz sbb stos xor fwait adc icebp jbe loopne sub popa pop inc jmp adc and xlat add dec jle mov mov add loope mov imull pop and (bad) lock cwtl push mov (bad) jbe js aas imul pop and pop loope jae push dec xchg mov icebp aaa or es jbe pop add mov sbb mov aas xor jp adc (bad) aam add and out xor test add test mov movsb aas out repz lret and adc mov cmp or mov cmpb mov sbbb cmp push jl lcall xor test xchg sbb add add ja fmuls xchg jmp fs xchg les rorl jl arpl hlt mov dec or pop clc adc rcrl adc imul (bad) add shlb orl nop and mov push sub dec lcallw inc jo add add (bad) jae lret add and pushf add lea add stc popf mov dec mov adc les push add sub fsubr gs mov cltd mov adc jp sbb fiaddl adc pusha shlb addb push fadd or add mov xchg cmp or or jb xchg cmp imul addl xchg arpl insb jns nop fimull fwait sbb mov je push aad cmp xor mov sub push (bad) rorb addb adc test inc adc sub hlt cmp pusha je cmp fcompl clc xchg cli add push pushf cmpsb call addw pusha inc push mov js jl sub outsb and shrb push pop add faddp enter ljmp sub xor xor adcb fwait (bad) mov pusha push pop xchg in inc push rorb mov cmp mov scas sub imul mov mov mov rorb xorl xor movsb jae pop dec add push outsl in cmp je jl push add and push jne push lods in mov (bad) lock mov lret push sbb ror xor cmp fisubl mov je dec in mov jae bound add int3 xor clc incb scas (bad) lods stc xchg bound xchg call and dec dec pop cmp push clc mov lahf rclb adc lods inc jp and xor pop dec je addl mov push cmp jae and cmp and fildl add cwtl sti push mov push movsl clc mov fcmovu or repz xchg lds sarb sbb pop add (bad) pop clc adc push mov push int3 dec out mov bound mov iret push nop and ss add fistpl nop and cmp lods and out dec in ljmp mov dec shrl and mov inc shrl int inc dec test mov push add aad sbb lcall lcall or adc jp out rclb dec inc xchg popa mov addl aam mov inc sbb or mov loope push xchg mov push add inc scas jp or nop or or adc inc dec mov dec cmpl stos into adc outsl (bad) jge xchg mov lds add mov sub cmpsb sub dec mov pusha leave les cmp cmp jl test sar mov xchg jle cmp mov in and pop (bad) ja sub loop out int3 adc xor (bad) hlt adc cmpb jp je add add add popa stos and dec std and or push push insl push aas push daa nop bound mov add lods fldenv jnp dec push ljmp adcb lahf scas daa or andb jl adc les sarl mov xor mov xor sub fcompl fs aaa in xor lea push andb xor fsubrs bound loope (bad) lret test inc fsubl dec or test ja daa mov pop add xchg adc adc pusha mov dec ficom push out mov inc nop mov cmp lea dec jae movsb (bad) sbb bound pop lcall xor sar mov cwtl pushf fsubl mov addl aad pusha sahf in movsl or sub and jl or xchg and mov out pop mov mov sbb pop adc mov xor sub lods es xchg jmp fstpl xor cld mov loope push sub mov mov shrl pop push mov loopne push fwait out push jge loopne pop rcll xor aam (bad) pop add pop cmp into adc bnd push mov dec loopne sbb xchg pusha icebp xchg and adc inc (bad) adc mov push nop jl test sub and pmaxsw ret and adc adc add cld pusha push cmp mov cmp imul fisttp xchg sub stos call or ret aam js and mov imul cltd sub xor sub add aam jo addr16 sub inc rorb movsl sub push xor sbb pop aas adc into dec pop mov enter aad lods es pop into movsw daa mov cmp mov pusha push mov jl add cwtl mov mov out pop into in adc (bad) sarb push adc sub movsb mov mov inc dec or dec fmul add pop imull rcrb adc add mov pop mov icebp cmp add fwait or adc mov leave push mov fsts lret sar mov test std add loope loop lods dec adcl pop and push int3 mov scas xor pushf es or mov out sbb adc mov nop pop arpl in lahf mov add push rclb sbb add cmp popf mov pop inc pop inc add mov xor mov shlb dec lea jmp js in jmp icebp pop (bad) je movsb punpcklbw cmp and xor and sub loopne cmp add pop subb add (bad) fwait mov inc sub adc (bad) mov (bad) mov leave push or lds fs enter test sub lret hlt dec mov dec es in or shl push lret xchg and hlt push push xor dec xchg test test inc xchg mov movsb inc xor add aaa sub dec nop add lds pop inc bound rolb lods cmp out imul xchg mov lods mov sub pop xor sbb push fdivr mov add lods pop sti enter loopne outsl inc push nop or shrb inc dec sbb shr adc rolb xlat popf inc fdivrs nop (bad) add adc mov outsl pusha call (bad) inc pop popa andb sbb add roll inc aaa jns lods shrb aam ret push imul mov push (bad) jbe or mov add push mov data16 cmp stos int3 call adc mov pusha nop xchg test dec je add outsb mov arpl xchg cltd inc out push mov add push loope xchg cmp xor out add xor daa aaa lret and scas lret gs daa jo mov enter xchg imul (bad) push sahf movsb loop jp mov popa (bad) xor hlt jmp out mov stos nop add cmp or imul cmpb or stos fist cmp add mov push out adc mov fs or ret sarl in pusha cmp pop ret xor scas out jg movsb adc test (bad) xlat or push adc iret pop jo jnp je add xchg sbb mov jge out mov or inc out cmp popa cmpsl enter dec jl cs sub sub add andb xchg hlt sbb cmp pop or cmpl loopne arpl mov or cmp sub add jp mov sub jns cmp shrb mov add lret mov pop sub and sbb divb in pop in pop mov cmp or cwtl or and sbb cld jmp lahf and push mov xor mov push lea aad mov jg fiaddl mov mov push addl jge nop add ret inc call cmpb dec gs cmp mov mov mov test xor xor nop add cmc xchg and (bad) sbb insb add ss rorb xchg std rcrb or xchg call sub dec hlt mov sbb cmp sbb mov sbb scas mov mov sub sub xchg mov jnp sub test arpl (bad) mov adc adc add fldenv repnz cmp fadds sub rcrl loope mov sbbb ret pop std sbb jo xchg xor pop rorb jl xchg or imul add push aaa test rcrb cmp nop out scas in mov adc add loop mov adc mov popa mov enter xor mov mov xor sti imull cmp test decl push scas loopne nop insb pop cmp (bad) xor addr16 and rclb lods stos or and mov imul fisttpll dec (bad) push rolb loope dec fs and mov push idivl jp cwtl pop pop movsb (bad) xlat ret repz sub push es imul dec add or xchg or pop roll (bad) xlat rol inc pop xor addb std aaa lock push push xchg inc lcall fwait mov cmc or clc inc ljmp mov fwait and sarl jg or gs int3 xchg popf sub ret mov push scas pop fildl insl (bad) fcompl lods popa mov jle leave dec push cmp pushf cld or jge cmp lret cmp mov xor sahf inc fdivr pminsw aam or lods (bad) sbb and mov sub or fstl or cmp xor xchg lahf sbb xor lahf dec mov popf stc pop cmp stos jle inc repnz aaa adc cwtl aam aam repnz adc iret mov mov popf jne dec xor pusha out stos (bad) test jo or xor incb int3 sub inc mov mov add push or pusha push call jns mov jge aas add enter ljmp jne aad adc cmp and fidivr xchg xor add lret (bad) repnz and push cmc xor movsb sub enter stc repz cmp and or mov add pop popf pop push in sahf inc push push mov inc cmp cmp sub lods insb xchg (bad) xor clc or mov les pop dec out xorl jo pushf inc xor jo xlat push imul push bound daa mov dec andb lea arpl loopne and push lds push fs gs xchg shr adcb (bad) and es fdivl or lret into xchg frstor jl sub sbb fwait sbb mov cltd xchg cmp arpl mov xchg push in adc leave mov rolb fwait add lds and sub jb or int3 fldcw out repz sti mov fistpl adc mov cwtl (bad) jo ficompl or inc and dec in movsb imul nop and mov add and push mov xchg xor push pinsrw pushf add mov nop push push or sub inc repnz mov adc iret sbbl sub dec pop int3 test call jle fidivrl movsb add xchg icebp xor cmp sarb imul add mov mov xor jecxz xor mov rcll push int sbb out pop cs leave xor ret shll dec sbb scas and pop test dec or in pop lea or mov sbb test test fs cmp and sub mov mov cmp nop mov cmp xchg mov push imul pop adc mov sbb jmp cmc xor and in adcl add sub es lcall inc dec imul cld sub mov out test or jne cmp pop es push adc mov rcll test insb add xor add mov sub sbb call in ljmp mov add pop add add cmp and lods cmp rcl cmp xchg or dec lahf in add stc inc adc sub cmp loopne ja test int3 or sbb jbe insl mov xchg or fildll dec sub mov fcompl les pop add mov sub hlt rclb pop sub enter jo and fmuls (bad) fs cmp or jmp xchg mov or imul add ja icebp dec fistpll or adc loopne subl repnz (bad) in adc add inc xor fstl push mov js fdiv add test popf loop adc push iret (bad) cmp movsl aaa loopne xor adc adc adc add faddp add add jno adc mov or and repz dec in xor add mov jnp dec popf add push mov mov inc pop in daa (bad) nop add or add mov hlt jg and movb rorl cmp adc mov pop pop push mov and mov and push cmc shrb cmpb fcomps sub or fmul push pop adc call test add test xor add adc add adc xchg add test arpl clc (bad) sti pop insb shlb sub push in and pusha call and movsb adc inc psrlq sti add cwtl mov aam mov adc mov sbb popf dec jmp cmp (bad) outsl cltd push jmp into or insb xchg data16 js cmp pushf adc push lret cli sub sub xchg fs lock pop (bad) roll imul pop shlb dec lods cmp mov dec pusha cmp mov add pop mov adc mov sub sub sub pop imulb clc in adc inc push aas dec adc sub push mov mov and or add push sbbb cmp jne jl out push pusha jl cltd sar (bad) mov roll pop pop repz xchg push mov fcmovne movsl mov mov add stos add pop sarl xchg mov addr16 sub sbb add add push sbb popa xchg (bad) lods adc add std or cwtl push imul dec jae imul movsl add in aam push mov popf je push pusha lcall sub clc js lock xchg test mov push cwtl lods xchg popf add sbb shrb dec pushf ja push test jnp fdivp addb xchg into shlb lods push test mov imul or sbb add out stc bound inc push inc and inc pop lea es enter dec aam adc cld dec aam push adc fdivr xor or mov lock aaa cmp sarb js jae fadds faddl xor ljmp rcll adc in dec stos adc add out push int cs add frstor mov sub int3 push stos inc fist pop subb pop dec aam mov xor movsl push push push adc test (bad) xor mov or nop push lods sub int3 test roll ss push sub gs fmul imul mov add in movsb sub push daa pop add outsl xchg lds xor rcrb add adc inc scas cwtl inc adc daa (bad) in and inc push jno repz and add mov push cli or dec loop adc call les mov fbstp nop add or mov inc mov add in sub imul or inc mov add dec fistpll or test dec mov movsb dec mov sub pop push out push movsb mov xor pusha stc adc lods mov push clc pop nop leave pop imul inc mov aam or jmp aam pop sbb bound dec rcrb into orl loop les mov arpl pop lods add add cmc arpl nop mov in popa add add clc push cld out or loope lods inc adc movsl js and or inc xor pop and xchg nop les push mov pop add adc aad pop xor mov xchg loope in and sbb or arpl je nop mov cltd inc jl sub insb or add mov dec dec and sarl or addb sti lahf push or out add cmp (bad) or jno loopne stc add xor pusha daa bound mov mov sbb iret or jmp mov push push aam inc sbb sub jbe xor lods insb dec pop mov xor int3 adc adc or pop mov cmp mov insb test pusha in dec or scas mull push mov movsb dec or cltd mov cld icebp pop adc out lcall movsb cli push add mov lret xor add sbb (bad) shl push add jl adc (bad) add mov and mov dec fadds mov out ja adc xchg mov dec sbb je scas fsubl out jl and mov mov adc or mov sbb adc popa dec data16 adc loop add mov mov lock or dec dec aam add sbb inc nop mov adc arpl fwait xor daa mov (bad) cwtl bound xchg shlb dec (bad) clc lret add call gs xor imul dec or jne out dec in roll js sub lret push mov in sub je arpl das and add jb mov cmp dec scas mov inc cmp shrb idivl add imul or xchg or hlt or dec pop dec push inc mov push jae push xchg arpl lret out je jne (bad) adc sti loopne mov outsl (bad) shrb jbe les and jge pushf push insb xor jecxz xchg aaa sbb std mov bound sbb adc pop inc ret cmp jbe add pop imul cmp out cmp xor clc lcall lods push clc sub loope sbb cld and or ljmp ds aaa dec and add or adc cmp push into add dec outsl (bad) movsl inc mov les mov dec adc pop dec xor and (bad) xor xor push mov xor scas mov cwtl ret loop xchg les sub movsl sbb adc push sbb ljmp cli dec dec mov in pusha push test jbe leave mov movsb cwtl mov cmp or ss dec mov rcll pusha pop clc jg test sahf mov add inc mov shll cmp stos xor mov testb popf push outsl xor jo aam inc adc mov gs in js push pop loopne dec sbb shufps lret (bad) sbb mov mov cmp imul shlb sti mov jle or xchg xchg (bad) pop lret pop mov add rorl mov cld lcall repnz mov mov push sub dec pop outsb mov cmp add or and xchg push out mov je int push sbb push arpl (bad) xor hlt xchg stos popf cmp sub or ds xchg add inc out mov xchg fild sbb pop mov in cltd insl daa xchg outsl jns mov pusha stos into sarb aam mov ljmp mov adc punpcklbw adcb ljmp xchg and mov add jg push imul mov mov jno mov cmp or in push les sbb pop gs mov dec lods int mov cmc arpl sbb aas adc or lods jecxz imul lods clc (bad) add xor jge fsubs pop scas or stos inc xor and add lds pop insl pop lret sahf mov (bad) icebp ja inc cwtl dec cmp push cmpb cs sub clc in add cmp xchg push inc dec sbb sbb mov bound cltd cld arpl or add insl (bad) pop pop stc cmpsb in movsb lea pop pushf or xchg movsl cltd rcl and jmp xchg mov fadds jns jbe mov je (bad) sbb lock pushf lahf dec cs or add adc jne loop jge rclb and pop insl push cmp imul dec xchg cld call imul sahf push out or sbb sbb (bad) or inc leave pop and jbe sti icebp cwtl xchg add mov std fsubl rclb push xchg adc adc or nop add jmp xor push xor or mov dec adc adc repnz pop mov faddp cli adc dec cmc and fwait pop adc sbb and mov sbbb inc adc lods push xor add or sbb loopne popf lret push sub fwait xchg mov popa inc mov add dec or mov adc xor push fcomp pop pop nop mov (bad) mov cmpsb xchg dec mov pop add imul add mov adc pop lods mov arpl out add sbb adc std verw dec pop or popa loopne loope icebp movsb jl dec stos or lods add loopne mov call mov pop movsl or dec sbb popa push jbe ljmp fstpl sub jno lret cld scas xchg out fiadd cmp fnsave (bad) insb xor orb mov ficompl push push lahf mov je add cmp subb and add loopne scas loopne add ds data16 hlt cwtl xor xor mov sub outsb scas xchg push sub and adc in andb adc fnstsw sub add rcll dec inc xor sbb push (bad) aaa add push stos and push pop sbb test (bad) sub cmp mov dec and push add adc sub outsb push gs repnz inc push psubsb hlt push int3 int into add sub outsl sub addb int dec add rolb add jnp je add sbb xchg add aaa cmp push pop icebp add movsl add sub shr and test (bad) cmp xor enter je ja push xchg jae xor rolb xchg je popa sbb adcl out (bad) (bad) sub push jo lret sub mov outsb in pop sbb xor lcall mov fwait lret sub xor enter rorl and adc or mov lret or cwtl sub outsb add mov (bad) int rclb mov scas add stos push pop mov ficom push fisttp push ljmp add cwtl je enter movsl cltd jnp xchg lock out das add (bad) mov movsl loopne mov mov imul cmpsb jl inc adc pop mov popa shlb dec cwtl jo sub enter and jp add hlt in sti and xor ds add and addl adc scas adc or fstl xchg sbb sahf lock add dec mov add mov (bad) repnz lock sub sub mov hlt inc out shll iret sub mov test inc sub sbb mov dec xchg and faddp std hlt xlat aad xor and adc push or inc loop cmp push fadds jg nop and sub mov test pop add movsl (bad) adc mov add xor pop notl dec xchg and sti and jb lcall shrl out inc loopne dec push xchg cmp push iret mov pop ja jbe xlat ret xchg mov arpl and mov or sub (bad) mov enter aad mov dec jo (bad) add outsl int das inc in push addr16 mov mov xor inc mov mov inc fs or fwait inc aas add sbb loope xchg andl lret dec movsb popa (bad) inc test add xchg gs in inc sbb in mov js rorb mov mov push int and add insb jb mov (bad) dec mov pusha push hlt (bad) cmp or cmp push outsb fs jl lret sub push and lret int3 push jb mov mov test adc arpl inc add nop rolb lea adc jo lahf xor fwait push aam mov cltd inc inc and out hlt (bad) sbb pop inc jb xor add jns push jb rorb sub js add pop mov adcb pop add or sub adc test cmp mov (bad) (bad) shrl xor loope data16 push dec int3 sub push or sub inc adc jmp out jle (bad) nop das cmp pop andl dec fcoms inc push pusha mov lea and and mov sub xchg xchg mov add out jae pop sub daa cmp inc or frstor jl in jns inc pop or enter xor pop enter loopne push inc cmp xchg ret cwtl cwtl pop mov popa adc aam mov hlt and jl or adc call xor inc jne sar pop cmp popl loopne push mov fs dec test sbb or push mov cmp in inc lods or imul sahf shl mov mov push jns xor ljmp pushf mov cs dec mov enter push aas sbbb (bad) dec inc fisub (bad) and test ss xchg sarb push adc enter lret cmpsb sarb les push jno mov mov mov ret gs push inc rcr pushaw or adc rolb xor std int3 cmp add add js cmc ljmp in inc into or sub stos cmova out xor call rcr fisubl mov movsb push movsl inc mov cld ljmp aam sbb jb mov test subb mov cmp test mov test movsb (bad) push dec inc mov dec stos insb fucom or arpl cwtl pusha and mov cs je add jne ss cwtl outsb pop and cmp pop rclb jae mov pop js mov std sti mov or cmp or mov xor pop inc mov add sbb out ret cmp enter sub aas add rolb cmpsb add push je dec xchg add mov dec sub and and xchg inc add dec xchg mov add movsl fcoml mov xchg adc adc stos mov fwait mov sbb in mov repz and xor pusha fs pop jl dec fmull adc dec fwait loopne shlb push xchg push add das mov test push (bad) and jne xor sti push test inc adc cld jp test push out gs fcoms cs mov mov adc xchg mov (bad) in jp push adc es sbbb push out hlt std fwait in fbstp and mov push ret mov push add mov fsubrs dec xchg mov pop aam (bad) in (bad) pop je inc hlt mov pop lods or pusha nop push jg sbb or mov mov inc jae fsubl xadd sbb rclb push xchg or loopne inc adc or dec add hlt sub cmp int3 shrb hlt cmp xchg xor jp push rorb jnp sub add lea mov pop sbb xchg fs (bad) mov shlb mov jnp xchg lods and cwtl and xlat pop jecxz xchg sar hlt add add (bad) or xor in pop adcl test str test xor xchg movsb inc jle (bad) in and ret xor jns xor cwtl flds or add pop div add mov in pop add xor ds or xor add push sbb inc jo dec inc dec (bad) and or nop dec pop add or inc les out add pop js div lock sub outsb rolb sub mov xchg dec inc mov das and pop ret cmpsb pushf lret fcom jns daa je mov inc dec sub sbb icebp pop mov arpl dec cmpsl repz sub rolb rorl push and adc mov mov sbb rcll xchg in addb es push ret inc les hlt and clc push sub sub pop xorl push (bad) mov dec push dec test call add outsl xlat ljmp ja int mov push sub push daa inc adc adc int add xchg pop push sbb cwtd adc jl sbb dec jns jo lcall xchg addr16 add (bad) fildl push mov mov and pop nop mov loopne add sbb sub sub mov loope or jne jg push lock add sub loopne lods jle sbb push dec jo mov in (bad) hlt sbb jg ds jmp or sub push pop push push loope aaa push (bad) jo leave lock pusha js,pt shlb jmp pop add xchg mov adc mov mov or das sub inc test xchg mov gs pop je test daa cwtl rolb hlt (bad) pop das mov jno xchg cmp xchg out mov mov adc adc ja cmp pusha int xchg fcomps adc ret mov lds mov sbb in mov into add mov add int3 lret out xchg sahf sub add sub or pop mov adc fmull push in js mov rolb adc inc test xor and cld andl (bad) cltd cmp pop icebp andl clc rcll and fs cwtl xchg cmp xchg or push xor or fwait inc inc xlat mov or ds (bad) test fstpt popa cwtl nop add push or mov fdivs lahf sub mov pop cmp cwtl sbb and lods sbb and cwtl cmc enter rolb call xor aam enter jns mov mov adc mov mov aaa inc leave addb mov jae add push inc jns popa xchg push inc mov and push cmp dec inc loopne sbb insl sbb call inc push xchg xor mov mov nop outsb ljmp mov mov int3 ja imul and idivb jg insl or rclb adc push lds jg mov hlt rclb mov ds sub int inc cmp and xchg or sub cmp or mov mov nop cltd push jmp inc mov adc out enter push cwtl dec mov pop test adc push sub add dec arpl lcall mov ficoml xchg imul scas stos (bad) and fild leave pop dec push add sub mov add fmull xchg nop mov dec or mov into mov xor or add and push inc xchg lret call insl sahf call nop sbbl stc and sbb addr16 cld (bad) dec add aas mov jecxz sti jb ds rolb push hlt repnz sub out aam leave icebp cmp jns inc xor mov or mov add mov push xor rorl sub ljmp insb ret add adc pop popf sarb add fcomp punpckhdq inc scas dec lea inc adc push orl scas xchg xchg jae push test xchg test lods sub addb and mov out xchg sub jbe push in mov jns leave add test int3 test and call sbb nop in fwait sub jbe or ret mov inc pop push out push xchg mov std and mov incb ds mov cwtl jg add call (bad) jbe sbb add inc push push mov jne les dec into xor pop test loop lret cmp adc lds rol mov lret jo pop lock dec adc push test xchg dec fmull or adc adc insb xchg or xchg dec and mov fnsave lods or cmp dec sub andl mov push mov add lods scas jg jo loopne mov mov push push (bad) repz invd (bad) lea insb pop cltd cmp gs mov add lods pop inc aad fdivs add test sahf mov mov fs movsb pusha popa stc pusha xchg or push push sub ds mov add push xchg adc push mov popa pop leave imul add iret std and fisttpll stos push sub dec push fst nop cmp mov xor outsb js addb aaa mov and pusha insl sbb jle jno sbb xor negl aam popa imul jb fiaddl loopne xlat push push add xor sti subb bound jmp xchg sub enter push mov mov add cli xor js mov sbb pop jo lea movsl cmp sub sub push pop iret push add adc mov dec inc cwtl add (bad) sbb xor and cmp sub cmp add inc xchg sub cs push push clc jp in sbb cmp (bad) ss std loope sub nop (bad) push adc js std cmp dec push cmp xor jg in jb push add inc xchg add mov inc ds mov sub add pop jne push mov mov mov xchg lock dec cmp inc mov ja or xchg lret sub test test pusha pop pop or xor shrb or cmpl jge and mov das mov xchg or sub clc rcll and ret or cmp test je adc lods dec xchg sbb jbe inc inc clc dec (bad) icebp mov pop sti in insb sbb xor pusha dec repnz adc fildl push cs sub aas outsl and jnp int cmp xchg ss out popa cmp push enter push jg je add mov lock nopl mov int push and push (bad) scas add and aaa adc mov pop mov xor ret fcoms call into test or call clc adc rcll push pop je lods decb mov sbb pushf xor adc scas (bad) jl aam call inc dec or sbbb (bad) shrb push and rolw cmp dec rclb faddl int (bad) sbb pop jo sbbb xchg add add pusha fisubl enter or push sub cwtl dec push repnz in sub fiaddl or jbe dec pop pop push test xor leave pushf sbb or out inc mov jne dec xchg sub xor xchg ss pop add or nop cmp push xchg in push popf mov je ret sub popf in cwtl pop js add mov not call call jne add ja (bad) add lret inc lea popa adc add mov push jl js int3 test nop dec inc int3 adc sub push push movsb enter mov cs insl sub pop aam fdivrl (bad) dec js xchg mov (bad) pop (bad) aad mov inc ja hlt sub sar adc push xchg dec push in add das ss sbb push dec push push or xchg les add adc or cmp pop push push push les ret lock and mov push mov xrelease ret dec loop movntq jno dec movsb pusha nop mov push mov imul inc or loop mov pusha xchg sub mov sysexit mov push push sub push lock lods lea sbb inc and mov stc gs mov xor pop rol mov push shrb pop jp add and mov pop cltd push or or jnp clc cwtl and dec add push (bad) push lods or dec fbstp pop xchg imul (bad) aaa cli sbb mov and insb in test push (bad) mov push push adc inc clc (bad) sub lock cli mov fstpl lods mov imul add inc xlat sub sahf test add paddsw lods adc stos decb out adc popl pushf mov stos sti mov adc push xchg dec xchg xchg xor xor bound sbbb dec aaa pusha fdivs and add addr16 add movsb les adcb xor jb lret lret pop test add je mov xor push (bad) mov jl xchg pusha inc insb mov jp out xchg pop add insl in sti inc outsb or test adc push rcll inc and add pop push std cwtl loopne push inc mov out jo inc add js aad out cs sub cmp push test mov mov pushf cmp pushf inc (bad) sub and jb xchg enter outsb movl rorb sti or les mov push pushf dec xor cmovne mov push lahf js pop cmpb dec call add fldcw fs cmp inc (bad) in or sub push imul movsl adc inc push and cmp sub xchg dec add stos xchg sub pop es clc sti xor cmp sub xchg inc scas in cmp sbbl jbe xor adc fwait es dec adc add mov push mov push inc test lock dec call mov xor test adc xchg sbb in and fwait adc les idiv wbinvd cli and mov dec sbb mov (bad) icebp push add pushf pushl or cmp push mov add jne adc or jle loopne jp repnz movsl sub mov iret jne jns repz pop jmp mov hlt and xchg xorb xchg or sub xchg and mov rcl loopne repz gs jp add xchg and repz cmp xlat jmp call cmpsb pop stc push dec rorb cli (bad) dec push xchg dec mov xor inc fs fwait push cmc rorl cwtl xlat and add leave mov inc rolb jp outsl pop inc sub add and cwtl add sub stos cwtl dec or lret aam and cld repnz sti loope inc hlt (bad) dec outsl nop loopne add movsb jecxz push adc and push jl adc ljmp jne or out adc daa bound in in or pop pop inc add enter (bad) mov jg nop aam pop add test mov movl push movsl movsl pop in xor mov xchg add jbe mov pop gs pop jl mov push and aas or dec shlb jnp jg insb in (bad) fs mov rolb daa lea test push push rolb sub xor jb popa int pop and lea add sub sbb iret orb ds mov lock jp xor cmp cmp and add ljmp jns or hlt adc inc and int3 setns out popf jmp aam mov (bad) (bad) or pop inc pop in push push sarb inc cmp adc sbb es cli mov pop movsb pusha pop test pop mov gs inc scas add sbb mov inc mov rcll xchg jnp mov mov divb cli inc add test std cmp in (bad) clc mov cwtl lods xor sarb push pop outsl sbb or call leave jle pop clc enter es fstl rorb fisttp mov ret mov clc std adc inc cld frstor cli out faddp add fdivrp pop (bad) cmp cs in and dec daa shll nop loopne adc push in mov enter dec jb aas push sbb jbe lock loopne sbb pop (bad) in mov mov cltd cli xor cld pop rcll stos addr16 fsubs pushf cmp les jmp scas add out inc pop xor add (bad) jne or push js mov popa mov pushf add shlb push pop mov sar xchg push xor jge in cmp jb push idivb fild jae xchg leave xor mov roll test sub push rcrl cmpsl adc aas jnp je andb dec lcall mov and pop inc mov jnp and sbb cli mov or pop loopne inc mov pop gs sub xchg sarl ja sub (bad) jno jns sub lods sbb or bound add pushf push pop mov roll and mov xchg aaa mov xor cmp shl and xor (bad) lock js lods add sarb dec mov (bad) aam fistl push and dec dec dec lret push les push jb test pop pop xor nop mov pop mov pop or mov add pop cli shrl in mov shlb loopne adc fadd out mov mov adc clc daa pop add (bad) xor pop jl popf cmp jno,pn sbb adc xchg call add wbinvd adc in lods add (bad) aad mov enter rclb adc or adc int popl pushf mov dec cmp cmp bndstx and mov mov and enter je adc outsl mov lods xorl inc nop jo push jmp addr16 (bad) lock insl ror test cld add out fcomps pop outsb dec fstpl xor cld fs je sbb cmp rolb add leave lds (bad) daa xchg pop push loopne test push or add push xor jo sub cmpsb sbb or push mov add xor pop in sbb cmp enter (bad) movsb pop xchg test xor sti jo adc push sub popf inc and add aam jno subb test xor (bad) call push or pop push cmpb cmp imul jmp loope call into lcall add loopne (bad) dec jp add cld inc xchg (bad) dec or mov mov mov and or push push (bad) xchg mov xor lds mov pushf and cmp fmull lods jnp cltd mov add clc adc es enter mov xor rcrb add jnp loop jp add xor mov rcrl das hlt xor lds add xchg mov push mov stos cwtl rcl mov mov xchg cwtl in mov stos int3 cmpl add lret insb lahf sub xchg and mov jb mov add ljmp (bad) mov (bad) jbe xor rorb sbb or mov fldl adc mov jo dec push pop iret test repnz and xor int3 adc or test add dec (bad) movsl jge call enter inc fs icebp lret or mov mov repz jp pop add std add and aad loope hlt xlat loope sti adc std pushf imul mov pusha and cmp movsb std jno movsb shlb sub int3 cld xchg (bad) dec pop aaa lock mov mov lahf inc or ret loopne sbb idivl push sub jae adc xor cmc push pop addb cmp inc (bad) xor ja mov fwait cmc fs pushf xor add notb jnp cmpsl imul hlt test and out dec test dec mov or in xchg sbb ret mov js (bad) mov movsl mov or and orb or inc push ds inc push stc mov inc pop out jb sti add sbb (bad) push out sub push andb or (bad) cltd xor lock sbb test dec jp xchg adc add jae cmp cltd add jle or or add enter (bad) mov in push mov clc mov insl push mov das test test xlat sub fldl or jno loop lahf add jns in fwait add ret shrb pusha aaa enter inc (bad) pop cld mov je cmp call je mov sub add add jae push imulb stos sub (bad) mov sub mov or mov cmp cmp std mov adc imul sbb sarb stos mov push push sub (bad) jo idivl xchg jge std add and pop add pop fiaddl and dec jo mov rorl (bad) dec add jg arpl xchg into nop imul xchg (bad) mov fwait imul pop cli pop mov lods xor (bad) cs adc xor loope int push lock enter jge inc xor mov cmp popa adc mov push inc xor push pop (bad) or and popf cmp jns add sbb lcall addb or sub lock mov adcb pop repnz aad cmp sub sbb lret ja stos add cmpsb cs (bad) mov mov cmp sbb push cmpsb cltd mov mov xor test or xor cmp jnp adc fidivl or test and and inc mov repnz (bad) add xchg add and imul jg adcb and xor push jo mov xchg mov mull mov push or mov or push or stos mov add notl and loope mov and mov add sbb daa sarb (bad) pop mov add push add mov inc sbb call test sbb xor js push sub push mov nop test lods insb adc fcomps dec jb push or enter jecxz or push sti mov add pusha xor sbb inc imul rorl in out or stos cltd xor pop add adc add cmp movsb rcrl rcll adc add push push sbb adc pop dec mov cld sub dec add mov imul dec xorb pop sbb invd pop or adcb shr pop push mov mov push mov mov stc inc repz pop xchg pop xor cmpsb les stos std and mov hlt insb inc xor imul popa popf loopne jno mov sbb gs shll fidivr add add push and jno in jge mov sub dec push push f2xm1 cltd mov xor mov std push push nop jle outsl jae js rdmsr mov adc or inc adc push sub imul adc mov lock dec sbb mov sub push flds sub add mov jle dec pop push mov adc push dec add lock add repz (bad) rorb or shl mov rcrl xchg stos cwtl sub faddl insl stc xor divb sarb (bad) adc cmp jge aad ds nop add xor dec pop sahf andb sbb jns xchg mov out dec les orl xor jmp lcall ja sub add stc jmp shr add scas mov inc sbb sbb divb mov test cmp and js sti and add mov mov (bad) mov mov insb lret sub xchg xor out inc sarb rclb cmp xor inc addl push insl loopne mov or inc movl into fmuls or mov add lock repnz sbb rolb jb sti add faddl mov cmp dec xchg dec xchg or jmp xor push std movsb in lds pop xor xchg lock and xor add add (bad) jns in mov push scas or push add ljmp or clc fwait je je jp jge xor repz je xor leave cltd cld and mov xor jns add ds add shll and movsb add add mov pop push outsb sub fstpt arpl imul dec mov nop outsl xchg add cmp xchg jg ss and add mov jmp and xchg daa add cli mov testb dec sub mov or add rcr pusha pusha inc cs and push jl sub pop jnp cmpsl adcb pop and scas xor mov ljmp sbbb test pushl sbb sub xchg flds out test mov push in mov dec sub ja adc add fwait pushf mov insl nop enter xchg sbb jo pop inc cmpsl push imul cmp push outsl ffree (bad) std cs lods sbbb dec fbstp mov hlt push and or iret or sub ljmp popf (bad) add sti push push or add and jne iret lock (bad) mulb sbb enter jp stos cwtl addb fadds ficompl inc inc add movsl in ljmp call mov sub pusha pop aad test mov push or psubq in add xchg (bad) cli add test je mov sub (bad) cli xor cmp es xor movsb mov mov add inc xchg pop out add push push aad jle fiadd mov iret repnz cmpsb sarl adc repz scas fimull and mov mul add (bad) je add cwtl jecxz add pop cmp into fdivs call (bad) fcmove inc or add add mov push sbb inc or imul popf mov cld loopne push fbstp (bad) inc pop jmp add mov push sbb xor mov lcall (bad) cmp push in cmp adc push out popa fildl pop cmp cmp pop lds xor mov inc xchg sub xchg jo or scas add sbb dec or adc push push mov rcrb leave mov push xor cmp aam dec cmp mov mov and sbb fadds orl and jl push pop int adc or mov pop push pop or lds popf out insb cmc sub xchg popf pop add mov popa mov nop and popf push xchg and pop (bad) mov jl sub push and sbb jbe mov and lock mov jle mov dec push fsubr shlb push icebp mov or sbb xchg jp sub sbb mov push adc aaa dec add push mov call adc push and lods mov add fs les aad pop nop and mov call mov jbe push dec sbb jl movsl lret inc mov push mov popa movsb pop out mov leave jo add xchg add fimull and test cmc icebp notl movsb fisubl cs inc sbb jns inc js jbe and dec push (bad) mov inc je lcall jl jmp xorb and std add enter mov cmc xlat (bad) sbb add or mov mov pop faddl xchg leave (bad) fstpt std (bad) repz movsl pop and insb lock and inc call les and adc sbb add xchg push (bad) in pushf loope add call add mov xor mov adcb sbb std (bad) leave push (bad) mov lods lods push mov inc mov iret ljmp sbb sbb xor int lock dec loop popf inc mov and xchg fs cmp pop mov jg mov pop into (bad) lods sbbb pushf add adc and popa int3 and mov dec movb cmpsl rolb mov push loopne pop push (bad) test je dec adc or and add jo cwtl aas cmc enter sub mov (bad) shr xor inc jo js add rorb icebp jl xor adc and (bad) out pop xchg cmp aaa stc adc sbb sbb dec mov push adc orb mov outsb int sbb jns jge add hlt mov xorb add das mov cmp push and subb or sub sbb fistl in arpl fcoms add std sbbb fidiv enter or ss (bad) and cli xchg xor test in dec dec (bad) pop xchg add mov mov adc add inc pusha in jge adc sbbl jns add push push mov pusha dec mov cmp mov in cmpsb push jb mov mov add sbb aaa pop pop fcompl aas outsl fwait dec addl and cmp adc js int mov insl or mov sbb mov and xor loope out adcb cli icebp mov (bad) cmp scas xlat inc adc push add jns outsl inc add fwait cmp cmp cwtl cwtl push cli dec fdiv and fdivrs jle pop jne cmpsb push or jp or xchg and std adc in dec xor jo inc cmp test dec xchg xchg pop leave jns sbb sub jge xchg add aam jl lcall add cmp bound ret push add loope xor pop cli inc mov mov or mov or aaa shll adc push add push sub stos je lods and push sahf jo adc dec nop (bad) add adc and jmp dec inc js jo mov popf add pop cmp jmp adc mov jge add shll fldenv pop or imul in sub in add mov ret adc outsb inc jecxz ret mov sbb add repz mov stos xor sbb jae jg sti mov inc lock or jo pop cmp mov sbb sub or fistp mov mov clc in pusha jne cli adc stos mov adc or mov mov cmp fistpl pop add mov (bad) jmp jp fwait sbb sub mov xor gs sahf jbe psubw int3 push xchg mov rcrb mov test test mov negl rcrb lahf (bad) orl iret mov mov sbb lcall aas inc push mov lds pusha sub in fucomi arpl movaps dec fmull seta and lock add sub sbbl pop xchg popf sbb sar add ja ljmp and dec adc enter sti push cld fild and xor jns or mov xor lret jmp addr16 xor add push lcall sti jp pop mov sbb push inc ffreep mov pusha sub fdivrs push lret lret sbbb jmp add or lock push (bad) in pop pop cmp mov inc mov loopne aaa fs test adc pop enter bound (bad) mov push jle mov mov je inc pop cmp wrmsr lcall or (bad) push sti into test jns or dec push outsl es incl loopne dec adcb mov adc inc cmp movsl cli out push mov add adc or incb and mov pop insb scas sub daa in rolb pop addr16 mov xor xor lret mov in aas jmp cmp mov fnstcw xor or ja cld adc pusha loopne or jecxz loope nop and mov cwtl inc shll pushf jo fwait adc jp or inc cmp add cmpxchg inc inc and and loope dec cmp add popa bnd sbb xor and lret cmc and push fsubl dec inc cs or xchg pushf cltd ljmp or shlb fnstcw xor out aad jecxz or je pop ror test mov adc cltd add inc (bad) in fld xchg jns add jbe cwtl push out and mull or into call leave outsl cmp loope shlb sub mov stos pop pop bound push push cmp sbb xor inc mov fs xor add dec jno add and or popf pop icebp dec ret dec sbb das enter pusha fstps icebp lea (bad) xor dec addl movsl repnz mov mov or mov lea add outsl flds mov adc lret push or jle mov cmp sub fwait push xor sbb adc inc das lds add lock push fildl sbb (bad) xor repz test aam jle add stos jle inc das ret push (bad) pop js es push mov ret loopne mov mov sbb divl xor jmp xlat inc push divl fs icebp adc adc fs and or push mov xor dec lahf into fwait gs and andb (bad) dec es push mov inc mov mov add and jb adc cmp rcll xor lea jb sbb push sub xor xor push dec dec xchg loope add sbb insb xchg sub xor inc cld and inc adc inc xchg push push push add ss or pop adc push hlt and imul enter mov xor pusha add out mov inc dec test insb out adc add pop popa mov or loopne inc cmp xor lods adc std lret je and out jo pusha adc nop sub mov rorb cmp clc xchg sub (bad) fild mov data16 push imul fsin xchg lcall inc leave cmp xor pop pop icebp add loopne sub inc in and cmpsb and popa sub or adcb push mov test test mov xlat repz mov add adc dec outsl sbb inc js jl in les test flds sbb add mov popa icebp sub sbbb pusha or mov les mov icebp je xchg sub cmp mov lods cmpsb push or add inc mov rcrb lds leave mov jp shlb add lods jmp push enter and inc pop pop add and cmp in int add mov stc mul sbb cli outsb jl (bad) cmp icebp test lods sub add dec add ret pop inc fs inc ja mov inc lds pop and dec fs scas jle cltd lods test sub and pop xchg xor decb jl inc cs push xchg add hlt xor stos and dec je or xor in ss ds enter inc pop sub adc orb mov lds sarl sbb mov sub sbb sbb subl fwait dec loope add sub cmp jo dec outsb or or jbe cwtl lahf lods xchg nop mov imul repnz adc inc fmull or push les adc pop aam dec add mov stos imul dec loopne inc bound rorb in call test js push js pusha fstpl insb andb lahf jg xlat cwtl dec aam mov jns mov aad pop cmp into mov insb loope (bad) mov push fisubrl enter repz push popf out test mov sub andb mov jmp nopl sub or xchg inc out dec fisttpl jns (bad) push push add inc dec cmp xchg gs xchg insb pop or cmp xor je dec sbb xchg (bad) add aas outsb repnz sub scas xor or xchg inc mov stos push cmc inc mov mov out dec aaa fs and sarl cmovb dec add and pusha or pusha add fucomp mov xlat pop and test fldenv movsb lret pushf or inc in in rcrb (bad) dec push dec adc adc mov out adc mov mov mov (bad) or loopne mov sub push clc clc je popf leave dec or out (bad) and inc and mov sub mov or loopne in mov or sti lods test outsb not add enter add mov dec or jb mov and sbb mov xor test sub movl cmp es stos sub fidiv loopne xor sbb outsb and fwait xchg prefetcht2 lods shrb outsl stos mov dec in (bad) stc add mov hlt nop adc es fwait xor hlt js shl add sbb xor sub cltd inc adcb inc je or pop cmp mov sbb scas sub pop mov lds push mov sub mov mov shlb and lds xchg cmp jge adc sbb clc rdpmc fdiv sarb dec lcall sbb push (bad) test movsb ror sbb js sub sahf or xor pusha jno mov subl ret add cmc pushf js aam add push cmp inc xchg ror and imul rorl add test out cltd or add xor rcrl xor leave xchg mov leave cmp data16 pop push and pusha jle fsubp imul jge xor mov pop mov (bad) pop mov xchg lock cmp pusha adc add jle and and sub mov and andb cli inc push sahf jbe push sub sti jge aam (bad) rclb incb mov add mov sbb or stos jnp jns ret data16 out jl hlt adc cmc sbb sbb or push or and in mov push dec pop or pushf fsubrs dec jns (bad) dec sbb inc push pop push pop (bad) mov dec (bad) jo das or mov les inc xchg jo dec dec ror mov movsb sbb adc (bad) mov add mov or and test jbe dec stos cmp push pusha push or in or ds popa out movsb inc xchg test mov repnz lock hlt rclb rolb enter nop inc jge sub in add jne movsb ja out or pop insb inc les inc cld mov rclb rclb out inc pop xchg jp ret jno add xchg push cld cs adc cmp jl sahf dec dec dec inc ret sub inc imul pop bound sbb inc dec (bad) fwait mov (bad) jmp mov pusha in pusha jecxz xor xorb rolb or sbbl push add jnp icebp test mov adc rorl sub nop out arpl dec mov and or fcmovnu loopne mov mov lock dec xor or and bswap mov inc je push mov ret pop push sbb movsl cld fistl pop fs push mov pop adc sub mov or stos mov pusha enter pop sbb gs or push ret rorl mov adcl hlt imul cmp inc mov xlat loopne,pt dec xor inc lods lods pop inc cmp dec xor jns or fs and pusha mov in jnp fucom inc int3 fs jns push aam pushf and or adc arpl push (bad) rcr mov adc mov sbb jl adc sbb sub jl leave test cmpsb lods mov jae sub or fmuls repnz xchg xorb inc mov lods ss mov ror mov pop incl test xchg cmp mov fsubrs xchg mov lock jge adc addr16 add push int addb adc or or push xor jge int3 test push lcall negb add mov pusha mov adc pusha sbb pusha repnz mov fidivr cmpl cmpb in lods (bad) stc ret cmp xor jle or push lret cmp cs in dec adc or xor les mov cld arpl dec fildl cmp fs pop dec mov add sbb les cmp aam lds jns and sub inc mov adc lods xor xor add lahf sbb sbb or push dec dec fsts repnz jno or daa mov and lret xor jl testl fstps xor loopne lods and ds cld bound xor insb stos jns cmp jne fildl shlb or js mov ret pop inc mov shll dec mov xchg and in mov jp movlps sbb sub fbld or pop and scas xchg mov pushf mov push inc or cmp adc pop mov and adc movsb mov js pop or out jl int and nop popf push call mov cmpsb fcoml cwtl adc mov jo shll call or in xchg push data16 push ret int pop push cmc adc sbb xchg sbb mov ret cmpsb fmull rolb dec test sbb jg inc mov jo jp add adc jmp repnz add adc cmp rolb mov (bad) out xchg loopne mov test lahf mov pop repnz jnp sub fistpll jo les loopne dec rorl icebp fdivs in loope test iret repz int3 out cmp jnp xchg xchg and push fadds mov in enter sub shll xor daa and add fsubrs fnstsw lds leave mov fistp add and lahf cmp test outsl call push scas jo add arpl dec ljmp sbb sbb std sti mov or les ss dec or and push pop jnp cld xor and imul daa and or sub es mov xchg xor sahf lock pushf movsb xor orb add aam popa int3 jb sbb lods mov push gs sti movsb xor js add int3 les stos loop add andl fld1 daa leave push (bad) cmp ja lret int3 in pop dec orb pop and les sbb stos jmp add fmull rcl or adc pusha inc mov cwtl sbb mov inc sub mov or and repnz sbb push add xchg adc cmpsb rcrb sbb mov roll mov add adc fildl push jno in or data16 mov xor (bad) mov push je data16 rorl sub insb inc stos orb jmp sbb int3 mov add jge fwait push and xchg mov rorb or lock fidiv sbb or push and sbb dec push dec dec add dec mov adc jp imul dec pop lods pusha sbb adcl popf push jae stc lock stos add jl loopne enter pop loope mov mov and test add or jno mov jns iret push xchg lods mov sub push movsb sbb flds mov xchg xorb loopne loope orb sub cmp pop cmp pusha addl inc lcall in sbb add inc adc or add mov and fidivrl ss inc fmuls mov loopne inc ret pusha jp sub ljmp sbb mov xchg sbb cmp in sub cmp out mov fprem or dec enter inc lret ss jmp xor decl mov xlat adcb je and xlat adc mov mov jmp cmp add add jle fisubl mov outsl mov lods mov xor cmpsl jo add sahf or fildl mov and aad lahf stos inc jg cli push inc orb sub fwait ret or or jg jle (bad) sbb and les cmovs rolb cwtl pop push adc add or cmp adc adc add jge xchg adc pusha iret cmp or loopne (bad) pop mov inc or in imul adc inc adc sbb call add daa nop in cmp dec push js sbb and wrmsr icebp mov into cmp and rorb test (bad) fsts pushf sbb fild cmp sbb cmovp add lods lahf sub or rorb out pushf push mov add mov mov cmp js cs and les inc add fstps dec cmpb in fcoml adc dec subb mov inc sahf lods ja or or push jns out inc int3 clc jno cmpsb nop or aas jmp inc inc cmp xchg js test add dec ret js add fidiv or cwtl ja sbb js dec lods inc push adc adc lret sub push cltd nop mov fdiv xor das or mov cmovno (bad) nop cmp and inc rclb xor sub adc dec lcall and mov dec jo ret push xchg inc dec icebp loopne cmpsb fistl das cmp jl sub xchg pop in mov jge dec sahf or pusha mov pop xor das (bad) idivl xchg cld pop dec pop jge dec xchg enter inc mov clc ret inc jno test lret sbb cli xor mull inc orb les and and sbb ret mov add cltd mov les jo movsl inc and cmp roll fist test sub adc sub lods adc fs mov or mov mov addb es lahf dec dec seto cli cmp loopne inc ret addl je inc sub mov mov add inc inc leave adc ret and sub cmpsb adc into or or ficomp adc sbb stos ror fs popa ds mov add mov cmpsb call pop sub sbb sub inc xor test les ret inc pusha mov and pop sub sub test and jmp js push jl cmpsl mov mov cmp inc or les jne inc lahf lods js cmp jbe cld cmp rclb ja push or inc add mov mov cld jnp loopne fsub xor fmull cmp inc ljmp pop loopne add sahf (bad) jb in dec add in imul cmp mov xor (bad) nop call movsb and or shr or loopne (bad) sub mov ficoml (bad) enter rclb push fdivrl lock movsl addb mov jnp xchg rclb push and sbb push adc xchg scas sahf (bad) push push cmp fcomps and sbb call popl fisttp mov dec xchg js inc or loopne push lahf dec adc stos (bad) jbe mov inc xchg inc test mov mov sub cmp dec or xchg js and adc sub jbe (bad) movl faddl les sbb and loopne stos sbb lret movsb mov pushf lock test les mov dec push mov mov cmp dec add add in nop dec rorb rclb and lret or sub test subb sub or sbb and and lret movsb mov sub push inc ss xchg pop xchg jl lahf sbb loope mov inc sub push xchg pusha xchg adc cld pop and adc mov xchg jns test js xor cmpsb mov ret clc inc mov jne add scas adc (bad) addr16 ljmp sub push lret sbb pushf fs xorl and jo cmp fwait jbe add stos icebp xchg inc imul add push add adc xchg jg mov dec mov mov jl jl adc push sub lret sub adc out add jb mov insb sub sub dec xchg mov clc inc xchg mov dec jge add insb mov andb mull mov sub sbb aam lds inc call sbb lcall mov adc and sahf xchg mov pop (bad) into test mov xor (bad) test fsubs pushf sub inc mov fstl lret pop lock inc or jns mov inc jnp inc adc mov call and mov or jl cmp and leave les (bad) or ret sbb mov mov fwait add cmp in popf lret insl lods adc shlb mov mov loop rolb and push jmp lock add mov lds or (bad) cltd adc cmp pop sahf push dec adc mov adc test movsb cwtl addb incl xor dec and test lea mov flds xor js xor adc lock jp inc nop movsb popa clc aas and iret adc lods jl adc jp add xchg out fidivl out adc dec movsl adc loopne pop add add lret loop loopne pop (bad) add out xchg in or or and test and test cmp add mov lea add cmp out addr16 lret imul sub push inc cmpsb dec pushf or and clc cwtl cwtl sahf fcoml xor and adc popf (bad) xor sub jecxz xor sub mov and xor adc or lahf movsl sbb fnop enter xchg int3 push sbb test fild jo and in scas or pop xchg inc or mov (bad) sti (bad) (bad) xor loope ftst and enter xor and out sub or jno xchg pushf dec xor lock mov leave push dec daa and adc mov adc mov pop hlt into or add shld mov xchg js or (bad) movsb lcall adc inc pop sub cmp xchg int3 add outsb sbb lods ficomp sbb xor xchg pop jmp les fisub movsl cmpsb dec insl add mov xlat cs xorl incl add scas push or jo xchg lods mov nop inc and mov pop sbb adc mov or and adc data16 sbb aad adc (bad) mov outsl rcrb mov inc adc setno movsl dec stc jb adc mov out pop add int jno cld jp je lret test insb js dec adc aad sahf mov inc les jbe jae ret in add or mov loope movsb adc ret leave and mov pusha lcall sbb sti lods inc in sub jb lahf inc xchg lds sti add push or pusha jo sbb test cmc mov je xchg cld dec add adcb xor adc hlt dec mov pop adcl xor lret jl xchg ror clc nop cmp (bad) icebp jns inc fsts dec int3 dec xor pushf insb dec das jg xchg sub xchg mov mov ljmp xchg mov xor popf or sti mov push sub mov pop popf mov inc add cltd jb dec mov sub sbb push ficoml jb orl shrd les cmp push out add pop dec mov pusha psrlq jne cmp test xchg or adcb push or push out dec and movsl nop rclb push inc pusha add inc inc push mov cmp jg,pt jno aas xchg imul mov pop or rcrl mov jns or call or aas inc clc push add loop icebp sbb dec lock test mov popa jae pusha inc push sbb cld sbb xor inc jle cmpsl add adc cmpsb jo mov add jmp cmp rol call ffreep int dec mov sub dec ret (bad) out in sahf into mov aas nop sbb mov inc sub test xchg and test add push mov sub add adc popf sub aam pop add cltd sub shlb popa into in loop add xchg in or add jmp jbe mov lods mov push sbb cmp dec and adc add nop xor ss ljmp je movsl insb cltd nop xor ret sub clc and clc call adc orb cmc repz add inc cmp cmp (bad) xor les mov or mov (bad) in xchg je test lods mov or adc inc or int3 sbb add aad test mov iret pop ds movsb fwait mov int3 int3 pop dec pop add or jae and dec pop xor loope add movsl cmp rclb push movsl jl aam mov cld insb mov jp rcrl (bad) lock jb push and mov icebp mov jbe sbb mov pop es enter out sbb movsl inc das js add sub out (bad) je or fcomps and push pop push xor movl cltd adc aas add mov je or fadd mov jmp xchg cs jp add fnsave xchg rol mov test mov sub lahf fcoms xchg dec sarl loope pop sbb dec test add mov cmp xor adc js mov in add scas ja mov insb ret movsl push insl movsb jbe ss xor hlt cmp mov faddp movsl jo sub sbb xchg adc push add enter int3 iret mov xchg dec stos test movsl imul ret dec mov adc fimull lock push mov movsl mov mov shll js js and cld pop or roll pop pop inc xor sahf adc test jg and ljmp xchg adc rorb das scas jae adc cmp out dec inc dec xor xchg cwtl add inc cld mov pop add mov adc nop ljmp sub jmp add xchg pop lret sub or movsb jp cmp cld pop les xorl add xchg xchg and nop pop or cmp sbbl add outsb (bad) sbb movsl test pop call add enter int3 inc inc push xor jecxz cmpsl inc add movsb pushf cwtl hlt cld mov test loop hlt and popf bound cmpsl dec loopne mov rorb cwtl dec or jg jne and and sub adc sub clc sub adcb sarb jb daa les mov clc dec mov jmp add shll in mov ret adc enter xlat xor and aad lock or rolb pop (bad) loopne or neg or cmp xorl or cmp inc cwtl adc in cltd xchg and insb or mov mov push clc je sbb in repnz jb daa cmpsb leave dec test mov mov pushf jne or and adc cmpsl lods inc push cld les mov rol rclb cmpb pushf jnp popf xor les rcll push pop pop sub lods sahf mov mov movsb mov jb add mull in and lock mov fistl loopne dec cmp lods mov mov stos pop mov (bad) int3 add lods and inc xor jo xor mov cmpb (bad) sub mov (bad) rorl dec and jae push sub mov in mov mov sub or dec bound fisub inc add into xor cmp push andb aam mov mov jmp inc mov (bad) test jnp dec nop loopne jae or icebp add xor pop add ja adc jo lods push jge enter movsb insl lret sbbl dec es inc xchg sahf push push int3 lods mov (bad) sbb mov cmpsl or movsb fsubrl push xchg push pop fmulp pop es sub in imul mov add push add add movsl in mov and mov xorb movsl xchg addr16 jp out inc testl and cld mov pop sbb gs lock repz push mov sbb popa cmp and sub adc pop dec and (bad) je pop xor ja sahf cli in std inc add mov adc (bad) les sub cwtl add scas mov in mov or jecxz cmpsl adc mov icebp lea add (bad) int3 aaa xorl dec leave mov (bad) mov mov mov call jbe inc (bad) mov sub add dec jge les test push dec movsb ret fs xchg xchg xor popf test test or and push adc xchg sub sbb push frstor mov je inc dec and xchg push test jge inc xor lret lods push mov ss iret add add sbb popf scas call rcrb adc xchg test aad jno add outsb lock push mov nop test cmp mov inc xlat clc dec and sbb cld cmp cmpsb mov add ret in xchg leave jge mov jno fiadd or ljmp repnz xor pusha add popf (bad) xor cmc lsl and bound jne nop push fdivrs imul repnz add addb sbb cmp adc pop dec in les in std mov ret cmp sahf (bad) mov loopne call pop mov sbb adc pop xlat imul push pusha xchg and (bad) nop cmp roll xor test divb xchg rcll pop adc sub popf fsubs shll xchg mov (bad) loopne adc adc les test lahf dec sbb sub out xor or add int3 rcrb mov sarb ret mov clc (bad) pushf dec or inc js or cmpb inc movsl cmpsb scas mov pop aam int popa js pop or mov xchg in lahf mov jnp add imul dec lock (bad) stos and clc jb fimul movsl xchg scas decl add pop std insl ret scas imull dec pxor imull mov out sbb dec xchg shrl sbb addr16 push cld lret lahf jl outsb pslld sti les andb add pop push mov jg (bad) pop cmp in pop xor xchg jno push negl jmp sbb pop push xchg lods sbb ret bnd out jle imul lds mov or pop push mov fstl xchg or mov repnz sarl ja mov mov pop mov jg clc pop add ja test mov daa out mov addb dec push adc cld sbb or sarl mov out mov xchg dec xchg das adc add scas std inc add jne lret (bad) jmp sti mov rolb lea orb jle sub ja mov addl and pop add out push or pop jmp shrb repz adc fs add add pop xchg inc roll into pop sbb push mov call xchg rorb lcall jle in or adc jmp shrl jne jae inc dec add out inc xchg fstpt cltd jmp xchg les (bad) cmc jmp ljmp dec jmp cmc aaa push push stc add mov add mov adc in pop shlb xchg sbb xchg test fdivl jmp decb daa mov jmp push push negl mov fcoml mov ds pusha fldln2 movsl and push stos test push and and jo cmp pop push sbb push mov cmp fild pusha inc out adc test jnp mov jmp xor (bad) mov test rclb test dec fcoml mov xor mov adc ds das mov adc rcrb mov sub jecxz add or add jne pusha mov jle adc scas or xchg popa and jle jo ljmp cmc sahf or (bad) pushf dec sub inc jb push jne push arpl arpl and lock mov xorb scas cwtl inc add mov js lcall pop andl jbe mov and in in inc jns add jmp sahf push xor xchg repz (bad) les inc dec dec loopne in (bad) hlt lock jge cmp cltd pop subl cmp sbb jnp in push add mov sbb jbe lret add sbb pop mov (bad) hlt jbe pavgb fcompl mov add rcll cmc adc movsl xchg into dec push jp add rcrl jmp ja nop aaa hlt sti or add mov sub or call lods enter pop or xor inc adc mov insl fcomps leave inc repnz add or xlat add in sbbb insl imul and or lret mov mov dec andb mov sbb ret add push test ds test dec leave jge mov sub pop xor mov push jg mov lock pop ret and imul ret rcl fwait jo mov xchg inc daa add lock ret mov jge or xchg sbb push cwtl mov xchg add test data16 jl rolb xor add push pop movsb fs lret cld nop ds loop add pusha stc dec xor rcrl leave add mov jb fwait mov sub adc mov lret enter lods pop inc cmpsb and lds or cmp stos pop daa sbb cmpsb xchg add mov push aam daa or mov add fcmovne fsubr hlt loop cmp jae repnz repz mov jne add mov aas push test xor jle or add lock xor dec int3 mov xor adc xor cmpb ja push das or insb dec jae jg movsb mov sub (bad) sbb cwtl sbb cmp add (bad) in dec sbb es add hlt xor jne icebp xchg add sbbb xchg (bad) jnp inc or sub sbb addr16 push mov enter std out test das inc sub jbe jl push xchg mov cmpsl orb enter pop pushf orb sub aad test inc inc cltd xor or mov pusha add inc fmull add add add data16 add push add mov loop pop rclb test (bad) jne cmpsb in fiadd sarb test fs sub mov test mov add xchg mov and add jl sbb push out or test aas inc sarb and sbb (bad) inc cmp add mov das pop add push dec sbb add lods cmpsl test ja stos adc jnp mov add jge test in dec call or fldenv xor add int3 aad add cwtl cli xchg adc xor cmp mov add lods inc xor addb pop push sub cwtl or jp lahf sub lods dec push xchg dec push sbb sbb sub rcrb aas and movsb mov inc sbb incl loop sbb cmp out add ror inc inc cwtl out aas cmp addl (bad) sub sbb xchg lods push dec lahf push es xor nop lds and mov add jl add lret jp (bad) pop sbb fcoms es mov pop jmp jl (bad) sbb mov cmpsb adcb fsts add (bad) movsb (bad) mov mov add push std nop mov test cwtl sub push xor test jecxz into jmp xchg xor mov (bad) (bad) mov not jg add inc fbld mov sahf mov fldcw psubusb xor int dec sahf mov mov nop test dec pop lods push enter sub cmp or mov enter (bad) jnp add cld insb push xor sarb xchg int3 test inc nop enter mov roll add neg or inc mov faddl cltd and dec aaa xchg xor push sar sbb fs add in mov xchg pop (bad) incb add mov daa lods adc inc push insb insb xchg mov je add loop in push frstpm(287 add ficoml mov pop es xor add hlt mov push lds ja mov popa movsl (bad) mov cmp cmp cmp int3 inc inc insl sub iret pop sub aad jb test nop add or xor sub clc push sarl xchg enter xor sub rcll fnstenv or or adc sub mov fidivl and lods sahf xor neg sbb sub (bad) insl push dec lods jo adc add pop (bad) pop or scas sti inc nop dec mov scas adc mov mov pop xlat push jecxz pop in subb mov inc adc fsub jg jne push mov or mov test pop shrl int imul push mov xchg pushf xor pusha dec push xlat xor pop cltd pop sub pop add push fadds sbb fs pop inc sub je mov jg nop insb adc fldln2 inc push stos (bad) es lret jl xor and mov arpl or addb lods push sarb inc test inc lock adc dec pop or (bad) outsl stos cwtl and mov xor int3 stos jns mov (bad) inc arpl out sub add mov or mov mov (bad) push out jmp lods mov pop lret addb dec mov pop ret fsubl inc es lods sub lock shll mov xchg arpl sub mov jmp stos jl nop or cwtl add loopne (bad) mov stos fildll xor (bad) rcr push dec and or sub sti add jb cmpsl mov testl cmp pop (bad) add mov push add and das inc jo lods rclb add xchg mov shr add or (bad) (bad) loopne je inc sbb int sbbb aaa add push ss mov mov or push jg mov sub int push bound dec insl popa jmp jae outsb and adc das mov dec jl add cmp mov je shlb inc movsb scas mov aaa push mov sub fsubl push inc mov and bound and inc mov and pusha fs xchg loopne aaa pusha enter sbbb int3 sbb adc lods pop push dec pop (bad) adc adc add mov insb loopne or xacquire jo ret adc fldcw add and inc mov loopne je cltd faddl mov icebp and pop add inc add jle sub inc clc stos mov outsl ret test adc adc push rolb dec or out pop (bad) add xor and cwtl test loopne je dec roll cs fdivr pop subb pop ss outsb inc dec mov repnz jle in jmp aam insb add stos jo negl sbbb bound xchg inc jnp cwtl add adc out bound xor fisub mov fstl adc pop (bad) sub loope inc rcl and enter in ret sbb xorl sbb ds andl and dec add add out mov mov call dec mov pusha and stos int3 sbb sbb shlb mov fwait mov nop lret jl arpl imul push lods mov jmp push lock fstl mov xchg cmp pop (bad) mov pop aaa in fstl loop dec test cmp fsts test mov sarb push jecxz mov inc dec test mov dec (bad) loopne in cmpsl inc pop fdiv movsl and aad enter test ds das pop dec xchg cmp data16 mov and cmpb repnz inc (bad) sub cmp js jmp push dec adc call add mov test lods add cltd xor movsb sarb inc ds dec movsb mov mov xchg sub pusha loopne jnp repnz hlt mov icebp push aam rol test loop hlt int3 fadds pusha rolb ds inc popf sub jmp cmpsl adc or adc mov xchg mov test sub ja addb pop clc ja in add mov ds dec sbb enter lahf dec sub js mov mov pop jo das cmp or and hlt jp or mov pop add fucom cmpb mov dec or stos (bad) bound pushf movsb cmp cwtl and and popa pop lods lods add orl push dec inc ret push or or fmuls nop aas pusha or mov hlt jne add orb loopne mov imul mov ret clc pushf fisubl loopne add mov push loopne call fmul leave or les out shlb in add mov js mov mov pop inc xor rcll es add dec iret mov or add outsb mov (bad) sbb insb cmpsl scas or clc pop hlt and jnp dec (bad) and mov les adc test cmp sti insl std add mov jl dec out sbb fldcw add call (bad) (bad) int fstps cltd gs dec into mov dec fsubr jno dec mov add inc cmpsl imul jbe inc mov fistpll pop mov aam add pop mov mov and sub inc mov cmp cmp xorl or mov dec mov adc stos scas sub mov rorb and add xor lock popa sbb imul pushf iret sahf mov mov std bound movsl scas push mov push repz movsb fcmovnu in jb add scas stos inc xor sub ret fstps mov inc xchg aam jecxz (bad) pop adc jge pusha or pop fnstenv inc mov add fdiv sbb (bad) mov inc xchg test mov cwtl sub mov cmpsb fildl out sub push jle add adcl cmp clc dec mov sub jne cwtl and xor inc imul (bad) mov or mov imul js repnz or inc sub dec and xchg fcompp add pop js stos adc testl or mov loop pop add mov and lods dec or int cmp fnstenv and bound push inc ret jle pop mov xor sub int and xor inc orl and inc call inc push xor and (bad) insb cmp (bad) test adc sub cmp sub movsl popa lret gs add or sahf lcall inc bound mov inc movsb call jecxz iret mov lret les inc xor int3 jmp roll aam into fiaddl dec imul adc pavgw std into popa test add (bad) (bad) xchg add pop sti adc and push lret cwtl test call pop add stos cwtl sarb or arpl loope adcb imul ficomp adc mov mov js aas dec fimul leave xor xor jg imul lods pop sbb mov loopne mov movsb aad and sbb xlat and call adc (bad) loopne mov mov pushf mov xchg (bad) pop add (bad) scas arpl adc nop pop cmp clc dec add (bad) btr add mov adc add rep push (bad) inc add lret lahf mov clc repz mov mov cmpsb jg push sub int es cmovo xchg and sub inc jmp xchg mov stos sbb aas adc addr16 leave scas les es movsb push in or aam sbb call adc pop sbb lret lods jge mov sub sarb jne push xchg jl pop inc sub inc push jp add js clc xchg push pop or cmp sbb pop and push xchg andb imul inc cwtl mov mov mov inc cli cld outsl add loop (bad) or ljmp pop pop or arpl cs add push mov inc pop ret rcll xor or cmovns in xchg add std rcrb pop movq sub or js jl fadds or xchg sbb cmpsl cmp mov jge aas jecxz pop es push repnz adc inc rorb ror fcmovbe and shlb inc push sarb int3 jb add cmp pop enter mov cmp jl add (bad) lret (bad) push imul jo add mov ret cmp lea (bad) adc addr16 lods (bad) movsl add xchg push hlt xchg sub popf cmp test add es cli sub and jo das jle jl enter push (bad) fcomps jl dec push or mov xor jnp add repz push mov lret insb push adc nop pop push addr16 ret sti fsubrl jmp scas in inc cmp pusha mov adc or pop lea popf in add and mov imul icebp cmpsl add lcall xor imul inc pushf cmp mov dec rcrl xor mov lods shlb mov push js cmpsl adc cmp or jo adc push push adc mov (bad) pop xlat mov xchg lock int3 xchg inc clc rcrl inc mov aam imulb mov mov insb xor sub in test jno xchg test add out ret nop inc mov or mov pushf mov pop lods bound insl xor push lea fcomip jg mov jmp int3 (bad) pop mov xor mov adc lret jo outsb decb add das mov jl xor inc sub cmp fs jmp mov cmp call lgs ret subb enter push add cmp xchg addr16 insb and and arpl jl mov (bad) sbb scas inc loopne xchg xchg cmp out fwait inc mov xchg (bad) pop lods mov xchg add ret cmpsb xlat cltd outsl test jl bound in orb pop test call jmp mov xor push pop mov sbb xchg nop cmc imul inc sub mov js stos orb leave add andl adc pop add iret nop dec scas xor jle mov sub (bad) test mov movq jl and push mov xor push or jo cwtl pop dec push push sub sub fmull lds movsb cltd leave testl mov adc orb jno jo fcoml enter cld ds pop add nopl xlat rcll shlb addr16 or or nop adc int3 jmp add gs mov push sar adc scas andl add inc xchg ret into movsb push mov insb jecxz (bad) in cmp es pop push dec push loopne rep into rcrb add popf imul xor ljmp int3 aam cld push fisub push add add xor iret cmp inc sub and sbb scas and jb or movsb dec nop inc inc adc cld and pop and and and stc and push inc add pop inc xchg pop xchg mov dec add scas dec hlt es cmp int mov cmp mov add pop imull cmp (bad) hlt dec loopne push rorl sub jne add dec or mov in gs paddsw movl pusha adc or cmp mov (bad) clc add adc movsb dec pop xchg add data16 test lods inc mov lahf outsb sbb add mov push psubusw add lods lahf xchg inc mov sub js lret sbb xchg and ret mov mov loope dec mov add xor pop sbb dec push adc rolb push adc fs and test leave dec add dec loopne push aaa rolb add loop int3 add nop sub mov mov ljmp fsubrs cmp jl lods and lcall loopne pop das adcb test and inc push enter add bt decb mov (bad) mov cmp enter add pushf push decb dec aam cld in inc lret es mov pop add lods popa roll imul push add and fcoms push mov add and xchg ljmp je push bound lods sub aas xchg adc into idivl sarb pop stos stos and and (bad) arpl nop mov popl test mov cmp inc notb jne sahf aaa mov mov test add xchg fisttpl sub rolb sbb push sahf mov pop mov inc lods and jmp xor insb and sub ror mov xchg lods fsubp test hlt push es lahf dec addl roll mov add leave nop and adc arpl jno push rcrl mov adc mov inc (bad) pusha mov (bad) (bad) cltd inc test xor lea inc mov js sbb sbb xchg lods mov mov mov fs mov movl mov rorl xchg cmpsb dec pushf adc mov adc xchg push idivl sbb cli cltd es cs fisubl fistl mov pop push in rcrb mov inc xor add mov enter mov mov jmp cmpsb adc std push repz mov mov ror nop jne push cmp je cs mov push outsl jecxz fwait sub mov mov nop and outsl xor push out sarb dec or into add and xlat and jmp cmp andl or ja inc add loop (bad) js pop lods sub out and add movsl adc push packuswb push add cmp pop or orl sti add ss pop pop icebp pop stos sbb cmp in and mov loopne clc mov in notl xor hlt mov mov mov addb jmp push mull cmp rorl adc popf and insb push shl leave push repnz pop adc mov mov dec add jbe cmpsb jns (bad) lret (bad) push inc int3 mov nop stos inc pop xchg ds jae xor add xchg push pusha (bad) mov or fnstcw lea and xor push mov roll (bad) outsb add repnz lods push cmpsb sub adc test clc adc push mov sbb dec cmp hlt lock (bad) jb imul out (bad) mov push and aam add imul les lock sub or jns adc (bad) cmp inc rolb mov cmpsl hlt mov add cmp jl push or mov sbb dec sti ret rcr mov push inc popa cmp shrb push movsb mov jb dec or cmc pop (bad) and iret xchg add add clc xor mov jno sbb movsb xchg jae add fcompl lret mov add mov cltd sbb imul insb sbb outsb pop inc repz shr cmp decl iret adc xchg xor arpl cmpsb ret xorb das xchg push lods stos sub sbb mov jns fild xchg flds cwtl cmp sbbb xorl fwait rorb mov fisubrl das pop jmp push add inc add repnz int and cmp sub (bad) mov scas add sub xchg clc mov lock and or mov cmp rcrb lods enter xchg aad (bad) jne cmc sbb les fisub sub in addb push bound push inc xor xor movsb fsubl lret mov and int subl dec inc insb fimull addb or movsl mov movb mov sub cld dec adc loopne cmpsl lods stos (bad) jbe insb mov push push sbb inc xor xor add xchg push fucomp test inc and pusha rolb into xchg test mov lea inc into pop add xor cltd call addl add (bad) xor sub in xor hlt mov adc cwtl sbb mov pusha sub lea dec lret or ret fadds sbb imul xchg jl rolb (bad) enter lods fcmovne inc out cwtl and inc lahf stc test dec fsubr push daa je sub adc mov adc js rolb aad out sub insb add and jp xor into pop lds mov test or jle add push aad xchg xorb pusha stos arpl jb inc or mov dec js xchg stos loopne fimul call test or xchg mov xchg cli pushf jno out mov (bad) pop inc bound jne sbb in je insb push pop inc cs (bad) jecxz pop dec jbe outsb mov and test insl (bad) sbb mov repz mov inc shll sbb sub mov push in loopne jle add lea (bad) jmp cmp ret xor rcrb mov sub jb xchg pusha or fs sbb orl xor push int3 cmp and xor and mov js add cltd sbb pop enter adc or dec push xor jg ja push and lret push cmp nop jo aas sub jb jo or and nop or add push adc in inc adc test arpl cmp mov push lods daa pop inc mov push les in sbb sbb cmpsl sbbb add inc je add inc push into outsl incl push pop scas dec mov mov mov imul add mov mov cmp push sbb add and jb cmc subl xor es or push add mov inc mov lahf stos add mov sti scas scas jb je xchg imul dec adc or push add inc and pop push cmp test push lret mov movsl and add push rcr jns bound decl mov das jle mov call lods out subb pop call dec cld mov add (bad) mov or lods or add mov jns sbb (bad) popa mov shlb sbb add scas (bad) mov iret jle lret mov adc jmp outsl and jae and or call shrd (bad) lahf mov movsl cmp cmp push out ss cli jnp xchg or mov movq push or in jbe or add cmp mov ret rolb fwait pusha loop add inc dec or push xor jp jo addr16 insb fadds lea push push jbe inc sub xor sub stos pop testb cmpsl pop jmp jo push pop dec inc cmc aam mov (bad) jno (bad) rcrb add mov add xchg sub jae jo (bad) pushf add xchg jb push loop movsb push add aad sbb add pop jo outsl sbb shlb lahf cmpsl mov in cli and xchg push sub push cmp roll daa ficomp int3 mov aam shlb out pop sbb add xor mov mov adc sub cwtl add xchg xchg cs adc stc lds pop push testb cmp inc incl sarb xchg or mov nop or mov jo fnstcw xchg and cmpsb xchg push movsb pop sub std jmp or in bound adc push pop and dec dec or add es mov or inc xor lds fisub repz or les xor add mov sub mov cltd inc cld int3 xchg in add hlt negl push mov add roll test mov ds fdivs push dec es add mov inc mov sub addb inc and ret mov subl pop int lock movsb mov fcoms inc mov mov popf mov adc dec sbb daa adc pop or je pop sub dec std add mov mov loope es movb sbb pusha xchg cmpsb pop xchg jle push fimull mov scas push sbb xchg and movsb insb or fnstsw inc std xlat cmp outsb xor roll and jns fcmovnbe nop and (bad) inc or cmpsb push pop js cmp (bad) loopne mov lea mov aaa jb push jo xor jne int add es or and ljmp sub and mov stos aaa jle mov cmp mov add cmc jmp inc mov movsb fcoms in add dec pop jne incb or pop (bad) ja jle loopne pop (bad) xor mov shrl jnp es pop push jmp insb mov mov inc sbb je sarb (bad) jge add fsubrl push roll bound out xchg in (bad) sub or jno cwtl mov movsl cmp icebp or test cmp out sbb test mov add sbb inc cli inc andb shll sbb jns inc mov sub sbb popl sub rolb push pop add pop movsl shlb rcll and testl mov mov arpl lods fwait (bad) fildll es mov test mov or out jb scas jno fs icebp test add lret push (bad) sub mov shrb push psrad mov mov push lock shrb cmpsb and xlat lea inc dec lods fs pop lock (bad) add faddp repz inc loopne dec inc sub lods xlat scas mov jne mov xor inc das cmp inc add mov mov xchg cmp jne sarl jb jo out test xor xor nop adc or adc mov sub sub mov ljmp push push js sub and sub iret or add rcll sarb (bad) or ljmp lds rcr (bad) xlat jo insl (bad) lods adc ja (bad) xor and sub xchg stos jo fsubr dec mov sub push inc cwtl sarb add iret int3 and and adc xor insl mov adc (bad) leave mov sub lcall xor mov add xchg jnp shlb pop insb jl and inc and xor movsb jns push mov push dec cmp or xor sub and push out sub adc (bad) (bad) fsubrs shld rorb ja push add or sub cmpb ds mov jbe es inc and cmp adc pop loopne repz push and pushf icebp add jge pusha aas fdivs out pop es xchg lea mov add dec mov dec and xor dec inc leave add push adc xchg mov cmp and mull or pop dec jo and pop hlt push sub or mov jbe xor cmpsb or add or or or rcr sti (bad) xor xor inc and sarl sbb add push aam push pop push pop push xchg pop mov repz or imul stos xor lock sbb pushaw dec repnz mov push loopne loopne in push cmp scas and inc xlat adc outsb jmp sub inc jecxz jecxz and jle cmp xchg ja push loope push push adc nop ficom aam hlt mov mov lock xorb pushf adc jg sub push pushf lock jb hlt cltd inc pusha sub inc or adc (bad) sbb sti jno repz loopne daa mulps ficoml xlat add inc outsl leave adc sahf cmp jne mov js cld push sub adc inc pushf jo sar mov mov out pop cmpsb mov aam inc pushf add pop pop mov sarl add and xchg imul push push loopne xorl fmuls sbb dec inc test sub mov or add data16 adc fiadd call or ljmp (bad) dec test (bad) and pop sti rorl lds (bad) xor xchg add mov add in pop cmp mov xlat add dec inc jbe adc sub jae faddl lds or out fstpt add dec je shlb faddl cwtl lea push jecxz fisttpll (bad) jle es and movsb add (bad) clc mov inc sbb and lret fwait adc cwtl dec rorl cmpsb or push pop in cli push pusha pushf mov jge data16 sbb cmpsb mov fwait push fxch test lock inc adc sbb (bad) aaa cmpsb mov pop lds mov cmp mov in outsl inc push es push (bad) sub lods subb adc pop push in adc cmpsl js jbe or mov mov add xchg sub fldenv mov mov dec sub sub subl rclb push dec inc leave cmp mov xchg fidivl (bad) sub lea or (bad) jo sub xchg or js jecxz push jmp mov or cld push (bad) xchg jmp rolb or xor (bad) (bad) add xor and or in int3 sub mov dec and es (bad) xor movsb dec divb pusha out fwait imull mov dec pop addb push (bad) and and shrb add es pusha in das sbb cmp push pop ja int3 mov popa cs in arpl jns rorl xchg xor fsubrs cli mov sub jg popf and ret xchg rorl jl cmpsl inc loopne cmp push cmp scas (bad) sbb subl adc sub cmp xor sbb ljmp andl fs clc fwait mov mov addr16 jle mov andl (bad) pusha add inc add movsb or mov pusha cmpb xor test in iret cli loope aad aam sbb ror push inc push fcoml rclb outsb sbb out (bad) ret nop in daa add xor jo cmp test call jno sub adc popa and adc add andb sub sub xchg xor stos push add ja pushf rcrl mov fsubrl leave sbb push fcomps sbb mov sub sbb pop outsl js,pt mov jbe shlb addr16 xchg bnd shr ds push adc rorb add arpl stos lods push mov mov aad cwtl cmp mov cmp add dec mov movsb adc imul jle mov sub and xchg mov dec scas lock lds adc dec push faddl inc fs add add cmp pop xchg push shlb push out push jbe jns loopne fnstenv fnop sub fdivrs jp and dec jo loop neg lock (bad) sarl add cltd add ds arpl cmp shrl lock add pop loopne lret sub sub mov push jb pop sbb push lcall movsb inc and pop sbbb (bad) xor invd inc and das jae mov js add dec mov dec fwait sbb push sarb aaa jno xlat sbb push adc jo lds loope sbb pop lods aam lcall mov mov orb xchg inc sub notb adc jo out repnz lret test xchg rorl mov inc in loopne,pt lcall pusha adc insl dec pop nop loopne cli imul add outsb dec les push jae pop cmp jb iret jmp rclb aas pop int3 lods mov das sbb adcb mov push (bad) mov sbb push or push jb fsubrl add insl xchg mov pop dec rcrb aaa dec out fld shl data16 push jg sahf add cmpsl lods call cwtl rcrb inc and shrb sti mov or inc rclb aam push mov dec sbb jb sbb movsl jg sub in stos jns push add fldl stos bound (bad) or cmpsb mov shrb iret adc sbb add pop orb dec fcmovnb cwtl sarb divb jo push fsubl les insl in pop dec push pushf int add lds mov mov pop push jle bound dec and xchg add rol lods push fcmovnu loopne nop andl cwtl add ss add adc sub rolb inc test test inc mov (bad) mov lea outsl sbb and pop mov and or in rcrb mov (bad) pusha mov les enter add or xor add incl (bad) fwait std je add lds add das cs lock add call frstor inc push pop dec movsl (bad) (bad) sub xor bound xchg mov add mov xor (bad) xchg sti mov jo sub xlat repnz cwtl inc sub jb mov add pop decl or addl adc add push push mov sub inc lret or or dec sub add xchg push push in sahf popf mov enter jle pop lods xchg sbb push xorb lds mov in loopne add mov fwait hlt add sbb inc fs add lcall mov lret ficompl shlb rolb inc xlat sub inc sbb js add adc mov jno insb inc nop push mov lea sbb insb add ss sub int3 lods or pop jge enter int3 xchg push and and fcmovnbe rcrb pop add push stc jge pop cmpsb mov rolb xchg rolb enter lahf add (bad) aas test ret test add inc pop outsb pop hlt adc mov push std pop cmp sub pop in xor and sbb movsb push inc dec dec stos cmp sbb cmp sub pop sub insb adc pop je je add loop mov nop cmpxchg add daa jl cmp sub add imul mov test xchg jae jno outsl push (bad) int3 jmp movsl or fiadd nop sub scas adc xor xchg mov bound incb mov mov scas cld xchg push lods es cwtl inc xor out stos mov sbb xchg mov add push orl fdivs lods mov aad in clc cmp sub outsb push lock inc call inc add je sbb jo xchg sarb xchg sub outsl cmp adc push or pop ljmp bound mov popa and inc xchg dec cld int3 or xor and add cltd inc mov stos add mov out int3 ret mov incl nopl mov popf lahf mov pusha dec call insb mov mov mov pop hlt xor test sbb adc pop push (bad) adc or into xchg shrb ret and pop inc rcrb sbb cld mov add pop (bad) mov pop and bound sbb sbb mov push imull adc and popa push and test mov xchg mov push lods mov dec dec pushf xchg test shrl xor pop add push xor dec xchg pop sbb push lock adc jne inc xchg fistpll jmp fs xor xchg out mov rsm jne les js add mov xchg and sti jmp xlat lcall add pushf push mov sbb or imul addr16 lds inc push mov popf dec mov push sbb adc sahf les and loopne inc push and das (bad) js mov push push cli std orb rol (bad) imull and fisttpll cmc adc sbb nopl call mov (bad) in add pop je mov unpcklps jl cmp push mov (bad) and ja into sbb mov call adc faddl dec and (bad) xor sarb mov je mov das mov lods cli dec xor pop jmp es push int3 add bound cmpb popf adc imul in or xchg xchg and loop sub mov push jo push inc inc cmpsb das rol push movsb jo (bad) dec cmp jno mov aam or mov add (bad) sub xor mov push mov mov fs add (bad) jae dec stos add xor pop aas xchg dec jl or adc (bad) jne pop or imul push jnp movsb dec fsub mov leave ljmp into push int3 jmp test adc and idiv xchg ljmp dec jle inc fidivr fs ja (bad) sbb inc js lcall inc popf mov int mov mov movsb rcrl mov dec popf les cmp or stos loopne lahf inc adc cld cltd sbbb movl mov jnp sarl (bad) jne mov and adc lock dec insb shlb adc adc add jecxz lock pop dec pusha mov push xor add adc inc mov add adc push pusha ror hlt sub cwtl call scas and and gs fcom mov pop inc dec hlt cmp imul cmpsb push adc xchg cmp push test data16 cld movsb fsubs in pop nop inc (bad) nop rcl movsl in push sub sbb outsb mov mov nop mov negl dec mov int3 mov mov sbb test sub lock cmc test adc je mov jbe dec and and sub jns pushf push addr16 lds test movsb cmp (bad) mov sbb rol and pop cs push adc fcomps (bad) fisubrl add add add dec and xor test xor cltd rolb iret jle outsl mov sub adc mov ud2 adc xor or mov mov scas mov shlb ds add test lret pop testl rolb cs inc mov push movsb call adc mov lds mov xchg dec sbb mov mov xor xchg sub push sahf nop arpl and adcb cvtps2pi and rorl loope mov pop or imul stos add mov push scas pop test in dec mov add lea shlb cmp dec push popa cmp imul ljmp add pushf inc push stc lret repz mov sbb mov gs dec in mov bound xor insb dec cwtl pop pusha leave sbb lods cs pushf xchg daa pop enter (bad) loopne jb adcl and dec or stos inc stos sub xor inc in subb inc repz sub out dec cwtl ja and lcall xor insl xor pop sbb and jnp clc stos dec repnz and adc mov or fcoml loopne or sbb add sbb sbb int3 and pop xor daa (bad) ds sub add or orb aad cmp sub pusha cltd aam inc je popf aam lods lds sub mov xchg stos jno or or aaa lods test cmpsl xor push aam mov or fs xchg movsb add xchg bound add lcall fsts faddp jno js aam bnd mov dec in sub adc movsb and in pusha mov mov (bad) sbb getsec imul dec (bad) mov adc adc cs and cmp in orb cmpsl daa orl jns (bad) in xchg push dec jb push arpl fimull mov rcrl inc inc mov mov lods jecxz or jns add xchg xchg xchg aam rorl xor rclb jne add es int3 fdivs and cmp jo and xor in call popf (bad) aaa adc pop jo addb lahf loopne push mov lds mov mov add adc dec jecxz push fwait xchg notl lahf pushf sbb adc jo rorb pop mov mov mov mov rorb daa cmp (bad) into pop mov cmp adc pop shll push add daa jmp push stos clc mov jno fwait loop add xlat mov mov repnz test fsubr add hlt popa rorb mov xor mov inc arpl incl ds adc test xor add mov setae js pop adc cltd orb clc cmpsb cltd cmp pop aam lcall aad imul or out and adc out sbb sarb pop pop mov test scas addr16 (bad) (bad) call out add pop iret push int fsub lods lcall lods js in fsubrl xor rclb and (bad) test adc sahf xlat ror add rorb sbb je jno enter (bad) ljmp ja movsb loopne inc pop lret cltd and ret pop inc adc mov sbb adc dec and push xorb ret push es adc cmp jo cmp push mov add and add jbe cmp insl cwtl or mov mov data16 sarb repnz fwait pushf out dec sub in cwtl xor cld rclb nop sbb out nop mov ss pop rcrl mov push push push gs ret mov mov fstl (bad) push add negl lret mov add push pop add scas (bad) das mov and addr16 jge mov or in or stos scas sahf pop mov sarl repnz pop xor lds xor cvtdq2ps (bad) mov xor or daa add xchg lcall or jl adc xchg dec pop je push inc les sti mov es cmp fcoms fs mov cltd cmpsb push jle es cmpb mov fs add dec adc mov xchg mov xchg adc jl daa cmp mov or fs lcall in test lods pop jge push jo pushf inc insb jg pop dec and inc sub fsubl add mov mov jb mov sbb mov rorb mov lock push cmp jmp push sub adc aaa adc lods fsts mov movaps mov cltd and popf xchg xchg stos adc imul dec aas sub cltd aam fisubrl jnp and xchg mov push lcall adc cld test arpl subl inc je bound imul lock lods ljmp (bad) jbe inc mov subb inc pusha adc adc xchg inc insb push repnz jno push sbb mov addb iret bndldx or rorl movsb pop data16 inc in xchg cld xlat in scas mov lods enter fsubs mov mov test fmull cmp xchg rorl scas adc loopne cmp call mov xchg push enter test and lods loope jnp out adc inc fdivrs jbe add sub add pop lcall or in xchg arpl (bad) cmp cmp daa xchg xor mov push or jl mov pushf orl fwait in push (bad) fcoml lods adc add out xchg sub pop pusha mov xchg loopne cltd mov unpcklps pop test push jmp mov fsubrs add lahf aas jne push clc dec movups inc push pusha outsb inc fcmove mov mov push js cmp fisub cmpsl ret xchg xchg sahf stc and sbb push lahf add xchg lds shlb xchg xchg pop cmp movsb test push rcrb lock push mull xor cmp add adc movsl add push mov dec cld cmp mov push mov cmp adc wrmsr fstps lahf mov and pushf (bad) jmp push sbb dec sbb xor xchg popf mov mov sbb adc movsb cwtl xor cmp mov insb pop arpl adc leave mov jp mov jmp sbb add adc adc jno pushf mov xchg popf and aas add jge jno mov orl hlt add ljmp sbb adc cmp dec das jb enter add pop jmp add jo jne and push sahf add lahf lcall cs mov (bad) push subb mov jmp jbe sbb adc (bad) xor cli mov push cmp xor pop cmp add mov shrb mov mov adc pop xor sahf pop add fsub enter mov sub dec call lret pop inc add (bad) outsb sti add pusha cmc test and inc subb push pop jecxz or inc cld cmp and cld or sub scas cmpsl mov add leave ljmp lods dec or add lds pop xchg daa xor mov add xorl jle mov addb dec lret leave loopne or dec je pop dec lea mov pop jno lods inc sub and inc push xlat push add adc push cwtl cmpsb jp add sbb mov cmp jne cmp out and mov jg sahf das xchg push ftst test cmpb bound adcl cmp mov jbe arpl addr16 cmp arpl movsl xchg pop movsl bound in push inc pusha pop adc fmuls into sub aas and sub xchg mov outsb stos loope inc or mov dec and outsb clc inc xchg mov pop push and pop insl fmuls or jle xor push inc push push mov pop inc mov nop and ret testl push adc add cmpsb test jecxz adc xchg adc dec int3 cmp add and fsubs call adc push fsubrs add mov insb xchg inc rcl sbb ljmp mov xor fcoms adc lea notl push sub xchg mov idivl fist mov jne xor dec or lods inc lahf (bad) xchg lret sbb or (bad) idivb add incb ret and pop sub sarb ds and rorb jae jnp sub ds outsl je loopne adc enter jmp sbb jb pusha pop out rcl nop je cmp adc out movsb aaa lret je outsl xchg push mov add stos xchg jne imul subl (bad) and das daa jno add scas and mov imul test mov adc shlb cwtl jnp insb mov dec push push (bad) cld ja loope in add adc lods scas ret sbb xchg movsb inc mov fsubrs pop pushf mov jmp and mov jae add and mov std push sbb adc cs lahf push xchg mov lahf add jnp movsl add mov or mov add movsb xlat cltd sbb popl adc xor adc xchg int3 mov mov icebp ret (bad) mov pop popf adc pop pop mov adc push or in push add cmovo lods dec sbb cmp in pushf in inc pushf push sbb dec into inc daa xor rcrb fs pushf cwtl push and jns pushf and jae lods sbb je add or inc shlb nop xor bnd lcall mov cmp jns cmpsl enter leave inc push sbb dec test push mov mov lods sarl adc adc add test lods adc and and fs lock jecxz add cld out jge push lods push dec adc jns xor jl add or inc sbb call mov insb cmp lcall pop xchg dec lds adc leave push dec dec pusha push cmp xor mov and fiadd xchg jmp or push in inc and cld sub imul test dec sub cltd jnp add insb (bad) idiv scas sti adc jb push lahf lock jmp cmp mov xchg or adcb inc js jl xchg dec nop pop sbb sbb cmp jp sahf pusha aaa sub adc (bad) mov dec cmp cltd imull add stos (bad) xlat popf mov mov mov or mov in sub cmp add mov ss fwait push sbb and es mov mov fsubrp jecxz or xchg enter add xchg or sub sub and xor lock xchg push shrb mov add cmp mov jp insl dec nop (bad) add jae inc and ja mov adc loop enter xor add (bad) popa aaa aas push push dec adc adc xchg fsubrs adc jl test lods outsl cld sub adc mov add lcall xchg (bad) adc mov or or add xchg pushf cmp inc das roll bound mov (bad) adc xchg ret les sub movsb aam cld stos or mov (bad) dec addr16 push arpl mov ljmp sbb xor imul clc xchg mov lahf roll enter pop or popa ds outsb rcll mov push mov add in mov add pop xor jb dec imul xor jmp shll add jo std sbbl mov rolb pop push xchg xor (bad) mov call xorb pop out repnz ja inc outsl aad add sub and mov std outsl pop adc sbb add cmp iret adc daa icebp enter sbb scas pusha ret les lret push call fidivr (bad) fdivl sbb sbb add (bad) mov push inc in nop pop lock fstpt cmpsl mov xchg fcmove sbb sbb (bad) nop pop enter adc jmp sarl sbb jno xchg jg subb scas pop loopne cwtl unpcklps cli mov jp (bad) mov sahf lretw in jne nop pusha add lock push sub xorb out push repnz dec fmul movl cmp or mov or add mov xchg addr16 and mov jg mov push mov imull mov lods xor adc cmp and xor sarl dec icebp cltd add dec mov jno ret popa adc hlt sarl mul test or jmp mov xchg adc mov imul xchg sti hlt popa dec outsl cwtl push add add dec inc loop xor add push push sahf pop stos add ficom int dec xor dec inc or repnz aas aad add imul cwtl int mov xor hlt xor or (bad) in dec jl push jbe sbb and sub or out mov nop or add dec add and add lods or mov or pop mov fnstcw push and xchg inc div mov outsb push loopne push and jbe xor imul mov cmpsb adc and push push loopne jle jecxz pusha lahf outsb lock test pop xchg xchg insb mov and fiadd add pop lcall fmuls std fsts xchg mov cmpsl fldenv mov and sbb aaa add xchg orb mov add xchg push dec in add jne sbb loop fstpl push push or movsb inc loopne pop (bad) adc test xor and (bad) loope jmp repz imul sub rorb mov clc push in inc xlat rcrl cmc cwtl enter adc lcall push stos test xor fildll add (bad) mov pop mov incb cmc cmp pushl xchg insl sbb pop pop inc push push cpuid jns ja push and insb jbe mov mov das dec nop fsubrs xor in jg adc pop pop push push (bad) dec js and and js adc add sub std adc fdivp add xchg pushf or and push dec sub sbb jns mov inc mov in dec push mov mov or imul cwtl mov add outsl leave decl fs scas pop pusha sarl out jo es push loope add mov stos dec or (bad) stc xor xor adc enter push jo sub pushf mov bnd testl inc sbb mov add pop int3 cmp pusha sub jne xchg mov sbb faddl add js push fprem add syscall add mov jge sbb mov lods mov stos incl sub jmp std cmpsl nop cli mov sub test or pusha addb clc int cmp pusha mov movsb rolb pop push push lea lods mov inc inc or add or dec jb inc hlt pushf fsubrs xchg pop scas sub aas jne inc or inc mov test or xor bound pop icebp mov lcall mov sbb bnd adc push add stos push hlt sub and movsl sar and jg mov inc jp mov pop mov xor sub sbb jae iret inc sub mov scas jge inc daa jae inc mov add out mov int test loop loopne sbb inc js fisubrl inc or (bad) or or and pop arpl cmp imul and inc add push dec mov xor clc inc ret xchg sbb push push (bad) ss lock inc and mov call pop aad imul in xlat rclb cmpsb xchg pop leave lret in dec sysexit adc push and xchg mov add inc jg push mov adc xchg add icebp incl pop mov stos and mov sub xor popf scas jle negl or daa push jl shll repz pavgw addl clc icebp pop fs sub repnz or pop mov shlb cmp or xor mov sti mov and sub in pop xchg idivb jae scas ds test out xchg jmp mov out pushf dec adc (bad) mov sbb xor adc icebp mov dec (bad) jo inc adc mov iret xor xchg mov out cmp xor rorl sbb dec push or or mulb and movsl sbb pushf cwtl adc mov adc dec sarl rolb imul cs fadd ret mov dec fnop mov iret call add and push scas add pusha (bad) add pop outsb mulb dec sub pop rcrb cmpb loopne fs push inc std pushf in and (bad) xor and stos push mov xchg fcomps ds icebp add add jae xchg sbb mov rolb or mov fcomp cmpsl add popa sbb jle jae cwtl arpl sahf sub and add jp jbe and movsb out loope jle clc sub and mov push push out cmp loopne or rcrl enter (bad) les add dec push mov push jno mov stos sub add mov jnp pop enter pop out or rol jg push push jge and sub mov negb sub inc add adc aam cmp inc or addr16 adc shlb mov cmp adc adc sbb subb inc and xchg inc dec mov mov add enter sub add push in out sub sbb in add gs std dec adc jg int fcoml pop sti mov pushf inc push xor add (bad) clc xchg (bad) mov dec adc (bad) add lods test dec js xchg or xchg sbb cmp rorl call enter jo inc scas mov mov dec xor xchg push enter int3 cs fsubl inc dec test jl push add push or mov add adc xchg inc enter or in sub andb push or js nop into lods push pop jecxz cwtl sbb add repz xor and nop cltd dec sub fmuls in mov mov rclb sbb loop data16 jo and subb rorl push cwtl inc mov sbb add into aas inc data16 rcl or test cmpsl data16 movsb add ret mov fmuls push imulb mov mov or test stos (bad) pop loopew jnp xor (bad) mov ror rcll push out pushf call in mov xor shrl xor lret inc test mov adc sbb mov xchg and mov xor inc jg,pt cmp nop xchg dec lcall insb js or (bad) sub cmp outsl std xchg fildl mov push pushf or cmp push loopne jns ds rolb lods mov mov jb sar in add xchg push das lret pop js add jg imul inc push mov icebp push mov imul movsl or loop (bad) or subl pop enter rolb pop fdivrs xchg (bad) push xor xor int roll nop std xchg pop int3 or sub jecxz stos inc pusha mov sbb inc pop jo mov cmp xor xlat stc mov xchg jbe xor notb xchg or ret inc jb test or dec faddl aam mov ficomp sub loop push int3 js mov subb fnstenv sarb sti dec push (bad) lods leave inc sbb imul push mov mov mov or sub pavgb lods xchg call cmp mov or jg lds loopne dec adc sbb lret sti jb cmpsl mov add repnz sub addb xor movsb dec dec push adc pushf lret mov dec mov rcrl jo add and les lods andl mov sbb fistpl popf popl sub push inc rorb sub xchg push cld sbbb cwtl mov pusha jo movsb push into cmp les ret adc add nop jns and ljmp mov sub (bad) mov xchg popf inc xor outsl or mov cwtl mov test push les repnz adc nop sub and and mov pop loopne mov mov in add and jns push rcl or aam lock add cmp fnstenv inc add jae test mov push xor and dec cmp rolb sbb mov and jg add in movsb jns repnz push aaa jecxz fwait mov test mov xor lods push out in fs outsl leave pusha sub sub inc and les inc arpl xor xchg shrb xchg cmp rorb inc lock js pop dec push cltd inc cmp test rcrb cmpsl sbb or sahf lds loop fdivrl pop loope nop push jmp adc push push sub or add sub fstl mov and pop imul jl adc and xchg leave adc sub dec jl rolb call sahf pop pop mov add add sbb adc bound mov inc mov add aas in lods shlb mov pop push int adc (bad) cmc cld mov pop iret mov pop lock leave xchg dec add fsubs dec and inc aas (bad) sub and outsl pop or mov or pop jg and push stc push jo adc cltd sbb push imul in lret xor sbb push push fstl mov sbb ror xor icebp jl inc ds pop push in ljmp sarl popf or push mov push add dec data16 dec roll das popa xchg adc aam sub iret sub pop mov popf loope cmpsb pop xor (bad) shrb pop xchg adcb xor rolb int3 sbb fiaddl xchg cwtl cmp and in add push dec push and mov gs mov sub mov push cmp or psrlq insl push jb xor push pusha cltd xchg ds mov insb sbb icebp xor push dec jb cmpsb mov or fstpl pop mov add mov xchg inc inc jns cmp fs or add sahf fwait test add jle jno iret jl add mov in cmp test dec xchg push lods and sub and mov sbb add in fistl jns adc dec jbe test aam push rcrl test push pop jno adc call or and addl out jg add xchg cli sub xor adc mov xor lods pop test popa pop arpl xor mov or adc mov stos cmp cld push decb mov mov add or inc cbtw and test rcrl add iret jge xorb fildll add stos push jle loopne mov movsb lods pop cmp adc jmp ljmp test mov xchg mov mov xchg dec sbb rcll lret out test or xor pushf mov add cmp aas push add xor sbb pop inc out sub sub jl cli testb stos pop and adc inc ss xor (bad) std nop sub fsubrs inc cld lret xor loope aaa xchg add sysexit inc movsb (bad) add dec jle (bad) jb movsl cwtl data16 cwtl fdivl lock aas daa ja xlat jbe shrb je rolb sub pop mov pop daa aad fdivr sbb adc loope mov cmp (bad) or or push xor insl cld dec pop sub test js and movsb inc or jb add (bad) in mov mov repnz repz add and jns add mov sub imul call xchg daa andl push dec jno test lahf xor popf and mov les leave test enter test cltd js test pop push bound std mov xchg test mov xchg jo add sub add add xchg mov sbb or jo decb imul int enter or add jbe xor and or push or aad add or imul popf leave enter cmp add dec sbb push xchg je cmpsl rcrb dec loop pop adc gs add and mov scas out ds arpl xchg xchg pmullw sbb sahf sbbb push lea jl divl cmp mov mov sub and lcall mov stos xor icebp test andl stc lret loop cmpsb sub xchg sub add xor repz mulb popa popf loopne push cld add pop mov test add lods stos mov test test or mov sbb jns mov fcomps add add xor int nop mov or test adc push pop sarl insb sub insb jl (bad) dec xchg push ficompl xchg lcall add sahf mov sub ret adc fcoml orb mov adc xor add mov test ret negl lock ja dec jns pop test out xchg lcall adc stos or cmpsl stc test mov cmp sbb sar adc mov push pop test lahf add repnz pusha ljmp adc pop sbb stos xchg enter cwtl test jge mov mov adc sahf add icebp add mov movsl mov dec inc add xchg pop jp mov iret cli jge pusha jne adc mov add ja cld testl test addr16 clc add push adc fcmovnbe in icebp insl cmc pop xor lahf adc outsl pop fs sub sarl jnp lahf inc mov out ret fldenv pop aad in jl popa add (bad) fcompl int ds test cmp sbb add and fisttpl inc enter mov js fs adc mov mov repnz mov hlt sbb fistpll fimul out inc sbbl jmp sub jmp ds notl dec adc outsb push inc cltd subb sbb pusha pushf adc repz adc negb mov inc fisubr sti sahf mov out mov dec loopne leave dec roll push popf and xor and jmp sti cmp adc mov rorl push scas bound movsl arpl push pusha fnsave mov xchg mov test xchg dec rcr test push adc and mov mov aas or jo xor xor inc and sbb add jp inc mov adc arpl cltd sbbb mov dec in ja sub sub jmp (bad) data16 push inc push test in jmp fmuls test pop ss pop aad sub push jl xor sbb nop call movsl hlt ret xlat add or mov mov pop lock xorl add cmp mov mov aaa test sbb add sbb mov mov (bad) rolb add sub out jecxz jmp sbb mov cmp pusha imul cwtl jge insb jbe int iret rorl jno dec and adc mov test test or and (bad) sbb inc scas shl pop xor test sbb mov jbe adc out shrb and cmpsl jbe or sub in dec add cmp (bad) hlt sub les sub clc xorl cmpsl or fucom xchg insb push subb mov sbb dec out nop nop add icebp cltd push ja sub adc add fbstp jbe xor and xor and adc dec in pop push clc sub xor inc xchg cvttps2pi pusha add cwtl popf and inc mov mov mov lods mov xor fidiv (bad) clc stos fadd pop mov push insb and sbb lret leave je xor mov jl or or insl cmp cwtl adc inc dec xchg fldl jecxz shrb dec dec xor jp cs add inc or les scas dec push xor es fs or enter movsb sbb loope or adc adc add push pop mov xor rorb xchg pop push insb push add inc sub xchg faddl gs out loopne movsb lret loop or out push jo and es lods push icebp mov out jle sbb inc xchg negl jb push aad or adc shrb inc or push or imul bound fwait cmc scas int mov and xchg cs adc mov push popa ljmp pusha push sbb mov push xchg adc and cmp outsb and cmp je sti xorl pusha mov mov int3 jns inc jl popa push mov cmc imul pop insb leave insl inc adc push push or loope pop or sub xlat jge lea hlt push fcmovbe push sbb mov jno lods jo push pop pop sbb cltd xchg push into sub xor mov pop rcll xchg pop pop mov mov sub lret aad dec int3 or cmp xchg dec inc test enter popf fisub cmpsl loop popa cli adc in cmpsb cwtl pop movntps popa ret test mov dec mov push add xchg mov std inc ljmp orl inc mov lds mov and outsl mov mov adc fwait test in ds push into ja xchg and shrb mov and cmp js dec outsb sbb mov pusha adc add pop (bad) cmp or outsb xchg adcl inc lock pop cmpsl add mov pop int add add or inc add mov cmp cmp push aas cmp aad movsl sub sub and or dec adc push xchg xchg sbb mov push das stos hlt sbb insl xor rclb roll xchg and jns add repnz ljmp jmp fdivrl jp inc out sub loop pop lea pusha sti adc add out imul add inc cmc divb xchg push dec mov sub jo cmp mov fwait pushf xor cltd fldl test dec mov sub nop add pop mov movsb iret nop and fwait push dec dec adc inc jbe add inc jecxz push push call mov mov or mov add pop xor fwait sbb loope bound popf xor cmp add adc add popa shrb jg aaa mov stos xor and (bad) sub lret lods pop jl jb mov mov adc sbb adc shrl cmp xor jl outsb sub or dec pusha add repz push (bad) lret out xlat xor cltd sarb adc stc test ret and (bad) ds test and loopne cmp nop loope sub cld mov or lods test out xchg pmullw (bad) mov xchg and es pop mov jo stc cli sub sbb daa nop call iret scas add addr16 pop insb push rcr test lret jae cmp and inc repnz popa mov andl jo adc push cmp fstpl inc push xor imul sub out loop aam pop stos stc pop arpl (bad) push into dec mov adc aad pop pop in loopne jae inc ljmp je mov int3 hlt add test lods das cli daa jmp jle xor xor fdivs push (bad) (bad) jo call sub push pop rcr iret xor jle sub lret int add aas movl sarl cmp push mov test fimul cmc adc movsb addl pop mov mov dec push enter nop mov in call in test push cmpb add add dec aad xlat loope lods nop xchg test mov cmp or dec popl insl pop jl mov cmp int xchg add fmuls xchg cmc rcrl dec mov fs xor mov adc xor mov in xlat mov mov leave dec out in sti int3 je or pushf lret stos loope mov rolb and sub (bad) adc push test outsb repz in and in insl or in fldl cmpsb push push xor out and mov pop inc push out push rorb enter sub mov jbe sbb call adc inc cmp enter add lcall mov cmp cmp and pop (bad) or dec rcrb fidivrl mov jno push dec pop ret stc jo pusha pop add pop dec ja insb push jl movsb dec cld push les adc popf add jo stc dec ss or cmc pop sbb mov dec call mov faddl mov test push hlt add out pusha pop cltd add testl inc loop xchg arpl and inc cld adc inc adc mov pop sub rcr inc cwtl push jmp xchg jne pop shl imulb add lahf into lock push addl mov jl pop push xor pop cmp sbbb add cmpsb rol add or cmp cmp xchg pop iret xor adc pop inc mov lcall scas mov jo jbe adc testl insb pop sub (bad) lock cmove cmpsl popa or faddl inc mov rclb subl jmp sahf cld mov xchg cmp push (bad) mov jl sbb xchg cmpxchg add pop jle add push jp loop pop add fadds xor jne push cmc loope mov xor std push push out pusha jecxz je push fs pop mov lcall (bad) or in (bad) xchg sbb adc ret add or add jo push sbb sub cwtl mov add jecxz pop shlb push sahf inc jne mov (bad) out pop cmp mov insl sbb fstps mov mov aad imul (bad) pmullw loopne xchg adc push ret mov pop mov fmuls (bad) mov push mov adc call pop or aas push or inc outsl adc xor movsb inc mov shlb fnstsw adc icebp push shrb add stc pop xchg imul jmp js orl push lret fsubrs addr16 xchg in repz xor js lods (bad) outsb and cwtl or subl xor pop and and popa sbb sbb push sarl lods sbb jmp dec shr pop pushf mov stos roll inc loopne xchg test popf fs adc mov std push rolb adc loopne (bad) pop les addb mov (bad) popa lret shlb or xor push adc sub sbb or or or jns xchg in and and pusha sub cmpb jnp,pt or aad add scas pop sbb fsts (bad) mov outsb aas push scas insb inc mov fcoms cmp fs sub sbb add in sub out outsl fnop add mov add in and xor fdivs js add cli pop cmp test int or ljmp iret pop icebp ja dec inc jecxz or adc loopne gs lea xchg je stos cmpsb mov pop mov ja xchg pop (bad) int scas and sub mov (bad) jecxz mov cmp jl mov cmp pop push mov xor fcomip jae test subb (bad) loop xchg ds xor xchg mov and inc dec addb inc aam add mov cmp mov dec lods nop push mov icebp fsubrp dec clc shrb xchg add fs or cltd mov adc js mov adcb dec repz call dec jne push fdivl ja outsl push cmp in add or insb js mov movsb adc sub push rcrl pop sysenter add jno sbb jb imul sbbb or je or out add xchg sbb imul sbb pop dec add aam ss lcall add rcrb push sub idivl out cmp sub test fcomp cmp cmc jno or jbe push and cmp xchg clc add xlat das mov outsl pusha mov push int3 loopne cmp sub sub jo movsb jl into test add ud1 pop (bad) hlt (bad) mov push add int3 pop call xor (bad) call nop mov xchg and xor adc (bad) add enter imul mov out clc push int3 cmpsl mov ret push sub xor add lock popa push mov aaa jo,pt sbb lea aam push push add push in sti push faddl jge popa in sub dec bound xchg pop clc stos add cmpsl push dec push movsl and pushf pop xchg or in orb aas lcall xlat or enter mov xchg rcl or hlt cmp in and or test jo push dec add mov shrb shll mov leave movsb xchg outsb inc int3 jae add jle cmp aas scas adc mov or sub pop push pusha cmp pop xchg xor call mov loopne xchg ss mov mov pusha (bad) sub pop outsb mov cmpsl test pop add mov push ret sub or mov add das popa loopne xchg jo lahf mov add jnp imul xchg push cmpsb and rorl pop pop mov adc xchg adc (bad) and enter add pop xchg sub adc mov je leave mov mov popf jne mov test (bad) jg xchg ret sbb rclb ror add daa into adc pop subb sbb cmp mov lods pop sub nop and repz xor jnp sbb icebp stos ret test loop icebp pop sub jmp add lods shrb cmp xor shl popa mov fnstsw repz pusha and sub sti adc rcrl push pmulhuw ds jl data16 xchg aas pop out daa mov int3 pushf cmpb cmp fwait arpl xchg adc test popa pop push (bad) (bad) fimull cmp fs add pop xchg mov loop fldt mov and inc pop cmp add mov imul jo gs loop and jno lahf sbb insb mov out mov sbb mov stc push and mov jle mov pop xor (bad) and lea jne add inc (bad) mov arpl stos mov pusha sarl jecxz inc cwtl in cmp mov dec mov sbb xlat push or sub adc cld xor mov inc fs inc and out xor add cmpsb ja cmp jo add and sbb dec inc ret jne jae addl adc mov scas addb je aaa fdivp ret adc movsb fadds xor nop (bad) mov sub loope sub outsl push cld rcrb out mull add push add add je or xchg insl cmp stc push inc sub add xchg or cmp insb test daa sbb or pop inc or push and add mov mov or add add lock adc jne fcmovb or fsts loope mull pop (bad) push out fnstsw inc movsb jl inc sbb lods test push fwait mov je cli mov in imul jo push mov add xchg aam pop cmpsl inc sahf aas imul out test push sbb daa test jnp or add sti leave dec mov mov sahf and mov sti arpl xchg add repz jge push push jmp push sub ret pop pop push sub and aam mov out inc sbb cmp add out sbb push ret ss ja call xchg xor aas pusha sub xor push xchg (bad) adc push xor adc sub pop jns push nop jne mov add sahf inc and push in or add sbb ret vmaxps pushf in clc decb pushf xor adc xlat xchg and add into adc addl push cli test cmpsl out or gs sbb dec out xchg stos and xor push repnz dec daa pop mov pop and push sbb xchg mov std pop pop bound mov jno xchg jge add mov adc mov scas les sbb mov nop adc imul mov xchg and push dec push fldt adc movsb xor or push cmp (bad) scas stos lret js jge pushl mov sub add jle pushf inc cmc shr add mov cli xlat ret jmp enter call test and pop xor in and adc ja dec jne pop fwait add cli sub mov add je ficoml cwtl xorb dec add fwait adc sti mov add mov xor es in pushf fsubrl jg sub lret jp sbb mov pop fsub cwtl test pmuludq cmp outsb mov add stos add pop ret sbb cltd xchg loop ljmp add push xor jmp fisub std and roll cli sbb sub (bad) jne adc and add sub mov shll sub roll lds fbstp and hlt pop test mov inc (bad) fdiv inc xchg repz mov push sbb push and and cli sub cmp aas popa das popa and inc cmp jg jp xchg stc push push or imul cwtl inc pop (bad) scas sub or (bad) fs sbb cmp add js or xchg pop stos sub cmp pop cmp jp adc fidivrl sti (bad) roll or imul add int3 loope js ljmp int3 jmp mov xchg add mov test in jne dec test xor pop fwait stos add cmc inc sub mov xor adc mov idivb dec cltd cmp ljmp xor stos sub xor cmp ret sbb xchg (bad) and add adc icebp cmp dec lea (bad) cmp test gs mov aad pop (bad) fildl push popf add and xor arpl pop mov sub loopne jns xor popf aad inc cmp int pop jns lds dec mov push add dec movsb sahf cs std movsl fisttpl sbb adc mov insl sahf decl jge jmp sahf mov xchg int3 out sub inc push jb pop loopne sarl sub jae lods sub and ljmp ja or (bad) jns dec jne fcmovbe jae and jne push or push pusha push pop movl sti cmp pop sub push push outsb pop sbb popa aad das sub jo or add stos dec xchg jl stc mov or pusha orl inc loopne fs sbb and out xor inc ret inc stc dec ja shlb pop mov scas dec iret sbb dec inc jl mov jg arpl daa mov in mov subl out xor ds aaa ja out loopne mov jg sub daa or push push mov cmp rolb xchg int3 divl std aas adc mov pop add pop jmp mov or fstl pop pop (bad) push imul cmovge xchg sub pop ret or (bad) std cmp addl pop movsb popf push pushf lods shrb fs dec jg lahf cmp imul or push hlt dec mov movsl dec pop push mov daa push in test add sub add insl mul addl mov jo test ds sbb cmpsb (bad) and push and negb icebp rcr mov aam dec adc cmp mov dec mov sub push out cmp je out lods mov mov jge mov cmp push stos pushf jne add test inc loop mov clc outsl aas add sub or xor and push dec and jmp mov test push xchg js mov scas ret mov xchg cltd movsb test push popf push mov jle jne fsubrl lods insl daa rorb pop pop (bad) jmp imul jnp mov add and sub jmp adc pushf or das push insb or pop push add lret pop ljmp jnp cltd add in imulb int mov inc mov adc inc inc mov mov out mov add in daa mov add cmp dec (bad) pop test aaa push scas jecxz movsb jmp push movsb (bad) lcall add push add test sti jae fadds dec sub mov dec pop ljmp mov mov add addr16 test popf pop cmp add pop and insl adc add push fiaddl mov sti mov jg push out lods cmpsl push ja outsl add mov push mov (bad) (bad) cmp inc je or mov popf jge jns push ja jmp sbb mov pop push roll cld cmp (bad) pop xor or xor leave xor rorl jmp div jmp rclb mov jecxz push daa jecxz outsb adc sub pop sbb inc pop add jg call mov aaa add cmp rcrb ret pop inc sti fcomip fldl jle faddp out dec sub push xor andb add repz pop dec jmp (bad) push test cmp jp fcoml stos xor (bad) or loop push and jl add jmp xchg int loopne push popa pushf push pusha sti repnz mov dec or pop pop dec movsl dec mov (bad) cli fsubrp outsl dec mov fsubl jecxz jmp xchg std jle mov sbb outsl mov add sub cmp orl or or pusha pop push mov not hlt sub sarl cmc (bad) sub sub pop inc cwtl cmpsl pop fs popf pop adc adc fidivl lahf push sub pop inc out dec bound in jno jmp dec lea pop popf ja push mov mov (bad) aaa or jle mov dec test add ss xchg cmp (bad) jns push jne pushf push inc imul shl xchg xor out in jmp push pop in mov dec dec pop and add out or pop and loopne xchg mov push adc in push pop pushf mov arpl pop cltd or adc xor (bad) pop orl rcll and sbb arpl cld and push mov jg mov mov xchg repnz fistp cmp add arpl jl push or xorb imul je mov add lcall (bad) mov outsb popf cmc sbb (bad) mov stos cli movl fs stos sub add or andb add mov (bad) cmp mov dec in or xchg subb pusha adc mov scas (bad) jmp mov test lahf dec popa mov and rcll dec enter loope jbe jne dec xchg into ret add adc popf mov or cwtl cmpsb das adc outsb aas inc jno dec scas jp add xor rclb decb inc cwtl sub jmp add imul sub dec out add jb (bad) ljmp jne in mov je sbb cwtl cmc push notl or rep xchg test adc jo stc xor jp sbbb sub jnp repnz mov (bad) pusha cmp loope in addr16 cld ljmp rcrb xchg push xchg xchg push scas push (bad) (bad) pop aam ljmp movb insb xor fidivrl lock pop mov inc jne sbbl (bad) ja push or sub pusha or dec aam ss and and or jb push xchg pop push shlb inc in movsl pop ss int3 leave mov pop xchg mov pop and inc stos addr16 out cmp je fbstp add sbb or call push je sti push mov fs sub sbb sbb mov push inc stc mov dec xor mov sbbl mov xchg mov push jl lret arpl fdivrs mov out lcall mov jae (bad) xor push or xlat fcompl daa jmp xchg sbbl mov and fiadd aad mov push out aas add pusha add cmp push push call (bad) push pop sub out clc jmp notb out insl mov (bad) (bad) pop xor pop pop incl call xchg push push xchg xor inc pop mov in mov in pop mov popa iret pop or popa cmp ljmp popf jge pop cmpsl ja sub test xchg push xchg pop (bad) cmp push fidiv or adc test push orl pusha jmp and aas add incb sbb sti pop mov mov test mov dec inc pop cltd xor fisub xchg stc pusha sub adc add sbb outsl xor pop push mov pop and add or mov (bad) cmp push push pop adc out add mov cli icebp add push sub sarl sti pop jne aas int3 mov ja cmp hlt push lret jmp (bad) adc fisub stos outsl push popf xlat mov loope arpl ljmp jbe sahf add pushf inc mov dec punpcklbw mov dec cmp add rcl add loope pop or add push loopne and out std addr16 or push sub add sub mov pop ja xchg and test jmp repnz or call push aas ret pushf test or inc adc stos sbb cmp outsb pop add jge imul cld sti out jle add sub or hlt mov xchg int3 fidivr aaa shl int3 call jae jg sub jmp inc mov loope xor or and shlb dec stos add or jne or pop mov xchg jle enter mov jle loopne xchg adc (bad) mov dec or jnp add pop jae fnstenv out dec dec aad add jae add dec out or push and jb mov mov and out adc cs imul pop ds (bad) aas lcall add pop out test cmpl or imul jl imul mov cmp gs leave mov aad inc or xchg add mov lcall in dec jmp enter pop cmp mov (bad) jmp lock pop mov pop cmp roll std cmp sub jae bound or adc or idivb push test out test mov (bad) adc nop ja (bad) mov fyl2x pusha mov fist in ficomp call cmp push sbb mov nop xchg lahf adc push ds xchg loop inc int clc mov popa (bad) cmp push test jnp mov arpl xor jg (bad) pop add and pop add mov ret pop xor push addr16 jmp push push pop cmp aam int3 or cmpsl sbb rclb cmp add or xchg add push pop int3 stc rolb pop inc mov cmp in add mov push cmp mov adc jae xchg mov rorb cmp inc scas and push or inc pop push adc jb or insb push outsb push cmp mov xor je adc or sub addl (bad) or cmpsl jge lds dec aas mov cs jg fisttpl shl dec cmpb outsb mov int3 dec sub rcrb lds lret xchg out dec cmc pop mov lods cmp push add jg inc xchg rorl or fildl neg cmp orl cmc pop xchg rcl dec imul jmp and dec adc fldl xor add pop test test das mov xchg adc outsl cmp in mov xchg xchg sub cld fbstp pop ds xor fistpll xchg (bad) mov int xor pop inc cmpsl ja inc adc pop loope mov lret pop pop sub xor repz enter push mov push popa adc jg push leave inc xchg dec aas not lahf icebp mov add mov dec stos les jo hlt jle push arpl (bad) inc fiadd shr js push (bad) cld les pop out stc or hlt cli mov sahf test jne (bad) pop lock pop cmpsb add lret rcr fdivs add fcomip insb or jmp lds inc jbe cmp rcrb outsb clc or add inc push ret dec xchg rol aas push dec pop inc sub mov hlt pop ficompl inc xchg fisubr stos pop mov xchg (bad) mov clc popf loope add sub cltd adc (bad) cmp add add jg mov stos add inc sahf pushf pop push rolb adc sub or and jg mov and addr16 jge (bad) daa rclb out mov fisubrl ja push hlt pop sbb pop push in lret mov popf sbb mov das fs inc xchg push les or push push out push popf mov jmp push pop mov ret lds stos loope pop and out movl rolb sti jbe loop ficom les push jg pop es or inc stc bound aad in or pop mov jnp mov cmpb sbb (bad) loope push (bad) sbb popf add data16 xchg repz add inc sub (bad) or pushf rclb js mov mov iret pop mov fmuls or lret pop push jns push jbe ljmp push cli mov mov mov js xchg cs mov into mov mov outsb ljmp xor push jns pop mov rclb mov pop daa pop (bad) jmp inc inc int3 pop pop pop push fiadd push enter add ror xchg lods jbe lcall add jg (bad) cli mov xchg es push hlt xor push add push fdivs dec rcll call pushf jb jns xchg inc xchg adc rcll pop cltd (bad) js pop dec xchg lods cmp adcb mov jg out cld inc sarb jp mov pop sub add mov or lret mov out hlt lret lret mov dec aad iret dec dec in fdivl jbe shrl lret arpl pop (bad) or mov xchg adc loop jp lods xor adc mov xchg shrb mov or lret in dec idivl in lds lret pop adc cltd ss xchg sahf add jmp call jl sti ret cmpsb lret cmp sbb pop add imull xchg add in jnp out call jmp cmp mov dec add cmp jmp bound pop push enter push es fs ja call xchg mov xchg cs sbb enter xchg popa jae lret mov stos pop add mov dec cmpsb sub pop sbb jl mov out inc mull mov adc (bad) incb cmp and sbb push mov mov (bad) andb add cmc and add pop sub fcomps sarl xor aad daa sbb push xchg pop mov add shrb loopne,pt add xor or dec pop cmpsb sbb add mov jns xchg add dec cmpsl jg jmp mov movl pop int (bad) jmp mov fstpl pusha nop inc or jnp jmp xor pop sub not ret out push rolb sub pop add sub pop add jae ljmp ret (bad) (bad) std add lcall push sub jmp cwtl popf mov pop adc mov lds push jmp and divl or add in movsb sub outsl es mov add imul xchg jge cmp and nop add jno cld pop sbb mov or add add adc adc fmul je add lods dec add sub lret dec xchg enter (bad) (bad) aas outsl pusha dec aam lahf add mov pop gs iret mov xor xor shrl pop shl add cmp push mov shrl dec and xor lds nop (bad) shl inc jmp pop add data16 ficomp rcll fs bnd adc xchg das push jecxz cli cmp add popa jne jbe inc ja or cmpsb cwtl inc mov inc jmp lcall ret pop push xor fidivrl (bad) movsl aas jg or addb out jp mov fsubrl pushf out xchg sub cmpsb add pop int3 aaa pop mov js lcall or ja xchg pusha mov aaa fucomi fs add repnz dec add pop jbe add xor inc inc inc pop sub add dec add or rcll xor inc in and ljmp shrl ror add cli inc inc stos arpl inc xchg testl sub dec (bad) fwait inc xor pop repz jmp add aas jne mov imul (bad) std inc mov sub jle add pop xor inc sbb lods push ljmp jmp out jo mov or cmc pop ss jno mov cli lcall fcoms aas dec orl test call stos mov jle inc aas xchg pusha inc mov cwtl dec or sti push adc sti les ret push sub xor push dec add es pop (bad) push pop jl movsb int3 movb out es push push shrb push iret scas mov cwtl push or in or movsb mov loop pop and cmp mov int3 lret stos mov mov jl mov movsl das xchg cli and add das sahf sub jns daa (bad) pop adc shrl adc pop push or xor pusha add pop out in cmp mov dec in or data16 xor jmp adc clc (bad) in xchg mov aas push rol mov fwait lds dec test xor dec add sub enter and ja or aaa cwtl int push mov mull pop stos fucomp xchg scas push adc add inc jge sbb std cmc in push adc inc push mov rorb jmp adc test and es les in test mov pop test gs or in xchg xor add push pop sahf repnz pushf add sbb add rcll jnp cld lret or ss lods push es add jmp (bad) push mov mov inc imul dec add test sub imul shr or cmp inc add and sbb mov shr push push out insl push adc push cmc or fs xor pop push cwtl bound (bad) push xor lock xchg shll rolb sub (bad) fadds dec push jp test cmp and adc inc bound sub cmp cs lcall adc test xor xchg (bad) fildll push dec cmp test pop and int lods add and or out sub repnz bnd adc call and jle push and sub cli inc jbe xor pop adc jmp es jo adcl fwait rolb aas sub add mov inc pop xor add cmp rorl in add cs loopne fildl cmpsb sub pop into xchg scas loopne mov push int3 adc shr and sub sub push leave and clc es cmp jg enter sbb inc jmp ret inc cmp ds (bad) push insb (bad) cs adc scas cs add xor and inc fldl xor pop dec fldcw fcoms (bad) lock rcr fcoml add mov dec adc xlat adc sti fs stos sub cs out mov sbb in movsl adc pop push cmp cltd fsubrs push push sti pop pop jg andw test inc push push jle mov in push orps enter repnz sti sbb jmp mov test mov push sbb ja (bad) int3 gs sbb movsb rolb lods lods shrb dec scas insl xchg fucompp jno xor (bad) add and mov popf push mov xchg mov adc mov mov dec out pop pop dec sbb add rolb clc inc mov sub lret xor sub or push mov jns scas hlt pop jne mov popa jge pop std and mov imul cmpsb cmpsl xor mov outsl aaa (bad) iret adcl les push adc jg adc insl aas push das and push inc mov aas pushf push std add push ds sub pushf pusha jb or mov push push and in pop js (bad) sbb push mov pop add outsl xchg test popf loopne call movl push jp cmp out sarl push xor add insl ja dec stc (bad) mov xchg xor jmp jg add inc push (bad) xor pop xchg mov sbb fwait (bad) je mov sub xor movsb in cmpsl xlat xor pop sti add pop mov and enter inc inc out (bad) aam mov movsb add add fcmovne hlt jg jge inc push dec pop mov add cmp repnz adc dec dec push sub inc (bad) (bad) adc and push ja rcrb imul sti jle shr mov shrl les jo iret sbb jo fadds push sub xchg xchg out insl inc daa push lcall xchg cltd sub movlps ficompl fidivl std decl into dec jle imul imul mov rorb mov inc cmpsl pop push mov stos je and jecxz int3 jmp dec dec stos inc fisttp xchg pop mov inc (bad) stos rcll ficompl push ret ss push rorl cmpb mov xchg jmp pop dec outsl push ficomp mov idivl mov add xor xor pop xchg rcrb adc xor pop movl or push divb dec xchg add lcall mov inc cmpsb cwtl aaa add dec std mov adcl adc pop in mov (bad) sub push jge int3 and fs dec push hlt push lret stos mov cmp enter test fwait gs (bad) aas faddl mov pop add fistl inc inc dec add add jno or fist mov (bad) (bad) xor iret adc loopne jb add cmp sub les add xchg or outsl addr16 cltd or cwtl jns or add add xor xor (bad) ficompl mov xchg cmp jns dec roll jmp shr ds dec pop cmpsb enter mov outsb xsaveopt dec (bad) std mov jnp or int3 push subb (bad) sub xor inc ret add out fldt push sub sbb or movl loopne (bad) xchg std adc or enter adcb inc cmp or mov dec pop orb fs xchg add ss bound and enter (bad) adc and sbb add adc mov cwtl add (bad) icebp xor xor rep push xchg mov in or stc jo add fadds sub mov jne stos subl add dec out dec jbe and (bad) in push imul ja dec lea iret adc aad shrb xor out out mov jbe mov sub dec insl push mov outsb xor aad mov add or push mov xor sub push (bad) sbb xchg pop sbb xorl les imul add loop ja aas sbbl movsl stos sub jge jns mov pop in sub jmp xchg cld cltd pushf and jne xor imul movsl xor jns mov mov pop add xchg call xchg push mov or scas jmp mov and sub pop sub lahf bound mov ss icebp pop loope pop xchg dec jne push push rcrl (bad) std adc push mov lcall mov test aas push cmp pop outsb pop add cld add je or aas mov mov add pop sahf daa rolb imul lahf fsubp mov sub or mov adc call arpl inc lods stos push or add sbb fstl mov cwtl dec movsb push mov fs sbb mov and or pop divb je pop into leave adc and pop shlb add dec ret mov sub or (bad) mov cmp out inc push mov mov mov int and hlt sbb mov ljmp shl pop insb sbb les or xor cmp (bad) push push inc sarl xchg enter push sub popa fs xor stc pop sbb or scas xor dec mov mov lcall into push jne pop jge fdivr imul shr add pop pop mov pushf sbb or pushl in es mov push and adc repnz hlt rclb out or inc add aas ljmp jmp stos add xor stos add sbb idivb shll sbb inc cmc je (bad) push cwtl xchg add and cmp aas add jns sub adc cs fst xlat mov adc mov mov add jnp mov dec pop popf adc fwait mov arpl pop rolb loop idivl ss adc dec inc lret fistpll jns sub adc pusha mov add (bad) and popa xchg push push rorb cwtl or add div shl or jecxz rclb (bad) sbb mov arpl push inc mov cmp mov hlt addr16 aad add mov pusha dec and xor inc fcmovnu sbb cli arpl push cmp aas add test fmul lock dec scas enter test cmc add pop and add dec fucomip imul add icebp ljmp (bad) mov pop fstpt push popa rep int3 testb mov mov xchg test jle pop pop mov dec (bad) add push jmp add jge (bad) jbe push outsb mov jmp andb mov add add mov shr insl iret or mov addb into sbb pushf data16 xor (bad) jp and jns,pn pusha popf rorl sub scas mov add sub in (bad) pop push cwtl cmovb in (bad) xor mov push mov xchg dec push cmp mov cmpsb addb imul mov sub sbb fcomip mov shrb pop sub ljmp jl test jmp mov push pop dec adc jecxz pop push xchg imul inc orb adc imul sbb dec loope inc pop jo add xchg mov cs scas mov jge ret or call dec jne xor add seto push lods xlat mov outsb xchg or out les sbb and (bad) loop xchg adc or ret (bad) and adcl imul leave xchg test cmp push push sub pop ljmp dec and loope test sbb addl nop xor sbb repz adc jg je add and jne adc scas pop mov loopne rcrb dec aam xor stos cmp xchg cmp inc aad insb les in push push fdivrp sbb pop inc pop sub insb aam gs sbb call (bad) popa xor add imul push push rorb adc mov xchg xchg les sbb aam sbb add xchg sub or fsts repz inc aam jns push addl jb adc push je popf pusha sbb add jle push decb loope nop add mov push jne imul orl fiadd repnz xchg test orb push xor or es pop and mov add mov outsb or inc insb dec (bad) push or dec test sahf pop xchg sbb cmpsb addl and jns outsl nop lock inc and mov mov push push or sub popf push and or (bad) mov std mov sub sub adc push loopne xchg inc mov or cs mov inc or sbb mov add and mov add leave inc mov (bad) dec mov lret xchg loopne out sbb sub jmp and pusha out das dec push rolb les loop call or sub lods imul mov and fsubrl gs or fistl aam inc cmp push xor fnstsw nop push cwtl pusha sub les enter dec add lds dec mov ss dec (bad) enter fs push xchg cmpsb cmp movsl bound aaa jns aas add mov xchg or cmpsl cmp das dec inc rolb add or mov (bad) in sub ds lret pop jbe sahf and push push xor push pusha dec nop outsl add dec cli push cli mov mov jae repz or fs pusha roll ficom cmp mov xor and std add xchg push lds arpl imul (bad) cmp popa add dec or push inc aam bound push dec fdivs rcrb leave mov sub and mov and insl mov dec addr16 jo,pn push loopne pusha clc fist and fadds iret jl pusha xchg adc jbe cltd mov jbe fsts pop in loop fidivrl xchg stos or dec mov add mov mov (bad) test or outsl repz and insl shlb cwtl imul nop adc xchg mov mov push push (bad) cs pop dec repz rol test xchg cmp adc ja jns mov push (bad) adc push out and cmp push mov mov mov or mov mov or pop jns xor hlt dec int3 test mov mov push pop add pop dec imul adc jmp ss xorb out mov mov orl scas cmp sbb mov mov xchg das xor nop jle add (bad) push push mov jp xchg les inc and mov xor lock fistl daa inc popa lret jmp push imul xchg jnp pop rolb fisttpl adc sbb loopne mov es jno inc jg cli outsl clc jmp and (bad) out hlt (bad) aaa mov pop mov add ror arpl repz add inc inc fcmovb cmpsl add add xor hlt dec and dec jl cmpb addr16 jo or fsubrs sub data16 iret push inc sub add cld roll mov cmp mov stc pop das pop push mov cmpsl adc jecxz (bad) or jo (bad) bound cmp and popf push shll push pop mov sarl inc inc cmp popf adc fcmovbe mov test movb push pop (bad) or jno dec adc xchg (bad) jmp xor cwtl out xchg jbe (bad) outsl add adc or aaa fs leave call popf cmp xor aas mov sarl and loopne (bad) push dec repz jge push repz adc loop inc (bad) or aam test andl lret cli enter loopne sub sub test (bad) gs cwtl lcall pop jge stos add mov add xlat sbb push in lods cwtl dec mov fild psraw cmpsb xchg xchg add cmp es xchg mov push inc xchg gs mov rolb cmp inc lret loopne sub cmp pushl add jecxz lret adc pusha bound test das pop pop test and mov (bad) cmp sub jb mov add stos sub pop pop adc sbb mov popa je nop test stc mov or or test dec fimul add mov mov and adc add sub dec xchg pusha sahf push in sub or sahf jmp adc jno sbb rcll shll insb inc fidivl push xor test dec add in dec pop mov add jmp adc or mov jns sbb aaa push int3 mov jmp test push js,pn adc push pop lods xchg roll dec cld mov (bad) xor ljmp xor mov push pop sub cmc xor xchg orb std notb pop pop jle mov sbb daa shrb out icebp mov aad adc mov (bad) mov hlt es push jbe outsb jae xor pushf sbb lea div push clc sbbl mov fdivrs push (bad) ja sub ret or gs dec add out dec mov mov and add pop std inc sti add popa xor or loopne sub dec and or mov xchg jge cli movsl dec cwtl jo xchg xchg mov inc roll adc repz ja stos pop rorb jp dec es hlt movsl jbe jo lods std push and sub add lea add xor pop sub sub in sbb sbb sbb mov test cmpsl pusha sbb repnz shrl mov (bad) dec push jnp add aas push enter add arpl fimull push mov mov pop push push adc mov loope popa jo cbtw add add inc shll testl push xor jae add imul mov movsb xchg sbb sbb ret sub insb vrcpss leave xchg push jo or mov mov push lcall xchg int and or sbb cwtl push jmp and outsl stos lahf sub inc in in cmpb addb stos fistl (bad) add sub sub add imul inc ja,pt add and pop jnp call push aam lcall add lahf out loopne mov mov pop xor push test dec repnz dec lods add adc dec fs mov fdivrs xchg lds adc mov sbb cmp (bad) push mov adc or and mov add into adc shll loopne cwtl enter mov add xor and inc jnp adc inc adc enter sub cwtl test add sub fisubl out sub data16 jo inc in daa ret pushl or hlt fistpl test xor (bad) sbb aaa sub add jge or movb test je pusha cmp aam dec push lods dec sub loopne pusha push xchg inc cmp jne pushf das add (bad) xchg mov sub icebp push icebp or dec add iret sbb jl adc lods rorb mov add and decl xchg mov or add out loopne inc cli xor je xchg xchg push inc aam in daa inc jae shrb add sub daa adc add sti jp push or or push lahf cmp scas add lea imul rolb jle pop iret cmp xor push cmp or mov pop jns test adc push add repz sbb sub shrb and lock add xor (bad) test outsl addr16 pop mov xor inc mov clc scas fisttp add nop dec out ret push jns sahf retw fdivrl xor fldl sbbl inc mov popf jb sbb imul xchg push cmp push (bad) add mov scas pop pop xlat pop push lahf xor daa nop add cld jae dec outsl mov gs je inc sbb add aaa inc sub sbb in jne orl mov in push movsb adc or xor cmpsl pop inc cli (bad) cmc clc pop imul jecxz add sbb cmp xor jg ja mov cmp dec outsl loope mov jns and mov adc xchg iret adc je jge fwait jae and dec test and push jb mov aad mov and sub aas sbb aam sub dec add pop jmp xchg dec add push or dec add mov sti cmp sub inc xchg cmpl test fistl push dec xchg (bad) aaa icebp adc pop test add test idiv push add pushf or push mov dec rcl insb mov add push lret cwtl jmp lret stos cmc mov xchg xlat (bad) sbb pop data16 cmp jge repnz mull aas repnz add popf mov pusha inc dec lcall insb int xor add sbb xchg and scas mov popf outsb xor cmp je lahf push or add cmpsb negb cmp xor add in (bad) (bad) aaa es fcoms dec fistpl mov loope mov cmovb outsl or xor push push popa sbb cmp int3 shrb push dec push sbb idivl jl xor outsl hlt inc sub jns (bad) inc xor rcll addb bound or rcrb add cmpl add popa jge mov jo pop (bad) rolb sahf cmpsb mov xor jbe ja test mov jle rcrl js cmc nop (bad) imulb loopne jno sbb add xor call faddl sub mov rorl lahf imul push cmp dec ret adc or iret dec lods push (bad) or subb or cwtl scas xchg xor add push movsb pusha push mov add adc pop lods dec mov jp sub in and xchg (bad) fwait hlt push mov cmp inc inc and jg jmp (bad) push xor dec dec add sub or jge dec add xchg lret dec jns fadds fiaddl push sub adc add add test xor xchg aam push ss sbb jns add sbb je (bad) xor sti pop int mov loopne es and push loopne dec out or mov xorl subb xor adc pop roll inc push adc xchg imul lea add jmp sbb xchg mov cld dec mov pusha out cmp and jg jnp or cmc pop scas inc xchg or add frstor add pop mov (bad) inc test push sub sub hlt xchg pop fsubrs sbb dec add push je jl jp out sbb add or mov jno dec in mov fnstcw mov add xor adc int3 cmpsb repz mov sbb pop mov push sti out inc insl bound loopne adcb dec pusha push cs fwait or outsl nop xchg and push sbb xchg push in inc nop inc sbb incl out and xchg data16 faddl mov movsb notb sbb stos lock (bad) push nop or mov test cmp imul std mov and lret xor in sub adc add adc push test adc jnp cmp mov das mov pop adc push aas icebp ret movsl insb add ficom xchg dec data16 sbb cli cmp sbb imull xchg test ljmp adc cld mov inc aaa xchg aaa enter les inc xchg adc inc loope into push inc jecxz addl dec out sbb aam test int3 sti or movsb in nop lcall das cmp aas (bad) xor int3 in inc inc or mov arpl ljmp mov (bad) aaa test and xchg les jb cmp xchg sub cmpsl sub dec inc jle pop push dec jbe loop adc sbb lahf sti rolb loopne mov pop xor dec out adc sub xchg pushf inc push sub push es add and imul and sbb add (bad) lahf add jge les pushf outsl add loope or push nop dec or and pop movsb shrb and adc and loop add mov int3 rolb dec faddp pusha pop or xor dec movsb cwtl add adc adc sbb hlt stos dec (bad) pop call jno mov pushf add daa (bad) in mov test cltd sbb (bad) mov or fldenv and adc and mov inc push bound mov popf test xchg movsl pusha add shl add xchg jae dec xor rolb mov test notl ret cmp mov outsl sbbb mov cwtl sbb xor loope push or add stc dec fisub jle mov and jnp mov pop inc (bad) std add jb mov and and lret ja pop cmpsl (bad) stos (bad) daa jae (bad) mov cmpsb cmovb push cltd inc addr16 (bad) das push add xchg mov fwait push rcr jne lahf push sub notb sub adc lock inc sbb out mov push shrl movsb test test loopne ljmp out flds orb lcall decb mov inc push add or mov cmp push push es xor cld out or dec and orl and sbb xchg in sub and test push arpl mov aam ljmp add sub pop lret pop cmp addl ret rcll (bad) js leave scas movsl (bad) pop ret outsb cmp xchg lods xor sub outsl cs jl,pn add jmp insb push sahf inc pusha outsb adc leave adc mov cmpsb mov sub add xor adc sub shrl push rclb mov jl xchg pop pop dec les jnp xor (bad) pop adc ja sbbl xor les mov clc add sbb (bad) int3 or sbb or out mov and sbb ja or add cmp pusha mov mov xchg mov xor rcrb push or clc test mov jae rorb add adc lods aas pop test fstp adcb lods push enter (bad) rcl mov inc xor (bad) in in adc jo dec (bad) push leave or out adc xor or fstpl js add popa add data16 cmp fisubl (bad) stc sub cmp jns cmpsl rclb adc xor xor sub xchg test das or data16 adc mov push push in mov or out (bad) dec or mov mov jo push or shr jno jge add push add pushf aam fsub add stc dec fisttpll add mov rorb aas lea lds sahf loope adc rolb mov adc int3 mov xor mov cmpsb mov out cwtl add xchg scas mov pop fwait mov mov push in push dec xor mov push xor add pop (bad) adcb lret inc mov adc xor add sub add popf inc sub push in xor sub pusha pop push pop das stos movsb fdivrl xchg mov and sbb xchg mov movsl cmpsb add or add ret in jo jno je movsb insl das mov mov cmp mov sbb in push xlat push mov jo ret add adc dec xor insb enter mov cmpsb inc push push call (bad) inc mov inc pop and data16 les lds fwait hlt xor iret aaa push cmp sub lods daa aam in dec iret add pushl add xchg and cmpl cmpsb (bad) jo lret add inc xor pusha push xor add fadds or and adc (bad) adc or (bad) loopne pop or pop adc cld pop mov cmp jmp push and pop mov sub pop mov pop aam orb sbb cmp jnp test sbb jbe push add lcall pop push jge mov pop push lods adc insb loop sahf cld andl adc push sub dec cmc mov test xor pop xor dec ja pusha mov outsb jmp sub fcompl adc sbb (bad) pop xchg iret push push xchg inc rclb nop cmp call add inc ja js daa jmp pop xlat or jg aam loopne cltd sub daa out dec and inc cs outsb jl push mov out test pop lret xor cmp div jns sub les sqrtps push sarl pop (bad) addr16 inc adc dec mov jp sub cmp push pop and (bad) lock cmp jno sbb push dec int3 mov rorb add loopne sbb rcrb add in outsb hlt pop scas dec and add iret les lock shlb sub fisubl lods xchg add fs movsb nop add loopne scas or aaa lods add or add adc stc fisub dec cltd daa xchg pusha aam cwtl adc add imull mov pop add dec mov fiadd mov loopne jno sub mov and sbb mov ret jle lock or (bad) jbe push rol xchg fwait pusha mov fisubr xor mov push push add ficompl call sbb js bound mov sub or (bad) jnp,pt dec mov add mov call or (bad) sub stos (bad) rclb xchg add lahf push int adc jl jns mov popf add pop push mov jae dec or sbb cmpl insl or cmp jnp movsl mov into std mov dec cmp mov imul and xchg or mov jae rclb sahf cmp rclb push inc (bad) aam mov lret insl mov test dec push (bad) shlb add leave sub mov xchg push out xchg and shl and adc adcl push dec insl xor add fs adc daa orl fildl insl inc outsb inc adc call pop jp nop xorl jae into sbbb xor outsb (bad) xor dec push sbb adc (bad) mov xor daa add insb or or leave inc lcall mov out lret mov jbe adc pop add push xchg in pop decl cmpsl gs cmp xor aam pushf loopne or fimul pop fist sbb xchg pop (bad) dec jl pushf (bad) sar or xchg push xor or push mov add xor call mov mov or fldl popf mov jb mov iret dec in inc imul mull mov enter xor test xchg test add push (bad) mov jbe pop and or inc mov cli add jnp adc mov push cmp and xlat mov adc repnz out cltd add das push dec cmp (bad) aaa in xor inc fild inc push add push out call das add cmp std rclb ljmp out ldmxcsr cmpsb inc jbe add loope (bad) jl test jmp push fisttpll mov mov pop daa popf inc add nop adc sbb test adc es scas bound sbb and shrl scas mov cs out mov ret (bad) and sbb push cli mov pushf xor jae mov lds xchg adc fadds push dec rorb sbb andb cld cmp pop (bad) divb xor icebp jae dec adc and pop pop xchg pop stos xor add push or data16 test movsb mov adc cs sub mov cmp add mov push cwtl loopne adc pushw xchg leave push inc push sub loopne sbb outsb sbb loop es fdivrs int and sbb mov js cld cli loop push push jle dec and int3 add push inc hlt and sahf adc xchg mov or xor cmpsb data16 movsl icebp les mov in ret mov sbb js jg,pt bound or iret sbb sub mov or sub aas add cli lahf mov add rcrb aaa repnz and mov add cltd sbb xor or test jmp mul movsl mov sub icebp sbb xchg or mov pop or ss add inc dec sbb inc pop inc sbb or sub add mov je push add enter and add xchg mov jae add mov mov or scas popf or sbb xor or cmp fildl sbb or lods inc or sbbl lret cli sahf pop push icebp roll inc fdivl aad and adc das xor cmp test mov in cs sub ret add hlt nop pusha clc hlt aas jl in mov fadd jbe cmpsb and sbb cmp push mov mov add gs adc push adc mov out mov cld pusha sub lret pop popa in jo adc inc hlt pop xchg pusha mov xor fs xchg imul adc pop cmpsb test add xor lods mov push mov lret xchg out cmc arpl jecxz adc xchg adc insb add push add (bad) incl out pop push andb mov add (bad) cli dec or cmpsb push jnp aas jb insl pusha popa dec cmp loopne inc pop add mov (bad) jmp mov jo xlat movl or xchg jecxz es sub out xor inc mov dec mov std adc mov xchg dec fisubl adc sub es push and ret fstl sub cmp mull aad sub add pusha insb or call jnp cmpb xchg xor dec aas add lea mov adc lcall (bad) mov fsubp mov addl adc imul jb or dec or ljmp (bad) add add xor pop xlat lds mov lds and add or ds adc adcl pop push jo add jle popa int ss mov cvttps2pi lds sbb sub cmc mov add mov sarb into pop adc inc loopne push nop lcall lcall mov add mov aas cs decl sub loopne nop push out and cmp push mov inc mov adc mov rcl or inc aam insl cmpb add mov popf and idivl fsubl fidiv testb inc outsb dec or sbb rol push mov mov xchg (bad) add or sub mov hlt push es lret mov push out popf mov mov mov mov cmp inc repnz and nop cmp push jns sub sbb test sub mov push mov pop movsb inc dec mov int3 cmp inc (bad) loop push push jne push lret or hlt aam (bad) jo pandn pop (bad) loope or mov test popa stos outsb sub loop and push (bad) mov in sub in jecxz sbb push int3 loop pop mov xor dec push mov js lret mov xor into mov push sbb sub jo icebp push rcrb jecxz push or push xor cmp xlat frstor mov add cmp sub (bad) xor inc fild and dec cs addr16 jno shrb (bad) hlt xchg pop fiaddl leave loopne cmp mov jle xor shr inc movsb xchg dec sbb sub popf inc (bad) mov fs dec sub sarb add add dec mov rorb push add adc add nop test int mov in inc and inc (bad) hlt cmpsl insb pop sbb and ja lods mov fcoms add es adc imul adc (bad) icebp pushf jmp inc pop test mov or sbb inc arpl push loop cwtl add dec add and loope pop insl daa test jp es pop inc jae pop pop sbb or pop pop pop add add cmp shlb adc xlat mov cltd dec out xchg out add xor pop mov xor cli or sub mov dec jns bts or iret std das mov out push push add inc lret adc cmpsb outsl xchg mov ja sbb cmpsb or sub mov and dec outsl cmpsl pusha sbb jbe je and or pop jb (bad) stos clc dec loope pop mov jg and push add push mov xchg add out stos dec xor cld inc add arpl out (bad) in (bad) pop fistp jge into rclb xor (bad) call cmp mov xchg into mov adc push insl pushw xor and sub adc dec push push ret hlt or arpl mov inc dec lahf add ja popa add xlat xor or enter mov dec outsb bound jg add cmp and andb add loopne test mov mov test insb xor push dec insl sub shrb shlb inc and xor sub add pop pop fs cwtl loope pop icebp ret xor dec dec push vmaxps or sub inc into pop cmc clc sahf xchg (bad) sub test add lret in add push mov test inc nop mov sahf add lahf (bad) repnz popf xor fisubrl inc sbb cmpsb (bad) and add lods or push enter add add mov push outsb and lret enter jp jnp cmp mov mov adc jns loopne add or pusha jo fwait outsl add add sub lret push mov mov and adc cmp push inc out mov nop pop (bad) xchg aas test (bad) rcr push mov mov pop fdivr lock lcall jbe add (bad) test xor push cmp clc adc lea dec mov sbb cmc add (bad) fldl add xor xchg insl inc xchg mov setp or pop lret or es out fldt push enter imul jae into jle mov mov cmp adc dec jns incb mov out add test int pop mov mov sbb (bad) pop jne ret fs rclb dec sub sahf inc adc stos cs push jle fidivrl (bad) xor pop push cmp and inc jge cmp adc rcrb test cmp lods pusha add outsb lahf mov movsl add loopne xchg push add jae lcall and inc mov mov cmp mov xchg int3 or add fcmovb mov ss hlt fisttpll arpl jl fnstcw pop push in dec jmp jo mov (bad) mov cmpsl mov mov imul rcl inc push out enter mov and rcr mov loopne mov xlat adc adc cmp out mov sub jbe or hlt inc bound inc fist jne (bad) xor and stos ss cmpsl call xchg adc rolb nop pop mov je mov add and push aas jo xchg fild sbb dec mov add xor lods das inc pop cwtl add (bad) in outsb mov sbb lret xchg pop in push mov xchg cmp (bad) fcoml xor das dec cltd add xchg cmp subb imul mov fprem1 mov adc jle cld jge add cli sub inc push (bad) fiadd or pop aas hlt add mov add jne test je pop leave cmp and mov or cwtl hlt jge cmp push out inc sbb add lret jp adc out jecxz jbe daa xor cmp mov and adc aam mov enter push adc mov mov (bad) add or orl mov cmpsb lret xchg mov into inc sbb or jnp rcrl or dec push mov imul and dec xchg or sub jbe rclb lock les cli inc push mov push sub add addr16 scas lods mov inc iret add sti rcrb pop push cs or add popa fwait jg sbb aas add out sbb (bad) icebp add mov dec ds mov mov dec fcmovb add mov mov testl repnz iret popa and add (bad) pop xor cltd fs shrb xchg push pusha inc adc cmp mov mov into les sbb add jg ficom je adc jno in xchg mov (bad) and lea test pop jbe jmp clc mov jecxz cli xchg mov stc js icebp sub hlt cmp movsl and pop add sahf add xor loop push pop and aaa (bad) xchg sbb sbb addl pop clc fadd dec adc jmp test je add lcall pop scas fxch outsl bnd and and mov adc bound lahf mov repz ss imul mov xor push inc push and ficompl ret (bad) jmp pusha aas or insb pop mov std bound mov or cmp je inc push popw mov xor fcomp mov or sbb (bad) bound je sbb jmp mov and or mov adc add aam sub inc cmp outsb xor push movb popf in icebp sahf ror jle inc enter adc mov je jne pop jge call mov ds mov leave jne pop subb cmp mov cmp gs ja pop or movsb inc loopne dec scas sub and pusha cmp xor fbstp mov mov dec orl ds gs scas and int3 dec jns mov pop mov sbb add dec cmpl fdivl inc loopne imull aam dec sbb shlb pop rolb out mov jmp dec aad sbb imul push jp push roll popf adcb push cmp sbb add rcrb cmp sbb sub imul add xchg into adc in aam sti xor pop jno add cmpl gs sahf jmp xchg xchg bound adc sub adcl cmp stos inc inc xor cmpsb push lds push mov xchg (bad) icebp ja lds xor rcl jb xchg xchg dec adc das pop cli or adc incl xor scas repnz mov cmpsl dec mov int3 push jne push xchg repnz in push cwtl ss sbb xor xorl stos mov jne (bad) inc stc mov ret pop dec out jne mov xchg ror dec pop lods ret scas adc rcr or mov cltd adc sti cmp pop add dec pop sub mov sarl int3 out add out test or lahf sub mov sbb loopne sbb push mov mov sbb pop cld sahf rcr sbb insb cmpsl add jle out inc enter xchg adc push jg test add adc outsb or pop sub sbb cmp mov adc dec adc sahf sbb mov testb adcl mov add (bad) mov inc add mov add sub sbb mov pop nop movsl cld push add inc bound adc or frstor lock xor punpcklbw add repnz mov pop push inc jno jle pop dec xor idiv or faddl push inc pop mov add and mov icebp imulb iret sub fdivs sub jp cmp outsl subb insb cmp mov les sbb mov xor push cmp jle pusha icebp push mov adc lods cmp fidivrl out add push subl (bad) push outsb in dec jne test sbb ds jecxz pop or cmp adc loop mov add aas mov sub xchg add adc ljmp pop es lods mov lods xchg rcll adc cmp fmulp xchg out fcomi push pop or add jl lahf dec enter pop and jmp xorw pop xchg sub add ljmp and mov pop push ss push (bad) nop xchg xor push mull lea jnp test ds clc mov mov sbb sti arpl out enter jmp pop jl fdivrs push pop cs mov daa sub and mov bound pop push xor roll fwait ret adc and add repz push dec push cs add mov inc mov cmpl lcall inc add jmp adc xchg sub shrb jne add leave xchg xchg xor jmp jae out (bad) stos test push dec sti mov pop adc lods pcmpeqw lret loope pop rcrl in jne andb (bad) cli or or pop or std mov and mov adc repnz fdivrl hlt leave mov pop push push sbb mov cmp sub add jmp imul add push xchg mov stos jbe add lcall fistl testl andl pushf xchg movsl add popf in sub add jg push jb fisub pop das xor xchg loopne inc popf dec add dec sub jmp sub dec add clc int3 jne dec adc imul push insl stc test ret push and sarb into pop mov (bad) inc je sbb add out and or fsub mov xchg in or mov stos pop jmp data16 add out lea outsb mov add xchg jno jl mov mov sbb mov pusha cmovle das repnz xchg pop (bad) test jg mov pop add mov shlb push sbb pop mov aam jmp mov push pop inc (bad) loop push jg pop cli rcrl jg dec sub std imul xchg mov mov movsb or xor daa (bad) xor mov (bad) aas push mov aaa xor sarb int3 push (bad) pushl dec add outsl push mov add xor adc mov pop xchg sti or jl sbb xorb add icebp (bad) sub psadbw roll mov aaa mov pop add sub loop push mov jmp adc push pop loopne mov outsl sbb in or push pop cmp aad fdivp cmp xor sbb cmc (bad) jle mov lods pop mov pop sbb push jns popa pop push enter mov sub das sub inc add iret push fsubrl pushf push xchg push mov and roll add dec loop inc gs repnz add ret sbb sbb push aas push addl jnp daa jmp adc je or mov inc or fistp inc adc ret mov xor stc shrl jl push inc sub add jl adc daa rclb push pusha xchg (bad) fstpt iret xchg sbb push mov sahf xchg push xchg and pop imul sar fs xchg fsubl popf mov rcrw aaa idivb lods (bad) lods fiadd imul je xchg lods dec stc add out sti pop gs mov push xchg mov fs fldenv inc (bad) jmp push test sbb sub push fxch cmp mov add hlt out cwtl inc adc inc stc daa sub je movhlps mov xchg jg lcall fistpll jge or pop leave add lds xor std push cli cmpsb jle das xchg cli xor sti lret push mov mov push add sbb aam adc pusha push sub sub pop sub push aad mov inc inc xchg jne dec fwait jnp aam pop outsb jb iret mov stc out in inc outsl pop push test pushf in jl inc enter or pop pushf xlat sahf lea pusha test stos inc int3 cltd cmpsl cmp and xor jecxz pop add adc dec jae cmp pop push inc pop es repz fs sbb jne imul and orb jmp mov sub ror or sbb xor add (bad) out lds int jnp or fs nop jnp lock adc aaa add sbb or sub add cmp pop cld add pop push push test inc cmc mov xchg addr16 mov mov jae mov (bad) cld lods sti push jg pop mov jle dec fcoms popf or pop and and adc test pop mov fisubl mov data16 cmpsl iret lds xor mull push push pop (bad) mul aaa or jge test push xchg xchg dec add jbe and out movsb add into out in lock push arpl iret add mov pop and inc orb jns std pop inc subl xor jge lret push mov sub addr16 ficom xor pop pusha push jl sub out imul sbb lret pop pop jg sbb mov sub xchg dec and fisubrl jno jmp cmp xchg push aas pop add fidivr flds out test es sbb lds sbb je or testb xlat mov (bad) sti (bad) mov in xchg sbb enter out sahf xchg and fsubrl outsb xor push nop jl pop or pop outsl xlat sub cmp test mov mov insl xchg cwtl loopne sub rcr stc aaa nop lahf add xlat sub add std das push cltd pop pop push std jl dec mov or cmp ljmp out sbb pop test and jg pop pop nop nop push add xchg pop or mov push lods enter mov lods push in lret mov loopne mov xchg pop push mov pop mov xchg les jmp cmp sahf xor adc daa pop pushf jle push fistpll neg sbb lds sarl mov arpl push pop stc jge int3 scas xorb jb fs jne xchg stos pop pop mov sti subl ss or mov sub inc (bad) cmpsb negl and pop xorb incl sbb push fs or incl aaa int das pop pop jbe in (bad) iret pusha in jnp and add xchg adc mov jmp sbb inc mov fidivrl pop cmpsb add xor cmp and pusha imul leave add or fwait mov test out add sbb dec jg in out (bad) addl pop add stc mov inc push xchg jmp scas and push sbb lcall cli hlt aad in mov ret or cmp sbb or push loope dec repz jno aas fwait mov and mov popa mull aad cli outsl orl add add int sub add fldenv daa mov cltd fcompl in cmp mov out or push notl pusha cmp dec mov in mov addb cmpsl loope or adc int3 imul mov sub jnp insb push adc push popf dec add mov add cli jne and mov pushf and pop (bad) icebp dec adc andb sbb andl add jo push or lret pusha test insb add mov lds sbb jle shlb mov jnp adc das outsb repz push dec jle roll adc adc push dec inc and pop adc nop add stos dec add adc push iret mov daa push xor ja mov int3 cmp stos mov sub sub rcrl push add add mov outsl xchg test pop mov mov pop test cld mov xor mov inc mov mov xor push fist ret sub pop nop adc sahf or mov xchg jle lea push cli dec xor icebp and and pop jne out and stos repz push bound mov adc cld xchg jae push mov inc push jle add jo sub jb and pop loope xor aas sub and ja or jge sub add cmp insl loopne movsb mov mov cmpsl ja push shlb mov movsb sahf mov sub loop add std fwait cmp sbb rorb sub js fs adc push out mov adc fstpl ficoml jmp lea mov mov dec pop pusha aam clc sbb test sbb sbb sub aaa ficomp loopne add adc addb add hlt ficom push out lea js xchg das outsb jbe mov sti add mov clc out add (bad) xor mov mov pop cltd outsl push (bad) pop cmp pop pop sbb (bad) fist and and cmp adc xchg lahf (bad) cltd fadd push push jmp dec outsb lcall add add ja push mov out scas sbb ret sub push cli mov jge mov ret mov push xor mov pop mov mov pop pop sub xor push adc or aaa sbb jle pop sub (bad) pop adc jne mov inc add ret out lahf inc jmp mov fsubrs sbb sarb mov jae xchg cmc and mov dec cmp add loopne push rolb cmp out bound cmp xlat sti arpl push add dec push mov jge and and sub add scas sbb cs dec and outsl test mov push push repnz add cmpsb lock js into loop call xlat pop jg mov inc jb out or jns aam jns add repnz mov pop dec mov scas cmp mov pop push xor push pop xor jecxz das mov pushf sbb or add int3 orb outsl jbe mov jl xlat xor mov fdivrl or cmp ja dec mov stos push cmp mov gs scas add push sahf inc dec jne cmp sub icebp mov xchg subl (bad) pop nop pop popf xor and add dec aad jecxz jp scas fiaddl in push orb mov pop add mov or test mov push lcall cmp call fwait pushf scas into add add push or jne jbe pop shrb daa jmp fsubrl mov dec imul outsl and xor push cmp or mov fsqrt adc ljmp or xor xchg movsb (bad) push outsl inc pop mov sbb or ljmp movsb stos call mov dec cli les push push push mov mov jg pushf pop sbbb pop inc and loope dec and add pop push sub fildl and sbb push ljmp add or repnz cld cmp adc negl in (bad) loopne adc pop sub addl iret rcl add mov popa cltd inc jge push xchg adcb jns enter xor adc pop rorl pop dec add rcl or adc and jle je lcall mov xchg (bad) jecxz cld aas pop inc xchg push hlt sti cmp xor sbb data16 aas fwait out nop out inc and cmp dec (bad) sahf sbb fisttpl xchg sub insl and xchg int3 cltd push nop xchg test jg add test and (bad) outsl rcrl inc adc mov cli pop (bad) aam jmp and mov imul sub pop mov cmp std cli lea xor icebp xlat jmp sbb (bad) hlt mov pop sub pop pushf sub shl adc mov (bad) lock add cwtl cld pop rclb fcomps (bad) cmp sub out sub jmp adc adc rcr std in dec push jge movsl mov test push pop inc mov pop cmp rorl ficom jmp cmp fild dec pop movsb gs scas mov loopne adc mov scas push repz addr16 (bad) roll push mov jae mov ss push mov mov pop daa mov nop and (bad) dec aaa sbbb sub cmc call xchg jae popa clc jg push inc jno arpl and decb (bad) sbb add in pop jle fbld xchg push xchg push test push fiaddl inc dec mov lds and xchg es and xor test insl and pushf push imul sbb out or sahf outsl push lgdtl push ret jle repz jno push sbb mov mov outsl cld cmp fs sbb push push test dec push push mov into es push mov call inc (bad) cmp das mov sub sti scas leave mov (bad) jle add stc pop or arpl push xchg jle inc sbb test insl jns mov pop pop (bad) jecxz mov aaa rcl out push inc out lds xor dec rcll icebp pusha mov jg add xchg add inc pop test mov dec jmp jp lret loope lret mov and add (bad) sub adc mov adc push add ja dec mov pop fidivr jle mov lret push cld out decl adc add adc sbb mov cmp (bad) pusha (bad) push mov movsl jg pop dec out mov dec mov ja in std mov sbb pop outsl jecxz lods aam dec push mov or mov push xchg pop imul (bad) or pop inc add fimull cmp push fistp addb or ret or xchg or orl xchg in inc jb sar aas inc add pop dec orl fdiv jns or xor js repz aam incb cmpsb adc ja add mov (bad) or out xchg adc loopne mov xchg movsb adc pop in lret mov add popa stc mov roll xchg cld mov or jae push pushf mov push or test repnz stc imul inc mov sub push mov (bad) cmovo out cmpsb rcrb inc pop les sbb mov cmp iret out out loop pop insb push test imul jl cmp inc test push imul jmp incb or cmp out test jecxz (bad) outsl and les stos repnz xchg push int3 out mov sbb or mov sub add stos sahf icebp fstps pop cs loope pop push sub pop pop and xchg aaa jecxz fs sbb or dec cmp out pop addr16 inc push adc mov arpl and sbb pop idivl movsb sub es jmp push or jecxz inc jp repnz test insl movsl aad push and inc sarl sahf aaa dec stos sub push cmpsb jbe stos (bad) push sti pusha jp push dec in daa (bad) jg es loopne sahf stos xchg (bad) mov scas cmc cltd ret test jmp mov pushf popl mov xor jno add sbb xchg mov loopne cmpsb cmp and test jnp sbb (bad) fsubs loope ja adcb push mov std and cmp pop dec mov xor pop jnp out cwtl mov and mov jne inc mov (bad) pop in mov aaa cli lret das aam xchg mov mov xchg add inc sbb icebp pop les or xor or adc inc and dec ljmp inc int3 jg sarb inc (bad) (bad) pop sub push mov pop adc aad test test sbb adc cmp loopne adc pop inc and add faddl sub pop (bad) out out mov bound and mov xchg mov flds jle and js test fbld enter pushf xchg out (bad) mov push add dec (bad) fisttpl iret popf sub xor or mov push stos sbb sbb inc sahf fstps out jp mov dec cmp jg and push out lock add push orb push xor sub mov outsb and cs adcb ds xchg (bad) mov xchg js push pushf dec scas gs add std adc insb xchg cmpsb rclb adc popf jg pop test imul arpl notb cmpsb lahf mov push data16 negl mov add fcoml cwtl rcrl sbb dec test call repz mov dec push sub iret aam pop (bad) cwtl dec mov nop les jns inc xchg xchg aas cwtl mov push pop lcall mov dec dec mov push jle pusha mov sarb jmp jle xchg (bad) and pop shl add mov mov or sysexit mov incb jg fwait xchg sti jle add sub out pop sub inc lcall xchg add bnd or enter repz or ret sub inc push jmp xchg add jbe jne outsb inc fstps pop pop pop test xchg and fidivl lea mov lret push jmp pop popf push lahf sub mov into cmc insb push das lret outsl sub nop cmp ljmp shrb dec daa stc mov add in in pop shl add aaa repnz ja push sub decb aad add jmp in test leave push jno adc pop das je lcall sbb inc into iret push push fistpll add jmp pshufw mov loope dec push insl movsl lds stos push int3 or push xor pop inc lcall fucom push adc jae aas push push sub mov or mov inc (bad) and in jecxz dec and ljmp sub hlt aaa ret adc xor (bad) outsl scas mov mov bound pop add jle shrb sub mov mov jmp push jb,pt dec pop adc dec aad fsubl test jle (bad) mov icebp das shrb cmpsb mov daa cltd mov rol inc sbb push xor std pop push pop mov fcoms sbb cmp std inc dec dec jg aaa js or xor adc or and add jg shl push xor mov jg inc scas shrl adc add add rolb jno repnz push das push pop dec mov inc mov les lods xor dec jmp xor mov push sbb adcl adc in lret add push dec or push daa add test dec and mov mov xor push call pop ret and lods test ret xor jno adc sub pushf inc pop inc push sbb ret mov inc push ret cmpsl sbb movl push sbb ret and inc push ret or (bad) je jge iret and pop fcomps out sub jle mov sub dec call sarb rcrl mov setno pop cmp xchg pop jle pop popa mov jbe sbb xchg loope pushf ja cmc inc frndint cmpsb mov pop negl pop jb and inc inc sub mov ljmp (bad) fnsave pop xor xor pop or push mov cmp mov jmp mov inc sti xchg mov add add add repnz push inc cmpsl bound ds jbe add les add (bad) aaa (bad) scas ret and add dec ss pop hlt in add jne add add repz mov andb add (bad) repnz rclb jno in cmp mov daa out (bad) dec or popf add clc aam add mov xchg fildl xchg mov cmp mov or add rcrl xchg or sbb mov jg ds pop shrb xchg mov push lcall jne mov adc push add mov jge push jne pop int3 rorb cvttps2pi arpl jns sbbl outsl bound mov popf in pop fbstp pop sbbl dec repnz mov push mov cmpsl mov push add sub loopne aaa movsl repnz cltd movb add pop inc mov add mov cmp test xchg pop orb push lea mov lret or mov loope std mov ja mov or cld inc test cmpsl mov (bad) sub pusha int3 and aaa jp fsts push cwtl or popa pop adcl enter add fisubrl pop jmp sub and or inc adc pop in hlt out pand stc and and lods inc adc int int3 xchg jns sub or add and fsts fstpt popf je (bad) cmpsb femms loopne lret popa push mov lcall rolb add fildl push jo jg lods sub mov mov jg mov add (bad) arpl mov mov nop loopne pop fdivl enter ds call pop insl fldcw inc (bad) das mov sbb mov jne sar aaa lea popa out fldl cmpsl rorl lock and pop dec mov (bad) lods das mov sbb xor mov mov mov (bad) jno pop cld outsl mov or imul inc into pop scas cmpsb pop inc pop mov sbbl xor mov es cltd or jl push in add push jle add mov push bound loope lahf fldl mov in fildll int3 mov clc adc mov leave das cmpsl js iret je rclb and or mov dec mov mov cwtl leave hlt add xchg xchg adc loopne add imul das mov rcl movswl mov mov lret add or jo cmp (bad) data16 or jae dec pop lock mov mov jg sbb jb add push add xchg mov xor mov and (bad) jge lods or push cmp mov cmp ljmp or add mov pop adc popa js mov adc sbb movl cwtl dec dec mov test loop mov lods xchg test sbb clc aaa push test (bad) testl (bad) and xor int add scas test ret inc xchg test sbb rorb sbb jl je je test in inc dec push xchg cmp dec popf dec jmp lcall jg stos and fcoms (bad) sti or fcomps stos and xor (bad) sub push dec sub adc add orb dec repz cmp sub or dec adc and popa push sarb mov mov mov pusha adc push lret nop lods jl or mov adc jo xbegin adc andb lea cmpsl pop mov or or mov jge dec (bad) mov pusha and push add pusha or pop imul mov xchg mov and cwtl sbb stos add add pop push addr16 cmp adc add cltd or clc mul cmc jae jl movsb fadds mov sbb cmpsl xor pusha (bad) jns jno je jg xchg pop or andl es sti xor mov sub lods nop sub mov xor xchg pop icebp sub enter and addr16 mov enter dec xor add fbstp pop add dec into add jbe and arpl rcrb loopne stos rolb cmp lds and test insb sbb dec xchg out mov push mov icebp mov add xchg pop adc test dec xchg sub mov pop in adc fwait mov test dec pusha sti rorb lcall out sub mov mov test dec cwtl inc fmul or int3 out test sub (bad) or pop fdivrs xchg dec jno add pop jo nop insb or push mov sub jo xchg push push orl add stos dec jo es add jg inc shrl sub adc (bad) adc test sub bswap sbb shl jb mov cld insb dec test add jbe in xlat xchg shrb ja (bad) out stc stos inc test iret pop dec test nop mov jg sub icebp lds adc addb repnz mov jo mov rclb adc icebp mov sahf cmpsl mov pop and cmpxchg adc xor xchg mov adc add mov movups xchg adc jle cmpsl mov mov mov loop push mov add jg lahf jno iret inc mov dec jbe inc or and push imul cld add lea pop out push add test jnp xchg mov or jo jl mov stos pop cmp faddl movsb nop xor addl mov iret nop cmp jmp adc arpl add xchg sahf xor mov push pop jg push je stos jge mov imul je stos jb clc and fsubs subl addr16 rcl cltd lock mov in fist repz mov fadds xchg test xchg inc int3 mov add mov xor dec call test fwait mov jmp pusha add fadd mov sbb jne out cmpl jg (bad) hlt mov das mov mov jnp xchg dec or (bad) in cmp adc cmpsl mov clc push xor mov out adc jg add cs cmp enter sahf cmp out cmp xor adc loopne sbb xor into jb shll mov int3 xchg pop add mov cmp mov xlat add adc mov add outsb cmp lods lret icebp add adc mov pusha lock xchg push sub add dec insl js divb pop xchg lods inc mov dec addr16 lea les pop popa int3 cwtl adc lock push ret aad mov (bad) scas add jae push jns mov popa pop dec push mov or fdivr xchg fcoms xor mov cmpsl add sbb lods cmpsb (bad) mov shrl lock call inc idivb (bad) and xchg dec push mov popa and shlb dec add sbb lock fdivl ja mov add pop out or add push xlat cmpsb repz jns lret dec pop mov jecxz add inc jbe addr16 int3 sub cmpsl sub adc pop out leave out iret jg push shl xorl mov pop rolb cmp add and mov xchg xor add hlt push jg adcb cmp imul cmp popa outsl (bad) xor (bad) sbb sbb sbb out mov incl add imul aaa popa fistpll mov test or jb inc push in int3 xor mov das bound dec push and mov or pop xlat and sahf pushfw cmp xlat (bad) jg nop test ret pusha add leave cmpsl xor sar pop in stos push enter sbb add fadd sbb inc push fildl rcll inc lock sub cwtl jnp (bad) sbb or fs or cmpsl mov ss push xchg or sub dec push push jge jge dec xor pop inc cmp popl jg pop add enter fsts cld or cmp mov sti scas bound ss fs add arpl int3 stc inc cmp ret int3 inc inc mov mov pop mov lret gs jge inc pusha js dec cwtl push add cmc add scas aam xor inc mov inc shlb xor cmp rorb mov rorb sbb arpl push mov js fdivr dec mov mov ret jmp jecxz (bad) mov sub loopne jns inc jge mov popl xor push mov and loopne loopne idivl xchg jns leave dec fiaddl sarb sti shrb cmp push inc cwtl xchg dec les addb ret push sti fsubs mov jecxz pop inc xchg addr16 (bad) dec out insb call mov repnz pop bound lcall inc cld into das mov lahf ret faddl orb ja push call jbe adc pop addr16 (bad) dec hlt lods add sub adc mov fdivs pop push or jge mov jecxz mov jnp push lds add add addr16 movsb (bad) jmp cmpl in mov clc into pop call push dec jno cmp adc add jnp sbb test cld add std fwait mov cmp inc nop sti popa sub and ret fist jb ja pusha lods sub and mov jge (bad) xchg rcll add push xchg andb add pop lds fwait test add add inc loopne and ja or scas cmpsb xor or lcall add loope icebp xchg ret xchg (bad) jl jno sub test push idivl roll je jnp pop push mov sub test scas enter call pop jnp cmp and xchg mov orb icebp lcall xchg xor push fidiv inc sub stos sti sbb movsb lret (bad) adc pusha enter xlat and in mov cld jmp xchg lods addb pusha pop jno pop in adc xlat add xchg mov inc jo imulb (bad) jno jbe pop in add sub cmp mov sarb stos loopne inc jnp sbb (bad) int3 sub adc lods or pushf add sub aaa (bad) fs mov xor rcrl and add add jecxz jge push movsb pop inc sub xchg add mov sarb sbb jnp xchg mov push or xor inc notl sti and sbb (bad) loopne hlt mov (bad) jae mov test xor leave xchg or push push sub roll lret (bad) inc dec nop push jno fadds notl xchg cmp addl lods inc sub add fistl loopne and xchg jns or mov roll fisubr mov sub addr16 rcrb fadds inc sarl lods sub ss push jno adc or inc jp cmp sbb push mov add ret lock sbb (bad) mov and hlt add cmc decl test insl inc push push fisub test push (bad) and stos leave outsb sub rolb mov subb and xor mov jns inc hlt cmp in or (bad) mov xchg mov push sub repz mov pop idivl mov fucomi dec sub jne bound or scas into jnp add mov mov mov inc mov jmp rcll fstpl loopne mov sahf nop cs arpl jo inc add and fs xlat test lret xor sbb outsb clc icebp jae xor js and call or sbb decl hlt fsubrl ja enter dec xchg lret add mov cmp pusha push cmp and push andb lock popa xlat adc add add stos jbe add xchg lock and and sub daa aas cmp in mov jl test cmpsb push cmp xor lret aaa mov mov cltd stc ret aas clc push (bad) repz and jge lret bnd mov and or lcall add sbb int3 add leave jnp nop clc xchg sub cli stos hlt (bad) and fild inc popa rcrb sub sbb add jnp add aas mov jp and test or xor jno outsl mov mov mov cmp push test jge cwtl (bad) out clc into shr sub lds or mov lahf pop jge enter pop (bad) mov insl dec mov pop push movsl adc ficoml ja jmp incb sub aaa sub adc mov js pop sarl add mov adc mov xchg out pop out lea in std nop mov cli pop aas repz add cmp incb ja mov cmp stc dec jmp rclb cld add test jge cmc cmpsl loope pop push or push inc int3 sub nop nop xchg dec xchg push popa roll sub xchg (bad) pop fsts mov hlt add loope out daa enter add push inc js pop hlt out insb add fsubrl adc and sarb out pop sarb xor inc test leave pop cmp mov pop push iret mov inc test mov fldl or sub imul and lods sarb in mov mov lods ret sub push out cs into sub hlt cmp arpl add cli mov add ret fldl ret nop dec stc movsb add sbb movsl xorl psubd or mov xor mov clc fcomps test jg cmp jns adc (bad) mov enter cmp lods js (bad) sub rclb (bad) push rclb sbbb jl bound std xchg bound inc sbb mov sbb pop gs int3 rcrb insl dec jbe setbe push xchg cmp adc pusha inc clc add jle dec sti adc rorb xchg lock mov pop xor imul pop loopne jo movsl sbb xor pop les push cmp (bad) xchg sub add sbbb fisubr or pop or fdivs (bad) les add push pop addl push push shrl cmp or stos cmp (bad) fisttpl add jnp mov js and enter inc and enter outsl xchg cmp mov insb inc jnp negb ror fmull dec fwait js sub xlat or adc xchg addr16 or mov int3 cmpl and mov mov fs or sbb add dec mov xchg test push push sub pop push adc rcrb add insl push mov les (bad) enter (bad) cmpb rcll mov rol adc jnp xchg xor outsb test push jns adc cmp xchg (bad) stc push pushf (bad) jecxz popf adc ds insb jne pusha jl jnp sbb es sbb sbb mov ffreep inc mov sbb push cltd push inc popa add ds push xor mov loopne pop mov jno sti aaa jecxz xor dec jmp dec inc mov pop js arpl push mov clc clc sub dec sbb outsl out (bad) into jbe xchg mov arpl jb inc jns adc sub jnp pusha sahf hlt dec stos add push lret arpl adc mov lret mov push add shlb xor push lret sti cmp adc cmp in dec bsf sub loopne psubsb fsubl lea mov iret pusha push xor add mov inc mov add adc test popf sbb rclb fmulp dec out movzbl xchg push repz orb insl add jns rolb inc cmp jne push fs add pop (bad) fisubr ret add loope testb jg,pt test iret jb adc xor repz xchg inc lods int3 cmpsb sbb outsb test adc xor lods loop mov mov addl jno push ret cwtl jecxz loope dec xor mov or dec xor pop fdivp int3 cmc mov push (bad) mov mov rcrb xor dec movsl dec mov sbb test sub push or orl jne or xor inc gs rcr xor cltd mov jmp ret jle loop test or xor enter shlb cld inc sub or out popl rorl pop mov cmpb jae pusha sub mov rolb dec dec xchg cld (bad) fidivl (bad) outsl (bad) lock ljmp pusha bound pusha add cmpsb and adc add cmp test inc sub mov (bad) sub pusha sbb add orb xchg push je add div inc fbstp cwtl adc sbb jb and mov int3 and add or pop mov scas push repz inc push test push mov inc fsub test mov xchg loopne clc jmp jno inc or sbb adc jne clc std mov mov rcl int add mov mov or dec cmp jl dec jb dec dec fadds push jmp (bad) mov push clc adc add jmp mov inc inc push out add sbb fdivrs inc inc int3 xor jnp cwtl add sub sbb jle or add and jecxz test and xor xchg add imul mov in pushf add and in inc in mov mov stc lahf pushf push cmp lret sbb loop inc dec push mov xchg cltd fisub clc pop and and sbb push sti outsb sbb pusha jg stc mov lcall add sbb fs insb add xchg rol mov test xor inc mov pop les pop push fwait js adc or xor mov test fimul inc inc aam pop push or inc cltd or add int3 scas push cld (bad) jo pmuludq pop loopne stos sahf mov add arpl jecxz iret daa or test mov add (bad) jno call sub or or in mov adc test cld cmp in ret add mov subb adc cbtw hlt or adc sbb xchg cmp insl adc pusha je andb mov add pop (bad) repnz jns cltd js ja jmp addl and fild outsl mov (bad) bound adc cmc je or mov sbb sbbb popa or sub jl call lret inc testb dec pusha lods or and movsb mov mov sbb call test int3 sti pop insb popf adc add xlat xchg subl loop cli lock into ljmp icebp gs stc mov clc mov inc fdivl cmp (bad) loopne mov push push add or adc mov dec fnstsw xor mov or dec xchg shlb out adc mov push lret mov add pusha sub std pop int xchg push sbbb inc jae push popa push into pop lds test push sbb (bad) mov fs and cmp add pop add pop or push pop mov out mov (bad) jno pop jmp shrb sbb je add (bad) int3 add add aas stos je cmp mov and dec pusha addb add dec inc xor and sub adc nop adc mov dec push xor nop adc iret adc gs jg dec aaa add mov push test xchg xchg adc xchg jmp shrb pop cli addl scas push ja rcll pushl in jmp add mov push (bad) dec lods push adc fsubs les imul and int3 (bad) xor add xor loopne pop mov cmc repz mov push rcrb out sub jno pop and and dec cwtl sub adc imul or add mov ja inc push inc push sbb push iret (bad) lods aad sbb push pop les cld daa fsts stos and push xchg inc xchg mov lcall popf sbb push pop push add lods mov hlt fadds dec inc fs add test sub sub ret cmp (bad) xchg notb xchg jo mov mov rorl adc ja lcall xor inc nop dec add lock dec fdivrl xlat iret mov push xor dec dec add cltd and mov and xchg sahf push test jge je pusha ljmp add aam lea push test mov cltd movsb adc adc cmpsb flds xchg lahf je aad sub jg mov dec xor call add mov and add sub lret js adc mul das rolb clc adc fstps sbb pop sbb in mov clc jmp push popf sbb mov sub rolb or outsb and ret (bad) gs and push stos les lds add movsb lcall inc add xrelease loope stc aad aam mov cmp xlat jnp out sub push pop orb add or stos fwait xchg fldenv or add ret icebp cmp push cld loopne xor outsl addr16 xchg push rolb xchg jmp mov xor inc aam lret imul aam mov mov hlt adc mov imul add sbb daa pop aad loop insl cvttps2pi mov add fistp mov mov dec (bad) mov pusha insb sub fs sarl mov add icebp (bad) cli lock movsb js push lods nop sbbl pushf dec clc mov pusha in fwait scas xor in arpl ret add xchg mov cmp fwait adc add mov (bad) (bad) mov es cmp adc jns pushl xor aas aam sbbl lea jg je push add inc pusha (bad) std inc mov xchg out pusha fs jb arpl add aaa pop jecxz call test cmp loopne (bad) lcall pop scas es movsl dec mov (bad) mov inc xchg add cmp sub add dec dec clc and jns scas sub xlat xor jne add movl add nop inc pusha pop xchg mov addb int adc push pushf mov pusha xor mov not dec and mov jo pop call cmp int sub sub sub jl cmp jns cmp mov push insl out insb or clc fs sbb adc push dec nop mov inc stos dec cmp sub or sbb pop int mov out mov fstps mov mov xchg rolb cli in adc inc and mov sub loopne sub out xor sarl hlt cmp cwtl push add dec rolb or (bad) cmc les je je mov movsb stos dec xchg or jmp in lock sbb pop mov mov and mov mov pop jmp iret sbb add (bad) out daa icebp fisttpl andb xchg or das out add xor ss add and sub add mov or pusha stos out mov mov popa inc inc popf push or mov push sarl inc inc cltd insl adc insb clc fcoms push push cmp push cmpb rcrl shlb xchg xchg dec jl sbb lock add jmp jns mov nop int3 add xchg lock ret cmp in lods outsb roll xor jne fs popf adc daa mov (bad) adc and test pop test dec ljmp lcall mov loopne nop push int3 aad xor pushf xchg sarl push adc add in (bad) and aam mov cld dec (bad) icebp loopne sbb out jle jge cltd mov leave push and cmpsb ret int3 adc sub movsb ficom mov sbb lock mov dec punpcklbw or jae inc inc mov cmpl add push or or push cmc inc sub dec and fistp push hlt sbb sub (bad) ficoml mov ficomp in and or mov cltd cmp inc pop enter add mov pop xchg dec insb outsl sub in shlb loopne cwtl ret fwait add je loopne fcomps push out fistpll das mov sbb sbb pop (bad) enter mov jbe mov jb mov jne in in sub adc xor movsb pop popa push fldl dec repz cmp jle inc jns sub inc addb gs cmp in mov cwtl test sbb lea push in pop jnp mulb sbb push (bad) jo clc cmc xchg add in sub mov push ror push mov stos rcl leave rclb sub cmp add adc or add inc dec js jne mov mov jo dec xor pop push inc movsb adc bound inc leave mov sarb repz sub iret repnz add (bad) ljmp adcl xchg cs add or inc dec insl inc inc jl mov jl std inc fcmove fidiv in clc or xchg shr dec mov adcb mov not lahf add lods cmp ljmp xchg insb xchg or mov es xchg nop sub mov xchg in adc mov adc sbb sbbb push fs lods or fldcw loope nop or pop dec dec cwtl sub mov test test pusha xchg inc add mov or xchg imul cltd pusha mov int push nop ds fisub inc jg or jo push and dec xor sub idivl inc test mov (bad) mov or pushf jg inc movsl and and pusha add nop xchg sbb jmp mov cmp mov xchg push js repnz xchg int3 ret and lcall pop test insl jmp arpl repnz movsl xlat les (bad) pop mov inc movsb gs movsb adc test pop sub lds adc sub jl mov inc in cmp repnz ja adc out daa xchg pop (bad) aad add add xor xchg mov jecxz mov mov or orl aaa cwtl sub call scas xor pop inc call in cld addl leave dec add nop sbb pop pushl push stos imul lock mov divl into fisubrl je test ret pusha inc xor inc inc icebp into sbb test xorb cltd cmp jo jmp add das and add iret mov jl push jl flds (bad) cwtl imul xor inc and lods insb push jge adc mov clc lods sub and lcall xor mov aaa sbb sbb call cmpsb dec jle jecxz push cmc mov jb pusha sub mov pop sbb or pusha push sarl xorb je imul xor pop insb and xchg pop ficomp adc xchg cmp add and (bad) aam mov xor adc lods dec loop inc addb fs imul push push or pushl shrb js push sbb ds push jnp sbbl outsb push icebp andb sti add push (bad) adc xor sub sbb xor (bad) adc xchg add bound clc lret dec mov jo sub in les push jno enter inc pop mov ret shlb das xchg push inc out mov ror and test push loopne sub or pop in add sarb cmpsb mov pop or xor lea psrlw add rorb pop push push sbb xor add (bad) daa mov or mov mov les (bad) fs mov pop pop cmp fcompl jecxz mov xchg dec insb cld cmpb mov (bad) leave adc adcb inc das dec and add aaa arpl push (bad) add popf nop push rorb stos repnz fnop jb mov sub jl (bad) test pop xor add ds or dec mov fs push imul push rclb adc inc hlt pop in cltd add in sub push fadds adc inc inc dec jne fsubs in pop addr16 insb movsb inc loop xor add (bad) dec lock sub gs add push mov les push xchg repnz sbb add pop xchg icebp aam push daa test mov dec vmread sub pop ds outsb aas xor je hlt fs imul mov pop movsb adc and je movsl aaa inc into adc xchg cmc lea push and rorb pusha inc dec add mov sar movsl test or test daa repz int loop push mov pop std js scas shll push add int cmp dec test inc or pop cmp dec enter xor push xchg daa push cmp clc (bad) fwait call mov adc ljmp pop xor scas ficom pushf pushf inc std pop hlt mov cmp loopne dec int3 insb sbb je cli add pop enter leave shl fs pop sub pusha and ja mov mov dec hlt cwtl ror call cmc dec popa push jae xor shll addl mov push push lock and (bad) shrl push jo cmp push negb xor mov imul cltd inc addb (bad) int3 js (bad) jbe jnp add cmc fxch jp dec loope add outsb mov mov inc fiaddl sahf cwtl adcl fadds xchg orl in cwtl nop xchg jp mov imul xor test sbb push add mov and add cli (bad) dec push movb pop jno fcomps pop pop jns push das (bad) rcl nop jno add aam loopne add pusha in jb ret add xchg add or sti mov daa insb mov dec mov int insl adc sub (bad) cmpb and inc add adc je xor and dec nop loop fimul xlat cmp mov aam inc cmp and push popf in imul call lret adc cmp or int3 sbb pop mov mov push mov dec scas sub shrb jg pushf push cld out mov inc inc fldenv xor xor jp ljmp sbb mov fsts adc sbb ljmp call test mov test dec push push add mov test jl push pusha mov pop xchg dec loopne sub adc sbbl shrb mov push rorl and cmp mov xor data16 jle js sbb pusha pop dec xchg ret daa je sbb test or pop adc incb cmpsb leave loop jp jl add jo mov dec in mov xchg int3 and or sbb xlat push lock push xchg pop and add add out dec cltd movsb adc rorb (bad) dec cmpsb push movsb mov pop daa mov out push cmc rcrl xor pop sbb adc sub dec xchg inc mov and jl mov jo mov fcomps ficompl or pop or xchg inc je jne lods pop dec dec mov jmp lods pop aas mov es add push addb je sbb pop cltd bound ja (bad) pusha mov push lock (bad) aad lcall pushf mov adc loopne mov mov je add vpcmpeqb je js aas or loop fdivl int jae dec fs sahf inc in sub adc test jl inc inc push ds adcl push ja dec jmp and setp mov jnp invd std sbb cltd mov adc lret imulb into insb je ret or cwtl (bad) rolb cmp and les mov inc mov insl add imul pop nop jno mov je mov lahf inc scas pop inc js int sub sbb push rolb pop jle mov push xchg or js (bad) and adc cmpsb inc jge xchg pusha les int3 or sub or pop xor int3 inc fs sub nop mov notl clc sahf add insb imul call hlt pushf shl ror sbb ljmp xor lcall mov or inc mov leave and insb push pop lret rcrl cmpsl shlb dec frstor or insl and (bad) mov sbb (bad) out js test mov pop and lret sbb cmpsb mov imul xchg pusha xor (bad) loop adc aas mov lds jl jae xor sbb in nop inc in fnstenv addr16 icebp int adc jo inc cwtl sub addr16 out cmp and hlt sbb xor jne mov inc xor test loop add stos je or sub or xchg clc push daa es or (bad) xchg jae sub dec shlb pop cmp xor movl sbb inc mov clc push repz inc imul inc mov nop bound dec and cmp sub cltd add pusha jle pop adc or or add rorb pushf mov lret dec adc and xor jbe push (bad) jae fistp xchg mov add js and sub add inc fs add jg mov imull imul inc js movsb scas mov (bad) loop dec mov adc movsb dec dec jg cmp add adc or fcmove call (bad) and xor pop and dec ja and inc xor data16 pop imul adc lret imul pop jne les adc sub pop in stc sub adc ss mov xchg xor xchg (bad) lret cmp cs fsubs repz add rcrb cs xchg cmp mov outsl sbb pop mov sub shrb cs pusha cmp lods push lds adc sbb and cmpsl or popf add scas outsl movsl (bad) xor cmp xor or loopne or lahf pop test add gs shlb ror fidivl mov stc mov rcll pop in test push popf fmuls int3 mov movsb test or mov (bad) mov clc aas lret sub loop cmp push inc add dec bound xor insl aad loopne or mov and rorl repz cmpsb mov adc leave outsl ds das add push jl adc and pop sbb add ret dec add sbb into lcall sbb hlt inc mov jge mov adc pop mov cmp and adc inc sahf testl fimul cmpsb pop in popf mov lcall scas int mull std mov pop out sti mov pop cs and test push imul loope add mov and and adc lods cld (bad) clc push dec fdivs xchg xor and jge xchg and and (bad) xchg xor or mov ror cmpsb or add dec dec enter hlt iret xor fsubrs test pop shlb or pusha fnstsw mov or sarb xchg and jl cmp xchg push adc insb lods adc mov or int shl add mov test pop repnz mov add push and cmpsl adc dec inc cli mov xor xchg pop (bad) out lods repz xor (bad) clc pop jle jns sub das pop lods iret std out sub fcoms pop jmp sbbl daa add adc push mov mov movsb add out inc aam out mov out or push sbb or xor adc sub xchg enter cmpsl cmp fsubs pushf cmp adcb (bad) psubusw cltd add call add aaa sahf lret lock fstps xor sub sarb clc dec (bad) adc mov test mov jmp add jecxz add in and adc push adc add inc adc movsb aam dec das push xor movsb rol add jmp dec sub mov loopne fdivp or xchg nop pusha push pop ljmp pop pop fs adc (bad) jne fcmove enter pop sub stos in jmp dec pop xchg testb arpl bound pop rorb mov sub cltd mov dec mov push pushf jmp mov jl push push jno cs and test sub int3 mov loopne mov gs jg push imul sub xor aas pop xchg pop test adc adc ud1 cld (bad) jb sbb insl mov repz jecxz iret inc out pop and or cwtl (bad) out adc lock movsb add and shrb xchg sub stc cld xchg xor dec out mov push dec mov repz mov test xor sub nop dec aam mov sbb (bad) add lods fidivr sbb jmp popa dec rclb fcoml (bad) aam add call jecxz int xor or mov inc cmp inc sub and add inc nop cs fsubrs lods xchg fs or pop fucomip sarb mov mulb add mov hlt aaa ss or in test out or (bad) jo (bad) and inc in push add fbstp push nop sbb sub and xchg js in fs dec leave add mov test js out sbb cmp repz add std das add js movsb adc sbb pusha in mov mov sub mov jmp shl pop fldt xlat add fisubrl pop xchg adc mov xor mov pop sub dec push je and add pusha inc mov sahf jmp sub lods pop add icebp adc enter push xchg divb pop adc mov pushw jecxz mov hlt out or pop (bad) gs js in lcall movsl add lods xor or push mov daa xor inc jne shrb test sub pop and das add (bad) insl outsl ss and rorl fs jbe push cmpb mov pop cmpsb xchg or pop xchg add and insb cwtl xchg push lods pop (bad) cmc mov mov imul xorb mov out sbb lahf (bad) adc pushf addl sub cmp adc add mov mov push mov push cmp dec sets sbb pusha pop addl xchg leave or (bad) xor ljmp cmp fwait mov mov clc fs jmp pop mov ljmp nop test (bad) adc adc jnp test fsubs rolb andb outsb fisubrl mov jbe outsl xorb fisttpll jg pop (bad) mov fxch and arpl pusha mov sbb inc inc jecxz adc push xor sub stc or jle mov add int call mov ret sbb jp not lock push nop dec xchg adc in sbb mov lock sbb in mov and rcll test pop je addr16 inc cmpsl push repz clc pushf mov dec and pop repnz pop inc out adc out std imull clc into or adc fisttp adc pop or inc or insb and xor arpl and jg int add shrb jno add or or arpl fwait lret mov fildll xorb out add pop or cltd cs add xchg jp (bad) ds out lahf call loop lock dec fcoms sarl mov mov dec jl add jne sarl mov js mov clc (bad) ds and cs push add pop jge aas enter clc push cwtl mov adc rcrl inc xor jo leave cld fs andl jl mov rorl stos mov or fwait inc cltd (bad) xlat cwtl rcr sbb jmp call adc jae ja in arpl ds mov dec scas out sbb nop dec jnp xor sbb xor mull push xchg inc sbb mov and mov loopne decl cmpsl jecxz jge je adc or and xor or xchg lds push les cmp mov xor inc sub push repz pop sti gs inc lock incl stos test rol lds (bad) push push clc cld inc cmp adc pop shr lods jge inc add repz jnp mov cmp mov pop push push lahf ljmp or cwtl push and dec and xchg or stc push loopne inc sub jl leave sub cmp ret xchg push pop call jl mov fdivrs push call sbb dec addr16 cmp and mov push adc mov pusha insb fwait push dec and roll or imul nop leave loope cmpb add les mov lahf jecxz in dec movsb lds fcomps iret mov dec shrb (bad) xchg loop add push (bad) stc cld add jmp add add repz push mov jmp pusha inc out icebp (bad) orb pop sub mov or mov or push or inc cmp orl loopne fnsave int pop adc pop movsl les movsb pop imul mov dec jo mov leave pop mov clc jp jecxz push ret jg inc lret loope cmpsl sub adcb je or adc sarb or xchg sahf inc and stc shrd dec popa test push loope jns inc xchg jg push fnstsw (bad) pop psubq xor xchg push add into test mov jp add bound pop sub jne dec pusha pop cmp jge mov or add cmpsl or adc loop add add xchg xor jge lahf sub mov outsl or fsub push (bad) push dec insb adcb mov xchg in cmpsb in lcall insl push jb (bad) arpl popa outsl mov and fcomi adc jo cmp jbe jmp add mov add (bad) movsl loop andl adc add jecxz stos and (bad) inc decb adc es xchg push sarb adc mov inc cmp jnp add sub xorb cmp mov (bad) mov faddl scas shrb std inc pop scas sbb push inc xchg push fildl ds inc push les or jae insl dec test xorb push jg mov mov or inc push cmpsl frstor cmpl push or std and rcrl (bad) mov sbb add in shlb andb cmpsl test mov push sbb sti clc adc faddl lahf cmp mov stc andps das (bad) pusha jp in jmp test jne push pop aam sbb dec sbb add and or addl (bad) mov pusha (bad) (bad) jae fnsave cs cmp and sub mov in and jge inc lods inc (bad) jmp js,pt imul mov xor cmp popf popf mov in sahf in sbbl in mov arpl sub pop jg je cmp and scas aad mov repz js fmuls test mov or es mov push fsts jo test or dec inc xor inc inc pop test lcall addl mov push jnp cld mov xor nop dec mov lret sub aad (bad) mov andl rorb aad lds fdiv jmp cwtl arpl call cmpsb hlt and dec adc popf add nop leave mov pusha sbb mov js jne cmp cmp imul xchg or popf sub cld add in (bad) ret add sub jb lds in and sbb (bad) mov xlat pop fwait push fdivrl dec (bad) (bad) dec adc and or imul xor fs pushf push out cwtl rorb xor sub pand insl aam sub mov cwtl xchg loopne jecxz subl and jb mov sbb pop out jecxz add popa and adc mov adc test push jbe mov mov xor pop mov js mov and jmp insl cmp push mov das js adc test les insl rcrb hlt ret pop loopne enter pop adc and cmpsb sub cmpsb insb pop loopne jno mov push push cld nop add lahf dec insl test mov and add ret enter mov sbb xor ret add negb int3 pop int decl dec dec in mov cmpsb push jns adc (bad) arpl dec mov fisttpl loope xchg or jno mov jne hlt adc pop enter adc sub mov enter inc inc or adc adc popf jns js (bad) pushf cmp inc and mov pop mov sub pop inc or lret and xchg mov test jmp inc rolb xchg adc add in push xor dec push aaa adc int xchg sub sub cld sbb mov leave mov inc addr16 push mov sub push push inc and shlb loopne js add lods mov popf adc inc fwait data16 add dec lcall adc popa push fsubrp dec adc (bad) jo jle push (bad) hlt jno sub xchg (bad) aam cmp mov push xor and cwtl inc or lret aaa (bad) lock jnp rorb aaa fisttpll xor lcall sbbb add cmp in test and add jecxz call xor add sbb in in add cltd repnz inc insb pop bound outsl sub add xchg and fisub fwait or in std divl mov loop jnp loopne leave adc adc inc xchg int3 xchg daa aaa repz pusha loopne fwait mov (bad) xor call mov sub adc cld je fmull out add aas pop and jecxz xchg aaa decl add cli arpl add pop ret repz pushf add gs dec decl mov sbb ret add fdivs test pop push mov cmp mov outsl inc int3 add jp mov sbb adc dec movsb dec insl test pop in cld out data16 lods push xorl pop jp ds jle xchg jo push (bad) inc inc add mov leave js loopne test (bad) call cmp adc xor int in xchg add popl push out add movsb mov pop pop or repz mov pop add pop mov push mov fbstp and jp add lret adc add pop add pop or clc in mov icebp jae pop jo js punpckhdq add rcrl into bound das add push stc mul xchg push xchg jae sarb mov mov call adc mov add test in jl pop inc and test test mov addr16 (bad) jo repz int3 mov leave cmc ret sbb rolb lock and inc and mov jmp je mov je sbb cmp push mov adc test push loop idivl sbb add pusha test nop ss xor (bad) lock test dec repnz xor lds or adc xchg jnp dec out (bad) sbb and add hlt div xchg sti cmp sbbb adc ljmp test cmp jae shr pop test test mov test decb mov push inc xor dec popl gs xor movsb push xchg rolb sub inc in xorl dec jge enter push and add sbb movsb icebp mov xchg push ret ftst movsl mov loopne sub sub mov test or fucomi rolb adc push es std (bad) push in sub xorb mov jmp int3 mov inc imul vmovdqa int das loope mov iret inc mov sub xor sbb (bad) xchg adc mov enter push mov dec (bad) xor sub lock or fsub push mov (bad) cwtl loopne movsb test add adc jle adc fdivrs xchg aaa insb daa pusha movsb les je mov xor jle insb pop jns mov bound insb cmpsl (bad) cmp ret loopne lock pop add or addr16 sar outsb pavgb dec loope fldt cmp loopne push popf enter push cmp jp jo mov movsb clc sub adc test adc pop mov aam fsubrl push sub jl stc xchg sbb inc gs xchg adc daa (bad) std (bad) or hlt test fwait mov xor sbb out dec mov add xor lret xor adc mov jecxz mov sub xchg aam xchg adc fs inc cmp push andl call xor or roll jl jo loope push faddl loopne lret ljmp sbb push out movsb dec cmpsb test fmuls add add xor incb mov sub lods vmwrite push lods or cmp inc xorl jns jo bound pop add fwait ret jnp fdivs cwtl pop cs ds lahf jb mov adc or bound dec add inc adc fs test aam lea mov adc aas mov push std mov test jns rclb adc or add push push jne out add add lods dec enter pop sub inc mov in inc adc out sub add mov push add inc insl cld add pop mov mov jmp add lahf ss notb nop or adc mul mov leave inc push cmpsl sub int3 jno add lods xorps mov lods fcoms sub fcoml movsb xor ret ficoml fistpl cmp dec xor fs sub add cmp xchg movsl clc fsubs ficoml and subb in mov push test push loope mov push test (bad) je push dec bound jb mov pop stc add ret mov aaa rcrb jne xchg subb loopne call push add fs cmp add mov pushf push pop xchg add or sarb test xchg pusha (bad) fs je mov movsb inc mov mov js add lods adc mov sub and mov movsl aam add inc cmp fstpt enter loop xchg clc lret das inc in fldcw or push test sbb jmp pop xchg sub in and push dec leave fmuls inc test add or cmp adc stos push out dec aas sbb js lahf push sbb pop into cltd adcb mov push sub mov pop push pop mov add adc jb mov sbb in js movsl pop pop inc add push jnp lret in loopne addb jbe cmpsl cli icebp lret jo je rorb test adc jg xchg sub fmuls push cs mov stos test inc gs mov xor xor popa cwtl fsubs ds add mov xchg adc repnz mov inc cli ret sub mov inc data16 sbb aas push dec sub loop xchg cmp insb cltd jne sahf insl dec mov arpl push gs jmp xor rolb and jge sub pop (bad) cmpsl jecxz jns stos sbb dec rol sahf lods add pop stc pop std les adc inc mov popa ss cmp (bad) mov movsb mov mov xorl add cwtl mov mull test inc or add stc mov push add int3 mov mov fsubrl pop mov add inc loopne fisubr inc jo inc icebp jns repnz rcll pop add inc lahf aaa mov sbb fsubs jo or jo lcall pusha xchg repz inc nop push adcb clc inc adc sub xchg pusha pushf int3 push xor xchg push push repz add sbb inc cmp in adc adc fildll jnp js std stc xorps push push jbe daa outsb xor lret mov adc loope into pop pusha pop lcall repnz cmp js lods enter movsb sarb xchg and dec in add gs aas loop sub push mov push (bad) xchg add (bad) push sub in popf scas fadds (bad) in int3 mov es insb popf pop sahf enter roll add dec daa repnz stos mov inc pop adc jg sub inc enter or (bad) nop jecxz xor js push dec clc mov loop inc mov mov lret mov xor je dec mov jb xor sbb clc jle loopne das mov jecxz aaa dec cwtl mov cltd lret cmp adc aas push dec push rcrb pushf adc sub and movsl xchg shrb xor lock shlb (bad) lret test mov pop mov cmp rcll adc insb and xchg sbb cmpsl push jp je lods sbb inc or aas and mov mov pop test dec mov adc es or mov push mov or jecxz push cltd sub adc or add leave fs add loop,pn sbb jno clc in lea mov mov es fadd add scas xor jbe mov inc push cld in and aas xchg mov mov sub das jb add nop dec inc mov sbb push jmp lea sub insl xchg xor add add jo sub gs daa movq lds pusha jb call pop hlt fsubrs movsb sub jnp (bad) js add pop loopne add adcb int xor mov call dec add or adc push leave pusha add sub jge stc cmpb sub orb jno test mov test xchg je pop jecxz xor (bad) pop enter enter or std mov add js out jle (bad) test mov scas or add into shrb in pop cs dec adc pop cld gs push loopne pusha adc inc cmp psllq loope xchg andb add js fs int es sub (bad) pop inc xchg mov repz mov je pop xor dec adc cmp sbb jae sbb xor cmp xchg aad (bad) xor or push pusha fwait adc jne push gs js inc nop loope add xchg (bad) cmc push sub sbb std lods and xor popa in jg movsb jo cltd clc pop sub addr16 call or cmp xchg or or xor js (bad) add or push jno lea xor sbb add ljmp xchg or cmc gs popl cmp inc mov sub pushf pop arpl cmpsl test popa push cmp push pop imul xor jne dec aaa adc adc or lcall aad ljmp scas cmpsl ss xor push jne test sub mov (bad) jae stc mov cmp dec lea and xchg push adc clc mov sbb mov int sbb xor push shr xchg xchg add xchg mov cmp nop inc imul adc sti xor imul inc add pop jl or push in sub repz xchg xor dec popf pop int cs fmuls enter cltd ss inc inc (bad) aas push jp (bad) shll adc xchg adc adc enter jl fisttp decl cmc mov xor mov sbb nop mov sbb add and in stc cmpsb test add push lock adc mov add mov or add lea and js rcrb adc js fisub lock clc cmp loop add pop cmpsl and inc or dec sub add sub adc and loop rsm ret das jno jecxz adc add cs cmp jae popl inc fdivrs adc and and adc popa adc cmc push and adc test ret adc scas inc pop xchg cld add cld repnz sbb sarb pop nop mov pusha nop jnp lcall or imul adc add daa adc std ds dec xor mov iret mov sub jnp lcall cmc push je xchg test or push push gs popa or xor sbb adc test jl pusha inc and sub lret sbb pop aaa add inc (bad) int3 sub pusha sub pop daa and stos sbb shr shrb in add sahf (bad) cwtl aaa jae mov and jl mov loopne loop mov stc jne lea adc adc in ds xor inc cwtl and dec mov and test mov sbb inc hlt mov pop sub aas test cld sarl sbb shrl cwtl rolb and or call test add pop inc xchg and ret aad bound orl sbb movsb or or push leave popa cwtl loopne jno mov fwait jmp rol ret fbstp rcrb add xchg lahf (bad) cmc rolb add adc dec mov jecxz jb rorb dec outsl add adc inc insl and push imulb (bad) (bad) je shrb dec inc or mov add mov pop pop and push add scas (bad) mov add ss les add scas test add sahf jnp call lods loope js cmp jb sub nop popl in sbb ljmp push adcl aaa inc adc shll add cmp mov xor lds js bound and cmpsb inc add lea loopne shr sub sbb xor add call das int3 mov in (bad) insl mov sub jae add adc mov inc add add dec jo rol aaa outsl xor cmp xchg cmp and xchg daa adc jl inc mov fmul add in or and jmp pop out add jne js je and pop roll and pusha inc cmpsb jnp mov inc add mov mov jnp xor add cmpsl leave sbb sub add shrb push pop sbb or sbb dec pop cmc imul and sbb add outsb sbb pop push lcall mov gs xchg je call mov orb dec es rclb mov pop ja rorb mov subb dec int in imul (bad) adc cmc jl cld mov ss inc add sbb mov inc jge push pop or fs je addl out push sub mov sub pop loopne or xor sbb xor loopne mov cmp or jecxz divl dec pop adc out inc mov pop adc inc sub xchg mov sbb cmp pop shrl push pop push add mov shrb shrb sbb mov jns aam enter popa push sar xchg mov rolb sub cmp js xor data16 mov mov mov je out mov push loope into adc xchg mov nop js adcl out push jo adc add sbb dec lods cmp aaa mov test inc or add cmp lret fcoms sub xor xchg adc imul sbb xor mov mov add stc lret orl jo (bad) clc mov (bad) dec imul xchg lret push loopne cs lea aam sbb dec mov enter pop jmp loopne xor cmp jle rolb and dec insl add sub xchg mov push inc sub mov ss std iret mov out push sub and adc or rclb cmc push push fistl xchg in mov cmpl xor adcb sub add shrl dec inc sub add cmp add and add push arpl ret push (bad) sbb add scas movsb test out sbb test sub iret xor test popf aaa dec mov ret lret ljmp add push ds ss lea insb rclb or mov (bad) dec sarl add (bad) mov jns dec xchg push adc in adc xchg dec lods and adc jmp jp jae,pn int3 inc sbb nop arpl mov jns xchg xchg lea xor mov and shrb addb xor lock sbb (bad) rcrb xchg pop adc loop in sub jecxz and cwtl scas pop test add add imul sbb add movsb insb mov add fwait pop jne ljmp aas or jno imul jle dec (bad) xor rcll mov (bad) jmp cmp cmp mov pushf sub std fs add daa cs add fsubrs jns clc punpckldq sub cld movsb ret xchg arpl or leave imul sbb push cmp jne jb test out repz std dec push shr add and fiaddl ljmp sti mov push pushf stc adc aaa dec div fwait jb xchg (bad) inc js (bad) sbb add cmp sub pushf xor xorl testb mov lock cmp push add adc xchg sub mov ja aad sarl push xorl and xor sbb xchg test pop sub dec cmp xchg (bad) cmp sbb jbe lods inc addb fs sub sbb mov repz orl roll cltd xor sub das mov push std mov dec sbb je out pop andl inc adc movsl add xlat mov mov push ret mov shll dec les out push adc ja push sub std scas add mov jo or test mov jb sbb add add xor imul xchg xor (bad) fmuls xor mov and inc aad and jmp jb mov (bad) ds sti mov push sub adc call lcall shrb push sub fldl add xor sbb dec sub mov inc scas mov or or sub dec adc popf xchg ret cli gs sbb sbb jg pop xchg int cs cmp add dec inc hlt popa xchg ja call or sub or xchg fnop dec movsl mov imul and push push adc daa cs and push cli aam roll adc loopne int3 sub push ja push mov cmpl adc stos xchg leave out lret fs nop inc xor leave dec and mov cmpsl fstl push push mov (bad) mov into push add add arpl insb and push or les jns sub or lods jge mov in sbb xchg adc cmp hlt lahf xchg pop jle pusha bound dec arpl imul mov pusha sub mov cltd mov and xchg mov ret add xor adc push es xor mov jl jno pusha or pushf push or push pop cltd addl mov cmp pop std push inc shlb aas mov mov daa and int push minps stc xchg sbb cmp sbb inc aas sub mov or jl jb pushf sbb daa jg xor vsqrtsd sbb in pop sbb dec aaa add adc out and or sub jnp rcrb sub jo xchg jne sbb adc pop dec popf mov adc (bad) mov xchg hlt pop lds xor test mov add xor dec scas fnop jbe pop sub pusha lods mov jb hlt mov and lods inc test in dec adc movsl jge adcb or dec fmul push loopne es sub fiadd sub push fdivs ret cmp push pop fisubrl jge push jo inc adc add aam std cmc cmpb out notb push daa mov fistp adc fidiv scas sub mov sub adc jmp in dec adcb mov out ja gs js ljmp xchg les mov sub loope xchg pushf add dec dec xor out xor xchg (bad) push jo xchg loop je icebp adc sbb lahf (bad) cmpsb cmp xchg in jo mov idiv popa jg or xchg lods add jns cmp repz shrb dec pop sti add dec hlt push pop (bad) mov pop pop and mov pop push call adc inc in sub xor inc pop mov (bad) repnz jb stos imul xor cmc jno jmp (bad) ljmp push pushf aad cli aad push or add scas mov and das (bad) mov push mov inc shl xor cmp scas out hlt fmull cltd cltd add xor push xchg cmp (bad) push jno jmp adc (bad) out jmp gs aad pop das cmp outsl dec call movsb xchg cld aam xchg push or cmc loopne push mov sub sub inc jg ds push mov orl cmp jg lock out imul movsb mov xor and jmp adc pop cwtl mov sbbl add add cmc bound jno add jae aad (bad) jbe add pop out fbstp clc jmp fsubrs subb mov adc inc jp sub pop add add das push sub or add sbb mov sub inc jb lahf xchg ljmp test flds push lods push jg xor pop mov inc xor adc (bad) sbb aas add sarl add xchg mov sub stos repnz adc in push std out scas (bad) adcl pop adc fistl (bad) orb jae outsl shl and cmp mov sub pop jmp ret mov fsts hlt pop inc test dec and jae and gs mov (bad) pop inc test sub insb sub inc std mov inc pushf subl mov or jnp jmp fldenv pop repz cli and out mov pusha xchg mov enter xor pop div imul js mov fldl lahf enter fiaddl add pop push inc add decl mov sti nop or add push test jno enter shll pop dec add (bad) popa lods jbe das jle js sti and jle sbb in cmpsl pop add dec adcb add push push pop xchg cmp in gs test xor nop cmp push pop es das mov inc sarl inc scas xor std cmp mov add dec pop lock (bad) jp dec mov xor icebp jle leave mov pusha pop imul (bad) sbb jmp jns (bad) sbbl mov push jo lcall ss dec add sub in dec mov push js mov decl mov jecxz lret or push movsl jl ret push or xchg orl pop xor cmp aad sub aaa and push pop adc rcll cmp add xchg rorl ret push and sub or lcall bound ja sbb add leave mov sub mov idivb movsb loope ret mov fild cmp sub lcall test xchg je loop sbbl and call xor jge adc sbb sbb test test push add push out divl roll jmp mov push inc mov mull push xor pusha mov push dec and dec test xlat dec inc jmp jle ss adc cmpsb fimul movsb or loop js sub sahf std sbb notl mov inc jo pop push mov xchg repnz jge and out lcall fbld loop mov and jle out adc out jg add test mov push add lret sub or mov jg fucompp iret xchg pop outsl or xchg push push push subl lsl cli jmp in push in enter in das inc sbb out pop arpl push repnz mov test rcrb xchg push inc mull sti dec adc push movsb iret xor std mov sub das push cmp mov adc push aad call dec cmpsb jmp lahf push xchg cli ret lds aad jno idiv adc ljmp mov lcall cmp dec adc inc movsb or push xchg push push out js aas and or insl push jns pushl mov mov pop sub (bad) sub inc pop popa in mov mov pop loop push ret out rcr cmc push roll fistl lret aaa push pop xlat (bad) and jnp test xchg push cmp out mov fucomip sub test enter fdivr ljmp adc pop inc cwtl (bad) push js xchg adc xor dec imul pop jg cltd ja add aas std push xchg mov fs mov xchg xchg repz add and lret jmp adc jg ficoml stos sahf fsubl dec pop jmp or mov pop into (bad) mov inc fild jge sbb (bad) jp push jne cmc aam in (bad) ljmp mov imul popl cmp push mov lods nop xor inc add repz (bad) fisubl inc cmp clc idiv mov outsl dec ds xor xchg push sub inc lods sbb sbb cmpsl insl add and pop in out fbld fcmovnb push in cli neg sti movsl pop daa add jns dec mov nop cmc pop cmp mov mov dec push and inc push and loope add sub cwtl pop cld sub mov add rcrl fldpi sarb out dec pop mov push inc pop daa pushf adc orb mov mov sub pop mov inc inc inc mov movsl inc push mov adc xchg in add loopne inc (bad) xor jle jg push cmpsl pop push cmc inc stos add mov dec (bad) out dec jnp push push lcall mov xchg mov aas mov mov inc or jl aas outsl shrl in or xor push mov (bad) stos mov lret sbb or (bad) xor loopne ret pop push mov jno fildl lods adc jmp dec push push lods pop (bad) jg pop sahf dec jmp aaa inc cwtl or daa add xchg push and pop cmp (bad) cli mov stos pop jbe fmull xchg stos pushf xor mov fbstp inc sti inc data16 ja or inc adc ljmp inc push jl dec mov sbbb daa sub pop repnz fs add pop sub cld push loope mov mov and push sub push add ret push push ss xchg inc add sti (bad) outsb push and adc call out out xor clc insl push out hlt or or jae or les lret cmc jle stc pop andb xor ja jo enter sub fwait std mov xchg out cmc sti out dec repnz jmp fwait jns jmp jg inc mov out add xchg pop jg (bad) inc syscall or dec xor xor push icebp mov push ficom cmp jle pop pop mov dec das fstl jmp sub fcomps sub mov pusha add rcrl shr jg pop mov sti movsb xlat xchg push icebp jecxz jmp daa icebp xor aaa xchg xchg aam push adc push cli xchg cltd test or stos jb push cltd aad jo std jle mov pop push push lahf and mov sbb pop xchg jmp sbb pop add aad push jmp std cmp jmp add rcll or fstps incl lret rcrl push cmp in cld mov pop lods cmc mov or xor push in xchg lods mov fdivrl adc aas sub add outsl (bad) clc dec rolb pop cmp jg xor jmp inc pop movsb (bad) outsl push clc and pop jb cmp jge in (bad) idivl jae push rcll pop pop fstp jg pop sub pop pop push movsb jae adc inc shl push or imul dec cmpsb xor (bad) shrl in sbb popf sbbb adc adc dec das pop mov ret dec loope lret inc adc add xchg adc inc pop push bound mov scas add adc scas int3 adc cmc sub sti lahf sbb jo mov ljmp lods rorl ljmp xor fnop roll dec data16 push (bad) adc sbb add lds daa jns inc movb repnz stos cmc sbb notl sbb inc mov sub cmp int push and (bad) (bad) cmp and adc mov mov repnz addb nop pop add cmp outsb popf jp add in ds jl xchg and add add scas or stc add roll call and sbb pusha add add ds and sbb mov out mov inc pop fucom lea orb mov cmpsb mov xorb xor xor adc pop clc push je arpl cltd in in xchg mov flds and mov or pop bound dec adc es mov in pop adc fwait jmp pusha and adc gs (bad) pushf leave xchg jg or stos push ja pop add mov add inc stos arpl or sbb jne js sub mov inc fmuls jmp push adc mov adc jne pop pop mov ljmp add sub jecxz jmp cmp mov or cwtl test movsl jge sub aaa js xor sub or add jecxz mov jp jp (bad) fmuls xor adc dec int3 add push sub or mov pop rolb and movl sub daa push movsb sbb sub adc mov mov adc fwait repz jmp adc mov sbb pushf in adc xor mov mov pop inc sub shll add cmpsl jle mov gs add mov outsb fcomps adc inc add cmc in fbld in mov nop hlt test data16 std mov daa add dec xor lods or stos loop sarb shll ds push sbb sub dec cmp dec loopne mov sub push mov jns sub out xor cmp call stc cwtl int3 cmc or dec xor stos sub in incb adc pusha mov or jmp into push insl je mov cmp fmuls out aas xor sbb mov (bad) data16 cmp incl push repz dec scas and pop xchg sbb pop into dec rorb cmpsb inc mov movsb outsl and and mov ljmp ja pop repz daa sub aas and addr16 or xor push sub push adc aas cmpsl mov inc jp lret or int add pop xchg sbb clc mov xchg mov gs push mov outsb dec and push push mov dec cmc cmp addr16 mov add add fcoml pop pop xlat mov pop adc insl sub inc lcall movsb (bad) out xchg ljmp mov stos loop adcb dec movsb add out inc push mov (bad) movsb add xchg in (bad) jmp into and adc push fucomp (bad) jp pop adc sub stos enter out cmc ljmp stc addl sbb push daa mov jg mov ret add push add daa jns lcall inc loope lcall fisubl mov cmp adc and add inc add and out lods adcb dec arpl sub xchg push sahf pusha or mov or or cmp andl sub add adc cmp cmp cltd (bad) xlat push add pop popf arpl mov adc fsubs inc iret sub push or xchg movsl mov and cwtl adc rorb mov mov pop leave mov in (bad) es test xchg movsl daa dec dec iret xchg push add adc in mov cmp pop int3 add mov jnp stos xchg and xor adc jl leave jo add lods inc add add jmp mov sbb or movsl cmp fildl push lahf and addb jp xchg mov jbe icebp add inc or out add rolb cmp or mov fidivl popa cld or (bad) dec add (bad) cmpsb lret js add loope popf sub ret pop aad sub xor pop add xor int (bad) idivl pushf ret push mov dec dec xor mov add mov or test jge,pt push and outsb push (bad) iret push add clc test ss sbb and dec xchg mov mov dec push fldl mov gs xchg add jecxz idivb sbb call insb add xchg in int3 aam push cli ja push (bad) loop xor fst adc sub cmp out repnz and and push dec sub ret (bad) mov adc add sub mull iret mov mov mov sbb (bad) pusha cmp dec and add cs xor or ret (bad) xlat and add flds imul dec add pushl cwtl jo sbb xor nop dec cld push or stos adc in mov inc hlt and test adcb mov pop fimul pop test mov daa dec sti push mov mov in add mov xor pop mov cmp scas aas pop jnp xchg cmpsl xchg sub fabs or push inc sti jl outsl pop into xor push (bad) jo popa xchg xrelease pusha adc data16 pop mov aad fmuls loopne mov and pop insl lret repz sahf fsubs nop and insb ljmp icebp stos pop dec add test cmp jno repnz insb std jo pop fisubl adc cmp xor ret call call je scas test (bad) mov fsubr xchg ja dec pop inc push jo mov popa rorb into pushf aas in xor out (bad) dec int3 add sarl add push push inc call fsubrs adc mov pop aas add adc push mov sub pop es jle (bad) mov outsl cmp pop ss xchg in xor scas lret test mov out int3 cmp mov xchg rorb push cld push stos fdiv cmc pop mov xor faddp cmp test push inc andl loopne or test out mov ret ret jns stc div add jae das inc jp jle mov rcrb stc ja mov adc inc fcomps adc in mov and mov (bad) jnp js sbb fcomi add mov add jno movsb mov or push fsubrl insb or add cmp pop popa mov orl outsb fprem1 out push cmp pusha sub leave jnp aaa xchg jg mov dec jmp in inc sub adc xchg lds lds inc xchg xchg aam enter fidivr xchg push xchg jp incb jecxz imul pop ss xor add in or out ljmp push (bad) fisub xchg cmp xchg aad in adc jae inc adc icebp les shr jge or push (bad) and xchg pop ds rcll sbb (bad) xor sbb jae xor mov mov or out daa or pop pop mov sub ljmp rcr lret dec loopne xchg into or jnp (bad) push inc inc add fadds lea pusha pop pusha out (bad) jge jmp xor stc shrl addr16 call xor jle div jnp fisttp jae (bad) pop push push mov rorl xchg addb popa adcl inc mov jns xor notl add in ficom mov push add jae push pop jmp lds clc cli mov and (bad) imul mov in and mov and ljmp push outsb shrb cmp fcmove sarb ret mov add cmp mov xor add out cs xor or xchg xorl in add (bad) adc jo push std mov and arpl (bad) sbb in insb push hlt mov iret dec (bad) dec arpl cmp adc repnz push pop nop mov out mov repnz (bad) adc call cli daa pop sbb mov add call mov jns add into pop and leave arpl push hlt loopne mov jg rcrb dec out clc dec fbstp add add add mov imul cmp xor lods xchg pop add loope andb and and xchg fisttpl test push jns lds pop popa mov add push bound and pop cmp out sbb sbb sbb or dec gs (bad) fimull xor mov mov ja sub sarl add xchg in xchg dec inc pop xchg call and mov imul pop movb sub popa mov (bad) jp adc in dec ficomp inc dec cmpsb push jmp sar mov (bad) fidivl fwait pop push mov pop stos (bad) cmc adc cmc sahf cltd inc shrb sti push add xor adc insb aas mov pop lret push and add push mov aad or jp (bad) dec unpcklps cmp movq mov adc mov xor adc imul sub insb jl mov leave jb add or or jle sub xor inc and mov inc negb mov pusha (bad) lock jne sbb into pop fadd dec stc out lret push ds sbb lods jmp pop cmp and pusha cld sub mov pop (bad) jb xchg bound loope pop outsl (bad) notl hlt inc add out mov adc pop add push cmp shlb insb mov jne or add mov test xchg shlb addr16 pop push add and push mov lret pushf rol repnz jne (bad) (bad) cli aam jmp push enter inc dec iret xchg mov test mov dec fistl (bad) shl shr fstps add pop sub and add dec push leave pop mulb adc xor sub push mov sub or add shlb cli es cmpsl aam pushf das jns jl loopne dec jecxz ret push (bad) mov xor and and es mov adc xchg jns inc cwtl and pop ljmp or jo fucomip jle test push out adc push add orb mov mov dec xchg into jbe cwtl or mov dec in ljmp mov mov enter push xor es in pusha fldl xor and pop fisubr push fcoms lahf mov shll into add jns or and mov jge rcll dec adc inc push dec adc ret sti repnz lcall popf shrb jmp hlt cs (bad) inc cmp rcll xchg xor pop mov mov mov mov ljmp add pushf jb movsb cmp roll sbb xor fsubrs pusha iret push les fdivs jbe xor mov and jne and cwtl aas add je xchg sbb ret pop cmc sbb out add adc clc idivl mov movsb add rclb aad pusha mov gs add add push push aam imul push in jle jmp imul addl adc shr or or add sbb or cmp jg lahf add xor push aas call inc mov and sub pcmpeqd mov mov stos fdivrl js and sub test xchg gs adc cmpb xor test in outsb sbb rcrl inc push jmp fstl push mov push cmp push das int3 sbb cli lcall pop test cmc sbb or jge lods xchg xchg jne imul sub cld adc add jle and xchg jbe loopne push lods outsb jne xor adc push mov and xchg jge xchg and sub roll mov ret mov loop sub or sbb pop rcr jp fisubrl dec jne int adc stc pusha mov ret les les cmpsl jno xchg mov jo test pop (bad) adc pop cs add mov lret addl bound or sbb sub xchg or push idivl mov test out lret outsb or and sbb adc out ss dec add add or push adc out push popf dec sbb leave sbb loopne dec add outsl rcrb push addb mov ja rorb or add xchg jo or in jbe sub cmp inc jl leave jb in ja inc in arpl or jne cmp or stos or and les push xor sbb sbb in pushf shrb sub test jb cld dec add jo shrb lods jo mov xor xchg jge popf pusha in repnz pusha cmp sub rolb les pop jae xor push jae lods std mov lret and add push call pop mov add or test adc add test xor out or xor mov jns xchg sbb sub adc xor push sub ds push add push ljmp rorb cmp lea or inc mov fild nop jns outsb sub rclb push fs lea add in pop (bad) loop add push stos pusha dec test mov lea mov nop daa mov pushf jbe add fistl dec ljmp pop clc xor add jnp and cmpl adc mov dec jecxz shll pop test (bad) mov jl mov mov sbb loopne aaa or mov adc ja cwtl push test daa mov and bound xchg mull pop push ds movsb or cltd push push negb pop add xchg int3 outsb adc rolb lcall adc cltd in adc sub mov lds add add aaa cwtl insl test out data16 cmp nop jb jb mov mov cld jae cmovl data16 mov testb fnstenv jns or xorb sbb fisttpl xchg repnz or fisubrl (bad) repnz or dec push cmpsb fs cmp add mov ljmp and jnp int sbb icebp lds in loopne sub push jmp or and xchg inc outsl insl rorb std notb outsb xor add jo push adc ss jns popf mov arpl aas jmp add cld mov iret xor push (bad) cmc enter or or mov mov xchg inc call jb sub daa das mov mov nop push or lods add inc add xchg pop push (bad) idivl stos mov aas sub add dec nop in clc lret and sbb (bad) out xor jae popf sub mov ja jl xchg xor aam es fbld add jno inc inc aad out push enter push sub cmp rcll and push aaa movsl adc loopne (bad) gs jae add les or fcoms pusha in mov jge pop subl lock imul mov mov adc sahf std imul add adc pusha je rcll lret sbb adc dec adc stos push pop mov adc push push cmp sub pushf jmp int mov aam je ret cmp and pop (bad) in call or lret insl inc or and xchg push les adc pusha pusha roll adc mov in daa xchg je xlat clc andb cltd sahf xchg pop nop dec add and push xchg (bad) fmuls imul jb inc or pusha pop and mov lcall out lds sub xchg add xlat outsl pop push add ljmp cld js or out (bad) push fs push ret lea push mov or nop dec iret xchg addl pop lds decb inc (bad) mov mov fiadd inc ret xor fdivrs (bad) cmp add mov bound divb inc fwait and xchg (bad) mov adc jl mov out cmp imul jge add mov mov pop xor dec arpl inc fdivl mov pushf (bad) enter adc ja enter iret pusha pop mov addb loopne mov add idivl inc gs xor sbb xchg lret mov sbb das cld jge sub fwait mov movsb jecxz add out adc adc aam movsb sub pop pushf je loope push pop clc out daa add jne lret mov or mov pop loope movsb outsl adc pusha adc sub add js add add roll imul imul notl mov sub and cmp xchg mov pop aad or cmc idivb aaa push dec dec sub push add icebp enter loop adc push xor lds nop cmp sar jg test fcomp popf sbb imul into sbb je push imul dec or push into push out sbb daa and xchg xor rolb jecxz sub inc lar xor adc dec add xchg or add lret and fld rcl std mov cmp mov inc in nop jnp mov push loopne loop ret add jl fstl dec inc cmp les imul and jbe cmpb xchg lock jle add push push out xor insl and or pop jmp xchg push stc in jnp pop cmp inc mov inc push push pop cli and sbb nop enter mov mov icebp push (bad) pop sub js movsl pop inc hlt adc cs cmp cs inc out cmpsb sub arpl movsl push add pop je mov jmp (bad) cmpsl cld mov jmpw xor stc cltd xlat fsts inc jns xlat cmp xchg jbe pusha xchg add ljmp cmc add jbe (bad) cmpsl into or les popf shrb jns pusha mov pop and jns inc jns clc mov enter and xchg jb lods (bad) call or (bad) add icebp pop inc mov std jno enter aad or jmp scas mov movsb dec out add stc dec es call adc jns inc inc push clc dec pop xchg mov mov add push sbb pusha jmp insb subl cmp mov fucom dec test popa out and (bad) xor cwtl (bad) xchg add pop imul sbb pop fistl adc addr16 cmpsl bound xchg ss stc adc jb add cld xor xchg mov divl and add mov icebp ljmp or add out xchg jg pop mov decl push pusha lret arpl sbb (bad) xchg xlat sbb cltd imulb aas imul jg xlat sub popf enter add pop jnp and pop adc jl aad cld mov or dec jmp adc mov fwait pushf dec addr16 add rorb add fstps aas jge xchg imul ja ja xchg cmpsl pop mov cmpsb repz jno jae loope subl mov imul sub leave loopne int3 sub je fcmovnu mov aaa pushf or rclb sbb pop pushf out adc shlb sub in add xorb sahf or fcomps je jns clc jg (bad) sbb test add ffreep jnp mov add add adc out mov add xor push add jg xor cld out cmp push mov cmp jne scas inc dec out sbb jg mov int3 push cmp push pop or xchg test xchg jmp mov rcr insb ljmp fild test jne sti mov mov out jb jecxz add cmp lret mov xchg lahf bound ja enter add mov mov gs xor hlt dec (bad) mov add add and scas jno pusha aam push notl add mov adc (bad) push inc push pop (bad) (bad) jae push (bad) decb push push pop xor pop aam imul add popa out mov clc aas lcall xor push and and int std lcall cs and add enter jp add nop call cli xchg loop ja jecxz out je les shr out movsb test cli out sarl cmp lock fisubrl add ljmp (bad) cmp test ret push mov dec movsb sub cmpsb in adc out xchg out adcl outsl mov adc mov fadd (bad) adc xor or loop jecxz movsb cwtl bound adc fisubr push fs inc scas out lahf por stos jmp pushl jmp outsb push (bad) in dec cmp pop jmp cmc fbstp nop jae std mov fsubrs cmpl add dec cmp push or push push mov push push pop scas repnz mov loop mov xchg loop scas js rcrl ljmp push mov jg or dec jnp jg xchg movsl ffree (bad) inc sub das mov xchg push and xchg fnstenv pop ds dec and sub adc das dec jb popa jge pavgb mov idivl jecxz add sarb mov pop out xlat inc jmp movsb pushf fwait or mov inc push sub push inc jle pop dec sbb xor mov ds jp lret sbbl cmp pop dec mov das jecxz jmp popa jmp loope cmp xchg dec sbb (bad) std daa insb lds bound push dec test pop inc inc or in das inc adc shrb jns aad inc jmp sti push nop in mov adc sbb xor xor jl shrb popf push dec xor jg cwtl lea xchg sbb push in scas cmp sbb fs shrl cmp push (bad) jmp mov pusha xor andb lcall insb xchg pop or test popf fcompp pop add add gs mov sub sub cmc insb aam cmp add pop push cmp out jmp inc push cli jno jmp inc add xor pop and iret dec out cltd jge and pusha sub pushf aam adc sub inc lcall mov pushf std xchg pop dec flds mov scas cld jns nop in xor pop dec xchg inc inc out lods inc cmp and sbb inc outsl ja stos pop pop scas jo dec in sub sbb (bad) gs pop mov ljmp loope out inc rol push (bad) jne jle addl int push dec decl mov sub jmp bound push or (bad) jo (bad) idivb subl pop fucomp sahf and pop add dec popa cwtl (bad) push mov xchg repnz enter adc mov inc adc vmovq cmp dec into cs xor mov cwtl jns and jo repnz loope mov es mov (bad) test jmp lahf aam lods pop cmp in xchg mov add enter cld jg xor sbb scas movsb rolb lcall or rolb sarl or mov pop mov jle dec lea scas jg and or mov repz (bad) stos fnop test add flds and pop enter ret out sbb hlt rcll daa dec add inc das ficompl push push lahf jle cmpsb sbb (bad) mov jo adc pop mov pop and mov push xchg into mov in adc in xchg nop push loopne outsb dec es js add mov test add fidivrl js jbe (bad) pop jmp mov je sbb das add add sub out pop xlat stc in sub xchg dec ljmp rclb mov shrl push (bad) loop movsl mov add (bad) jns das stos sub out ds or push test sub and fwait das nop inc sbb jl loop fdivs sub icebp mov adc fidiv add sub cmpsb call pusha push mov adc lcall jbe cmc mov add push pop xlat shll pop xchg out push or mov test sub mov and mov jge dec dec je xor push inc stos into loopne mov push negl icebp or nop xor int3 sub push stos jp test cs aad and lea pop cli jge popa jp (bad) in pop (bad) mov xchg sub and shll adc into scas mov xchg int dec jbe sbb nop in out xor aaa psrld and inc inc push cmp in leave cmp imul add out iret dec addl add inc js and test fsub push dec sbb adc fwait add sbb outsl fisubrl popf decb pop mov jg jae sub add outsb repz (bad) cmova jg arpl mov jp,pt and fldl cmp xor (bad) dec je iret jmp adc mov fidiv dec xchg pop sbb add out mov leave push sti push cmc xchg mov jmp loop jo push repnz int3 mull jecxz xchg pop and scas das sub sub pop dec sub arpl (bad) xor or inc adc mov xor gs je mov cmc xor cmp test pop loop xchg add jp xor push jmp neg inc push js or mov sub dec pop popf xchg mov (bad) mov push pop test add pop pop sub mov outsl mov jae out add adc dec test add pop mov or icebp sbb outsl inc les mov pop and jnp cmpb mulb or loope mov leave mov push jmp stos inc jmp xor fsts jmp (bad) out aas push lods pop pop cmp fnstenv adc jno movsl add sub pop sbb (bad) mov jp mov pop out jl cmp add in cltd imul stc in mov push add mov aad fld sti dec inc scas jne cmpsb sbb inc outsb inc sbb cmp sbb ficomp fstl aas mov cld jge shr sbb stos sub add mov jns arpl add lret sbb fild fistpll andb or pop rolb sub je (bad) dec hlt out lahf pop jbe inc dec loop add sub cwtl mov std hlt sar xchg ja pop add mov adc and clc lds add xchg cwtl fstl je and lcall pop sbb not xchg push cmpsl xor imul mov jnp mov pop in add push in icebp testl push sbb out inc dec lock int (bad) pop (bad) not inc and cld sbb jmp fild movsl sub (bad) decb jle lret push test mov aas jnp int xchg xor lret jl xorl sbb jge mov (bad) imul xadd rclb push jge mov shlb popf sbb lock pusha andb outsl gs dec (bad) pop imull je and aas sub or ffree xlat mov lds add rcrb loopne jmp rclb sub sub or stc jle pop mov jg out lret xor push pop mov es out add adc jl ljmp outsb inc mov fild ja push sub cmp sbb enter inc fildll fwait (bad) sub daa push xchg sbb xor jbe jge pop popa daa mov fnsave jb sub push ret xchg clc push (bad) mull xchg pusha daa xlat xchg sahf adc mov nop scas dec jnp add jge dec jmp adc mov dec add or ret stos jno popf test or mov push data16 fisttp (bad) dec out test adc call sbb fisubl xchg in add mov fisubr aad add (bad) or and push add cmp sub aam cmpsl add xchg int3 lock cmp add push aam lods mov cmp add in (bad) rorb in cmp jne mov aas push pop mov fimull in mov dec sub aam hlt push add jno movsb add and push outsb je cmc sub call cld add rdtsc or popf or push imul bound (bad) mov psubsw xchg sub and aam xor cmp scas push xorl (bad) adc push or jno (bad) out xrelease imul mov out mov nop mov adc pusha decl sbb add insb add mov sub or add or stos sbb add xchg mov or or fwait out mov sahf adc or push cmc or dec fld pop (bad) add xlat inc and stos js add add cmpb and subl daa test mov add lcall mov test outsl mov xchg sbb icebp xchg mov mov clc mov ja xchg add repnz sbb sbb daa lock push push or adc inc pop push testl loope inc sbbl mov adc mov add dec sub mov and and clc add cld bound mov mov add sub and add sbb mov add insl int3 lea stos cmp mov mov inc mov pop not sahf outsb ds das sarl imul sbb sub bound add lahf add sub adc cmp (bad) xor addr16 add shlb leave dec jecxz or inc dec movsb cwtl cmpsb and rcll sbb andl or (bad) icebp mov add or jno dec ja sbb or jp ret fsts push jo lret push mov adc or in mov cwtl fs lods sbb fdivrl test leave xor in daa mov sbb cltd push xchg mov les mov add in mov mov push push lock enter xor int3 andl mov mov sarb rolb push or or addr16 pop mov mov addr16 adc mov lahf adc push sbb inc dec or add or loopnew mov bsr lcall cld es cltd int3 inc inc sub cwtl cmpsb push jne (bad) push js dec shlb xchg xor in int3 mov cmpsb pop movb or sub xor cs xor mov add mov xchg enter and popf mov or ss inc mov int jbe add jno stc add jb add mov mov push in stos mov mov or xor jg loopne popa xlat mov inc push and dec add jae mov push mov (bad) test add es ret cmpsl lcall sbb add insl aam call dec xchg ret add cmp jl jb add inc jb cltd pop push (bad) mov xchg cmpsb movsb inc insb imulb xchg push ret add sahf aaa dec add and xor mov add adc cmovo add shl cltd mov and push pushf jmp add pop (bad) mov das jno cltd mov or movsb nop adcl xchg pushf enter or mov nop insb push jecxz scas je sub inc lcall pop mov mov push (bad) mov add add inc dec sub dec call mov xor xorb shrb pusha pop xchg movsb push dec mov clc inc (bad) sbb sbb mov sbb shll inc mov add xchg mov mov pusha pusha in adc sub adcl sub les lds js add jns sub in lcall sub jne imul mov mov inc sbb xlat inc je jge aam es cmpsl sub rcrb add mov mov add jge dec xchg les subb sub les (bad) out add test adc xchg cmp lods xor pop mov cmp and cs xor cmpsl mov sbb stc push in (bad) pop pop xor pusha mov xor or rolb std add mov lahf and sub jbe mov in cmpsl xchg mov test jg sbb mov adc add sub push sbb call push push test add xchg pop mov test push push lahf and fdivrl fmuls or or mov fnstcw or mov repz sub push std cltd (bad) popf nop mov lea adc jo dec lret push push mov pushf or dec ds fiaddl inc and adc insl inc adc add xchg pop lock cltd xor push aam or scas add or and fistl aam mov inc mov scas cmp inc rorb push js add aas dec sub inc mov call push and push mov dec pop or popa dec cmc addb jb push shlb mov and insb lcall leave push in sub mov add repz negb push jl call and mov int3 jb inc inc adc sbb fs mov (bad) mov aam push add lock mov dec xchg les rolb sub aad shrb xchg jno stos add imul add adc inc jmp stc push pop inc sahf xchg add enter (bad) and xchg ss push int3 sbb cs les add mov push mov push loop outsl (bad) xchg xor mov or dec test lock add sbb add inc dec aam xchg jo test pop jnp or add and aam push pop and adc push inc push imul inc sub inc sbb aam mov and test mov popl enter jbe and push mov sbb push test punpcklbw xchg adc repz cmp mov sub dec add lret xlat xor and insb ja inc adc and inc add mov add dec xor mov inc js and push mov add js push mov incb insb popf mov inc idivl mov outsb jae pop xor add nop or dec fdivs aaa loop data16 dec sbb cwtl insb dec adc push repz add cmp add das pop mov xor sahf pushf pop lcall push hlt loopne pushf add arpl cwtl add mov mov dec mov cwtl mov stc sahf and (bad) pushf adc add jne mov (bad) sbb enter ret nop dec fs mov cltd cmp pusha mov xchg dec push aad pop or icebp movsb (bad) jle fadd pusha in mov sbb test sub cmp adc mov (bad) lock test dec inc xchg or lock jnp pcmpeqd jl xchg or add dec (bad) pop icebp inc jb clc subb lcall jbe je jl or aam or mov mov mov (bad) mov xor jns sub mov je and movsb mov mov stc in add loop dec adc dec bound fs in add xchg insb sahf xor push dec les sub xor aaa jne pushf sahf rolb mov pop mov mov cmp lods andl shr mov mov mov sub mov repz xchg arpl mov faddl dec cld insb inc movsb jl icebp shl mov push push xor mov mov je mov sarb sub cld les mov adc sbb or jle in or add repz fwait movsb inc lods mov mov push fdivrs outsb pushf dec add repz es jp inc sbb xchg addr16 scas and jns lods fldenv sbb sub push pusha lret and loope test pop mov out mov xchg push into adc cmpsl fwait cmp enter mov jne out test push es jo in js and pop xor xor daa les imul test pop shrb add sbb jl shrb xor mov or fnstenv rcrb les mov mov push movsb jo rcrb push out mov mov mov jo and mov cmp mov mov in add push mov sub movsb jo enter pop adc fsubl sbb hlt xor xchg imul data16 xchg sbb add cmpl sub je dec or mov pushf dec iret adc add xchg pop inc test mov pop sti les mov cs fmull (bad) fdivrs jle inc pop (bad) cmc mov lods xor (bad) sarb lock test push addl pop mov ret jle inc arpl add lock dec call ret sti or mov cmp and ja add loope outsl inc xor mov dec jmp cltd enter inc into mov xchg jle cmp mov cmp xor mov int3 shll fs add sub ret call fimul stos pushf sbb sbb js dec adc add enter stc and in lea mov call ret repnz add push insb inc xor call xor push les mov mull add push test and inc icebp rcr xor andl push in mov cmp movsb mov sbb test jmp inc fsubrs push arpl add insl jg enter add ja cli adc add mov rcr push add inc insl jmp push mov jns inc mov adc imul lods jae inc fld1 and pop xor adc add mov js sar jl pop pusha lahf push clc in add xor xor call inc lock inc add icebp ret cli insl fs aaa lea shr adc push mov sahf call jae push and push or adc mov in mov lds or jecxz enter fwait loop ret add sbb jbe add test jb sbb int3 mov push ret or push outsl fcompl add pop adc std in jae add sbb and in or in pushf (bad) adc je les cmp sub rcl jmp add dec push je (bad) loope add addr16 sbb in js popa or lahf adc mov pop movsb push and and dec das mov mov movsb clc flds lods addr16 inc mov stos inc or bound and and xor adc or dec jmp (bad) pop (bad) jno dec nop hlt add pop xor xchg test fnstenv outsl leave pop inc xchg ffreep jo divl clc repnz pusha dec inc test cmp lea (bad) dec mov sbb ficoml sbb mov pop add inc mov xor xchg ja fdivr imull xor jmp lods dec fadd xor insb fisttp jae cmp add lcall loopne,pt add lock push inc xchg orl xchg mov mov add in imul scas loopne inc enter insl outsl push adc repnz pusha pop fnstcw adc insb mov cs adc lods gs xor sbb and int3 (bad) cmp fbld mov pop sahf add cmpsl fidivr (bad) mov shlb daa pop rclb aad pop dec mov add push jb insb xor jo mov aam sbb push in loope inc mov mov lds or out in ds inc mov mov jb rorl adc push in aas mov pushf push pop inc add cmpl rorl add les or xchg add imul dec dec mov in xchg mov aas xor xor and mov cli insb sbb fs inc adc xor out adc dec pop jge ja das lods in mov xchg nop je stc adc sbb movsb jbe lods jl divl popa sub dec test or pushf (bad) jne push add pusha sbb movsb in sub cmp and jecxz pop (bad) dec movsb xchg (bad) mov adc add fstl cmp repnz nop push pop fimul push or insl cmpb lcall xchg (bad) xor sbb mov sbb cmp imul or jl imull lea and add inc mov repz xlat push inc (bad) jl pop lods in loope insb mov in frstor jecxz xor xchg cli nop stos in mov push dec cld push inc add (bad) outsb add lds inc or xor je or adc out lods movb (bad) enter rorl push (bad) or adc hlt and imul jb pop push int3 dec and xor popf out or push int3 daa and jp lods pop and fcoml xchg cmp fs test mov push jge nop test ja or shll or popf sarl hlt push sbb andb cmc mov in and mov rcrb sbb sarb lock rcll inc push pop xchg fisubl (bad) xor lds movsb push insb xchg sbb (bad) int3 adc dec hlt cmc cmp adc mov xor lret out xchg sub test sbb mov jae sub sbb xchg xlat rclb inc hlt push adc or mov xchg sbb cmc mov cmp xor pop sbb jg pop xchg inc insb clc ret stc in subl cmpsb cltd les psubusw cmp pop outsb mov fs push fisttpll or inc fdivrs (bad) adc loopne nop sbb pushf and bound dec mov fldenv int3 stos sbb ret outsl std (bad) lret and clc or sub test mov inc (bad) cli adc pushf add pop lds pop cmp and mov scas and fsubs insb sub or (bad) mov mov mov sti jo lret jecxz jg popa sarb insb pop fwait inc add or (bad) cld cmc in int3 sub pop inc in pop xor mov loop enter push ret cmp dec js inc stos add and scas movsl mov aad sub fchs or and fcoms test (bad) lods xchg pop sahf in cltd dec xor (bad) int3 lods mov pop (bad) add (bad) and fmuls lods cmp inc mov addr16 cld adc and out add fdivrl xchg xor sub insb dec test mov cmpsb pop orl test dec xchg pop adc adc les xorb cmp fdivl lea inc inc cltd adc inc inc arpl inc dec add mov nop mov dec cmp mov out pop (bad) in out int3 call lods lahf adc cwtl mov call sbb addr16 fs pop es mov add adc cmp adcb dec mov and lods insl (bad) outsl test xchg ret xchg cwtl aam sbb hlt push mov imul sbb je mov pushf mov sub pusha xchg out lock aaa and loope dec pusha mov inc jo push push add lods sub fdivl cmp adc pushf or sbb add jecxz push mov into jae add mov push mov and (bad) test xchg lods and add (bad) xor cmc sahf das out xorl out jg cmp loope cmp inc push fs inc xlat pusha inc dec mov sbb xor jns inc mov movsl adc rcrb es push cmp imulb cmp int3 cwtl add popa cld inc sbb inc repz je (bad) lods and (bad) test mov push fwait cmp push xchg and icebp lret inc add jae mov add xchg xchg mov nop sbbb sub push sub fs adcb loopne add rcl mov inc or add scas andb push push xchg jge ficoml outsb add shrb cmpsb push fs xor cmp cmp mov add push xchg cs je push push inc mov daa mov (bad) (bad) inc (bad) ja popf rolb sub mov mov adc insl clc nop in inc cmc mov lcall lods sub fcoml jae dec push js jl inc pop cmp jmp rorl mov mov adc mov out mov pop (bad) les xchg sbb hlt mov bound shrl lcall adc or sbb shl insb lret pop or ja mov ret shr xchg jecxz ret out ja add cmc xchg mov mov mov loopne test add notl xor jl mov nop pop mov and imul cmp int3 lods lcall xchg mov stc in and jge push add xor std in push mov mov mov push mov outsb xchg mov loop push xor mov or sub inc (bad) mov js push push mov and add xchg pop rolb popf data16 pushl push insb sbb cmp add ret xor mov aad roll loop loopne inc sub cmp test jg add call mov pop mov andb push mov jecxz add test imul xorb add test sbb jl push inc or je in and ja aas add xchg out lret xlat or pusha pusha and out lret ja or xlat pop mov or clc mov iret inc adc int3 or and testb sub or inc jnp push inc cmpsl mov or adc add lahf mov bound pusha cmp xor mov fstp sbb pop rclb push add aaa div les xchg sub add cmpsl pushf in pop sub push in rcll adc pop add dec add lret sub or ret adc push or imul popw (bad) and js jge pusha loop add (bad) sbb testl test jge cltd in dec iret sub (bad) mov mov inc dec mov and (bad) xor aaa push imul pop push xchg cmp dec sbb addr16 pop cmpsb popa leave cmp loop add dec dec adc lds sub movsb cmpb push cwtl pop inc xor xchg in mov test repnz cmpsw cmp xchg dec sarl sbb pop xor or add inc mov (bad) imul nop fcoml sub jmp lret pop mov out xchg xchg jae push call lea jns cs mov scas int3 add cmp add out add xchg ret adc mov addr16 add popl xor lahf or lock test push jbe insl daa test fcoms cltd pop sub jno sub sub push repnz cwtl pop fadds shl push rol or in mov or xchg loopne or sbb (bad) xlat pusha xorb xor sbb rcrl or xor lds adc dec or push sub jl popa mov xchg cmp or in cmpsb int3 push jmp fiadd ret test test cmpsb sahf pusha shl cs movsl add in inc inc icebp dec addb jo sub push repnz pop lret dec rcrb roll fldl (bad) adc jmp mov out lcall test cmpsl dec xchg fs jl push xor inc mov jecxz push int3 mov add out jno test inc pop jl ljmp and adc adc cmp xor sar xchg adc xchg mov leave mov nop gs int3 js (bad) rcrb mov mov orl or pop inc repnz adc sbb pop es add popl push cmc xor pusha add repz rorb shrb xchg icebp adc xchg and add out push ss add sbb inc mov in repz dec and add out and ljmp push fildll dec xor mov roll xchg pop cmpsb fsubs add dec mov add xchg test or pop pushw sbb mov subl inc push fisttpl pop sbb inc xchg jmp xchg sbb scas lret push bound mov add imul lcall movsl add push fs xor mov lock fildl sbb sahf (bad) or jno inc scas cmpsb nop pop add xor adc lock adc and test or xchg cmpsl or inc dec and mov dec mov ret pusha imul add lock push loop mov dec es gs in add sub stos (bad) into enter in pop cmc or jl bound cld jmp pop ret or xor (bad) adc or mov dec or inc aam roll sub cwtl adc dec add loop pop rcr xlat popa mov adc push loope push dec mov dec add sub pushf xor cmp and inc fisub push xchg add lret adc mov das mov test bound jmp add in push jl add (bad) cmp add sbb pop mov sub dec adc mov sbb xchg rcll movsb sarb fdivrl mov add mov add test lcall pusha jl jmp add stc sub and repnz loope loope mov movsb js ret push out fcomps mov sti scas jb pop es mov and and mov jmp adc lcall mov movsb aas cs rorb mov aam xchg lahf xor mov sbb add mov lret adc or loopne add mov test (bad) dec and add pop in jne pop sub pop lods adc xor push out dec add fdivrl mov and mov in push mov testb pop cs lcall cmpsl aam cmove mov mov or test add adc fcomps insl pop das repnz ljmp lea dec pop popa inc cmpsb (bad) shrb ljmp mov dec hlt inc fs jge jmp or push xchg cmp xchg out out pusha mov or xchg aam sub sub mov cwtl (bad) xchg aam inc push movsb sub rcll out add inc dec andb xor push sarl lods or push dec or lcall lea cmp pop lds mov js or pushf mov js loopne adc add call sbb dec insl adc xchg adcb xor xor adc data16 pop or cmp pop cmpsb xor test sbb push inc sbb notb push sarb or movsb rcrl sahf jecxz andl jnp add cmpsb js push xchg adc adc out add sub and fstpl add pusha push testb fs mov or pop xchg je ret daa hlt (bad) mov xchg (bad) mov xor xchg sub xlat sub mov in and cmc add sub aas mov bnd lock jns arpl js mov inc mov inc fucomp pop scas aam or adc aam repnz mov mov sub pushf loopne mov dec cmp les icebp popf int imul add mov lds add in mov dec sbb int ret inc js sbb xchg or xchg mov xchg dec cmpsb sbb addr16 hlt mov cmp lods push lds cmp jae fidivl jns lock dec mov cltd push int cmp jecxz mov add fs hlt xchg dec pop sbb arpl ret or daa add dec or lret cmp sbb xor push cwtl movsb call push in rcrb mov dec mov movsb xchg push lods les push inc inc sahf dec mov push mov xorl mov out xchg or adc ds int3 add jnp and xchg mov or inc jno (bad) sub add in imul push adc and jmp dec rcrb pop sbb rolb push mov punpckldq xor mov imul sub add dec push add sbb sub das and clc jae adc add out popa and outsl data16 xchg inc adc sbb in dec cwtl sbb mov gs pop sbb adc adc sub gs call pop sbb ror push cmp cmp cmp and hlt mov hlt jecxz (bad) or dec push and ds push add test lea daa int3 (bad) lock ret jno push out pop leave adc (bad) fldcw out pop test mov mov add sbb mov or push adc mov add inc inc cmp (bad) and repz jecxz xor pop sbb leave enter mov popa out js xchg lock popa xor cmp pusha pop sub cwtl sbb (bad) and xchg rol ret lea adcb in popa dec jne jae lahf push cltd int cwtl test movsb xchg enter data16 nop mov js lahf or xchg cmp xchg adc pusha xchg bound ss mov loope ret jnp add sub cltd or fcomps adc sub add sbb jo int3 or stos ror sbb xchg and jo push xchg mov lret sbb mov push pushf mov cmp pop add or pusha out addb test in mov xor dec cmp fwait shrl (bad) (bad) xlat sbb inc addb xor rorb push loopne arpl ja movsb flds hlt imul or xor imul inc je jl js jl ss imul xor jo mov lock dec pop cmp shrl fs fsubl add dec (bad) call or mov inc xchg or imul repz or sub orl and loopne lock and lods call insl (bad) push inc sbb or jle mov sub dec cmpsl (bad) mov rolb pop hlt xor sti add mov add dec push aam je roll stc cwtl mov mov dec push mov or cmp mov or aad pop test add sub int3 bound addr16 loopne,pn xchg (bad) jae inc mov mov sub les xchg mov js sub mov xchg es (bad) jbe inc in inc and xchg add pop mov mov addb xor out push out inc mov (bad) mov dec pop lret cwtl mov adc mov js fwait fs nop push enter enter fsubrs fstps or add sub cmc jnp clc pusha mov or inc (bad) and add test jle mov cwtl push outsb push mov sbb sub cmpsb xchg test dec mov mov push jbe and or mov shr and and sbb mov xchg adc rclb inc inc loop rcll enter fiadd adc fcmove (bad) nop pusha pop iret jg arpl or arpl pop aaa xor in mov faddp sbb les jbe nop mov sbb cmp mov cltd aam clc cmp (bad) repz mov scas add subl or mov or mov movsl cmp sbb cld stos repz imul inc ljmp jmp mov xor pusha add nop aaa es les sub add stos js rol cwtl movsb mov pop les roll mov sbb jle imul nop push jno iret adc or dec sub add dec push dec pop sbbb inc lahf std or cs add mov lods or pop sub inc mov rol adc daa xchg or leave dec popf loope jno clc pusha pop mov push mov call imul push bound fnstcw iret shlb mov imul fwait xor and pop shrl push fs adc sbb sarb jb mov mov add shlb jl push jno mov jns add mov fcom mov mov xor pushf adc or inc and or xorb je push cmp insb and out xchg lds cmp add jno and mov popa dec pop test adc pop jecxz and rclb cmp or mov dec adc inc adcb xor (bad) add sbb add cmpl fdivrl push stos sbb add inc mov lock (bad) xor cmp adc dec dec test fcmovne mov rcll movsl sti in sub and sbb hlt jnp adc data16 sbb pusha and push jge mov add or xor push aas inc les movsb add addl adc (bad) aad dec ds cmc mov and inc nop adc fcmovbe orb sbb jg inc adc push je lret cwtl jg cmp adc or sbb mov xchg clc adc mov in (bad) in lods test dec or mov pusha xchg add int pusha mov xchg xor adc and sbb xor mov aas inc mov dec adc xchg and (bad) fcoml inc pop in aas xchg imul dec cmpsb daa xor mov jae leave xor sbb outsl cmp jle or pop enter (bad) sti dec inc shlb lret dec pop mov aam mov cmp push subl adc stos xchg add outsb inc test ret ljmp jge aam test arpl punpckhdq xchg or jnp inc testl xor ljmp mov int3 xor jnp cs sub icebp int3 push ret xchg insb add mov fucomip jb mov add pop and out or mov lret lock xor daa lcall dec push pusha and dec sbb push push movsb adc jo sub ret mov jle loop add sbb pop repz lock add adc addr16 das cmp push mov jl adc mov add add fsubs shrl dec js test cltd (bad) or pusha nop mov add js adc dec xor loopne jmp mov dec pop out sbb mov push pusha int3 nop arpl movsl dec sbb inc aad cmpsl jge cld test add mov inc (bad) mov sub int3 xchg popf rcr insl shrl and add stos movsb add and xchg pop leave int3 (bad) cmp mov test mov mov jno je ret imul inc mov bound es adcb add adc sub lods or aam xchg inc mov stos daa fstl lods hlt test xchg sub push xchg cltd pop cwtl adcl icebp int3 add loop loope mov lods pop jne (bad) lods mov sbb inc clc push sbb shrb daa int3 or or sbb inc out and fsubrl (bad) dec sarl psllq add mov pop pusha sbb (bad) jae mov in mov dec movsl fbstp int and pusha into test sub jb lret cmpsb leave cwtl mov clc xor sub cmp int3 rol add xchg add jbe popa bound stos and movsb sub call les lock lods mov mov mov in adc xor xchg dec push and push andl lock inc adcb js mov adc in aad shrb outsb cs mov jns and mov or ljmp push and testb adc popf push nop int3 adcl (bad) sbb pop jo xchg lods inc cmp jns jmp cmpsb adc or inc push cld add or pusha mov xor roll in popa dec pushf es xor xor iret adc aad adc sub inc push adc fsubrl or rolb or push not sub add rcr cld out js pop add cltd out insl sbb lcall and nop add in cld stos movsb mov icebp mov mov add cmp pop ffreep aam dec add sahf mov rcr dec shrb pop fsts adc cmp cltd cwtl leave call cmpsb test loopne or hlt pop add in movsb mov pop sub hlt or in popa push in call fs int3 test fcmovnu sub adc imul sbb int3 inc cwtl popf fldl pop les pushf call fmull inc std and or mov push shrb xchg stos dec enter cmp subb push mov xchg mov sbb cmp pop pusha add xchg shrl fdivrl mov outsb or in and adc movsl (bad) mov xchg (bad) push rorl sbb lahf mov inc pop out aam add js sbb test fldl push je mov pop dec mov je push jl fsubl cs js sbb pushf cwtl or les rolb lods je sar insl ja out sub mov cmpsb repnz xor inc and ja push lcall movsb mov xchg lock sub push stos and dec cmp shlb jg pop movsb pusha ja xlat xchg ret mov aas adc push neg pop pop data16 (bad) adc xchg inc call sub fstl push call add xor mov loope jecxz push cmpsl push dec sarb jb xchg into cmpsl and mov sbb add pop dec jnp dec sbb daa das pusha and aas loop cmp js loopne dec (bad) or and orb mov xchg in ljmp rorb lret nop mov pop add mov pushf add mov sbb adc mov add (bad) sbb sub pusha cmpb lcall mov aad outsl ret test and or enter outsb dec inc adc cmp aas aaa sbb dec adc sbb push add bound sub inc push sub or loopne cld subb std mov int3 stos cmp in adc mov inc dec rorl out lods jno mov ds pusha aas test mov hlt dec inc pusha rcr iret add in les sub movsl test imul aas or nop scas and sbb mov sub add mov daa mov xor jle shlb xor add dec das addr16 jecxz sahf inc mov (bad) je cld loopne imul xchg inc cmc sub xor add sub (bad) xchg pop das movsl clc jae shlb fs mov xchg and lea sub xor adc sub pusha gs adc xchg js add push push mov fcomps int dec lock sahf outsl push inc enter js and cltd call jo push add sbb or mov leave inc test les xor js sub and xor sbb dec sub fwait adc sub pop xor mov add insb push fs scas dec ds mov adc orb (bad) dec and and iret mov movsb sbb xchg add scas jae fs (bad) jno lea es ret lock inc jmp mov sarb adc daa cld mov mov push push mov dec adc add fsubr lock (bad) xchg add lods es je insb cmpsl sbb adc cwtl fnstsw lock fbld adc and and adc pop es adc out mov pusha or add rcrb ret test mov add lods add pusha mov push (bad) js dec xlat sub fs (bad) push sub sbb test leave fsubrs push adc testb push sub add ja outsl stc seto sub push lods jb jl add ret ds xlat leave add enter push std adc aam arpl rcr add inc sbb cmp pop mov add sub (bad) (bad) mov (bad) cld add nop adc movsb mov pop sub test and out cmpsl adc fisubl jecxz lods je xor adc cmp jle lcall lods cmp test mov push add inc add pop jl aam xchg pusha popa inc adc std ror mov jo cmp and fdivl xor mov push (bad) in addb clc cli movsl add je mov lods icebp stos adc adcb lret mov mov icebp jmp arpl out xchg mov cmp lock js cwtl pop inc jne jb rolb lcall jo sbb pop mul shlb sub xor ss or stc pop mov pop in add xchg xor push dec adc add sbb inc push xor data16 pmullw iret mov pop and scas jle xor mov jo sub mov adc loope das and mov xchg xchg sub xchg fs or cmp rclb inc push mov and mov mov mov mov orl out (bad) push dec pusha mov jne cmp mov mov dec cmpb (bad) push leave xor fisubrl push out sbb add or scas inc xchg imul mov fstpt add jnp int3 xchg cmp frstor jg popa cmp stos cmp adc int3 xchg add arpl sbb stos xor mov mov fisubl adc rolb adc pop and adc and test xchg or mov adc es add xor outsl mov mov xor sub dec in mov test stos mov mov xchg push imul xor fwait inc psrlw jne lods aam sbbb subb mov push cmp shll out faddl imul dec add lahf out je adc cmpsl xchg dec fiaddl rcl sti je and je mov clc pop cmp iret movb mov mov mov fisub pop mov inc xor mov add sbb aad jne xchg and enter mov dec add fucom mov sbb xor in fnstsw in test sub xchg mov or cmp dec sarl and inc das xchg lock push cld push jmp and sahf faddl orl add mov or sbb cmp mulb jp enter test pop addb aas xor adc (bad) or xchg shr outsb inc cwtl das xor je bnd pusha (bad) mov (bad) (bad) cmpsb add pop cmp dec add dec test test mov mov ds rol jmp out mov es inc add lock xchg mov (bad) test mov dec sub mov or xchg xor or pop cwtl cld addr16 sahf adc aas pop push and push test (bad) mov mov add loope xchg or lods and aam fsubrl add test int repz add test dec lock pop (bad) mov cwtl shrl cmp jnp adc dec sub add xor sbb push icebp add int sub es mov (bad) pop mov icebp enter (bad) js dec xlat ror (bad) pop add dec les je mov xchg push add fwait out sbb adc cli ss inc lahf ficomp or adc sub clc add jl dec aas and mov mov mov cmp rorl icebp subl sub mov cwtl jnp add (bad) xchg stos or daa add shrb or fldl xchg pop and mov dec push aas mov push dec push jo mov sbb popa add add push inc adc enter cmp fadds and sub jo jnp mov mov push sbb hlt hlt mov scas shr imul or test loopne hlt pushf inc jnp rcrl add insb add stos shlb popf sbb fs mov pusha jl add negb shll iret data16 sbb jo push push aas xchg int mov adc adc test jmp mov test leave and (bad) enter pushf push fmul arpl fsubs test and xor mov (bad) add mov pop imul dec or pusha imul mov loopne jb stos (bad) xor sbb loope lea push sub into pusha adc sub fmul loope (bad) push add add loopne popa pop xchg clc sub mov stos xchg roll std inc jecxz popf jne incl mov inc test xor scas mov xor adc cltd js push xor (bad) xchg xor icebp les cwtl mov xor je in jg dec add (bad) or xlat pop ja add push mov add inc lods sub and push dec and xor pop sbb xor push aad add fsubs xchg (bad) fbstp je adc js test adcl loopne jnp (bad) ja or sbb sub adc int3 dec js jl add mov nop push adc dec sbb inc and xor and cltd push add sub xor dec and add mov dec mov mov movsl insb xchg or lea inc movsl cwtl mov dec or bound xchg sbb lea (bad) movsl pop push cltd push xchg cwtl pusha jl add imul aad pop dec add dec pop sub dec lahf inc pop sub mov (bad) pop or cmp pusha adc bound xor std and stc push ja add clc mov mov ret add test jne fsubrs inc sti clc add jge push test add daa loopne iret add add mov xchg xchg add dec (bad) dec xor and sub ds xor lcall mov insl hlt jp scas sti dec or pop fmull jo xchg repz jecxz xor mov adcb mov jne add push xchg sbb lods lods arpl adc ds pushf or xchg in and pcmpeqw lret add loopne xchg lahf cmp inc mov or dec dec mov into xchg cld daa iret jge call add gs mov loop test or (bad) lock pop sub hlt sti dec dec jmp add mov xchg push adc mov sbb jne loope dec (bad) mov inc test out data16 dec and in jno sub sbb mov cli inc notb cmp xor sbb arpl sub loopne and adc lods les fsubr aas mov mov push in and mov lret lds mov cmp and jl mov clc pop xchg sbb or or imul jl arpl add adc fldt sbb sahf insb sub pop pop add rcrb (bad) mov jb mov test jb pusha bound or adc pusha mov inc jp jle sub enter popf test add stos punpcklwd mov fdivs mov mov adc icebp cli mov xor popa sub test cwtl add aas fimul xchg xor sub pop imul ja add jg jl mov dec add aam cld dec jne mov mov mov add add out mov cmp add cmp fs add sub pop mov lock sbbb out dec call pushaw insb nop js loope dec int3 inc inc add mov jno roll mov adc cmp hlt cmp je jl dec loopne scas in sub dec ss pusha pop sub pop ljmp lret mov cmpsb push sti outsl and rcr xor (bad) dec cmpb pop in cmp ret mov adc cmpsl cmp aaa sbb cmp es fsubs jbe add adc cmp adc adc andl push gs adc cmpsl rcll (bad) inc jae pop hlt mov (bad) sbb jo cwtl push bound mov xchg mov mov mov icebp sbb fadd sbb xor gs xchg xchg js ljmp mov add pusha les pusha or imul mov lods insb add dec xchg addr16 mov push add pop fwait out xor imul sbb add mov add push ret sahf (bad) jb pop add outsb lock sub fmull (bad) in xchg xchg stos or jl stos fcompl xor pushf mov mov adc scas mov and outsb inc lock pusha les stc insl iret inc mov pop jo cld xor mov cwtl add sti push ljmp (bad) push or dec jns xorb inc aas sahf mov xor aad xor bound xor xor xchg aam cs and daa push hlt cmp orl test jae lahf xor dec inc push or add int3 cwtl mov pop mov nop test movsb (bad) ret push (bad) sub mov aaa lods bound sbb add es loop sub test daa cmp pusha pop jo xchg movsl (bad) aaa jns sub xchg jno test sub mov daa lods mov pop xchg nop ss cwtl jge jmp adc std test push push mov out pop cld xchg add inc lods les out xchg push clc leave in jo add ficompl push imul rcll lahf je mov scas aaa cmp xor sub (bad) xchg add in adc flds xchg (bad) stos add add sbb enter sub test cmpsb xchg into aad loop clc ss mov inc and xor in outsl andb xor shrb cltd add mov outsb leave clc fsubr pop pusha push adc mov insl push mov rclb dec fisttpl dec push mov in repz pop jecxz jp jno mov pop and push fdivl xchg add mov and and lods jnp loopne jg push (bad) scas rolb inc add dec es mov fs fmull ret aaa jnp frstor xor add icebp mov call bound cmpl iret bound into jl and jno mov pop adc add xor cli aad adc daa subl add mov mov cmp sbb clc add popf (bad) dec into or cmpsl xchg lcall mov in ret mov add in mov pop mov (bad) mov sbb pusha call jne sub inc lods adc in cs insb and sub (bad) and or and xorb mov mov in pop fldt fdivrs or or leave xchg or inc push adc add cmp lock inc subb arpl adc sub add sub or stc mov or mov inc or (bad) mov or push loope cwtl xorl xchg cs rol add loop dec fwait adc das xor cmp (bad) xor cmp imul adc and ss inc or in pop xor test cmp or dec lahf pop xrelease add out pop addb xchg dec lock aam jns inc movsb pop rol leave lods or dec (bad) (bad) jle orl lods and adc pushf push mov int3 pop or cmpl push mov xor and fs mov repz mov mov loop fsubr leave adc and insb xchg or jecxz push mov add out cmp xchg lods mov bound mov cmp leave dec dec icebp mov fsubrs add mov lods adc testb dec push (bad) call pop or loope cmc les xor jl adc nop ja mov imul (bad) das or cld mov fxch movsl jns mov pop xor jl cld test leave daa push test jmp dec push jno add mov mov in inc or add xorl mov xchg inc outsl in aam xchg bnd pop xchg fsubs jl jne pushf lds dec aaa dec call (bad) hlt test jge mov test push rcr or pop js int pop or or adc mov push mov mov je mov push fucom and int test std push lea (bad) roll mov push inc add clc cmpsb add dec fldl test dec add loope in cmpb fistpll sub jns mov pusha inc test sub xchg mov and lret sbb cmp sub adc mov inc cmp or rclb sbb and pop pop inc aam pusha dec push or aas pop pop lds jo pop cmpsl inc push loop (bad) adc icebp pop mov popf mov fiadd lret push mov ret or jno push pusha rolb inc xor sub push hlt or push test aaa sbb enter fdivl jae dec pushf cmpsl je cmpsb insl in mov fildl dec push (bad) xchg lea clc jp pop mov pop in inc sbb cwtl fsubs hlt sbb js lds lcall mov xor mov (bad) mov loopne pusha test in xchg dec fcoms (bad) push stos pop insb mov jo clc lock xor into in outsl dec xchg push mov add dec inc pop js jle inc daa repz fmuls in loop aad test dec pop dec call ret or lods fcomps or sbb cmp cmpsb adc enter push rcr xor xchg mov dec mov js and push inc pop mov jle push dec aad or and add xor mov hlt and dec movsl cwtl inc pop sub into (bad) cwtl mov dec lock nop insb and rolb add cmp rorb lods lret inc shrl pusha inc cmp icebp push sbb pop xor and lret mov pushf out loop dec in push add fsubrs push mov pushf push jge fdiv ja,pn (bad) clc fldcw and aad sub push outsb mov aad or repz sub movsb dec xor add xlat pop in push pop or adc iret nop popf or repz mov int3 je add pop stos xchg mov inc push popa lds jp in call mov xchg inc mov lret sub les pop ja xchg cmp add pop xor jl movsb add insb test mov mov dec inc pushf call pop add dec push lret or or sbb xchg fwait push pop or or push xchg add adc cmp stc add cs stos jnp int3 and dec mov xchg (bad) repz adc imul leave es or mov into sti and imul push stc mov push rorb icebp or mov jp enter xor mov repz add push pop jl lahf mov xor lcall stc fcoml inc xor jmp das add adc ret call mov enter sub xor cmp jl add mov sub outsb pushf jmp dec cwtl pop mov ja int3 add cwtl push push ficompl inc and cmp and pop fs and (bad) je in pusha mov push jg sbb mov jae cs and inc insb test cwtl sbb xchg dec pusha rorl gs cmp add mov pop (bad) mov hlt ret orb arpl pop jle movsb loop xor sub movsb sub xor imul pop cmp jno (bad) mov mov push xor frstor ss xlat adc mov mov out addl adc inc aas mov dec test icebp cmp or sbb aas sub add jnp cmp push add adc nop adc cmp sbbb pop lea in push push cmp int3 mov sahf sbb pop mov aam mov xchg push pop das or jno mov clc (bad) nop xchg mov lock repz out lods add mov xchg mov fcomps pop cs push rcr sub add jmp (bad) mov mov adc in (bad) push frstor or iret inc sub sbb add movsb inc lods data16 add repz pop loope jmp push enter pusha ret inc cmp cmc jo aad ficomp popa push cmp dec mov nop repnz enter arpl mov or mov lods cmp pop or push dec js rcrl in sub test sub into mov lods pop or subb outsb cli scas jl es rclb imul xchg mov and movsb gs xchg je hlt mov int3 sub and jmp mull dec aaa repnz xlat jecxz pop adc sahf movsl clc mov imul and sti mov data16 test sub adc in faddl cmp xor jl lcall pop push mov xchg and or pushf and cwtl cli adc dec mov movsb pop cwtl lahf mov add xchg dec ja (bad) push and rcrb xchg je jle add lds das lea arpl pusha pop xchg jge (bad) adcb sub ret js cmp jmp imul pop push rorb mov push or adc js push add dec fisubrl shlb adc mov fsubrs ja sahf cmp pushf outsl pusha je add xor flds inc cltd pusha add cmpb add mov mov mov inc jge stos in cs (bad) jno xchg push add enter test push dec in cmp mov les in dec mov and insb dec cmp dec repz or adc dec push (bad) lock das cld lods rclb adc in clc rcl sbb add mov inc add push in leave out inc lock mov xor inc jb sbb jno repz inc hlt aam mov cltd lods mov in pushf jo add iret cld mov jle mov inc insb adc push dec pop dec pop xor mov sbb mov or stc gs mov xor int and andb pop test xor rorb insl mov or jp or add mov and fcompl sbb sub cmp add push stc add data16 (bad) cli repz icebp push and subl xor scas ret in out mov lcall dec jnp hlt sbb clc sub xchg fdivrl add lcall mov mov outsl je adc addl add push xor push outsl hlt jno inc icebp adcl rolb das and loop hlt jl jne jae add mov adc sahf js subb imul add pop sub fs jne add adc cmpsl pusha pusha fstpt loopne mov sub mov les shll lock (bad) adc push ror mov int3 inc push dec pusha add nop add adc and lock xchg pop add sub sub rolb jb pop xchg sub icebp xor pop and add cmp mov int xchg sbb inc xchg and cmp cwtl jne pushf jmp andl imull mov adc mov xchg adc xchg out push das jmp sbb fsubrs loopne leave cmp aam nop aam or adc cmp iret and push out inc dec addb adcl aaa add xchg or repz push sub in and fwait in add lods jae push stos int3 sti sbb lods in inc dec ret and cmp mov and pop cmp or add hlt add and xchg loop sub lock cmpsb movsb xchg data16 adc leave add aam fwait jo shrb hlt mov movsl inc enter mov mov and mov (bad) push mov cmp lret lods aaa (bad) adc sbb push jg mov mov orb loop mov inc js add mov bound pop adc xor add push push inc repz add pusha xor pusha pop and insl int3 adc xchg and jb inc jge jl xchg (bad) pop add in pop cmpsl ss or pushf jmp add cmp mov pop xchg mov add ss pushf in cmp mov mov and pop or and add pusha in sbb add jg or jmp stos fistpll aad jl xor xor dec adc enter push inc sub jge fnsave adcl rclb mov push les out dec mov imul (bad) ss jo pop repz enter (bad) jae cmp pop adc dec fstps repnz mov inc (bad) and inc mov sbb (bad) aam stos ja dec imul pushf adc or mov xchg or add stos out or lods out cmp mov push mov imul or pop nop xchg jne or and sbb inc xchg add sub jle daa mov nop ljmp push stos mov movsb scas add cmp push (bad) mov mov lods xor or in push inc xor inc xor sahf cmp les or inc sbb mov testl cmp xchg push test fwait pop sub sub adc mov inc in and push imul lods sbb andb mov add xchg incl cmc in out xor jo ds push inc xor jo and mov movsl add icebp (bad) cmpsl addb add and jns push mov mov mov ret or or push movsb fs sub xor pop cs mov xor lock jae mov jnp enter inc mov xchg push jo (bad) add lods dec shrb xchg pusha pusha push in jge inc xchg xor sub nop cmp pushf (bad) adc dec sbb push xor or nop int3 fildll stc frstor xor add aaa cwtl pop mov cmp adc (bad) jl mov push outsb popf movsb cmp (bad) notb data16 dec dec mov or inc mov adc pop rolb or nop (bad) in xchg call (bad) daa nop test lcall arpl je (bad) icebp iret and test loopne sbb hlt fs movsb dec or imul inc mov pushf or pop mov pop repnz mov and adcb daa inc xorb pop push call lds add push push sbb inc jmp cli inc (bad) jne inc pop hlt xor add xchg jp dec arpl scas and cmpb das push or xchg shrl daa jne hlt push leave cmpsl pop sti add dec pop shl add pop sub xchg or lock mov mov in movsl loope add jl arpl jo sbb mov jmp mov pop dec add sbb es faddp add mov ficompl add aam ds xor lock movsl out (bad) rclb stc test inc and in mov cs mov stc and sbb mov les data16 adcb (bad) test lock sub mov sub imul jno movsb popl sub jo lea mov xchg inc xchg pop or sbb sub pushf or mov xor negb in mov xchg jns cmpsb xor jl adc mov dec add pop stc rclb nop mov pop into push hlt inc or or andb adc sbb aad inc icebp jle cli push repnz xchg lods push add cmc and xchg push mov push mov or fcom dec pop xchg rcr push nop sub pop push pop test nop cmp fst faddl add dec ret dec sti dec adc (bad) lock inc jne add jb lock dec mov push fdivrl mov sbb jp mov pop push test push aaa inc (bad) loopne cld aaa out jge add stos loop (bad) mov cmp add inc push jge imul ret cmpsl mov mov or push stc test add leave cmpl iret out les test fdivl shrl inc sahf inc add pusha andps and xchg xor dec cmpb movsl and in mov or mov sbb lds sub rcll and sbb sub cltd hlt ret (bad) in mov pusha xor cli popf or push sub jo add scas push pop loopne data16 and or je pusha out lods pop (bad) arpl stc mov sub push sub call push arpl jns addb aaa inc xchg addl and mov fs cmp into repz mov fwait adc and sub push xchg inc mov xchg inc popa inc aas adcb push insb shlb push add idivl inc icebp outsb fdivs mov shrb idiv jbe int mov mov or inc mov fdivr hlt xorb or xor mov pop jp inc inc push stc mov inc aad rorl mov inc movsb arpl inc dec lds and pop insb lahf push rcrb lea stos outsb or inc mov and in push hlt xchg push (bad) loopne fistl inc xor mov inc lods int test (bad) gs xchg les jae add inc cltd ss push inc inc mov inc movsb pop enter daa faddl sub mov (bad) adc popf test fimul add cmp icebp cltd pop pop mov jmp sbb (bad) pushf add lahf jmp pop out inc mov add xor (bad) push das jl add cmp mov jns in pop inc add pusha xchg enter mov inc mov addr16 call hlt in mov dec push mov cmp js iret cmp repz testb push dec jne adc mov leave pop rorb aas mov dec insb mov push push ds addl or mov or cltd lods or mov sbb sbb jmp arpl xor lahf xor and dec arpl pop mov test dec (bad) lods push fldl mov jl je or fwait iret pushf sub shr xchg (bad) pop fidivl mov or mov cwtl jae push and pop lea mov pusha dec sbb gs mov pop jg jecxz sti lods icebp mov clc mov push je orb int3 add add mov js mov jne lcall sub mov sahf cmc lods push push shlb testb inc cmp hlt mov cwtl daa push cmc adc add pop les sbb ljmp jg xchg orb inc fsts addr16 push mov imul xchg xor aas test add je or pop sub mov dec pop sub cwtl notl push push or add cmp push push cmp mov mov lods or les sub lds sub xor les push mov sub mov pop popf and mov add or into sar mov adc xor dec imul push inc std dec jle mov push xchg lret add rcrl jle xchg enter mov add and mov out dec adc cmpsl js int3 jns sub cmp add dec in xchg shl pop adc sub subb dec mov addb inc adc dec and jnp sbb rolb lret cld or dec jo leave cmpl cmpsb jmp pop inc loopne xor sub xchg or bnd inc mov repnz mov inc inc hlt shlb imul mov out loope hlt xchg jo cmp pop add cwtl aam xchg mov stos or movsb inc add subb push mov sub sbb fnstcw inc mov cmp mov cmp stos dec sub sbb inc mov jae fcomps add inc movsb loopne cli push cltd addb jmp aam fnstcw xor pop add sbb (bad) loopne test ret push imul cltd hlt push enter (bad) mov lods pusha pushf orb sarb push int3 add iret jo clc push mov loopne es and mov ret pop pusha les add test orb fsubs inc (bad) xchg gs loop adc mov mov push mov add mov sti aas xchg cmp push xchg cwtl jae ss mov jo aas or inc outsb mov mov dec inc rorb mov xor inc xchg pop push sub add je mov imul into repnz cmp sbb pop fimull xchg jae punpcklbw addb je cmp adc xchg sbb mov and fs add in fadds cmp out les mov jno stc arpl push mov adc (bad) adc enter js xchg movsb add ficoml (bad) mov aam push mov xor xor out rclb outsb xchg fcoms sbb and push in pop call xorl sbb movsl mov jno loop pop xchg sar push jo and lds pop insb shrb xorb mov push js inc sub sbb pusha dec mov imul cmc xchg add cmp mov popa jns pop pop jmp and les cs inc mov sub push mov sub pop int3 mov sub rorb icebp pop add in and (bad) sbb mov call and (bad) cld lock popa mov data16 xchg adc xor and call sub adc roll lcall popf and pop mov jl cltd or pushf pop inc mov fadd mov pop cmp add stos lea push sub inc mov mov aas in xor push (bad) push fcmovbe inc out js cmp clc pop hlt add bound xor add js les mov movsb (bad) in or in dec jge sub mulb xor sbb movsl jg lahf and dec xorb mov inc divb inc nop cmp cld (bad) fucom push lret cmp adc repz mov cmp cmp imul sub ret and pushf and hlt sarb pusha nop jg mov inc jne mov jae xchg pop fs enter push sub dec xor mov test push fmuls push imul jae popa sbb pushf jmp enter bound rcl push jl test inc cld pop bswap push jns or or fsubs lods adc mov mov inc out pop mov xor cmp dec (bad) fdivr lock add lret enter loopne adc or cmp adc sbb adc data16 adc orl jg in adc dec jle out es fadds movsb pop int3 mov xor sub pusha test call or scas pop pop orl add add (bad) fsubp and add idiv insb jne fsubrs xchg push or adc adc stos cmp lods cmp dec dec add in sahf push lea fcoms (bad) pop sar jno roll xchg mov adc inc xchg rcrb ss or pop (bad) int3 add imul call cmpsl push push (bad) mov nop xor xor subb int3 jns jbe inc clc mov push pop xchg pushf rol mov sbb in sub out lock dec add pop pop pop fildl test pushf or rcll mov call dec add mov inc sbb fdivs add jnp push test dec or jmp sbb jnp mov mov and fisttpl cwtl rcr pop lret sub outsb xor push xor movl in clc mov jno xchg push xor cmp jbe dec aam mov es (bad) jbe enter pop clc pop add xchg dec push stos data16 cli fsubp divl pop adc sbb in test fdivs mov add inc hlt cld insl jbe in add fcomi sub daa add cmpsb negb mov push mov mov pop and mov add or sbb popa inc movsl inc imul mov adc cmp push fwait fs sub sar fsubs add adc fadds jb add ficom mov xor push in (bad) les call jl add aam gs orb lret sub add ret add nop addb (bad) cwtl inc pushf cs loop rorb lods sbb pop pusha inc inc in fstl mov outsb mov movsb push jb mov adc mov lret pushf test rolb pop outsl shlb lods mov push jge ds (bad) mov ljmp cmp mov push sub test enter lods mov js xchg nop sub rolb in or xor leave call push push jge aam push pusha loope fs clc mov (bad) popa das dec pusha push xchg mov fsubr jge push mov fiaddl cld mov adc mov inc mov add es stos or push jl les ljmp pop add sbb cwtl pusha pop mov add rclb daa fsts inc inc sub or jbe gs loopne dec fild add fadd jno pop dec xchg add clc les push mov adc lock sub mov or lret sbb pop jb mov loopne or add xchg (bad) push inc rclb mov or in inc sub or inc mov add aas test add pop xchg (bad) sbb xor mov inc js add pop clc ret leave cmp sbb popa jo outsb jmp inc lahf repz dec and xchg hlt add movsb shlb jge xchg push or or xchg int3 movsb xchg cmpsb cwtl mov add test pop imul pusha fcom mov add inc lcall push icebp lahf inc mov out jl and jle xor cmp push cmp xor or loope aaa (bad) js ret jbe test mov mov mov xor add mov loop (bad) dec mov fdivs (bad) lcall lret andl sub xor push jl xor lods sbb cmp xchg mov sub inc push cmc clc cmp leave call dec inc and mov adc and pop repz mov jmp add daa cmpsb dec dec nop enter aad mov (bad) lcall or jecxz jne push pop (bad) ja andl in dec aas sar sub mov inc xor dec cs fisub jno pusha pop dec add sub adc arpl xchg pop out imull cmpsb inc loop sub icebp mov add rcll into mov loope popf and add cwtl in mov cmp or out (bad) js add cmc aas and sahf mov stc movsb sub lds cli dec add push sbb fdivrl mov and in mov adc repz xor cwtl jno (bad) imul dec add cmp pop dec mov rclb dec bound orb cli (bad) mov cmpsb loopne adc aaa and arpl xor jg xor cwtl out jl cmp dec mov add inc ljmp movsb fdivs jnp aam inc mov js or clc insl push inc lock sub dec jnp nop stos pop adc into xchg mov loopne test push ds or mov add mov movsb cmp sub push loop inc fcomps adc add in js and (bad) mulb scas pop add lcall push pop loop fadds cmp fwait pushf or (bad) cld mov (bad) mov jl subps test cmp dec loope mov adc push addr16 lret cmp nop out je push lods out adc mov push cmpb and or mov sub mov jecxz jmp ds je ljmp pushf lods mov cmp or xor add out or sarb mov iret ljmp repz push repnz test or xchg dec mov jp fnstenv ret mov insl outsl pop or daa xchg test mov test mov in add dec rolb dec in movsb sub inc xor pusha pop rol adc inc push sub xchg add sub sbb ja cmp mov pop ss and sbb repz outsb pusha in add cmp cmc xchg ret and lock or adc or fsubrl mov jl add mov sub xor add dec in or sahf shr adc dec fs mov sbb inc sbbl sti cmpl dec in sub push adc inc jns jo popa mov mov fsubrs mov adc (bad) popa inc mov and cwtl xchg cmp pop mov ljmp shll or int3 ljmp in les out or fdivp icebp adc cmpsb dec mov cmp cld add das enterw test scas jbe pop add push fwait or inc pusha loop lret hlt sub fnstcw fdivs mov push mov adc mov fadds sbb pop cmc inc dec mov movsb add and int3 (bad) xchg sub js rorb or loopne jae add adc add jb shrb insb mov mov je add (bad) push mov cmp fstps rcr dec xchg xor dec mov bnd pusha cli mov cs jno sub addr16 aam loopne (bad) loope ror (bad) rclb mov and adc dec xor jecxz mov out cwtl xchg or fstpt jl sub fdivrl test dec and out adc in in add sub xor jns mov cltd add pushf dec dec push adcb mov xchg cmp inc sub jbe xchg insb xor inc or add mov scas dec or sarb mov xor fisubrl xchg add mov lret xlat popa (bad) mov or dec sbb cmp ss mov adc jbe add ja and insl xchg xor add cmp fwait es hlt fadds cmp mov in xchg inc push xchg stc cmp inc scas sbb mov nop cmp sbb push int fdivr xor mov std add andl or xor push data16 pusha lahf sbb test js lret daa sti cmp test ret inc movsb inc cmpsl movsb js test jbe sub fwait mov lods adc cld les (bad) (bad) in roll adc inc adc stc inc sbb xchg rcl movsl mov add dec out adc add movsb lahf mov fidivl cmp sub in add jnp mov cld fistl enter cmp pop int js jns mov lods adc jo sarb dec sbbl mov jns loopne loope inc (bad) or inc cmpsb dec fadds pushf inc or cmpsb adc jo inc aam and test cmp mov or imul jle scas jg enter and (bad) sbb cmc add inc lods sbb sub test dec xor cmp add leave jg xchg mov xor das es xor add mov lret test rolb fisttp lock dec push aaa movsl movb sub jp enter pusha mov mov sbb xor imul xor movsb cmp inc int3 test fcom sti roll dec sub pop mov sarb add sub mov (bad) sub sub adc aaa sub pop sub cltd push xor mov or ret cmp inc sbb scas rcr test xor pop jp punpckhwd fnstcw inc xlat sub or adc (bad) (bad) adc nop sahf data16 cwtl cmpsb sbb cld mov ror and or dec xor pop pop testl imul out xchg outsb test pop movsb push inc sbb std js enter add adc pushf cltd inc aam sub leave les nop inc push icebp imul pop cwtl pop or leave cmp stos sete and and xlat dec or sub scas lock and push cmpsl sahf jmp mov incb sbb fistp and cmp mov mov add mov punpckldq jl les and test cmp adc mov loop rorb stos test cmpl movsb xchg movsb mov or aas cwtl popa mov jns dec add xor mov xchg sbb inc mov inc dec and push mov lods mov mov pop lods and (bad) aad add jno stos cmpsb push pop and xor leave in test mov ja cld add rolb xor cmp nop add addr16 movsl mov frstor sbb repnz inc push pop and mov les jl mov adc adc nop add hlt mov push push inc nop jge pusha add xchg insl add mov hlt cld mov sar and xor int3 or adc stc (bad) fdivl add add adc jnp add pop sbbb dec pop dec pushf inc test sub test dec sbb dec cltd cltd fcoml xlat push mov sub mul insl in lss push and xor jp xor add jae mov or xlat inc adc mov mov jne hlt xchg dec and add (bad) enter dec ret add xor dec insb sbbb sub add xor or data16 pop cmp jge inc sbb adc fcmovbe enter and lcall sbb gs imulb popa mov sti mov sbb mov sbb jle push sbb mov adc jbe or or insl push sti daa outsb fldl jg xorb fmull adc jbe and loope xchg push inc pop (bad) pop repz aam sub sbb test lret mov nop (bad) (bad) push cmp mov push or xor adc out in jnp sti mov sbb ret mov pusha or add pop stos lds inc dec sbb or add adc int pop sti push pop outsl fwait jmp push mov ficoml sbb pop jb arpl push adc add imul mov sub dec nop fidivl dec add jge mov and pop adc cmp add add and lods add xchg sub out iret adc mov add push mov jmp fwait scas je ret add stos and and jne add pop jecxz lcall std testb push or fnstcw js lret add inc test in pop outsb sbb xchg out or and shlb pop jge cwtl fidiv dec enter lds les xchg and sub push xor (bad) and ret mov in xor adc add rolb inc mov and mov push lret and add add jg dec jnp mov insb xor or add sub push jp cwtl (bad) mov inc dec or pop add push stos repz mov xchg add pop inc lock mov mov xchg stos mov mov pop fnstenv test jno sub dec sub or pop pushf push add add push fcompp add out test mov lods call add cld mov push imul add xor pop div and sub jnp add imul nop nop or pop sbb stc nop enter pop (bad) dec mov fadd sbb adc mov imull sub add inc in ja sbb dec cltd xchg inc loopne dec daa shll mov rorb ficoml jb lret loop xor fs mov mov cmp loopne jo nop clc add pop lret rolb cmp jge and or inc cmp dec push mov mov sbb sub add or mov aad je push int3 mov cmp aam add adc sbb mov or mov out jno cmp pop test sub mov cmp or rclb lods adc xorb stc add jge inc mov jmp aad fnstsw pop lret imul pop arpl outsl jns or sbb mov test pop jo (bad) in lock stos lcall adc dec dec mov cs mov (bad) out mov pop loop enter pusha cs mov mov and lret (bad) rolb lret loope cltd clc and dec and cmp loopnew je xor xorb daa and test mov mov pushf mov (bad) pop inc test xchg push jne addb (bad) lret adc jge inc pop mov notl mov out inc adc mov les and mov jne mov push push mov cli jae ds fs xchg sub xor or jnp and rorb jge dec mov sbb std mov jp out dec (bad) int jae rcll (bad) hlt mov add add fs push (bad) int3 mov mov add (bad) popa add rolb jg sub xor inc lcall in inc cmp mov pop mov inc and dec je pop cmpsb jge and mov stc sub sub rcll inc push pop cli fmull cmpl pop rcll daa jo add addl clc pop popf jne mov sub and sub or dec and jge (bad) xlat jae lahf xchg adcl loop xchg mov sbb notl stos mov add mov (bad) dec mov ret pop add dec pop cli je mov sub cmp lea fadds add js repnz add inc or mov mov ret inc and xchg aam sbb jl mov insl imul sar and lods nop lea dec cld mov (bad) xchg sti mov into adc aas mov mov test pop mov jnp fidivrl pushf add shrl mov insl adc cltd push xchg incb dec xchg adc or mov inc add (bad) enter mov jb add pop xchg hlt in dec pop mov adc pop not and adcb push loope idiv jg je push ljmp cmp inc add lods jne inc jb mulb iret adc test and ret ljmp push xchg addr16 pusha push add mov ja push jo sub mov xor jbe adc fcomps sbb idivb je dec pop mov add repnz in mov jnp xor lahf mov in stos loope lret sub ljmp cli jbe nop nop or (bad) jae inc push add xchg rcrl hlt test fldcw jge cmpsb cmpsb out cmp cmc xor dec push mov lret stos mov xchg decb or mov dec outsl bound std push push lahf xchg or sar pop scas xor in cld icebp mov pusha push or (bad) push aas dec add sub repz shrb add add and and movsb out jnp push xorl inc inc pushf push cs adc (bad) insb ljmp repnz nop mov js addr16 mov push sub xchg cmc jnp add mov xor cld xchg daa cld roll mov sub and dec jp fsub scas sub push int xlat loop pop jne fs xlat stc inc les lods mov jmp xchg hlt ljmp (bad) mov jmp xchg popf push mov xchg jl push inc pop cmp pop cltd cmpsb push orl add loop xorl xor int3 mov dec jg fsubs inc out aas stos cltd sbb es pop mov xor dec push (bad) sub fistpll daa mov jne cmpsl pop int3 addr16 add (bad) xor shl inc popa dec les ljmp pop sub pop add orl hlt mov pushf cmpsl mov repz pop neg xor jbe sbb lock stos imul mov cwtl popf push ss xchg stos dec pop inc pushf mov leave xlat fnstenv xlat pop sbb inc jmp enter and outsb lock mov mov jp dec dec icebp (bad) jne sbb out rcl mov js mov and (bad) loop add add hlt movsb jp sub lret xor xor add add lock xor pop pusha push das call cwtl jge cmp cmp mov push lods out inc push and or xchg sarb (bad) pop xor push sbb pop std das mov xchg ud2 movsl pushf jno sbb xchg aam jbe sub mov (bad) sti int lods pop aad rcrb mov sub sti cmp dec stos into dec inc xchg cmp cmp or mov push data16 cmp add mov jo test mov cmpsb push mov jo js adc jge out mov call push xchg sbb jg mov cld fistpl push clc inc insb leave lret or (bad) sbb mov fsubs inc or adc push inc push call hlt repnz das leave scas movsl lock pop pop mov push jne push imul push pop jns jmp flds leave jge lods dec (bad) dec les shrl test or cs mov add inc inc push enter or mov push xor sbb xor mov lret push pop and (bad) mov mov bound sahf mov adc pusha add sbb fist push add (bad) push stos (bad) and and inc cmc adc enter inc dec xchg (bad) test mov jno add jmp jne jg (bad) (bad) in inc lock push pop xchg jl pop xchg push xchg insl pop das clc add daa sti or pop push aad pop cli mov jno push jns or in addb adc shrl out mov decl lcall add push ja and add pop or in xor or xor in dec xchg push insb and out add inc cs push loop rcrb add xor xchg (bad) xor add (bad) mov sbb and cmpsl fwait pop push (bad) jge adc out sub inc xor dec sti iret xor lret dec xchg out fisttp dec mov pop push push pop cmp mov test and jge jbe pop imul push jne movsl sbb data16 mov mov cmp push stos bound test rcll push dec and scas adc mov out rcl mov imul fcmovu jns leave xor inc mov hlt cmp in push icebp pop pop push mov aas add add in dec xor jae aad cmp inc outsl sub inc cltd ret js inc jp lods cli insl out sbb fistp mov and notl dec push insl push cmp cmp lahf pop pop push (bad) xor push ret loope les sub lea je mov mov (bad) xor aas push push pop faddl cltd add jae sub push cmpsl insb cmp jge pop ljmp push out xor mov or or mov jecxz inc scas mov bound pop dec cwtl push xor and outsb sub mov xchg repz dec dec or fcomps pop clc pop mov in cmp aas cs push ss stos ss outsb lock cmp lret cld fstpl les mov pop cmp inc roll ret (bad) fisttp pop imul pusha push jmp loope fistpl jecxz mov je fstpt add aad jns ret cmp lock popf adc add pop sarl adc xlat pop sub ss dec cmp add idivl lock cmp dec push push in xchg scas in jnp and xor and cmp or in sbb cltd add pusha out repz cwtl test popf add dec fwait je les adc fsts sbbl (bad) aas mov add fdivrs mov (bad) cwtl push loop pop jns jmp and push xor loope pop push mov jns xchg nop xchg xor adc add adc out jae ljmp push sbb add or sub or scas sub (bad) lods divl icebp jne push fsts mov dec scas mov jae (bad) adc sub mov pop fistp adc nop std cli push loopne,pn lret (bad) mov inc adc pop pusha and jmp xchg cmp jge dec push (bad) cs das push pop mov push pop (bad) hlt push push or pop jbe sarl test mov pop push add lods cmpsb mov daa jg call push mov imul xor ljmp push movsl adc mov sub pop fwait test push pop aad fnstenv rcl mov mov lret inc pop cltd dec lret movsl mov add and out pop mov pop jg or bound fildll out jns add jmp pop push adcb js jnp daa (bad) pop jge jge xor or sub sub pusha ljmp subl pop cmp loopne daa adc mov push dec into es or gs lret in or ds (bad) sub (bad) mov xchg jns ljmp push fs leave push cltd add inc cmp mov mov dec neg shr addl xchg jle adc push push inc test lds pushf sub jmp add mov cmp xor or add rorb nop push adc sub mov movsb mov dec sti shlb (bad) adc (bad) sub pusha loopne xor clc out jecxz add cld sbb push mov in add jno cmp in dec sbb out add into test shrb (bad) jne adc pop out out (bad) aad popf (bad) mov (bad) outsl dec stos (bad) mov addr16 test insb sbb popf adc roll adc sub adc sub push pushf push inc mov xchg faddp out add rcrb jecxz add xcrypt-cbc cmpsl xchg pop cmpsl xchg and jmp inc fs or pop cld pop jge fildll lahf push jns pop out push cmp outsb pop adc stos and (bad) in dec aas mov xchg xor add sbb mov imul adc mov or (bad) sub pop inc and jbe cmp (bad) stc sti sarl mov shrb je and out test lods cmp call lods jns insl js sub cmp jne lret mov ret push inc xchg push fnstenv jg mov inc shl cld dec leave xor pop mov aaa dec jg push mov mov popf mov or jno jmp pop lahf in das clc enter lock into movsl pusha incl add idivb idivb xchg mov push pop mov jns les hlt (bad) sub push mov or cmp addr16 mov daa imul dec loopne bound outsl call jae pop push inc jmp lock mov jle add cmc outsl sbb sub dec cltd push outsl mov out repz pop fmul mov push (bad) push jae out mov xor int jp cmp icebp sti xor outsl mov ljmp jno push test (bad) pop stos shrl push mov (bad) jp leave imul addr16 cld xchg push sub sbb dec sbb mov add mov jl clc jmp dec add add sahf jecxz xor and add mov push jle lret fs aad ret adc fs mov inc (bad) pop push pop hlt inc (bad) adc cli (bad) jle jmp inc popa (bad) lock in nop xchg jmp add xchg mov sub lret xor pop icebp dec cmp xlat cltd mov mov xchg fdivrp xlat push pop add cmp pop rorb xor inc enter jmp aad or push lcall or test mov or xlat adc cmc push pop loop pop lcall scas inc push fbld bound pop or or sbbb aas jge push inc add scas jne lods loope add iret jg sti fdivl sbb xchg roll movsb sarl std add mov add in dec sub push adc pop pop pop ja (bad) xor fiadd std jns loope out stos cwtl pop pcmpeqd (bad) jle mov mov and pop (bad) xor mov repz (bad) popf or jmp loopne add mov jnp jno sub xlat mov pop cmp push aaa scas imul inc (bad) jmp xchg or jmp repz addr16 pop adc cmp loop or bound add jmp ret or dec push dec movaps sub scas nop sub jle cmp xchg pop push stos mov pop dec pop lahf loop push in inc jmp add in rcll sub decl cmpl sbb sub and movb or faddl and repnz shlb cli or sbb dec push inc daa or aad jge and sub pop xor pop mov xor mov sub push les lret push fistpl lock mov ds aas push test dec iret pop sub out sbb and add das cmp outsl clc add xlat mov cmp jmp rcl add xchg pop mov cwtl push pop add xchg and ja (bad) pop movb dec insb dec lahf mov mov (bad) xor ja mov cmp stos ss push sub push jne out mov ljmp and push out testb jmp (bad) xor push stos stos test cmpsb add add inc push (bad) push cmp xor pop aas jmp adc fs lcall stos push imul xchg pop push sbb ds loope pop sub shrb ja test scas jno jmp das cmp aas aas rcr adc xchg pushf add push jmp shrb and jl out ds jmp rolb test pop leave xchg or push fdivl or dec stc imul jo xor movsl or in xor or mov jecxz mov shr das add scas cmpsl aad mov cmpsb mov addr16 add push je cmp sub aad rcr or pop cmp xchg xor test push (bad) or xchg add xchg xchg repnz std push rorb push mov xor add out add cli pop shr add or pop jne dec add int sub and aas or dec adc pop hlt xchg add movsb ret jnp rcll push jmp push cmp mov mov in popa xor pop orps sub push in mov add pop pop sub adc xchg les mov ss (bad) pop cld notb push neg pmuludq mov mov dec movb xor pop push mov loopne pop hlt insb (bad) repz int3 push cs data16 rcl pop in pop push add add and loop jmp insb lahf or xchg xor add ret cli adc mov test or xor aam push jge (bad) std mov jmp lahf cltd outsb add rolb cmp loop dec out dec add sbb cmc popf hlt test sbb xor inc andl mov shr add push mov rorl daa (bad) pop and add cwtl push adc xor jmp aad sti sbb clc mov sti test mov sub dec outsl loopne push mov or idivb push aas pop cmp repnz or mov (bad) subb imulb mov je mov dec add jmp in (bad) scas (bad) jge mov cli je movsb stc pop lea movl fs dec (bad) std push jno mov int3 push cmp loopne pop cmp xchg pop push jmp push aad pop add popa push or mov cltd dec adc push and test imul or adc neg in dec dec lea scas xchg cmp mov pop adc (bad) fistpl pop inc hlt add pop rcrl out add push cmp test push mov cmp push loop pusha aas mov jb (bad) out fsts and add mov je push nop (bad) pusha sti dec lret int sbb lds movsb xor jae dec inc sub and ret jmp movsb or movsb mov ds mov xor xchg pop pop movsb nop xchg adc or lcall out cmp dec fildl pop lea cwtl dec mov inc pop add lock insb mov mov movsl adc out mull fwait jmp push mov push jae fisttpl jg or add pop int3 out pop shlb gs add mov fstpt int3 dec mov and pop push push (bad) sub ret cld inc test cmc fimul or call popa jmp jl mov pop add mov sub pop xor or cltd add mov lcall fsub lahf push xor (bad) sub mov lea push push jl mov (bad) sub add stos fisttpll adc xor inc test push xchg mov mov pop movaps faddl je inc add add mov push fisubr into mov and scas or lret mov pop in push mov add in rclb sbb adc jmp xor divl sti xor dec pop mov sub rclb push stos adc push jge jp push adc push pop inc test or add sub or cmp out and out or cmp cmpsl add icebp gs xor push sub mov sbb xchg fimull movsb loop sbbb fs cmc into xor lret sbbb pop shl add lahf dec jmp shll push jo dec (bad) loope push sub mov outsl jle iret dec pop in lock add (bad) fnsave lahf hlt mov inc repz roll (bad) mov in mov not ror inc and add repnz rcrl sub inc mov ret xor divb mov lahf pushf repz rcrb test daa sub fild inc jecxz mov push cld jg adc fsubrs dec cmp (bad) or push pushw adc cmp xor push call jp js push adc add insb and cwtl (bad) cmp sub stc fdivrs test imul pop push shrl adc lcall jne and push aad das adc cmp cmc subb pop fidiv nop (bad) test stos and or mov xlat jnp mov sahf jle ret ret incb or inc add or jle popa lods mov hlt jge add fldl or mov mov xor add jg mov rol stos dec ret in out imulb dec imul mov cld sub ljmp jbe and jb sbb rolb and aaa in jns push cmpb pop (bad) cs cmc mov das add inc push push out cld outsb orl pop and xor psrlq hlt jg adc loop jmp sbb aam dec or loop mov js mov add jmp sub loopne mov in add and adc ret mov pusha sahf inc mov std jnp or clc add rcrb out push dec cli or cmp bound scas imul jmp (bad) cmp (bad) insb push fmul mov mov imul lret sbb jae lahf jle jp pop pop jg test fdiv rclb cs clc pop imul push xchg push test dec iret sub mov push insb ret leave push fwait aas dec jmp xor xor jbe add mov js add xor add (bad) push push data16 jo fdivrs (bad) add test andl push push adc lock inc add mov push pop fidivl cmp (bad) je popa or xchg aas int3 mov cmp cmp jo lods mov xchg fstl xchg mov mov or call xchg (bad) lret cmc sub dec mov mov mov mov nop lret sub cs cld inc dec xlat leave sbb fs push pop mov and repnz push sub scas lret cli dec jge neg inc push loope lods divb inc sub xchg in cwtl lock in xchg inc mov loop pusha dec cs test jno adcl lret and and push div out dec pop loop roll lcall fsts add mov and es incl sbb daa push jmp inc les out mov (bad) jle shlb fsubrp add sbb xchg cli loop flds pop insb loopne shl ret test ret lods sahf cmp sar mov inc or (bad) aaa add daa test jg insb add ret jge nop lahf xor or cli jmp aaa in loopne ds psllq add pop daa jno (bad) lret aam push rolb pop dec mov xchg lock pop pop fsub xchg pushf sahf clc clc or jne scas pop std ficompl sbb iret dec stc or cmp xchg jbe stc pushl imul cmp pop dec cld mov inc xor cmpsl mov jge fwait repnz jl xchg icebp lret push enter sub inc xor repz inc movsl (bad) aaa inc push in in xor mov inc imul dec add js inc cmp dec pop mov in mov xchg lcall push pop add sub push jmp cld pop icebp imul pop xlat lret loop xchg dec shrl jmp jecxz and xor (bad) inc inc jb push push push mov pop mov pop in add sub movsl arpl push push mov inc sbbb outsb pop rcrl inc or js fstpl jle dec add add mov lds mov adc dec lcall push lret mov leave jnp mov dec loop sbb mov sbb lcall insl js mov pop idivb mov add ret cmovns aas add fldt xor pop pop push mov jl (bad) or addr16 or sti mov mov stc or inc lock jae adc xor lds push and sti out repz or rolb jmp inc imul add add pop je pusha inc test jle imul add and nop shlb addl pop add mov cli loopne,pt mov nop add cmc cwtl jp pop cld push shr cltd dec push fldcw aas jb jle sub mov mov pop xor out xor and mov add jle sub into or sub jg jp aam test mov add into insb mov pop lahf daa in pop mov (bad) jb add xor pop push shr inc inc cwtl adc xor add into jmp shl cmc cmp call movsl cli mov mov pop dec jbe pop mov mov push add ljmp or push add inc call xor inc cmpsl fstl addl icebp fisubrl fldlg2 inc je add shr mull testb or out jg inc inc dec in jnp negb out movsl jle cmc dec jnp or cmp mov je pop inc adc xchg outsb clc mov push jmp (bad) roll loop clc pop cltd sbb dec pop shll sbb jle fs xchg aaa shl ljmp in movsl les not and int3 adc push add ds jp jmp int3 inc ljmp push nop es sub inc ffreep (bad) clc add dec cld or int3 push push add dec mov jb mov dec and pop xchg imul add sub xor sti dec or pop and outsl dec mov rclb jp pop xor cmc push aaa push (bad) xchg in out fld and das mov mov ret in pop dec not nop push pop fsubrs js (bad) or add addl cwtl jp mov xchg aad mov loope or sub push insb pop push cli loop cmp scas mov pop add (bad) pop (bad) stos mov pop sub and cwtl cs or mov jp std arpl in mov mov or or mov add xor inc fsubrs sar adc push fnstsw xor push add push roll mov cmc dec jecxz js stc mov pop sahf in icebp jmp sub sbb add jae aas jp bound ret out mov call push jmp (bad) adc stc cmp jmp add jo adc pop add push dec inc pop or pop jg aas fnstcw movsb sbb stc pop shll mov mov movsl sub test mov sti inc pop inc rorb ljmp int3 aas xchg js lock bound mov push (bad) fildl je mull or (bad) popa sti in pusha mov dec jle mov je jmp push pop shl cwtl push push inc or ror popf out pop rcrb lahf adc push xlat in out jbe stos outsl dec (bad) lret xor push or fdivs int pop out ror add mov pusha fcoms inc sub add xor pop dec mov cmp push sub call sbb jmp rorl jne je loope faddl leave jl add mov sbb fidivr lods outsl pop mov sti jmp aas bnd out jmp bound or orl or xchg and (bad) push cld mov add xor aas mov outsl xchg addl xor psubsw jns cwtl dec insl call cmc enter sbb inc bound das jg in adcb cmc mov jmp adc mov inc lcall inc idivl push sarb aad pop icebp push imul inc jo hlt (bad) stc sti das pop xor aaa add sar (bad) test fstps repnz int3 outsb pop and pop xlat xchg jo sub sub jmp pop dec aam popa inc andl arpl push lret or jmp xchg cltd pop cld insl inc mov jg xchg inc pusha loope mov sbb lods shll orb xchg cld sub aam mov jge testl fs or fdiv lds jmp push inc out cli mov xchg add cmp (bad) dec outsb xlat lods sti mov xor sti nop (bad) mov sbb or dec sub popa add out sti push jecxz push out out loope jecxz nop outsb test shl push fimull pop jmp inc or pop push stos cmp insl sub push or jbe mov xchg inc xlat push mov imul loopne xchg les lods push in repnz mov cld das mov mov outsb xchg (bad) jbe les push nop mov and repz out adc cwtl adc es xchg or iret ja push mov (bad) je pop cmp pop push mov push aas int and mov dec repz or xchg inc or mov push xchg cwtl je in inc out sub pop out loop daa daa adc loop orb or inc cmp add push and out xor mov enter dec sub repnz dec stos add mov and andl das sbb cmc nop loopne cli (bad) ja test dec push inc add test in fildl pop xchg mov inc aad or or lahf aas jb orl fs addb ret push (bad) push ret mov push hlt sbb imul (bad) xor cs addr16 mov inc or or mov jg sbb and rolb (bad) loope imul or add loop in shll test xchg adc rorb xchg call icebp outsl sbbl scas movsl aam dec mov jecxz mov mov add jp xchg pop mov mov fsubrl fistpll sbb inc addr16 add jo inc or loopne mov (bad) mov dec xor (bad) xorl add lcall xchg inc sbb subb pop popa or jns xchg inc mov mov movsl cmp add bnd xor adc lret pop add jnp xor out adc imull loopne leave pusha mov add add xchg xchg ficomp hlt aaa popf jno add push subl ror cmpsl xor and in mov cmpsb and aaa aas adc sub pop pop or mov mov ficom int3 addr16 pop addb movsl ret or in push and cmovl push mov in mov popa or orl dec inc mov jb int3 stos sbb inc xor mov insb jns fimul pop imul or mov push dec insb add xchg iret lret xchg dec add rcll and loop hlt mov imul or inc popf addb js mov test adc (bad) (bad) sti cmp aas jb (bad) mov cld stos add ss out sub lea enter or sub ret leave adc and jl add add sbb pusha call and aaa jne add push hlt and adcl popa scas inc or mov fcmovnu orb xor in inc popa mov inc pop bound push loopne cmpsl das lret xor adc inc call lds bound inc dec pop jo jg enter push push cmp xor imul cwtl mov orb pop or lret addr16 (bad) xchg xor sarb and shrl sub adcb aad and mov shr sti lea mov call adc lods fsts sti mov inc xor out inc fdivrl movsb lock xchg sbb lds ss dec add std fild jg imul fs out xor aaa xor enter into sbbl ss dec mov adc dec loop and repnz loope,pt mov add aam (bad) or out push push inc add ret cmp pop mov add xor xchg in pop loope jg pop into movsb imul aam xorb pusha mov sbb aam adc loopne cld cmpb cmp leave outsl pop (bad) or add ror or push icebp and add inc insb xchg push sub dec inc mov pop ljmp mov and lahf cltd dec divb dec sub lea in jnp fidivr pop and movsl in jo and lea loopne xchg cmp pop pavgb add (bad) std sahf inc or add xchg out inc and and ja push dec or inc bound pop mov lret loop xchg fdivl xor js and jns jg orb jb stos lds and not popa jle inc add aaa pusha roll dec push nop push pop and test andl popf mov pop push aaa or xor aas pop pusha adc pop inc xchg fdivrp negb pop add cmp rorl fcoml ss les inc aaa push loop inc test or jb dec mov out subl add (bad) cs hlt and (bad) call lahf popf fcoml adc adc popa push scas pop xor shrb pop repz das out jge pop insb lods xorl adc pop mov rcrb push clc mov and sub cmpsl popa adc sub sbb mov xlat loopne cmp fcoms test mov push mov addr16 cmp pop cmp xchg inc add jge ja or push pop outsb or std mov stos faddl or imull lcall jns (bad) (bad) shrb es mov inc mov scas mov aaa push inc rolb add sarb sub push adc and addl in xor xchg lcall mov push lock adcb jg add dec int sub aas loope jl popf jb mov jge xchg jg and cmp xlat clc pop fnstcw ret hlt dec aad pop jl enter les mov pop cld dec pop (bad) fs sbb and rcrb or sub xchg cwtl cld loop add adc or in or and lea add add test lcall dec push dec ror movsb cs daa lcall popf mov xor out in mov and mov mov and movsb sti imul roll push in out dec std inc and loop push dec add movsb and sbb jae orb mov xchg xor sub or lret push pusha mov sbb xchg out xchg mov or scas lods mov loop clc cmp and xchg scas cmp add dec mov rcr or inc in sbbl mov enter add out repnz pushf dec fmull inc xor arpl add ret insb xchg shlb mov in clc pop or jge pop mov dec shl and push push out sti mov in enter imul pop ret out (bad) subb add aaa mov mulb test inc and push jmp call mov jne js stc pop lea popa jge mov dec out sbb cltd loopne lahf xchg or push faddl jb and add stos mov (bad) ja cmp dec rorb sbb or and movsb inc stos repz pusha lret pop mov dec mov adc or sub mov or sti add fnstcw cwtl mov rolb addr16 lds sbb push jp sti xlat add test les ret rcrl fsubs and lea or or rorl jg lds fcoml pop ljmp sub sbb mov push in jo cmp repz or mov push inc icebp leave fisubl out jne lods (bad) in notl cmp push sbbb cmp scas and test adc pop inc or pop cli cmpb ja popf sub sub mov sbb mov add dec andl stos mov or pop lds pop add jle scas sbb xchg or mov ret imul les adc adcb xchg and in pop cmpsb mov (bad) mov or cmpsb xor adc fs (bad) lods rcl fiadd das and or mov (bad) insb push add mov loopne jg inc cwtl imul fsubl cmpsl xor add add pop jmp xlat xor and aam int cld (bad) mov shl sbb and jl ds inc sbb sarb cmp fwait jg test sbb jo addb in addl mov leave test xor mov xlat cld adcb xor lods js icebp orl or js add js or cmp cmpl push sub adcb lret mov cwtl inc adc sbb add pop bound popf (bad) es mov add loopne or das subl push dec adc int3 jl dec mov pop movsb iret setno lea cmp add scas or out mov cmp sahf pop (bad) jo in sub fiaddl addr16 je aaa xor mov add loopnew or loopne mov pusha aam mov loope pop sbb stc ret leave mov inc mov add inc aam fisttp adc pop inc sahf call data16 sub xchg hlt dec rcrl (bad) xor iret jmp push push test dec in mov pop push add mov cmp je aad shlb jnp aaa xchg jns add int lahf or shll imul add (bad) fiadd lds nop jb lea in call loop fprem1 test nop sub popa or nop jl bound decl sub dec rolb cmp or pop add std add cmpl adc xlat add pusha addr16 in add rol mov cmp or or ljmp and js mov and push or or and pushw fsubrl adc and sbb ss insb rolb add (bad) ja jg cmpb fsubl or gs add mov repnz lods inc or add jmp xchg or in push xchg into add xchg mov mov add xchg test loopne scas xor sti inc push pop sbb inc das addb insl and sub int xchg imul xchg lea loopne imul mov repz and imul xor mov xor push or addr16 in mov push inc je rcrl aaa fs inc in pop ret cmp rolb push mov stc hlt cmp cmp adc je fmuls or mov jle jl scas mov mov push loope add fcompl iret add adc or adc jl dec mov add movmskps sarb in into out mov cmp and jl add cmc jl push mov scas aaa stos test dec lock loop lea mov js fiadd mov sbb popf xchg jecxz enter push pusha lods push das dec adc js add scas rcll fnstsw jl or dec add pop imul fild mov mov or pushf push and push test xor cwtl jle lods or jg enter cvtps2pi bnd orb push addr16 dec out cmp js imul xlat mov push dec push pusha mov popa cmp daa rclb sub and fs xor sbb fisttpl jo or test mov cmp outsb push sbb popa nop js ljmp mov repnz pop lds pop sub mov enter aaa inc cltd or sbb (bad) call pop or and inc or sbb jg mov ficoml and cmp or sbb stc inc test imul add mov cmpsl das push iret or adc xor mov pop or popf lods test pop call xlat add jb (bad) ljmp mov into adc addr16 sahf or add add pop push mov push punpcklbw xchg mov sub xchg add nop jecxz fidivr (bad) mov inc in cmc fiaddl xor lret mov into add sub les inc pushf push cld fild adc rclb lods mov sbb jbe xor aas test xchg xchg mov out enter cmp or je add out mov jno ljmp mov sbb lret imul sub enter mov sub nop out repz xchg add xchg ljmp inc inc mov cmp xchg xchg into pusha mov lods adc xor outsb lret jle pusha pusha push cmp inc insl adc cs mov int3 jecxz add je sub lods xor les das test ds sub push xchg pusha cmpsl push jbe add sub mov jbe push out sbb xchg sbbb pop fildll sub or inc imul xchg sub dec bnd sbb movsb insb xor xchg push sti push into popf fsts lock out mov test lods mov in add sbb aas pop test adc nop sbb sti xchg mov pop sbb mov xor mov cs lock add add xchg xor in jno into inc adc enter sub inc lcall add adc rcrl cld loopne test movsb add stos pop xor int out lcall xchg jl cmp inc push daa xchg xchg adc inc bound mov dec mov sarb dec scas sarb ret jb add in sbb (bad) xchg ds inc dec lret (bad) jecxz lret ret inc push (bad) call test fs int enter mov dec test add bound sarl arpl (bad) cmp dec adc add loope test shrl add daa mov mov pop xor sub or lret or mov dec es test mov mov mov scas test test or icebp mov and mov cld mov test jnp ss lret stos adc push inc add movsb pop test insb in pop les inc add sbb adcb inc xchg enter mov test gs xchg cmp add daa adc dec add xchg les xchg mov xchg add cmp cmp add mov sarb pop pop push ds cmc add fstpl (bad) jo add out push pop and adc dec ss sub adc mov sub mov adc mov or lea and les push mov cmp scas cmp sbb sub js push fcom cwtl add cltd addb pop (bad) outsl dec or out add xchg orl mov popa adc pusha and mov adc es adc mov (bad) and dec or pop sub sbb aam int mov sbb out pushf dec push imulb add cmp and ror les add imul fldl pop add xchg lret arpl push insl out jo nop sub nop cmp xor ror pusha test pop stos push xchg lcall cli add outsb into inc enter add adc adc fcompl fldl mov inc mov ret mov int3 les push mov stos push out sbb mov subb divb adc add mov xchg push (bad) inc jo mov and pop dec imul mov fidivrl pop daa test mov add ret pop or lret (bad) jmp add xchg insb push mov or or sub jg add push aas (bad) mov xchg orb repz insl or les ljmp fildl stos jne popf scas and or mov mov inc sub adc nop xor push outsb shlb add in addb adc sub xor sti pop (bad) int adc nop dec in push cmp add aaa in lods data16 add shrb shl cmp sbbb xor inc add roll xchg fstpt pusha add mov add inc jge mov or and stos mov mov popa and js test cmp and insb lods xor cmp dec pop pop push cld cmpsb enter and pop mov push mov dec leave fs mov add add inc out insl xchg sub inc or (bad) rcrb xchg lods out or js stos xor jno add push ljmp insb rolb push data16 mov ja aas dec add jbe inc test push repnz or data16 cmc inc mov inc int3 xchg or add js rolb push sub mov add (bad) fs and lock inc imul push xor jmp pop into pusha pusha jno shrl in shr pop and adc jmp mov scas dec and add shr push mov pop push fs pop push lret (bad) loopne pop cltd add clc add adcl imul sub ret call mov jle and gs add je dec pop mov (bad) paddsw mov mov push dec mov and in add lret das inc mov push into push inc push pop sbb inc fstps sub jge or lods add mov inc mov sbb fdiv and xor cld ret pusha jo add aad pop xor adc test es cmp jo and or xorb sub jl mov add mov ss les fnsave add (bad) jle dec jno lods mov push mov sub jb fistpl jmp mov pop push test out bound out jmp xchg cwtl enter daa push out dec loope xor das loope mov ljmp call dec inc sub pop aaa jbe adc xchg and mov inc cwtl push movsl add xchg and mov rcll popf lods xchg enter xor orl mov push xor add adc and add test mov pop xchg stos mov in cs fs add pop mov les inc mov pop sub adc les or (bad) cltd sub sbb dec adc out cld push inc scas dec or nop popf mov rcrl push ja add dec inc sbb xor dec arpl pushf push push bnd es push je pop mov or mov mov mov lock loope sub inc sub into inc loopne jmp ja and jmp lds test pusha xor adc push inc rolb ds inc andl ja inc cmp lahf and push sbb mov in lock nop inc cmp xchg sbb mov jg into push xchg inc add adc add pop pop rcrl cmp pop or arpl (bad) xor mov add fildll bound and sub xchg sarb dec sbb andb mov adc or pusha jl inc sub add sbb adc cwtl (bad) loopne jg cmp xorb mov lock test sbb lret add push loop pop xor cmp (bad) mov fsubrs mulb and jno call sub inc jo enter dec mov dec les xchg mov ds std cmp add sub sbb das clc mov xchg pusha jmp dec cmp ficomp lods sahf push int3 pop xor sbb inc mov inc push sub jecxz xor xor js (bad) or jbe ja mov push (bad) adc ss dec in pushf test add dec adc aad es lret mov sti push jl cmp or mov lahf fcomps xchg xchg sub mov or mov xorl sub inc dec or mov shl pop lods popa test adcb inc stos jecxz rcrl into cmp mov cwtl fistpl cwtl or and add mov dec data16 scas shll push or xor js xchg mov add jle push les in pop ljmp mov push sub test add inc test addb pop or lods mov add xor aaa xor and add cs js push jge jb dec fwait and push sub rorl enter out or xor dec enter sub into popa dec fldl inc in lea push xlat sbb or xor les pop mov mov pop in clc and mov cmp pop popf jnp out jns cmp rep add cs sarl mov or jp,pn jle and shll bound push xor inc das adc mov fdivrs sbb pop scas push loopne sub xchg cmpsb mov push lahf sub pop adc ja mov pushw cmp jo mov or xchg mov mov lea xchg inc sbb faddl and in lock je inc mov inc add push lret pop mov rorl mov pop sub mov test add inc adc mov in cmpb push mov push in push or push das sbbb mov in data16 xor loope pop pop inc int3 and or xchg (bad) jo clc fstl pop mov scas push adc cltd test mov or sub add mov adc adc and and aad lcall rclb xchg mov ja lock inc testl add push and pop andl sahf in inc mov ds aaa fsts dec and fmuls js jb mov fisubl push out mov das and and add pushf jle add mov mov pop pusha jmp cmp pinsrw xchg mov movsl pop jae roll mov adcb cli mov add pop adc pusha orb jmp or cli pop cld test add mov add (bad) iret lret and fld mov and in dec add add or xor (bad) outsb (bad) jle sbb (bad) mov pushfw (bad) or sbb insl int xchg or jp fwait mov xor pop sub add fsubl dec (bad) clc (bad) test pop xor push cmp jnp add inc test jns or bnd nop orl add test sahf test or (bad) mov add js les fisubrl push lahf rolb jg ljmp loopne push shr dec aas aad inc and stos nop out xchg jne and aam and lods xchg nop mov cmp and ret je clc pop add add adc push dec ss mov cwtl pop push pushf (bad) xchg dec or and and js ss or insl aas pusha add xchg in dec or outsb add jb mov and push pushf sbb outsb pop movsb (bad) sub xchg push pop (bad) jno or das enter iret inc data16 add shrb push lcall cwtl push or lock jo add xchg (bad) cmp dec xor insl xor jb lds add imul jae or mov push sub cmp xchg sbb add popa mov sbb out xor sbbb das push mov ja add and pusha loopne lock test xor fmuls and inc test into cmp pusha jmp cs jge gs gs adc movsb add adc add loopne sub shl andl and xor pop xchg or inc adc bound lcall cmpsb push xchg lods loopne inc iret data16 pop sbb pusha jns cmp in mov dec push jl cmp lea xchg out adcl stos xchg rclb and rorl test mov xlat xor adc sbb add xchg or (bad) adc cmp push testb jg lret insl add lea mov fnstenv cmp (bad) xchg xor jp rep mov (bad) jo cltd cwtl roll sbb jo add sti test xchg pusha xchg or pop (bad) insl adc sbb inc cmp lea inc mov rolb jge adc mov test mov repnz inc lea call fs or cmc test arpl movsb test push sbb lea test add imul es rorb add mov fstpt or or cld sbb (bad) xor lret leave jmp sti int3 jmp cmpsl xchg dec xchg xor or mov mov pusha add mov stos test lahf loop add xchg add xor aaa and add nop mov mov js add stos jae and xor sub mov les sbb inc xor sub shll ds or jg aaa push dec add inc add (bad) mov add mov outsb push loope xor xor and or and frstor je mov (bad) repz insb xor orl (bad) mov sbb xlat inc and les xor rolb pop into fwait mov and inc pusha (bad) int and mov and in mov xchg mov mov xor xor rorl pusha and jb or fidivr add scas (bad) stc subl mov and les std sahf sbb lock adc or stc or or mov and and pop pop lahf dec daa aas add ja xcrypt-ctr cmpsl pop (bad) add xorl outsb insl and mov xchg mov and adc mov ja fs and pop test dec lock jp popa and pop cmpsl xor (bad) daa dec out add and or add daa sbb mov (bad) add inc ss mov imul pop insb xorl insl xchg fmuls pop push stc dec (bad) je aaa add and xchg mov lret push ljmp test adc add sub dec inc jle add jge jbe push icebp xchg add scas fxch insb jo dec add mov xor call (bad) out adc xor and mov add mov xchg in mov push dec jmp or aam pop sbb pop mov fsubrl pop xor and adc push in pop add pop nop movsl mov sti rol leave test add out sbb and and jmp enter push stos adc outsb cltd or lea and mov jns inc adc and les xor dec xor pop push jo add pop mov aaa mov fs or pop jb inc pop jae or fistl sub nop sbb loope ror shr add (bad) cwtl sti outsb ret ror stos and xchg data16 call ret xchg inc lahf mov ljmp or pop mov cmp mov and jne mov je pop xor dec inc add out aam pop pop test nop cli mov inc push sbb leave push mov or dec (bad) lock and test lea sti add xchg into inc nop add ds push cmp testb xchg (bad) int3 or xor cmp les pushf mov push scas pusha flds inc (bad) mov scas dec and sbb adc jo mov and les dec movsb jne sbb sub (bad) lock mov cmp jle in fdivr mov or dec pop lock sahf xor popf pop pop and fisttp jno pushl ja add (bad) cmc dec inc loopne icebp jae inc or pushf mov mov push push sub pop insb pop js (bad) dec (bad) cmpb cli test das in inc and sti sbb mov test loopne negb sub subb xchg dec in dec inc and int add push or rcrb add push push sbb xchg and jle adc stos pusha mov add pop or sub aaa insb or sbb mov mov jmp or fnsave scas jae push add lcall cmpsb push xchg pop cmpsl daa and std fbld xor xor sub jns imul mov pop pusha mov mov xchg out sub int orl xchg sbb loop sbb je into bswap (bad) mov xor je sub lahf inc sbb mov mov enter xor mov inc imul mov cwtl pop ss mov ret int mov jo rolb xor sub dec test cmp xorl inc jnp call pop dec gs pushf mov push rolb fcoml fiaddl dec jno push lea add push aam inc mov xchg js in mov test fildll xor pop enter or mov or or push popf xchg xchg cmp dec xor sub loop jno add arpl push bound and push out int3 or jmp ss fs sub push adc arpl pop xchg mov nop cmp jnp jg jp fdivrs cmp dec add cmp push test scas inc shlb xchg cmp and out add jb xor pop rclb lods add test mov das popa push push and push movsb pusha es mov jnp pusha sti pop clc ror hlt xchg mov add sbb mov fs adc enter pusha add dec or adc sbb in sbb loopne mov inc add xchg sub addb cmpsb fiaddl lods inc bound popf nop add fldt (bad) sub xchg adc int stos pop ret les test mov dec mov test sub loope xchg test cmp pop and es push dec outsl inc jle into out or jns sahf xor jge jo or cbtw pusha sbb out hlt add push xor pextrw jle pop add out mov inc mov or push pop les cmp and lock dec cmp lcall pop scas sbb adc fldt xor sub movsl cmp jno scas in xchg cmp or inc mov js cltd mov scas fldl in inc out out fidivl movl call adc jge lods cmp ds jle arpl lret xchg aaa push cs sbb pop fcoml adc (bad) enter hlt inc leave repnz call inc mov mov stos jns cmp addr16 mov push jae lea out xor add aas mov imul imul push xor and adc cs mov sub ljmp jle test dec dec jbe adc nop adc mov mov cmpsb lret dec pop imul sub out pop add adc jmp lea dec push ret mov test aaa mov ljmp pop xchg add rorb xchg mov mov add pushf outsl int3 imul mov mov mov mov pushf (bad) pop add insl pushf mov and inc mov adc and ret movsb fnsave xor mov in loop xor movsb mov loopne ret add cs in subb jne gs jl stos xor addl enter in cmp mov sahf xor dec cltd push xlat ljmp jb mov add sub mov cmp xorb pushf adc push adc dec mov jbe or test faddl pushf outsb dec adc leave cmp mov fcompl pushf mov stos jecxz adc inc adc orl mov rcrb nop or mov jns inc scas scas pop rcrb inc xor mov add pop or pushf loop push sbb bound data16 or dec les inc xor push add mov ja push dec lret mov push cmp or nop clc addr16 (bad) mov push pop cwtl push adc pusha adc test sub mov dec cmpsb test xor xor or rcrb vminss loopne xchg in xor cld or or popa js (bad) jg or add adc add test insl push pop fadds les pusha arpl jmp dec cmp daa icebp cwtl xlat adc dec sub dec (bad) jo test movsb mov ret je jo dec nop sbb cmp jns or sbb mov stos int xor cmpsb adc rorb xchg push loope dec push or les clc add xchg out add imul sub add mov test mov and pusha mov out pop inc mov dec pushf ljmp cmp sub data16 (bad) jne mulb sbb in and add cmp add (bad) arpl in adc cmp icebp mov pushf je or cmp lea mov fcomps xchg mov pop inc sbbb add or and mov push dec hlt js mov or leave js enter ret cld (bad) hlt fnstsw push pop scas add enter aas cwtl adc jb loope add xchg rcl jbe jb adc mov inc aam adc stc xor movsb add scas fidiv xor mov lods andl xlat lods mov popa cwtl sub mov aam mov sbb sub adc and inc jb or inc inc popf sbb and push dec sbbb stos shll adc and and push (bad) das cmp imul xor add sbb dec ljmp cld or adc mov stos es cmp popl mov add add inc jne inc dec cwtl movsl inc std (bad) loopne je or add add xor mov pusha lret test dec fnsave pop sub and bound jbe and add mov stc sahf mov lods mov add inc std ret mov add pop add pop ja pop cmp pop lret inc xor jmp leave testl rclb add pop (bad) lds xor jle dec leave jnp adc jmp jns test xchg mov fdivs cmp and hlt ss add imul pusha out mov sbb test jge push pop adc adc pushf les std js xchg mov leave fs xchg enter cld js and mull (bad) stos sub call mov xor xor movsb xor std add hlt aas dec inc mov add bound and cmp and mov sub xchg sub add ret and notl test cmpsb test mov or mov icebp dec pusha sahf cmp mov inc in aaa aad sub mov xchg lods push cmp and pushl in cmpsl inc add (bad) and insb adc lods jno pusha nop mov dec jle push gs or test jp or sub dec sbb xor pop cli icebp xchg loopne lea push xor add mov and loopne mov insb lods and or mov jg gs or jne push mov sar xor gs bound shl iret and xchg mov inc jle pop lahf ds add inc inc addl mov data16 int mov lock popa pop out and movsb mov nop lock inc out xchg popf nop test jmp mov stc add lahf in dec jmp or jae and mov scas sahf xchg mov mov push cmp lock shll sub pusha sub pusha pop adc in nop push fst push pop mov js andb dec lock or and je pop in clc xor or sti xor andb in andl adc push pop inc jle pop inc mov inc push es jbe xor and sbb push sti roll in pop out scas stos mov pop maxps mov rorb adc and cmp es mov sti xor imul insb imul cmp ret xor jne aad cld loopne dec rcrb adc add loopne test pop inc mov sbb lods push subb je loopne jbe aam dec lahf cmpsb fmuls push arpl pop jecxz mov sti xor adc insb or outsb jnp jle stc daa sub sub inc mov sub or pop mov loopne xchg gs xor xchg inc out adcl add mov lock movsb jle and aas push stos or adc sbb pusha arpl sbb add inc bound jl adc lock loope adc out fcmovnb pop pop push add in mov lock pop add push les out jo sbb pop adc ficom mov push add lret push inc mov xorb or pop pop int mov scas (bad) and jle add dec stos xchg ret jg pusha pop roll pop in xchg rcll pop std jo nop mov pop inc jnp adc push imul xchg xor adc add pop push in xor ret push xchg add movsb adc adc sub sbb sub lea or pop push push jne in int enter mov dec push movsb enter mov adc and push mov push and adc sbb mov adc push pop jbe dec insb inc dec push cwtl mov arpl and add ljmp sbb cmpb inc js mov mov xor fcomps outsb outsb jae (bad) dec push and imul xor jnp hlt xor pop les out in add daa cmpsb jb call push and adc mov fiaddl jo add test push xor add fincstp and or add sbb std sub jbe lock enter xor pop icebp sbb jg dec push and pushf mov adc xchg (bad) out adc clc or mov arpl sbb data16 and pushl and sub ficompl adc test imul or data16 pop xor decb xchg mov out add repnz inc cld mov pop lds mov xor lock pop rorb lods xor les jne dec push test inc faddl or js cmpsl sbb and mov mov mov popf (bad) pusha leave inc (bad) jl inc ljmp jl push pop arpl sub pusha popa jne dec hlt dec test sub mov (bad) lds sub push and pop mov fs mov xchg pop movsb (bad) adc ljmp mov movsb test add lods pop (bad) adc jbe add mov dec pop and or xchg je mov popf dec fist fmul inc dec insb pop pop xor (bad) push fwait jns mov inc pop pop cld add or pop (bad) mov test icebp clc push add adc inc sbb dec add add imul mov out addr16 add jo dec cwtl fsubrl mov sub dec pop int3 push push dec adc dec push push lret cmp xchg mov push cmp lods adc mov add scas and jo cs clc xor scas sub test test in xchg jno fstpl add or addl rorb add int3 pop pop lods in or or data16 rclb xchg push push xchg jge dec push sbb in jbe inc add sub scas push test fldl inc or or dec sub les inc (bad) (bad) or mov jl dec loop,pn cmp add cld fisub mov js jmp pop cmp add dec pushf sub nop addl mov fildl pop jno,pn in push push sarl add sbbb fsubrs aas arpl andl sbb mov push jne xchg dec inc sbb and jmp dec adcb push cwtl dec mov or pop sub nop adc enter int3 imul data16 pop adc add fisubl jecxz hlt pop xchg lret mov mov das push (bad) cmc std movsl leave aaa or xchg pop and cmp inc dec pop xchg add dec push (bad) inc sti and out pop mov inc inc mov bound mov lods and movsb fdivl jecxz loopne imul sbb add pop scas (bad) jbe pop lcall shrb test add push push mov xchg outsb clc push dec push scas add jb ljmp sbb jle xor jae mov adc inc mov xchg mov js cmpsl in mov sbbb insl cmp aaa and clc adc push test dec subb repnz pop (bad) jge add out fisubr mov cli and fcmovne aas cs and push rolb daa mov cmp inc ljmp notb je mov fs cltd and xchg fnstenv push subb mov sahf xor inc lods pop pop arpl in in orb sbb mov mov add in xor dec jo add insb xchg dec bound popa xchg nop iret sub dec dec xchg push cwtl xor scas adc insl pop add mov mov dec data16 xor push test xchg fildl pop js je movsb sbb imul fs leave imul or sbb add icebp jecxz jo pusha mov mov in scas add sti cmpsl es xchg push sahf and out jle rorb or mov pop and dec push pop mov cmp dec cmc jo loopne fs xor pop es (bad) dec test fsubs (bad) xchg cwtl iret pop test stos pop js mov sub lock int3 clc ss inc xor fs xor and call sub xchg int3 (bad) xor mov enter mov aas inc sub or in jle mov inc push gs sbb rclb rcrb orb inc pop les mov arpl out cmp add and pop xchg arpl cmp pusha call inc or aas lea mov ret pop (bad) jo xchg les in cmp add je add mov or or cmp sbb in hlt cmp sbb scas lock xchg call test pop (bad) in or xor fild imul shrl mov data16 xchg es push add sub jbe cmp mov cli jo sbb sub pop mov push outsb or jbe cld pop dec push and or pop nop mov das daa push movsb hlt cmp push insb imul cltd mov adc (bad) cmp fsubrl pop adc add arpl gs adc enter in lods addl dec sbb jo nop test lret jno jnp mov sbbl sub dec add repz push pusha cs scas add ret inc jo add mov push dec inc hlt lcall adc int3 dec pop or mov mov jl mov inc loopne xchg decb add and mov loopne mov sbb pop and jecxz cwtl sbb pusha sbb xchg mov scas dec jbe push inc arpl pop inc sub adc add adc shr sub dec insb mov shr loopne sub sbbl out (bad) pop test push daa sbb lea pop pushf clc ljmp add stos xlat mov cmp into cld cmp daa mov data16 mov in or push mov jnp mov popa pop into adc mov inc int3 in or js add lea (bad) jae push loopne fsts shlb mov adc push (bad) dec jo rclb pusha jne cwtl shlb jo jnp add mov push in sbb sub sub xchg pop xor lahf add test (bad) adc pop push or jno jo or cmc sub call xor (bad) sarb dec add fsin sub addb xor mov pop mov mov xchg mov pop mov popa mov idivb int and mov pop cli mov aas mov sbb sbb cs cmp mov les push cmp sbb push adc mov dec into sub inc pop mov cmpsl jnp sub mov lock mov adc fs pop aaa cmpsb jle out test xlat cmp inc fldl push jge pop jecxz,pn add jle fiaddl mov inc jb push int3 cmp mov pop daa (bad) mov mov mov daa cltd mov fninit push pop mov mov sahf outsb into imul sub cwtl jns loope daa add gs test pop lret lock cmp sub push lods out jno cwtl cld xor mov ljmp arpl fstpt cmp (bad) xor iret dec xchg sub pop lcall outsl cs (bad) sub enter inc loopne loopne cmp scas int xchg pop sbb jg loopne push mov sarl adc adc gs xchg lea mov and adc push fcompl sub into add loopne push or xor (bad) int3 sub pop aaa or jecxz addl dec push dec loopne push jae sub add insb and outsb leave add pusha jecxz lock (bad) fstl std mov mov xchg (bad) flds pop push adc sbb mov jge push fnstsw enter insl sbb pop es xchg fstl in mov jno iret and mov mov xlat and mov cmpsb clc mov push push push out hlt subl dec inc loopne orl inc xor mov jbe,pn mov pushf andl mov xchg arpl and outsb mov adc hlt inc add and fadds jecxz lahf in decl sbb or and push push fxch pushf jbe in stos out pop inc or mov and fcoms xchg loope cs pop enter add pushf imul scas dec jp push lods in jnp add and or out pop (bad) add (bad) cmc les mov jae test dec jle jp sbb (bad) and into jne add lcall scas (bad) stc movsb ret jno adc jbe xchg add adc inc add repz mov push cmpsb subb lds xor push (bad) movsb insb jno dec fldt les push mov add out pusha jle imul inc pop and mov sahf pop test in out roll jbe andl ror add fsubrl out lods push andl fiaddl lret and dec and or or or mov pop and insb adc sti adc mov movsl lret or rolb pop subb mov subl pop and movd mov hlt ret sub push in cmp cmp (bad) pop lods mov dec cwtl pusha fcoml mov adcl loopne xor dec add notb pop fcoms dec cli clc orb stc test mov push add xor mov jns,pn lock jmp dec push mov and xor adc pop cmp loopne das ret in faddl inc xlat movb mov add arpl pop push loopne out jp jbe sbb cmp stos push sbb xor add fucomip sbbb inc mov inc push cld add and sbb sbb add int3 xor mov pusha pop pusha andb xor adc mov xor mov or scas es loopne addb mov nop cmpsl jmp dec xchg int3 stos mov into insb in testl cld xor mov jmp xchg add nop notb ds (bad) and sub pop imul bound call cmp stos mov xor lret fwait push das sbb jp or jge std push je inc ret mov sub add adc pop pop add pop out outsb adc pop leave xor adc hlt mov pop or stos popa fsubr pop mov mov dec js (bad) push cmc mov push xchg and icebp xchg mov inc pop pop js dec cmovg int mov mov mov pop outsb pop fmull (bad) xchg daa and in push dec mov inc jnp (bad) mov lret leave js and cmc mov aam push xchg inc inc cs xor bound mov cwtl add push in test push (bad) fmuls in or and scas xor jae mov dec data16 jno xchg cmpb cmp mov jbe ret enter fnstsw adc daa jge and adc add xchg sbb dec mov mov mov sub sub dec test add pop add out add add (bad) pop add mov stos lea cmp jl sbb (bad) lahf adc mov lahf or (bad) jbe pusha dec pop cs lock push mov xchg mov and repz sarb cld pop mov and (bad) jae add xchg mov cs nop out fstps fadds or jg pushf push cmp push dec je dec jo pusha sub loop stos out test lods into mov cwtl orb adc add mov dec fnstcw cmp pop loope adc lock and inc fldt inc inc add in lahf pushf xor jae add int3 movw xchg pop and out push lock mov or sub dec jle jg scas xchg cltd outsl loopne pop addb sub mov stos push mov pop mov add and mov mov mov pusha jle shll xorb nop and lods mov xchg mov pop (bad) sbb mov icebp push inc mov lock mov push int3 sub or lds mov xor add mov in pop mov push mov sub mov mov sub mov test pop cld xor sub pop loopne es pushf and sbb inc mov mov test adc sub scas cmc add mov mov nop rolb jmp daa push sub pusha in fldl cld loope imul mov out fidivr add adc jg add dec adc sub dec lret mov cli pop mov ret (bad) int add inc push adc or or les call test push in js ret roll stos xor test push rolb ds call shlb dec push in or dec cli xor (bad) pusha test adc push mov or xchg sbb (bad) xor pop add pop es call dec cld (bad) fcom add sub fisttpl in or pop jo add inc pop lds mov (bad) mov frstor insl jg lock xchg or add stc xchg loopne loopne add rol xor sarl fcompl cwtl test jns adc cmp push sub andl add (bad) call out and pop cmp subl cli and xchg jo push add push in das loopne fidiv cmc nop test hlt stc out ljmp insl or sub loopne and sbb test jle add data16 insl mov add mov cwtl mov xchg push cmp inc mov pop xor movsb cmpb cs imul mov fdivl sub mov and push xor je popf adc pop insl mov xor (bad) xlat pop lock pusha insb lds add (bad) lock rcll adc int3 inc repz pop push cwtl cld sub cmp enter mov repnz and (bad) call dec pop leave and mov jl movsb add add into adc enter icebp enter jns add ret into or and sbbl xchg lcall (bad) cmp xor into rorb das sub push jo add imul pop fsub and out addb lcall add fs push into inc aad xchg out dec mov mov clc (bad) jns or in loopne mov (bad) insl gs rorb ret cmp out add stos cld (bad) push int and xorl add mov subb outsb pop shlb adc aaa subl push lods and (bad) aam sub pop or pop xchg addb jge add lock pop into lods xor (bad) mov loop inc push add inc mov mov fstpl test pop pusha sbb pop and ljmp and mov in rcrl pop jmp dec test dec lods push xchg repnz cmp arpl sub push lds or add fist dec dec mov int push adc and in mov inc adc add int sarl add push out mov les test inc lret mov repz jl fnstcw inc call pushf mov pop loopne inc nop adc bound shrb or adc and add test cmpsb or inc add icebp jecxz adc js les sub in add pushf aas out adc add jecxz mull add inc movsb ljmp mov (bad) (bad) mov lahf add and add wrmsr into mov in adc jbe add (bad) lahf push and xchg sub sbb push inc xchg hlt xchg test mov pop (bad) add jecxz test loop or je pop loop or jmp fcompl les sbb popf lahf test cmp pop out jno pop adc test aad push test hlt pop push out jo mov loopne xor icebp add and popf sub rcl inc incl push mov push and pop inc jge (bad) xor mov cwtl nop xchg pop mov cmp adc mov sub loop sub lods test cltd nop mov push inc cmpsb xor inc adc dec data16 and xchg loope rcl call add lds push scas adc (bad) popa jno and and cmp es inc data16 pop xchg scas out lods add lret jns pushf inc cmp adc stc push xor in pop hlt push fs xor dec or adc mov inc bound and mov fmul gs adc imul add mov mov mov mov repnz inc ljmp int dec sub lret or or (bad) and or cltd into sbb pop dec pop inc or popa sbb dec mov dec mov sbb loopne xor mov les add test sbb adc sbb rolb ja xchg jo cmp loopne imul fidivrl push fmuls add cmp lock test mov faddp add outsl xor mov add xchg cmp shlb add loop and pop add fildl lahf sub jbe ds cmpsl cmp iret push pop mov mov mov jns adc and lods loopne cmc popa int3 push sarl push sbb or in adc adc dec insb push add in mov pop and adc mov xor dec pop add pop mov out adc test sub xchg dec xor inc aad stos mov nop mov flds bound mov sub cmp dec add push outsl loope sbb cmpsb test jnp push sub ret or xor push pop dec adc loopne lds cmpsl in xor xchg jp inc mov inc add sbbl sub adc add ficoml lea push test bound das loopne in out sbb outsl xchg push lods es sahf or jl cli adc mov pop adc scas aad aam test jns jno ja pushf sbb sbb or cmp inc clc mov add add jno pushf dec add leave test movq cmp pusha sbb push or add xlat mov out and pop fucomp cmpsb mov loopne call in test pop mov mov (bad) in inc cmc aad dec rolb cmp out test test mov outsl and enter mov (bad) push pop test inc out icebp cmpsb inc out mov push adc loope push adc xor mov dec fimull add rorb add sti and pop jmp pop inc lds mov inc jno fsubr js xchg outsl push pop movsb orb test nop jb subl jo enter mov fwait (bad) lds test inc pop ljmp jmp in mov lock inc mov adc sub pop xor lods cmp cmpb pcmpgtb adc repz sahf pop ret mov cmpsb pop cmp mov xor jbe lahf mov push jno shr xor loopne or cmp (bad) sti cwtl mov cwtl es push inc subb push pop jnp pop mov pop xchg cld movsb call imul push add or enter out xchg mov stc sbb lods adc mov mov sbb nop cmp cli or sahf mov test outsl rcr (bad) inc (bad) cmp fisubl add or inc test shrb add jo jno fsubs rolb push pop lds pop pop rcrb add in test add inc aad in mov adc or js ds scas cmp inc gs and dec mov adc push mov sbb mov aam in les shll sti xor mull push shll ljmp xchg inc in stos movsb add inc dec rcrb mov inc or fdivs inc add frstor mov xlat sub mov lahf cmpsl xchg or movsl out in sar push pop clc pusha out (bad) or dec adc pop mov adc repz push inc ljmp sbb in sti cs nop sbb pop out pop sub xor mov enter add mov aaa push xor (bad) jb mov orps leave sub lods andl cmp jmp pop scas stc sbb ljmp pop add es rclb nop mov adc push mov (bad) sub add add jae or adc cli dec jno mov addr16 jmp pop xor sbb cmp xor cld push dec scas test adc dec dec xchg mov pop pop pop lods insb sub aam cmp daa cmpsb sbb in pushf xor jo push lods (bad) call add add nop aad out cmpsb pop sbb fiaddl int3 cld mov add lock in test mov push xor insb push adc push test fsub add and insb add xor sbb rcr mov nop add cwtl sbb movsl mov ds xor cmpsl xlat cmp add jae (bad) fwait mov stos iret adc daa and outsb sahf rcll and movsb les test jl push jmp arpl jp aad ljmp test and xor popa adc inc jl (bad) dec lahf mov dec pop out nop js jno jg (bad) fldcw scas popa cmpsb inc clc scas mov clc pop jmp pop or xor mov adc mov dec test mov jns push out icebp mov sub cmp pop mov sti push dec pop movsb cmpsl out mov pop push push or ret rcr pop aad and push sahf pushf nop xchg sub je inc aaa push hlt xchg add js cli mov dec loope jb inc popa stos jno jle adc out dec xor cwtl xchg pop data16 pop adc pushf js mov sbb sbb in int3 or inc push cmc syscall mov inc cmp jb sbb cli jae mov mov out dec jo or inc mov mov and push jo inc rcrb scas adc sub cmp add loop pushf push inc pop (bad) rclb or add inc sti inc icebp loopne,pn mov sub fstpl loope pop push add or cli fimul je xlat inc sarb jo cs sub aam dec pop test daa or sub and outsl es cmp xor inc mov inc pop and xlat jno xchg out lret aam jmp nop or andb xor mov dec adc mov fmull mov jae push pop cmp out js and fwait pop pop inc pusha xor push out add (bad) clc movl popa add fistl sub aaa cli divb sub add pop xor inc test push add push mov and and push das notb xchg cmp push add out mov push push xor mov cmp jnp shrl add mov ret pop jp bound dec inc loopne leave in jns push test cmpb pop sub xchg das inc call dec dec xchg sub inc or and and mov mov mov jbe adc pop jp pushf in pop or pop pushf xchg cmp jmp push jae inc and std mov pusha fsubs pop adc ljmp int3 aam mov mov push nop les adc pop add jne add ret mov or fmull hlt fisttp call mov cmc icebp aad adc mull jo pushf add divl adc dec and push in lds rcrb fadds jns out and fist dec mov insl (bad) push push pusha clc push cmp sahf dec rcrb in or nop cs xor test addl pop mov stc push xlat out lahf mov es mov movsl and lock xchg lods add mov js push adc lock (bad) push inc cmp in outsb dec push mov nop push dec and sub or xor add jnp,pn aam jbe or out lcall jle xchg outsb (bad) jo lret dec test dec dec dec cltd loopne js xchg sbb or call insb or xorb pminsw xor test and pusha jmp hlt add fistpl lds js test ror and fimull and adc sub mov scas pop add push ret dec int3 sbb leave cmc sbb xchg lods add int3 loopne pop jnp cwtl inc pop jle inc mov testb test cli je pmulhw xor cmpsl enter mov shlb pusha clc xor movsb cli (bad) clc mov lret and adc loop (bad) stos stos and jge bound push and (bad) (bad) and popa mov and sbb xor test inc sub push or cwtl pop push cwtl adcb add rcll hlt loope cmc or (bad) sub nop (bad) lods stos inc cli and add pop sub pop dec (bad) push shll int lods fs addb inc js cwtl xor es nop push mov push adc pop incl stos push cmpsl mov mov mov mov (bad) popf mov mov outsl mov enter in push xor mov faddl psubsw aad lock movsb dec pop sbb jbe cld cmp add test mov call mov or push or add and xor fdivr shll dec jns xcrypt-ctr cmpsl lahf xor icebp lcall add inc fsts pop xor pusha pop jo lds jp dec popf or aam mov adc popa bound shrw js pop cmp ja mov add fs adc pop idivl (bad) jb addr16 call inc add adc mov mov sahf jae imul cmp fdivs inc pop cltd add iret mov insl mov pop jno and push cmpsb xor mov add cmpl add mov push xchg je add scas incl cmc rcrb inc (bad) or roll ds addb add fiadd add push add mov insl mov jge jo mov mov rorl fild push aam jno push adc pusha or mov cmp cmpb sub mov mov cmp add cwtl push cs jmp mov push fdivrs pushf sbb or add out mov add mov sbb loop pop push add sub mov stos fucomi (bad) fsubr fwait int3 jmp icebp adc and clc dec sub jo out int3 xor and inc repnz push push push add or arpl in adc stos orl sbb sub jecxz sub and cmp add xchg sub (bad) cmp ret sahf push arpl add loopne call sbb pop scas push (bad) sub incl mov lock or out sbb clc iret mov sbb adc aam mov sbb (bad) cmp mov add inc int3 jne pop lcall mov rorl and add xchg mov lock xor add addr16 jo mov jno xchg pusha jge loopne imul jmp pop mov mov jo in dec mov fdivr pusha dec dec push cmp pop bound sarl fsubl mov scas add push popa (bad) jmp mov jl cmp mulb jnp cmp jmp xchg add sub loopne add push test adc cwtl cltd mov js mov add rcll or (bad) int loopne push inc icebp pop mov push xchg rorb sub lock lea jbe stos cmp adc test push jl mov clc inc dec xor mov dec cld sub mov sbb mov add mov jecxz aaa pop rol das loop aad hlt pusha xor pop push xchg xor sbb and fmuls add dec xor lahf add sbb add repz out xchg jb sub (bad) pusha and and int add cwtl pop pushf into mov imul test jle inc (bad) add mov jmp add pusha push xchg out mov shlb imul add pop andb int3 inc stos xchg add adc into mov sahf dec call mov push jecxz mov add lock call pop mov imul mov enter in xchg (bad) (bad) jb and lock out iret or loopne add lock mov (bad) cwtl or add andl pop in out fsubrs inc lods inc sbb arpl call psubb xchg fadd jmp jmp outsl push push vhsubps sbb stos add (bad) rolb cmp and (bad) mov je loope jae cltd jle mov xchg jecxz mov loopne std xchg add out js or and icebp adc dec lock add aad (bad) xchg push (bad) testb jl arpl xlat dec pop sub dec lods add into fdivrl push xor jb sbb les jno xchg push cmpsb xchg cmc nop xchg adc movsb or add mov je loopne pushf lock sub mull mov outsb add loopne test test or scas pop mov push pop (bad) mov sub sbb jg out (bad) xchg sahf or or cmp sahf out inc push aad xchg or adc bndldx mov or pusha sbb fisttpll adc sbb shr jl rclb push into out (bad) rcr fs addr16 inc xorl push ret insl arpl xchg jne sarb push lods fisubrl cwtl xchg enter arpl push or dec sub addl xor xlat add movsb je or cmp mov inc push lea dec sub ds or sbb call lods cwtl jbe adc mov xor and cwtl fwait cmp jmp scas in movsl add lock mov lea xchg mov xchg mov pushf xchg or cltd rcrl test push mov adc push cmpsl or mulb jno mov pop sub or test mov lahf mov aad fildll sub jns add imul cwtl pusha mov lock jl lods cmpsb mov addr16 (bad) mov pop inc jl adcl mov xor clc add dec rclb sbb bound or sbb es outsl or or (bad) (bad) insb imul loope jns lods mov cld jb and arpl int xchg cwtl lea test and mov inc jl jl mov pusha dec fcompl push xor jl or mov pcmpeqd mov mov in sub nop clc roll xor aaa incb pop inc sbbb aam lock nop mov inc xchg es ret js inc lock pop pusha js out fbstp in mov cmpsb or inc fcoms and in sbb sub xor sbb or sbb (bad) cmp xor out mov aaa mov xlat and and (bad) jne mov push dec popf mov stos (bad) sbb mov lahf adc movsb dec adc dec (bad) (bad) xor xor sub cmp pop movsb leave insb popa dec add (bad) mov sbb add das cs cli pop add inc iret jnp xchg xor stos dec sbb xor jnp or or in ljmp xchg xchg cmp add sbbl dec loopne sbbl mov sub xchg add xlat je out add sahf fnstsw dec cmc (bad) mov data16 and jl inc out insb sbb mov call jl lods mov insb or or bound xor daa jl int and cmpb jns es and add add test clc movsb sbbb aaa movsl inc and push negb ds xchg hlt dec add and xor mov push lea xor inc jno adc xor dec cltd inc fbld iret idivb icebp and dec adc roll and add mov loopne xor cmc pop pop add aas jge test pop pop js dec push fmuls nop int sbb push jns ljmp jmp add sbb xor add jmp pushf aas orl sub sbb mov add jbe adc std add push cmc or fdivl jmp fldenv xchg int3 mov adc lret cld xchg adc and inc add jmp mov push jno sbb in add cmp jecxz mov aam cltd inc pop dec xor mov adc fmuls inc (bad) shlb icebp rorl cmp jns (bad) cmc lock jle cli add push xchg add push (bad) mov mov add push lret out pushf pop in push ss mov sbb add xor push clc inc dec (bad) cmovo jmp adc dec or and add jmp mov and pop add frstor adc pop (bad) in pusha adc sub stos xchg jbe in shlb jecxz push imul jae insb pop or xchg mov dec int3 sti nop test loope fisubrl sub pusha xor add imul add sbb cwtl add push mov mov roll or pusha mov pop jo js fcomps dec enter inc mov cmp fdivs adc sbb adc cmp divl mov test subl sub int3 subb sbb adc in shrb sbb icebp cmp icebp dec cmp cmp iret xor (bad) stc or lock fucomip icebp inc adc sarl xor inc test scas sub jno loop push mov mov stc push inc pop stos adc ds aam inc aam jne dec imul sbb or scas mov xor adc loope mov fdivrs test (bad) test xor push and popf jle inc incl rcrb hlt repz xchg and mov pusha add xchg fsubp mov pop adc lcall mov repnz aad lods inc insb (bad) mov jg adc or sub mov lods push dec sub xchg inc mov loopne gs pop push fcmovnb jno pop push std movl and jl pop add mov xchg and mov into add pop dec test cmp in push loop push or push push inc and fwait stos push scas dec (bad) xor jg mov cmpsl add ret xor mov pop or es es addb loop mov enter mov out jnp cwtl cwtl dec sti cs sub ret in das out xor pop dec in push jmp jle add and call movsb jns push push repnz fnstenv xor sbb je push and call cmpb add lahf inc (bad) bound push cltd mov fs add adc pushf popa sub push out xchg pop pop push push jbe loopne sub pusha fs (bad) int3 and adc inc rorb cmc xor or test nop or or and ss pop arpl scas jecxz (bad) enter inc pop add sub test sarb scas add jl cmp rcrb dec ret cwtl pusha and pop adc mov fldcw adcb sub int3 pop jmp out and arpl dec fbld pop mov mov push or into xor or icebp lret dec and sbb movsb xor lcall push aad jb pusha nop sbbl cmp mov inc cmp nop add test (bad) enter mov add add dec int3 push cmp cmpsb cmc inc mov or (bad) pop xchg xor nop or or divl popf fs cltd aam add cwtl js xor into int3 cwtl lods mov sti clc (bad) mov jbe or sbb pop (bad) pop mov add arpl sub push and int add lods ss jp addr16 add shlb cmpsb sub lock shl (bad) mov add in (bad) fiadd pop cmp adc xchg popf sbb (bad) cld sub in call xor xchg cmp or add imul sahf or push add jno jmp cli and mov jno add pop mov or xchg xchg add insb jl push aam sub shl add adc cs idivl xchg mov data16 ret aam pop or enter cmc test mov or cmp mov test movsl mov lods push or pushf sbbb stc out and pop fdivs out add les and pop enter xchg sbb andb adcb ds dec clc inc dec mov aaa or shll sub roll cmp jo test mov nop enter push push sub cltd dec mov call scas out inc fisttpl rcl in ds nop (bad) aad adc or or (bad) ficomp add (bad) aam add push mov out push fdivs xchg xchg in or mov (bad) and icebp add push pusha cmp add jl pop cmc sbb fwait add or jo push adc in add enter sub fadds jno sub or mov xor and sub inc and in jns sub stos sbb cwtl pushf pop cmp jb pusha pusha add popf lock or (bad) ja inc insb (bad) sub pusha jmp mov (bad) xor add pop mov lods push ficomp push imul push or pop ss adc push adc aam mov add loopne mov add adc pop inc js (bad) adcb daa add mov lea add mov cmp lock ds (bad) out pop sub sbb xchg aas xorb pop fwait xor xchg xchg call or push data16 cmp and mov lret pusha inc jo outsl dec sub adc nop adc sbb sub jmp cld mull xchg and dec cmpsb inc imul mov sbb push mov inc and in and add mov ja dec fldl add inc and repz ret pop fistpl pop xchg push mov pushf test clc insl adc pop xchg aam jl enter dec xchg push push jp dec lahf push mov hlt arpl cwtl jnp mov ja mov push adc sub xchg push adc rorb cmp nop rorl clc (bad) jne and push sbb mov mov call fbstp push pushf in or fdivs or adc repnz cwtl rorl neg add iret inc pushf inc (bad) xor add clc nop dec add lcall faddl cmpl nop clc pop js mov aam lcall mov inc push mov cmp cli (bad) dec lock mov jnp pop wbinvd js add sahf cmp sbbl pushf xchg imul aaa leave dec xchg sbb fcomps nop iret hlt mov int push pop xchg cmp sub push push and aaa xor adc pop idivb pop jno mov jnp arpl or add sbb cmp out jbe add sbb sbb (bad) push mov sbb hlt enter sub mov jge mov xchg sub shrb pusha pushf out aaa mov bound add and rcll adc pop dec stc xor es (bad) fildl jle pop sub (bad) pop mov gs adc xchg cld lea and and jb cwtl (bad) mov hlt mov loopne cmp fs push fwait test mov fisttp dec mov and mov lcall xor out add (bad) or in cmc icebp testb sbb jg inc dec stos mov xchg push xchg sub cwtl pushl fld1 add push call jae icebp orl mov and icebp cmp lock adc push ret scas jo pop adc test insb sbb popf cmc movsl enter dec in add inc (bad) xor pusha adc xor mov inc shrl or jle pop mov int3 int3 js fs jae add push les add shrb mov test leave mov cmp sti add popf mov fldt push fimul sub mov dec dec js ljmp inc es jp int es mov aas ja out lock add cwtl out or sub sbb loop jb or add dec (bad) jae mov imul or xor or push adc sbb movsb pop lock xor mov call mov push pop xchg insb add dec (bad) jnp push sbbl nop loopne add into xor mov loopne je dec (bad) in stc and jle (bad) cmp adc std mov adc pushf inc rolb cmp mov mov lods arpl ds push push mov sub sub and or stc rorb jns sub jecxz fs cltd mov pop dec aaa cwtl roll sub cld fdivs mov xchg dec aam sbb stc adc mov lds dec loopne int3 or imul inc dec inc xchg dec xor cld out mov ret or cltd xor js cwtl sub xchg inc scas adc pop loop (bad) arpl inc stos (bad) and andb sbb xor dec cmp out (bad) sbbb aas sbb fcompl dec sti mov fld xchg mov xchg pop mov les adc ds inc loop (bad) ss mov add or sub and adc aas push cmp lds out mov nop pusha xor add mov ja xchg clc ficoml (bad) loop inc sarb adc aam popf add jle pop pop mov lock sub aam xchg pop dec inc test sbb repnz test or js add mov sbb mov mov jno xor adc mov js cmp sub lcall rcrb cmp int dec push pop xchg add cmp (bad) out add jbe xor data16 fcmovne add cli xchg inc add cmp and arpl loop ss test sarl jl or mov or jbe lcall icebp outsl adc fwait and xor push dec les loopne dec push mov push and xchg or lods mov xor xchg movsl lods pop test push mov add bound roll lret stos dec jp push out push cmp (bad) xchg sti inc cmp outsl sbbl xchg cmp jmp mov mov or cmp xchg hlt adc or xchg sbbl ss push inc xchg hlt (bad) aas and dec jbe dec or push cmp jecxz adc pop test (bad) lret mov pop sbb mov mov mov adcb movsb fnop cmp pop mov add rcr pushf aad cmp inc add pop arpl stos insb xor inc and jg clc add test movl and imul mov nop (bad) lock add jmp cmp aam imul js mov adc push pop sbb add mov in daa adc (bad) pop xchg mov add mov adc jg xor mov orb or cld inc push cmp cwtl icebp add leave add enter xchg and add inc adc pusha push ss pop std mov negb or xchg dec nop pop jmp les shrb jmp aas icebp add mov jl push loope sub add pop or movsb (bad) push adc mov js mov pusha sub push sub fldt jo xor ret cmovs push hlt mov popf aam jns push ds jne sub stos or push mov mov sbb jmp inc sub mov lea loopne xor sarb add sub dec imul push fcoms or jmp ret add or icebp mov pusha push cmp add add cmp mov test ret call popa or sbb cwtl repz mov or and pop add jl insb int3 mov cmpsb jmp and mov cmpsl out xchg pop mov jbe aad and jg dec push mov mov fcompl or pop test mov mov push hlt iret or mov aas fildl sbb pop push loop xor icebp fs add mov adc mov mov push nop sarl roll cwtl jb rorb (bad) jo out xor and sbb stc mov push stos je bound rorl xchg outsb es xchg add fistpll sbb add mov inc jb pushf ret addl cmpsl sub push push les mov stc imul mov or add lds (bad) adc mov les cmpsb aam or sbb cmp sub xchg xlat adc mov pusha inc movsb adc fcmove test int3 in and (bad) in pop sbb mov arpl xchg add jae stos cmc push and push icebp andb inc add ret add fldl inc popf fildl adc fcomps int3 add cmp aas shrb ds icebp repnz movsl (bad) adc xchg sbb lock aas jl insb sbb sbb lods popf shll mov pop xor mov sbb pop push jne mov pop add and aam pop mov xchg ljmp andb mov add cwtl jl movl test sub sub or mov fmull dec and add push and mov or (bad) and int and cltd fcompl mov cmp into jo cmpsb shrl jns adc mov mov fs pop inc mov rcrb mov or insl xchg push and pop inc or or add pop adc mov incb icebp repnz push cmpb repz test enter mov inc mov sub subl das mov mov pusha jg mov inc push mov stc arpl and out ficomp popa add aam int sbbb sti arpl jbe xor ja xchg shlb jmp dec int3 push sbb and stc push push cltd je push fcompl fsubl outsw outsb fistpll pop je push jnp lods dec pop test dec adc sub jp push sbb pusha and add inc xchg ljmp lahf inc cmp popa fldenv mov ss sub xchg mov cmp push sub push adc je cmp mov adc jno fs push ss dec xchg loopne adc add loope ret and decl mov dec mov orb pop andb outsb push (bad) adc or js adc adc xor sub movsb or or adc nop add jae int3 push jo cli pop adc and or inc pop adc or mov ret mov push mov mov xchg cmp push mov repz sub push jo ror cmp cmpsb add add in xor aas aam add or (bad) dec pop cmp fwait cmp pop pop mov and cld jmp dec add push cmp js std adc cmpl or fwait shlb cmp dec xchg push movsl aas sub and add adc lea rclb scas pop (bad) pop sub je adc mov mov mov mov pop aas xor mov pop sbb push inc js sub testb mov add jo (bad) gs cmpsl or xor mov movsl test fwait pop fild push inc loope and or and andb scas js cmp lret push jo jnp push mov lahf sub sub mov push and add or push enter push and jo test or repz lods xor jae addr16 cmc sub lods lods nop add ret lods pusha sub stos insb inc pop push aam inc iret or add xlat xor ret push pop test push lahf fcomps xchg test jns adc and arpl sbb add push cltd in sbbb lea (bad) mov sbb dec xchg jb aaa and push cmp adc cmp dec xor ret inc aam mov lea sub dec shlb test dec push cmp inc mov or add jle push cmp xchg pop xchg aaa xor jmp push pop mov mov sbb loope clc lods out dec addb xor dec mov dec lods or sub imul leave add dec jp lret sub test les in add bound inc mov xor cmp in inc cmp jmp push pop sub xchg mov decb fild mov pushf inc enter fidiv lret in lods inc or sar dec add adc mov pop add jmp aad xchg aaa subl pop cmp lcall sbb rol fadds cld xchg add notb dec add push push add xchg xor in sub shll cmp rclb cmp inc add lock add into pop insl jmp repz pusha cmp push add popf lods xor testb xor cmpsb add cwtl sbb subb sub in mov cwtl xor push adc add sbb imul mov lcall xchg jg test sbb mov lret sahf or imul mov ffreep adc and movsl lods sub faddl mov adc bnd lret mov fildl dec jge mov or mov mov stos sub add sbbl cld sub call sbb cmp inc xchg adc mov scas int add lret test jo adc fidivl stc (bad) jo cmp xor pop mov bound hlt sub adc xor clc sahf aam inc push xor lock adc mov push xchg lock dec or mov add cmp (bad) repz pop fisub add cltd das pushf outsl cmp jbe xor sbb dec movsb xchg push push lock int3 jo jns (bad) icebp scas inc dec arpl xor sbb les add (bad) mov je push or xor add frstor sub mov and adc inc sub mov js cmp mov dec and adcb push mov push cmp push jge xchg sub dec mov mov or sbb in xor add daa stos xchg mov test and sub call ljmp shlb clc sub aas mov adc inc fisubr ret call pop add add cmp mov rolb dec push scas and or and xor cmp cmp add adc jecxz in mov aam ret stc xchg jl add mov mov add fs (bad) fimull add mov sbb sbb stos dec outsb outsl cmp sub cld nop fs xchg cmp dec add mov push adc push daa sub xor out ret mov call add pop movsl je cmp sub lods mov mov xchg inc push and (bad) pusha xor adc adc cmp or insb mov push cmp test mov add insl (bad) xor pop add or push and jbe and dec xor insl add mov outsb jg xchg push stos pushf xor cmp sub roll mov adc cmp sbb sub les mov xchg punpckhwd add loopne stos or add in jge ds fcompl incl xchg sbb ljmp mov (bad) sti mov and pusha adc add out cmp jo add mov xor xchg add xor pop in mov xchg mov les mov addr16 add (bad) aam cs (bad) push xchg insb cmpb xlat and ds add icebp adc sbb mov leave add cmc push pusha push xchg sbb in data16 push bound (bad) dec dec cwtl stos sbb clc mov lds pop fdivrl inc cltd mov adc outsl mov cld loope adc pop (bad) fimull lea cmp enter repz movd in ficomp cmp push and test movsb cmp jl add dec jno sti out loop aas adc inc xor addb xor inc movsl push add mov lods add rcll mov sbb sub int3 enter inc arpl jbe cmp (bad) shrl adc push test lret pop notl int3 in sbb add sarb cmpsb cmp lret shll xor pusha rcr imul adc rcrb cmp adc cmc mov jae and ficompl addr16 inc pop xchg insl and inc jle je (bad) icebp mov mov xchg aam xor inc xor push (bad) adc fist test pop add pop mov dec loopne fidivl mov ds sub mov test add cmpsb mov mov and xchg push and es sahf pushf insl movl jo rcrb sub aam mov mov cmp gs jmp add aam sub mov pop and lods fdiv or sbb or add pushf push jne mov add mov test rcrl or cmp les fbstp add push mov movsb mov sbbl in sub xor xor xor sbb and in add stos mov test addl add xor in test nop and ret negb push sahf add or adc cmpl pop adc inc les mov cwtl pop sbb and pusha stc mov out cmp fisubl push add sbb sub push jb rclb jge sub dec and sub cltd inc sub adc add cmp cmp mov or ret mov rcl aad or dec ja sbbl xor cwtl add sahf or mov je je imul push dec push out xor sarl xor push mov cmp aaa movsl bound adc sub (bad) scas mov pusha lods in fist jo bound jb ret or pushf jecxz sbb cmp fidivl xor ds xor mov push pop sbb inc mov jno and or in fisub cmp jno pushf xor mov mov add aad adc aaa cmp jb xor jl dec push pop dec ds sub sbb nop loop daa add sbb sbb aaa daa push lcall add inc les mov out push ret arpl xchg jo or rcrb (bad) fs in cmpl into stc cmc add mov aam sub inc movhlps xchg mov adc xor dec add fnsave imul shl dec jno pop mov popf sub and add xor push or movsl sbb clc daa jmp mov sub (bad) jo adc shll jns and scas and ja inc iret xorl (bad) push je add mov sbb add bound ds adc outsb jmp bswap dec push xor loop lods push pusha mov flds cmp mov cmp (bad) aad pop aas cwtl and stos aam in fidiv sub cmp fdivrl test lock cmp je add or sbb push mov dec adc add addb out scas jle add pop mov add cmp nop ja jno nop cmp cmpb jmp pop adc fwait shlb xor les ret aas mov inc add jnp sub adc dec mov aam mov pushf sbb cmp movsl xchg es adcb mov jmp js test inc push push mov cmp test (bad) je dec sub jo test rol rol jbe or scas test scas (bad) xlat aaa call daa mov jecxz mov mov xlat aam add movsb lret lret mov fnstsw and mov nop dec in dec or add mov adc je sub dec pusha mov xor out cmp out repnz mov cli cmpsb sbb and adc xor popa inc pop lret lds push push mov xchg jo aaa mov cmp and mov or inc sbb cmpsb push xor sub insb fistpl adc cs mov add imul jl cmp hlt daa xchg cwtl lods movsb and inc cltd sbb xor sub test jl test imul clc add xchg sbb int (bad) or push mov and jl fiadd mov pushf xchg push add mov nop pop add aaa inc imul push movsl dec (bad) mov xorb jo dec lods iret fwait hlt shrl mov adc mov sbb inc inc xchg or and xor and fstp test cmp or bnd cmp or lahf mov cmp mov mov jl pop dec sub in mov xchg and cwtl test xor popa sbb in loop test mov and int3 das xor sbb (bad) movsb int3 repnz dec pop in mov xchg pop dec je mov stos add sub push test aam adc adc adc and ret pusha testl shl shlb rorb out insl movl imul pop xor shll cmp mov mov and sub add pop iret test xor sub cmp mov subl cli mov outsb xor aaa mov aad jbe pop xchg or lret fcoml inc repnz or xor in sbb or jp add add dec dec cmp inc mov shl enter fdivs movsb xorb push adc push je xor lcall movb and addr16 and outsl mov mov fidivl ss inc leave sbb stc push push lock mov nop mov rcrb int3 incb mov dec or les push sub enter adc pop pusha or inc insb or mov mov loopne jecxz hlt lds sbb push scas mov fdivr fs or pusha pop add mov inc aam and cwtl mov jle cmp lds xor inc pop ss (bad) enter add push dec cmpsl mov cmc mov inc imul pop fadds inc out add aam xchg add add add pusha lea mov loopne das or or mov mov xchg and loopne jns incb lods sbb call es cmp test inc mov xchg (bad) jl flds dec add xor inc inc int3 lods fdivl mov (bad) adc jle xchg loopne cmp ret xor and sub ds in xor mov daa xor pushf cmpb (bad) and mov adc jle mov sbbb add jmp outsb insb add inc inc hlt popf ret cmpsb shrb cmp jns inc xor mov dec fs xchg adc dec cmp rclb mov inc popa aas mov adc shrd mov shrl add cmp ss jecxz jmp add mov jno dec push push inc push fdivrl aam inc mov in ds xchg roll lret das inc daa jb enter or ret add mov pusha mov (bad) pop movsb in in add mov fwait test pop mov push inc aad add sub sbb push mov inc (bad) mov pop lldt cmp sub mov (bad) xor dec cmp inc dec cmp cmp sbb inc jge popa in mov inc push rcll imul test mov sbbl inc mov xchg xchg xor and and bound imul and xor shrl rolb les mov xor xor dec mov stc inc test mov mov jmp inc push andl dec mov or mov mov mov push xlat popa add add push xor cmp pop into xchg int3 adcl out aam scas or xor outsb add mov int3 and cli aas (bad) push (bad) pop pushf add scas pop add popf add fldl push push push adc inc cmp sub clc push js pop cmc repz aaa test inc into dec add add (bad) hlt (bad) jno pop inc mov push mov jl,pn movsb fmul jge xor sub mov add in into inc ret cmp xor negl rcrb mov sti movsb cmpb mov js add push daa and adc ja stos mov popf addb or jno xchg lret mov and mov xor sbb pusha sbb sbb sub mul jmp push dec dec jle jmp jmp sbb xchg stos popa mov loop andb cmpsl (bad) and sub jbe jne jnp inc aad adc mov leave rcll add test mov imul sbb add fimull xor insb les cmp aas cltd pop lret jmp imul scas pushf jno imul ret add mov fs movsl jne add push add movsb inc cmp sub std push cmp xchg add mov push cmp and sub sbb outsb or jne loop mov add imul push add xchg mov mov lahf push or add fildl xchg lea fisubr add cmpsb mov clc and cmp mull pop pop fidivrl pushf inc pusha leave addr16 or out push aas mov lods lock test push pop or push add movl ficomp aas push rcrb or fdivrl pusha in les and jb or jne lahf sub fstp leave ss mov add in orb mull sti mov arpl sub and push mov and cmpsb aas or jmp sub push in rcr test add or int3 cld movsl jle pop push mov ret mov mov (bad) xchg cmp xor ja and scas lds mov cwtl mov sbb jns maskmovq idivl push add inc int3 xor rcrb push inc js sbb sbb (bad) pop pop push and aam lahf adc sub push add sbb adc stos rdtsc add mov je add sub push sub vpmaddubsw ret and (bad) cld add in adc fcoms add daa mov shrb add sbb es hlt push sub outsl pop add jne sbb push push inc add jecxz adc jbe jl add cltd scas aam add or jl jb mov fistpll inc jmp call mov inc lret adc inc jno add outsl mov mov xor cmp xchg rcll std pop add rclb repz mov ljmp add enter (bad) sbb cmp cmp add add adc mov xchg push insl inc and mov movsb and aaa fisubrl mov lret das call or movsl movsb add dec or mov adc add push pop outsl add add mov sub mov imul inc pusha add jns lahf loopne push add adc mov sub js in add fnstsw pop xchg mov push loope or add ss insb loopne xor dec jmp pop inc fcom add jns and cltd pop mov andb jl lcall add xor xorb dec push nop inc scas mov sbb data16 repz sub cli inc add popf sub add inc mov cmp cmp or inc mov push negb lods push pop and mov je jne add mov mov into ret mov adc mov add dec fidivr roll aad xor xchg rcl add popa add mov sub xor aam push and xchg or ds mov cmp fiaddl clc or popa daa int3 adc or and insb shll push mov jo or xor daa adc cwtl pusha icebp add insl lahf mov xchg sti aad mov aaa mov icebp das jl fadd rcrb cmp lds sub xor sbb shrb subl sub (bad) (bad) xchg xor lock test add adc std and ffree sbbb add dec lret lcall scas add test dec add cmp and jl cwtl (bad) cwtl push ror cmp ss shlb xor mov scas and fcomps imul test test mov and pushf add lahf fist mov or (bad) inc pop add fnsetpm(287 push add xor mov mov ds shrl ret xor out dec lret and repnz imul mov mov enter lret mov or push ja test add jo lods xor jg pop icebp gs add loope mov js je clc pushf jl sbb or rolb push dec test and mov cld rcll mov push inc (bad) in imul std dec sbbb push jl dec cmp aam mov or xor mov ret icebp dec clc mov and adc pop cmp lcall mov add adc nop cmp add push (bad) sar adc cmpsb mov les cli movsb inc xor sbb jmp sub cmp int xor js pop adc jg sarl mov in lods xor xchg or fistl pop and xor rclb adc out idivb pop jns add fidiv js mov pop ss and sub or pop add xor aas pop cltd jle push jge faddl and fstpt mov es daa aaa ss sbb xor inc nop pusha dec das sub adc into fs stos mov or jno in push mov adc dec cmpsl or rclb mov lret sarb das inc pop jo mov pusha in (bad) push or pop int test cld lods add cmp jnp enter nop cmpsl cmp rcl jo add stos adc add mov jg out add divb sub addl sahf mov shrl mov fisubr add ret cmp mov inc aam lods or pushw fadd push add or sbb lret call or cmp mov mov lea je test sub or insb mov add (bad) rcr xor addb mov pop lret in xchg test aas lret sahf sub or inc inc popa (bad) shlb mov lea stc nop (bad) mov pop jb cmp sub sbb inc xor shl add xchg pop pop xchg (bad) cmp into aas mov inc mov test fildll fneni(8087 pop cmp addr16 fwait push dec outsb cs push add jp sub mov push leave popa ss cmp aam pop mov out pop or out in pop mov or loopne ds inc cmp cmpsb cmp xor insb xor lds sub repnz scas mov flds xor sub xor mov cltd jp add push fnsave nop adc stos adc add rcr jbe sub or cmp lods push sub jo jb add inc jne aam jecxz sub add aas adc shrb leave pop test mov (bad) mov mov je adc cmp loopne inc pusha loop pop andb push pop or jbe sbb add adc jl sub xchg (bad) ljmp mov nop mov add out ja mov imul and inc push cwtl jne sub cmp xchg and adc and dec cwtl enter popa mov and lret sahf xchg daa cld andl fs xchg (bad) js sub movsb cmc sbb mov pop cmp push lods push pop inc (bad) xor (bad) mov ror mov jo and jb sbb out ret hlt adc jne (bad) int3 test pop mov enter and sub xor bound inc xor inc std add xor insb loopne lret cwtl or adc js cmp push lock mov add aaa sub ss rclb xor dec push push rolb jo pushf push bound aas inc nop mov ljmp js inc adc adc out cld xchg mov cmpsl push add xchg mov mov and cmpsl cmc aam and jb adc imul incb mov sbb xor cmp loope lods mov insb add fisttpll cmp pop add mov add dec push xchg pop pause xor lret dec movsb jae dec rcrb (bad) lods add dec mov jnp popa test aam or hlt xchg inc adc mov dec std lds and cmp dec fs adc lret adc add inc and sub inc push daa or push pop and rcll xor pusha cmpb in out dec cltd add mov aaa fisubl and push lods xorb xlat pop inc lods orb sbb addl inc int insl ret xchg rolb and lds pop (bad) jbe inc sub cmp jmp aad mov ss cmp fadd push addb cmp daa and add aas push (bad) sbb xchg cmpb pop inc sub cmp shrb cwtl mov add shrb dec inc insb add inc test or icebp cmp insb mov sbb push lret lock and jno popf cmp inc mov (bad) icebp sbbl mov pop add lret sbb je cwtl mov mov rolb stc mov les mov adc lret ret add les aaa jecxz and inc mov add out (bad) pusha dec cmp or push cltd push xchg cmp cmp xchg inc hlt test or fnstsw push test (bad) xor popa in or in pop outsb jl shlb (bad) and and popl add sub mov das icebp or loop (bad) insb mov mov (bad) mov (bad) adc fildl jmp (bad) out mov shrb ret repnz sub mov aas popa sub sub hlt das sbb insb mov dec sub add (bad) pop mov test rorl jge dec pop sbb aam jnp pop dec ret jns jge data16 inc or xchg into data16 cli mov mov pop cmp mov in cwtl xorb repnz or mov movsb sub lods pop mov notl jp xor das dec xor pusha cwtl adc dec das lret dec bswap call fstps clc outsb add js gs movb push adc into ficom cmp adc xchg enter ret or pop and push add dec repnz movsb cmp mov nop (bad) mov sar xor les sarb movsb sbb ret das cmp or cld pusha xor stos fwait push xchg (bad) clc or add aas pop push ret adc fimul (bad) xor (bad) aad or inc rorb add push jo pop add test or loop sbb pop mov mov and dec or push dec lock loop sbb mov pop mov lcall add add dec inc cmp imul cltd sub push lock sub inc pop in xor orl add xor cwtl inc ja bound xchg inc push mov inc lcall xor push jne jae andl sub aam jae xchg js (bad) dec mov fnstenv pop into jg in xchg add ds mov (bad) jl les enter js andl stc sarb push dec nop das cmp cmp scas jb in adc sbb xor cwtl push popa lods sbb add pop push adc xchg cld mov cmp pusha lock mov jl add (bad) fsubrs ret dec xorb lret mov dec or (bad) add or aam mov lods pop mov sub xor dec roll inc js jbe add rorb add jne mov gs pop inc xchg rol sbb pop clc xchg jmp (bad) je test jle adc mov mov clc dec pop pop sbb add les cmp dec xor cwtl add pop mov mov jno sbb leave cwtl movsb inc scas or pop mov xor sbb push push les sub dec ja and inc adc sti cmpsl add ror imul sub psllw hlt cs enter arpl mov in add sbb inc leave fisttp xor insb cmp clc sub aam jae dec and dec or mov subb test push loopne pop push mov addl dec mov inc xor mov in sub inc push shrl pusha nop lods mov dec add in fiadd sub mov inc icebp mov aam scas dec cld cmp add dec add imulb or js scas fwait addb out mov add cwtl adc pop jns add pushf dec hlt sbb mov fyl2xp1 fcompl push scas mov jo push shll push and mov lea xor aaa adc aas iret addl sub imul subb repnz cmp pusha sbb (bad) adc lods imul (bad) aad lds dec add into push iret mov dec (bad) rolb adc add or mov sub shlb test mov in push or insl mov inc icebp stos cltd add and enter add aas dec dec jb add mov icebp cli (bad) pop jnp xor mov mov enter xchg mov mov add push lret pop pusha mov sbb lcall mov out add in ds pop cli (bad) arpl dec dec rorb stos add in dec and xchg adc fnstenv add (bad) mov icebp scas xchg adc mov add (bad) outsl imul les int3 jo push imul stos add mov mov data16 pushf pop pop push cmp ret into lcall sbb jns mov loopne xor sbb in je cmpb cmp fadds lcall sbb mov dec jge cbtw inc add mov mov lea imul jns xor add adc jg adc or addb push xor int3 lds insb fs lret insl aaa in leave pop fcoms inc cmp jae xor mov popa iret icebp pop mov inc and out js inc add sarb or imul arpl aas insl or add rcl iret incl and push daa and jecxz jle movsl pop mov icebp hlt mov mov jnp inc jmp pop mov adc aas les and lock mov (bad) sbbb jbe mov out sub inc movsl fs shlb and adc push cwtl sarb lret inc add (bad) pushf add ds pop mov lahf fsubrl ror xor add add inc rolb sbb mov and call push and jb les or addl add inc in xor cld and xchg add hlt lahf pop sbb cmp (bad) call inc push or cmpxchg sbb mov add icebp jecxz sub shrb mov pushf xchg cltd test inc insb adc sbb outsl cmp dec sbb inc test inc push xlat adc mov in mov sbb add loop or xchg cwtl enter push pop daa pop leave nop sbb push mov add cmpsl scas jmp jbe xchg add xor cmpsb sarl jmp fmul xchg or jo test repz push pop inc fmul lods loop sub push es repnz sbbl pop enter lcall mov push cli mov sar je call fs leave rcrb lret lea xor mov into push clc add rcrl cwtl sbbl cmpsb leave repnz ja jb inc call sub add add push push ret adc inc repz in int3 add cmp (bad) add mov fwait mov ja add ljmp cltd fbstp je mov or or into sahf test mov pop xchg add fsts sub (bad) cmp pop (bad) mov pusha addps or cmc mov xor ss add les shrb fs cmpsb call push mov add inc mov sbb js add stc ret push out xchg add addr16 das sbb cmp mov andl mov and inc icebp xchg mov addb or daa mov xchg aaa sbb (bad) or lods (bad) iret mov add and xor pop mov cmp cmp mov clc repz sarl dec ret mov and (bad) cmp add mul dec adc mov ret dec shlb enter insl pushf dec iret inc or xor add out or add xor mov push movsb movsb mov insb adc lahf lods inc or adc out sub push jne add pop dec or pop sbbl add mov nop inc push adc mov rcl jns sub add inc rolb out xchg icebp pusha repz fs addl mov mov cmp add repz adc aas orb cs mov or int3 (bad) mov stc cmpl aaa loopne popa pop test fstpt das xorb outsl dec loope mov test push adc mov pop adc fistpll mov in and cwtl ret (bad) lds xchg inc jno xchg cltd cmp cmp cwtl test xchg mov fmuls jno mull ret in imul sub in js mov push nop pop (bad) rorl repnz inc xor cld jl loop imul idiv (bad) pop iret flds addb orl cltd push data16 int3 in xor pop lock insl ljmp dec sub or (bad) or mov out movsb daa call stos xchg icebp sarb dec lock sub pop mov add je aad iret mov pop push mov (bad) or popf mov clc xor mov mov adc jmp sbb pusha lcall and sub adcl push ret dec in push les fdivrl xchg xor rolb cltd insb mov (bad) and xor test lods fwait add or xchg test data16 mov arpl loopne rcr jl aas ljmp pusha cmp jle (bad) cwtl cmp dec pop (bad) lods jmp repz subb mov xchg mov addr16 imul dec cmp xchg cmp cli jno sbb push dec add sbb add pop cmp gs cmp lock xchg add add mov sahf pop iret loop (bad) push or (bad) insl push sub (bad) jo fiadd mov cmp inc push ljmp dec add pop pop ret in xchg adc dec int hlt or add jecxz add jae rolb cmovge pushf mov psllq lds (bad) xor mov push int3 xchg imul mov mov pushf dec sub adc add mov adcl xchg inc push sbb jae jl mov pop fdivl dec dec jae push es ds leave subb aas pop enter aaa pop data16 leave inc outsb rolb add xor call in mov inc dec jo lret mov xchg inc popf flds jg orl mov icebp cmc rclb in jp cvtpi2ps mov add fisttp and push pop jo aad xchg nop adc lea add jecxz rcrl cmp xor sbb inc je dec (bad) jo cmp pop cmp bound out fistp aas add fs push sub call pop pop add mov or mov jbe xor add dec (bad) cmp ret xchg mov mov add loopne push (bad) dec aas xchg add push shlb scas adc and cmp pop mov in push and sub (bad) push cmp clc add sub push or mov jmp mov jo dec xor loopne fnstsw pusha jl test (bad) jns insb movaps andl pusha cli mov fs mov xchg jae fildl mov aad mov xlat ret lds mov sarl icebp and push adc push lds scas cs out arpl fisttpll cli jo hlt leave inc test adc mov xor insl icebp mov sub shr push sbb sbb into push xor jo inc xchg fdivrs mov cmp lret mov adc scas push jl xchg or fwait inc or fs es loope cmp xorb fiadd lods dec (bad) xchg cmp mov jae add cmp (bad) nop push push popa xchg inc in adc cmp push mov icebp test fcmovbe and jb (bad) sbb stos (bad) xor pop bound sti imul pop ss pop inc ja cmc ret adc popw dec bound xor xchg sbb mov add addr16 inc xor ljmp mov jno mov add bound inc xlat mov test (bad) (bad) ds je les subl mov lock ret xor add cmp pop xor pop dec xchg loope cmp xchg xchg out inc add fwait pop mov test and repz mov push nop jle add popf rorb stc into pusha insb cwtl mov popa (bad) out xor test aam cmp ds outsl rcrb mov mov sub push mov or or add into push dec in xchg pusha adc mov subb cli jno pop push mov je sahf mov lock scas lahf pop ss (bad) and pop mov imul pop mov xchg out sub cmp aaa aam mov ss lock fbld push inc xor sub push roll aad sub (bad) pusha movsl mov jb mov jo push push jmp ds cmp fnstsw mov inc rclb (bad) or roll sbb jo pushf pusha add xchg jmp inc push fcoms and and jecxz inc icebp cmp mov and and pop out inc push mov cmovae ficompl and out xorb sub iret int3 inc inc (bad) rolb lods jo jb push aad shl rorb icebp or popf push xor inc testb int in ss popf mov mov cmp rorb lea inc clc js sbb test icebp sub inc icebp enter xor ljmp add xor cmpsl mov fwait xor dec jle sahf faddl fdivr lods icebp inc mov and or mov cmpsb jno adc in (bad) mov mov xchg cmp test iret nop pop or rolb mov lock xchg dec pop insl add pop pop addr16 mov sbb pop fs xor fidiv lods int addl in insl imul mov cld xorb push sbb add in push iret adc scas and insl mov xchg and dec add sbb sbb adc fcoms cmpsl xor out dec pop in (bad) add sub cmp (bad) add insb xchg icebp mov fs add inc repnz add sbb add jno jne inc jbe add dec shll ds (bad) pushf nop mov lock push jnp add adc jge jle dec mov pusha cmp mov orl shrb pop dec pushf add ljmp cld or mov aad add pop stos dec insl ret (bad) daa xchg shll (bad) out gs clc imul sbb fsubrl push orb push insl lods mov iret xchg mov inc mov pusha fs fild sti ds mov add dec add lahf mov cmp sahf enter into xchg mov cmp and or imul dec mov push repnz mov mov bound xchg jo,pn fisubl mov mov add xchg in lock xor push ds pop add mov jo dec pusha enter cmp dec and push mov fbstp sahf push push inc cwtl cmpl sarl iret test (bad) cmp push jle inc into inc les lcall pop (bad) adc fisttpll add cmpsl insl aad loopne pusha inc test cmpb xchg pop xor push aam sub je daa and ret ds mov mov adc sub mov push xchg insl pushf mov (bad) pushf inc repz cli lea jge out int inc pop cmp gs cld sbb loopne lods xor bound loopne mov shrb or inc mov adc mov dec insl jae and movsl lret negb pop (bad) inc jle pusha (bad) mov jge or dec jb add bnd inc pop mov push lock pop lods js jo in add ja int3 mov jns fisubrl add xor xor xor mov adc add fldt mov dec test xchg xorl cmp ret cmp add jne cmp (bad) arpl add (bad) add jo xchg xlat dec mov stc fsubl sub adc push in xchg arpl adcb lods jo xlat or fsubrl sbb call push pop xchg fmuls fsubrl pop sub cmp add jno mov xchg mov lret (bad) jno adc and pop cli (bad) repnz cld or stos shrb adc sub push add clc insl jg gs cmp mov ret jbe mov push sbb inc add sbb sub loopne punpckhwd adc aas mov icebp test xchg cmp inc mov push adcl or addb jmp daa addl sbb popa mov inc mov cmp bound add loopne sub add xchg push sahf push lods adc je adc xor nop fwait pop add mov sbb xor pop mov pcmpgtw xchg and jo push js mov dec nop pop sub movsl fist scas sbb icebp data16 and mov xchg jp or out cmp adc aam je add xchg or adc test jge add push adc sahf int3 out lea lds push adc xchg iret roll daa sahf sub or dec outsl add icebp lock pop cmp add addr16 jp push mov sub popa aas lods or mov xor outsb sub mov mov cmp sti inc mov mov cmp add lahf bound jg enter cltd roll mov add xor cld jae xor daa fwait cmp or int3 dec (bad) and aaa mov sbb xor push (bad) inc xchg aam add les out sahf cmp (bad) in cmp xor mov roll and xor sub cltd in add push add fstl or lock out bound mov inc repnz test sbb outsb cmp add mov push lods push cmpsl sar dec pusha add xchg push pop dec inc into mov nop addr16 mov mov das imul (bad) fadd and add xor lret xchg pop sahf mov dec push and or xor es sbb pushf jne aaa in cld mov popa mov (bad) jno fwait rcl imul and xchg cld mov add arpl and outsl pop popl mov cmp mov add mov push out mov cmpsl add push adc add hlt add frstor add repnz mov (bad) insb xor out sub pop lock mov add stc sbb add repnz or push add dec and mov add rcrl cmp push lret roll in mov inc ret sub push sub adc add mov test clc xchg sbb pop push sub rolb xor leave add pop push test mov mov out dec cmpsl push sbb nop mov mov and nop pusha pop out mov insb sbbb push cmp sbb inc aas test (bad) loope xchg adc fstp adc into out inc in xor lahf and aad xor sbb and pop jne push mov add push jle sbb (bad) xor jecxz sbb jae shrb fnstcw popa add sbb mov adc (bad) icebp lods aaa mov bound sbb or js add (bad) icebp lods pop les add popa movsb dec adc mov pop jl xor in add out push test xor mov sahf repz pusha int3 rolb cltd enter cld jnp jo add xor sti jns in or lcall inc adc scas movsb and mov mov (bad) push add add fsubs int3 sbb jae,pt xor insl test mov into pop clc adc add push mov lret jns dec add and sbb (bad) push loope xchg mov ret add xchg jbe lret in dec testl lret bound mov (bad) jbe inc daa xchg lret push pop inc mov xorb push fcomps cmpsl cwtl fs jno push cmpl xlat add loop mov or in mov inc or inc add cs cmp aam mov or stos pop dec xchg cmp mov adc mov outsb lcall out add push repnz cld jmp mov adc lods sbb push imul loop mov add out loop hlt arpl decl or iret cmpb dec lahf sarl mov pop add push ja jp js loop sbb jo or loopne iret add and adc inc add jg mov or imul xor adc hlt pop rorl outsl mov mov xchg jmp movsl jl (bad) cltd and jns add sub dec mov add test jo in hlt movsb mov add lea or and (bad) mov fsts sti add xchg fs pop or push sub pusha sub aaa sbb jnp loope (bad) outsl loop test push or xchg sbb xlat add and dec inc add movsl adc add cld inc mov pushw cwtl push cmp inc push lock xor and scas mov call out sbb sarb or push cmc mov add repz dec sub sbb add mov out repnz xor bound pusha jnp and icebp int3 mov dec xor nop sub lcall (bad) pop jae adc or enter out push inc jle rorb nop data16 js cwtl jl dec xor jmp gs push xor push mov imul rorb push jl jge adc fs xor movsl pop jmp adc in inc pop or mov cli dec pop cmp jne dec cmp hlt in dec mov loope sub add scas push imulb xchg pop (bad) cmp mov push push add jp xchg pop inc xchg mov outsl adc hlt fmuls and mov and out scas subb xchg mov (bad) ja pop loope jecxz sub addr16 add lret mov movsw dec jmp mov and adc add rorl mov add jno popa sbb rorb das in pop jle pop mov pop or xchg pop mov movl addl xchg test push jecxz sbb or mov add push jne sub cltd jge add add js inc ficomp jo mov push sub pop (bad) sbb hlt and fldl popa mov pop daa push addr16 sbb add jnp jb add mov sbb add movsb hlt icebp add sub jbe sbbb popa sbb xor in loop inc fildl xchg dec (bad) mov loopne xchg negl ss xor jnp (bad) fs das lea rcr enter cld adc pop in push frstor pop repnz adc loopne xchg adc loop fcoml rolb pop int sub ret jle xor fldl jmp push sahf adc add mov movsb jo add fisubl xchg mov hlt notb stc inc pop lods add movsl add mov sbb push lret xchg adc cmp aaa add popa mov mul dec movsl nop add lahf and xchg inc push and or insl pop pop mov xchg lahf roll xor cmc lahf xchg push jl adc dec adcl or lock mov cwtl sub in add hlt mov icebp xlat lock sub roll fistpll adc xchg push and sbb enter aas out in out lds pop pop scas or push cmpsb add pusha adc pop lock sahf dec lds or jne rolb add push loope mov jo add ljmp cld lea xchg sub mov add jg,pn jp inc sbb xor push sbbb jno mov popa mov addb js xlat imul add das clc pusha rcrl ds jp mov outsb loope ja popa mov mov or lret and inc sub inc jb xchg cli jae sub xchg pop cmp pusha mov popa sub (bad) lods inc (bad) nop mov dec inc or add sqrtps aaa (bad) cmpsb adc mov test add adc fldl mov fldl push and scas test and and or mov idivl mov sub fiaddl dec add push test pop jle push scas (bad) mov and add or popa sbb adc push adc (bad) call subb adc mov dec and dec mov add test hlt pop push add jno test push xchg repz sub inc sbb (bad) and xor fisttp aam inc fucom popa pop sahf mov push inc xor clc pop cmc pop sbb sub cmp push jl and or and pop pusha popa pop scas sarb loope mov sbb mov cld push push inc inc add mov clc xchg loop and or outsb add mov dec scas add icebp clc push cmc repnz mov loop push loope sbb dec and xchg dec ficom push or loopne lea icebp sub popa enter push (bad) pop dec inc or xchg clc and inc negl cltd pushf sbb or adc push imul jb bound push inc add sbb les add das popa call iret jo add sub xor leave sbb adc test mov or cmp mov push inc cmpsb cwtl jg inc adc lldt inc subl add pop xor jle and adc adc lds push clc xchg in add jp lods add pop jo or (bad) stc or add loop sbb int3 mov repz add cwtl push jl aad jmp enter std pop lret popf (bad) lea mov xchg sub roll mov gs (bad) xchg push mov add or rep push or sub pop hlt xchg push sub sbb push cmc xchg adc lods cli addb xlat lea add movsl xchg and aas (bad) xor sti add or mov add out and pop add scas mov xlat mov das sub sarl mov mov mov popa xchg mov push clc xor shlb push std outsb or sub push std add bound pop cld pop xor mov fs sarb inc push jge jle ficompl add enter jo or outsb xlat sti mov pop push or cld mov adc xchg rorl and xor adc adc cmp lea cmp push pop xor pop xor push add aam and inc nop xchg idivl cwtl lret (bad) js (bad) pop mov mov clc ret pop stc push int3 mov sbb adc clc mov mov es mov std popf rorl add mov stc xor es inc and loope cmp clc (bad) stos (bad) push in add dec addr16 (bad) pop add dec rolb mov aaa pop mov (bad) and add mov jbe cs cmp adc dec and test or lods sbb mov pop cld add mov rolb jg pop xchg inc jecxz fwait cwtl xchg popa and mov xor lds mov pop or out push add pop cld inc mov or aas sarb imul xor pop dec (bad) push rorb push jno pop adc out fild mov clc pop inc xchg or sqrtps decb sbb cmp add stos add xchg mov inc xchg mov pusha lds pop dec push ret shlb rcll cmp mov sub add mov xchg cmpsb loope add ret and sbb add cmp xor stc hlt icebp cwtl movsb inc or dec pop push add (bad) lcall shrb add push pop aas (bad) xor add adc je shlb push fildll add push or ret cwtl and dec jecxz or pusha mov sub test loope stc inc mov mov dec mov (bad) xor and add jmp loope incl xchg lods andb mov testl pop inc jg,pn js mov imul mov xor enter repz aas xchg test push jns sbb mov rcl dec mov movsb sbb fsubl add dec adc clc dec ja inc scas sbb add hlt mov daa push sar or pop xor sub imul repnz mov push mov add and inc jne fist sub leave xor sbb dec xor les fistpl cmp shrl sbb gs mov (bad) push push jbe push fmulp and and mov mov nop dec cmpsb add mov and inc push shl adc aam sbb pmuludq sub sbb xchg les add ss mov cmpsb xor test fidivl push dec cwtl dec fwait ret popa (bad) xor pop add cltd dec cld and jmp xchg or adc (bad) cmpsb dec in inc inc in xor add out fisttpl sbb mov add adc mov loop out jecxz jmp mov push mov stc leave and (bad) dec push xor pop (bad) decb push pop aad dec and dec mov dec (bad) divl xchg bound or and mov outsb out test bound (bad) jno push sbb fs ljmp les dec aas mov sbb add test jp add mov outsb jns inc leave and ret push pop xchg ja cld fmuls inc push fwait push xchg and mov dec push pusha scas leave inc pusha mov or jp lret push sti rolb add mov pop push movzwl popa idivl lods adc jns loopne fist xor test add or test cmpsb enter push push inc jne xor imul inc or xorb in roll loopne (bad) sub rolb sbb inc icebp or mov adc mov mov paddusw notb add mov inc sbb sub aam out mov cwtl push loopne int3 add add push out push (bad) mov sub fiadd adc in and ss sub enter jbe add mov pop jb notl mov adc push aas add (bad) mov xchg fdivrs addr16 (bad) jne,pn push add ror push pop xor (bad) xor out inc adc mov fbstp rcrb scas add mov xor mov call shrl repz mov add fwait les call lcall add mov mov jo jb movl adc push add (bad) ljmp jb push pop andl xchg inc sbb mov fiaddl ffreep adc test and pushf in xchg lods sub add mov loop push push add dec add cli sbb dec cmp jo pop es pop nop mov jae iret pop inc shl xor sbb neg push add sub pop xlat push stos rcrb pop cmp int mov mov and dec stos push add add pop pop push inc mov add out sub xor jnp pusha pop pop push mov mov out ret jp rcr dec add or xlat jg xor pop xor not ficom call sub add shr cmp or mov dec sub aad pop gs push mov lret imull cmpsl (bad) ds insb xchg and push push dec (bad) sbb push push dec out ficomp orl cmp call arpl mov mov das xor pop cmp push call or add add dec pop mov cmc pop mov jmp scas (bad) flds call xor out insl xchg jle ja lret jmp sub sub sahf shrb cmp lret push push decl bound (bad) (bad) dec add and repz mov pushf int3 jle sub stc mov add push mov getsec xor sahf dec daa mov xchg ja xlat in pop push and sub ds and jle adc mov add jmp add pop neg ss mov (bad) xor mov lods and mov or cmp std dec dec mov jg xor pop push push add cmp fist pop inc cli gs add mov lret inc inc iret sbb insl shld out pop adcb pusha xor loopne mov push jnp pop test push (bad) mov in or inc outsb xchg or (bad) mov dec not mov (bad) into xchg in add cmp idivb test jmp sahf sbb inc cmc shll xor xor in inc test aad add inc add mov not clc inc xlat dec out nop push dec jno pop insl pushl add pop lcall je repnz and jmp cltd pop pop xchg jnp jnp mov out and pop push and aas jmp loop les sub sub mov xchg ja pop add es loope or in push jmp iret xchg popa lods pop jmp in push mov mov call int or test es outsl (bad) icebp hlt mov ret fs add add pop jmp xlat inc dec jo (bad) mov inc push mov pop cli rorb xchg or cmc push cmpsl jg lods cmpl dec movsb movsb pop aad jne sub push pop push jmp in jo cmp rolb mov mov adc mov pushl cli jmp test pop dec cs inc pop inc xlat pop hlt ljmp test mov je pop push mov das push std mov jmp (bad) mov mov add or or or mov leave xor xor add shl jae push push movsb call cmc and dec adc (bad) pop sti sub in jo sbb dec shl cmp testb cmpsl pushf sub test push mov cli pop pop sti xor js in loop inc repnz push mov push sbbl push push pop fistpll sbb or in adc stc cld inc mov aas inc xchg sarb add jno jmp xor incl (bad) pop push xchg xchg out imul and icebp pop dec jbe decl pop jmp shr repnz xchg aad in mov mov ljmp pop aaa mov icebp pop sbb mull mov xchg push push add fldt addr16 and inc xchg xchg pop pop cmp dec cmp xchg pop push movsb gs cwtl and inc sub fild and xchg scas jge dec pop movsb aam and jecxz fcompl pop push dec les xchg xor or test cmc dec and sti gs mov inc jmp fbstp and (bad) cmp ljmp movsb nop xor imul dec jle or sub imul test jns fadds ljmp sub rclb sti faddl pop xchg mov push outsl lahf jecxz mov pop pop jae inc sub cli mov rcr mov sub pop fidivr push mov jle iret jmp dec out into and fidivrl inc jmp mov outsl sub pop and cmp xor sub inc add jbe or rclb cld and sub insb or push out pop pop mov mov mov and les xchg cmp mov cmpb jmp mov shrl movsb repz fstpl mov mov sbb push lret (bad) push subl in xor in int3 mov adc ret or jmp cmp push movsb loop ljmp pop mov xchg lcall negb std (bad) movsw or fildll inc sbb sub sbb inc xchg mov jge fcmovnbe xor (bad) mov inc les cmp notl inc mov push es cmp add mull (bad) inc pop or jmp pusha jecxz dec orl fistp jl in mov imul xchg nop inc and fmull movsl mov cmpsb mov add pop ds add or jmp pop mov mov add jp inc jnp in pop mov sub dec or adc mov pop or pop test add xor and imul adc xchg push shrb sub inc add xor xlat push inc or push cmp or out push mov jmp jo dec nop in or (bad) pop les push les dec jmp mov add (bad) adc jmp mov stos xchg popf movsb mov jne mov clc mov shrb pop (bad) neg and or fs inc xor jmp test std pop or pop xchg sahf fistpll inc cmp or ja (bad) fmull mov (bad) and das scas sub clc pop in shr jge cmpsl ja ljmp jmp (bad) scas aas das fstpl movsb (bad) (bad) lea sti mov sub pop cltd rolb lods push pusha mov int3 dec out int3 and mov dec jmp (bad) pop push push test pop and push addl popa out mov inc leave push jg dec pop out (bad) pusha test nop xlat add andb (bad) negb pop jns cmpl (bad) dec outsb mov pop shlb dec mov xor in jmp pop mov dec out push pop lods das lcall pop push mov mov jg loop (bad) lcall aam icebp sub jle in pop inc xor gs daa movl jno in mov add pop decl add loope ds add sub call mov cmp cmp add inc or repz or in cli sarb (bad) in inc aas inc adc pop (bad) pop movsl lods clc jl xor mov xchg lret aaa scas and mov mov arpl in lea leave ja dec and scas push fsubs mov je aaa push xchg inc (bad) lret xchg inc mov in adc adc pusha in outsb sbb xor mov or loope push ja xchg insb movsl cmp sbb sub outsb (bad) add mov inc in sub mov (bad) icebp xchg lcall out dec aam out push lahf jecxz add push add or jl mov hlt jmp repz mov mov js push push hlt ss or push call aad imul lret cmp divl aad out out mov das and add adc ds les lahf sbbb dec push add pop pop das inc shll add mov sbbb xchg outsb in bndstx inc mov pop xchg inc iret test arpl fs adc add jl mov push push pop and adc aas shrl loopne gs xor bnd imul inc shl jg out pop xchg rcll jae loopne mov mov (bad) xor inc (bad) aam xorb mov hlt stos sbb movsb iret imul loopne jle mov pop mov (bad) mov pop fadds xor add test (bad) sbb push xorb pop lds mov shlb repz test mov and addb pop sbb sti push (bad) mov ja adc loope and cmp add sar lea add fnstsw cmp fwait mov mov pop push rcrl gs out sarl xchg outsb in call leave inc stc jl add cmpsl (bad) (bad) popa xor mov xlat add movsb and mov and sub cmp push push lock cld ss mov push and stos cmc adc loopne sbb sbb lock lret add mov (bad) imul repz xchg pop cwtl cmp loopne cli mov mov xor push inc add and xchg jbe mov test cltd pushf or add mov jbe mov add std test add js sar xor call imul ret add pop (bad) leave jno mov mov loopnew les sti xchg or mull add shr orb lahf in xchg xor out xor stos in add mov add dec repz rclb outsb sub popa add xchg adc adc lock xor mov (bad) or adc popa mov imul fdivr (bad) icebp fadds add or xchg data16 sbb adc or gs cmp fs mov insb orl or xchg (bad) leave out push cmp or xchg cmp jns sub jmp in lods and mov pusha mov fsubrl outsl loop addr16 ja cmp add sti aam and cmc inc popa (bad) mov mov adc leave push mov mov pop mov in adc (bad) stos cmp cmp shlb or ss cs sub fdivrs fs mov or fdivrl movsb cwtl fwait mov int3 pop repz and and fwait inc xchg push ret add cltd in icebp jge mov add and mov xchg lock add insl jg mov clc xlat or push push test jmp leave out pushf into or push rclb and push fcoml pusha inc leave jne rcrb cmpsl arpl adc aam xchg das jmp in xor lock xor mov sub test enter nop pop dec push adc test add gs adc fbstp lret stc nop inc inc mov adc adc cmpl dec xchg imul sub mov ss test lcall add inc enter cmp sar or pop outsb fsubrp rol xchg pusha lret xor repz cltd mov mov cmp dec stos insb and nop sub outsb addl mov add xchg stc lahf push inc int3 fs (bad) sub mov xor loopne sbb mov sbb test fisttpl cmp shl mov or hlt xchg je sbb loope rorl shrl or loope or cli jg adc cwtl nop mov mov dec pusha cmc movsb test pusha pop lock push cmp leave dec xor int3 adc dec add sub or ds cli add adc and mov out xor hlt mov inc lret cli inc adc or add mov add add int ss out enter xlat xchg xchg test in sbb jae xor sarl mov cs enter mov push je subss mov or in dec mov jo inc cwtl push jne add add xor (bad) testl subl repz pop push mov aas cmp xchg push stc xchg mov adc mov xchg (bad) fsubs inc loope jg sub adc push or mov adc pop pop mov dec jg cmp inc les jp fwait mov imul sub pop add and dec (bad) in notl insb stos mov jl jl push adc pushf test cmp je jmp add in xchg jbe pusha (bad) icebp inc insb arpl test pop das add mov pusha mov mov pop sub add sti rcrl and stos push loope mov xor mov cwtl lret add adc sbb hlt xor lcall lret pusha mov pop hlt pusha out sbb mov bound nop pop test pop movsb mov adc adc repz gs or inc je pusha xor and pop and ret int in loopne imul ret sbb inc out mov mov sahf and arpl add fwait pop dec stos push dec mov orl or fs xor sbb insl and sub pop sub test mov stos inc nop xor movsl (bad) pop sub xor jmp or adc sbb sti mov mov mov xor jecxz nop add mov mov and lret jle clc out mov (bad) xor dec mov cmp mov out imul or adc and scas lcall inc mov aad pop cs stos dec inc js cld jns dec andl nop push pop and hlt fistl mov rolb mov pop adc or ljmp xchg sub in jle xchg pushf mov test stos inc mov imul jae jmp in or fdivs mov hlt mov shrb ljmp xchg sbb and nop jno xor dec outsb xor inc jo sub or pusha aaa mov and dec pushf pop orb loope adc add aaa jmp push adc mov call xor and or rorb mov loopne mov in dec inc sti iret or nop (bad) je je js push jns lahf adc add mov sbb mov aam sbb mov inc sti rcll sahf icebp or enter push add repz rolb pop adc cmc popa ret jae cmp cmp out lods or mov mov mov cwtl pop jb pusha add xchg sbb (bad) push cmp loopne pop jl sbb and jns jo int outsb sahf xor jmp mov jo pushf pusha adc orb adc inc sbb mov or or sub bound fildl push mov test lods mov xor (bad) and push sbbl jne pop fs sbb xchg fcomps push std aaa mov pop aad mov daa imull repnz sbb jmp jne,pt add add fwait (bad) jecxz loope int3 mov sub out add xchg push cmp add insb add xor pop cmp or dec lret push stos daa test mov insb out fsubrs xor sbb inc fsubl flds les and sub out add jno,pn cld loopne and push sahf push and mov (bad) mov xor ret inc std shll or clc insb lcall dec xor movsb sbb or aad outsl cmp push and je push mov adcl inc add in xor cltd dec rcl add mov pop mov cmp push xor xchg mov fs movsb movsb mov iret sub orl and add mov jmp imul jecxz jno rcrl or jo push push leave mov hlt jmp lds or mov subb add jg adc rorb rcrl outsl mov sub sar mov fidivl shld f2xm1 loopne sub push sbb pop imul jp xchg lock mov xchg scas sub lds in and ss ret cmp xchg imul sub or test nopw addr16 es inc jle adc lock popa add jae loop xor (bad) push add jp mov adc jmp xor lods cli les (bad) sbb jo hlt inc (bad) push mov inc dec ss aas fisttpll mov or lods test jno jecxz xor in push dec pop fcompl jae test clc push adc pusha or xor sub or sub imul adc fdivl mov sbbl push inc mov or bound mov sti push pop out (bad) js push adcl test cmp scas dec inc dec into add mov xchg jns lods jo scas or ljmp sub dec or jo add inc aas push sub and adc xchg push add mov jb or in mov into push es add mov pop pusha jge out mov test mov jne popf add (bad) xor pop (bad) jnp cld cwtl mov pop xchg (bad) jae inc mov loope and mov sub (bad) and pop sub lods lock push jae and pushf gs adc dec xor xor lahf sub js xchg push rcll in jb add ret cmp scas and sub movsl xor mov cmpsl cli mov lds xor aam or mov adc cmpsb inc add sub fldl pusha push or cmp ds idiv push and adc sbb sub add nop mov cwtl sbb push xor mov mov pusha push adc inc daa jo sub add js rorb mov pusha mov in adc pushf aas fsubrs insb add xor jae loop imul push outsl movsl out cmp xor fsubr push sarb les sti push and (bad) sbb mov sub jmp cmovg jne inc sarl mov (bad) fisub movsl aad xchg cwtl loopne faddl sub int inc andl outsl cmc xor dec mov jp sbb push xchg cmp mov sbb cmc mov push rclb mov leave loopne insb add xor in xchg ds add (bad) xor dec dec pop insl xor and imul jnp cmp mov iret popf and popa adc mov loope jae inc sub or ret xor push add or dec and push or mov data16 sub add xchg ljmp xchg lds fcoms mov jnp add cwtl mov aas das cmc fistpll in mov lea pusha data16 lods enter sbb add dec or inc add and pop xlat (bad) hlt mov in push cwtl dec enter mov push out and jecxz or push or arpl loope add dec mov pop jge push and or xor mov cmpsb cmp push dec test in ret in popf repnz mov fwait nop jnp call test fimul rcl in daa stos jecxz push cmp xchg fimul push stc push enter add faddl test sub xchg mov jo cmp cs push xor xchg cmp pop push add addr16 mov xlat and mov push sbb mov addb repnz mov jp push jo dec jns fsub mov add jo notb dec dec inc test aas add pusha inc lock imul adc cwtl xchg inc adc jl dec adc arpl fadd mov xchg sub mov hlt pushf mov cmp aam mov ss stos mov sub ror clc dec xor xchg adc loopne or push push jle cwtl nop adc cli jge hlt and pusha and (bad) cmp aam inc adc lods adcl orb (bad) mov es jmp fsubrs xor cmp fs xchg jl cltd mov xchg es pushf shrb test add subb dec push cmp sbb adc xchg fwait js cltd inc mov push push sub fiaddl andl jnp out adc jmp xor mov es sbb push icebp and sbb test nop xor inc lock (bad) mov popa jno or enter mov mov outsl inc inc outsb add sbb push cmpsb or xor add orl lea in cli std add es sti aad add fcomps (bad) outsl mov imul movsb aam push in sbb inc xchg loopne dec (bad) jnp or dec jmp and add popa seto push test adc sbb xchg add or mov sub and movsl sub jnp or xchg gs jo (bad) and or and inc (bad) in ficomp and mov clc jo adc xchg ljmp jp cmp sub movsl outsl cwtl mov add push test pop int3 popf mov dec and ss push sbb cmp in nop jo pop or mov inc sbb add and jg ret and xchg jl mov jns mov and jge pop pop shlb pop mov xchg mov imul sbb sbb pop (bad) xor and aas jmp sbb sbbb or lcall adc roll int inc xchg (bad) movb icebp out mov stos cwtl fwait cmp mov jns sbb jl sub xchg insb sarb leave (bad) mov push pop pop xchg mov (bad) dec push xchg add dec iret (bad) gs dec add loope (bad) cmp mov xchg add ror sahf sbb add and outsl xor sbb push pusha push mov jl ret mov out add jecxz cmpsl mov mov xchg xchg adc xchg dec (bad) fimull xor cmp xor add xchg enter les dec bound aam push sbb inc enter enter lret inc imul frstor in imul pusha ffree enter xor xor xchg (bad) stc inc jp inc or pop pop subb int3 push sbb cld imul xor push cwtl jecxz sbb or jb xor pusha ss test adc aaa sub test stos sbb mov adcb hlt ret jle ret icebp mov mov lock mov mov pushf or inc movsb aaa dec mov (bad) xor dec sbb insb or hlt jmp call nop sub cmp adc fwait xor test imul inc mov into jmp xor fstpl add fwait add cmp mov lods jle nop pop outsb mov sub xchg les lahf pop cmp mov movsb ja scas adc sar sub js mov lods mov clc cli cld sbb add inc mov (bad) bound push adcb in repz and lock add popl dec leave cmpsb mov add and adc inc mov mov dec adc movsb adc test in xchg dec (bad) xor lea les test push xor lret add or orb push movsl jle (bad) lock xchg pop cld fwait pusha xor pop add sbb xor pop mov push cmp in adc icebp movsl out and jns dec mov inc int3 ret aam fcompl and add xchg push dec xor cltd mov or dec push aas mov and mov mov cmp add outsb push push cmp mov sbbb xor inc call jl icebp ja daa sub or adc jno push ds jmp lahf cmp push sub add (bad) mov cmpsb ret inc into sbb lahf adc mov mov or sbb hlt jecxz rclb push aad push push aas or jecxz pushf and lret jmp cld cli or mov leave jmp add inc add mov in adc sbb xor testb or mov mov mov and mov outsl inc (bad) fildl pop je cs push sub pusha cltd inc sub add or andl je and scas lret rcrb into cmpb cwtl jne in fmull (bad) outsb xchg or push sub pop push pop (bad) xlat cmp mov inc mov push lret mov cwtl push pop or xchg sbb (bad) mov sub push dec stos inc dec dec mov bound cwtl fsubrl scas push xor ljmp les movsb fmuls lods or fcompl mov int3 xchg add inc sahf jae add push std xchg pop mov sbb xchg ret (bad) push adc xor pusha fiaddl xchg xor pushf popa xor fidivl push shrl cmp insb aas and lods mov mov inc jle mov mov lret mov or push lods cmp add pop and xchg add pop enter mov insb dec and lods add dec mov fldenv fdivrl xor cmpsb pop or xchg mov or clc inc aam xchg fnsave mov dec js or rorb rol nop mov push or cmc punpckldq add dec call push or lea dec pusha dec sbb mov out mov popf mov sub push jp and pop dec push pusha pop mov ror int loopne jecxz pop push dec les lods fldenv push notl dec xor xor dec or test hlt xchg pushf add pop cmp subb adc movsl cwtl xchg loopne or inc pop mov and add sub insl sub adc or dec xchg xor and sub dec ja xchg pusha int add and sahf psubusw pop test test call icebp stos loop fsubr add les push mov push les push addr16 dec add (bad) std not loope add cs divb push jmp or push sbb sbb into or mov add in in xchg pop push inc loopne add in xchg mov (bad) or xor insb add imul pusha dec mov adc or mov inc mov mov and xor adc ss add mov mov lock push xor (bad) sbb fidiv add jp sarb cmp popa add (bad) (bad) sub ret popf push push mov movsl or dec xor or xor jp loope mov mov and sub lods cmp out andb sub sub mov imul adc or outsl popa int3 cmp sub arpl push nop dec mov cmpb sahf aam fs xor pusha es push movsb dec mov test pop add jae fucomip outsl cltd mov cmp sbb sbb dec push adc test cmp in xchg sbb bound sbb push mov ret mov lret mov push jnp cmp fcmovnbe and (bad) in loop pop sbb sub dec fnstenv mov popa out mov or shlb mov mov dec ret pop mov (bad) in adc gs xchg nop push jl add dec shll inc cmp outsb cmp mov in pop rcll push test hlt (bad) jnp rclb inc pushf jp mov mov (bad) mov dec mov cmp in push ds mov add mov dec pop cli xor cmc add dec outsb stos sub push pop or push pop push das imul test nop rcpps jmp shrb cltd or mov clc (bad) icebp fisttp sbb bound adc add hlt add pop push mov fs sub and das (bad) clc mov pop dec mov push lret xor pop pusha loop and mov mov jl adc cmp inc mov add ss mov test call sahf test xor (bad) jno sub xchg aas mov nop ret in add push mov and push jecxz or test sbb mov mov xor pusha and and push push stc les xlat inc sbb xchg in (bad) dec pop loop adc pop mov adc and jecxz and adc sub loope sub sbb sar add dec or sub add es ja shrb hlt repz sbb mov sbb mov jmp add adc sub cwtl sbb mov stc push push test add decb cmp cwtl addr16 loope je dec cmc call fcom ss add imul jns out cmp outsl add xchg cmp movsl pop xor add and add mov mov dec scas add xor enter and dec outsb or adc dec lods xor pusha imul inc cwtl loopne call mov inc jo (bad) mov popf or fmuls xchg out mov or cmc mov mov out xor scas add lret out mov sbb add hlt xor xor repz dec add inc xor dec and sbb sbb scas icebp sbb sbb pop jo sbb incb in daa jl inc sub adc and imul insl stos add xor pop pop sub sub hlt je add inc jb movlps sbb loopne mov push push fild xor das and loop inc fs movsl sbb mov lock add sub insb (bad) dec (bad) or adc inc dec dec loope pop pushf xchg out add xchg mov xchg lock shrb jbe add cs sbb sub jbe push jmp aaa mov in jo mov or inc or imul lcall cltd push push je inc or xchg inc xor pop add pop test push rorl adc (bad) fwait lcall or add fucomip (bad) mov arpl loopne add add out sub cmp adcl cmp aad push cli in addr16 xchg adc cmp adc jmp dec add mov fmull int3 iret cmp ljmp mov stc or cmp xchg (bad) lea shr push hlt pop mov loopne test leave xor ljmp iret add mov xor testb jmp in andb adc bound test jp (bad) sub sbb add addl xchg adc addr16 fs cmp stos push ja mov loop enter jg xchg mov out mov es pusha pop add cmpsb push mov add inc pop ss add in mov test lods sub and in icebp adc jle dec (bad) aad rcrb shll xor cs popf mov xor sbb lret sub out mov sbb cmp fmuls aad popf dec sub and dec ss ja mov sub imul pop dec add inc incb push push inc jl pop fdivrs inc jb push pop popf push rorb adc cmc loop decl adc mov arpl fwait out shrl adc inc fcompl shrb mov nop dec inc pop xor dec push adc cmp jp adc sbb adc cmp adc cltd fsubrl lea add add aam pushf les or sub rclb rclb cwtl out or sahf sti sbb insb adc or pop js sbb fstpl (bad) add sbb pop mov push (bad) cwtl stos xchg data16 imul jb inc imull popa mov mov dec out mov iret push ljmp mov test adc (bad) xor mov repnz pop cmpl das test mov cmpl inc or jbe test shlb test cmp movsb nop dec inc sub lret cmp adc and test fwait mov out lds jae add add (bad) mov push leave out xor and (bad) push xor es xor icebp fwait pop dec imul jns,pt jl push add stos pop push pop jbe or jg mov dec std inc or push test test add and cmp dec sub cmp lock mov sbb (bad) or repz nop xchg orl cld jmp xor pop mov xchg sbb pop add inc lahf (bad) mov daa push sub xchg mov or add jle imul cld push loop cmp movsl adcb les and add jns adc ljmp xor add mov loopne xor orb sbb pop jb ret fsts repz sub xchg pop cmp sub add push outsl fdivs inc sbb add pop xchg je xchg pushf dec loope dec incb sub lea loope ss xor clc sub bound push and je sbb lret jmp dec mov and xchg sbb cli add dec iret adc jmp fs mov ret iret dec add popf inc std (bad) loope or in rolb rorl pop or imul dec aam mov xchg sub mull add arpl sbb push push jp cmp or add xorb repz or outsl adc xchg and add jo mov lret mov xchg ljmp add jge pushf repz pop nop mov cltd fsubs cld stc dec xor lahf fcoms jae test imul (bad) in xchg (bad) ja test icebp lcall xor sarb mov test xchg mov shlb ror out push aaa and (bad) jnp sub jmp sbb push loope push andl jl (bad) mov adc push xchg pushf inc arpl lcall xor and add popf jbe gs mov lea sbb fcomps xor clc stos int mov divb mov adc and or lea mov test add out mov aaa mov lret cmp add dec pop xchg rolb mov repz cmpsl xor std addb fldenv popf sub cmp pop and and mov repz out xor insb in add mov pop push adc cwtl sbb cmp out stos and mov mov cmp enter xor adc xor leave repz cltd pop js push cltd cwtl add push ds dec mov loopne cld jp test out add rcrl out repz stos push lcall loopne mov ja add push or jns nop sbb add push test pushf mov sub (bad) fdivl cwtl sbb push inc (bad) push add (bad) loopne xchg xchg pop add jecxz outsb sti or add sbb in popf add fisubrl shl ds fsubl hlt sub cmp cmpsl pop mov les je and mov cmp mov sbb xchg ds pop pop add cmp push (bad) pop add cmp or js adc sbb add imul repnz xchg or adc leave cmpsb add mov test in or xchg add clc add lea push and inc fmulp mov sub jp xor mov add repz lock rcrb inc stc js xor adc pop add cmc ss popa clc or xchg (bad) in inc sub add popa xchg inc add aas sbbb push mov jne out sahf adc or fwait lret add xchg adc sub leave xor shrb gs in test out aam xchg mov call mov sbb pop push pop and lret insb nop cld nop xor adc pop shr dec add jmp in sub repz and adc loopne mov inc xlat add pop or imul icebp mov or add xorb sbb mov nop xchg or push mov lock mov lock mov clc dec in cmp fnsave subb or add (bad) mov jg mov add aam adc or xchg (bad) add xchg jno repnz clc mov add jne sbb mov jl sarb fwait iret add dec mov lea and add xor mov dec mov outsl jmp sub nop or dec orb call adc insb (bad) lock fwait adc rcll ret cmp fs in add jg add xchg ja ja test sahf pusha xor mov sub arpl mov call fbld cmp dec stos movsl cmp hlt pop xchg mov pop mov addl push mov add lock xchg add mov dec pop mov jne imul sbb dec xchg fs pusha push int3 pop stos xor xor repz mov pop outsl insb jb sbb aad std in das clc xor jae lret out push dec mov shlb cmp repz cltd xchg shlb flds xorb xchg (bad) loopne cli leave mov data16 das cmp pop imul mov (bad) mov sahf adcb push movsl sub or dec add dec jae mov in shl nop das push xor leave sbb js ret mov sbb mov pusha xchg dec test push and in cwtl out imul loop pushf pop cmp push aaa dec in stos xorl stos mov or cmp or adc dec add rcl mov pushf dec jo add repz mov add push push sbb loopne es fmuls addl out mov mov push add fwait push mov dec push stc xor lods and je rorb mov lret clc out stos scas clc add inc dec mov stc call ss or cmp inc lds mov and sub mov push dec add mov loopne pop es add mov pop xchg nop mov lea cmpsb mov and repz push mov jo mov aam pop insl xor imul imul cli jbe test repz add xchg hlt movsl mov stos addr16 cld mov jne sbb xchg rol hlt and adc push adc xor rorb cmc les hlt lahf inc jl popa or pop pop push mov mov addb xchg aaa int mov add push sub or xchg or outsl push js cld lock inc decb mov mov add subl jmp test cmp xor adc push mov or xchg pop cli imul popa push enter cmc xchg add inc mov and and jmp cmp adc pop jmp xchg push lahf test and dec cmp pop xchg push sub cwtl imul in mov pop loope in add nop les hlt inc xchg push and ret loopne stos lods pushf dec test pop leave sub in pop cmp push xor push movsl insl or or xchg sbb mov sub out xchg mov cmp inc mov or lods add add sbb in icebp jae add stos pop xor sbbl add lods mov push ljmp int3 xchg int sub call iret jge,pt dec inc or inc push int3 sub pop and test insl mov or cmc rcrl cmp cmpsb shlb jge mov mov leave dec and push ret enter mov in dec add push cmp ss adc adc jnp mov insb mov or ret mov mov add push mov cmp and cmp jl in sbb xchg pop (bad) xor mov lret loop and add xchg les sub adc dec xor test sahf icebp cmp dec xchg icebp inc enter push lods and movd imul or bound add jg test push fistp inc mov cmp movsb or push (bad) es stc add lock adc lret int3 add shl inc ficomp addr16 dec mov movl cli mov lock jg or lahf xchg cmp inc into js or xchg adc xorb fildl dec jg insb insb (bad) or leave sub adc and lock loope push call add imul pop pop sahf fstl aaa xor cwtl xchg je inc dec popf adc pop sbb pop xchg ds repz nop je xor xor add pop mov pop lea inc mov sbb insb adc iret and in nop jl call lret sbb aas pop xor adc int3 xor pusha sbb mov insl iret adc les fadds dec add pop xchg or or ja add imul add push adc mov loop jge add mov dec dec xchg ljmp nop call stc xor xor daa fiadd mov inc sti (bad) mov hlt jge add in shl ss loope pusha pop push cmpb popl negb sub (bad) test dec loopne mov add ret lret (bad) movlhps enter or mov or cmp push stos clc sbb cltd test jb fnstsw adc xchg ret loopne xchg cmp mov add cwtl xor call andl mov inc cld pop insl jno sbb inc popa mov jge das xor and adc cltd out cmp or stos dec mov xchg js fsubrl mov test subl sbb sbb mov push sar sbb je sub mov or sbb adc xchg lahf imul js mov mov sub cltd test adc enter arpl sbb inc adcl push dec xor add add in xchg lcall cmp xor loope sbb out push lret ss dec mov and bsf stos fsts push insb nop and dec adcb sub xor mov mov cmp into add jb mov in (bad) xor cmp dec add out hlt shrl add push mov (bad) mov dec daa mov aas sbb xchg mov icebp or cltd out mov in xchg dec mov or and add cwtl scas and mov sub dec popa mov gs sbb mov enter xor inc add inc and cwtl push pop jo adc repz (bad) add dec cmp xchg (bad) cmp adc fldl2t sbb mov cwtl (bad) call sub repz outsb push adc inc add movsb cwtl push add aam xor and dec popf mov test cmp xchg sbb pop mov mov in mov movl es jno add xchg cmp popf push iret pop fsubrp or ds ret or lret js add imul add stos jle xchg test mov inc movsl pushf sub or jl lods sbb popf pop inc mov jl cmp xchg cld inc lds ret jae jbe dec sbb jl (bad) push sub mov xorl sbb sarb lret insb clc pop pop (bad) repnz fwait cmc and out dec mov bound aaa (bad) push or sbb jb mov in movsb nop xchg pusha mov sbb in div jge sub aam outsb iret call das sub jge lret pop xchg dec iret cmpb inc (bad) xor mov push imulb movsb mov push cltd mov pop jp sub pop inc xchg scas push mov mov popf sub xor inc adc cld sbb dec add sub sbb sub int3 xchg jmp mov add sarb cs test nop and aam out negb xlat (bad) mov mov or xchg cs sub add js and in add imul aas jl inc mov ds lahf sbb test inc mov jmp or test and and mov mov cmp lret jge dec cmp nop inc shlb loopne xor add jne scas loope roll xchg popa fisubr push pushf scas hlt or (bad) mulps (bad) mov dec push dec popa ljmp jl mov xchg jo out lods jb jg dec clc fildl pop repnz mov stos dec and and inc adc aad cs xchg mov iretw sbb ret mov fs and push rorb lock or mov outsl pop push sbb outsb xchg repz add add in xorl and test lods mov jmp add xor inc and jg mov lock sbbl stos add mov mov jb in les jl and jae outsb mov inc lods mov mov push and cmp jns (bad) mov lea lahf loope arpl loope mov add mov mov das mov or sbb and je add out xchg jle push push daa nop mov pop nop xorl pop push dec or js add push sbb push (bad) adc or push inc push mov or popf add sbb test pop fs movsb fs andl xchg scas jmp pop nop insl iret mov add out icebp dec cmp lcall sub pop add out js inc sbb dec push mov je or cwtl cltd scas hlt adcb incb xchg mov add mov cmpb xchg jp mov pop test pusha jmp push or mov xor incl jmp pushf fmuls xchg bound cmp notb add mov push add ret add in (bad) ljmp sahf addl ret push mov or xlat mov stos pop jl (bad) arpl repz and aam test add add scas int3 (bad) lock sub and stc sbb std adc aam sub sub rolb add dec or cmp and rclb mov dec and or and aad add mov loopne aas adc sub jge ret jle inc add lds jbe fstpl nop or (bad) mov push (bad) mov pushf xchg loopne xchg jg or sbb jp in divb test mov pop dec mov and test rorb push cs push mov rorb repz adc icebp mov rcr and sete in fadds inc int3 dec pop sbb pop adc ret popa add pop jp mov mov mov fs inc pop idivb add int3 inc xchg xchg es push mov test nop sub push es mov in mov jle stos mov dec push push adc ds adc ret add fldcw push aam add faddl inc xchg xor loopne fildl inc sub (bad) mov rcpps and repnz insl add les mov inc jae sub insb inc adc int3 fildl add jl pushf movsl adc jp add subl pushf out cmp pushf cmpsl or ss (bad) sti adc ds add test push (bad) lret xor pop or in push fild sub sub lock mov (bad) add push cmpsl cmp mov mov push sbb mov xor add sub cmc adc xor mov mov fxch mov das nop insb or repz xchg addl popf inc bound pop mov sbb add aam dec pushf stos add in scas outsl jns sarb pop mov cmp (bad) adc push rorb jl mov adc push or hlt add mov push imul pop insb les dec mov jne test sub cmp (bad) ljmp or inc clc (bad) add pop or xchg test test add push and sub pop popf pop mov mov aas sbb test jmp (bad) test mov push pushf imul orb loopne rolb shl mov nop and sub pusha push mov sub pop cmpsb add popf aam sbbb adc mov dec (bad) and xchg xchg and xchg (bad) testb sbb (bad) fmull or in and add bnd push lcall nop sti loop sbbb lret add pop cmpsb xchg and or (bad) negb in inc js loopne jp cld iret rolb mov js adcl (bad) mov sub mov pop xor fimull push dec mov jl mov je mov and (bad) ljmp xorb or add (bad) ja cs and adcb shll lds mov pusha and push pop or inc jb test mov and in idivb fdivrs lea int3 inc mov pusha and hlt lods cmp or rolb mov mov nop or add je jo inc mov inc xlat test mov je mov xchg fmull sub fs lods inc in lret jge dec test mov cmpl mov call or mov push or sbb iret mov cmpsl gs nop cwtl pop pop lods pusha cs into push es mov sbbb (bad) jl mov cltd lahf outsl sbb mov sub arpl cmp and idivb or pop lods nop add inc loopne mov mov ds movsb cmp xlat out sbb scas ljmp cs xchg and sahf in loop jmp jbe mov dec inc sbb std mov xchg nop lods add imul faddl xor js push xchg or push daa sbb pop (bad) mov mov (bad) jno outsb icebp mov pop jecxz xor add xor mov mov pop xorb test mov and fwait add outsb or cs xchg add xchg test add stos int3 sbb add (bad) push (bad) sbb push mov jle test mov sub mov pushf roll lods fwait mov lcall dec pop inc adc call cld pop adc pop xchg dec jle inc or in loop adc add add idivb jo or jb and and add sbb pushf and notb mov inc xchg lods adc inc or dec lods add out repnz inc lret xor xlat mov adc add push test push or adc lcall daa mov jne adc insb in stos shll mov pusha cli enter pop cmp and push mov push mov in pushf ret repnz add xchg inc outsb mov and cmp push mov pop test sbb mov sbb call sbb cmp aam xor rorb (bad) xor fsub nop loopne adc sub adc les jo jl pushf adc jo mov mov mov xorb pop jmp sub xchg add insl shll fild or cltd push mov lret xchg das inc dec pop pusha cltd sbb or sub hlt rolb pusha mov sbb xor sahf js js add and cmp sub movsb (bad) sub dec cmp fcomps lret add (bad) (bad) pushf jno add lock push out xchg popl cmp das xchg arpl subl leave mov mov imul shll dec movsl add xchg xorb cwtl add xchg jns out fldl xchg and sub and je vmovups mov or andl fisub movsb ss xor fistl int3 fildl clc jle inc das mov (bad) pusha loopnew sahf hlt fs pop or push push add mov repnz cmpps lcall jecxz test in add test popl sub hlt jmp pop mov je jmp movl out out jge or lcall xchg cmpsl fwait inc movsb addl mov ret mov (bad) dec (bad) adc sbb xchg xor (bad) rcrl mov shlb lods loopne mov xor cmp movsb andb loop sbb test adc cld pop jb lcall mov scas sbb pop or (bad) out mov mov icebp orb aad lods push daa xlat adc mov xor data16 cmp jns mov fldl adc add int clc or and in push and jae lret inc xchg cmp aaa in xor push out jle sub sub enter test nop popf scas (bad) imulb (bad) mov push and add cmp or mov inc imul xlat (bad) lret mov mulb xchg sub push and or and jno out (bad) cld repz clc xchg dec fstpt ret sub pop lds mov or add pop stos xor popa cltd push add mov mov xor sarb sub pushf inc rolb mov cmp fcoms lock push das xchg adc mov xor jnp dec and test cmp mov sbb or inc and cmp and js mov or adc cld jle stos push ret mov add (bad) push or mov pop (bad) and or sbbb (bad) jle sbb xchg in rcrb cmp mov xor mov mov or mov fldt nop or push xchg mov cmp movsb into cmp mov or mov add xor or enter and sub sbb or mov add lea pop popa js sbb cld pusha roll fbstp dec fstp mov mov cmc cld xchg jge mov and test inc and and data16 mov and or (bad) mov (bad) clc inc sub enter xorl aam dec cmp and jo scas fwait pop icebp sbb jl adc fsub fadd je push clc movsl adc add jle mov or mov je sbb ljmp aam mov mov or pushf les adc mov (bad) xchg sbb inc sbb faddl mov add cmpsb xchg pop notb and pop inc pushf sub mov insl and adc push enter and mov mov outsb test mov and dec faddl mov sbb fcoms movsl jb arpl mov xchg jg test cltd xor xchg mov (bad) add and dec cmp cmp sahf mov mov xchg sbb xor les or in cmp add push ja mov xchg and sbbb jo and xchg adc mov outsb and fwait shlb clc gs in xor inc mov add popa sub rcr xor xchg push pop cmp pop sbb lret lcall stc sbb out insl in ds mov adc sub add sub rolb sbb std fmuls addb test sub das xor dec sbb je jl jae add or or add adc rcll pop mov outsb je mov dec dec mov mov fsubrs cwtl and mov (bad) out mov dec cmpsl sub in mov mov xor loopne icebp loopne dec lock inc cmpsl roll mov xchg lock popf mov cmp nop (bad) jae std cmc inc cmp test xchg enter cld cwtl push mov xchg add mov cmp sbb andl pop cmp sub push sbb add shll xchg orb je rclb cmp roll insb pop cmc fbld ret je les mov lock xchg push and sarl mov cmp jo into lds xchg inc pop andl and insb std lret inc or xchg adc mov cmp cs (bad) je cltd pushf push loop (bad) jae arpl add pop sbb inc data16 movsb ror sbbb test add popa fs sahf and icebp mov jge clc mov (bad) subb push jecxz and shlb xchg insb adcb stos mov shll dec ret into jg shlb hlt enter mov dec xchg stc xor add mov fistl int3 jne add sbb add loope xchg mov cmpsb fcoms int lret xor repz push movsb (bad) test in dec sub add xchg dec lds adc adc stos sarl mov mov hlt or aam xchg (bad) loopne hlt and movsl (bad) in add lds cltd sub fmuls sbb add pusha add or add loope fcoms int3 sub mov xchg pop push addb sbb inc imul jl cld lods pop or xor sub call fwait shll fmulp and leave pushf aam push je and add loope rorl and or cld jns sub dec sbbl enter cmpsb xchg fstpt add outsb xor shrb push inc scas mov aaa cmpsl xchg xor inc sub jne adc xor inc cs jl adc add je les dec jnp add fidivl inc test jl cmp add adc mov insb aaa test adc dec mov dec sbb out (bad) inc stos and dec push rolb sarb pushf (bad) subb test dec rol mov nop and cmp adc sbb adc adc scas adcl jns push mov add imul call mov cmp cmpsb mov mov insb mov pushl not fcoms add aam push sbb daa add mov inc ds mov add shrb (bad) fcmovnb inc or (bad) mov (bad) leave add cmp sub pop stos add clc xchg or and repnz push movsb (bad) sub test mov adcb or inc repnz xchg cwtl sub (bad) mov add rcll inc mov or xor ljmp pop and rcrb cmpb cs mov psrld jecxz sbb int (bad) jae push hlt orb dec cmp out dec into rcl ret cmpsb jno icebp in shrl stos int roll outsb jg mov xchg iret mov popa mov xor subb clc out std add pop scas sbb add repnz mov aas nop push add in test jae ret je cwtl xchg js js pop xlat xor sbb sbb test pusha adc jl push sub shrb jle (bad) imul (bad) cli or cmp popf icebp dec mov sub mov mov push push and dec cwtl dec jg,pt push and xchg outsl push jmp cmp jmp sub mov dec inc int3 addb mov shrl push roll out jo mov lds ss jne push cwtl in pop mov mov jge (bad) inc xchg pop add adc dec test ss stc sbb aad adc popf sti or inc fcomip stos or stos test add push dec lock fs rol nop rcrl mov clc int3 lock data16 xchg jo push imul mov mov scas push stos dec add adc stc dec mov sub aad adc lcall push lret cld add pop insl mov in aad lds xchg fnstsw rep mov or addl clc mov ret inc arpl rcrl lea insb jns fsts out push sbb xor or xor sbb adc lcall leave add jp shrb lcall mov rorb mov and add adc mov jge dec or adc fstpl and loope shlb and mov add push (bad) out test rolb enter bound cmpsb push push stos fmul sub mov dec cmp inc pop lock push loopne dec nop je cltd sahf icebp adcl xor sub push addb fdivrl or fadds mov scas sub pusha lock and mov cld rorb adc and mov jl xor out in nop mov mov popf loopne mov andl inc inc and jnp and loope and inc repz and cmp jo sbb xor mov mov adc mov test insb xchg and test fldenv in sub adc xlat sbb aam mov fmull sub rclb pusha inc jecxz imul xor daa cmpsb or dec xlat xor sahf mov out mov pusha adc mov sahf icebp shrb xor rorb jo inc jno mov fadds inc pop cmp rorl addb test jns shlb pop pop loop cli les push cmpsb scas pop rorb push push dec stos subb xchg or or xor xchg pop and inc lock push je xor or es jo icebp xor int3 add call lock loopne and and fcomps dec mov js or aam or loopne jno push or push cwtl add sub mov fnop pop cld add or loopne add dec xchg sbb andl sbb lret cmp xchg mov js inc lea add fidivrl mov mov add sbb enter push or in popa push push pusha or lret inc mov out adc sbb pop xor mov inc sub jge lcall repnz adc inc icebp cwtl dec add and pop or jmp adc in cmp stos cmpsb enter cltd push push xor enter add or rol mov into jns sbb pusha dec insb sub test pop cs mov add sub les push ret xchg xor cwtl lea or sub xchg and add xchg xor adc jno cmp pop sub addb mov cmp mov fmuls rclb movsl addr16 push test mov sbb movsb cmpb into mov and sbb outsb or cli stc inc nop movsb lods pushf insl in nop add push sub push push test jmp mov mov mov (bad) sbb fucom pushw sub es iret sbb loopne jb call (bad) mov xchg pop cwtl xor cmp enter mov sbbl mov add fistpll cmp dec cmpsl mov dec enter xchg mov hlt pushf nop adc in push test leave or ja movsb and xchg pop sub jp ja fisubr or or pushf insb test add int jp outsl xchg mov mov enter je jbe mov test inc mov xchg jl aam dec fs cmpsl xor jl inc sbb inc lret sub xlat mov or lock in jp jnp jecxz or repnz mov pop sub (bad) pop addl out cld testb pop add orl mov (bad) add sbb call out popa test dec ss or scas mov sbbb xor sub (bad) xor out stos lods leave out shrb add dec sbb xchg or inc mov adc inc cmpl fs jl sub imul mov and lock cs mov adc mov push inc xor js cmp jmp out popa adc inc xor lods inc (bad) mov fchs sub lods or add icebp mov dec add daa insb pop dec sbb pop or pop cmp xchg push xchg roll roll clc in popa adc cmp icebp pushf mov or mov mov cmp pusha imul or sub adc out lods fsubl cmpb fistpll mov mov test cld add mov loopne jmp jecxz dec sub nop ds inc add into jno mov push rolb nop aaa jmp dec push adcb test adc lret (bad) cmpsl int3 add cmpsb stos lea add rcr and ja xor jns lret mov loope arpl fs loop push jl roll dec dec pusha xchg dec or mov addr16 pop test add mov sub stos mov mov inc or and add sbb repnz adc add int pop mov mov (bad) adc add faddl jl sbb mov sahf xor xchg add (bad) mov (bad) jp shlb mov (bad) push cld loop adc inc (bad) sub and insb xor mov bound mov cwtl xor bound mov pusha je mov add adc into dec inc push rclb jle mov and call add aaa add mov sub pop mov (bad) mov leave popa mov sahf (bad) cmc adc adc js mov insl inc jl jmp mov fwait call push xlat mov out adc dec jmp (bad) sbb push jge aad sub mov lods mov jecxz (bad) sub xchg je in and (bad) jp cmp jbe adc mov lds fs ljmp mov cmpsb pop out inc xor adc push mov lret les cmpsb push fldl cmp mov out scas (bad) jo xor mov pop mov sbb cwtl jne push (bad) inc jecxz scas in add mov nop popa xor and xchg (bad) (bad) aam hlt or sbb rcrl stos cmc dec cmpsb es pop scas sbb rcrl (bad) jbe mov fmull nop sub sbb mov or mov rolb cmp xor mov lock sub mov mov cmpsl aam mov dec and inc and sub inc lret xor arpl add cmpsb dec negl mov lret add sub aam loope xchg shlb call stc andb cmp sub lods loopne icebp sub lahf movlps cltd cmp push stc adc mov cli lcall les jbe jno loopne and sub rcrl or sub cmp divb in dec popa sbb stc arpl je add adc adc lods mov cmp cmp and loop movsb sar inc sbb push push cmp inc mov pusha sub inc ds or rclb loopne sbb inc or sbb into jmp jg test dec fcoml cmp or subl jnp lret sbb (bad) test mov popa stos push clc movsl pop fwait sbb or mov mov pop adc xchg adc cli adc dec jne push mov or cmpsb or das lea jp pop push loopne clc add cmp gs and jae fldl or mov inc push sub cmpsl orl sar int3 cmp mov push sub or mov addb int stos and les and pop xchg aam sbb incl repz lods or push sbb adc int3 rolb mov push mov ja push sub sub xorb and push hlt xchg add stc xchg cmp mov sbb jo mov mov cmp sbb or adc scas and fcomp or lods outsl sarb pop movsb shrb mov xchg lds and shrb add (bad) push xlat mov fmull add out inc nop or test push and mov xchg adc mov mov adc lock adc mov sarl aam jg jne xor dec fs jns je mov shrb jl add lahf adc fmuls outsl push movb scas jno stos push stos pop xor jae pop pusha inc inc push and (bad) adc inc xlat mov xor lret test cli pop sub addl jecxz and pusha add jmp jge add or add iret ljmp bound add and and pop ds pop push mov xchg fstl and mov loope int3 aad loopne dec rclb in into cltd cltd lods cmc or (bad) inc pop adc xchg jl mov xchg jl lret mov inc push xor es mov into ljmp js mov inc cmp xchg daa xchg or mov adcl xchg push loopne push push push dec adc pop adc je test out dec mov push sub js popa addb sub fnsave es xor sub cmp sbb out dec pusha mov push fsubrs lods in clc (bad) hlt and mov adc xchg jae in mov xor fs loop cld cmpl jmp nop imul inc mov and jl loopne dec dec js inc bound jno mov fcomps jmp and pop or xlat xor sbb sbb mov push lods lock es call clc (bad) sbb mov push movsb xor and sub mov push orl and iret fwait push test (bad) xor notb push jl imul fbstp cmp sbb mov insb cmp xor xor mov push rolb outsl insl xor shr mov mov push push insl adc dec sub (bad) mov xlat daa inc xor sarl lock pop ds int3 push int and adc sarb call cmpsb loopne sbb add push inc popf mov add inc mov and mov cli jno add mov adc sub hlt insl pop adc push test mov xor std test or rol into mov notb decb or push sub mov insb fstl push dec xor cld jge xchg mov sahf jmp (bad) popaw mov jns inc push mov or mov dec add stos mov or in fcoms movsb js and inc add lea add cltd ljmp mov mov adc pop sbb and jns das adc mov xor push icebp (bad) mov lcall mov movl dec push shlb jae mov rcrl mov jge mov addr16 loopne xlat add mov cmp add seto and (bad) lock push int in aam insb xchg shrb into push add outsb test fcmovb jns jg add sub fs xor imul es mov lods cld add dec cmp fcoms mov repnz push pop push js mov ret mov sbb push mov xchg inc addl inc push insb movsb mov mov push loop gs sub mov pop imul add push sbb (bad) call add cmpsb mov insl mov add stc jnp adc out mov fs cmp test jae adc jg,pt add add push out inc orb lret clc imul imul flds jnp test mov outsb call sub and shl test push incl rolb adc xchg fcomps mov fxch mov popf movsb and push clc cmpsb sbb mov cltd in mov mov sbb iret lds fdivrs xchg addl sarl dec or jmp ret cmp sub call fsts add pop add adc cwtl jmp gs cmpsb js mov lret mov add xor leave mov add xor hlt cli test outsb and pop out adc fcmovnb sub jge mov gs cmp xorb loopne push fs or mov je push push adc push or xor aaa xor ljmp add jb cltd enter rclb add push pop adc mov inc cmp fxch push fs mov imul iret jl lock xchg adc push jbe and in lock into mov sbb inc fisub pusha sub jo imul xlat adc and push sub pop pop cmp lods test cmpsb outsl add enter or ljmp leave mov in jnp xlat adc push mov pop cmp maskmovq mull nop jp inc cmpsl xchg xor and adc cwtl add pop hlt jmp orb fmuls es pop fnstsw sbb in add sub gs nop fiadd jecxz add add adc jno xchg xchg faddl nopl popa pop call mov gs sub addr16 sbbb inc cld nop cwtl pop fldl push imul icebp mov jge pushf add mov rcrl aaa lea and sub iret loopne ljmp cmp psllq push adc cmp rolb or add test jecxz mov xor mov or repz mov mov sub add (bad) inc insl sbb jns sub inc sahf sbb je ss insb (bad) jo icebp or cmc call cwtl addl inc add and data16 xor and add jne outsb pushf and ret dec inc mulb sahf pusha mov ljmp xor mov subb out add inc adcb pop mov pop mov in lret cwtl insb orb and xchg add arpl aam inc or xchg daa imul mov fiaddl les iret lods (bad) mov cmp adc addl push mov cltd dec jle mov sarb add pop mov test dec push adc mov fadds daa or fwait aas add rclb jns fdivrs adcl cmpsb aas rclb add lock in test wbinvd jecxz loopne hlt push rcll or sub jnp add push mov dec in pop pusha test pop xchg dec lret enter out pusha les xlat dec das into add xor pop movsb cwtl popf push mov push adc push inc outsl push aam nop je xor pop sbb add push dec es inc test (bad) and jecxz sub mov loop inc testb push xchg loope imul or outsb loopne incl lahf push pushf out out mov mov cmp out loopne movb mov test mov mov xchg gs xchg enter or jmp pushf rorl sub or inc xchg push jge push popf cmp push inc adc or roll ja aam (bad) cmp mov mov test rorb and jecxz adc sbb pop ljmp sbb push mov (bad) les or popa rcrl int pop mov data16 or or push nop pop aam (bad) or pop dec inc popf and push mov lods sbb push adc aam or mov popf andb in xor std aad mov sbb pop and inc jmp jp jnp cmpsl mov mov dec mov mov (bad) dec js aas or fs insb aad mov xor pop addl or or ss jne out xchg dec adc and mov or push jae (bad) ss ret xor in dec ret sahf push ror fwait nop mov iret xor lods adc ljmp sysret shrl rorb jecxz mov popa mov lds push mov or fwait lea adc pop mov pusha mov sahf and add cltd sbb mov inc xor cmpsb or call jb nop sub push cmp sub adc sbbb nop or and mov xchg ss mov mov sub es imul sbb dec sbb inc sarb add test dec push pop xchg dec sub jo pop pusha sbb xchg mov lds (bad) cltd mov sub das add adc fs push add les adc fisubr ljmp add cmp sbb mov pop (bad) ss jl int3 mov icebp add ret das sub scas mov or add push enter add mov fwait das mov xlat sbb adc mov mov inc insb inc test dec and (bad) lock adc insb (bad) rcrb push (bad) and jl pop (bad) dec rolb int dec adc inc cmp in add (bad) jmp add fcompl mov cltd xchg mov and jp push jo xchg jmp mov cmp imull and ja out dec lds and test pop fcom and insl test push fisttpll xlat or nop lods lret sarb outsb cmpsl stos adc mov sbb addb jge movsb xor push sbb ret inc inc sbb sar gs inc add sbb adc mov add and ret pop outsb add and and or inc fsubs add test hlt dec test into inc add stos inc dec lahf adc call nop sub setns mov pop out test nop dec xchg add mov loop (bad) push jg mov in in (bad) xor imul cld sub orb pop ss add popf mov xchg jbe in lds and xor faddl sbb (bad) and inc mov push mov dec or mov sbb add cmp arpl out lods push in inc ret mov sub add add (bad) push sbb xor or data16 dec cmp insb leave popa adc lock cmpsb test popf add pop jno and ja inc sti jmp pop cmp lahf lahf fsubrp sub movsb call rolb inc mov mov sub pusha stos mov push aam fmuls pop insb lock cwtl fsts mov xlat dec mov add push lods test das repnz lfs and jl mov popa cmp mov pop inc iret mov int add dec add ret popa lea cmp out cmpsl sub jno xor ljmp dec or (bad) in or nop call inc nop adc mov sbb or (bad) int mov sbb pushf mov shr and aad cmp data16 rorb scas clc inc test cmp cmp mov in xor dec xchg pop and fcoms push xor pop cld cmpsb rol (bad) movsb imull add dec sbb sub xor mov adc xor adc push inc imul sub mov int3 mov lock or jl nop in dec das cld jo shlb dec cltd lret mov mov sbb adc add xor fptan jne rolb jle cs hlt dec mov xchg rdtsc push ficom add dec add dec subl jecxz add (bad) mov in adc mov ret inc jns add fcomps push aad pusha xor xchg dec adc add imul shrb and adc and lahf rorb insb pop clc dec lcall sub mov push add mov sub jno dec cmp jmp aam movsb inc pop imul mov sbb loope adc imul std inc jns mov ret fistp arpl xor cmp (bad) xor jno add fdiv and add push sahf lods mov in cltd and and scas loope add or imul insb stos jbe pusha sub aaa xchg nop pop add cmc dec das cltd add rcrb in push or repnz and sbb inc cwtl inc outsl xlat int3 ret loopne push push mov mov dec push mov mov cld lea arpl outsl cmp out add mov mov fidivl mov jp in fdivs sub fwait mov and xchg sbb mov movsl js jp,pn or in cwtl cld roll ljmp xchg mov inc inc xor dec xchg or pop lods rorb in cmp mov in cwtl dec dec add mov (bad) adcl dec mov adc xor gs jmp pop add mov outsb rcll and insb fcoms sbb loop dec rcr pop bound imul adc mov shll andl in dec and xor cwtl notl mov out fsincos test or or mov mov cltd inc mov dec inc push test cmpl add cwtl push aas cmpl pop bound jmp add out add adc sub mov xor sbb out mov adc test js movsl loopne icebp cmp xor outsb add test dec addr16 inc dec stos andb push pop mov add add ljmp push addl sbb xor mov jmp cli xchg cwtl xor out scas sbb pushf rorb mov inc pushf lahf (bad) clc dec das xlat adc cld mov push xchg mov add and ljmp sub lods mov inc ret mov nop andb add daa out js je push or push or cwtl cld mov inc pop arpl inc aam and xchg stc cmp cmp xor imul jae fnstsw inc mov pop testl mov pop mov or adc mov imul adc movsl pop test addr16 outsb and stos fsubs cmp add dec mov loop adc decl js dec rolb lods daa mov xor orl popf ljmp xchg cmp fdivrl inc bound insb lock adc adc jns add data16 out xchg cmpb cmc jo mov (bad) adc leave sarb js test xchg clc and inc pop mov dec and push and add roll loop sahf je adc add inc cwtl inc enter test xor sub icebp nop mov repnz mov push sbb dec xchg mov mov add insb push sub ds hlt rclb cmp lret addb jbe pushf mov add cltd lds sti and pop add cli je insb xor jecxz nop (bad) sub add jno cmp mov in jg cmpsl (bad) jo and dec int (bad) seto xchg mov repnz pushf inc loopne push or push mov fadds adc pop movsb xor adc loope ja or and and push mov subb ret push out outsb xchg xor clc int3 sub push adc xor pusha xchg call xor out dec repnz mov mov insb aam (bad) sbb mov inc jp add xchg fisub push jbe dec xlat lock xchg js push mov dec and negb sahf aas add sub jl xchg jno jp mov dec cmp (bad) cmp nop fmuls hlt fldcw push or jl add ret popa rorb hlt push sbb rorb in cmp (bad) ss stos test popf arpl push xor cmp push mov sahf fcomip in pop xchg ficom mov mov arpl cmp stos and add push mov out adc push xor int3 hlt push jnp es (bad) scas or (bad) add pop sub cmp mov adc add inc lods cwtl bound sahf data16 out cmp xchg mov sbb lahf data16 cs fist loopne lea xchg mov xchg aam xlat icebp fsubs adc fcoms jl sbb xchg loopne jle loopne sbb sahf xchg jo push dec outsb nop lods push mov test dec xlat es pop dec repnz xchg mov (bad) sub push mov aam sub fsubrs (bad) push (bad) xor lahf mov xor jns mov adc out cltd add and (bad) jp stos les shrl call pusha push popa mov mov (bad) inc movsl mov or mov out sahf lahf cs push mov sub and adc enter je orb jge ljmp fnstcw aad sbb and shr jnp lods push pusha adc xor adc mov and pop push movsb in mov sbb jb ror jmp insb inc cltd dec out add ret xor in xlat leave mov jl out pushf or sub (bad) je int3 fs adc and rol xchg test lcall and dec sti icebp adc push sub mov into std or and mov push mov ror idivb arpl fs fadds jmp xor cmp pushf lds or xor pop imul into mov fiaddl shll rcrb xchg mov mov in fdivr inc or call shlb mov outsl add lods fldcw dec (bad) lock test mov cltd (bad) int3 repnz jbe imul orb not or inc bound or push add adc lods jae (bad) shll pusha rclb sub clc nop add pop bound in mov incl lds into adcb mov pop adc mov xor pop scas pop clc adcl sbb adc imul push jno cwtl lock in fxch and adc push lret adc dec xorl fmull and pop dec add lods cmp enter add push ror fbld mov mov mov dec mov test ja dec push inc pusha and arpl cmp std jecxz cmp adc pop out mov add fstpt shl push sub jl sbb addl dec rorb loopne and add adc and fisubl sub ds mov into inc js and movsb cld add sahf sub fwait pusha test mov cltd cmp popf sbbl (bad) mov mov sub jp xor aam jmp jnp adc (bad) aaa xchg ds jp sbb push cltd or imul les cwtl andl push clc mov and cmp aad call daa dec push pop dec push jne imul nop pop mov mov ja pop (bad) adc jmp out fldl mov (bad) dec or push adc inc mov pop add cmpsb loope js inc js add push das add dec mov add test jbe stos pop or lods lea sarb lss pop push add or push cmp je push or aas lcall leave jl adc fwait add push inc jae dec in cli push or jg loop add adc js add xchg stc sbb pop mov nop push adc xor jp push loope cmpsl jecxz insl inc int inc sbb je dec sbb pop cmp adc rcll mov add sti pushf sbb cmp pop (bad) sbb pushl cmp xchg add lods jb add pop cmp add pop push or enter sub xchg xor add (bad) mov loope add cmp add xor mov jae stos push jo clc xor in mov xlat incl out adc add pushw addr16 lea fdivs jge adc hlt sti ret push lock int3 mov add lret popa in stc inc or out fs inc mov inc dec popa (bad) movsb sbb pushf add repnz fcmovu (bad) out add popa jne xor pop fnstcw cmp insb sbb mov lods popa sbbb lock add repz frstor sub in mov or insb (bad) or mov add cmpsl jbe test je and hlt pop pop movsl mov dec aas add fiaddl sbb daa jo test sub notb push mov das scas ds inc xor cmpsl mov clc dec add or pushf jge sbb loope daa loopne push add std dec pop xor add adc lods dec jne pop jmp xchg cvtpi2ps loope push adc mov or and and fs adc add testb aaa cmp scas fistpl loopne or dec (bad) sti push xchg (bad) push add sbb aaa add sbb call add inc push dec pop cli daa lcall add pop hlt insb lock iret jbe add sahf jns fild (bad) stc clc pop push xor cmp jb jecxz sbb sub movb dec add pop fdivrs pop rcrb in (bad) loopne sbb pusha add inc in leave add adcb adc and add std loopne pop pop fldenv pop jo cmp or int3 addr16 jb out xor cmp lahf jmp stos lret popa add or orb (bad) jle mov mov add ss mov fs (bad) testl add lahf jmp cld push std adc js and clc loopne push fidivr cmp add or cmp or fwait sub add xchg adc add dec mov adc and push (bad) cmc iret fdivrp adc pop ret push mov pop dec cmp scas xor push loope in movsb adc add scas inc outsl xorl gs rcll sub dec dec (bad) test mov (bad) mov jge inc fdivs add mov push add and (bad) cmc test out jecxz es pop inc cmp mov aam hlt fdiv add rorl outsl clc add aas fwait (bad) xor mov add shlb jnp inc ja cmp push xchg insl test in sti pop xor (bad) mov addl enter add leave loopne xchg sahf xchg aaa rol cmp insl inc (bad) loope inc sbb lret add add cwtl test outsb loope mov hlt sbb add test stos mov push lea or xor sbb add xor push insb enter pushf subb cmc xchg (bad) or mov or roll add dec int3 push stos add xchg add sub inc es dec adc sbb inc cwtl xor scas add mov pop movsl scas dec hlt mov rclb add jle lds sti cwtl xchg xchg nop push (bad) fbstp mov lret add add push (bad) enter jae imulb rcll iret mov and mov or jbe sub (bad) sub enter rcll xlat and pusha pushf mov pop xchg jle (bad) adc sub add mov xor sbb adc pop lret push (bad) neg dec pop roll out pushf bound sub sub mov jnp push loopne push inc sbb mov in xchg lcall js clc dec xchg ret add or lcall inc movsb cmp sbb addr16 (bad) jle dec add sbbl mov je lret or pop mov or shll aaa mov movsb add mov aam (bad) cmp popa shr xchg jmp pop sbb mov lcall or add js sbb cmp fs mov (bad) jo sbb pusha iret push inc inc push add lahf mov cltd xor add push shll outsl add and pop sbb sti and push fadds lock push push lock or push cmp nop js inc adc pop mov or or cmpsb xchg or andl xchg jge clc jmp pop (bad) dec jns pop jecxz add scas sub add xor jae sub mov cmp xchg jo xchg and cwtl stos popa popa mov (bad) shll adc je sub int jecxz mov sub mov add mov dec test dec sub push sub in loop lods pop xor and push outsl loopne out adc ficomp mov clc mov mov fisubr test mov inc in mov pop xchg add mov mov jmp mov in (bad) pushf xchg mov inc mov ret (bad) mov add xchg push cld xchg sub lock push and add adc mov clc cmpb fsubrs scas pop mov pop sbb daa aaa cmp push mov sub pop sbb gs (bad) and inc repnz dec jae or aad jmp lock jge add dec pop sahf loop add ror mov mov xchg test push mov add xchg pop cmp mov cmp test cwtl mov or cmp sbb inc and xchg sub clc and ret lock (bad) xor cwtl add push imul cmp or pop push add xchg cli jl pop and mov pop sbbb and or movsb mov inc lds push inc pop leave mov aas xor iret add std jnp into cmp jp imul lock lock or mov adc out enter pop pusha jp (bad) push jnp add mov rclb test lods xchg inc dec lock pushf jo test int fwait aam mov sub xor movsl add inc insb xchg pop adc xlat adc pop adc sbb and enter pushf into daa add mov aad popa les sub pop push mov add fs sub into mov ret test inc cwtl inc je mov test xor cmp jmp js dec outsl push rclb lock cmp fmuls and je xchg dec cmp sbb sub cmp push iret cwtl sbb adc sub push mov sar inc fdivrl enter push cmc fs mov iret xor add imul add aaa mov add loopne mov (bad) cmc sub jle xchg orb add cmp addr16 inc add and and xchg push sub or je pop out out mov mov mov enter je or xor mov xchg sbb cmp inc sub icebp jno int3 xchg popa movsl or inc int3 pop nop rorb mov lret aaa addb nop add sahf xchg lods shl add add jl fwait (bad) lret insb cwtl mov or sti xor xlat add dec sahf xchg lret add pop push jnp loop nop pop loopne mov lret and and lahf ljmp mov pop push adc les mov loopne in mov arpl andb stos in inc cmp daa xchg cli and nop js test das mov outsl lock jl add (bad) mov add xchg into sti add (bad) call jne into test addr16 sbb scas cmc sub out jmp mov mov add add mov popf xor test orb inc add mov push cmp push add clc dec or outsl mov xor lret dec (bad) sub inc mov int loop lods pop jnp pop pusha mov xorb sub stos fisttpl push jno add mov rcl loopne fild or and and int3 mov add sbb ret and nop pushf add rclb loopne xor xchg mov int3 outsb add and push loopne fucomp push and fldenv or dec add ret addr16 sub loopne popa mov in inc nop icebp daa mov test (bad) in pushf sbb mov jp push fldcw pop rolb xor or call adc add add xchg sbb dec or mov push jge (bad) (bad) jns inc inc (bad) outsl xchg xchg and repnz mov pop stc rolb pop sub inc lret mov imul or bnd adc int3 incl stc ret mov scas xor test jge repz xor jg mov popa fdivs sub push insb (bad) std add jmp xor cmpsb mov xchg mov add jae push shlb loopne andl wbinvd andl mov movsb fdivp call inc push and jecxz or or fisubl stos mov pop inc aam adc repz push loopne lret andl mov aam fsubrs hlt xchg add test (bad) in decl lods and nop in fsubr sub call loopne pusha or js repz inc cmp xor jae add sub xor insl (bad) movsb outsb shr int3 mov add gs mov adc nop dec mov add mov xor cli xchg push fmull imul or add xchg sbb add (bad) xchg sti xlat mov jns pop or lds subl ret xor jmp sub idivb daa rorb sub fisttp adcb xor push stos rclb orl jo lock std add add subb mov xchg loopne lock bound fidivrl xor cmpsl cmp lahf enter pusha adc cltd lods cmp mov mov pusha sub sbb sub cwtl adc dec sbb (bad) cld sbb pop leave pop lods jo xor lcall sub pop pop daa inc cltd xchg jg jl imul test sub jns mov cmp jno mov and xchg sub mov outsl leave sub xlat sbb pop andb cwtl and add or into push mov push cmp add or push outsl (bad) sbb arpl in adc fwait popa cltd add pop imull mov cmp sbb movb inc mov popa mov pop je stos pop cltd sbb imul jae mov nop xchg dec insl mov push in and cld fisubl jne jp xchg or jle sub and sbb imul adc inc fildl (bad) into jp dec (bad) xchg mov insb or in or data16 gs dec jae or faddl mov cmp xor sbbb lds cmc jns adc jne imul and dec adc mov addb loop sbbl pusha xor roll xbegin bound push sub test adc jae mov cmpsb xorl or test ljmp aam nop pavgb push pusha ret adc mov fwait lods add insb sub adc popa loop imulb pop add mov repz cmp pop adcl in push add mov sarb add rorb add xlat mov mov cli clc adc mov and nop enter das lcall je push adc scas outsb sub pop sbb jae scas sti rclb iret test push and and movsl adc (bad) idivl test fcom and aas push aam sub (bad) push lcall xchg push lods adc push add cmc jmp test fisubl jnp pop adc sub pop add pop push cwtl shrl pop rol ss cmp push jns sbb sbb adc cwtl loope pop sbbb cs push aam xchg mov and mov or jns fcomp pop mov push fs inc daa cli pop pusha sbb data16 xchg inc add insb insl lea stc push shrl and xchg or mov data16 sbb sbbl fdivrs cmp scas xchg lret inc mov adc cmp cmp aam insb les add add repnz add and call mov sub movsl pusha leave or repnz rcll test test sub push pop out sbb lock mov subl push (bad) ficoml push pushf loop sub sbb sbbb rcl mov test sub mov or mov movsb lret push push movsb add and movl cmp push les sub mov dec xor mov pusha pop rcrb lods sub add test loop rolb push mov adc push or fnop lcall push fistl xchg cmp cmp orl or add xor int3 sbb int3 pop sub hlt lahf pop pop and mov mov es and push dec xchg mov adc aam and loope stc pushf push add inc imul sbb xchg (bad) js sti and xorl rclb add fldcw dec test (bad) pushf add lock sbb mov fcmovne add popf fild out mov mov js cmp push xchg cwtl push mov mov repz add sub cwtl push sbb xchg or or shlb push push mov rolb fdivl xchg jmp cmc pextrw xor cli and adc loopne dec jl aaa sbbl push jmp call pop shlb adc pop push mov adc adc dec add lcall popa sub jg stos mov (bad) lret js add pop pop fdivr xor add in push sub pop adc pop aad inc cmp mov dec enter stc cltd jo and mov cmp pop popf fmuls pop jg fs inc in stos test cmpsl enter sub xor xchg dec add inc leave dec test loopne stos push outsb push inc and or cmpsl lahf sub cmp fs es xchg repz popa pop xor adcb gs shlb push rolb mov jle lahf in mov rcr lock stc repnz mov adc test cli push push or aad pusha pusha or cmp add test sbb or jne push pop mov ja in add cmp mov (bad) pusha lods (bad) and dec add bound jle and xchg rcl or loope pusha mov addr16 and push push mov xchg push add pop sbb xor clc pop mov add jmp sbb std loopne adc cmpsl xchg sbb jo xor or add ret push cwtl mov movsb repz loop dec mov (bad) push adc xor push xchg or pop pop cmc pop mov inc inc cmpsb mov jl xchg je jle andb and or xor popf or nop enter js loopne xchg popa nop stc out insl incl adc mov mov dec cs mov je xor xchg or nop outsl pushf cmp pop pop sub inc sub add lcall xor mov dec out into adc lods adc inc lcall jle pop dec push push das repz clc dec addr16 (bad) cwtl xchg inc jno pop cmp andl test sbb push push jbe pusha push or push and cmp sbb movsb and outsl sub neg jns jp sub mov fist mov jmp les push and lcall sub imul jno xchg jp adc fsubrs das sbb and loope icebp dec mov jmp test cmc into mov add int3 lahf dec sub sbb icebp jae sti ljmp or mov mov mov mov fs xchg cwtl pushf js xor adc incb popf cmp sub and mov cld out aam xchg sahf pop data16 mov je adc into lahf lds (bad) pop and mov xchg inc jb loopne jno mov xor mov mov pop lock andl add jmp push adc arpl adc sub das loopne pop (bad) jo lods add aas push add and mov rcrl (bad) and imul or les adc add mov dec and add sbb and xchg sbb jns movsl add lret sbb pusha ficomp xor es jae test cltd mov loopne std imul add gs push add and cwtl cmp das rclb ret ret cmp in test andb push pop or fbld push fs mov mov pop ja mov push mov xor shlb add in out orl leave dec fadds in sahf inc fwait add mov loope insb xor and push sub sbb dec add ret test ss xor jno (bad) iret inc inc adc jp les or sqrtps dec sbb cmp in mov sbb inc popf jnp dec jle ret nop (bad) daa jp icebp add jecxz pusha dec js push cmp add pop into jns mov sub push data16 rcr lods mov data16 in pop pop inc into push (bad) outsl rclb scas inc icebp pusha loope (bad) push test sarb (bad) fldcw pop in pusha pop pusha mov addb inc repnz mov int lahf roll add es pushf cltd rolb push push pusha add test loopne pop jl sub mov fcomps lret add inc mov cmp mov test xor mov jno repnz xchg push bound sbb js xor in pop movsb and and xchg jne xor in add mov dec cli fcom or xlat jl ud2 jp insl iret sbb cmp mov rcr orb inc lock jae xor out add add stc dec jl xor cmp js add jp xchg jno hlt cmpsb jne aaa jae xor hlt xor sahf call pop es test mov add inc mov call in jg pushf push dec arpl add jo or insb fucomi push js ficoml jp cmp scas addb adc jl cmp add iret pop add call call jp add insl and mov test loope loope or fist dec sub addb popf inc loopne pushf mov dec fisttpll popa or (bad) xor mov inc sbb popf mov loopne push jnp popa je cwtl loop push pusha bound jmp in mov aam sbb cltd cld mov jmp aad invd cltd stc mov icebp test sbb cltd cmpb xor insb and cltd and jno pop fistpll adc leave adc dec (bad) rcrb inc adcb mov in ja pop and test pushl icebp inc lds jbe fwait jne cmp xor aam enter aad cmp stc in cmpsl lahf inc add (bad) stos and add movsl test (bad) out sarb sbb inc jae and sbb ret pusha aaa inc push (bad) int3 (bad) nop sbb dec movsl adc mov enter inc test addb xor mov add dec out sbb ret lret add arpl sti rcrb pop loopne mov lock dec and sar add lret jecxz jecxz movsl daa pushf dec sbb sbb push xchg (bad) jge cwtl pusha sbbl (bad) scas mov insl push xlat jecxz fiaddl dec cmp pop clc dec adc insb add (bad) out bound jne (bad) aam lods pop clc pushf add aam fildl popa fistpll (bad) in cltd int andl add ret or icebp inc adc ds lock loop mov js push mov movsb adcb pop mov or rcrb push cli mov add test add push lret mov ss sbb orl fbld insb add popa out and xchg xor iret add lods cmc cmp and test icebp fwait or inc sub and adc popa sbb (bad) dec and scas leave loopne jo add fisubrl icebp add (bad) sahf mov (bad) cld mov cs cmp push pop fwait jmp add aad outsb es push xchg sbb adc inc inc out pop jecxz xor xor add sub in push mov pop push lcall push dec roll dec sbb xchg test es xchg hlt add out jmp add pmaxub es mov outsb testb adc in or ret pop push add cmc push xorb jecxz (bad) repnz stc pop lds shrb out xor add out pop pop out int3 and or sbb rorl pop cmp jl (bad) xchg add into push or push mov or xor cmp pop cwtl stos push lods dec add sub adc packuswb cmpsb test xor (bad) pop add test lret cwtl orl pop xchg xchg pusha mov fdivs push pop pop add jno pop inc pop add add cld pop out int3 fs cwtl mov pop jo push imul rcrl and mov dec movsb mov pop movsl call push cld cld arpl xor mov clc jge cmp cs and arpl scas leave and cltd adc or jecxz jno add ret mov js jecxz gs xor popf subl and dec cmp mov lods jmp aam jecxz add loope and push hlt mov fadds lock cmp roll inc test adc push sub add inc lea movsb clc xor pusha aam lret add sbb lock add aas sub mov push pop je stos mov scas xor push ljmp sub lcall and pop xor pusha inc push jne push xor ljmp sub data16 add inc adc sbb mov test imul cmpsb data16 and cwtl js mov sbbb xchg mov fwait imul cmp or push data16 and cwtl adc sub xor push pop add jp mov loopne cmpb add in mov jb shl fbstp lcall and xchg aam cmp cltd lock add repnz (bad) cli cld or push pop out sub cmp test inc dec inc (bad) in je test push xor pop jge adc dec mov jle adc notl push andb rcll outsl push js lds daa dec xchg loopne push adc call (bad) mov push push adc xor imul xchg add adc jge cld cwtl sbb mov cld adc and xor xchg (bad) js xchg jl andb loope adc dec mov jp inc sarb jnp mov mov or inc mov add aas add (bad) push test add into les mov loopne pop mov jo iret or call add add cwtl pop test mov mov xchg fldt js int3 dec (bad) int xchg test js add test pop jle les scas add fdiv add inc sti out (bad) or je mov dec mov add fildll test adc add xchg add pop lock push dec xchg dec adc add enter std push lods pop adc sbb cmp push and xor inc ret cmp adc leave arpl nop hlt add xchg xor push (bad) loop push jge mov inc sub pop dec mov leave out fadds add cld clc test jne mov out lds or mov xor sahf and cld (bad) lahf andb dec mov cmp enter test iret gs xor dec add test subb (bad) jbe hlt cmp repnz mov cmp adc adc sub cld push or fldl xchg add rcr or repnz or dec stos push add idivl or xlat outsl push dec cli (bad) fidivrl xor cltd call movsb sbb rolb scas pusha adc rcl push les dec movsl cmp inc and clc (bad) cmc mov daa cmp and sub add xlat dec test jne in xchg pop or inc je and add mov mov movsb dec sar ja sub mov jb shrb sbb or mov js orb shll push and imul rcrl pop pop sub ja sbb inc sbb stos movsl fdivrl and test pop mov mov mov sub jp rcl pop sbb cmpsb pop les adc lods xchg or imul xchg clc xor jno sub and pop mov idiv lods lahf mov xchg pop xchg add fs jecxz insb pop ret mov cli clc add add inc call (bad) jbe and ds out hlt xor lock pop hlt xor cmpb mov insl adc xchg xor out add movl cmp shrl mov dec jo add mov sbb mov push (bad) xor fdiv mov movd mov mov in adc clc icebp adc add mov mov and pop test insb or add pushf jle inc outsb add inc cmpb mov lock adc fucomip cmc mov pop call xchg popf sub sti pushf sub or aas push xchg pop addr16 dec loope sti sub fsubl cmp or cmp dec or xchg mov and or xchg sbb sub fcoml adc pop cli data16 add lock inc inc inc jl or push cmp inc jno (bad) cld shrb adc xchg imul fnstcw pop js push and sub add cmp out fcomps or inc xor pop call push mov jg and mov add iret test or loopne mov jmp push daa mov das cmp test cmp or push in xorl jno test lock push cli xlat xchg in pusha rcll jp jle cmp pop and aam add sti je in mov negl xchg add call pop and shlb and rolb cmp je iret loopne lcall into cmpsl int3 add out inc mov enter inc adc mov adc arpl scas jb dec inc mov pushf add xchg inc sahf stc mov ja in xorb ret or push pop jl cmpsb xchg pop xor push mov loopne (bad) stc dec rcll adc sub push add adc jae add or stos cmpsb adc fcompl sbb mov jl fidiv or (bad) xor inc add adc xor loopne or jo movsb hlt pop adc les subl xchg sbb add mov sub cwtl (bad) jns xchg nop aam out lea aad add mov or cwtl mov add cmc pop addb and jno add lods or (bad) push int3 push add sbb pushf iret mov dec jp nop push add xor dec dec mov dec test add fwait stc aam inc add pushf inc inc movsb jbe cmp (bad) or (bad) and inc push jbe sub insl cmp jo cmpsb lds cwtl push (bad) xor pop hlt pop cmp push pop xchg cwtl les mov int3 sbb enter stc subl xchg loopne repnz and cwtl dec or lods push jg sub sbb bnd mov mov mov fidivr pop mov push pop add mov add je mov pusha mov xchg in (bad) testb push in insl mov cltd mov andb jne popa aas out shlb add cmc lret xchg ljmp mov flds jp lock and lahf js lock mov addb dec in mov outsb dec add cwtl int3 mov jb lock jne mov repnz add scas sub test repz and inc mov add and cmp and fistpl push inc jl rorb and ret or insb lods push out jmp xchg sbb inc adc push cwtl push mov sub or leave mov mov jge out cmp clc add xorb loopne je movsb shl xchg dec mov xchg rol fwait lea add cs mov inc cmp mov es in ja mov sarl jns jae in push les shrb add (bad) ss or fld or clc pop lds sub mov jl lods push adc dec out add incl push add dec mov dec add jmp and push sbb sub cltd jo cmp dec add insb test enter and sub or xchg loop stos add int3 xchg mov (bad) rcl lods sbb pushf imul cltd ret in mov xchg or lock and add add nop movsb test clc pusha jo nop inc aam test addb push sbbb xor outsl in xorl hlt mov pushf pushf insb sub mov dec (bad) lock rcl and dec xchg jl je sbb movsl (bad) fisub inc or cmp adc push jne add shll add mov (bad) rolb push add add ja add out dec jb data16 mov imul loop xor ja clc out jne int3 test clc adc sub dec or inc or fmulp pop cwtl pop fdivs pop mov frstor aam xchg mov movsb dec nop call leave pop imul xor sub (bad) fcmovnbe adc lcall mov sub sbb pop ss or je les out popa pop jnp cld adc les js mov dec sbb inc pop cmp (bad) push xchg xchg imul jge cmpsb or add pop sub test mov or repz or outsb aaa mov rcl adc mov enter fnstenv pusha jno push cmovns mov mov adc and lods sbb mov inc xor (bad) adc iretw adc out xchg inc ret push in add jmp add lock cmp inc lret outsb cld and xchg push ret mov push push push jnp adc cmp icebp adc push pop add pop or rolb icebp mov stos sbb or ret loope lock sbb popa dec sbbl dec icebp (bad) icebp pusha lock into add insl mov js cmp movsb dec (bad) leave jno cli cmp add xlat sbb xor sbbl addl mov sbb push or mov rol mov jbe fbstp xchg rcrb je sbb cwtl mov or movsb rolb xor movsb lahf inc jo insb (bad) xor xorl rolb or (bad) dec or or rcrb ljmp pusha in xchg lods cmp jne cmp in cltd pop testl and addl sbb outsb add fmuls rolb insl add inc cmpsb sub iret rclb xor call add jecxz lods fisttp lcall mov xor shl loopne add sbb fldt mov jo (bad) les (bad) xchg xchg push xor scas add loope push nop sti mov cmp pop enter inc push shlb out xor dec rolb in cmp outsl sbb (bad) xor pop cmp pop lret pop das int3 fdivrs xor rol in ja cld jae cmp xchg and in and fs adc lock adc xchg int3 pushf jg jbe and adc rolb mov jge pop insb mov inc add push add xchg and adc cmc dec mov jae pop test and cltd fmull out std repz pop xchg sub imul xchg mov add jp pop sahf mov fsubrs xor es mov adc les ss xorl push mov cmp sub int3 cmp xor adc pop scas mov inc add push push arpl popf pusha sbb or or jnp cwtl add mov adc je cwtl add xor sub and mov cmp lret mov lods in rorb (bad) jl mov out and cwtl test push clc jns imul fsubrs ret adc dec popf jb mov mov and and js or push mov clc mov pop insl lds add mov add lods cmpl add xor sbb add fwait cmp dec clc les mov enter cmp or inc test shrb ljmp movl imul xacquire or cmc lret sub mov xor mov adc sbb sub rcrl and loop ja (bad) jne push add mov mov push xorb push lods std fmulp add add dec jp push dec xor test jne les std enter xchg shrb xchg mov sbbl cmp cmp jbe sar ds dec jecxz jecxz ret and test cs cmp ret dec sbb mov mov cwtl enter imul movsb jl dec mov int (bad) pusha mov cwtl and lcall add dec imul cwtl sbb adc cmpb xor sub xchg cmp mov rcrb jae hlt pusha and lea into add les fidivrl test sti and inc int xor add scas mov lds in (bad) mov dec lahf mov cwtl xchg inc push cmc jns push and lcall mov xor mov cld xchg pusha jae nop push aas lcall pop and and jne or int3 mov fstps and outsb adc dec orl lods fwait lock arpl cmp lods mov and dec sub icebp (bad) xor pushf dec pusha cmp push jp and bound (bad) mov or jne imul xor or test mov lock movsl add sub ds ss mov divb pop or xchg cmpl cmp xor push pop cli mov pusha xchg decl cmp xor sub add mov push outsb adcl mov push jle dec fmull aaa pop add push add out fadd add movsl repz lds cmp ds or pop icebp dec add cmp push inc shlb or and xchg pop pusha cmp pop jp add fwait insl push daa add (bad) push mov cmpsl mov and sahf sbb mov cwtl jnp ret (bad) lds dec pusha nop int popf add dec xchg xorb push jnp dec das pop adc je cmp push cwtl sub mov subl cld inc movsb sarb roll cmpsl lods pop fsub xchg clc roll pop jge mov add in (bad) pop add pop jno in clc stos add je dec cmc jnp,pt push push out xchg sub xchg (bad) mov cmpsl nop pushf mov push jno pop lock dec mov lods sbbb sbb push les stc popf (bad) xor add pop outsb loope inc jl lret sub ljmp js stos xor jno push jns inc mov lods bound out dec mov cld outsb jno or inc jnp sbb pop and lret or xchg dec cli ds icebp rcrb add jnp lods mov add loopne dec fsubl mov inc push sbb andps jns push xor cwtl dec das sbb dec push inc sub jg mov push rorb xchg cld dec add mov and add sub or imul add xchg shr bound or push les nop cmp rcl lods aam dec rorb inc mov mov fwait sar inc mov loopne dec mov inc or pushf in push mov and clc (bad) lods aad cs mov or sbb sbbb jl pusha mov stos add and lcall xor push cmpsb add outsb lldt jmp mull dec mov (bad) pop loope pop adc and hlt push push add add out cmp leave or js ret bound push mov testb imul jno frndint dec ds mov xchg movsb inc push xchg and test inc cmp mov je xchg dec pusha mov js stc inc andl pop sub fcmove cmp cmp and mov mov sub sbb adc and jle or add jg aaa mov xor icebp jns mov and jg ja les enter push inc mov int3 mov jno dec pushf jg and scas pop dec pusha dec mov dec or adc mov sbb inc test mov xchg cmp sti jno fisubl push dec lods add pushf addr16 jns inc adc in mov dec mov test (bad) and add in nop in mov sub adc mov std cltd loopne pop mov jo das mov push mov add leave dec movsb mov (bad) insb and sub jp mov enter and pusha pop fs adc add dec mov call dec push int3 sub arpl inc xor adc lods pop imull mov movsb lods sub push sub test inc adc sub lock dec dec mulb mov repz fdivs sbb or hlt cltd mov jmp repz xchg cli jmp shll pop dec inc xor into mov push push dec bound cmp mov jmp or push jp stc inc call mov mov daa aam pause sbb and add gs or inc sub ret into add loope mov dec inc jns bound rolb or dec sub in jecxz js lret push mov lods (bad) cmp sbb in jmp adc or and inc fs lret popl sahf pushf xchg pusha adc dec (bad) lea int3 (bad) iret push dec call emms jp push mov dec aam or inc hlt je and sub sub cwtl mov sub imul sub dec push sbbl lret lcall add xchg je pop icebp mov mov loop aas pusha mov test gs mov add push out stos mov add cwtl out xor in adc jo insl sbb jl fstpt push cmpl mov call and and or movsb in jp push leave pusha sahf mov int xor xchg pop cld daa push and (bad) xor in fs dec pop shl dec inc iret inc add ljmp arpl mov cmp mov lea insb adc or lock xchg mov fcoms cmpsb sub jl ja pop loope retw dec daa inc movsb (bad) pop lods enter mov jp inc cmp jmp cld orl (bad) inc ja push adc xor sbb sbb dec aad iret popf (bad) (bad) mov and cmp icebp aad loopne test or outsb add in addb cmp mov imul imul cmp sbb or hlt sub add add hlt xor arpl push sbb pop dec pop dec adc shrb jg mov jmp add incb insb addl xchg jne das rorb push mov inc add mov xchg dec rolb ret push loope jo mov lret popa ljmp out ret outsl inc or mov mov cmp cmp push push mov (bad) sub add xchg clc dec shl adc in mov daa dec imul add dec mov sub mov or out lret pop rorb icebp add add aam jp jmp lods enter sbbl mov mov in nop pusha ljmp std divb in add pop (bad) pop clc orb lds adc inc test adc add pushf mov mov push bound lods shrb dec bound dec dec and jbe sbbl jo sub inc inc sbb scas cmp cmpsb or aam pop mov imul ss or xorl int3 fdiv (bad) push sbb jae inc push std inc inc aam (bad) mov stos sub xor jo fisttpll mov fadd hlt lods adc lret inc and loop pop dec cwtl dec je pushf adc sbbb movsb adc cmpb adc je adc jb mov pusha cmpsl xchg aam jno (bad) and repz js dec loop jnp fs adc xchg lea push lods shll jnp sub xchg test subb clc adc ret dec addr16 mov jl push mov sbb dec add dec push into cmpsb adc or cmp cli cwtl std xchg data16 cld mov lock loopne add jae push add inc jns loop mov lcall das and inc in or fadds pop push popa cmp lret ficoml cmp or or cmp dec jl mov jg popa or sbb mov dec gs or and add mov mov nop dec xchg mov adc call lods sub les aas xchg adc std push pop push clc sbb dec rcll sarl push push mov xchg jo imul mov out jb adc roll je js test movsb fwait add inc out fsubl popa cmp js imul cmp movsb in pop add sbb sbb mov adc push rolb sub rorl push mov or adc sbbb loope loop dec movsb int sub and test sbb cwtl jno js push xchg arpl jl jg pop in jl push sbb imul or test mov inc jmp dec or mov fsubrl xor loop lahf loope or into add cwtl out or es test jecxz lds dec fcoml addl (bad) sarb or inc pop sbb cmpsb jg aaa xchg and push movsb adc mov sub out xchg loop and xor stos cli jp nop add popf rol loop dec adc dec push ds sarb arpl and loop xchg mov inc cli rcll adc into adc or mov bnd loop pop sti mov add loope push mov int3 in add std nop sub out in test mov adc xchg les ja xchg outsl pushf in sbb or daa sbb sub adc pusha out inc lahf inc mov push (bad) xor and popa insl or adc out mov or out push daa aaa in and pop push lock repz daa pusha ljmp adc push das dec push jo jle mov mov or jp xor and mov add lret shrb popa rorb sbb enter test fwait mov in lods inc xchg dec enter dec add dec dec sub add dec (bad) or xchg call (bad) into fdivrl stc adc or cli pop (bad) or leave xchg dec and xor and jnp in push mov jno das push mov test or xchg sub inc int3 add jge test or aas cmp cld and mov add jmp dec cmp mov jno xchg cmp push cmp pop cs mov xchg mov jae leave or inc (bad) jg adc mov mov das out lock sub cmp pop sbb add orb cmpsl fsub add adc pusha adc or and aam pushf insb call je add mov adc sbb inc xchg jo int add jne push int3 and imul loop push lahf in ljmp pushf jo adc add xchg push mov and mov test lock clc std popa sahf icebp mov test inc and in nop pop sub adc mov lea cld xor add call push inc cmp dec pushf pop int3 fs and push cli jns push mov test sub sub popa lret mov aas wrmsr or and jne loope,pn xchg (bad) mov push mov dec sbb adc or ja dec xor mov cld mov bound enter jno,pt data16 xchg pop (bad) sbb dec cmpsl (bad) icebp xor mov mov inc call inc cld shlb hlt and add (bad) add xchg mov in jl lock lods xor cmp daa rol fnop cwtl sub test cmc push loopne cmp mov sbb and push jb push add cmp test fldcw popa pop jg insl int3 clc pop adc jne test hlt cmp popa imul xor dec cs mov (bad) mulb ret push out subb mov cs dec cs or scas mov mov test mov add xchg bound jo mov inc dec push cld pop loop clc sbb and add push and aam xorb in adc movsb xchg lods mov fmul out pop jle mov data16 push xchg out add jno or xchg lds stos xchg cs sbb pop adc and clc push leave nop cmp or (bad) xchg cmp mov aaa and clc les xchg test and je bound add cmp or mov pop and bound jo xor clc add xor cwtl cmc aam pop call xchg mov add notb ja or mov dec push sarl cmp call or aas dec lret insb xor mov pop mov inc jg ljmp jl movsb test dec lcall xchg fs mov jg lods sub add pusha leave rclb sbb addb add or pop pushf mov js hlt push push aam sub dec mov mov sbb adc or or adc fwait adc in rcrl dec out inc js sti cmp les mov (bad) je or outsl jl movsb fisubl pop push pop jnp add inc inc in mov add and nop jnp rcll pop mov in cltd inc test cmp adc pusha dec pop cwtl cmpsl in movsl push rep jne xor sbb push or cmp mov cmc add in mov push loopne clc in push testb cltd ret fiaddl add jno mov (bad) jb adc fmulp clc ror xchg ret mov pop out rcrb test or stos faddl and daa hlt es inc cmp fcomps push dec aaa hlt (bad) adc addr16 xor test xchg lret jns mov dec orb pop jnp sub sub mov adc addr16 addl clc popf mov hlt mov xchg pop pop xor sbb push sarl mov cli lahf sti hlt cmp ss sub xchg int3 test mov xor shll loopne movsb les in xor repz jnp (bad) fs push xor cltd flds and daa setns push or and xchg sbb jecxz out pop push insb xchg fs jo icebp or sub cmp dec enter jo mov in mov in dec in add mov sarb in inc ds pusha xchg lret pop and inc push pushf mov sbb or adc cmp adc (bad) fadd cwtl mov mov dec test test loopne sbbb dec mov add icebp jecxz lods fnstenv pushf pop mov or xor mov xchg shufps mov mov adc cmp sub cwtl je push cltd leave mov cmp xchg pop dec call pop add dec sbb xchg jecxz pop push add gs nop xor xor add popl popa insb pusha hlt test add dec popf pushf inc adc loop or adc jle,pn xchg mov inc jb add sahf sub repz roll out xchg cmp adc or sub nop rolb loop sub mov push test gs fstpt sbb xchg cld je mov pop mov sub lock std js jnp jle mov adc stc loopne int nop add mov or xchg mov and inc out jns xorb (bad) hlt loop mov cli or fidivrl inc dec mov sbb pop aas pushw outsb aam dec inc repz (bad) adc jnp add iret out mov add shr jne mov adc pushf add cwtl xchg fs imul mov rcll add cld adc enter dec popa add jp popf fsubrs add push hlt shrb mov mov cmp or xor hlt sub mov loopne mov mov xchg clc fwait insb xchg mov jae clc out pop cltd adc add xchg xor jns xor (bad) dec mov sbb adc les add sbb nop adc sub jae push cs pop movsl mov inc inc lahf icebp add and test hlt sarl scas sub cmp pop repz mov add add adc int jb sbb cmp inc test notb xor add fsubrl cltd add popa enter shll fidiv rcll or mov mov rorb out xchg sbbb mov orb mov push lock lock inc (bad) sub jb (bad) ficom cmp lds ss js fcompl cld jo jns punpckldq hlt jne push mov add sub cmp add repz test dec aas cmp xchg cs xor push jo cltd push mov push xorl imul gs pop popf and cltd cwtl add call in out xor stc addb push adc sub mov sbb jnp gs pushw push dec mov (bad) jmp sahf push add arpl sub sbb sbbl test pop cmp add out xor movsb add pusha test mov jo adc bound adc lahf sti mov jmp xor xor iret rolb xchg xor data16 sahf aas cltd mov (bad) mov hlt outsb xchg test nop add jp mov push ss pmulhuw push and rclb pusha cmp cmp mov mov (bad) hlt inc dec sub cmpsb rcll nop or fcomip test addl adc add push add push pop cltd push mov orb and pop test mov jae fcoml dec and addl daa push or int3 add mov enter adc shll repnz pop xor inc xor cmp sarb mov mov adc shr and icebp sbb adc push push pcmpgtw and rorb ja jo nop add jnp adc cmp add dec xchg nop and sbb or pop dec mov js fwait add or cmp add jmp mov decb nop and (bad) lock sub ljmp sub call outsl or adc and or in push cwtl or js mov test aam mov inc add cltd pop sbb aam xchg push test divb test test inc jae adc push mov mov xchg and add call adc sub (bad) insb sub fnop jp sbb cmp int3 and popa dec dec pushf mov jmp adc pop jo mov xor adc push lods pop nop paddw mov ret cmp ret or sbb mulb mov clc cltd pop ret mov mov adc mov sahf in lea fcompl adc jl cmp pop hlt xor xchg test sahf mov sbb xchg mov rolb sub jae hlt and jecxz mov inc mov (bad) mov mov icebp add in push in jo sbb sbb sarl add or add xchg adc cmp cwtl sub pop xor sub loopne loopne fild scas inc nop hlt mov js add rolb cmp movsl inc jnp jl in cltd les sub adc gs cmp call dec imul fs xcrypt-cbc cmpsl adc hlt push inc lods pushf in cmc out rolb cltd mov xchg xchg lods inc mov hlt aad in pop dec data16 push push enter cmp sbb imul mov mov loop daa and sbb mov imul add jp and add mov cmp sti cmp repz and cmc (bad) sub xchg nop adc jl and pushf inc sub pop test mov hlt push dec insb ret jp mov lods push cmp aad (bad) cmp mov and pop lahf mov jae cmp xchg xor add or and mov (bad) push insl cltd fwait dec adc jmp sbb add fldenv mov adc test push std les add xchg push aas mov pushf xchg addl mov cmp dec hlt (bad) cmpsl in xchg lret fnstsw xlat stos mov adc hlt mov mov adc fs into out or dec or adc xchg mov push mov imul stc adc mov cwtl shlb mov inc inc mov or jno cld in sbb int3 cmc pop mov test pop sub jecxz aas push mov xchg loop pop sub add in dec mov adc push clc mov je por sahf add fisttp adc cltd std xchg push flds mov inc cld out cltd xor scas nop xchg test ja fistp cmp xchg jns or test add addr16 cld loope cmp dec arpl mov xor cmp les adcb or jge stc dec pusha adc fcompl lods dec and (bad) mov push pop push aad add dec fs push lcall (bad) mov aas insb inc adc (bad) in icebp out adc inc jmp clc lds add xchg jae pop imul hlt imul sub fidivrl xchg fwait adc clc int3 jmp or or mov inc fwait clc ror mov and daa jnp,pn inc adc cltd fnstcw mov ret idivl jnp in add and clc dec or scas jmp push and mov aas rolb jae add dec (bad) mov jno fsubr pop jecxz (bad) xor add pop push les cli and pop test lds rolb je gs das xchg push push xchg pop jp pop popa or cmp sub loopne decb pop or pop adc fmuls mov int3 dec out and push jmp imul or aaa xor and push dec cltd mov test call fisubr or clc dec lea inc pusha adc fsubp and add ret add sbb and rcr push jae sub pop sub cs jg cmp ja mov aaa ljmp add ror addb int lcall ja mov adc xchg imul std mov ss test test sbb clc test or pop add hlt jbe in jo stos pop mov fsts add and pop in xor in inc divl xchg xchg cmpsl inc je inc mov sbbb cli sub sbb or cs and out icebp repz mov or mov movsb fmuls divb dec mov adc jmp cmp icebp add les lret int3 sbb adc (bad) data16 les dec jno xorb xchg jmp push outsl or inc mov adc or rolb add ret mov dec popf loope add inc aas pop add out out rolb push (bad) add jbe push test test pop sbb (bad) xor repnz push in push dec jno mov sahf fidivl bound mov icebp add in add rorb and dec add test (bad) repnz hlt dec aam pusha add outsb ja sbb jle push xchg mov ret mov call int3 xor jns add cmp aad imul lods pop daa (bad) cmp ljmp lea pop add xchg dec cmp ret popf into dec movb mov test cmpsl cltd daa js test sub or gs mov mov inc pop push (bad) lock push pop arpl xor lods test jb in icebp in data16 sub nop add loopne mov imul mov add ljmp jnp jo cs rclb jmp popf clc push out test in (bad) mov add push dec sbb shlb mov scas add jecxz mov mov mov add mov pushf jl xor pop dec adcl std mov faddl sub test pop (bad) (bad) (bad) xchg test jae pop add adc push lods add xor push or cwtl cmp lock dec call inc mov (bad) orb lods push or push in adc (bad) incl scas in (bad) xor out into in test icebp out data16 lea fadds mov es sbb fimull ljmp sahf pop adc sti fisttp add ficompl movsb test dec xor lds fcoms jl push or ja xchg cmp push pop inc jle jmp enter bts mov (bad) fbld mov sub in push mov jno pop imul shlb (bad) test mov push leave mov cs (bad) xchg adc jmp add leave add add sub sbb aas shrb add pop fs clc xor add pop xor enter jg subb cli sbb mov jg jb jge pop frstor pop add addr16 xor mov add jae pusha (bad) sub sahf add bound nop jp aam cwtl iret jmp xor mov jo dec push adc mov xor push arpl out cmpsl inc roll (bad) scas push mov popf fsubs add adc out test push pop pop or scas mov mov insl pop jo or (bad) in movsl andb mov pop rolb fisub not sbb repnz subb or mov adc cmp pop call dec adc inc add jns sti inc inc cs dec xchg push push call cld xor pop sarb jl push (bad) icebp cmpsl mov shll adc pop sub test dec xchg out or addr16 in adc clc mov mov pop insl outsl imul push inc (bad) jge add (bad) call pusha and or jb mov popl rclb xor insl imul mov jp add out adc and movsb pop sbb gs loop sub or bswap mov add hlt movsl gs sar ret sbb lret shl xchg and test in lds or pop cmpsb nop shrb test insl fidivl jp mov movsb mov jne jmp adc loop cmp clc adc lcall and dec imul pop push into in shl out mov or cs imul call lock or loop in fcompl stc sub cmp cmpl (bad) sbb jb add mov outsl ret icebp push xor jmp (bad) lock cwtl push gs imul lods adcl push sub les adc scas lahf orl mov arpl pop or mov gs adc xor insl mov popa hlt clc (bad) and (bad) lea dec ret cld jno dec (bad) cmp pop and rorl push pop test (bad) mov or sarb ljmp call jbe adc pusha and add add mov xchg sbb int inc rcrb ret clc movsb adc adc es fwait or jae subb fstps nop inc sarl test or cmp mov movsb push scas popa out cs insb dec mov dec or dec and out rcrl fs dec push xor jne and add ret sub fcoml aam add push cmp loope pop (bad) (bad) imul sub push pop mov enter inc ret fwait jo mov movb add (bad) sbb subb nop js xchg subl add out popf stos ljmp cmp ja orl inc sbb add cwtl and dec out fs push mov inc sub jecxz sbb in sbbb push movsl call fcomps in cmp dec push cmp and mov adc dec jno ret sub fidiv mov jmp push aad adcl jo jmp sbb idiv gs add rcrb mov mov rorb insl xchg addb sub inc sbb adc pop (bad) testb adc insb jns repz adc or mov xchg add std jg cs aaa sbb jp pop xor js push push cli (bad) dec push pusha push jo adc inc enter xor or cli (bad) cmp mov jb sub stos add and mov enter in jo mov bound repz adc (bad) xchg adc addr16 and lods shrb add sub fdivl dec lcall xchg push movsl sub insb nop xorb add push pop pop fildl paddb push lret jno mov pop in push outsl inc mov jge fsubl in lods out sbb jo pop sbb repz insb int mov mov sbb lods xchg mov pop push (bad) mov sti popa test outsb dec sub xchg lock cli scas adc out or insl xorl mov pusha add sbb pop daa lds sbb daa add cmpsl mov mov daa (bad) cmp and mov inc ret andl pusha push (bad) sub mov mov loopne addr16 (bad) fwait imul push xor call movsb mov outsb mov pop sti or push xchg jno mov repz les outsb inc icebp jmp loop subb add mov mov pusha adcb add jg (bad) lret mov inc push sahf xor xor jns loope fs mov nop push rcll mov jecxz (bad) jecxz add mov addr16 aam push lcall (bad) rcll cmp mov sbb add mov mov test (bad) jmp or stos nop pusha repz mov cwtl movsb rcll orb iret inc cmp les jle pop adcb cli mov add (bad) cmpsl inc (bad) jo sub test loop fadds mov pop je mov adc add jb jno mov data16 lock inc or out scas popa mov popa add flds inc stc sahf push adc movsb jae add fs sub or stc (bad) add mov cld add fwait cwtl test mov popa cltd cmp in push test jp pusha mov js or popa (bad) pop xchg and mov or and ljmp mov push pop (bad) iret mov adc and lods repnz mov in mulb xor ret xor cwtl out testl add push push and lock sub out push push or add or test sbb iret sahf adc cs clc or add jns mov cmp mov mov or mov push les mov sbb rcr xchg and jb push jo pop cltd jae jp ret sbb add insb sahf (bad) mov bound enter lods (bad) std in mov outsl adc add dec inc or flds es int3 iret sti mov sub pusha xchg imul add xchg jbe mov call xorb (bad) add mov clc add and inc js jo pop (bad) ret or add jecxz sahf lahf nop sub mov loop wbinvd (bad) jmp movsb dec jne add popa xor xchg popa test and jp cltd std aad add mov call push pop push flds and call shl mov fwait pop inc jp stc xlat into aad leave movsl mov pop xchg rclb cltd xor fldenv or (bad) mov outsl inc lods or adc push adc enter add jg push push fs jo out sbb loope loopne add ljmp mov add push nop ret fisubl sbb fwait nop dec push cld or add sub xchg and sbb ja push outsb or xchg in pop or shlb jbe pusha mov fs inc xor inc cs movapd add popa in jp sbbb sbb push cld ds repnz jle jnp in add inc cmpsl dec or test push sub cwtl add jmp je dec push aad cmp xchg mov sahf test add frstor pusha insb or pop adc add or mov lods test lret add pop out fild pop dec push (bad) pop add das push mov test sarb push push inc mov les sbb xchg inc (bad) push mov xor add nop cli xor dec cmp adc scas fimul add dec add (bad) lock sbb fdivrl inc jp test mov lahf adc add sub mov int3 or and add dec rorl sub mov adc outsl jbe xor mov xor add dec lahf mov xchg mov add dec jl or sbb push mov xchg js inc sub push add dec nop jge jno mov int dec (bad) out outsb testb mov sbb jns push mov mov xchg xor add add sub lret faddl cs cmp int3 jb rcrb push push sti in adc adc add ficomp popa cmp mov stc pop mov mov xor fnstcw dec das sub xchg mov pusha (bad) mov popa cmp call mov and pop enter jno cs sbb add xchg or push add stos pop and push inc add and pop mov inc rclb popa (bad) add and add and icebp lods rol inc or sbb pop push inc add or pop push adc xchg dec pop pusha dec xor ljmp out cmp mov popa jmp dec aaa xchg mov (bad) test rolb xor incl push das stos mov adc mov jle dec push mov sbb xlat mov subl leave sub pop mov je cld jo sbb cmp xchg ret inc rol xlat push ds inc cmp pop pop sbb stos jnp sbb cli jns or addl outsb xchg (bad) xor inc xor xor lock sbb in lret ss dec jmp shlb pop fcomp mov pop cwtl add imulb adc mov pop inc lods push fsubrl push insb jge jne mov sbb stos pop (bad) testb cmp adcb in inc dec xor cmp ret loope mov imul adc sub sub orb stos inc lods imul js inc or pop jp pop mov add jl add push mov fdivs test xor shlb and dec pop stos xchg sub fcoml decb pop add jecxz add and mov lcall mov gs cmpb fisubl dec adc imul xorl mov lds add out dec test nop jo shrb and and add hlt jns xor (bad) cmp rol cmpsb sbbl and sbb mov xchg out lock jg pushf in jb xchg and and jno inc cli and xor adc outsb push xor add lock rcrl movsb clc jns in inc add clc pop inc add lods fimull pop dec imul into sub dec pop jo push adc lods std dec cld inc (bad) and sbb fdiv mov gs es mov mov push push add pop mov lods clc adc push inc aam mov fildll ret or or cmpsb sbb nop mov add outsb inc in icebp aad or mov es pushf (bad) dec mov mov shl mov jle imul faddp add std pop push lds in enter scas mov dec push mov mov scas add leave cmp je,pt dec add (bad) (bad) adc and and xor pop pusha mov xchg xchg xchg stos jo andb add xchg jbe popa notl mov add and xchg ror (bad) xor rcrb push cmpsb call loop in jmp xchg lods sub mov add mov data16 mov or mov jecxz jnp adc jnp xor cltd cli push in movsb lods and vpaddsw pop lcall cmp mov pop pop mull or or jno sbb out cld adc cmp adc dec clc or jl,pt adc mov pop jo and ret and ret movsb dec mov cmpsb outsl push sbb (bad) sub or or test mov adc fldcw inc add pop repz and push cmp ret push xchg jg pop fcompl lock mov push xchg and add mov icebp clc dec add cmp (bad) movsb lds pop jae,pt cmp arpl mov (bad) fistp loopne loope inc or test and sub in mov sub or inc popa xchg fisttpl dec fst shrb or add xchg icebp xchg xorb int fistpl sbb (bad) sti pop movsb cmp push lods scas adc mov jo cmc cmp inc inc jns lock or xor mov shrb ds sahf mov jae jp and cmp imul mov test ljmp (bad) or (bad) adc and rcl ljmp dec shlb mov cmp scas jns outsl push and pop ret push and je shrb mov fldenv inc inc ja mov pop or or popa cmc or jo rcl dec dec enter fwait pop push (bad) jo lea push sub insb out sbb es mov pop clc and xchg cmp or fdivs jo mov and push repz sub adc sarb and in nop and mov mov pop inc rcrb xor sub add pop scas push mov aas (bad) fsubs push xchg inc lahf jl (bad) cmp fcomps xor cmpsl or inc or push cli jmp cmp dec les pop cli orb pop inc push clc flds mov adc add mov pop add cmp aaa stos mov mov stos inc je xchg adc rorl popa lods mov ret cmp add jle jo or mov jle into and adc pop jbe cmpb mov (bad) push mov add decb js mov out out mov lods adcb sub fidivr push movsl sbb xor mov cld clc cmp sbb inc test push stos lea xchg mov jo js fucomp push add clc fndisi(8087 lds push inc leave in repnz mov lds repz lahf nop jl daa and pop or jge aad call and (bad) rorl bound xor xor int3 mov cmpsb fisub push je mov xorb pop sbb fwait xor cmpsb lods stos cmp pop popf xchg lock and adc addl les mov sub cmp and rolb ss aaa push add insl test mov and sub mov call pushf adc inc mov leave xchg lret insl mov fsubl je add sbb sbb pushf mov jl out add sbb inc mov dec in inc and in fistpl aaa shlb popa cmp jl rclb sahf add cmp rorl aaa test cld sub mov xchg sbb gs movb into sub cmp inc add ja mov icebp xchg adc sbb je add imul pop aaa sbb aaa xchg mov pusha or jmp movsl add push mov xchg or inc rcll hlt cltd add add in cmc xor mov mov and xor js daa xorl jbe inc sub divl add jo in shlb rorl loope or or imulb sub aas test mov sub cld xchg cltd add (bad) mov or xchg xor adc pop cmp push leave jl jns pusha push pop shl sbb aas nop and pop cmp rcll fsubs adc and and and mov inc inc pop mov clc jns mov jno mulb pop popl xchg xchg in fucomp test push ss out add jb push popf xchg mov xchg js add mov inc pop inc inc cmc inc and fcomps add mov ffree hlt and xchg jmp or std mov lcall jle push leave aas adc pusha jp repnz (bad) pusha fcomps push call or shr jmp cmpb xlat movsb mov sub jmp mov sbb push or xor push es or mov add or xchg stc flds inc js and nop mov inc pop stc cmc add add femms mov mov testl xchg push sbb dec push js and lock or mov (bad) adc push sbb cmpsb jg in or bound and add mov jp sbb jge mov xchg call cmp lret sti add inc xchg cltd mov mov dec xchg test mov test bound stc mov insb cmp mov lods sbb xchg js push add ret inc xchg std pusha inc pushf jnp mov adc orb mov mov fwait jp pop and test push fnstcw inc fbstp and add movsl pop orb cltd mov hlt prefetch cmp or dec pop and mov aas (bad) mov shrl int insb dec mov add jne shr add (bad) repz inc mov add cltd cmp dec add outsb push test (bad) ss je add add jge cwtl rclb lods xor push or or fisttpll add andl jae mov ret lcall add rcr sbb fsub rolb divl mov push inc or nop sbb repz add mov dec test inc cwtl bound push fld add scas add pop or sub push push jl int cmp cli push sbb movsb sbb xchg add (bad) xchg lock mov push int xchg leave daa and fwait jae xchg mov subl xchg and movsb add and add loopne adc clc addr16 test mov pop or add fdivrs mov sbb mov add add cmc xchg sub and lods sahf outsl cmp and adc or dec mov push mov and mov int3 rcrb cld lock jb sbb mov and pop add and shrb xchg leave pop mov popa fwait aam cmp data16 mov pushf push enter jg imul clc add add mov inc scas mov push test cmc popf or loope outsl clc pusha pop mov mov mov xchg xor rcrb add lahf adc adc fldl jo mov fbstp rolb mov ja in jb stos and push xchg pop daa mov fwait mov jle add inc test push decb lock adc and lods push xor sub pop iret mov loopne sbb (bad) (bad) add leave xor or sbb lock popl jbe dec sbb movsb adc add fsubrl add mov add std iret cli jne data16 adc mov fldenv nop push arpl call cli fldz in push add inc mov sub push mov cmpsl test loope in sub (bad) pusha out dec lock arpl mov dec sbb or imul cli lret clc std add xchg and (bad) jne in fld lock rcrb jl mov loope pop mov data16 int3 cmpl add rorl add cmpsl mov popa (bad) mov or mov cld sub addb pop jae sti imul fiaddl adc fisttp gs inc inc cwtl (bad) fwait lock mov hlt popa xlat cmp pushf add sub add xchg pop jle popl dec and es movsb xchg xor adcb and test push in pushf inc sub or pop dec ss add faddp xchg (bad) pop push (bad) rcrl inc cltd xchg fstpl push adc jle mov inc rclb in test (bad) (bad) xor dec movsb sub mov js ja mov imul (bad) mov jo hlt dec xchg or add pop (bad) addl rorl xchg (bad) outsb popa add imul pop bsf add sbbb or lods pop add jmp add pop repnz mov add rolb jne pushw push push xchg (bad) jl add addl outsb test cmp add call in ret inc dec sbb add (bad) dec mov inc xchg pop ret adc mov cmp insb (bad) add cmp or adc call dec ret outsb adc sub mov pop call sub ja push add movsb mov mov mov xchg jnp add mov sub jno sahf pop cs outsb xor movsb add call dec add out xor mov popa out inc and push sbb cmp fcoml xor aam pop xor dec test add add mov ffree fadds xor imul ror adc loop push ret into sub and inc aas ret adc add std or mov scas sub int3 mov ror pop mov cli sbb cld xchg test add jno dec outsl dec inc push out push mov in sar fs mov and aam add xchg cmc sbb xor js shll rolb sub or es orb push xor sub xor add test jl enter and xlat in add pop sbb (bad) (bad) js mov inc insb cli adc sbb mov int3 std dec adc sub cld xchg sub xchg inc xor enter daa inc clc les scas push add popf sub jbe inc (bad) push addr16 ret mov jb lds mov orl adc dec push in sbb roll cli js sahf repnz push movsb ret inc sub hlt add mov adc (bad) xor or cli in add xchg enter push cmp flds mov fistpl sub test xlat add into mov clc xor mov cli add rorl or mov xor imul pushf push (bad) pop mov inc mov pop sbb inc lods cmpl int mov pop mov pop incb cmpsl stc add pop cli inc push cmp mov cmp movsb lock rorb orb rcrl push jle cmpl xor pop sbb and subb push or mov je jo lock push lcall data16 push add cwtl int3 xchg movsb adc insb jp div adc mov cwtl dec mov data16 add dec push push mov std push adc popa inc and fldcw xchg push scas test xor mov cmp clc adc loopne push fwait or mov out loop or mov inc add iret loope xchg mov mov ss adc imul or add xchg loopne loopne fadds jmp add jnp (bad) and out or inc sub loop lds cmp aaa pop fisubr add iret push pop rorl cmp es sbb xchg mov adc iret add push ret cmpsl mov pop bound mov dec jo cmpsl mov adc cmpsl loop xor mov sbb add rorb rcr pushf sbb notl out sbb lods cmpsl add jg mov js or pop rorb jne fdiv add or add popa js and pop faddl jbe rcrl adc incl sub mov push cmpsl xor sbb inc or xchg jbe (bad) in add add push loopne incb add mov cmp fstps inc (bad) dec jnp mov cmp pop pop jmp xchg iret outsl andl push scas adc fadds push ds add mov mov dec cmovae add jo mov xchg dec xor dec js fdivrp sbb adc enter ret sub push std in daa nop jl (bad) dec add addr16 leave adc pop (bad) mov aam dec xor pop into orb mov push pop jbe inc (bad) pop addr16 arpl cmpsl mov clc xor fcomp les out xchg sbb movsb and xchg xor cmc andb aad cmpsb mov lret imul push jns push pop enter fmul ror cld pop pop adc or imul (bad) rdseed mov jg lock sub mov fistp aam and mov jbe fisttp repnz push dec xor aas push (bad) mov inc inc xor hlt cmp mov pop push repz cmp cwtl mov repnz sub sbb mov add or sbb and in or and push ret mov xor mov and sub decl lods add push jne sti jae sbb mov sbb sub in ds shlb sbb inc push pop cmp in push push cmc mov pusha and pop icebp ss inc sub scas out mov movsb mov ret adc insb dec push and lret (bad) call pushf cmp gs inc mov sub daa mov or jae inc jno add inc rorb (bad) mov adc push pushf aam add test inc movsb movl add xchg sar dec inc mov xor sub pop mov adc pop mov (bad) or ret imul js and adc imul aam adc and add jp js sahf js (bad) jno pusha pop pop clc call inc pop mov and add (bad) lods and roll sub lock mov and xchg mov or push push xor dec loopne lock dec movsb test clc add mov test out cs sbb or push int3 xor popa mov mov mov pop add add xor int3 adc push ds pop add jl jb icebp mov imul jmp add mov xor lret push ss pusha fiaddl lret nop rcrb sbb and out data16 hlt test add lea xchg cli sub into xor (bad) adc insb popa and outsb gs movsb or cwtl mov sub lret xor fs pushf jnp sbb rcrb jl fstps add adc add and out mov adc and push add popf sbb push inc loopne fiadd sbb (bad) xchg mov cltd divb ret add outsb xchg es lock sbb jg inc (bad) popa sbb call mov jg or add repz adc mov pushf lods nop add mov rolb sub movsb cmp add pop pop sarb cwtl call insl dec (bad) mov mov push pusha je bsr xchg int3 repnz mov pop adc xorb aam movups fsubs add (bad) jae xchg add ss sbbl push add push pop sbb imul cmpsb sub sub rolb lock mov mov sub iret pop sub call orb xchg push and callw leave xor mov sarb (bad) pause mov jge mov (bad) jb jle int3 lret je mov out add mov add loopne (bad) lcall inc rcrl rorb adc add addb aaa mov test enter ret fstpt insl add ror dec mov int3 dec mov shlb jl setnp pop xor ror pop popa mov push (bad) mov repz mov and or and pop dec push pusha es inc pop (bad) xchg inc and call push mov in and out fld push add xor pop ljmp add mov cwtl inc repnz push add inc sub pop loopne dec aaa mov sbb gs lcall add test xchg cmp ljmp (bad) xor mov cwtl sub stc add xor (bad) in out insl fidivl adc inc jb fild add adc mov lret mov mov mov dec sub imul in sub xor cmp add loop pushf inc and sub sahf jbe push out (bad) pop lret xchg lods sbb pop cmp or mov xchg lods inc dec shll sbbb lea test outsl and mov dec rol mov or push inc enter pop test adcb xchg jl sbb lcall fisub sbb xchg daa js jge fimull imul pop dec jl adc movl or add xchg fwait pop push lcall cmpsb out xor cmpsl sbb sbb sub nop jge push lods popf add and add add repnz or add movsb ja sarb push adc push mov add mov test arpl add pop mov mov jmp push add rcrb pusha (bad) pop int3 pusha or mull xchg addb in push xchg cmp scas mov jp scas push xor mov out (bad) add mov xchg add xchg push test mov je mov xor pop add leave push sbb mov or adc add scas inc xchg lods jnp pop add cmp out scas sarl lcall or and popa aas or int add sub sbb jo das sbbb cmp mov int3 pop xchg jo cmp mov push xor cmovo test dec cmp mov pop inc inc leave inc dec jbe iret lahf mov mulb lods sar inc insb jae pop cmp loopne es call add pop add es xchg and push or mov (bad) jno scas nop fcompl es repz lcall test mov inc sbb and xor ds cmp pop popl and cmpsb add pop mov xor aas mov lcall xor test pop stos or popf clc movsl lret cmp fcoml add pop and dec adc or ljmp popa adc add fldl lods pop scas test adc and or aas mov cwtl pop mov cmpsb test pop mov (bad) lock inc jp push sbb mov pusha cltd add test adc pop test xor push xchg lds add jl inc mov dec dec es arpl dec mov push pop xor and xor add dec lods sub dec cmp mov mov xlat and pop xchg and push cmp (bad) pop add mov jp mov or dec int3 into arpl sbb pop jl aam sub and or and loopne mov (bad) mov xchg inc add mov push test ret jbe cmp and ja xor cmc sub xchg jp sbb sub jge imul out mov mov jmp add test pop push add js iret (bad) mov scas jbe add jo jecxz xor xchg nop mov dec add lods xchg fidivl sub idivb inc hlt dec sahf pushf les sub cmp inc test pop hlt je add inc jmp cmp in adc iret cli (bad) in inc jno lock mov inc xchg inc in xchg mov and aas mov sbb (bad) fsubl add add mov sub fninit leave adc inc negb mov (bad) jb mov fwait rolb pusha jg dec lds cmp xor inc dec adc mov dec pushf pop cwtl mov inc dec jg sub xor push fcompl cmp outsb adc test dec add lcall (bad) dec je mov sub js add sbb inc js xor fwait adc sub les (bad) or les mov adc daa push dec xor mov sarb inc aas xor mov ljmp mov icebp xchg pop push fs test or bound imul andb sub sub test mov (bad) mov xor fwait cmp jg xchg sub test es aaa (bad) sub lret adc inc loopne adc je popf mov jmp mov int jne in fmuls sbb sbb cmp mull and (bad) mov clc adc push ret cmpsl sbb dec xchg hlt inc jae pop inc hlt add ja or or test cltd inc xchg and sbb repnz cmp pushf mov xchg dec push mov xor aad bound sub lock cmp or mov pusha cmp push test fsubl loope fs push pusha add xchg ret hlt ds (bad) or iret imul test sbb adcb inc cmp lods ret add cmp ret push mov pop lret xor stos xchg les dec mov mov push jne cltd and into pusha cmpb sub adc nop mov in sub inc jo lods fsts in lcall xchg inc stos push mov cmp andl inc or sub inc es adc push lcall sbb pop mov inc or pop jne enter cmpsb inc es das add xor (bad) jb add scas inc dec mov and jle lods or mov xor jno add scas inc cmp cmp imul icebp rol roll outsb hlt mov push je add sbb (bad) cmpb inc es add (bad) mov test add dec sub jge psubusw adc movsb mov sti int3 in notl repz das push add aas mov pop mov mov push fldl mov loope stos and ret push pop cmp add jle add mov loope and mov movsb int3 clc loopne jecxz xor add sbb das push sub in inc add pushl test mov movsb out mov cmp iret adc mov xor inc mov add jns adc subl lock rcrl test nop icebp loop push add mov and add rolb cmp jo test dec cmp and xchg add xor xchg xlat movsb mov add mov add xor cmpsl sub scas or mov mov cmpsb sbb jl mov fcomp pusha insl add adc imul in fwait movsb (bad) movsl mov pop xchg dec dec add xchg in jecxz test daa (bad) adc les dec adc sbbl add sub add xor sarb jp mov add adc and or xchg sub xor jmp leave js add int3 fcompl shr xchg push jmp mov les std lock adc mov mov movsb out add or push sbb and cmpb xchg dec or inc stos inc test add insb repz arpl fcoms cmpb int3 jecxz jne je xchg stos jbe adc sub add mov push rcrb ljmp int3 or jmp push jae insb fsubs adc test ljmp js call test hlt sub icebp add repnz cld and ret dec and inc call ret mov andl das jl push adc sbb mov xchg push mov add sub outsl adc inc roll sub push jno sbb mov sbb xor and sub lcall ret testl mov fcompl sub or aas mov sub xor mov scas mov push mov lock mov mov (bad) or xlat pop add les add fsubr jb stos movsb or inc xchg or sbb cwtl add cmp push or mov jns (bad) mov add xchg lret cmp fcompl pop pusha addl mov in pop lods add mov inc xor dec pop mov cmp or sub enter out and movsl xchg mov sarl or test stos (bad) cmp and xor loop sub mov mov call mov or push and and cmpsb and pop out cmpb dec mov into outsb je jae mov sbb mov add sbb or xchg pop and pushf cmc je add ds add xor stos dec js mov rcl aaa mov add dec dec je lods lock mov stos xor or imul cmp aam jmp cmp mov dec out sbb dec or push or out rolb stos (bad) out pusha ret dec mov andl adc vmread mov push mov pop imul lock divb test push mov js add in in xchg data16 rclb push sbb sbb mov cmpsb call xor loopne pop pusha push data16 aad call into test jl xor inc push ret jae pop add jno mov sub and scas stos mov xor pusha sbb mov orb xchg mov add (bad) mov add push sbb data16 pop daa gs sub inc hlt call call and fmul sbb mov mov mov cmp lods add (bad) notb pusha fist fisttpl fmul (bad) jg sbb cmp mov xor pop sub (bad) add and mov sub repnz mov ret fistl nop (bad) or les xchg ret push pshufw stc adc dec enter (bad) mov hlt or cmc dec dec inc out lahf subb cmp repnz pop lock stos icebp or push push roll movsb and xchg xor mov pop (bad) les mov aam jnp add aas notb add inc xchg ret (bad) icebp xchg push add mov mov fistpl sub and mov push xchg stc adc inc cmp movhps cmp mov fistpl sbb icebp add pusha dec sbb addl out fisttp stos pop fisubr insb inc leave mov jmp and scas dec les test adc cmpsl pusha pop inc sub jne cmp add aas data16 gs popf or add fsts into inc pop in add add push xchg inc add or pop or aam and mov data16 xchg enter sub mov dec xlat dec adc sbb and mov in aaa inc shrl out fbld stos jno imul or inc xchg stc xor fild jne and xchg adc jecxz add push les je add hlt mov addr16 pop pusha nop jns rolb xchg jge sub dec mov test fistpll add mov sbb dec (bad) std test jmp cmpsb dec push pop sbb cld fadds add gs cwtl jo pop fs rol hlt adc leave sbbb mov lret xchg pop icebp int add loope cltd jp and (bad) mov lds or and and sub dec inc hlt sub xchg push imul mov inc dec and inc pop inc ret dec add or push sbb add loope lods mov sar add push inc nop movsb rol fisubl adcl movsb lahf add mov fstps pusha sub data16 (bad) hlt addr16 imul nop xchg (bad) jmp and jle and and in xchg cmc sub add jg mov cmp outsl stos add cmpb jle lods add add fcompl push add lret mov sub or or icebp data16 gs movsb dec sbb jbe fsubr add xchg sbbb les dec xchg loop xor mov clc dec or scas push dec fistl add je dec loop jg sbb in and lods add cmpsb dec mov jecxz lods mov xlat jno (bad) lock fwait add cwtl clc add xchg adc pop inc inc jl mov out mov xchg das ret lock cld lods loopne push mov or loopne xchg and loopne push inc add xchg stos aas pop dec jl and add sbb pop pop popa jg aam sbb push fcmove or cmc call jbe mov pop leave mov pop jecxz dec sbb mov pop jmp push cmp jo jno (bad) adc loopne repnz dec push sbb mul lods mov add pop popw sub pop mov or xchg cmc adc mov sti mov add fbstp inc ret cwtl rcrl je or fs mov xor pop jne enter jnp sbb lcall mov ror jnp lock sub pop sbb pop pusha adc sbb dec mov add insl push pop in pop adc mov mov adc mov and mov xchg xchg mov sbb test push pop fmull mov mov adc pop jmp nop push jle pop and adc dec fcmovne mov fistp push or jmp mov les push dec dec pusha add add jp mov dec xchg insb pop lods outsb popl or dec cmpsb addps andb mov out pop add jl movsb and pop int pop sbb pop sarb or clc (bad) sub pusha call aaa inc xor pop adc and xchg (bad) xor test xchg jns add pusha int3 gs pushw push sbb add push lock mov lcall sar out mov add mov inc pushf cmc (bad) push ret je jo add push cld dec dec jg loopne ret mov or subl clc push sub dec or (bad) pop fild stc cmp repnz out or mov or or jo push xorl add call sar xchg lds into pusha sbb jge pop jbe push xor ret rclb movsb mov sbb push les stos test int or mov push lock and mov call jmp aam adcb mov mov ljmp push mov mov mov test call mov fisubl fwait push (bad) in les xor adcb cmpsl test or mov jmp jg rol (bad) jbe pop mov cwtl push test jo pop or jo ret stos das or mov jl sbb rorl lds push jl add mov and sbb push je jg lret sti jmp sbb xchg fadd cmpsb ds dec jl mov fadd and popa dec push fcoms test mov or dec popa or lods int3 push dec pop and jl or mov mov js negb xchg jmp sahf test rcll or aam and dec subb mov adc cmpb sub lret push testb jmp enter cwtl faddl mov adc ret stc (bad) loope stos test or lret add jl,pn add dec jns push cmpsl shr add es pop pop adc loopne js clc and mov mov div sbb rol push mov mov xchg daa aaa repz or xchg add les rorl mov dec xchg adc push das popl rcll addl push lods jbe cmpxchg pop imul imul pop hlt pop pop dec push lods or push mov dec xor loopne xchg or clc pop pop or sub stos cmp in push inc mov mov mov or call fsubs mov pop clc shrl pop xchg fcmovnb jp mov mul push and out fs pop mov cmp mov js mov stos pop rolb negb dec repz les lea xchg int jmp dec inc sub mov sbb fidivl adc lcall cmp jno fcompl jns xchg int mov mov mov jmp pop xor adc cmc jmp cmp rclb test int cs lock and aam fst cmc mov jle mov xchg push imull jge mulb sbb cmc adc sbb mov in imul jo sbb cs jnp mov js mov fwait je pop call insb jbe pop xchg das sbb sbb repz divb add push xchg and push pop xchg cmp push xorb out (bad) cmc push testl pusha adc sub inc cmp xor push std add hlt int pop pusha les repnz adc or xorb push and pusha inc popf adc pop mov cmc sub jno and shrb push bnd xchg repz dec inc les xlat lods push xor jae pop add mov push in xlat and and es add loopne push add xor sahf cwtl popa sub hlt sbbb fidivr pop into adc mov pop mov cwtl inc add push shr pop adc mov push mov lcall mov adc es enter jnp dec jo cli test adc mov lea jg adc movl push jmp mov les add xchg push push cmpsb push sub loope xchg mov mov mov imul cld aad arpl leave pop rorl test out xchg cld dec and daa mov fs test movsb pop xchg arpl movl shlb adc and lock and push add jno sub in outsl lcall mov sbb cmc es cltd mov xchg jo clc dec sbb jecxz sub dec ret add lds and mov mov sbb shr mov decb mov cmp jge inc lahf inc jmp cltd test pusha adc mov subl push aam icebp int push jns push ret sahf adcb inc jecxz pop cmp push and testl insb pop add jp cli push jge sbb (bad) subps iret bound fistl lock push (bad) lea mov pop ds cmp cwtl leave sbb lcall push inc adc xor outsl sbb jb lea xlat inc dec lahf std add or stos and push mov pop sbb adc adc rclb inc mov (bad) add push pop popa dec out pop add test (bad) xor test popf ret nop pop adcb fisttpll sbb add jo xchg test lcall cli jl ja in rolb or adc sub ja add pop sti sarb loope pop cmc cld xor bnd lods add imul cmc xor jg xor dec popf and xchg inc rcrl mov inc xchg xor sbb (bad) mov js outsl insl cltd sub add sbb push mov mov or sub lock dec adcb loopne fdivrl pushf scas loopne adc movb inc xor inc or cmp addb pop out adc dec pop popf push mov mov les xchg or push shl es adcb jne ret stos in dec je pop dec or bound vunpckhps mov (bad) or sub sub dec movsb sbb jb and xorb lds jae call fidivrl lret sbb ja mov push xrelease iret roll xor dec add shll or aam and and push and shrb fdivl pop xchg xchg pop lea or mov inc inc push mov stos sub add icebp and clc and ds ja cmp std nop adc adc and or mov and adc and rclb rcrl lcall mov sbb aas xchg pushf mov adc hlt mov pushf sub mov xor push mov adc lods movsb bound xor (bad) je push mov jns js pop pop sbb arpl (bad) and (bad) or dec fnstsw push and push in pusha xor mov pusha shlb add or cmp mov (bad) push lret cltd xor xchg push dec imul lahf dec cmp push pushf push mov (bad) jecxz mov pop cld xor sub cs mov add lea and and scas push mov out fildl inc adc add jno or xor push dec add repz cmpsl add pop int adc xor or fcompl orl arpl test mov mov inc fs jle or sbb adc and ss (bad) icebp nop push js dec push push or xor xor mov fsincos and (bad) mov add stos test add and mov mov arpl pop sbb jno add adc and or scas roll pop dec dec dec xor jp and (bad) xor addr16 outsb jp (bad) cmpsb push push xor or adc insl nopl mov fisubr aas js xchg popl mov jb mov fprem sbb add (bad) into mov test call (bad) (bad) push mov stos fcomps push clc pop or mov in sbb aas inc ret xchg xor das inc sbb mov push cmp aas dec mov sbb add mov roll ret push mov or sub add xchg and lret lods xchg movsb sbb sbbl xor icebp orb dec jbe pop adc inc pop fwait pusha mov test insl sbb fdivl adc cmpsb jbe sub enter or popf or outsb jne pop pop iret mov adc sub call xchg pushf add lods ds sub sbb (bad) cmpsl int3 or idivl mov (bad) cmp xchg adcb stos fidivr (bad) jecxz and or jbe adc cmp xchg xchg xor push add dec cmpsl scas cmp fildl icebp and jle (bad) push addr16 mov and test fild test lret sub push add popf fnstcw test lock pop xor aas leave sbbl movsb dec adc mov push mov (bad) repz gs jno sub dec pushf add jno mov test inc (bad) jae inc and les (bad) out dec or push (bad) ficompl movsb mov stos bound inc xor sub or mov js je mov nop insb push sahf add rcrb lret push (bad) and outsl cmp push insl inc imul cmp jbe lcall or push pop fwait pop mov sub inc sbb movsb mov gs mov xor pop rcl stc xchg push scas int3 and inc jb (bad) repnz test sbb nop (bad) (bad) or add inc cli and flds xchg int jns push jbe cltd pop lahf addr16 test xor adc push adc (bad) push adc add scas lret packsswb and cmp mov push ja nop je inc dec add sbb aad add cli (bad) sub jmp dec and lret jmp les or sub and imul ficoml pop sbb jecxz add hlt sbb push sbb cltd in insb cmc arpl add push pop jno sub mov add mov (bad) je jo jnp jo je or xor adc rolb xchg je xchg test stos lock movsb dec push repz push fwait inc jae rorb mov outsb mov inc xchg sbb mov xlat sbb mov pop int mov and or lret dec orl cld pop aaa sub insl mov (bad) aaa aas inc roll mov cwtl sbb (bad) dec pop push out sbb ficoml add jmp push cltd pop adc push add leave es outsb mov mov pop cmp inc or add push ss ret jo enter add mov mov movsl dec jo pushf inc add lock into jno cmpsb fs lcall nop es sub dec xchg enter scas dec add shll mov imul push cmovge adc inc mov addr16 test daa mov fiadd mov xchg jg adc js add dec jmp sub (bad) fdivl sbbb and and aas adc faddl les or insb add pop xchg mov cld and cmc lock ja mov or push enter xor loopne xchg xor call mov in mov or add push cmc inc scas mov xchg mov xchg movsb adc repnz aam dec push scas push xor jno adc lcall xor dec in das jb stos and push jbe push add arpl mov dec das mov pop jb aad hlt xchg push jge pop mov addb jno or mov dec rcrb insb sub or push add xorl cmp loopne dec std popa pop rorb arpl popa mov adc stos jnp adc or add pop mov leave imul repz out cmpsl ss jo jno add pop xor lock lds inc cwtl inc lcall aam (bad) sbb dec test pushf das lcall sub cmpl push dec call fwait push ret pop enter or (bad) xor adc mov xchg lods cld cmp sti cmp push lsl or xor add jno sbb ja and push jae pop rol cwtl sub add inc add add fwait xchg sbb dec pushf mov sti jo lock jp push push popf xchg jmp daa xchg aaa add inc stos hlt adcb testb ja push fdivs sarb sahf mov add cmp sarl xchg push pop int mov or push lock inc jle ljmp decl cwtl cs orb or mov jl je loope push test cwtl ds clc (bad) aaa push cld and jecxz xchg cmp adc adc cmp xor jl xchg adc in mov call xor and add mov xor push dec mov dec add pop push xor rorb or xlat xchg mov sti cmp cwtl adc fadds push jo ret shlb cmc add jg jne cld lahf mulb lret xor xor mov fstps or rcr or mov adc addb lods xchg cmp add mov je mov add xor imul mov and int3 int3 jbe inc nop mov iret lea add adc test inc inc in ret shrb ja sub pusha fnstenv sub arpl sbb outsb outsl sbb xchg loopne sub in pop push ret int3 xchg dec add (bad) mov xchg aas cs push xor mov (bad) jmp xor stos call das int mov or (bad) cmpsb dec faddl sub xor jb xorb add inc inc daa nop idiv pusha inc mov inc ja leave scas movsl lods rorb subl fnop adc fsubs xchg xchg clc mov or xchg xor or push add sbb popf or xchg pop xor adcl xchg mov cmp push or jg aad icebp cmp xor (bad) sbb enter push in sbb (bad) xlat push mov (bad) call mov sub pop in aas sbbl and outsl or repz imul inc sbb xor sub or fist scas sub fwait (bad) lret data16 invd jl add cmpsl test pop lret xor mov pop fadds jle and push cmp jne xor jb cmpsl adc sub (bad) movsb les enter add xorl and push cmp adcb in and outsl xor or mov cmpsb loopne mov cwtl jl add or clc enter adc mov xor mov imul inc int3 lret movsl push jge in rclb mov add push scas (bad) mov add outsl rclb pushf mov fwait push test ret in xor icebp repnz mov lock ret fldl or mov pop xchg lds mov and addr16 addl (bad) aas mov xchg loopne mov cmc bound decb pop fldenv ds dec (bad) (bad) sbb int3 orl sub rclb in sub dec jo fs mov sbb push imul inc mov push (bad) cmp sbbb mov lcall mov movsl add roll out xchg or add hlt xchg adc add lods mov push fidivl and sub add xor es es or cwtl rorb leave add popa xchg pop cmp and pusha mull jp sarb leave sbb bound lds fisubl or orl pop pop daa test outsl xor adc jecxz inc out loopne pop cmp adc ret jle xchg add sbb or jl add jne jbe adc add xchg inc pop and and sbb xchg rorb sbb ret jnp and insb adc add aaa movsl xchg clc lret mov mov xor xor mov lock les pop cmc scas roll add mov (bad) scas sub test loop or jl dec sub push stos movsb stos aam mov jo xchg and add inc mov sbb push sub xor jmp int3 inc jo (bad) mov dec xor call xor mov lret mov (bad) dec xor xor fildl or test insb mov sub stc cld mov sbb dec hlt sub add jge and xor std imul movsl loop push sbb pop loope jp and push jmp jl sarb sarl jns push pusha push push and jp push xor mov fistl pop or mov cmpsb addl jno mov (bad) push add and bound fdivrs je int3 jno add mov popf mov pop or icebp addl cltd xor push fldenv jo jno (bad) mov push addr16 mov int3 aad adcb pop pop inc in inc pop in addl and test test rcl xor test fs and sbb loopne add jo clc or pop sahf or outsb jle push les cmc sub movsl mov xchg cltd or call sarl stos into and movups adc loopne hlt adc adcl call pop loopne cmc inc arpl dec cmpsl rclb mov or mov js xchg or xor inc xchg sbb mov loop dec jmp popa insb cmpsl or data16 insl mov inc cmp rolb push int orb add xchg mov jns adc jmp push movsb add lea or xchg dec xchg bound test or or fist int3 pop jecxz leave add insl pop in movsl es pop rolb jle (bad) lock lock repnz adc js sub lock adc pop jns test movsb add ja xchg inc jo ficom mov adc add add leave rclb enter jns sbb rcr test push and pop dec ret cmp push (bad) rorb emms imul jnp es and add cmp je fs dec js enter sbb ds nop inc or mov push jne dec or outsl mov adc sbb (bad) mov xlat add cmp mov jl rorl inc fist mov imul enter cltd ja pop aam adc nop sarb sbb test adc (bad) xor xor (bad) xor ficom add xor movsl pop cltd insb iret rolb cld ja popa push test repnz mov int3 dec int adc clc sub push add jno arpl fwait mov and jl push jnp aaa cltd pusha add mov aas (bad) popa std pop iret pop ret xchg loopne add cmp nop fild scas cmc ret jo scas jno add jns or jl das add adc fs ja int3 add pop (bad) xlat jo xchg jg add pop mov inc (bad) mov cmp or lcall xor outsl cmc adc xchg or mov mov xlat add push aas inc mov aad nop cs (bad) xchg or and aaa cwtl mov mov cmp or ds mov (bad) mov xor cmp fstps inc mov pop push ficoml arpl pop inc or adc fimul hlt rcrl add lods dec mov lea push adc mov cmp popa mov add jmp push lock movsb cmp inc add lods mov sbb push addr16 jle inc jl fisttpll inc jl push (bad) add pop popa mov in mov sbb jp cmp add cmp add icebp vpaddsb sub outsl mov pop add (bad) xor scas xchg nop xchg or repnz or roll push push xor push inc and insl push sub jle sarb jae push out ljmp add sub int3 cwtl clc jae (bad) aam cs xor push mov push pop out pop fstl cltd jbe nopl out sahf lcall or xchg cmp pop pop imull jle fmull xor pop or jmp shlb cmpsl insl push jns sub gs add sub jp jnp sbb mov mov cld shll sbb add (bad) pop xor pop shr test jo and fs and gs sahf jae mov pop test push insb add jbe stos rcl pop adc in mov sub or sbb xor or rcll insb cmp add xlat xorb sub cwtl cmp cmc fucomip xadd push aas inc or xchg rol sbb add aas out push xor lods nop add inc dec pop push xor add enter popf and or call psrad lods jno xor mov cmp add inc or add loop push add jecxz mov int3 push add or daa maskmovq testl and inc mov jecxz nop in mov pop fsubl sub dec push in pop jmp push cmp cltd add xchg outsb daa (bad) (bad) jo sarb xchg jb add add xor outsb fbstp fistpl adc hlt ds nop and add cmp jbe pop add out aad push dec inc addb (bad) daa popf inc ret push aad jbe cwtl push imul or or sub mov pop xchg push dec int3 add outsb dec xchg fisttpll jnp dec sbb adcb jno jae pusha in mov dec add adc mov add fcompl push cli add insb jmp xlat daa cmc bound fcoms ljmp in inc ret sbb xchg mov adc cwtl add pusha lds shll inc pop dec add inc adc push cmp je andl lds xor nop add xor or mov movsb mov cltd arpl add dec inc xor cmp xor ficomp fcmovnbe adc dec xlat add ret cli push cmc add lea pop xchg dec and imul cwtl dec dec je pop insl das loop and cmpl or cmp xchg pop jmp xor adc leave (bad) mov repz cmp pop and xor mov in dec xor mov hlt inc imul xchg mov add mov xlat ljmp push shrb addb xchg pop fild lret add rsqrtps mov inc sub sub fdivl cmp dec dec pop mov call icebp andl sti push adc popf jg xorb arpl pop (bad) sub lock cwtl push xor xchg dec cmpsb dec inc test add mov jl cltd testl push test negb fisubrl jne mov mov add lock sbb push pop stos mov ror fldl jb or lret mov and mov shll and cmpsb add sub mov push popa hlt (bad) cltd out add (bad) jnp mov mov xor pop rcl dec push inc pop cld jg sbb mov adcb ret xchg push xor adc adc push in lcall add jae add lahf push push add add nop loopne mov cmp xlat enter inc xchg xorb and rcl cmp test xchg dec rorl adc cwtl call fldl sub and in nop or and inc std pusha push daa lock outsl in ret xor dec cwtl lcall daa push sbb fnop jmp addl in or (bad) (bad) rolb mov lods mov xchg orl push add xor cmp popf dec rolb adc xor inc pop fisttpll into mov loopne mov pop jg inc movsb ds test cmp lret push jl jo add xchg cld add cwtl cmp xchg jle mov lcall sbb test cmp inc dec loopne,pt xchg (bad) dec add pop mov push sub js call insb add mov xor lahf and cmpsb fidivr rcrb and xor xor adc pop andl xlat dec jmp dec jg add rol js mov aam dec adc inc cltd lcall cwtl dec jne pop sub pop loop aas adc insl add pop jle inc fistpll (bad) pop (bad) mov jns mov loopne add repz cmp ret adc xor jp push inc mov mov xchg jnp add lahf decl adc aad dec mov mov add pop gs inc jecxz push add pop adc dec adc add xor xchg mov aas push cmpl leave adc mov cmp (bad) lds fldl (bad) push pop cwtl lahf sub mov jl adc loop hlt jbe aaa dec cmp add cmp push dec pop sbb icebp lret adc sbbl add add (bad) dec cld nop or cmpsb rorl mov imul mov scas mov sub in add outsb add ljmp idiv add add cmpsl sbb inc outsb pop jge push add jp outsl pop rcll pop mov mov ja test xor popa movsl (bad) clc aaa xor push adc and mov pop scas add fbstp cltd jp loopne rcrl jno push mov sub cwtl nop add (bad) adc int sub pop lret sub mov fcoms xor aam inc sbb adc push (bad) xor cltd or test lock lahf rol pop xchg sbb ret mov aaa push xchg jge arpl sbb add jns pusha add sub pavgb pop xor rclb fimul add imul push (bad) add subl add adc and mov sub inc sbb add rorb sbb in xor clc cltd add int3 rcr aaa insl xchg rolb push jge dec enter mov adc and or clc adc mov add outsl jns arpl sbb xor add pop and and and xor push sbb xlat (bad) and or mov jns inc and les lock rcll outsb sbb xchg or faddl push out pop mov fsubrl idivl xchg mov and (bad) sbb dec sti dec sub xchg xor xor inc pop cld aad mov nop scas lahf cmp cli in add test inc xchg adc pop pop aad test adc jg fldz sti dec sbb sbb mov add ret arpl sbb xchg sbb push inc enter aaa push enter adc loopne test mov pop add ret mov pop loopne xchg aam (bad) push cmp dec mov and adc sbb dec imul iret inc fwait sbb hlt push xor add popf les dec push arpl add aaa in xlat push mov mov add movsl xorl (bad) jb sbb xchg add int3 jecxz fmuls add mov jns add (bad) (bad) out and sbb and add mov aam shll jne daa mov fisttpll xchg pop xor mov fildl xor sub mov add in pop jmp mulb jg sbb push add and fildl jmp adc imul sub add icebp cmc cld mov push add pop mov xor stos add mov push cmp insl adc sub jo pop xor icebp cld add xlat mov cmpb test faddl add hlt outsb xor int mov add aaa loopne xlat add pop or addl push adc (bad) mov lds fdivrl push add gs negl add hlt popa aaa add andl and hlt adc dec ljmp cwtl mov pop pushf xchg push push and stos dec subb xorb fwait push jge addr16 lahf dec cltd adc mov inc dec punpcklbw push sbb sbb test cwtl fucomp cltd pop xchg sub or sbb sbbb pop daa test adcl divl inc mov adc mov push cmp repz cli (bad) xchg xor push mov aas fwait pop jae sbb cmc push ffree dec xchg xchg or sub sbb (bad) mov (bad) fiadd xchg push insl add cmpsb jbe sub add dec andl nop xchg imul and lea jae pop fdivrs lods sbb sub push stc cltd inc test in clc movsl push xchg xchg dec or add xor (bad) cmpsb push xor cmp adc cld repnz (bad) outsb jge adc in mov or adc shr loop lods addl adcl push push mov in enter pop inc popa (bad) cmc fldl in xchg cli mov call pop popa sbb add ret and xor loopne adc ret dec bound (bad) lret (bad) js ja cmp cmc repnz loopne push test loopne scas adc loope add jmp test movsb pop pop or mov mov pop call and cmc push fidivr adc imul nop les add je add fldl adc fldt imul or fidivr ss fildl (bad) mov push add addr16 outsb pop sbb adc jae add mov xor push loopne xchg add in insb into fs xchg fnsave dec sub xchg pushf add hlt xchg xor ja or (bad) mov nop mov dec inc call dec adc lcall aad es lret iret or or cmp sub imull sub bswap and push das jae cld adc mull push xchg jns ret in jo push lds sbb dec xchg lcall outsl fiadd pusha and aaa add sub fcmove sarl arpl addr16 inc cmpsl inc shlb jo adc add jne inc pushf mov lret test repz and add fbstp dec rdmsr inc and loop sub jae test in xchg aad fiaddl mov and movsb add dec inc and repz or lock add pusha xchg lods pop es add push sub cmp inc pop sbb lcall lock sub in add punpckhwd ds stc addr16 sub xor xor fsubrl dec jnp cmp inc pop stos add pop and dec in mov dec xor mov or or in mov enter xor pop xchg mov loopne (bad) ljmp (bad) daa lds lahf add inc nop lock sub jo add je lret fcomi dec add out mov push add lret or pop cwtl fwait ret or push mov cld into leave add shlb fwait sub out and jo,pt add cmc mov test test test pushf lea js and xchg inc int xchg lret push insl mov mov fildll pop popf jne roll push and cwtl sbb ret ljmp add cmpsl shrb xchg push or pusha repz ret iret hlt nop pushf cwtl xchg add aad jg adcb lds sub call mov std cmp push add and jne mov and fsubrl dec or and pop jne push loopne add mov and ret call add ficompl cwtl sub loope divl xor pop dec push andb push ret jmp or inc or xor (bad) mov xor test pop xchg or or icebp jae push add mov orb movb pop decl orl test add and xor dec out and pop or mov mov xchg push cmp or fisub (bad) lock (bad) jno cmp insl push mov xor (bad) mov out not or jge xchg xor pop shrb rcrl in test pusha cmp add push int3 inc jae cmp dec (bad) stos push lods add insb xchg test or and mov sbb stos (bad) jbe loop test hlt xor les (bad) (bad) cmp cmp add mov pop add and adc call jg push lret mov pop cwtl into and mov sub inc cmc dec inc clc or add sub in test or pop lds xor add mov es lds sti (bad) and loopne mov jo add sbb xor addr16 dec lods pop test ret and push inc lock pop push push pop fstps pop pop xchg pop ds pop mov (bad) cmp dec aam inc push xchg sbb mov pop or fs cwtl sub iret jne mov sub fwait lods lds and sahf test or add push or mov mov in dec cmpsb add and rorb push icebp iret in add mov cmovp and (bad) xor add (bad) jl je adc psrld mov or fsubrs mov inc fidivl inc imul xor add mov js mov mov add lcall pop lods mov and mov jo js inc call pop cltd jl or cltd hlt mov mov xor dec sub rcrb pop cmp inc and dec pushf adc outsl nop dec repz sub or cmpsl xor push rcrb and inc pusha xchg or xor test and push inc ja add rorl out pop adc stc (bad) push test out mov out cmp popf mov mov jo cwtl push call les mov sbb jo insl adc sbb add mov adc lods jbe (bad) or sub mov xchg jnp add mov es jns sub add or pushf push mov push mov xor inc ds loop ss pop ficompl out imul adc mov adc mov (bad) (bad) sti movsb (bad) les jb add dec mov pop sub test and jg inc sub cld jae cli or inc and add add lret mov push je push inc jo aaa inc or sbb add fwait hlt mov inc jmp push xor fcomp aam xor out inc jae pop push xchg arpl pop shrb addr16 mov add pop dec pop xchg mov mov out jmp rclb iret mov cmp pushf out xor das pop fcoms jl sub adc int3 add inc icebp bound mov push mov leave neg inc mov out and lahf push addl jb inc lods add xor fcmovnbe loopne addr16 lock in out mov mov jmp in xchg mov add fstp adc mov pop mov pop lds mov mov add sub es pop jo mov xor cltd test negl xor sub (bad) jle fwait add mov push push add mov lahf add hlt cmp pop std mov jbe pop ds mov out mov pop mov adc inc jecxz loopne mov fnsave or pop lods inc hlt fsts add add and pop push push (bad) jne mov cwtl sbb xor xor and jno stos dec data16 mov jle out adc fisubrl mov jle sbb sub jo add pop (bad) xor stos and jb outsl loopne out js mov (bad) movsb add pop cmp cmp nop outsl jbe pop nop les pop mov subl jmp mov pop mov sahf dec inc inc mov sub cmpsl mov sub fisttpll or outsl sub inc pop push cmc (bad) ja dec inc cmp nop sbb push ret jle js out jl add add push popa (bad) sbbb mov rclb xchg sbb add fldenv pop mov addb and dec mov xchg mov pop aad mov mov loopne xlat into lock xchg nop call fbstp mov mov pop out jns and cmp subb pop lock pop lea in push ffree hlt mov jle mov aad lock cmp mov sub add xchg ret and movsl xchg insb add add in dec adc cwtl test lods add pop in fisttpl xchg dec xlat mov ljmp cmpsb orb dec inc pop push sbb mov pop sbb or out adc call mov adc popa or mov sahf xor jg nop mov mov mov lods push jmp mov jo mov addb out pushf nop movb dec in (bad) loope add js adc pop push sub push adc loopne (bad) in ficom aam jecxz and adcl adcb xchg cld cli clc adc dec add and xchg fldenv inc int pop inc mov stos sbb in mov into cmp call pop in xchg fcomp dec and pop jle hlt mov sti mov cmpsl sub nop nop push mov call xchg push rorb sbb or inc lods andb test rcll xlat mov push in mov mov mov or bound xlat sbb sti iret lds inc pop push ds pop xchg jbe movsb ja test outsl js xor stc nop test add daa xchg inc lahf into jecxz es lret pop mov xorl cwtl loopne mov call fmull and add lea pop xor dec data16 jl inc mov add dec call mov mov xorl jns rclb sub xchg sub mov add into xor pop sahf adc mov lock hlt xorl and adc pop mov inc enter cmp sub rorb test mov adc sub or xor mov in xchg call js push or inc add daa mov push loopne inc cmp jp ds pushf dec and mov rorl hlt pop adc pop mov add push sub clc xor jno add sahf cmp ss push pop sbb std and dec cmp mov inc pop or test fwait test jns xchg enter pop subb pop mulb xor mov inc rclb add mov inc mov call cmp mov (bad) sbb xor pusha (bad) ja push jg sub call shrl add mov pop mov sbb rcl xchg add daa sub aaa jl cwtl cmp jle lods xchg pop inc hlt lock int pop sbb sub cwtl jp inc mov push test lea (bad) mov aad call or xchg sarl inc adc mov jbe add adc mov in inc fiadd xor imul ret adc jbe pop mov movsl xchg (bad) aad mov pop flds jo xorl popa inc loope loop cmp lock mov arpl inc call mov jno sbb add adc sub dec and adcb xchg (bad) lock das inc movsb out xchg sub ja cmpsb arpl push adc add lods in jno imul or fistpl push mov shlb int3 lahf movsl stos fnstsw ret push pop lods subb scas pop xor inc push call adc and rclb and mov xor or out pusha add mov lea rcr movb cmpsb fidivl lock add hlt jae mov mov out mov jo fcomps and add cld sub fnstenv outsl (bad) jo sub xchg cmpsb add inc inc ja (bad) mov stc add jo sbb adc or mov add adcl dec pop popa jl mov movsl out pop push add cmc (bad) arpl xchg mov mov cmp icebp add inc imul lock pop xor cmp add and pusha dec sub dec sub ss adc test dec or add sbb fild jnp cltd cmpsl xorl cmp pop js sbb or popa bound (bad) sub cmpsl (bad) fcmovnu cmp xchg jl or jnp rol mov jno (bad) mov test loop addl or add mov mov loopne cmp jb xlat fsubrl jne pop sbb add xor (bad) (bad) jnp cmc adcb je fisubl sbb inc add roll rcl repz add mov roll cmp stc pop cmpsb les jecxz movsl inc or jns inc sub pop lock adcb rorl add mov test cltd push pusha fnop into jns push push pop mov cwtl mov loop aam push ljmp sbb or jg cmpsl jno test stos xor adc test outsl or xchg cmp ret inc das pop xor shr pop adc xor cmpsb jle mov mov pop cwtl xchg lds aad ffreep push lods push ret test cmp inc adc pusha jl push stos mov push mov jp (bad) xchg xor aas lods jecxz push cmp mov loop or add nop cmp xorl test and adc mov jp jp jle pop rcrl add adc fcompl jne inc and stc push test enter and or jnp rcrb notl push xor (bad) test jo add pop mov icebp loop repz xor test mov or fcoml lods sbbb pusha xchg and fwait inc xor and shlb ret mov add and (bad) adc test stos xchg add sbb rclb dec dec stc in add sbb fistpll sbb fs dec pop add dec test repz sbb push cwtl sbb sarb lcall lcall pop dec loope in mov call pop mov sbb fdivrl adc scas test call scas sahf mov mov add and adc je out push rclb fcmovbe lret mov mov loope rolb mov enter or inc adc cmpsl stc jno xchg aad les loope xlat inc pop fstps aam movl sbb mov pushf cmp add gs ljmp mov adc adcb mov jp sbb data16 mov addb jbe movsb loop sar pop add sbb (bad) ja sbb pop loopne or xor repz cld cmp lea clc sub aam inc cwtl push dec xor add lods stos (bad) xor clc cmp add insb add dec or jbe mov sub inc push add inc dec test add clc push inc jp xor fldcw sbb ret cmp mov in cmpsl aaa dec shrb adc enter stos xor js fimul xor sub out adc loop adc push mov test cli and jge mov mov mov aad lcall test adc shrb decl mov add subl movsl aaa jne xchg or sbb mov sub lea sbb pushf jns push push mov dec jl lret add cmp push insl lock pop adc xchg cmpsb mov cld insl (bad) pop dec push roll adc mov cli cmpsl push or sbb addr16 pop sbb nop cmpsl xchg test les aas pop loope sub ss lods enter or add mov imul jae sbb mov xlat clc pop (bad) int3 (bad) xor adc or nop fsubrs dec lock test mov ljmp pushf add add test sbb xor mov bound sbb insb add xor and adc add ds int leave js sub xor psubb jge adc lock mov xchg inc test test push popa or loop gs jno cli add or cwtl cwtl inc xorb out jp iret pop insb fwait gs add shr (bad) dec add cmpb in lods adc sub sbb ja add jns mov jmp dec es rcll jae inc sbb cld push pop mov and fdivl aaa and jmp mov adc push sbb test or pusha iret nop stos mov outsb loop add divl sbb aaa (bad) jno add push (bad) fs test int3 add push sub lahf rol sub loop pushf and inc (bad) out mov aaa inc in pop and inc hlt cmc add mov sbb daa adc jo mov cwtl xchg sub insb aaa xchg fild ret ljmp cmc ja or cmp add out cli loop inc popf out xchg push xor mov mov cmpsl out rorb enter sub scas adc sbb arpl and roll ficomp loopne add jg xchg xchg inc xor cmc or mov xchg and mov cmpsl xor aam nop add iret or xchg inc rorl mov dec sbb sub or xchg in loope add aam mov add scas jle rclb xchg pop mov sub jge stos enter repnz std out sub add fstpl push mov fimul cmp fidivl mov cmc sar add push pop fistl xor sbb inc xor (bad) mov loop out pop loopne lret push pop jmp mov in mov lcall push popa call int3 sub fucomp addb loop call loopne adc cmp fiaddl scas int push add sub dec and (bad) mov pusha mov data16 mov pop leave testb cld or (bad) mov mov (bad) hlt subb mov add stos mov cmc sarl push mov stos fistpl xchg out test sub or inc push (bad) jb inc mov xor mov lret jnp add xor dec mov adc call (bad) out xchg add jb or insl pop jbe pop mov movsl or xchg adc enter loopne insb mul (bad) xor mov je pusha mov adc dec jg jnp and les lock test or jns cmp loopne dec test jae rcr mov enter add push test xor pushl int3 mov cld imul dec jmp and mov xlat ss cld xchg cmp popa inc adc (bad) jmp adc sub mov js shll imul iret jp (bad) or inc pop out sbb sbbb or js add out cmp int3 ds rcrb rcrl shrb (bad) psubsb dec mov mov mov xlat das scas pop fisttp insb or js add or xor pusha inc jl inc movsb add sarb (bad) add cmp ror fsts loop sbbb cmp jp (bad) int push test out push inc hlt ss out inc xor sbb and dec fimull jmp cmovle jae inc movsl pop cld (bad) out testl andl mov pop fsubrl xchg dec loop arpl pop dec enter lock xchg loope push out push push sbb popf xchg ficomp pop or fisub xchg mov pop jle hlt call xchg sub or jnp js add dec sbb xlat (bad) insl (bad) shlb nop mov mov in jns movsb add mov push pushf nop ss push and nop sbb in mov lock and cmp fadds add and xchg mov enter enter loopne inc pop adc mov xor cmp cmpsl dec push fcoms aas adc loop mov push inc repnz add bound lret mov out push xor das push dec mov mov inc mov cld pop xor cli jg push add (bad) cmp push loopne inc repnz fdivp cld add jbe pushf pop mov incl pop (bad) or data16 fsubrp or and iret imul and add xchg jne adc lahf test das add fmull mov xchg out les push add lea or cmp (bad) mov mov lock xor ds fwait jl or dec mov jl cli nop or enter hlt push sbb mov xchg or push data16 mov jno mov jns roll add pop fsubrs shlb ss js jno call enter push xor int xor loopne jno hlt jo bts daa cmpsl test sub hlt aaa shll cmp lcall mov add sub test jo mov add xor pusha pop xor jo inc andl pop add xchg rcrl mov popa outsl (bad) or loopne lahf jo fcoml pusha and inc mov push push mov ret sub xchg mov mov adc roll cmp (bad) fcoml and fcomps loop (bad) lock inc mov popl add lret (bad) and jo xchg and loopne push out cmp add inc icebp or stos mov and push cmp push adc add xlat iret jns test xchg lds mov pop and aas fxch loopne fadds lcall dec inc mov mov and adc pop stc mov mov clc mov jle xor shrb dec test sti in clc push mov lods and movsb adc in dec fs dec dec fcoml lds lea xor mov adc jbe rorb popf push leave imul call imul mov scas xchg loope sbb inc cld pop mov adc cwtl push dec fdivs cwtl mov pop xor sub dec inc sbb mov add mov pop add pop xor mov or jle,pn push fstpt sbbb aam dec nop inc movsb orb add mov pop xchg adc mov adc repnz add cli setp jo xor insb cmpb fiadd xor sbb sbb or or orb lcall fs mov in jbe test xor add mov mov repz sbbl inc inc sub inc xor or pop mov pusha (bad) sub push and cmpl out mov in sub nop cwtl or icebp and addr16 adc push jmp sub js mov int3 inc sbb cmp cmpsb mov dec mov (bad) ds nop jae pushl add orb loopne rclb pop or mov sti inc add aas or (bad) (bad) shlb add xchg adc out cmp xchg movsb outsl push dec or ss pop pusha nop sbb sub dec out add xor pop gs inc inc pop fcomps loop or (bad) jnp and jge stos jge (bad) xor hlt or jmp and adc call add sahf add out sbb clc cmc add shr push or nop btc mov adc mov dec hlt mov push int3 or jp aam fbstp iret and pop adc jae cmp add fild inc add fwait sub jp adcl clc cwtl je add fist add jmp aas add dec scas stos mov sqrtps mov sahf sbb fiadd push inc pop or movhlps add or xor insl scas push cmpsl sub inc mov cwtl imul jle (bad) sub lcall scas cmc pop cmp test das repz xchg push add int inc test mov fldl (bad) stos mov cmp ss inc push andb xchg movb push lret sub add cs or ja pusha ret aas inc sbb adc das mov jmp inc cmp in (bad) xor add nop test and shr xor lock mov mov clc adcb lea stos stos cmp sub xchg outsl fisubl mov dec icebp xchg xor data16 jmp dec cmpsl cmp cld dec jnp sbb movsb inc add rcl adc int popa adc and je nop test fdivrs leave loopne andl ds cmpsb xchg dec clc mov dec fcom lods pushf push push pop les jmp sbb js lock mov add lods xor add loopne xchg xchg cli pop push mov fs jb sub fisttpl jo mov jge pop mov push (bad) sub test pop jne xchg mov and push push rcrl mov (bad) rorb sbb ret clc mov and inc fchs test adc sbb inc adc sbb jnp add clc cmpsb jmp jge mov cwtl lock mov jo jp adc sbb mov nop xchg add adc mov push unpckhps pop push or mov cmp xchg pop pop rolb shll dec popf xor fwait xor sub das cmc clc addr16 arpl sub add fcompl movsb mov and jle adc in out daa imul mov mov fstp cwtl and push dec into pusha push call aas shr rclb mov das xchg lret jo shlb ss and dec cmp mov mov sbb mov add mov xchg jnp in jg sub mov mov jno and xlat inc or xchg leave push (bad) sti fs in push sub out sbb addl lret stos push jmp xor (bad) inc mov dec imul repz sub add into imul inc mov ljmp sub fsubrs push mov or nop adc leave loopne cltd adcb push enter fldenv xchg add rol and push mov dec adc shrb dec aaa js,pt sbb imul xchg sti in mov mov negl enter inc imul push cmp inc shrb and (bad) out aaa push out insb push jb mov call rolb and jo or rolb scas sbbb iret push mov mov fcoms add and inc shll mov adc sar loop outsl mov mov jbe aam add mov lods pop roll jnp xlat enter add pushf cmp xchg cmp data16 push pop out sarl or push adc push mov js push leave test adc nop rorb add hlt popa je arpl and andb xor imul pop jg xchg adc push cmpsb int3 mov (bad) shl divl pop test iret test adc inc das mov mov inc (bad) imul arpl add mov lret add shlb nop mov xchg sbb arpl pop xor push bound push add fdiv iret jnp fdivl nop cmp mov cmp xor enter pop jns pop mov dec rcll cwtl repz inc xchg fisttpl mov xor inc mov and cmp xchg aam pusha or cld dec stc movsl jmp lods mov inc call fbstp xor add arpl sahf push in (bad) mov cmp push and cmpsb add sti flds jo iret imul enter fcomps dec inc sub (bad) mov loopne xor test xor lods ss dec add rclb scas lar mov pcmpgtd int3 movb pusha mov shld or xor sbb sub call int rcrl pop xor xor in add sti adcl jmp rcrl mov jle mov mov fucomi incl cwtl ficoml fldl mov mov popa or dec es ja into repnz xchg xchg pop jp add and loopne addr16 cwtl or sbb outsb or inc lret sbb jne in rorb icebp mov sbb fwait pop mov push addl insl or mov movsb xchg clc and scas enter push lods faddl (bad) inc stos push mov inc and mov pop mov jl out nop stos inc adc fnop adc and jl lret mov sub dec popf inc push push aaa xlat pop inc jge dec lahf or and (bad) lock and or and jo mov xor sbb mov out lock fldenv je aad cmp testl enter es cmp sub push (bad) and pop je loopne scas shrb adc jnp pop stos cmpsl jae mov sahf push inc push push out sbb shlb fwait or pop or loop imul sub push sbb insl aad pop mov adc outsl and and or push mov sub pop push add cmp (bad) and iret xchg fadds aaa mov jmp fdivrs xchg pop fs add push cs push inc add cmc adc add pushf mov sbb or jmp adc or lcall xchg cli stos jns add inc (bad) scas mov orl mov xor stc addb (bad) faddl adc (bad) jbe mov dec loopne and mov std clc leave aas jno mov fisttpll sbb stc stos sbb or js and add insb (bad) mov flds aad xor mov (bad) jno xor nop and sbbl (bad) movnti pop fistp je dec (bad) cmp or aad lods mov (bad) mov sbbl fimul sub fldcw add les mov push or mov inc test int3 adc fldenv mov cmc push les lret and imulb xor xchg cmp sub stos mov pusha fidivr sub adc lret loope add add pop or cmpb mov xor imul setl add outsl pop mov add mov adc out xor add mov push adc cmc aaa call xchg repz sbb mov push push cmp cmpsl sar ret fiaddl movsb or out xor push dec fildll and jbe (bad) insb and jo movsb mov int xchg int add insb jl dec outsb movsb add mov dec nop fldcw addl push pop or iret dec pushf push pusha popf (bad) xor inc aas jae adc pop pop mov xor cmp mov cmp add dec sub or stos pop lods and int3 js bound xchg push pop pushf or stc rolb cs hlt push adc or sub xchg fs int add pop cmpsl and repz xchg push test xor shl aad xchg stc loopne sub sbb popf (bad) jb fnop cmpsl dec sub insl cltd inc and pusha jae loop sub xor in sub lcall and push push add lock push lahf sub and jl test add mov je xchg (bad) or jae mov test dec mov xor dec add repnz dec call out or and out inc push loopne pusha mov mov jg ficompl test pop add (bad) or mov mov (bad) fld stos xor leave test mov jbe (bad) mov es add fwait lds mov les out or je cmpl jno ret sbb imul sbb cmp adc cld inc pop sbb add jmp mov push cs xchg (bad) mov xor mov inc push scas push je lock mov movsb (bad) mov dec pusha sar lds push cmpsb repz mov mov clc add pop lock cmpsb push nop test add push pop lret outsl push xor enter xchg mov pop std jbe sub mov or mov in orb pop mov mov sbb mov dec mov add fnstcw adc or xchg add cmpsb mov mov or es cmpsb push popf push int3 xor ret dec mov jns push pop and mov mov push mov fnop and outsb mov inc rcrb mov iret mov mov add leave xchg nop sahf push and cli push add add lahf mov sub rol push fist fucom push ja cli test xor mov addb mov and mov aam sub fs sub sbb mov xor clc les add (bad) pop stc dec test xchg jl inc pop push mov test inc or inc scas dec es ds stos lcall mov movsb dec jo loopne test jns mul add mov mov enter mov xor push call push nop add in cltd pop push (bad) fildl push mov mov clc xchg xchg loop outsb pop adc pop movsb pop inc fs xchg insb mov mov adc mov adc inc movsl mov jae sub cmc enter pop sar jp jae add adc xor xor aaa xchg and dec rol or inc mov imul add adc sbb stos pop xor mov adc ror aaa nop pop push ljmp test pop out mov adc movsb add push dec jg add pop cmpsb lcall jle fnsave imul adc and or leave xchg call dec add ss outsl adc scas stc cltd fcomps cmpsb add cltd jmp movsl adc push and cmp dec or cmpsb sbbb shl cmp adc xchg jno inc cli cwtl inc add outsb add pop cmpsb sub add and add add fs pop push dec add xchg jns in push add outsb sbb mov xor add adc ja pusha inc in push insl movsl jo lds add mulps test or test inc mov mov inc add xchg push mov in mov inc test (bad) stos adc jb nop xchg push jne cmp in clc push jp and xchg in push std sarl daa jbe jg add lods mov sbb test inc sub xchg rorb add xor lret pop stos dec cmp sbb xlat xchg repz add lock mov add mov stc sarb fwait sub inc jae add dec les sbb mov jo into sahf fcmovnu inc add pop rcpps or cli cmp decl ja add lcall xor test adc sub out addr16 add inc jp bound mov ret mov loopne push add sbb jp int pop outsl mov inc xor xor xchg sbb adc or and dec les sbb in or dec popa fbstp icebp insb inc mov vpcmpeqb bound int push mov lret jb int pop dec rdtsc sub (bad) mov aad mov add lcall (bad) jl fsubl testl push add push push cmp fiadd mov jg stos test mov int dec inc lcall das or cmpb mov push jp or mov mov in addr16 push popa mov lods sbb lock mov testb push (bad) mov ja adc psubsw cmp jl jecxz inc mov mov add lods mov jl ficomp or mov dec pop mov add (bad) fnsave pusha mov add pop and cmp (bad) sub jo imul add je sub xor sub test jne and sub mov add mov test pop xchg scas jne sbb cltd lcall xor adc roll and js js add das xor (bad) dec nop adcl es push jmp mov add mov push cld les flds leave cltd jle push xor add jno leave in sarb add adc icebp out xor jb or mov mov and aam js inc adc movsl cmp orb mov inc jnp xchg add fld loope inc xchg add out mov ds pushf sbb cmp (bad) adc xor in pop sub es orb fstpt and pop cmp fs xchg call sub add aas lods fisttpll (bad) xchg adc ds (bad) xor stos jo inc mov fmull lret lods and sub mov enter lock cmp in adc hlt test push cmp add cld adcb call cmp js (bad) mov rcrl nop xor sbb cmp pop daa fdivl cmpsl jmp shlb xchg mov mov movsb andb lock dec and fbld and xor cmc pop pop mov outsl movsb adc inc inc add mov mov hlt sahf mov es mov lock test or in movsl mov push fdiv in mov push clc adc mov or cmp xor std sub lods repz dec and dec inc lods and les inc mov movsb call add mov jl pusha adc int mov dec jne add jg repz mov mov add push mov mov int3 inc popf inc adc lcall xchg das mov jl out and mov mov test fdivl or jne mov addr16 int3 adc dec mov lock es push in adc hlt addr16 jnp dec push clc inc js int jle and add and jo xor lock cmp xchg int rcrb mov leave inc sbb addr16 add cltd jge add lods cmp add mov push cmp scas jb fdivrl mov adc mov pop pop ss (bad) repnz mov (bad) repz pop inc test mov pop icebp mov xor movsl mov loop mov in xchg inc add test clc loope jo rcrb loop mov sbb cmpsl add (bad) aam pop cmp stos je add cltd push cmp push or lss mov clc mov xchg mov inc in inc sub (bad) nop xchg out adc add push cmp pop mov dec adc in push addb add jo jo inc outsl sub cmpsb ljmp dec add dec aam pop (bad) negb les setp add xlat sbb loope and xor shll adc add pop out cltd popa test fisubr and jmp out sbb xor imul cli pushf in cltd and pop push jo addl push xlat cmp jp add adc stos sub xchg fcomps xor js add pop xchg shlb or sub or dec cld sbb sbb fisttpll xor push or addb sub adc mov add mov enter dec jg jne or dec mov xor xor movsb je rcll sub mov sbb test pop dec jl add (bad) out lods dec sti test jo fwait lret add negb jmp daa clc inc jb inc push or jns in mov and mov inc cmp xchg je add pop cld xchg xor lds (bad) xor pop sbb mov pop jo cmp mov in jo fsubrs in outsb push (bad) int rclb jl je xor jo adc add xor xchg daa add out enter aaa sub cmpsl test (bad) lret shlb lahf cmp xorb rorb icebp rcr pop cmc adc dec leave adc pusha xor int3 enter outsb int mov addl xchg insb cwtl mov or add rol pop dec cli and dec fsubs mov adc push andb add cli adc and push pop aad mov adc icebp jb xor call sbb fisubr int3 sbb mov jo movsl push push cmp shrb push fcomip inc mov movsl push (bad) cmp nop icebp mov inc sub or push add rcrl mov xor shlb call ss shrb fmull lcall int3 test ljmp ficomp xchg dec push sbb dec jne lods or mov sub (bad) call str fbld ss push lcall fimull rolb aaa mov fs out out movl dec push mov sbb add or icebp dec rorl jno adc xchg mov cmp xchg dec mov adc js test xchg (bad) mov inc movsb add push pop mov negb fbld movsb imul mov pushf add ret sub dec scas add pop (bad) repz lahf sbb test or mov les or jno xor orl mov insb adc mov das or nop mov orb subl bound cwtl push sub or and dec jmp mov or (bad) mov adc shl add adc push les inc hlt sub arpl push xor adcl and xchg and je xor jns stc add bound pop shrb pop pop mov nop sub cmp andb xchg add das xchg xor pop cwtl cmpsl add pop sbb sahf (bad) ss mov push cmp sbb (bad) sub pusha hlt clc xor test mov rcrb add dec push scas sbb push xlat mov jb mov adc adc clc imul or sub pop test dec ss and enter add mov sbbl mov push xchg jno sbb fsubrs push les and cld mov adc (bad) or or or jo xor loope mov sub xchg adc pop jne jae dec jnp inc push cmp mov movsb and pop add lret and xchg and test sbb or mov or add cli into inc sbb loope xchg xor mov sub sbb fnop add add mov arpl xor je and sbb inc shrl fistl bound cs mov dec pop sbb pop xor add movsl mov jl mov sub mov ja xchg mov je mov sti cmpsl add fsubl sub call mov xor push sbb es inc or test or adc fimul and and movb (bad) les js pusha repnz dec xor xor pushf pop test cmp (bad) roll mov cmp dec or add sbb jle gs pusha popa adc xorb out call mov into (bad) (bad) stos lods iret xor jl inc and dec xor jmp out insb sub pusha int3 aaa pop icebp repz inc jns jne adc pop xor and jne or mov add lea test dec or xchg pusha and add inc add mov movsb popa jbe loopne ret add sbbb ja and pop push mov enter adc pop int3 andb sbb add (bad) popa pusha sahf mov aas pusha pop js mov sub sti daa add xor or sti testb inc xchg xchg mov sbb mov xorb std lahf add scas inc xorl xchg notb mov cmp int3 inc pop add hlt loopne mov cli push xor add xor outsb add mov pusha out add fwait pushf (bad) rorb inc add arpl mov sti shll cmc add ds add scas mov inc mov add shrb roll dec or mov cmp xorb insb arpl add jle lods icebp daa fnstsw xor xchg pop hlt jb imul cltd lods xor lea sbbb sarb adc mov popf daa in rolb or jne and andb mov mov les (bad) jae movsl hlt rorb sub sti or jno enter and add flds xor sbb popa fnstenv jbe sbb fsubrl add out pop pusha jns loop rcrb add insb or adc jg or pusha imul rorb bound out ret mov (bad) (bad) aam lods pusha icebp inc ja xor shrb push cld pop cmpsl sbb in imul add pusha popf (bad) mov jbe jmp adc and mov xchg add shll sahf inc add lret push mov sbb xor out add nop or sbb cltd (bad) arpl xor mov xchg (bad) dec stos add pop sub jg (bad) xor jne sbb ds pop mov mov mov fadd pop addl cmp mov cmp loope pusha fs jo movsb lds mov inc jmp pop in and mov seto shlb mov push fnsave add rcrb lcall jmp hlt (bad) clc xor pop mov (bad) nop out add pusha js mov (bad) xchg inc sub cltd inc sahf jmp hlt loop add in add testl movsl in add lea adc jne lods add daa xchg adc movaps pop cmpsl push mov add adc sub dec push add ds test mov or test es icebp add mov xchg nop dec sbb add imul and enter or dec mov mov addr16 jbe dec aad cmp movsl int3 dec sbb add xor dec xor fadds arpl test adc and enter push sarb add sub (bad) inc dec inc jle sbb dec xchg aas movsb inc pop jb ret icebp shl add and push pop dec pop pop loope cmp inc rcl pop add and ret xchg (bad) faddl je jle (bad) adc mov insb mov jp cs (bad) jno cld xor fiadd in punpcklwd inc mov xor xchg sub and shlb fldenv inc aam pop mov ss dec or add cs imul je add xchg push stc aam sub test adc push dec test mov mov pop inc mov cld andl loope push adc dec mov fs jl add enter mov ja mov or enter mov out mov pop lods inc xor and fiadd bound insl movsb adc adc shll data16 pop cli test lea lock nop cwtl call lcall pushfw adc dec rolb push cmp push jecxz js clc mov mov xor jmp sbb fmuls int3 mov movsb lods mov daa loop shl xchg cmp jo rcl dec lcall mov ret nop and imul xchg adc xchg out add jp adc mov ficoml sub mov or pop faddl pushf movsb sbb or or and fwait pusha add shll (bad) clc mov (bad) test mov mov xchg mov sbb xchg mulb inc mov mov clc fwait pop es adc and push clc add jo sub dec adcb jmp or add mov add jo lods xchg movsb dec jmp cmp dec ds (bad) lds xchg rcr jae mov adc and aas mov loopne push dec sub add cmpsb cwtl add fimul and jnp add sub cmp or into mov pop adc shll nop or ljmp (bad) enter in call add cmc xlat push in mov andl je lods les out xchg (bad) test sbb int3 test sbbl dec cwtl adc xchg sub jae leave push jno jle ljmp add pop insb jmp lea ljmp stos and aaa add ds mov xchg inc push inc xor mov dec adc dec jmp inc adc rolb insl (bad) vandps add into jno cmp add cwtl xchg add cltd ja add mov fwait xor sub or dec mov sbb negl stc push cltd or jo add dec add add int mov cmp pop adc cwtl xor sub inc stc cmpsb nop lcall cmp cmp push sti ss or orb jae ds in sahf adc or scas or movsb lret clc xchg sub mov inc push int3 xor mov push and int3 mov pop dec cltd xor dec inc bound or ret dec mov fwait xor cs cmp cmpsb (bad) adc mov (bad) mov push mov (bad) xor and mov sub and arpl xor (bad) das xchg sti ds js sbb sub or mul xchg lds add add dec test mov add sti push pop xor daa test inc add push test cld mov divb and jmp dec stos imull sti dec mov mov out push push xchg mull inc outsb add xchg add push add out mov sub xchg movsl inc adc cld outsl out sub push test roll popa lods mov dec test push outsl jge cmp mov push lret mov cltd push rcrl jno lds leave add notl fs aaa push sbb sub testb aad cli mov inc adc sub rorb jle dec sahf cltd rcll lret dec mov mov cwtl movsl adc push sub enter gs mov sbb arpl test adc test sbb mov mov dec (bad) popa mov ret mov and and xor and add test add jnp fwait jmp nop or mov jo movsb cmp cmp add push aam orb jb cmp push setge and outsl or cltd xchg adc aaa xor jno push adc pushf pusha aam cmp outsl stos mov push mov dec inc or adc dec dec mov push loop inc test dec (bad) jl or cmp fsubrs jp in clc mov arpl jno into mov pop shlb mov das dec ficomp or or pop push push daa out daa and (bad) or inc clts (bad) nop xor pusha or ss and xchg inc enter adc das test and or mov fcoms mov pop and mov inc dec test in mov (bad) adc mov xor mov and mov (bad) fiadd out inc insb or lds test mov xor xor test dec cltd push call sbb xor mov cmp fsubrs add testb xor cs add std push add popa push cmp add cli imulb in inc test push push lock addb pushf cmc and add inc inc ja pop mov insb sub xor scas push push jo insl xchg pop cmpsl stc iret jp cs xchg xor lds aad sbb pop imul setbe (bad) loope loop sub add cmp sub add popl dec loopne jbe sbb pop xchg lcall sbb or ucomiss add ds sbb call cwtl adc sub inc test mov sbb vunpcklps jg push or mov add shlb hlt ret or (bad) enter inc inc (bad) xor in pop sub sub mov cmp or push movsl cmp leave xchg lock js loop cmpsl mov pop aas and mov pop test inc sahf inc dec stc jmp fcoml cmp lret sahf jae pop decb int adc pop inc test aam mov adc pop outsl lods xor loope push hlt ja lahf orb xchg aam jge push subl rorl pop pop sub dec sub aad imul and push mov jge adc xchg rorb jne in mov push xor pop mov cmc ret xlat dec and mov sar (bad) je ja push xchg icebp lods dec inc loopne psubw cmp jne push cmp pusha int3 aad insb jno push sub clc decl or mov in mov cwtl jmp pop lret or sub rcrb ljmp sub orb (bad) (bad) lea push mov sbb sarl fs lock sbb sub push mov mov dec insb push inc sbb adc scas add push (bad) enter jns outsl xchg xor adc data16 test inc insl or pop mov cmc andl jne rclb or rclb sub rcrl or loopne add add int3 scas iret push les pushf and hlt mov push dec test clc les fcoml test push xchg test std pop lret pushf dec inc add (bad) test nop cmp loopne and out int test jo scas push xchg sbb lea je sub lock rorl stos loopne push jp add cmp add inc mov testl fistp enter loope add sbb clc (bad) lahf das leave dec xor mov mov shlb xchg push fmuls add inc push cmpsb fisubl hlt roll mov stc add dec psraw add int3 mov pop pop inc imul fs mov mov jno test cmp push pop aas and mov xor pop push je orl int jl and sti xchg test mov pop add dec and or adc pop adc add or insb sub lods test imul push mov and js mov int rorb cltd push push lock faddl mov or cmp cmp mov push sub loope imul fs sub and dec fmull aas jp fdiv add pusha fidivl mov scas outsl (bad) push or cwtl mov dec adc xchg mov mov mov cli jecxz stc inc (bad) jge push cmp dec push mov lret andb adc lods pop icebp cmp xchg xor repz into dec sub or adc orl cmpsb xchg int and imul and lds or fcompl sbb mov mov or dec add adc and test push inc imul xor inc in add inc into xchg and in adc and stc arpl lock inc xchg xor mov push insb lds xor jns mov push pop rcr xorb fiadd pushf sbb inc fbld addl ficomp test xchg aaa test add enter sub adc ljmp push xor sbb add pushf cmp pop js push hlt wrmsr inc enter pop in mov pop and movsl mov repnz popa xlat xor fisubl stc inc or imul cltd pop add lds mov push repz repnz in lock dec rolb mov mov insb jno aad jnp cmp fcom push pop mov rorl xchg movsl and xor sbbb lahf push push pop sbb stos (bad) and adc js and popa (bad) push push lahf outsb mov (bad) in mov add scas cmp out roll jns adc test inc insb xlat push pop jecxz add (bad) dec cmp les out insl daa or es (bad) cmp xchg imul test jp jbe andb adc pusha add popa cs dec (bad) jo cltd sti mov pusha dec enter add es lret mov call xchg pop mov das bswap or xor push xor push mov add cs lods xor fimull sub movsl inc lods adc pop sub and adc pop push cs or jo xor dec add movd (bad) js stc outsl or cmova jo dec push dec jno rorl sub (bad) jno mov mov aad mov xor jns and subb icebp add inc mov sub test push cld adc lods xor mov dec mov inc into and xor out aam aam loop movsb mov clc sbb test xor pop sub into std imul insb add fsubr das xchg cmp ds xor scas or lahf cmp int3 pusha flds cmpsb push (bad) lret lods inc sub jecxz stos pushf pusha add push stos pop dec fwait xor xchg adc xor push add push (bad) sbb rorl dec lods js sbbl push addb mov outsl or inc fsubs mov add add push loopne enter pop or pushl fimull pop lods jno nop cltd add or loope and rcl add fwait pop add xor sarl mov lock test lock inc xchg in push cld push or int3 push scas fwait (bad) pop sti push fmuls loopne push loop mov int3 pusha inc push lret call data16 scas incb icebp fs or sahf push cwtl rcl gs cmp pop sub dec in enter mov add xor or mov jb int3 sbb mov dec je mov mov repnz jnp jae xor pop or sbb adc movsb add outsb stc xor bound add leave mov ja dec sbb cltd dec xor ret sbb xor adc pushf jmp movsb push ret loopne pusha int3 imul jmp bound iret and test add push add pusha push adc and or mov adc (bad) mov and push inc mov aam ja xor fstpl lret es sub xchg add cltd mov add inc sbb sub addr16 ficomp lea dec or cmp push mov fwait xor (bad) aad decb cmp jp aas mov push mov pusha push ja or movsl xlat nop or and bound arpl mov mov imul lods rcll lock push sub sbb add push cld xchg roll or into or and fcoms cmpsb sarl lret test pusha cmpsl enter negb add jecxz ret add sub popf nop cltd nop cmpsb push pop das js mov mull mov xchg sarl jmp sub add dec push les sbb push cltd out push cmp mov lock call sub roll dec mov and (bad) (bad) jne pusha or xor dec shrl into ljmp xor push mov push mov lods inc mov cltd aas jo out jg test sbb adc pop push push (bad) pop movsl mov iret aaa aam (bad) int and nop fs xchg aad push xor adc push jns add enter xchg jl mov add jp mov sbb or xor jo add and loopne movsb cmc jl add rep cmp add xor je in add dec (bad) ja jnp sbb cltd adc sub arpl xchg push mov pop add add sub stos sbb pop in sub add pop adc addb test loopne incl sub int fwait push movsl jb or xchg nop movsb sahf sarb pop push mov xor sbb xorb xchg adc pop je add inc mov js nop dec and adc in push mov das dec adcb les adc xor mov daa nop ret lret roll int xchg das xchg ja xor mov pop mov and add dec stc ja or test lea xor xchg ret dec vcvtdq2ps jns fldl cwtl cli fwait imulb add xor add stc ret mov cwtl or icebp je cmp mov test pop jl or sub sbb sti mov pusha faddl dec adc (bad) clc inc nop gs pusha js xor jp rorb clc and sub lods jnp rorb rorl cmp das adc pop xor daa add sbb pop lret fadd negl and sub cmc pusha push adc out pop leave add fildll scas icebp inc repz add insl inc push cld sarl push les xchg subl jb add jl test jmp fs inc inc add decl or fcmovnbe xorb stos push mov jp add repnz xlat sbb add xchg int cmp data16 push add call pushl subb fdivrs cli test rcrl sbb subb rol or inc icebp adc sbb add addb jmp in aaa jge out xor and push pop fdivs mov push pushf in sbb mov jbe or sbb sub cmp or pop cmpsb sub loopne jle (bad) stos add dec mov add lret add lds ljmp lods xchg fsubs mov xchg inc jo inc mov pop (bad) scas add icebp (bad) (bad) sbb pop sbb sbb jo insl ds mov add xchg or or and mov sbb es jne aas sbb mov mov add cs repz jg add sbb stos sub ret pusha leave andl movsl add mov mov xchg mov outsb sub mov insb push (bad) sub test cltd mov sub es lea xchg or enter add cld out in enter add push or add mov sub jp dec xchg sub out inc lahf enter push bound or mov push iret sbb lcall je lock out rclb add xor jp add out js sub mov and sbb sbb into mov xchg js and es add lret andl out fdivr add aas hlt (bad) or imul test sub inc gs clc pop xor test push sbb ret imul and or mov cmp sbb lret test lret adc jl in (bad) in popf sar pop into xchg and mov or insl mov inc (bad) sbb call xor bound jecxz int3 fmuls pop sub inc pcmpgtd shlb sub and ja and inc push aas lret add daa pop xor aas outsb adc popa mov or (bad) adc lods imul jmp pusha push dec div out push out and sub sub or jl mov cwtl xor inc sub add insl add popf sub (bad) xor mov dec push sub daa mov push gs push inc movsb sahf add pop pop cld lahf dec cmp fbld mov xlat pop mov or jecxz xchg inc adc sbb (bad) pop jbe pusha jo push pop xchg dec or ja sbbl pop fsubs cmp sbb fisttp adc xchg sub jnp xor add add dec fistp xchg push mov jno insl push mov or add jns sti loopne ret jae lods in push mov icebp mov pop add loopne rolb mov pop mov and xchg loop dec repnz arpl icebp or (bad) jb call sbb popa dec fdivs sub rolb push add outsl sbb mov jl or test or and adc test adc sbb add add in inc mov mov pop jae sbb pushf xchg mov imul into (bad) jge cmp pop ja xor jns dec clc mov frstor faddl mov pop dec add sbb pop dec or sub cmp sbb lcall inc shr cmp push repnz inc je pushf push cwtl (bad) stos and sbb jb loop add nop es push call in adc dec jmp add push xor add inc jle bound cmp and jne xchg in push ljmp or in jb loop and mov rcrb xor mov iret or mov lahf jge mov movsb hlt fs call subb dec mov (bad) loopne test rcll jl mov movsb mov add shlb fwait jp negb mov lret pusha or push and push js call or mov pop mov pop (bad) jns in mov gs mov xchg inc jmp or mov andl pop xchg sti inc inc push and or mov mov cmp test pop movsl jnp ret jge jl push inc sub and rclb mov fcmovu or push lods push inc popa call mov je adc cmpsl pop lods adc adc sub (bad) sbb movsl jo jg mov das lods ret int loop lock in or (bad) popa fcoml pusha ret or xor add (bad) (bad) pop add mov xchg mov or or je stc call jp mov adc jecxz out xor ret inc loop sub bound sti test push fisubl in push sbb push movsl lock in popa mov test loope pop mov leave lret adc push and xchg divl add in int incl imul push das mov sbb pop loop add jecxz pop in pop jo test scas pusha mov mov mov push scas test clc mov neg aam test pop add xchg and scas cwtl loope lods pop enter sbb adc sbb stc lcall push sbb cli movsl pop add cmp lods rcrb dec dec inc mov add inc test push ret pop gs icebp mov test sub sub jb mov pushw aas arpl pusha and add lcall test mov jbe insb inc cld ja mov in mov mov ret sbb je jns or cmp iret xor xor mov or pop sti xchg insb in mov dec mov mov shlb rolb add cvtpi2ps and test jecxz popa shlw or pop lahf adc mov movsb test popa es je and pushf loopne mov dec jmp test and pop aaa pop test (bad) pop ds xor cmp jle or adc int3 movsb and jmp movsb enter scas in in or or and and adc inc je movsb sbb pop cld push mov and add insl ficompl inc hlt adc test mov pop inc or mov nop cmpsl xor js add ret and xchg loop pusha jg scas pop shrb adc xchg and lock insl int sti and pop sub inc and js push and add xchg adc lock adc dec sub mov push add mov push add jecxz xor push aaa mov std popa loope mov pushw lcall shrl jns pop jecxz pusha leave jno jp mov mov gs push sbbl inc es nop ret adc lret cld xchg popa (bad) std js add rorb pop fstps mov adc jbe add test movsb popa mov jo add rorl xchg sbb sub sbbb mov inc add inc mov inc inc and add mov mov add stc jae add sub inc push int3 (bad) (bad) mov loopne movsb out sub out (bad) dec cwtl ja inc ljmp xor mov mov add mov (bad) std cmp mov pop mov cs je adc rclb outsl dec pop sub fildl dec and pop pop hlt sub jmp mov je or shl adc ficompl xchg cmp lret icebp jl js mov inc pop daa pop ret xchg sahf sub jae inc aas ljmp mov movsb pop (bad) aam out and xor lret mov sbb popa jno push ret fs fist push jnp xor pop in int3 and stc and jbe or add cmp mov movsl push and jmp sbb fs in ret mov cmp jp and out and loop rcll fnstsw lret cmp or mov or sub lods pop int adc movsl rorb lret icebp xor ja faddl lods xor mov or loop pop mov ja cmp sbb add mov fst mov in jp xor jnp or (bad) mov clc sub jecxz xorb lock jne add hlt mov push mov lock mov lea sub ja xor fcomps scas shll mov adc fnop mov add sbbl fcoml push cs mov cmp lea lcall test mov sti mov lcall add fs cmp lods mov or sahf adc notl data16 sbb cltd cmpsb add std test cmp movsl or add pop mov add and std mov mov jg add mov (bad) fiadd jne jle mov pop dec or pop add add test push jmp fsubr xorb mov lock data16 xchg clc (bad) clc cmp or popa sbb sub jmp insb mov mov dec pop inc loope jmp rclb arpl sbb lods movsl xor mov pop or and ds data16 pop jbe,pn fs std mov fisubrl add insb mov sarb jb roll icebp fstpl andl adc ss stc inc sub es cli xor sbb sbb mov add aad insb pusha cmp mov xor or add jg ja adc test push mov and aas jge sbb xor test testb insb gs fmull lods add add bound int3 movsb pop sub pop fstp dec nop xchg add dec mov push int3 or or call sahf or sbb inc dec push adc cmp icebp add (bad) mov adc or add movsb ss mov std (bad) push sbb fimul pusha adc test pop mov mov int push mov jnp and cs cmpsl or pushf push cmp leave loopne andb inc cmp xor add ret enter lock dec test sbb lea sbb and cmp mov add push and sbb test dec in ss cmp push dec mov sub nop cld dec mov sub into clc orl sbb or popa iret sub sbb enter test iret or pusha fist mov repnz pop popf sub cmp arpl (bad) outsl mov xchg sub inc loopne cwtl or adc test mov or std push dec test cmp jge roll and test js (bad) xchg loop movsl mov mov lea scas mov lret (bad) nop mov and sub jl in icebp fisubl xchg jo cmp icebp xor jbe sub popa hlt movsb add rcll xchg adc xchg sbb jns fstpl push out sar sub shrb shll dec movsb cwtl pushf sahf or xchg mov jmp xchg js ret pop shrb movb mov insb (bad) inc (bad) mov xor push dec fidivr pusha inc sbb ret adc in pop addps mov cld cmpsl frstor in cmp adc arpl xor fisubr pop js inc xchg sti pop sbb insb cmp lahf xlat lds mov xchg xor icebp sub mov aas sub mov jmp sbb mov fidivrl push (bad) sub xor add push xor sub jg xchg adc adc or and (bad) dec or or les mov cmp adc fs adc add adc sub adc inc out rcr lret mov push jb icebp cltd rorb sub add enter jl fsubl pop mov xchg or sbb mov mov pusha ds cmp sub sub or call ret fs loopne push in movsb and hlt add inc insl (bad) push add push les or cld or adc out adc clc mov (bad) hlt dec test xor mov add cmp mov add adc icebp mov out push push (bad) dec loop rolb fildll xor or mov jns add add pushf push lcall xor and xor aaa xchg dec pop add rorl dec (bad) fcoml mov push sbb sub push xchg pusha pushf imul inc (bad) xor push or sub test ss sbb test es bound xor cwtl lret add and daa xchg xor aaa lods mov cmpsb or clc arpl sub or sbb fsubr or lahf cwtl mov xchg xor sbb cmp add loop jbe push ss mov sbb pop test sbb shrb add in loope sub adc xchg mov fistp xchg loopne pushf ret lretw sub ja xor lods xchg and enter adc scas pop fs pop rcrb das xor add (bad) hlt mulb test or pop fcoms mov mov pop (bad) jne sub cmpsl xchg lea or movsl test add xor lcall mov or sub inc (bad) adc fistl push pushf jo adc shrb jg repz cmp push sbb movsl lock adc lcall adc scas cmp shrl mov mov jnp das sbb cli cmpsl mov (bad) loop sbb and lcall mov int sbb loope mov jp mov mov xchg mov (bad) and mov add imul push lcall dec dec mov fistpl mov cmp push ja ret jp add jp mov (bad) mov cmp int3 add xor and jae add loopne pushf add inc adc (bad) xor fs mov mov pop cmp enter mov add dec inc add add rclb jo add mov and lods enter pop rcrl mov hlt mov rorb and mov sub rcr movsb push push mov sub cmp pop fdivl adc lcall push adc test popl movsb loopne cmpsb jg fstpl adc jbe adc mov mov les and add call mov push mov cmp push gs xchg pop into leave dec cld and outsl pop les adc add pop movsb js or lods int jl xchg neg inc pusha int3 clc fcomps (bad) cmp cli outsl jbe jnp,pt dec push js sub cld adc sub fucom bound inc arpl xor addr16 faddl and es test xor mov push (bad) test cwtl adc add cmp inc nop mov ret jle (bad) mov mov and xor addr16 or popf mov jno mov sbb inc add lods add mov loope inc or pusha or cmp cwtl std bound push xchg adc adc ja cmp mov inc fsub add cli add adc test loopne cld dec push (bad) fsubrl mov and sub adc or and and out mov popa mov mov orl lock nop and jmp mov das cwtl adc jo xor fstpl sbb mov popf leave arpl inc sbb or mov sbb std dec mov sub sbb inc hlt push cwtl sbb or push mov pusha clc ret int3 fbstp insl ds ret and call jae sarb add mov jno xor repnz nop int3 xor arpl cmp (bad) cmc jecxz icebp sbb mov mov lret cwtl mov enter jne or mov mov std pop cmp rorb xchg sbb mov rol aam scas mov xchg inc test fdivr sub lods leave xor shlb push jb int3 enter dec sahf xor dec arpl push pop pusha push add sub cmp test sub in fildl pop jl outsl mov shrb out sub jmp es fucomi pop pop es pop loope sub xchg pop jno add inc dec xchg or add fwait ret xchg mov add loopne mov xchg sbb cmp lret roll push xor dec inc xor add xchg loop dec dec dec add mov jb rcl inc es and jecxz inc stc jg in add sub sub add lods inc mov jmp xchg sarb jnp inc xor enter lret dec les fcompl aas jnp outsl jp dec and push cmp loopne add push (bad) push cmp movsb add jecxz nop aaa clc loopne fldt or (bad) (bad) jae sbb push lcall lcall cmp mov add mov mov dec pop push or mov and or adc lea jbe jg cmp pusha or fdivr pop and sub lret lods sbb push push cmc or xor std sbb cwtl or pop mov icebp xor data16 enter fldenv es or lock test imul jp repnz xor and ds dec add mov sbb nop xor jo in mov lods loop insb into pusha shll iret in jnp or and add jns xor rcll scas ds (bad) movsb sbb insb inc fsubrl xchg js push ss sub pop push test aaa cwtl cmp xorb mov mov jo sbb lock xlat or mov and ffreep or das sbb (bad) adc je sub cmp sarb movl jb jmp add and lcall sbb or mov jo dec sub inc add es enter cmp andl jnp and fldt add data16 mov or insl int3 xor repz dec push hlt add or jg repnz faddl or add ror inc mov aad fist fdivrs leave fnstsw clc or sbb add les leave clc add outsb pushf negb popf and mov shlb icebp test test jb or mov aaa and rolb adc cmp mov inc add jb add mov rcl lods cld les pop les or and nop jo pop add (bad) rcrl add xchg xor mov add inc ret mov xchg pusha mov les dec ja loope adc dec fsubrs cmp add jecxz mov rcrb adc xchg je mov and (bad) dec pusha mov popf and cbtw jmp mov cwtl mov aam xor xchg sub js sub jecxz orb sbb insl call fdivl rorb pop or pop loop lcall gs les mov mov inc xor in inc push daa mov cwtl scas out and in push addr16 push jge or xor inc (bad) xor xor mov push and loopne sbb dec mov fnsave ret (bad) dec xchg aas inc mov imul xchg or pop (bad) sub or and pusha xor xchg sub es push xor pop mov int3 push je jl push jg xor lret mov mov and pop sbb dec adc pusha pop leave div stc cwtl es and push cmpsb test or add dec (bad) jno sub divb cli iret jge,pn adc pop mov inc or and add in mov or nop push inc (bad) jae xlat std add add add cwtl add scas pop push movsl loope pop adc pop add jmp jns ja adc seto daa cmp sbb out and jbe decb (bad) inc mov mov jo push mov cwtl push (bad) out mov outsl add popf inc shlb dec je js popf pop pusha addb adc xchg xchg inc or jbe xchg mov (bad) sub test add xor je cmc ja bound icebp fsubs ret popa push (bad) mov xchg call add stos jmp outsl adc mulb or sbb mov jl sti add fnstcw fcom and movsl dec out mov cwtl stc loopne inc sbb in mov sbb test lea add mov jb (bad) jae adc fldl mov js cld adcb das adc push push test sub mov out test fadds les icebp cmp sbb mov lahf xor mov fs jae aas xchg add push inc mov adc xor push mov pop rcrb test inc pushf ja (bad) xlat adc bound push clc push dec xor xor push push mov and push call cmp jbe test cwtl test mov inc fsubs cmpsb jae sub xchg fcoms cmp mov add cmp ja cmpsl jecxz xor test adc cltd pushf push cmp stos arpl jg incl sub mov mov add jb xchg add xor imul fistp jp in subb or icebp cmp cs cmc jp mov nop sub enter dec sub (bad) pop movsb addr16 mov mov out push addb aam xlat jmp loop mov pushf sub outsl aam mov add popf (bad) (bad) or cmpb mov push add dec dec test and nop push inc mov jne cld loopne add jge push pop call mov jbe (bad) xor and and pop jnp push mov push test adc adc add (bad) movsl add sbb pusha test dec pop popa xor addr16 or cwtl mov and sbb pusha insl test ja inc or popf mov sbbb dec dec enter mov sub lcall xchg xlat sbb mov inc sub add data16 repnz add fmuls pushf add add divb sbb xchg idivl fs jae jnp add adcl cmp aaa add cmp mov (bad) xor mulb cmp xor push mov xchg aaa js jle out inc pop cmpl jmp sti js sbb jecxz sbb push dec push or push add jp pop cltd (bad) hlt arpl xchg repz xor xor pop call mov push out cmp ret mov lock push add in mov lret cmp pop in pushf jae leave sbb or dec adc pop cld lods loop sbb xor jl pop andb js repz (bad) jecxz mov incl sub call leave pop xchg gs push into sti pushf add add out mov pop jg sub test (bad) aam test xchg adc clc jg lret jnp mov test out (bad) icebp adc add xchg movsb jmp subb add inc test aam mov div inc pop test push xchg cmp add gs cld pop dec cli je adc (bad) add ret stc loopne loop out (bad) jl stc dec mov repz pusha xor add sarl pop inc arpl xor (bad) cwtl and je mov jle insb xchg jl call mov je add shlb inc pop and leave inc inc add dec add lret adc add pop int mulb shll pop movsb pushf add insl lea push lret add mov loop sub insb add pushf das push call and ret mov dec mov pop fcom jns cmp pop dec mov test push push jo lods and dec ss daa pushf pop xor sub inc jg cltd lods xorl cmp add inc adc dec jne or and addl inc inc into cmp (bad) aaa add mov orb mov jl cmp mov inc shll js dec inc sub int3 pusha or leave in pop inc pop cmp stos data16 add add add sub js sarb (bad) or dec dec cmc xor addr16 je add popa inc lea sbb push pusha push xchg inc mov adc add negl fwait pop jb stc cmp cwtl cmpsl sbb sbb push insb sub je or cmp or movsl pop add lret adc insl dec in push add push mov in mov loop cmp mov push pop adc add dec xchg lds loopne aam andb ret cmpb insb jo inc roll rol in pop cmc nop test jl adc add aam or sub in loop lahf sub jns loop dec xlat testb pushf dec dec lods lock fcom fistpl and repnz xchg ljmp addr16 out pop shrb call sbb adc ret aad clc add mov fwait mov pop mov and pop inc lret sbb out prefetcht0 add lret aas jbe mov mov add add dec dec rcrl in jecxz or add subl cmp shll scas mov cmp adc inc inc sub mov idivl es test test dec gs sub mov mov and js jb mov or xlat addb dec scas and fcomip xor lcall jecxz push pop push pop aam add adc push cmp and cmp fwait rcl adc lods add lock add jecxz jmp xor ja jo out rcrb mov mov xor addl out test pusha std pusha (bad) xlat mov mov pusha divl test mov fstps cmp mov xchg push sub scas shl mov add mov xchg or aad clc and sarl adc aad push xchg rcrl or (bad) mov sub outsl sbb mov sub (bad) push pop lock add cmpsl or rcll jb fucom inc dec mov inc js inc subb test sbb pop sbbl jmp adc lahf mov ljmp add addl push xor xor or xchg push sti cltd cli mov xor or or dec fs ljmp popa enter cmp loop xor or das xchg outsb test sbb mov leave lahf xor je les adc fnstsw and icebp mov sbb add inc test inc xor mov mov clc mov insb fadds sti sbb fstpt xor mov inc adc ret sub jo mov jo inc pop jns pusha in xor adc arpl mov add fcoms fcoml andl push mov (bad) sub rclb test pop inc fsubs lahf stc cmp sbb dec in nop jnp lea push or sbb das popf add mov repz loop setns inc test lcall xor inc sub adc shlb seto and lahf mov cmp loopne js icebp add and adc pop add push out lret sub and inc xchg xorl add std adc sahf xor loopne push sbb fbstp (bad) mov mov dec xchg test (bad) shrb (bad) jns lahf pop push pop fsubrs fwait add sbb pusha vmovapd mov and mov or and xchg dec sti mov xchg mov lcall mov adc and scas sahf cmc xor fcoml fs dec (bad) fmuls push inc sbb or jne fs sub test sbb aam sti sub scas loopne sbb sbb popa inc (bad) and js adc hlt fldenv stc js test dec xor fnop adc add inc lods imul or push in xchg cli add imul xor movsb inc or lcall mov lahf (bad) adc sbbb test mov xor push push insl dec repnz pop addl aad jbe mov and xor (bad) rorb (bad) mov dec cmp sbb nop js jnp je or mov or call mov adc je adc test push clc sub inc dec repnz ds stos lcall add add jecxz sbb lahf add test jae sub js (bad) lods mov ficomp lock into fdiv push pusha dec mov lcall xchg adc and dec xchg lds mov xor add bound add sbb add adc add (bad) idivb mov and mov (bad) push pop (bad) lahf or rcl sub dec addr16 sbb pop enter (bad) loope adc push pop cmp inc dec loopne nop clc inc imul in mov mov lahf mov jns add cmc into sub outsb (bad) mov pop xor lcall inc push outsb cmp push mov les negb mov ss cli mov mov fucomp lcall jmp add adc lock dec jecxz jae push mov push enter or and adc add movsl jge mov (bad) push push mov adc or popa mov ja sub sub nop mov inc es sbb and push repz sbb adc push add adc push call (bad) cld add mov add jge les aad inc add lods ja or push div sub cld (bad) xchg dec clc daa subl mov pushf xchg xor cmpsb scas (bad) addb inc or dec sbb aam cmp push push movsl prefetchw xchg mov add and add sbb std mov in aaa pop ret mov (bad) mov add pop inc int3 in push sarb mov or mov and mov sbb fs test lcall pop pop add fldl mov aaa scas loope inc or xor push add jo out dec mov insb mov test push imul dec or fucomp xor aaa mov jns in mov xor js sub add ja pop jbe add lcall clc lods add jo sub xchg lds int mov xchg mov lahf pop or sub cmp inc xor inc popa cmc clc ret (bad) aad inc call xor sub xor xlat adc sbb mov mov or xchg xchg add test jle mov push (bad) push lods lahf (bad) dec add push aaa jg sbb scas xchg enter mov add or push cmp xchg test inc lods fcomip xor mov jne and aaa and lds sub pop lcall dec xchg inc shr loopne sahf add adc or aaa xchg inc inc popf and fidiv call nop cmc mov dec clc inc xchg lcall and sbbl xor in mov adc imul lahf sbb mov clc dec (bad) xor or add dec repz int3 push dec test adc lods je daa popa fwait add mov roll mov popa mov xor jg or pop sbb js je dec imul les in dec jle add ja data16 add sub test fsubs int3 cmp xchg in inc sub add ret mov mov int3 loope sub les jmp sub orl inc lods pop push mov push test dec jo cmc dec push nop push sbb add test popa enter ds xchg sbb outsl lock les enter add ja push jbe add mov adc xor ss cli mov pop cwtl pushf ja mov xorl add out loopne jns pusha cmp test movsb test cmpsb in and pop pop sub fist dec cmp fmull hlt pmaddwd push pop sbb int3 mov adc inc mov mov sbb (bad) hlt cld ret add cmp sub fdivl cmp mov aad and mov lock mov pop call mov push je pusha mov mov popa add je (bad) (bad) add cli mov pusha xor pop mov rclb mov or stos lahf scas aaa or pusha xchg cld add sub out arpl dec cmpsb push sarb stos add mov pusha jecxz ret insb add adc (bad) hlt cli rolb es or cwtl or dec push cmp pop mov (bad) data16 enter or add jecxz push enter test or jns and add mov xchg cmp mov in adc cli sbb pop lea dec out test mov sbb or push sbb ss loop add or test push je sub cmpsl push mov adc pop lock pop nop cmp ja test inc loopne std mov addr16 hlt or xor push lock push and xlat gs push std js mov mov mov pop aam or mov sbb sysenter mov adc lcall add sbb add and subb in inc or mov in pop sbb sbb loop das sahf adc xchg pop aas adc data16 xlat jo pop mov aam fadds mov inc mov or or in xchg cmpb cs sbb jmp movsl mov jmp repz sub (bad) push aad stos and adc movsl mov inc add fldenv xchg and aam pusha in xor and cmp mov push add pop leave lds lds sbb mov xorb mov cmp push add jns jle clc cmc mov enter mov pop xor movsb jle test js adc add test sbb cli popa push mov shrl mov sub cltd xor add mov mov mov mov add out mov aam cvtps2pi sub mov mov lock mov movups or scas dec stos push adc adc ret rorl cli add icebp jnp mov cmp mov stc arpl (bad) cmpsl mov sub insb sub mov push jl pushf sub push lds add xchg xor insb or mov or dec iret out outsl in fisubr add dec fsubl pop add cmp cmp mov dec or add mov pop add out adc and lar dec xchg push aam pop xor fsubs sbb aam add adc pop mov sbbl xor and shlb adc sub dec call adc (bad) or loope ljmp sarb xor pop cltd cli jne or and scas dec sbb fwait js int mov aam add mov mov inc cwtl push adc subb sahf jne out lods sbb cmp inc pop adc cld mov loope mov mov push cmp sub pop or into and add aaa sti push add stos xorl sbb cmpsl clc add xchg jmp dec push fmuls scas mov scas mov popa push cmp leave ret or pushf pusha in xchg push adc mov adc and test adc xchg push out test insl jne lock lret gs or arpl jge ret je mov aaa pop out mov popa xchg sahf mov fwait jnp or insl (bad) cltd xor xor push loopw mov and ret sub and insb or arpl inc lock xor pop or mov pushf push call sbb pusha add push das sbb cwtl aad daa push sub fistp or shlb inc call and add lcall mov aaa test jnp mull cs jmp or add lods scas nop push mov sub inc mov sbb xor jb sbb push fildll dec xor dec aad add lods dec jae std mov or call ds inc add data16 or pop pop lock xchg inc adc popa movsb pusha and sbb sbb push add rol in insb fsubs clc inc clc or jo fs lea js cld int3 cs adc and dec in mov inc lret fcmovne jo pop xor adc std int3 cmp push iret lock mov ret and mov pop add in sub das inc add mov insl add dec cwtl sub sahf fwait xchg add push popf iret jo cmp or in jecxz movsb inc mov sbb lret cmp mov jae cli pusha lea pop push arpl mov push push add sbb mov xorl add test in dec add push add pop xor and xorl fcompl popa cwtl cld push mov dec cmp xor adc jecxz or jo aas adc pop sbb test test xlat push inc aam aas cmpb and inc nop sbb (bad) les or dec sar pusha pop jmp xchg jp lods enter push pusha clc push or out inc orb mov or repz orps fdivr popf add push jb xchg add jae xor lock pop loopne in xchg jp subb and rcrb addl in test mov pushf dec gs repnz je mov (bad) xlat xchg cwtl xorb jmp (bad) (bad) ja and lock push in add lahf adc sbb inc add xchg data16 out vmwrite (bad) mov lods mov push lea adc lret mov inc nop jle shrd andb nop or xchg jnp cwtl cltd pushf cmp je es pop gs push ror (bad) adc adc in hlt popa fcoms cs add inc inc test and jno jns test in test or adc add xorl enter pushf mov enter adc pop test call push lcall call push pop and push ss xchg mov orb out and cmpl sub inc pusha jnp lock scas adc insb dec mov xchg sub inc insl adc (bad) call mov mov dec push pop ds mov ss adcb push sub and loopne push popf aam dec in or imul sbb cmp clc call push in cmp cmp sbb ss dec sub leave push jecxz xchg xchg mov les mov and test mov and das inc and xlat mov (bad) adc cmp add lcall and sbb cmp dec xchg fs lock adc xor ja sbb or push jno fidivl mov int add jecxz adc pop cmp test movsb jne sub jmp adc cmpsl inc jo add jo xor and push mov test jl fwait pusha test push inc sar cmp imul fadd push movsb mov xchg cmp test mov hlt shlb aaa mov jecxz aad inc adc shrb jne pop cmp add mov adc jbe insb das sub jnp and std scas aam dec xorl jno cmp test sbb cmp lock icebp inc cmpsl ja dec or lahf sub test daa clc fsubrs add sub push lret dec and xchg jns mov cmp mov cmc and pop bound hlt mov insl in mov jge or jnp (bad) jb or add add inc mov loope inc shrb pop adc fwait sbb lock roll xor lods jno xlat xchg add push adc std (bad) mov mov jbe out imul push push inc cmp and xor aad or adcl push mov (bad) jae movsb divb add stc xchg jno orb jle ja gs adc jmp pop in sbb dec test jne add lret or dec std icebp sbb mov mov cwtl push les inc dec add insb js pop into fdiv and fisubrl xchg add push cli arpl std popa xchg mov mov lds je adc mov mov fmull and inc call (bad) (bad) je adc mov int mov stc call std adc jne fistp push mov jecxz mov mov shll mov add cmpsl arpl fptan test inc dec add inc dec frstor inc dec sbb or adc lds mov jl mov in xchg (bad) jo jne stos fildl and xchg clc pop mov sbb xchg push mov add popf xor or aam jb add iret xchg sub gs push jo add les sub xchg add inc (bad) nop xchg (bad) sbb outsb adc scas dec mov and popf fist sbb dec pop insl lret sbb jns lahf dec mov jge in xchg add xchg iret (bad) test jnp ja rcrl mov mov dec mov xchg fnstsw lods fldenv fs add movsb jecxz sbb pop mov jmp add lahf and sarb or and dec test fcoml pushf lahf cli pop xorb add ljmp adc jl xor (bad) fdivs std outsl jb mov mov lahf jg daa cmc sbb cwtl fist aam dec enter push dec cmpl lret je scas js nop sub jbe lds scas call xlat ret pop outsb jae add loop xor lahf dec rcll and mov pusha je sti or je pop loope mov and lods pop out mov sbb mov sbb mov or (bad) lahf js popa mov xor int stos std cld cmp aas mov (bad) mov adc dec add popa dec inc xchg inc ds cltd pushl mov add pop mov inc add sub repnz cmc addr16 cmpb lahf enter gs mull xchg xlat xchg negb and inc cmpsl outsb int3 hlt lahf dec xchg dec dec pusha or sub sub (bad) sbb push add iret add dec dec cmp arpl fdivs add ja push mov pop mulb mov push or leave (bad) mov ds xchg cmp adc pusha fsubl vmovntps call cmc dec lret (bad) lock in ja loope push aam lock xor imul sahf mov call add push neg jmp rcrb cmp xchg stos mov mov bound imul add pop and mov add or add push outsl pop leave loope movsb pop inc mov and mov pop and inc sbb rcr fcom stc mov sub test mov xchg fdivrl pop stos mov je (bad) (bad) hlt test jne data16 (bad) in mov movsb pop clc mov add das fdivl lods loop sbb stos pop lds lock pop fdivrp int3 mov inc mov (bad) aad dec mov fadd lock mov inc test cld cmp mov aad mov cmp nop inc xor add mov push fucom arpl daa jge pusha bswap jno mov (bad) sbb adc es mov lock push push movsb mov test mov imul fidivr repnz jns dec cli dec test popf xchg in sahf mov cmpb and lock fs pop push in add or push ss fmull or add mov cmc adc lcall jo push xor rcrb nop mov cmc sub add pop pop in sub mov mov pop dec mov test outsb test clc ffree sbb add or dec mov mov add jbe sbb int3 cmc addr16 push scas add sub pop xor call clc add adc cltd add scas lds jns pop dec push fildl jmp fist rolb dec je rcrl add int3 daa add cmp in sub add fsubrl adc push mov mov dec push jne lea adc rcrl (bad) int3 xor xor mov lahf mov add inc xor add pop out jbe push mov pop inc mov mov adc clc mov sbb adc push jne fidivrl arpl cwtl inc cmpsl es jne add nop scas mov xor mov jno mov cmc xor je cli add add outsb inc adc jle mov daa movsb mov add mov cmpsb xor mov fdivrs mov hlt add (bad) jge sar or (bad) lock dec add ss push out in clc outsb pop jbe add jmp cmp mov addb mov call push mov pop js out fdivr leave out lea ds and xor dec lock insl jmp mov jl mov add mov jle pusha xchg mov imul mov jl add fidivrl cmpsb inc add rolb add and push ds jl or outsl std jbe fs add (bad) jne mov (bad) mov and fcomps jae mov jns out xlat xor pop or je sbb ror sub jne add ds add icebp sub add cmc andl fidivrl test add xchg cld xchg add push addb dec daa leave sbb or rolb jmp mov popa int3 cmp add jae sbb fs xchg sbb mov jmp cmp cli sbb rorb push jl int js pop in ret add bound hlt lods push (bad) insb lahf mov inc sub imul push nop pop in pop out xchg xor (bad) push adc sbb repz pop adc pop pop mov mov mov fcom xor sbb rclb inc dec inc add pop inc or and sahf (bad) mov xor (bad) push mov scas or sbb dec (bad) jno cmpl sbb sbb mov lcall (bad) insb mov ds je add test add xor dec mov push sub or dec mov mov xchg dec ret test addl loope loopne and shll clc jp add (bad) repnz jae in mov dec pop idivb add jbe pop adc add out xor les ret cltd pop in cmp xorl fnsave or push jns into add cwtl scas ja mov inc push sbb push inc add pop imulb pushl bound pop int data16 sbb push dec mov rcr xor jp push pop rolb cmp movsb sub pop dec shrb fidiv int3 addr16 xchg ja push out add dec pop and testb (bad) jmp xchg sbbl mov adc ja adcl fadds add pop pop adcl fstpl lret add cmp aad jo push cs dec adc out imul sub std cli adc xor mov add bound dec mov sbb aas jbe clc ljmp imul outsl popa mov add (bad) je push stos lret addb mov sti icebp icebp add cmp movb cmp push xor jns je insl loopne fmulp add int3 (bad) fldt adc jno imul push xor (bad) leave mov inc xor push out push adc push sub andb add data16 pop adc mov icebp sbb andb es movsb mov lods or inc push xorb add sub out dec fs push call push mov adc add (bad) lea add rolb add lret xchg jo sbb imul cs lods inc sbb mov jns adc rcll mov pop xor insl inc mov arpl aaa mov flds add xchg mov bound push daa inc rorl roll mov ja or mov and sbb xor adc push fist jmp js mov fcoml das rcll add jmp inc xor and ja,pn cmpsl dec mov jge sbb (bad) icebp out dec fisttpll lock mov inc mov addb cmp xchg xchg push ss mul movb add dec add mov imul cmp ljmp inc aad push or push or or xor mov aaa dec or addl cmp rcrb xor add push sub add push fcomp daa dec aas xor pop fildl mov push push test clc cli add xor and push add sbb sub xlat daa hlt cwtl addr16 lret call int rcl ja sbb xor and mov insb push mov jmp lret sbb inc or aas push arpl cmp in xchg sub shl or mov jns add or or inc in dec mov add (bad) sbb arpl adc hlt movsl sub sti sbb and mov push xor arpl adc flds mov clc fidivl nop nop add dec push inc adc add pop inc fildl xchg and ds inc add adc rolb and clc or pop and xchg sub adc cmp or dec into push lret xchg movl pop jecxz xor lret pushf xchg decl outsb dec mov cltd sbb movsb enter push sub pop mov and or xchg sub cmp shlb xchg enter cmp clc or sbb adc add pop out adc imulb sbb or jns jnp pop insl aaa cmp add mov inc jns or loopne ss ds nop cwtl push in sub sub xor jae lds jns jo add push cli mov jl jl out mov stos jnp (bad) push call subb and in test (bad) test popf mov cmp (bad) xchg mov pop and (bad) nop push or arpl jmp int add pop sbb add nop cmpsl push dec (bad) pop popa pop add (bad) jne loope insb rorb fldl dec push testb push xor arpl enter xchg pop push or ss adc aaa call mov mov adc insb xor aam mov sub and call push dec arpl shl mov pusha test cmpsb loopne push add out and hlt arpl fwait cmp sub pop add and daa loopne mov sbb nop pop fadds jns or add loopne adc and push je push sub lret popf inc sarb arpl data16 into lret cli dec insb mov sub mov inc mov (bad) jo fs pushf cmp mov or push push fsubs mov pusha mov subl and xchg mov int jbe sub sub push dec pmaddwd inc push loop sub mov dec lods shlb xchg sub mov icebp push cld mov or cmp add lds in lret sub daa or adc mov fisub xchg jmp sub cli adc into fwait push sub mov dec adc popa scas xor popa imul cmp add push loope jmp sti nop or jbe add mov xlat jl mov and (bad) lock hlt cmp push insb adc add lea addb sarb jl mov cli les adc mov rolb push push jo jge xor je rclb in xor out or and mov mov pop sub ror fs arpl sub fstl pop xchg fisubl mov push pop sub and jl xchg dec pop cli adc sbb adc lods cltd dec pop lret mov sbb xchg pop add jle shrl fimull or xor and xor aaa inc mov add ret mov push mov adc mov jns test mov adc test jne ficom arpl fdivs sub insb xor jne and mov or xor mov and mov jecxz lret pop fs mov enter add push mov es sub xor repnz mov loop orl fcom call sub test stc clc ret daa in fnsave jns jnp inc fsubl add add lds mov add daa jle cld push add dec aas js pop jmp (bad) sbb jo xchg test sub or das jns and and mov push inc nop add xor rorb dec add iret adcl pushf nop loopne inc repnz or test and arpl xchg (bad) lock pop pop push jp test cs aam add inc hlt stc fcomp and loopne dec adc push adc stc loop xor (bad) out add jge lret roll inc dec mov xchg test xor sub mov adc out rep push push in mov add out cmp or jge mov add pop ret stos dec fiaddl lret shr add lock jne or pop das andb inc push and lahf outsl ljmp stos loope aaa nop out xor fstpt add int lock (bad) imul int3 cwtl or cmp xchg fdivp mov add push js push jo ja push add xor add sbb repz mov push stos scas in sbbl xor sti cwtl fimull mov out sub subb daa add and mov add sub add lock mov stos in sub cltd faddl aaa or dec adc or gs and inc push xchg adcb stc adc clc pop mov cwtl cltd or xor pop dec pushf fcmovnbe ja movsb add fucomip sub mov popf push pushf lods push shl aad push addr16 cmpsb mov (bad) inc pop ljmp or fwait adc scas les mov loope and add arpl (bad) cwtl ljmp pusha bound in ret iret sub jge aaa int push push ss cmovg inc mov cwtl pop dec inc mov movsb test push orl pop mov jnp lock add mov lret xchg fmuls insb fildll mov nop movsb add or mov loopne mov pop mov outsw sub or xchg imul pushf mov add sub out rcrb (bad) int (bad) faddl inc (bad) nop out daa dec aaa jp cmp iret mov test fistpll lret inc scas pop ja add push loopne ret add mov jp mov adc int3 test ja inc sub sub push (bad) loopne fstp mov les push iret mov dec add or in aaa pop leave stc incl push xchg jp jmp adc inc sub cltd mov ljmp mov inc andl add scas test ror mov lea inc rol inc rcrb jne add or out inc pop pop adc jb or or fs add push mov or pop sub push (bad) dec adc popa addr16 ds mov outsb dec rorb shll addr16 mov xor push popa fnop xchg cmp push xor wrmsr xchg add stos add add icebp pop cld inc inc std fcomps ljmp stos add jne fcom inc mov out inc data16 popf adc into mov xchg dec ret rol xchg call test jge mov cmp xchg cmpsb pop push xchg fwait test push std test movsb and in lcall cli push ljmp lds cld inc pcmpeqb clc arpl cmp inc lock repz rorb imul add add (bad) loop ljmp dec rolb cmpsb push mov xchg orl or xor adc dec ljmp push dec and hlt mov add imul inc cmp dec or into mov adc bound mov (bad) sbb cmp or addr16 imul dec jno push or popf xor cmp sub or push mov inc push iret popa or push mov out adc add dec stos in mov add pop sbb pusha xchg sbb pop pushf ds add out lahf xlat test leave lds xchg jl ja fstps (bad) pop push jg mov mov leave cmp cmpxchg cmp fnsave cmpsl data16 add rorb (bad) add and jmp adc add loopne fistpl ret push pop sbb cmp add pop outsb and icebp dec dec cld pop and xchg nop sbb add add inc add sahf mov jp (bad) ret and jno psllw cmp out out dec jge js sbb aam dec xchg cld fbstp cwtl and jne jae adc out outsb es nop jl push mov inc pop daa push inc or sbb cmp xor daa or add pop js mov loopne adc jp (bad) xor enter or xchg cld daa sbb rolb sub ror clc (bad) cli inc pop dec clc repz lahf sub push int3 rorl repnz adc mov adc ret loop nop lods sub or rol shlb fdivrl or mov cld and enter outsb in dec cltd fmull out aaa pop and sbb pop pop add out or xor pop cld lds in (bad) jae sbb add xlat add (bad) cld clc push loope nop std add (bad) inc mov nop xchg mov arpl adc aam sub xchg adc pop and jb jns add mull dec movsb aam or and fmull cmp or bound sbb test add adc push loopne push dec pop jno aad jl ljmp jae loopne and fcompl add shrb jbe mov xor fnstsw je inc mov hlt lret ljmp and xchg cmp mov (bad) mov fistpl and add or cmp dec xor or dec repz test cltd repnz and sub mov and es pushf orb pop fsubs ret mov xor sahf and pop int3 dec es and test and jl mov adc push or add or add sbb fsts and inc cmp mov mov stc add jno push pop test cmp pop mov dec xor adc andps or pmaxsw cmp inc pop adc std sub sahf in add jl cwtl add shll add xchg push sub psllw movsb push (bad) jb jg push or mov fiaddl cs (bad) inc ds add (bad) orb add ja add cmp mov ficompl mov and (bad) sahf dec stos mov ja or sub adc pop call jnp add movsb add xchg shrb xor stos or mov int3 pusha je add mov cmp pop (bad) cmp test sti mov icebp iret adc sbb clc fnstcw add push mov pop mov adc pop lea add dec and fwait popf je,pt pop sub add cli pop aaa std ss lret mov push xchg (bad) adc add cmp cmpsl test mov jb lods out dec inc pop inc mov and xchg rcrb test mov mov pushf sbb mov mov dec dec lds and mov leave dec inc sarb pop addl movsb dec pusha call in movl sub sbb pusha and cmp jo jg addr16 xor cwtl jmp out cmp scas add ret adc test push mov jge xchg push icebp xor mov popa int3 and les inc movsb xchg (bad) sbb cwtl adc lret push xor and aam adc sbb cwtl inc cmpsl push jl add ret and cmp sub push cmp inc in adc movsb pop mov mov aad cmc or shr inc sahf je sub add sub xor movsb (bad) sub mov mov cmp movsb (bad) and jo dec pop dec push xor into mov nop dec fldcw jns mov push xorb addb stos and mov xchg scas or fsubl jecxz mov xor cmpsl inc adc sub fstps add pop movsl cwtl roll or sbb bound sub cmp mov or inc pop sbb (bad) cwtl les pop mov cmp mov jns adc mov mov pushf and rclb adc dec fmuls cmp (bad) cld mov lea xor xchg dec dec (bad) fsts call test mov mov mov pop repz lock push add xchg sub int aad cmpsb push push jo pushf lock arpl jns sti cwtl pop dec bound inc cmp inc or (bad) je add jo scas ret test or (bad) pop js,pt pop inc xchg out mov je test inc dec fmul mov inc lea test cwtl aam and lret test ret push mov jbe sti pop mov enter mov fmuls jnp xor sub mov inc or sub add pop fucomip xlat push cwtl mov nop adc cmp push xor jo or push ds jecxz xor mov or and arpl test (bad) lock ret xchg rclb push fwait dec mov rolb xor out adc xchg xor add pop sub cmpsl mov pop xchg mov cmpl mov (bad) mov fldl2e add add sbb dec mov cld or sbb nop cld and loopne mov pushf mov (bad) adc test divps pop incl shrb in dec insb lock jmp sub and pusha sub mov adc push rcrl leave cmp push daa movsl mulb and pop pop add pxor pop and add (bad) or loop cmp pop jnp push jns nop push sub and jle data16 add rcl dec inc loopne ret or shlb test push inc js pop scas pusha inc std and push lock lock adc cmp push and push imul movsb dec add fwait stos sub mov repnz mov lahf test add inc fadd (bad) pop add pop call adc jo sti inc or stos adc mov dec cmpsb mov sbb popa lret lcall (bad) pop (bad) lods fmuls cmpsb repz rolb xor incb test insb xlat scas es int3 bound pusha jae loop ljmp mov nop push in inc insb add out dec dec mov mov mov daa jns loopne lret ret add mov mov call fldl pusha out outsl mov push aad movsl pop and imul sub stos add jno lret pop incl cmpsl pop xor xchg in pusha inc pop sub pop dec cwtl or or addl int push insl ja cld xchg and add pop test bound push sub push mov push push fiaddl inc ud2 pop stc popf add shl jb fisttpll outsl lds mov pop mov add repnz andb add (bad) jb mov and mov test ret mov lods (bad) shrl shr cltd rorb xor ret xor push jae test add leave mov jmp clc dec add adc fnsave xchg mov push jne and cwtl dec aaa mov or or adc ss and daa addr16 jb inc inc dec or mov mov and sarl sub arpl rclb push outsb adc bound add and mov pusha mov sub push push les ret sub insl movsl inc dec cmp add clc push ljmp inc jnp inc imul insl and in pusha sar cld int3 std es mov cwtl dec mov ret jp cmpsb mov add sub lahf and push and gs mov imul shr outsl subb or and inc dec test push jno ss sbb and test sbb std mov xchg cltd sub lock xor in arpl and adc sub mov sbb mov jo sub (bad) jae fisttpll cmp dec and inc xchg xorl insl out pop insb pop xorl std xor faddl cmp jp jno subb adc sub aaa aas xchg mov sti mov jg add mov inc adcl (bad) sub add popf xchg or aad nop xchg add xor sbbb jns enter shrl mov push add cmp mov fiaddl fadd dec adc push adc xchg push inc fs and or dec test cld adc push sub or cmp push pusha arpl add jne pop jmp mov insb jb or outsl adc cltd es into sbb pop and icebp popa sbb ret jne add or cli push mov push adc and out test adc sbb andb lea inc jns cmp adc mov and mov lods lds mov mov in ss cltd nop xor cwtl in dec les xor xchg mov mov add int3 xchg mov inc hlt test cmp dec adc mov insb jle popa arpl add jle lret sub push jbe mov dec je sbb outsl adc and out rcrb jbe jg and sub test out mov lret xor cmpsl dec xor push pop cmpl rolb in and add ret pop lods cwtl dec mov and cmovno pop sub mov in add ss add xlat jbe cmc push fsubl imul outsl sbb sbb mov pop jg pushf pop mov pop mov test sbb mov fldcw adc xchg and movsl push and scas adc mov dec sbb adc adc les shrl and inc jl setl aaa mov fmuls mov cmp xor and sarl dec adcl scas nop xor xor and cltd add pop lret lds cmp pusha dec ljmp jno add enter adc inc fnop add cmc mov push lcall push cmp jl or cmp sbb sbb test pop enter call sbb add jg leave push sub aam shll movntps and out subl (bad) mov inc mov scas sbb call addb inc repnz in add dec mov push enter (bad) push pusha cmpsl lahf jecxz insb dec lea lock push lods adc sub movsb repz lock pop inc pop add cmp lods push mov sbb lea push sahf or xor push push inc push push jl inc and dec pusha rorl or pcmpgtd push mov imul fildl sbb ja mov lea mov fimul int3 fbld test cmp dec push sbb xchg (bad) push cwtl mov pop and aad lcall cmp push stos fsubrs lcall rcll mov sbb aam adcl sbb sbb jp cmp jl sarb and rcr pop (bad) xor mov inc mov dec outsb mov subb dec dec pop (bad) movsb mov mov ja cltd inc sbb and insl mov mov push add call inc shrb sub sahf push sub nop or or cmp mov mov adc int3 add add pop xlat xchg and insb mov mov cwtl sbb mov fisubr cs cmp and sbb imul jg cmp mov jae dec adc dec xor ds sbb adc ret movsb cmp scas sbb dec addb add rorl sarb stc add ja sbb jl test shrl add mov cltd sub add inc (bad) sbb mov fidivrl popf adc mov push rorl xchg mov movsl les inc repz stc add pop loopne pop pop mov add enter imull pusha pop add mov sbb iret scas cmp and loopne ss inc jg pushf add aam add xlat add test int3 mov popa lcall jmp add rcrb pop add adcb jo xlat lods push jno cwtl pop add lahf fistp in add mov mov jl sbb or pusha lret cmp add inc mov jmp cli loope mov loop pop xchg fwait loopne add (bad) (bad) in clc pop and sbb jnp and pop pop add push leave fnop pusha mov cmc lods add jmp add scas fistl adcb pop jb mov pushf push xchg rorb add push add inc insb je cmpsb popa xor int3 xor push pusha xchg lahf mov xchg jl sbb push js pusha xor or int push add addr16 push inc and cmc cmp xchg ds dec adc insb dec jl xlat xor std mov outsb adc rcl and mov das mov fldl andb dec sub jg sub test sti jae adc mov scas push pop (bad) push pusha cltd mov in movl add outsl and xchg mov push (bad) bound pop inc or lcall mov rcll sbbb mov mov mov and or mov xlat mov and flds cmp push sahf jl add pop iret mov dec xchg mov jno cmpsb pushf arpl cs mul push add mov mov je or pop jle add add pushf and int3 rcr and int3 add mulb mov cwtl or mov jecxz sbb sub xchg rorb test xchg rol cmp jo add jns (bad) stc fiaddl test jmp lds xor sub repnz dec cmpsl rcr mov xchg mov fidivr les insb test pop push cmp add or mov mov mov pusha loopne cmp pusha sbb (bad) jg adc xor xchg sar adc push orl (bad) mov add xor adc iret add push pop cmp pop jge jmp out aas pop addl outsl lahf push mov cmc lea add loop shr and dec mov mov test shrb xchg and mov in jo shl push jno jae xchg mov or xchg pop aad int3 sbb push push (bad) out cs adc movsb dec xchg int3 cmpl adc xchg or movsb inc mov add cld ss jle add hlt sub add outsb fsts in pop andb lcall shll dec adc sbbb xor mov fisubl cwtl sbb inc mov aas inc sub adc inc insb int mov insb pop in xchg js movsb movsb arpl xlat mov test mov fistp int3 dec mov or das push sub es ss dec mov fstl fwait repz enter mov jns in bswap jmp push sbb adc push test imul push lcall add lock dec add xor stos jnp rorl fnstenv xor adc pop sub arpl sbb inc inc fdivrl push inc dec dec add cmpl stos xchg mov mov pop push jl or push xchg fldl sub sti lock imull xchg test or mov jl test imul imul enter scas mov inc sahf sub imul lcall xchg inc xchg enter sub or icebp adc mov dec loopne sbb lcall cwtl jge add cmp jne sub lahf ja xor xor dec daa push cmpsl dec cmp dec pusha ret xor stc sub sbb rorl pop ds dec sbb jns or pop xchg rorl in push mov jl fisttp call dec jp cld js mov cmp lcall mov imul mov sbb cmp dec jnp leave pop mov adcl mov mov clc jmp add lea jge lock std dec jl fsubs inc sub push sbb pop stc jl test and test arpl sub jl push and jns pusha mov push dec mov lock lock icebp xchg sub rorb in inc inc xor mov jmp pusha pop mov add sub pushf and jg adc js mov in leave adc add add cmp faddl movsb and xchg inc insb fucomp jno test mov dec jb loopne mov scas out mov pop pop mov xor leave jg inc jo inc test or and in icebp jne movsb into enter ja in push pop sub (bad) int3 sbb outsb aam inc mov iret and mov mov pop xchg call or lret dec (bad) sbb push xor adc push mov nop jecxz add fucomp les xchg dec mov and rcrb jge add add lcall lcall fnstcw clc mov add jle push call enter mov cmp dec lret orb jne cltd pusha add call sbb bound adc dec adc in dec cmp mov xchg push repz flds sbb clc movsl mov xchg mov cltd clc add adc (bad) xor dec (bad) push add jmp cmp adc imul in or nop test nop mov cmp add push test loope push or popa xchg rcl loopne jae pop inc test mov sarb scas fs mov nop mov int push xchg lock and loop sbb rorl out (bad) cmp daa nop push sbb push aas and rcr push add or mov enter imul sub and scas ja (bad) fistl cmpsl mov adc and pusha fldenv add and test int3 add loope (bad) rolb sbb add jb test movsb cmp adc lret push inc add nop xchg jnp orl stc pop pop in or data16 aas rolb mov cmp adc (bad) and sub ds xchg jbe pop xor sbb int3 or push (bad) inc mov arpl pop and fmuls add add pop movl iret and inc jbe mov shll fdivs push xchg push jne in sti add shlb mov cmp inc mov je jecxz inc inc sub fsubl pop or jg cmp pop sub dec jg loope fwait mov mov pop hlt stos fistl int3 lcall jmp push xor mov add sub fcmovb and bound add and jge dec das (bad) in mov hlt mov out xor xor testl adc rclb aas push pop cli add lock xchg push adc cmp jecxz imul dec inc lods pop dec stos pushf add setl push subl mov add jo and lock aas leave add sub mov pop adc pop mov adc nop movsb jl sub mov rolb dec jg cs add or inc sti sahf out dec js fwait sbb mov inc xchg aam or xchg jmp jp pop ret pusha pop pop or int3 dec in add mov loope cmpsl and (bad) sub mov pop orl dec scas fsubs jo dec dec inc push hlt sbb add or pop jl pusha jmp push mov lret or adc mov xor lds sub (bad) dec xchg sbb ret cmp pop loopne hlt xchg lods imul mov xor lds out and in adc sbb adc cld and sub jp es aas jns pusha xor mov fcomi mov mov mov push out movsb loop nop sarb repz push and dec inc iret add sbb popf cmp je enter add push test ljmp xchg (bad) das cmpl out repnz or ror cmp (bad) test rol dec mov inc mov add cmpsl gs or push dec xchg or pop jl pop or push addr16 sahf sbb inc roll sbb push daa dec or icebp roll pop nop pop sbb iret or data16 je push push or jmp clc xchg dec jo pop or xchg lcall sub mov pusha add add cli push pop mov add dec mov xor in mov cmp imul popa mov push sub jns dec pop cmp add and lock sbb mov dec cmp out leave adc xor pop sti push cwtl xor jns mov sbb add dec shrb rcrl js inc mov lds or movsl adc bound bound (bad) mov out lock mov cwtl mov cmp ret or loope mov iret mov dec into ret sar nop adcl xchg cld push ret test lcall xchg add sbb (bad) xor xchg dec cmp out clc (bad) and cltd mov test rolb das pop (bad) pop cmpsl and pop xchg inc add pusha imul add std push (bad) lock push movl js cmpsb or sbb sub repz push je sti lock dec cmp aas adc sbb and dec (bad) and xor jo call push mulb shrl jge add mov incl mov mov and mov or cmp pusha push and sub add rorl xchg mov test pop add push push cmp push add loopne in jb push add and adc insb inc int3 call add cmp scas ds bound popa cmp pop (bad) jo sbb cmpsb in (bad) add or push jae or daa clc and imull insl leave test jecxz or mov std loope and sub push xor mov xchg xor lock jbe mov int3 fsts nop leave xor dec dec pop (bad) (bad) ljmp adc jle int3 shr pop call cmp and (bad) xlat and cwtl xchg push cmpsb lahf xor adc lahf mov fcomps inc inc sbb mov pusha icebp stos dec sub shrl or mov mov movsb stc iret shlb mov les cltd push mov or nop mov (bad) dec xor sub pop aam nop mov inc xchg xchg icebp xor mov insb xchg add ja mov js adc fs mov mov cltd push jl push inc pop cmpsb cmp add loop hlt push dec push add rclb es bound je cmp dec lods and dec ret test sbbl and insb (bad) fs shlb mov out xor mov es das mov dec aam dec adc xchg sarl scas mov outsb int jecxz ja lds sahf jle rcr inc fildll dec add nop and adc inc sbb pop pop or lock jge pop fwait push mov out cmp sub dec fdivrs mov or clc adc pop xchg xor in (bad) in sbb push sarb adc pop jecxz insb mov cs stc add inc (bad) negb jo in lea les in mov js mov ljmp pop mov push add gs popf mov insb add mov sub lret leave adc lods adc jl push xor fyl2xp1 inc or jecxz loopne inc dec and orl dec add in add dec mov repnz mov xor out lods into xor push dec in xchg loope adcb dec xcrypt-ofb adc adc or fisub and dec pop lock mov fnstcw mov or adc xchg adc in lea in push sbb mov stos mov ljmp sub and test push push mov test lock jo (bad) je or and shlb push or nop (bad) lret pop orl into mov fdivrs sbb sub rol or stos dec add xchg xchg mov das stos cmpb inc adc or xchg (bad) loop inc jl stc pop xor inc insb add (bad) (bad) push shll jmp mov add mov rol jae lods mov xchg sbb mov movsb dec inc pop adcb dec dec mov outsb lods xchg movsb enter insb xor push leave mov add incb sub clc or fistpll cltd cmp outsl sub jbe push sub lock pushf or cli test fs cmp int3 pop xchg dec int jg mov in lds add cli insb rcrl pop loopne pop in inc pusha or jecxz or cmp lds pusha jne push inc arpl push mov adc jecxz add jb sub push out cmpsl aam mov loopne fildl rcrl push and jmp push dec test mov mov cmp test test xchg mov js xor repnz adc in push test insb leave int3 (bad) shlb fdivr xchg fnstcw cmp mov jmp repz lods sbbb test flds lock xor mov adc inc hlt shrl movsb push push xchg adcb adc and loop or xchg xchg jl ret aaa xlat and inc loopne stos int xor mov aam sub pop mov xchg dec sbb mov out and add and je cmp shl xchg shl repnz or and enter enter xor sti callw add cli shl popa scas dec add out into xchg test lods sarb ds mov addr16 in mov pop add add mov xchg pusha dec dec std add pop pop insl dec mov sub rcrb (bad) mov dec pop into fisubrl add mulb inc popf add inc enter mov stc cmc cmpl adc rclb xor xor fistl sbb cltd pop jo cld cwtl and cmp inc adc adc lods inc dec jo push jae push addb imul mov fdivrs inc inc lret mov shrb xor cmpsb jo or shll faddl je mov aas xchg gs add push push nop ret or movsb push inc pop dec adc and or faddl ja inc outsb mov inc dec dec pop mov jl icebp jae push xor std sbb adc or in or aas adc mov out call in lea bound (bad) push adc push or fmull sub test movsb and push insb outsl sarb int3 add bound popf dec mov add ljmp leave popf addr16 dec add lods fsts adc cli jmp cwtl add dec xchg xor xchg in subl xor push call fsubl testb push aaa mov inc mov jbe mov or mov call jecxz jg popf or pop pop mov mov inc mov inc jl mov mov cmp addr16 or arpl (bad) enter scas rcrb pop xchg rcrl dec pop adc push push mov xor leave sbb out pop sbb mov push jp cwtl in xchg or fcom faddl lret dec mov lret test mov scas arpl or sarl inc and add insl rcrl sbb test mov xchg inc (bad) std add mov rolb sbb movsl int3 rcll notb test fld ret cmc inc cmp addr16 jns sub sbb cmp add cmp pop ja fwait sub push cmp mov and test orb cmp sub mov shlb sub cwtl fs in fwait mulb cmpsb adc cmc mov pop fcoms or cld or insb add out push adc pushf sbb cmc outsb xorl icebp xchg out test or int3 dec mov or sbbb mov push dec leave mov inc sbb cmp and mov mov jo insb cmp inc jmp xor jl test or xchg imul (bad) jns inc in (bad) insl jg arpl repnz das add jmp push data16 cltd sbb pop jns sbb and loop add or int3 loope or into aam test push adc cmp in pop mov ja add outsb je jl mov xchg pop addb jle mov (bad) pop or xchg xchg in lock sub dec cmp insl xor fildl movsb or cmp xchg xchg inc sarb add and sahf push sbb lods andl jp fwait xchg mov into sub and jp add cmp and inc jo add lods xchg andl lahf rcll mov inc sbb lods or test int in adc lds add adc add insb and daa mov adc fstpt dec sub pop xor xchg and xor mov test jnp mov xchg push jge enter inc sub and dec ds sbb and sub lock sti and and out jg clc cmc into pop sbb testb popf std mov sub or popl sbb aam pop jo xlat mov mov and dec jge or push rol pop lea sub popl xchg movaps or sarl in movl xchg fild push and mov cmp inc lods sbbl cmc test add repz xchg popa jnp jne enter ljmp jo lock inc push fnstenv cwtl or cmc adcl pushf add popa sbb or outsb cld pop mov hlt sbb out fnop inc pop cli out scas jge add add or xchg push sbb test pop jecxz xor and sub add mov jle add mov es sbb cmp add pushf xor cmpsl jecxz wbinvd xchg pop jg in and inc push push pop adc int3 popf nop add andb inc push mov adc dec cmp inc mov jnp (bad) and cmpsb pop pushf mov or stos pusha outsl or cwtl or cmp dec mov lock pcmpgtd scas in cmpsb lock (bad) pusha iret mov jo jnp add cmpsl sub test lock add mov add push test dec push mov imul out jmp cmp (bad) aad movsb nop int3 add sbb stos fstpl dec and mov fldenv push mov ljmp sbb and addb dec insb xchg or or or mov mov jns add mov mov dec xchg rol jmp cmp dec mov xchg sub sub adc sbb popa jge jmp stc or stos mov lret popa ret sub or imul xchg mov jl cmpb mov adc fstps push add movsb push xchg mov push mov adc lods insl aam and (bad) dec mov std add dec rorl cmpsb mov sbbb gs xor (bad) aaa xor or mov mov mov movsb test fnstcw fucomi (bad) cmp pop adc push pop hlt jb in and (bad) sub cli pushf add sub mov shrb int3 push adc mov ds pop (bad) test add (bad) jb push fisubl push aam fdivrs jecxz mov (bad) fbstp cmpsb mov inc out movsb or outsb sbb std cmp in popa or lahf dec inc xor in cmp inc xchg js cltd lea sub mov dec add xchg in into jle and bound and sbb add mov (bad) sub mov in repz fisttp cmp pop sub movsl enter adc inc les push cwtl faddl cmp int3 inc adc lret sbb popa pop sbb dec adc je push fisttpl fsubl jo pushf sub mov push fwait jo fistl push sbb push in fistl pop or mov loopne dec or push fdivl call or addl pop pusha push mov in dec add push jns (bad) sub pop iret and sbb add ret mov leave jl inc (bad) lret add sbb int3 mov clts adc sbb js sub fwait mov insl mov pop mov add roll xchg hlt iret xchg fwait xor add stos jecxz (bad) mov inc mov int adcb sbb nop add pop js gs jae fs sbb shrb test pop dec stos push xchg call sbb aam push pop and jecxz mov cld and and cld subl or add mov mov inc aas (bad) repz bnd or nop push cltd dec fsts or jo mov cld ret and ja mov mov add sub mov mov psadbw scas mov ds sbb inc dec or stos and jbe pop sub cmp loopne mov or dec inc cmp pop clc es mov mov loopne test jo mov subb dec in push adc test or adc shll sti pushf je add int jb xorl pop cmpsl lret inc and or dec mov push add cmp cwtl sub in pop sbb jnp in xor and adc movsb aam lahf mov data16 inc or scas hlt rorl jno xor nop movb xor mov add mov call (bad) jmp and and mov cs (bad) push in xor ja or (bad) xorb add sub and test xchg shlb push jl mov or nop test es loope lods popa jmp mov test or push ret xchg insb inc or xor cmpsb or sub pushf inc jl dec pop aaa test cmpsl mov data16 push andl jecxz sbb fsts and inc mov xchg jb add jbe es mov in mov pop popf sub sub mov or (bad) int mov inc add out rorl nop insb inc out aam push fdivrp pop mov pop negb in lret pop mov int imul inc jns or movsb scas icebp lock cltd add cld add gs mov enter fwait test pop push pop xchg and ss and mov cmp push mov and sbb mov sbb inc int dec push push subl (bad) gs xchg mov cs orb fs jge mov fldcw clc adc and or mov pop and xor jno dec in andb stos sub push or test fs stc add cmc xor add sub cs cmp mov lds ret or mov inc adc sahf jg pop mov rorb add push orb lcall dec lods (bad) jne fwait les fcmovnu inc sbb push jnp loopne (bad) leave sub sbb or orb in mov cwtl adc lods add adc lock (bad) push mov cmp push dec in outsb jg insb jge hlt adc xor nop lods imul bound test nop push int daa mov insl fidiv cmp xchg sahf adc ret sbb int3 pop pop mov fildll add enter movsb sub aas inc add inc push rcrb inc sub fwait cmp push daa and add and in jmp push mov sahf add mov add adc jle pushf repnz fimul cld out xchg jb xchg jnp add or rorb dec xchg js or add lods adc nop pop popf pop subb add hlt loop (bad) test and subb adc test out add mov clc add mov icebp outsb shlb or dec js add push jbe xchg jno add fldl adc gs das dec adc dec out fadds push dec cmc sub cmp mov sbb les inc xor js mov iret rolb (bad) movsl sbb add push xor les jecxz dec inc pop imul xor into dec in and cmpsb xor add cmpsl mov into push xor rclb enter inc insb jg push aam sbb loope and or das xlat mov xchg push in aam fsub mov icebp and jb push inc repz jae cld or fidiv mov push pop cld sbb cwtl mov xor add shll sbb int sbbb xorl xchg cltd leave pop add loop pop jbe sbb inc pop add mov int lods call jae inc jge add sbb (bad) stc or hlt jno fldt add mov test dec mov lods lock mov shrl xor scas (bad) cltd xchg pusha cmp xchg push adc add mov sbb or hlt jg pop lret xor aad mov push mov sbb xchg addb lods setae ret dec call and inc push jnp adc pop mov mov add and fmulp es and mov push js xor xrelease fdivrs pop and pushf dec scas xor mov lods nop add adc inc outsl pop push data16 sbb inc (bad) xchg or sbbl (bad) cs nop ret cld lods in xchg pop loop pop call mov or pusha pop fnstenv push add and daa lock pop or cmp andb arpl and xchg in fwait shrb fmull xchg ds or pushf or mov fsubr out add pusha out (bad) shrl cmp in add or pop cmpb mov ficoml int3 add xchg cmp push pop rol push jg orl inc je xor cmp les mov sarl mov xor mov xchg mov mov cmp je ror imul mov (bad) test sbb shll ds sbb lods mov addl (bad) jbe mov lret adc pop rorb mov or inc aad enter cli sbb push mov xchg test fdivrl pop mov sub fldt adcb push xor mov xchg int dec lds popa js mov les mov in mov and xor repnz cmp btc mov and and loopne mov mov sub pusha pop mov adc mov scas push pusha xor cmpsl fcomps pop ret mov mov pusha sbb mov dec call das jl mov aad (bad) jb add out mov jo mov mov add xchg loopne cmp push leave fnstsw fstps je fwait sbb and jns dec xorb pusha cld in jbe mov jnp jmp test and sub popf xchg fdivrs cwtl sbb scas fnstenv lods cs xor adc mov xchg inc andb dec mov and and adc or mov lock ret loopne mov sbb cwtl sub inc inc addl neg dec nop hlt push xchg ret mov les (bad) jbe xchg and out xchg mov mov adc fistpl and mov in jns clc test mov push xor push sbb movsl (bad) mov add ds mov jle cmp (bad) cmp jge pop ljmp lcall cwtl ret (bad) cmp push cmc dec incb push jnp jg subl xor iret and and push outsb mov pop push js add xor sbb mov flds jmp add adc test sub add lahf cmp test fisttpl in (bad) cli sbb pop mov (bad) cld (bad) jecxz out repnz xor divb jae js sub pop les sub and add int jae dec add mov jg pop stos dec add fiadd stc leave (bad) testl or and out dec mov add jle scas push imulb xor jns mov push je push add xchg pop dec and xor repz addb dec adc inc sbb and mov mov jno mov and jae push pop inc inc int3 cmpsb sub out pop addb (bad) not add std cmpsb nop adc jno pop add or push dec clc iret jo fisub ds sub test push fucomi xchg iret push shrb jns ret clc rorb jno (bad) pop and cltd sub jns mov nop adc clc add mov int3 out decb cmc gs pop mov mov jge add (bad) std jo sbb mov jns hlt orl lfs cmp xchg clc leave je and xor sub inc cmp push sub mov orb jns push or add test add xor xor add mov movsl and xchg add cltd fs push das jl dec loopne leave inc pop and or hlt cmpsl in push and pushf lret cwtl push (bad) aas js ret loope icebp sub mov test or mov rorb addb loopne int3 fcoms test aam sbb cmp out (bad) dec or lods sbb xor outsb jno dec ljmp loopne and pop pop xchg jg add fisub or leave lret js adc repnz pop pusha cwtl push ret and push add aaa add inc or cld jns jo cmp data16 (bad) mov xchg sbb sub fmul add in cmp sub xchg add pop scas std movsl adcb cmp and ljmp in pop and xchg loope xchg loop mov mov mov popa fldt add inc pop addl xchg cld das adc aam or add xchg loop (bad) jo cs dec or and cmp sbb cmpsb arpl mov dec xor xor sub cwtl add pushf jecxz push pop cwtl xor loop cltd test enterw pop insb movsb dec add xchg enter pop and lret jmp lds dec xlat cmp outsl mov cmp mov cld jmp mov lret or xchg sbb icebp xchg ljmp or xor pmaxub lock add shlb outsl xor add xlat arpl shrb subl jle sar je pop xor and lcall test loopne sbb and jbe seto divl inc add adc xlat or add jle inc inc orb sub popf inc lods cmp inc sub daa adc mov and iret add xor dec and js push into and xchg add cld cmp js xchg inc add jge (bad) int mov (bad) inc test mov or dec or imul xchg dec cltd jle testb or sub (bad) loope cmp xchg sub jae hlt xorb push inc orb jle shlb int3 test dec cmpsl shll inc movsb or in add inc cmp push shlb fucom sti inc cmp lret push adc or add (bad) and add (bad) ret or sbb push mov ja inc jno mov std and pop xor dec and subl pop pusha cmp mov int3 fiaddl (bad) sbb imul mov movsb cmp mov frstor jp enter mov aam inc xlat int3 or dec push (bad) cmp add mov imul jl dec or or call pop pop fs and stos sbb dec (bad) mov sub pushf cli inc outsl sub int3 mov or mov or and push dec mov jae fnop or addr16 and sbb pop movsl movb xlat (bad) xchg arpl and xor mov pushf pop nop movsb enter aam push int3 sub add mov adc mov nop adc push and dec enter xor test out adc mov pushf xchg sti jb inc pop std loop add adc xchg mov push or cld add sub mov cmp and inc in cmp out pop cmc cwtl mov or je dec movsl xor adc inc jno pusha dec nop dec xor insl and (bad) lock xor or inc xchg aas pop pusha xchg push or in idivb pop xor rclb cli cmpsb fadds dec into push enter add out xor dec mov je pop sbb and orw sbb push mov or sbb jo add xchg pop jo add ret popl loopne ds call aas dec sahf xchg jae cmp hlt ja pop xchg in xchg and or xchg push je dec pop idivb sub cltd stos popl mov repz roll sti mov jge aam add fs loop push sub add fnstenv (bad) sub add or das mov jecxz mov movsb and add daa int xorb flds out nop test jbe lret mov add inc add test xchg mov add movsl nop test int3 outsl mov and (bad) xor mov test popl add les sub xchg xor push jo sbb fistpl push xchg mov in mov xchg inc sub add pop dec xchg icebp jecxz mov xchg sub and push fimul dec nop pop test mov mov into pop inc ds push mov pop mov dec leave inc clc pop xor xchg movsb imul sbb mov pop and (bad) cli push call xor cmpsl dec jmp fucom jno mov pop sub add mov bound sbb cmp stos sbb lods (bad) push iret dec sarl pop cmp pop sbb xchg adc adcb jp fist das bound dec mov movsb iret add fwait rorb push xchg js add xor inc fcomp mov lret cmp out pusha mov mov icebp adc fsubl iret loopne sub add lea clc xchg dec jns add (bad) ficoml or sbb push xor pushf je or shrl lods jne aas dec xor scas jno or aaa outsl and jo icebp jl jmp fsubrl push dec out cli jns scas aam jno sub mov nop mov sti fimull scas lock mov xchg sub jb in sub add sbb pop outsb dec es mov (bad) mov in fdivr xor inc (bad) xchg fmuls dec in call push xor and int dec sbb push sub cld jns pop sbb hlt xchg mov inc pop adc pop pop pop (bad) cmp xor dec cld adc add pop les insb xchg outsb xor lock enter jp js add cmp sub mov cmp test and cld lds mov mull mov xchg inc icebp inc lods dec shll mov mov jecxz push push push sbb cld or mov push vmovaps sub inc xor mov iret pushf or call fstpt mov mov add pop das pusha fucomi (bad) jp mov mov fstl push movsb adc sti stos mov imul int3 (bad) fldl shrl sarl dec sbb loop xchg xor mov adcb inc js arpl or pop pop or movsb mov icebp or or fmulp mov dec movsl mov add dec aaa sbb pusha sub out mov lock and mov sahf in xor jno call aaa es xchg call sbb ud2 (bad) xlat jmp test add jnp in sub push (bad) je dec sbb and test insb xchg add dec cmp stos call push mov xor fs cwtl jo (bad) mov add dec sbb dec xor andb mov add or inc pusha adc je pop xchg ficom sub sub mov cli in sub sbb inc and or test fptan lds faddp inc mov ss pushf rcr inc lcall or daa xlat xchg mov mov rorb jns adc addr16 ds pop loope (bad) nop nop mov (bad) (bad) and cmp mov adc mov push push xor pop int3 mulb dec imul xorb frstor movsb cwtl mov mov sbb xchg aam rolb loopne push adc fs mov cmpb mov cs mov or inc sub mov fs or adc and mov mov (bad) or popa and mov enter jle add mov xchg jge aam dec pop xchg cmp xorb nop repnz call mov stos push and inc lods test pop cwtl push ror lods cwtl mov add rorl adc addb mov mov cmp fisttpl xor (bad) call inc mov jmp push inc add movsl cmp mov pop dec mov add jg test dec jle lods sub adc adc imul cmp lds fsin dec push pause or fwait mov add hlt dec jl arpl push cltd mov add inc lock leave nop es xchg ret rol fsubrl dec push je mov insl cmp and test ror xchg scas fmuls fs and xor ja (bad) xor push insb std push (bad) int3 mov sti ror mov mov lock sbb out add aam daa mov aad ljmp adc or (bad) repnz pop xchg adc push cmp sbb and loop push inc paddb (bad) hlt lea test icebp mov mov fdivl inc sarl cmp movsl fldenv loopne ss push mov push xlat adc (bad) insb daa orl cld iret add push and or xchg std jecxz lahf add pop es movb push pop xchg or jg pop pushf int3 add rcl clc mov lock mov movl fwait enter mov add lods insb dec pop iret xchg add sub mov cwtl mov lods inc roll adc jmp lods cmp adc and add orl inc imul pop mov push ret faddl imul lock imul mov in (bad) sti aas xchg cli rclb mov pop inc int3 pop jne pop sub sub test mov or jno push push pop movsl (bad) (bad) or loopne add pop lea mov bnd add or in mov lcall xor adc sbb add cmpsl movsb hlt push jge mov sub push dec loop inc push (bad) mov stc leave add and mov or imul xor jmp adc cmp xor lock xor mov inc xorb jg xor imul ret pop pop js les jl inc pop jg add das jbe sub imulb clc mov add insb adc insb hlt mov sbb cmpsb mov jae xchg lock (bad) movsl add fistpll ds push sub lock sub popl add nop nop ficomp push movsl sti and mov pop aam clts sub sub test pop mov xchg rcrb in dec jl pushf cs int3 movsb cmp aaa or dec shll adc addr16 movsb mov push add cmc sarb dec and rol stos pop push mov sbb in jo sar dec movsb leave push (bad) hlt add insb pop lds or cmp pop xor fsubs addb js adc inc loope push scas jo dec and rorb scas jno pusha adc adc movsb dec loope cld sbb cmp dec adc ficompl ss pop sub inc stos inc jp pushf imulb adc shrb jae pop add add xlat inc add or incl scas and pop dec pop add inc add push add mov ss jne and in cmc stc xorb movsb aam sub pop add sub rorb cmpb sub lea aam mov add mov or add arpl rorb lds jb xchg pavgw jl fiaddl or push call mov sar mov mov inc dec inc xchg rcl rorb inc add imul es jae and and mov cld xor sbb mov add mov loope inc inc cld fucom dec xchg mov out and push and jp add pop addr16 jb nop dec pushf add nop adc add (bad) inc fsub stos es and add scas dec xor add call movsb pusha inc rorb rcrb cld push movsb xchg jb popf hlt jno push jecxz add or adc add push pusha jns,pt outsl stos jmp setno mov or and popa mov add daa in into (bad) hlt (bad) icebp les pop inc rolb mov mov stos mov jno fcmovb add gs outsl call push xor cmp and mov ds add or xchg hlt sbbb sbb cmp and icebp mov adc cmp and test jne cmp push adc and lcall jge cwtl dec rclb push inc mov pop mov enter nop or xchg cmp and or mov js sbbl fimul jbe ds add add subb or push adc dec cmp xor mov cmpb jle add pusha repz idivb jns add nop add ds mov mov sbb push mov jo hlt stc insb adc inc scas sbb sub mov mov push lock push xor xchg cwtl sbb cwtl and mov mov push hlt or sub bound in and and add movsb and stos mov sub xchg and jae or in push jo cwtl pop (bad) aam ret xor jne mov push pop imul (bad) mov pusha inc cltd sub sub jb and subb mov pusha cmp or inc push add and (bad) clc insb adc mov sbbb subl (bad) lea sbb push push jp mov mov mov xor repz imul fisttpl movsb call pop mov adc cs sub or adc push or stc int3 in adc jb pusha lock (bad) mov sub sti repz gs inc jo imul sar push sub cmp xor adc or je sub aam push xor or ret fmull std jne in movsb js cmp in lahf test lret shrb call mov sbb sub xor inc cmp bound shl or pop jns (bad) mov jl adc hlt adc and nop (bad) or fs inc mov dec xor mov xor rorl test sub jne xor cmp shlb pop adc and pop fwait add mov je pop or or pop jg push xchg pop daa push test loop jo std sbb add in ret lret cmp nop sbb test test or addr16 sbb outsl mov dec sbbl and cltd sbb leave scas pop pop add pushf push and mov push jnp scas add push loopne mov ja fs add test fadds jne test into adc dec sub and adc gs jp sbb push adc fidivl push insb xchg mov inc push insl cmp cmp pusha movsb and cmpsb xchg adc sbb push pop (bad) jno loope scas adc ja cmc loop sbb push cmpb mov adc inc test inc mov pushf sub sub mov and pop mov or and push add call jg xchg push lahf testl push dec xchg je inc add jle mov jns sar js pop mov daa imul mov std push in and pop lods add jnp out cmp xchg mov mov cmp and pop jb or or push pop fsubr mov cmp sbb clc and movsl push test mov and and add and mov pop fisub mov mov jp cld add arpl cmp and jp mov adc lock mov xchg or push or jle xor mov jl nop inc xor xchg adc add testb push jnp notl fidivrl mov cmpsb jnp sub sub cmp popa cld imul rorb les test jmp lcall xor inc push dec push and shrl ljmp push enter and ficompl sbb loope pop fistpll dec mov push adc and and mov (bad) or or (bad) push inc sub stos loope hlt mov mov adc mov sub leave push (bad) xor jp imul shlb mov nop add cmp dec hlt mov rolb add test inc cld and test push xchg pushf inc (bad) jp push clc inc mov jmp push (bad) enter iret pop inc cmp mov pop jp add cmp loopne imul push add mul pop insb and bound jo inc adc pop sti pop push ds rorb fs pop mov addb mov les mov jnp call nop cwtl inc adc in push js fprem1 fnstenv mov adc inc ret add arpl pusha outsb add lahf ja popf cmp jbe (bad) push sahf push xchg adc out cmp xchg insb mov xchg aas jnp addb add or inc mov mov jp call popf (bad) fmull mov add clc fstpt andl push sti int andl das bound push jb stos hlt add movsb rorb dec and push rorl hlt pop add dec ret inc cmp clc jo adc andl inc popa pop or add test add dec jmp rcl fldl dec push xchg jae adc add mov add les push xor xorb pusha notl decb roll inc mov imul adc ret push lock in pusha stos or add jg repz fs cmpl fsubrl loop mov add cli ja out jb inc icebp or repz mov les jae pusha mov (bad) xor mov into sbb bnd cmc fstl enter cwtl push notl cld sbb les sub in adc ficom jne mov and sbb cmp push mov inc add and mov inc js xchg and lock imul inc pop fdiv pusha jo or add adc les mov sub xorl xor xchg call mov cld in cmc sbbb or imul jge in jo mov add adc add xchg and jbe pop mov adc les and pop xor and insb inc add movsb xchg jo push ds inc dec pusha pusha sbb repz cmp fiadd mul lods popa stc add cmp in inc call mov add mov outsl (bad) mov add mov pop mov mov aas dec lea stos movsl in ljmp pushf pop fstpt inc cmp add and mov movsb jle adc xchg movsb add bswap cmp fildl lods lock push pop adcl jns sub mov scas pop jno sub add jle add cmp imul pop sub xor adc push xor and ret insb ret sub or jge pop pop imul sbb test jle xor dec mov test arpl or enter jo das dec push bound push dec and rorb lods adc and sub xchg cmp stos shr jle movsb testb inc fdivr xor mov mov test xor call jle adc cmp adc aad xchg sbb sub mov (bad) jne add add mov sbb or and cmp inc sbb in push insl mov push or data16 fildll add insb pop cmp (bad) mov mov or rolb inc add cmpsb mov sbb dec xchg pop in dec push add addb inc fs jle add pop (bad) repz add mov ficomp dec lods add dec imul adc aam rol cmp push cmpsl addr16 and adc ljmp rolb add testb loope ret (bad) (bad) push adc (bad) adcl pop les xor jle mov cmp mov cmp je test pop in scas add inc movsb inc or jge movsb lods add xor sbb and mov insb push sarl in jbe cmpsb adc out mov std dec andl call cmp lds cli fstpl test push xchg lret mov adc mov cld sbb and (bad) call insb push adc cli mov pop jl ljmp jmp xlat in jg add data16 or inc mov xorl pop mov (bad) nop and js or dec insl jl in pop push add stos jno sub imul inc test sbb cld rclb xor dec push jo or add push mov add jne out add adc movsb pop fadd fcmove pushf xchg xor ljmp scas fimul mov or lock mov pop loope adc lds aam test pop sub sub xlat les adc movsb sub add ds data16 lcall inc orb mov out fwait insb call les lret lods add repnz ds shlb (bad) jb add inc inc movsb in add fadds add fyl2xp1 ret push cmp incb (bad) lea lock fnop data16 cmp mov cltd enter or loopne xchg cld add push lretw inc add pop ja (bad) mov and shrl inc fdivl insl pop imul mov sub cmp pop add insb push or shlb les int3 jbe imul cmp les ljmp lret xchg pop adcl add es mov hlt mov and dec fiadd in rclb and push pushf mov addb and int3 adc test push cmp fdivrs (bad) fldl test pusha mov and test dec xchg rorl insb inc and ret or mov dec mov mov cltd nop add jo aaa fmull xor mov xor inc or ds xchg xchg mov les rcl inc sbb jle push add xor (bad) sbb (bad) mov mov pop fs dec out sbb pop call jp adcl ficom xchg cmp xor sub das sarl inc cmp rolb insb dec nop inc inc inc xorb fidiv sbb xlat xor push in cmp add fbstp insb jne adc in pusha add mov add mov jecxz rorb fadd dec fild sub add daa adc inc imul sti dec or mov mov dec mov fucom data16 out mov sbb nop add dec test xchg (bad) imul mov adc nop push nop inc cwtl cmp imul ret push and (bad) jns in xchg push fbld sub jo daa je leave or orb xchg cmp dec imul xor enter jne cmp je andl and dec (bad) es js sbb xchg push rcrl inc rcrl aas les add push add movsb scas inc imul rolb jbe sbb xlat cmp xchg test add es enter enter jmp xor out pop sbb sub mov fiadd ret stc outsl lods sbbl and outsb mov lock frstor pop lods cmp adc push and dec dec cld add pop cs xor inc pop or fs fsts or fs lods popa cmc add frstor sbb test and jo aad mov les rcr (bad) pop jbe jp scas or sbb dec add xchg imul add hlt xor aaa dec push add (bad) jo xchg push dec xor enter mov cmp push loopne mov adc jmp dec imul insb test fimull jg imul push adc jmp add adc lods add and pop pop addb fcomps movsb bound pop pop mov xlat imul jle push loopne int3 imul sbb adc add ja pop rep pop dec daa or xor loopne add test insb pop xchg in or jge fidivr imul adc sub shlb sub xchg mov and mov push inc xchg mov and pop or iret jmp nop aas shrb push xor call dec popf hlt fs mov call inc jae adc add scas mov mov mov sarl push in nop jno ljmp sbbb (bad) xor adc xchg pusha fcoml mov or and dec sbb insb sub jl mov push jge out sub cmpsb loop dec data16 xor jge pop inc loopne mov pop push xor imul lods mov jle test lods and xchg andb (bad) les pop mov add inc pop jo cmp jns cs aam or hlt push inc loopne call xchg fcoms nop loope pop or mov inc inc adc lods xor imul pop adc push clc add jno or mov inc pushf mov add ret out xchg pusha imul cmc cmp xor or test push add pusha cs inc imul test pop cmp mov mov pop test mov mov push jo aaa or repz cs cmp and decb xchg add nop insb pop or jbe out (bad) fwait fs mov dec xor or jle,pn or or psubb call sub push flds mov pop xchg fisubl ret xor cltd and mov or or fwait imul push lds sarb leave mov sub repnz mov ljmp add loopne add and push aaa cmp xchg mov pushf insb inc pop shlb jo xor add or stos ficomp mov mov loopne mov mov addr16 lret push inc enter mov xchg dec jle pop rolb pop mov rcrb jo cmovno std fisttpll pop add lods add test sti movsb aam xorl xchg rcrb mov xor (bad) in jecxz and je (bad) and adc int and loope test add dec sbb add xlat and inc sub (bad) xor inc movsb aam add cmp push xor iret lea lcall call pusha add loope jbe dec mov sbb lds cmp rorl jno sbb clc push pop mov mov enter add in les adc add inc mov dec das test pop lods fidiv xchg roll out insb push add inc dec bound sub xor push call lock fsubrs add les loop mov push xchg data16 mov loopne,pt push cmp or xchg dec xchg mov nop xor loopne gs cmp mov push and sub sub inc mov xchg xchg clc adc shr sarl fidivr inc mov push push sub icebp jle jmp lock adc add cmpsl or (bad) in dec mov push xchg adc adc and outsl and shll fucomi adc xchg sbb shll ljmp adc pop mov sbb sbb mov fmuls jecxz shl mov jno push sti sbb adc lret sbb mov adc adc and enter adc repnz sarl in int3 int3 adc popa jne inc or or adc enter fwait sub dec sbb imul adcl cmp jae js mov aaa jl adc inc pop nop xor jecxz and mov and xor xchg cld ret xchg into shrl adc inc sbb push xor data16 (bad) jbe lret jbe push sbb ss test sub xor (bad) in adc xchg fcmovb dec jecxz mov push xor movsl and push adc out pop add sbb pop push cmpsb nop (bad) fisub jl movsl pusha sbb outsl and xor pop call out repz push enter rolb add inc xchg push movlps mov xor loop inc push les js lret push pop cmpsb or dec mov xor pusha iret sbb fidivrl add mov jle adc cld rorb roll xchg and mov push pop add inc mov lcall dec add dec add stos push sub jecxz or outsb ret scas gs addb imul loopne sub push es add and cmc test or jmp add imul adcb stos (bad) mov daa cmpsl add scas (bad) jno hlt pop push add jl in or scas or push xchg das sbb xor fldenv add fiadd add insl mov (bad) lock add aam cmpsb in push cmpsl add imull (bad) jne mov out mov lret pop repz aaa dec les and sub and pop fidivr or cmp enter movhlps ret or aas pop lock stc add xor or and adcb or dec aas add out mov or sbb aas in sbb pop lods adcl cmc ret (bad) shrb adc adc imul cmc mov or mov test stc add adcl cmp push pusha nop in push outsb mov sub dec add loope nop stc xchg xor jno add xchg icebp sub mov pop lcall imul call or mov fsubrs icebp stc dec or popa mov hlt div cmpsl sub jmp add xor dec dec clc xchg mov push xchg mov xchg js mov insl rolb mov insl push paddusw pop leave cmp adc adc insb pop popa jo (bad) or lret add in sbb (bad) xor fmull pop inc jbe sbb sbb rol shrl int cmp (bad) sbb test cmp imul cli repnz fistl mov add daa or inc call mov jae adc sub adc in adc or or orl insl jne int3 jl sub (bad) mov imul lock push jg or mov add imul mov test hlt jg jb push cmp mov (bad) cwtl cwtl jge and mov xchg dec out dec mov icebp inc mov pusha or jns aad or sbb loope xchg dec jmp lock sbbb jnp iret les xor mov mov adc push rorb in jmp inc jae cltd dec pop ljmp hlt dec add imull jnp sbb in and pop bound test popf popa sbb and xor inc test xor ds leave (bad) jae (bad) xchg add outsb adc repnz cmp les mov xchg adc cmp push mov adc andb imul or add cmp les mov add push pop adc cwtl xor nop sub imul push adc mov sbb out xor inc push nop pop insl jg fdivrl orb sub imul push sbb xchg nop and pop xchg mov mov mov dec (bad) mov jb sbb push jg push mov adc xchg mov cmp sub cwtl in popf jo fadds cltd (bad) or mov add mov fs in stos sbb sbb add arpl jecxz out pop or jb push (bad) clc icebp ret sbb into pop in sbb test adc lret sbb sbb (bad) ljmp mov cmp popf add inc rcl or mov inc movsb (bad) push xchg xor dec sub pop adc dec movsb jg sbb bound xor sub (bad) rolb jne ja xchg mov push adc xchg sarl rcl sbb popa sub xchg je add arpl cld or pxor out adcb in pop sub repnz test popa ret or (bad) in cld inc scas sub aad dec mov movsb cwtl mov sub adc mov or add in xor adc and orb and adc or sbb cmp pushf je mov je mov addr16 jmp sub adc inc add cmp dec sub cmpl mov add push add and or movb out (bad) repnz xchg or jge and arpl mov je xor inc and xchg int3 and test sbb cwtl ret add adc clc xchg fs add les sbb nop and pusha mov add ret in dec xchg push jbe xor mov xchg aam mov jb sbb shll xchg mov in push fidivrl xchg pop nop adc ret adc push xor mov outsb jnp add push cltd inc or or insb cltd sub dec mov cmp sbb push sub sub mov call ficomp push and rclb mov nop cs sbb sbb test lock xorl dec ret xchg enter adc xor mov adc sbb add adc ja mov mov sbb or cwtl out call (bad) in jecxz add test xchg iret mov call jnp add inc out loope jo clc inc add lods aam sub or (bad) xor mov cmpl xor test sarb ret push (bad) lock fisttpll inc cmp dec sbb jbe add jl xchg adc and (bad) bswap pusha loopne aas jo xchg sbb andb lods enter in dec movb jge or shll js jo jne mov cmp adc loop push and mov xor stc pop std adc xchg and xor fmuls fs xor fimull xor adc insl jle add roll fidivl xchg push push xor adc cs add test ss jl dec mov xor jl dec sub inc inc nop or (bad) in sub dec push jne (bad) and pusha dec je fs and inc push enter lock nop adc mov cmpb and jle xchg rolb mov faddl or xor mov enter pop daa rorb nop pop je mov test push adc bound xchg ficomp jne inc push mov jo imul mov push pusha jnp xor jb add dec enter lret jne add cmp push fsubrl mov ds or jb mov and mov out push incl nop pop nop add andb es adc (bad) out dec xchg sbbb push ret fimul mov in dec sbb xchg in push lcall fsubrl or jb sbbl (bad) sbb lock sub dec mov dec (bad) test or (bad) cld xchg icebp (bad) je enter ret sub inc js pop mov sub rcll xorb jl dec test cmpb icebp dec pop mov in jp leave mov adcl mov mov (bad) inc jns aam insl pop push add sbb test add ret xchg cld add inc jecxz add lret jns loopne adc add or clc push std push add cmp mov pop push aad add mov arpl imul lcall paddsb mov clc inc fisubr add or lea inc mov movsb cmp sti add mov or inc pop push mov jno fcos xor xor loopne mov test xchg jo adc sti sub sbbb int3 addr16 lret inc add call mov enter outsb clc gs xchg mov out int ljmp mov pop sbb jmp add mov scas add mov call sub cltd inc je popa leave cwtl and pop mov ret clc push mov movsb mov pop cltd xor nop test xchg inc lahf add flds sub push pop cmp sub loopne scas mov xor test movsb fs push lcall cmp (bad) sub cmpb and addr16 fimull aaa pop or add call and jo repz cli mov dec les idiv mov adc push dec loopne sbb enter and push add adc stos arpl push sbb jno add je pop bound cmp cmp cltd (bad) xchg sarb dec or or adc add pop pusha push popa push adc xchg nop jo xor xchg and les daa int3 cmp adc jno xor pushf or dec push fdivrl add out popf out mov es jo,pt pop pop lcall fs cmp outsb add ja popa or das sub mov mov pushf add gs fmulp push or push inc clc pushf add mov add pop xor cmc xor lahf data16 inc pop jns out dec pop orl cli dec add push andb fld ss je js adc aam stos and xor jo test popf sar cli xchg frstor adc pop push inc (bad) out sbb rolb into xor mov lea xchg call shr (bad) jecxz jecxz outsb jmp jo gs adc pusha sbbb out or lds inc pusha ljmp xor dec mov inc push bound imul push add jns sahf popa mov push cmc or inc mov pop cmpsb pop (bad) push shll jg add xchg adc and sbb mov or cs sub mov or adc sbb faddp cmp shll push lret mov xchg call mov dec popa xchg add mov test aaa jle dec scas ss pop clc mov aaa fdivl jns sub add in pop sub or mov pop je les xor sbbb dec sub loopne insb (bad) sbb js dec nop add dec sbb aaa or hlt incb int movsl adc movsb inc adc push sarb sbbl movsb xchg add ffree test mov cwtl cmp adcb fcoms push mov popa ret add cmp push dec or xor or rorb (bad) ret pushf fstl ss add fcomi mov pusha sub sbb dec ja add mov mov test lds add pop mov cld in mov aaa les ror fistpll fnop loopne add sbb fs xchg gs inc xor sbb lret iret and jmp out mov ret inc dec fcompl popa int3 mov fild aaa inc imul (bad) push push rolb add lods sub pushf shrb int3 test lcall loop les mov push es mov push imul push push sub mov outsl push ja jmp sub fwait out push xchg xor stos cmp mov add add pop daa add mov cld mov call mov fs notl cwtl or adc gs aas or lea inc pop add fldenv imul pop inc inc pop repnz mov int3 addr16 xor dec cmp add push nop outsl enter pop xchg lock sbb mov cmp out sbb stc sbb xchg and adc or out inc in lods add pushl sbb sbbl cmpb jmp cld mov xor and xchg cld dec sub sbb les test xchg pop pop jae fsubs cwtl sbb cltd and in sahf xchg fnstsw mov sbb (bad) xor sub mov xchg cwtl aaa fnsave lcall insb loope push sbb and js lea mov adc testl pop movsb sarl sahf rcrl pushf and cmp adc pusha in ja movsb movsb or or rol push push cld or lcall cld ja cs movsb pop rcl add (bad) mov add dec mov (bad) sub ret pusha fnop and add push adc frstor xor or adc inc xchg mov xchg (bad) mov sbb movsl adc fnstsw (bad) and push mov (bad) ficompl push or data16 or loop imull push lds xchg sbb inc je pop (bad) jae je mov imul add or xor adc inc lock add sbb fcomi jmp add clc xor mov xor dec addr16 xor adc mov jl lcall cmp popa inc dec add mov sbb ss popa call out inc les dec xchg ret (bad) ficompl inc data16 cmp (bad) jnp or call inc cmp icebp pop movb lock jg cmp addl mov xchg and adc (bad) (bad) data16 jb jo jno add jg mov cltd enter adc (bad) lret add mov pop jo or dec dec mov mov pop mov cmc sub aam sbbb pop sbb in mov and shrl mov mov jne es mov pop loop sbb stos cmp rorb jae mov (bad) mov push inc in push movsl or jecxz cwtl ds shrb sub sbb fisubl inc lods rcrb les lea popa fs and adc dec push xor mov nop cmp into xor sbb loope in cmp dec movsb sarl aam mov dec sbb xchg and jb cmp loopne in sbb ret add sbb mov dec lods iret and clc aas xor out (bad) std ficoml and or fs inc mov or inc out fnstsw add adc (bad) xor enter mov pop fisubrl jp les xor (bad) sub imul fs adc sbb faddl aad adc sbb aam mov sbb (bad) and sarl pop push bound sbb pop rorl sub mov aad clc mov or add xor in add repz cmp jo inc xor call jns mov xor pop inc nop incb sbb stc pop xchg popa xor ret lea lods push add push xchg fwait aam sbb repnz rolb cwtl stos (bad) xchg mov iret mov popf sub mov mov insb sub loopne ret loopne xchg and jmp mov push fldt xor shrl and sahf test iret xchg or and addr16 popl or sub enter in sub mov and and adc cltd outsb pop lods nop pop or jge int movsb add cmp mov and add ss fcoms xchg and shr test shufps mov sbb fmull jge icebp shlb lret scas lock shll lahf scas test jge add insl arpl outsb inc dec fld adc jmp enter xor sbb jl in out dec jg sarb iret inc mov repz dec sbb cmp add call mov add dec stc enter mov add je mov xchg and leave sub add xor cmpb mov add lock pop inc mov inc cmp add test cmc sub enter xchg and inc dec sub enter pop cld out cmp pop and xchg pop sbb bnd je mov push push fnstcw les dec int3 sbb jno pop adc sbb inc push mov hlt mov jbe fucomp push sbb xlat mov dec or dec call xchg mov add in data16 xchg xchg xchg shrl bound cmp pusha xchg call or js and mov and jbe orb inc push orl sbb or push pop imul sarb and fiadd cli lret cmpl sub mov adc mov add test mov in push subb jo and and sbb lds or or or jp mov jle test lahf fs leave je add fsubrl inc ret sbb adc je push adc xchg or jge inc mov mov or outsb les push test push insb lods xchg xchg adc sbb incb jae push bnd add jg jno cld inc outsb or (bad) imul dec pushf push cmpsb ret das sbb enter push in mov and rclb and lea mov adc adc andb adc jae out xchg add mov mov dec out sahf jmp (bad) adc mov adc xlat loop sub jmp ss add inc mov push sbb insl (bad) xchg mov mov jo (bad) stc mov xor pop cwtl in idivb loope aam inc inc fadd jno adc and cmp out dec dec hlt ret sub mov inc push mov insl lods les dec andb add mov mov mov cmp repnz cmp shrl nop push inc inc adc dec cmp in ja les dec adc adc mov (bad) inc xlat push (bad) js cmpb sbb jae mov jl aam ret clc fdivr shl mov jb nop pusha sub jne les fucom ret lock adc cmpl mov insb xor les add fisubrl in pop pop pushf test jp (bad) inc mov cwtl movsb sub xchg add push fcompl nop rcll jmp xor jbe jne,pn fcmovne inc or pop pusha cmp cltd jo test dec sub xchg push dec in add add jge out cmp inc shr and lret (bad) cld cmp (bad) pop inc mov or xlat fldt mov in inc dec ret inc pusha or mov pusha push pop popa mov xchg int3 rorl mov and cltd adc sub int3 arpl pop out xchg push rclb cmpsb outsb add inc push test mov in push je sbb outsb mov push hlt jl aad push shrb mov decb xchg mov test mov outsb mov xchg les xchg ja cld xor mov and cld imul inc xchg sub into and cmp mov out sbb xchg js add pop notl sbb rcrb movsb adc lock mov add out jge outsb loopne or add es repnz dec adc fisubrl in push adc or sbb nop inc sbb add out aad ret push sbb stos xchg xor cmpsb je dec or mov (bad) push mov mov lock adc sbb lods or ss pop xchg outsl xor jmp jge test and jo adc add int3 jb sbb je and ljmp call insb iret ss dec mov jbe (bad) pushf inc fimull mov push xchg mov imul movsb (bad) dec aas loopne mov fldenv ficomp add sbb fs test push mov adc cmp pop add ljmp mov aas imul (bad) xchg out cmpsl stos inc add cmp incb adc sbb cmpl mov roll in fcomip lock pop mov sbb into repnz cli (bad) or js adc or sbb rorb push sbb leave ljmp call sbb jmp outsl sub cmpb or adcb mov sub add (bad) and mov mov xchg gs in in adc rcr mov cmp adcb inc dec add inc pop pop push dec mov xor out adc add pop and add push jns loope pop jbe je dec shrl int3 cmc fdivrl pop clc loop pop sar push inc or fdivs xchg push sbb inc lock mov jl dec popf pop mov repnz inc and adc les and nop xor sub mov and imul ret loopne xchg inc or data16 push mov jo insl pop adc jno in inc add sbbl fistpl bound andb adc or rorl aam mov loop shr addl jmp pop dec and das loope (bad) mov mov test imul adc xor shrl ds adc fcmovb in xchg pusha imul lock repz dec (bad) push pop into push mov xchg sbb fnstcw sub fwait mov test pop es (bad) mov xchg subl or xchg pop push pop (bad) imul sbb fistl mov xor rorb xor cmc enter pop mov pusha pop ret inc (bad) mov and fildl incl lods dec xchg xchg nop repnz subl dec pop xor push sti rclb daa add scas jo mov pop jns sar loope add jb,pt push adc mov sbb add dec inc inc sarl and popf ret bound pop movsb enter and fidivrl in fucomi pop mov mov pop call pop sub int3 (bad) rclb push adc cltd mov add rcrl xorb rcrb add push add outsl inc faddl mov movb sbb sbb pop xchg scas loop jl push insl shl enter mov inc nop push or dec mov mov mov (bad) mov jb icebp lock pop call cmpsl loopne adc dec add outsl dec sub cmp push cs movl arpl dec fadd jns sub in ljmp xchg decl fstpt adc and fsubl lea xchg pushf push cwtl sub xchg das inc mov jmp mov push outsb and mov dec push insl mov dec aad jp inc icebp insb pusha add mov mov rcrl in test and add adc test rolb call and and push add jo testb ljmp push rcrb addl and adc dec mov add cld inc xor test adc les stos sbb enter outsl pushf mov add xchg cld pop fstpt mov xchg in xchg adc lock les das out call popa cld dec mov (bad) aam in mov (bad) mov aam add (bad) mov (bad) and cmpsb mov or lret les jbe mov lcall adc jo or fistl scas shlb cs clc mov xor imul nop add ja aas cmp subl pop lret fisubrl or mov sub mov adc mov (bad) or xchg jmp scas xor and or or sub push add add test repnz fdivp push and ror es sbb or ljmp cwtl flds push sbb jg addb or xor cs add outsb adc inc push inc sub (bad) xchg pop inc pop xor inc mov jbe scas pusha jmp sbb jg add xor or jns out das ror hlt shrb insl outsb mov sub xchg push enter push mov push add inc fisub xor sbb out cmpsb add jle pop rorl xor sbb xor or arpl mov subl dec sub jae insb pusha xlat push mov add or fcoml es and jbe fisttpll sahf mov movsb sbb jg inc inc mov test lret xchg mov push mov adc rcrb add pop in dec sbb fmuls xor pop dec inc imul and mov outsb cmp jb or imul scas mov add add clc imul loop mov (bad) jne inc pop mov clc iret cmp cmpsb xor outsb lock push aam cwtl xor and loopne js pop imul add inc push shll adc inc xchg or jnp mov (bad) imul movsb movsl dec push rorb xchg imul adc xor xor test in mov inc repnz mov add repz fwait (bad) icebp fnstsw outsl rolb push sbb jecxz mov add out adc int3 lods and add adc lds mov and cmpb xchg add jp aad lock sbb push int3 push flds test hlt xor push call shrb cld add je push mov push nop outsb ds inc fstpt test push xor std lock inc xchg fcomi jae insl inc add orb scas inc push lea xchg out mov mov cmp into test cltd enter test lcall mov and pop nop clc jne and cmpl adc pushf es push les rclb xchg leave dec sub loopne sub add scas loop adc (bad) dec outsl mov lock or aam test pushf jl sarl inc ficompl bound push loope mov xchg and mov pop les add dec popa push loop mov out pop call adcl jl mov sbb les mov cli and and or push hlt sub cmp jmp mov lock sbbb mov jnp pop or (bad) jno adc (bad) or mov xor bound fs movsb push add mov fsubl or cmp add adc sub lock sub cmp add enter test add roll subb nop loopne fsubr sub mov insl jp leave mov and add ja add mov mov in add cmp xor push or mov rorb test adc xchg adc jno xchg adc incb into ss mov adc int3 shr insl cwtl inc push sub mov adc sbb imul sub dec aam mov shlb outsb sti imul add dec daa mov das xor mov out (bad) lock mov adc add bound add out rcr or adc cmp adc ja sub pop rolb add push movsl inc or push inc repz adc sbb push daa push mov imul fs adc adc std sbb ret and xchg sub mov loope sbb add popf pusha push add mov xorl push adc dec lods cmpsl add cwtl add push xchg jb adc test adc or mov movsb lods lods lret cmp cs shrb push jnp mov mov addb insb xor imul mov xor or and push rolb into lret pop jl xchg sub pop ljmp out js add popl push faddl adc test movsl push and push scas cmp rorl add loop cmpsl mov and rolb and pop out push dec or add inc push ret insl (bad) popf and imul jo stos add mov and dec sbbl or rolb in pop jo clc sub and pop enter call test add jne push ljmp mov mov sub push mov mov xchg pushf and inc push mov mov les icebp ds cmp cwtl xchg sub push mov fildl sub lock (bad) fmuls fyl2xp1 jecxz fadd cmp and imul in push add pop xchg jb movsb mov sbb lahf out (bad) mov (bad) adc mov or mov push jae js add (bad) pusha cmp sub jecxz ret push adc je jb int3 pop sub add inc cmp ss outsb and imul sbb orl xchg pusha mov fisttpl and call cmp js fdivs add (bad) into lea outsb int3 mov aas sbbb pop lods adc adc out push hlt loop fstl test jno add jle mov rolb aad pop mov mov mov insl ret inc sub imul add cltd xchg stos inc adc fdivr push (bad) je lcall stc sub icebp movsl shrl pusha int3 mov adc pop push mov nop pushf mov out add int jmp mov or mov in xor (bad) out int3 lods add daa enter and pop jge repnz dec in add push add xchg lock push pop (bad) lods add adc add (bad) xchg push mov jl xor sbb into xchg arpl ds sbb int3 data16 push dec push pop test faddl lods lock gs adc mov adc jo insb add aam (bad) cwtl les into add test stos push jbe add (bad) ja rorl sbb sub ss add xor pop in xorl (bad) mov and cli test push dec in std hlt lods sti push xchg inc ret adcl add jnp inc out (bad) xor xchg bound test mov mov jo popf xchg push xchg mov les popa lods xor mov and data16 cmp bswap adc pushf or mov add adc pop cld inc mov in mov fs mov rol inc in in push test cmpsb add ljmp mov loope push js adc sbb push mov lret lea sub cwtl dec cltd aaa pushf dec sbb add outsl inc push mov in jne or addr16 mov cltd pop gs sahf xor or (bad) cltd add int push add pop cmp lcall js cwtl adc inc pop adc mov stc mov pusha dec lods sbb pop sbb mov or mov push sbb lret ja fistl and add add dec sbb (bad) ja aas lret adc outsb xor cli xchg pushf lods inc or inc into mov cmp sub fadds sldt int3 jo jle add insl movsl or aam and fs aas jg and pop jmp or sbb in faddl jae sti arpl sbb pop and jo in add add sub push mov inc cmpsb adc sbb xor movsb test int3 jne xchg hlt sub in aas fcom cwtl pushf add push cmpsb sub sahf inc dec mov lret mov mov xor or sbb (bad) test push out pop xchg cmp test shr decb in inc mov jne and enter (bad) push int3 popf push dec xchg nop adc mov or out jb adc sti lods sbb je dec pop cmpsl popa cld (bad) aas dec inc mov xchg cmc hlt add nop inc or (bad) and sub or orl jbe jo push mov jp sub inc inc add pop push pushf (bad) inc (bad) stc nop add cli in cmp fldl pop inc pop adc mov jl ss pop inc ljmp test push and subl lahf pushl push jl (bad) xchg lods popa mov xchg mov mov push dec cld push add int cmpb (bad) idivb add jl mov std or push push add push fldl movsb pop pop (bad) mov and add cmp pushf test les mov ret lcall add push cmp push aas xor xchg mov add outsl repnz and or jno mov mov addb lock add iret push pop aaa or mov inc mov int mov pushf (bad) cs fs fmuls aas dec mov push or push lret add push inc and inc push mov adc mov (bad) xor jp fcoml sub cwtl int3 add pop adc dec add test or pop andl jo xor lret xorb das mov ds roll sahf leave in push pusha es iret dec (bad) arpl movsb movsb faddl pushf lds mov or jmp add adcb call mov mov or mov pop pop fnstenv inc inc (bad) loopne xor out ja aam inc cld and popf xor cltd movsb sub cwtl xor xchg add call nop or cmp mov mov cmc or sub dec jbe pop xor xor xor mov loope and out hlt or clc inc lock test (bad) jno or mov js aam lret mov in les mov js cld jne mov loopne inc shrb inc mov cmp jb es icebp jmp sbb and xchg add leave ret pop (bad) mov cmp test push xchg mov add leave add (bad) xor into je add pushl xchg mov int3 or cmpsl clc lret movsb imul aas adc nop js repnz ficom inc or sub cld std lock mov (bad) aam ja leave cmp mov (bad) pop loopne test aas fnop inc or xchg ja add popl sub out movlps add mul add sub mov adc inc cld push sub inc scas pop sbb pop cs std and loope cmp sub mov (bad) jg popa mov adc mov adc je xchg out test add push out pop iret rcrl cmc pop mov cld movsl xor pop xor xchg push add cmp dec test mov inc cld cltd pop fsubl jb rcr xchg mov and xchg cs fdivrl sub call scas ret mov xchg arpl sub fsubs aam jb xor dec dec cmp sub int3 add jbe or or mov and faddp add inc add add and jo ret lock cmp pop lds adc imul popa jl xor sbbb enter inc mov js bound mov xor adc loope adc in sub add pop or cmp pop add xchg aam push orb (bad) cmp popf pop pusha add cli data16 mov call (bad) jne outsl lret pop imulb icebp cli dec daa sbb lock je in mov add cmp rorb int cmpsb popa inc in xchg push lret dec in add mov in (bad) in xor add and loopne inc in test jnp cwtl call lods adc cltd add push mov adc xchg mov add in inc (bad) sub add call xor lock or sub adc push in hlt pop xchg insb mov mov movd repnz das dec mov or mov pushf lock xlat adc rcr idivb loope inc int3 lcall (bad) pop hlt cltd std pop in enter cld aaa sub scas lock iret jmp or push or inc (bad) mov mov fwait pushf adcb ss pmuludq or pop ja pop push push sbb adc movsb jo stos pushf arpl xchg cmp cltd or cmp add (bad) loopne in cmp add cmc and test lret push jo adc into xor cld and test add mov jmp lock push fisttpll into jg inc add cmpsb pushf xchg or cmc cmp test outsl popa dec nop xor clc (bad) sub outsb jmp test push mov in mov or sub pop movsb xchg add call push movsl or add dec hlt push or dec inc stos test mov mov xor test xchg adc jg add mov or xchg nop lds in je call pop out or notl stc pop jge mov or test and movl pop jb push sbb jo test (bad) xchg and cmp adc dec lret dec push xchg xchg rclb add popa test add pop add movsb dec mov sbb je popa xchg add js ja ja dec and push and cld movsl insl jo pushf ret test inc push pop aaa outsb add out lcall cld xchg inc mov int3 (bad) adc sub ss mov xchg lcall cs pop mov ret shrb push inc imul lods jl or pop sub outsl xor lret popa xchg inc mov pop dec jmp lock ds int3 lock aaa add lahf call inc jg add xor fldenv enter inc pop lds les jge pop in ja cmp and incl mov push aam (bad) fbld mov movsb cmp int3 add and mov (bad) dec dec or add rclb lock pop hlt sub xor nop sbb or stos jp fnstsw and push (bad) shrb add (bad) adcb fadds xor test out sti jmp add hlt inc and bound movsb cmc push or cli xchg mov sbb int3 add gs pop sarl sub repnz and and add pop push stos (bad) loope pusha lods test mov jae add popf dec test stos pusha dec or mov push cmpsb or pop inc cmp jb lods ds push and adc fimull imul add clc jno mov outsl mov pusha mov or sbb push or mov sub jp std loop inc iret and inc or les adcb in xor pop inc into and pop or sbb or notb ret pop or pop xor xor ds leave rolb dec dec and xchg int rcrb adc jbe pop cmp mov repz cwtl or dec adc inc push push inc push lods dec ds int outsl mov (bad) or stc notb cmp pop add jmp sub xor mov dec fs cld inc test mov push xchg add int3 ret lods xor dec push in stc repnz imul stos hlt mov addl xor add mov adcl mov out lods or test dec test out frstor jbe mov sbbl jae leave push pop cmp xchg dec jl fstl jo xorl (bad) mov repz shll xor aad add idiv fsubs adc push js in xchg int3 rcrb fdivs xor cmc arpl fdivr mov adc push pop test adc inc push jnp int3 sarl xchg jge xor mov out add dec test cld xchg hlt repnz cmp call in faddl subl mov mov push cmp inc cmpb rcrl mov call xrelease add dec mov xchg inc or inc adc sbb rol pop popf cmp mov lret pop push xchg fsubs je ja add std pusha dec cld xchg mov dec push stc or jmp sbb mov mov sbb push jmp cmp lret cmpl dec dec sbb jo roll mov xchg leave mov mov inc lods adc add fsubrl mov dec dec adc rorb inc adc addb (bad) dec dec sbb ss inc and loopne aam add fsubr and pushf inc sbb jmp and leave and add push (bad) jo imul push xchg add out lret jge xlat aaa mov jl xor mov lret add xor call gs dec push cld nop call aam xchg movsb push sbb jmp jl ret test adc sub cld jae pusha pop aam (bad) sti inc add cmpsl sub dec push lcall add nop or pop dec cmpb dec and ret inc ljmp mov out fadds pop dec adcl inc cmp imul out pop adc mov gs cmp sub xchg jno add cwtl test sbb jl add dec cmpsb pop lea clc jge xchg push dec add sub rorl lock scas aaa addl dec adc push xor mov inc cli inc or jnp nop stos add xchg inc push add add and faddl push shll inc push and xor leave mov hlt or fisttpl js push pop call mov adc in shrb mov sti gs out movsb pusha push mov cld out dec leave pop dec lock (bad) loop in aam mov sbb xchg and fnstsw add and pop or jo sbb xchg out repnz mov leave xchg clc ss or add xchg jecxz cltd mov pop shlb sbb (bad) xor sub inc mov aam int ret xor mov and ljmp pop sub dec mov push bound pop movsl adc pop sbb dec call dec mov fs stc popa lods push mov bound aam inc push inc add fildl xchg add aam push jl dec call xor adc loop lret movsl lock rorl sete fptan dec shll rolb push jge es pop push ljmp dec pop dec pusha add mov xchg cwtl ja adc push jae ljmp lock dec and data16 xchg lods push clc pushf dec add fsubs mov xor icebp repnz rorl nop pop mov pusha sahf xlat mov cli lret mov loop in shr stos into cmp or jmp xchg iret jb sahf mov inc push pop add mov rorb je into aad lock mov pushf adcb enter xor bswap and ret or push and cltd push add orb mov or sti and dec jl add add ss int inc shrb ret addl mov (bad) xor jo mov jns inc sub push ds mov (bad) out sti aas push dec enter inc add mov (bad) outsl add pop stos xchg dec orl cmp push cmc add iret push call pop aam sub jnp imul mov jmp xchg aam cmpsb out (bad) pop dec cmp arpl cwtl mov xchg hlt mov cwtl xchg scas inc lock aad cs sbb jle aam int3 dec pushf or ret les push dec dec adc movsb pop imul mov shr add (bad) sbb pop cwtl adc cmc xor fisttp adc and outsl jecxz in add in mov in push rcrl and dec ss fs inc in clc mov popa sahf inc inc adc pop iret and aas cmp inc ja,pt pop ret pop mov jo add gs leave pop call (bad) xor lods xor mov cmp (bad) xor mov sub jmp adc cmp pop pusha mov ror push mov rcrb add and lahf jmp add jne enter cmp sub addb lods sub fdivrl inc adc add add sub sbb and add sbb xchg hlt cli dec inc mov arpl mov mov jge add adc or sti clc and dec test pusha enter test mulb (bad) xor movl or fsubs mov test aad loope mov stc inc in ficompl pusha mov call mov adc jp inc sbb (bad) lock cmp adc sar xor dec inc sbb lods cmp enter aam add sub enter lds xchg ret mov mov cmp xchg mov data16 xor sbb mov in push add mov daa stc push mov in pusha adc inc jp movsb cmp fsubl pushf mov xor pop mov js xorb xlat mov dec mov adc flds or inc outsb jno add pop and mul adc sub mov add clts movsb cmp repnz sbb pop clc pop add mov ret jmp add dec cmp mov xor push adc mov push mov add rolb sbb adc xchg roll and fimull and loop push pushf mov pop sub mov or sub lock add aad dec dec cmp jmp enter cwtl jbe repz cmp or dec test fisubrl add pop andb mov mov xchg and (bad) loopne icebp xchg xchg adc lret push repz loopne pop test inc push pop es and mov int3 ljmp sarl enter arpl pusha aas adc movsb adc mov xor or xchg dec pop sbb push iretw mov inc ss fsubrl cli js and jg in test lcall out add push in pop jns add test sub mov into push clc sub pusha in adc pandn (bad) loopne mov stos movsb mov out and push mov fcmovu adc popa mov call push dec in test cmp lock (bad) mov sbb cwtl push repz inc call popf xor das aas xor pusha enter call inc mov ljmp inc xor mov pushf dec xor cwtl (bad) leave pop pusha jo orb leave movsb sub repz jle sub test imul mov cmc pop mov xchg ds or mov add mov cmp push mov push fistp xchg push clc loop test push mov popa nop xchg nop imul adc mov add data16 scas xor pop fdivr notb sbb push dec rcr dec sub es test add fildl dec popf jno inc sub pushf test and add xor pusha mov pop lock jmp nop jle add inc mov sahf mov sbb nop aam and or xchg mov xchg push and adc or pop sub xchg nop xor jb rcrl ret dec aam cmp inc adc scas fnstcw jb add fdivl ficom inc lock mov xchg push repnz dec popa movsb pop pusha cmp pop int3 add adcb jne pop out rorb int movl in imul push push sub ret xor pop clc inc mov and cmp xchg mov es push aad cmp test in pop je cmpsb pop add dec push sti lock icebp mov clc cmp faddp gs or movsl shrl sti adc ss int jns fisubl aam jbe cli daa cmp push arpl jg cmp test lcall arpl subb sarb add mov dec or lret je pushf sub out lldt xchg pusha pop sub xchg and js xor push (bad) fwait repz push and faddp mov xor mov subl inc dec lahf push mov adc xlat dec push add mov inc mov in leave or out xchg inc ret mov jl fsubrs mov mov add fcoms stos mov mov add fisub (bad) adc mov mov aaa dec mov inc jecxz shrb pusha and jl add mov xchg dec xchg sbb lock sbb cwtl sarb iret xor and loop sub pop and or mov push mov sub pop add mov add mov cmp inc les jo je adc mov or ret in scas sub addb cmp push arpl add cmpsl enter (bad) pop scas add jae add (bad) ret iret push pop sar mov sahf or and pushf sbb adc xchg pop test inc xchg aad sub dec test popa les mov inc clc lahf negl lock rcrl gs push push add adc add fsubs sbb fs test add mov jo fisttpl pushf mov in push mov inc sub and push (bad) push out or pop sbb xchg sbb pop (bad) arpl add add sbb addr16 fisubr sbb lret lods repz push add fadds ret adc cld and cmc dec adc inc xor dec jmp add push mov and and mov push adc (bad) loop dec imul lods pusha xchg mov jnp push int3 test test xchg push add jg push and add mov andl and leave jo dec cmc mov jl add lods std imul jecxz (bad) pop mov pop ja rol sbb adc push leave mov imul xchg push push fadds int3 (bad) mov mov xor fcomp xchg xchg push mov leave nop jo popa mov dec test xor xchg mov xchg add or cmp cmp jo add hlt (bad) jmp jns movsb test and pop lcall pushf roll inc sahf adc add xchg adc jp dec push fs shll pop ret dec dec xchg jns adc adc test dec pop test fnop imul add test sbb test sbb cmpsb adcb and pusha ret or dec or push cmpsl sub jns xor cmpsb sbbb pushf push dec push bound jecxz xchg mov and out addr16 sub dec enter addb inc or and mov sub add xor dec sahf xchg jne add xchg xor (bad) addr16 push add add inc add les mov popf add push and (bad) lret addb xchg sub nop nop or ret lea (bad) xchg stc enter add test mov pop push push add pop push and popa cmp in add ret sti mov (bad) xchg xor hlt inc loopne or sbb add or mov loope xorb sbb cmp cmpsb and dec or xor mov xor aam push sbb cmp cmp test ret jae or or popa cltd or and loope mov movsb std mov shr sbb pop push mov dec pushf test sarb (bad) fsubrs pop inc test push rorb cwtl jne push add fstpl push cmp inc jno test or mulb stc or in enter jo (bad) jl cmp ss aam add dec dec sbb jg adc xchg inc dec test inc shlb xor inc xor sbb inc in jp nop mov mov adc shlb js sbb (bad) (bad) sti cs or xor xor sbb xor sub out add data16 lods mov fisttpll (bad) pop les outsb enter les scas orl mov add (bad) and shrb inc orb imul (bad) add bound and sti add das jmp lods fnstcw and bound ficoml jge aas xchg inc and mov and dec mov mov sarb pop mov lods push mov mov in mov sub loopne sti xchg and xchg in adc xor lret ret cmp inc push (bad) and adc inc mov push inc xlat roll inc dec jge inc mov test mov pop fistp push adc add ja outsl pusha gs mov and in sbb addb pop push arpl inc xor enter push fs xorb adc nop or inc add mov sub mov add push sbb rcll (bad) ljmp lea pop nop sub popa shrb test popa cmc inc notl jl mov xchg mov and dec aam sbb addb sbb pop fs popa inc andb leave or gs call jbe xor pop repz das dec mov and stos or xchg movsb insb inc sahf pop test or adc or js ds scas add mov inc inc inc mov les imul loopne push inc es xchg addl xor (bad) insb (bad) jmp and test add and addr16 aad mov clc xchg and icebp enter fs aam xor loope sbb cmp jae ja bound shrb test cmpsl or loopne lret fadds scas jp pop stc insb dec js nop (bad) ss sahf adc daa mov loopne es lock scas add xchg test or mov in cmp sbb arpl or into js daa outsl neg inc adc inc mov xchg pusha jecxz add xor es sbb adc jl pusha das mov adc add mov rorb (bad) mov mul test push cmp add scas and add (bad) ret flds add loope sub cmp pop jl aas adc fwait mov orb mov mov adc and imulb push hlt add push xchg inc jg mov insb xchg je add (bad) (bad) mov les push add dec bound push adc xor or ja sub into jl shrb je jo and dec mov dec cmp jle cld dec xchg xor mov cmp add es (bad) push pop fs inc add inc pop hlt out push push test ud2 (bad) jnp lret or in add repz push jo rcrl js mov sar mov cmc jo pusha daa outsb and stc jb adc imul int3 push es fsubs bswap xchg and dec cmp in clc xor orb imul outsb pop pushf in test push and sbb jbe add fwait in pusha fld xchg pop jge dec js int3 (bad) xor jmp xchg push jl adc xchg fidivrl cmp mov adc cmpsl cltd cmc jb icebp shrl loopne pusha push adc (bad) jo pop or xchg stos mov sub push and mov aaa push cmpsb test stos xor andb dec pop mov jns sub add or pop push aaa pop mov leave gs dec subb rcll pop add ss mov fmulp (bad) mov inc mov push push add in fidivrl ret lods rolb sbb and dec sbb (bad) cmp xchg add xchg icebp xor jno add outsb sbb lret push outsl cmp lods comiss add data16 jno addb cmp add xchg clc in sub rolb popf lods and pop popa stos movsl mov inc pop mov stc xchg jecxz xor das or (bad) jns rorb ds pop add add xor adc sub les sbb fnstenv lock mov cmpb inc add sti jns adc push shl les push rclb mov xchg cmp dec pop rclb mov adc cmp pop jmp xchg mov xchg mov mov (bad) adc jns sahf xchg push enter (bad) pop js test or mov xchg add sahf pop inc outsl ret scas cs stos (bad) (bad) loopne cmp shlb sti xor add ja int3 faddl ja scas sub incb scas push add lods sti mov loope pushf cli add stc or test dec call or jb mov mov sbb (bad) iret xchg cmpsl xor leave cmc nop jo lods inc push add sbb aam jns cmc aaa lcall cmp inc out push adc lock pushf push hlt lods mov fisub fsub movsb loopne cmp inc rcrb xor push (bad) lea xor aas negl pop dec push test xor dec in xor mov loope xor mov adc ret pushf call loope or sbbb mov repz popf add jge mov push fisttpl js sub fnop rolb and imul lods stc push fcoms xor or inc adc loopne or jo dec dec adc mov stc std fiadd movsl jae fdivl (bad) hlt or fwait hlt psubb push xor sub adcl lods pushf data16 dec stos pusha ret adc lea or xor and loop add cmp add insl mov lods add jl lahf cltd out jge sub (bad) lods cld dec mov mov lahf xchg sub test adc stos enter add xchg xchg mov stos mov ret mov (bad) mov les testl or jl clts sub dec dec or adc jnp loopne sarb inc cmp lds sub idiv mov cwtl movsb out push cmc adc mov xor mov mov mov dec insb icebp xchg pop add jp push sbb loope fmull inc sub test dec (bad) pmulhuw rcll pusha ret fsubr jo sub push gs xor xor cmp push lret hlt jns clc adc mov xor pop or dec jb lret (bad) adc adc mov jle test rcll call sbb adc test nop test cmp cmp mov add cmp inc ret cmp xchg add pop clc cmpsb mov lret push ficompl scas insb test sahf add xchg or rorb les and or add popa inc pusha aaa pop fs orb shll mov out bound cmp xor or jge xchg ret or in mov in or sbb xor xchg icebp test add mov cwtl dec out pop mov pop lcall mov and in mov pop rorb lret insb dec xor or mov movsb sbb and mov (bad) out shrb dec or popl sub aaa cwtl jecxz fistl push sub cli and dec lock mov sbb mov xor pusha xchg push cwtl add xor shrb and sbb pop iret sbb cmp jmp push test cmpb inc mov mov enter cli das push mov lods and dec jg mov data16 leave mov add mov adc jl js cmc jb mov jno fs mov add xchg and and je addb jne mov push lret jo and mov dec (bad) (bad) es mov xchg sbb jecxz pop adc xor mov push cmp add or cmp and pop scas dec add sbb cwtl out xor dec loop jne,pt add mov add xor jg ret fsts xchg add push xchg fdivs ret mov inc xchg loopne lret dec hlt and pop cmp nop or pop je daa and push pop mov outsl cmp pushf xchg push lock popf hlt in sub push add enter mov cmp inc js xchg call mov rcl xchg loop add dec add outsb ds jae,pt add mov wrmsr stc or jne call test out jb cmpsl mov push add sbb sbb (bad) jg cmp icebp clc sub movsb fiadd xchg sti push shll jo inc inc sahf sbb imul mov push mov dec stc lahf push inc dec or jo insb pop in add stc mov (bad) lahf lock pop stos in xor fisubr mov and nop sbb cmp das scas or fs lcall mov andb xchg sahf pop push rorb frstor loope and lea jb movsl bound xor xlat or sti push rolb or xchg xchg pop sbb xchg shr sbb sarl ljmp arpl xor adc lcall or mov fidivr push (bad) mov inc mov cmp fld les push add mov mov mov cmc jg cltd push mov pop and inc insb movsb popf es mov mov loopne mov and shlb add out dec inc (bad) enter add lcall fistpll sbb das sbb lods or (bad) enter cmp aam sub cltd rorb shl (bad) add dec out bound dec xchg sub out aad les mov adc push and cld sub adc push sti and or pop fs and or pop fstps or gs add ja cld scas add loope fwait fs fnsave addr16 ja call shl movsb push dec mov sub add jge gs pop push aam sbb lock or jbe loop push sbb push and or push adcl push (bad) gs xchg jnp push pushf push pop (bad) mov lds shr push add mov mov mov dec sbb dec pop cwtl add ficomp fbstp adc call imul push cmc xlat mov stos test cmp sarb add add fidivr pop sbb sbb or sub aaa xchg jae mov movb mov idivl loop repnz add scas jbe sub out rclb dec xlat dec add push cli ds push or inc les ja inc cs int aam dec mov inc mov insl sub fsubs les sbbb (bad) stc mov loope imul cmp test lock clc test and call sbb sldt out rorl mov adc data16 cwtl jo add js and inc fcompl lret clc movsl mov and out nop in xor mov inc adc sub pop popa fs mov or adcl std sub (bad) pop adc mov adc insl pop add lret jge push ljmp insl jl jo push push lahf fcoml add push and rcll add add dec jmp and rolb stos and mov jecxz dec inc lea push sub fsubr fs add jl into add xchg add push daa adc pop sbb mov enter pusha add adc fsubs xchg int3 hlt bound add lods js push (bad) add sub mov mov ret mov adc (bad) mov add mov jns mov xchg add cmp lahf add mov mov sub loopne movsl in inc loop add jecxz dec add dec stos add jl pop hlt fs pusha and mov xchg inc adc jb (bad) rol (bad) jae cmp sub xor mov mov pop fildll (bad) sbb int3 or ds out cmp lret jne mov mov mov aas adc push mov add loop jnp loopne ret movsb add and xor mov add push icebp sbb cmp inc (bad) and mov fstpt push imul adc nop add pop imul and push push xchg add gs and and mov mov push nop add imul inc mov sub jmp dec adcb inc and cmp add mov cltd rclb add jb add or je or dec les jbe jns (bad) das push orb fistl mov push mov js xor sbb popa add jg add cmc hlt nop inc push xchg cmp mov xorb adc pop sub jo pop nop mov repnz add pusha add mov cmp adc mov add iret sub sbb addb in hlt mov mov test (bad) test mov xchg test cld sbb enter mov inc std outsl popa cmp lea xor jnp into push xor stc pop sbb xchg fwait add out add jmp aas pop jbe mov add fcomi add sub push mov pop mov (bad) popa mov js or pop js sub pop lret ja je add in sti int3 outsb pushl inc addr16 imul mov cmc xchg pop sbb or adc cmp enter js sub mov jl sbb mov cmp leave jo scas sub dec lock or cmp add xchg adc add cli aas lock popf pop repz cmp lea or jecxz rcll cltd add add add hlt xchg daa add cltd adc cmpsb and pop xor in loope push fmul pusha or add jge loope xchg sbbl (bad) test sub pop loopne fisub mov sahf aas dec cmp fcos lods xchg pop adc popa rcll mov jl pusha mov xchg add and clc xchg rcll popa and subb pop dec xchg loop add outsl cmpsl mov aam std pop or jnp and mov rclb sbbl push sub add imul shll cmp lcall inc add popa dec fxch adc sub movsb jns add sbbl jl lods pushf sbbb pusha (bad) movsl add fsubr out xor or cmpsb adcb out mov call lods cltd and jmp mov adc add xchg movsl xor idivl shr dec nop push addr16 xor jno add cmp mov mov test mov aas push and subb loope push pop or push repnz lods (bad) cs pop and stos dec adc aam adc cld jl popf add xchg lods or xor pop add test add bound ret test sbb lea cli add push test cmp sbb ret push adc popf or repnz xchg sbbb and shr pop repz or xor and sub gs aaa lods (bad) jo push popl mov xor jmp mov sub sub (bad) sarb push sub pusha or das bts iret and roll in or fucomp and or mov shrl jno push std fld cwtl ljmp ja daa dec sbb scas pop orl addr16 pop adc dec in add scas inc fst xchg outsl add and or in xchg andb push mov inc pop and and insb xchg pop std pop scas adc nop test mov mov sbb cli sbb data16 daa and lcall xchg mov lock ja mov push stc lea test adc ljmp into outsl loope adc push push lock sub xchg test test push sbb dec popa add push cli inc push adcl jecxz cli pop inc sub dec or add adc shlb inc and or sub fistl ljmp and xchg mov add cmp pop mov lcall mov out cmp push xchg inc sahf or je fcomip inc pop dec daa mov enter pop add jl pop mov cmp add movsb sbbl xchg orb inc mov mov or or rolb in das add mov leave sub aam inc icebp fistpll fs and bound cmpsl cmpl adc or jne or mov jae test adc fcoms lods aaa aam pop stos movsb mov and enter lret insb sub inc dec mov aam inc add loopne inc lock subl jecxz add movsl pop xchg cld sub pop jmp sbb and and push sub imul inc adc enter adc or xchg or cwtl dec fnstenv loope lock lock pop mov ret xor jb dec fdivs fcomip loop icebp jbe jnp,pt js mov inc jl,pn pop pop and fsubrp add xchg xor pop push mov ftst fwait or sbb daa pop mov lcall inc mov test sub icebp stos jp add or ret adc mov aam sub test xor xchg push sbb jo movsb adc adc lods pop xchg (bad) aam add or lret ret mov dec mov jae in cmp mov leave imul dec sar sub add push out popf and jno es imul mov loopne and jl push or fmul adc vpcmpgtb cmp inc jo addb insl mov pop and out fnop xor push jne insb addb movsb lods ficomp pop fadds xchg rolb aad (bad) xchg mov jno cmp or mov pop mov pushf xlat inc inc xchg mov sbb xchg and sub int3 dec cmp lcall and add imul push cmp jo lods jo,pn inc inc mov fidivl movsl loopne lods xchg sbb or loop mov adcl add call jno jo movsb pop adc push (bad) sti pop jno jnp lcall jo push dec mov daa xchg xchg aad push add (bad) std movsb cmp push test mov mov sbb push mov insl sbb mov ret lea or push movsb dec or ret lock xor inc xchg int3 adc cwtl loopne lods jl xchg push cld or frstor and adc pop lcall push dec es push mov jl or jo test sbb sbb inc xor pusha push test icebp imul (bad) scas sub fs ror and mov jno lcall add push dec jecxz mov jno fistp fucom mov mov iret adc pusha fldt mov sub bound sbb cmpsb or out jns sbb call push (bad) jno mov xchg push and mov fwait cli xlat add popf pop xchg int fld fisubl sbb daa dec and or cmc xor jae xor and cmp hlt add and add scas sahf out mov mov sub test in xchg test sub nop fsubs push imul cmp addb mov mov test xor jne inc lods clc or fdivrs adc add and mov mov movsb insb xor fiaddl in lods and outsl mov mov mov jg pop or inc mov (bad) xor test (bad) xchg popf pop inc shrb call int3 xchg add lahf inc pop xor pop ljmp jo sbb add das lds push lock je or xor andb push aam out cmc add lods lret std or stos arpl pusha mov fisubl subb sbb fs ret aas (bad) add lcall sub and aaa pusha adc sub and add mov js push gs add pop vmwrite mov rcll push xor xor add jle imul xchg pop ds test sbb (bad) lea scas xor aas xor loop nop mov inc inc dec dec mov bswap sub add mov push insb leave jo sub testb cmpsl ljmp add mov sub clc sbb adc lods sahf mov cmp icebp add orb mov mov outsb hlt xchg push lret inc dec xor pop add push mov (bad) mov clc cmp inc inc pop add ss xchg mov stos stc std outsb jns fsubl and popa test jecxz add inc fdivrl or mov dec rcrb jne pusha adc and loop sub cmp pop roll sub mul inc adc add pop aaa push xchg pop aad pusha mov lahf iret sub jle lods mov popf push lds (bad) xor or pop repz out add inc or cmpsb jo frstor and sbb mov xor test add stc or xor (bad) fdivs sub adc jg jo or and add in or pusha aaa lcall add mov movsb cld sbb fisttp mov nop mov add pop lods (bad) adc and cmp dec mov je enter push loopne inc xor add sub popa mov rcrl add loopne dec jl push stc pusha or add mov and and pusha mov dec cmp cmp lock push sub mov or mov push popa stos pop and in xchg shrb lods sub jp add les stos mov mov jb std xchg aad xor nop inc or loopne mov xchg cwtl icebp adc movsb popa push pop mov das mov cs add jne nop popf jge or and pop sub aam jp jge cmp dec call cmp inc mov jle and arpl pop pop lock aad jo mov xlat push incb pusha jmp sub decl dec cmp add adc add xlat add jle push in mov addr16 mov ret pusha sbb mov or add mov icebp outsl nop js pop pop mov aas cmp add les (bad) jbe cmpsb test inc jo xorb push lea or imul mov out mov (bad) test in or sub aam adc arpl inc and jge pop out add sub scas rorl imul mov cmpl xorb das or inc popf push sbb or mov cld ljmp test dec mov cmp es mov enter cmpsl push dec lret ljmp andl (bad) jb rep dec inc dec push je pushf add testl (bad) into repnz lock int3 and adc cwtl lahf push adc test cmp lret mov (bad) lods cli stos sbb sarb ss andl fwait (bad) jge subb jno add inc mov icebp jecxz and rolb rorb add in mov push add sub scas mov cs mov xor mov enter sbb insb and negb leave push adc stc loop dec rorb and mov xchg clc (bad) rcll and int lcall insl js test sub not lcall insl (bad) dec and aam pop loop lret sub adc mov sub push je push mov inc subb movsb cmpb outsl xchg ret cld mov and sub mov movsb xor adc cld (bad) push test inc fucomi dec testl rcrb mov pop pop jo add mov jg pop jp outsb push imul lds outsl sarl (bad) dec (bad) hlt fwait pop or cmc inc test push pop sbb and loopne out mov adc cmp add xchg call mov and dec pop pop rorb sub cmp pop sub cld aam aas add fwait mov test pop daa adc push fcoml mov mov fstpt mov sahf mov add lds iret add out sbb xchg add (bad) lcall xchg stos test shl je popa mov inc sbb enter push mov js jno adc jl or pop pusha and lret xchg inc (bad) push jo mov fisubrl scas jns jl cli js dec test shrb rorl (bad) (bad) cmp and movsl cmp add xchg mov out test leave jmp (bad) lock cmpsl cmp jns addr16 enter ds pop lds push and add int3 add mov jae xchg or jne dec inc in add rcr xchg mov pop je mov xor add and pop pop sub (bad) and fs inc movsb push jne iret sbb stos jb jae jg jns test in cmp ret cmpl mov (bad) loopne dec ds jae inc push gs push xor rol push dec in cmpsl sbb jl addb shrd and popa ss sub adc leave mov jnp mov and xchg or jbe aaa decl and imul jns hlt adc and dec mov add cld int3 icebp dec sub add mov pop push mov rorl adcb and je sbb mov jnp out shr mov mov pop popa jp inc repnz mov fsubrs add mov hlt testb push dec adc and into nop and sub nop and adc pop sub sub hlt scas pop mov out rol in sub lahf xchg ja push dec add dec (bad) loop push sbb ja call lret xor jp pusha push adc dec jae mov dec stc jl fnstenv mov lcall jp dec add (bad) std insb ja inc addb outsb xchg aad dec imul rcll add dec cmp dec adc cwtl sbb inc rorb mov les aam int add jp jbe lcall sub push add xor dec ja pop jl scas add mov fmuls sbb xchg int3 mov add mov pop jbe mov jno dec in and es jno dec fmuls mov inc mov push cmp add dec add adc loope inc xor aam adc cmp nop mov adc or out dec inc cltd jmp shll push inc inc or and or cmp or neg xchg cmp in js inc push stc pushf or out jno add hlt scas ljmp outsb ret jmp test and inc aad adc push shl xchg dec sarb add dec push dec and mov std ds inc jl test dec mov cwtl add push insl out or sub cwtl shrl int3 and inc add mov popa sub lahf push mov adc jno cs int inc (bad) dec xor in sbb sub lods neg in adc cli inc add mov inc ret or int3 or jle aaa mov subl inc adc enter adcb pop cmp dec adc jle pop inc mov dec ror sub (bad) aad push xchg movsl cmp xor sub std sbb int inc xchg jmp cmpsl inc aam rorb inc pop fnop in les add shrl jecxz push fs and inc dec out adc dec cs sub in enter ja add dec add js add pop ret mov push mov hlt sub outsb (bad) cwtl cmp push xchg out ret test or add push cwtl shl lret mov dec push cmp add insl inc ret jmp sbb call push inc lcall adc not xor adc aam xor dec out pop jecxz lret enter xor add and push rcrl ret pop loop movsl xchg leave or adc fbld mov add sbb cmp pop add push lahf pushf cmpsb addl cli test sbb mov and icebp (bad) jae inc adc cld cvttps2pi loopne pusha adc jg add clc (bad) pop push or jns push cltd fs adc mov pop andl mov and in push divl pop sete and xchg imul adc sub imul pop popf mov rclb out jmp xor jne int3 ret movsb xor sub inc mov enter xchg adcb in movsb hlt dec ret inc inc and loopne inc es sub dec dec js js and andb dec add mov sbb leave mov or dec sub add int fsubs stos sbb pop out inc pop cld jmp rcr sub cltd ds add (bad) mov pop rol (bad) push dec push adc inc adc inc rorl dec and push es pop mov jo les inc (bad) adc cmpsl (bad) int3 ja test popa pusha pop mov push stc ss push push out push clc mov jb fidiv jle cmp dec add inc and pop xor xchg jmp mulps aaa push mov pop nop push insl xchg pop scas add ljmp jmp inc dec xchg clc mov fwait into add iret (bad) jo pop or out jmp cwtl push add roll (bad) mov jo js mov inc sahf fdivs mov pop dec out test mov ret push pop sbb xchg dec mov pop scas arpl pop out inc jl cmpsb adc pop add in rcl xor mov push (bad) fidivr aas ja dec inc test out and and or addb in mov sti lods push jmp xchg sub dec lock add lcall pop jae in int dec push and pop dec pop or xchg std fimull out pusha cmpsb and sti pop (bad) add adc jl add add mov add fsubrp inc dec (bad) sahf xor sub scas add (bad) cmp lcall dec inc or jae incb cmp into pavgb scas push jno dec mov sti pusha and movaps (bad) xor mov pop jmp fnstsw and inc sub sub xlat add insb mov aam inc sub adc outsl push sub out cmpsb mov aas dec xchg inc add je push or lods ds lock dec xchg add and xorb dec dec add or (bad) scas add out push nop pop dec enter sbb ret lcall mov int3 clc insl icebp cwtl mov cltd cmp (bad) push add clc jl jecxz push movsb dec push sub test add inc inc mov test add push cmc (bad) inc shrb adc cltd je add fsts xchg ja ror dec loope push (bad) xlat mov xor push mov xchg inc mov in and enter (bad) int3 add sarb in repz and add cld push mov aam pusha and add mov jp into data16 xor push inc add jo in xchg les dec and lret sub idivb jne lods les xor adc inc rclb xor std push iret dec in pop fnstsw sahf add jle jae jmp cmp mov jg lret mov test and test jbe cld add sbb test dec (bad) mov int3 sahf clc adc mov jmp pop pop sub or lock jo test inc mov pop cmpsl aad leave outsl xchg mov cld push movsb mov rolb inc sbbb js icebp je mov add pop jns adc add inc pop xchg test call and sbb clc lcall xchg or nop test xchg jno ret je add adc movsl dec jnp es cltd sarb dec sub cmp jbe xchg movsb dec dec or mov add adc push sbb (bad) adc sbb cmp cmpsb rorl or jmp cmp dec pop in je adc dec push ss add jo lret cmpsl add outsb sub insb test das jmp addr16 cwtl cmp xor dec adc test int out mov scas cmp sbb (bad) je stos xchg and cmpsb sub in jbe mov outsb or pop ret sub sub push jge push push sub add gs cmp test adc xor xchg add test mov or into xlat ret mov cmc call and mov popf add rcrl orb nop add fsubrs pop sahf push nop nop push jp dec add pusha jl insb call sbb inc xchg mov inc fcoml xchg lcall add push fdivr mov ljmp lret pusha and ss and inc jns mov and sbb inc adc stos ja in into add xor cli jle fs (bad) out jl inc insb test sti and inc jne and mov addb insl insb and push inc xchg pop repz or call test pusha sbb pusha jno mov ljmp lret jbe inc aad gs adc test mov jg inc ret lcall xchg les mov or jge jbe jge add aaa add lods dec sub fimul dec test pop or enter fidivr inc dec xor cmp or pop stc mov mov add adc jg cli xlat pop cmp fidiv inc loopne adc mov inc push fisttpl stc pop iret popf out sub mov xor ret jb xor add mov mov mov popa lcall pop jp insl add out lock mov imul xor cmpsl insb jb out sahf add mov stos test in cwtl sbb sbb inc cmp fildll rorl and test mov mov xlat push xchg add movsl add test mov and cmp lods xor xchg adc daa add into dec jno int3 xor test sub add inc cmc test pusha popf adc jae sar xchg lds or fwait pop mov cwtl dec mov mov sti data16 lret sarb push add mov aaa sti dec out rcrl push hlt scas sub (bad) int (bad) jle and divps cmpb test ficom (bad) icebp add adc idivb cmp jns leave add rcrl in (bad) cmp fcmovnbe daa ret cld cltd scas js or out lret adc dec sbb push es cmp fldcw movsb (bad) movsb jg or ja push arpl or jne add (bad) test jne add fcmovb shl mov loopne pop cwtl cltd stc push adc xchg idivb lods repnz movsb decl popf and sbb out dec pop pop xor jno push and test mov cmp imul and push je cmp mov xchg jb mov mov outsb pop addr16 add ja dec xor and js sub jns xchg xchg lock aad (bad) repz mov dec sbb shl add push fs in jns shll push add push lea jp or jmp and das add inc mov mov mov in pop dec jns xor pusha add mov sbb inc add (bad) loope and sub mov lret dec js nop adc pop fwait dec hlt push push and pop loopne adc out rcrb jae or test dec (bad) data16 repnz inc jg das insl push xor decb or movsb cmp jno add cs out rorb out out jge pop shrl xchg push push push adc icebp out cmp mov imul xor loop sbb (bad) mov and call (bad) fstpl xchg inc aad jo adc faddp pop out xchg sub test cmpb xchg push aam jle jmp and adc outsb sarb in cmp sahf jns mov lcall xorb adc cli loope inc ja inc sub adc add cmp shrb inc mov nop adc out loopne in (bad) pop mov mov call in cmpsb std dec pop loopne daa push stos loope ds mov out enter hlt push mov and jmp cwtl pop rolb inc add mov in imul or ja rcl adc xchg add outsb int aam dec lret adc (bad) into cmc dec pop insb add int3 call sub call add fdivl outsb xchg lock dec fnstsw jae add mov xor ljmp or xor in and jl aaa ljmp add pop adc add movsb jns add xor (bad) mov rorb cmp shlb mov (bad) sbb jmp ror in mov cli lods or or adc testb orl cmpl add repnz inc pop pushf and xchg shr or outsb mov mov sbb or pop push ret cs dec xor push cmp pop sti sbb icebp cs jnp add jae movsl or imul pop loopne jo addl xchg lock sti enter cmpsb xchg push pop loopne jne (bad) dec icebp xchg adc clc add imul pop cmp or add mov push cmp int3 add push scas push loopne and outsb loopne xchg lret out sub imul fist fadds cmp or jg das (bad) nop adc pop xor add mov mov pop jnp sbb lods rol cmp mov insl mov ret and sbb add rcl cmp inc in int3 adc sbb push adc sub xor pop enter push (bad) iret cmp stc movsl sub add jbe lret aas ja insl xor ret (bad) in test jbe adc ret into push add loope mov outsl add lods jecxz test lods push out push cmpsl fdivp repz lock mov add dec in ljmp adc cs xor movsb adc loopne scas movl lds push push jp stc ljmp imul mov xor xchg cmp xor pop jp cltd insb jb sub mov stos sbb xor mov nop push and sbb push or mov pop push or rorb push xchg and add dec (bad) not adc cs iret and push fldl pushf cmp out leave sbb push cmp cmp jno clc mov lea push mov cmc sub cmp jnp mov inc enter add cwtl push add popf mov or aad jl adc or (bad) ss jl add mov (bad) mov push cmc dec or int fsts sbb (bad) jle pop xchg sub dec lods and add out (bad) xchg in call mov out sbb aad add pop mov jb mov add repz aam hlt aaa pusha fcmovnu sub or loop add movsl xchg sbb or leave inc add mov clc mov xchg mov sbb xchg popa test jbe xchg add inc test add clc sbb inc aas mov and in or xor or sahf test sub add in xor lahf icebp adc (bad) lds lahf fistpl enter shlb int add dec idivl jle or aad lods adc add adc mov dec cmc cmp je (bad) jbe push je js adc mov cmpsb mov out (bad) and inc (bad) and daa mov jae mov movsb sbb sbb xchg adc adc subb dec repz ret xchg or adc cmp test push xor fwait imul xor mov add push mov outsl xchg mov sbb fdivr adc push jbe mov push add adc test adc mov (bad) push inc cld mov jmp das lock scas and leave cltd push shr and gs push inc push icebp loop fmull test mov adc mov sub mov mov sbb clc mov aad adc lds mov fsubrs jle add aas adc in add push adc cld rcl jp ret xor mov push fwait dec orb sub aaa inc mov dec nop test mov (bad) je stc pop (bad) scas decb pop or add addr16 dec inc adc adc sub scas xchg clc cltd inc adc rolb add je sub inc or mov sbb cmp rolb cltd mov mov sub xor inc pushf mov or fstpl cmc inc movsl jae adc repz sub xor lods push mov inc adc sub mov and aam mov sbb mov cmpb or and cmp and push sbb cmp xor mov adc lea fisubl xchg test dec mov push (bad) aad mov pop inc stos xchg imul and add test cmc lock xchg dec sbb repnz jecxz ja mov ss cmp (bad) jp xor push bound aaa and aas les pop loopne je orl mov cmp cmc rcrl or movsl jnp stc pop pop cmp addr16 out mov mov add xchg clc add int aaa repnz stos add pop push push fs loope add out aas inc rcll adc mov inc and pop add pop sbb jne lods xchg (bad) mov mov add imul movsl iret mov push xor sub rcrl movsl les ret add push mov sbb jno pop lods xor fnstcw and imul adc icebp xorl xor sbb adcb lods pop add bnd std or jl lret adc leave stos test das push mov (bad) popa inc fstpl mov lods inc xchg jne rclb lcall add mov repnz daa mov ficomp jp (bad) or add fmuls mov sub aaa jmp rcll xchg jmp add mov mov jns mov (bad) jnp fmull push (bad) push mov xchg clc adc mov pop addl inc mov sub test cltd imul loop inc pop imul xchg cmp lods repz and jo fistp push insl push adc fisubr ss push lret loope mov jp and mov adcl cmp or jne loopne and cltd jo lcall les mov and cmp clc icebp fildl jmp sbb push out pop and mov repnz adc mov das dec mov jae aas cld mov mov jbe sbb jo js mov inc xchg (bad) (bad) jns test mov add mov jno shrb push lcall mov loopne mov aas and sti nop xor cli mov mov mov pop (bad) lock lret jp fidivr subb aad popl in xor and (bad) data16 insl mov std sbb out insb and inc mov daa fadds mov repz mov cmp insb std add (bad) push lock xchg int call in mov mov testl movsb iret loop xchg adcb popf push add test add cmp inc adc jbe push les pop orb loope dec inc add shrl push in mov jecxz (bad) cld testb cs es mov add cmp inc and cmpsl add jo xchg mov popl inc sub mov jecxz (bad) dec lods aas and bound dec inc xlat clc adc es or cmp adcb dec and cmp into inc fmull add out dec insb add loopne and mov aaa in cwtl cwtl add fstpl push or ret test or fnop jmp aam aam lret es mov (bad) and es mov inc loopne cmp add add mov es movsb mov clc lret or sbb sub sub lock pusha xchg pop cmp in adc leave mov and aam bound les in sbb fs dec dec push (bad) mov gs add dec clc dec cmc popf and pop pusha xchg roll rcr scas jne pushf cld sub incl arpl pop insl lret scas movsb test fstpt cld in movsb push dec add mov ss add xlat inc ret jmp test or mov sbb movsl add add incb shrl cltd sbb add add xchg lds and jb cmp add mov xchg add cmc or adc repnz or (bad) mov je (bad) xchg or pusha adc add sub pop and lret nop adcb ret push sbb xor cltd xor fisttp in je sub ficompl sub shrb int3 mov adc les cltd and cmp inc add js add jge (bad) pop inc inc sbb inc psrlw (bad) fnsave mov movl add pop mov (bad) add cs mov aas adc adc pushf mov les (bad) jge cwtl mov add jne and shl sti clc mov nop lods adc add jb add shrb insl fdiv lock mov aas mov ljmp (bad) jno add mov push sahf xchg add aaa test cmp mov mov or sbb and std and xchg iret sbb add pusha nop and sub and mov adc (bad) jbe cwtl rcrb xchg in adc ret xchg push mov jns sub insb or popa into popf sbb sarb aam es jno test push test sarl jne cmp aas add out mov push and mov in jl or xor ja mov push adc inc mov cld arpl out in add or mov imul ret loopne inc sarl je add mov enter xor enter xchg mov mov in inc xor inc mov sub es or dec lods xorb (bad) adc adc sbb out jp and cmpsb aad fs inc cmpsl das xorb dec xor sbb adc xor fadds cmc xlat psubw (bad) int (bad) sbb cmpsl push mov popf push adc and and jmp out inc cltd in pop fildl std and aam or jecxz (bad) mov out sub rol sbbb sbb inc aam shrl or enter push xchg xchg aaa adc test dec add pushf adc or fldenv cmpsb mov cwtl xor insl cmp inc sbb or add jbe aam hlt out add sub xchg sti mov nop pusha mov and addb test push add mov data16 mov cld ds push cmp pushf and push incl icebp push les xchg push sbb sub pop in dec addr16 push push imul ffree cmp ret mov in adc dec repnz jo push xor flds pop mov shr mov adcl enter sbb pop adc out add xor in (bad) add mov adc outsb cmp dec loopne mov mov sti xchg dec es shrb in xor cwtl xchg jne fsts xor pop xlat xor xor adc mov es push sti popl dec fstpl sub sub jg mov jns insb add pop add mov sub icebp in aaa addr16 addl xchg jmp push xchg fs sbb fcomi add mov pop sbbb pop cmp loopne fsts stos pop sarl sti sub add or jne mov add inc inc add push xor sar mov test and mov add xchg (bad) fisttpll fadd popl sub xchg or mov call cmp jp cwtl add pop push ret dec xor imul xchg sub add push in divb addl dec sub push jnp dec rcll dec ret sbb dec dec cmp add mov jecxz pop mov xor sbb pop pop roll and ret stc movsl nop pop call pop and or or add inc into leave sbb sbb addb scas add call bound sahf add inc jb jnp stos cmpsb jl (bad) repnz ja iret cwtl faddp lret dec add scas ret sub test and mov adc out xor cmp push out (bad) fisttpll mov pusha pop outsl push adc pop cmp xchg mov dec ret mov adc cmp add sub sbb pop je add lds insl xchg push push test cmp add sub (bad) push or mov add inc std out push int3 mov ds pusha je pop or adc cs mov std adc loopne andb add jae das mov call rcr shl scas cmp roll ds arpl hlt lds sarb dec adc test or out lock adc addr16 mov cmp add dec ret inc and push adc and test mov sti jge ljmp movsb stos add iret popf test push lret subb fldl and mov call (bad) pop or mov arpl ljmp in repz cmp adcl lcall es lfs inc sbb out rcl or and call xadd pop pop fdivs mov sbb movb push jb inc jns in stc cmp inc popf and push cmp hlt push pop and adc cltd add stos inc push xor (bad) cld mov adc (bad) sbb push add and mov add pop and cmp sbb int lea call cs xor push mov lret ds testl or mov adc rolb icebp xchg in push and adc icebp push xchg sbb add out dec repnz jns pop jecxz cld mov loope inc cmpb bound jbe pop pop and jge inc ss mov xchg into jno adc clc cmp and adc add mov xor cmc imul ljmp lods lret mov add add (bad) add cmp js mov addb add dec add adc test inc mov pusha add or xor mov adc add mov xchg je add adc pop mov mov cmp popa mov adc adc mov push lret pop pusha lods mov int3 or add idivb inc xchg mov sbb mov sbb pusha push xchg add jnp mov or mov pusha sti mov lret out add dec negb js mov pop add ret enter ljmp adc add mov mov lret mov or mov cmp cmp stos add loopne cwtl into add mov adc xchg repz cmp xor sbb or mov add aam mov inc jo fisub push testl or (bad) xor js (bad) mov clc push cmp pop mov jae cwtl test aas cs int (bad) repz mov jns sbb add cltd or jno sub (bad) cld movl pop into js jge xor rolb add add push loop mov inc mov mov and mov adc or stos orb mov and mov popf jno comiss shrb mov inc add js adc lea aad add cmp add inc pop in pop mov add shrl test inc mov inc cld mov mov push nop leave add shl adc icebp jno mov mov enter nop cmpl rorb cmp lock fucom pusha popf or pop ss push (bad) and nop push in adc cld sbb mov and pop cmp dec daa sub rcr mov mov mov cmp cmp xchg mov mov inc nop and hlt sbb bound in sub mov dec dec and pusha mov push push add sbb mov rorb movsl mov nop dec arpl sbb inc and or add xchg aas int3 mov or adc fwait mov mov push rep pop lret fild inc lods test dec mov xor out mov jnp jl mov or arpl lret adc repnz mov push pop ss (bad) loop imul sbb fadd mov add fdivs push (bad) xchg mov and sbb dec mov dec sub popa xor add mov pop push push test or scas fadd or add cmp data16 add rcrb mov add pop stos cwtl add mov sbb mov rolb or aam xor int mov xor rcl sub add enter add (bad) mov pusha psubsb std pop inc cmp outsl or add xchg bound jge dec add lret mov les or mov aad hlt or or push pusha outsb cltd jns sbb ljmp xor mov out js adc test inc into cld nop dec inc mov sbb push adc popa movsb sbb mov (bad) je (bad) fbld rcr out shlb mov add insl inc mov sbb sbb push xlat add add mov mov or lret jae pusha push add cmp cmp out stc cmp and mov or jbe stc js outsl test fdivs cmp (bad) je es xor sbb and int xchg xlat icebp inc test mov int3 inc pusha mov pop mov inc cld je add mov lods (bad) jo sbbl sbb add lahf mov les test adcl sar jl cmovs js and test sbb inc xchg ljmp pushf inc mov add leave inc xor and or imul push inc xchg fadds rcl aas imul popf cmp mov scas in shl and ret mov sub jg fistp and mov add mov pop movb pop ss push int inc int3 dec jg mov cwtl push pop and or sbb push xchg insb shrb out clc test push dec ljmp xor into sbb pop xor sub repz pusha aad gs icebp (bad) es adc outsl fimull fmuls mov popa mov or mov push int inc adc xor leave sbb adc fdivrs and fsubl push add cld mull aam les dec imul cmp mov mov movl dec sub mov data16 aad aas mov xor or sub cwtl add adc sub stos pushl imull or pusha mov jo and and push sti xchg push xchg sub sub jmp cmpsb mov push dec js xchg or dec xchg mov add and int3 dec sub jl sahf jns cmp fst xor ja inc push bound shrl xchg xor (bad) js (bad) lret xchg push sub inc cmp mov sub xchg cmp out push hlt sahf jno stos adc inc mov push dec or popf ret or dec and cwtl (bad) scas sub in add out in xor inc sub (bad) mov and rclb cmp scas or mov add jnp insb xchg add add jge and lock cmpsl or dec lret jle and mov mov idiv push mov sti pop call adc push pop sub pop shrb inc and negb xlat add repnz xchg cmpsb into rolb out cmp adc sti jge fild ret push mov jmp dec imul add ja lcall lods dec sbb adc lea jae cmp add push dec popa aas pop mov jns push sahf loope (bad) popf inc add adc cli jecxz icebp inc pop jno pushf add into mov test mov push cltd push xchg mov jmp rorl cmc inc mov cmpsb adc inc mov jp cltd lret addr16 xchg movsl inc push icebp xor mov repnz rcrl cmp cmp cmp rcll mov jns or lcall scas mov adc out ja scas or mov ljmp lcall imul add andl add inc add jp cmp loop ret cltd pop xor int sbb mov aaa pop mov (bad) icebp adc inc add stos and divl or pop mov add dec add adc sbb psubd mov or pusha add test imul andb loop adcb add shrl jns mov nop fsubrs push mov push adc mov inc mov inc inc loope adc xchg push sub popf out add mov incb pop add sbb push mov icebp xchg pop rclb mov mov loop or mov in test sub adc repnz pusha popa shlb push xchg adc pop cmp push imul or mov mov jo cmp cld adc xor xor lcall ss dec dec daa sbb inc sub sbb gs pushf mov dec adc or xchg push sub dec sub out pop mov mov jns movsb inc stos dec inc (bad) push adc dec int3 inc shlb push or sbb jmp and int3 add push ja sub clc xchg pusha clc mov mov rorb movl push sub rclb in test (bad) mov jns shrb add push mov push out (bad) fild enter add push adc or add add cld sub pop mov ljmp iret xchg int3 cwtl and jg lret aas pop data16 mov xchg inc out add lret push (bad) pop sbb inc and add xchg lret xchg outsl out test and adc mov mov faddl push push pop mov or daa add xor gs test clc mov xchg insb add add sub nop cwtl dec mov sub mov ss nop gs or sub mov jmp loopne cltd loope sahf je nop push and pusha dec push and int adc mov and movsb or insl movb dec sahf mov lea push mov or call jnp lahf imul nop movsl mov adc add fcomps pop adc push or adc jl xchg in adc out push rolb movsl add dec xchg lds cli (bad) vpunpckhbw scas mov cmc xor add xchg dec lock add gs mov sbb push inc into addr16 mov loop fsts dec sbb mov ja adc push or cmp or pop jnp sbbb mov adcl pop or jg xor je pop xchg sub add cmp pop dec add std xor adc xchg dec scas sbb add xor lds (bad) iret ljmp push push ja jae dec dec inc add mov cmc inc les or loopne add mov gs mov roll add push test in lods dec nop movsb cmp shl jmp xchg loop add daa add pop loopne xchg (bad) dec int or mov shlb push test jns andl lcall in out stos mov cmp push daa adc sbb jns test shlb jge sbb mov out add push mov jnp lock add xor stc pop enter xchg add fs sbb fcompl inc ds inc sub and lds leave dec stos add xchg push rorb fbstp mov push lds (bad) xchg adc (bad) mov dec mov add push mov add or aam movsl jg in mov (bad) mov in ja jle cmp pop dec add ret ret mov mov pop adc mov add pop (bad) xor test mov jmp jns or cmp mov mov or outsl push popa sti xchg and pop xor mov inc aam repnz pop add rolb xchg jp push add test dec jns push jb int sub inc cli mov (bad) jno inc nop cmp add push pop sarl add popf add xchg insl jne adc leave push cmpsb loop sarb add cmp (bad) (bad) hlt add aam sub mov pop mov xchg sbb push mov test in dec sbb fsts mov mov push pop pusha mov sub icebp aam add cmp in mov icebp add inc or inc inc mov push mov out pop leave push in add in mov out fadds push push lea ret fadds add jl into call outsl add testl clc inc lods adc fsubs addb gs push in add icebp mov jmp and or rcr mov dec mov add sub pop add mov inc sbb or pop xchg sbb and add aad adc jb insb cli xor xchg xor jne outsl ds or xlat pop xchg sub rorb lods mov icebp sub inc push cld lods add push xchg addl xor iret cmp stos or pop inc out cmp xor add mov sbb add pop add xchg fisubl fist push mov clc mov negb popf (bad) sub mov popl addb lods icebp bound cmp out or ljmp xor lock and sub mov xchg sub fcoms mov fidivl rol cmpsl add add mov shr push push pusha test rclb dec push dec mov ret addl imul or push jbe add jge out dec lock push hlt xchg les iret adc movsb sbb cli fildl cmpsl mov mov push test add pop xor pop movsl pop pop add cmp xor push dec addr16 jb and rorb stos aas cwtl or pop hlt enter loop into scas cld add cld in and add push cmc insb sub add mov hlt mov mov mov fistl dec add sub add dec mov push or add ds ljmp int lods clc fwait inc cmpsb imul icebp gs xchg cmpsl aam fildl xor xor and cmpsb lds (bad) xchg add or enter sub sti push cmpsb (bad) mov jmp inc aad xor test fcmovbe add push rorb dec pop or pusha repnz push push xchg and bnd sbb cmpsb inc pushf aas leave cmp (bad) xor inc xchg data16 cmp mov push fs pop cmp mov enter jp jns popf sbb add sar or cmpsb std arpl add pop add mov and movsb dec imul fdivl cmp cwtl mov sbb jae push mov popa or sbb push rclb test pop push pop cmp test adc aad fdivl es imul roll and adc pop or orb ret mov mov lds fldt sub pop inc (bad) mov hlt push or cwtl fs sbb pop aaa roll enter fsubrs adc sub or and mov mov xor and (bad) sub push xor je fldenv sbb dec lods push and mov xor or icebp mov movaps sub and sahf je insb ja pusha bound popw adcb sbb push test sbb (bad) sub (bad) xor dec mov inc pusha or mov aas or xlat and cmpsl xchg inc loop sbb ret js lret and and les scas jb pop lock mov jne inc xchg or push jmp lds mov rcrb mov cmp aas sub mov push push lock fmull lahf clc (bad) mov das stos or (bad) out add jg xor push cmp inc adc sub lods cmc push test jle jmp out sbb xchg (bad) pop inc jl cli and cmp push xchg and mov add and and movsb pop mov adc inc mov incl xor test lea dec jg lret mov push sbb fs jmp sahf sbb hlt popf je dec sub fnsave movsb ret incb dec cs (bad) icebp cmp add cmp jle push mov movsl xor and and jmp aaa imul incl ja (bad) inc cmp sub hlt and jnp mov sbb sbb inc cmpl push in xchg or mov jl mov sub notb or rcrb ror adc and ret cmp pop inc adc sbb add insb sbbl push adc mov fsubs mov es cmp int stos loopne adc sub sbb inc ret xchg subb jb mov into out insl pushf pop jmp push sub xor add std xorb add dec cmp sub pusha push mov mov push scas sbb aas or cmp cmp in adc imul push (bad) imul inc je xchg and or xor cld jmp push or cwtl rcrb push xchg inc xchg dec adc adc sbb jecxz xchg aad loopne ret imul dec mov add adc ffreep xor pop push mov push testb push test jns xlat dec push xor mov je inc cltd int3 and inc inc fisttpl jbe push add pushf loopne mov (bad) jp add and pop or repnz mov mov inc inc jne dec xchg lret inc pusha jo push mov dec shrb aad sbb repnz fwait pop adcb mov add insl and mov pop dec jle add les lcall imul mov test cwtl sbb sbb xor (bad) jo (bad) adc inc jno out mov shrb cld rorl aam subb sbb inc pop lods ret or mov (bad) outsb clc mov mov pushf roll js or add and push mov add push inc rorb fdivl testb fstps push es icebp xchg gs xchg mov and (bad) scas or movsb inc xor clc adc in into push adc neg stc xlat sub pop stos lret and sarl push inc in jae fbld inc loopne das adc roll lods insl outsl incl push cltd cld movsb clc dec xchg pop int3 pop pushf enter enter ret mov scas mov push stos pop movsb jbe xchg pushf sub aam cmp push pop aaa mov fstl add xor jno push adc cmp test and fmuls lock push fcompl add pop push out jbe adc cmp add add in mov daa lcall loopne dec mov mov inc stc and popf pinsrw addb and sbb xchg fs push insb (bad) add jae popa mov pusha and call clc sbb add jecxz bound dec xchg insb mov jbe sub pop mov sahf add sbb sub lock dec sub sahf add testl xorl xchg pushf inc and sbb jmp add sbb push test ret mov je pusha add hlt xor or push in es push ds in hlt fcomp sbb repz into mov addr16 and movsl rcll rolb push inc xchg sub in adc js jle adc cmp push adc cmp push and inc push cwtl mov in inc xor addr16 mov inc (bad) mov jb add push inc loope insb and rorb (bad) in sub pop fisttpl pop add pop inc out lods bswap add call cmc xchg add cld adc mov in sbb xorb rolb mov mov dec push clc mov adc mov sub sbb and or mov fwait out mov inc popl mov pop or mov add mov fsubs fstpt add ret sbb pop movsb nop divb test loop cwtl add in jmp or mov mov test jecxz push outsb in icebp imulb add xchg addr16 add cmp add mov or daa sbb (bad) dec nop and and inc (bad) shrb cli adc sbb mov mov add sub outsl add in jge push aas mov add jns lea mov lock fld cmpsl je scas js push sbb movups mov mov adcb adc outsl or repnz mov mov inc mov mov gs fwait lds lret mov or test es fnstsw leave add cmpsb cs rolb xor sub add sbb and xor add jecxz aaa mov adc jp movsb add inc fmuls lock pusha std pop pusha movsl add (bad) jnp cwtl mov mov adc outsb out fs decl sbb daa mov dec insb data16 cmp push push xorl (bad) push enter mov inc sub mov aas jns pop xchg into mov movl rclb or sub cs test xchg (bad) xor notl sbb inc scas mov jl or dec mov push xchg cli inc ret out mov add push das or and mov dec es dec xor ret sub pusha push sub xchg aas mov and jge mov sub (bad) aam call pusha adc or pop ud2 jecxz dec sbb inc xor movsl or icebp sub dec mov sub push stos sbb mov jp and mov sub adc inc pop add jno les btc ja xor (bad) xlat test lods inc mov je sub call (bad) push push adc mov int3 dec sbb es cmpsb mov sbb shrb cmp mov ja adc (bad) or movsl sbb push and or xor xor add push xor rol leave pop or ja pusha rcr xlat add inc fwait xchg lock arpl test repz xor movsb pop lret or or sbb fisubrl fcom adc inc jb add inc inc adc add rcll pop mov outsb gs cmp incb add xlat (bad) dec mov or (bad) mov aam imul stos ret sbb adc xor cwtl pushf adc add and mov enter (bad) cld mov adc in arpl add push or movsb (bad) jne sbb jno xor sub dec push and (bad) sub or mov lds add aam cmpsl pushf aad adc sub jne imul or push inc int3 mov add imul (bad) mov add insl pop insb sbb lods mov sub mov (bad) push cmp xchg popa jno fbld add or pop fwait das lock mov mov cmp mov lods sbb data16 cs jae xor andb subb mov mov stos and cwtl int cmp dec add mov (bad) mov add mov pop or pop mov adcb mov mov xchg mov js out mov dec loopne dec mov lods sbbb xor hlt jge stos xchg mov addb les xor aad xor jns test arpl adc sub andl scas add mov mov jmp jns sbb mov dec add pusha xor mov mov mov nop (bad) dec fsubl cmp (bad) cmc call mov in popf mov loop ds js dec call out test or aam daa xor insb jmp dec dec loopne imul inc sub jo nop test sarb lock cmovs add std fildll mov dec adc aaa ja iret add push mov inc dec cmp daa mov or jb jl add (bad) icebp add (bad) into popa jbe jmp mov push push xor aaa mov cmp lods jecxz mov mov movsl dec ret mov (bad) dec sbb test pop adc push popf adc sbb add cltd or xchg adc push push sbb or xchg and (bad) sarl inc lods sub insb inc jmp in lock mov mov push shlb or test sub or mov sbbb xchg shlb rorb jecxz or mov cld or lods jo outsl add cmc insb sbb push inc cs (bad) jbe loopne and sbb test js das mov mov push addb incl enter rorl add and dec jg call dec sbb lock negl cmpsb sub pop add adc lock (bad) ja lods ficompl jbe test sbb stos scas subb or arpl xor (bad) xchg push jg,pt or mov jg jo add mov mov inc shrb jno pusha xor adc les add bound push outsb iret inc ret pushf mov push mov pop push push jg xchg mov lret imul push sbbl scas lds idivl push push icebp lds orl inc or mov iret jae (bad) popa jg shrb loope xchg adc nop hlt sub mov add aam (bad) nopl inc add movl and and fisubrl sub sub sarb mov sbb daa cmp add out adc jg (bad) sbb xor sub jl sbb das roll in xchg add mov and jg and push pop test call test rcrb cmp sub ss push sahf stos mov add rcrl add inc aas dec sbb mov sub movb sub rclb mov fwait or aam xor inc es je icebp adc in adc add xlat lret je xor mov mov loopne mov or lods sbb nop adc add test mov and and or jbe adc jp mul repnz dec stc faddl push add jnp sahf sub push test add scas push movsl mov pusha and into movsb add mov loopne popf sbb nop test data16 mov aam imul push mov mov or test je in dec call jmp mov dec pop adc (bad) addb sub lret cli orb stos lods mov xor lods push xor or jmp cmpsl addl jmp movsb jecxz mov lods ret das pop out jecxz inc test sbb or adc pop imul cmpb out cmp pop call push sub or sbb aam cmp (bad) sub mov jp seto sarb outsl lret mov test aad add add scas in or fpatan mov sub stos xor cmp test (bad) push push loop jecxz js in daa sbb (bad) adc sbb mov and cmp inc in call ficoml xchg enter adc ljmp insb sub mov fsts test pop lahf inc out subb jle xor scas aas cmp mov das or stos (bad) xor int or add cmp lods inc shlb testl mov les test or pop (bad) movsl in cmp cmc movsb pop xor insl push hlt xchg cmp enter inc iret fbstp xchg je dec dec sbb dec lret push mov mov out mull scas xor movsb mov mov je aas das push xor cwtl xor test pusha hlt inc xor movzwl add xor and fs cvttps2pi inc pop test add push and ljmp inc mov adcl inc scas push std pop fdivs call scas dec cmpsl mov add jb call fmull fstl dec xorb loope fs add xor (bad) mov or jns inc iret mov je iret mov inc adc cmp jnp sarb cmp jo out cmp popa out jo pop shlb inc or rclb jp in rorb push dec cld outsl je xorl jb mov mov or sbb sub adc out cmp je cmp mov cmpsl mov push push mov and les loope nop or cmc es dec push (bad) hlt test mov inc add in xor and and cmp or in mov dec xchg mov call pop out push sub xor mull loope hlt pusha dec or xor cmp sbb je add hlt cmp mov xchg lock dec fimul or fsts mov (bad) fist dec and rorb dec cmp mov fs jo js ret xchg sbb push and mov (bad) sub lcall mov push pop sbb xlat mov enter push adc or mov xchg push adc jge test jl arpl leave add inc and adcl (bad) loopne int3 adc xchg xor mov cmp add aaa cwtl inc mov das loop lds xlat nop mov popa add xchg mov mov test iret push add jne and lcall adc mov pop cmp les cmp incb bound push fadds rcrl jnp sbb mov daa and lock sub add jns jb push popa icebp dec cmp xor add cld xor (bad) and dec xchg pop sbb push xchg pop lfs and sbb loope sub jns xor xchg mov add lods adc xchg xor mov push or jno or add and sti aas int adc or and ret and hlt add iret and add inc lret bound mov pop pushf addb push daa icebp sub les (bad) (bad) push push mov adcb cmp push outsl movsb pusha pop add adc dec pop add dec pop sbb ja xor inc subb push repnz inc xchg inc or or mov xor popa or add sub bnd push call lds (bad) pop push mov (bad) adc hlt add adc mov test or roll or cwtl xor inc mov and ds sbb cmc or inc pushf into adc sbb jl and sbb inc xchg dec mov mov (bad) outsb or pop cmpsb fwait pusha pop xchg sarl lock jl push push test inc push and leave adc add out push push inc call adc pop adc xlat in jo add and jno push pusha iret mov add in mov add test cwtl pusha adc jnp and adcb pusha adc fcoml sbb fs or xchg and js jns xor sub call flds and cmp mov or sbb sbb push dec or xor leave adc add (bad) aad or scas add pop xchg loopne sbb mov into dec mov pop mov mov add loopne push cwtl push js xchg fst pushf insb fs mov push xor or bound xchg add adc mov bound jb dec mov adc in push cmp xchg jmp outsl mov push dec imul or jg lcall sbb or sbb cmp aaa loop hlt lcall fs rcr roll dec outsl push loopne mov in icebp jl ss aam adc bound and nop dec or push scas movsb or cwtl add push test or jo addl decl push fstpt gs mov sub add mov or pop and xchg add aaa ficom sarb movsb xchg sahf push (bad) nop sbb push adc sub clc mov or jnp out addr16 (bad) jl arpl jg test and adc pop ljmp rcrb dec enter aad inc mov and sbb in add sub xor cmc xor pop pop lock shlb mov jne inc hlt je and pop cmp out add mov cmpsb add cs std or pop cmp aam jo mov jbe cltd or leave in sbb cmp xor adc out das or sbbl mov fs or es sbb pop popa mov cmc jo inc sbb xorl (bad) push add add dec xor push enter or dec ret dec and shrl jae fcoms jmp and cmp jmp inc out (bad) and cld push or stos push loope mov aam cmp sub add and sub js xchg xor dec xor sarb mov pop and push lret jecxz sbbl cmp jle adcb les sub cmp arpl adc inc clc sbb mov push xor ds mov mov and mov mov es push clc push popf shlb test cltd in mov xor mov pop cltd mov ret mov mov jns sub jb inc enter inc neg cmpsb imul or or es test pushf mov xor or loopne cli inc subb add int3 pop sub sub gs call xor lock movsl and loop jne sbb pop adc cld dec push sbb and lock test mov cmp add aas xchg cwtl into int3 mov mov mov sub add adc es push test (bad) out fstl xor shl in movsb test pop mov hlt inc in fmuls mov sbb or push stc cmc xor rclb pusha sub xor adc out jno push out add data16 iret xchg or movsl lcall sub xchg jo mov xor and jp and outsb cltd rcl push sbb adc xchg dec inc mov jno bound pop incb cwtl rclb repz jne lock inc push inc mov lds prefetcht1 (bad) dec adc out pop pop or adc scas or cmp pop and jno and pushf dec push inc xchg xor add in sbb iret jno rcpps add jno or addr16 pop jns orb push mov out add in pushf cs mov (bad) arpl adc and inc push into and xchg mov add xchg jno in add mov push adc cmc inc dec sti adc mov daa pop xchg je repz and sti or dec icebp jmp fdivrp pusha adc les mulb pop addr16 dec adc mov movsl and fprem xor push and add enter mov inc scas lahf out jl daa add cmpsl int inc pop jmp xchg (bad) cwtl clc test pusha inc and cld icebp cmpb insb xchg push sahf les pop cmp pop out adc pushf xor add out mov (bad) stc or add cli add inc add dec and pop and and and and inc xor inc cmpsl es add mov rclb pusha mov mov sbb js faddl dec xorps add pop jb fmuls ja mov pusha test rorb (bad) sbb cmp ror pop imul roll pop dec push push and xor or aas imul scas arpl loop ret mov add popa adc mov js mov sub (bad) fdiv sbb and sbb dec pop sbb sbb dec sub lock pop outsl rorl mov add xor in inc and xor mov adc leave sbb cwtl add js cmpsl rolb insb sub repz (bad) push xchg loop xchg mov xorb pop ja mov lret stos inc imull push cwtl sbb jns clc mov jo and xchg dec loopne xlat aad sbb shlb imul orb out (bad) or movb (bad) adc or es sbb in bound imul and sbb rolb lea hlt jb push xchg in adc pop mov cwtl cmpsl sub cmp mov xor jbe mov popf or xchg xor cltd push jbe dec lock subb mov xor (bad) and clc jbe inc pop daa adc or stc dec dec jb mov mov pusha aaa jl fisttpll push sub sbbb insl sbb subb idivb jg shrb inc into pusha xor sub xor sub lret xor mov gs mov mov xor movsb mov fsubs mov and sub push xchg pop or xor rorb adc shrb inc dec insb mov mov mov je inc hlt sub pop test outsb mov into sub pop mov cltd adc fs jecxz incl mov and insb inc inc add push pushf push cmp loope scas ja stc cmp fld cld add xor xchg rcll mov js and dec push sub int3 and jl xor je in sbb mov sub js sbb or aam (bad) or mov mov push mov or jle cmp hlt cld and mov (bad) dec (bad) or pop or nop dec sbb bound scas sahf or xchg jb sbb clc cmp bound (bad) (bad) test pusha inc int3 (bad) or sbb (bad) sub push out sahf int3 sbb (bad) inc pop call les scas push sub loope add xor dec and popa in pop mov dec or or rcll (bad) test sbb inc push pop jnp xchg or addr16 cmp test mov push bound stos sbb into xor fisub popf adcl (bad) lock mov or aas xor xchg or cwtl mov dec mov fsubs pop scas add pushf into negl and addl shrl mov movsb popa mov inc mov sub dec mov cmc or addr16 pop fiaddl scas mov (bad) and sub jg shlb inc arpl xor and sbb dec and (bad) out push mov or in les mov add jbe outsl arpl sbb fcompl cmp mov in adc cmp pop stc sbb sbb cwtl and cltd or into mov mov stc mov jbe pop fs pushf mov xchg lods dec idiv add pop push push clc out scas xchg push dec jg mov outsl mov cmp fsubs mov ret ret popf add shlb mov int3 insl inc arpl ret pusha mov mov cmp jae sahf into loopne cmp dec xor inc push cwtl push mov pusha or arpl jg,pn mov xorl cmp lea push xorl out push inc cmpsb arpl jo cltd adc push push mov or xor xchg shll cmp in idivb cmp sbb or push dec in mov cwtl fldcw inc pop mov mov and (bad) mov (bad) mov arpl xchg sbb add test movb cld dec rcl test adc pop mov cmp sub mov adc sub adc sub push push mov std sub movsb pop or jo lcall xlat mov dec add push (bad) les sub add icebp ret xchg lods pop mov mov out mov sub pop movsb mov sarl sbb cmp or je inc mov sbb xor sub clc inc sub js outsb and repz mov sahf mov cwtl pusha (bad) repnz cltd and subl cwtl adc sbbb pop or test (bad) fild pop (bad) sub mov jge cli sub sub dec lret mov xchg out cmpsb mov movsl dec add mov sub xchg out mov sub cmp pushf jbe cmpl sahf push cwtl je (bad) or test mov mov and mov mov dec enter hlt andb jns cmp loopne or dec pop pop je and adc sbb mov sbb sub pop (bad) xchg call xor fcoms sbb add das mov push jno imul mov stos push mulb inc sbb hlt mov or scas sti and leave xorl in (bad) pop or (bad) jo jnp mov mov add xchg jmp adc jo and and and fmull jle or or or sub sbb mov cmp push gs and xchg cmp adc or fsub jae mov push and jo test pop and repz pop sub jb hlt mov xor je pop fldenv mov stc or sub fimull cmp rcll add adc lahf or ret push jecxz xor add fldenv mov shlb mov adc jns adc push ja mov ss and fcomps mov pop xchg adc int3 sub gs dec fist push js jno cld xor add pop cltd jno and hlt add outsb addl ret mov adc ret xor pushf or cmpsb nop adc jle int out mov dec pop pop scas dec into pop push mov ret add (bad) add movb mov and xchg adc xor mov add mov dec sahf mov sub lock loope sbb lods and push cli inc cs ret jne mov add mov push test out bound push sub testb adc jnp fldt adc rolb pop jecxz inc mov or out fimul pop adc or mov add scas inc dec cmp mov out scas outsb sub xchg adc bound scas sbb outsb daa add sbb add sub into dec pop xlat cmp rcll pusha push sbb adc and adc push mov aam mov push push pushf or push or inc jle inc push mov jp lods cmp add push (bad) (bad) dec inc ret fxch sarl rcl inc xor and or insl iret inc or mov jmp aad movsb sbb or lds lret js mov dec mov cwtl sub inc rolb adc es in sub pop addl jne roll cltd adc push sub pop out adc insb jnp fcoms xor adc pop shl inc sub cmpsb insb or arpl data16 inc dec out es or sbb mov or ficom movsl and cmp xor dec adc rclb or fsubs or pop fnop push data16 dec or jle sbb jmp push rolb into sbb aam in mov inc hlt cmc mov cmp rol dec pushf or push jnp aad punpcklbw (bad) push pop mov mov je fwait divl js sub data16 mov xchg out mov push lock sarw adc pop pop sub adc mov pop and enter add xchg mov sub sbbl mov bound negb or or cltd or push es mov cmpsl adc in mov push adcl adc mov push jno mov jge mov and lcall arpl xor inc test push aam test or jg scas adc pusha pop aaa add xchg mov sbb or pop sahf stc inc push xchg shlb mov and jmp in inc fwait jge and clc xor mov inc lcall aaa loopne data16 scas rcr jno call mov enter mov mov (bad) xlat mov push movsb clc sahf je movsl and sarl cmc orl xchg ficomp cltd jmp out mov sbb sarb ror shlb or in sbb pop out or sarb gs mov mov test insl loope test in gs add xchg push test scas cwtl mov dec data16 les jbe add jo into int3 xchg sahf sub cmp or pusha loope inc nop mov or adc imul lret loopne push test out xchg xchg xor test scas test decb fnop arpl jbe jbe test xor hlt mull push sbb and adc fisub jno pusha sti fwait test xor push out cmp cli mov xor xchg xchg and jnp push adc adc sarb (bad) mov dec int3 mov es pop pop add sbb inc aad out mov sub add adc fs push pop add xor mov ror inc or shl in add jg sbb test cmp or mov icebp lds cmp pushf inc mov push add sub xor push mov push sbb push dec adc adc and inc adc sbb cltd xor daa dec and and hlt pop out repz push push push aaa adc push lds inc xor and (bad) sub fnstsw rorb cmc lret clc mov mov and test sbb lret push enter mov loopne push dec (bad) out add add mov xor sahf or out pop loop and push xlat sub (bad) mov push stos add scas popf adc inc mov (bad) cld fiaddl add cwtl mov cs xchg mov cmp out ds (bad) mov test mov fdivrs sbb sbb cmc xor out andb sahf xor dec sbb or push xchg nop xchg and outsl lock loop movsb adc adc pop loopne loope insb jmp and pushf jo std push cmp pop xor mov invd scas sub loopne jo mov andps shrl out sbb js mov fs pop inc repnz mov es imulb mov daa add sub and add mov push js inc adc in ret arpl push jb jo inc in enter cmpsb pop adc pop cmovp cmp sbb rorb scas (bad) pusha or or or or in je ret les push lds adc ds jmp push out push loopne ss mov mov in adc pop adc pop test mov rorb dec push cmpsb and int3 sbb or fs dec (bad) jae cmp nop mov (bad) arpl mov push fsubr or lock movb repnz mov pop mov dec hlt je or fsubs pop outsl lret xchg xor inc dec gs xchg les sbb add gs mov es mov xchg dec push or pop ret add fmuls xchg pop fwait and jae pushf push fbld daa push push and jne or push or xor mov cmp push fisttpll sarb (bad) loopne test aam (bad) js jecxz xor mov sahf dec cmp adc lret cmp ds (bad) cltd dec xor cwtl (bad) sti mov nop adc dec mov or sahf call test (bad) or nop bound es jbe in (bad) dec sbb paddb lods sarl test or pop es push push or add out xorl call or loopne hlt (bad) xchg adc lea adc cmc mov (bad) xor loopne xchg pusha mov sub fimul dec pop cmp lea (bad) mov xor (bad) push sti shrb fisttp jne out pop in jecxz xchg in adc pop mov scas cwtl mov (bad) aad dec dec andl fbstp pusha (bad) cli in pushf pop add xor cmp dec jno in mov popa pop fdivs mov xor roll mov sahf loopne mov cmp dec mov xchg cltd adc adcl or loop scas pusha and cmp hlt pmaxsw repz data16 and out jle add cmp xor mov xor sbb jge or mov in adc ficoml jmp popf xor lahf xor adc jmp jmp add dec and push test out mov or movb cmp mov cmp pop ds int3 sti or mov dec nop pop jge lcall sbb jle or or mov add inc add (bad) es bound or push punpckhwd cmpsb or adc pop pop or mov sub dec and adc adc xchg negb data16 sbb or xor test clc mov cmpsb mov or jle push jp xchg insl adc inc mov iret add add adc and push xchg out add adc sbb or adc clc add call out imul mov xor or sbb push mov push mov jae sub xchg mov fnstcw test sbb out imul aaa loope mov jbe or inc or shll add cltd mov push into add leave xchg out shlb out in std (bad) mov scas mov push adc sbb movsl add add jl mov fidivr xchg jae sbb test or imul les dec iret sbb push mov out xchg or sub inc insl xchg jbe test (bad) sub jo inc imul fstps adc es push inc or js push or mov sbb fildll test or or or cltd nop mov outsb adc push jbe (bad) or jecxz xchg les push rolb add les scas add mov (bad) stos push outsb cwtl xor out inc ja and mov or inc adc xor in clc adc outsb out sbb add jno out inc inc roll xor fimul jbe cwtl dec cs xchg (bad) sbb sbb int3 pop pop or sahf or imul push push dec pop adc jbe orl or jnp cmp sbb ja test es rcll or or sub aad sbb call fsub sub cld negb movsl adc mov jne cmpsb dec sbb out aaa fadds mov inc sarb sahf insb or adc mov cltd les push sub cs test ficom cmp sahf shl xchg add and fsubs add ret adc (bad) (bad) or nop mov push mov rolb imul lret xor hlt je mov das xor mov push mov jne sub mov lock and push or sub pop je add scas cs iret sub aad push insb xchg imul faddl jmp push cmp fmull (bad) adc addr16 lea xor xor call nop cmp push sub nop add sbb sub popa xor sub sub push loopne data16 push out jb loope int3 sub mov or and out cld rol imul xor out sub pop sbb dec dec (bad) aam dec dec dec popa out sub dec pop (bad) sub sub es mov fstpl jns mov les push movd cmp jle or sbbb jp jbe push js testb inc repz sub or inc fdivrs push adc pushl gs roll sahf (bad) fstpl pop dec push xor pop aad (bad) mov shrb adcl push adc lock xchg add mov cmp pop sub pop or jns or jb (bad) les (bad) push shl xor mov xor pusha push sbb call add or (bad) sub jae push and ret jb mov push ja cmp rclb mov add jl and mov adc lahf or push or pop adc dec add lahf out inc push mov push sub iret stos mov int arpl inc xor xchg mov bound adc or lret pop icebp addps push adc idivb das and jo les ja (bad) stos adc sbb test (bad) lcall pop pop sbb js and addl rorb loop mov jo and adc inc in je sub push cld bound out cmpsb clc decl clc lret or andb inc cmpsl xchg or out inc xchg pop push pop fsub push cwtl cld lahf bound push add pop push sub pop test adc sbb pop loopne push pushw xor xor add dec add xlat push sbb lock adc xor test or leave and std adc aas adc lcall push and or jg aas shr les outsl (bad) or mov mulb stc mov pop dec xchg jecxz loop in and dec iret cmp dec add sub mov repnz push out lock fnstsw lahf bound jo inc ret cmp mov (bad) xchg pmaddwd xlat xchg and or adc sbb test cmpsl out add mov xorl ret (bad) sbb les and popf mov scas xchg adc mov cmpsl jp mov cwtl pushf push ja add lret in mov xchg in mov xor inc or out xor mov xchg pop insl adc mov aam and enter or adc shrl adc adc push lods mov call and adc imul pusha cmpsb or es icebp call orb sti (bad) (bad) xchg mov sub cwtl das inc sub and push jp and and sbb ret out hlt cmp pop mov adc xchg push sbbl sub or mov or lcall js jo jmp insl clc cwtl jg push dec cmp dec sbbl dec rcrl or pop fsubs sarl or daa cmp dec and xor clc and sbb (bad) mov push cwtl adc cs and inc arpl fcompl subl adc dec data16 adc (bad) aad rolb inc xchg cwtl arpl pop cmp je test and pop adc cmp shlb cmp or es xor sub pop leave mov and dec adc hlt rolb ds fsubl pop mov xorb mov in nop je in lock xor and jno stos outsl xor jo sbb mov or jno lahf psubusb ret js pusha xor xchg sub or adc nop adc (bad) or add test or rcr fbstp lret pushf roll js into add cmp push pusha sbb jle scas mov ss orb lock scas fisub push std frstor pop sub scas mov sbb mov rcrb and lds sub mov mov dec cwtl jae mov jmp outsl xor cld or (bad) dec (bad) adc rcrb das mov adc jae xor jmp xchg sbb or into (bad) mov in pop mov dec xchg and or ret add add add aaa add lock mov fwait test sbb rcll movsb test out inc (bad) mov and in or leave xor imull jmp inc mov xchg and dec adc jmp je jg arpl js fidiv push mov adc nop loope nop int3 outsl (bad) jo cmp clc xor adc cmp add or icebp jo inc mov loop into addb mov dec mov mov adc fistp jo popa (bad) cwtl leave fisttpl adc push outsl xor adc inc and mov inc dec cli jo mov iret arpl cmp cmp and loopne push dec bound xor lret jo cmpsb lock bound imul fstl xor push or pop cwtl in cltd mov jl in push into or xor es xchg lret ret push xor lock (bad) lds (bad) jo leave jp (bad) icebp xlat or bound iret sub fidivrl in add dec loope inc mov adc and push sbb sbb sbb sbbl inc flds sub lahf sbb inc clc (bad) lock or pop pusha and pop inc inc push lods adc jnp and test fwait mov fs adc mov xor (bad) add ss sbb lock sbb xchg int3 cmp adc mov dec enter mov leave push aas sbb mov cwtl pop (bad) xchg (bad) cmp movsl or push mov jnp rclb outsb adc movsb leave mov icebp pop and cltd xor mov cmp or loopne and ljmp and and leave cmp xorl mov inc mov lcall cli or inc call inc jmp inc ljmp add jne pop std xorb sub loop cli cmpsb add mov dec and push call sub inc rorb lcall insb push or dec scas test wrmsr fild inc test inc mov and add sbb or or lcall add mov scas in sub popa pcmpgtb pop adc test mov out rorl xor fs adc rcll add pop hlt dec pop adc sub xor std inc iret and pop insl or push test sbb pusha cmpsl aad lds adc popa fiaddl add std test sub and mov push test dec rorb adc inc es je outsb test xor inc sub adc out xstore-rng cmpsl add mov adc inc test je pop pop loop out mov jno mov push enter sub jmp fisttp jne mov jns inc jbe outsl imul and adc push dec pop xchg push and dec sbb adc mov mov and xor and mov pusha fisubr js dec stos pop lcall mov sub push cwtl jno inc in sub (bad) je insb cwtl nop jae ror bound pusha je dec jmp in adc push cwtl call outsb pushl test or jno inc xorl pushf add cmpsb pop and xchg movb imul push stos cmpl jmp aaa dec pop or int loopne xchg pop or add cld nop sbb clc movl or mov lock push les jo add add stos ss pop push cld imul movsb je nop sub int3 test or cmp push cmp adc cwtl outsb sub adc cwtl xchg sbb pop mov ss sarb xlat push imul lock mov daa popa push inc mov inc xchg and add push xchg push and test or push js xor rorb mov js dec popf add dec xchg les dec adc push test sbb pop cmp inc rorl sbb mov stc xchg mov inc xchg push call xor loope mov jbe movsb rorb cmpsl mov cmp imul push push test cmp xor rclb and inc dec mov bound adc dec arpl xor push mov sub adc pushf dec jo adc jge adc push pop mov mov jmp stos and jge mov nop adcl adc addb pop add sbb loope nop mov push fwait or xchg cmp cmpsl dec sbb or cmp push and jecxz jae pusha inc dec cmp pop adc xor subl dec sbb xor push lcall inc and rcll jo inc jl dec add xor cmpsb ror cmp push push or test mov mov push sbb out sbb lods or add pop or bound and dec mov add nop movsl push or loop mov xor lret stc mov test imul xchg xor mov cwtl sbb loopne pop mov les dec (bad) xchg and adc dec pusha inc nop ss mov or inc and aas xor or (bad) sub cmpsb xchg cmp dec inc dec or xor push jo or ret jne das nop xchg inc add xor cmc sub sbb add ljmp sbb rcll test jecxz bound cld sbbl shrl mov cltd adc leave (bad) rolb add cmpsl adc mov inc sbb pop lods dec sbb insb add push adc or mov repz or or subl mov loop dec in add sbb rclb or enter out out dec pop mov adc in clc mov xor push add pop add xchg and fsubs dec xchg dec ss xor xchg cmp pop into dec sbb sub or add lret nop inc jmp and imul inc rclb adc xchg sbb gs enter sub fs test jp or bound pop push mov cltd push xchg test ror push (bad) dec imul or xor ljmp cli inc fs xchg mov cmp jmp cmp xchg and les mov lock call and xchg or and lret ret adc sub sub mov sub lret add push mov je mov xchg icebp xor sub js add mov pushf mov je subb mov add rolb add add shll ret popa out xor in fldl ja test lds xchg (bad) fs xchg sbb cmp insb mov arpl bnd cs add add hlt jl ss jg adc inc sbb jae popa xchg add sarb mov inc fcoml icebp sub aaa pusha leave mov arpl cmp add mov imul push mov aas lret cwtl xchg lahf add inc je jg ljmp stc sub rol pop (bad) icebp pop lcall add ja hlt scas out add xlat dec adc add ja add mov cld (bad) mov sbb rcr jno jge jmp orb movsb aad icebp jo data16 pushf add push call in fadds mov pop stos xor mov sbb and mov xchg inc jnp or add xchg jp add popa jecxz adc neg ds xchg or ljmp or bound pop push popa arpl out loope loopne lock psrlw adc insb rorl adc lcall nop and xor pop test imul xchg daa ret outsl mov jbe inc mov fnstsw inc jo movl movsb test xor lods sbb cmp cwtl ds add stc or nop orl call lahf test rclb out (bad) dec das test out lcall xor xchg jl mov cmp les pop xchg out add roll ljmp pop sbb mov mov xchg (bad) sub pop testl push push cld xor sbb je sbb (bad) std jb,pt orb stc add idivl movb imul (bad) cmp fs sarb mov push or cmp mov add jge sub xchg pushf or mov loop aad sbb lea mov add sbb adc ljmp inc sub test add and sub inc andl cltd xchg cmp ljmp sbb xchg mov loopne in insb nop xor jno jecxz ljmp ds cmpl inc mov arpl es adc les ljmp adc out xor add sub (bad) out push mov test mov cli jmp xchg or mov add jae push cmpsb inc jg push sbb ljmp push jge push aaa and je inc mov lcall mov inc fmull leave sub adc add adc cmp add xor fneni(8087 or adc and ss xchg mov rcr mov mov push adc push pushf jge test pop dec cld dec xchg fdivrs xchg mov sahf out icebp pop les push js jne cmp jnp insb dec cwtl je push jae sbb les (bad) and pop jmp rorb xchg add sbb jp (bad) mov (bad) into mov lcall adc aas and add xchg pusha pushf inc insb jmp hlt (bad) xchg out pop pop sub pop bound mov push or add aas jns pop sarb xor je out push nop adc mov mov lret stc mov inc mov aaa in sbb add out sub or lcall or lock push xchg xchg das ret outsl bound add cltd in inc sub shrb in mov pop inc dec push xor inc ljmp adc rcll fsubrs xor es (bad) popf add imul sub xchg push (bad) add stos add gs xchg rorb add lret and lahf sti pop enter pushf pop push fs lds testb je cmovo adc cmp mov lods sbb loopne insb sbb ja sub ljmp or ds cmc cwtl pushf ljmp (bad) sub add mov je adc clc adc hlt cmp popf out xor sbb cltd inc sub insb pop xor xor xor add aam cli add insb pop (bad) fnstcw aad xor inc loopne or sub adc (bad) dec test clc inc mov mov xorb test cmc getsec sub sbb les jo sbb fsts ret adc or inc mov sarl add cwtl (bad) pop xchg enter loopne sbb lahf out mov roll inc lods mov std fnstcw pushf dec xchg out andb mov je pop roll cmp gs loopne out hlt push pusha imulb fucomp jo pushf add xor mov mov call or and xor cmp sub cmp sbb mov dec mov addl add mov xchg out jo mov dec das sub mov daa roll sbb jne mov xor je add xchg sbb in ret jle mov in js and push push mov adc js or mov shl adc add insb shrl notb xor push cmp insb cmp jecxz rcrb (bad) adc in mov mov aas cli std pusha nop (bad) repnz stos aam mov xor test or xchg adc cwtl dec push in adc sub mov (bad) repz movsl sbb mov dec push pop sbb test sub adc (bad) jnp xor cmp ret (bad) mov or pop (bad) pop adc or sub jecxz roll mov xor enter pop dec in sub sub mov inc push loop test xor dec pop adc icebp mov xchg daa add out xor mov sub pushf xor push sbb (bad) or sub movsl jno pop mov imul push add or loopne ret cwtl out xor and rdmsr lods or and push pop pop push pop sub scas xor sub adc hlt and pusha mov js int3 mov fnstcw xchg enter loop lods add jl mov shlb daa cmp jno sahf sbb data16 add xchg ljmp and add sub add addl cwtl (bad) in add push add inc jbe cwtl sahf nop pop sub fs push jge loope ljmp stos sbb (bad) cvtpi2ps subl mov ljmp add sub clc dec dec add (bad) add sahf or cmpsl adc (bad) in add jae sub mov dec inc sbb pop stc jo xor adc sub and xchg inc orb mov (bad) pop shlb int jl cmp sub adc insb jecxz or add ljmp xor push fdivs sbb fs jp pusha in jnp xlat cltd push mov push sahf aas sub test cmp daa sbb das jne les add out test add cmp or sbb cmp enter cmpsb mov sbbl mov sub sub mov icebp xchg daa mov fs js jl addr16 ffree push mov mov mov or call cmp jno mov dec push add mov or ds cwtl ljmp leave sbbb ljmp jae or pusha mov sbb lret add addb fistl jp shll lods push add jecxz and movsb add lcall ja jnp fstpl xor rorb xchg push sub lcall rolb scas mov mov aas or repz cwtl mov add push pop les pop ret cld fs adc lret into ss test lods dec mov pop notl es gs in push push in xorl xchg dec fwait (bad) lods and push or icebp (bad) rorl inc pop aam or loopne dec xchg push inc or sarl push std sarb and cmpsb in or pop mov mov frstor push les jae cwtl adc cld xlat enter push sub lahf enter pop movsb test rorb fdivrl aaa loopne ds gs jmp cli es loopne icebp or xchg mov sbb sub lods jl mov mov sbb arpl hlt ret cmc out icebp fwait or ret xchg test dec push xchg ret push cltd inc or aad xchg or je andb sub idiv ficom repnz xor mov adc push sbb out rorb test inc lds pushf and lret rcrb jl and rorb sbb sbb pop orb aam test arpl sbb xchg pusha jbe mov incl test jg xchg clc cmp jle fildll loopne movsl pushf push push fsub shr adc cmp repz or inc sbb mov test insl mov nop js fldt enter je xchg inc pop jge xchg or jbe les mov mov popf (bad) (bad) mov js outsb push sbb add mov addr16 pop inc and mov ss enter jno mov adc test movsl mov and loopne add push add push scas lods push jno loopne push add movsl (bad) xor cmp addb jmp add mov mov inc mov lods call (bad) ss adc sbb ficompl loope fs repz push shlb mov push pop inc xor inc pop add les or or cltd or das lcall inc adc test int3 adc enter pop outsb adc shll add int mov push pop pop fsubs dec sarb push clc gs xor hlt and cmp push loope add lds pushf mov or add mov je push xchg shll sub pop jmp test int3 leave sbbb xor insb loope in add lret fbstp ret scas xor push ret imul sbb inc adc push insb xchg add cmpsl xlat (bad) fsubs fbstp nop push xorl test lcall push jp xchg es out xor mov mov in sbbb xchg dec roll arpl pusha out ss sahf insl pushf jp sub mov clc dec push ss enter push cltd push mov adc or mov leave cmp jl pusha and adc test test dec cli jl addr16 jno jl fist out ret push andb and rcrb jmp xorb js sub rolb loope adc sbb hlt mov jo sbbb and loopne dec xor pusha mov mul mov add jecxz insl push mov inc add xor lahf fstpt jmp add mov xchg and cmp jb (bad) pop ja jp adc in or lea arpl cmp ljmp mov push (bad) fsubr add adc (bad) cmp push je inc jg add dec shlb xchg mov std lcall in (bad) rclb daa mov dec mov adc fnstcw pop push pushf pop jmp dec mov xor pushf sbb ret sbb lock ljmp subl (bad) xor add xchg dec jnp lods mov pushf inc outsl xor sub inc mov add shl in pushf pop aam or mov inc jle out movsl out cmp sbb movsb mov or sub call subb mov or xor mov rcr rcr scas cmp ds jne lods imul rcrl xor loopne loope mov dec mov pop jl mov subl jmp add gs ljmp test in xchg pop hlt aaa push rcrb sbb insb xchg test loopne popf adc insl jl inc cwtl cwtl add mov (bad) es push dec sbb cli rclb cmc mov add negb js adc sarb lret and lds out and adc je inc xchg mov loopne cmp fcoms in sbb in test xchg cmp sbb icebp pop cltd lahf xchg test in mov sub loopne sbb arpl pop dec call scas test fucomi cwtl push movsb mov fmul outsl or fs sub mov popf sbb cmp jl je sub fsubrs mov mov and mov mov dec inc out push loop and adc sarb push inc call cmp fs test mov mov mov or push enter xchg inc xor cltd icebp mov ret mov add add and sbbb insb pop add fdivrl mov jne xor push mov dec je add xor nop adc sbb sarb lods sbb sbb int pushf hlt rolb mov imul insb nop aaa xchg and pushl jb les push scas insb ret xor lret mov push lods test mov rorb and add xor or jge enter cwtl add xchg adc adc shlb cmp int3 adc add or sub hlt inc std cmp test incb jb faddl xchg js mov loope fs ljmp pushf xor lods fsubrl js dec sbb ljmp xchg lods sub pop and (bad) fadd jnp loopne cli push or or in enter out inc cltd int inc fdiv call inc fiaddl ret imul je sub sub cmpl out sbb push adc xchg pop fucom rolb add add adc add int add lods add dec sbb js (bad) add testl fildll loopne sub add lcall mov add scas push dec or adc dec inc sub cmp mov in adc push dec imul lea fcmovnb sbb fisubl mov xchg lods mov int3 mov fisttpl add adc add pop nop daa leave sarb and dec rolb add rcrl (bad) add mov push orl fwait enter cmc cmp cmp pop cs (bad) xor ret pop addr16 xchg loopne push add jle mov jo jo outsb inc cwtl adc arpl dec pusha add (bad) mov pop (bad) je rcrb and int3 cmp add clc sub movsb pop int and push sub cld pop adc jno add ret sbb notl mov add ret dec jns jne add sub pop sarl jg or pop jl mov (bad) imul mov add mov mov jp (bad) mov pop addb inc sub repz js,pt je (bad) jle insl xchg xor js mov stos je ds int add jo pop add lods dec dec sbb cwtl mov lret xchg loope fldenv data16 jl pop add (bad) dec lods jmp loope add sarb pusha sub sub inc icebp sub jb clc pop mov mov ds cmc pushf ds or nop add mov test (bad) push xor (bad) add lods ret mov fsts inc mov cmp bound add and or repz xor push and or add push fnstcw xchg std xlat add (bad) xor jae icebp (bad) hlt mov jnp nop int3 xor pusha fisttpl flds sub pop icebp adc mov cmp sbb hlt jo xor mov sbb pop push or push mov jp push inc sbb insl ds sbbl xlat xchg push add icebp sub fbld push sub sbb mov mov adc add mov mov mov cmc sti ret bound (bad) inc add aaa xchg add sbb fdiv repz inc adc jg add xor pop nop pop in mov add (bad) pop into pop adc nop movsb int3 push mov test push inc loopne pop ljmp push insl add dec sbb add jmp pop jmp into ffreep add mov push out xchg ret je lock pop mov push test add cld add mov rcrl leave or call jbe (bad) gs and or xchg inc sahf ds jae mov cld pushf stos pop adc or mov fwait xchg enter test pop mov pop xor xchg xor mov lock mov js (bad) cltd push add outsb insl mov push xor clc shrl and or xchg icebp in xor mov push push pop xchg pusha add in insl (bad) into hlt adc inc xorl add lods mov xor or jns adc sets add jnp sbb inc in cs (bad) test dec pop adc add nop into sahf insl jecxz push sti movsl mov and stos (bad) add test push lret jl lret loopne or sub das sub jecxz sbb dec outsb out (bad) xor adc mov psubq or orl mov mov adc pop pop js push popa int push and inc or xor add xor adc loop cmp xor pop (bad) rclb add or outsb out dec (bad) sbb (bad) int3 pop jne inc dec mov mov push xchg call pop or imul cmp lock clc test int rorb ret int3 add js imul add jno rol sbb ud2 gs and add adc add pusha in adc xor sub jl add (bad) inc int lock ja test mov or jp mov push fistl addl sub add xchg rcrb xchg test (bad) sti iret inc and and add lock push add pop inc and jl and lret test push add loopne frstor dec xor addr16 sbb mov fldcw cmp mov inc inc xchg dec mov cld pop cmp mov jno icebp bound add jb mov dec xchg adc mov xchg mov push or pop (bad) popa enter add (bad) mov pop jl into test imul lahf adc cltd outsb mov in xor inc xchg mov (bad) jae daa sarl pusha pop push js loope push ss mov sti sub scas mov dec mov orb loop fadds push inc inc nop dec hlt sbb lea stc iret pop rolb add fisttpl jnp jo popf fsub pop add mov push xor mov cmc stos inc and or add jne xchg fwait xor js fs repnz add pop pop pusha dec jo stc fmuls outsb sbb aam lds pop pop inc dec dec leave jns sbb or xchg fldt adc jg push ds lods test pushf les or rcrb lock dec popf push or sbb cmp (bad) push cmp call mov sbb daa and pop cmp xchg add int3 fcomp mov jne int3 fadds push popa pop xor xchg sbb adc jno push pop pop inc push jp xchg pop outsb ljmp (bad) sub xchg ret stc bound inc mov in add xor xchg inc js mov icebp add sub push cltd stos push cmp xor hlt inc sti cmpsb lock add inc mov out and mov icebp ds xchg jns xchg inc inc aaa add jl stc rclb adc mov mov add (bad) loop adc ret aam xor xchg jg jmp nop test dec push add mov ret xor cld jno dec in jb movsb add call push cltd aam xor movsl sub lcall shrl add push cmp xor cmp adc mov pop test mov xchg outsb adc ds sbb je xchg xchg mov add xchg mov repnz andl pop pop xor ret adc repnz in jnp es add les xchg jo mov rolb push (bad) lret in adc push dec rcll push dec aam fdivrs pop (bad) mov add popf mov in subl repz pop sbb lds sbb or in mov add mov test add xchg cmp or add push enter sbb cwtl fdivs daa fistp sub mov icebp xchg out or inc pop punpckldq push clc or aaa mov adc (bad) or mov pop adc and popa test aas scas ret and and adc jecxz outsb push push cmp pop lods pop jns sbb and jo xor jnp repz lds test adc inc mov sbb rol stos pop test nop fmull and pusha pusha inc clc lret fadds gs or les subb enter push subl inc test jp add cmpsb cmpb or test enter and inc inc mov shr hlt dec sbb sub adc (bad) inc add adc add roll jg icebp dec lods xlat and nop and cmp and xchg (bad) dec arpl push mov pop push into fisubr cmp xchg je jl push nop inc dec pop outsl sub les cwtl sbb js dec inc sbb inc daa enter gs push pop (bad) enter adc ret nop adc mov mov call jl sub test lock adc int3 test pop loope dec xchg or lret lods add fimul fldcw add ret aas addb and adc push test cmp pop add pop mov xchg add fnstenv inc xchg adc jns pop xchg loopne fs cmp xchg insl mov call andb and cld add int pop cmp mov xchg inc xchg add xchg dec lea stc movsl dec pop add xor pusha mov outsb sbb xor test jl mov push add sbb mov push cwtl mov add add mov nop mov outsb xchg jno in movsb pusha mov add cwtl imul dec add lret lock push and pusha push fildll leave add pop sbbl add mov and add (bad) sbb jmp xor (bad) cli jae imul aam les fdivrs repz push pusha enter outsb xchg movsb pushf push cmp or enter mov add push push leave pop sub mov xchg cmc cmp outsb ds (bad) dec dec push sbb xor ss cmp rolb mov adc mov or push push je cmp add imul loop jl cmpsb cmp test jne and or adc add inc inc fdivl add cltd fdivp add xor std shrb (bad) ds add (bad) aaa jne addr16 sub xorb mov sub dec test inc pop adc (bad) pusha push inc out inc clc jo push add xchg icebp cmpsl iret repnz and test add lock mov cmp add shrb xchg ja add repnz leave mov or sub mov or std push test add sar aam push add icebp push xor scas add mov stos cmp lock inc dec pop lds ret out lods iret test push addb aam ss decb push cltd enter sub sub jae dec sbb ret xor jno outsl pop add pop lods jl pop cmp inc xchg add ret test enter cmpsb pop xor sub fdivrl add std andl les push mov add and jecxz rcl nop sub inc and call iret jo jae lds lods pop mov pop das cmpsb enter xchg xchg dec add jl pop sahf push fdivs test mov jb call ret mov adc std jl aam or push mov push (bad) mov inc aaa mov call push sbb les jp add push dec mov add nop ds outsb ja add jmp jo push mov xchg push bnd sub jae,pt out jo mov mov fistl or js (bad) mov pop pop fsub fbstp sub decb jmp xor xor inc int3 and mov dec add cmp sbb sub and jl inc loopne push lret add lods pop jb inc sbb fadds dec ds or and (bad) mov repz mov dec sbb nop xor lods inc add js repnz sbb or ss dec and push fadds nop test hlt inc addl (bad) aaa jmp faddp pop jmp (bad) sbb jmp imul add mov add ljmp sbb stos notb outsb ror add cmp int3 clc pop add stos les mov enter push mov adc sbb sbb addb push dec data16 mov leave or add xor rolb negl add add or inc scas test (bad) mov inc out or jne cld mov push clc add or andl adc fadds xchg outsw (bad) test push outsl jl add lahf mov sbbb pop cmp pusha push divl andb and shr xchg adc (bad) xor jl cmpsl call add in dec or lds enter loopne and cs mov pop push add add add orl push loopne ret notl loopne cmp stos xor loopne mov push mov sti add cmp add mov pop rcrb fwait dec inc push or enter int shlb pop xchg inc dec test jne faddl iret sti enter or add xor gs inc dec into inc rcr xor cli inc push add test and jnp push mov or mov test scas notb cltd pusha rorb push mov enter popf mov and mov adc pushf adc dec movsb add mov les (bad) xchg add lcall inc or jno jb ret cmp or das or jp pop daa nop dec out call push jg test rorb or data16 inc int shrb out mov lds or out nop call mov add adc out fistp out jg lock repz adc push xchg xchg hlt push sub sub xchg mov xchg inc and lahf add pop or add icebp js push or mov rorl sub inc outsl inc mov pop pop adc repnz push mov inc in add cmpsl out jo add adc xor jle pusha jne jb ss or cwtl enter add aas orl lcallw in adc adc (bad) adc or fsubrs ret jo (bad) add inc mov or (bad) pop push mov mull in add mov pop adc add xor stos add test xchg xlat add adc and dec hlt and and shll dec or nop jl cld dec sub mov (bad) lret sarb dec mov or xor call jg sub xchg add push enter cmp clc dec push cmp lahf adc add fild mov arpl dec and pop push icebp inc nop dec jns or push jno popa unpckhps test xorb jl push pop cmp stos pop std negl jne clc cmc add mov sahf pop notb dec dec scas xchg mov or ret cmp xor aas push cmp push jo or pop adc mov int3 cld (bad) mulb stos movsb xor xor cmp cmp leave mov pop repz enter sub out xchg test add flds pop aaa mov xor ret push gs int out enter pop dec insb pusha insb and push jo pop mov out xchg add add loope call xchg add test add push in jnp,pn fs mov aam push push rcrl add insl and add pop test push data16 mov adc jbe jo sub nop clc pop fisub subb or push push lock push fwait jl out cmp ror clc pusha sbb lods stos pop pop mov lds inc xorb daa es pop adc add bound fdiv (bad) decl int3 movsl adc enter add out xor and and push push add jbe int3 (bad) icebp jnp dec je or scas scas addb push xchg or xchg pop or pusha xchg outsl sti mov xchg in add leave pusha xor or sbb aad lds adc testl pop pop inc adc insb sbb daa sbb xor stos add cmp inc test dec xor pop aaa mov add ja add sub xor mov mov out lods lock push js dec rolb (bad) xor (bad) jnp pop pushf sbb cmpsb cmp movsl and rolb adc jns loopne fcompl jnp rolb mov push fisttp scas pop push rcrl add daa loopne pop dec mov jmp mov dec out or pop mov sbb or mov mov push xchg test mov into adc in (bad) icebp orb rcrb add add stos mov mov adc lds mov std cld imul add add mov or enter or mov testl enter pop imul mov push out adc mov or pop jecxz in push jnp mov or cmpsb mov or sub addb shlb jnp and sub rcll sub hlt test in test xchg mov push and pusha xorb sti incl (bad) mov shrd fdivrp jmp (bad) xor pop popa fdivs inc lods popa sub js lahf mov adc add nop mov test ret or adcb stos mov jge push jae jecxz or aaa inc or into add loope ret (bad) loopne add jnp xor mov adc sub and daa sub lock in push dec (bad) ret int3 adc icebp movsb fs rcrb sbb pop incb or nop into sub or paddsb call mov fsubs icebp pop mov add jne sub mov xchg dec mov cmp dec (bad) and add daa mov jge pop popa popf ds rol lret add subl adc movsb lods jnp dec rorb adc sbb xor add divl mov push shrl adc jmp pop out outsb push xchg mov call add mov pop stos add pushf push int3 mov push mov sbb adc sbb hlt push xor push std (bad) sbb xor lds arpl and js pusha (bad) test pop inc cmp adc es xor mov mov xchg push mov mov lock mov addr16 xor movsl mov or pop jns add add add mov push sub push xor xor test rcrb test fisttp in fs push insl xchg insb or test push leave fdiv inc insb data16 or adc and stos pop negl jmp adc ds cli push mov mov push roll mov mov jae push cld leave test sub and adc jae pop or insb jle jmp loop jmp dec test push and mov mov cmp dec (bad) or xor imul push or mov or or fsubrl loope xchg add sub call dec inc rcrb inc pop add std mov int3 inc add jle jmp push inc daa pop mov bound cmp pop push mov push outsl lret loopne xchg pop cmp adc or ret and (bad) cmc into sbb add jnp and bound loopne push or or data16 jg rclb lret cmc sub mov lock test call adc fsub hlt addl inc dec and repnz mov xchg gs add jmp cmc or or mov lods push arpl jbe pop in mulb (bad) icebp dec fstpt xchg sbb mov test test dec xchg orb xor int scas push push pop (bad) lods xor test mov cmp sub (bad) loopne pop sahf adcb adc jno xchg test add repnz stos add scas je adc stos or sub xor imul push push nop sbb or decb add hlt popf call int3 js mov rclb mov sar inc push addl lods xchg mov add mov xchg add sub mov or jno aad and pop mov adc in pop push and hlt mov idivb popf mov imul push inc pop pusha bound dec add outsb pop add inc mov insl outsl xor imul jge pusha pusha push add inc add inc xchg flds clc xchg lcall pop (bad) push push xor or flds sarl fsubs sbb dec mov in fisub lods and mov dec mov out cmc dec mov xor insl stc or add xor mov pop sub mov jge jne mov test and push jle xchg add test test sub mov jg and fwait mov dec cmp scas or pop hlt jl xchg sbb inc sarb xor dec push jb mov fnstsw jmp adc jns nop loopne lcall push cmc in cmp or add sbb sub mov cmpsl clc push jp dec divb bound loopne das lret test pusha insl add loop stos and enter movsb lock int3 xchg add (bad) mov js mov adc adc add add or add push push testb stos call loopne or adc adc lcall leave add insl pop loop pop inc mov mov jbe adc pusha add lds or sub jnp shll outsb mov mov jecxz mov mov sub add in clc andl popa loopne leave sbb clc je pushf inc mov mov mov adc and dec std in test nop es or add dec sub add (bad) xor and shlb rorb add xor xor dec jnp and lods punpckhwd adc dec or dec pop mov or mov movsl outsl shll and or ret rcr ljmp lret pop push add (bad) es adc push jbe pop orb (bad) cltd movsl cmp inc or or fs imul int3 cld loope and call nop jns sarl or cs mov xchg jno xor lea es mov and and adc je add ja mov leave cmp dec dec push cmovo loopne inc mov ret leave fadd sub adcb test xchg xor cmp ret out dec call (bad) push inc xchg jbe call pop mov add daa ds xchg fs inc and ret mov fldl fs clc lea repnz adc and lock lret push push subb or jno les push xlat cmpb fild xor jmpw fsubrs inc cwtl jne js push popa mov ret fsubp dec inc xchg pop fucomi jg fstp out add dec push fisttpll xor stos lret mov cwtl push inc mov dec xor loopne nop popa dec xchg je dec xor xor mov push dec nop int3 fnstsw xor xchg adc mov dec pop push stos mov cmc dec or inc xchg and pop jo push mov mov fwait roll jne add into sub xor aas loopne int ds rorl xor call inc xor test pop or lods mov pop imul mov xchg lds fsubrp and xor mov push fmuls xchg pushf mov add cs or push jo add pop jae fsubrs ret add jmp dec xchg test xor leave add fwait sbb or mov push add jbe and pop testl js or loope or inc dec dec jle inc and mov leave fwait and lcall push xor or and fwait or add lock rorb sahf xor nop fsubr aad push popa sub pop pushf faddl mov inc xchg sbb rolb ds or sub nop icebp and and fldcw adc jo add jge and nop insb cmp pop or mov imul iret xchg xchg addl lock outsl add cmc adc add imul cmp subb inc mov cltd adc mov cmpsb jnp cmp sub inc stos adc cmp sub out mov mov test and lods sub push adc pop mov jmp and nop mov lahf lods jbe cwtl and cmpsl lods in mov (bad) mov pop mov pop add jbe fsubp lret dec (bad) xchg dec sub aam cwtl xchg xchg adc pop test (bad) cmp dec nop les subb adc inc adc test outsl cwtl rcrb bound or mov shrl and pusha test mov mov (bad) mov outsl loop stos repz xchg mov or (bad) pusha dec popa (bad) and lret dec roll push mov mov addl rol mov scas fwait mulps loope mov sbb mov and (bad) fs jmp cmp nop cmp cmp int3 xchg adcb repnz call mov inc mov addb dec jns jbe ret jne adcl jo add daa xchg mov xor mov (bad) (bad) adc or mov dec repnz dec and or jno lret xchg xchg sub mov sub inc mov xor mov xchg fcoms lcall dec nop faddl xor les imulb es loop stos jno xchg or jno ret xor hlt addl mov pop addl (bad) je imul and jl pop and aaa adc shrl addl les add dec ret pop std jecxz and lock fcmovne ret mov and mov mov lfs hlt imul in scas cmp mov add mov cs movsb outsb aas jbe or mov sbb jae inc stos je cmpl cmp rcrl clc pop mov jecxz aaa nop add mov sbb pop sub mov fidivl test stc ret lret stos cli jecxz mov ret lret lret pop mov lock add mov mov dec push daa mov and adc push pop add (bad) jno jbe into mov sub mov out sbb and xchg (bad) cmp mov inc adc aas add ret inc fidivr jle mov (bad) leave outsl pop jo outsb pusha arpl mov push cld jnp push movsl sub out repnz adc jp enter leave loopne out pop (bad) bound es test add mov adc or jbe cwtl cmp mov jo jbe add push sub jl cmp jo (bad) mov or xchg movsl icebp inc cwtl or pop push dec cmp stc pop jg pusha mov out inc cmp pop xor pushf mov insb pop inc pop inc sbb xchg push pop or in xchg sahf add in test push inc pushf jne out lret add jns loopne (bad) push fcomi push add sub cwtl sbb and movsb pusha sbbb dec cmpsl js push cmp ret adc cltd test shrb pop cld lea nop andb cmp adc sbb iret stos push jge and and rcrb xlat dec (bad) or (bad) xor adc (bad) sub iret pop sbb mov and mov iret xchg push imul and imul adc and push pusha fisubl mov int3 call cwtl pop xlat mov mov mov push call mov or repz xorb fildl fstps inc inc add out outsb sahf pop cmc jb clc sub mov push in stos or mov jne out or lock mov aaa lods and repz lock les dec clc add add add bound add fs loope jg dec xor push add loopne (bad) add aas out or mov nop xor sub std inc sub xchg or sub adc sub imul sub cs stc mov test les or cltd mov cwtl adc cld cs jne cmp push push and adc sub adcb out sbb nop sub jae pop and and adc or lods pop or shll push push mov add inc sub inc pop push ljmp testl call sub add pop test js pusha push pusha scas push dec jecxz rcrb or add sbb stos sbb sbb lcall cmp arpl mov xor adc push leave divb bnd xchg inc cmp je adc add in mov jb cmp add enter test jmp mov loop and and mov imul loopne dec fcmovbe pop sbb mov xchg lock pop iret add jb push or xchg ffree jmp inc pusha pop shll and in inc dec add and pusha test cmp sbb pop sbb xor adc mov xor addb and scas inc mov popa or arpl adc in (bad) and add adc xchg fimull fildll (bad) fisub fild loope mov inc dec popf inc shl pop je in jb push out jp test or mov (bad) cmp test leave js mov mov adcb arpl pop int3 lret into xor cld dec je mov and adc push xchg bound push (bad) fnstenv scas jno fistpll pop out add loop (bad) xchg sbb or pop xchg cmp add mov sub jge inc (bad) adc cmp jae repz sbb enter sbbb cmc outsb or (bad) and adc nop aam je dec (bad) xlat jne pusha das or cmpsb hlt inc rorb test lea bound and and lock cwtl xchg imul cwtl fcoml mov iret and mov repnz add and mov xchg test push int3 add cmpsb in repz push xlat adc sub fmuls xor sbb leave or pusha jecxz add add les push dec cltd add add or add jbe mov imul fadds jo dec or or add push xor out or ret pop shl adcb inc jl insl enter fucomip addb push push cmpsb out daa mov adc nop mov add imul jge incl shr add out adc mov push push mov jge popf adc xchg call (bad) icebp jg repz mov inc xchg mov and add hlt fucomp cmp mov leave xor sbb daa xchg pop sti fisttp jmp loope sahf pop and xor cwtl jns push nop or push mov outsl ljmp add ret icebp cmp xchg mov add or aam fs and adc mov arpl mov sub push inc sbb push add sub cltd mov pop test test mov adc shl in sbb jno js and pushf sub cld test inc lea push push xchg xchg and pop mov in call test rorb push fldl inc dec sbb movd mov xor xchg or adc push les add fnstsw hlt sarb outsl pop rorb cmpb sbb add mov sub mov push push das and lcall lods push adc pop rcr xor (bad) icebp sahf ja loopne jno loop jp dec or out xor mov gs mov adc adc dec mov xchg mov cltd sbb mov jl je insb adc es or fdiv dec in xlat sub dec add bound xorb dec insl mov pop jge push add sub and insb mov inc (bad) bound popa push and sub push or mov stos ds jno adc jnp xorb test pop les mov dec nop stc push lahf test sarl or ret mov das mov dec sti aas sbb push cltd jge inc pop or cmp lcall mov sub (bad) xor addl cld bound add or push mov or dec jo sbbl xor mov xor rclb mov jge bound jle loopne aad pop int cmp or jecxz jne pop xchg mov push loope jge push lods jl pop and mov je jle cli test (bad) out xchg adc add cwtl cmpl fsubrp adc mov add jge mov popa vandpd add ret (bad) dec add and or push or aam pop xor or xchg mov ds xchg mov pop jl add popa dec pop test mov or xor push (bad) addr16 push data16 pop fwait out shlb sbb aad orb lock pushl xor dec popf push movsl mov push pop arpl pusha mov push ja stos sub js xchg add mov imul insb mov add ret cwtl sbb sbb cltd pop pop ficomp dec loop adc adc dec dec gs insb push or and stc hlt xorb and es push hlt orb add popa dec fs add xor and decl mov (bad) mov fcompp xchg mov aaa xchg pop cmp addl loopne add adc xor pop es sbb leave daa les mov loope gs jl dec and add and (bad) lock adc loope add mov loopne repnz or jns inc dec fdivrl mov push adc xchg movsb jl lods pop adc enter or jmp add lret adc and (bad) int3 pushf push and and lret fmuls mov push push pop lods sub mov sub imul add pop sbb rcrl pop sub nop jae ja dec push fwait fs hlt (bad) or cmp std hlt xchg hlt mov and push mov (bad) jmp pusha sbb jmp add mov lahf jle loopne sbb fldenv adc or mov aas les fwait jo jmp call sub out mov imul test lret and in fmull negl sbb dec add sbb (bad) xchg mov add decl add mulb add sub mov stos add lods and add sub and icebp loope xchg add cmp or jno add pop es or inc lods cld addl leave rolb jo data16 push dec adcb and mov jmp sub inc mov enter mov add inc mov add ja jmp enter push or pop lcall adc je ds add rcll mov addb mov lods adc or inc xchg push push je add out jp in gs idivb and frstor sub pop aas lret in jb bound ljmp cli sbb int3 arpl adc add pusha pop sub or dec push mov mov pop push add iret inc dec pusha adc mov or cmp (bad) repnz adc mov shll sub push inc xor or (bad) loopne imul xor xor fbstp pop outsl add (bad) mov (bad) jno ret (bad) ss jl xor mov adc (bad) and push xor or enter shl inc add mov shrb jle add das sahf xchg movsb jns andl test cmp (bad) jbe aas les inc mov add (bad) or jp mov test pop dec jb add into inc cmpb aam push mov pop adc pusha int3 jmp lds mov loopne scas rorl adc sub addr16 addb sbb sub add push aad mov cmp call and sub push sub test nop or lods cmp rorl inc adc test addb (bad) pop jne loope sub imul lock push mov cmp xor popa inc in div cmp xchg inc mov es adc fisubl dec cwtl or add mov add ret out and inc fiadd xlat (bad) pop mov cmp jbe cmp loope dec pop jo sub cli daa cmp stc nop les cmp sbb aam inc push dec fucomip sbb cmp push dec (bad) call scas and flds ret inc fldt cwtl ja add xchg call das jle cmpb and bound cs mov andb es push fildl add pop sub push popf lcall popa sbb mov push insb addb cmp cld and xchg dec push and jecxz adc and sbb ds repnz add sti sbb lahf das push ss rorb je stc jbe dec inc test add adc push xor jno sti loopne inc sbb dec push aad xlat dec push xchg test ret dec sar out popf rol ja or imul fist pusha cwtl stc or dec xchg or fldenv mov pushf (bad) iret pusha js sub cmp cmp pop jns cmp push add push mov push push push adc and ja mov loopne pushf or mov and mov fadds imul add or or nop pop adc add add and push cmp lock bound nop movl lea rol cltd enter fadds xchg daa dec and dec jne sbb sarb jae lods or and xchg call lods pop rorb add inc sahf das xor lret inc loop repnz or jbe das jnp jns rol add aam leave push and push mov cmp jae in xchg sbb pop nop stos jmp jae cmp clc mov movsl in cmpsb int3 jl push mov sub and pop mov push fistp add lea loop xor sub dec jl dec in iret or testb lcall mov mov inc aam jo pop xchg xchg mov les loopne and (bad) loopne jge push mov xor std xor inc add mov jnp pushl pop imul adc lea out repnz popf aaa add sbb out adc hlt xchg add add xchg icebp or aaa mov push popf jmp and movsb mov rcrl sbb das pop fild sub push jg aas fadds inc fs aaa (bad) dec jns adc add iret pop shll add shlb fsubrs sbb dec or rolb loop add repz sbb add iret xor xor adc sub and les push rcll faddl dec (bad) movsl fwait and inc dec gs xor cmp (bad) in (bad) cmp adc fbstp es sub inc pop inc sbb pusha pop inc xor sbb inc mov (bad) mov insl leave (bad) insb jb rcr adc out sub jg loopne pop and pop cmc dec aad and adc cwtl dec popf xchg inc lcall or fs xor xchg mov pop pop out xchg aad hlt stc add xor fldcw cs push inc adc push add clc sub rcll movsb lea andb xor pop add pop mov cmp mov scas add popf add push dec (bad) adc (bad) gs fsubrl fadds dec stc pop das movsb (bad) icebp pop mov inc or fdivr leave sub push dec fadd mov das testl pusha (bad) inc pop loope and or leave rcrb pop cmpsl adc or loope and mov hlt int3 add push add sbb or shrb or xchg mov sub jne xchg pop inc sbb out sub pop inc cmpsb aam inc cmp or sbb cmp xor mov scas mov push sti cmp push movsb push jae dec inc push inc pop and push mov mov aam test pusha or and lods cmp or mov mov cmp cmpl (bad) (bad) mov inc jnp in add insb js jg or xor add mov xlat sbb testl test push pop js mov pop xlat cld xchg mov out cltd add rorb testb xchg xor xorl add adc (bad) rcrb rol pop in xor nop xor fsubs dec pusha repnz mov cmp sbb cwtl push aad push nop ljmp xor fildll inc aam xlat sbb fisub xor cmp cmp dec or xlat xor xchg mov xchg test push aad mov dec pop enter (bad) das sub mov shll cwtl inc adc ret and mov (bad) mov movd fidivr (bad) je or fbstp sub adc (bad) loopne mov int3 add and data16 ds inc fnstenv mov addr16 sub fstl jno stos movsb dec jo inc xor lods mov xor cmp rcrb pop lds lahf notl adc xor daa cmc mov add dec lret add in mov cwtl test cmp pushf das jge jo (bad) mov dec aam inc in dec clc ret sbb dec addr16 or push rcr mov and sbb je repnz ror fs sub jo or mov jnp mov xchg aam push movsb add imul add xchg loope lds pop pop jae dec loopne popa or fidiv xchg add or cmp push enter and sbb test dec inc mov loope or inc andb sti in mov push lock in test imul inc jp std frstor sub or call xchg cmpl imul add mov je adc mulb xor dec lea cmp dec cmp andl push or inc arpl push xchg stc sbb loopne jo out mov fs push add sbb js pusha repz xchg pop push sarl xor sub sub fildl sub (bad) rclb add cwtl mov add xchg inc push pop (bad) pop pop or loopne addl ds add in lods adc movsb inc dec rcrb movsl push jne int or fnstenv pusha jnp or lock cmp je cmp mov sub lods loopne test add dec cmp jno push ret je add jb shrb push inc stc add push ret mov pop jnp sbb cmpsb lods xchg jl mov daa ret out rolb sbb pop dec dec or test fcom pop jne xor call add std stos out sbb cmp jb je stos sbb sub outsl mov shlb lock stos lcall aam add sub test jl jmp ret divl cmp cmp push jnp push in mov push out repnz add insl add jnp sub into push xchg sbb lods push (bad) xor mov lock xchg rclb dec mov dec cmp lcall push nop nop add pop (bad) lock mov stc rcrl mov (bad) or test dec adc ret cmp inc push in setns rcrl scas inc mov fsts and lods sahf dec stc sbb dec stos clc xor xchg (bad) mov shl mov cld stc and popa rclb xchg clc icebp loope jmp in push cmp mov or les and mov test lods or or lods jmp push xchg dec cmp add out push mov lods pop xor jae test pop or adc adc push mov int3 jmp test pushf inc fcomi shlb test lahf fistpll xchg xor dec sarb cmp xchg xchg lahf iret xchg xor pop or fs dec mov sub push xchg cld sbb jns imul cmpsb cmp mov pop fwait aam leave pop call pushf pop pop inc call fmuls rcr mov push in rorb or sbb mov leave add loope or sub mov out xchg fwait mov push or and cmpsb mov sub rcrb and push rcll mov inc test or ja and and nop add cld lds test sbb pop adc push (bad) ss add movsl rolb adc mov in mov xor call fcoml cltd xchg aam or data16 or sbb sub lret push icebp popa movsb pusha clc cmp dec bnd gs and push mov mov gs pop (bad) popa movsl frstor add mov cmp add and mov or xchg cwtl adc xor sbb pusha and xchg push mov pop (bad) (bad) mov repz rcl and call insl (bad) mov loopne sub fs dec andb push jbe lcall mov aas fadds sub pushf push cld loopne mov xor jmp dec call mov pop push js mov sub push or push nop aam and jecxz scas leave pop fs cwtl test das mov pop ret scas out xor sub jns (bad) rolb cs call fild js dec inc jae jns cld adc dec lcall loopne add ds call inc test nop xchg jmp add jo out nop mov fwait lods and rcll sarl das and mov and in mov push dec mov testb orl xchg int3 sbb sbb (bad) loopne sbb xor loopew das (bad) jno adc pop lock adc jl mov sub cmp or push loop xor or pop sbbl arpl push mov mov cwtl subl add nop loope add lods arpl or jl std stos xchg sbb jl add out cld insb cmp adc add (bad) cli push push paddusb popa in push pusha jl repnz sbb jge sub adc sub or es pop popa test mov dec nop aas das stc mov push jae jl or mov and test ds push out and and jecxz xor les sbb pop js jge addr16 (bad) push jl mov inc inc call cmp or rorb les jmp sti into mov clc xchg ss test in ja arpl shll ss loopne push add pop cwtl sbb xchg stos xor jecxz mov xchg or movsl mov lock pinsrw pusha inc lcallw hlt pop lret xchg jge xchg pushf or mov push inc adcb aam mov nop mov loope test cmp push movsb lock iret pop aad hlt or dec or call adc mov addb lock lds (bad) sub and xchg fadds sbb xchg sub add leave sbb je cmp push popf in adc fsubrs dec lret push gs out loopne add xchg std inc cld xchg mov (bad) dec add and ror xor mov xchg js pop pop mov arpl cmp sbb (bad) add pusha (bad) pop adc mov push pop dec je adc mov add and addr16 sbb icebp and cwtl jmp jo inc js mov (bad) enter roll dec cmpsl or jge jno mov leave (bad) pop sbb subb bound and mov inc es or and dec aaa movsb loopne jbe das fcmove push popa out cwtl mov shrl jp (bad) bound lods nop sbb inc sub js push add addl lods in pop (bad) jecxz stc xchg call popa js inc cmp fdivs arpl testl inc xor rclb cmp popf test mov sbb mov dec push mov sbb xor es add mov stc xchg xchg mov xor mov stc pushf pop add xchg xchg rcrb cmp push push lcall xchg mov clc pop punpcklbw fdivrs js rol fs arpl adc sbb inc cmp ret je inc add mulb jge sahf and jmp arpl or mov adc inc mov add mov xchg lds or dec ror and cmp int3 cwtl push leave xor aas frstor cmp cmpsb push cld mov loope fwait mov xchg test xor sub ja scas dec sbb or dec mov int3 add outsb loopne vpackssdw call jp xchg sbb mov and loopne outsb add inc mov clc pusha push inc lahf ss add scas cwtl in in dec dec dec clc shrb fcomip add dec loop data16 cmp sti (bad) pop sub inc push xor cli and xchg es repnz test adc inc push lock or mov data16 jae das add inc inc xor lds movsb or inc aaa xor popl dec sbb in cmpsb es js add jg sbb inc dec add in push rcrb xchg cli adc mov (bad) jmp mov in pop es dec test add ror pop das or aad jl push cld lret (bad) mov dec enter out add adc mov nop mov lret js cltd xchg cmpsb faddl add adc jne push les js mov orb movsl add dec mov add lahf pop adc or addl aad sbb mov inc movsl push mov xlat and loopne int3 add adc js movl arpl inc mov add cltd sub in add mov dec cltd mov in out mov push push and fisubrl adc cmp inc pop mov movsb lahf or add mov lcall pop arpl sbb in orb inc xlat out test scas cmp aam shr cmpsb push dec test add add jo in mov cld xchg jae sbb pop icebp sbb sbb mov and jge hlt adc rcrb adc sbbl adc add push cltd xor cmpsl aad cmp sbb cmp scas fnop pusha dec add out add mov push lock add fimull in inc sub cmp mov mov sub (bad) je sub in jo mov cli adcb mov mov loope enter mov mov adc (bad) aam orb sbb into call stos xor es fcmovne inc dec cwtl cld xchg aam in mov fldcw dec sbb and xor jb outsb mov mov mov push mov ja inc pushf xor (bad) stos adc rcrl jns and and jb push and idivb loopne cmp insl cwtl ja add mov or rolb cmp (bad) repnz jl cmp add sbb cmp xor cwtl mov mov pop pop push push dec cwtl xor (bad) stc idiv jp lods or pushf lock add in sbb and xor subl shlb repz cmp dec pop adc sub (bad) and stos lret sub pop fs xor sbb cmp clc (bad) inc stos inc sbb leave data16 push adc mov lea dec pop add test sbb (bad) sbb or test adc push repnz add adc sub rolb (bad) jo dec cwtl enter sub mov outsb xor push int cmpb adc sub cmp loopne call mov xchg fcoml ja push inc sub (bad) scas jmp (bad) adc mov mov sub hlt add adc jecxz (bad) loopne jg and add fnstcw pop dec mov pop jae enter cmp and jecxz add xlat lds daa sub add dec bound mov adc jge mov jne into mov (bad) lock and jl imul clc jb xor leave xor out xor or push (bad) sbb sbb mov out push sub stc mov aaa mov gs push cmp adc mov add add cltd out cmc fadds (bad) rclb pop mov stos stc add dec lcall xchg insb and jl jne (bad) and popa pop or xor adc loopne add and mov xchg push in sub sub sub jge fldenv or push lods mov xor adc push sub mov push nop lock add xchg inc inc imul pusha inc or sbb or add xlat sub cwtl movsl push push xor pusha into sub and or add jbe sti jp adc stc sahf mov popf jns psadbw insb pop pusha mov sbb ret adc xchg sbb push shrb mov lahf and rcrl ret sbb outsb adc mov jle sub inc fdivl (bad) enter lods and adc jae add pop sarl mov (bad) cmpsb cld (bad) xor mov add add insl popf inc notl insb adc jne popl lea out lahf or xor cwtl dec test insb in jno lds inc and jl pusha pop xchg xor push add (bad) mov inc pop shrb and scas outsb add mov mov sbb pop cmpb pop mov add icebp xor lret jp and arpl mov subb sahf cli test pop add push add movsb andl pop push xor mov rclb fistl pushf lea dec cmp mov adc test adc mov sbbb sub (bad) adc jp jl mov mov add jae ljmp and inc mov inc cwtl cmp shlb dec jne cwtl adc fstps arpl sbb xchg dec lds out cwtl ljmp lock xor les mov sbb flds push xchg inc jl mov xchg out cwtl inc out dec sub mull nop or (bad) xor pusha enter adc addr16 mov dec lods icebp push adc cwtl sbb mov cltd mov (bad) dec les lds push pop adc movsb and arpl lods imul inc shrb or and or or xlat ss fdiv jo lods mov int cmp jnp adc ret mov mov cmpsl add (bad) mov or stc test or adc add (bad) pusha dec inc aam sbb test js imul les xchg inc std sub and cmp fisttpll movsb jge test adc mov call lahf mov loop jl pop push lods jecxz test adc push xor out xchg xchg and or jo test xchg dec nop test call inc pusha push ss and push push add mov push lods pop add mov rclb pushf mov sub dec mov lds xor les xchg or stc stos rclb sar in mov mov ret and xchg cmp add push mov addr16 sub mov test sbb test mov push stos jmp enter mov xchg test cmc jmp adc int3 cltd mov dec (bad) sub mov fdivs jp das jno jmp sbb add dec lret mov mov aaa xchg dec cmpsb mov jl or dec les hlt add jmp pop mov cwtl lock in or in push addb jp inc in push cmp and and pop shll call pop icebp sbb sbb jge ds mov inc jbe or mov clc lock sub add out dec mov cs test adc adc mov mov dec repz and inc loope mov push nop test mov cld dec push rcrl bound dec dec scas nop add lahf outsl ficoml mov je add cmp push pop mov invd push dec mov out aam and test pop aaa sbb and add dec movsl cmp push add es push push inc jge jno or les mov iret xor add lods enter mov or cmp das xlat xor sub inc addb and pushf pop and or dec and and stos movsb push cmp jle push gs sahf fadds inc xchg insb ret jmp add roll and movsl insl nop dec sbb push jnp andl sub inc xchg cld call adc test pop andl stos sbbl cmp sbb and add cs das enter test sarl xchg fdivl sarb mov and sub pop push je adc rolb and sub mov js test ja jl call mov mov dec out test jo subl pop add push test ljmp and test or ffreep jecxz sub inc inc repnz rorb jl pop sub mov mov ret repz push in add pop movsb insb add outsb cli mov test loop adc movb aas sbb cmc xor sbbl xchg lcall mov xchg rcr cmpsb lods add out cmpsb call clc push mov inc inc movsb icebp cld leave cmp daa sbb adc push popf sbb sub cld jg idivl pushf test add xchg adc lods insb xor mov adcl lret adc arpl mov pop pop rorb cs inc and or xchg mov shrb or nop lock ds push fstps dec pop xor lcall sub or add shll movsl das pop out jmp jno jo clts mov ljmp jns add pusha sub rcrl mov sbb sbb mov fsubl sarb mov add lret je inc push dec xchg xchg push pop daa xor push jge sbb pop js pop stos or mov lock scas xor xlat xor jecxz mov dec add pop stos add sub adc and adc (bad) into dec int pop out and xchg mov imul cmp pop std pop (bad) xchg mov es dec adc lahf mov fsubrl and pop ds (bad) xor inc movsb pop fild or je inc imul mov cltd std push inc mov pusha enter xchg pop cs xchg ds xor sbb call (bad) in adc xchg mov int3 push mov add jmp mov daa movsl adc mov add insl pextrw add roll jmp loop orb (bad) and cmc pop add icebp lea test sub stos sub loopne dec std insl adc fs insb jmp lods jb jl rorb out aam call mov iret and mov dec push cld rorb sbb arpl jecxz xor enter in loop js (bad) sbb sarb and and movsb repz pushf les sub mov lahf (bad) mov mov sub leave out xchg nop in test mov movsb push jle sbbl popf push (bad) jo fadd adc setbe push inc (bad) cmp clc scas jns clc and add shrd fwait adc movl das fs add push jl (bad) repz mov add lea clc sbb fdivrl pop sarb push jbe pop fwait and add jecxz mov dec xor cmpsb add jecxz xchg push dec sbb js cmp popf cs gs adc add xchg dec pop mov and pop inc mov fidiv adc (bad) fsts jb je add adc and dec mov cld call cmp cmp arpl adc inc movsb popf insl add stos idiv push pushaw ljmp flds les push (bad) hlt push fstps test pop fsubl add insb jbe frstor inc add jae je add mov mov pop dec or inc data16 push dec push sbbl mov insl and mov cmp mov mov add sbb mov mov mov shl pop jl or mov gs and (bad) or iret dec cli lea mov and push sbb sub or lea xor outsl sbb mov sub out add dec push adcl dec inc pop mov mov pusha mov aaa adcb mov and sbb les ja fbstp das add xlat andb in mov or cs (bad) mov inc daa cwtl cmp mov add dec mov pop cmp pushf mov lret inc hlt popf subb shll cmpsl dec hlt add hlt fadds test jns add js jae mov incb pop add sub dec dec in adc mov jne jg lea sbb bound inc out sbb add jae cwtl cld in fnstcw loopne add inc and jg leave sbb jns (bad) lods cltd inc adc dec cld in mov inc push inc xor mov insb inc cwtl shll dec popa lea xchg cwtl jo mov dec lds cld fwait xchg push test sub jge leave inc jno add hlt sbb icebp icebp stc and push rolb lods xor adcb sbb adc mov xchg push lock cs loopne les fcomps nop sbb jne iret mov inc fsubs rcrb jecxz addl jns lds fsubl orl pop mov fisub dec movsb adc inc jns inc lods add and dec sub push cmp cs shll int cmpb mov mov push lods lds add adc in pop rol or dec xor xchg jo mov sbb (bad) dec inc sub dec push mov jecxz xor sbb arpl je test loop lds nop push mov jo outsl je add pop sbb push xor sub and xchg enter lods pop mov fbld xchg mov push sub call pop cwtl shl icebp (bad) sub clc je dec pop adc wrmsr ljmp inc adc ret insb mov ds sub xchg adcb test sub (bad) sub jmp sti orl jge dec inc cwtl dec lods psrlw sub sahf je ret aam adc mov mov dec rcr jne xor xchg in cwtl out xchg je call and fist ja mov dec sarl dec pushf pop dec loopne or cmp add push push adc cltd mov loopne sti nop dec in push cwtl add stos jp mov xchg ss xchg hlt or or jo mov mov adc ret gs lods add mov out adc jge sbb pop jl (bad) pop ret mov push cwtl fadd enter movsb or sarl mov test stos jl xor adc mov mov jmp call cmp or xchg addb pop jo xchg and and icebp test adc push or jnp inc push test ret jecxz mov push jg jne add or cmp lret sbbl pop or bound push jno mov incl cmp mov jle adc push sbb cmp sbb js mov dec (bad) and and cli pop fwait xchg cld movsl xor pop stos scas cwtd les jg shrl adc sub sub std dec fdivs adc mov add add lods xlat add or cwtl mov nop mov iret pop out std jl sbb xchg mov mov nop xor mov xor gs xchg bound js jo mov jne jp in mov imul cld (bad) (bad) je xchg or adc fs pop stos jo loop pop out push les adc jae inc xchg sbb outsl jns idivl pop fsub push popf rclb dec pop dec mov jbe imul ds sbb lret cmp and fwait and pop scas or fs dec rcrb sub rcrl xchg outsb test jo push xchg sbb add fwait andb repnz add nopl mov fsubrs sbb xor pop lcall test jne inc adc cmp mov loop lea es cmp pusha xor call out add add sub mov mov sarl call adc xor sbb hlt rcrb dec and xor or ret mov push xor popa inc dec in movsl dec mov and adc jns dec mov (bad) push loope into add push hlt and mov dec push add sbb pushf jb add pop ja cli mov dec adc lock xchg cmp jbe push mov out mov daa js ret inc lods push inc mov mov add mov test rorb lea (bad) je icebp aaa imul add mov fldl daa dec push xor dec das and cwtl js fisubr or xor pusha push or push xor add sub rolb push mov inc lds inc les repz mov jae xchg outsb jo popa sbb js jo mov add fisttpl in and loopew push xlat fneni(8087 xchg push add dec int3 inc std jmp sub sub pop push roll leave in int3 cmpsb arpl call add jbe add enter int3 roll sub das dec pop adc js add (bad) mov adcl sub int3 ja lcall faddl push popl dec sbb mov add sbb loopne jmp (bad) fxch clc fsubl sub (bad) sbb jnp in fcmovnb test jae dec (bad) cwtl or ret rclb xlat mov mov in lock insb pusha popa dec mov and inc incl (bad) sub loopne loope lock inc int lods cmpsl lock mov mov sbbb xchg mov jno shlb dec into insl push int3 push adc sbb cld add sbbb iret dec push add stos (bad) adc or add roll adc les adc ljmp lock jecxz jle insl push repnz pop adc xchg sarb adcb xor sub loopne popa sbb dec neg adc push arpl or mov mov sbb int3 cmp fwait leave faddl pop mov and xchg jo repz je nop pop sbb mov or push push movsl das imul (bad) and stos mov lcall je pop sub jmp mov jmp fistpl popa pop sbb andl add out cmpsb pop and inc addr16 (bad) js pop fs jmp push cmpsl sbb je dec pop test cmc stos cli sbb cmp in jno dec sarb popa cmp cmpsb inc sbb hlt adc adcb sbb jle call push add arpl add stos aam push add insl pusha dec rorb (bad) in arpl or sarl push sarb xchg jle jae cmp add xchg call sbb arpl mov lea (bad) insb jmp sbb std adc xor fs shlb jmp mov mov sub adc jp mov xchg cmp mov push or icebp jno adc mov mov mov leave faddl mov or and cltd fiaddl or pop jle mov xchg add nop pop cmc adc test shlb repnz sbb or add movb push in test or sbb adcl dec fidivl sbb test inc test imul rorb or cld mov mov (bad) sbb call pop jg mov (bad) mov and dec pop imul jp gs addl cltd out jbe inc pop je test inc jne clc xor mov sbb cltd and mov (bad) adc pop and sub test cmp mov push outsl repnz in lock loopne gs inc jns (bad) mov out lock xchg and call and nop sbb in shr xchg sbb in and rorb rorl cmc pop pop shlb lock adc inc pusha and mov add pop xchg addb push in rolb gs xor ret mov je mov mov add rcll lods pop loop push lret test jmp rclb data16 pop xor or mov dec pushf mov add push push add je and dec aam cltd add stc fidivl fmull push icebp cmp mov leave mov inc xchg and cmp jmp hlt in pusha cld mov push popf sbb adc sbb add loope int nop lods lds aaa sbb adc jne jp adc inc jge ss xor rolb in insl push jecxz ret xchg mov add pop xor sbb mov adc jecxz aam lcall add xor inc ucomiss pusha push aad hlt (bad) fbstp add popa loopne adc dec push movsb inc mov add pop adc dec cwtl pop shrl dec out sbb push add les ret clc and push je sbb sbbb xchg pop cmpb or test jmp pop sub pusha cld or stc push xor adc icebp adc lret mov mov inc pop xor sbb add int mov mov xlat mov add cli jg push subb sbb adc push (bad) or mov cmp mov sub iret add add or pop push stos leave fstpt push popl push fimul sub js or adc test sbb or out in mov add push mov cmp push xchg inc (bad) mov fisubr push lods dec and inc dec push mov pop or sbb add notl movsb add adcb jp addr16 pop arpl fmuls dec (bad) and xor and repz jmp pop adc sub rcrb pop (bad) dec enter mov addb mov sbb fisttpl jns mov (bad) jecxz dec call int lods push mov pop gs sub inc and jecxz mov adc xor add push push int3 adc adc mov nop fstl leave dec imul and mov mov std push mov and out rolb adc fldl ss cmpsl mov popa loope jl xchg rolb add pusha jp add loope int mov adc dec ffreep cmp add jno add mov cli jp mov add mov mov cltd sub jae sbb aam loope hlt loopne mov and enter dec scas add sbb insb and into pop mov pop jb inc enter add (bad) cmpsl add cmp xor sbb jge mov mov int xchg sbb test je inc mov shll dec sub gs nop and cmp dec and in dec sarb mov push sub lret into andb mov jnp dec hlt push imul pushf mov and addr16 pusha adc jns int cld adc adc xor jg mov add jo cli push imul mov (bad) incl into loopne inc sarl add inc adc lods dec mov sar rolb jbe sahf adc icebp adc inc add fstpl pop das pop push (bad) mov dec arpl sbb in push lds sbb sarb test pop popa ljmp dec jge mov add cmp fadds fsub fidiv add mov fcompl adcb fimull mov lds pop mov sub pop cmpsl loopne pop mov (bad) sbb pop sbb in insl mov cli stos outsb sub push pop add enter cwtl sub data16 mov pop stc enter or xchg jl mov mov insb adc add xor lea outsl negb pusha inc jo add xchg in jne jp movsb inc fs ret test jecxz inc dec push cmp jnp dec rolb pop loop les aam cld add or test movb repnz mov dec adc lret adc mov movsl loope mov push jmp mov jb cld dec dec xchg mov icebp sub int3 adc pop pop stos leave int lret clc ret pop icebp dec roll clc adc pop into out mov xchg movsb cwtl push inc aas cmc push sbb in or subl lds mov inc (bad) or adc pop ja add xchg ficom push adc inc loopne jo adc sub xlat mov mov and push adc sahf lock xor xchg sub lcall subl lock (bad) shl dec adc push or mov shlb add and adc mov scas sbb popa in xor bound out hlt jns add xchg add cmp pop rcrl faddl cli loopne and (bad) mov (bad) cmp mov dec cld jne adc mov sub movsl hlt adc das mov push call repnz ret (bad) pop cmp test sbb nop adc sub pop pop mov sbb into pop xchg in fs mov xor jae mov add cmp into fcmovnb mov jo push and in ja insb mov movsb movaps sub (bad) fsubl dec mov xorl adc sarb jo cvttps2pi aam mov movsb add pop pusha fidivr mov fs sbb mov add pop adc lock je les mov push movsl inc addb rol add (bad) mov and mov and cmp test ds mov or fistl or test mov loop push lock lock xchg ficoml adc flds cmpb mull sbb shll add stos mov add js ret movsb test inc and add adc dec aaa and gs cmp add pop pop test push push es xchg pop pop xor jecxz pop sbb inc inc scas clc sbbb out stos hlt rclb xor mov jne iret js add pop lcall sub inc and mov sbb or jmp sbb lret add cld cmpsb loopne cmc xchg mov fsubl xchg push sub dec movsb clc inc add mov out je test out mov xor out icebp iret dec or test push pop ror jg pop rcrl rclb mov iret cs cs and mov ja mov mov ret rol inc jl adcl and in fucomp xor or int sub arpl inc sub daa adc mov pop inc add roll jno add fsub scas test inc pop test pop fbld pusha mov xor inc mov in paddd pop or adc fwait aam xor mov imul pusha fiaddl pusha test (bad) outsw sbb sub and loope or call add mov adc punpcklbw in leave adc and pop aas (bad) xchg mov push jmp sbbl add shll pop push call and imul (bad) sub add push fldl jp push mov js or nop sbb sbb xchg fadds movsl cltd dec imul xor adc (bad) leave sbb lods pusha call es je (bad) mov mov mov movsl sbbl mov jl dec ret adc add xor hlt insb jbe dec bound loope in pushf xor es pop dec add shll lods adc jns bound dec in in frstor push inc mov dec inc daa jnp and lods cmc int stos nop icebp test jecxz rcrb jne sub lret aad enter es mov shrl jg cmc mov enter push sarl cmp dec pop or psubsb fs pop mov jg mov in jp push xchg dec popa in aad psrlq or or (bad) sub inc je adc insb sub push ret xor repnz jo repnz add mov out push fcmovb decl adc mov xchg and gs in xchg adc sbb ds clc sti cmc and and movsl cwtl cs cmp mov or (bad) lea or mov push js add adc xchg sbb cli movsl inc orb std icebp (bad) (bad) mov (bad) adc movsb arpl sbb fdivrl cmp int fdivrs sbb hlt call inc pop je xor jno sub cwtl adc xchg cmpsb push call add add subl push dec arpl lds sub ljmp jns jno push mov rclb dec sub popa adcb push loopne add in or dec xchg push sbb mov jge sbb pusha push nop stos jo sub add addr16 rorb push inc jge popf ss test push adc mov and daa ljmp rcrl add mov mov lods imul cld sbb push push mov clc faddl aaa pop lods adc push xor push arpl push bound sbb dec mov push test cmp and enter stos test pop call sarl pop addr16 mov int3 mov add or push jno cmp cwtl pusha imul add and clc sub sti pop add jp dec mov ljmp in and je in cli pop inc test in das pop mov addr16 jo or in int mov hlt clc sbb cmpsl sbb fmuls or daa mov cmpsb in jns mov mov pop (bad) pusha cmpsb adc sub adc test push jl mov jnp add push ret mov mov (bad) xlat into sub cld mov pop mov dec std pusha and xchg or into push sbb leave mov adc mov loopne in dec loope flds push loopne,pt sti loop cmp dec (bad) pop mov aas or in jl sub jecxz add sbb ret xchg popa js out or cmp addr16 mov and lds add cld in fldenv or in loopne jno add adc inc (bad) cmc mov mov dec push sarl popa test xor mov mov adc int3 mov push loop xor data16 dec sarb enter pop rcll lock xor test test int3 or inc adc std aas xor sub mov movsb pop orb mov or xchg stc xor and mov pop lret (bad) mov aam jle inc xlat or and push (bad) jo cwtl push push or pop adc bound dec sbb subb mov jmp loopne test shll mov dec hlt inc dec inc xchg imul inc movsb ret call aad inc pop hlt push and shlb pop mov mov loop mov fiadd adc mov pusha mov (bad) cmp adc sub mov lret sbb pop sbb jbe (bad) push daa jl add jp mov popa cwtl xchg dec test inc lcall incb adc dec dec fiadd in inc mov pusha pop and lock add push cwtl and sarb mov mov test fisttpl inc add mov mov mov dec (bad) fiadd dec ds add push lcall dec pop pop mov add mov test mov imul dec and cwtl sub loopne test add (bad) rcl sbb mov frstor lret xchg loopne insl or sbb mov in jo and mov fs mov addb test jl movsb push adc mov dec inc xlat xchg mov inc and xor aam xor sbb lahf sub shlb cwtl mov inc inc sbb mov adcl sbb int3 mov cmp sarb xchg test out jmp lock xor arpl add (bad) es mov dec cmp mov fdivl adc in jne sbb push adc lds jno lock loope sbb int3 mov out movsl inc pusha cld jg add pop or add push pop mov clc leave loope mov sub addb add lock lcall ret ds inc mov mov add fstpl enter push fisttp xor out jecxz leave and andl jp test jge jl xchg fildll cmp cmp notl jl shrl je push adc xorl lcall sub and xchg push add xchg adc cwtl jl push (bad) std xchg into xchg int3 cmp test shrl mov sbb or call xor sub loop (bad) (bad) xchg nop add ret adc fisubr lods sbb add jmp cmp outsl cmp incb sub push mov loopne (bad) inc in sbb testl mov pop outsb cmp xor sar in jmp ljmp rolb call mov add mov les xor xor sbb add add xor stos fnsave xchg stc adc jne int xchg mov out sbb ja sub (bad) fs push and pushf dec cmpsb out push add xchg cltd xchg int3 sub mov mov sbb pop xchg sub xchg enter scas cmp sbb xchg cli inc aam sub daa fdivrl adc or cmp dec fcompl and movl or jl addl idivb icebp sbb push xor jmp stc mov lret sbb add xor push xor pushf stc dec clc lea sbb popf addr16 int mov in pushf sbb fisttpl pop xlat lea push aam lods mov mov or addr16 (bad) adc dec mov scas sbb call mov dec or and cmc mov pushf sbb xor rorb inc jo xchg sbb fdivrs sub or and xor in repz lds int add in add iret add cmpsb loopne cmp jae mov sub xlat xor js in insb push push orl roll mov int mov test rorl sbb (bad) push ds mov flds loopne sahf sbb mov jb mov arpl test mov cli fwait mov and cmp pop xor sbb outsl inc subl push mov mov mov pop sbb xchg cld push push jbe xor or ljmp or adc jno inc add data16 subb fcmovu add negb pop add dec scas or daa xchg imull and sub lret sbb call sbb or std sub popa sub and stos pop cld and xor adc and sbb and dec lods push mov (bad) and fdivrs jo xchg inc mov jnp js testl sub aaa pop pop (bad) fdivrl loope xor mov jl mov add ss sahf (bad) jno push stc mov xor and xorl xor mov loope or xor ja sub jmp inc scas inc mov and loopne addb pop cld dec out (bad) sbb mov add sub mov and jg rep es jbe add roll and push add pop in es add ss clc inc hlt push cld cmc sbb (bad) aam add js and pop nop push daa bnd mov testl repz in add cmp mov xor out popf inc adcb out add xchg add add nop push or dec mov insb dec aaa and loope add inc sbb xchg xchg push rcrl jl,pn sbb add test cld lock rclb xorl cs lock rclb in and inc pop pop mov inc mov jl sub scas cld sub mov adc popa nop js and ret test mov faddl dec xchg push push push add addl mov dec js and decb inc mov cmpsl adc sub gs and cwtl mov out dec pop dec add aas and pusha ret xchg mov loope fucomp (bad) xor lret mov mov and cmp or les inc rorb imul dec punpckldq pop lcall insl cwtl cwtl sbb cwtl mov mov cmc jle xor sbb pop push (bad) push wrmsr popa mov sbb fistp sub call push or roll fsts pop insl add adc orb jmp test out cli cld cmpsl sub xchg sarb adc or sub daa add subl cmp mov jnp xor idivb sbb rcrb je mov mov or xor enter repnz jnp dec pop into mov and xor out aaa and adc pshufw add sub stc subb xchg sub arpl fsubs and xor fist in lds and dec cmpb or jmp stc adc and inc (bad) dec pop orb fsubrs push int adc test mov lods or inc call xor mov hlt fwait mov out sti add pop and fisttp in outsb push dec cmc mov sahf cmpb inc inc adc loopne xor cltd scas pop pushf push sti test xor ja xchg adc adc mov cmp mov xchg lret mov ds mov add loopne mov sub js pusha inc adc push hlt pop and or pushf das or addr16 (bad) (bad) clc sbb aas sbb fsubs aam push sub and add dec daa out push pushf sub sbb (bad) loopne inc shll mul lods and or inc inc js adc div add insb aad pushf ja mov jl jno jl or lock add movsb (bad) push mov in popf enter jne add test repnz es hlt or pop loope and repz je cmp jbe stos subb (bad) fs sbb adc out cmc xchg js dec call sahf mov sbb or loope shl mov add scas andb sbb inc push inc mov and mov packssdw inc (bad) int3 mov mov add aam cmpl sbb jg nop xor (bad) les dec scas arpl or inc js in cmpsb in and xor or cmc add lret mov loopne sbb mov out call pop pop cmp mov push mov pop call js pop (bad) clc test in inc (bad) push popa mov enter and rclb mov adc pop cmp xor push cmpsl mov jae pop ja lret in test jle add mov jmp or xor iret adc adc (bad) fidivl adc jns add jmp push adc lds js and push mov pop test add pop cmpsl je (bad) out sub mov aas sub sbb sub pop dec emms loopne aaa mov das sub js in adc and add cmpsb xchg shrb xchg pop push addb clc sbb aaa popf sbb imul lcall jo lahf cmp or in fwait scas enter mov xchg sahf out fimul daa jne push inc push mov xorb test stc mov add fprem dec sbb jmp aad and dec mov mov cmpsb pop dec out arpl and mov dec lret std push mov pop mov cmp lods mov push setb jl (bad) xor int3 dec cmp pop test hlt xchg add jecxz push and outsb cmp and or mov std mov loop dec loope (bad) jno mov jg push dec lods inc xor out icebp or daa in or or loopne (bad) mov pusha lods inc or stc xlat mov fisubr sbb fild (bad) decl hlt lods push sub xchg xor xor cltd xchg adc rolb into jbe sub lods add push cmp or ss test call and mov pop andl test cld cmp jo mov stos dec adc in xor je and jns bts adc loopne jmp movsb (bad) mov or enter pushf pop cmp jecxz push or aaa in mov dec pop test cwtl mov cli test or push (bad) xor nop add in stos adc mov dec inc mov fstl test orb xor es mov and or or jbe and mov mov idivb (bad) and xor xchg imul jns test in adc sarb in inc xorl mov lock push in (bad) push push addb jo xchg subb daa das add mov cmpsb loope xchg mov jb adcb pop je mov mov scas mov mov movsl xchg and or pop les add mov inc mov mul adc dec push outsl jno add jo pop push lahf lods in test ss sbb lock insb icebp cmpsb jge add aad sub loop inc add pop jge inc aas hlt sbb mov jle xor mov add int mov jmp mov or mov ret cmpl xchg jns pop xor pop hlt mov dec jno nop sbb push mov (bad) hlt dec adc aaa clc adc bound rolb enter or dec ds pusha repnz stc xor stos xor ss movsl (bad) icebp mov and jge add cwtl add xchg bound andb out stos pop add adc ret fwait (bad) cwtl js pop dec or es inc cmpsb jp sbbl or scas outsb cltd inc out nop and xorl push xor pop fnstsw sbb mov jae xor add and cmp popa insl xchg mov adc push dec pop movsl test cmp pop sbb cwtl repnz inc add insl movsb push call test ret leave jl and pop jge mov fadds das inc notl pop out push sbb mov xchg loopne shlb fistpll jnp pcmpgtw (bad) mov cmp and dec in lods mov pusha sub sbb push loopne popa cwtl mov loope iret xor and pop test pushf jl mov jo adc add ficomp sub xchg fnop (bad) bound lock push cmpsl or imul cwtl addb nop movsl add stos or add scas lods aaa sbb sub dec xchg cmc push mov fistp insb add adc dec cwtl or add icebp add imul lcall (bad) int sbb dec lods sub (bad) jl movsb sub xor pop rorb inc cs pop inc bound out je push mov xchg and sub xor loopne xchg pop roll mov nop loopne xor or cmp aas aad add icebp xchg jo mov loop popa loopne adc or cmp outsb sub adc and mov jg cltd js insl ret nop inc and pop push enter adc mov (bad) (bad) shrb subb or sbb incb cmp pop jge and fistl ss cld and out es (bad) dec sbb dec add cmpsb pop adc shlb int3 xorb or repnz push dec scas and fldcw add out std mov sahf in scas xor loope pop and mov mov xchg pop popa idivl test fisttp ffree bswap add xlat icebp xor stos (bad) mov adc jle cwtl cmp js add push mov sbb test (bad) mov call mov xor mov dec jns hlt repz fbld inc jb data16 mov inc xchg xor add sub xor jle adc push xor mov aad lock jmp loope lods adc and adc adc pop test mov jns pop sbb in fiadd ja mov pusha stos mov add sbbb ds cmp aam in rolb aad inc push ret xchg pop xchg push xchg add enter fnop xorb dec sbb sbb pop push clc jp and rolb std inc or pop mov pop inc jns fisubl loop cmp push mov xchg and sbb xchg enter sahf pop in inc pop loope sbb sub mov cmpsl adc rolb inc and mov xchg cld fdivs cld inc xor pop add jne push or scas stos das add adc fxtract nop sbb and add dec roll sbb sbb imul adc sbb aaa fdivs push add das xchg mov popf les sbb push add div xor leave add and cmp lock and inc clc jo mov nop push dec orb xchg in mov inc in sbb lock (bad) dec lcall push xchg aaa scas mov inc test xchg lcall and push jle stos add cltd jo push dec popa ss nop sub loop (bad) mov xchg lods mov cmpsb jg inc sbb dec je add jl dec fcmove pop aaa punpckldq or in cli mov popf adcb jl xchg mov out xchg lods cmp push test hlt add inc loopne test sub sub adc mov add xorb aaa loopne test insb dec test ds (bad) lock adc lea xchg ss popf and into mov fdivrl call bound adc jl mov in ret push add notl mov loopne push call inc and enter or lea test cltd dec cmp popa leave pop adc or mov jp nop lds inc add in shll dec cmpsb mov rcrl add push add icebp ja test clc push bound xchg adc mov subl cwtl test mov out adc add cmp xchg fprem mov sbbb lret xor lods and dec ret dec xchg cmpsb mov xor (bad) roll arpl and clc daa or adc sub sbbl sbb or mov pop mov cs cmpsl push adc ret xchg nop aaa adc rcrb mov add test mov push pop xchg and fild jl sahf mov lods arpl out or scas imul scas mov mov and (bad) ja push add xchg sub mov xor clc test push mov sub fsubl and add loopne imul fldl jmp out jne dec push inc (bad) push mov jns sbbl and jns or cld ljmp pop out dec scas push push sbb bound (bad) mov and mov sub int3 fs je add bound cltd or pop sub push (bad) fwait mov or push jl mov xorb pop or stos add cmp wbinvd pusha cwtl pop cmp roll adc imul push cmpl pop cmp mov inc jno (bad) xor push mov dec popa shl dec push mov pop or jnp clc push (bad) loop cmpsb jp dec push test (bad) adc sbb mov jb lea loope xchg clc pop loopne add movl jbe mov sbb pop or jle test mov mov jne nop ljmp sub mov (bad) jb sbb mov mov add je jo pusha add in clc dec scas xor xor sarb shr int3 jecxz xlat ffree jl into mov pushf les xor or inc sbb push pop dec cltd test add pusha sub mov aaa test dec loope mov mov popf mov ja ja les mov or outsb (bad) fstpl ret xor (bad) insb and push ret dec add lock or jnp sbb orb jno jmp enter fidivr xlat (bad) fsts rcll fcompl pop jnp jl jmp jo test lods dec push and lcall add xor daa mov loopne ss icebp inc cmp stos ljmp mov test and or mov push add pop pop push mov stos std loop data16 popa and movl js inc sti lods jbe or mov xor dec jnp in repz sahf mov scas add sbb push push add sbb adc outsb popl icebp fisub and inc mov pop out orb sub push sbbb sarb jnp jns mov bound and mov inc rorb aaa fldcw rclb dec push data16 jmp pop subl sub es pop jo ja hlt add lods into loope mov loope push sti test scas or add pushf lods mov daa adc lret add mov movsb ret sbb stos or push loope pop fnsave test pop ret push and or and and data16 adc pop aas clc gs pushf sub inc mov (bad) dec dec adc insb faddl inc push into sub jle cmp adc xchg inc xchg cmp pop clc lea sbb mov fs insl cmp adcb mov mov and and inc push lods je push add mov les jns sub hlt shrb add sti testl sbb in in nop in inc cld push fistp xchg jo seto add out es popf daa lahf (bad) sbb sub arpl test push and lret mov pusha pop mov mov in push xchg jecxz pop jge jle jnp jo or mov cmp and test add jl sub mov xchg std sbbl push xchg repz xlat cmp in pop and cmp addb fs xchg outsb xchg adc pop ret cmpl push and dec mov mov sub outsb sti mov call add sahf lods sbb hlt into push (bad) (bad) sbb gs adc xchg movl mov mov push push pop shrl add pop xor pop mov push test jmp xor stos dec mov mov or adc add pop mov dec add fcomi insl lods cmp ror stos sbb ljmp cmp add fdivs mov dec add adc and dec and adc nop add cmp inc dec dec inc jo push loope (bad) je push clc stos inc cmpl out sbb push add ljmp insl dec push or clc cmp sub mov or (bad) mov add xlat imul jbe push cltd add andb pop inc rcll inc dec cli lods rolb rcr fimul popa cmovp adc add test mov push or add add cmp xchg dec lods or fwait sbb jp mov insb adc adc dec push icebp fmuls sub push scas cmp hlt call adc stc xchg lock imulb lock hlt pushf xor in cmp add sbb fnstsw imul mov (bad) std (bad) and mov in cltd mov add xor sbb add push dec adc in push jb ret nop out sub js cmpsl add mov les add xchg inc insl jb and jge xor out pop add pop loopne data16 das or arpl adc lods xor inc int3 add (bad) sbb adc mov clc pop cmp xchg dec fild ds lods push mov cmp xor pop pop out mov mov xchg inc cmc loop mov cwtl test lods sub push adc and fs icebp in insl push (bad) (bad) es mov lods lret sub pop add xor xchg or xor rep dec add xchg mov adc (bad) lret pop lea fcmovnb dec pop or cmpsb or pushf xchg (bad) sbb inc sub ret mov call jb test lcall fstl xchg mov mov scas enter mov movsl pop jbe test stos es jne pop cmpl je sub or and xor adc xor seto outsb jne call insb adc (bad) jae ljmp adc pop fidivr std shll repnz and iret xor add icebp pop fmull fnstcw or test sub movsb imul and pushf pop loopne rorb add jns bound fcom and mov dec ss insb mov dec ds leave or pop ja dec add aaa add push addl rolb fsts (bad) mov xor movb adc movsb mov add add jge xchg xchg fs mov add mov or ret ljmp jg push test add call (bad) xchg mov and sbb data16 add push test push int3 addb (bad) addr16 js aam and mov and nop dec rcrb inc mov fnstenv add imul int cwtl daa mov repz test and inc ja pop ret pop fsubs mov push int3 fiadd imul sub nop or fdivrs repz sar pushf sarb push nop add sbbl mov or sub enter or add out in fucomip ss es js lds push ja or add mov dec lea and and les adc xchg inc push loopne (bad) pop les cwtl je popf nop push dec loop stc dec pushf divb outsl rclb add movsb in dec xor mov call data16 sbb fild andb testl add mov dec inc loopne sbb or test lock fstpl subb xorl test adc sub or cli push xchg lret sar mov dec ret adc inc aaa in add add in add nop loop mov add test movsb sub jb int cwtl fsubs in add fs test jge dec sbb or insb xchg orl js sahf (bad) xor mov mov cli jmp in adc inc fsubs mov subl (bad) push push sub add mov pop call jmp fistp jle int3 (bad) mov fs or pop xor loopne pushf or xchg popa xchg xor add jno push cmp outsl pop pop in xchg aaa and jle add mov stos dec adc fprem adc pusha shll xor add pop test movsl cmp mov lea pop dec dec test loopne insl mov or scas hlt add xor mov jb jp mov sbb das pop cmp or pop jns (bad) xor and mov movsl push add (bad) sub in mov push dec add out mov sub (bad) adc pop divl mov das inc jo enter jne pop adc cld mov mov bound ds adc push out mov mov (bad) add loop mov inc clc xchg adc ficomp rolb loop dec daa cmp je and ficom dec subb cmp clc insl jo add (bad) aad clc outsb dec in cwtl add fistp add cmp push mov fnop add adc adc add in in test xor or pop push sub or in mov sbb clc (bad) adc fild sbb les repz xchg cmovnp sbb neg push rcrb sub mov popf mov sbb je sarb add test (bad) sbb inc cmpsb cmpsb add insb (bad) hlt outsb int3 mov sbb sbb lret mov in inc cmp dec (bad) pop lock mov cld mov xor and and es cmp add je cs fisttpl sub or pop cmp sub push scas movsb clc cmpsb jns and leave mov cmp sbb adc pop icebp ljmp arpl add stc enter inc setp cmpsl push add in mov inc cmpb loop aam add xor cmp movsb fbstp popl (bad) hlt or movsb xchg leave mov repz loop mov roll enter push or scas sbb addb mov mov adc cld or mov sub data16 rclb add inc cmp jne daa sbb mov xchg andl sbb fsubrl test orb add add or add std mov mov icebp std mov dec push clc inc sub xchg (bad) (bad) xchg inc scas add lcall xor xchg in or (bad) repnz (bad) repz pop cmp aam cmpsb test mov cmp es dec adc sti addl in ljmp daa cmpsb js pusha and dec push adc or clc fsubs push cmp jo loop,pn leave add lea xchg cmp fiadd mov adc sub fdivrp int add mov pop loopne jns loope lock mov and loopne and xchg test add xor dec jl mov lret fbld xor insb rolb sbb pop fwait add mov and test sub fisub js popa rorl sub pop stos push pushf or dec gs inc int3 cmpsb movsb dec mov jp xor push mov sbb mov dec repz or aam (bad) mov and div sub and loope xchg or (bad) clc hlt push out fiadd pop inc jmp and aaa dec pop sub push mov incb push fldl mov test (bad) movsb mov inc jl test js adc jl add sbb jno pop loope out cmpsl hlt pusha sub pop fidivrl adc fadds je dec mov cmp push lock push fstpt out xor test mov pop mov jg daa or adc and outsb test out cld rclb sub imul pop push mov gs aaa sbb and jnp mov aam int inc pop jmp mov mov mov movsb lods pusha in gs bound imul jbe pop shrb sbb adc daa add test push pop loopne ror int3 xor and lahf pop pop pop cld mov scas cmp lods dec xor sbb es and clc inc pop test add nop (bad) xchg lret dec push imul adc ds pushf mov mulb and and sbb mov mov je sbb inc test push add cmp lods pop fidiv and aad and andb xchg cmp jge div inc and sbb xchg sbb inc mov sbb xchg push dec popa adc or insl push ds fsts jnp pop inc push inc mov sbb xchg js mov push inc xor cmpsb push hlt pop xchg sbb shlb cmpsl push mov mov sbb jae jo push in cwtl mov imul or nop add mov arpl mov xor push mov pusha lret test xlat add loope sub cmp lods cmpsb and cmp out fwait add pusha pushf out popl dec pop ficom int sub js cwtl gs dec jnp add imull lret inc data16 inc jge adc mov pop popa xchg rorl adc sbb mov sbb outsl xor andb outsb xor aaa pop xor fucomp fsubrs jmp jns pushf loop dec xor lock pop and test pop inc jae div sahf aam ss push stos popf sbb inc or xchg addr16 cmpsb scas jns xor (bad) insl jmp mov cmp sbb cwtl frstor in sbb lret xchg call ret and je mov xor mov and mov out inc test add push nop pop add mov jne add imulb mov push pop cmp fdivrs inc test popf nop pusha out add xor rolb (bad) push jge mov daa scas stos inc andb rclb add gs sbb xchg pop mov mov sub stc mov lds scas std andl cld sbb mov enter addb or pop pop nop (bad) dec mull mov sahf xlat aas push add xchg les hlt lds test xor and sbb pop dec add lea jnp andb adc pushf je ss pop adc subl xor sub lahf cmpl mov dec cld jmp pop les sbb xchg sub mov inc test imul add sahf sbb mov mov clc fcoms std jne add fiaddl aam pop or mov adc mov or fs cmp cmp or lods fdiv xor sbb clc flds rcrb or add add das cld xchg push out pop cs jle pop inc push test cmp sub and cmp jno lcall ja jbe xor push add fildll addb call insb add clc push popf cmp add xchg (bad) jae es sbbb mov (bad) test push jbe dec xorb mov je push out adc add sub test lock je pusha leave inc orb or daa test (bad) jae loope clc pop add (bad) adc push or push out pushf add ret (bad) lock mov hlt loopne pop sbb xchg incl fs dec sbb in sub pop lods mov call pop pushf in pop mov pop int3 or xor je sub and push mov mov and sti rorl mov and adc pusha nop pop jae es pop lods push stos xor mov add dec push mov or and test cmpsb cmp pushf push xchg push mov jb and test fwait jle sahf pusha dec (bad) in sbb push enter call addl insl and cmpsl or adc enter push adc shrl test xchg (bad) adc xchg xor jne mov sbb shr loopne inc ljmp mov jnp stc gs xor inc xor pop inc push loopne add cmp xchg mov dec insl add fidiv add js push inc in mov maskmovq (bad) mov pop mov push adc mov add jg mov lock mov stos cs inc stc repz xor ja and (bad) xor cmp adc cmp sahf cli outsl pop or cmpsl or dec mov xchg movsb inc jg jmp push sbb ret pop pushf dec mov negl pop es inc sub cmp fwait sub pop add icebp cltd mov mov add clc push jbe dec pop movsb add int3 stos fdiv cld jecxz clc cmpsl and mov adc and ror shlb fwait add fisttpll hlt add pop leave pushf vlddqu fiaddl sbb mov sub in mov call (bad) dec test ss fimul adc dec (bad) mov xchg enter sbb idivl or or push daa adc mov popf lods int adc and in xor arpl lods mov xor insl pop popa cmp push mov test add pop ljmp mov or (bad) int3 pop inc lds push in fdivp mov (bad) addb pop shrb jp sub nop jae mov mov cmp xchg mov add call pop mov fnstenv add ret sbb and add das in jl pusha cwtl or or push fmull mov jge jg pushf add aad cmp xchg inc xor dec pop add mov jne insl scas mov adc sbb inc pop in test or inc jo adc pop xchg push cltd leave add inc cmp sub add fidiv in (bad) dec sbb or mov push push mov outsl pop cmpsl mov loopne push insb rolb (bad) xor aaa sar scas enter fmull arpl stos loopne pop sub add mov dec xchg mov xor aam add int jno adc scas lods je pop les mov pop icebp and in add clc inc (bad) dec mov out add aas test dec inc pop or dec jmp rolb sub add adc sahf (bad) sbb push dec jle fidiv pop xor pop popa testb hlt add pop sub mov out cmpsl adc jp push xor addr16 jl test out enter xchg (bad) or inc push es pop sbb push hlt mov mov add int3 dec test subb rclb xorb faddl stc das dec cmp xchg test pop loop enter test pop and and in out add lods sbb dec adc sti rcrb mov mov or out add push adc data16 add sub or mov inc jp xor mov aam sub les sub pop out fucompp ljmp repz jl mov jle jno or xor nop rolb fisubl mov lock xor rorb fisubr or sbb test jge int3 mov pop out imul add add push orb fdivl xchg nop jo loope and test mov cmp std jle in and jb enter xchg adc orb fbld popa adc dec add xlat gs jns add adc pop lods push cmp sbb (bad) negb jle clc mov jo xchg sti mov or (bad) clc popa es sub popf cwtl roll cmp mov fchs adc scas and movsb or je addb js mov add xchg add clc stc repz dec mov dec adc jl cmc int3 lcall mov imul mov fdivs xlat clc mov push xor (bad) dec test cmpsb and jno push addb push mov cld out mov add push stos inc lock sbb mov mov sbbb add imull in jnp pop add sbb dec jecxz (bad) stc add xor cs andb in xor je sbb lods rorb sbb xchg add cltd lahf lock (bad) mov xchg test xchg (bad) jo sbbl mov sahf mov cmpsb orb inc pop idivb fs and dec sbb add mov pop mov fistpl outsl jno aas inc je cmpsb mov test cmp cli dec fcompl xchg dec test scas xchg sub sarb add pop andb hlt cmpsl sbb sub mov xchg push push mov dec ljmp fdivp add divl stos cli shrb rolb mul imul in or jnp mov add imulb mov fdiv cmp js or lods inc push js pop stos les test mov (bad) sbb mov push xlat dec sub xchg adc dec mov push clc dec repnz and add mov add xchg enter push sub mov add (bad) sub and mov cmp dec mov inc mov push mov cs test add xchg xchg xor js add arpl add addr16 pop add (bad) mov push cmp xchg gs or add in cmc pop sbb dec clc jbe pushw fcoms jle add es shl imul pop test test mov mov sbb mov scas and inc push add repz out xor stos mov xchg pop lods loop add sub es cmpb pop mov in enter cmp or or mov or or add inc mov push insl push outsb loopne pop sahf test mul fbld add and add sbb in std pusha mov in movsl mov test cltd dec mov and mov pop or mov and outsb imul (bad) adc add pop sub test push fistpl inc add sbb xchg out ja jl mov sub add dec mulb loopne jne pop daa cmpsb jnp fs in test add fdivs cmp fwait mov test ficoml ja stos cwtl les loope adc dec inc lcall jl add sub test push or int3 mov mov outsl fidivr cmpb cs nop pop and or mov mov loopne xchg add jno cmp and xor call xchg testb in mov lods (bad) and add loop push xchg bound cmpsb jle daa mov lret aaa out add adc dec add pop xor xchg inc pop xor and xchg jmp enter jmp jo loope popf xor and and add lret mov push test inc add and xchg shlb push or sar jbe shll cwtl adc adcb jmp sbb rolb cs movsb js outsb jnp add push loope fcmovbe fwait and xchg clc aas mov adc mov jecxz aaa lahf pop push sbb cs cmpl pusha call cld sub add xchg lret jnp out add mov pusha pop fiaddl mov shlb add inc dec repz imul mov mov cmpsl aam std (bad) dec xor sub (bad) out mov ds ret insb into xor and sti adc dec pop ret inc or add adc add stos aas sub pop sbb cmpb cltd es setnp imul (bad) lock mov jp or icebp std add mov pop enter xchg push hlt or (bad) mov test inc mov scas inc insl and imul fldcw adcl add les inc adc mov cld call pop nop sbbl movsb (bad) in sub pusha test or mov mov in cmp lea add outsb out sahf mov fisubr test push out es adc dec or mov test sbb sub mov push cwtl mov iret push jg adc in repz cld sub sbb adc mov ds enter in ss lods (bad) mov pop xchg and dec add fadds or in sub mov and pushf lcall mov (bad) cwtl ljmp out in jo push loopne in add dec enter push push out mov xor sub push mov (bad) hlt adc dec cmp hlt dec imul imul and push arpl stos and addb xor or push pop (bad) mov xor pop faddl pusha ss leave mov inc ja and enter pop xor and mov cmp add push hlt loopne enter (bad) jns xor mov add cmp cmp int3 xchg cmp cld lock push xchg idiv dec push sub adc repz mov aaa and int3 ds cmp add pop clc (bad) pop cmp adc xchg jp jmp popl mov push ss and ret mov mov xor sbb jle fs das popf stos cld faddl and adc jne inc cmp dec jge enter leave lods inc insb stc pop add mov push mov sbb (bad) sbb popf inc push leave sbb (bad) int3 in add popa sub bound ret and and or fsubrs pop in push jns fstps or or and pushf cld fcoml cmc call scas sub mov mov lock cwtl pushf (bad) cmpb push ss stc cmp adc push xlat clc hlt mov push mov cli in add std loope add push rolb mov adc mov loop mov inc jle cwtl repz call addb pop mov mov inc push pavgb test xchg lds out jp test ds push lods pushf jae and and test and ds test in (bad) jo imul pop (bad) jo imulb lods xchg mov jmp push jl cmpsb clc jg mov stos sbb push pop xor leave loope and pusha aas jae js xor (bad) mov xor sub (bad) jo jecxz jb add push mov or push notl and (bad) push out fldl loope hlt add adc cmp push push xor xor add mov lds xor or jl sub jmp mov push dec xor out cmpsl pop cli insb xchg add jp lcall bound push icebp xchg mov (bad) stc push ja mov add imulb in (bad) jge out sbb pop in pop pushl cmp adc mov sub and and or mov mov scas jecxz inc dec add and test test add and js (bad) and xchg mov pop stc sahf rorb dec jecxz add inc jg addb test sbb ds rolb mov sbb icebp loopne enter lahf xchg sub xor imul mov jmp movsl frstor sub add aam sbb inc in add or push dec and mov shrl sub push das xor lret int3 js xchg mov pop aam adc test stos push cmp addr16 mov jecxz add sbb cmp add out pop cmpsl add je add add jp or xor add adc out lds push jns fisubr (bad) gs add dec pop iret scas mov sbb xor xor jmp mov rcpps icebp dec dec loope cmp push in jp add inc in int3 es inc sub jae add jnp mov jne adc (bad) cld mov roll sbb mov lahf add repnz add and popa loopne sub stc lret repnz ds fsubrl mov test sbb pop push pusha jp leave aad repnz loope mov xchg cs xor icebp in popa repnz and dec clc jns ficomp pop cmp in and mov pop mov cwtl insl movl loop adc jl (bad) mov and sbb imul add mov mov pop sub (bad) js sbb add cmp clc and popa (bad) or dec (bad) or lock sub pop cld add roll xchg jb out cmpsl repz cmpsb ja pop test add scas icebp push pop mov in lret push add sbb xchg add push cs mov dec sub or test push push out insb xor jns outsl fcomps fmull pop jo loop adc mov loop sbb mov xchg sti pop hlt inc (bad) or pop rcrb jo lcall fcomps add loope cmpb push loope dec dec and xchg push clc xchg repz mov push test pop sbb and in fdivl jae add insl push je pushf pop dec js or or jbe cmpsl (bad) inc push add add xchg mov jae scas std or cmp leave add add push mov js test loopne clc loope sahf inc inc push ret insl test loopne mov mov sub sarb and add in sbb push jno xor (bad) lock pop jecxz (bad) push xchg insl fstps andb mov andl (bad) enter out cwtl jbe pop xchg cmp ja mov es into inc rolb mov aam leave xor dec sbbl movsb pop sub into andb mov jno nop mov inc push in jno lods sbb dec aam mov sub jb loop test sbb add and test rcrl clc movsl ja addr16 push mov cmpsb fsubs cmp out clc imul sahf xchg das (bad) or jbe es bound sbb in xchg and (bad) std mov jmp pop pop cld jecxz adc lret mov adc fs dec imul pop sahf dec cs mov stos or test add lret stos outsl int3 sbb in sub ss sbb xor (bad) mov insb dec mov pop popa sub (bad) mov shlb pusha pop push pop jnp push and incb je fadds or jp es pop adc jl cmp rolb xor (bad) int test pop aaa mov cwtl add insb mov mov mov shll rolb sbb lahf addr16 leave aam cltd jl pop fild mov outsb shlb int3 jl pop xchg sbb dec or ds nop sbb xorl dec push es jle xor test stos add or mov int3 and popa cs mov or add ret rolb in lods adc aam test mov (bad) pusha fdivs lock lcall pop sub es and sub pop fstps cmpb sarl jp pop vmovdqa lock and push pop addl sbb push pusha subb push fiaddl sbb push or mov adc call inc or add push inc js xchg rolb adc add pop in int3 sbb loope rcrb pop pop aas push push fiadd adc or mov icebp out dec pop mov mov jno movsb add push pushf shrb notb imul (bad) jb ror imul (bad) loop ret mov inc cmp dec mov addb jae clc pushf add pop cmp jbe inc adc loop inc jb or cmp daa gs or mov dec add add jg push movsb lods pop or adc lods out mov cli or or xor movl xchg test adcl (bad) sub aam js and mov add pop aam mov xchg enter mov jns es dec pop or pop add and or or fidiv jns cmpsb cmp mov inc icebp add fwait negb aad adc mov (bad) and rol add xchg test mov addr16 call add leave inc test fild cwtl push cmp add push mov add les mov and mov cmp mov cmpsl call sub pop or cmp and js add dec bound mov int3 cmp mov jmp sarb (bad) cmp inc dec sbb jp push cmpsl cmpxchg nop scas cmp orl pop enter add sub cmc imul jae or cmpb add jp jl xchg adc cmp flds pmulhw adc test (bad) lods and pop neg mov sbb loope cld sub push xchg sub cmp mov (bad) xchg (bad) shlb dec add cli cmp inc test ficomp mov or mov and das pusha jmp pop into imul push inc sbb lods call fistl fmull dec push cwtl cld sub out sbb dec jg inc pop xor ja (bad) aam out xchg cld outsl int3 add and pop mov inc add mov push js xlat sbb xor (bad) xchg jmp dec inc clc sti cld ds xorb sub add and mov sbb inc sbb pusha push (bad) adc adc and mov loopne xor movsb xchg sahf clc repz js lods and push fidiv lds and test mov stos xorl push pop std popf mov xchg cld pusha stos out cwtl pop iret cmp xor jo xchg in nop mov out mov xor stc pop (bad) mov push fsubs sbb sbb push sub push sub mov jp push xchg pop outsl inc stos (bad) mov sti xchg int test sbb stos push jno add sub and mov es jmp loopne push sbb inc mov shrb add pop stos ljmp push xchg mov loope add neg cmp sbbl lahf popa fdivrs rol xor (bad) xrelease push test and xor inc add stos dec repnz int3 inc xchg clc xor rep and out and mov aad sub mov cltd pop dec leave in add sub xchg push dec fwait push add sbb pop testb subl and aam mov lock xchg ja add xor out test push enter sbb loopne jl inc mov loope int or pusha bound fisttpl ret jge pushf mov add adc mov stos ror ss cmp sub or add lock mov (bad) popa add stc mov pop pusha fs lods jl inc mov bound cwtl lret es jmp add sbb jl sbb xchg sbb mov pushl xchg adc cltd nop jnp pop pop cwtl loop and sbb inc imul int je daa mov rclb mov inc lock xor add mov adc push mov andb dec mov adc push cmp rsm xlat pop mov mov arpl push lock pushf xchg popf bound fsubs aaa adc xchg add dec push add jmp je inc xor stos cmpsb mov ret and nop xchg push test cmp vlddqu mov add jbe sbb in outsl jl add stos call sysenter push xchg pop xchg add and add add mov sub fistpll cli enter xchg fs jns add or cmp in subl mov jl cmc mov mov sarl das aaa nop xor fsubs and dec push enter (bad) cwtl cli repz sbb test sti xor sub mov or pop negb mov xor push mov adcb mov pop xor in sbb aas xchg push stos pop mov rolb lcall add fwait jno add adc add popa test sub mov push and and add lea cltd orb aam or and mov jne inc imulb add xchg movsl add rcr (bad) ja loopne push mov jo enter dec pop out in add or cli popa adc mov js rcrl push adc pop bound mov stos enter pusha rcrl sbb popf cltd mov add imul pop loopne inc aam das lods cmp cmp cmp rcl in jmp and jge aaa pop cs xor cwtl cmp or shlb lcall bound pop cmp out loopne ljmp arpl test pop fistl andb shll in add xchg jno xchg push and mov jl or repnz popa pop xchg dec cwtl adc mov mov sbb add xor stc mov js or and in in pop push clc add movsl ret gs insl insb adc jns xor cld adcl fnstenv rorb scas lea test lock mov mov out mov jp inc push rolb and cs adc cld bound inc or ja dec inc dec fistpll pop je,pt clc enter jg dec fistp add fcmovb pop add inc add mov test add sub sub aaa fadds cmp mov incb mov das imul cmp jp lds hlt sub jnp xchg aaa sbb rcrl mov xorb clc dec (bad) rcrb fdivrl cmp jno flds je test test mov cli (bad) testb rol int call nop push xchg data16 mov xlat sbb leave call xchg in add test inc (bad) pop cwtl xchg mov mov pop sub cmpsb push cmp inc stos dec pop adc push fcomps sub or xchg cmp dec mov inc (bad) iret dec (bad) cmp sub or hlt inc call dec sbbl xlat add pop aaa and repnz out orl inc mov lds ficomp nop pop pop js sbb inc sbb shlb in aam pop cs jg add pand push fs dec jecxz adc push pop arpl mov fs jecxz xor popa mov fisubr repnz scas pop add mov (bad) (bad) aam rorl mov xor pop (bad) cli clc dec adc enter cmpsl inc imul pop jae ljmp and sub ljmp jecxz adc clc add pop sub std mov gs xchg call inc das and sub out mov push sahf cmp jnp clc loop xchg adc rcll mov (bad) mov lock out cld sub mov mov mov mov push and fiadd jnp or cmp ret push xchg cmpsl js fwait add dec mov lods xor adc add inc les add out (bad) push add sub test mov stos push and lods stc mov and xor addl jecxz cwtl pop sbb push pop xchg mov lret jmp xor push or add loopne push add mov test pusha push mov pop inc xchg mov push shll and and es add ljmp mov cmp mov shl sbb add xchg test xor and subl adc nop add mov inc (bad) out or fisttpll imul andb out pop cmpsl and pop mov adc add cmp enter add scas popw mov mov sbb enter mov cmpb xor lahf pop (bad) cmp adc add pop mov add hlt fsts stc rorb loopne dec or push test xor pop add mov inc add lret push xor adc loopne xor nop cmp pop pop add jge and sbb xlat xchg js push into cmp inc pop mov ljmp jl mov mov xor in sub sub cld popa or sar push sbb jnp inc pop dec pushaw adc dec inc test imul scas (bad) cmp add inc mov push mov es jp push mov sbb or cmp sbb add inc inc adc push (bad) or push push mov jns jnp xchg inc loopne sbb xlat jmp and add insb insl lods mov inc mov add stc pop fmuls in nop je adc pop or dec xor inc rolb fnstenv xchg cmpsl outsb sbb cwtl loope inc mov dec mov or (bad) push xchg pop add test nop or repz jmp test fwait mov adc in pop ss push push dec scas sub cmc or mov add in and out cltd js imul xchg sbb mov pop test sbb adc les dec and inc in dec pop add in mov pop ja xchg and inc inc sti and popa nop pusha icebp lret ljmp push and rorb sbb xor xor cmpsl dec outsl call enter gs loopne xchg int3 cld lret mov test mov pop and mov add mov push or cmpsl lods sbb sbb sbb out (bad) icebp mov lock nop add xchg mov hlt jmp into addb mov fldenv roll das adc and (bad) inc mov dec xadd push aas jb shl nop sbb or push jno pop inc xor out mov popa nop movsb jbe rcl orl mov nop sbb pop mov fsubrp scas lods xchg add xor and out inc or lds insl add adc mov xchg inc rcl (bad) mov or cmpsb jb mov pop xchg inc pop aam push sbb insb pop pop int3 and jecxz adc fnop jmp mov clc and cld mov sbb adc addl push data16 sbb mov and loop mov in getsec sbb lods decb js and dec jl jne aad add and shrl push jmp scas jnp ds shlb push sbb dec outsb fs xor pop lret lcall add pop jns rep fwait nop clc adc fistl xorb lods add dec nop dec xorb pop loope or imul mov shlb cmc mov test mov mov sub push pop fistpl fnop cmp sub add lods push cmpsb ja mov stos dec test dec js dec test (bad) movsb adc shlb sbb stc outsl push adcl out test icebp xchg mov sub push fsts or mov repz cwtl jne jg ja rcrl xor loop (bad) std add leave enter xor cmp nop in mov ds movsb mov (bad) sbb cmp jl add out dec mov jo orb fildl and push js movsb fdivr inc cmpsl test mov push add inc loop cwtl out mov cmpsb mov and clc daa andb test cmp and mov lods lahf fsubl xchg pop or pop mov jg mov jbe inc aam xchg push mov (bad) andb add mov sub mov lahf shrb mov xor inc mov stos jl add fistl or mov pop sbb out cwtl sahf jg add jne jns,pn loop add adc or push pop mov mov jge fstl adc pop lock icebp cld sbb adc or mov int3 mov add leave std lock into add adc pop xor loop or scas mov inc jno cmpsl out and cs xchg or xchg push js fadds add or adc xchg pusha js add inc push xor pop push adc inc pop xchg pop xor test add (bad) jg add orl mov add sub out add inc cmpl lock add adc mov enter and pop jle xor out and icebp xchg lahf add jmp fldenv lods pop xchg xor testb dec or sbb enter jno mov pop push iret rolb dec inc mov cli push (bad) arpl inc out ja add add test (bad) cld test jle (bad) add pop xor jmp arpl popa and daa push xor mov stc push adc push movsb push mov and lds insb cltd push inc arpl enter dec dec push int3 pushf and mov push out sub out insb enter fdivrl test mov pop add lock cmp int3 fiaddl or cmp xor jbe xor nop xchg push or or push lods jl push jecxz ds and xor xor clc es mulb pop cmpsb test jo xchg jae,pt jbe dec xchg shr rcrl or stos push insl jb push xor loopne call je push iret mov inc pushf mov adc push jg dec out in push and push push lock call in in inc adc and fnstcw lods mov insb inc lea or je push mov adc loop add pop mov push dec mov call jmp sahf jmp mov xchg cmpsl add arpl cltd jl ja pop call sbb mov cmp pushf pop mov add mov sbbb cld inc shrb xor outsl cmp pop inc (bad) pop jle push nop loope aam push adc scas rorl movsb adc xor movsb cmp dec jne dec (bad) call fnop push rcll jo sbb xchg and das add lods push sbb stos add xchg loop sbb push pop test add enter subps add adc outsb clc sub dec mov cmc (bad) icebp xchg mov imul and jl ljmp out mov lds hlt loopne mov adc and add dec or sub mov subb lret (bad) add insb sub (bad) test jg add cmpsl in add int3 test stos mov icebp cmp sahf adc cmp shr sub insl test sbb pop inc addr16 add aaa cmp push sub les or out repz clc xor test xchg jo,pn ret add mov (bad) daa inc push xchg xor sub xor add push std jb jns mov inc cld fwait ret rorb ds jno stos mov cmpsb jle mov mov add out imulb dec and movsl insb push mov xchg or add and adc lods cld add mov dec clc out sub loope push or mov push inc sbb incl cmpsb ds xchg xchg es into (bad) jp xchg push cmpsb imul push push or mov mov setg je aaa scas (bad) xor add dec inc lock loopne adcl pop repz xor lret xchg push les mov (bad) cmpl dec fisubl imul push pop dec cmp push cld nop subb mov dec xor xor mul mov xchg enter pop daa or inc outsb cmp push or call insb shll add sbb lcall enter jb es adc cwtl add inc (bad) pusha mov pop jl sub xchg mov pop and mov mov inc dec daa ficoml andb sarb (bad) push iret (bad) jmp push dec add adc mov (bad) xchg (bad) aaa or xor push push adc in push je xchg sub sbb and mov add aam stc iret pop dec ja xor mov enter (bad) push push in in cmpsb test dec cltd add mov mov scas add rcll pusha or xor mov stos dec mov inc pop les mov mov and ret xlat out les aaa cwtl cmp (bad) push push and or adc adc in mov in stc loopne xlat adc mov int adc test addb lock push pusha cmp out add es cmp xor in sbb insb seto dec outsl test mov jmp mov test sub push xchg es add jnp shrb lods int dec jns xchg loope dec addl and or lea stos mov xor inc mov ja cli push notb xor pop mov pop mov fsubrs out cwtl or popa xchg pop rorb ss jns dec and cli push out xor sub jb add sbb jge mov mov xor mov inc jnp pop rdmsr xchg jle adc add mov fmuls in lock mov xor xor enter int3 sub int3 pusha push add push mov inc mov push and out out inc test push adc out call pusha lods sbb adc mov int3 (bad) pop push xor and fist rolb mov pop adc es xor test xchg push or test dec pushl sti inc pusha sub or loopne or mov je mov rcrb and addb sbbl mov icebp aad nop cmp mov out fnstsw pop cmp and cmp ffreep sbb das pop xchg jae add dec int addr16 sub cmp sub push pop nop scas std icebp daa push test xor mov xor or inc mov sbb jge aaa and jae jo jo in mov pop test subb jbe daa ud1 jp inc cli loopne test add out (bad) hlt mov popf aaa sbb sub aam and or xor add push inc xchg hlt mov enter xchg (bad) dec and xchg add dec (bad) and push pop insl or js out jle sbb jge sahf pop ret xor data16 dec out (bad) pushf jns movsl in icebp mov rcr adc sti das js push add lret xor adc std aad xor test jbe imul inc pop ret and adc clc jl or std js ret pusha int3 or or cs loopne test push bound arpl (bad) js inc xchg add rolb jecxz faddp xchg (bad) xor pushf sub dec and test scas clc sbb push push jecxz push push rorb or dec push call ja ret pop jge dec add lock cmpsl ljmp pop xor xlat pop add pop loopne fisub stc lahf and push stc call push push stc inc pop mov inc jo leave js pop sbb hlt mov xor test pushf cmp push lcall add mov sbb mov add jo movsb cmp loopne jg add mov pop or adc jmp es and in mov push jg jno cmp sbb rclb in sub addr16 mul loope and inc sbb add cmpsl sub repnz aam and or mov fsubrs pop jns clc sub fcoms jl jno dec div pop add setb ret pop mov into imull nop and sub mov iret aaa add cmp sbb mov and cmp rep add int loop data16 xorb mov gs fiadd dec rolb cmp jnp mov add mov shlb mov inc lret mov cwtl dec fiaddl in clc sbb push add pop xchg lcall dec sbb repnz out xchg or adc pop inc in and mov and push adc loope fldl add scas cmp pop lret int3 jg add push data16 cmpsb gs and and cmp fwait add hlt jp insl and inc clc ljmp jecxz sarl addl (bad) jns cld push clc rcr pop jecxz add in lock xchg dec mov add mov add icebp imulb add mov push and pushf loope (bad) add hlt jns adc mov out sahf inc sbb sbb psrlq mov (bad) std xor mov dec ret shr sub pop lods or push ss add (bad) or (bad) mov popa mov enter or pusha inc sub movsb scas mov mov add imul pop jns in ljmp iret lock add mov mov out cwtl sbb and sub scas jp clc cmp sbbb dec into mov fwait jmp push (bad) enter and popa nop jo nop adc lahf cmp imul mov (bad) mov xchg cmp (bad) jne loop mov ds inc adc xchg add repz jne add ret std fcompl clc jp pusha sub loope popf ljmp (bad) mov bound or out adc pop out lods js repnz dec xor pop add or dec mov das mov lock call cwtl adc xchg or sub addl loope cmp mov insb add arpl mov outsb in fsubs out (bad) xchg loope fwait or and xor dec (bad) call pop js push cltd enter xchg mov adc int3 adc dec push arpl (bad) jno nop push inc push xor stos cmp inc pusha andb cwtl xchg xchg xor pop ficom mov push jmp enter dec adc cwtl jl mov imul ds add sub int3 cmp jmp bound clc icebp and pop test push imul mov push xor out sub sbb pop mov outsb aaa push mov dec jnp add pop lret xlat jge mov adc ja cmc nop loop adc out push cmpsl sbb pop add test test andl lret pop cmpsl cwtl jb mov adc xchg add mov inc sbbb mov sub and mov nop add xor std jne pop lret (bad) nop xor mov in das pop stos pop mov loopne jle in mov pop ss mov cld movsb mov enter or nop rorb cs sub stos add test imul pop sbb push cs mov mov and add dec test roll cmpsb add push dec repz stc sub sbb jno leave repz mov fsubs in mov les enter cmp fmuls std (bad) xchg adc jl rorb clc fadds test mov sbb les ds add add pop jno mov push mov rclb scas das add nop mov jb rcl es jl or mov push xchg clc call adc lods jge mov lock or int3 inc cmpsb dec stc addb lret int pop neg ja out cmpsb in cmp sarb dec aas mov pop jo pop (bad) es stos mov shrb mov stc add cmc and inc call pusha jb pop stc jl lcall pop cwtl fs loopne popf mov lret data16 aam add out jns dec repz cwtl fdivl hlt subb pop jns cltd mov jmp loope repnz daa sti sub xchg xchg out dec and dec sbb or or ficom daa popf mov in cmp hlt je mov aad cld and xchg jecxz or jae add lock mov sbb repz cmp lods adc add sub push call mov in xchg insb add jbe lds fadd sub js dec xchg loopne push test addb cltd dec and jns rorl test dec in xchg loopne mov or popa and xchg bound mov fstpl lods out jno and add mov pop test push cli add cmpsb adc cmp jge jae gs sbb dec lcall mov pop in sbb jl aas push adc sbb mov push push add dec mov rolb sub gs out push pusha mov fiaddl sbb dec shll inc movsl inc rclb inc enter pop gs xor nop fdivrs adc push rorl mov mov mov mov aad loope mov test xlat mov cld sub jno cwtl add test push jp mov stos sub pop dec stc add adc loop sub inc push in sbb nop test stc dec lock cmc cmp test dec fwait in push fmull sahf and fsubs (bad) fcomps insb or sbb mov test out cmp jmp ffreep or movl jnp sub dec ret mov push mov cwtl pop sbb aas mov imul push sub or and push orb in test leave mov das rcll sbb out jg js pop fldl xor adc imul jbe lret add inc inc sti loope add call fiadd and movsb in cmp xchg and add inc xchg mov xor js pop in dec cmpsb push or daa fsubp pusha repnz into inc mov xchg mov loopne add cs pop mov mov jle jl pusha ljmp lods xor cld or inc loopne fcom adc mov inc mov dec ja xchg cli and mov push insb and pop in mov add jne add jge ljmp xchg add aaa fistpll nop add or jle and sbb push mov imul inc or add roll cmp shlb stos leave push sub pop fiaddl hlt mov lock je movsb pop adc adc push mov jne jl stos sti pop cmp dec test or cmp push dec add xor pop adc int3 xor rorl scas je imul test adc add adc add inc xchg mov dec push stc les (bad) ret insl and decl add ret inc mov cwtl add jge lock out pushf dec push mov push sub fxch iret xadd mov imul test and xchg in in sub or aas sub dec add int3 or xor or or lea test clc (bad) push cld or cli lods out jns ja hlt and pop into out clc orl and jae or aad (bad) les cmpsl add lahf icebp sbb icebp xchg xchg test xchg addr16 cmpsb ja sub add jno mov cli fcoml mov scas bound add popf add push sbb mov mov pop stos (bad) lods inc clc ja jnp lahf jb add or cmp add add add sbb pop jno lock out clc add jmp sub adc xchg lds or test add pop inc jb inc add in (bad) mov out cwtl mov std adc xorl out push sbb mov loopne (bad) or cld repz mov mov jbe fwait sti stos (bad) inc rolb es (bad) sbb sbb cmc test lahf dec xchg loop jl add stos cmp xchg imul icebp pop ss add sbb or xchg sub rcl cmp test sub pop mov mov call test icebp out ja push pop mov pop add push cs addr16 call adc cmp add adc add and mov out (bad) xor rorl sub push pop pop or mov out int int3 dec mov vmwrite mov mov inc mov jl mov adc push arpl dec cmp rolb mov mov rcrb test mov mov mov mov dec int3 inc fldenv ret ljmp je push test repz mov dec push les push mov lods push clc cld lret pop jo push adc pop adc dec mov add jp xor mov push or mov fsubrs je out repz add push mov aaa (bad) mov int3 clc add stc add je test mov std push out dec add or int3 sbb arpl and or mov in dec sbb dec hlt dec inc mov push xchg add adc orl mov and pop roll xor and ret push (bad) lahf mov in xlat (bad) pushf inc sub fadds dec mov fisub add sub leave addl sbb lahf insb or inc jg mov add insb js xchg cmp rcrb mov test leave fild adc pop add (bad) cmpsl testb test mov jns andb in jmp (bad) lock inc push adc loope inc aaa aas int lds sub ss icebp xchg repz add shrb imul pop adc aaa cwtl test jle clc movsb add dec iret mov popf inc cwtl add pusha adc mov sbb jb dec pop add push (bad) js adc cmp mov cmpsl call inc and mov dec insb mov cmp mov repz add xor mov nop jnp mov push clc loopne fldt sbb cmp lret jg add xchg stos (bad) xor ljmp in nop pop ja add sub adc push add cmpsb adc pop mov dec xor pop and adc sbb aaa movsl jo push xor jno xor aam ss jle movsb adc clc xlat mov add add push add out imul sbbb mov mov adc test rolb pop ja adc dec pusha test add jp dec movsb pop dec frstor pop les mov lret or mov scas (bad) xchg dec loopne test xchg cwtl pop mov cld nop cwtl pop push dec sub popf pop dec orb add or mov xchg xor jae sub in xor (bad) and sarb mov push dec stos sub repnz mov mov jle dec pop sbb imul push es mov sbb sbbb movsl push jle mov cwtl out xor les sub sbb rclb mov dec lock inc xchg xchg push mov mov sub inc cmp pop enter xchg pop (bad) jne or inc stos mov sub in pop mov call jb add add adc jmp ret and add add ret jg cwtl into add mov aaa idivl jns mov adc mov xchg orl lods and in data16 je repnz xor enter pop add (bad) adc call or push dec out pushf add sub fldl lock sub cmpsb pop call cmp inc jb adc out add mov push mov pusha adc mov in fsubrs lcall sub xor cmc cmp pop add and pop jecxz or nop inc clc pop xor jnp xor push cltd mov mov mov (bad) mov jnp in addb adc jge cld dec push sbb test enter adc dec lock bound aaa add (bad) mov fs test lock adc out andb dec sbb std pop dec fisttpl mov scas mov (bad) cli jo clc jbe ds mov pop xor orl dec jno hlt cmp lods add pop cmovnp (bad) aam (bad) jmp mov stc clc into notl add dec out es xchg outsb data16 cmp cmp enter cmp icebp and sbbb test hlt aam inc cwtl mov jns jne cmp (bad) jle lahf push jo test test sahf xchg lds adc clc cmpsb pop xor test sbb imul bound and mov inc mov sahf xor push pop imul data16 dec shlb pop add ss mov cmp wbinvd (bad) fwait push pop mov xor mov ljmp mov test cmpsl xor xchg mov xorb adc popa or imul xor aam add or out add clc cmp and and inc and gs call stos mov add insl push stc insb mov mov xor adc and cmp and (bad) pushf push das mov sbb fstl in mov mov mov mov add sub jg jl or lods push aam es add adc add ljmp xor jecxz (bad) and lock dec fwait repz adcb sub pop call jp adc add inc push test sub xchg xor xchg js inc jg hlt lret shll inc hlt sbb add push or sbb sub scas inc inc dec mov add adc jb ds push js ja add add pop xor push mov test add js repnz sub pusha push sub pop test test inc mov test or ss icebp xor pop leave jg scas sub ret cmc test loop cwtl push or idivb sbb repnz clc pop or mov and mov mov xor jno add xchg call mov enter inc xlat cmpsl xchg xchg dec cmc mov cmpsb (bad) mov mov mov jbe jle js jle in sub or jmp loop lods push fsubs mov pop cmpsb xchg pop sub clc shl sub xchg out pop jns push xchg jne ja pop dec mov (bad) movsb ljmp sbb inc adc test pop lahf add ja (bad) add mov add and xchg add inc mov mov fwait xchg mov push incb xchg ret (bad) xor popf xchg je rclb dec xchg add xchg sub and outsb add dec test fs aam xchg pop js jecxz dec add xor adc les es jge fdivl mov pop fildl pop or jo cmp clc cmp cmp add jmp mov loop xlat repz mulb es pop lock add push int in out aam cltd lock lahf pop fs repnz and int3 les and loopne lods jecxz sbb inc or pusha mov aaa jmp into add cmpsl jle je pop iret ret inc lods clc mov orb jns sub add cmp dec sub (bad) lock mov or inc ljmp sub inc inc test lret push nopl mov sbb in sub call sar jmp lea cs xchg push cmpsb je pusha and in and xchg mov arpl mov inc les cmp clc mov outsb pop and (bad) cmp jo bound scas mov xor aas inc mov add lcall ret ja (bad) loopne mov sbb jns enter and pop pop repnz daa jne lods inc pushf sub dec add xor jnp fs faddl scas rorb mov cmp add push xor jmp jle push inc cmp lods lahf mov addb test icebp and add ds cli add jne cmc sbb pushf xchg lock push mov clc idivb xchg add ret cmc adc mov jecxz lds addl push or add fstl mov (bad) imul scas mov icebp imulb xor lea push sbb test stos mov arpl pop cwtl into mov mov stos adc add lods mov call mov (bad) xor sbbl xchg jl ja push test or fimull xor nop mov inc in cmp or sub inc add mov rorb (bad) add xchg and add inc dec mul data16 pusha dec cmc push cwtl mov add push das ja push dec sub push repz inc pop sub movsb inc push in nop test fwait mov adc xchg enter jns repnz nop lock aam scas xchg adc gs mov fdivs cmc or pop enter sub sub jmp subl mov add in int3 aam pop xor sbb bound sbb jnp or aam lcall pop andl stos mov or ljmp adc out jb jg std mov sarb add fcoms ret frstor out incl dec xchg jge pop push out mov shrl sub insb and push and pop adc les js mov adc and cmp jl xor pop and mov aam mov xchg shrb and mov stos add pop jmp push push mov (bad) je shll jbe out adc lock xchg inc test mov dec sbb add lahf inc hlt sub add sub addb (bad) xor ja sbb std incb ja push cltd mov ss add js sbb fs mov adc fcomi dec into inc add adcb xlat dec mov rorl add idiv aas dec (bad) fdivrs outsb stos add or inc jae adc push fisubrl (bad) sbb jo mov cltd es mov inc rcll add cmpb xchg call imull pop lock add (bad) sar icebp mov cmp add pop jno push and add push adc hlt adcl sub or lea roll je add mov sti aaa nop dec inc push or ja aam incb add jp test sbb test and test in and out jle fimull or xchg mov lcall and in lock mov add or add clc pusha lods std int and js test or jmp lcall lods xchg sahf lock jmp xchg xor inc cmc pop inc cld loope loopne add adc dec xchg in cld leave jle add cmp xor (bad) jg push enter mov pop faddl push insb cmp mov pop push shrb cwtl add jmp popf pusha or cmp dec sub adc mov lods imul je cmpsb mov orb xor xchg clc xor mov (bad) mov xor lcall xchg push push lock jns cmp lahf sub and lea dec call push mov mov xchg push jp lret lods sahf or daa cld adc jmp mov cs add sub into sbb stc push test and sbb test es mov inc sbb iret sbb jecxz or enter adc adc xor dec pop jo (bad) icebp xor aaa sbb mov scas xchg in add fnsave cli lret enter sbb pop and pop fisttpll mov or mov loop stos jecxz mov mov jo push add jns or xor loopne and cltd sbb pop inc add ja test pop dec call and lods inc std mov int3 out fisubr das and pop sbb xor and (bad) scas mov cmp sub sub stos jge cmp scas enter in mov pop mov add push loope stc cltd sub lods js or inc push icebp dec xor jns test sbb push mov hlt xchg sarb sbb jmp xchg sub loopne pop add mov and xor mov fimull int aaa addl adc mov cmpsl mul add xor mov insl add mov repz sub mov pop orl jge negl sub test xor mov faddl test in push in add adc test sbb or dec loop inc orb les lods test cs adc xchg stos xor ret and es enter sbb push into adc leave xchg xor fildll adc rcll std add dec or test (bad) mov fwait scas frstor je (bad) lds jbe daa adc xchg out invd adc hlt push mov push cmpsl pop dec xchg and inc int mov sbb pop insb sbb stos sbb fs out adc mov and mov imul pop aas ret xor adc push inc jp xor mov test pop cli hlt or jge and aam rcrl pusha sbb mov inc aas inc pop js add sub sub push xor or adc cwtl add ss divb add inc mov popa mov cmp fimul loopne jecxz mov divl add les push adc lret arpl scas push and dec cmpsb sub and cmpb inc and mov pop stos fildl push cmpsb or andb (bad) dec (bad) cld subb (bad) aas sbb out add popa inc lcall js jp lock shld dec mov pop loopne mov popf push mov mov mov xor push int3 int in ljmp add push sub movsb ljmp shl lock mov pushf add mov or pop aam push fnstenv xor mov xchg jns inc in mov mov loop xor xor enter mov repz inc jmp or dec inc and cmc shlb cwtl sub sub mov mov (bad) push add jbe enter push sbbb jp in test loopne insl lock add in and in adc xchg lds js and (bad) aas mov push mov loopne jmp lea push out sbb push or sbb in scas jo sbb cmp dec mov add mov ret xor add cwtl addb adc sbb jns adc sub push push or shll add lock mov jo,pn dec and in icebp mov inc mov je or lods push push pop xchg (bad) cmp add sub call sbb cmpsw ljmp repnz or jecxz daa xor in inc sub sub icebp loopne mov mov test push in mov pop pop loop je subb adc mov pop dec pusha (bad) popa xchg mov iret aaa push mov movsb (bad) fs jp mov loop pop lea pop mov pop pop jmp addl or cmp mov adcl mov sti add sbb in xchg inc and mov pop pop xchg (bad) pop add test xchg xchg adc or and adc test movl inc mov mov lods pop dec mov mov mov mov inc ljmp clc ficom add out (bad) (bad) mov mov (bad) and cmc push test inc test (bad) dec jp pop inc test incb push in (bad) mov je mov mov sbb sbb fsubs and lods into movsl dec das ljmp (bad) imulb nop xchg add push mov cmp jge nop push ja pop rolb or ljmp lods xor and pusha loopne inc sbb ja pop icebp cmpsb sbb dec clc add in mov or sbbl dec insl pusha or add sbb cwtl ret orl aam add push (bad) sarl and push jp js outsb into scas fldl push sahf in push (bad) dec push leave subb cmp or dec clc loope lds std sbb in int3 inc or dec add mov clc mov or xchg dec inc lcall int3 movhps ljmp adc xchg or out adc sub dec ljmp mov imul sbb xchg sbb ret out cwtl sub test inc adc call rcrl sbb inc or es cmpl lret add sahf jae dec mulb inc mov add bound adc xchg mov and add and adc xor bound (bad) sti imul add pop push sub ja pop push rdmsr mov gs pushf rcrb clc pop aad adc add sbbb sub flds add (bad) dec nop jne ljmp inc adc and mov shrb outsb loop add test das cltd repz mov (bad) jmp (bad) fs (bad) loopne jg insb test lock pop mov js loope jp das sub push orl imul jbe cwtl sub adc or add pop imul (bad) push insb jns or inc hlt popf adc pop cmpsl psubb fdivr test loopne add xchg orl and mov lods adc jne call cmpsb inc orb mov pop rorb icebp out test mov lods test cld add cs test jge or imul jbe sub inc mov popf mov pop daa cmpsl sbb adc jg pop push xchg in out fucomp push mov adcb and test insl xchg adc cmp inc loopne or jns sub jns and or sbb mov fist push adc shrb xorl stc pop add (bad) sub das (bad) in jecxz inc pusha fild pusha pop adc test jmp loopne inc or bound or clc xor ss insb mov jg shrb add mov leave sub outsb sub int3 cs dec cmp ss loopne fsubrs mov sub (bad) sbb mov nop or jp clc fs mov test add jmp pop testb test pop loop jl and incb cmpsl jle add ja cmp in cmpb or repnz pop push scas or icebp movb add popf push jne sbb aam push push mov loope sbb pop sbb push push mov jo push leave mov out sbb and push push adcb in xchg sbb or sbb adc (bad) mov sub push sbb loopne or add aam jns add sbb mov fiaddl test clc adc ret add push dec and or iret lea (bad) jne hlt pop rcrl and repz xchg scas or aas pop pop or dec stos ljmp mov dec fldenv add adc and imul xor pop pop leave test pop sbb inc mov lret js add jge sbb xchg inc dec xchg or es sbb adc and cmp fstpt loope div jns loop sub fs or icebp dec adc pop sub test and jp ljmp inc pushf scas mov push clc dec rolb ja test setl imulb mov jge jle sbb repz xor pop pop push in cmpl adc xor nop dec push add cmpl adc sbb or cmpsl rclb daa rcl andl pushf dec add sahf mov mov data16 inc jnp mov pop sbb lock jbe jl inc or in jecxz (bad) mov insl pop xlat push or xor jl pop ljmp cli fwait add sub inc rcrb sbb std loopne out push int add pop jmp pop sub mov jns mov or call mov ret addr16 std and rclb mov lret sbb out call cmp imul dec stos je mov push jns cmp jns mov mov and test lret in and call jb imul fs adc sub add dec es subb stc popa paddw inc cmpsb mov sub xchg loope stc test mov add or push daa mov mov mov mov adc loopne stos add and and (bad) (bad) jne insb xchg sar lods add cmpsl sbb sbb cltd xchg mov and push es repz mov pop insb or (bad) sub jne clc or mov scas clc jns adc lods adc add cmc jb pushf lock insl add insb cwtl or mov push jle push repnz lock cmpsb push jae or xor pop ss xchg mov jnp inc mov pop int jae and loopne xchg add lds loop xchg movsb loopne adc or push sbb mov dec into cmp xor pop not daa out leave call xchg mov push daa imul inc addb inc dec aaa lock mov or scas mov popf outsl rorl jns movsb and in (bad) rorl notb enter test in nop mov fsubrs and (bad) sub add push add aas xor lods xchg xchg (bad) sbb rolb in fs mov mov fcoms es jo cltd xor add jno jmp testb sub jno mov dec pop cld mov js lahf shll and mov enter jmp popf push cmp sbb mov and jecxz leave cmp int xor mov sbb test mov inc ret sub xor push push push add cmp cmp add and dec test and xchg das push mov lods inc mov pop and mov add mov cwtl pop add inc aad cmpsl adc je and sbb sahf mov mov jo pop iret mov xchg enter in or and fwait js loop or ret inc mov pop sbb mov add and test cmpsl notb or inc les and push pop xorb push and cmp mov hlt mov pusha lret call cmpsb icebp test sbb ret rclb pop mov sbb scas pop adc mov enter and jns add cmp js and mov mov js mov pusha sbb inc cmp mov pop xchg enter add mov jne mov test clc ret mov dec test push dec xchg cld sbb inc lret hlt or mov outsb fs out mov movsb fsubrl or out or cmp mov push outsl fstpl pusha bound enter pop sbb (bad) loope cwtl addr16 mov psubusb jae int3 cmp gs add test js xor and pop xchg fnstcw xor shlb or and add sub clc and xchg xorl xchg adc dec add push pusha test add push insl enter xchg xlat or fadds repz add pop add cmc sbb pop (bad) mov adc clc (bad) enter enter cmp cmc dec add mov xlat add (bad) ja fcompl pop jb movsl adc push lods inc ljmp dec xor jg add adc fisubrl jle cli pop fs dec pop sbbl xlat sbb icebp jle pop or call rclb jno inc mov (bad) loopne adc add aas lock negb lcall lcall out nop add adc mov lods (bad) incb adc pusha lcall repnz and nop pop in add mov or cmp xor add jle shlb scas cli mov pusha lahf in cmp dec or dec loopne out faddl mov leave pop xchg fsubrs and pop and mov push sti std add cli pop ret or xor mov cmpb pop pop add cwtl (bad) je mov sbb ljmp jmp xchg add dec add mov arpl int3 adc shl jle sbb adc es jne sbb add cmpl repnz data16 and bswap je pop mov pextrw and and into aam mov sbb pop mov lds in xor call jge rorb mov lods cmpsl adc pusha mov push pop jnp mov pop mov pop test mov cmp xor pop jmp adc sbb mov or jle loop add bound or cmpsl notl lret stc jmp or adc mov arpl add push push stc test jmp fiadd add cld cmp lahf add (bad) ja in mov add pop rolb push out fs cli adc jo nop sti test add cmpl je jnp (bad) loope cmc cmp xchg adc movsb add inc jbe lds xchg addr16 lcall xchg cmp fwait test inc jmp jo add popa loope or pop add insb add cmp sbb roll fildl jae push fldl add enter pop pusha cs add aam adc push mov out ljmp lea jmp xor stc xchg aaa sbb add sub jmp xlat push mov rorb adcl andb xor ret shll fs xorb ffree add pop add call push (bad) lock xchg jo add pusha or adc cmpl ret adc mov mov enter or mov adc add and push mov add les mov leave or int inc xchg and jne popa pop add aaa shl cmp mov add jbe inc orl jp sub fadds (bad) and div jle cwtl in and les insb pop jl hlt imul mov jbe call sub push and dec rclb xor (bad) fiaddl sub xchg pushf stos in popf scas sbb add mov cmp add popa push mov add add xchg pop and adc inc inc inc push repz orw add mov pop cli mov pushl xchg sbb push add int3 push mov pop add mov add rcrl repz and mov mov dec mov mov or mov dec push cmpl xor pop das add shl neg sub es stos cmp push pusha push mov pop fdivrl dec sub fdiv popl call pop lcall fistpl inc or mov mov mov dec cli das add rol es stc cmp fdivs or int3 adc les fdivrl mov insb dec icebp mov cmp jno nop (bad) lock iret call push mov movsl roll pushf jl popa lds cld (bad) aas xor push in sub push fidiv or xor jecxz test mov push loopne add cmp cwtl clc inc adc mov xor pop or mov and dec fwait and adc jb sbb in sarl stos addb sub popa pop adc sub adc sub sub in xchg movsb add pop sub add push xor sub or cmpl sbb adc xor enter into outsb inc xchg sbb shr add stc jo aaa je mov inc adc leavew into pop cwtl faddl push repz dec movsb pop inc jge popa mov pop (bad) jo in or cmpsl cmp or fadds in xchg push orb add xchg call fcomip inc int3 out rcl add mov xor xchg dec pop popa cmp jo mov adc xchg pusha dec imul inc and icebp popa add hlt or popl or xchg push pop jb lret mov cli ljmp nop paddw jmp call or jmp inc ss into xchg stc mov adc popa add and add cld imul clc pop xor outsb pop sub hlt fisubrl xchg xchg cmp pop adc aaa jg sub ja or rorl xchg data16 cltd jmp nop mov add push sub sbb sub sbb in adc aas xchg and int add xchg mov adc movsb adc stos mov ret xchg add and and test pop dec pop adc stos cmc inc add mov xchg adc loop add rcrb adc addl or movsb and push inc sub and mov subb roll push in dec arpl (bad) mov out or or stc shlb es jle add out sub rcrb push mov adc or adc mov inc add mov mov cmp test and sarb loop popa push mov mov nop (bad) pop pop stc mov les dec not shr call call xor add (bad) pop (bad) adc xchg popa dec loopne mov push mov add adc and dec mov addr16 call push fild mov movsl sub jle ret leave xchg nop rorb jmp arpl xor add xchg (bad) jmp addr16 sub shll repnz adc xor sbb sarb gs pop xchg jmp mov int3 (bad) mov xchg dec inc addr16 fiaddl call push cli jle out dec pushf mov xchg xchg sbb nop add stos rorl jge mov add icebp negl pop popa test fnop xor push add add pop jge and stc fisub mov jp adc movb adc out rcpps dec xor pop inc xchg pop (bad) gs (bad) sti nop cmp movsb pushf add lods popa sbb test pushf cmpsl movd and adc xor mov jecxz cltd push test nop cmpsl inc adc shll jnp imul outsb dec add adc jnp stc xchg add lea and faddp mov inc inc add rorb rorl add push and fdivp or fld adcb leave outsl pop lahf push adc addl xchg lret or push push or aaa add fiaddl pop cld jb adc add ret mov add xor mov mov jecxz inc inc cmp xchg rcll mov in and add xchg add push push mov mov ficompl rorl add (bad) dec call sbb loopne or xchg int pop mov sub jmp and and mov sbb xchg xor pop lret mov cmc inc add inc mov pop push andl inc ret add jmp fwait mov push or es adc mov jo dec jne (bad) divb cmp adc jge sub xor mov adc daa sbb push sbb sub xchg rcrb movsb fdiv cltd outsl inc imul push adc (bad) jo jge loopne push jno rcrl push pushw nop das in idivl push shl add ret repnz cmc xchg adc xchg adc call jae xor aaa jno out add test mov xor sub enter jno mov xchg out mov popa add mov add push mov dec mov loope add pop mov mov cmp pusha add dec cld or mov (bad) mov add loop jb call adc mov push xor sub addr16 test adc out add (bad) push sbb and test pop fsubs sarl (bad) mov xchg adc adc and aas adc add inc je or pop in pop adc sbb mov sahf adc sbb pushf or ljmp add push mov and sub pusha and or pop data16 daa push dec insw add mov cmpsb cld push (bad) popa mov cmc cwtl add push incl and call and mov xor mov pop aas xchg lret inc stos orl fmull xor out (bad) or xchg dec and lea pause les cwtl inc ret loopne adc lds sbb in sti adc xor ret mov out das sub cmp out pop inc add mov je test sti or pushl movsb inc xchg pop add inc es mov inc push adc or add mov int3 sub hlt (bad) lret dec add idiv mov cmp icebp jl popa xchg ret int ficompl sbb adcb mov dec mov loopne pop push push mov fwait add push inc in mov fabs dec fsubrs add loopne negw add xchg cmp (bad) jbe testl sbb adc sub cmp jge call jb dec movsb add or inc fadds sub popa cmc xor push mov push add stc inc lcall mov and xchg cwtl add rolb add mov inc pop pop popa sub xor push arpl jg orl sbb push (bad) cmc and subl xor push xor mov mov push lret mov add adc insb jle movsl mov adc sahf add mov add and in jge mov lahf inc sub stc sub xor sub add sar jbe leave and cmp jle jmp pop or and pop cmp sub xchg lcall stc push sti fdivp and mov mov and lret and sbb mov cmp jne in ret cmpb add adc js or inc push (bad) fadds enter stos loop lods add andl rdtsc popf add ret push (bad) lret jmp andl mov and lret mov push inc and fistpl xchg orl add pusha push pop xor movb add test push adc add and hlt adc or push mov add add inc fdivl adc inc push orb cmc ret push sub cld adc leave popl adc popa sahf clc mov stc inc lret nop (bad) mov push push cmpsb and push rcrl shl ljmp ds dec into add testl and mov add icebp popa xchg pop push jno jns add mov mov repnz xchg cmp sbb in adc add or add xchg out shll test inc push push mov xchg lahf sbb fsubrs sbb cmc lea xor xchg and add cmc loop or repz add xor jmp pop sub sbb or adc push xchg inc xchg xor pop ror inc dec jne lea mov insb cmc xchg sahf fcomp sbb stos repz adc inc push sbb mov rcrl add jae and nop jbe and add mov xor adc daa push daa xor sub sub jne loop mov je sub mov cmpsl or mov xor ficompl test sub inc ret mov sar pop adc dec ljmp add mov pop cmc inc stc inc sub adc sub pop push loopne sarb push and or roll clc int3 lcall inc jl adc roll call add popa inc bound add pop or rcrb push gs cmc clc and icebp mov popa insb loop cmc mov int3 dec pushf dec dec and push call ret in push dec and addl ret sbb mov movl push popa pop ret enter inc sbb push ret lock jb xor pop add add pop mov popa adc and push xchg pop ret in inc push addb mov dec xor cmpsl or add jge ror (bad) mov out adc notb mov fs popa pop ret enter inc sbb add in cmpsb jae pop roll je pop mov lock ret outsl ja add pop add lock fwait push mov cmp icebp in mov xchg enter jne xor push pop cmp inc in and cmp jp dec addr16 sbb and add pop pop adc cmp pop repnz cmpb push das in lea (bad) in adc fisubr sar jmp push add xor cmpps pusha lret cmp cli push mov or dec sbb and fisub (bad) arpl mov cmp xor rcrb xchg xor lea xorl cmp add mov push jle call outsl daa cmp add dec push arpl sbb xor adc mov ret xchg dec lock adc sbb xchg int mov adc lock mov sub clc sbb mov mov lds add mov mov inc jo jge mov sbb mov add cltd mov hlt lock mov sbb adc jo fs sbb (bad) movsb fs test mov mov add cmpsb mov cmpl rolb pushf xchg mov or cwtl cli cld inc add xor and inc pusha data16 sbb add (bad) sar leave xor xor lds cmp mov int3 pusha push push ficom dec inc out mov xor sbb lret and push data16 xchg mov or push add push sbb sbb dec add xor inc lcall rcrb jne xchg in ret mov xchg add in test mov test xchg pusha cmpsl sub sahf sbb inc xor xor cli jne add pop dec daa add mov xchg outsb add es mov sbb setnp sbb pop sahf icebp std cmpb sbb xchg dec and int3 xchg sti out pusha push xchg aam add xchg test cwtl inc xchg or push call sahf push iret mov movups jge scas add sbb mov lock test js add mov push mov xor xor add sbb sbb or in sbb sbb lock or mov popa ljmp (bad) es dec stos pushf dec sti aam or jae jmp lcall lods dec xorps fcoml add ds lret add sbb mov les pushf int inc mov push stc daa pop out enter xor sbbb dec sbb sub adc or test adc xor hlt dec cmc fcmove mov pop mov sarb test mov ret es dec aam adc insb mov ficom in cmp nop cld adc pop or or cwtl cltd pushf push or push rclb dec js gs sbb xor stc enter jecxz sbb sub add (bad) dec repz xor lds cmp fldl sbb dec sub int3 in inc xchg xchg fwait je fstpl mov pop push insl stos mov sub rcrb mov add mov sbb dec and insb add pop cmc notl inc pop mov icebp add pusha gs stos bswap cs repz sbb add jo xor nop sub add push sbbb jo gs push xchg cmc cmpsb (bad) push dec out and (bad) dec push and mov or or xchg cs cwtl push and sbb and add xchg pusha xor out shlb sbb jge xchg andl les sbb insb xchg daa int3 adc mov add cmp clc nop pop and shr dec mov or add int fwait cwtl js and fist push cltd out and or and shlb cmp daa sti and push inc push sbb sub cmp xor aas nop mov cmp popf in shrd sbb negb add mov add pop out stos dec (bad) mov mov (bad) push mov enter out inc pop adc icebp jmp bound ret mov ret jecxz sub stc xor nop clc add ret xchg add mov in nop inc pushf leave jmp inc add imul (bad) jo add pusha mov or mov js test mov lret lret add ds mov nop clc add in cmp mov xlat jbe cli sbb add inc leave int push fisub and sarb mov fdivrl mov lds add test daa and sub or (bad) xchg sarb lock test push push aaa sub pushl xchg adc mov mov (bad) fs xchg sbb popf adc sub sbb ret push daa mov insb loope push cwtl lock test sbb xchg dec cwtl adc rorl and out orb inc mov dec mov jo add loope inc andb bound xlat out mov popf xor and push insb pop mov test push fdivrs push (bad) xorl mov push shlb frstor mov pusha dec xor out mov mov add clc and scas sub lret add mov push jmp add jnp inc aam stc rolb jne test test xor sbb and les cld lock xor sbb daa xchg xchg mov jl mov sbb and inc adc jo sbb mov and cmp addb mov fs leave add jno das fwait cld sbb insb xchg sub xor mov lds adc iret or adc inc sub mov mov jo sbb adc mov sbb fsts mov cmp adc sbb jo jl add jl adc xchg adc fdiv inc fdiv insl pop sub lret mov shr cs xor cltd sbb xchg cs and mov xchg adc mov jno popf sbb xor jl daa pop movsb and sub aad add dec cld xchg add outsb sbb jno mov rorb sbb jge mov aam or nop test add mov insb dec (bad) lds dec mov (bad) push inc test les ret mov shrl roll outsb sbb jns test out (bad) repnz push ds popf andb imul pusha pushf or fs movsl pop in pusha dec sbb mov cmpsb out inc fwait mov mov xor inc test sub jnp mov pop sub push pause loope and add pop adc mov mov inc movsbl inc lods in add jge test xor pushf xchg sbb cli or daa in push jnp add cmp add nop inc in jbe sbb mov outsb popa adcb add and ljmp sub and jecxz push pop cmpsb sbb cld fcoms pop pop push jmp pushf lret test mov and xchg fisubrl ret inc imul jecxz sub ds (bad) movsb jbe xor mov jne dec repnz fcmovbe andb jg mov mov aaa add mov xor mov mov mov (bad) daa mov or rorb xchg mov jae sbb inc sbb jae jl mov mov pusha cmp adc ret es nop jne cmp movb sbb pop fsts dec push andb adc daa fmuls insb mov dec xor jg or pop scas loop jo idivb mov or xchg or adc sbb mov cmp daa fisttpll adcl or mov jno cmp aaa sub pushf add push loope mov add iret orb out je jno or fsts pusha lock es cmp cmp sub add (bad) imul add xor daa pop adc and mov and bound inc iret sub xor cmp sub mov insl xchg xchg dec aam test jecxz aam nop xor adc cli daa push lods mov mov push mov adc push leave push push add ret jecxz inc mov cmp ds push test lahf rorl mov ljmp lock adc movhps out pop add iret mov or stos mov shrl daa in loopne xchg pop jp adc enter imul add stos adc or xchg push xor mov cmp test sbb insb sbb mov loope (bad) test push mov adc push lret movsb test rorb adc icebp (bad) aam lock test mov ljmp mov dec pop xorb popf pushf jge pop in cmp push lock sahf lock lds int3 inc add mov es aas sar stos and adc (bad) dec test test xchg cmpsl je (bad) xlat flds cmpsb add faddl jl loopne std push mov shl popa push inc add fwait (bad) push mov test je outsb cmp push mov xor dec add adc hlt cmc cmpsl mov inc lret add lods daa aad iret (bad) hlt push dec movsb pusha lock (bad) or movb dec out add vmovd and adc inc sbb jecxz loop add mov in push ss cmpsl lods pop jnp cmp loop jbe mov aam inc pop iret loope inc or ret xor and stc aas cli mov adc sub mov and mov dec fdivs pop (bad) shl cli sbb loopne adc xor mov lret (bad) sahf add xor add sahf push push ja mull pushf dec cmp aas loop out push mov lahf mov sbb sbb and add (bad) cwtl sbb ja ret pusha in lea fs shll mov xchg inc loop out push test mov inc add inc xor repz adc add aad sti xor sbbb dec add test lahf mul sahf and or loopne subb stc pop (bad) push mov lcall mov xor jns push jmp xchg adc aam add xor xor xor adc dec add repnz lock or shrl clc mov dec jp and mov push addr16 ret loope sti call loopne mov fwait lahf iret jnp mov pushf pop sbb dec test adc call rolb test popf mov cmpsb jne shrd daa mov test inc and or sub (bad) dec pusha dec incb fcomps jnp negl outsl out test leave inc orl icebp mov in jb movsl mov xorl stos int3 lret in aaa xorb popf dec clc mov mov and push aad inc loop es xor push inc or inc outsl mov mov enter je icebp push adcb push mov loop nop fcoms pop and add and test pop add jne pusha cwtl jo lahf aam unpcklps in cmpsl jecxz xor mov test loop enter ret (bad) and insl pop test dec movsl faddl scas inc repnz xchg hlt inc out add push xchg inc jmp adc (bad) lds sub xor pop mov int3 add jnp and lcall lret leave mov cltd call (bad) xlat data16 and jo nop cmp sub jmp jl dec hlt add and inc lock call xor jmp add subl add jmp push inc int3 insl pop and jl and xorb outsb pushf popa lahf cwtl add cmc movsl loopne jecxz sub or dec and loopne push adc pop add jmp and and add jb dec add inc mov repnz add test cbtw and sti test push xor and call xor mov in es xchg mov xchg push mov les cs lds pop push adc xchg cmp popa les mov (bad) js es hlt pusha data16 loopne add mov (bad) loope ja and xor mov (bad) jecxz mov jg add mov cmp pop sbbb xchg add clc loopne pusha add or imull pop xlat repnz or frstor sbb popa sub inc call aas xchg push ds mov int3 mov push cld aad sub pop (bad) xor lahf testb bound pop add cmp (bad) or dec imul and jmp gs cmp test in inc mov sbb loopne add aam out pop pusha jnp xchg (bad) mov sub testb sub lcall xor inc mov daa cmp pusha pop sbb pushf pop test dec xchg lods clc mov or add sbb sub add aas push add dec loopne pop mov ljmp jmp add flds movsb push js ret out and loopne and or orl repz sub and xor or pop sbb pop cmp inc add push pop sbb inc icebp mov imul test sbbb cmpsb fcomi xor sbb insl scas fmull enter xchg mov sbb push add insl adcb push inc popa fsubrs mov push cmove lods stc mov inc push inc sbb aad imul jnp adc dec fmuls das add aaa sub adc aas in loopne imul popf lods clc fs xchg rorb mov cmovl pop (bad) push mov dec mov imul ret xor and inc mov jecxz (bad) cmpsl mov sbb cs test and push add stc mov cmpsb in es mov loop jecxz sub fadds ds lahf addr16 xor dec hlt inc xor push pop call jae cmp ja inc mov or add jne fisttp dec iret (bad) jg cmpsb fsubl jp push nop mov push out (bad) sbb or loope adc testb mov xor les test mov ja push js mov adc xor int3 pushf clc pop mov scas jl insb or push mov push notb ljmp push adc push hlt add insb jbe adcl fisubl add jcxz hlt lea loop popa push test call xchg sub lcall push (bad) jae mov addr16 mov add cmp dec add in js leave clc mov push mov aas xchg xor outsb inc xchg lock push mov dec mov bsr int3 sbb ja es cwtl push inc loopne mov rol mov imull push leave adc arpl adc lods xor popa sub addr16 jge stos cmpsb jae sub xchg mov xor mov fwait mov add jb fisttpll mov adc out mov loopne mov leave lock mov movl mov (bad) and fadds bound lock out or inc pop mov jo mov sbb inc adc inc add sbb loopne xor pop or and mulb add mov jg mov dec cmp or add ds cmpsb adc movsb bound jns sbb push jp xchg push sub repnz or sbb shrb imul lcall jno fildl add ret aam pop fcomps mov mov mov jecxz cmp dec int insb int3 shll rcrb xor loope jmp or mov cwtl pop xchg ja sti inc out cld inc mov or loope inc add push pop jo loop insb nop out mov inc add imul mov dec sub mov or cmp and enter xchg pushf lds sub (bad) ss mov test mov add adc stc mulps push jnp (bad) scas sahf xchg pusha sbb imul mov addb in xor add add ret xchg adc ret or xor inc and js pusha jnp aad je (bad) xor iret hlt pop jo repnz push sub sarb sbb sbb push push stc mov pop fs push cwtl inc push mov jne sub xchg mov out sbbb dec clc mov inc dec add movsl scas push hlt pusha cmp mov sbb xor int3 sahf jo lock and sbb es cli inc sbb lock (bad) lock jge or nop shlb mov (bad) sti push loope jns mov inc loop add cltd inc inc mull sub push jecxz jbe scas movl inc inc hlt or nop jl orb jmp (bad) inc stos mov sub ja add mov cmp (bad) push clc push jo or sub imul cmp cmp enter dec andb jo xor hlt or mov or xchg clc pushf clc cwtl clc sbb and xor sbb insb xor adc push sub cmpsl and inc out mov xchg lods rolb lock jecxz outsb sub xchg push dec lods insb sbb sbbb pop push ljmp inc dec icebp jmp testl push cld inc jno ja push xchg xchg mov sub js mov loopne xor cmp stc clc loop and arpl add addr16 sbbl lds and push adc mov lock enter add inc xchg push jno sub sbbb add shrl sbb mov dec or cltd inc adc push adc adc enter cmp jo nop sub or pop scas pusha xchg pop push addb pusha divb arpl inc add inc pusha subl and movsb mov popa mov outsb mov xchg add add addb repnz in add sti add pop call test push je xchg rcr test (bad) and push mov cltd cltd sbb int3 push in add xchg push push les clc mov push sbb push loop jae mov lock stc add cmp aam xor fs xchg mov jl test bound pusha sbb leave pop faddp pop inc pop pop (bad) adc nop ret dec add push movsb sbb ror std aad pusha imul and xor daa mov nop add hlt dec or adc call or stos adc aas mov (bad) adc sbb pop mov push aaa fmull jne xchg jl or daa pop loopne cmp jl or and ja push lock or mov xor mov leave repz push pop add ret mov mov and test mov xor in sub sahf add inc lds lret push mov insb popa orb out sbb cltd nop lods and aaa fsubp dec and xor sbb arpl cmp sub sahf fisttpll sbb jo aas xchg lds nop mov js sub sbbb add adc and sub imul add sub mov xor cli and nop cmp cld in or test adc je sub mov ret enter out fistl xchg mov or ret push movsb aas add je pop test xor pushf cltd jecxz sarb (bad) cmpsb std push mov popf stos xlat iret and push xchg pop add js or shr dec loopne push outsb mov push fisub push jo inc mov scas lods fnop ds add xchg adc mov adc cld movsb add iret dec inc in dec ret push sbb lock cmovl pusha or pop outsb push push sbb cltd scas inc decl or inc mov vunpcklps imul add test dec pop aas arpl or jp lret push sbb insb movsb add cmc inc lock jno sub icebp popa or pushf (bad) je add add xor sbb or xchg loope or addr16 in (bad) cmc lcall scas or popa lods jne dec cmp push outsl xchg (bad) cwtl xchg enter cltd roll in jno loopne cmp js push repz adc int3 mov sub ljmp loopne insb push adc dec stos outsl mov js push xchg lret scas mov fadds inc lret cmpsl push cmp jae xchg fstpl jecxz test dec mov loope pop mov pop ljmp sbb cwtl add stc movsb push lods aaa and cld jg enter ret pop inc add and enter lock or insl dec mov lcall arpl mov pushf push mov jg insl ffreep sbb push daa idivb xor inc jne sahf lock push inc test adc inc pop inc in add adc adc xor dec mov test pushf ljmp sub aad and outsl and sub rcrb and gs xor sbb mov push xor shrb ret push test or jo pop push insb lret add dec out aas (bad) loop xchg aam lods js lcall xor jo mov lahf fnsave dec xchg adc or fdivrs push add es aad rorb add js js sub or pop shr or (bad) jmp mov leave incl pop loope and mov mov or jmp scas (bad) cltd aam add xchg and or dec mov push in (bad) mov mov aam and dec jge shr and outsl adc cmpsl mov stos add mov enter xchg jg lock add adc es or mov test pushf push cmp pop and aad mov insb or scas push inc cld add sbb add adc aad rorb jbe inc mov push jle test cld adc and sahf inc orb pop fbld add ret inc jp pop add add hlt aam pop add loop subb insl loopne sbb jae push mov cmpsl sbb aad mov xor and js mov sbbl dec add mov pop leave mov mov adc in inc sub sub icebp hlt lahf repnz push jo dec pop mov pop nop mov aam cmc js sub fild xor pop call outsb cltd push aad and js test xchg sbb xor dec popa enter dec lret jo mov sub dec lcall push or int3 dec xor add insl pushf lods xchg int sbb les mov mov inc or ljmp rorb cmp mov xchg mov jbe push push push mov adc add int sub pop jle pusha cmp or femms or mov mov ljmp into mov add xchg pop bound adc repz jmp xchg cmp daa dec inc fs sub je mov sbb sbb add xlat insb xchg add lahf adc loopne test fcmovne lahf cwtl cwtl ret push xor lret inc adc mov pusha ret cmp and cmp cmp and and subb and push lods mov inc andl imul int and scas ret jl sub push insl xchg mov jl test sub dec stos xchg fcomp xchg andl sbb movsl inc xchg or push push xor add cmp loop,pt jmp aad popa outsb imul pop ljmp lds jp daa dec mov push cmp repz dec insb leave adc mov fsts adc clc (bad) pop in mov movsb pop push int3 js xchg sbb or andb fildll es pusha ja je (bad) popa xchg cwtl cld cld adc pop mov and inc repnz rclb add rolb sbb jne pop jno mov add std xlat fsubrs out adc nop rcl push sbb add adc lcall sub stc push mov mov loop xchg cmc mov hlt sti orb mov into popa aad jo or mov daa and cmp sbb mov pop popf push dec xchg nop adc sub bound jno cmp adc jb jae fmuls aaa or popa movsb mov pop rclb jae in arpl mov mov sub ret jo js cmp aaa xor addr16 or outsb push and sub lock mov jns pop shlb fcomp dec mov (bad) sub add in test ljmp or mov nop mov ret push jb mov loop mov popf jl jae jo imul or mov call pop jp mov cli xchg adc mov push (bad) dec mov add rorb mov xchg (bad) push leave xchg orb in inc loop sbb lcall out (bad) in add outsl mov aas notb hlt add stc mov add hlt ret mov mov in pop ds or push nop sbb dec dec out pop add mov clc or rol mov loop ret fcompl dec xchg xor aas inc lods adc clc mov test mov pop pop int3 dec int add mov fs or cwtl cltd pop mov add or lahf mov fs add scas pop and mov dec (bad) mov pop loopne add adc pop (bad) (bad) mov in mov or sbb push cmpsb mov push mov sbb sub mov dec addr16 and (bad) in aad scas test or rorb and (bad) cmp push dec (bad) jle mov ja les cwtl mov pop stos sbb cmpsl into lahf dec movsb ret (bad) or ret lret out add (bad) xor add popf lret add or mov ficom imul push mov fs shlb cmp sbb scas faddl sub sarb xchg pop add push jp lods xchg and sub frstor pop dec sahf cmp dec stos mov sbbl roll fimul jmp dec or bound inc fcoml jnp inc psubq shrl aas dec mov pusha xchg push leave out aad push into mov (bad) shlb xor (bad) icebp cwtl push lods xor ja pop sub adc popa xor loop data16 movsl test data16 mov xlat inc cmp icebp mov std dec mov xchg add and test cli scas subl xor xchg xor inc or push mov push push add iret mov lock loop (bad) loopne jmp movsb (bad) mov outsb cltd addr16 andb scas mov test mov outsl add mov push add push inc push call hlt xor in mov add mov loopne jbe daa and pop hlt mov pop insb or dec test daa jmp inc popf call push leave push mov jp inc aad outsb pop or jae mov insl mov sbb movsb outsl xor test mov out inc insl mov push ds mov adc xor inc cmp push jo jne scas add outsl lcall inc in xor inc mov enter es scas jo outsl test xor cmp enter cmp gs push or mov pushf or cld mov fdivl dec add lods std xlat sbb lods sub test sbb push dec add pop mov pop jp pusha or ds jo fwait movsb orl and cmp int aas push pusha or scas pushf pusha loopne and in or pop or ds dec gs adc xor movb out jecxz pop xchg test daa adc int3 sbb add push xor mov xor clc mov mov out cmp jmp std out inc movsb stc rol dec fwait lods cmp and je rol xor sub mov movsl jbe popa and jge (bad) hlt dec addr16 dec rorb xor adc inc test sub scas (bad) lock rcrb mov sbb rolb adc loop test xor daa lea xor and add cmpsb xlat sti out or push int sub add stc loopne mov sub into adc stc js sub lds ss scas out push icebp or aad les mov push pop (bad) out cwtl inc fsts pop int3 fiaddl mov xchg (bad) pusha cmp loopne or mov notl jl dec push mov and (bad) push (bad) (bad) out and popa mov xchg loop in outsb push in mov outsl loopne data16 jmp idivl mov rol repz and scas and aad mov mov mov and mov andb mov mov outsb or cmpsl push movsl das inc or idivl or fwait (bad) jo data16 and or sbb push mov cmp icebp adc push ret pop movsb dec add ret out mov aam pop cmp mov push adc clc push fcompl enter cmp repz movsl mov daa mov jae dec fmull sub inc sub xchg (bad) jb loope loopne pop lock clc cld (bad) (bad) xor xor loope jo mov adc mov xchg aam in xor xchg nop dec add sbb jne adc add and jp sub pop cmp mov mov xor ret jns adc repz clc add aaa cmpsl arpl int and dec cmpsl stos mov inc xchg fldenv and xchg sti add push iret add push cmpsl pop xchg pop in and or adc add and pusha aad adc lds cmpsl and adc or cmp hlt jecxz mov cmp call mov mov (bad) mov (bad) add mov add mov push in push pop (bad) and shll cltd imul sbb or sbb nop int3 pushf in mov loop in lds push xchg fs xor leave add pop (bad) mov push test pusha lock in add mov push cmpsl add clc cmp add jae aam in add add out nop mov xchg (bad) shlb mov xchg pushf push xor imul aas mov sub int add mov push mov pop add lahf out sbb push xchg hlt dec in movsb and add mov lods es rolb gs jle mov mov pop push jo dec mov jne xor dec push pop pusha (bad) stc sti jecxz idivb jg or cltd cmp jl inc test xchg arpl adc ret add push mov fs cmp addb xchg mov mov dec cmp xor add sub xchg xor in xchg xchg add sar cmp push pop scas mov mov adc cmpsl test add cld (bad) mov push outsl jo push movsl cmp xor jno mov lods mov add mov sti dec (bad) xor dec ja mov pop lock inc push add ds cs cmpsb adc jae pop cmp shrl aad push or and xchg cs sbb out jnp mov mov addl (bad) ljmp cld inc add call ret adc test repnz sub sbbb test xor add add fnstcw or mov or shr outsl pop arpl pusha inc cmpb mov jp hlt or (bad) xchg mov mov push out clc rorb hlt out (bad) or and subb fwait aam test loopne cmp lahf mov mov (bad) mov push sbb cmp jb and lock sub arpl insl arpl inc sar mov js mov xor sbb mov (bad) jmp sbb dec xor div cltd dec loopne into sahf or pop mov (bad) cld dec test rclb cmp pop dec loop jnp cmp jl daa adc cmp sti mov push int adc add sub cld dec dec in pop xor adc lods js xor sub inc sahf addr16 test iret je push fisttp push outsb cwtl pusha inc lret dec cwtl hlt and clc in lock mov mov movsl in cmp jo out add mov lahf test or xor xchg and dec test arpl jl jo sbb mov mov mov add lahf dec push adc (bad) xchg rcrl test in in xchg jnp sti rorl call subl and jmp test pusha mov ljmp (bad) xor js xchg loopne imul mov pmovmskb add dec add incl ja gs addr16 ret cltd jmp or les cmp xchg add addb dec sbb sub lods sub or or sbb les gs inc xchg sub decb cmc pushf bound (bad) xchg or and lret inc inc mov cmp inc xlat loopne incb (bad) sub cwtl enter int3 add out shrl cld inc cwtl pusha cmp jmp int3 mov push cmp and inc ja cmp cltd sbb sbb test or dec ror xor enter aad adc and cmp fild je push mov inc call xchg in js js adc ret fnstsw (bad) popa cwtl (bad) add imul (bad) xlat sbb mov sub adc in je dec mov push sub cmpl jge sub es dec or inc dec jecxz and loope xorb and pop in fs bound movsl and fs push cld daa and lds jns rolb repz add sbb push out mov ficom roll pop and arpl ja (bad) adc xchg imull cmp lcall (bad) cmpsb insl icebp rclb xorl cmp pushf xor cld sbb jbe in or in je push je or nop push dec stc int3 pop push pusha xor arpl push cwtl dec fs loope adc adc repz pop xor adc push dec sbb sub push subl xchg mov sub mov xor adcb dec orl and inc hlt pop xor lock (bad) (bad) mov addl in out inc inc inc pop popa jns mov cmc mov icebp pop or cmp push hlt jl xchg mov jmp rcrb xchg in ret aam xor stos lds sub adc add outsl enter movsb repnz pop mov inc in (bad) cmpsb fcom movsb or out pusha or push fnsave add insl dec pop and mov push sti xor dec or inc pop jne pushf outsb and push xor cld fiaddl mov pop xor mov hlt push cmp push xor mov das loope xchg jo add divl cld fsubrs cmp inc push jne insb out and inc je test lcall xor ret add fisttp cwtl add pusha push pop xchg lock inc jo ja pop test sbb push daa xchg mov or ficomp xchg fildl fbstp arpl shrl rcrb mov leave lahf lret jp pop fisubl jb,pn fs and enter pop or call rorb sub and jno pop pop or call mov inc fcomps pop cltd adc adc push repz cltd rcr popa jae and xchg test loopne xor add mov lock fdivr std mov mov ret pcmpgtw sahf stc mov stos icebp roll inc hlt rol jmp dec bsr jp inc iret xor fwait orb sbb insl xor hlt aad lock pushf test cltd pushf inc dec cmpsb add ret dec cld inc push xchg or mov mov jge clc leave cs ficoml and adc (bad) adc in arpl je leave rol call dec arpl in aad (bad) pushf push je leave pop sahf add cmpsl push (bad) mov js inc xor dec daa popf pop pushf dec cmp test adc out mov add test js lret outsb movb bndldx dec xchg dec test aam adc cmpsl xchg or sub fist add pop add mov mov jo arpl outsl xor adc mov add fist test xor dec jmp pop adc cmp sbb pop lock jmp cmp movsl fimull mov sar scas jmp adc subb in lds or jne mov pushf dec jae mov sahf fcoml dec js ret jne clc test movl stos fistl aad cmp out fwait repz inc ljmp sub and lret mov xor repz sbb sub call push xor or adc push add cmp loopne test movsl xor adc and lock leave adc xchg in test pop cs xor mov pop xorb cmp jbe sub and (bad) pop inc dec mov sub pop mov jle test sub cs fmuls aam dec xor push dec fstpt fdivrs pop lock dec lods or inc repnz (bad) loopne sbb push pop mov cs add lahf arpl movsb push pop test pusha dec addr16 lock js dec xchg sbb add icebp insl repz push cmp adc jne add sub mov mov or (bad) aad sub seto push jnp sbb mov pop call js or dec (bad) jo inc sbb (bad) mov lods add cwtl clc mov cwtl push add sbb aaa add es or mov jge (bad) aam sub sbbb jle push mov mov test les mov push pop and push inc test adc lret loope ja mov mov in xor and sub ficomp inc int3 addr16 or mov cld xor gs cmc jp loop adc hlt inc arpl sbb adc test push cmp pop pop or sbb xchg add cmpw pop cmpsb (bad) add aas xor js sbb add cli aaa and mov rolb sbb push inc cwtl sbb test ret push xor lret mov roll test (bad) stos sbbb mov dec rcrl lods add movsw repz test insb ds mov adcb sbb jno jge in sbb jecxz loopne jno stc xor addb jne and cmpsb inc xlat inc out arpl repz lea sub push lahf and loope pop xor cltd enter dec and inc inc sub push mov mov xor or push pop idivl pusha push xchg xchg fcom fnstcw je and push in push xchg ror push mov ror sub mov pop sarb mov mov cs add mov enter fcoml sub arpl pusha push jle loopne,pt fadds mov scas xchg xor pusha add xlat nop adc adc iret mov (bad) cmp lock adc pop or xor sbb mov add dec or repz mov movsb cmp and adc clc xchg test adc sbb mov ds add mov test and fwait jge dec sbbb sub mov sub mov pop xor testl mov add sbb (bad) loope mov lret pop add ficoml loop bound jo inc push lock sarb inc repz incb in (bad) push and adc mov dec add fmull les sahf and aaa mov mov lock add nop cmp pop pop mov sbb fldcw in and loop jl icebp dec clc xchg mov push jnp mov add jge into adc mov adcl mov jbe mov sbb jo xchg gs lea sbb sub mov dec or (bad) push sbb nop jo dec adc data16 xor jbe push cs dec sub pavgb add fucomip pop dec sub jg inc jo sbb les mov lcall js inc pop push andb mov or orl dec les adc imul push loope dec fildll fcom ds or mov sub imul scas xchg testl add pop enter hlt ret enter adc repnz push in mov sub jl mov add cmp jnp mov jo mov inc cmpsb shrb mov dec pusha fwait sbb in xor sti pop inc or nop xchg popa push enter xchg jo jno sbb stc push pusha test jo adc xor dec mov or add dec cwtl fldenv rorb aas (bad) aam hlt shlb shlb jns mov test push sti sub imul test adc imul push iret mov mov mov scas mov and mov add jns mov and cld shll imulb imul out add dec xchg sti xor add jl mov or push cwtl ds xchg rorb imul ss outsb push cmp mov jb arpl adc push dec test mov das test push les inc push pop pop movl mov or push clc cmpl add or xor jae xchg and rorb lret stos sub loopne pop adc add mov add and xor dec jnp xchg hlt leave mov and mov test mov inc mov jnp adc (bad) jmp adc mov aaa addl out add (bad) adc add movsb clc inc mov mov jns mov bound movl add push or xchg sub les mov das call loope jmp or outsl rclb jb add push pushf mov add imul test cmp stos loop ret pop loopne mov in pop aaa rolb mov xor jle (bad) in pop leave inc cmp push dec push xchg addr16 or pop or mov add jns scas sbb push adc out aaa data16 and leave cmp jbe xor xchg insb test push aam mov jmp jg add xchg or lods add clc pop cmp fs sbbb repnz sahf pop cmpl mov add adc ret je and adc (bad) subb sub add sub or fxch jne ret fmul dec stc adcb sbb rcl xor leave mov sahf add mov (bad) repnz fwait out fisttpl addr16 sbb lahf push cmp fsubrs add or adc mov pop (bad) mov cltd jmp (bad) sub inc lods sbb xchg or lahf gs dec movsb pusha dec mov (bad) cmp sbb sbb push imul mov (bad) addl movntps pop (bad) lahf dec push add pop mov mov inc ret data16 or movsb sub nop fstl dec add adc mov inc out test mov dec in sub mov stc xorb push push cli and pop adc xchg fiaddl js add sub pop (bad) xchg mov leave mov or pusha cld mov sub pop arpl pop or dec fucomp jns lret xchg loope lahf add int pop xchg mov test ljmp adc inc xor push and pop adc sub add ret (bad) mov sti fs ds jp hlt add cli dec jae dec (bad) sbb cmp mov aam add adc push (bad) xor in orb jp aaa xlat sbb hlt orl jo pop jl mov jmp js sub in pop jns out rcl stc sub les out cld pop stos push mov jecxz and mov push push xor addb sub in sbb pop add dec sbb mov arpl clc add (bad) and loopne adc (bad) (bad) push (bad) cld sarb in add jg dec add sbb nop fiadd mov sub mov add push mov push cmpsl inc outsl pop sbb out or mov jg jae adc push loope ja add loopne add out sbb jo mov mov lcall sbb test jmpw jno aas jbe sub (bad) jp bswap stos repnz movsb sbbb es (bad) hlt add jl (bad) mov fbstp popf dec xor sbbl fs jle jne (bad) cmc jmp test mov adcl (bad) clc cltd sub mov add cwtl push pop loopne movsl roll cwtl cmp add ds adc mov jnp mov shr fnstenv adc jo inc cwtl cltd xor in mov pop ss rolw lcall leave dec icebp lods ret out pop inc inc imul daa fwait xchg mov adc leave mov xchg jge les cmp cmp mov mov enter cmp int bound mov add dec mov (bad) dec add inc movsb popf inc pushf sbb fmuls ss movsb or in int (bad) test dec insb adc dec push jo pop in mov mov sbb mov sbb mov cltd push jmp add mov negl (bad) enter insb arpl push mov xor pop inc decb pop iret jo jmp dec mov add sahf lods dec inc pushf mov mov dec lahf xchg enter push mov imul mov inc fcom lahf mov push and je xlat lret push movl test mov js pop rorl adc cwtl jle mov inc movsl or pop adc sub (bad) dec adc orl fcmovnb inc (bad) or pop je cwtl push jns pusha xchg or cld enter xchg adc jo,pn sub cld ja adc rorl sbb cwtl push stos xor js pushf lock sub enter hlt mov xchg aam sti mov stc enter call bound sub mov jg test lret mov clc inc xchg dec push or mov or add insb (bad) adc xor pop cmc movsb add dec add xor shrb pop sub (bad) js mov mov adc inc fisubr dec add and pop add je push mov fcom pop fdivl arpl leave xchg dec mov mov incl inc pop movb inc loopne hlt popf (bad) and inc ss loop clc or andl and rorb adc cwtl cmp addl add xchg xchg and sti data16 add inc loopne mov mov scas push jns aad or pusha movsb inc adc lock add xor adc into push in movsb ret adcl call test sbb cld dec cltd int3 hlt hlt xchg mov jns les or add test testb push pusha pop jno rcrl lods (bad) and int3 (bad) push mov lock clc fs mov jl pop push rorl push sbb xor jle popa jp pop andb sub popf mov add adc incb mov sub les fisub pusha adc sahf push or push mov or je mov add and and adcl pushf subb stos js xor jp and add and (bad) jne aam push mov std dec cmp in je lret dec (bad) jmp inc loope shl jp xor cmp cwtl dec inc ret cld add xor xor je dec push outsl mov int adc ds outsb inc cmp lret inc scas (bad) jae pop and in push popf inc out rcrl les call cwtl inc cmp or jmp and lds pop mov leave dec push mov adc jmp es icebp xor mov rcl out dec add pop pusha inc enter or push sub sub mov xchg loopne jns mov fwait arpl hlt int test push roll add push inc ja lock mov cli dec jp mov inc mov jae adc call movsb push leave mov js (bad) push fmull mov fcomps loopne,pn sub mov fildll repnz add test fmull incb je shrl ret adc jg insl dec inc pop gs fisttp pusha nop xchg fcompl shll dec test aaa ja dec mov and out pop inc mov sets and mov add mov push insb aad push dec cld lock lahf rorb push sub fdivr dec cmp les sub mov hlt sar xlat (bad) pminsw imul jnp xor mov lret jno xor adc test negl and (bad) mov push or call mov sub fsubrl sti (bad) fwait aas inc arpl mov test in inc cmp pop movsb dec pusha lcall ja push movsb add push add sub faddl test divl lahf and aam cmp and lock lock (bad) fdivr shl aam ret stc cwtl cmpsb in popf iret inc adc bound inc rcr es out loop dec (bad) mov les sub rcrb and rorb rclb loop fstpt pop hlt nop loope mov inc (bad) clc testb or cmp loopne outsb scas adc jae int3 add rcr adc inc lock push out mov dec lea pop xor ss and sub xchg sbbl fild or sbb clc or inc ja arpl jge and xor sbb jg das cwtl fcmovnb call addr16 dec lcall xlat les in xor push adc mov mov pop repz mul mov push cltd test mov push fwait test aad pop jp push outsb (bad) (bad) adc ret jnp sub in or xor loop xchg xor out inc fs cmp xor cmc sbbb lds inc movsb lds pop ficom mov lods push push das and clc daa rorb cmpsl cmp mov add xor daa lahf pop pop addr16 xchg in sarl rorb popa std pop mov sub sarb add iret inc dec (bad) je sbb xchg shrl lret sahf jbe inc xor mov cmc xchg jmp mov shrb into pop xchg out lods hlt add xchg mulb push sti (bad) mov sarl out addr16 test stos and jmp pop sub jp cwtl cmpsl jae add pop mov add mov add mov mov lods test mov jmp adc inc add pop xor mov lret sbb xlat enter ljmp fs and enter (bad) addr16 (bad) push mov jmp or jbe add popa dec adc enter or mov mul pushf stc out sbb jae push ss call dec fsubr bswap cmp clc sahf addb inc dec iret mov (bad) movsl (bad) jne popa pmulhw test loop xchg jmp sbb jmp (bad) or pushf add loop mov fildl in adc iret inc mov push (bad) cltd mov addr16 mov aam add clc and mov or inc imul lahf mov inc jbe rclb ret jnp lret jl xchg inc mov imul dec jp scas fistp mov mov jbe jnp mov mov or mov add call add mov scas addr16 mov lock inc push dec leave cmp test gs testb xchg add rolb ss test leave sbb in sti fs sbb mov rclb inc lock rcrl add pushf dec cli mov andl mov cmp add jmp push lock lock sub inc fwait sub sub cmp jl lret lock mov aam push jo pop sbbl aad test xor push outsl inc mov adc mov sar outsb mov popf pop jle adc or inc test sti cmpsl in add push fsub jmp push daa sbbb mov mov mov cwtl pop subl jle mov dec mov ss jns roll nop sti imul add add call cwtl mov stc push aam xchg addb ja mov (bad) mov call or sahf push lods aam lods inc dec mov adc outsb inc mov mov faddl adc dec mov push cmp pusha or push repz xor adc sbb loope dec in aam mov popa xor repnz or aaa mov popa (bad) sahf and pop int3 xchg cmp add bound pusha fs ss and cmp cmp pop scas aas jbe int3 push push sbb push dec sarl imull jg xchg movsb mov lock test mov cmpsb sub pop test dec addr16 push mov addb mov fcoms rol add fcom loopne dec aaa mov shlb dec add arpl jmp test or (bad) call pop in scas fstpl arpl lds add adc or in mov in sbb adc dec lret inc jae or jnp cwtl jecxz mov data16 mov sbb push inc (bad) and xchg pusha sub push pop xor dec mov cmp js xor cli pop pop or lock add shl jno jmp xor movb inc clc arpl dec xor fs pusha orb inc mov cli lock sub dec cwtl in roll fbstp in rclb test pop in dec lock sahf xchg lock out cli cwtl es cmpsl xor mov dec xor movsl sbb cltd roll cmovne out rclb fscale mov mov pop add jp xor adc mov out rcll adc dec or pop test bound adc lret nop les pop gs mov std add push loope pop xchg mov cmp adc mov add call dec add sbbl mull and jbe sbb push pop add imul (bad) test xchg rorb add pop iret rcrl sub js inc lahf nopl lcall (bad) shrb and clc add aam pop addb loopne adc shr rolb inc cmpb pop dec mov imul add hlt or pop pop jmp inc stc jbe xchg pop loope push sub js add cs lea sti fcoml in fcmovne and dec inc inc shlb add sbb idivl dec add lret jmp inc inc mov lret and je and sahf leave aad daa iret js stc aam lods or sub push add pop ret jl cwtl cli adc push in cmpsl mov inc mov pop out sub outsl inc sbb jl mov nop push dec or cwtl adc aaa aad pusha xchg mov mov dec or sbb and les cli iret sbb ja ret push cltd loop add sub outsl in dec mov mov cmp cmpb push adc sbbl pop data16 mov cmpsl mov adc mov push roll lods xchg lret xor (bad) add fidivr les add add pop ret or sub sbb repnz jbe clc cld pop jae xchg adc rorb xchg pop inc add adc stos out clc incb lea mov xchg arpl fmuls pop sbbl ret movsb nop add pop add cmc add jecxz jmp xor add add jge lods xchg inc orb sar pusha cwtl aaa jmp adc test call stos test sub push rorb add data16 cmc lods jmp pop mov dec test sub add andl inc insb ja xchg xor add repnz sub aam mov pop (bad) sbb xchg and sbb cmpsb jno fldenv je inc bound arpl (bad) mov add das jmp add lods push push fistpll dec mov or pop in rclb cli xor and and icebp mov cmp cmpsb xor sub mov xor pop (bad) xor stc adc xor loope mov lcall pushf sub les sub jno push loope add pop out inc sub hlt insb sbb add fcmovbe pop mov cmpsl mov loopne pop shll mov data16 rcrb sub cltd push sbb mov pop les clc popa cmpsl sbb xchg cltd in fcom lds sub push pusha jge cltd dec cmp and lcall mov xor in stos pop inc adc movsb sahf aaa popa and add or mov jbe dec xor cmp ss rclb lahf icebp add push out jl gs sti jle andb enter sub in sub bound jo mov add jno xchg sbb sbb xor jmp jnp and lock sub jl sbb out xor stos and andl (bad) xor int3 mov jmp int3 add nop adc fwait push lods movsb jl sbb sbb xor dec cmp push cmpsl push sbb pusha add lds mov test or call add ror out pop sbb and arpl pusha xchg cmp lock and fcmovne dec jo dec vmread or mov pop loopne scas sub jbe jb aaa insl dec pop jge fs cwtl loopne add mov addl jbe and outsl aam push mov xchg movb (bad) repz add in jge movsl ret cmp ja aad inc (bad) jno (bad) je mov xchg xlat out loop cmp xor (bad) adc jno sahf pusha jg (bad) lea add repz int3 shr hlt cmp cwtl jge jle add mov adc ds lret icebp into add dec shlb dec dec jecxz dec repz popf dec cmp sub or fidivl dec out fisubr inc clc fs stc sub sti mov das push bound leave inc xor cwtl inc push or lahf pop or push adc xchg stc loopne les scas mov das sbb push xor aam or pusha sar sbb inc inc les ficoml mov rolb cmpsb jp xor in sub cli mov rol decl daa clc rolb jns mov sub pusha add sbbl and cmpsl adc mov out mov add ret inc xor cmp gs out loopne sub mov mov add jno push aam aas add sub jl repnz cmp adc sub icebp outsb lock rorb ret push bound sub sub rolb pop adc sahf cwtl adc shrb clc pop ljmp nop add mov test cmp in jmp or fcmovnbe cld cld sbb xchg add ja fistpll push add add mov sbb hlt nop jl add add loope cltd sub xchg mov test mov xlat nop cs mov inc dec test xchg fsubl mov and mov fs cld adc in (bad) enter ds mov or decb sti xor jl push shrb xor or and negl dec (bad) ret cwtl nop push ljmp jbe mov or arpl popa popf push dec xor aad cmc ret add adc mov xchg int ret popf jnp add jo cmp jecxz jo fcmovnbe out adc ljmp fstps sub popa sbb add and and add iret ret adc push inc stos cmp movl xchg fs imul (bad) aas or xchg or (bad) dec cmc mov mov rcrb test push (bad) sub int push lock sub nop jle sub mov flds movsl aas (bad) popa mov movsb push clc cmpb cwtl imul push cmp outsl aam fildl fstpl sahf cmp and push hlt dec mov ja lock je test fistpll cltd clc sub cmpb dec sub (bad) pusha hlt sti mov popf lods cmp out es int3 sub mov mov add fs pusha pop jecxz push add add out (bad) mov insl popa dec dec lret mov adc addr16 cmp (bad) push push faddl and out mov fcomp mov aaa add mov adc mov cmp in push push mov loopne scas nop loop aam mov add add xlat out inc and push or add push addb aam nop inc je pop adc adc mov stc js std cmpb cltd pop mov mov push dec add add xor push jns or in (bad) nop js pop dec insb jb mov add lds test push mov dec lds stos jge dec push dec hlt jo ja dec mov fldl dec stc orl insl xchg cld mov add mov (bad) out (bad) xlat test sub call arpl enter rorl dec add sbb xlat lds rclb push sub jae push out jecxz or and pop mov add dec stos mov hlt aam int dec fs mov cwtl or mov and popa jmp (bad) and rcll dec movsb rolb in fldl inc sub push cmpsb push leave rolb dec pop (bad) stos lds aam dec sub mov sbb test and nop add cmp push mov pop lret pusha js fdivrs sbb jbe push pop add cmc data16 stos mov (bad) test inc clc or or adc mov mov pop xor sub xor or lock mov mov cmp mov (bad) cmc add xchg inc cwtl dec sub sub push outsb inc pusha xchg cmc pop mov adc push mov adc cmpsb jo xchg loop mov or sub sbb cmp jl mov and add lods and cmpsb addb push decl xor shlb test out ffreep pop or int3 ljmp add sub out loopne pop cmpsb adc mov add frstor sub adc (bad) push adc inc imul push mov inc shlb sbbb add jns mov std sub xor dec cwtl mov mov jg and aas pop stos mov push jmp mov cli inc or pushf mov faddp xor dec dec sarb push xchg mov loopne push push loop adc sbb rcrb lea inc or or notb xor mov add mov rcrb xor add leave xchg push mov cmpsb cwtl daa shll andb cmpsl movsb push add or add pop adc or inc mov adcb sub lods sub or xlat (bad) mov fdivrp add cmp pop cmp adc mov xor push les scas test cmp int3 xchg jecxz loopne imulb icebp or fwait aam jns test call cwtl mov fnstenv lods sub (bad) in xchg push add push inc sbb sbb xor and sub add sbb cmp add aam push cmp cmp lcall dec pop xor mov in dec mov xor adc js repnz sbb push dec cwtl std and cmp pop lea xchg pop push sti jno cmp and mov out add push dec pop or pop push push and (bad) xor adc sbb push shrb jne adc sub aad and movsb add add add in loopne (bad) clc imull (bad) mov adc stos pusha mov insl cmpsb cwtl mov sbb push in push stc cltd add push inc pushf push xor outsl add jmpw stc pop mov sbb les pop push xchg mov jecxz loopne sub (bad) fsubrl es add push cmp int3 les pop or rorb (bad) (bad) mov sbb dec sbb movsb xor rcrl ds push add push addl xchg shll mov out pop sahf repz jge xchg add lods fwait add pop adc repz int notb xchg or and insl push shll mov ds das ret jmp adc fdivs pop aad sbb lea sbb push push shll imul (bad) aaa cmp fildl (bad) push inc add mov pop lods sti cmpsb pop cmp sub aam add push sub fadds or and adc push pop je inc sub sbb cmpl sub sbb cmpsb xor pushf add dec add ret sub xor cld insl jo pop flds push push mov xor jns jl and (bad) je sub insb sarl in xchg cmp aam mov fcoms fs xor int or ret inc cmp movsb data16 adc dec sbb lds clc inc in mov imul fldenv (bad) dec jge sub (bad) xor xor push xchg mov clc enter adc dec pusha add js rcr (bad) cmc push or mov roll push mov inc xchg dec sub dec add sbbl jno test mov insb and mov jno pop ljmp push jge test cmp mov pop push popa sub dec mov push inc jno sub imul mov dec cmp xchg jbe iret xor js add out or sbb test data16 jle cmp test or sub outsb mov lea add jae mov jno sbb sub outsb xor pop rclb pushf dec addb add sub push jns jb mov sbb pushf sub loopne pop push dec cmp sbb popa adc shrb test clc cmp shr mov push fiaddl push rolb mov push stos es mov psrad cmp jb lret mov or test icebp add and pop clc add or (bad) in sahf add cmc cmp dec mov add out push lods or and scas pop mov adc mov push inc movsb movsb add mov repnz cld cmpsb repz add add and xchg add stos nop fstps add or push inc rclb add jb outsl xchg cld loopne cmp mov roll inc stos lds pop nop nop cmpsb add jmp or adc (bad) add ja or sub in shrb shrb mov sub stos jb or adc push cmp jecxz push jl lock loope sub cwtl movsb or xchg nop sbb xchg nop shlb inc test scas mov pop push sub push rcrb ret pop scas jo (bad) pop stos add test mov cwtl mov pop in jb hlt cmpsl stos cmp aaa mov push inc cwtl jmp dec jp call (bad) xchg fwait or dec inc cwtl mov cmp cmpsl push dec push daa inc and mov xor adc fs call mov scas test or ljmp fs xor inc mov xchg xor bound sbb outsl movsl sbb sub xlat stos cltd add mov roll cmp out decb clc lea fldl or push xor sahf xor add fwait int cmc subl xor pop and pushf xchg loopne add dec fisubl mov lahf dec sti mov or mov lcall out jecxz loopne les sar test push jne pop inc adc sbb scas push rcr imul addr16 daa in mov mov js cli packssdw xor icebp test lods mov jo xchg dec das mov push cmp (bad) shll inc mov std inc int3 fsubrl xor stos inc sub add jno mov mov and jns jo push addr16 mov mov mov cld ds sub sbb pop cwtl dec or xor add testb mov (bad) mov cld pop mov pop aad cmp sub pop test sub add int inc dec scas mov mov rcrb pop mov add adc adc mov push ret mov hlt add bound add ss movsb in and in mov rol leave sub dec dec std stc adc mov and xor xchg dec decl mov lock jmp sti jg repz adcl jge scas xor jb add lret sub pusha mov or insb cld nop jo sbb xchg mov xchg and loop pusha stos and loope orb jl xor jp outsl or adc aas lods inc push insl mov jnp pop out add test cmpsb cltd int mov push daa jl add in jle icebp jmp repz cltd (bad) jbe icebp mov adcb (bad) call add fwait pop lods inc mov popf scas test popa mov mov add dec xor movsl sbb push out sub popa adc js add rcrl add imul insl mov push mov push mov add pusha adc inc add cmp push andb cmc int3 leave mov data16 or mov dec mov and add mov orl push out add insb rorl das subl js sub cld inc inc movsb mov jns mov add adcb fs test sbb sub mov or leave xchg ss pusha clc nop rclb sbb cld bound or sbb stos pushf nop mov ljmp push out sarb dec stc adc mov add mov xchg (bad) xchg test and push in xchg push dec pop cmpsb mov cmpsb js inc pop dec sti push adc mov in and (bad) pushf or add sbb mov je cmpsl enter push scas push sub (bad) sbb out mov and sub xor arpl jle push or inc add lea movsb jo loopne int loopne pop and sub repnz sub xchg xlat fsubs add mov adc push pop ficom mov das inc nop push lods inc ds cmp ljmp cli mov inc in inc ficoml les jae repz xchg adc adc inc clc mov inc xor and push and sub pop popa dec adc cmovno hlt cmpsb lock sub xchg fidiv inc test or mov inc addl sbb push dec mov pushf daa std cs fnstcw test pop sahf xor xchg xor add cmc jno rcll mov ja push js or shrb movsb add out jnp repnz jno pop ficompl push (bad) sbb movsb test inc and add test mov and lret int3 fldl call dec mov or sar mov fimul add repnz add push xor loopne lods out pop sub pop ret orl push and nop cmp add imul jo adc mov hlt dec aad or dec rorl or xor decb or adc sti (bad) jo rolb pop out sbb mov test pop inc inc cmp mov xor add (bad) addl movsb enter cltd pusha sbb or nop in inc cmovns inc xchg or cmp jnp adc pop xor test sbb cmc pop jp subb cwtl jmp add ss add test imul into add std mov shlb push stos push push mov test dec test sarb inc addl faddl adc add sub or sub cmc or jmp sub aaa add ljmp xor sbb xchg pusha dec pop hlt in aas cmp rcrb ror and loopne sub mov movsl mov ret and add sbb rorb push sbb xor pop fbld xchg cmp mov jge pop popa int3 and cs cltd insb sbb pop xchg mull mov je sub in daa add fisub js sub mov push xor loopne stos cld ss ds movsl mov and adc jne add push in or pusha inc mov out jo into jp incb dec xor mov inc mov cltd int3 or cli push and scas test out rclb pop rcrb sub (bad) (bad) pop jb aad enter leave push mov sub mov jp mov mov xchg jge sub testl mov insb js sub or jmp lods sub pushf inc div cmpl movsl rcl (bad) xor cld xchg es and cmpsb fsubrs push sub mov imul xchg mov push mov test inc lds cltd jae or mov and (bad) sub fsubs out (bad) and add bound testb out xchg subb xchg repz insb nop lods cwtl mov sbb mov js xchg add inc mov into inc mov and xor (bad) mov mov xor cmp addl movsb pop loopne pop push and adc sti mov scas rcl push or pop push dec mov fs lock or cld repnz cmp mov and insb push or enter inc fmull xchg push movsb or push sub lret cwtl pop add xor mov mov dec je mov add mov sub loopne mov mov and subb popf xchg loopne cmp push rcll fildl push adc add adc lock mov lcall sub lock mov pop dec inc fmull adc jne or sub dec adc rorb cli push (bad) cmc call orb adc sub pop fldl icebp adc xor ffree imul cmp add xlat mov sub lea lret cltd xchg xorb jbe add add sar push loop std xorl in ss cmp fs pop pop sbb jmp out jl int inc sub movsb add mov add mov loopne (bad) xor les add cli fdivr adc xchg xchg or (bad) dec jg sbb stos (bad) jp fsts je jo adc enter mov xor fsubrl jno das add mov add shl hlt add xor scas in arpl add andl enter call test add mov cmc xchg les push out sbb int3 bound testl xor pop les push adc test and test (bad) notb or push xchg dec sbb loope fcoms jo rorb or and cmp adc mov add mov js pop xor test or push dec jmp pusha popa test adc js in adcb xchg lods (bad) dec sbb sub insb pop adc imulb call or pop dec mov xor nop and jne adc lret iret mov push movsb mov dec and pop add loopne fwait mov repz pop sarl js and add out xor push (bad) sub das lods punpcklbw mov jno push jae push addl mov pop loop cmp leave adc lahf xchg fdivrp les or adc cli push out fadds stc fs mov push sbb dec add xor js xchg dec shrb mov mov mov icebp and arpl adc push push mov mov sub mov sub (bad) gs or int3 js jl xor (bad) fisubl or mov add mov dec cmp add mov dec pop add aad out add fstpl xchg (bad) std ficom int3 lahf pop es mov push (bad) dec push out jge mov popa dec in push decb dec mov (bad) fdivs xchg mov cs add ret push imul es cwtl and jmp cmp out test add mov sbb je js inc dec cmp add dec ljmp mov xchg pop aas fidivrl inc add ljmp popa push dec push (bad) xchg roll (bad) cwtl fist sbb adc sub sbb mov clc mov dec (bad) faddp add or sti inc scas sub xor cmpsl and add dec xchg lcall rorb repnz lock lret xor xchg add sub dec popf add ret and lret cmp xor es sbb add daa sbb mov out loope push fiadd lret aam xor insb cmc sub in add mov sbb mov loope lds and push pop mov adc mov pop loopne fs gs addl adc mov cmp pop adc mov jo adc test inc push inc dec out ret ffree fadds into jmp in sub stc and cltd xchg pop hlt and or dec (bad) aad inc sub (bad) xor out rcrb mov or mov sub fimul jbe cmc pushf repnz sbb aaa cmp inc add sbb fildll (bad) mov or fcoms pop or jne repz test out add add ror sub push mov sarl jne or push mov aas xor mov and and sub pop cld aam add pop sbbl test cltd into insl pop les pop pusha fidiv and sub mov enter add rorl js or sbbb dec add push pop ja adc lock movsb iret jne xor xor mov dec lea push imul xor mov add sbbb inc dec push xor push jo leave data16 push test sub out inc test xor pusha rolb mov out xchg lret (bad) mov jmp pop add je mov and inc jne push repnz push mov cs popf xor mov sbb push jg cmp (bad) pusha and leave jns (bad) or fs add iret mov cmp (bad) adc hlt pop jecxz sti pop pop mov outsl sbb lahf mov sub cmp and jns push add daa pop clc aad mov add imul mov push rolb je aaa sbb loope fildl shl and pop xchg dec xchg fwait lcall xlat or cmp js pop arpl jg loopne xchg push push pop mov (bad) fist sti dec pop jae gs stc inc add sahf repz pop sbb cmc call adc or push mov sub or (bad) les jle,pn mov pop push cmp or and les js sbb ds jp mov sub arpl scas xor inc sti mov cwtl jbe jle push mov add lods daa (bad) repnz add iret lock inc outsb push sar inc sbb gs add dec push in push mov pop out lret (bad) adc pop push inc jno jmp add pop push mov and outsl clc dec mov sbb enter jge add adcb xchg (bad) sti pop and jne xor rolb add andl sub call adc in push push pop jbe add clc shr rorb mov mov jbe cmpsl test add and adc sbb rolb jecxz stc testb and pop (bad) lcall inc out or adc fcomi add jmp lret in pop cmp popa loop mov add adc dec pusha icebp add sti (bad) popa sbb push faddl xchg testl and test sbbl insl dec or lock in pop xchg cwtl test adc inc add jnp ja pop pop cli add jbe add sbb orb bound dec and aas push dec fadds mov push outsl popa add movsl js enter nop mov xchg dec test add mov (bad) nop mov push and mov mov sbb fidivl popf adc mov dec sarl inc add stc sti xor cmc iret xor sbb xor pop call shrl push sti (bad) dec jno int3 jnp xorb imul inc push sub popa cmp inc adc fisttpl test lock xor (bad) imul push push inc mov enter jle fucomi (bad) and push outsb mov lock fwait add xor mov adc lret (bad) in ljmp xchg repz into fsubs imul test data16 fwait xchg cs loope ret jb adcl dec test xchg push sbb push add inc hlt ds (bad) xor jecxz movl pop sbb jp pop pop insb push dec or inc add imul lret int3 lock (bad) xor dec negl and dec add xchg icebp jl push add mov dec jle les add and jge mov loop enter inc fildl adc call inc adc adcb cwtl mov incb movl push push clc lds dec sub jno xchg je push js jae sahf adc pop or (bad) add and orb jl cli push mov mov xorb add sub cmp std xor pop push pushl mov out pop fs std pop cltd push xchg mov mov mov fisubrl enter es sub sub xchg mov (bad) push subl test enter lcall xchg adc fsubr push pop mov adc pop jns add sbb (bad) fwait pop push fsubs in shrb flds (bad) cli ret or sbb lret nop sti gs movsb (bad) lock pop xlat add rclb sbb neg pusha arpl add nop sbb xor sbb add cmp inc lock push es mov add adc add pop fdivl xlat ror mov enter nop jl cwtl inc leave inc mov sub pusha mov nop sub ja sarb fldl or sbb dec leave xor and add addl adc inc cmp and mov std sub lock (bad) lret and jno or xchg nop aas pop repnz mov pop inc add add int3 sbb popa sub icebp fnsetpm(287 dec or cmp pop pop and icebp mov and jno fisttpl js cmp and stc xor and pop int push sub orl dec dec sbb sub je cmp or pop mov sbb xor cltd inc sub cli inc enter adc add xor sub add xorl fdivl mov sbb clc inc ret mov std jge cwtl xor sub lock nop pushf add in sub cli jbe jnp cmp push enter cmp mov mov nop lods test jp add xor sbb cltd inc sub rcrb lock and push and cmp cli sub popa mov stc jge insb pop add mov jbe aad inc fldt adc aas sbb mov xlat inc enter lock loop int3 nop pop and jno jbe cwtl xchg je fistpl xor inc add pop lods sbb sbb mov (bad) jo push sub test xchg pop xchg jmp jp sbb inc dec es inc aam test pop pop addl or sub add sbb sub mov lds loopne hlt add stc inc movsl lock fdivrs add dec (bad) rorl scas data16 les xor std dec sarl scas stos or mov ds dec jl jg xor stos mov nop xchg sub push (bad) call add lods cmpsl rcrl ja xchg sub sbb les adc inc (bad) fcom mov sbb imul xor mov mov les js je jecxz adc fimull stc (bad) pop jae adc dec adc xor rcrl mov mov mov call pop mov xor pop aam dec cmp jo lahf iret jo mov test pusha icebp add call mov lret js add imul xchg xchg jae add out xlat ret arpl flds jnp and mov addl inc (bad) jg push inc add negl nop sub adc sub notb mov sub rolb pop add mov and add pop inc lahf enter mov xchg dec mov adc bnd fs mov loop adc add popf dec dec xchg mov jle cmp push and cwtd jno cltd push xor scas popa cwtl icebp jl sbb mov arpl push fwait pop and inc je test and mov pusha cli sti fwait push mov inc jb and (bad) (bad) leave dec inc daa lock sbb dec adc shl mov test jno jg dec xor pop or mov pusha pop or or repnz xchg push sub mov mov add dec xchg push push js sahf js (bad) lock inc push fs push test lcall lods push or inc aas adc out addl in inc into sbb repnz fnstsw hlt popa dec pop outsb inc pusha push jl or imul js ss adc in push enter leave mov mov add test jno shrb jp dec lods and xchg fsubl xchg pusha inc sub in cli loopne sub cmp cmp (bad) lret adc push xchg add cli add inc test cmp sbb fidivl xchg int3 ret sbb loopne add int3 mov pop movsl push or push sbb cwtl mov xor cmp cwtl push push fwait sub mov into xor aas (bad) (bad) mov int3 pop mov loopne pop rcl ja loopne add and sub push loope icebp bswap int3 sbb orps cwtl jno sahf pmulhuw jl inc xchg inc dec rcl sbb inc or mov cmp sbb pop nop sahf imul push loopne scas jbe and aam add fimul fs adc lds sub dec mov fs test mov imul dec push daa data16 adc ret psllq cld or mov mov je stc popf cmp add xorl mov inc arpl out repnz cmp clc stos xchg mov add sub loopne jnp scas and push jmp js fs int3 fcoms sbb imul ret add cmpsb (bad) adc movsb repz dec or and in (bad) test and test lods arpl fs cwtl xchg mov test sbb add jmp or aam pop cmp pop add loopne pop pop add je scas (bad) test fcompl jnp jmp sbb jb mov cld inc (bad) test stc pop aam sub hlt cwtl xchg mov mov das loope stc push lods shrb mov aas insb adc inc out xor and ret clc inc idiv sub stc cmp stc dec cmc sub cmp or jo mov sbb or cwtl push movsl xor sbb leave jl push mov sub mov movsb cmpsb loopne outsl leave mov push add xor setge xchg and js inc add stc mov orl int stos jo hlt lock sbb push push rolb sub and adc mov sbb jb xchg xchg ret fdivrs dec stos sub cmp add sbb and add push (bad) xchg push es pusha dec and mov pop ror jmp sub xor pop inc xor cmp rcll cltd dec push stos push mov (bad) cmp xchg gs movsb xor daa iret dec sarb in loopne jl mov pop outsl cmp cmp dec test add add sbb cld dec mov push mov js xor mov xchg push shlb adcb fnstsw (bad) fisub mov (bad) repz xor jnp insb add lea push out or inc cltd dec add mov aas test data16 dec fimull les lret jl hlt adc div lods lcall xchg xchg push in push jl adc mov pusha sbb sub and jno pusha std dec inc inc xor (bad) sub add inc ss repz sbb lcall inc and je jl add dec subl inc add jl sub pop dec daa dec fwait xor xor push dec mov in insl mov push ss test addr16 push dec call mulb js mov popf add inc jg not mov mov pop jnp inc aas add mov xchg fildl lock outsb and mov into add rcrl or jg pop or xorb add jmp call stos je addr16 cwtl subb push cwtl xor sbb or sub sbb out cltd nop or sbb in lock jge ret inc aaa arpl pop dec push outsb xchg shll or lcall xchg mov out and dec add inc sahf rclb mov jno dec dec inc nop xorb outsl mov add les xchg gs jecxz mov xchg or jl nop dec mov ds adcb jp shrl mov call clc and mov mov push jo adc jbe add sbb jae push lret pushf mov sub pushl fidivrl popf in or daa cmpl bswap or and int rcrl add inc mov aas sub jmp add enter aad jl and sti add push cmp movsl mov sub hlt lahf ljmp add xor jns pop in push mov push cmp and ret xchg adc ds or or mov add orb popa scas fmulp cld mov imul add or mov mov outsb pop fsubrl or or push sbb xchg mov push in enter inc fidivr inc mov add mov add and adc movsb mov push (bad) cmc mov jno test bound pop pop fsubp movsb push dec rorb mov sarb add add insb cmp int3 jmp mov dec add jb iret fwait cmc or jle in dec repz cmp test or jb pusha data16 cmp add xchg push mov mov xchg push (bad) sbb mov xchg stc add inc fs pop js je pop out mov cmp paddsw (bad) mov add dec pop repnz nop and leave xchg mov popa outsb enter inc cmp cmp test jmp dec and mov mov jp and andl xorb xor cmp insb hlt leave sbb push inc lock mov push cmc add insb loopne fsubrs pop mov lcall sub or dec aas add inc out stos mov add fucomi adc or jbe push jle enter sub sbb sub push bound dec call xchg je mov sub je jo xor sub dec adcl lahf in push dec mov inc pop add xor dec sbb sbb add push add push sbb jbe mull out in sub or shl mov jne push cmp inc call into sub dec popf pop adc lret fxtract mov out pop enter mov mov pop js out push adc push and pop jns add inc or fcoms cmp movsb mov xor adc sbb push add hlt mov les sub ror js add movsl rclb lods dec push pop pop jo add faddl movsb mov push repnz shlb pop ficomp pandn and jo or xor push push pop icebp pusha js addl je cmp pop pop jne mov pop adc sub repz test mov jg xor and (bad) sti aam add xchg add sbb and mov bound loopne mov mov add iret mov or inc add mov and sub xor in aad daa sarb xchg (bad) in sbb insb scas in add lds movsb sbb test mov pop push pop and jnp rorb jb add and and push or scas mov dec push mov call in clc sub xchg stos adc das mov add mov cmp push andl cmpl cs pop rcll inc push jne pop add cli loopne dec aaa ja sbb sbb outsl repz ds or sub mov jae push sbb stos shrb shr ret je lds add sbb pop scas sbb js rolb jns sahf push add mov push mov xchg mov and mov add xchg cmpsb jecxz xchg push push ret inc out xorb inc mov add cmp enter cltd add push or add cmp xor in push loopne inc mov add jle nop inc out add sub or iret add (bad) xor arpl jmp jb out jle ret lret sbb fdivs test mov imul pusha mov xor xor cli call ljmp jle mov and (bad) ss or push jo out cld fcoms fmuls push dec cmpsb sub ror clc mov (bad) or insl pop push inc sbb sbb fnop mov in scas sub jcxz xor push call jo sbb (bad) mov push rcr and loope sti mov push dec cwtl inc leave mov mov sbb fstps clc roll cmp sbb mov adc out add push ret cwtl mov add sub xchg pop leave mov imul push (bad) cli push pusha cmp sti xchg xchg pop cwtl add outsb loopne or dec cmp add dec mov lret cltd rolb loopne and xchg sti mov subb pop fnstcw test xor inc sbb jle lcall loopne lret push fimull dec test mov adc cmp pop out stos cmc pop jle pushf add test in (bad) out mov xlat enter insl or add pusha and loopne mov mov mov add int3 mov add imul js mov test or mov sbb test inc out repnz push jl cmpl fadds mov push inc movsb call popa lret dec add ljmp cmp mov orb sbb xchg push and xchg inc xchg cmp jl xchg nop sub ret adc or sbb cwtl shlb leave shlb xchg enter xchg inc mov xchg imul push stos mov inc fnstsw add mov and lret or jle adc orl test jae mov insl or repnz lock fldt mov (bad) scas xchg xchg pop movsb add mov out clc fnstsw xor or add xor dec lret jnp jns movsb xchg (bad) xor dec or push adc cmp stc iret sub and sub test sbb mov pop cmp imul enter mov push rcrb and mov loopne xor enter dec repnz gs dec mov or dec (bad) out ss sub pop sbb push rcrb nop sahf inc add push rcl ja push pop cmc jmp or mov adcb shr sbbb sub lock adc pop scas xor mov icebp pop or aam popa enter rcrl or jbe xchg add add or mov andb and mov push sbb inc jb fisubl push push pusha add mov test (bad) cmc popa int3 sub push mov pop pop sbb jle mov add mov inc push cmp inc push ljmp arpl and mov punpcklwd and das adcl push pop add (bad) ret ljmp xlat jno movsb fidivr movsb pusha nop and pop leave add mov pusha push nop xor adc sarb fcmovnbe adc rcrb pop jg xchg sbb shrb push jo jno mov inc jle iret xchg push test decl daa mov nop test sub andb outsb push sub xchg subb add inc pop mov sub jo cmpsl xor out fldcw repnz es lock pushf xchg xor ret hlt icebp sub lock je sbb pop out pop or cmc adc js pop les sbb out repnz sti dec mov out out xor xor sbb push stc sbb enter xchg mov fs ret pop adc ror movzbl loopne clc push add arpl jae nop adc or ror mov xchg jl pushf add in aaa enter mov les mov push xor sbb adc add nop xchg mov xor cwtl cmp lods sub imul lcall push xor sub sbb iret subl sub adc inc cld pusha inc inc andb lock xchg add gs jecxz out dec cmp xor jg inc xor rcrb repnz sbb inc andb push adc jecxz mov daa je pop sub scas call icebp imul lock fldenv xor xor ljmp adc push pushf xor (bad) jo call cmc dec xchg les sub js inc (bad) enter aas push jmp loopne shrb jge push mov addb pusha subl mov xchg sub cmc sbb adc orl int push sbb mov xchg mov loopne loop add or jmp je cld add sub mov xor aaa aam xchg sbb hlt push sahf fadds inc cwtl mov cmp call scas cmp mov adc les inc sub sbb jmp in add sub fnop into and jbe dec cmp xchg imul add in and add push js push outsl mov inc mov fmuls push movsb dec cmp push sbb mov sub xor push dec adc mov and add enter mov arpl and les cmpsl test outsl xor repnz inc cmc cmp pop loopne sbb iret add mov inc add cmpl outsl add dec mov jae adc fisubrl pop push (bad) xor test inc and push jbe inc push push js xor push cmp cmp enter test jp lea lret aaa pop roll (bad) jo mov adc stc or and les das xor push push mov inc faddl pop js cmp sub sub pop addl in and mov data16 adc test pop inc dec int3 or jns je xchg ljmp sbb cwtl inc in pop xor jo inc push inc inc test pushf sbb push jb insb leave pop movsb data16 idivb mov push inc and mov orl or or (bad) es xchg into and inc cmovle lods fs lret aam dec pop stos test and mov je cmp xor or inc xchg andb add and (bad) xor orb sbb cwtl int3 inc scas pop (bad) test rcrb movl add pop pusha adcb jle add pop ret inc cs mov clc inc addl test jmp add repz int adc xor mov and stos push sarl in (bad) or pop dec mov (bad) in roll jle push pop mov cmp sysenter test test or loopne mov dec sbb pusha cli mov clc fild imul fs push ss or jnp fs insb nop subb pop sub jge cltd sub sub add push adc push sarb cmc adc (bad) xchg mov adcb (bad) insl rclb imul xorl pop and aad mov mov lret and xor test bnd xor mov sarl mov sub pop divl or adc pop jns std ja adc in jl mov arpl inc in popa cmp cmp sbb mov mov pop mov pushf fmul mov es mov enter rol in fs pop inc inc jle (bad) nop and sub inc mov fisubrl adc xor loopne lret sbb jecxz jnp sbb mov dec cltd add testb fbstp rorb jnp pushf add pop lea out and xor out ret jae xor clc je sbb test mov ret sub loope jbe dec out addb add xor jae xchg mov xor in cwtl add call mov rsqrtps das ja jge jl fs adcl jae inc in inc inc push and nop or mov push xchg je lods inc mov dec add outsl add lret lods sub js dec lret sahf adc add push jnp enter daa push rol pusha xor sub add cli (bad) jnp push xor add inc jl shl mov jmp cmp (bad) mov sub cmp popa sbb pop sub and mov xchg and loopne xchg fs and sub mov movsb xchg aad pavgb insb dec (bad) cmp cwtl stos or pushw fcmovne xor jbe and clc xchg inc pop cmp inc je clc mov mov mov cwtl xchg lret rcrb nop rolb clc cmp outsb mov lret add in dec fs sub mov pop arpl mov inc adc pop mov push push (bad) mov ds inc cmp loopne or jmp adc addb (bad) or adc insb pushf sahf and push test aas or push pushf fadds push ror push mov xor cwtl inc loop sub dec lock dec in mov lods outsl leave test inc inc xor (bad) pusha rorl xor jp movsb or sbb mov xchg es adc gs sbb push (bad) mov jbe cmp in add daa int in enter and test push nop enter cs insl and cld enter and xchg pop fldt sbb cld add cld jg add fimull jp out mov xor ret cmp fisttpl pop stos decb (bad) push lock (bad) mov jle cmp cmp imul xlat and adc test adc loop fmuls mov or leave cs push fmull add xor shlb stc inc in aas push loop andl js lret jle sbbb and adc (bad) inc int3 xor test adc clc fwait mov mov inc gs xchg cmpsb push sub xchg cmp pop inc arpl add js outsb or outsl mov shr push add jne or icebp ja or hlt xlat adc mov imul (bad) fdivs sbb mov lret push sub xor or push (bad) sbb dec mov cmp and and sbb pop rcl leave mov or je shl popa adc push cmp push xor jl ds call add test xor mov inc sti aaa cmpsl out icebp add dec test (bad) add jg jo call lock push loopne imul ds push or call and xlat pop cmpb sub inc cmp enter xchg mov dec cmc cmp shll aad xor jo sbb rol mov sbb out cld xchg je ficom les xor push imul pop das xchg dec adc and push fs je js call mov or (bad) pinsrw sub pusha mov or xor (bad) cwtl inc arpl adc addl or cmpsl jg ja dec repz and leave daa or jecxz mov adc add sbb movsl adc sub jecxz xchg pop xchg mov jle pop out jnp jp sub xor xor pop sub in and sub sahf adc sbb xor sub mov sub add ds push lock mov mov mov icebp enter and adc lret add mov inc clc mov dec jnp leave out jno inc inc stc adc outsb jb sti pop pusha lods xchg dec clc ss cmp loope jle push in imul in xor inc xor cmp or cmpsl inc cwtl or imul mov incl pushf je dec (bad) enter jg add mov sbb or dec mov pop mov pop (bad) cmp sub movsb jecxz inc call lahf xor push add lds adc mov loopne push iret les or das add xchg mov and sbb (bad) loopne (bad) pop dec sti and clc add (bad) stc or push sub call je int enter or fldt mov (bad) xchg fisubl (bad) mov xor into test adc mov jbe (bad) xor es aas shr mov inc in lcall mov cs and lods sbb sub nop fadds fidivr dec jle and add aad (bad) into mov or push sti jo push add loopne bound jo sub pop pop mov mov enter nop dec jns mov popa mov (bad) call clc mov scas movsl jb mov dec mov mov mov push cmpsl add cmpl (bad) pop cwtl or bound push ret in or (bad) lock mov or imul mov rorl mov in aad cli push and int cmpsl mov add jl cltd pushf arpl (bad) xchg push mov jecxz inc and js stc mov stc pop mov pop or mov adc cmp inc mov cltd push neg sbb iretw addb add and xchg fxch add mov cmp int3 pop fiaddl jb sub into cld jbe add in dec push mov int3 enter daa mov mov pusha cwtl pop mov pop imul mov jl shrb mov adc in inc (bad) jbe add mov mov nop jno fadds mov dec xor sub add jecxz mov lds scas sub out mov cmp negl add dec push pop into mov mov add inc in add sbb pusha push pop or sbb add jmp mov mov add sti inc push es lods mov pusha insb addr16 rorb shr push add add lret stos pushf inc jmp adc leave cmpsl or sti cmp push outsl lcall fisttpl clc mov push pushf leave fcmovnb sbb push jae nop add (bad) sbb je mov add loopne (bad) fisttpll pusha cmp mov cld dec push cmp pusha negl (bad) dec mov mov fnstenv fmuls js pop mov enter test test cmp cwtl sbbb pop mov imul cmp fs add jecxz icebp xchg fadds xor jmp insb or mov mov gs sahf or bnd xchg adc dec mov cmp js arpl pushf ss jle cmp (bad) jne pop mov and test lds fdivrs fsubrl add je jl inc cmpsl pushf or (bad) pop out int3 rorb adc pop sbb and (bad) pop pusha fildl cmp push add seto push sub xor xchg sbb add lcall cmp test dec jae int3 push inc lods pop sbb mov test cmpsb stos or dec sar or pushf ret nop sub test cmp imull sub pop loop add push mov sbb pop push dec jne xor mov test int in and loop ret aam adc outsl inc xchg cmp xchg inc push clc aad add insl mov mov pushf loopne lahf push testl mov cmp pop ja jmp je or cwtl and loop jl or mov rcr imul jl inc (bad) (bad) sbb (bad) mov push movsb push xor lcall sbb or push sar inc dec mov daa call (bad) mov inc cmc outsb adc cmpsb test mov sub inc pop sub cmp mov push or add aaa add xchg dec lret mov cmp outsl or or loopne fsts daa fdivrl jo xchg adc push or and dec sahf int push sub add cwtl aas cmpsl out add popa xchg das cwtl ret cmp dec call cmpsb rolb in js in test mov fidivrl sub pop mov stos mov mov subb (bad) sti ja cmp pop insb les cmpsl push and (bad) (bad) (bad) mov popf add mov iret push bnd or add xchg or push mov rolb insb and adc cs fwait inc jne or popf lods jae and push sub push add cwtl pop add aaa es pop sub pushf sarb pop dec sbb mov jmp push xchg js dec sbb stos push mov pop fs cwtl sub pop in push jne,pt and popf adc sub cmp push sbb sbb dec repnz cmpsb lea rorb stos mov push fild es pop pop dec lods push outsl rclb push (bad) das jne test cmc push in ffree mov lds stc cmpsb push push testb dec xchg (bad) shl add roll insl mov pusha pop jns xchg call imul fcompl outsb jb in push sub and lret xor xchg add cmp mov pop push jmp sub lods out xchg jo push or imul jo jge xchg sub rolb cmp test mov inc mov or gs add jl aas mov sub mov in and cli xor and je push sub jmp aas (bad) sbb clc in jg lock insb mov sub test out and jecxz dec inc mov cmpsl data16 lret test popa ret add sub (bad) clc xor dec stos lods or mov jbe add and inc les mov add negl (bad) xor cmc addl rcll or inc push imul insb daa rcll add lahf add popf xor ljmp mov lds in stc rol pusha lret mov add mov add inc in or gs inc push ret xor add add lret pushf sub (bad) xchg mov fucomi adc shrb inc iret sbb and dec pop push daa fsts cmp add nop fdivrl adc sub xchg cmp shrb xor andl and push jl movsl movsb in jp fadd test sbb and adc push inc inc clc movsl sbb cwtl dec or sbb add xor popf cwtl xorb movsb add insl clc out int and xor and cld cmp xor push fdivl jb enter mov mov sarl mov lret push add mov jl (bad) and mov outsb ficoml int3 pusha mov cltd adc rcrb stc inc dec cli mov dec pusha cmp sbb xchg cmp adc sbb bound subb pop add pop pop add or insb lret pop push popf ret cmpsl add inc sbbb jmp faddl push or hlt out xor adc cmp add dec into pop cmpsl sub je in hlt out leave sub ja test or int3 ror aam js test push into adc add sub int3 ud2 add aam rorb movsl add out test out adc cmp imul into sub add jae inc mov pop ret sarb aas sbb sahf xchg xchg cmp nop add dec pushf stc push inc (bad) call mov pop rorb ja ret add dec jno xchg sbb pop jmp and fnstcw or out push scas add out adc jns movsb subb into pushf sub adc loopne and idivl mov jno xor mov dec jne dec scas or or sub add mov push std push and (bad) and sahf add pop clc fdivp jl push xor pop mov push lret xor gs jns out (bad) sub ds or clc cli dec adc imul int3 ret pop call inc aad mov push dec cmc dec adc aaa fsubl inc mov dec cld inc in and test jge test les shrb xor cmp push cld push and icebp aam dec cld adc cmp push xchg sahf and stos xor jns nop hlt adc out mov adc out mov pushf or push add jns shl add inc push adc inc sub lods inc loopne pop ljmp shlb leave js add loop aam int xchg icebp or mov inc shrb in cmp mov test sub pop aas addr16 (bad) jmp xchg fwait outsl pop fadd jp lret adc (bad) icebp inc and in xchg cmp scas add push daa cmp mov pop cltd sbb lcall xchg andl bound push clc popl js jo jno shrb fcompl xchg outsl in popa mov and sub push add add js test mov enter enter and jnp aad add pop lret stos call fwait add pop mov or je outsl adc mov lret mov (bad) xor aam in pushf ret mov in popa mov inc mov into hlt shlb sbb dec add or movaps movsb (bad) pushf stc sarl fcoml imul in scas rorb jnp add ljmp adc xchg push in jo gs std add ret mov js ljmp ja add mov jns xsha256 cmpsb aad xchg add imul xchg call or jns pop or arpl es sub pop xchg xchg stos outsl pop dec repz xchg add movsl add dec mov push mov popa loopne and add dec popf int ds adc cs (bad) cmp leave sub cltd mov and (bad) addb shrb es sub jno call js mov xchg adc bound mov xchg sar sub cwtl leave sbbl add xor mov pop cwtl sub icebp and lahf add pop mov loopne mov rolb inc sub (bad) fisubr (bad) mov inc outsl sar mov or add push jle lret (bad) stos jge ja xchg (bad) sbb lret mov mov xchg mov add fldenv cmp adc jns mov adc sahf inc insb jno mov cld lcall decl push mov or mov stos inc iret inc test inc xor rorb adc pop add dec sbb push popa dec dec inc ror test test rcl shlb nop push test mov adc push mov (bad) mov add mov pushf lcall pop cmp data16 movsl xchg mov pop mov pusha fldcw jecxz dec xchg sahf ss outsl or mov inc test cmc xchg inc fdivrp inc pop (bad) cmp dec pop (bad) rcrb insb arpl popf in mov push inc mov in aam cli inc xor in fsubs cmpsb ret jae mov int3 and das addr16 sbb movsb dec sbbl xchg js in test sub fisub and jne (bad) push (bad) aam dec xor mov inc and inc push push int3 int3 sub stc outsl daa mov nop sub cmp pusha es orb sub mov mov xor arpl lret ret inc rclb nop mov dec xor lods push and jmp add iret jmp add ret pop in sub jo xor mov push (bad) push jno jae dec pusha add sbb mov mov inc adc (bad) sub hlt loop idiv dec gs and jne test fsubs lds inc js xchg aad mov dec or mov nop adc arpl ret xor and adcl push add push pop sbb int3 cmpsb arpl mov mov int mov cltd inc dec sub add pop cmp mov call push sub (bad) xchg sub xor std xchg push mov imul inc and add pop lret ljmp andb xor rorb inc mov data16 cltd pop ficomp lret mov or (bad) xor rorb dec cmpsl pushf fadds inc lret xchg aam dec in dec lahf test xchg rclb fsubr add mov jbe xor mov js nop pusha sub push dec push sbb cmp popf rcrl icebp pop and pop jns out test cmp jbe,pn fsubl or in pop and add mov mov or nop sub cwtl add jmp lods jl cmp sbb lods sbb pop add inc pop loope shlb sbb aad outsl add mov nop fcompl lret fcmovb xchg int3 sar test push mov pop or jl xchg je fdivrs clc mov or mov out lret mov jge cmp inc adc push lock push sub lcall adc mov sarb movsl loop add dec inc xchg shrl add js and int3 pop dec pop mov push cltd jns and pop mov pushf push pop and jns adc int inc rcll push inc mov and enter mov dec jb call inc push cmp mov and adc xchg push dec enter sarb push cli push jb jns add mov cld pusha or pop mov push pop (bad) insb cmpb aas inc push sub pop into or xchg lea fsubs call mov decl or inc insl (bad) mov jb int3 scas pop mov (bad) lock and lahf sbb sbb add rclb push movsb loopne add lods sub nop test iret ret (bad) lret int xchg vmovlps jne sti popf mov test pop jp sti adc or clc addl pop lret in adc adc cmp imul mov xchg lods scas mov inc cld cmpsl mov inc js dec or int3 mov push push push or rcrb xor enter (bad) lods push cld inc pop add mov lahf push es xchg aam adc cmpsb mov sbb pop ljmp lods jmp jb adc mov add sub push aaa add push add sub inc ds push mov mov jns jns pop lds lock cmc or sbb popf and out lcall inc test lahf call es popa jl mov xchg insl rclb cvtpi2ps test or cld xchg movsl call sub mov mov xlat sub dec inc cwtl sub leave inc int3 test or adc inc push pop mov mov rcrb clc jns or cmp or xorb add aam es loopne rcr add xchg sarl adc dec mov rcl dec inc mov pop add pop iret dec mov inc and jnp mov lea inc dec mov or cmp idivl sbb mov inc inc into dec cmp mull insb sbb jmp insb in hlt sbb fnstcw adc addr16 or and xchg repz push push lea adcl loope mov das hlt xchg or or jmp cld and sahf dec je int push pusha mov mov sub jns cmpsl inc jo and xchg sbb xchg insb scas xchg dec scas insb std and mov mov fs sub xchg les inc and nop rol shlb sub nop cld inc mov pop gs es sub adc xchg pop cs adc sbb subb scas les add xchg out pop insb mov add arpl cli and mov mov leave xchg pusha shl stos movsb pop scas xor int3 iret pop daa sbb mov rcrb add fsubrs push mov nop dec aas pop inc cld clc jmp gs xlat or cmp xor lahf mov add xchg jne and jg pop dec rolb mov mov jb fs lods cwtl add popa hlt cwtl nop subb fcoms int3 push xchg cltd fadds stos mov cmp add lea mov xor dec mov xchg pop pushf aaa and mov in mov pop out push or xor jnp add dec (bad) sub int3 or rcrb mov adc cmp mov rolb out inc repz xlat pop push (bad) je aad push out jnp dec test and stos shlb sub xchg fwait mov mov cmc out push sub mov fs loop adc sub add sbbl push cli inc loopne sub cmp lock leave sbb hlt pop push test sub insb mov or push add xor sub cmp fpatan mov cmp movsb pop fs xor loopne and xor inc (bad) jmp pop adc fsub fsubl ret scas pushf pop mov sbb xchg jnp nop cmp out push xchg (bad) mov pop push push and push and pop dec pusha lret orl add mov mov adc add insb out push sahf pop sub and pop into jb add test loopne jns xor lock adc rorb mov xchg adc movntq out pop cmpsb sub cld pop lcall mov rcl xchg pop sbb or popf loopne xchg loopne cmp popf cmp arpl js push stos lcall dec add or inc enter jmp insb xchg aam lahf xor enter ljmp mov cmp dec adc or cltd mov add subb mov cmp loope leave mov mov add adc sub pop xor jge inc aam cmc add out pop (bad) mov push fs test cmc es out pop mov jmp sbb sub sub lock mov mov subb xchg cwtl outsl mov and enter mov mov sbb shl test inc ds test push and sarb pop imul xchg ret and mov cltd jnp xchg adc les repnz idivl test les cwtl int3 xor add xchg dec mov ja and adc ljmp daa inc jl ljmp push cmpsb cmp test les xorb enter inc loop and inc test push shlb enter aam mov pop sub xchg (bad) mov dec pusha cmp xor je jp adc or jo mov call ficomp test inc jo adc nop add mov lock pop nop dec mov mov nop out add lret push stos adc or pop sbb aad cld jge adc add cwtl xor adc gs add mov fcoml pop jno cmp pusha pop fs pushf or test sub jb in out je or ficom sbb push fwait adc push push dec ss and xor adc ss or pop adc scas dec cld xchg hlt xchg int3 and mov push pop mov cs (bad) imul hlt test cmp mov xchg adc adc loopne cmp dec mov sti movsl icebp outsb jne inc mov add adc lods and jno add and icebp in int3 pop xchg adc inc (bad) jae sbb jb pop sbb mov xchg nop stc sub icebp rorl dec aad les add lock loop dec call xchg add cwtl push cmc cld or ret add sbb push js pusha pop mov xchg xchg sbb aad push jmp rclb fsts hlt adc hlt rclb (bad) dec mov push xchg and enter and inc and sub (bad) mov cmc loopne js clc push jbe inc xchg aad test test ljmp addr16 rorb mov add jnp shr repz dec push mov jmp pusha jge add outsl ds jae rcll add in or pop in xchg fwait mov andb sub adcl push je adc xchg add inc inc popf sbb mov mov xorb popa test dec add xchg dec outsb xchg aam dec test (bad) mov jecxz bsf loopne push jno add into add jl add pop ret mov fwait pop mov xchg js add aas cld stos pop movsl cltd rclb or fwait add or dec cmc test decl sbb sub pop lret xchg cltd add ret addr16 shll imul pop xor lods scas pusha (bad) fldcw mov cld cwtl add pop test dec and mov iret daa dec mov sub xor clc add mov mov js lods dec cmpsl mov mov ja sub sub gs addr16 hlt jge bound lock nop int3 inc in mov f2xm1 xor sub aaa sahf pop sub imul iret add lret and and fimull out pop sbb xchg add lods mov add insl mov test or les fmuls adc add dec pop pop jnp mov inc outsb imull sub adc sub repz in cmpsb cltd push insl and xor iret sub xchg adc out adc pop insl cmpsb add je cs rcll pop (bad) add mov pop xor mov mov insb fldenv imul dec xor mov pop test mov lahf adc addl push icebp sbb adc or jge outsb fwait mov push or sbb or pop cmpsb adc cmp data16 lahf and insl fwait cmp pop push fldl lock adc add or or andb push jmp mov je jns xor aad mov jne jp or movsb fidiv or cli and add pop adc in cwtl jae xor fucomi inc fs lret push dec cmp les sbb mov sbb (bad) int3 push sbb add sbb lcall enter lahf mov or in adc sub fiaddl ss and mov push leave scas aad in adc lds pop dec outsb cli cmpsl cmpsb ljmp test (bad) jb jmp popa add cltd fcomps int (bad) aam mov movsl adc dec pop not cmp cmpsb add scas or lds jbe mov add xor fildll fs ret adc divb add sub add movsb jecxz pop outsb mov jl add sahf lret dec repz pop test fiaddl dec sub sbb jg cmp mov xor lods cmc jle pop in das add mov pop rcrb mov add add (bad) mov jno jb xchg adc movsb lods cs int3 mov push movl or fucomi sbb xchg xor sub jnp jae repnz push fldl lea xchg mov jo inc or aas jl mov sub adc mov inc andl cltd add js lea pop mov push mov push jae andl pop xlat lea insb pop push add xor push fs push adcb xor cwtl add push inc imul iret push xlat sbb cmpsl dec je pusha and adc fsqrt jge and xor jg cs and jmp movsb add xchg mov mov (bad) loopne subl in add insl xchg inc (bad) jmp jl push aas jnp pop stc ds jns inc pusha jmp xchg dec add nopl mov jnp add lcall popa push mov scas repnz sbb cli add in lcall push subb xlat xor cld bound cs jnp loop lock je fbld add adcl loope ja jp rclb lods lods push push clc add sbb xchg mov test push sbb (bad) cmp push jbe sti in lods test int3 test pop jo push or insl mov inc bnd jne leave (bad) or xchg or cmp mov aad dec and das das add sbb dec ret aaa and push pop push fsubrl popf add and cli rorb hlt popf sub fadds push add xchg pop xchg in xchg mov movsl bound psubw sub int jnp adc mov or movsl xor push shrl in push notb sbb clc shrl jns push jae in faddl loopne add and push aas adc rol mov push xor add popf pusha push jge shrl mov push bswap mov test mov or adc sub add test ss xlat lds aam or pop and and sub out adc out (bad) rol rcrb sbb pop call mov mov (bad) sbb or add push or xchg inc sub adc int3 addl jns jno flds sbb insb test je add popa inc test stos mov rcrl inc movl add pusha jge add sub lock call aas dec int in addb adc sub inc iret mov push mov push cwtl roll push push add jns inc push xor inc pop jo div in aaa sbb lock xchg jle xchg mov or stos jae sub int3 lock movsl xchg loope loopne ror mov negb lcall fiaddl inc adc call lock xor pop mov hlt jb and addr16 xor and adc lock push loope or repnz decb and insl inc and test int dec add xor add cwtl sub mov movsb sub outsb xor dec movsb je mov push fstps (bad) lock mov cltd xor sbb sub pop jno push aaa movsb cwtl or sbb sbbb sub xor jecxz and pusha popf mov sbb or pop push xchg or push ret cmp mov adc adc out add bound hlt mov repnz insb mov push cmp cmp xor sbb add sahf adc cmpxchg adc inc mov cmc movsb test sti mov fidivrl lods mov pop add dec in push pusha adc pop sbb cmp pop ret test cmp sub subb adc dec dec and add fcomps adc sub jmp sbb xor fsts mov adc xor sub ret (bad) jg xor cld inc xor and loope fist lds iret popa fdivs lds mov add sub movsl cs mov inc fsubs stos mov rcl push pop add mov xor jl add inc sbb sub movsb nop add stos mov push fstpl das pop lds ljmp popl sti call xor pusha mov add and mov push lock stc cs push dec inc and outsl and cwtl repz push or repnz cmp and pop inc ror push mov repnz lret add mov dec stos scas (bad) testl jb xchg cmp sbb les stc movsl dec sbb sbb or (bad) fidiv je in adc loop pusha and int3 or adc insl dec or imul mov xor xor mov (bad) mov mov push movsb test mov sub dec test pop pop mov lcall movsl inc enter jb xchg pop pop sbb or add in pop (bad) aad movsl add sbb adc out jo mov mov sti mov jns mov in popa mov lock js nop inc xor pusha pop in add bound mov stos cmpsb add adc int cltd add xor inc sbb push into sub add cwtl inc pop pop mov pop push mov pop add (bad) lds push push dec sbb add push push adc pusha insb icebp and loop pop inc sbb or adc xor psllq (bad) xor and test lds pop popa push mov lds sub lock shrb jecxz sbb push aaa call movsb dec jl and (bad) std cmp inc popa popf inc mov ret jo sub jno and mov xor pop sub mov lcall and repnz dec inc fcomps loope lcall inc mov add dec mov inc mov in movsl xor mov in inc xchg daa js add (bad) stos mov dec mov jecxz jl sbb clc mov jge dec mov or movsl fisubl in push imull mov mov add test mov add cwtl mov stc xchg bound fsts xchg fdivl and fcomp or add mov and adc test jo and aam fidivrl push out sub out sbb lcall or inc pusha je bound mov pushf push mov xchg call or and popf cmpsl and movsl jmp ljmp test mov xor mov and xchg or pop pop dec adc adc lcall xchg mov push fstps and shrb mov in movsb loopne cmpsb sub pop push mov fnstcw inc mov daa cmpsb mov or fs pop imul sub enter jmp or notb cwtl dec adc ss or ds hlt test dec adc les inc (bad) sbb and and stos push mov lock mov add ja push and xor push das enter and ret test mov or xchg lea imul add aaa aad int xor add pusha sbbb lcall jl pushf lea and and cmp lcall adc xchg push int and push or dec mov ret bound jle in fs mov lahf adc sbb movsl cmp cvttps2pi xchg mov cmpsl sbb sub add mov fnstsw xchg fist mov loope pop adc push sbb jbe xchg jns movsb cmp add loope addl adc rcll xor add (bad) mov mov outsl scas lock sub xchg xchg mov hlt mov fmull pop std jns (bad) rcrl mov inc cli rol pusha clc rorb loope xor sbb cli cmp out popa mov (bad) dec orb adc shr push mov and xor nop inc les cmp sbb outsb and test mov out adc movsl rcrl and sbb roll pop xchg test out repz inc pop nop sub mov adc mov push rcl int3 pop push jecxz push jl mov and pop cwtl or lahf outsb xchg js cmp sbb push or inc js sbb adc mov mov mov cmp pusha jno lahf adcb cmp add cltd mov (bad) in test push ds cmp (bad) aad fcmovnbe mov lock je mov js push std inc pop dec xor xor leave das sbb mov movsb scas mov (bad) sbb add call mov cmp push pop mov sbb fist js packsswb pop push sbb mov xchg cli mov mov adc add imul mov add mov pop in jecxz insb dec imul inc add pop mov icebp lods rep inc bound gs jmp sbb pop adc imul and in nop add cmpsl xor sub xchg repz rcl enter scas ret or fistl call fs mov push xchg dec cld mov lret (bad) popa (bad) shlb adc mov xchg into loopne dec cwtl add fnstsw (bad) jmp sub or adc sub out test and mov mov xchg call loope subl fcmovb jg in inc jl jle les adc fcoml les sar lds mov mov nop mov inc push clc mov in cld fistl das shlb mov mov (bad) push outsb incl test pop gs jns imul pop test test cmpsl mov (bad) arpl or movsb xor test ljmp push test jg sbb leave or add daa out lock jp jb xlat fbld sbb or or nop mov xchg or pop dec in sbbl dec mov lods aam add cmpsb mov or mov mov fs adc add fistl jmp add xchg pop mov add fwait orb sub lock cli int3 and mov push or (bad) (bad) rorb xchg popa fs ss xchg sbb cwtl adc cs sbb push pop mov rorl dec dec xor dec cwtl mov cmpsl mov mov or or nop addb fmuls faddl add dec adc cli out add dec stos mov rol sub or nop loopne,pt push imul pop add and stos or add pop sub movsb les or xchg pop mov mov (bad) xchg aaa aas mov sub test or xchg dec adc jmp nop fmuls sbbb sub lds inc cld pop xchg movaps popa rcrl sbb push and push mov testl fsubrs mov dec add add mov add fcoml mov mov and (bad) pop inc or fwait lock andb movsl push fisubrl pop mov xchg mov mov jmp rcr sub mov or adc jno cwtl xchg dec mov ret or cmpl cwtl xor jno stc (bad) xor fsub aad insb test add sbb cmp or sub mov add adc lret mov lea lcall xor aad sbb lahf add pop dec pushf pop mov pop sub pop mov xlat aaa dec ficom nop pop outsl adc pop push lods add rcl loop cmp sub fimul and call inc inc into or ret cmp ret sub lret sub and (bad) notl mov pop movsb or or roll xchg leave fdiv lea ds or fstps lret push out add pop mov cmp add iret fldt push mov hlt xchg xchg test push andb mov pop xchg cmc add sbb jl faddl jae and or (bad) xor sbb or xchg insl insb mov xlat mov js add (bad) negl mov je (bad) and shrl inc pop pop (bad) push aas mov outsl stc rcr cmp adc mov (bad) in push dec push inc les (bad) int3 push push adc aam stos ds nop dec icebp or lret inc cmp rorl pop test lcall dec sub and or fstl icebp xchg sbb jecxz (bad) loope jo cmp pop mov imul pushf push xorl inc xchg aad xor cmp inc cmp in ds (bad) (bad) or mov dec mov and sub adc jl sbb movsl inc out push sbb sub dec in lods sbbb mov xorl mov shrb test sub mov shr mov (bad) sub mov subb jl mov (bad) cmp rolb arpl sub jl jns icebp push push mov mov rcl js dec dec add in jmp xor (bad) sbb cwtl ds add fimul mov xchg sbb pop inc insb cmpsl xor jns inc aam push fnstenv nop mov and test add xchg and sbb mov nop ret int add inc inc fadd inc add jmp xchg into iret push sbb xchg sub outsb dec test push clc aam adc jns pop mov inc dec fdivs cmpb clc dec push sub test xchg xchg mov mov push ret adc add dec bound outsb cmpl (bad) mov adc mov andl loop inc cld add cmpsl pop and sbb xchg scas or pop icebp mov jo in xor stc or add adcb dec push aad mov mov push in mov test mov imul js iret dec push pop inc sarl daa ja cmpsb mov pop dec push lock flds push sub and sbb add inc push frstor xchg push or dec int3 dec or or outsb add fs push mov dec pop or out leave mov dec push movsb es adc and rolb idiv out out xorl adc push xchg sub out shrb mov addr16 bound mov iret add je xor push jnp lock xchg sbb pop dec cmc repz push insl add jle push ds add daa pop mov call push fistl push sub outsb je mov or sub mov test notl adc mov fwait jg int3 sbb xor sbb iret cmp sbb jmp (bad) jo je mov inc movsb cwtl hlt push and mov cmp fildll adc cld (bad) cld sbb adcb jg inc sbb stos mov leave sub or mov xchg pushf outsl push cmp xchg mov (bad) mov rorb pushf xchg add mov sub xchg pop mov jmp lahf inc push jns pop test mov mov sub (bad) jmp add aas stos push inc enter pop int3 pop pop insb or xchg xchg add xor movsb je cld popa add iret mov cmpsl push std shl pop dec add pusha add out lock movsl stc or adc and icebp xchg jl add pop sbb lahf test pop and in adc add mov sbb pusha inc aam add lahf mov pusha out pop lock sahf nop add and mov mov (bad) adcl pop and push data16 call dec pushf fistpl or leave rol insl mov push jecxz dec inc sbb and or push push out (bad) jbe (bad) push xor cs adc sub mov and jb jo popa sbb push inc lds push mov aas sub mov cld sub pop dec lods xchg outsb cmp cwtl je add push add add add sbb dec add (bad) xor sbb and mov and ret aaa fnstsw inc popa aam dec fwait (bad) out add cmpsl mov push das cmp jge add xor or jge and add stos cli add ret mov (bad) repz or mov mov adc xchg fs add das outsl and mov dec imul pop jg arpl xor idiv bound insb jge test in mov xor cmpl pusha sbb inc sub lods add push and ljmp pusha hlt xchg dec push xor or and ja xchg push cmpsl mov and sbb mov add and adcb mov out cs cmp adc lds and sub cmp (bad) shrl mov js xchg xor or inc outsl push cmpsb fwait adc mov hlt js add loope loop sub test and pop push jbe mov lods jne movsb stos or xlat aam insb add pop jl jnp lock lds xchg (bad) mulb xlat or fnstsw add not sbb push xor or or dec add jl pop pop and jp add push mov and lret (bad) js pusha bound daa xchg mov mov orl fs pop sbb out or cmp sbb ja and xor mov adc add in push dec or sub mov xorl mov mov pusha and call rorb or jp mov popf in cli mov cmp and andb jle ja sub xor enter jmp or sahf mov pusha add inc push cmpsb bound add loopne daa leave cmp push sub inc cmp xor lods loopne add ja jmp enter sub push jnp dec js adc leave bound test test lahf test jecxz jl cltd sub lock inc inc or cmc andl lock add dec hlt mov sbb popa out jmp or cmpsb jbe sbb add cmc divl in mov sbb push adc xchg add nop sub jle in add in or mov xchg xor mov pop cmp xor inc idivl pop gs (bad) adc adc and cmp in and sub (bad) fwait mov (bad) mov cs inc xchg mov cmpsb fs xor add scas shlb pusha adc fwait jne add fdivr jle (bad) xor jb cmp mov sbb and mov in in push fsts push in cmp rol adc dec aam fwait push add (bad) or adc sbb cmpsb mov cmpsl xchg lock push and push cmp mov mov add push inc cmp and gs cmp dec sbb xlat pusha cli daa inc shrl aaa lds daa stos cmp lds testl fs and cmp sbb sub sbbl add stos mov outsl (bad) add ss cmpsb clc push xor inc mov lcall loopne mov push (bad) mov movsl inc add sbb mov (bad) je scas xor stos xchg ljmp xor jge add test xor shrl call adc inc dec or sbb pop xchg jbe (bad) cmpsb popa mov mov mov adc (bad) bound xchg mov add and adc cmp stc stos xchg xchg shrb or push (bad) xor sub aaa add (bad) cwtl mov fnstenv or rcrb in dec and sub mov jl push xchg xor aas in pop jno rolb ss xchg xor enter stos cwtl mov lds stos xor cmp mov add or fs out outsl or dec std push cwtl sbb adc pusha daa adc add call mov daa jns jp add or dec mov cmp shrl mov xor pop add mov in ss sbb pop int3 sbb adc lea rclb sti or ret jno sub data16 pop xorb and addr16 cmp sbb lods testl pusha or hlt lods dec rcrb and adc sub or or (bad) xor lock add adc push and and out inc jge data16 je push enter push push outsl jns mov (bad) dec lret pop push add shrb pop adc (bad) xchg bound add and outsb push xchg add xchg sbb dec aaa xorl xor add or sbb xor in and and vmovaps or inc outsl mov rcrb mov add and push mov (bad) call xchg test push pop mov sbb inc sbb push add sub in xchg dec jecxz mov xchg insb add mov faddl sub and sub out dec adc hlt and add sbb cmp scas test or daa push sbb insb or sub jle cmp enter loope and inc popf sub and add leave push dec loopne xor adc jno cmp add cmpsb je rolb pushf stos fsubp out mov adc add ja pusha dec inc or add mulb test stc adc dec fistl pop rcr (bad) jno add xchg lcall sbb loopne (bad) testb jp mov (bad) sub xor cli in inc sub sub sbb xchg in imul pop adc cmp mov jno (bad) and or insb loopne or add jno push das xor pusha and xor bound mov pop inc inc orl mov lret int jmp add mov lcall xor sbb fildl movsl mov loop jl test push fs sbb lea out inc push and ds js adc call push test popa adc insb xor jmp sub cmp sti adc aaa add and fldcw and inc sbb sub (bad) pop push xor push add xchg mov leave ret sub xchg cwtl pop inc jp test inc cmp mov sbb rcrb mov push sbb xor mov fs inc xor test loope,pn dec add jb or dec in rcr dec pop (bad) addl or mov mov xor jno in jno xorb mov stos dec in ret and sub rcrl or mov xorl add inc rcrb pop rclb dec adc xchg test pop insb add sbb (bad) ficomp (bad) lock jbe jno add mov in push cmp fadds ss std pop scas std daa insl jl jae add aaa mov bound and shlb repz cmp cld cltd cmp in in adc cmp push xchg or cld in add push xchg sub stos push pop dec add sbbb sub fbstp enter add pop dec mul push pop sbb push add inc jmp xchg testl xchg xchg subb fild rorb orb push sbb mov and aas add adc jbe mov add push sub push dec leave pop pop sub sbb test xchg push push jmp xchg push pop inc sub mov inc rolb mov adc ja and add xor test mov loopne cmpl sahf lock mov mov imul inc add (bad) cmp lods pop inc aam push add outsb or or inc scas jg iret nop in adc add jo cwtl arpl (bad) mov cli push add mov add ds xchg inc mov cwtl and test add std xchg push inc out popa or sbb (bad) push add (bad) xchg stos (bad) and add les imul and in pop fcompl jl inc lcall or in dec dec add lods addb mov or xor jno add cmp cmp pusha xchg inc xchg or xor popf adc mov fs xchg push das (bad) jb cmp and test nop cmp bound popa dec hlt dec test hlt sub add (bad) lahf pop cli and inc xor sub mov xor cwtl movsb xchg (bad) sbb xchg sbb cmp jmp dec (bad) nop xor jno (bad) fldz (bad) mov (bad) int3 dec test testb dec orl or mov ss cld or js or mov stc xchg jns mov sbb stc in ret dec lods insb jo nop mov test andl xor jae jl adc or xchg scas in mov push lahf in stc add stos test push (bad) out cmp mov pop pusha cmp in hlt cmp lds or adc pushf or push push jmp dec push xor hlt adcl in lds and arpl add sub xor mov sbb es cwtl aaa add cli sti jns je (bad) into out and jmp movsb mov or mov je mov loop or js add mov call adc and or lods dec in adc sbb xor xor xchg sub fmuls popa add xor xchg sqrtps ret loope cmp xchg sbbb sti negb pusha test dec push fs jo mov rol ja sbb xor adc mov cwtl xor mov test xor adc jl push ljmp fldl adc add (bad) sbb or cli stc add nop xchg xor (bad) call icebp xor lock leave or or sbb dec sub sub int3 add (bad) sbb pusha sub jb pop push push inc dec incb or xor mov out inc mov js sub sbb outsl push add nop and lahf sbb inc sub push sarb xorb or test (bad) clc fs pop adc mov or adc pop movsb add les push adc jp and (bad) popf test pusha hlt mov subl jl and (bad) adc dec pop es sbb repz mov pop lret test test sub (bad) jmp mov mov aam pop add loop pop mov mov xchg sub jo mov add dec sbbb fwait and or outsl cmp add jbe inc add sbb test cwtl pause adc add clc rorb incb jl mov mov cmp hlt out push leave cmp xor sub int3 mov rcll adc sbb mov pop cld rol xchg nop add in mov xchg pop outsb or rorb adc out roll xor test jno mov sub dec xchg inc inc dec cmpsb inc or jo pushf or push jae push cmp nop cld mov nop dec push (bad) mov mov or add xchg sbb stos test mov enter push jns (bad) andl and add loope (bad) in jo aas mov adc xchg les lret xlat imul test scas add sbb and in mov push sbb js jns popa add sub adc add addl xchg pop icebp adc mov push jmp push cmpsb cmp mov pop pop push cmc and mov xor fdivl mov xchg cmpsb and or in xchg aaa test dec and xchg mov fldcw insb ret mov leave leave call xchg jl inc aam jl dec push aam dec sub adcb aam or movsb xor and daa loop xchg repnz pop sub xchg in push out pop pop push and dec sbb add test inc push nop movl add inc sub pop jne dec lea add mov mov and dec and adc sbb cld push (bad) mov insl dec jg push loop or in call xchg adc orl mov mov cs mov les stc add mov mov test test sub rcll loopne push add mov add out dec aas stos outsl test cltd clc add mov repnz hlt mov xor jmp pop gs push push and pop ret dec jbe or hlt clc xor ss push test push inc mov sbb ds inc sub insl lock test mov mov adcb jmp sbb shrb mov xchg std or and cmp imul jno in js add lods push cli mov jb push lods inc xor je mov xor xadd jle xchg aam inc mov add adc push pop or lds fadds xor jp cmp pop daa xor mov or xchg cld add push mov pop jmp es mov sbb jns int3 imulb lahf pop push xor and mov inc add adc jne out aaa movsb and xchg call das insb ret test adc jns push test enter lods lret add sub sub test js hlt mov xor repz int3 rolb adc cmp sub inc or lods push xchg jmp inc adc or mov test int3 adc jmp roll push js call stos mov repnz jno fisub cld xchg fsub cs je faddl stos and and sub mov xorb xor divb aas inc mov mov push enter lock or add lds stos (bad) jmp lods or mov in and pop or shlb arpl dec push inc add pop adc pusha inc push lock add nop pop mov adc mov xchg adc mov cld hlt mov test dec cwtl ljmp or add sbb icebp sub pushf jl push add inc add pop orl shl fsubl fcoms cmp out lock enter mov test and inc fmuls aam adc add in sbb xor pop (bad) jno mov add jecxz int3 pop lea call lcall inc iret test push movsl int3 sbb cmp add cltd pop pop push jo xchg sbb jge rolb sub cmp sbb stos out add mov shll push loope jg cmp jnp xor push shrb mov jl ret and cmp xor lods xor jns lods push ja jg mov sbbl fistp in pusha xchg roll sbb (bad) mov jnp push popf insb addb cwtl call inc pop adc inc jmp push cmp jae inc mov pusha sub add dec scas and sti adc insb shlb sbb mov pop adc add sub cmpsb pop jg sub sub lcall lock lock add push mov ss pop mov push nop andb or adc add mov push in ror inc aas into push sbb shlb push rcll imul inc pop or jne inc fmuls out ss loope dec fsubrs popa xor nop mov shlb cmp rcrb xchg inc sbb mov hlt daa (bad) cmp add push aad lret test xor mov xchg pop add dec adcb mov xor cwtl movsb imul sub push xchg mov inc xor mov cmp jno push jecxz push loope ret ret or or adc adc and add and data16 faddl cwtl adc mov xorb add mov fwait or inc movsb mov dec add movsl and sub push enter cli add pop icebp xor pop sbb sub inc add mov sub adc jecxz fsubrl xor mov add insb xor ljmp sub mov sub int3 sub pop (bad) sbb (bad) xchg cwtl dec mov sub mov pop popf das in (bad) loop aaa inc push inc outsl notl pusha or jg add ret inc test xchg nop add push inc add jbe lret push out jo ret lahf aam ja dec mov data16 rcll out inc add push int and loopne jnp push xor inc adc stc sub sub inc insl xor pusha clc test cmp add and xor lcall mov add dec iret mov pop pop inc dec push jge test das sbb in nop mov (bad) int3 adc rclb pushf push ljmp dec popa fmull add add add sub add fincstp shrb sub add lahf push stc mov cwtd nop or jge add clc xchg fisttpl int3 aam arpl popa add nop inc jg add stos or (bad) mov jle add pop lods dec loopne dec out add scas loope xor pop dec testb lcall mov jb mov adc leave push scas xorb insb jp stos add push out ds stc std push pop lcall mov and dec out roll test and mov rclb lock clc xor adc mov test cmp inc or fstl rcll setno or pop or add sahf inc push movl subl xor loope dec lea mov add aad cltd popf push es mov dec test xor xor sbb out cmc or dec inc pop out aad test jo mov cltd aam sbb icebp aaa test lcall sbb lock mov (bad) mov cmp adc dec and xchg andl ss pslld imul lods ds les sbb jbe mov gs dec fmuls push sub inc aaa push pop jnp lret mov add cmpsl (bad) or inc clc bound sbb loop inc mov pop add cmpl test test add inc push fidivl or sub jnp xor ret xor movl gs (bad) cmp icebp rorb add pop call xchg add loopne icebp les xor push (bad) pop in lock and data16 push xlat cmp jae inc and cld jmp js pusha in in mov sbb mov jp mov lock das hlt push and cmc lock jo enter xor fiadd inc sub and or hlt cmp xchg xorb sahf jb aam push fwait push ret pushf sub lods jmp sbb add adc and pop sub xchg je pop sub or hlt push in (bad) call and add inc add test xor push hlt add shrl clc in icebp mov sahf mov jle orl bnd insb imul cld loop pmaxsw in popa test adc addb stos in js pop pop sub mov jmp stc hlt clc sub icebp adc and daa and lcall or in es jb xor jl add sbb ds mov lock mov jmp mov pop gs in sub jns cmp xor xor push jg sub hlt and jmp icebp adc addb mov sarl push aaa inc inc add repz add mov xchg and lock push sub jns xchg push inc pushf sub lret test das fnclex sub xchg dec dec icebp repnz fcoms ret loopne in les adc adc jne fadds lock mov pop mov or mov popa jnp xchg cmp mov pop enter add fdivrl xchg adc or mov inc inc aas jmp sub sbb push or jl xor clc pop and std icebp lret mov in adc xchg or mov jl sub dec movsb mov adc stos inc and js leave pop mov xor lahf push insb and jno push ss sub inc mov jl xor orb pop xchg dec and orl jbe push test inc daa aam lock inc test out adc hlt mov out ja mov push and imul xchg cmp ds rcl mov add lcall pushf subb adc xor sbb std add jmp xchg jl and or add adcl icebp clc and add dec lock cld adc xor test add hlt add mov sub decl cld pop int mov mov pop push sbb int3 pop push das lea and arpl jmp in mov mov pushf mov jbe sbb sub sbbl xchg lock jae rcll adc or push hlt inc insb fist pop ret adc mov movl xchg loopne test sti jl orb fiaddl cmp or test mov bound pop mov jp pop mov mov rorb dec test xor push mov cmp xchg ja test jmp inc enter repnz mov inc test sub ret xor add xchg call cmpsl (bad) fdivs andl ret lods add pop mov cs add jo xor mov and lock into push loope jg jbe add lods fdivrl mov jmp leave clc mov mov addb adc xor adc and nop adc xchg lea mov pop jl jg pop movsb xchg sbb cmp pusha ret add aam les rolb clc stos fsubr or mov add jmp adc jo jb sub sldt fldcw stos insb add push popa cmp cld sbb addl dec sub xor xor pushf fiaddl add call xor xor into mov sub (bad) and repnz xchg decl or pushf pusha jg cmp jecxz popa std (bad) ss xor xor adc ds jge out outsb mov push clc das or or mov or js inc stos add movsl or call or add jmp iret imul and loope outsb cmpsl lcall sar (bad) xor sbb mov cmp daa adc into enter and xorb or dec cltd ss or popa dec mov loopne inc add loop mov add push inc insl mov ret mov inc or adc in jae sbb dec loopne les adc jnp jo add ja and shlb inc add leave roll sub fldl and loop into pop push mov push push adc addl dec test repnz bound leave sar pop cwtl js dec add mov in add das add xchg lods add movsb and sbb xor or sub xor cmp ss xchg inc popa sub popa sbb lret out call negb mov scas arpl (bad) push orb repz repz shrl mov push xchg inc mov xor loope add mov dec bound push pop add negb jo add cs mov andl sti nop aaa test mov xor jge stos adc decb mov pushf or jns fwait xor fwait mov xchg test inc adc add sbb mov sub jne add push faddl test fwait pop fisub mov and jnp (bad) xlat mov es int3 and les cltd sub push rcrl push jl add in sbb xor pop xor fisttpll adc mov add lock cmp or or divb jno popa movl mov out mov mov addr16 fsubrs sbbb mov jl rclb dec mov cmp jl pop xor shr mov imul adc xor les and cltd add fsts inc dec sub xchg sbb and scas lcall (bad) (bad) dec pop lods or add adcl dec insl mov push cmpb jg xor mov pop sarl lods lea cmp mov stos les xchg push cs adc push js andl and pop or (bad) repnz dec mov add movsb insl cld mov jne add add xchg js cs ljmp sub inc xor repnz push clc xor xor scas cli mov test jg aas lcall mov pop jo rcll loopne fadds add sub addr16 jl call add aad add rcrb fidivl dec inc add xor pusha add mov xchg add test dec aam or flds out int3 sbb push nop cld js push clc lock cmp test rcrl pop stos test pusha adcl push test sub cmp sarb call push shll adc adcb insb add movsb sbbb in inc int3 fcomps mov push rorl les mov adc out mov shr mov jge add out xchg lahf mov push jae adc outsl pusha mov inc aad adc xor mov insl jne mov xor sbb xor pop cmc xlat rcrl scas inc pop sbb das add movl push adc lahf andb je sub or test cltd lds in cmp std mov test dec andb subps sbb cmp inc add idiv dec enter pop jg rorb pop adc xor xchg call add xor push mov lea jl sbb inc lock imull xor sub add rcrl or push stc (bad) dec mov jo cmpsl pop sbb loope jns aad pop divb cmp mov into cmp cwtl or rorb lods pop mov pusha push cwtl inc cmp int3 adc cmp mov mov loope pushf (bad) add cmp add jge mov lret fisubl sbb adc jbe xchg add insb mov rorb (bad) addr16 sbb or test mov and lds push or pop and sbb in add inc arpl daa xor mov gs pop in xchg scas sbb leave test sbb mov in roll hlt xchg sbb aaa push adc (bad) pusha shrb outsb xchg pop mov push mov or xchg cwtl add jge cmp mov xor sbb out mov and xchg std and add pusha loope cmpsb cmp cli sbb mov pop jmp xchg inc pop es inc stos nop cwtl ja add les sbb cmp icebp orb cmp or add (bad) mov mov lds fsubs mov push leave ds clc xor jge fdivrs sbb aad xor inc and pop or outsl mov int3 (bad) xor scas jne repz add sbb mov push pop test and xor les push lea sub (bad) and (bad) adc cmc mov adc aam js inc inc mov push ss inc sbb icebp (bad) icebp xor fmuls lahf subb daa xchg and xor pop (bad) lock call sbb mov cmp movsb jg fsubrl cld outsl dec pushf jbe or mov ljmp sub or cs insb sbb jecxz pop cmp sbbl test add cmp je movsb subb in push into das add std mov sbb dec loopne sbb xchg and mov and out pusha and cld mov lret test push je gs lret mov int3 xchg lahf inc and outsl jb xchg sub js jecxz nop and add imulb mov sbb pop xor pop push pusha sbbl mov movsb iret sub movsl pusha add (bad) mov nop inc test (bad) test clc (bad) xor cmp mov lcall pop in sahf mov pop add in fnstcw lock dec push pop mov xor fs mov pop hlt xchg es pop mov fcompl mov adc sub movsb in xchg negb rclb mov sbb inc pop mov adc jnp jg scas pusha push call pop cmpsb sub and dec add push test xor xchg pop nop push roll pop xchg fisubl mov xchg push jo jmp repnz incl inc mov js nop inc pop insl sbb pop mov cltd int3 mov sbb inc xchg add add fiaddl and sbb pop xchg out shlb adc cmp and sbb xchg cmc dec inc push (bad) cmp add sti jmp mov stos and mov inc aad lea or cltd hlt adc mov clc lahf add pop jecxz loop es or add sbb insb jns pop sbb pop into cmp xchg cmp push adc add mov je dec push or andl mov jo pop push or and cmp enter int3 rorb ja xchg adc mov adc xor lods jmp ret lcall in push js pop mov lret mov jl,pt add cli cmpsl jmp mov mov shlb ret mov les push out ret (bad) inc mov dec inc push notb adc xor sbb addb insl xor cmpsl sarl sbb xor aad or push test dec lds repnz xchg pusha out push shrb sbb data16 pusha lahf jo stos (bad) push xor sub mov pop sbb push xor cld xchg adc aam pop cmp lret hlt mov cmpb sub orb fsubp push jbe test lods clc dec stos push insb mov cmp pushf lock ret jmp xchg inc sbb xor sub mov lods mov adc (bad) cld push in jp (bad) mov and ljmp and dec xor cltd call cwtl icebp cli insl cld jl or test mov and outsl dec mov mov mov cmpsl insb movsb rolb jne rcl nop dec test test std xor insb inc pop push push and add xchg xchg or (bad) xchg fild lahf push and add fcoml add adc xchg cs call fs (bad) mov pop mov test adcl out jge insb (bad) idivl js (bad) fdivl dec lcall cs push insb enter mov jbe add mov (bad) jp add pop test push push (bad) test cmp sbb fisub lahf sub (bad) sbb popl add inc in and cmp lods mov and or dec fdivs jae dec push out cmc xchg jp xor incb push cmp sbb sar pop adc xor mov xor repz push and xor dec and mov or clc and loopne gs jl push aam dec mov sub mov dec and jns mov sub enter push mov nop add cmp and xor insl in jo pop pop lret sbb or mov adc ret mov imul in pop in mov sub ficom fisub xchg sbb lea xor pop push cmpl push les mov mov cmp ljmp mov cld jmp inc dec je js rolb ss adc mov mov and daa dec lods lea daa sub aas in pop jo loopne mov mov and imul mov and inc cmp mov inc dec adc popa fs lock jl or sub loopne push mov cltd cmp push cs daa adc lds nop adc inc les pop and call mov in lock jmp gs enter pop push pop mov movl inc cltd sbbb (bad) sti cmp sarl iret loop hlt or pusha in jne fsubl ret clc lcall mov jns xor inc mov ss mov nop call sub or mov jp fs test add notb adc jbe mov xchg mov dec adc or hlt mov mov xchg mov mov and mov inc test rorl jbe sub orl fs addr16 pop xor add or js add xor je and mov ret adc lds in pop xor or test dec gs int adc jne sbb cmp adc inc xlat mov adc les stc aam out adc test add push aaa mov shr cltd mov enter jbe cwtl sbb sub (bad) sahf pop adc dec (bad) mov cmp inc dec or pop lock and add fs clc dec clc insb shl in pop roll and pusha xchg enter stos and adc pusha or lea jmp jecxz add out pop jo cmp scas or sbb or xor sar in add jle cmp mov aas xor xor mov sbb mov inc sub mov add xor add fistl mov xchg cmp call imul ja inc cmp nop xchg subb in xchg mov insb and cmpsb lods add lock pop push lock bound ficomp xlat int3 fstpt sbb or sub xor cwtl add test sbb add fisubl stc into loopne loopne into stc std add mov out mov testl xchg push cmp xchg push fnstcw add inc repz or pusha inc popf cs fcmovnb subb xor sahf cwtl push xchg sbb pushf repz popa cs addb hlt sbb xchg fmuls jp lods dec bound ret enter dec push mov jg cmpsb fadds out mov fist test lret sahf lods and jecxz sti dec inc xor mov fdivrl inc xor pop dec loop push mov adc testl pusha stc add and dec idivb call jle aas mov xchg les sbb lods lock lods pusha nop dec push (bad) and inc pmaddwd xchg or mov sub nop add stos shlb cs adc aam jecxz sub adc mov enter (bad) aaa lcall and imul sub cmp xor (bad) ljmp pop in push in andb clc xchg or add test call out hlt mov outsl cmp inc fistpll jnp sets loopne (bad) repnz inc jl inc pop xor outsb pop icebp bswap pop xor fcomip mov adc mov popf (bad) dec pop enter ds into imul and pop pop mov fdivs and and out or movsb sbb cld jle gs orb aam mov add or pop sub jecxz clc stos xchg xor test inc inc sub adc dec (bad) sub add add fnstenv mov push xor or add mov je add (bad) sbb pop daa (bad) inc sbb cmp jl icebp stc mov aas sub pop daa or outsl (bad) cmpb fs lods lret flds lock nop mov mov add das outsl in jmp or (bad) push test fimul add dec daa or or mov adc add std fldcw movsb sbb test hlt je js xor loopne add or inc rclb rolb push jo jno lock add das xor mov aas (bad) out inc call dec call gs pusha mov hlt out mov addr16 xorl mov dec fild jmp clc fisub sbb push ret adc ja pop roll add mov inc (bad) test clc inc mov cwtl addr16 fdivr and adc sub scas sar add and shlb orb jnp xlat and fisub xchg (bad) enter add popa mov pusha movsl mov add fstpl mov push sub je mov shl or jl mov lret dec fisttp mov int push es push lods cwtl and sub stos add cli cwtl cld int3 mov mov mov sbb xor push add xor push sub jp sbb in faddp int pcmpeqb lret imul lock xor push sarb add imul repnz movsb add test data16 cmpsl mov jnp (bad) popf add frstor sub es and or push lods cli mov dec rorb pop xor cmp cmp in mov (bad) jnp shrb mov fidivr out push add hlt inc int3 shr in rol inc xchg and adc mov inc add inc repnz sbb aad adc std push insb mov ret loope add xchg je icebp push test mov push adc test loopne sbb dec movsb cmp test adc inc inc dec imul dec and add arpl mov mov or hlt pushf add popa adc test xor mov jns xchg enter repnz mov mov dec sub addl inc lock inc push (bad) sbb ret inc loopne fstpt add aaa xor mov or dec lods add loope fs sti inc push addps test je insl jno aaa cmp inc jmp xor cli in shlb outsb test add sub xor call stos sti call (bad) lea inc addr16 and data16 xor sbb sbb pop test inc ficoml sub notl repz and mov nop jo dec mov iret rol mov shrb cmp inc inc test hlt add lcall cli sub loope xchg dec and sub pop test cmp andb jo pop add add in mov or and out rcrb and mov xchg push addl dec clc in adc xlat mov jb xchg in fwait push mov ret into (bad) push cmp xchg dec cmp test mov lea cs pop aad xchg leave pop adcl inc mov lcall andb inc nop mov add movsb je js push andl repz or lret sahf or lods aaa lock push (bad) sub cmp xchg imul movb mov mov adc inc cld inc or inc (bad) mov pusha and sbb test in mov imul hlt cmpsl xor arpl je cmp jmp fistpl lea cmp sub add and dec test inc xor push add sbb jno iret and or and orl mov inc lcall lock pop std flds pop inc sti mov add xchg xlat mov mov nop dec add movsb push and xchg in add or push cwtl mov addr16 sbb int mov roll hlt popf cmp or pop popa jne cmp popa push and sub xor loopne fild sub in nop int3 xor mov cmp out inc pusha inc (bad) and in je loope inc and lret clc push mov mov aas aas out push and xor (bad) add loop addr16 mov frndint or xor test popa mov and lock cli fs xor int3 mov inc shlb mov xchg cmp mov cmp adc cli call inc or clc push (bad) sbb fs gs xchg and lcall sarb out mov int3 mov loopne push add push jl add jne add push mov test sub (bad) dec ljmp lods push and or test lods mov mov imul push sub icebp and pop push cli in jmp adc (bad) sbb add inc dec or daa cltd hlt (bad) or or leave lret adc adc outsl push jno loopne cmc add xchg jl insb sub or aaa push dec mov cmp repz movsb loopne clc ret mov sti sahf jl push cwtl and cld mov cmc jo jne insl into sbb push pop scas out pop xor mov and jae push enter pushf ss fmuls inc std sbb pop aaa imul (bad) out test clc mov mov inc add lcall aaa rolb or lock add stos push rorl test adc sub sbb adc sbb jae rcl ds sarl push stos ss or inc adc xor sbb or pusha pop lret popa adc adcb add hlt lahf sub fs add sarb mov mov mov push add adc dec lret add or (bad) shlb mov add mov and clc stos add in (bad) lock push orl in mov dec js add xchg fcmovne xchg mov sbb out and in dec in hlt inc dec ja and jmp rclb in add inc add sbb inc add jno sbb pushf xchg mov test or loop aas cltd adc lods cmpsb in cmp jmp lock jge incb or add (bad) aas clc sarb lret add sbb fsub insl sarb add rcr add addr16 mov sub data16 cmp sub xchg xchg ljmp and movl sub call push bound add popl clc add int fidivr and cltd or add mov faddl pop loope ja pusha sub dec aam sub je fdivrl sbb xchg icebp test hlt stos call cmp mov and addr16 enter fcmovbe xor inc or aas pop push inc pushf punpckldq jne shlb jnp add hlt add add xchg lock xchg push ja cwtl mov jle sub sub fldcw enter push xor bound aas and cmp inc add mov gs pop jae jno xchg pop xchg fs mov int xchg shrb xor sarb cmpsl inc xor jmp fistl jmp pop test fdivrl add jg repnz andl mov mov or adc prefetch xchg fs mov sub je hlt outsl mov xor xlat addb loopne adc loop movsl inc mov enter cmp mov xlat andl (bad) xor add stos iret jnp dec fimull jl movsb mov xor jmp mov addr16 cld stos or sbb cmp orb ds out and pop stc or mov fsubrl sahf mov loope pop scas or call mov sub shrl popf jns pop xchg and sar and mov aas mov sbb loopne js stc rclb clc xchg add sub or int3 add std fldcw lock add adc cli pop and daa lock jge mov into pop bnd adc rolb or xchg cmp lret mov (bad) mov adc jge bound pusha mov fnsave loope and cmp fisubl jns pusha popa fnstenv pop inc xor arpl fadd aas push push and push jb sahf sbb out ss loope mov pushf inc inc inc add and popa xchg pop dec jo (bad) adc mov aaa lret fidiv test cwtl enter test cld mov bound push stc inc cmp in xchg push jg out popa dec dec addr16 inc xchg mov sub add les je bound icebp cmp idivb sbb sbb mov push adc mov inc or cmp cld sub lods sub stos rolb cmp pop and insb je clc inc hlt mov fistpl pushf sub (bad) cmp mov fmull lret shrb jns stc inc add add inc mov add (bad) scas pop push lcall nop cltd mov outsb rolb mov iret push mov push adc xor mov loope call xchg pop repnz rcrb cltd in adc mov add adc inc xor cmc jnp mov push in mov shl push adc pop icebp stos test cld xor insb mov hlt sub popa (bad) jl mov sub jo mov divb out mov add or (bad) push cmp iret xor (bad) xor cmpsb xchg mov call or xor (bad) cmp jns or gs xchg nop add mov xlat add dec popa lret dec in cmp add movups add test mov add pop pop lods add loopne sub mov scas popa mov adc das iret and rorl push aam test insb adc mov les or enter popa inc cmp adc lods pop jmp mov xchg add mov push lea dec and pop stos enter loope (bad) les and jg dec add sub inc mov mov and mov sub addb test jne call cmc push push push push enter sub mov mov es dec inc into out les roll test insb insb mov imul and rclb daa jno push stos addb and lcall inc add test and dec and pop call or loopne loop push mov adc or push adc nop pushf and lock push pop lods mov (bad) pop outsb cmp push cmpsl pop enter sub inc xchg mov subb fmull cmp es and jae popa into repnz mov cmpb pop movb push mov lods adc inc push movsb or sub jl and pop mov addr16 loope mov sarl mov inc cmc daa pop or mov xlat xor or sti add repnz out sub sbb shll push jnp out out insb test aam or inc jo leave mov in addr16 mov xchg mov push xchg movsb xorl test xor orl and sbb mov lret adcb dec mov add inc pop mov cmc dec nop pop jo movsl or inc sub test xchg (bad) xor lret clc ret push jecxz mov dec push sbb cmpsb xor ds sub xor sbb dec nop or cmpsl int3 push addr16 cmp loope outsl ret js jne adcl jne insb and icebp cmp push hlt inc je pop mov int3 int3 insb adcl push mov (bad) repnz sub push mov xor pop scas insb adc popf cmpb std add cld add lahf jmp cmp call add out (bad) sub and xchg out sub jb add sub test xchg (bad) pusha out cmpsb pop nop mov dec sbb cltd subl mov push test mov inc lods sub sbb test scas add addr16 adc inc jo clc in sbb add lahf es std and test mov push divb test sub stc dec call and idivl sbb cmp loope mov dec push outsl inc lock jns fsubl push jge sbb dec mov sub ds mov and in int pusha cld push inc jle add jg and shlb int3 add aaa pop push xlat bound adc iret nop or jg mov add add adc dec or mov test lods mov int3 add pop dec add add jecxz loop jb xchg jo hlt fldcw aaa and repz sbb jns cmpsb mov in lock adc add inc and cmp daa adc push cmp dec xor je jl or and aam cld repnz lock test int3 add test cld lods cmp mov loop insb sub lods data16 adc mov mov inc sub inc enter lods lods and aam mov popa aas sbb add dec sub js or cwtl fsubrl lods aad rcrb xchg jae mov icebp pusha fsub adc das inc mov test xor clc aad or inc sbb inc call pusha call jl mov in inc subl mov inc sub pop add mov inc xchg ret js mov imul adc inc lret je mov pop jns int mov (bad) adc mov mov xor addb push lds pop xor inc push jle push push pop or jno lock nop add or ret enter jns add loope mov inc fwait or pushf and subl cmpsb sub test inc rcrb inc or (bad) mov loopne and inc mov (bad) shr lcall nop mov popf pop mov cmp outsb push or test test mov in jp jnp add es xchg mov and (bad) add xor arpl (bad) aas sbb mov dec push in add push fsubrl sbb fxch in cmp mov loope mov sub jne jp outsl cmp add sbb test sub xchg dec mov or adc pop xchg icebp mov pop pop xchg daa push add stc cwtl ret push mov fcmovu pop mov mov xor (bad) (bad) call push fadd js push out ljmp js adc lods inc mov xchg sbb or arpl push xchg sbb pop xchg rcrl add adc mov xor rcr xor sbb iret and mov dec fidivl pop push pop clc (bad) loope (bad) or xchg xor mov or test lock and testl pop add pusha lock mov add adc rcrb outsb sub (bad) add cld in mov in or pop divb insb sbb or test in lea outsb add loopne inc clc add aam add inc mov sub and push adc or add mov sbb in popa int3 xchg or lret push clc xchg xor pusha adcb (bad) pop ret mov pop mov xorb orb xor adc sub jg add or sub mov pop and add dec enter movsl add lods loopne pushf or icebp in pop mov dec inc mov or push fistpll mov adc js ss imul aad jle cmp out aad je xchg or (bad) jb lcall and and and cwtl push dec mov and mov adc jns lea and mulb fisttpl push shlb push and xor adc mov mov mov sti sbb es icebp sbbb insb jmp cld sbb xor add push or cmp xchg or and bound or sbb fs push and sti ljmp lock sub or add adc push xorb std inc arpl cld or je adc sub push or push in daa lds or adc mov inc mov lea and mov adc out roll cmpsl mov xchg add cs cld and fsubs lahf or dec testl es orb fcomps shrl subb push dec mov imul pusha sub into fs (bad) fcomp cs sub int3 pop jnp ljmp (bad) aam pop sbb lods xor lret add mov inc outsl loop add pop imul add dec ss insb cmp or imul insb lock add ss leave xchg and mov out nop les hlt inc push mov or xor cltd movsb or jg stc cwtl mov push or add jl pusha pushf mov jmp mov inc pop adc in into fidiv add sub push or icebp push push sub add nop mov pop loopne ret sbb mov orb mov sbb sub ljmp setns clc jg xor sbb or lahf mov xor xchg sbb lock jge ljmp inc cmpl add icebp xor repz sub cmpsl pop inc mov scas xchg shr daa aam xor adc test xor aad lock scas jmp ret mov mov inc xchg scas repnz insb test bound dec popa popa push sbb add je fs pusha push cmp jno push sti and loopne mov inc mov dec sbb push loope jp adc gs loopne adc sbb jp pop xchg in cmp and ret mov rcrb je xchg mov push dec or xchg pushf or mov mov scas out sbb add mov mov sarb and les inc xor movsl in sbb jp inc dec andl sub dec xchg fadds xor push cmp jo aaa mov mov add adc dec jmp mov mov mov mov pop push movsb dec or cmp out clc in jmp inc stos enter adc adc adc mov pop ljmp (bad) xor insb mov xor out push aad adc pop cmpsb sub pop pop sub xor adc clc bound xchg cmp imul movsb movsb adcl movsb add jge cs fsubrl iret ja xor pop xchg cmp addb pusha xor cmpsl loope mov scas mov out add gs push movsl pop insl mov push ret xor inc stos sub jl adc add sbb inc loope enter sub jg loopne cmp mov cmp lahf movb jns push mov cltd mov mov add jnp lods (bad) push inc mov sub adc sub clc lret je inc xor (bad) adc cmp pop sub mov push lock fldenv in inc sub mov cs push inc mov fcompl mov adc dec nop push add add sbb mov dec mov and jae sub push xor mov fs inc ds pushf jbe sub xor inc (bad) and popa inc sbb test rorb add fsubrp fisubrl sbb insb or mov inc addr16 fcoml xchg add stos out pop or add pusha out xchg xor sub dec dec pusha aam call jecxz sub mov mov sub inc stc dec add lret xor cmp in sub loope xchg add ret inc adc mov (bad) enter mov pop pop and push shl dec xor add sbb pop out inc addb xlat subl adc dec adc andb notb sbb adc jbe adc scas (bad) inc stos in dec pop push pop xchg adc jns mov add add sbb cmp add (bad) loopne mov les ss sbb scas fwait rclb or mov and mov inc data16 (bad) bound mov leave or mov or clc add sarb outsb fsubrs lahf notb xchg in xor pop and pop test adc jl outsl movsb add push pusha sbb sub jnp lret push add pop mov jge mov push insb faddl pop pusha and icebp aas or faddl add loopne or test lret mov pop mov and add ja dec mov mov adc add popa xor xorl sbb or jo xor inc xor fabs adc shlb and movsb inc clc dec pop pop pop mov or inc inc nop jge and mov mov test (bad) pusha imul mov (bad) xor lcall xor subb shr icebp inc sub mov fdivrl lcall and out bound xchg or js xchg orb mov xchg push jg ret pop xchg mov rcl dec scas cmp or cltd lea jmp inc mov sbb add xor jmp or inc jp jns (bad) mov sub adc fstl pop sbbb je push pop push push loope sbbb jg sbbb je sub inc dec jl fdivrl push call test test call xchg mov cmp lock sbb repnz je inc sub and popa mov call add iret xor sub sarb pop push adc aas and bound hlt fsubl add mov cmc inc or and push pop sub mov mov sub xchg jmp daa push sti add shrl ret repz inc orl cmpsb xchg cwtl aam add or popa mov and mov repnz pop movsl dec addr16 mov movsb sbb nop mov push adc sbb sub cld push pop mov or pushf lahf ja,pt adc fsubrs (bad) adc repz jns and fsubl xor dec pop in mov fstpt dec mov hlt js add neg addr16 pop ror les push outsl add ret out push call sub icebp loopne xchg adc cmp inc cmc inc jo xlat hlt xchg out pop mov adc mov ret lds add cmp pop jb popf faddp mov dec dec jo fsubl xor xor stos movsl ret pop nop jp xor sub lds ds sub ss out mov hlt mov pop sbb repz ds xchg inc jo and push mov stos inc cld (bad) rorb jmp or add cwtl dec jno inc iret mov xchg mov add clc jecxz cmp lret icebp add push and in sub int inc std or mov in and je dec js dec inc sub push sbb fisubr loope fcmovu in xor mov lods mov fs jns add aas push add ret mov dec cld dec or sbb mov mov (bad) data16 and mov lds pop icebp nop pop je rcl sbb and sbb dec and sbb outsl data16 int3 add int3 fdivrl pop push add bnd mov mov fldcw add xchg xchg jnp call add push jno sbb cwtl mov adc mov das add adc or js sarb mov je bound sbb and add pop rol pusha sub add push xchg or hlt push (bad) or mov mov mov incb mov in jg xor mov mov ja mov lods loopne addr16 dec mov add aas cmp mov lock addr16 push sub push mov popl pop push movsl leave jp pcmpeqw pop out lret or cmp test shr aas pusha jg call test mov insb je mov add xchg lcall mov fdivrs push test roll adc dec mov pop dec adc lods bound mov jmp subb mov jl mov add mov int3 and xor mov lret add and outsl int3 nop adc mov cmp and jo adc mov add and dec add adc add xchg fcoms xchg add push lret lds mov fwait inc pop addr16 aas sub nop add or pop push xchg std imul xchg mov push in es fisttpl sub cmp pop or loope repnz push sub inc add mov clc ret sub pop int3 mov bnd enter cld movsb xor push add (bad) jl xchg sbb test push andl push repnz mov jns push cmp and inc in je sbb cmp inc jo in xor aam add je pusha cmpb mov jno mov nop push sahf add dec (bad) out mov in adc rolb cld outsl in icebp popf les push or dec jmp or movsb mov lret sbb add arpl nop mov mov adc cmp nop add dec and sarb or mov sub mov aas adc jo shrl push pusha scas rorl mov sar jne out add loop xchg aam or test roll (bad) or push scas sbb pop repnz xor xchg mov lods xor leave cmp push fidivl inc adc add mov aas push cli mov sbb ret outsb ds pop mov cmp rcll lea push xchg adc jb jecxz add jbe or cltd js (bad) flds xchg jo push push adc test add call mov push push js mov clc popf add dec add ds adc test icebp inc adc aad sbbb and xchg dec test rorl in (bad) icebp pushf add arpl (bad) shl add jmp add sub mov test or push pop add repz lea sub mov or cmp js jae add aas cmp lret addr16 xor dec jb mov aad sub shlb mov xor push rorl insl sar sbb inc cmp adc jmp cmp mov xchg sbb mov inc mov in call add adc dec mov popa xor repnz jno jnp iret std hlt and sub lods cmp lret rcrb jle cmp pusha aas jecxz hlt add test add mov add test addr16 enter (bad) dec rorb fild pop mov int3 les sub out add lea hlt cmp xor mov add test arpl push out push hlt orb cld add sub scas sbb pop test mov adc je imul shlb sbb jecxz (bad) repz add cmc add inc icebp (bad) jne pushf pop mov xchg push repz orl dec insb sub xsetbv (bad) movsl insl lock (bad) aas adc stc loop jo stc add stos (bad) enter scas jp jb frstor lock jns or test mov inc inc arpl push cmp cmp add sti push pop xor sub andb shlb xor push call cli loope sbb dec push sahf jne inc fwait xor mov and ret add les faddl in xor or sub cmp loope (bad) adc outsl cmpsl or jl int3 bound les jae adc call xsavec out arpl fstp ja jle add or xchg or jp add cmpsl ss das cmp sbb mov lock mov je (bad) loope xor pop dec or mov sarb xor data16 or stos sub repnz mov aas mov aaa mov inc xor add adc lret stos xchg out adc mov shrb cltd out imul leave lahf test inc cld xchg cmp flds mov in pop out lock outsb cmp data16 call push mov jnp sub push adc sub pop and stos test push or add pop mov mov mov pop push in cmp mov pop imul loopne add inc scas rorl test adc add jo pusha mov stos (bad) dec pop pop imul add cmp jnp or popa jno add cmp aad pop fdivrs fdivr popf cmp (bad) fiaddl add mov inc add sbb push addb add ffree sbb mov addb inc or adc xor sub mov jg frstor aad xlat add imulb cmc pop shlb fcmovnbe dec push push mov dec inc mov cmpl add adc and sub dec sbb cmp cmp aad add lock adc scas add cs je add lret push iret nop adc adc add lea jbe outsl xchg mov fadds aam icebp add ljmp jo mov adc xchg scas add xchg es push imull mov mov xchg inc (bad) adc jne mov push adc add add cmp cmp (bad) push pushw pop inc pop test xchg add jl mov popa jge popa shll jmp push jle sub imul cmp test push aad add aas push mov add mov imul add aas pop cmp jnp mov mov pop dec scas jae insb pusha rcr push incb sub scas lea sub pop sub mov inc test mov add andl sub sbb mov loope scas fisubr aad push sti leave xor lea out jne das (bad) enter jo arpl fnstenv popf ret ss push xor add cmp push test popa mov mov (bad) jl sub mov mov mov mov std jnp xor add cs adc jge,pt (bad) xlat add inc inc fldt push cmp pop js pusha push sahf dec (bad) clc inc fadd xor popa movsb jg ja pusha fild ficomp and loope push mov clc icebp mov pop rcr arpl sub fldenv (bad) cmc stos loopne sbb jp mov cmpsb js rolb jae or adc push jns inc pop test inc push dec push dec shrb bound fdivrs lret dec push je adc mov mov js repnz xor pop sar sbb mull or sub test insb xchg in and adc xchg and jmp (bad) clc sub jecxz add cli push (bad) inc js jae jno out add rcrb mov push ret pop sub jp (bad) push fsubl add or mov ds xor outsl cmp lds cmp inc jne mov js pushf add adc xchg mulb lock jb xchg movsb xor add dec (bad) dec and and adc stos lock in and or shll xor add adc adcb ret data16 jp add mov leave stos mov enter jb add jne jnp repz mov les in sbb cltd inc mov stos jo shlb aad stos mov dec daa push shlb jns sub sub mov sub pusha add nop hlt inc mov aad jo inc int3 jbe,pn mov add push leave fisubrl xchg ja xchg cwtl add sub stos cwtl fistpl daa add inc add pop add lret dec sbbb (bad) push test pop lret inc repnz scas or aam loope in adcb cltd cmp lock fadds adc xchg add jne and cltd xor daa mov mov das xorl jne and sbb mov (bad) xor std jo sbb xor xchg sahf mov scas std push add mov cwtl in sub sub pushf lahf jnp repz das pop mov jb add aas stos mov inc jmp push add jno ds jl fwait xor imul dec int and xchg and cmp and xor ss divl insb add jo xor scas shll sbb rolb (bad) dec add xlat add repnz fldl adc push mov rorb add or add jo xchg (bad) pop or jne mov xor popf and and rolb pop push imul and pop push fimull test out test mull dec inc int3 or push loope cmc push pop push jle jbe sbb dec or loopne adc adc pop movsb test sbb mov jns push pop jl imul lods pop rorb dec push push xor inc daa (bad) call add inc adc faddl pop jne fcmovne outsb leave push pushf xor fidivrl inc outsb or jne daa pop lock add pop jmp mov icebp jo pop cmp and (bad) push call icebp test sahf push call pop push xor sbb pop daa dec mov xor dec repnz push hlt pop (bad) sarb cmp inc push (bad) add cmovbe loopne pop fcomi inc mov aas sbb stc jnp lret fadds shll dec data16 mov into incb mov adc jnp push add or fsubrs js sbb shlb mov push xchg dec and fsubl stos outsl mov into mov pxor rcr roll add add adc fdivrl inc mov sarb mov xchg pusha subl add cld rcr cmpsl sahf movups stos jnp,pn mov movsb mov jno aas subb pop dec clc sbb call rorb cmp cmp test divb cmp mov jae js std dec pop pushf xlat or jo loope sbb movsl mov and in lret stc jge inc sbb adc mov xor lret adc mov push test xchg pop jae add pop sahf sub int add jo inc data16 add das cmp es sbb test out mov mov imul xchg xor mov or fdivrs cmpsb push movsb fmuls xor adc xor sub dec jno repnz scas push lcall gs enter inc icebp inc add enter ret lds addb jbe sarb (bad) add dec in rol xchg fcmovnb or add lahf mov add sub and inc and test lret or incb push pop pop mov movsl add sub push push adc add pop js cmp dec andb fdiv mov repz into insb sub add sbb mov add cmp xor pop pop lret imul cmovno fs add push adcb cwtl inc push fmul dec add clc inc ret adc adc stos xchg inc dec std add add cmp or adc add std or add xchg aam push mov add out insl xor aam push (bad) jns push loopne roll mov cmp sbb dec or dec stos add mov lods aas add shrl jnp or push pop jae out adc arpl or add mov dec dec mov xor or mov jbe cli dec xchg xor das adc mov lea and movsb (bad) or add jle roll rclb dec jmp xlat mov popa mov xchg cltd jo and pop fs mov insb xchg test insb jge dec sahf inc inc jnp xchg es pop inc repnz cltd repz or or loopne mov sbb imul jne repnz mov add nop ds adc lcall adc inc sbb add lret rorl mov mov jo lahf stos fadds int3 dec or cmp insb inc push fildl and mov pusha mov pop sbb push inc hlt xchg push or sbb nop inc cs data16 sub add pop scas mov dec dec pop lock or and roll sarl adc sbb scas outsl push push cmp cmp pusha xchg adc test adc lret aad sahf lock cmp xor or repz add addb out pop adc add mov push inc test adc adc stos (bad) sar xor clc mov adc dec jb rolb and test int3 pop lock jecxz pushf test lock nop test shl lfs cmp pushf mov lock dec push adc mov lock inc loopne adc andl les sub lret push add into xchg push xor inc add loop add arpl pop scas xchg call fidiv lods add and xor add flds aam clc rolb push test (bad) inc or js push dec mov lret out addr16 aam hlt cmpsb mov les insl xchg lret loopne pop jmp std (bad) adc add jae sub flds or mov dec inc fs add mov lcall cmp test (bad) sbb or lahf push or rcl ret push clc cmp lret xchg les xchg push ja pop push dec mov sub imul fisubr dec and pop (bad) (bad) jae sbb or repnz pop fsubl lea aaa fnstcw push fs push adc inc adcl imulb inc idivl jp fwait sahf push (bad) adc inc adc pop sub ds pusha pop stos push lds pop mov sub add sbb or sub jmp leave popa scas pop jno add cltd cmp inc sbb push data16 sub into cltd les (bad) dec out rolb or roll dec mov cmc jp scas dec adc xor and jl icebp stos mov jnp insl test add lret pop lods mov adc das mov xor xchg aam jl adc nop adc push lods pop xor xchg sahf aas add inc std in pop dec int3 adcb pop xchg sbb subb or test cmpsb jae fisttpll pop mov or mov sahf or sti rcr int out fldcw pusha mov cltd insl cmp cmp fldt lock cs push ds mov mov clc out (bad) lcall pusha or inc loopne pop dec lret adc aad xchg pop mov and fcmovu bnd test add xchg out add sbb rolb inc ror push cmp push or dec dec rcll call lea jp mov pop add fidivrl inc ljmp dec mov lock outsb aad loopne ds dec mov loopne add fldenv adc mov mov add or rcrl rclb (bad) hlt push aas xor outsb cmp loope repz das pop push jg loop xchg nop mov adc fs (bad) mov or stos or inc hlt add and cmc mov cmpsb adc inc mov add push test xchg adc mov push or outsb cmp mov or xchg dec xchg mov jge jl shrb jne fwait push stos jno jo icebp loope push or or or nop add cmpsb test mov adc jbe mov add sub pop mov fs mov addr16 popa xchg adc or push or cmp inc (bad) push add xchg pushf adc mov sub movsl mov mov jp and push mov or insb push adc icebp mov and cmpsb inc shll or (bad) movsl test or dec or (bad) inc jl fildl push xchg enter movsb mov add xor jo leave pop adc test movsb jl mov and loopne call dec in or test iret jmp lcall fcompl inc push fist (bad) enter jne cmp push add mov mov nop in sub jp ja fisub or add rcrb mov mov and inc insb or in add clc ret fcomps or int xor test or rep je clc dec add add (bad) mov (bad) or int mov (bad) lea rclb mov push push mov mov fsubl inc add aam mov js add scas and xor pushf inc sbb mov leave dec sub lods mov cmc (bad) cmp ror test lock (bad) int3 or cmp dec add mov mov stos icebp lock xor sub mov stos push dec andb inc scas add mov add add lahf (bad) hlt xor fcoml cmp loope test inc cmc and mov lcall loopne jo shl in add pop test int sub inc xchg idivl add movsb (bad) push lret mov mov inc cmp rol rclb cwtl (bad) xor cmp pand dec popa and cmp sbb jnp pusha pop aam nop add inc sub and nop test cmpsl inc mov pop popa (bad) xor sub faddl fdivrs mov (bad) mov add xchg xchg jl add gs adc jno add enter sub aad xor pop bnd sub insl cwtl fmuls sbb mov nop jecxz mov jl cmc call or or insb (bad) loope adc push lahf jo out loopne mov mov sub sbb mov mov pusha lock adc addl es add pop xchg lods (bad) mov inc cld fcmovnu inc jge adc loope jbe add jns outsl out add cmp mov dec rcr inc ds cs movsl rcr lcall mov xorl mov int3 xorb dec ja push fnstenv adc add inc pop dec add stos out clc or addr16 add push add rorl addr16 dec and add ljmp (bad) bnd je or test dec push push aaa fild push cmp rorb mov cmp add and xor (bad) in mov icebp pop cmp sub aas mov push aad pop stos mov jae clc loope sbb fsubl inc and (bad) add daa in pop iret and add dec xor add push into mov or cwtl in inc pop or in add data16 inc fcmovbe fdivrl ss mov adc add (bad) mov imul hlt adc movsl sbb push (bad) movsb and dec sahf enter and lods addl or sub lcall loop add jecxz pop jno add dec add (bad) adc and test xchg mov add iret mov mov xchg push xor idivb jo pop mov mov pop lcall push sub inc mov stos pusha sbb pop add adc data16 lds ret mov inc shl stos add jg std insl orl nop adc incl repz call sbb (bad) cltd orl xor push inc mov dec call fs xchg add in dec les stos add dec clc add aad lock inc pop mov pop adc scas roll adc scas (bad) loopne mov adc mov pop xor pop clc inc (bad) int3 xchg jnp cs mov por sbb (bad) mov js mov jb or mov rorb add ljmp insb fs (bad) fmull mov aam add xor sub cs xchg popl and rdpmc sbb in sbb pusha test flds movsb inc popf mov mov movsl mov call je test aam ficompl ret (bad) adc inc xchg jo pop mov test psubd ficompl (bad) sub sbb pushf or or ret out lret sbb mov or dec xchg in add adc aas mov ror add loope sub mov sub add (bad) fnclex out lods mov mov mov or xor pop add jnp cmp pop aaa mov add lret mov repnz jge repz jp mov or addl hlt fldcw sub add push cmp push rorl mov add js mov insb gs imul aad sub nop adc add jecxz aad push scas pop rclb or movsl in mov adc popa scas jmp loopne stos imul adc mov sub adc rcll nop mov or mov jmp mov mov sub mov lods dec and movsb push outsb icebp js sbb test dec jb outsb aas shlb or movsl (bad) jbe hlt loop add sahf das add sub mov (bad) dec mov imul mov adc cmp and loope mov sbb (bad) aas sub setb mov add sub mov test mov add sarl hlt test adc push xchg jmp ret ret rol or rol dec jg dec push movsb fwait add or cmpsl add push adc leave andl (bad) push dec xchg mov add pop sbb jbe jo adc sub and add ret daa insb dec frstor add scas pop js jns hlt dec stos mov xorb push mov test dec sbb int3 add adc mov cwtl adc lcall xchg stc pusha aam mov lret xor pop lcall jne js into xor xchg mov inc stc sbb pop push addb jnp add pop das adc es jno add jns add stos (bad) negb and (bad) roll dec pusha lahf and out in add sbb or push adc aad nopl cmpl loop loopne add imul jge sbb add fcmovne cmp inc lods ret inc add cmp add (bad) mov ds cld lock sbb sub nop add rorl loopne,pt push pop sahf xor (bad) mov (bad) push xchg pop pop jo in insb lds pop fnsave push popa or inc mov pop mov cmp jb adc pop fimul (bad) imul rcll xor add inc jns mov (bad) out xchg mov stc adc enter stc inc fistl std and xchg sub cli jbe add xchg sub cld or mov repnz outsb mov add dec fcmovne arpl push add bound push rclb push mov and inc mov data16 adc lock dec mov sub sub int add jo ja xchg test mov pop (bad) aad xor push inc repz xlat pop jns (bad) lds stos es jns (bad) pop inc xor scas dec hlt jbe jl add xlat mov rorl scas repnz dec sub and mov xchg push nop and call outsb add xor cmp push cmp test inc loope fsubrs xchg adc insb add sbb sub in add dec sub mov and xor add testl jo in add jb pop xchg mov adc repz lock cmp test aad or out add cmpb mov add xor (bad) test push cmc movsl add inc jb aam rcr out scas jo,pn mov aaa imul mov xchg adc xchg rolb xor hlt xchg adc (bad) out sbb mov add pop add mov cmp repz and dec loope out push inc pushf pop sub adcl lock sub call sub lcall mov aam out inc sub dec pop mov add pop push lock and jb sub lock mov mov jl and movsb fild popa loopne xor dec movsl dec mov xchg add lret cltd fcomip pusha pop jp loopne xor out xor and pop xor (bad) fidivrl mov dec pop data16 lock ds sub jo inc add cmp or mov mov adc aas inc js int3 sbb sar sbb inc dec and and mov xchg je or fildl fcomps int and mov or aad ret iret add shl fildll add js or pop (bad) rcr or xlat (bad) bnd mulb and mov add add into (bad) jl xorl out sbb cmp or ds or xor push xor mov jo fimull (bad) sub xchg (bad) mov add push or add mov scas pusha cmp mov adc fldl mov test add cmp xchg lcall jg arpl add add jno sub push add sti xchg xchg mov jae mov lahf inc adcb push xor cld daa dec add lock mov (bad) je in or (bad) jecxz (bad) mov mov call shlb xor in push xor adc sub mov adc or and pop insb les loop nop movsb or sbb cmp jg mov fnstcw lahf add in sbb add pusha mov sub mov loop ja inc icebp mov outsb push pop lahf cmp popf int3 inc adc push mov xor into inc lods cli loopne and dec inc sbb add mov lahf cwtl jno scas repz and and call add or rcrb xchg sbb xor movsb pop outsl ror cmpl clc jns pop inc jae push add mov (bad) mov pop rol add pop enter adc sbb cltd rcrl xor je push pop cld loope mov enter fdivp sbb leave jp mov fistpll fisttpl push test push aas pushf push aas sbb add push fistpll xor add mov ds aaa push mov xchg int3 arpl and and mov dec stos add fcomi mov push jl rcrb push aas daa fadds mov popf mov loope inc pop adc mov jae pusha in add js jge jp add test inc pop leave cmp push les test inc add in daa leave pusha or in add or push out mov rorb test lock mov lock es dec enter loopne adc add nop negb ds or pop sahf add rol cmp in js dec mov aaa lds loop js add ret sbb fs jo add sbb rolb hlt fistpl inc subb adc cwtl cmp dec pusha pop inc mov jmp scas cs bound pusha push mov and pop data16 fcompl sub sub std mov (bad) jo or sbb add xchg adc in sbb pop sbb call mov sbb or xchg outsb and add fdivr orl push sbb and adc add imul add xor imul sbb cmp or insl mov add sbb fs inc dec push loopne in mov icebp inc fidiv pop jo pop ret mov popa xor adcl sbb testl mov or lret push add bound out mov test sub pop mov jns add lret imul push lcall xor pop inc cmp cltd iret fidiv mov sbb dec add add (bad) jl sub adc pop add add movsl xchg gs inc out inc outsl or jl xor xor sub nop stos sbb add jno call jae,pt cmp in inc push gs imul andb or jle lds (bad) mov pushf cmpsl daa push loope push cmp rorl pop ret popa xorl int3 insl mov daa rcl xor mov lgs pop adcb repnz jb and (bad) (bad) mov rcrb mov es shlb xchg les ljmp and shlb cmp mov and push faddl add adc or and add lea push (bad) dec pop sub or push add push xor mov cmp shrb cli add popa push mov inc in mov push inc mov arpl movsl xchg add iret add les xchg cmp rorb pop leave jg push cmpsl push sbb mov jl and push stos mov test lahf das mov adc js pusha les mov repz jmp add out push pop (bad) xor jo xor inc add fnop adc add add in (bad) into dec pop or js sub insl sbb lea popf or mov jg js pavgw pop jge adc test and fptan (bad) pop pop jp jp add popa mov sar call add in pushf pop stos (bad) mov (bad) xchg fs mov std stc es sub cmp ljmp xchg nop cmp insb das sbb out adcl add jecxz mov adcl in in push or int andl add cmp icebp fldt pusha cmpsb mov cltd jae (bad) pusha dec xchg movsb and jbe popl pop push and adc dec cmp or mov fnstenv push lret insl cmp shl rcrb outsb inc pop in addr16 pop dec fild movsb push push mov push in xchg add xchg jp cmp mov jb sbb stc and rolb sub dec mov cmpb cmc sahf roll cmp sbb push dec pop xor fildl inc xchg incb call enter icebp inc xchg xchg add push scas pop pop xchg mov xchg ret xor (bad) and mov movsb inc mov ljmp lahf data16 cli fistpl rcl add nop adc fiaddl push or fwait js adcb sbb ds aad (bad) adc sub in es loope imul js or aad cmp sbb mov add call push fsts int inc sbb adc movsl pop xor daa sub cltd addl adcb or dec cwtl add fdiv mov mov incb sbb and sub cmpb in adc mov int bound and dec pusha ja or dec rolb cwtl or pop xchg and inc xchg jle in mov mov mov je add or pop and jns xchg lds jmp add jb cmp clc sbb adc or sub pop hlt sub add aas leave xchg inc push add mov icebp in fs mov mov xchg mov sbb out adc pop dec movsl push mov pop cmp xchg ret lret add clc sub adc dec fild adc jp add add and lret nop inc (bad) icebp add add sti mov imul test dec pop cld in fisubl fs jno xor cmpsb stc in adc adc in xchg pop push les push adc or dec or in dec jp and xor sub in xor cli xorl ja mov aam imul pop jbe imul loopne imul adc rcrb lods in push fcomip mov insb loop or cmp xor add add inc or mov repz jmp push ret inc add pop (bad) sbb inc dec mov fdivl adc gs mov xor loopne or sub lret push cmp andl mov or or cmp je cld mov lea in pcmpeqw leave int inc cmp outsb pop add sar mov sarb orb aam dec incl jb test das in daa adc insb test (bad) mov sarl pop out inc daa cmp sbbb add add pop mov cld add insl lea mov push xchg imul inc jg xsha256 cmpsb push adc jecxz push sbb or bound enter cmp mov dec xchg fldl pop ja add sbb pushf cwtl rclb test adc cs jl or mov (bad) mov test pop inc fimull stc cwtl cmpb push jp out popf add mov cmp stos dec ss test popf shl test cmp mov leave sbb mov mov lods and or repnz mov sub dec jl sbb (bad) add push rcrb add clc in movsl lock rcrb mov cld jle ds call and add dec adc jmp (bad) loop sub dec jmp popf (bad) xor (bad) mov clc sub xor and push dec popa lahf rcrb scas mov inc ljmp mov out nop add jmp and mov mov inc movsb dec pop sbb mov orl (bad) cld lret cmp test mov adc ja add das mov leave add mov (bad) cli clc add bound scas (bad) adc sbb cmp jns and adc add faddl push xor cld add mov sti inc push or push lea mov dec sub pop pushf popf shr add mov mov add push pop mov xchg daa and add push std push or jo add jne stc sbb adc mov popa lret ljmp xchg xchg push (bad) mov cli cld sbb ja add cmpsb sub adc (bad) out push aas sbb in dec jge sbb cmpsl jle lods add (bad) jp add sarl jno mov mov ss inc nop nop add xchg lea sbb iret sub mov cwtl (bad) (bad) mov and and mov (bad) nop repnz in jle sub leave add or add ljmp outsl or loop (bad) mov dec mov add stos dec inc or cmpsl pop je pop jl xor inc adc add jbe cmpsl arpl mov sub sbb std and push add cmp mov nop lahf repz cmpsb add push cltd stos and cmc xor xchg add mov push add movsb add or adc jmp ljmp (bad) out test push cli or stos inc popa xor scas sub inc fdivl sahf sbb pop outsb mov lods movb adc sbb sbb fdivrl adc pop or outsl fiadd addl cmp push mov and add test push cs or dec cmp rorb (bad) test imul jg dec popa mov mov mov cs cmp adc mov sbb sti clc jg add subl lods addl push jbe movups movsb pusha push insl inc sub loop and lock dec repnz (bad) shrb pusha fmuls sbb rclb (bad) scas roll loop push cmp pusha incl sub push test in ljmp jns dec cs sub push out nop mov or adc loope lcall enter push stc pushl int3 dec sub pop lahf add pushf repnz pusha mov push push and pop xchg mov jbe scas sbb and or ffreep push mov mov push jo xlat ret gs jl sub jecxz cmp in clc pusha movsl sub fidivrl ljmp inc mov hlt xor aaa xchg inc mov inc fadd cwtl call push cmp shrb mov dec and bound xor test dec (bad) lock xor sub mov push add pop (bad) xchg in jmp or jl add bound mov add rclb inc and add push lea sti sbb sub pop or out add loopne cli scas push out daa aaa imul leave push jb lock insb xchg or (bad) mov stos dec xor shll mov stos in cld inc sbb mov daa nop mov mov and xor call adc repnz aaa mull and sarl cli add in push push pop jl jl add cmp lea (bad) xlat arpl dec jo sub fidivl mov xchg push dec cmpsb aam mov sbb xor xchg ds dec in fadd mov stos inc pop sbb imul sti mov seto push xchg gs lods orb xchg adc test and (bad) jnp push mov stos inc bound ds or (bad) mov or stos sbb jbe add cltd add imulb int push cmp lock out rorb or dec adc ja add mov pusha out bound pop int icebp addr16 sub ret jp and xor imul loope popl or xor ficom adc pusha mov sti dec jno stos sbbb jge and mov xor fs sub insb jbe icebp sbb int3 adc inc mov mov mov pop cld pop cltd aas rcll pop mov lock rorl mov je sub out les and loop adc add lods push cmp mov das add je inc fcompl add cs cltd in pop add or stc mov inc cwtl add out xchg xchg mov es test inc std mov mov xor insb jge push cmp add jae lahf sbb orl jbe sbb mov lock daa sbb sarb pop xor les lret mov arpl adcb jmp mov push notb mov add push (bad) hlt popf mov or lret xor jae mov aad clc push sbb syscall arpl stc jne add repz (bad) lahf pop sub sbb xlat mov adc iret or adc sbb fmul inc sub adc cwtl jo out add jg mov jge xor add pop cmp outsl add ret or cmp add out (bad) mov lods push daa sub cs add sbb ja es stos icebp insb add int3 mov xchg loope mov add ficomp imul stos inc inc sub sbb add fistpl inc mov jp jmp or inc mov es add cld add dec push fsts shrb pusha cltd cld daa add loop (bad) mov push rolb gs in mov sub add dec push or or mov addr16 in xchg and (bad) dec pop in inc or mov lahf add and insl cmc (bad) mov je push jl adc out or lahf add sub lea pushf nop pusha lock sbb sbb inc lds jbe movsl mov mov push push movsb fcomps adc aas les mov pop in scas lods jb ljmp call add das mov adc and or in xchg loope call clc add (bad) sbb (bad) mov push push cmp sbb jmp out shrl mov xor inc int cmp sub mov pop mov inc add adc sub inc jl add insb push mov testl scas cmp sub dec (bad) fnop bound pop sub subb mov cwtl xor and mov jecxz xchg jo icebp (bad) cmp je pusha and out (bad) pop sbb mov xor pop push mov mov adc or inc and dec mov push ja incb (bad) lock push add fmull add nop xchg push push or outsl mov lods decb fsubp sar or mov xor (bad) xor dec add std je or mov inc in xchg movsb jmp xchg pop call shlb mul add outsb adc mov movsb cmp leave mov or mov dec inc mov add dec shlb rcrb mov push xor xchg push adc fisub add into xor movsl loop cltd sbb dec or cmp daa cmp in clc fwait movb out pop fnstenv (bad) enter nop lock cmc imul mov sbb xchg push out jb mov cld push sub test rolb or push dec es xor add roll jge or jno mov add scas mov loope out repnz test lock adc dec xor fistpll cld es jge jnp (bad) test aaa cmovl out data16 cmp cmp sbb xor imul push or enter xchg mov es mov jo adcl dec sti addr16 or ljmp fidivrl es jbe add ret popf (bad) je add jne jmp lea sbb jno mov test push inc pushf sbb and call xchg in jle push push std repnz enter add cmpsb out adc leave jl (bad) mov pop movsl jmp push adc int3 and push sbb fsubl mov xor jo or add xlat lea cmp add shrl insl xchg enter and cmp or cli shl jecxz or arpl dec dec pop add pop or leave daa aas and es mov xchg cmc loop (bad) loope mov dec mov xchg daa inc add cmp lret imul les and inc xor mov dec adc jp ret sub push add lock inc or pop test sbb push cld in (bad) out lock nop jmp cmp pop in out add jo popf add add mov add xor jge sub or adc dec cwtl and rcl fwait js add popf jl or jo into push adc push js xchg or dec cmc and sub add inc mov insb ja cmc mov push repnz jp faddp jns mov ds add rolb push int3 add add add add add add add add add add add addb add add add add add add add jmp jns ljmp pavgb sub fild cs fadds sub xlat add sbb add outsb add mov pop inc mov inc sub add out cmp int3 add add add add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add add add add add add add add add add rolb add jmp jns ljmp pavgb sub fild cs fadds sub xlat add sbb add outsb add mov pop inc mov inc sub add out cmp int3 add add cltd add add add add add mov add add or add and mov add pop lock add add add add push jp add add add add add add imul add add add push pop add aam add in add or add add add add add (bad) incl add incl add jecxz add movl add pop add clc aas add cld aas add clc pop add icebp popl add movl add incl add incl add add add add add add add add add add rolb add jmp jns ljmp pavgb sub fild cs fadds sub xlat add sbb add outsb add mov pop inc mov inc sub add out cmp int3 add add add add incl add incl add incl add pop add fcomip add fcomip add fdivp add fdivp add fdivs add fdivp add fdivp add fcomip add fcomip add rolb add incl add incl add or or add or add add add add or add add data16 and dec inc inc push js in popf jns push in (bad) aas out xor add push add rclb mov test mov mov insl lods xorb mov test (bad) pop mov jne push inc adc dec fadds lods pop leave sahf int3 jb sahf fistp xchg dec es leave fs mov gs sti mov repz cs jns inc das scas pushf pushf cmp cmp (bad) sbb nop mov or punpcklbw push push push sbb xchg sub add add pusha es adc adc push subb pop add int roll push push add pop es add lret aaa in imul addr16 pop mov xchg lea bound push cmc xor mov lea inc pop push cmp test jmp daa adc scas pop fmul xor sub add sahf repz (bad) xor xchg in push xor test lcall test fimull out xor in repnz into inc add add and call xor inc xor add or dec jmp sub and jnp fisubrl jmp test out jne add dec sbb fstpt inc mov add jbe ret enter fld js dec les aas xor cmp xor or loopne fcom pop arpl mov imul or ret ja lds cmp repz loopne and add lods fwait data16 jnp adc orl xor cmp sub adc cmp pusha rorb add repnz inc js shr lcall out push mov les scas pushf pushf cmp push outsl aaa push fmull loop and pop das (bad) fsubrl cmp jae xchg xchg cltd or or xchg sbb jns lret (bad) cmp and sarb call fsubrs jno out lods sbb xor mov push je inc adc xor insb popa lock (bad) scas mov jge int3 cltd (bad) test pop xor add lods or dec jae ljmp or dec test (bad) les loopne mov leave stos fistp mov sub out pop ret sub add push add inc add pop repnz dec jbe inc xor jl mov js xchg fs mov mov mov and dec sub out (bad) push dec paddw addr16 iret das mov mov or stc stc add imul and pop mov adc or xor fist cmp scas inc pop and inc xchg pop mov je cmp xor movsl mov int3 out cmpsb pop xchg pop jmp ret push xchg push ja push jg into stc xor mov movsb mov int3 jmp xchg lret sbb addl bndldx in fsub inc out pushf xlat add mov lods imul notl and daa (bad) jno jno cs jecxz mov sbb ret cmp lds cmp fmull (bad) sub push add into xor cmpb js mov std das push loop leave cltd ror or shl out ficomp dec dec (bad) bound cmp mov dec push jecxz out fiadd clc lods movsl sub repz call xchg loop fstps cli jns in lods and popf aaa movb jl stos sbb add hlt mov (bad) pushf adcb (bad) addr16 mov lods sub xor aaa movb ret frstor sbb xor and rolb gs addr16 rorb sbbl (bad) push outsb push push and jo cmp or mov mov sbb nop lods push (bad) mov mov pop movsl push jge or je lds fsub push aas adc aas popa inc std hlt mov pushf jle cs pop sbb jg jae rclb pop std leave rcr lods or pop std cmp loop std mov fdivp lahf dec mov xor std movsb shrb outsl add jg jg cmp iret mov and cmp out scas fsubrl lcall pushf out inc jnp std in rcrb out adc dec out fdivp sub (bad) jbe into mov arpl or fbstp jg mov testl fcoml cld xchg push inc daa mov out sti xchg sub push jb je and (bad) testb or cmp (bad) xor fcmove mov std adc shlb js inc mov in inc xor pushf ret inc scas aam dec pop pop sti push inc lea pushf or mov sbb and push cmp (bad) aaa inc inc adc mov aad mov ds cs inc movsl jge (bad) idivb mov int cpuid in xor (bad) mov dec test dec (bad) addr16 test xchg scas lret bound mov data16 cltd lcall push cmp cmp in push js call rorl cli ja fidivr xor pop adc mov inc push or jo sub add cli call jo cli int3 loope jp mov adc cmp sbb xorl js adc jp cmp dec insb hlt mov cltd fldlg2 adc pop or jno into cmpl pop pop sti in loop pop es inc out das scas jmp dec insb hlt mov lods sbb gs cld xor aaa sahf adc notb mov ror repnz add mov cmp test call mov test hlt jb jmp xchg and or mov imul outsb mov push mov dec movsl test jmp cmpsb (bad) mov mull test sbb fs js test movsl test pop dec add test xchg xor or xchg subl mov stc test loop into add out lods push push sub mov add xchg out cmp mov sti add int3 mov ja insl dec dec sbb inc cld scas xchg frstor sti lds movl and shlb (bad) int3 imull pop es or sbb mov and cmpb clc push int3 lahf cli dec movsb and imulb jle xchg bound push loopne cmpl in mov int3 mov mov sub add rcr jg mov int mov push adc das icebp mov mov xchg loop,pn into xor jge stos xchg or les repz inc mov xor add lds cltd icebp inc fdivrl or cld add insb rolb outsb xor sbb xlat inc (bad) stos pop mov fcmovb sub std jmp mov gs cmp sbb in aas inc jg pop xor das cmpsb push outsb jb sub pushf (bad) sbb xchg (bad) repz out pop int in stc adc dec jg sub jno imul icebp mov pop xchg xchg jne cmp add inc xchg hlt enter loop pop mul fcoml lock aam jo mov pusha inc icebp lahf shrl (bad) inc pop and or cwtl clc fldt test fiadd lea fwait xchg mov es mov insb ret (bad) xchg lahf and cwtl adc icebp mov out out pop lea pop test push xchg jns iret xor sbb in mov loopne mov dec test inc adc dec sbb dec decl sub insb fimull cmp xchg aad push jns or mov mov inc adc adc xor stos ds fiaddl fnstenv repz (bad) int3 xor orb add push cld sbb xlat out ljmp mov mov insl pop mov jae jno loope cld push daa aas sbb xchg ja jbe add pushf xorb dec (bad) adc mov movsb aaa xor (bad) int3 lahf mov dec sub icebp jg hlt sub mov cmpsl add (bad) jb popa pop ds add loop mov sbb jg cmp fldl2e sbb out je in clc es xor repnz ret int loop punpckldq mov bound loope xchg xlat jg in out add out or and out incb mov in adc adc icebp (bad) inc dec pop push sbb cmc pop mov sbb out or adc cmp jb or jo out mov test xlat (bad) mov stos mov lods cmp push rcll outsb sub verr push dec (bad) fstl mov xchg loopne ret (bad) sub cmp frstor lds add cmovo movl outsb out inc mov stc ret add daa into (bad) cmc pop mull cld nop scas cwtl lahf (bad) fnsave jge jle cmp fldt scas das add mov cmp jnp push arpl cmp or xor push jg adc mov daa loopne cmc pop sbb nop/reserved icebp test aaa popf lcall pushf xchg jbe ja movups xchg arpl mov scas (bad) xor push dec sbb xchg arpl and cld jmp lods mov xchg sbb hlt xchg cmp xchg mov gs cmpsb out (bad) leave lds mov aad out shll shr mov ret add loopne sarb data16 jne inc mov pop jge add shr fdivrs aas js (bad) fbld (bad) push xor in or loop fnstsw sbb ret pop dec cld mov mov dec dec sbb sub (bad) fstpl mov cmp or daa dec cli and sbb xchg (bad) xchg mov das outsb jle mov outsl sti andl rcr in pop mov jb xchg sub xlat dec std adc push loop fnstsw jns push inc push lds inc mov mov pop xchg pusha dec or mov loopne std (bad) mov repnz lahf cmp mov popw xchg jmp movb xchg push sub mov or cmp test das loope add ret out mov fnstsw in inc outsl (bad) or jl lock jl lock jns aaa (bad) cmc movsb popa ficompl push pop xlat popf adc fdivp sub mov cmp jb cmp outsb movsb lcall (bad) xor (bad) repnz outsb (bad) mov arpl sub aaa mov in roll pop dec or lret lods add adc jl es scas enter mov xchg jp push mov int (bad) icebp aad ja push inc movsb lds add arpl jecxz iret pusha (bad) xchg divl mov mov jb mov repnz add sub jmp push jmp es xor jecxz jl repnz mov cwtl loop mov lock js fildll aad nop mov aam sarb stc dec fdivrs fbstp sbb sti sub xchg dec xlat movsb outsb adc daa loopne scas dec xor (bad) je dec lea sub push dec decl and pop pop clc or out cmovnp pop add adc lock jp enter popa (bad) lret mov adc fdivrs sarl out cmc and xorb cld into or jle repz pop adc pop imulb cmp (bad) and add jl pop clc stc and outsl jecxz loop rcl pop and arpl add mov jmp adc out (bad) jno and pop jg std je enter fcmove mov cmpsl nop add dec mov add jo fdivrs add lret sahf inc stos mov rorl fcoms inc cmp mov cwtl cmp out out std sbb cmp ret call jb ficom es or imul fistpll std mov and sbb clc shl icebp hlt fbld shrb sub xor sub xchg cmp inc lret or or xor ret inc sub fcmovnb pop gs sbb popf add fstps jbe cltd jg sub loop loop mov (bad) pop xor add cmp jae fisubr jle outsl push scas inc xchg pop sbb cmp cmp inc rorl pop pusha pusha ret ds adc jle cltd cmpsl add inc push gs out les jno push fwait aad ss fisttpl inc sbb and sub pushf and pop fwait mov dec sub dec (bad) stc mov and mov pop dec sarb scas clc dec insb cmp cs dec or (bad) iret test xchg pop rcll inc mov andb (bad) jl jno xor push dec dec push mov icebp ret pop dec loop or ret xor jle repnz lea loope mov pusha xlat pop mov ja int fcoms cs xor and xor sti shl test fstpl leave sub daa and aas outsb call adc mov mov mov adc xor das jo test rcrl icebp (bad) (bad) addr16 mov gs sbb js cmp sti lret jecxz stc enter imull aam mov das pop sbb insb sarb imul loop pop push adc std popa and mov (bad) stc arpl test pop ja (bad) into mov mov push mov in lahf clc sbb js clc jno cmp mov add sbbl das out sarb add cmp hlt (bad) adc lds shr ret aam pop add lret xchg mov mov pushf andb jmp incb jns sbb clc pop shr mov inc jp (bad) mov push pop mov test dec (bad) and or add mov das loopne subl jne inc (bad) sub xorl dec incb xchg and shl or mov es mov out xor adc add pop jge inc mov inc adc shll lds rorb in enter mov movl and enter cmp (bad) and mov ret ja pop sbb sbb repnz add rorl mov adc xlat dec mov push stos push (bad) mov ljmp cmc mov leave jne enter xlat and push int3 and adc fsubrp or mov repz or das icebp sbb cmp sbb sbb fnstenv push push cli outsl jl (bad) mov icebp mov sbb pusha pop mov arpl fisubr jle add push xchg cmc or jno add sbb aas jnp lcall and or cmpsb push mov lea shlb jbe sub add pop adc xlat popf jnp sbb sub pop js sti stos idivl jg cmp out xor jp xchg sbb call iret movl jg aas xor fild stos mov test imul stc fmuls icebp jp adc insb mov sbbl cmp ja hlt mov (bad) mov xchg lret daa test rclb mov out cld leave jae and fstpl test lock xor xchg cmpl dec inc add aas xchg xchg imulb sbb add pop (bad) lods lea inc mov mov xor stc mov (bad) repz jmp xlat loop dec mov push ret pop pushf adc push test sahf adc mov mov ficomp mov jmp add jbe mov dec pop cmp clc cmc pop jbe cs cmp or pushf adc push test shrb movb sahf ror jmp jecxz xchg xchg sub jo imul psllw pop sbb int icebp mov in add mov fisubl xchg pop cmp pop cwtl aaa in dec mov loopne add sbb fdivrs cmp sub and fiadd (bad) call outsw les jnp (bad) out imul mov rorb jge add or push iret js mov add sbb push test sub mov in fwait aas xor inc pop or dec jg xor fiadd and jnp (bad) int cmpsl inc mov mov cmp xchg scas int into lods sbb (bad) (bad) sub leave mov lea or in ss (bad) push mov add and fidivr fcoms int xchg shll lret sbb mov add lods pop push pop add clc ljmp adc lds push pusha jle xor push jne cld sub xorl cmc add sub dec repnz adcb (bad) sbb dec pop mov dec sahf in ds stos (bad) cli adc cld mov int3 pop repnz pop dec out push or sub mov jcxz repz (bad) clc (bad) xor mov jle pop sub cmp cmp lods (bad) pop pushf insb cmp mov mov cmp push add jne lcall aaa into test loopne test outsl or insl stos fimull lea lahf add ret popf mov mov pop fldcw clc pop loope fcoms cli pop ljmp sub loop mov loopne add sbb ret cltd dec and movsl inc adc repnz mov or call push xor bound mov dec pop add pop fs icebp (bad) add roll cs push cmp test das dec mov int3 test mov xor clc inc in lods fisubl mov rol movsl daa out in popa mov jge fsubrl mov pop lahf jne lea lea pop dec in int3 and sbb jae cmp enter inc lds xor icebp (bad) cwtl clc pop or mov cmp inc fnstsw xor lea das fs mov cs inc and data16 sbb test faddl in mov les pop test xchg cwtl outsb push lock sub mov pushl test imul xchg ljmp jecxz lods aas mov jae int (bad) lods das adc ja mov add dec inc add pushf jg cmp sub add outsb xchg or xorl adc push sti call (bad) les xchg push mov cmc xor cs adc sahf push pop es push addr16 pop sbbb stc xor test adc stos mov insl bnd in add ror rcrb mov jnp sbb cmp pop scas iret add adc and jp in push stos call jno mov or jne inc bound popf xlat cmpsb mov sub leave nop sbb imul xorl subps mov cli mov lret push sub sbb inc imull dec inc mov fwait jl leave fs xchg nop jl pushf out sub cmp (bad) cmc jne cmpsb and push fmulp inc fldl cmpb inc inc mov ss inc mov and push dec jl shl bound mov push jbe test into pop imul jl fistpll xor (bad) lods push mov inc test inc mov insl xor in mov pushf data16 scas outsl xchg adcb mov add sub mov sbb sbb dec xor sbb add inc insl jmp cmp (bad) mov mov clc xchg enter dec dec sbb ds jp mov (bad) repnz or enter pop jp add or inc push mov out lods dec scas jns and es sbb mov jp jecxz hlt in dec sbb lods sbb fidivr add push movsb outsb add adc movsl pop scas mov mov (bad) mov out add lcall pop mov lcall stos mov sub data16 cmc in repnz push mov cmp stc bound dec or shrl notb lahf inc dec mov pop inc xor cwtl adc js mov pop pop dec into adc in pop and mov dec xor out insb mov scas scas mov dec add inc mov test bound pop fucomip sbb lock mov cmp pusha lea enter jns xor push push pop stos loop,pn push pop jae push iret aad push mov pusha (bad) orb pop movl insl mov into ljmp jne inc aam or shlb cmc in rorl jno mov and mov mov rolb shl movsb mov pop fisubl mov dec add mov fsubr sahf mov cwtl pop xchg push and roll shl enter pop jp in aam mov mov add popa mov or pop add mov sbb xchg xor jno loope mov pop mov into dec add pop or xchg aam int add outsb or rolb sbb adc in add rolb repz and jo ss cwtl leave cmp jl les daa mov dec icebp jmp or add sbb (bad) inc xchg mov vmovsd insl dec lcall push add cmc jne scas xor mov popf orb adc mov lcall pop inc xor mov rolb xlat lods outsb pop xlat xlat popf add pushf or xor std push andb add xor jmp clc and jp sbb imul addr16 cmp out add loop pop jbe shrl pop inc jae sbb xchg bound adc jae cmp insb test cmp es add jg outsl mov dec jne mov sbb xor xor shl bound loopne es sub jge loop into add pop lahf cltd dec dec jmp pop sbb stc sub mov dec pop jno orl sbb jno sbb push inc jecxz insb adc call lret pop xor daa or loopne mov fsubr out mov dec (bad) xor scas mov (bad) out subl aam mov jns mov or xlat mov push (bad) aaa inc jecxz push pushf xchg push popf addb xlat fidivrl add cmpsb (bad) xor pop jno loopne mov pop mov stos outsb xorl pusha mov (bad) es out pushf addb mov mov add xchg std jns sub inc pop jp ljmp jge jo add pop sub adc je add sbb adc push xchg and cmp cmp fprem1 jne scas xor push xor xor nop ds addb (bad) xlat bound inc dec cld cli loope pop (bad) mov into jne add push push sub cmpsl addl inc dec pop adc cltd xchg xor jl push adc in dec cmp insb cmp adc cmc in (bad) jne ret dec push add std loopne fisttpl sub sarb pushf xor jmp ficoml test add mov in jnp sbb push mov cmp loop,pn xor jae push into aad pop lea inc ret sub int3 and roll mov lods cwtl ret push es mov icebp jno lcall lcall add aam ret cmpsb ret pop xor lds mov dec pop jp dec aad inc mov add inc jge fiaddl push (bad) cmp hlt push int3 loope mov sbb add and push push scas pop pop (bad) add pop popf addb fnstsw out pop int3 adc mov lds pushf outsb cmp jo jo pop orb xor cmp aad test sub pop int3 adc sbb jecxz es insl jno subl mov add xchg dec popa nop dec out dec inc pop push pop pop loop cwtl and jmp mov (bad) mov out add shrb jo or leave insb mov fmul xchg sbb pop sbb xor ja cli push xor push add clc clc js dec fsub inc or ret push jne out imulb pop js out loopne sbb add inc add lods push sub push orl lods jo mov insb ss divl out pop or out add idivl ja test (bad) and dec sub fidivrl inc mov sbb loope clc cmp aas call in andl pop scas (bad) or clc std xlat aas andl cmp repz jmp cltd inc dec cmpsl adc pusha sbb push inc xor pop xor jae iret xchg fsubrl bound sbb jg or js cmp out cmpsl sbb jle icebp xchg sub jae jnp sbb out int3 xor push mov or cmpsb mov add pop dec inc inc push or addr16 in sets push cld inc test cmp cli and cmp daa push adc adc roll pushf cmpsb push aam test popf lcall mov add push test frstor push fist push (bad) aad hlt and push outsb push mov repz fs push cmp push and mov or sub (bad) cmpsb data16 int3 fbstp loope pop mov pusha pop inc xor inc fdiv cmp and dec setl frstor dec xor mov or and adc test push xor rolb out lcall jno xchg xor sbb push clc sub adc pop outsl ljmp cs cs outsb in shrb out jo xchg clc cmp loope pushf xor inc cmc add je lea push movsb mov outsl mov repz mov bound pop inc scas pushf mov test cmc std lds call mov xchg je inc frstor xchg xchg xor xor pop into fisttpll or cli fisubl jecxz jnp mov inc and jne push aaa ss sub jno fnsave mov sbb xchg pop xlat cmp mov inc inc jg add inc loopne in xchg fnsave shll es enter mov arpl stc sub and divl jl sub les jb fcom push mov stos dec inc jnp or cmp mov mov aam push adc inc rcrb or sub jb xor mov stos dec inc xchg sub cwtl cmp mov ffreep lcall loop or push jae stos mov pop pop jp into je loopne inc into inc pushf rcr das out stc sub and add std aad mov shr push imul lds pop pop inc rcrb or mov dec jp add push dec mov inc sbb mov outsl test int3 hlt lret jl scas mov sub jno les rcrb jg pop imul aam cmpsb repz and sbb jbe mov lcall and or leave jecxz out pop in icebp jno lret adcb add or into sbb adc movsb aam push pop (bad) lock repnz jno les add or push aaa dec inc pop ja (bad) dec pop aad mov cwtl clc and dec push jl iret mov stos frstor mov push daa mov leave leave cltd add mov aam pushf subb aad fcoms mov cwtl clc and and dec xchg iret mov mov mov sbb adc pop pop shrl adc pushf adcb shll mov pop inc rcrb dec jle add out jecxz pop or loop lea jbe and lock push sti int3 dec dec imul sub adc inc xor push dec xor add iret add push aam movb lea xchg imul mov inc xchg sbb std jmp std push pop popa jae mov cmpsl push in mov scas dec add and and mov popa int3 or pop out ret cmpb (bad) negl (bad) (bad) adc call sbb mov pop mov xor int3 or inc cs mov repz lahf lret das pushf xchg dec out shrb lods fmull arpl sbb mov pop cmp fadds test sbb mov lahf daa cmp jge xchg xor sti cmpl add mull pushf sub mov jne add push adc lods outsb mov fsubrs jbe jg out iret shll cmpsl (bad) in aaa adc jne add lahf dec mov inc and into adc (bad) loopne test jo (bad) and cmp iret mov mov xor jno test sub cmp outsl in dec dec inc ja aad fdivrs sbb xlat icebp xchg sarb int3 jl sbb jge gs icebp mov pusha push je jge xor mov (bad) repnz or (bad) rorb sbb pop xchg and loop sbb mov cmp jl jge loopne (bad) stc stc add dec add mov mov ret rcl inc and cmp pop sub cmp ret addr16 mov inc (bad) rcll pusha jb in mov inc jle addl stos loopne mov fstpt dec jno mov cmpsl fprem1 push mov jb into mov cmp mov xchg xchg or push pop jecxz je inc xor xor aad push je (bad) lock cmc push mov jo xchg daa (bad) lret jge movsl fsts scas dec mov jae pop sahf cwtl mov loopne push lea xor sub jp mov cmpsb adc std fisttp cmp jecxz mov lods ds enter fwait call xchg push or cmp in push push adc popf xorb dec dec fsubl lcall cmpsb ret scas mov (bad) aam push pop pop daa mov or inc sbb adc popf cld inc mov mov cmp rorb push ljmp mov stc dec sub xlat mov cwtl add lcall in inc xchg cwtl cmp adc loope xlat sub sbb (bad) mov out jnp je mov sar xcrypt-ecb cmpsl into xor inc dec into sbb pushf xchg add rorl cs push cld pop movsb or lret mov and fdivl fisub or add jno cltd arpl mov mov cli ja add cmp pop push sub or xlat pop outsb arpl dec inc inc sbb inc cmp mov test scas jmp das pop out jg je mov js jp addb in xor cmp pop outsl add adc adc pop jp jge lret ret in enter cmp cmp out nop cwtl nop in das pop stos mov pop inc lcall xlat daa pop pop pop cmpsl clc lea insb ds sbbb in xlat inc out fnstsw je test push cmp jbe into sbb scas jns test out mov mov fild mov data16 call icebp adc adc pop lahf mov push mov mov pop imul inc aas fwait adc adc cmp push lcall push mov cmp enter jo mov or lds in in int3 cmpl dec push (bad) pop adc (bad) lock and leave pop test test adc jle fild sub movsl aaa rolb xor add inc insb xchg sbb jecxz and mov pushl cmpsb and (bad) mov xchg hlt lcall fsubrl mov in mov inc cld adcb (bad) push fwait xchg stos adc outsl adc pop mov push push mov arpl lahf fdivl mov test lahf icebp sbb xorb and pusha ficoml sub fs loop ljmp inc sub call jmp insb cmp ret shll std loop xchg jge mov xchg inc incl pop test cmp push pushf (bad) nop out cmp pusha sti lret test adc dec sbb (bad) sbb add loopne test stos in mov adc xchg mov or lahf repz stos rolb and mov inc sbbl cmp leave cltd jecxz mov mov xchg sub add sub sbb pop std test push jo push mov dec sbb imul jp cmp icebp cli lds jns cmpsl jnp cmp cmp adc ss test in stos fsubrl lods loope movsb (bad) mov sbb push mov xlat js sub (bad) iret test dec mov ss pop jb fsubrl out mov daa mov shr mov aad jmp add or (bad) ret aam das push lods xor cmp (bad) mov push insl (bad) (bad) lea in repz (bad) jnp lcall jne addr16 add add (bad) lods dec mov pop cld nop pop movq shrl cmpl in xchg xchg test cmp add aad jns mov lahf adc jae ret jmp mov in loopne lds mov inc mov daa loopne cmpsl cld or xchg ljmp jmp or mov std test iret popf cltd mov jp inc sub xor gs mov insl pop xor add dec decb icebp pop aad mov mov cmp rcll or aas icebp add (bad) int3 mov rcr addr16 mov int (bad) cmp popf mov adc mov repz add mov test (bad) jecxz jecxz (bad) test pop or add jle lcall and sahf push pop mov imul and iret (bad) jo jno lock movsl xlat js lahf cld adc jae (bad) adc mov sub aas inc sbbb mov or xchg dec dec inc cmp push (bad) xchg inc pop lods popa loope movsb inc bound das cld sub xchg daa hlt sbb jmp imul jo jmp cmp pop mov xlat shll test es mov pop xlat (bad) cmp stc add ds fisttpll pop or je out xor lods pop jecxz xor push push and aas pop repnz adc dec inc iret popf add jg shr cs xchg test (bad) sbb loopne shlb pushf cmp and fidivr out outsl cli adc cmp and mov int3 jl lock xchg or (bad) or mov and arpl leave mov dec inc and iret push mov je and cmp dec push sahf fnstsw push xchg outsl imull mov jns jb jne jno xchg push sbb pop cld clc repnz xor outsl testl arpl lds xlat in jno ret cmova xchg jns orb or gs shrb test and xlat or add les (bad) je ret loop mov lahf test xchg push xor add lods cmpsl les sahf das push jg push dec jnp pusha hlt sbb jmp pop lret pusha mov vmovupd fisubl scas fxch push inc scas ret call popf mov idiv add lods xchg dec dec enter std or inc sbb cs mov fwait lock sub jbe sbb fbld ret outsb ret leave shll cmp xor cld pop jg pushf sbb ret push cmp or pop fidiv loop push jno push enter push sahf scas lcall inc out loop sbb jmp and push outsl mov adc mov lods dec mov dec xchg xchg adc jbe mov mov inc pop aam jno pushf addb lret cld mov pop (bad) mov ds fcomps cmc jle or pushf fwait mov add les xchg imul out jecxz fnstsw adc test lock push pusha outsb (bad) idiv mov fbld sarl and mov push icebp pop in hlt (bad) popf cli rorb cmovne in xchg scas inc pop rorl xor leave xor aas mov jp jg pop and pop das scas pop inc mov sbb ficom mov cmp pushf adc lds xchg add fsubl pop (bad) mov jae pop aam jno insb add aaa xor out mov jb (bad) cld jns push loopne subl pusha in dec test push les stc repnz mov rcr inc sahf mov pop cwtl insl push xchg adc scas loop mov jo and ja test pop jb jg and xchg (bad) pop push clc or out jg jl or inc inc pop mov hlt inc pop sub xor mov enter dec sbb inc mov lds mov xchg mov decb push dec mov daa les adc mov psrad fildll add mov ja mov jbe push pop push mulb inc fbstp out push add and int fwait mov sbb or jb pop loope movsb and cld or mov outsb lahf frstor jg cld jg jge arpl cmc lea pop fimul (bad) xchg cmp in cmp push pop push mulb dec xchg xor sbb mov out repz bound mov loop jae or sub in addr16 (bad) in jg mov fidiv push push jbe gs fmuls (bad) ds jge ret pop sub xchg add jb lods cmpsl mov fadd cwtl pushf sbb test clc push sub cmp push data16 add into out notb sbb mov jg arpl push sbb push jl popa icebp pop pop (bad) pop icebp xchg or and mov (bad) and sub push mov mov lds cmp ret les scas inc div cmp mov mov cmp aam adc jo sbb int jns pop dec icebp mov and mov add and movsb movsb inc xorl inc sub imulb xor out dec sarb lods mov nop (bad) fwait sahf cmp aaa into clc sub jo sub jmp push xchg inc aam lcall leave add lds add (bad) outsl movsl pop addr16 push dec dec push cmp push xlat jp push shrb xchg test pop push adc divb insb mov lcall outsb cmp (bad) push jge inc sbb mov pop sbb dec dec frstor mov cmp iret leave cltd (bad) jne or inc jb out jp push jmp sub xchg xchg aam jb sbb mov push cmp data16 test sbb hlt outsl fcomps jns mov or and ret insl in ja sub lahf loop aad (bad) jmp imul insb loop add popf cmpb inc pop aam or shl fwait cmp add aas mov pop xchg fs jne and js or pop xlat sub mov cmpl mov cmp out stc and clc mov insb aam add rep or into xor adcl loop fimull lea cld loop inc pusha fimul sub and lret stos pop jb lods adc mov (bad) outsl xchg push inc cld and daa cwtl xor loop mov bound (bad) frstor inc pop and mov mov adc icebp (bad) test pand loopne or sahf push sub outsb dec outsb (bad) inc inc sarl (bad) xchg bound mov xchg jno das jg sbb ss out incl movsl pop add bound ljmp xlat inc add (bad) xor pop mov js cwtl les gs mov jmp stos pop lcall pop (bad) call ja,pt cwtl jmp das arpl loop leave adc out (bad) ficomp push insl (bad) mov in sbb pusha inc rol insl mov and or cmp jbe repz arpl in loop xchg inc cmp sbb aas add fldt dec cld jns (bad) xor sti mov insl ret lret xor lods sbb jae pminsw jae int adc push es jge adc sub xor mov mov xchg mov test add xchg xor jmp push adc aaa imul add or in (bad) mov push mov jo dec pop xor inc int3 push mov leave icebp cmp fmull jl xchg adc or xor aam das (bad) je sub sub outsb pop popl inc mov push or sbb add jo sbb test jmp decl jno ret loopne imul lods sbb cmp sbbl bound lds push (bad) cli cmp cmpsl sub jg outsl fdivrs scas mov sub add sub in and sub hlt shl mov ffreep sub ret (bad) repz sbb inc xchg dec mov mov inc fild xchg xor movsb testl mov xchg push aas (bad) loope notb enter pop in push xchg (bad) or jae mov icebp gs or xchg scas xlat pop jmp jae add inc xchg les cmpsl fisttpll inc pop jg adc mov mov xlat test pop push xlat jbe fs and or sarb cmc rorb in jmp fcomip pop mov sti pop jo gs sub xchg cmp push lahf std push pushf xor jmp dec mov clc ljmp aam lret mov cmpl aad ret call cwtl shr adc movsb pop imul les sub or dec mov clc push xchg movl mov sbb jle cld je or and rorl add lret fistp or lods call adc cld jo jbe mov fldenv mov xor sti decl jns enter loop xchg sbb adc out cmp orb std loope scas iret jle addb (bad) cltd jecxz xor add pop dec dec sbb les (bad) ljmp jae mov push adc ljmp cmpsl cmp cli dec inc jg movsl jns (bad) loope leave lds pop (bad) mov fisttp jge mov push pusha repz mov cli jae pop fs pop cld je out adc sbb loope in sbb repnz cmp decl cwtl jp push cwtl xchg cld mov loop mov jle vmread jg dec cmp pop jnp lea cltd adc int xchg repz push aam jecxz dec (bad) pop in scas mov dec push xor int3 lea xor pop mov (bad) in inc pop (bad) fbld add jg in test add scas stc cmp std in out lods mov jns pop sub xor fisubrl lcall and mov or (bad) and mov fucomip xchg in add xchg pop xchg fwait std sub xor nop pop hlt sbb jecxz fwait insl pusha in mov sub mov mov or (bad) add jecxz sbb xlat xorl cmp std in lret pop jbe or jo inc (bad) jno scas std jne (bad) mov (bad) repnz add xor call in cmp movsb xor push daa ss orps (bad) cmpsl cmp aaa les nop mov xchg scas push jp (bad) lds jae jo insb jne dec jno ds cmp push pop ret fldl popf and cmc outsl mov push daa pusha js pop mov hlt loop sub add add cmc mov pop sahf push sbb pop xchg aad inc cmp add xchg in sub test bound sbb inc pop daa lock xlat lds sbb aad and xchg cmp xor stc xchg icebp or mov xor int3 test or jae xchg imul shrl inc sbbl test sbb jns arpl mov outsl and nop or inc xor sbb sbb in mov in sti pusha cmp test pusha ret lcall jb js ret jo rcrb dec aas and xchg inc sti ret cmp dec daa pop bound aas mov stos test jecxz (bad) xor inc mov ja shlb aaa lahf into dec dec jae or popf sub mov pop push mov test iret mov cmp and mov lret pusha jge adc push jnp (bad) cmp xchg ret xchg adc add xchg mov mov adc mov sbb ja je push or add in cmp xchg (bad) add test std cmp lret pushf addb add sub lods test les push fsubrs pusha shrb hlt dec sbb ret pop popa xor popf daa aad pop mov cmp mov add jle sbb (bad) jb das outsl dec push xchg insl mov ljmp lret jle rorl xchg adc jbe mov inc aas or add daa aas sbb loop add imul cmpb mov ret mov lods mov pop sti (bad) xor and adc push outsb imul xchg into xchg fidivr pop lock ret xchg push gs jmp repz js movsb xchg sbbl fwait jne jle cld lret add pop bndldx mov pusha imul (bad) lock add movd test mov aaa (bad) idivb pop mov hlt sbb popf cmp jne sbb ror pop pop lahf mov in inc cmp cmp sub lock push jmp fucomip out fnclex sub and jle gs in in into sbb test mov xchg mov sarb mov loopne gs inc jmp inc cmp push mov dec daa (bad) jno sbb jg out test stc adc add sub dec inc iret add test lods push lods pop cs aad insb movsb movsl or dec and jne add jo jo mov stc xor mov daa and sbb mov pop mov pusha sbb inc or adc xchg add jae jp aad loop pop es or fs push lods aaa out sti (bad) mov jl (bad) fbstp sbb sbb sarl sbb aaa out xor mov sti mov push jo fild pushf rorl jo ja cwtl popa les mov jb lods mov lcall mov bound dec leave std inc cmp lds call pushf and push ficomp or jns iret das pop lahf cmp mov xchg orw cs sbb arpl push adc xchg fistpll repnz dec add jae daa pusha movsb mov dec sbb cmp pop sti cmp scas and bound push stos or iret mov and or mov jmp add mov push mov mov xor int inc sbb mov pop xor (bad) hlt jmp mov jno jecxz cmp pop sub mov add out cli mov fcompl scas pop fs lds cmpsb or add pusha add mov inc mov pusha mov ljmp lock mov cmp sbb ret outsl sbb insl jle shrl pushf addr16 cmp cs inc xchg add xchg ret mov dec and sbb push test outsl sub es adc cmpsl jnp jae xchg or icebp (bad) pusha mov mov jecxz xchg or mov sub inc push mov add fiaddl add push test int cmc pusha sub adc xor and aam cmp jns add scas push pusha xlat fisubl in sbb add dec (bad) dec dec addl mov addb add xchg lret les addb sbb lcall lcall ror dec lods add dec loope xor xor xchg sub ds push pop or mov jno jno pop fwait (bad) shlb mov add add dec inc scas inc pusha (bad) sub add xor add pusha add add add add add add add add inc add inc add inc inc add inc add inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc inc add inc add inc inc add pop dec add lods outsl push sub outsb pop sub outsl mov sub outsl std sub outsl repz outsb mov sub insl pop sub dec add inc inc add inc add inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc inc add inc add inc inc add inc add inc inc add inc add inc add inc add inc inc add inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push sub insb sbb insl je scas outsl lret sub outsb sti sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl int stos insl jb movsb push inc inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add inc push inc inc inc add inc add inc inc add inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add pushf and scas outsl xchg sub outsb repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl xchg mov inc add inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc add inc push inc inc inc add inc add inc inc add inc add inc inc add inc inc add inc inc add xchg or insl jle scas outsl cmc sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl cmc sub outsb jp nop arpl inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add inc add inc inc add cmpsl insb cs outsb iret sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp insb cs inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add insl push sub outsl repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb push inc inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc push cmp sub insl jo scas outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) cmp into test (bad) cmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb jo push dec add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc add inc add inc push inc inc inc add inc push inc inc inc add insl jo scas outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp xchg stos fadd push stc idiv cli cli cli (bad) cld cld cld push div ljmp mov outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb jo inc inc add inc inc add inc inc add inc add inc inc add inc add inc add inc add inc inc add inc push inc inc inc add insb push sub outsl std sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) cmp ret clc idiv std std std (bad) cli cli cli (bad) std std std jmp xchg pushl clc push cli clc jmp js sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb push inc inc inc add inc inc add inc inc add inc add inc inc add inc add inc add inc add inc inc add scas outsl repz outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp xchg jmp cmc out (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli ljmp mov ljmp cmp stc sti cli jmp repz jmp xchg ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp insb cs inc inc add inc inc add inc inc add inc add inc add inc add inc inc add xchg sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl incl sti stc (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std ljmp scas jno sub outsl ljmp outsl jmp xchg jmp repnz shrb sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp arpl inc inc add inc inc add inc inc add inc add inc add inc inc add lods outsb jle lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp mov sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli ljmp mov ljmp outsl ljmp outsl (bad) cmp call sti call scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb jp inc inc add inc inc add inc inc add inc add inc add movsb push sub outsl cmc sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp cmpsl (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std ljmp scas jo sub outsl ljmp outsl ljmp outsl pushl mov (bad) mov sti sti (bad) jg cmpsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl cmc mov inc add inc inc add inc add inc add lods outsb xchg sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp (bad) push clc idiv cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli ljmp mov ljmp outsl ljmp outsl ljmp outsl pushl ljmp pop mov outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl xchg inc inc inc add inc inc add inc add lods outsl repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp je fsubr jecxz std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std ljmp scas jo sub outsl ljmp outsl ljmp outsl ljmp outsl incl jle jmp icebp (bad) fsubr jecxz xor outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp push inc inc inc add inc inc add insl jbe scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl decl std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli ljmp scas jno sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl mov decl outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp insl jb inc inc add push add scas outsl lret sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) cmp hlt (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld ljmp scas jo sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp jo lret (bad) out div (bad) cmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl int pop dec add lods insl push sub outsb std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp mov cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti ljmp lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp xchg (bad) cli sti cli decl outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb push sub outsb pop sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp jno fsubr out std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp in loope fsubr out cs jno sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp insl pop sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl lcall (bad) (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld ljmp lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl incl cld cld lcall mov sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl xchg sub outsl mov sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl lcall sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp jge stc cli stc lcall lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp lods outsb mov sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl call in loope cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp loope shr (bad) sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) scas outsl repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp jp idiv clc (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl lcall sti cli (bad) cmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp xchg (bad) cld cld cld push stc clc push stc clc push cli clc push stc idiv clc cli stc push stc idiv stc sti cli push clc idiv stc cld sti push clc idiv cli cld sti push stc clc (bad) cli cld sti ljmp scas jo cs jno cs jo cs jo cs jo cs jo cs jo cs jo cs jo lods jo sub lods jo jae lahf (bad) cli cli cli jmp xchg ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp scas (bad) cli cli cli decl test sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std incl scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl sti sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp stc cmc pushl mov ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli ljmp lods outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl icebp sub outsl (bad) outsl ljmp outsl ljmp outsl ljmp outsl ljmp (bad) (bad) (bad) in sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std inc in ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp scas outsl (bad) scas outsl mov sub outsl ljmp outsl ljmp outsl ljmp outsl (bad) fsubr jecxz (bad) jmp outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) stc stc stc (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) fcomi out sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp lods outsl mov sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp repz scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) ljmp ljmp outsl ljmp outsl ljmp outsl ljmp outsl xchg sub outsb pop sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp jo clc stc stc jmp lods outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) sti cld cld ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp insl pop sub insl push sub outsb sti sub outsl ljmp outsl ljmp outsl ljmp outsl (bad) cmp std call outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli pushl mov ljmp outsl ljmp outsl ljmp outsl ljmp outsb push cmp add scas outsl lret sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp jle cli cli cli jmp lods jo sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld incl jge sub outsl ljmp outsl ljmp outsl ljmp outsl lret cmp inc inc inc add insl jbe scas outsl ljmp outsl ljmp outsl ljmp outsl pushl je fcomi out cli cli cli inc call xchg sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) fsubr jecxz xor jne sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp insl je inc inc add inc add insb push sub outsb repz outsl ljmp outsl ljmp outsl ljmp outsl pushl scas jb (bad) (bad) mov lock (bad) clc sti cli lcall mov ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld push div decl mov ljmp outsl ljmp outsl ljmp outsl ljmp outsb repz insb push inc inc inc add inc inc add inc push sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp cmp cld cld cld jmp lock ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti cld sti (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) cld cld cld (bad) mov mov outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl xchg inc inc inc push inc inc inc add inc add inc add popf and scas outsl cmc sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp jo imul ljmp out decl (bad) ljmp outsl ljmp outsl ljmp outsl ljmp sti (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std (bad) cli cli cli (bad) std std std (bad) cli cli cli jmp repnz scas jo sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl cmc das pushf and inc add inc add inc inc add inc push inc inc inc add insl jle scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl mov call div push sti stc call mov ljmp outsl ljmp outsl (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) cli cli cli (bad) std std std push div call scas jae sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp insl jl inc inc add inc push inc inc inc add inc add inc add inc push cs push iret sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp test mov std std (bad) (bad) in push lods outsl ljmp outsl ljmp cld (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld (bad) mov mov outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp or inc add inc inc add inc add inc add inc add inc inc add inc push sub outsb sub lods outsb repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp jo jno popf jmp cmc out (bad) clc stc stc (bad) mov mov ljmp outsl (bad) cli cli cli (bad) cld cld cld (bad) sti sti sti (bad) cld cld cld jmp repz pushl popf ljmp lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl icebp sub inc inc add inc inc add inc add inc inc add inc add inc add inc add inc inc add inc push sub outsb std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl mov lcall clc idiv hlt cli idiv mov scas (bad) std std std (bad) cli cli cli push cli stc lcall jbe sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub insl push inc inc inc add inc inc add inc inc add inc inc add inc add inc add inc add inc inc add inc add inc inc add inc push sub outsb std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp mov (bad) (bad) std std std (bad) cli cli cli dec jmp mov sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub insl outsb inc inc inc add inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc add inc inc add dec inc push sub outsb std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp jno jae lahf pushl ljmp scas jo sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub insl outsb cmp inc inc inc add inc inc add inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add inc add inc inc add inc push sub outsb repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl icebp sub insb push inc inc inc add inc push inc inc inc add inc add inc inc add inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add inc push sub outsb sub lods outsb iret sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl int mov inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add inc add inc inc add inc add inc add inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add inc push cs push jle scas outsl cmc sub outsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb jl xchg inc inc inc add inc push inc inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add inc add inc inc add inc add inc inc add inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add popf and scas outsl xchg sub outsb repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb xchg sub inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add inc add inc add inc add inc inc add inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push sub insb push sub insl jbe scas outsl lret sub outsl sti sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl lret sub insl je movsb push inc inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add inc push inc inc inc add inc push inc inc inc add inc push inc inc inc add inc add inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add imul test outsb pop sub outsl xchg sub outsl (bad) scas outsl icebp sub outsl sti sub outsl icebp sub outsl mov sub outsb pop sub add inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add push add addb add add add add add add add add add add add add add add add add add add add add add add add add add push add sub add and add inc add add add add add add add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add lods outsb pop sub outsb popf sub outsl int scas outsl in sub outsl sti sub outsl in sub outsl int scas outsl popf sub outsb pop mov inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add cmpsb imul lods outsb lahf sub outsl imull outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl imull insb sub inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add inc inc add xchg fs lods outsb (bad) sub outsl sti sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl sti sub outsb lea nop bound inc inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add cmpsb imul lods outsb aad scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp imul inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add test outsl jmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl decl lcall fdivrs ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp cmpsl insb ss inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add movsb imul scas outsl jmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl incl cmp cli sti sti (bad) cld cld cld jmp repnz mov outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp movsl imul inc inc add inc inc add inc inc add inc add inc add xchg fs lods outsl aad lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) js mov (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp scas jo cmp mov (bad) jns mov ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp bound inc inc inc add inc inc add inc add inc add lods outsb (bad) sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl call sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti ljmp scas jo sub outsl ljmp outsl call (bad) jmp bnd xchg aam ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb lea inc add inc inc add inc add scas outsl sti sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) jle cmpsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti ljmp scas jo sub outsl ljmp outsl ljmp outsl incl cmp icebp ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl sti sub inc inc add inc add outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp xchg cmc stc idiv cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld ljmp lods outsl ljmp outsl ljmp outsl ljmp outsl call mov in div decl xchg sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp inc add scas outsl imull outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl inc out (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl decl out ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl imull mov outsb pop sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl lcall (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl pushl mov jmp repz lcall ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl popf sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl call fnop ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl popf sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl scas jb icebp div (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl incl cmp clc hlt pushl mov ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl int scas outsl in sub outsl ljmp outsl ljmp outsl ljmp outsl jmp xchg (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) fsubr jecxz pop rcll sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl in sub outsl ljmp outsl ljmp outsl ljmp outsl decl sti cli push cli clc (bad) clc cli stc (bad) clc cli stc (bad) stc sti cli (bad) stc cli cli (bad) stc cli stc (bad) stc sti cli (bad) cli sti cli ljmp scas jo sub scas jo sub scas jo sub scas jo cmpsb fadd decl scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp scas outsl sti sub outsl sti sub outsl ljmp outsl ljmp outsl ljmp outsl pushl cmpsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti cld sti (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti pushl outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl sti sub outsl jmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp (bad) popa ret sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti call jmp ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp scas outsl int lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) call mov outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) call lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl lret sub outsl popf sub outsl ljmp outsl ljmp outsl ljmp outsl (bad) clc cli stc pushl mov ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) clc cli stc ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb pop sub outsl ljmp outsl ljmp outsl pushl sti cli ljmp lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti cld sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld pushl scas outsl ljmp outsl ljmp outsl ljmp outsb pop cs imul sub outsl ljmp outsl ljmp jne in div ljmp mov ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti cld sti (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) in div pushl jne sub outsl ljmp outsl ljmp outsl imull inc inc add outsl ljmp outsl ljmp outsl ljmp jp lods faddp (bad) jmp lock jnp movsb ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) sti sti sti ljmp jp sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb lahf inc inc inc add inc add scas outsl sti sub outsl ljmp outsl ljmp outsl ljmp outsl lcall (bad) call out jecxz int3 jmp mov sub outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti call in loop pop rorb sub outsl ljmp outsl ljmp outsl ljmp outsl sti sub inc inc add inc add inc add lods outsb (bad) sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp scas jno mov lods (bad) in div jmp mov ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld push div incl scas jno sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp inc add inc inc add inc add inc add xchg arpl lods outsb aad scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl incl jge mov int3 jmp repz pushl mov (bad) sti cld sti (bad) sti sti sti (bad) sti sti sti pushl jge sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp arpl inc inc add inc inc add inc add inc add inc inc add cmpsb insb sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp xchg (bad) (bad) in (bad) out (bad) cld cld cld (bad) fucomi out (bad) lods outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp cmpsb imul inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add test xor lods outsl jmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl mov decl (bad) mov xor outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl jmp test inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add cmpsb imul lods outsb shrl outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp imul inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add inc inc add xchg arpl lods outsb (bad) sub outsl sti sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl sti sub outsb (bad) xor add inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add movsl imul lods outsb lahf sub outsl imull outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl cmc sub outsb lahf sub inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add lahf imul sub outsl popf sub outsl int scas outsl jmp scas outsl sti sub outsl sti sub outsl jmp scas outsl int lods outsl popf sub outsb pop sub inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add add add add add add add add add add add add add inc inc inc add inc add inc add inc add inc add inc add inc add lods outsb jp scas outsl mov sub outsl sti sub outsl sti sub outsl out scas outsl mov sub inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc inc add inc inc add inc inc add movsb imul outsb stos sub outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub outsb stos sub inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add stos outsb pop sub outsl repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl repz outsb pop inc inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add lods outsb js scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl call ljmp ffree call ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb js inc inc add inc inc add inc inc add inc add inc add stos outsb pop sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) cmp enter sti (bad) sti sti sti lcall nop (bad) mov fnop (bad) cmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb pop inc inc inc add inc inc add inc add scas outsl repz outsl ljmp outsl ljmp outsl ljmp outsl incl cmp lock sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp scas outsl ljmp call jmp incl cmp scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl repz inc inc add inc add outsl ljmp outsl ljmp outsl ljmp outsl pushl mov (bad) (bad) in sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp scas outsl ljmp outsl call dec jmp pushl mov ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp inc add scas outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl jmp sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp scas outsl ljmp outsl ljmp outsl pushl jmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub lods outsb jp scas outsl ljmp outsl ljmp outsl ljmp outsl incl cmp sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp scas outsl ljmp outsl ljmp outsl ljmp outsl inc out incl cmp sub outsl ljmp outsl ljmp outsl ljmp outsl mov sub outsl ljmp outsl ljmp outsl lcall sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp fwait lcall scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl mov sub outsl ljmp outsl ljmp outsl ljmp outsl (bad) (bad) in sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl mov dec jmp ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl out scas outsl sti sub outsl ljmp outsl ljmp outsl (bad) cmp sti cli (bad) stc cli cli (bad) stc cli cli (bad) stc sti cli (bad) stc sti cli (bad) cli sti cli (bad) cli sti sti ljmp scas jo sub scas outsl ljmp scas outsl inc in (bad) cmp scas outsl ljmp outsl ljmp outsl ljmp outsl sti sub outsl sti sub outsl ljmp outsl ljmp outsl jmp xchg lcall scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti jmp xchg ljmp outsl ljmp outsl ljmp outsl ljmp outsl sti sub outsl out scas outsl ljmp outsl ljmp outsl (bad) jge cmpsb (bad) jle cmpsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) jge cmpsb ljmp outsl ljmp outsl ljmp outsl ljmp outsl in scas outsl mov sub outsl ljmp outsl call lds ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti decl scas outsl ljmp outsl ljmp outsl ljmp outsl mov sub outsl ljmp outsl ljmp outsl lcall xchg ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti lcall outsl ljmp outsl ljmp outsl ljmp insb and scas outsl std sub outsl ljmp outsl lcall (bad) call jmp incl scas jno sub outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) fnop out pop mov outsl ljmp outsl ljmp outsl std sub insb and inc inc add outsl ljmp outsl ljmp outsl pushl mov call jmp (bad) ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti push stc idiv xchg aam pushl mov ljmp outsl ljmp outsl ljmp outsl ljmp inc add inc add scas outsl repz outsl ljmp outsl ljmp outsl ljmp outsl decl (bad) (bad) mov fadd (bad) cmp outsl (bad) sti sti sti (bad) sti sti sti (bad) sti sti sti (bad) mov mov outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl repz inc inc add inc add inc add stos outsb pop sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp pushf call jmp (bad) jnp movsl (bad) sti sti sti jmp bnd outsb (bad) fwait ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb pop inc inc inc add inc inc add inc add inc add inc inc add lods outsb js scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl pushl (bad) mov pushl scas outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsb jbe inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add stos outsb pop sub outsl repz outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl repz outsb pop inc inc inc add inc inc add inc inc add inc inc add inc add inc add inc inc add inc inc add inc inc add movsb imul outsb stos sub outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub outsb test inc inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc add inc add inc add inc add inc add lods outsb jp scas outsl mov sub outsl sti sub outsl sti sub outsl in scas outsl mov sub inc inc add inc add inc add inc add inc add inc add inc add add add add add add add add add add add add add add inc inc inc add inc add inc inc add inc add insl xor lods outsl cltd sub outsl fldcw outsl stc sub outsl stc sub outsl fldcw insl xor inc inc add inc add inc add inc inc add inc add inc add xchg arpl lods outsb popf sub outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub outsb fwait xor inc add inc inc add inc inc add nop bound lods outsl ret sub outsl ljmp outsl ljmp outsl call mov mov fnstcw ljmp outsl ljmp outsl ljmp outsl ljmp arpl inc inc add inc add outsl ljmp outsl ljmp outsl decl cli (bad) sti sti sti pushl scas jb or incl scas outsl ljmp outsl ljmp outsl ljmp inc add insl xor outsl std sub outsl ljmp outsl (bad) jnp movsl (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld ljmp scas outsl ljmp cwtl (bad) jns mov ljmp outsl ljmp outsl std sub insl xor lods outsl cltd sub outsl ljmp outsl (bad) cmp repnz cld cld cld (bad) sti sti sti (bad) sti sti sti ljmp outsl ljmp outsl ljmp outsl lcall mov ljmp outsl ljmp outsl ljmp outsl fldt outsl ljmp outsl incl cld cld (bad) sti sti sti (bad) cld cld cld (bad) sti sti sti ljmp outsl ljmp outsl ljmp outsl decl test jg cmpsl ljmp outsl ljmp outsl ljmp outsl fldcw outsl stc sub outsl ljmp outsl (bad) mov sti cli (bad) cli sti sti (bad) cli sti cli (bad) sti sti sti ljmp scas outsl ljmp outsl ljmp outsl lcall scas outsl ljmp outsl ljmp outsl stc sub outsl stc sub outsl ljmp outsl lcall scas outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti cld sti (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld (bad) fcomip call ljmp outsl ljmp outsl stc sub outsl fldcw outsl ljmp outsl lcall scas outsl ljmp outsl ljmp outsl ljmp outsl (bad) sti sti sti (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti push stc clc ljmp outsl ljmp outsl ljmp outsl fldcw outsl pushl scas jb scas fnop ljmp scas jno sub outsl ljmp outsl ljmp outsl (bad) sti cld sti (bad) sti sti sti (bad) cld cld cld (bad) sti sti sti (bad) clc cli stc pushl scas jb sub outsl ljmp insl xor outsl std sub outsl call xchg cmpsb fcmovnb lcall xchg ljmp outsl ljmp outsl (bad) sti sti sti (bad) cld cld cld (bad) sti sti sti dec jmp xchg sub outsl ljmp outsl std sub insl xor inc add outsb fwait sub outsl ljmp outsl ljmp outsl (bad) js mov (bad) ds (bad) sti sti sti (bad) jmp lret mov ljmp outsl ljmp outsl ljmp inc add inc add xchg fs lods outsl ret sub outsl ljmp outsl ljmp outsl (bad) cmp mov (bad) cmp outsl ljmp outsl ljmp outsl ljmp arpl inc inc add inc add inc add xchg fs lods outsb fwait sub outsl std sub outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl ljmp outsl std sub outsb fwait xor inc add inc inc add inc inc add inc add inc add inc add insl xor outsl fldcw outsl stc sub outsl stc sub outsl fldcw insl xor inc add inc add inc add inc add add add add add add add xor add add and test add add add add add add sbb add add add add adc add add add add or add add add adc adc add add sub add add add add add adc adc add add sub add add add add add adc adc add add sub add add pushf add add push add pop add inc add push add dec add pop add dec add dec add add add add add add add add add add add add add add add add add add cli add add add je jb imul inc add insb add dec add data16 add (bad) add add add add add add add add bound xor add sub add add inc add insb add inc add jae arpl jb imul imul add add add add add imul push add jb jae imul add add xor sub and xor sub and cmp sub and xor add add pop add add insl add imul add arpl jb imul add inc add je outsl add je and jbe xor and push add jb imul cmp and xor sub and xor sub and cmp sub and xor add add inc add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or mov cmp jae gs bound js insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and insl popa outsb imul jb imul xor ds je jne je outsb outsw and insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and or and arpl imul and and cmp gs gs gs jb jbe insb gs or and and and gs gs gs js arpl imul insb and gs cmp outsb jbe imul and inc arpl jae cmp jae and cmp jb jno gs gs js arpl imul insb ds and and jb jno gs gs jb jbe insb gs or and jae arpl imul cmp je jne je outsb outsw ds fs outsb fs arpl or and gs outsb fs je jae gs bound or and and jae gs bound fs je je and gs xor and outsb popa insl gs jb jae data16 push imul inc outsl insl insl outsl outsb sub jb insb jae and jb imul xor xor xor and addr16 addr16 jo outsl arpl jae jb jb push je jb cmp jo bound dec gs outsl imul and xor xor xor arpl xor ds popa jae gs bound fs je je ds and fs outsb fs je jae gs bound or das fs outsb fs arpl or jae gs bound push push push call int3 pop mov inc sub sub add cmpb jne movb mov push push push push call add mov pop pop ret push mov push push push push mov mov shr mov mov test je xor add add dec jmp pop pop pop pop leave ret (bad) inc add idiv sbb rolb xor jmp icebp shlb imul adc xchg jge movsl arpl sub mov xor pop push subl mov add add sub mov sub and sub shl dec xor xor xor sub push decl pop shr shr and xor mov mov 