inc cwtl adc xchg pcmpgtd or data16 push xor sub push bound mov inc or data16 jbe data16 or je or data16 lahf or data16 pcmpgtd xchg pcmpgtd bound data16 or test mov pcmpgtd xchg pcmpgtd inc push mov pcmpgtd jg push femms dec and lea sub data16 mov pcmpgtd add dec insb push data16 add test data16 or data16 data16 dec push data16 ja retw mov dec mov dec mov pcmpgtd insb push data16 popfw sbb inc xchg pcmpgtd fisttpll data16 imul scas lahf or data16 add add add push add add add stos test test adc jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add cmp add add add les adc push outsl pop dec movsl mov enter add add add push jb jae jae add add add add add add add add in inc add add add inc add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sbb adcb add add add add inc add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add dec add add add sub pop adc add add mov inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add nop dec add add add add add add add mov inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add nop dec add add int3 adc int3 adc js add add add push inc xor add or or add add add imul push inc add xor add (bad) decl add add add add add add add add add adc nop adc js add addl add add add outsb addr16 je insb xor push jns popa jo imul push jb jae jae add add cmp xor divb or ds push sub add add add add add add enter dec add add add sub or scas fwait mov add add (bad) or add add int3 sub pushf add add add add add xor dec add (bad) (bad) incl add add sbb sbb dec add add add add add add add adc inc add add add add xchg adc add nop adc add xchg adc mov push adc dec add add add add inc add inc add pop add add test inc add (bad) (bad) incl add add add add push add (bad) (bad) incl add add inc add add inc add inc add add add add loopne dec add test xor add or inc add nop dec add adc add add add add mov imul (bad) (bad) incl add add sbb dec scas movhps ljmp push add add sbb dec sbb or add add add add add add add inc add (bad) (bad) (bad) clc sbb add inc add add add incl add add add (bad) incl add sbb add add sbb add addl add (bad) dec sbb add cmp add sbb inc add add add add add incl add addb add add and inc add (bad) (bad) jmp and add add push add add inc add incl add addb add add pop adc (bad) (bad) (bad) jmp and add add js dec add add add inc add incl add addb add add in adc (bad) (bad) (bad) jmp and add add mov add inc sbb (bad) incl add addb add add inc insb gs add add insl outsb imul cmp add inc imul add add inc js popa jne je gs xor add add jae popa insb fs jb add push popa outsb arpl xor add push jb jae jae add push lds cmp inc cli mov push inc popa adc add data16 xor divb or ds push sub lcall repnz lods xor or stos add xchg inc outsl insl insl popa outsb fs cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add mov inc add add add add add add add sbb cld sbb call add add add add add insl insl popa outsb fs add inc outsl insl insl popa outsb fs add add inc outsl insl insl popa outsb cmp add add dec lods xor or stos add xchg push popa jae popa insb gs insb add fimull xor or stos add xchg dec outsl outsb insb imul add dec lods xor or stos add xchg inc outsl jb add add add xor or stos add xchg dec jo imul je outsl outsb add je outsl outsb xor imul insb jbe outsl xor add add popa insb popa bound add add dec imul cmp add push imul or js test add cmpb out out mov arpl gs roll scas dec xor fwait mov ror enter sbb xchg sbb inc add add add jbe jo xor add add adc add dec jo outsb push jb arpl jae outsl imul add add add add add in xchg dec add or je jmp push mov call jmp add add add jne gs outsb jbe fs insb add gs insb insb push jae jb push jb imul arpl jns mov inc add sbb add add clc xchg dec add or je jmp push mov call jmp add add add add je gs jne je jae jb jb imul arpl jns add sbb add add dec add or je jmp push mov call jmp add add add add inc push xor cs dec dec add adc add inc outsb jne push push push imul add je inc add add adc add add add mov or je jmp push mov call jmp add add sub add add add add add add add add add movsl push add add add add add add add add dec add push add jb outsl add jae add add add add dec add add dec sbb mov cmp inc add arpl imul add insb add jb add adc add push add je insb add arpl imul add add add add add jns bound outsl add add xor add add push add outsl add add add push inc inc ss dec dec add add pop pop jbe popa dec bound popa jb pop pop jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa push popa jb gs bound fs data16 add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa dec xor jns add pop pop jbe popa push popa jb jae inc je add pop pop jbe popa dec outsb push je inc add jbe popa dec popa je dec gs inc popa insb insb dec add pop pop jbe popa dec bound gs fs data16 add jbe popa push popa jb jae dec add add jbe popa push popa jb fs jbe popa inc jb gs bound add add jbe popa dec bound gs pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa dec outsb push je push popa jb add pop pop jbe popa dec xor popa jb add jbe popa inc jb gs popa jb add add jbe popa push popa jb outsl jbe add add pop pop jbe popa inc jb gs je add add pop pop jbe popa push je inc outsl jo add add pop pop jbe popa inc jb gs popa jb imul pop pop jbe popa push je push popa jb outsl jbe add jbe popa push je dec outsl jbe add add or or add add mov inc add add add push add (bad) (bad) incl add add sbb or add test add add add add sbb add add movsb and add add lods and add add test inc add add add mov push and xor dec add add add inc add adc xor add xchg sbb pop add add inc add jg add add inc add add add add add pusha and fdivrs add sbb push add add adc cmp add xchg sbb add add add add add push add add add add xchg sbb or add sbb add jg add inc add add add or add add add add add jg add add add add adc dec add add inc add add shlb clc jg add inc add add inc add add add (bad) incl add add add add and push add (bad) (bad) incl adc push add add add mov inc add subb sbb add add inc add add add add sbb inc add subb sbb add add inc add add add pushf sbb add add jl inc add subb sbb add add inc add add add add loopne inc add subb sbb add add inc add add add xchg sbb or add add add add add jg add sbb or add add add add mov subb sbb or add inc add add add pushf sbb push add add inc add subb sbb push add add adc insb add add inc add add add inc add jg add sbb or add add add lods and sub inc add add inc add inc add and sub inc add add inc add inc add and sub inc add add inc add inc add inc add inc add add inc add inc add add inc add add inc add inc add add inc add add inc add inc add inc add add inc add inc add and sub inc add add inc add inc add and sub inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add add inc add add inc add inc add inc add add inc add inc add inc add add inc add inc add and sub inc add add inc add inc add int3 xor push cmp xor divb or ds push sub test cmp inc cli mov xor or stos add xchg stos add add add add outsb add popa jae imul add and and (bad) (bad) jmp add jae imul or add ret add add incl sub add add add je outsl outsb cmp push add add je outsl outsb cmp add push cmc or add incl sub add add add je outsl outsb aaa add add add je outsl outsb aaa add jmp int adc incl sub add add add je outsl outsb add add add je outsl outsb add cltd adc adc add add add je outsl outsb xor add je outsl outsb xor pop or push add add add add insl insl popa outsb fs add or inc outsl insl insl popa outsb fs add add or pop add add add add or inc outsl insl insl popa outsb fs or inc outsl insl insl popa outsb fs add jbe adc add add add add or inc outsl insl insl popa outsb fs add insl insl popa outsb fs fiadd adc add add add add or inc outsl insl insl popa outsb cmp add or inc outsl insl insl popa outsb cmp add adc xchg or incl sub or push popa jae popa insb gs insb add add add insl jo jae jb add syscall xchg or add incl sub add or add popa insb popa bound add add add insb insb imul dec push mov add incl sub add or insb jbe outsl xor add or inc insb outsl fs or add adc or incl sub add push or dec imul cmp push add add outsb jns add sub push or or add add pop add outsb insb gs add or jb arpl imul std adc or adc add add add add add outsb insb imul or push gs imul outsb add jae inc movlps add add int3 xor add scas dec xor fwait mov test add cmpb out dec lods xor or stos add xchg mov or mov or add outsb imul cmp or imul addr16 add add inc add fisub add (bad) and (bad) and add add add add add add push add add add add add add add add xchg arpl daa xor int3 pop arpl sub sub cld mov or cmp (bad) jne xor inc gs fnstcw cmpsb cmp in pop mov and stos or push sub in scas cmp adc daa lods roll add dec pop mov cmp xor mov dec mov out mov test push fbstp lret sbb xchg imul push xor dec lret lcall lret sti xchg push loop cmpb stc outsl ret mov std in cltd cmp jl push aas aam call mov scas cli add cmpsb leave adc pop lret fwait nop push aas imul inc lcall out xor js cmp fldcw fstpt lret adc lods dec out mov pop dec cwtl jg dec sub and sub je rcll mov mov iret push cmp mov mov jecxz xchg pop or rcll cmpsl pop ja xchg imul cmp or add iret lods mov lock arpl loope mov xchg xor xlat pop sbb lds rorl cltd cmp rcrl inc lret pushf jb xlat (bad) xor and rcrl jmp pop push aaa out jmp push out sub and fcmovu xchg or or nop ss mov (bad) jb sbb loop mov pop sbb lahf popf mov mov xor mov into push mov shr jecxz add push in jl and ja push mov test or sub (bad) shr (bad) data16 or jno push push ret dec jbe push jae addl push mov mov test std sub ja sbb push dec mov addr16 into (bad) stc sub lret cmp jnp or or push inc mov fisubl mov cmpsl dec imul (bad) test mov rolb cltd jp jmp divl xchg subl lahf jecxz xchg xchg mov fwait shrl sbb xchg clc pop incb jo mov (bad) jb or les lods inc mov cmp dec xor add add sbb and add insl dec lea cmpl int3 mov or adc inc adc pop lea outsb cld add mov sahf pop jecxz aaa test icebp fistl shrb nop rorl enter pop xchg push mov dec pop jmp xchg test (bad) cltd aad and pop mov xchg imul mov imul mov add (bad) pop pop fildl (bad) xor sbb jno push jb and cltd pop bound jmp nop xchg inc sbb cwtl das pop pop sub in add jg lods xor shrl cmp (bad) test sti lcall lahf xchg in and mov pop sub jno push out cld popa xchg (bad) in scas clc enter rolb push sbb add push pop sbb lods call stos aas into sub pop xor pop jne adc xor add inc sub int cmp mov mov jp xchg bound das fnstenv xor xchg cmpsb (bad) aas jmp mov mov pop jecxz fmul pop neg mov ljmp dec push adc fcom sub iret inc ficomp sub test lds jae outsb idiv movl pop addb push or lods jle cwtl or out cmp and dec sbb inc xor inc mov and pop pop insb sub ret (bad) cmp pop les ret hlt lcall cmp sarl inc inc sbb push mov dec inc pop push pop aas movsb por loopne daa push inc enter gs bound pop push add dec xchg adc pop scas mov inc push adc lahf push outsl aas nop xor ss repnz popf add (bad) int3 xchg jno imul mov imul inc xchg out cmc jne std fistp fistl mov leave movlhps pop inc push negl jno push mov pop lretw xchg xchg cmp cmpsb xor pop nop jle out jne (bad) push cmp jp movb gs dec xlat cmpsl cmpsb sbb fucomip cmp daa cmp std mov pop sub inc mov or insb sbb xor sub js add sti stc and cmp jg ljmp ret bound roll jno xchg mov sub bnd cmp pop xor hlt fninit stos mov fmulp int3 ds fs cs mov repnz outsl mov mov cmp imul lret int3 mov add ljmp cmp lods loope jns sbb inc jae adc (bad) ja push pop sbb clc xchg aas mov in aad jp outsl adc jnp mov or fs add mov pop mov pop pop mov sbb cwtl or pop sub or pop stc inc ret imul les cmp add aas sbb jmp mov sub sbb add jmp loopne pusha or xor pop loop jns push dec out xor rcll adc rclb or mov into xchg test daa and (bad) xchg mov pop imul clc sbb sbb cmp xchg cmp inc outsb bound data16 pop adc or and xchg clc fstpt pop pop call lret push movsl mov add lea inc test mov xchg jnp jo (bad) xor and icebp jb mov push sub cmc xor jg and sbb pop aaa sbb in idivb push (bad) lock ja inc ficoml sub addl stc outsl ret imul les cmp cmp aas sbb jmp iret mov or jl cli add jmp adc pusha paddw loopne loop jns in dec out xor push adc addr16 rcl dec rolb adc ljmp mov and (bad) xchg nop outsb fdivrl jp mov push imul clc cmp dec aam scas cmp inc outsb sahf arpl adc push cld pop mov testw in loope cs pop push lret mov movsl insl dec insb ds add test es mov (bad) xchg je jo mov dec test stos jae fsub mov push xor sbbb aaa sbb in div lcall fimul ja inc fcmove sub int3 add pop or imul fcoms dec icebp adc imul in mov jne std ds jle les pcmpeqb add mulb adc lea popa daa jnp out and mov (bad) sbb mov test dec fisubrl (bad) adc loope pusha push dec lds push push ret lcall push aaa jbe out repz and jp fwait stos push out ja xor or sub and inc fistpll and leave push push xorl add movb cmp bound mov sbb xchg inc cmp inc and lods xor sub or lea add scas repnz mov mul push aad cmp xchg sbb push push xlat jg adc imul in pop pop push jecxz,pn mov jle les nop/reserved add hlt clc je adc divb jnp add and mov pop sbb (bad) lahf push loop mov fisubrl mov loope pusha push dec lds arpl ret lcall push (bad) jbe int3 jp aaa insb es adc xor or stc or sub cmc rolb fistpll and mov mov sbbl mov pop adc xchg jmp popl test ljmp mov mov mov sbb xchg inc pop or xchg lods cmp sub or aas sbb or scas lea repnz fs push out sub xchg sbb inc sbb outsl push adc or fcoms dec icebp dec sbb pop imul std mov jne pushf ds sub les sbb je adc mulb lea dec add and in aam rcrb sub (bad) sbb mov fisubrl mov loope in push pusha lds or jo call lcall sub scas pop and insl pop mov inc sub les aas mov ss es leave jmp ret and lret (bad) pop cmpsb sti outsl or lock loop and cmp js lock (bad) lea mov loopne mov and mov mov (bad) xchg mulb outsl xchg cmp (bad) and (bad) cld mov repnz mov repz xchg and mov or mov push push push aaa pushf dec sub pop dec cmp sub mov inc xorl mov jns pop cmpsb mov sti (bad) xchg aas add stos adc mov das push push sbbl iret mov lock arpl cmp cmp xlat push sbb stc or cmp mov and dec fisttp into loope pusha sbb add hlt cmpsl pop adc test outsb das cltd int3 mov add ja mov add loop mov iret jp push sahf adc push lea loopne test jo clc jge jns mov fldenv mov cli aas out repz push xlat sti mov je xchg mov es (bad) lods cltd (bad) sahf out adc fdivr fisubr jecxz je sbb inc cmp push jmp (bad) ret mov (bad) or ss rolb stos jmp enter fsubs xor pop cmpsl jb ljmp loop xlat mov cmc xchg js jmp dec imul incb mov aad mov xor bound mov out stos (bad) mov lea ret mov jge push ret cld mov aaa or dec xor (bad) sbb mov and ret aaa mov cli insl (bad) jmp lock nop and dec jne enter jp (bad) loopne add cmpsl jg cmp jae ss loop xlat fistpl cwtl push sbb adc mov movl mov test movsl negl add add xchg test nop dec jmp mov shll push mov or fst shrb sbb jl insb aad aam stos enter push push xchg cs cli cmp (bad) rcrl or fstpt sbb clc xor das pop and inc lahf jecxz rcll loope sti sbb mov push mov cmpsb test cmp or sub jg ljmp gs ret dec or cmp dec leave xchg push xor xor ja push imul xor cwtl cmpsl dec in je in mov repnz in fxch aas neg jns jmp scas mov pop cmp push adc mov dec adc add les mov sbb lds movsl add stc fsts and cmp dec ret rcr sarl mov inc lods push test cmp hlt xchg xchg roll or aam stos enter add mov push out cli xchg rcrl or fstpt sbb repz das pop clc js add and es mov adc daa popa inc push sti pushf and cmp or test jg ljmp arpl sub add sub inc insl xchg in scas dec ds push cmp xor ja xor fsubp push fs xor xor cwtl mov in mov in repnz aas pop fdivrl jmp divl scas adc pop sahf dec push xchg mov fwait (bad) mov out inc les icebp (bad) mov mov mov pop stc lds fsts and jmp mov mov out lods push mov or xchg rcl inc sbb jl enter add mov push out cli xchg cs cltd cmp (bad) rorl jno paddb aad sahf cmp inc outsl arpl loopne pop adc push push std addr16 cmp cmpsl cmp sub and add mov lods push pop push outsl jmp loope mov rolb sahf ret js notb hlt push in sub popf das sbb and (bad) push and rcll movsl sub stos inc cmp pushf jbe int3 sbb fnstenv mov push ss push adc xchg mov xor cld xchg shl lahf sarb jb ljmp xor sub sub inc outsb xor fisubl pop push sarb or xor xor xchg inc xor pop inc scas mov imul cmc mov jp dec test and fdivrl int3 (bad) mov push mov mov test push sahf pushf lds (bad) test out dec mov mov add pop adc fcmovne xchg xchg mov mov dec and sub and mov pop mov ljmp xchg adc mov push aas test insl test mov fdiv jge jb xlat nop jne and rcrl lods pop dec cmp test cmp js les movsb pop push xchg or popa fbld jp mov (bad) mov sbb jecxz xor dec sbbl lret xor mov fmul push mov shr jecxz push mov insl pop shlb rolb push sub imul test dec fidivl (bad) push in (bad) data16 jns imul jp pop add dec popf aaa data16 sub cs and jmp imul in test and sbb cmp xlat jne out test ret jns lcall push xor mov hlt mov mov mov divl imul cmp pop ja mov add enter jb jecxz out scas lods jg mov xchg dec dec mov xchg mov fwait test jp fistpll cmp mov jl xchg mov push popf lock mov not mov imul mov (bad) mov ret mov movsl push fdivs cmp push mov leave lret cmp mov int3 jne ror out std mov dec pusha dec (bad) bnd jae xchg xchg xor xchg rcrl cmc cmpsb addr16 aas (bad) cmc push icebp sub stc daa sbb push cwtl fistl lret or repz inc sahf mov xor xlat iret mov test les das and push mov cli cmp mov xor sub (bad) sub pop pop popa stos sub inc arpl nop lahf mov stos scas ljmp enter lods jg mov xor or test mov das test xchg into fistp sarb mov jl lods mov sti popf lock repnz not mov mov ret imul mov cltd push fwait ret xor test leave lret and mov std fs int3 std mov dec pusha inc (bad) xchg dec daa xchg repnz xchg rcrl cmc cmpsb in jmp or aas stc daa push sbb ds fistpl lret or repz scas inc dec mov sbb xlat sahf mov iret and ja loop pop das xchg outsb push pop add cli mov mov xor inc rorl outsl jmp pop pop arpl nop lahf inc in add stos mov fsubrl aad jg sbb mov xchg dec or clc xchg mov fwait test mov ljmp lock mov push popf cld adc rorb sbb xor rolb mov ret mov movsl push mov push lret and mov std fs int3 jne ror out std pusha inc pminub xchg bnd mov (bad) iret jo pop ret pop inc dec adc adc sub movsb sub lret das scas jnp sbb push lahf sbb xchg dec pop inc mov jbe popf xor xor imul mov dec or mov and jo push sti lods insl repnz xchg mov add and ja sahf loop mov pusha loopne aas pop data16 mov (bad) cmpsl in xor imul adc test jns mov nop inc inc xchg (bad) mov leave mov cmpsl cld push push in fiaddl sub cmp push cmp sub lahf xor push sub ds or mov sub xchg ja xchg pop sbb cmp jne ds xor pusha outsl adc mov gs pop add test jnp inc (bad) pop fildl addr16 pop xchg fwait scas imul dec (bad) cmp aaa jl nop lret data16 push mov or pop jb xchg ss mov xchg jae push push je mov add pop sahf fmull loopne js sbb mov adc push (bad) repnz cmp push xor and les sbb lds stc push mov push or xor xchg pop es insl adc fs jg outsb subl xchg mov mov xor sub push mov sub xchg ja dec pop sbb cmp jne lods out aad jp outsl adc mov clc lock in sub jnp inc (bad) jbe inc and pop pop xchg fsubs mov cwtl enter or cmp nop jl (bad) lret data16 push lea adc or pop jb xchg ss mov xchg jae push mov sub sbb lcall pushf mov aam sbb adc sbb ret inc cmp push mov and les sbb mov mov push or xor xchg pop test insl in bound es jg outsb andl mov adc xor sub and or or xchg dec mov xchg pop cld sti cmp lods xorl jp out xor pusha outsl (bad) mov dec clc mov gs cwtl sub jnp (bad) (bad) jbe inc and pop fildl pop fwait mov cwtl enter imul std nop or (bad) cmp aaa jl nop lret pushw lea add fcmovb pop adc clc lret adc jg test dec xchg and dec (bad) outsl and data16 mov pusha mov jmp adc add inc test push rcll mov rsm bound push xlat adc fwait cli or test lahf jl jno mov rcrb xor mov in adc (bad) cmp mov sbb sbb mov sub sti mov push in dec inc xchg push loop pop cmc fsub lock ret in fist into aas les pop data16 leave dec pop (bad) mov hlt cmp sub divl sbb int3 insl cmp or mov scas jecxz ss cld inc pop xchg std xor iret nop push ds push and inc lcall out xor js cmp fldcw fidivrl lret adc lods dec in mov pop dec xchg jg dec sub and popl pusha mov jmp adc add cwtl test mov push inc outsb mov mov bound aam adc fwait cli icebp inc sbb aad or jl jno xor xor and mov fistl dec (bad) frstor sbb aaa pop cmp sti mov push sub push in stc pop xchg fsub loop stos cmc movb adc aas (bad) in pop data16 das leave add rolb repnz dec cmp sub int3 ljmp or test jb mov scas jecxz ss cld inc cs std fisubrl popw loopne mov xchg ljmp cwtl test mov push inc outsb mov setne ficom jne xor faddl add sbb pop call cmp stos das sub mov cmp popa fnop push leave sbb pushf (bad) xchg aaa xlat pop repnz popf mov jae inc into mov (bad) fs or mov std push subb jp lea insb (bad) mov sub sbb push lahf push outsl in outsb loop cmpsb scas add jnp and jmp mov daa pop xor movsl or lea xchg lret enter fidivr mov push cmc cli mov push loopne push ss jns inc cmp xchg jo sbb js idiv (bad) mov pop stc out pop fstpl jg dec jecxz xor int push jle mov cld add dec xor xchg mov and icebp rcll adc test pop pusha in lods sbb call (bad) hlt cltd xor cmpl leave iret or push pushf sbb repnz popf mov jae (bad) into mov (bad) fs aad loope sahf jno mov std push subb jp lea insb rcl sub sbb mov push movsb in outsb push mov add scas jnp out lock mov or xor stos ret movsl lods mov or (bad) lret enter ficomp add cmc imul loopne xchg add aas push cmp int3 in inc sbb js idiv sti mov (bad) stc out pop fldl xor dec jecxz xor sbb int mov adc inc out push mov and leave rcll adc dec and pusha dec lods sbb cmp in das pop dec (bad) hlt stos xor (bad) cmp sbb popa popa dec sub sbb sbb sbb sbb sbb sbb sbb sbb (bad) sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb ficompl mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb jmp sbb sbb sbb sbb sbb sbb int mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb in jecxz (bad) sbb sbb sbb sbb sbb sbb mov mov mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb mov sbb mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb xchg sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb (bad) sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb ficompl mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb jmp sbb sbb sbb sbb sbb sbb int mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb in jecxz (bad) sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb lds hlt sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb rcrl ficomp lds aam movsl sbb sbb sbb sbb sbb sbb sbb sbb out rcrl sbb sbb sbb xchg sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb mov movsb sbb sbb mov sbb sbb sbb sbb sbb icebp sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb rcrb mov aad fstps movsb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb jmp cmpsl sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb cli sbb sbb aam repnz sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb rcrl repz sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb fcompl fstps lret sbb sbb loopne aam mov mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sti sbb sbb sbb sbb sbb sbb ret sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb mov sbb sbb leave sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb lods sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sti sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb in mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb int3 sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb ficompl lcall jecxz into sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb repnz sbb sbb sbb mov clc sbb sbb sbb sbb test sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb in mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb int3 sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb ficompl lcall jecxz into sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb repnz sbb sbb sbb mov clc sbb sbb sbb sbb test sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb in mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb int3 sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb ficompl lcall jecxz into sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb repnz sbb sbb sbb mov clc sbb sbb sbb sbb test sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb in mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb test loope fstpl repnz sbb (bad) sbb sbb sbb std sbb sbb sbb sbb clc sbb sbb sbb sbb sbb sbb repz sbb sbb rcrb stos sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb leave sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb enter stos sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb mov mov mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb negl mov stos sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb lret sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb mov mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb fistp mov sbb sbb sbb rcrb mov repnz sbb sbb sbb icebp sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb stc sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb in sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb out sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sti sbb sbb sbb mov jmp movsb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb hlt sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb xchg sbb sbb sbb sbb sbb sbb sbb sbb sbb rcrl ficomp lds aad movsl sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb out sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb lock sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb stc sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb scas sbb sbb sbb ficompl (bad) sbb sbb sbb sbb ret sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb fcompl lret sbb leave sbb sbb sbb sbb sbb sbb clc sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb stos sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb rcrb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb mov scas sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb out mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb fcompl lret sbb leave sbb sbb sbb sbb sbb sbb clc sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb stos sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb rcrb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb mov scas sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb out mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb fcompl lret sbb leave sbb sbb sbb sbb sbb sbb clc sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb stos sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb rcrb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb mov scas sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb out mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb popf pusha lret xchg (bad) js fidivrl and not test test aaa mov or dec and mov jb,pn or sarl mov pop xchg lea add aaa leave push test (bad) test push mov cmpsb push mov jmp jnp cs dec dec add pop (bad) out pop int3 pop jge das cmp cmp or notl xor push sbb mov sub sub cmp jg or cwtl loop push (bad) dec xchg jbe (bad) mov xor add shrb jne pop test push aas inc cmp in into fisubrl jo and add icebp ss mov jb,pn or (bad) mov loopne cli test in leave mov into (bad) (bad) xor mov adcb ljmp in xor lds fsubrl ret adc sbb into or notl cwtl jp xor sbb add add repz (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor lods mov mov nop xchg mov das sub lcall ja imul push movsb into or xor sub pusha cwtl mov icebp mov out fninit add (bad) and sbb add mov js (bad) mov mov lret add movb add cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or add xchg pop pop fbld jp xor sbb fninit adc (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov add add inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and sbb add fdivs and add add mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall aaa adc imul jg mov mov or notl cwtl jp xor sbb fninit adc (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and add add or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc std push cmpsb (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov add sti (bad) arpl ss out das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc add cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or notl add jp xor sbb fninit adc (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub add push leave mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and sbb add fdivs and add mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja fsubrl ret mov mov or notl cwtl jp xor sbb fninit adc (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and add dec sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg add add out das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in add sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or notl cwtl jp addl add mov insl mov jecxz xchg cmpsb (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov enter xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and sbb add fdivs and mov add add add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul pop mov or notl cwtl jp xor sbb fninit adc (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or add mov push mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and sbb xchg mov add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov add out das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub dec and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg add add xor mov nop xchg mov das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl add push mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and sbb add add add xor xchg (bad) js (bad) mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub add les fsubrl ret mov mov or notl cwtl jp xor sbb fninit adc (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and add add mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit add adc (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor add sar (bad) arpl ss out das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe adc inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into pop sbb mov (bad) aaa into dec sub aam repz imul out roll daa add inc aad pushf (bad) in mov inc daa aam or or inc push xchg push in in je jp imul inc jnp ficomp xor jle and sub mov xchg sbb push sub mov insb jnp mov mov enter xlat cmp lods mov cld or notl hlt dec out ss sub dec mov push adc sbb hlt mov mov cmp iret test xchg push clc lock lods ret pop mov and jb adc loopw ljmp add into movsl jle or add or stos cmc (bad) xor stc daa push (bad) adc pusha loop ret sub fcomps iret cmpltps xchg push push dec add jmp inc out cwtl dec (bad) aam (bad) xor jns jecxz addr16 ficomp cs dec xchg hlt sub push add add (bad) lret mov mov iret cs pop pop sub push aas lret aas cmp aas jbe stos inc incl mov add iret jnp (bad) in pushf lahf add test add daa xor dec dec cmp in shr ret push mov inc je andl push nop adc adc inc stos inc insb popa nop (bad) es sbb std push dec out lock (bad) xchg xchg mov cltd push jle das sub je xor clc dec bound (bad) push loopne (bad) sub les aam cmp (bad) (bad) repz insl std push add add negl add in js add dec and cmc (bad) loop xchg inc sbb or xor dec stos into ljmp add xor scas mov inc sub pushf xor enter and into xchg repz push lea add aad sbb push sub bound jp xchg add mov fisubr test pop mov bndstx insl in jl fnop mov scas les push mov mov or icebp xchg je cmp cli jnp xor js repz enter push push jbe dec decl push add add push sub jo xchg lods jae lods sbbb gs dec orl jnp enter negb xchg dec and enter xchg rcr cmpsb mov xor arpl jae mov lcall sub imul cs inc jmp push inc adc add in mov mov and scas lahf inc outsb adc loopne inc ljmp xor (bad) add mov fnsave add std sahf xorb ror in push shr jno lods jge cmp add into sub loope loop fs sub add xchg cld mov iret add xor arpl js lcall in mov (bad) xor out test arpl push push mov lods push roll or xchg cmp insb into (bad) and cmp lahf xchg mov or je fnstsw xor popf cmp fisttp sub repnz push mov xor or outsl sub jns inc movsl xchg clc into les (bad) aaa into inc push ret jnp (bad) mov fcomip test cltd jp xor lods ss mov movsl pushf call in add shlb mov and jle xor (bad) xchg iret lcall popf xchg icebp mov xor push push dec inc in (bad) aas test dec push or mov imul xchg add dec and cmp xchg cwtl negl ret adc bswap (bad) leave lds ja test push inc mov loope,pn inc lcall std push mov (bad) xor lret push fsubr mov (bad) lahf mov push pop out jl pushl adc push cld imul push movsb pushf orl mov jp ret sbb jb pusha jmp jecxz iret inc fwait dec cltd ljmp bound aaa or test add xchg (bad) jno insl adc call push or iret xor out jae mov sub call sub sbb adc or (bad) std push test sbb xor add add nop inc scas adc ret xchg loopne jno enter cli dec adc dec fsubs mov imul popa cwtl dec adc mull loopne and xlat or cmp lock xchg xorl jb out inc xor mov pop test loope fimull aas or (bad) jmp push xchg in and push jb shll repz add movsb pop dec jmp ss daa divl jecxz call dec stos xor cmp mov repz push dec loop dec loopne push jne jl pop ljmp pop push and xchg sub xchg sbb insl xchg fninit stc sub std push and rcrl xor add jnp test je cmp cli stc and push test (bad) mov pop (bad) ret dec mov jle lock mov popa (bad) bswap lods mov repnz xchg and sbb sbb (bad) xchg mov adc js cmpsb ljmp mov add aas fdivs push movsb sahf in fwait nop pop fcompl insb sbb xchg mov mov insl cmp out jns lods push popa subl jne ds xchg jb xor call mov add cmp adc jl sub (bad) cmp gs inc loopne,pn in cs cmc mov xor ror sub lock out and leave pop jo imul push dec stos int mov movsb adc push pop (bad) das in incb adc imul pop lret adc or xor mov mov dec insl ljmp jae add push out lahf push cmc mov in aaa or aam or mov mov lret aam mov aad xchg push push in pop xchg add xchg and daa push popf pop xchg and aad add inc ljmp pop jbe sbb lahf dec push cmpsl sbb inc (bad) je repz fcoms aas shll ret mov fiadd adc out cltd cmp sbb xchg negl cmpsl and mov (bad) repz in inc push test cmpsl (bad) daa mov fadds ljmp add add push mov data16 inc sub push pop sub dec inc push jp adc add fldt cmp movsl jmp cmp xchg arpl hlt pop sbb push add mov into sti dec int3 lods sti (bad) sbb out xor xchg (bad) (bad) mov xor ret mov adc sbb push pop or enter jb xchg cmpb xor pop jle loope pop pop movsb mov push stc or sub and xchg inc fs mov mov adc xchg ret sti cmc sarb cld jp mov dec lahf movsb outsb insb scas stos inc adc sub push pop in sahf mov jp dec and add icebp loop jae mov ss fiaddl dec ljmp stos inc pop addr16 icebp test dec scas lret xor mov lahf push mov out inc das (bad) or cmp aaa inc xchg adcl jg sub stos sbb fcomip xchg push push aaa movsb idivb or gs repz aas add adc ja (bad) and pop mov iret sbb mov jb nop adc xlat ds pop movsl push sti cmp das push in sarb sbb and out negb jb or ds sub push cli leave or in leave or xor rolb add add lret sub sti mov das sub add or enter lahf mov call or negl jnp jg repz (bad) mov jecxz shl adc movsl mov sbb sub mov add mov adc xlat jecxz rdpmc test add add cmp (bad) push lahf ficom inc or (bad) pop (bad) fistl dec inc and mov pinsrw das insl pop jmp gs int3 dec rolb out or int das int xchg jp loop and xchg push sbb xchg cmp js push movsb dec repz add cltd jae pop pop fbstp jo jle,pn and mull insl xchg fninit adc (bad) cmpsl repz popf lahf xchg mov xor (bad) call mov lret add inc lods (bad) push cmp lds sahf fimul fwait out incb dec or adc cmp ss jb cli push add add pop scas fsubr jne rorl je xchg iret inc adc or arpl daa pop out movsb mov mov stc test ret mov cmpb movsb (bad) out mov popa cwtl stc adc and cmp cmp jle and popf inc jmp and fdivs popf xchg fistpll (bad) iret out xchg ret adcl push adc inc dec bound fisubrl cmpsb dec cmc push push mov sbb xlat dec pop loope inc ljmp or mov or lods mov jmp outsl adc pushf mov iret das sub add in aaa adc imul outsl jecxz pop mov or add int push imul jecxz seto incl cmpsb xchg scas adc sbb mov neg mov lcall fstps xchg cmp jbe stc (bad) int negl or mov repz jae ja lea pop repnz inc mov (bad) pcmpeqb jmp push xchg xchg (bad) xor mov push ljmp out outsb ljmp call repnz jo sbb xchg testl xchg cmp add scas movsb pop or adc add add jo xchg int3 push jne popf sbb mov mov jge fmul adc inc mov nop push aaa sub cmp pushf ljmp sub out (bad) cmc in jns push stos mov sbbl mov and mov lret jp push sbb add out xor leave or movl inc in cmp ljmp dec push cmpsl sbb sub lahf sub mov mov jno dec xchg out jns scas push das pop adc sbb add xchg xor xchg jl mov jnp sbb fimull loopne pop test jecxz divl add int3 mov hlt fimul fs fwait adc call repz pushf ficom adc arpl push icebp nop scas ss in dec lea (bad) xor inc sub inc movsl mov bound repnz xchg inc xchg subl and mov push cld idiv pop rolb add add test rcrl leave xor arpl adc fwait out mov jmp out sbb cs xchg mov mov mov (bad) sbb cmp sahf mov inc cmp and push adc sbb add pop inc and addb add add and (bad) sbb or mov in fdivp push (bad) pop push dec sub stos xchg lds mov repnz pop mov mov or clc adc test xor out (bad) mov add add pop (bad) int3 dec jge popf adc mov mov insb add jge neg lret mov test scas adcl pop das call hlt in (bad) ret and and lock add xchg add imul cmp mov enter les mov lods mov jge jle pop test mov adc xchg xchg and jmp add add ja mov inc inc (bad) divb icebp jp outsl jno int cmp sbb es sbb (bad) cmpsb cs sub mov rclb gs push and and out or repnz mov cmpsl int3 add scas (bad) test dec sub cmp mov jbe fldcw cmp rcrb and imul push popf jb and add out int test jle mov add inc cmpsb movsb bound mov arpl cmp adc je and aaa jne je pop (bad) jg mov lret loope pop (bad) jg cmpsl mov add lret shll fldt mov test hlt inc loop dec pop jmp insl mov in jo scas jge,pn mov xor cli pusha pop jo scas push jne aas int3 mov repz lods push mov shlb mov sbb and int add cmp wrmsr push sar jno xor lahf dec lea (bad) xor in xor ret imul add insl jne add pop out jge es pop xor xor les cltd xor push out sub mov and fidivrl mov int3 dec mov dec jae push sub loop ljmp xor adc scas pop inc sub ds (bad) or jns dec xlat (bad) cli sub push mov add add sti cmp (bad) aad sub pop int3 roll dec adc loope cli jle ljmp cmp iret xchg inc icebp pop and (bad) int3 arpl adc das sub sbb jp aaa cwtl (bad) lods xor jg mov ffree xchg fldcw test pop sbb push sbb add jl mov push scas loope insl stc push cmpsb dec imul xorw jecxz div rorb cmp arpl stos dec xchg dec dec cmp inc push shll cmp jle add add adcb push (bad) cli pop mov je add add hlt dec mov push dec stos push clc cltd (bad) arpl rolb out xchg pop pop mov lcall ja imul in in hlt pop cwtl lcall in xchg loopne insl jno pcmpeqb cmpsl and lods push cmp lret (bad) stos (bad) das cmc adc inc xor sub add add (bad) adc push outsb jbe aas inc (bad) pop mov outsl int3 ds out ss dec mov loopne adc push test push cvtps2pi push and add xor mov sbb (bad) or mov push jg xor jle mov aaa adc call add add add jns sbb sbb or lret (bad) cltd loopne insl cmp in jns scas insb cmpsb cmp (bad) std jmp sbbl sub or sub popa jne mov and add cmc push (bad) aaa js push add or decl out cmc push sub pop add adc aad mov ljmp in xchg in leave mov cmp mov cmpsb dec ljmp adc cmpsl adc daa sub inc jle adc les mov fidivrl aas inc lahf xchg add (bad) cmp in mov sub jecxz xchg push dec jle rolb add arpl cmp out or int or jns mov mov mov into dec call mov ret or mov mov (bad) lahf lret shll repz je push stos mov ljmp mov pop lock xor fstp into mov add lcall (bad) stos ret (bad) test lods mov adc frstor aas fisttpl pop sahf in xchg nop pop rclb je sub shlb fisttpl push sub mov dec int jg add aas push jb push hlt sbb mov cli les sub add add cmp in (bad) cmc pop cmpsl pusha movsl push (bad) xor xor push or dec les mov xchg mov call pushf call stos cli lods adc push lock sub and ja fcomps adc sbb push xchg test cwtl jp sbbl add add xchg xchg mov push and lea push les divb out mov mov (bad) push aaa push outsl mov pop push or enter jae loop inc jo movsb or add popa lods lods test pop adc leave daa jo push out add loopne sbb int3 arpl inc jecxz das inc jnp pop aas lock iret xchg ja loop inc jbe and or test cwtl jp xor sbb sbb inc in insb xchg push pop adc pop cmpsl pop mov fnstenv and and imul lret pop add jns call cwtl sbb dec and mov inc fimull sbb jb add xor (bad) lock scas lods fnsave fstpt into xchg repz imul in sti (bad) movsb aad movsb mov fistl call jmp jmp mov jg mov mov mov or cmc xchg pop pop mov adc pop xchg fisttpl push sub mov dec iret ja shlb pushf rcrb jnp and incb mov (bad) xor xchg cmp sahf insl pop inc cmp pushf mov test or xchg imul lods ds and push in sub pop leave mov ss rcrb mov das mov sahf into mov xlat aam push pop dec imul test sub pop dec std sbb daa or test pusha ret icebp xor xor cmp pop jge fisttpl clc pop cmp xchg and test add fcmovbe xor jnp adcb inc (bad) scas mov lods stos and push sbb push cmp jnp sbb leave mov sbb mov jle cmc pop ret lods ds adc push jae outsb xchg int xor mov lea and push cmp mov fnop inc (bad) adc aam add add cs pop les xchg lcall negl pop fcompl push icebp mov sub mov aas in std push sub in ja (bad) add lret xchg out dec and repz lea inc cmp in mov xchg fsubp dec dec xor add ret xchg dec adc add test divl je mov mov aad inc xlat cmp xchg jmp xchg cmp outsl ret cmc push mov cmc jno aaa jne es sbb in mov mov or notl xchg les fisubr pop xchg jecxz xchg dec dec fcomip imul mov push and (bad) mov pop jge divb int scas cmpl adc pop nop mov icebp ficomp repnz ss adc inc jmp dec cmp inc mov dec mov (bad) jl xchg push mov lcall add int add or nop dec movsl adc or lcall adc sbb neg rcrl adc and icebp xchg pop mov push mov cmpsb mov popa adcl rorb add (bad) fdiv data16 mov mov adc fucom or test mov divl cmp or mov sbb repnz daa mov sbb lods ds gs movsb (bad) cwtl mov dec lret jecxz lods lahf xor and cmp xor ljmp in jb aaa inc sub sub fcomps cwtl jbe xor (bad) mov add add pusha sbb fwait pop mov clc fisub sbb aam pop pop cmpsl (bad) dec dec xchg icebp jno sbb arpl jnp jns ucomiss mov mov sti xchg lods stos sti push fist mov pusha push mulb xor bound push jae mov (bad) dec (bad) mov dec cmp inc mov mov add cmp enter or dec inc ud2 mov cli xchg pop idivb rolb adc add and xchg aas lret enter pushf in test or sub cmpsl dec mov mov scas icebp xlat loope outsb pop cmp push lock sahf xchg cmp int lds pop das arpl inc cltd adc cmpsl stos add xchg inc jo ds push push test and and dec jo (bad) icebp popa inc pop clc xadd negb mov fnsave jecxz inc (bad) sub xchg sub scas inc sub mov (bad) adc xlat bound test daa add out xchg inc push cmp inc fisubl inc fs or cmp jo mov sbb xchg in or jae add popf fsubl push fsubs jmp cmp xor ret jo mov pop imul dec and mov add jecxz (bad) mul push dec int3 push inc jg addb bound movsb jmp sbb sbb pusha lret (bad) cmp shrl add xor xlat mov aam test int3 cltd mov lahf int cmpb test fdivrp inc jmp or test orl xchg adc xor in xchg add add sbb add (bad) mov xchg divb mov mov int jbe dec pop add mov enter or add movsl dec sbb in roll adc or into ja pop out mov je ror (bad) mov (bad) xor aas mov add add arpl les cmp (bad) divb lcall dec inc jmp mov dec sub xchg out mov adc pushf or jmp or push cmpsb mov xchg out cmp sbb out (bad) je (bad) aam mov out lret in dec lods inc leave insb adc add xchg sahf fimul fwait gs addr16 arpl mov adc cmp mov push add je xchg mov inc into xchg dec lea mov pop lret mov mov add in and jnp in imul mov jnp dec in jb loope movsb into (bad) push repz cwtl inc mov cld insb inc aaa mov xchg cmpsb (bad) push insl mov cmp push negl sub and pop push rcrl lods into and push push fidivr mov push sbb mov push adc fistp movsl push fadds in add add lahf mov in jmp in sbb lds jbe (bad) mov popa cwtl mov cld pop mov ret mov pusha push xchg (bad) iret pop pushf pop fdivr pop aam icebp aam js andl mov dec cmp adc mov adcb scas add dec jmp cwtl ftst mov dec stos jbe incl cmp (bad) test mov dec inc jae ss stos rolb dec push adc adc int3 push popl fstpt sub sbb cmp lock adc xlat pop mov jl mov in popa inc sub and add imul pop cmc out dec cmc repnz mov (bad) shl xor or sbb test jecxz add sbb lss adc or popa popf out mov popf mov push imul (bad) cmp into out pop fcompl cmp inc out jae jae icebp pop lea add jmp js icebp nop add pop scas fcmovnbe jne rorl out cwtl inc repnz aad push mov dec call pop pop out das ret lcall neg imul pop movsb into xor clc adc movsb das fildl faddl in adc lock add sbb cltd std or and lcall stc fmuls bound in xchg push mov add mulb ss sbb (bad) adc lea lods ds jns dec jle jno mov jne pop jo jecxz sarl in xor inc lcall lahf push inc pop shll jno out enter imul xchg pop pushf pop (bad) or or ja cmpsb sub loopne ret jno insb xchg jae loopne or shrl test cmpsl (bad) sbb ja jmp es adc nop lcall dec or push dec imul add mov fwait gs jg in fwait call stc lods ds jns dec jg jo mov scas (bad) daa in ss repnz das jno jecxz push jae (bad) arpl push xchg (bad) xor sub test mov adc in clc pop add add in and movsb dec enter add sbb shrb add pop sub insb bound les push icebp cs sbb mov pop fwait xor mov jl xor cmpsb mov sbb movsb push (bad) sub push inc imul ficomp xor and push fnstsw sbb inc rcr scas inc cmp inc sbb xor xchg mov add (bad) sbb push mov nop xchg shrl lock mov mov rolb jp loop or shrb rcrb jmp xor cwtl jp shlb sub ret mov repz loop cld pop cmpsb fs in cmc lods push test repz sub mov pop sub fs push sbb add push or or jecxz and or ret imul dec adc push dec into dec imul mov and fxch sbb or jb inc sar (bad) arpl mov or fidiv fistpll ja lds fcompl test add xchg dec cmc or repnz pop pop sbb icebp xchg xor sbb push mov (bad) jecxz lods or cmp mov mov push stos (bad) and rcrb mov push sub in xchg stos jbe inc mov notl add mov xchg decb or sub sub mov mov or inc stos add imul sub dec lods mov cld sub pop (bad) or jnp mov push repnz sti push pop mov or mov push sbb fwait test pop pop ss fwait aam std shl mov leave sbb std out movsl xor xchg push xchg add sub cs (bad) cmp mov mov fsub pop bound subl dec stos ficom dec adc int inc popa xor lret and adc xor lods ss lods push cmp repnz arpl js insl fistp dec orl dec dec dec insb pop xchg notl ret jg ds icebp xor xor jae add mov (bad) and dec jecxz mov (bad) mov add nop (bad) sarb (bad) fwait mov pop imul adc add fidivrl lods add jb out stos cltd loop popf cmc jge dec dec adc cmp sarb pop out push and scas mov into pop dec gs dec aas mov xchg xchg pop ss leave movsl adc xchg sub jno mov fsub xor in mov sbb inc out pop xor cmp icebp mov add aad je push lret lock lahf xchg fcomp cmpb sub or pop pop cmp insb xchg xchg inc xor enter in adc dec dec fwait mov fwait mov aas lods mov sarl addb fistp scas jnp in and jg sbb ficomp xchg add aad sub dec in sahf mov xor into pop xor das hlt sub mov add pop repnz xlat sub push cmpsb sub and repnz jge sub xor and inc add insl ss and rorb xchg push in add add add xchg stos jbe das int3 je pop push sub push lret out sbb stos into call inc adc add inc jns mov sbb xchg mov pop lods sub lret adc dec daa pop (bad) push fldt or sbb pop mov int xchg iret lcall aas jecxz loope,pn movsb into add addl lea (bad) sub (bad) repz mov or scas xor movsb int aad cltd sarb ds fiadd sub or (bad) adc or push aas ret outsb aas adc adc orl (bad) mov fcoms (bad) dec and fimull mov inc push cmp scas pop jno int3 insb jnp and sub insl adc xor sbb push ss mov mov sub das into push in xor out dec pushf repnz int3 or movsb sbb in mov icebp mov insl mov mov subb (bad) dec test into icebp cmp cli or add add lret dec mov xchg or (bad) cltd ret cmp aas cmp stos jne outsl int3 lods stos cmc sbb leave mov adc and arpl mov (bad) lock movsb or (bad) ss cs push fldcw movsl (bad) mov scas ss mov in (bad) cmp inc cs xor jp repnz xlat imul jb add repnz inc sub cmp imul sbb xchg jp jmp push jmp lret int3 jb frstor (bad) push cmpsb inc loopne out insb xchg inc mov jle cltd fsubs les lods xor jecxz sub add nop add dec and jmp add mov dec adc xlat sarb (bad) cmova mov adc mov into xchg sarb dec mov mov nop xchg mov mov nop jg les pop mov xchg fnsave int3 or cmpsl sbb mov lahf sub dec sub icebp fdivr (bad) pushf sbb mov cmpsb xchg int3 push dec mov pushf push loopne xchg sbb nop mov mov dec sbb (bad) stos iret dec aas inc cmp xchg and fimul ja cmp sbb icebp popa sub ficom adc ficom sub pop jo lahf mov push lods mov add add xor push cmp fldcw aas inc jnp setge enter adcl iret mov repnz sub imul push mov xor mov and (bad) ljmp pushf lahf adc outsb add mov push jmp jb test stc xchg cmp mov add pop pop or arpl movsl frstor and cs popa adc rol xlat jnp inc ljmp sti jmp out leave les dec push mov insl aas addr16 sub inc sub mov pop ljmp or sub daa (bad) add shll sbb into pop sbb cld add add cltd xor inc pop in sbb pop jmp inc push sti push das sbb pop dec adc lahf dec mov mov bound (bad) ss hlt jno mov mov push jp adc adc (bad) lea sub gs insl lret xor or divb push cmp enter push mov scas cmpl mov cwtl xor lret jne repnz mov xor or jbe lcall mov cmp ss loope xchg fucomip pop mov pop mov and (bad) ror scas or aas xchg adc in std and ja push aas or popf or dec ss push push subl divl (bad) fcmovnbe push and adc lahf lret shll dec or adc ficom adc imul scas ss xchg xor xor outsl jp in adc fldcw and mov lret add cmp mov and repnz xor adc sbb cltd jp sbbl mov ret push int3 (bad) dec pop cltd jae (bad) xchg mov push push jmp and jnp sbb fimull in pop test jecxz divl or add jmp (bad) and cmpsb push add or dec clc imul push ret push pop flds mov mov into xchg (bad) mov push test cld push fisttpl out das sub repnz jecxz fadd imul xor mov movsb cwtl xchg (bad) sti pop xor data16 mov lods ret cltd outsb xchg mov inc js sbb mov cmp xchg pop aaa imul jae aad (bad) in or dec mov lds pop push je and lods outsb inc in inc pop pop and out ljmp pop ficompl movsb fldl test mov out add mov addl mov (bad) mov sbb out notl ret jg cmpsl in pusha orl xchg mov loope mov sarl stos push icebp cmp lds out cmp loopne mov sahf lahf xchg push (bad) in dec xchg fcoml jecxz cmpsb repz mov add or enter ret decb pop xchg jne loope inc ljmp (bad) jl and inc add out and sub sbb (bad) imul push cmc jge pop out das cmpsb (bad) out mov add xchg cmp cmpl into or stos cmp (bad) pop faddl mov nop clc (bad) es outsb cmp inc xchg stc push into sbb ret fnstenv and in and push test les push jbe aas lret add or mov je test mov or cli movsl push mov mov sub and (bad) (bad) mulps fsubr pop xor jl mov das sub dec mov inc adc es cmp mov xor lds pusha adc pop xchg and fcmovnbe je dec popa mov rcrb and mov add add aas test sub aas daa mov hlt or jns or lret imul fnstenv sub or fwait pop lret lret (bad) jmp mov adc aam nop mov and cmc push mov dec and jmp pushf outsl insl fdiv inc or mov enter cmpsl (bad) xor add out popf (bad) cs inc jmp aam jmp jb shl and xchg xchg sub pop sbb hlt jnp push mov and or popf iret sbb bound xor sub out fdivs push mov and dec mov out push sti mov jl (bad) mov pop jl pop pop fwait add add jg push ljmp pop test mov inc fisubrl pop xchg es cmpsb push mov mov pop out lods out imul sub xchg mov xchg xchg cmp test pop mov xchg pop pop stos insb enter push pop push aaa in xor pop pop xchg insb std push ror jae push add add stos sbb (bad) jns pop test mov push inc (bad) xchg aas xor mov lods push add fwait out outsb xchg popa xchg xchg and inc push xor add sub pop fcompl xor mov repz sahf push outsl pop jns int xor xor add add push test inc popa jno xchg cmp ret xor iret or aaa xchg mov sarl lds out fcoms inc or into cmpsl jae rcl sbb inc xchg lods jo (bad) sti insb test icebp xchg test lcall in xor mov add outsl sbb mov aam inc jae mov and jmp lods inc stos out or add dec out movsl fwait es nop inc xor popf sar (bad) xor iret (bad) and sub mov cltd test mov jl mov sub repz test cwtl jp inc je sub add sbb or or push test sbb test imul call and fwait or clc (bad) adc ss ret ret inc jb or and cli data16 dec add je push lahf cmc push (bad) in lea add ja xor jge jo out popf push cmp push fstpt push in aaa adc js in ret mov jmp xchg pop lock jmp push test jge or dec test loop add jbe,pn popf push cltd aam popf fisub iret push dec xlat int mov cltd or mov sbb insl mov jge push lahf (bad) insb les mov adc jmp xlat mov mov pop mov fldenv outsb enter sub xor out cmp inc dec cmc add push jg das push fwait cltd pop push mov addr16 dec xchg add cwtl pop sbb in xchg sbb out sbb adc movsl dec push inc cwtl dec (bad) jmp cmp push iret call jl xchg (bad) mov xchg (bad) cs pop pop push hlt sub mov cmp icebp nop jge push ljmp mov lcall add ret add jns jnp ss sub rcl icebp insb imul (bad) jb jecxz lcall (bad) pop jle ljmp cli (bad) sub push scas xchg xchg push inc or insl outsl aas jmp call (bad) ret adc sahf push out out add or movsl imull mov or xchg push stos or rclb pop mov sbb mov jns cltd mov sahf inc jae (bad) ss nop dec xchg push mov adc stos mov adc stos stos inc sub mov imul (bad) sldt add add mov add mov mov ja dec push aam xchg aam xor das fistl test jmp or sti xchg push dec xchg test mov mov repnz and xchg mov into fistpll dec dec ss mov xchg sub add jecxz inc xchg push (bad) cwtl xlat rorl (bad) pusha shrl push (bad) xor jnp ss and jge and lods or lcall mov inc lcall ficoml pop pop js ljmp (bad) lods gs repz dec cltd insl sbb (bad) xor scas insb xchg (bad) fwait jg pop pop mov add add add rol lods cmp xor mov (bad) pop lret push out icebp in (bad) sti popa outsb mov xchg je mov dec bound dec mov adc shrb outsl repnz lcall cmpsl add push dec lret dec push bnd xchg and lock lcall add add mov cmp insb cs cmpsb sbb je add jmp push sbb and not int out test sub pop call rcr xchg and jnp add rcrb (bad) fstpt scas push into sbbb pop xchg je mov add add mov movsl adc out out sti add sub jge lea andl jecxz mov orl mov adc (bad) stos mov adc hlt test sub mov sub popa cmp inc std sahf add push arpl push jle sbb ss loop and sbb add mov rcl xchg and mulb (bad) cmpsb cmp mov lret pop jecxz out xor in inc in into lds repz in pusha stc cmp in ret sbb (bad) insl cs pop fstl jl dec stos xchg iret inc arpl neg add jnp mov enter dec insl inc ret or mov enter ljmp sub mov jns inc xchg cld test not cmp movsb popf out mov mov rcrl pand (bad) ret (bad) inc mov sub mov rcrb (bad) fstpt add add mov jecxz repz fisttpll push xchg scas add push adc daa or jp jb mov xchg ss and cmpsb test adc stos ror arpl repnz add mulb add xlat xor stc gs mov add sub popa xor ljmp clc mov add add xchg cmp das lret cmp lods and rcr xor data16 in sar scas push lret pop out cmp out jg mov (bad) movsb mov rcrb mov insb mov enter mov mov mov dec inc aaa xor imul sbb and ret ret outsb popf cmp outsb and add or cltd popf push inc inc popa sahf inc jae xchg insl add fwait lahf mov mov and mov lret insb adc je ljmp stc cwtl clc cld mov dec pop je cmp dec dec aam xchg hlt ret (bad) (bad) pand test jmp or add xchg push dec xchg movsb sbb mov mov (bad) mov in (bad) icebp mov lcall es dec dec add add and sbb adc sub iret jmp adc cli or jns hlt sbb cwtl adc rorl test pop addb add mov test adc xor inc adc mull push movsb popf out mov xchg test (bad) ret aad inc mov hlt aas (bad) lret repnz bound (bad) insl (bad) (bad) inc and out clc insb iret iret enter xor cmp sub add jmp jecxz cmp mov pop fistl notb mov inc sbb xor xchg ja add and push or fldenv leave pop rcrb loopne stos xchg sti mov add loopne inc dec xlat aam xchg hlt lret (bad) (bad) pand add add test jmp or xrelease push dec xchg movsb sbb mov in inc lds (bad) (bad) in repz in mov ss icebp data16 push lret pop push cwtl outsl xchg ja decb pop and pop mov jl dec cmc mov cmp add hlt (bad) xor sti lret dec imul and js pusha sbb xchg sbb adc mov jg sbb mov inc pusha mov fistpll hlt sbb in in imul lret sbb call movsb xor mov bound cmp and ret sti or jmp popa je jecxz (bad) clc xchg cmp ja aas inc addr16 adc insl dec adc orl icebp dec sub leave in (bad) scas mov scas jno mov fistl into xchg dec jo jmp mov loopne sahf packsswb add dec adc mov add add loope or movsb into test jmp pop insb and pop jne jae mov loopne (bad) mov mov pop dec enter movsb shll mov jne xor insl xchg mov pop test push (bad) in rol pop lea sub gs in dec loop dec xchg imul add fwait sub add mov pop mov sbb sbb test mov sbb xchg fsubr in xchg out aad fisubrl dec (bad) (bad) mov mov add loop xchg mov ja jb stos xchg pop lods int lods pavgw mov arpl test mov sub push push lret negb add add add (bad) hlt mov stc scas cld push add cld sub (bad) pop fwait popf and mov loope inc sahf add mov mov leave mov fnstsw add lods into in sub push push aas xor push lret mov mov inc and in shll xor adc sti (bad) xor out add (bad) sub fsts daa jnp lahf add data16 inc mov (bad) in aad inc frstor ja xor pop sub aaa jo fildl mov pusha push xchg push call (bad) aad je je test arpl jne jno or push lret rol sbb or add add dec jae mov add mov inc xchg or sarl mov pop movsb push sbb lock into xchg rclb in stos inc sub and xchg add adc jnp pop jge jb xchg out test (bad) dec loope dec int3 loop sbb mov adc add jo fmulp loopne cmp sbb popa test pop inc aad in add mov or push mov notl xor push push in lods and fwait add push (bad) loopne (bad) mov pop lcall sbb push and add cmp leave mov add add ret (bad) dec cli loop inc and (bad) loopne (bad) aam dec mov mov pop cmp xchg out dec xchg pop lods test out jmp pusha cwtl jp leave jmp sbb ret call (bad) mov (bad) pusha mov and movsl data16 lods jae,pt data16 (bad) cmp adc fadds jo (bad) inc decb push or mov enter cmp add out jmp je or popf stc aad lds xor mov (bad) pop (bad) pop lods dec imul sbb lods arpl rcr test pop out lods out imul sub jnp sbb bound or icebp xchg jmp adc sub jmp bound loope ror or jnp cmp inc mov dec popf lahf adc jbe xor adc rorb shld fistl sbb and ja mov add int shll (bad) dec cmp pop subl in or or sbb leave into push rorl idivb ss idivb sbb xlat mov fdivrl xchg push dec bound sub fmulp (bad) jb ljmp pop addr16 ja add loop int3 loopne xlat mov add in lret into (bad) sub pop (bad) jbe mov jmp and shrl cld push mov lds cmp pop dec in jbe push jp adc sbbl int insl (bad) dec xchg or fistl add add pop xor mov test inc into sarl dec xor leave repnz or (bad) jb out subl xchg in fdiv mov ret arpl cmpsl daa pop push cmp mov aad aaa xlat mov pop inc pop xchg ja inc sub jmp jno and pop sbb repnz dec stos dec insb pop cwtl dec inc jmp cmp push iret rolb stos mov loopne (bad) sbbl mov (bad) fistpll ja ss loop mulb lea mov mov out jecxz jnp outsb (bad) cwtl aam rorl (bad) pop (bad) dec xor leave mov pop inc push mov mov adc stos mov mov cmc (bad) sub and mov test es popa (bad) mov lods inc inc lcall mov jmp add add add and into pusha mov lahf mov adc or or mov lcall (bad) nop leave shl add (bad) xchg cmpsl and push jge xor (bad) scas cmp sti cmp push (bad) and stos mov xor incb push add imul add rorl mov jmp push ficompl adc mov test dec and loop clc inc sub adc mov sub mov mov insb ja lods inc faddp insb mov xlat xchg xor fwait les adc popf mov add cmp sub dec pop xor sub stos int3 in inc mov jp (bad) dec fs fimull jae lcall push mov adc stos mov outsb mov repnz sub pop gs sti ja add loop int3 jmp sub lahf add aas jns into flds sub pop (bad) jb xchg enter out and into js (bad) fld and xchg jecxz pop insl fcoms add mov into mov lret pop insl add and mov cmp xchg stos leave adc xchg fisttp push cmp dec dec adc fsts mov pop (bad) shrl out andl xchg in fimul test movhlps pop cmp xchg add push pop aam jle and ss mov add or sub pop mov (bad) ficompl sbb aas out into push pop and xchg ljmp rorl imul lret sahf sub stos lea into sub add repz sbb fisttp and add cmp pop mov jl push popl mov push es in push leave sub fstps push movsb xor dec sub adc pop aas inc lds add add enter and mov call pop test out sub jmp test pop lea xchg or ljmp mov insb cmp mov loope xor leave shl add cmp add mov sub cmpsl xchg ficomp jo xchg xchg xlat add dec push sub or cmp inc mov sbb andb xorl popa inc add out and sub dec daa rcrb pop xchg xor jbe adc sbb sbb outsb sub and cmp push xchg push mov xchg stc insb sub aad push dec test test sbb mov push add cmpl cwtl enter lds mov xor mov or fcmove or sub mov loope push cmp fadd jge push sbb in or mull pop fwait subb push test repz (bad) add imul add add ror fildll stc mov add sub sbb aaa sahf inc jle and and or sbb adc icebp mov insl xor loope lock cmp sub lahf sbb (bad) push push fistp and mov dec sbb cs inc add add aas int3 insb lret mov jno lods fidivr sbb lcall in xor bound in lahf xchg push mov dec mov push dec stos ljmp jne jle pop out inc sub lcall and loope aaa dec mov iret or sub add add pop (bad) xor incb mov call (bad) test shr bound pop sbb scas push or call xor push push and ja mov xor int3 fldl sbb mov cmp mov jmp jg outsl orb add add mov inc enter hlt inc scas xchg (bad) mov scas in jg inc arpl jp inc adc jne push jg das mov and adc into push movsb dec enter pop mov pusha sbb lds adc add dec jae dec sbb adc dec cwtl std or add lods inc (bad) mov pop iret sbb xchg lret (bad) fldcw cmp enter jae movsl push xchg (bad) mov push jp add sbb xchg rclb in or jae out pop packssdw inc mov imul mov shlb adc mov jg xor sbb xchg je pminub adc icebp mov mov sbb mov or mov or jg fdivs scas push pop xchg jmp inc xchg stos popa in fsubrs cs movsb adc ret lea sub sbb data16 es int3 nop xlat movsl or aas inc mov jae inc sub mov add negb sbb or repz jnp (bad) arpl dec add jmp jmp adc in cmp cli push lods ja mov addr16 or into or xor (bad) push fbld jp sbbl lcall xor push add jb fwait xchg mov ljmp je fsub inc icebp and xchg (bad) rcl adc clc pop sub jne push out test push sub mov loop loope,pn cld cmp mov sahf (bad) outsl stc or lahf mov clc pop jns cmp jge dec int add nop xchg mov sub xor jae,pt aas int3 aas out mov sbb lret stc insl push or adc and cltd subb in insl mov and test aam dec outsl in icebp xchg iret adc sbb sbb push jle fcmovu mov pop xor mov test add add pop mov aam fbstp xor int3 fcmovnu and add jle shrb insb push paddsb stos mov mov nop cmp dec cmp leave inc mov aaa repnz ss pop xorb aad push xor mov outsl fadds rorb sar inc sub ds mov (bad) sbb hlt inc xor mov mov inc pusha sub popa xchg add push hlt in xchg test dec scas es push in inc dec push mov push add (bad) sbb aaa dec pusha outsl mov jbe xchg iret lods add adc adc or add add mov dec outsl aad jae push (bad) dec and imul mov push addr16 add adc aam mov call (bad) jno and dec pop pop ret jmp sbb leave mov outsb xchg stc push popa pop push enter inc mov sub movsl xchg xchg dec fidivrl outsb mov xchg call pop lahf sub (bad) (bad) stos ja (bad) mov ljmp sbb std (bad) mov sub add pop adc shl fimul outsl es or push icebp and sbb mulb cmp sbb add or in xchg mov dec fisttp mov mov rcrb xchg repnz mov cld pop and stos jns sar ljmp notl shlb sub jmp pusha bound (bad) jmp dec les insl sbb dec cmpsl mov add add add test push sbb gs repz shrb rcr push rorl push and in mov mov ja,pn xor xchg sbb enter xor or fstpt aas and add cwtl adc stc mov sar fwait pop in xchg and jge outsl pop cltd gs add pop xor xchg jge (bad) cli jl (bad) ljmp das sub es jmp cmp fucomip and or ficomp popf (bad) xchg pop cs cmpsl push add pop movsb jp jmp jmp arpl dec stos scas mov xor ja adc roll mov add jp shll mov cli inc imul pop out lock inc mov xchg aas mov fistpll loopne xchg add and mov fisubrl mov movsl add xchg fdivr test inc lock mov ss dec std es add xor dec sar enter add add add pop and aam cmpsl das (bad) inc jns loopne cmp aad push or push pusha lock and add sbb call cmp lcall sub push pop push mov fadds dec add pop mov add push push idiv dec cli les mov je xor cmp sbb add inc loopne sbb pop push push mov adc lahf (bad) adc xchg subw (bad) js fdivl cs mov add and mov dec into ss sbb pushl mov test inc fdivs push mov jmp andl add sub lds sbb xor popf addr16 xor jp xchg adc fldcw and in aaa adc jnp cmp mov mov aas pop les pop fisub sbb int3 or pop inc in sbb rorl xchg jecxz sub pop fisubl data16 pop ja sar adc inc decb jge cmc mov add (bad) xchg lret (bad) insl xor pop inc dec push iret mov sub gs outsl xchg cmpsl aaa jnp sahf fwait pop jecxz mov lea xor mov (bad) (bad) xchg leave sbb loope add (bad) movsl fdivr xor fbld lret inc jnp lcall ja sub lods mov mov add add inc mov or xor pop sub inc adc (bad) jnp loope div nop int3 shrb mov cmc xchg out ljmp cmc (bad) jb popf cld hlt mov in push movsb outsb push push inc cmp loop lahf ficom ror frstpm(287 add jb,pn (bad) pusha adc push add add add jge fimull mov (bad) jo in dec data16 setnp out xchg (bad) xor lods mov out jo ds inc add inc push push xor push push push dec xchg push sbb dec xor lods sbb out das or pusha cwtl push mov repz sbb pop pop add nop cmpsl repnz popf lahf xchg les add orl or call inc (bad) fadds movsb or std sbb rclb mov dec and sbb neg push cwtl dec js mov (bad) inc ljmp mov leave std rcll add (bad) push in adc pusha out popf mov add jae outsl push add fyl2x xchg sbb movsb inc jg test fdivs push sar mov ficoml mov mov repz push in into jmp gs in test cmpsb mov int3 pusha xchg xor lods xor xchg fistpll aam inc nop gs aas scas adc (bad) test ftst fs (bad) sub ja add inc (bad) jae stos push inc rorl or cltd inc mov mov jo (bad) je and lahf mov sbb jg nop xchg mov dec insl rorl jb adc int3 cltd lods sub les sbb mov sub into into xchg cmpsb (bad) out push sbb icebp sub xor dec cmp add add lret loope pop pop cmp push dec aas inc ja jo add cmpsb push mov aam lds jl xor ret jo dec out out cltd jno imul (bad) test ret ret jae gs lock or xchg mov test pop mov nop xchg sub fildll add add cmpsb (bad) hlt mov sahf dec push test inc jnp lcall sbb mov mov or notb cwtl stc adc xchg inc out push cmpsb sbb notb loop xchg mov (bad) loop and mov mov lahf push cli push cmp add inc mov add or cmp and es sub or sub jmp jns cmpsb xchg inc add vpavgb jmp mov mov rol hlt std sub mov aaa adc imul add pop sub sub leave jle add fisub jp fdivl aaa add jb xor adc dec push inc sub mov mov push xor js (bad) dec mov push test das test push aas sbb xor mov jbe lock gs aad mov or or inc mov xchg mov movsb dec jae add and fistpl out sahf rorb pop and movl cmp scas pop xchg jge lcall mov imul in sub scas mov (bad) mov dec adc js test mov jecxz or mov sbb xchg cmp ja iret ret jl mov push mov and jecxz add (bad) hlt std mull sub adc ret mov push push jno clc sub mov jmp mov jle je xchg (bad) cmpsb (bad) sbb inc (bad) dec movsb adc fistpll or add add add add addr16 dec sub ret mov incb xor pop push dec gs xchg pop aam and xchg xchg sub out push testl popf lahf push clc push pop es adc jo inc mov dec mov rolb lret pushw lret lea es movsl push xchg (bad) add add dec pop es or xchg jmp cwtl mov dec je inc and or inc xor notl dec xor pop add cmpsb testl sbb mov in push rcrb mov repnz lods or outsb test pop mov decl or add jbe sub loop ljmp xor shr and outsl test add stos jbe clc inc cmp in ret sbb xor adc mov mov mov add aam lods imul adc cs (bad) xor mov add push sub fstl das sub add mov enter cmpl mov or pop and push inc test xchg dec push sub jge repnz inc ficom insb mov and loope adc and test jecxz sub add add data16 fisubrl cld sbb in fmull sbb or inc sahf mov int divb mov push leave and cltd movsl mov pop dec stos inc mov (bad) aas in mov insb (bad) sub clc jne imul xor push ret cmc or sbb insb clc mov add xor adc mov push (bad) std dec rcll das nop cmpsb xor (bad) adc lahf mov jp fcmovnu push aaa pop cmc cltd add mov xor or enter ljmp xor rorl sbb stos pop stos lods outsl popa sti push or add pushf iret jo mov ficom jns xor js and clc mov push divl out jg ds lcall cmp jl pop repz sbb das mov push fcompl jl xchg jns icebp mov test (bad) cmp (bad) call inc adc mov call xchg add stos lret rorb fstpl cmp sbb ljmp add jo mov movsb cli push (bad) cmc nop nop mov jmp pop cmp sbbl arpl into rcll mov aad add inc lret movsl adc mov add add sbb dec cmp mov add mov lahf sbb xlat repz sbb movsb (bad) jecxz or popf lahf xchg pop pusha (bad) insl fdivs and inc pushf cld js mov inc aad push push xchg inc cmp pusha pop arpl and jae int sbb add jns dec adc mov mov jno inc pop fwait negl xor jo push lret mov mov in add add stos cmp addr16 das dec sub mov fisub xchg pop rorb test shll sbb add xor add es sbb lret mov cmp pop (bad) ss push div inc (bad) aam xchg cmp es mov jmp sbb fsubrs cmp test xchg mov idivb xchg jae mov or or cld push leave mov into xchg dec mov xor les add add push ss pop (bad) sub outsl repz dec in stos fisubr clc jae sub loope xor mov pop psubsw dec mov jecxz or push cmpsb dec stos push sbb jg rclb adc aam insl pop mov test (bad) aam out add sahf (bad) fisubrl cmp lea xor sahf bnd or xor adc jge test je push leave dec (bad) rcrb fnstsw mov xor jo dec sarb adc sarl and jbe add mov and pop rcrl mov push mov fildll cmp (bad) jmp imul xor dec aas jno jnp xor scas (bad) push adc jl cmp jecxz mov xchg add adc xor dec and and lock mov stos or or dec negb movb mov pop js gs scas and add add add add lahf sbb xchg iret mov lods mov cmp (bad) mov stos jmp or jo aaa nop mov inc ret sub pop out orl into jp xchg das mov insl jbe cmpsb lds xchg icebp dec push xchg loopne hlt fdivs and std js das cmpsl lret cmp lret add cmp fidivrl iret in push or arpl lea cmp and sbb (bad) lcall cmp ret xor push or jo push mov in mov dec push lods mov in das js popa rol push ss fs lock setno add fstpl or idivl or pusha sbb pop mov out cmp pusha xchg (bad) lock jbe lock push pop divb sbb inc push cltd or or push inc lea add dec sbb jb pushf (bad) jp push lods (bad) push xchg and arpl jae mov add aad mov jbe test int jecxz push leave mov inc aad gs insl mov mov xchg or mov jnp pop or mov xorl dec push add inc xchg push push sbb mov jne pop arpl fsubrs xchg mov cmp push push cmc nop scas cmp cmp jae out fstps cs fsubrl popf pop jnp nop cmc xchg xchg xchg cmp lahf push imul cmpsl es out xchg mov int dec adc add inc fs ja cmp mov in xor lcall sahf adc inc adcl js add pop insb jmp decb cmc in xor enter mov movsb std xlat (bad) fist pop xchg jle lock outsb and xchg dec xor xor aas (bad) sbb mov jg lcall out jg sub and movsb push add stos mov jmp cmp insb push inc push xchg add add mov cld adc dec pop mov clc mov mov dec adc es push leave fwait rcl push data16 cmp jns add xor mov cmc std cmp out das test xchg mov cmp and outsl test pop adc pop pop push das test adc add add add lods lea aam das xchg insl leave mov adc pop aaa mov push xchg ss aam jp mov or in lods cmp xchg sti pop mov loope or sbb adc je movsl aas gs ret add cli lea ret outsw adc adc add xchg inc icebp adc push mov xchg xchg xor jno negb pop lea enter xor push dec mull sahf pop jle xchg push pop push and jp stos push pop out (bad) fisubrl xchg push call popa clc dec loop inc scas mov xorl clc dec dec imul adc scas mov lahf jmp add add mov inc loope andl pop in jae mov cs (bad) jp cmp roll cmp fistp adc adc enter xlat pop fucom scas mov xor repnz sbb add adc inc xchg cmp xor xchg add jl sbb push in subl mov out xor sbb mov push fnsave jnp mov push idiv push lea push (bad) jp mov dec xor xchg sti dec data16 es adc jne sbb mov pop les add add add xchg in adc pushf ret lods ss or or push out pop push cli out push lds cmp inc push mov lret and les sbb popf jmp dec faddl test arpl adcb std sub cmp sub push cmpsb lods and test push add push xchg sub xchg je test mov mov inc adc push cmp inc mov or (bad) lods push cltd jl,pn in outsl cmpl inc movsb or seto out int push lea movsb push leave mov subl sbb (bad) arpl add cwtl jg outsl adc fimul mov pop push out push and aad xchg loopne or xchg pusha mov cltd mov loope popa mov lds lds pop (bad) insb in jae sub ja xchg and ljmp ret rclb or cmp jmp cmpsb jne mov (bad) fisttpl xchg pop adc cmp sbb adc fildll mov ret or aam mov pop sub lea mov js xchg mov movsb orw jge leave cwtl mov mul push cmp lea jp cmp xchg or mov mov scas rcrb sbb mov ds mulb cmp push in dec (bad) pop xrelease and pusha test dec nop inc outsb jp ror scas mov aaa (bad) mov lods mov xchg bound xor stc out jmp divb sarb inc pop test lret mov xchg mov sub add add sar xchg xor adc mov loopne in dec push mov xchg sbb and jecxz sbb popa ficoml ljmp mov fisttpl outsb mov sahf lcall retw mov clc js shr fwait cld dec cwtl mov inc push push xchg mov icebp ljmp adc adc mov call add cli lea sbb incl or dec aad aam inc mov aas jp inc xchg xchg mov sahf inc push mov lcall ja in rorl pop dec dec sub add dec ret negl or dec cmp push fwait sbb (bad) and fsubrl add fcomp mov cmpb imul test xor scas outsl fisubrl mov int mov sbb add std add out mov or dec scas jae jecxz cwtl sbb adc cmp xchg les sbb (bad) jne mov aad ja and xchg in sub dec mov xchg idivl dec fisub icebp or sub fstpl sbb xchg shrb push ss jno dec loop pop addr16 cltd xorl jnp xchg (bad) mov dec sbb adc jecxz test les jb mov and push adc fiadd adc mov or jmp (bad) dec fdivs sub sbb jae outsl insl fmul imul push pop jns fild add add lods ja jb (bad) ja sub or inc popa or mov lea repnz std test iret add cmp int les lret xchg mov loope add add mov xorb mov fsubl decb add shll sub inc fwait mov ret ds leave mov es hlt lret aad dec aad push dec add xchg xchg mov repnz push and xchg mov mov xor lea and or push subl aam icebp dec sub shll push imul add push cmpsb mov es jne leave mov xorl pushl sub jmp (bad) outsl das push imul arpl cltd rol aad or or mov cltd out and (bad) hlt imul xor xor push add stc jno xor jo dec lea xor add push add incb imul pop inc jb cmc xchg pusha mov xchg pop or nop xchg aad lock in mov jecxz add push cmpsb xchg int3 mov ret mov push mov (bad) js inc stos clc jmp ret mov gs clc in cwtl fldcw pop add fisttpl dec sbb or or push loopne lea sbb repnz sarl fsub push dec xorl sub xchg xchg inc icebp or dec and jo mov das sub lcall and fs mov test mov inc add cmpl icebp mov repz jmp shl adc out cmpsb xchg jb sahf cmp lahf xchg pop mov neg pop and (bad) sub or into leave test push ds sub sbb inc rcrl sbb fwait out mov fmuls inc out dec inc fwait mov ret ds fsub adc jl add add xchg int rcll stos xor mov sbb test shrl and jb pop aaa adc push (bad) imul push daa or aaa in fsubl xchg jp addl or insb std test jb out bound je pop test mov jne xor popf cld cmpsl je sbb sub adc push es cs fsubrs push loopne out and jb,pn or ds mov mov adc daa mov dec push rol ret mov jbe lea pusha fldt add fcmovbe in das sub jb scas imul add ret pop lcall push push cmc loop sub (bad) pop jle in dec xor xchg sub mov dec negl neg xor push mov lret sar std dec sbb (bad) stos sti xchg inc mov pop jbe (bad) sub push xchg imul fnstenv or pop cmpsl add push sarl fmulp jl test inc lods inc add fistpl loopne outsl aas lret cmp mov pop test mov out neg and imul mov pop loop movsl rorb fsubl or loopne mov adc iret add add mov lods movl insb lods nop hlt cwtl mov mov inc (bad) sar xchg cmp and pusha push cmp and shr je lods jge push cmp dec xchg and sub sub pop jmp jns lcall sub aam sarb sub add jp add add sub lea xor addr16 add ds sti stos pop mov pop movsl sbb daa and call pop adc inc push and int xor bound mov (bad) clc inc mov sti jecxz push repz imul add pop out xor cwtl lcall inc in leave sub pop lods setl insb adc mov add jbe push lahf xchg dec mov nop mov inc (bad) popf dec out outsl jne std int out das inc inc add int3 xchg inc add mov imul testb xchg jp mov add xor add mov out lods or cmpsb (bad) cmpsl mov cmp xchg lods sub (bad) ja (bad) jp mov int push push aas inc mov iret push (bad) (bad) outsb les dec inc add cmpsl jbe push sarl out xchg mov mov mov add mov ffree mov push cmp incl in orb dec (bad) jo mov push in ds mov fisttpl insb pop adc push jp fiaddl stos (bad) ror jb fistpl pusha adc bound xchg (bad) js push sub (bad) push ja add loopne fwait cmpsl xorb jbe aas sub add clc hlt popa and xor loopne arpl jb es xchg and (bad) add add je test xlat sahf sahf hlt test (bad) xchg push mov nop adc pusha cmp in jnp int3 cltd push sbb jl mov dec stos pop movsb into pop jle mov pop xor sbb ds mov fnsave xchg and loop mov push push push jno xchg test lret inc xchg pop push sbb in das mov sbb shll pop jbe cltd sub enter jae ss fcomps repz push int xchg add ret lea les leave (bad) les jle iret xchg inc cmc outsl out loop pop or (bad) arpl andb sub mov imul imul andl or das mov bnd add mov insl mov daa or stc cwtl jns mov add add in test adc mov mov lret stc xchg cmp adc mov sahf ss ds xchg (bad) lcall icebp ljmp pop scas xchg cltd jne fisttpll aaa jecxz es xor daa rcrb fildl in nop fdivl add cltd pop mov jl leave in cmp addr16 push mov inc aad or sub xchg mull push fsubl push hlt push sub dec add rolb mov in insb and (bad) mov out repz or sub (bad) stos jbe mov arpl (bad) jecxz adc stos jle add test cmp lods xor cld dec mov adc xorl inc jb jecxz cld dec cmpsb mov inc cmp aam nop sbb stos cwtl mov sub fistp lods xor cmp nop mov in pop movsb pushf or mov dec pop sahf pusha pop aas sub icebp in xchg imul add add add xchg pop pop cmc adc dec (bad) mov dec int3 cmc xchg fiaddl iret and js inc mov cld mov lahf mov lods adc inc mov in sbb popa mov lock mov mov rorl push outsl xor cmp icebp add adc mov add xor xor xchg mov stos jmp or jno aaa sahf dec (bad) and fdivs bnd notl jo leave xor adc fstps fist cmc jnp add dec das jb lret ja add jne cmp aam xchg (bad) cmp add inc (bad) mov add push ss cmp (bad) test out fbstp movsl dec or popf sub dec nop jbe jg rorl xchg (bad) mov mov jo addr16 cmpsl adc sub or jne aaa in xor cmp inc sbb or (bad) lret (bad) mov movsb sub mov jmp cld push sub aaa pop fwait adc jle stc pop leave and jmp sbb (bad) xchg sub dec or mov pop ljmp clc push push fidivl sbb sub sub inc imul add add pop pop sub bound xchg dec bound (bad) fistp (bad) xchg mov mov jg push xchg fwait jno repz js ret mov out dec into (bad) lretw push mov rcrb icebp ds cld sbb pop repz inc arpl cmpsb (bad) and push pushf int3 cmc lahf fidivrl push add sub (bad) js inc mov cld fwait sahf mov dec lahf mov std inc pop adc bound lds lret loopne sbb icebp popa sbb dec cld insl mov gs mov dec rorb (bad) xor jns fmull aad lods nop xor jmp add jno iret adc addl inc sbb or (bad) lret push cs dec pop or mov mov pop das fisttpll xor push call nop cmpsb subl push jbe imul push push mov xchg and add aam sub insl mov fisub mov sbb push inc es ja dec mov loope adc xchg decl gs xchg sahf push cmp (bad) xchg call adc mov fcomip sub fs push mov in mov mov cs or pop mov xchg sub cmpsb test add sub jecxz lods or cmp and jle std stos (bad) cs rclb mov hlt shrb mov and cmc mov xor negl pop into push xchg mov cwtl adc je rcrl dec xchg int push add rorb mov call sbb dec push int3 pop cmove add add rcrb jae (bad) push das sub dec xchg sbb adc cmp push lock fwait test repz jle pop xchg or xchg dec mov pushf adc stc pop xchg test cmc cwtl mov (bad) mov pop adc jge mov subb add inc dec cmp and cmp test repnz cld outsl add mov push xchg ss test out push inc sub and enter sub xor loop push lcall jb out das js push out jns jb xchg cmp and and push and jns test mov push jle cmc aas pop add out jns cmp icebp sub adc jg cltd std sahf fdivl and mov dec sbb cmp inc xlat or int popa xchg sub lods inc ret into jne shll repnz cmpsl jb push sarl loop adc inc jl nop mov pop mov loop fs cmpsl inc arpl xchg pop ss cmpsb ds lret shr cmp mov in mov imul and jne mov jg sub mov cmp jecxz cmpsl lret popf lahf sub sahf add push (bad) add add add jge call mov jns mov in (bad) sub ja es jne mov (bad) aas lock pushf xor mov inc sub add arpl xchg dec inc xchg std xor push xchg stc dec add xchg xchg xor pushf jae pushw repnz lcall add add adc lret jmp into gs xor repz add mov movsb repz pop aad (bad) jg mov mov jmp inc xor cmp adc sarb sub jbe aas xchg in sahf sbb fwait and sbb aaa inc outsb dec dec int test ljmp sub je adc sbb inc (bad) (bad) xor add insl jne std mov jnp (bad) cld jns out cmp mov lret pop movsb or mov inc sub mov mov and push add add (bad) test ja dec cltd std jne cmp (bad) rcll add and or subl int3 in push shlb cmp jnp add sbb icebp popa add lcall in aam inc cmpsb aam xor cmp dec fsts sar (bad) xor js and sub jnp pop jge hlt jae js mov xchg dec out sub iret sbb sbb (bad) fsubrl push inc in icebp ds sbb pop out dec inc (bad) jae add adc push or mov push ja sbb fstpt add add add cmc sub add add mov cwtl ljmp sub pop cmpsl (bad) into push (bad) xor jb cli push flds or lret inc push popa cltd pop xchg fs lahf jge xor int nop jp mov sub mov popf fsubl fdivl and jno dec pop inc or rcrl sub add stc notl cmc pop out dec xor xchg loopne int3 js mov sbb mov repnz xchg int lret fistpll in jp fxch pop test addr16 push popa imul mov sub fwait gs jg out adc sarl inc lods out cmovbe add add scas or push lret mov mov (bad) sbb xchg std or push mov popa sti test push notb repz jnp and xchg jle pop pop sbb out push sub mull push sbb int mov jmp (bad) out (bad) mov add add inc outsb jp ds fs loopne jo push mov aad int3 sbb mov mov or sarl mov ret jge nop cld adc int3 xchg add inc cmp clc push cmp sub inc aad dec cmc xchg mov lcall je imul inc mov pop loop movsb sahf lret adc insl clc mov cmp cli mov xchg dec and stc or sub fsubl jbe push addr16 lock scas or std gs sub jle mov sbb stos cmp cltd jle add sub cmp xchg add mov xchg jne je jae lds sbb gs das repnz movsb dec mov dec cmp outsl out mov pop into stc mov jg cltd test or mov pushf bnd (bad) mov xlat aaa stos mov (bad) in scas pusha mov sbb sbb (bad) in adc dec nop and fs adc cmp pushf dec add cmpl jl stos lds mov cmp ljmp cmp jl pop adcl out ret mov flds xchg in pop push lods cmp lret loop sbb pop xor jnp outsl insl test add cmp lods (bad) sub loope icebp int3 pusha mov jae test leave sub outsb clc fcompl sbb fnstcw out dec push lds add jecxz xor sbb push jge (bad) adc out popf mov iret lahf sub push imul push stc cmp cs bound js add cld add inc cmc icebp sahf sar (bad) repnz xchg sub pop mov inc mov sbbb inc xor push iret pop adc aam jge cmpsl iret (bad) outsb cld and aad loope jp nop sub clc mov pusha mov fcoms add add adc cwtl rcrl pop popf xchg shll mov dec or add test out xor pop xor push (bad) cmp cmpsb cmp push fcoml enter insl add mov push cmp cmp (bad) fild enter sub cmp loope add add or lods xor sbb ret adc pop inc xchg andb dec cs sbb pop and ficomp repz stos gs xlat stc loope mov mov fsubs rcll imull xchg inc pop push mov fdivrs (bad) and int3 sub xor hlt rolb add (bad) hlt dec mov lds fistl mov fcoms fwait ds test add push sarl lret and jo push in jge jo xchg cmp push or xchg stc inc fmuls (bad) sbb pop pushf inc mov pop test ss cmp aad jmp add xchg xor lods jge inc xchg fucomp push push pop mov mov rolb (bad) movsl push cltd lock bound inc cmpsl lret hlt push mov xor sti or xor ss cld test or (bad) loopne push fstpl sub cmp shrb adc dec (bad) mov add add push xchg (bad) int3 stc mov sbb pop xchg int jge in dec fsubrp das jbe jge jns int jae fs mov iret nop cmp push dec cmpb into or xor mov cli pop cmc or dec outsb rcrb lcall fidivl sbb add add dec ret mov loopne jp adc inc outsl sbb daa mov xor mov hlt out add aad mov cltd imul lcall mov dec data16 scas (bad) dec int sub subb sub (bad) xchg je cmpsl push dec stos xor dec ss cmpsb outsb add dec out dec lcall cmpsb popa fistp cmpsl fwait clc sbb sub out jg pop pop cmp xchg fldenv out cli das xchg rol leave aas shlb dec insl sti aad mov insl or lds mov push lahf push sti xchg dec decl daa cld insb pop push outsb sbb add add clc pop fimul sub (bad) cmc int3 ror ficompl (bad) ja mov push leave sub xor mov nop jbe mov and jne sahf dec cmpsb cs idivb test dec ss push cmp dec (bad) cmpsb popa fistpl cmpsl mov xlat insb or or insb jg pop pop cmp xchg stc test or or mov push mov mov sbb enter (bad) adc xchg stos mov (bad) jl jo lret adcl outsl in sub mov loopne sbb fsubrs jno stc (bad) dec cmp jne xchg sub xor inc mov add in mov add xchg mov dec xchg push push ror movsl adc cmp jno loop sub cmp jae mov jns jle sti fsubl xor pop pop mov xchg jb add or lea mov ds out jnp jbe aam or out pop push add mov push mov adc xchg lret movsl pop lods xchg dec lcall sti push mov inc push fcomip sbb inc in mov fmull ja xchg (bad) inc nop sbb xchg or and movsb insl daa mov or xchg mov rolb mov and sbb add add sbb push cmp data16 lods cwtl cwtl scas pushf call adc aad xchg xchg std popf pop lret cmpb test jmp data16 inc jno in sbb pop mov sub das sub jno scas pusha addr16 add sbb aam add xchg jb sbbb inc cmp cmp xor int3 stos and fildll stc pusha or test dec push jg fbstp shrl ret loopne shr (bad) popa cwtl xchg fisubr xor push cmova test or (bad) scas cmp loopne push pop push xor add push mov jb lret imul xchg cwtl popf in xor dec lcall or sub gs mov clc outsl sub xchg push mov adc ds enter (bad) mov dec (bad) shrb sbb repnz jl pop ljmp (bad) (bad) jae mov dec sbb lods popl add add mov pop stos fcomps mov push aas cmp test mov into mov int xchg cmc jecxz loopne test mov loope or add ljmp inc pop jge add push addr16 arpl mov ss sbb push sub and (bad) mov and add add sbb add mov pusha jnp mov (bad) outsb sbb insb cmp xchg insl xchg adc sbb sub rol push mov mov stos js cmpsl ss aad pop pop xor imul pop add test ja imul sbb jb popf stos pop dec or and pop enter jb into push jg ficom inc ss inc aam sbb sbb jno out fisubr dec in dec adc push leave in stos sbb ror cmp xor xchg jnp mov jecxz mov mov add add inc xchg in add sbb rcll mov cmp icebp lds and mov mov pop (bad) cltd mov fwait and xor pusha fildl iret arpl mov inc (bad) dec out outsb xchg push arpl fwait mov xchg dec mov mov call inc push add adc push mov das xlat jb cmp in lock orb xchg ret cmp test mov scas sub (bad) xor mov lods mov mov sbb ss pop mov mov addl push pushf clc pop into or mov add add test (bad) jnp rorl push out cmp (bad) jmp xchg add out fstl sbb mov (bad) js xor inc ss push andl add loop adc and ret mov (bad) fidivr xchg stos jae rorl jnp hlt inc mov add mov add fadds aaa jecxz js cmc iret in dec pop bndldx outsb push jne popf imul scas mov enter sub loope int3 add xchg out pop xor (bad) mov mov push in xchg subb push xchg sbb lods and push aaa mov (bad) xor insl sbb mov popf add lds and push imul imul insb pop dec and mov mov xchg iret sbb lret popl or and cli orl out int3 mov lods mov nop mov inc sbb sahf jo and mov nop (bad) jg add add and imul inc sub ss and and mul loop lret lret jecxz inc xor or lahf xchg out cmp cmp test mov xor xor push jns xor popl lret mov or notl or and push fwait push addr16 push add dec jl movsb mov inc sub and js loop mov nop arpl test sub add insb mov ss xor pop add ret sub xchg ljmp pop xchg adc xor aas movsb inc in (bad) in test push sub add (bad) insl mov in imull xchg int3 inc inc inc jl mov xchg clc int3 ja test sahf (bad) mov cmpsb mov in lods into or repnz in xor sti js (bad) add jge stos scas inc repnz or xchg aaa mov lods ret pop xor mov add lcall xchg leave cmp pusha fsts (bad) cmc xchg repnz xchg mov (bad) xor dec sub jno mov jecxz movaps out mov jo sbb bound (bad) add jge stos lret inc mov or cmpsb mov xlat xlat sub data16 add xchg push (bad) (bad) outsb mov lock add mull pop fwait cwtl pop dec (bad) mov lret mov js je push ss (bad) call push in pop pop inc (bad) pushf rcr pusha shrl mov in aaa cwtl mov (bad) mov lods sbb adc sub push aam add mov mov xor jmp cmpsl jbe rcrl add and (bad) inc push jns mul xor jae cs sbb or mov ficomp pop sahf pop sbb xchg dec sbb ror add inc add cli jle mov fxch es add mov stos aas xchg loope add cmp bound and insb jmp sub mov aaa cwtl (bad) outsl daa xor jg mov fs nop test pop aam cmp inc hlt pop pop imul repz inc sbb lea out sbb popf lahf (bad) cmp add xchg push rclb inc add add (bad) mov xchg daa cmp outsb test (bad) rcl push jg sbb sbb sbb jb xchg dec jae jno add xor cmp das fidivl dec bswap ret lds xlat out popf adc not or dec into call andl movl add add dec xchg jmp lcall xchg pop xchg dec adc cmpsb sbb and push jb int shrb lds mov mov jp lahf mov pop inc push outsl mov rcl or or dec and imul fnstenv sti and mov xor add int inc ljmp sub repnz pop fs cli les lods cmp push cs xor add das mov adc sahf mov sub mov mov mov sbb xor sub insl push insl mov cmpsb add lods out xchg cmp fwait jo daa add add cmp repz js aaa push ret jecxz adc js mov mov sahf mov and lods push fwait xor in mov neg sti mov int lods inc inc ljmp sub mov inc pop mov mov call sbb add add push add jnp cwtl jns mov aad adc pop sub pop fbstp adc dec sbb pop out pop mov adc lret lock xchg xor jle push imul imul xchg stos sti xchg bound pop pop pop xchg ret add add jae adc movsl or cmp mov repnz mov push leave and je (bad) xchg rcr mov stc xchg out adc data16 xchg jnp xlat popa outsl repz dec out sub xchg addb scas negb clc daa pop rcrb mov test adc loope push push sub andl imulb lds mull mov lcall mov xchg sbb ja les dec into and das jb leave inc xchg xor inc ljmp sub pop jo dec add add into in pop inc inc sar scas addr16 xchg mov cwtl fisub fsubrs add sbb imul push inc out pop sahf sbb (bad) popa cwtl testl pop xor adc push pop add jg fwait add push jg push stos js or aaa inc sub pop test xchg movsb fs test arpl and fwait out es stos iret sbb sub nop jmp push or das outsl mov popa test push xor inc fldcw mov ljmp dec lret adc out jg testb mov mov test rcrb loope add sahf notb mov bnd adc pop sub dec test and dec mov mov loop or dec cltd std movsb push ja ret pop sub inc pop jmp movsb push mov mov (bad) lods pop mov cmpsb and aad lea sbb outsb jge pop and adc seto add add sbb push dec mov adc pop les jge mov push (bad) mov (bad) xor das pop rcrl jne jg fwait ljmp xchg icebp xor xchg addl jp mov imul mov pop std dec rcll sbb in jb in out ja add xor and ror adc inc fidivr es aad lods mul loope daa fisubrl jo jae stos push xchg rorb inc fistpll add mov aad pop jo dec xor (bad) sub in jecxz xor pop cmp leave movsl gs mov add sub xchg add loopnew or cmp xchg mov pop xor aaa in shrb or sub dec test loopne out jb mov adc add pop nop jbe jp popf lahf sbb mov daa int push sti sub inc lret adc or sbb cmp fnstenv jbe xor ret pop lods push push add mov jbe push mov dec in out xor xchg and add or mov stc imul dec lea push lret movsl (bad) jge enter out sub xlat pop mov cmpsl (bad) cmc lcall (bad) ja pop movsb dec enter jb push insb mov push shlb pusha add (bad) jmp scas dec xchg stc (bad) stc push mov inc jne xor push mov daa scas fcmovnbe insl fiadd repz lea push or test or dec adc jnp dec xchg sbb loope into lahf dec lods mov jg pushf jecxz ss fldenv insl lahf into xchg dec dec or jb push decl repz adc jmp fcmove cltd mov jae ljmp push movsb inc inc (bad) je or push adc dec adc mov mov repz test test cmp scas and sbb jae mov add ret or sarb mov (bad) jl xchg ret loop add (bad) int3 incl add pop fist rcll in hlt frstor cmp and mov cli push pusha arpl jb addr16 popf mov mov pop jbe incl or cmp lcall aam inc sti (bad) arpl fild fdiv mov push xor cmp sbb pop cmp dec or add test jle lock scas sbb xor mov (bad) sti sub pusha jg push add pop imulb push aas ja movsb mov out inc push push push in push and adc (bad) jp or mov arpl popa in mov imul subb add icebp mov mov mov push and xor pop xchg mov xlat adc arpl push and inc lcall inc push sub xchg or sbb push jl ret aam insb sbb out js shl into fildll mov mov hlt dec jb xchg cld xchg pusha inc mov (bad) stc pop mov xchg incl repz add mov in lret (bad) subl sti int3 jl pop in push push mov outsl mov xchg arpl inc sbb inc xchg popa add sbb (bad) dec imul dec jo xchg jbe movsb pop repz ss fisubrl push sub mov inc addr16 dec arpl lea cmp aad jmp sahf cmpsl outsb aad lcall icebp sub imul push aam push jnp inc aas js push andl (bad) daa repz xchg mov pop test sub aas xchg in fcoms mov xor ds (bad) sbb add jb test jl lods xor push lret lret pop int3 in cmp push leave les popf fsubr mov dec or rcl shll xchg add sbb jnp push nopl enter addr16 lods not cmp shl loope inc pop xchg jl repz xchg push push pop pop mov mov add dec dec sub dec mov xchg std and ja sbb lcall scas and dec mov movb mov mov mov jae cs ds adc icebp insb jo mov or sarb pop das add add xchg mov push xor cmc lea dec jecxz pop ljmp imul xchg pusha cwtl mov (bad) repnz insl pop (bad) out jns and jge dec dec xchg insb push sbb mov bound (bad) in and orl es sub add add add mov pop enter jae loop dec inc jb or push mov jle pop ret push leave hlt push mov (bad) xor out cmpsb add pushf fwait mov xor sub cmpsb shr iret cli add add out lret arpl pop cwtl lcall add jp xorl jl jno pop arpl jbe movsb loop popf lahf sbb (bad) push insb (bad) js divl cmpsl add lret jp pop loop (bad) in sahf (bad) push repnz lods xchg out and jnp lock loopne or lret ljmp jle lret jbe add sub fsubrs dec dec mov xchg stc add xor pusha (bad) mov ret movsb sbb jno pop adc in push mov sub popf pusha ljmp xlat xor jp sahf sbb call (bad) inc xchg push sub xor xchg mov (bad) cli pop repnz cltd cmp xor add adc mov xor add mov sahf add js mov les and jae out sbb and xchg in lods push fiadd jg test and inc cmp addl call sbb or aas xchg add repz imul ret loope lock (bad) dec jge imul or (bad) loopne insl out insl popf mov dec or sbbl jge fnstenv stos jecxz nop sbb mov sbb les aaa ds mov or ret sub ja push jmp fdivl idivl push add jp cmp push adc inc cli lea pop movsb add repnz aas mov mov mov loopne xchg aad dec imul jg jo cwtl sub fwait mov sub into into pop push mov pop mov xchg cwtl jp int3 inc lret shlb fldt mov mov xchg (bad) mov add gs jecxz out jg xor insb add dec add xchg cmpsb mov mov pop test xchg mov sti inc (bad) adc mov mov mov sbb lret fcmovu lock pop repnz dec enter push mov bound xor gs lds jecxz lods mov lock xchg js sbb add add add sub fidivl jl adc subl shll pop cld idiv pop or mov jmp test adc push std insb cmpsb xchg jae xchg and lahf sbb lcall repz pop inc les inc push push xorl pop popa scas sahf fiadd fcmovb (bad) push fwait outsl mov repnz cmpsl (bad) out push rcl addb (bad) out or repnz jae xchg xchg bound jno inc sub add xchg loopne std mov mov mov (bad) aas xchg gs dec enter jae mov bnd hlt shlb add (bad) jo sbb xchg lock shl dec push pop (bad) cmp bnd inc cmp push call out (bad) mov stos and imul ret and js xchg lret das and jge repz sbb sahf adc dec sub (bad) fsubs add add pop pop cmp inc pop mov fimull (bad) pop out mov and out les test mov (bad) loope inc aam add add mov cltd sub gs pushf mov ret outsb inc xor jo sub and dec pop jae push push ja sbb std push in mov push add add pop test sbb stos jbe push inc push push pop mov mov fisubrl push add mov mov jle movsl addr16 inc sahf mov sub rol in dec iretw cwtl jbe movsb xchg xchg repz cmp pop cmpsb iret loopne xchg and stos lock cmp ja add mov add add xchg adc mov jecxz pop les sbb (bad) fmuls cmp (bad) lods cmp xor fstpt cmp jae inc data16 cltd (bad) mov mov lret and adc scas pop push in int3 mov gs imul sbb stos test xchg or ret bound push ficomp je sbb popa cltd dec insl mov jno fist adc push mov cwtl mov sub int3 cltd lods in cmp mov pop mov mov pop xor les call lcall pop loope,pt sbb pop xlat out jns xchg pop imulb xorb dec add cltd std cmpsl push mov push and (bad) out lds jle push mov lea jge mov jl insb lods fwait out sbb dec mov lcall fnsave popf add push jbe cmp addl cmp gs sbb aas mov sbb sub stos roll add ret xor fwait jno inc adc add add mov lahf cmp movsb dec int3 xchg cmpsl sbb push (bad) pusha cwtl sub or lcall mov sbb (bad) dec dec lock mov add (bad) js shr and in dec addr16 inc fild stc daa jecxz sarb ljmp add add fnstenv jp in jmp enter icebp jno push mov ss pushf es inc pop xor in fist cmp arpl sbb mov sahf inc pop mov xchg das xchg pop (bad) dec loop daa or aaa in rclb test shlb out add data16 repnz lods push dec adc xchg sbb in xchg outsb aam and and xchg ror jle xlat in jbe test jmp mov sbb insb jns lods or inc test cmp sbb pop outsl adc rolb mov pop mov pop jp pushf cld leave ss or add xor ficomp add sbb mov std repz (bad) loopne nop fisubrl fwait mov sub jb je in inc scas outsl mov and sbb nop push sbb xchg daa int cmp sbb dec cmp in cwtl ret xorb popa mov icebp imul pop push ja ret pop outsl js mov mov and push add add dec fistpll dec pop shll sbb adc sarb out in or or pop mov pop addr16 jbe mov pop rorl sbb pop insl inc dec inc lret fistp pop gs outsl nop xchg bound inc sub (bad) int add cwtl les xchg aas testb movsb sahf data16 add aaa into adc jmp mov pop mov mov ret nop adc iret fdivr cmc mov xchg je jbe popa push inc adc out sti mov push pop in rorb inc push inc push push pop mov lock fisubrl mov sub and cli pushf lcall outsl jp add inc stos add add add clc call and into xchg inc icebp pop and in arpl loop dec mov pop out cmpsb pop js and cltd xchg (bad) lods push sbb movsb dec jno negl cwtl stc push std mov call sti cwtl js sarb jne mov bound add add (bad) jmp and xor mov cmp test sbb iret test out and arpl lea mov cmpsl push stos mov push or loop dec leave mov std add lods aas mov mov fldcw sub insl add add aaa inc xchg cmp cmp lcall loop sti pop xor aad jb aam insl (bad) mov cmp iret fsubrl add xchg js (bad) jmp stos icebp mov mov and mov inc cmp mov xor cmp ja into dec jae movsl dec xor adc fidivl sti push pop jg lods jl cli cmp enter js xchg inc cmc sbb cmp mov sti (bad) xor les or insb jmp sub aaa nop add (bad) xor es popf insb dec xchg dec dec loopne lock pop or push inc adc icebp mov xchg dec mov add hlt pop stc pop cs cmpsb sbb (bad) jnp iret fsubrl sbb sti ss insl and lret add stos sti xchg lods mov pop into sbb adc xchg dec sti clc icebp sub mov mov fstpl jo dec xor inc das lret xor add aas pushf outsl jp jl or cli lods pop inc dec out and adcb pop dec enter or xchg bound pop sub dec test movsl jecxz add leave mov ja lods add xor xchg aam xchg ucomiss (bad) jp out or push mov jbe add cmp and sbb aad cmp fwait insl inc stos out je mov inc pushf mov ret ds or dec lods gs push inc aaa iret xor inc lods loope dec add pushf outsl ret fmull jmp add sub enter js sarl mov dec mov add add add test jle icebp test cltd out (bad) push out jns lods push dec sub dec sbb adc jnp in adc pop ljmp dec lcall push pop in daa imull mov sbb jbe jge jae movsl dec adc cs mov mov movsb pop add ret ss pop push cltd loope dec pop jmp pop xchg mov subb shrb xchg daa inc xchg andl imul xchg inc xchg iret sbb and sbb mov xchg out or std lea pop fidiv mov (bad) fidivl mov imul shll pop test in sahf push mov mov push jp jbe fwait out mov jbe push (bad) jb pop ret scas ds pop popa push ja push pop lret mov scas cwtl lock push into xchg inc icebp aas sub cmp sbb or subb shlb adc xchg addl scas cmp dec aas push pop loop cmc cwtl in adc test or or dec cmp xchg (bad) cmp mov hlt into cmc xchg cmp mov (bad) shr inc subl or push andb adc es mov push dec cmp and add in (bad) int dec and pop scas lods dec je add gs push loopne inc daa push or dec jl lds data16 or sub dec add aaa fisubr dec (bad) mov mov mov das jecxz js test rolb lret jecxz xchg dec cmpsl add mov aas insl sbb mov xor out cmc icebp cmpsb mov mov (bad) and aas inc xor mov adc dec jae mov (bad) in stc scas sbbb lahf fiaddl pop fucom add xorl daa dec mov stos jne lods fist or add add mov adc shrl push fild sarb pusha fs in push or xchg aam mov xchg (bad) xchg xor test imul push mov xchg (bad) mov pop in shrl sub xor (bad) add jl and push jae sub push xor ret add push outsl adc dec xor cmp xor xor sbb mov lret push fisttp arpl sarb cs pop or push das fwait clc les pusha adc add mov ss pop mov mov ret sbbl xchg jl (bad) ror cltd cmp outsl enter push ret adc dec in (bad) push add sub jo mov mov imul icebp or mov inc sbb add add add fcompl mov mov lock fwait hlt out sub shrl lahf cli mov jbe imul jb mov pop sbb push aam jecxz xchg ret js adc rcrl (bad) jecxz lods or cmp xchg mov jbe imul add out hlt dec lahf mov xor outsl adc das mov negb cmp and arpl add mov mov subl mov xchg push jle sbb cwtl cmp lock or in add and add notb sarl mov adc cmp mov pop mov nop sub cmpsb in or adc sbb icebp jne xchg mov ljmp insb push xlat stos inc push xchg out mov cwtl or push xorb or pusha leave xchg inc sbb ret add dec movsl sahf and jae int add add in into lahf dec leave aad ss test (bad) hlt mov gs adc nop shll add les (bad) leave movsl insb jmp decb hlt jg adc cmp push jne ret mov div mov or xor cwtl jp mov lret fwait sbb sti jo jae scas movsb inc sbb test data16 cmp std js ucomiss call and dec add dec lods sti pop xlat adc ss cmp push mov (bad) hlt jmp out lret mov push mov into je std mov inc inc test and mov mov cmp fildl lahf sbb add (bad) mov adc aaa adc loopne aam adc dec je pushf pop jle push pop pop pop movsb addb (bad) and repz out ret fimull arpl cmpsl (bad) and gs nop adc addr16 loope notl sahf sbb and hlt cmp stos adc pop push jp push jge and sbb pop insl or inc jnp out mov sub cmp fld sub rorb sbb call dec sbbb scas inc popa or and mov in mov data16 (bad) mov mov or cmpsl (bad) out inc arpl scas decl add add outsb pop pop aas lods mov push int3 jp mov adc mov mov jae inc xor mov das mov and sbb add addb mov (bad) lcall int test ss test fxch mov add add xchg fstl pop jmp cs pop packuswb leave movsl mov pop jno mov mov cmp cmp fsub loope inc add loopne inc dec mov lret int3 stc lock jecxz dec pop daa xor jmp pop (bad) insb notl fisubrl repz or int ret test lret lahf cmp add bound jne cmp rcll (bad) sbb loopne fldl pop or negb inc and imul xchg leave mov cwtl jp (bad) sbb das and push fldcw xor cmp mov mov mov aad cmp add add mov jb fildll iret aad scas test push sub mov lahf sarl or ret (bad) js mov lret test outsl das push imul ret aas inc imul and sbb faddp mov inc or cwtl int xor hlt sbb mov movsb push jbe scas ss shrl rorb jo or hlt add xchg enter cmpsb ss lret pop mov sbb xchg mov mov or notl xlat lods pusha stc jp les (bad) mov fisubr es jge stos mov dec jle fadds jg xchg notb pop outsl add inc sub add xchg inc fcomip aas inc mov add int fstpl jp fcompl sbb sti jb,pn leave inc xchg or jmp cli push rolb cmp das or xchg fstpl dec dec stos xor jns pushf outsl (bad) mov pop out mov jb mov mov add aaa pop pop loop hlt inc sub aaa sarl jmp sub jae out in imul dec pop rorb cmc (bad) cmp int lds ret out (bad) mov imul add fdivl dec dec sub mov cmpsb pop outsb inc jno loope xor sbb ja outsl sbb inc gs int xchg ss icebp fildll lods mov scas and outsl enter cli (bad) aaa sbb cmp lret (bad) fs lea xchg out xor in cmp out or mov and aas cmp movsl jmp add add ja sub out mov call mov iret insl add adc lock outsb push lods mov pop mov push cmpsl (bad) mov fs fwait std lds mov out jp cmp push cmp mov adc scas ss gs adc add push push mov cmp or movl cli pop sub cmp sbb xchg xchg mov xor cmovo repz out mov pushf adc adc pop cmp lock jle push mov (bad) in dec imul cmp add jbe aas xchg fidivr sbb fildll jge adc mov sub inc xor rorl jp ljmp add xor leave or gs jns out cmp mov cld sbb cld mov (bad) mov lcall jnp or mov inc sub or ds add mov cmc lahf fisubl jg ja outsl add jmp xor push push clc mov and in outsb test test fwait ds ret mov pop loop fwait or sbb out popf mov ret add inc inc sub stc jno aaa pop jo xchg loopne outsb aas lret inc mov (bad) jbe es jne xchg repnz mov lcall xchg and adcb pop inc jno mov pusha sbb pop jbe loope dec mov push sub test dec bound mov ljmp add sub fwait clc mov fstpt (bad) jle fisubl sbb lock movsl or ds adc mov fldl aaa jecxz inc pop and in out call adc outsb pop ljmp faddl in mov add add cmp xor inc pop jp sbb mov cmp adc mov sbb inc push and xchg and push cmp and mov inc lock push push jecxz cmp int3 stc push rclb lcall rolb es lret add add and or aas mov cmpl (bad) (bad) mov lods leave mov dec data16 lret icebp mov sbb out jge enter aaa adc mov imul sbb int3 (bad) aam pushf adc mov clc inc sub out aam cld add push lock (bad) xor cmpsl xlat add inc sub sub nop xchg inc es inc mov lock pop xchg fstpl jp sbb lret cmp jae arpl js jae dec adc in inc ljmp ljmp push add xor inc fnstcw test push out loopne add add repz mov sub adc or in cmp dec (bad) dec div in jp or aaa rorl (bad) rcrl push or mov jecxz add add in xor mov call xchg call aad mov loope pop std inc xor imul add add mov sub or fwait out jae arpl jb,pn lret int sarl mov scas push inc je arpl and cltd movsl rorl imul fistpll outsl xchg cwtl negb sub test les push in ds mov ss imul pusha add aas les xor or adc loope (bad) hlt cs cmpsb sbb push (bad) sub xchg mov mov inc fs aas inc mov dec sbb out cmp enter jae mov jmp cmc mov xor dec idivb mov (bad) in xchg and and shll add jmp xchg (bad) or mov xchg cmp in add inc scas push pop test sub xchg inc xchg iret adc mov xchg fadds mov mov and jo pop cmp jg out push lret mov lret fsubrl dec (bad) mov add add imul js inc pop enter sbb jbe add cmp insl mov jg push xorl cmpsl or test jg add jno and pushf pop dec (bad) in into xchg rcr push dec stos cmp roll lahf push adc mov jno aaa adc andl xchg adcb dec or ret inc pop mov jl repnz insl cmp push stc pop (bad) scas leave in bound xor (bad) or jb mov sub pop sub pusha inc push pop mov int negl popa pusha (bad) sub lahf cmp jae and push fisubl int add dec adc ficom adc pop pop jg sub push leave and cltd movsl mov cli pop insl jp sti inc cmpsl cwtl int nop aad rorl jb lock lret daa add rol imul popa cld mov xchg icebp fisub xchg pop or sub and jecxz fstps jmp nop add rorb add add dec pop add fdivs push test xor sub adc movsb push push addb xor (bad) fiaddl and subl mov add inc jns lcall fldl xchg int3 js sbb add push cs add add movsb (bad) cli popa (bad) jae aaa inc scas sub cltd fsts les movsb std (bad) xchg pop pop in mov or sub fninit adc sub (bad) jecxz lods or jae xor mov add add adc lock mov bound in outsl pop rol sub or add fwait (bad) inc cmp insl imul sbb or rcl addb add mov dec fimull gs push pushf mov fnstenv add lds mov (bad) rol lea lds fdivl hlt es popf outsb fsts mov in push das pop insl jo add add mul sbb test mov test sub mov dec int3 stc push xor fidivrl divl int lret jo lods movsb sti xchg mov loope add jo test xchg mov cmc pop cmpsl jp lods ds icebp (bad) mov xorl mov xchg icebp mov xor sub xchg mov mov test int3 cltd sub in cmp mov in mov sbb sbb sti mov cmp sub loopne sahf jecxz jns lods push dec int3 clc mov ficom rorl daa mov lcall add in movsb push push sbbb fisttp jp mov lock or and adc push test ja mov mov pop fwait hlt addr16 out xor add sahf insb mov (bad) call std xchg test jo mov mov sub add addl and into xchg test in loop insl cmp in jns lods mov into jne lock push mov dec push (bad) js inc xchg mov sbb adc push test sahf and mov cmp or dec add add dec mov lock cmp das fcmovb dec xor cmpl pop jmp nop xchg or push adc cmp jge sbbl fstps sub js outsb clc or sub gs fwait lcall outsl mov adc add mov push dec in push cli mov push mov jl (bad) jp and fcoms push arpl stos jbe sbb mov hlt sbb iret ss cmp and dec cmc dec sub movsl icebp mov lahf add mov ljmp and and jbe (bad) dec fsubrs sbb xlat aas xchg loop (bad) mov add inc jne lcall mov cmp dec aaa scas pop loop dec test xchg negl jb mov bnd adc pop sub dec test adc push dec pop cld dec sbb pop mov jae leave fsubrl jge arpl adc or adc movsb push xchg inc cmp popf adc ret add and fnstenv push movsl or dec (bad) mov mov mov seta push (bad) loope push cmc sti test mov out inc test sahf (bad) xchg mov cmp dec aaa pop pop loop dec fsts pop movsb xchg stc stos mov fs insl mov mov or std cli pop cmp lock pusha push mov scas push incl xchg arpl fsubrs inc out jbe sarb popa and cmp fbld mov das lcall dec dec in xor mov sub loope lods ss fldl insl sahf les shl dec (bad) jge jle insb adc mov rcl test jb cmp adc stos daa push out sub mov sub repz pusha sbb (bad) repz out xchg jnp loope push pop cmp sbb pop ja push and fadd pop ss (bad) mov mov inc iret in add add mov cmp (bad) cmpsl mov and cmp out rorl or adc push test push out pop lahf dec adc jecxz cmpsb (bad) ret and push inc sub xchg out lds lods adc test lods pop mov mov les push sub xchg in and add add sahf popf nop mov fistp dec sbb fildll ret insb add pop xchg jb push insb bound scas fs push mov outsl add inc sub adc xchg cld sahf das (bad) inc cmp int3 int lahf push pop sub mov icebp in xchg fwait nop lock lods mov add int ds adc test add jno das xorl aaa jecxz inc xlat enter mulb inc cli xchg pop cs cmpsb cs daa add jmp xchg hlt sbb add outsb sub repz pop stos rcrl jmp fild insl xchg insl dec and inc aam leave aad (bad) cmpsl mov jmp sahf xchg mov pop jge add add add add push jns lahf (bad) mov dec sbb jle jbe aas pop mov push es jne xchg loope std int3 int3 mov es lret pop jp mov sbb push ror imul inc pop fbld mov sub ret pop cmp jecxz (bad) jmp cwtl or jg or lea add repnz xchg add jge aas xchg mov mov movsb or inc push mov push cwtl jp sbbl pusha aad in and popf lahf xchg out cmp lds insb jle fisttpl push inc stos inc imulb or pop test ds cltd mov cmp push pop push aad mov out jae add add loope in jb or cmp mov mov lds pop jo dec xor mov jne xor or pushf outsl ret pop sbb js sbb enter lods and push jno movsb into or stc sti pop xor inc in icebp mov insb cmp in add add scas mov ss sbb lret ja push std jne and (bad) mov fprem1 popf or stos cmc (bad) das sub sahf fimul arpl mov jl repz int pop mov push or add seta push fisttp dec inc xor mov mov mov jl lcall sub inc adc cli cld xlat scas enter dec push aam loope es xor pop outsl mov mov or add pop xchg inc lds pop lods (bad) neg fidivl xchg (bad) js push sbb jge (bad) in dec lahf mov ja add fwait rcll outsb dec popf pop sbb out sti xchg scas add stos push cmpsb or xchg xor xor push add or cmpsb mov ret gs fist test inc adc mov jnp cs in aaa inc dec in jmp imul dec dec lods jl idiv inc or xor sbbl xchg jecxz xlat jecxz add (bad) dec dec dec jecxz mov xor mov aaa repz (bad) xor jno mov dec test add inc adc push aas inc cmp add sahf ficomp xor (bad) cltd out and push dec fisub sub xchg jl sbb cli dec mov add add lock push push out xchg sbb into jp in lods fistp sahf pop xchg out push fisubrl stos lret jo int3 lcall ja sub sahf mov mov or sti sbb xchg xor adc (bad) pop or popa lods inc mov lahf jg mov divb sub add sbb jmp jge je jb test push aas xor insb sahf lods (bad) jns jge out fwait cli jmp sub inc inc aad fwait inc ljmp adc in lret enter test and and mov mov test daa add lds add aas fildl loope sahf orl in mov sub or or icebp mov sbb outsb pop das push cmpsb inc loopne fwait dec xchg nop adc mov jne enter xor jno mov mov xchg inc xchg jl inc push outsb pop outsb (bad) jbe mov cmp mov ljmp add and in jle push stos xchg arpl inc sub mov add adc sbb movsb xchg stos xor xlat sar lods pop (bad) sbb pop std call cmc adc les ja ds dec fcompl ja repnz dec es push push fucomip push out xor sbb loope mov insb jle ljmp add ja frstor cmpsb push mov lahf (bad) js (bad) ror inc sub mov pop sub je out ret dec mov sbb int lcall pop stos test jecxz inc dec outsb stos cli push mov iretw xorl mov fstl mov xor repz add mov mov aaa sti xor fsubr mov adc xchg test loop sub xor sbb or les mov xor push xchg dec fsubrl (bad) call inc mov lret push cmp decb aas inc imul add or mov incb sbb jb or dec (bad) icebp outsl mov inc sub sbb les sbb mov aas sar (bad) loopne nop fisubrl fwait mov sub jb xchg enter outsl mov adc sbb daa push push (bad) jp cmovno pusha lret add or fnsave test push sub out adc mov xor cmc jl xchg paddd popf cmp and (bad) adc mov jle sahf (bad) scas cld cmp dec sbb xchg insl jo or int cmpsl xor add push mov scas leave add add sbb mov mov adc out aam mov mov ja arpl push cwtl les je jle (bad) sub xchg rorb xchg pop mov push jle push and xchg push in add jmp repz add cwtl fdivs lret pop test add cld adc negl mov test mov add jae es dec gs fadds push jmp ja mov push sub stc bound mov sahf pop mov std pop enter dec cmc sbb push in std jns or (bad) in aaa inc dec aas cmp cmp add add pop mov or fcompl js mov or sbb fstpt lea out (bad) fstpt fs outsl jne stos repz push jmp neg mov shrb stos jns cli inc cmp outsb mov pop shlb xchg imul mov add mov pop inc fmull xchg mov lock cmp push cmp popf adc scas push sub pop gs adc (bad) xor iret or (bad) into popa (bad) leave ds mov adc dec mov jbe loope scas (bad) lock add mov test repz sub fisttpl in push and sahf mov inc cmp inc in arpl mov jb mov sti mov push sarl or das outsl mov popa cmp ret insb mov daa xor sahf sub add es movsb push ja sahf and pop cmp lahf cltd mov test je cltd pop jle testl call loopne sbb insb push add aas adc xchg bound (bad) jmp mov dec lahf mov jbe add insl inc or jl sbb jp dec and fiadd pop adc push mov das ljmp dec xorl std rcll pop sub adc xchg call es or movsb push ja fist cs push sub dec imull inc dec push iret in int xchg add fisttpl sub insb in lahf repnz inc sub cmp pop sbb adc (bad) stos std addr16 pop push pop pop mov jp fisubrl mov mov adc jb repnz adc push mov cli ljmp (bad) lret add sbb dec dec mov jno cmp dec pop js sti mov jae pop cmp jnp pop repnz push adc add call mov or jl pop dec fbld das (bad) rcrb dec aas loopne hlt outsb xchg mov popf lahf lods xor neg inc sub test test sbb add mov (bad) xchg mov sub dec jmp jp mov lock aam movsl xchg clc into lcall popa lods jnp cmpsb or sub and dec pusha add cwtl shlb push mov pop pop xchg (bad) jg test xchg ja push pop pop rol inc xchg jge into data16 add adc addr16 mov lods xor fbld mov popa pushf hlt das into enter insb jg dec sbb cmp jle push jmp mov mov insl imul call add psraw fs cld iret mov add das push mov scas add dec jb or push push inc push and pop push sub jns dec jnp imul cmc clc or add xchg and repnz mov fs imul stos mov cmc aam dec mov inc jne stc push mov adc or test inc mov xchg push (bad) lret push in add cmp sub sbb add inc fs push std jno pop cmp in enter sub adc rcrl stc sbb out add (bad) ds dec addr16 in mov ret aad pop pop xchg adc shrl push sti fidivr xor aaa inc cmp test shr rorb mov xor and test xchg movsb cmpsb mov jb (bad) aas mov scas adcb popf dec pop je push lret xor xchg test adc mov and pop pop fdiv cltd mov cmpsb inc and gs (bad) mov test or add jns insb pop fcoml rorl ja fwait outsl mov push dec add mov adc inc lea fdivs call lahf xchg ret nop mov mov cwtl and mov rcrl sub mov push xorb adc xor fnsave sar add scas mov push sub insb sbb add mov jne (bad) js add fsts lret mov stos cmc (bad) xor cmp lahf fimul mov ret daa mov cs dec test or out sarb xchg (bad) dec xchg inc cmp add mov jmp in mov mov cmp jnp jno outsl iret sbb adc cmp adc push pop (bad) aam ss pop loope sbb fninit cli pop out add cmp ficom add mov xchg rclb sarb je inc dec test add (bad) lods mov pop xor sub pusha mov fistl dec inc and sub cmovb xorl pop jo fdiv dec push cmp inc (bad) arpl arpl add in cwtl mov and (bad) pop int fmuls adc movsb movsb sbb add outsb pop pop fistp std mov mov sbb adc (bad) fistpl xchg (bad) inc rclb (bad) push nop mov mov sti mov aas daa mov gs test mov add (bad) sbb cltd mov push sarl mov gs (bad) push pushl enter push dec mov rcl popf xor inc mov jnp sbb (bad) adc inc cmp inc cli xchg push push (bad) icebp std adc xor loope stos out dec out lret mov repz stos jb dec addr16 xchg xor xchg mov mov add mov lret adc (bad) in cmpsb push sti jmp mov push push or pop int xor ret adc popa sbb or and gs push int3 push rcl addr16 push sbb movhps mov into xchg dec mov mov jae bound pop pop out das sub adc add add inc cmp ret mov pop int3 xchg pop dec repz sbbl icebp sub mov sub jnp loope div xchg jecxz call ja negb mov lret sarl jns in pop inc into lods (bad) stos cmc (bad) xor ds or test jno lcall add icebp popa add sarb mov push inc sbb mov mov enter xlat cmp sbb pop das out xchg mov sbb cmpsb std mov sti mov ja add ljmp notb xchg test cwtl adc add cmpsl cmpb jg fisttpl mov add inc aas js push fisubl inc (bad) fsubrl popf fucom nop lahf cwtl fdivs cs std popl lcall jmp push outsl sub jbe push mov adc data16 add lds or jge jle je push leave xlat cltd dec aad fcompl test dec (bad) jecxz push lcall adc std dec cmc addr16 sub dec call fs mov mov dec repnz in popa outsb clc fcompl jo daa pop sub shr jne mov push cmp sub xor data16 je pop test (bad) mov stc dec mov add cmovle sub push xchg mov or jb inc dec fwait popf dec dec sub clc inc cli test or inc enter jbe and inc in dec int3 mov dec jge cli jp cs jbe add inc dec push jg aas xchg cld ret mov inc or mov add sbb shlb push cmpsb std movaps or cmp decb neg bound (bad) ljmp lret in jnp stos jbe dec and push sbbl dec push dec lcall adc dec movb repnz and imul daa pop sbb leave ds sub sahf in pop pop inc (bad) cwtl nop mov inc sub popa mov lea testb pop loop scas or or pop jno (bad) jbe push jmp pop xchg jne cs sub enter adc outsb and fdivs sub xor (bad) add lods jge mov jnp add inc pop jbe aas lret adcl les mov mov cs dec cs add xlat cltd sahf hlt jmp insl aas (bad) dec stos out cmp add adc xchg into push popf inc inc aas fistpl inc pop adc push add add fsubrl jge push mov or cmpsl sbb adc jmp icebp sbbl pop daa or cmpsb (bad) mov adc mov cmp xchg js (bad) ljmp inc mov push add push inc push push pop or test out jae icebp aam das jb add or add jbe push jno ror add aas and arpl insl int3 xchg shlb mov shlb jne xchg pop pop out das test icebp bnd aaa sbb ja fsubrl inc xchg push mov in pop xchg pop insb push or sub or gs cmpsb (bad) and add sub dec mov adc ror inc lock mov loop cmp jbe cmp lods stos cmc sbb int3 mov stos stc mov push arpl mov (bad) lock or rcl xlat ds and ss fldl popf xor gs jo mov outsl insl add addr16 addr16 in sub (bad) jno aaa jne pushl and cmpb sub or jp jmp aad icebp mov insl mov out xchg pushw and jb negl daa int push pop test jmp mov and imul out jbe outsl int3 mov cmc sbb add iret lea dec cld dec and push mov jo,pn or (bad) push shr add cmp mov cmp mov xchg sbb adc inc frstor mov lods adc lods sbb addr16 mov mov and push and jns jl push push fbld (bad) fdiv add sub fucomi sbb fwait mov add push cmpsb mov lahf xor es fdivs and in xchg call (bad) mov lcall cmc (bad) das enter in roll cmp xchg clc mulb movsl pop sbb xchg test stos addl mov mov add loope xor cmc sbb dec es iret push pushf jae pushw sbb mov int3 imul das add mov or fsts jo aam icebp (bad) pop cmpsb or es jecxz jle stc cmp dec mov iret sbb arpl roll xchg add cltd sar add arpl xor xchg dec and jl adc or arpl xchg frstor and cs popa adc sarb or add lock cmp leave les test mov hlt aas jo das dec imul sbb pusha sahf jae shrb jnp in je ja les faddl jle or scas test push repz test adc ret add push insl mov and push std insb mov jb daa out popf lahf adc jbe lods pop dec xchg xchg imul (bad) xlat in in add jge mov mov jbe subb lret insl dec xchg sbb lcall add in mov pop push dec or mov dec addl jle mov popa aam (bad) or (bad) push out das jp dec sbb aaa adc imul mov mov and push and js cmpsl (bad) out xor adc je stos jecxz seto incl cmpsb xchg scas adc aas push inc nop mov mov jnp xchg (bad) mov mov lret fwait push or push push or or push push lock mov lret test je (bad) sub or leave mov into mov int3 (bad) mov insl adc xchg and sbb stos xor les pop ljmp add stc jno aaa aam (bad) pop faddl jg divl test ret sbb loop pusha bnd aam repz ja leave nop dec and stc call std push int3 (bad) dec pop xchg cmp push and xchg je popf add dec mov pop test push ficompl sahf pop outsb in xor sub add add int3 insl mov pop jb,pn sti cmp in std fwait inc ljmp das xorl jecxz lahf hlt dec mov push dec stos push inc inc (bad) arpl leave or lcall or imul push inc mov outsb clc js xorl xchg mov sbb jnp dec mov sbb mov neg inc sbb xchg or (bad) mov xchg in pop test push aas lret int3 in mov lds pop ja je jae dec scas or jb pop cmpsl xchg in shr add inc push mov xchg mov lret bound add add add and nop xchg fmull add jns int3 xchg lcall pop fsubrl sub mov sub test cwtl adc jmp lret (bad) movsl or mov pusha aad out inc dec lods (bad) and insb mov data16 lods and (bad) mov dec in lret add add dec sbb adc jl into sbb cli sub and lmsw jnp dec pop les add inc cli jle popf sbb lcall fdivrs pushf adc lret adc ret add lcall jae imul mov add add or mul push or dec test add (bad) dec jnp xor shl adc mov iret cmpsb fcoms pop jge ljmp fwait lret adc icebp icebp imul mov push dec cmp in sahf ss ret mov fwait mov decb repz inc int stos mov add jl xchg inc jns pushf cmp leave mov xor icebp aaa das or mov sti (bad) pop in les sti leave movsl insb jmp inc lea xchg cmp cmp lcall xchg test mov sub clc idivl push sbb xchg xor jo stc pop inc loopne dec pop bound xor cmp and fcoml cmp jge mov sbb insb inc adc sbb inc cmp adc movsb adc and jo sbb xor push shr jmp lret inc ja mov mov lret mov xor stc ds push push clc mov cwtl jnp mov add jb push aaa adc jnp sbb test mov cwtl in dec outsb clc aam in aad test fpatan sbbb mov cmp sub xor std mov ljmp push lahf cmp in pop ret xchg inc and aas adc dec or sahf (bad) in jns and add add lods mov xchg in pushf add inc jns xchg int3 fidiv lret iret xchg icebp sbb ficom pop lret xor sbb jae int3 mov lret adc imul xchg mov mov or xor stos mov adc cmp inc in push dec pop dec loop dec aaa mov mov pop nop lods and andb cmpsl pushf test hlt xor mov push es repnz movsl mov sbb inc and (bad) mov aas sub cli pop in lret and and fmul xchg dec inc adc mov add xchg inc xor jp push ljmp add icebp mov lahf into mov js jbe into push xchg jp or push xor sub adc mov inc sub inc cmpsb (bad) and gs adc jnp xor neg pop daa xchg (bad) js xlat dec cwtl inc xchg push je lret or add and add lahf push imul and cmp and imul ss or test ljmp push push pushf test leave mov cwtl sbb fisttpll mov cmp out mov adc jne (bad) adc jmp loopne mov loopne cmc xchg pop or mov icebp icebp pop jle in dec mov jp std push cmpsb mov bound inc fiadd notb sub out cmc add xor das rcrl je push mov lret mov loope and push es ss xchg popf out push scas pop sbb add sarl mov inc ja xchg mov fcomps aas dec cli pop sti sbb sti inc cmpsl cwtl mov pop sub lock stc iret cli add fdivrl dec add pop mov andl and icebp (bad) pop jbe in dec xor jae lods xor lea pusha push data16 push mov add (bad) jp mov push sti xchg inc outsb push xchg dec jl jl mov sarb mov lock xor jb,pn push (bad) cmc nop nop inc jnp cli ret xchg mov jns pushf cli icebp leave mov push int3 dec rolb push jmp (bad) adc sub or lcall add test fsubr xchg (bad) push and sbb leave xchg jecxz push mov jmp outsb pop nop jo (bad) repz pusha jmp push dec pop pop xchg jmp data16 shlb pop sub (bad) rcl adc test mov mov outsb push xchg (bad) cmp or push aas ja ret insl xchg dec mov add das (bad) call cmp roll inc test fistp pop je rorl movsl rorl push idivl xchg xor cmpsb add push sbb in xchg sbb ss and outsl test test into xchg jecxz pop or test jp or mov fninit lcall add xchg dec dec jb cmc xchg xchg mov push xchg xchg js inc mov cmp sbbb jne enter sub addr16 adc test jo fdivs and in mov push inc jg outsl addb (bad) jo pop mov out lcall mov jnp inc packsswb scas cwtl mov jo dec (bad) mov bound loop shl aad adc lcall js out fwait mov ds scas sbb inc fisub sbb mov arpl popa push push adc push ja dec fwait rcrb jecxz cld es xlat mov add add data16 pop sbb ret mov sub jp push jl xchg fsubs xchg cmova xchg mov popf xchg mov enter xchg outsl out sub popf stos shrl jnp sbb xchg mov xchg testb movsb into or mov push push push sub add add cmp push lcall insb repnz fs data16 je lahf xchg cmp (bad) and push or imul inc (bad) xor push or push push (bad) in sbb mov inc mov mov cmpsb lea xor hlt cmp pop cmp add add add add push out and sub sbb shll fisubrl cwtl les add adcl ret hlt mov divb repz rcr inc add mov xor add and or push jmp jl sbb add (bad) jp mov push push add (bad) stos sahf popf mov fsts mov push mov sbb loop je sar lea insb pushf dec nop daa in scas mov or push inc xchg addr16 inc adc mov adc es jnp stos fildl or add aas lret push loopne pop pushf pop jle and mov pmuludq ds outsb xchg jbe add notb popf adc xor sbb mov lcall or jbe mov jno or pop sbb mov lock push fcomps repz cmpsl aam push sarl loop or repz sub lea aaa xchg mov (bad) icebp jbe loop cli (bad) arpl cmc add sbb and jg das lods push ss push test das pop mov add sbb je pusha cwtl icebp test lds adc fucomi or (bad) jecxz mov add add popf ficom fdivrs cmc jbe and js jge popa addr16 dec outsl inc test add and orb fwait cs cmp and or jp jle daa pop mov jnp popa movsl cmpsl int dec inc sbb in leave mov les mov shll sbb pop ss pop out jnp adc popf add rol pop mov test push and je sub sbb or xchg stc pop cmp dec pop popf and daa int push mov xchg sbb sarb jne pop (bad) cmp and sbb add add sub int lcall pop stos outsb movsb or (bad) mov clc inc cli push or lock push leave mov rcll xor popf (bad) hlt inc xchg nop xchg mov imul loopne sarl repnz sbb lret out xchg fsubrl inc int3 outsb mov or je xor in jp sbbl add add int xchg dec mov inc inc jmp and fildl popf lahf sbb pop and (bad) mov dec sbb cs in rol dec lea sub or (bad) out sbb jge aas pop dec adc aad add test and inc in and add add sbb xchg out (bad) (bad) pop out das ret mov test shrb popl mov cld sahf notl sub xlat jl cmp fninit inc roll ret sbb popf lahf (bad) out jg fdivs mov cmp cmp add add push hlt std mull mov jg jbe push ss rorb inc fimull sbb jb add xor mov repnz or mov insl aas lret xor arpl xchg dec es leave movsl adc push (bad) cld clc imul fdivrs adcl xor fwait sahf les aam jg es mov movsb repz pop in fildl imul add jge cmp push scas adc (bad) jp mov push push mov sti cmp lods fimull mov mov push sbb into enter or rcr add add inc mov sub lret and sbb fdivr daa jb fwait sbb jbe xor out dec out cld imul cmp sahf fisubl insb clc mov pusha jle lret (bad) jle cltd aas cmp in jns lods out insb jb dec jb adc pop loop add jmp mov int sub lods popf xor test push sarb popa and fwait mov sbb stos push pop rorl je sarl orl jo je into xchg shlb push mov mov mov scas add add nop aas lcall cli mov pop loop hlt es or pop sub imul mov andl iret leave jg sar or sub psubq jmp aam hlt jle test push mov jns negl mov (bad) sub test add data16 pushl dec mov xor dec ds out hlt sub das add xchg fucom out push cmp mov aam lock out push popa mov mov sub sbbl mov jo jnp icebp and jecxz sbb add add xor lret enter cwtl lahf xchg jecxz xor push adc inc xor cs jns cmpsb push sti orb adc cmp push aad sbb in clc mov jb js fwait pop lret lret (bad) mov sbb adc lds add out mov add add xchg add mov lret popa sub pop pop gs ljmp ret mov sub mull adc les je sub and xchg fwait imul cmp add or bound rcl movl or add add (bad) stos cmc (bad) pop (bad) stc pop mov or mov fs std push sub sbb dec ret int inc lret mov out mov scas ss push dec in lahf xor mov push dec stos xor cmp jnp ss mov jb cli mov (bad) push mov in pop xor add add adc adc nop mov adc xor insb std lea mov negl pushf ret jnp jmp or fadds movsb shrb js (bad) stos dec dec das xor push sahf fisubr push (bad) cmp dec (bad) nop (bad) mov or and add fsub jne xorl test mov (bad) xor mov dec push or sahf scas jnp sbb xchg mov cmp sub repz push enter add cmpsl negl or sub es outsb mov mov cmc mov repz or int add jno test xor clc mov xor add inc cmp lea mov dec and pop sbbb sbb lods ds mov lock in xchg pushl ret inc push out inc ljmp call outsl insl fdiv std mov mov mov pop (bad) dec neg sub sbb and adc mov push pop xchg dec jecxz or cmp pusha (bad) loop (bad) pop fdivs or jl (bad) push fwait cltd xor or or jns cs adc lret cmc sbb sbb les mov and add popa add sarl jno pop mov cwtl das sbb nop arpl jg stos inc push aas jecxz push popf push bound scas lock mov enter mov xchg das xchg loopne xchg mov movsb inc mov or jns cmpl out mov add mov sbb or push mov push mov fwait jmp cltd (bad) and daa inc outsl pop shrl sbb adc mov fnop dec shll lods push adc mov js jg pop icebp jno inc jnp and pop mov xor dec cli pop xchg add sar inc cmpsl mov aam sahf roll sub mov mov repnz mov into (bad) push dec pop add test mov sub dec xchg jecxz push stc hlt nop int3 add mov xlat jle mov dec add pop loopne pop test ds test int3 mov hlt fimul fs fwait mov dec sub jp add inc ljmp jl push in and mov push xor push dec aas mov outsl insl jne adc cmpb xor addr16 dec imul xchg rol xchg (bad) stc pop dec add fbld in test test cmp jns jle loop in push ljmp movsl xor rorb aad pop mov xchg inc (bad) mov add or inc mov cmp cltd mov jno xchg mov adc mov dec vmwrite pushf out ss push mov into pop inc xor ljmp pop pop call ret jg lcall mov mov mov pop dec enter or fsubp pop (bad) or (bad) repz xchg ret das mov out shll add sbb and jg jb xchg jmp lret add mov nop lahf cwtl fdivs fmull stc push xorb adc or cmp sub inc gs fwait push outsb movsl jns xchg mov ror imul les je nop dec fsubl in lock (bad) rorl iret bound or push jnp (bad) in aaa sahf mov sbb pop pop mov pop jle cmp mov xchg lea ja out dec mov inc outsb add push cmpsb xchg scas or popf cmc xchg loopne ljmp cmpsb dec or call pop negb pop and mov xor jns push stos out dec les mov inc jb add add push cmp adc cmova dec xchg dec jo and sub inc sbb js jae addr16 (bad) enter pop adc jb je sbb gs jl inc fcompl fs je fnstenv sbb push mov jns jbe and add add xchg repz push or mov lahf jp loopne xor adc push pop lea fcmovne je subl ret cwtl mov outsl popa add stc loopne sbb adc lret mov in lret es int (bad) and nop loope add xor add jp lods adc js pop sbb push fsubrl dec push add push sub imul pop aam lock in cs xchg xchg push jp jae push jge mov cmpsl (bad) js (bad) xor mov pop and dec out cmpsl fwait jp mov shrl add lahf lret mov vmovdqa jb jmp rcrl stos xchg test loopne mov in pushf adc ss out sbb into pop dec clc in dec aas mov outsb insl jne std pop repnz das inc jg xchg jns in cmp dec mov into adc mov cwtl jp add imul dec inc cmp das test mov shll test adc xchg paddd inc test mov cmp inc rclb jmp push addr16 mov cmp fwait (bad) push stos mov add add int3 insb jg stos mov fbstp int fwait outsb dec jo daa repz rcl test jbe inc add in jle jge,pt mov arpl sub in pop rcrl mov push andl outsb push jle stos out mov mov or pushf fsubs jnp jbe (bad) xor add add dec lret push jecxz mov inc xlat mov push or iret mov inc cmp jae mov jae lods fsubrp movsl aaa test mov lret mov or out dec push leave sub aam xor mov adcl dec xor mov iret jge popa inc xchg addl orb add mull xor adc mov jle decb mov push lea enter popf int3 shl jg push mov (bad) js (bad) mov (bad) or add mov clc add xor fwait and aam lea dec mov and and adc fcomps (bad) leave addr16 sub or das movsl dec push (bad) mov sahf jb insl mov xlat push int pop aas sub jnp fildll xchg push sub dec divl inc dec gs mov stos adc mov mov xchg sub mov cwtl ret (bad) je fs popa mov add add sarb mov sti adc cs add movsb ret shll xor mov cli sbb and decb push je jg arpl (bad) xor fwait mov xor jl insl aad pop jo xchg loopne insl aas lret xor cld push jb ljmp aad jno test mov xor out dec cmp pop xor aam (bad) lcall add mov jg repz push sub dec jb lret int3 jg es pop notb sbb dec push xchg add mov mov xchg pop (bad) sub add add lods into xor sbb adc add mov xchg (bad) cmp psraw hlt shrb (bad) jne daa lock jmp nop xchg add add ret mov lcall and mov sub xchg jmp sti pop or xorl add add xchg dec and xchg inc xchg scas out mov insb adc out cltd std cmpsb xor xchg push fcoms ss pop jle jecxz (bad) dec inc cli iret (bad) stos std inc daa lret into cmpsb hlt sahf ss cmp pusha lret insl xchg jo jnp jb xchg cwtl pop nop roll inc lods pop data16 sub out addl sahf lds stos inc push aas (bad) out aad fisubl (bad) enter mov pop cmp cbtw sbb (bad) jp jg out sub pop pop mov out lret js cwtl icebp or mov xchg push inc adc xchg jne lock ds xchg cmp mov pusha dec xchg xchg js rclb pop jge cmp add std or andl xor sbb sbb popf jno and sub cs jge mov dec mov ds adc add insb mov mov inc add int lea lods mov loop push lcall push mov sti and fistl xor xchg sbbl add add fildl cwtl lcall in mov sahf xor push std shl dec dec jle pop fimull data16 negb ja idiv or jge mov (bad) mov int3 call leave jl andl ficomp fldt insb imul add test add out icebp mov pusha imul test dec jb (bad) sbb sub push xchg shrl aaa stc test mov loop rcr pop lret fisubl mov dec push mov loope jle xor xchg mov in ja pop cltd std add and fstl sbb mov push aas inc pop fistpl adc sbb or dec mov cmpsl lock lods and push or xor sbb into (bad) (bad) xor aaa sar dec ss shlb ss bound dec pop cld clc mov daa lea jle loope adc movsb inc dec bound jae fbld mov pop or dec jge aad pop push cmp and sbb xorl jnp xchg (bad) mov fneni(8087 lret pop test out stos jecxz adc cmp dec lods pop iret lea pop mov and pusha add scas cmp es xor xor or and cli jp lock add inc aam and xchg leave xchg sub cmp sar jle nop xchg mov push lret daa cmpsb std in jno pusha inc sub (bad) imul in sub (bad) mov push xor or (bad) loopne test add and or cmpsb mov rcll ss jo decl pusha or in inc ffree dec push mov nop aaa sbb push lods ficom clc pop sub push mov inc fwait add add cltd sar test lcall dec inc add add scas inc sub xchg jnp push xchg pop (bad) mov js lcall ss mov sbb adc outsl clc mov (bad) adc adc cmp insl std push cmc cmc in dec xchg cmc cmp sarl out (bad) es rcrb inc push pushf or sub es xchg cmp xchg (bad) jns inc fwait pop mov (bad) in jb,pn mov mov fidivl mov xchg dec jp aaa jecxz into cld (bad) repnz jo stos inc cmpsl sti xchg arpl push ljmp or adc pusha les ja in xchg cmp jo test add add outsl clc mov aam lods sub xchg out (bad) mov add stc pop (bad) and sbb lret push lods xor push cmpsl xchg fcmove js inc ss push pop mov pusha sahf sbb ret mov jmp mov (bad) or lods inc mov mov add pop jl sbb leave mov into xchg dec mov xor inc stc arpl into cmp push xchg dec cmp mov aam jle mov fs pop lock repz les push inc (bad) xlat cltd repnz test jns adc test pop (bad) cmp in inc cli mov jae add add mov (bad) mov mov mov nop daa cmp mov sub pop or test jmp mov stos inc movsl push sarb mov pop inc (bad) stc mov and into xchg inc icebp pop sub cmp cli (bad) arpl add cmpsl adc das jnp pop repnz add add les je cmp sub std mov adc xchg mov xchg arpl mov test lea jp insb std (bad) jecxz je lock jmp or int inc lods icebp fdivrs sub lods shr lock ret aas sub push or pop jbe inc sub arpl ja add add and out adc rolb std push rclb fidiv (bad) sahf xchg and ret popa outsb dec stos cmp jmp mov adc cmpsb ss les aaa loopne div mov xor adc sub cmpsb dec sarb sbb loopne push add add (bad) dec cmpsl and mov iret jg clc add mov fs xlat xchg mov pop test and xlat lock lods mull xchg addl in dec shlb repnz xchg int inc jg mov inc jle xchg mov cwtl dec lea (bad) xor out cli add (bad) arpl cmc fsts lock fbld xchg mov ja jb (bad) xchg mov jb jae pop pop stos (bad) inc jbe div loopne insl mov push inc xchg and inc or lahf xchg mov mov test or sarb cs rolb mov and imulb sldt add test mov and sbb call push (bad) xor loop sub xorl dec leave enter xlat xor leave mov cld daa popf (bad) or push iret pop insl ss out dec mov cmp adc ret fcompl pop mov imul add mov mov fstpt out dec push mov sbb movsb jecxz sbb jge sbb cltd xor sti ret outsb hlt stos jbe xlat inc movsb push or jge inc fsubl mov movsl cmc adc push mov mov sub push mov adc mov add push leave and lahf sbb xchg mov xchg sub jge shrl fisttpll test ja out add aaa inc sub jmp imul push incl cwtl sub les icebp sbbl pop daa xor mov es loop ja mov and xchg test add add add adc inc stos addr16 test jl and cmp inc push leave ss mov mov pop ljmp cs popa add sarl mov push leave popa js (bad) sti sti mov (bad) loopne push push pop shll xchg fdiv divb adc jnp pop cld add in cmp adc add xchg cmp dec xchg (bad) movsb into xchg (bad) sti push xor das jle repz mov sub jecxz xchg and fcomip jno xchg nop lds lcall sbb dec and jp outsl mov (bad) in rcrl jbe sti popa cmp and enter jae stos into hlt aad pop mov add add and int neg out mov je xchg fldenv ss notl stos call nop pop push out int adc ja adc mov mov and push cmpsl push pop sbb cld mov cltd pop icebp mov xchg dec and aad cmp and add add iret ja data16 and push scas cmc shrb inc cltd xchg jle sbb (bad) sub mov les or mov jbe lock mov repnz aam or xor cmp inc mov and xor enter mov out cmp dec add add pop and mov mov ljmp dec dec ja xchg notl ret pop push fisubr subl sub fnstsw cmpsb repz jp push int3 (bad) jb lock adc inc daa int3 mov lret test mov cltd xchg and push or add add test sbb mov aaa dec mov adc push cmpsl xor push clc lret push mov and scas sub cmp xchg jmp sti movl dec mov in aaa adc push ret mov (bad) xchg pop adc int3 lock mov lcall add sub mov (bad) jecxz pushf and mov stc push cmc lods mov cmc jbe pop cmp lret adc jecxz mov push out stc pop push or outsl pop fwait or cld and lret imul fnstenv mov icebp inc sbb push aas mov xchg fxch insb pop std mov scas xchg and push test push cmpsb loopne jle add es movsl adc or lea cmp pop pop mov mov or rsqrtps test cmp imul xchg adc xchg es std push and push dec inc ljmp or js (bad) ss sub mov pop test and mov push insb sub enter jae imul push cmp ret jmp add push shll lahf dec fcoms push inc add loopne jmp push pop arpl data16 mov fisubl pop sub loopne ja sbb dec div add lock sarb or mov xor mov ds js insl xor push call sbb smsw fisubl loop movsb mov aad popa mov inc sub enter inc push sbb cmp dec xchg inc in ret je,pn lahf cmove dec and add into push rcll mov inc sbb loop leave mov xor fs xor (bad) xchg mov mov mov mov fs mov sub jle or pop in mov js cmp jmp repz je pop dec popa push fwait jo pop rolb add add sarl (bad) jl cld adc lcall aas daa mov ljmp aaa repz fwait out adc ds sbbl inc pushf xchg in adc or in pop inc cmp rcrb lods lods xor add adc adc pop loopne test jp lcall das and adc sbb sbb mov sbb pop daa or pop cmpsb xchg and pop adc lahf hlt mov inc pop mov push xchg cmp adc rolb lret ret sub aas enter mov mov test (bad) scas into enter test enter (bad) add dec jle mov inc mov (bad) es sbb sahf clc aad sahf hlt dec stos inc subl and fildll and addr16 imul repnz shlb add notl cwtl jp andl insl cmp fs cmpsb dec stos dec adc push neg pusha scas (bad) pop sub push push adc push and mov mov outsl test (bad) adc shrb cmp enter jae es mov out lahf push add int3 insb dec lock mov jo xorl std (bad) jo gs xchg fwait mov cld fistpll pop movsl ret adc out jg movups into imul pop pop mov lret mov cltd into or or push mov mov insl mov daa or cmpsb (bad) and xchg push rcrb ret xlat jle repz xor push pop gs push inc dec push push or or mov sub js xchg arpl xchg imul dec mov mov xor insb push pushf rol leave mov or pop push mov ret les imul fs inc sub (bad) lock jb scas imul fnstcw xchg cmp adc dec mov add add add jns jb jae push sub ds xlat loopne insl mov notl push jl dec (bad) xor xchg icebp and fwait neg mov cltd pop jnp sbb enter mov xchg push or push push or or push pop add mov lret orb (bad) mov or sti jmp addr16 add add jno subb test jp dec cmpsb aas lret (bad) sarb je out mov mov adc mov pop lods addr16 xchg sbb dec fsts js aam icebp (bad) pop cmpsb add xchg test std push rorb repz push repz (bad) fadds add and jbe dec imul movl in fs mov stc xchg (bad) jns pushf mov out adcl cwtl jne adc pop inc add inc ja mov mov scas lcall clc into mov xor outsl ret bound out test xchg pop add hlt pushf enter ja imul or jb clc mov aam je sub jl (bad) (bad) push adc popa enter lahf push cmc out mov jbe add (bad) push popf cmp cmp loope add push xchg (bad) (bad) xor xchg push dec cs and mov inc add andl scas or push mov sbb (bad) outsl aam mov dec adc into xchg sub jge movsl pushf fistl mov jnp iret leave mov ja loop fistpll adc or cmpsb jns movsb and xor pop push mov mov add add out push lock scas xor cmp pop pop clc xchg neg jb lds aam or fidiv test ds adc sub add (bad) mov out xchg sbb dec mov lcall inc mov push sbb inc stos inc xor add enter les dec mov add lret xchg (bad) xor jp xor ss js xchg in jno mov faddl jg loop imul mulb pusha fsubrs adc out repz adc push std insb cmpsb nop jae mov std inc mov lods sub shr pushf cld pushf jns sbb test popf divl add xor out inc fmuls and adc movsl or cmp es xchg mov push leave sub fcoms cmp inc kandnw nop xchg mov adc and fist xchg mov outsl movsl xor test loope into jns popf xchg insl add nop subl mov out xor loope push pop cmp es in sbb mov xorl testl sbb inc mov outsb mov pop push or xchg cmp sbb popf push sbb push test lock push sarl mov add add incl or sbb mov and nop mov mov test jo lcall mov imul adc (bad) in pusha cwtl dec push jmp mov call (bad) or xor mov ret xchg fsubs neg mov add mov dec sbb (bad) stos sbb mov mov or ret and sub lock out movsl or dec ss sbb out mov leave push jo dec call in pop imul cwtl outsl jne xchg repnz mov lcall add lods repz cmp add nop fwait lods xor imul jl pop xchg add out jns cmp das lds popf xchg mov ret xor xchg scas icebp adc add cmpl les lods negl sbbl les dec loopne adc add pop push (bad) xor cli adc (bad) icebp mov sub pop jo fdivrs push iret mov lods mov xor jp (bad) adc ret (bad) mov mov imul cmc jne into or xor adc mov xlat repz adc insl std push and add aas sahf xchg mov ret test xchg (bad) sti jmp mov mov dec and sub adc ret or (bad) loop fisubrl mov xor imul fnstenv jae or ds (bad) cs jg sti and in mov cltd (bad) xchg (bad) xor lods mov out push lcall add lret push or out das sub (bad) cli or scas imul or mov xchg jp sub cmp mov gs and inc roll leave adc pusha (bad) loopne mov fdivs test xlat cmc fdivrs inc xorl js lods (bad) das mov mov add mov (bad) push rcrb aad test xchg mov out (bad) negl rorl ds lds mov int3 jl jmp dec fsubs push inc pusha inc mov lock jo lahf sbb mov cmp fild push and js pop pushf movsb push les inc mov and into inc add mov pop pop lret out jb arpl xchg aam jmp scas sbb push shlb mov jb cltd jl xor lock in lret push cmpb sbb enter out lret cmp outsb lods or push mov dec fisttpl push cmp jecxz cli jle jne push leave add add inc cmpsb xchg push inc xor mov xchg xchg mov in jo mov dec pop in jae cltd lea sub jle fwait xchg jge pop fbld sub aad loopne loopne sub out jns fwait (bad) and fbstp xchg mov pop cli push dec sub cmp lods les add add test add in rclb mov pop push cmp popf imul jb sbb lods ds add icebp jno cmpl jne fnstsw pop jo jbe lahf jp movsb sbb (bad) xchg imul inc fisubr (bad) lock mov aas xchg mov add fwait pop mov aam aaa data16 pop sub jp cmc clc and ljmp mov cmpsb lea out jecxz lea notb shrl xchg aad and jge xor (bad) shrb dec arpl stos repz mov sahf fisubr shrb fnstenv dec (bad) xchg (bad) or cmp sbb mov add jnp jne push sahf dec sarb aam fcmovnu not inc imul (bad) arpl (bad) fdiv (bad) mov out sub lcall hlt sbb pushf sbbl push pop push fbld jp sbbl lcall aaa jbe sti add add add add data16 add cmp (bad) pop add test in pop (bad) in rclb mov push dec fcmovb mov enter mov mov dec xchg or (bad) mov int (bad) jne mov nop (bad) daa xor sbb inc (bad) xor jmp inc (bad) arpl add sub hlt sub xchg pop imul xor cmp sbb movsb lahf repz je arpl out jp or test repz out daa push push int3 (bad) je leave aas enter out inc add jecxz (bad) js jge inc pop orl test push and lcall add mov mov mov pop stc lock sahf add mov pop fiadd fldl xchg (bad) xchg shlb jo inc sub add xlat jbe fwait mov das jnp pop sbb cmp mov jg xor ljmp sbb fs xor add mov jecxz or add sahf xchg mov pop dec fnstenv and js fsubrs push pop addr16 push aas dec xlat bound or stc lods add lods ficomp xchg cli inc fiadd inc rorb inc sbb adc adc sub xlat sbbl xor xor mov sbb jbe inc movsw ds jmp or jno aaa cwtl mov xchg cmp lods nop pop inc sahf xchg cmpsb push inc stos lret pusha cwtl jp push je fnstenv sbb push xchg add sbb imul inc mov push outsb mov and add add (bad) pop inc dec jns xor rcrb or or push jmp test and dec int3 (bad) leave sarb scas cmp cmp jle out xor stos dec and in mov mov js jnp insb mov or inc pop jmp sarb cli xchg and mov jne cmp dec add inc dec les aam push mov pop mov and dec fdivs jbe sti add push push or mov pop ficomp mov popf inc idiv mov lea aas dec cmp cwtl std adc mov rcll xchg pop jp iret sahf call jbe add leave scas (bad) mov mov (bad) das lods cmpsb xchg les imul xlat pop sub shrl cld clc test and sbb not int3 sbb push (bad) xchg pop pop push and js dec xor mov (bad) ret rcrb or mov add add push ja sbb add in pop outsl inc int3 mov add push push xchg xchg jo xchg arpl or rcll inc cli test or sbbl fisttpll inc xchg sarb mov rcr imul add add fdivl popa aaa adc jae imul cwtl lods les mov pusha cwtl sub (bad) js sbb roll (bad) dec dec xchg icebp dec iret (bad) pop pop mov fdivrs aad push or dec lahf lods add adc mov sub lods (bad) push xchg clc push loope,pt mov rorl aas sbb inc cli test repz adc and mov pop mov (bad) cmp cltd test pusha push inc pusha mov or jecxz add imul outsl sub lahf inc (bad) xchg std xchg pop pop daa or lock insl sbb add mov outsb push jno cmpsb (bad) sahf mov loopne cld fdivs dec xchg test jge ss adc insl lods push insb int3 stos jbe aas int3 je pop out lahf pop shlb cmp jb xchg dec jae stos into enter xchg inc (bad) inc ljmp sub fild xor add loopne push mov js add and xor icebp aam jg in dec xor movsb into pop jle sbb pop fsubl icebp mov insl mov jecxz sarl dec sbb rorb pop (bad) mov fdivs jecxz jns lahf (bad) mov mov mov xchg add cli cmc rcrl test test push mov push ret in jb sbbl mov fstpl mov jb push jg dec insb push leave sub (bad) jbe movsb xchg push mov into sbb (bad) in inc insl cmp popa sbb cmp mov stos dec pop mov push push add add outsb push insb and adc aam push pop ds repz inc pusha js shlb call mov xor jge lret adc aad test jecxz mov inc aaa adc (bad) mov ret (bad) xor jbe xchg mov push popf mov push xchg pusha inc cli lea sub jmp pusha sub pop mov das cmp jmp add je sahf rcrb test cld mov xchg cmp test sbb sahf pop (bad) pop cmc sti mov mov dec mov out xchg dec mov cmc jnp dec enter into leave sbb jbe mov adc dec lods icebp enter jmp or sbb orl adc or fidivr es aad dec pop repnz or rcl add mov xchg inc or mulps fsubr inc sbb cmp fwait ss out movsb outsb xchg xchg cld mov iret inc xchg loopne rclb xchg pop pop inc add mov int3 lret sarl fimull pushf lods ret xchg push jb lods sbb or lahf xchg xor mov xor insl lret dec fmuls jp iret int3 cmp lcall fwait gs arpl add mov lods inc adc popa dec jno xchg sti or hlt fisttpl mov out ljmp bound roll sub aad (bad) iret cli add fdivrl sub je sahf lret xchg out fwait pop pusha cwtl negl sbb xchg sbb cmp jge and in sbb cmp clc out es or xlat sub shrl (bad) stc and cmpsb cmp cwtl add xor and out and or gs mov adc mov xchg or cmp in scas xorb xchg xchg arpl testb add add (bad) loopne ret add jmp das inc jnp int3 clc stos cmp mov faddl xor dec ret lret movsb popf pop pop mov out push pusha cwtl adc or jae out cmpsb roll (bad) test into jg testl shrl lahf movsl push ja dec andb cltd jp add push pop pop or jp dec dec fwait mov fwait repnz orb xor loop or (bad) jl or dec mov xor pop sbb pop add out insl jne inc pusha mov test repnz xchg pop fs imul pop into into xchg movsb (bad) out leave sti pusha cwtl adc and loopne,pt movsb or cmpsb scas pushf into push jl lahf std mov push jg adc jecxz js add xchg inc test mov pop ret sub mov rcr pop adc pop mov mov cltd pop lahf sbb es adc ljmp pop xchg icebp add and vpsrlw gs xchg fwait mov out cmp mov (bad) or cwtl sub fwait sbb jg loope pusha dec sub notl test cmp or out xor js pop cmp lds cmp bound daa int push fwait xchg add add dec jl jp insl dec aaa push sti xchg dec das push in sarb popa mov fbld negl es sub movsl or lods mov sbb (bad) jl gs mov push rcll inc lcall pop ljmp enter pop adc repz add mov sbb cmp sarl pop das fbld sahf mov insl rcr and push push std pop cmpsb add push mov lahf push cmc (bad) jbe mov adc out mov mov lret test (bad) fdivs jp push push jnp into fldt sub out pop mov jne dec pop xchg add add add mov xchg sub addr16 leave sub (bad) jbe movsb lahf dec mov push dec stos jmp outsl insl pop cs lret movsl adc dec or les push std cmp fwait in xor imul leave or sub and xchg inc sub rol jp add xchg push rcrb (bad) arpl ja push dec adc push ja inc fucomip dec xchg cmp inc xlat sub lods imull (bad) and push out inc enter imul mov inc (bad) mov ja (bad) repnz xlat leave mov into pop push jge push dec pop xor pop xchg xor add ljmp or in push fsub repnz dec dec dec dec push xchg notl ret push pop mov icebp mov xchg dec mov stc and mov pushw (bad) xor push jb fs clc aam aam mov sub push mov lock cmp in add lret insl cmp fidiv mov pop fs mov fwait mov ret ds rcll jmp or or xchg arpl or inc pop mov fcmovne adc mov mov daa mov and and jns jl mov (bad) lahf test fs or dec cmp pop mov push dec push fnsave dec cltd push fdivl and mov lret lahf xor mov or add (bad) stos sti xchg jg (bad) lods pop vpmacssdqh or (bad) mov jns and out mov daa pop pop sbb jmp mov pinsrw sub add enter iret add push xlat nop (bad) arpl push (bad) cld dec add es das sbb in sub test push enter into pop jle arpl mov aad icebp mov mov push adc xchg rcll divb fcoml jge mov add arpl call clc add and orb fwait push pop cmp and push sbb fildll lret adc push push iret inc popf inc cmp pop xorl enter ffree inc sbb icebp (bad) mov movsb aad jmp xor js stc lcall ja sub scas mov add cmp or notl jecxz pusha (bad) jp les enter fisubr jb jecxz xchg push dec fcomip push (bad) xchg mov ljmp cmc rolb popf cld mov lahf addb push inc push inc pop mov vcvtsi2ssl mov inc js std jae cli mov adc push lahf xor fstps lds cwtl aam or add adc pop pop cmp dec pop mov ja push leave cmp push repnz loope xorl sti xchg loope push mov (bad) test aam jp fidiv sbb mov push inc xchg out push sub negl add cmp sub jb inc inc lods xlat pop sub (bad) out mov mov fdivs sub jne mov xor stc jmp les fiadd push fild cmp leave mov inc fist fs xor pop jge imul add lcall pop pop imul pop and push xchg (bad) iret mov (bad) hlt fisubrl and xchg adc insb std insb cmpsb xchg je lods aaa popf lahf sbb jbe push in and jnp xchg jne mov xchg add xchg pop push mov mov mov add inc ficoml sub movsl cltd mov leave mov mov arpl push lea jo and inc dec es hlt add rcll stos sti mov ss lcall or inc adc scas into push mov sub cmp add add or xchg inc (bad) ret in mov or and push mov lret sarl xor in pop outsl inc sar stos jg pop enter mov sub or mul cmpsl jae arpl jnp,pn mov mov jnp pop int3 push xchg mull dec inc jge (bad) in push add add xor mov nop xchg mov and jno fbld imul jnp mov lret icebp cs (bad) pop mov push cli fild arpl push pop fwait adc int3 and jb adc pop loope ljmp mov push dec adc xchg dec push mov add dec loope inc imul sub and mov and leave lcall and jmp add loopne leave mov push rclb xor arpl mov daa and adc popa sti xchg xchg mov loop (bad) mov in add add add movsb or mov push push aaa nop sbb or inc test xchg cltd insl mov insl adc data16 mov cmc xchg cmp (bad) adc js xlat cmp in fwait test jbe jl imul push mov mov (bad) push (bad) fimull shlb xchg push bound add cli or (bad) repnz pop leave mov into xchg sarb sahf pop xchg or arpl mov mov repnz shlb roll push mov loope jp aam repz loop mov push sub test leave jg lcall push mov cltd (bad) js (bad) ss hlt das aad (bad) dec pop test and inc inc cmp data16 fistp dec and ret jae movsl jae and sub adc lds or pop js lcall dec lea insb mov mov sti (bad) call std adc in mov add nop jno pop adc xchg lea xchg add pop mov in mov xchg jp jmp sub imul sbb inc and xchg icebp add add fcomi and xor inc sub pop xor int3 stos jbe sti add test inc mov and add add repnz cmc sbb jno or sbb push (bad) xor out dec cli push in lret es test (bad) xchg sub sub lods mov jns jge imul rolb adc add sub xchg jecxz mov pop jbe jns and pusha fwait mov push sti ljmp adc into scas pop xchg icebp mov sbb lcall je cltd (bad) ss sub dec mov fisubr cmp aas inc imul or dec lods into push nop fwait inc pop mov sub sbb push dec (bad) push popa or pop fsub inc sarb (bad) int (bad) inc (bad) and inc adc add add mov sarl adc out push mov out adc arpl or loop cmc cmp popf test aaa les mov xor lcall jmp jnp inc aas fmuls jge outsl loopne jg fcom xor xchg xchg std mov lret push add daa xor add dec jne jbe mov or sbb stc clc add dec enter adc lock roll mov aad lods or mov lods mov mov cmp arpl pop xor inc sub jb divb adc ret fcomps dec xchg loope in in xchg add pop aaa sahf andl mov movsl imul add daa mov mov leave push cmc (bad) ljmp sub jne ds test in or outsl adc sub adc sahf mov jge shlb jle sbb jecxz shlb int xchg xor ds pop mov das sti adc cmp enter in mov mov jge xchg call mov movsb repz or jno add inc scas arpl mov inc mov sarl add pause pop pop out push mov bound sub adc inc int sbb loop fdivs sbb sub add add add add push mov push jmp xchg test push aas int3 mov cmc sbb lods push mov cmp adc add rorl int mov cli push add mov and mov sbb or cmp (bad) jbe mov pop (bad) pop inc pusha movsl cmp jmp out stos aad out mov cld cltd xor sbb imul or jno jle lds xchg in xor enter (bad) mov mov sbb xor xchg sti and xlat mov lods mull mov mov ja inc mov sbb add pop out cs cmpsl inc xor xor cli push mov fidiv aam stc cmp cmp mov lahf loop fildll stc mov sub add ja and nop in lret icebp jg (bad) popf xchg push (bad) xchg cwtl adc sub adc sbb pusha insl mov cmpsb mov add add add add inc and xchg jmp aaa popl xchg shlb dec nop xchg in xor jbe outsl sub cmp mov jbe int cmp in arpl pop sub movsb addr16 jp cmp roll or int3 jl jmp lcall sbb loopne jmp adc sbb imul pop mov add push test das push pop mov and jp jae and andl cwtl fisttpl push xchg icebp xor rcrb out inc inc push ja sbb jne clc in sbb add adc sarb add into sbb and out divb je pop jb or ds xor inc cli out ja sub pop imul jbe lahf push inc adc mov mov jne pop ss out call mov lock cmpb iret sbb imul mov add pop mov nop sub cmpsb jecxz sub (bad) jecxz inc lds push fiaddl (bad) cmc push bnd (bad) jl (bad) xor pusha jo stos stos mov repz mov or gs mov push sbb into rorb or rcr sub jbe out (bad) nop jmp add ret mov repz sbb nop fdivrs add pushf sub mov jp xchg dec jecxz in xor xchg out mov (bad) cmc fisttpll xor hlt in adc sbb rclb mov testb and (bad) mov (bad) lret add js add add add inc sub cmp (bad) (bad) stos sbb mov stc add jne (bad) cmpsl mov mov sbbl dec clc fwait sub mov (bad) or jne push mov xor sbb and lds fsubrs push push or pop push xchg cmp bound jg xor xlat pop cld jecxz push mov jno jp inc loope mov sbb subb scas mov (bad) std jmp adc push fisub (bad) xor call mov mov mov dec push outsl test xchg xchg arpl jle aaa add mov push or mov mov das sub and (bad) jge lock es popa jae pop sub or mov cli xchg jge add out inc or in fistpll inc mov (bad) xor shll jecxz ret mov push lods (bad) jecxz mov add in (bad) xchg ja scas test inc and loop aam sarl xor in pop and dec sub aas inc rcll jge or dec dec lahf imul and hlt in gs dec out push addb fcompl xchg je rorl popa mov daa mov lods inc cli xchg fldt add add or add pop xor addr16 sub or imul sbb mov addr16 xor adc or or mov pusha aad jmp popa inc xchg shll jecxz std or push setne inc cmp pop push jnp adc or add add rolb movsb movsb not push sub jb or loope inc ljmp out icebp stos outsl stos and mov cmpsb mov out test mov xchg push out das mov ljmp sub sub sub xchg popf test sbb addr16 mov push insl mov daa cmp xor cmpsb (bad) and xchg push rcrb dec fsubrl stc jns mov adc mov mov test in or add insb jl push scas ret movsl cmp lcall cs call add ja cs mov fstpt add add xchg (bad) mov test xchg mov mov fistpll js push adcl and ret mov sub sbb fnsave adc pop test fisttpl push sub lret or in ljmp xchg (bad) mov jl xchg lcall sti xchg popf mov lods cmp pop clc push dec mov mov jae mov sbb movsl or xor es cs mov push leave cmc addr16 push into sub mov enter aad lds jno,pt sbb xor (bad) out jl cmpb repnz add add add jle enter movsb mov lahf xlat repz cmp adc dec mov adc push in hlt mov push jmp mov rcrl add dec out xchg test mov pop ljmp clc pop (bad) push push shlb int dec adc ficom add mov mov mov insb nop mov dec push mov lock cmp xorb arpl repnz (bad) adc aam sbb (bad) adc jnp outsl ja cmp sub sub sbb rorl shrl pusha cwtl negl add mov lea loop insb std test mov dec std mov xor mov (bad) in divl (bad) mov testb add dec call cli xchg xor push xorl (bad) inc cmp insl cmp mov inc jb sbb and popa add aad xorl and jecxz ss dec xchg in push dec cmp xor clc mov mov add jle fist and pop adc imul fbstp cmc pushf pop jle leave pop pop pop movsb mov insb sub xchg sub mov lds std push and pop adc aaa dec cltd std sahf fdivs and mov ds or push js stos je aas int3 mov into mov jnp pop enter add add ret loop popf out jge int3 mov xor add cli push add rorb testl (bad) xor shrl pop pop jge leave movsl mov pop lods pop enter push fsubrl adc pop mov mov outsb clc ud1 jmp push dec dec (bad) loopne out add add rorl mov (bad) loop cltd (bad) arpl fsubrl js mov dec sbb xabort fwait mov in negl loope lods fisubrl mov gs sbb arpl mov sub mov sbb pop sub stos ss in dec lea (bad) xor add xchg daa cmp outsl rcr xor adc imul int xchg inc rcrl fisubl push mov mov das sbb xchg in test insb jbe into fbld dec sbb sbb dec cltd push jnp into jb pop push add dec rcrb jae hlt xor push push add (bad) daa jecxz (bad) mov aas and pop jmp mov lret lods ds addr16 cmc jno adc push leave dec jb jecxz dec push aam cmpsl sar scas inc sub dec arpl inc pop out inc sub popf int add cmp mov cmp push dec cld insb movsb into add add (bad) cmc xchg pop rclb arpl sub jb out jns cmp and push push popf outsl call add push mov push xchg aam jcxz jp and fisubr in shrl lds and inc sbb xor jb,pn in jmp lods inc jg (bad) add pop scas les inc popa mov xchg loope add in (bad) arpl hlt add push ret dec push mov add add negb push movsb inc cltd inc push outsb clc or sub fidivl push jmp or inc lock dec int sbb pusha add add (bad) js (bad) push ss (bad) jp and push daa and pop enter push mulb lahf (bad) mov into adc in xchg imul lods ds scas pushf movsl push mov inc in leave gs gs xchg cmpsb mov lret scas jp nop mov cwtl ljmp and add mov arpl sub cwtl vpaddsb xchg pop rcrb popa test shll out jb data16 repz (bad) std jmp in repz mov push jmp dec sbb cmp (bad) sub addr16 iret popa mov xlat jae hlt lods sahf in les add xor sbb sub fisttpll movsl xchg sarb sar (bad) call lds jae fistpll imul (bad) mov test push movsb inc jns xchg sbb in xchg incb icebp mov jecxz fninit inc or add add cmc push icebp xor mov fwait sarb cli push loopne and (bad) and inc cs (bad) cmp outsl int3 je pop mov daa mov hlt push loop (bad) push (bad) ficoml (bad) push sub ljmp sub jl rorl stos or add mov inc lret fidiv in add test mov pop popa shrl lcall (bad) cltd popf inc mov test nop insb sub adc enter jnp insl mov push mov enter sbb xchg push cmpsl xor pop xchg pushl (bad) addr16 pop test jne inc dec cwtl xchg add jmp push jmp pop test outsl mov andl arpl nopl inc ljmp insb addr16 sbb das sub sbb into xchg dec pusha out lret lret mov das outsl lahf and or iret repnz subl imul jmp (bad) sti add add aaa jnp jp add pop popf xor aas or lret out popf lahf icebp xchg lods or lahf scas cmc (bad) jb mov test mov mov jnp (bad) in cmc (bad) xor and (bad) notb mov das sbb stos ret (bad) les xchg test ljmp add add in leave dec mov gs xchg sarb fstps cld aaa clc xor mov nop imulb pushf lods sarl mov out mov mov sub loope add repz mov daa arpl push aaa in jg mov xchg pushl xchg test shrb mov lcall and add add xchg clc in mov xchg sti dec pop push sbb sbb fstps ret jmp (bad) loope aas imul mov mov lock add sub xor xchg iret mov push dec stos (bad) call mov pop sub popa (bad) jmp cmp add (bad) xchg pop xchg (bad) iret pop mov pop jle in pop pop push sub leave (bad) rep dec mov lea aas sti insb std mov ss lock loopne xchg xor and pop xchg xlat cmp and jecxz mov fcmovnb cmp push (bad) push push xchg and (bad) fild add rorl jae lods dec jae into or in leave cld rorb sti mov (bad) ds call sbb out mov imull xchg gs loope fisubrl mov jb cmpb daa pop or xchg jp mov push sub sub pop mov int3 xchg loope or pop scas nop push call popf in mov push fwait (bad) stos xchg (bad) hlt and xlat aad and cmpsl aaa pop test in push cmp add leave mov mov and and test cld adc cmpsl sbb add xlat inc sub shrl adc mov ret push inc push and dec (bad) push sub xchg fld xchg popf mov leave sub repz loope xor insb jbe jb loopne inc aaa jge leave cmp fstpl mov mov add cmp cmp mov sbb ret mov sbb stos mov and pop cmpsl lret pushf push sarl repnz ja test pushf lahf add mov xchg mov call mov sbb or das mov in dec lcall stos sub lods cltd negl addb pusha cwtl repz add jge xchg lea mov jb inc fimull mov cmpsl add fdivs jb pop inc incb or sbb test je je jl subl enter notb jb sbb mov ret ds inc sub enter add add jp sbb mov hlt std hlt or das test test cs dec dec mov pop loop xchg in or enter push sub jecxz bound mov fninit inc shl or dec fwait jo (bad) enter jge outsl loopne mov inc icebp and add mov rcl or shll sbb push jp test iret mov fwait out mov movsl jne pop je inc fwait adc inc inc inc dec lahf inc jns pop or into gs gs xchg dec pusha or mov mov and fdiv inc fsubrp mov lret and sti sarl ja ljmp add insl pusha cwtl call test jge js mov hlt pop pop arpl popa loopne xchg sbb out or mov sahf std mov pop sub mov (bad) aam mov jge mov or (bad) stos mov ret mov cli rcr fisubrl lahf (bad) clc or and add add jnp popa movsl cmpsl int sbb push inc out cwtl xchg and clc rcrb mov hlt sub (bad) out adc jge repz jno mov xor cs mov in popf pusha repnz enter pushf cmp std in pop cmpl cmpl cmp mov mov add xchg fdivs test out repz or stos add dec daa (bad) out sarb in xchg fisubrl mov mov dec (bad) popa hlt or sahf mov dec test aad sbb leave mov into les popa jb mov dec pop jle sahf outsl insl fimull pop pop out sub sub pop mov enter lahf lcall inc xchg bound out mov ds sbbb pop sti mov fstpt ror pop mov loopne sbb or pushf sarb or sub and in call push lret int3 jl pop mov enter cmp adc push imul (bad) or cmpsl pusha popf push sarl loop movsb cmp fidiv ret mov dec pop int js insl in xor push clc je add mov fdivrl testb das dec in notl xchg sub movsl add or mov push fimul je sbb pop scas adc sahf jge fisub push fsubrs xchg cltd jns call xchg jb add and push mov and mov dec inc sahf cmp roll inc stos pop dec or cmp add gs xlat sub loop push lcall pop pop out das test adcl call dec cmp cmpsl sbb outsb cmpsl sbb sub mov dec cmp mov stc and std push sub (bad) lahf xchg xor and pop xchg xlat (bad) jl xchg cmc rolb add or (bad) stos call int3 jl pop mov sbb shrb cmp jo jmp fimull adc or xchg xor mov aad cld adcb inc ja negb pop jne fs xchg mov sbb repnz jb xchg loopne lods dec jg loop popa gs add movsb into pop jge adc inc stos jbe hlt clc mov mov cmp xchg pop sub call or fdivrs push add rclb push sti xchg inc push insb addr16 add or fwait and ret in ret jae icebp jge pop repnz jmp mov add inc sub xor cltd sub inc pop gs sbb stos inc pop scas aas call sbb lock inc jbe aaa xchg push repz adc xchg negl sbb xchg (bad) mov xchg fcompl dec aas lcall add sub push xchg mov dec push mov mov push ret lret orl mov addb mov mov mov mov lods mov mov xchg xchg mov push test add add mov adc imul pop sub lahf aas jns dec xor dec fisttp jb movl ja push cmp cmp arpl (bad) lods outsl mov add popa jp cmp fcomps push jmp movsl add mov (bad) mov lret (bad) add outsl and pop ficompl mov add sahf jp out (bad) mov push leave mov lret mov dec repnz (bad) arpl adc data16 rclb arpl mov push sub xchg cmp inc xchg arpl sahf cmpsb (bad) out xchg fwait pusha cwtl stc adc int insl mov add pushf (bad) mov inc (bad) fisub sbb stos lds push rclb mov (bad) jnp xchg xlat (bad) in sarb inc aad aas inc or push aad std ret mov dec xchg jnp cs mov popf add mov adc jns xor add cltd dec call repz add (bad) push mov jo fisttpll push pop out sbb clc dec mov push cmp xor iret or je adc ja insw mov cld fs insb mov pusha out mov popa cmpsl (bad) and out xchg sbb mov add ds stos jns (bad) cmp in pop sub jae add add lods adc lea xor or xor and aas mov outsb pop sti push mov push leave mov dec lahf (bad) xor int js jb iret or inc add push cltd pop cmp inc sub mov xchg cld pop mov inc xchg iret adc add add sub or jecxz dec pop daa sbb inc fwait out out xchg sbb data16 jb imul jp addr16 dec negb dec dec sub test push or push jbe pop test dec and sbb push addr16 xor loopne push insl xor pop leave mov pop inc add add add jmp or ret sub lea hlt inc jb sti sbb push sub shll pop cmp data16 xchg (bad) and sti pop mov push xor in negl sbb mov adc dec fisubr sbb pop cmpsl movsb jo hlt test cmp mov fwait inc xchg test in fsubrs popf adc aas inc data16 mov jnp les mov ss fdiv xor (bad) sbb xchg xchg mov inc stc cmp stc ds cs sbb sub pop out sub popa jb add sbb ja mov pop loop loope (bad) push sti int3 les lret pop das pop insl jp fidivr adc adc (bad) and xchg icebp xchg cmc xchg loopne push (bad) xor inc insb add rorb inc aad mov popl inc outsl add and fwait mov xchg jp mov add xchg push jle in jae push dec dec adc push lock adc pop mov das sbb lcall dec stos cmp fcomi stos stos xlat (bad) cld sbb lock xchg inc movl or icebp popf dec ret mov adc les aam lret sbb mov add lds out popf lahf icebp mov sbb sbb mov inc pop inc stc cmp mov cld std popw cmp fnop cli sub dec out adc mov sub adc xor push xor cmp hlt data16 nop xchg stc rolb cmp lods mov cld fbstp add sar sbb xchg mov and test mov mov mov xor aaa addr16 add inc xchg inc xchg iret sbb lret cmp aas and cmc xor xor fistp or xchg in mov xchg sub adc sahf push (bad) pop jmp stc push adc adc pushf daa cmpsb mov inc add andl add or pop int3 ss inc cmp mov outsl sub and xlat in adc fsubs xchg add cmp sbb push dec mov dec les lret shrb outsl insl jne pop or adc enter movsl shr dec cmp mov fiadd sbb push pop sub mov bound jbe,pt mov jbe xchg icebp xchg iret jg gs pop divb int daa push addr16 rcl inc movsb clc sub xchg and insl cmp mov neg fldt cmp movsl inc sbb fisubr adc popa sbb subb add add dec imulb iret (bad) jecxz cmp gs jp std adc aad jb cld mov mov xchg pop (bad) mov mov shrb outsb pop (bad) mov icebp sub (bad) fninit xchg inc pop js rcr scas or in (bad) jae mov fdivs mov idivl add pushf (bad) std loopne (bad) call dec or aam mov jae cmpsb jae lods into adc out lahf add loope adc pop int3 fldcw mov leave and xchg and pop cmp pop cmpsl fsubs jp ret adc test mov (bad) jmp incl add add int3 mov mov pop jbe rclb add jp or and out cmp jle sbb movsb mov hlt out (bad) mov xchg mov (bad) mov ss mov lret sub negl ret insl sbb and sub add mov pusha xor pop xor xchg sub fucomip mov xor adc decb push pop jbe mov lcall cmp push adc pop sbb (bad) cmpsb mov fsubrl enter cmp cmp or add add add add in cmpsb xchg mov xorl je enter add adc sub inc cmpl mov inc mov xchg jae dec movsl aas pop pop push inc lahf mov ret ds push sbb sub aad lods or xchg mov mov leave insb adc add add data16 jnp xchg hlt aam in cmp cmp adc imul imul pop pop (bad) aad jecxz in das push add repnz adc cmp out jae inc dec adc (bad) adc test sti xchg sub add flds (bad) mov add cld outsb sbb cmc (bad) ret loop popf out pop mov or lods pop mov rclb jmp or lret sub popf ja push daa lock movsl stos push test sub xchg in cmp dec decl adc inc repnz loope test or add mov pop adc fisttpll xor push call adc xor test repz push pushl pop sbb dec out mov or or inc movsb adc ret arpl cmpsl aaa pop xchg push push fnstenv ret outsb mov test movsl add into hlt dec jo daa clc mov add push cmp push inc push dec xchg sbb pop adc vdivss pop jle imul pop movsb mov adc fcmovb push add daa mov sarl push sub dec adc dec cmp cmp insb sbb inc lcall add add sbb in clc ss and ftst mov adc cmp sub mov or stos mov out stc mov xchg jmp out inc push (bad) xor mov aad loopne inc mov and cli mov sbb xlat pop add pop adc in mov cmp (bad) outsb repnz insl call test cmpsb (bad) cmpsl mov jmp pop leave cmp pusha repnz out mov push pop outsl xchg (bad) sbb mov sub pop in or and mov or sub leave inc xchg lret push sahf add sbb mov and inc movsb fadds jne (bad) enter mov mov call mov lods out ja pushf je imul hlt mov das enter orl lret xlat mov fninit out sub adc pop push pop add in out mov stc jnp mov inc imul ret xchg inc test inc (bad) push mov add popa mov pop jecxz or ficom jl inc push cmp mov sub pop outsl and push jne out aam dec movsb mov mov xchg rcr mov add outsl xor xor pushl mov orl fwait decl lahf dec xchg and mov rcrl prefetcht0 mov clc cmpsl imul cmp imul (bad) mov add sub loopne sub lods outsb inc in (bad) in cmc iret jmp adc lret mov jnp and add lcall ds adc lret push mov xor mov pop and push xchg loop push inc push movsb xor adc fnstsw (bad) icebp xor xor add and sub push sub in ljmp cltd xorl sbb sbb shrb jecxz divl test xchg pop adc pop stos into notb dec jle pop lock dec xchg shl sbb cmpsl int sbb aaa or cld fistpl inc (bad) add add std pop insl inc sub inc cmpsl or sub imul iret imul mov sub loop repnz clc pop xor adc push test mov das lock lahf dec and sub jecxz scas add enter and cmpsl mov jnp xchg jg dec and push mov in hlt push mov mov (bad) repnz sbb add bound pop out inc xchg nop xor into cmp xor jnp push ss jo dec mov push dec stos inc out iret enter jne sub push imul jb cmp ljmp cmp bound add add stos lret xchg and test pop xchg xchg imul cld insb sub mov in add xchg jb imul insl int3 mov pop sub push outsb jp cmp push (bad) test inc dec inc mov inc data16 sub call ret addb inc xchg or mov leave and adc xor jmp pop mov sti or mov pop bound lock mov je gs add movsb into (bad) xchg repz push pop popfw and xor jo repnz sahf or dec jns xchg mov ficompl roll xor pop nop ret (bad) mov mov or les and cmp imul lea sbb enter add jae cltd cmp fnstenv push popa add inc sub xor aam fildl insl dec jo daa rolb clc xchg outsl cli xchg pop out jmp jge lea add ja mov enter xor popf cmp mov mov and (bad) pop sahf cmc imul jmp mov movsl adc jne (bad) mov xor std cmc fdivrs enter repnz pop sub push outsb outsb xchg cmp or sbb stos out decb add add add or and jb mov cmpsl dec nop or pushf out push leave mov or ljmp xchg fldcw sub and aaa in ret call shr (bad) xchg sti stc or popf pop fbld stc mov js xchg cmp add add inc in adc out inc or aaa sbb jnp mov iret cltd cmp mov (bad) std add inc lods jb sti dec mov rclb inc jo data16 add stc call add dec mov cmc mov or cmpsb repnz iret mov scas mov add add xchg xchg mov sub lret int mov cld cltd jno mov das mov (bad) movsl shr and xchg stos decb cmp mov sub mov in push cli mov jnp (bad) push cmp add (bad) outsl das push imul mov std add add daa lret inc cmc (bad) jecxz push jle dec stos pushf in jg daa (bad) xchg icebp or add mov je dec dec and xchg imul mov test jo pusha fstpl mov jnp jnp popf jne repz inc insl jb and add dec repnz notb sbb jmp outsb pop aam icebp pop mov dec aas out xchg jmp xchg jle mov jnp xchg push rcrb (bad) pandn sbb inc pop insl xlat cmp sbb mov mov mov cmpsl je mov xchg jae xchg imul pop inc inc push int adc test divl (bad) in add add add inc rorb and add mov hlt ret jo ja movb and (bad) cltd out adc call iret xor inc inc cli inc jmp sub jmp bound jp (bad) js or lcall je lock into lahf xchg xor jne mov lret cs mov rcr sbb shlb xor mov sub adc and lret fimull mov inc xchg lret push lcall mov xor or cld fcmovne sub fcompl and sbb ss mov adc movsb xchg repnz adc jo rcll xchg mov das adc push pop push sbb dec movsb aad or (bad) xchg mov xor mov sbb mov pusha aad out sti add cltd jp std jmp dec mov mov push ljmp cmp leave push movsb outsb insb xchg cli sahf push insb inc cmp psraw cmp jg insl daa fstps arpl add add js fwait mov mov test test mov xchg int3 dec rolb mov jnp pushf add add js xchg sbb inc sub and xor xchg push sbb sub jp pop mov push mov test cli add add dec dec dec in add icebp pop imulb adc jnp fucom inc icebp and adc dec movsb std inc das lret test sub dec lahf mov fwait jo mov lods jne mov loopne mov pop push dec xor dec inc out lret sbb mov cmc inc push daa rolb clc mov cli xchg or or sbb lea ja mov enter xor popf cmp pop add jl mov shl je adc adc or xchg xchg xor cmp (bad) insl (bad) into adc mov cmc and mov popa insl repz xchg gs push lret int3 imul pop push jmp les mov mov repnz inc cmp (bad) xor add or insb jg cmovns jnp push cltd lahf pop xchg int sti out push adc pushf sbb jb shll popa lcall mov cwtl and mov test arpl inc mov and sub add pop cld stc sub jmp insl xor push ret pop dec dec dec jb pop xchg pop mov outsb push xchg jnp push xchg adc or and (bad) out sbb (bad) and pop adc pop push stos add sbb pop out jb test adc ficom xor cmova mov xor icebp pop and repz push mov divl out jge ds lcall xor jo pop pop std sbb (bad) jp sbb sub xor lcall push push fwait imulb es popf iret sbb jp push lahf ret jl orl add add incb add (bad) notl push push pop push bswap mov sbb (bad) cli pop or jb adc pop leave cmp inc loope sub mov jle es cmp dec fdivs aam mov mov and cmp jno adc fdivl add in inc scas arpl add add add inc mov or shll jge pusha bnd or mov xchg dec pop daa add fsub and add rcrl ds dec xchg scas cmc ret and push dec and inc aam adc mov pusha xchg pop sbb mov push dec jo test fs icebp popa sbb push add sarb jno mov and mov jns jp (bad) push ss lods pop mov mov or bound mov xchg out sarb cli pop mov inc dec mov stos jl cmp jmp mov pop mov outsb pop lcall iret fsubl adc cmpsl xor imulb adc rcll pop jle out mov inc sbb push xorb mov mov rorl and outsb xchg mov sti outsb imul sbbb lahf mov ret sbb dec jg std dec in aad leave (bad) je inc movsb xor (bad) mov xor out mov jl pop xchg add add dec imul fidivl sub cmc les dec sub jmp outsb pop (bad) mov test loopne jno xchg jmp aam (bad) int3 (bad) dec dec dec aaa pop add or or mov xchg rcr in icebp and mov mov call sbb mov add or in and add add push sti or jb,pn xchg push notb cli add push movsb (bad) mov xor mov sbb (bad) arpl push addr16 test test cld mov sub call aam pop outsl dec jmp jbe mov add sbb pop jmp inc sbb inc and dec out jnp in outsb push movsl xor insl xchg (bad) sti push mov xchg daa mov cwtl and dec insb sbb push and mov and mov cli dec add sti in les add push cmpsb cmpsl inc cli lea sbb sub dec xchg inc out add push insl fwait mov shlb sbb push mov ret aaa inc dec ss loop dec mov enter jp stc mov push sub pop sub pop dec out jns pushf push rol leave test bound mov add pop xchg insb add xchg in mov dec sbb add add add into in adc mov ss popa in sbb mov jae out jmp out lods push cmpsb mov icebp jno inc push xorl mov inc or mov adc fsubp mov (bad) mov (bad) adc imul ret dec iret sahf sub add add lahf cmp adc mov out jo sbb and insb std aas fcom sub xor popf lahf scas into jle jb xor xchg movb lea rcll jge mov push stos dec insb sbb pop or or mov fwait out or das jb xor add xlat sub inc add ljmp sub lods or sbb or mov lahf push inc mov jmp test xor mov sbb sbb ja test add pushf mov shrb loope cs cmp sbb in add add cli jge push dec xchg add call popf or loope pop repz xor jae or (bad) rol mov aaa inc push push es cs fwait ja mov dec stos gs (bad) push ljmp cwtl xchg and clc rcrb out rcl xchg (bad) xor popa mov jnp fs lock mov in pop adc adc xlat int3 xor lret test sub nop test xchg jecxz mov jle stos add jno lock push cmc stos sub mov in das or test shr fsub xorl fnop jl xor pop cmp and add add mov cs mov popf cmpb repnz dec decl andl cmp call pop xchg ret push mov pushf lods fldt sbbb sarl aaa jns out adc repnz iret (bad) pop loop cmc es (bad) xchg mov das jmp inc push inc jmp jae out and lcall jno dec in ja dec cltd std jge fisubl pmaxsw not mov repz sti xchg xchg sti mov mov aad inc rcrl sqrtps ret mov mov js hlt repnz fwait mov sub icebp pop push sbb xchg sub fistpll nop mov add add xchg jne jo loopne scas fsub test iret bound in inc mov imul xlat cmp dec out fild arpl rorb push cmp mov stos mov adc add sub cwtl (bad) lret cld pop pusha pop clc or dec push cmp add leave addr16 dec cmc repnz or inc jb xchg rorb jb xchg mov movsl dec jle dec hlt jl xor cmp jl push pop xchg int in fs cmc lock rcrl xchg pop outsb or pop and mov ficomp bound and dec fmuls add push inc xor push jmp das xor aam add jp cmp adc arpl jae dec jns dec inc (bad) repz add pop or aad or fnop jne mov adc in pop rorl clc jae in lds jge sub push das outsb push jae adc loop push jg repnz enter add lock fist push fdivrs cmp lds add xchg or pop mov inc xor insl jp push jmp jnp loopne cmc or lds inc fisubrl inc mov in rcrl mov sarl adc sbb xlat loop dec lds sub adc mov out jle add add mov pop sarb xchg xor or cmp lahf jo in jl das mov cwtl sub pop mov pop out sbb and lds cmpsl push pop sbb scas sub out mov dec movsb negb xor xchg xor xchg stc in jnp pop inc js add dec aaa mov sbb cmp int3 cmc cltd sub mov scas inc adc (bad) xor aaa outsb daa adc jae fidivr outsl lcall in mov stos pushf inc pop stos faddp or out data16 fcompl push in xchg cmp pop mov stos push mov in add sbb pushf sub fs inc (bad) mov (bad) sbb push pop xor lea adc dec aaa pushf movb jb cmp jge push xor jns lea fsubrs lock inc dec pop cld in pop sub cltd xor out adc lret cmp imul mov add stos and out pop push jecxz sub and and xchg outsl mov cmpsb arpl (bad) or mov cmp les dec loopne jmp jg xorb jmp add sarl data16 fdivrs ret sbb pop dec daa das mov das add adc fs fcoml adc scas out sbb lret inc enter mov dec stos mov lods pop xor notb xchg aaa je inc inc pop loopne ljmp out jo or stc rdmsr adc and cmp mov mov jnp add fisubr in daa leave xchg aam iret jno loopne stc rcrb loop or xchg lods int nop adc das test adc or xchg pusha cwtl dec aad cmp add cmc leave jle mov xchg jbe dec cmc push es mov jge and lods cmpsb movq mov jl mov add sti xchg lahf push add fs test (bad) xor sub lds adc pop shll and pop sbb es lea lret sub mov cmp and ds orl adc rcrl xor mov inc inc pop scas dec add fnop sbb jge js push sub cltd sub dec bound scas or push add repnz arpl in daa add cwtl or ja std and into xor mov or inc dec dec sub and mov daa cmc mov (bad) movsl inc hlt push xchg pop cmp add fsubl scas sbb lcall push jb scas sbb mov pop loop nop repnz mov (bad) mov aaa jle mov xor xor jl mov cmp mov aaa mov out and not negb lret scas gs into ret mov outsb push loope xor push mov push and adc pop (bad) push cmpsb clc sub add push xor and jle dec out decb test lret repnz cmp shrl xor lods hlt push pop inc cwtl adc lods xor xorl inc pop lcall pop sub sbb mov lret mov (bad) std icebp rcrb cmc pop out mov cmp test jecxz jle (bad) movsb decb dec xor lock rcl cmc mov ljmp stos sbb fsubl xor enter sbbl xchg jmp clc stos aaa xchg pop jecxz add add lret ss xor fistl movsb (bad) lock jg lahf mov mov insl mov (bad) mov hlt mov fdivs out (bad) clc int3 mov mov mov dec mov cli popa hlt test hlt mov cmpsl or mov subl subl repz add outsl xchg xchg mov std adc aas mov in sub xor or push mov mulb add or dec lret ja sbb pusha sub push jno movsl sbb pop cld jae xlat mov mov mov and fwait adc popf data16 xchg sbb in ljmp pop jne add add aas inc (bad) rcll repnz pop jle jbe cwtl xorps je cmc push mov mov pop sub cltd leave cmc sub xchg into mov arpl loopne push mov mov sub outsb jb sub pop fsubr and test mov push sub icebp jl xchg out inc push add add dec call cmpsb aaa icebp (bad) enter jecxz dec imul push pop pop jp mov int mov jmp jnp cld adc pop out cmp popf out dec fsubl insl bound or cli push add cli sbb imul lret psubsb ds pop std inc repz adc add mov sbb test lods adc xor pop mov scas mov insl add aas movb fisub cmp mov adc mov fsts or lret (bad) in fist jg or (bad) test sahf push mov dec sbb xchg (bad) pop das fnstcw add popf sbb rcll fistp les int3 out loopne xchg cmpl jle sbb gs pushf or (bad) mov cmpsb outsb adc jmp pop cmc lret mov or or jo add repnz push push xchg cmp into (bad) mov or jnp in push mov add pop stc push fiadd mov add mov or test mov push sub out ret xor xchg xchg js (bad) mov mov or (bad) stos mov xlat adc cmp dec jb lods inc cmp lock jg es (bad) stc push mov add add adc adc rolb inc sub pushf iret adc mov leave xchg (bad) xor stc movsl testl mov das sub mov xor addr16 add (bad) shll leave je pop sbb stc test popa cwtl lcall mov insl loopne pusha dec mov sub fcompl add xchg fisubl mov mov or mov cmp adc out in adc dec stos (bad) notb push and repnz cmpsl fdivrl lods cmp (bad) cmova fdivr add xlat sub inc fucomi in pop pop dec adcb test stos and insb dec adc push dec push and dec pop aam lcall push or cltd jp out push sbb push imul movsl jo scas std (bad) adc push lret in decl xchg jg dec mov push lret xchg and add nop sbb push cmpsl and add push or mov lcall int test push inc sub das add push fs ret xchg fstpl mov cmp testl (bad) sbb das jns gs in aaa nop add sbb mov aas fsts pop jle fadds pop pop movsb xchg call inc negl fldl or mov test sub fadd aas leave sbb and neg pusha jo adc xchg (bad) cmp sbb inc (bad) imul cltd jno or xchg sub jne mov ds fstps rcll stos and push dec push into scas push jns sahf mov push leave mov ja lret xor sbb sti (bad) xor lds das fbld sbb pusha mov push (bad) aad addr16 out mov sti pop stos inc adc fmuls mov jae push cmpsb loope test inc cmpsb (bad) cmpsl mov pop ljmp (bad) jl int3 mov xlat (bad) enter inc outsl add adc inc cmp or ljmp cmpsl jmp push (bad) adc push ror push popa or cmc cmp cwtl add es out push adc push mov int mov sub xchg rclb pop int3 mov jnp sub push and add pop movswl or lods mov in in out mov or push imul aad add pop xchg push add imulb mov dec fwait inc orl adc jle std flds push sbb pop lea fldt out and push add or add add lcall pop mov std add popf icebp outsb fcom adc ja mov sub ret sub scas pop test and stos rcll adc jnp out mov mov in int jg and jecxz lcall imul adc movsb (bad) (bad) jbe mov add int3 push mov xorb pop sbb sbb imul mov adc cmp and pop sbb test cmp adc popl (bad) xchg push cmp mov loope lahf mov xor rol shr xchg jno mov dec jg add add jb mov out (bad) (bad) push inc mov sbb clc add popa cltd push dec xor inc push repz lcall xchg stos adc sbb hlt pop je cs sub movsl shr mull test rorl mov sub sahf mov scas pop clc jmp lods push pxor cs popa add pop xchg sbb xchg cmp sahf cmc push scas mov lods pop arpl iret (bad) mov cli cmp sub stos jp mov fimull into cmp pop jle mov xor je push mov xor inc mov add add add mov cmpsb hlt xlat sub rcll mov pusha (bad) in shl in out hlt jbe sub in std add jmp or pop jle loope dec fsts mov and jae mov gs rcl xor cli or jl movsb (bad) fisubr mov pop or add cs fwait out inc icebp dec enter sub mov mov outsb dec push push out int mov iret lret scas setp arpl icebp js adc outsb daa pop movsb mov (bad) repz in out sbb nop sub adc test adc xor (bad) jecxz pop sarb add movsl jbe sarl lock ret outsb pop fmuls dec or mov lcall mov cltd lret aas loopne orb pushf rcr cmpsl push mov inc cmc jne or push sub inc mov jle sbb aam aam dec xor out out jno shlb mov add mov jle jle jp loope cmp test pop adcl popf scas test (bad) in out jne push jne aas das push pushl (bad) push push and mov ret inc cmp and test push mov mov lret lret or int test loopne mov lret jmp add pop scas xor ljmp adc (bad) sar dec push cwtl pop (bad) jg mov arpl sub jb ror in lods insb add fcomps dec div adc test (bad) or pop test pusha aad outsl cmp (bad) fistpl enter neg insb test mov add add lahf cwtl fdivs lret aad mov adc fwait lret adc (bad) jb ss dec and mov sbb daa mov mov out cmpsl push xchg jge push mov popf adc movsb (bad) enter pop cmp in out xor cmp rcrl data16 addr16 add add mov xchg adc nop out xor (bad) mov pop test or mov jmp lret (bad) test (bad) dec dec jb adc outsl dec cltd std cmpsl mov pop lods add addl (bad) stos and mov in ficoml rol mov lret mov and add add push xorb lods jnp cli push add in or and xchg inc icebp adc outsb and insl fimull or jg idivb mov data16 push (bad) imul out popf nop insl sbb pusha xchg jle idivl pop fsubp xchg cmp in jns lods mov add xor dec sbb jne (bad) mov xorl mov adc xor sub movsb push mov ds mov outsb int3 xchg sbb or add dec dec lcall out and in xor add jno pop jle popf fcoms das add lods jbe xchg inc icebp pop std pop cld stc sar lods add (bad) cli flds ss lret movsl adc xchg cmc movsb mov mov and bnd dec mov dec xchg idiv push xor sub lock daa xchg dec pop daa and stc add sbb and xor int3 xor adc jl push mov add imul ret add jle testb sbb jno mov lret pop add push jbe fcos ret loopne pop mov outsl lcall mov jo mov clc pop leave cld mov nop aas out mov inc mov adcb leave sahf pop jns xor add add add add fcoml push mov into pop test ljmp push int3 push sbb jns push jne insl mov lcall mov pop fistl inc sbb dec add andb les imul cmc jno jge sbb out lcall sar lock cld lods xchg (bad) js add pushf shl (bad) or push iret shll flds sbb sbb adc sbb sbb mov dec jecxz nop mov mov push (bad) fildl adc lcall test push push or add add xchg in or (bad) add or ja (bad) sub mov sub inc mov add mov jno jmp lret jecxz imul and rorl inc ret imul fucom movsl xchg add out pop loope xor lea adc hlt mov fnstsw mov add add in repz loop data16 and add xchg ss fistp mov adc xchg xchg push mov es ds and jns push decb sub (bad) mov jbe subl imul mov test mov jle (bad) xor pusha mov add add (bad) xchg fsubr ss mov cli (bad) push inc dec dec pop sbb inc or fildl adc mov lods aas push addr16 mov icebp (bad) mov pop inc aas push mov nop xchg push or or movsb dec xor jp push adc mov sbb enter add add dec movsl pusha (bad) int3 pop add cmp fist out add xor rcl sbb je mov mov mov pushf negl add jo es sbb mov cld add push mov dec jb outsb or in hlt sbb mov add jo stc js and add add into fbstp pop sub inc cmp fidivrl daa out out cmc loopne push lock mov je mov or outsl shll loope insl dec lret sbb rcrb xor xchg outsl xchg sbb lea pop xor fdivl xchg xor test mov add (bad) push and repz fs inc jae push repz pop aam mov xchg mov pop adc aaa out or dec scas cmp bound and inc cmp popf mov jecxz hlt sub pusha daa dec lahf inc icebp adc mov jle pop cmp mov xchg cmp add jmp iret cmp pop sbb cmp js insl scas cmp outsb mov mov mov loope xchg popa mov pop repnz in into xchg mov (bad) in sbb mov outsl outsb cmp inc cs mov mov push sub or popf out mov or shr and std stos pop add addr16 lock and outsl lods pop data16 fwait mov cmp adc movb and int3 xor mov push rorb dec pop or inc call xchg scas not dec cli scas adc push add add or mov cmp js ret icebp int3 dec xor fs lods lret dec loop xor mov sub lcall xor stc data16 subl mov mov lods inc mov std (bad) dec xlat inc insb (bad) or daa cli (bad) cmpsb pop inc (bad) and dec add add fistpl fmulp mov push (bad) xor je dec scas dec cmp dec es inc sbb xchg (bad) mov mov lahf add jo (bad) xor sub adc push pop std jp cmp lret (bad) into pop sarb push hlt sub mov ret orb add repz sub cmpsb loopne xchg rcrl sub mov aaa cmpsb push mov cmp xor dec add xchg sbb int xchg and orl push (bad) (bad) loopne arpl (bad) fmul mov lods addb clc push dec out lret nop nop fidivl int3 (bad) aam add lea jle shrb jbe into fbld out clc in lret dec test movsl inc outsl xchg lea test jp mov into subl xor xchg push xchg arpl ljmp lahf and cmp (bad) out insb dec add pop xor repnz jecxz aam sub add add or cmpl hlt data16 xchg cwtl add or nop and mov dec out movb or pop pop push in mov push aas xor repnz test pop cld mov sbb pop add add dec mov inc push pop (bad) sahf adc mov add fsubrp inc pop sbb ret cmp xor dec xchg (bad) inc jb nop add and jnp and icebp jg jmp cmp jle outsl mov ret add ja xlat xchg out pusha cld daa push push xchg in mov insb in mov mov icebp pop xchg push jb jae cmp std push in xchg jno add out repz mov ror dec xchg sub sub mov or jmp cmc pop ds pop popf cmc and dec dec xchg xchg sbb aas mov lcall addr16 mov repz jecxz int3 cltd dec test into adc hlt mov add add push pop jecxz imul lret xchg cmp mov lock hlt scas divb xlat aad or hlt test repnz xor cli imul imul addr16 and test dec jl xchg adc aas push mov jnp data16 fstps add lds out scas shll push outsb in ret sbb dec mov pop ficom sbb cmp jb xchg jmp sbb sahf gs push stos loopne repnz push xchg push jle or fs ret call add xchg scas cmp fidiv (bad) je arpl add add xlat jns fbld mov (bad) mov push sub lea cli pop repnz jo cmc shrb cld cmpl test jnp lahf jp imul mov test js std jae lods and cmp in test push sbb adc fildl mov daa cmpsb rcll xor (bad) (bad) (bad) hlt xchg mov das sub xlat popa popa data16 xchg cwtl (bad) int3 xor cmc sahf pop jle outsb clc mov adc jne (bad) repz loopne rcr adc (bad) jb pop dec nop xchg lcall add lret rclb jb jecxz and iret and out pusha or popl adc lds mov or cmpsl (bad) stc push shr scas mov jae andl (bad) cli mov inc (bad) int3 fs je fdivrs nop ret and jg lea add add and ds or pop sahf (bad) nop push int je pushf adc stc sub pushf push mov shl dec mov (bad) and fsubrp jmp orl push js (bad) mov loope movsl push sti jmp cmpsb sub inc xchg dec inc inc popf lret push ss shlb fwait out and add add sub inc jle (bad) push adc add pop inc jl in inc das push aas jecxz popf ret dec push fist iret outsb lcall mov pop xor or sbb xchg sarl ficompl out ss notl mov adc sbb movsb leave jmp jle jno add add and xchg lret push mov pop and mov cmp mov lahf mov stos jbe mov fldl test imul setnp int pop incb push sub lock cmp cmova enter sbb into sbb lea add add xchg mov mov pop aaa fcom test pop jne fist repnz sub loopne and pop jle mov aad test jns or dec test call mov xchg out dec (bad) into jg push add mov adc xor sub pop sti mov out add push lods (bad) mov mov fistl mov and addr16 call jns mov mov lahf mov adc cmp popa and cmp js mov mov inc xchg enter inc fsubrl test addr16 fildll add lahf enter icebp mov lcall adc iret fdivrl (bad) jae (bad) scas xchg pop (bad) mov loopne inc into jo xchg cmp sahf gs mov repnz mov lret inc sbb fcoms lret lods ds mov (bad) or rolb add add jno ds jo hlt and xchg shlb mov xor ss mov pop hlt xor in cmp lahf (bad) pop jg cmp sbbb out push rclb outsl test rcrb stos in loopne test mov jo jle (bad) xchg mov (bad) mov daa (bad) add and dec test (bad) jo imul xlat rclb mulb xor or into and out cli mov lahf mov int (bad) jns mov mov xchg xor ret ret pop dec stos call outsl insl or imul adc add add cltd in gs sti bound dec cwtl pop sbb out test adc into jbe insl pop xor sbb lea ret xchg mov add je gs cmp lock cmp popa (bad) in rol pop dec fidivr lods sbb adc jp leave cltd lea fild add add push push adc loop mov fadds push dec (bad) enter xchg dec gs daa inc shrb out dec and adc jns gs adc nop add (bad) xor mov dec das and mov cwtl push mov repnz in ret adc dec add imul in xchg sbb bound ss sti push mov xchg add xor (bad) pusha imul jg or lahf stos repnz xchg jecxz push and mov mov test xor pop add pushf sbb adc xchg iret add stos inc int3 xor (bad) sbb add fild imul jnp adc mov lret out insl (bad) dec mov pusha adc mov cli bnd cmpl jge sbb std xchg push or fwait cmc xchg loopne ljmp adc cmp xchg jle out mov popf shr or dec popa mov mov push mov add aam fidiv fucomp sub rcr je ljmp cmp xor cli lret cld mov shl sbb add jnp rcrb loop inc adc mov enter inc jnp lcall inc pop xchg subb movsb inc dec mov pop (bad) aaa jo pop jle sub jo dec add in insb xchg push notl xchg push push loopne mov xchg js (bad) jmp pop adc movsb push insb cmp aad js enter jecxz sahf mov fs int3 sbb ss inc jb or in push mov mov into outsl mov pop push leave mov add add push sahf push inc cmp sbb dec push pusha rcrl popf inc sub cwtl and mov ds ja hlt or idivl je pusha adc lock xlat sbb mov inc or loope dec (bad) or push lods jecxz stc pop js xchg call xchg idivl std lahf in rcrb lods into das sbbb outsb dec xchg push (bad) and xchg mov fwait add mov shr arpl dec jle mov cmp mov inc adc xor lods rorl sar (bad) or cld movsl adc test (bad) mov sbb add in movsl pop movsb into in outsb clc aam rcrb jmp test fisttpl sbbb and lock pusha push push pop and jns xchg (bad) mov mov mov ja mov mov mov in lret push addr16 dec dec fwait mov cli pushf loop sbb lcall add add leave rorl mov cmova inc mov daa leave sbb dec push test lods fist test test outsl insl or mov sub sub adc and adc pop dec pop xlat mov mov mov mov sub in push lock xlat repz sbb insb std push rcl cmpsl repnz add lods push hlt jge sbb js test pop pop push hlt std mull insb ftst in push xchg and shlb dec lahf sbb stc loopne int3 aam fsubs xchg adc push sub lret sbb inc pop sub push jmp outsl insl mov pop add add lods out ja xor aaa sti fidivrl ja ljmp loopne xor or mov adc loopne fdivp (bad) adc stos push cmpsb inc in dec loop inc inc dec cltd xorl inc rclb test push addb mov popa and cmp and arpl (bad) in fistl cmp xor (bad) es sub add sub sbb popf jp sbb in sti (bad) xor ljmp xchg mov and mov or insb and test lods mov add add sbb (bad) hlt scas out sbb mov call and mov and sbb xor sar sahf arpl mov push rolb imul xchg ret gs adc push sub jnp mov adc dec jle jecxz cwtl jp lret in fbld cmp pushf outsl les pop std insl inc adc inc jno adc call mov lret xlat or imul sbb mov xorb cmc dec jns dec xchg pushl imul ja js (bad) xor insl (bad) stos add and dec out mov jns notb inc movsl pop xchg iret (bad) push ret (bad) mov mov or into pop imul (bad) sub mov loop mov nop ljmp arpl pusha outsb fs lock out mov aam outsb dec cld jb dec repnz add xchg pop sub jecxz push aam mov test loopne push cmp je push sub xchg adc sbb dec mov mull xchg (bad) cmp push hlt sarb jecxz mov adc push sub stos add push cli and jg mov inc aam stc dec pop sbb cs roll add add int3 pop (bad) push out inc movsb addr16 lcall mov cs add or (bad) sub aam mov clc stos cmp inc scas mov add cmp mov push lock mov lret mov mov cmpl sbb add xchg lods or iret pop push mov mov lds ret fwait or sahf push sti add std call or mov or push pop sbb pop sbb cmpsl inc xchg xor shrb sub insb and or stos and adc pushf cli mov sub mov jmp test add cmp mov in out divb repz jle lret icebp movsb imul jns aad das adcb bound cltd xor push add sub sti xchg lods andl ret int3 sbb hlt repnz out add lock je add int sub adcl je mov jbe cltd sbb sbb cmp mov ss out (bad) pusha mov pusha lcall (bad) jbe pop sahf (bad) movsb cmp jle lahf pop fbld push adc lret in movsb imul jecxz cwtl test stc int3 std jae sahf adc lahf xchg pop jbe or pop pop les xor inc dec sbb outsb stos jbe xlat mov lods (bad) (bad) aaa leave push pop xchg and add jb addr16 and addb xchg mov cs ss or pop jge lods add mov push push cmp mov das ret rorb mov mov imul xchg and or negl xchg fbld stc adc loopne sub insb std push icebp cs (bad) out push rcrb sbb mov mov xor jge mov sub loopne sbbb add add fisttpl xor mov icebp lods xchg cli pushf sbb into mov cmpsl sbb cli push data16 test jl test inc and lret es lret roll push mov arpl leave xor cwtl jno fist pop sub push mov into imul add add add adc pop mov iret repz aad mov xchg dec mov cwtl add push cmpsb inc jecxz pop mov adc inc fs (bad) (bad) in mov lret adc inc xor or stos mov pop inc cmp in sahf sbb dec and mov mov cltd loop inc imul add add imul lret or pop fsubrs add cmpsl pushf int clc dec cmc pusha cmp add fcoms popf insl fstpt add ret mov sub repz test addr16 imul jecxz xchg mov in adc dec cltd std cmpsl xor add cmc add inc xor das insl jo xor and scas add aas int3 mov into mov adc dec and and sbb into add jb,pn int inc inc (bad) inc ljmp stos inc js inc and enter nop nop mov mov outsl insl or pop dec pop (bad) gs sbb sahf inc mov sub pop loop pusha ret pop enter jecxz js or inc (bad) repz test or add xor sbb xchg psubusb and pop in jge dec (bad) jno cmpsl or push test jmp test lahf mov mov sbb and icebp repnz push mov add fwait out jo mov in lods (bad) nop add ja xchg mov dec lock popf sbb push cltd sar xchg mov (bad) or cmpsb pop xchg mov enter jne imul mov pop xor rcrl xchg pop push fisttp jp (bad) movsl imul insb adc add add pop cmp (bad) loopne pop mov jge into test imull les ljmp add imul push sbb or fstl rol jne insl inc xor mov imul fiadd inc stos inc cli data16 inc sub std mov mov loope sbb clc movsl xor lods and xchg mov out jge cmp aaa adc arpl fs mov sub repz in (bad) xchg pop aam js aaa sub repz mov test fisubr xchg xchg nop data16 cmp push ss insl xchg dec pop and xchg std daa cli push pusha cmp push xorl inc mov mov ret and test dec decb aam push scas cmova pushf inc lods ss or xor es xor jmp outsl insl or gs xor gs mov ljmp push das push xchg out sbb pop mov add and sbb scas into scas mov lds xchg fcomps push or pop mov or adc sbb std loopne xchg inc aaa sub xor popa shll pop mov cmp stos dec int cli dec (bad) pusha adc imul push shrl mov stc xlat sysenter xlat mov add add mull cmp mov rorb in addl pop pop or mov mov xor pusha jnp mov dec or insb out push dec stos outsb adc and out (bad) bnd jecxz jl in pop mov sub dec mov push roll mov xchg into add cltd sub (bad) push sub inc jge (bad) lret es cmp movd es cmp sbb sbb add dec adc jns cmc inc fcom addl (bad) sbb push mov addl jb sbb aaa xchg jae,pt int add lret inc xchg dec movsl (bad) out jbe push dec into jno jg (bad) in dec mov sbb jl lret movups comiss addr16 call and sti dec out (bad) xchg mov push imul outsb mov (bad) stos enter out jbe jecxz loope add movsb add push sti xor inc pop test mov shrb call iret mov push dec stos push xchg test arpl out sahf movsl sahf imul sub cmpsl pop xor addr16 add mov xchg adc pop mov int3 jecxz sbb mov jo lret xor inc ss push test add cmp (bad) (bad) ja (bad) fdivs and stos mov adc cmpl inc outsb xchg inc xchg inc push push test es (bad) addr16 or lods add mov mov pusha shr lods push sti push mov scas mov mov xchg inc out sub add cmpsb (bad) jae pop mov add add sahf fcmovbe stos daa mov jmp adc jg in dec pop push movsb into xchg out sbb push sub mov xchg imul sbb fdivs ds lea sbb jge cmp mov lret inc lock (bad) push add jbe mov sub roll add rcrb sub stos lea (bad) fistl inc mov and int lret pop add ljmp sbb inc and lods jecxz push pop hlt (bad) arpl (bad) sahf sub shll enter inc cmp test jp push (bad) push mov and mov aas fmull mov add add insl out push fisttpll mov lret and jge and xlat mov lahf jnp loope sbb inc testb mov jb lahf and int3 sbb ja test jns or into mov test sbb fs mull inc fwait sub les add add ret xchg lret call arpl cmp roll movsb outsb jae shlb pop sbb imul fldcw dec mulb les aam insb adc in xchg inc xor das inc or dec insb pop dec fimul mov (bad) xor lds lret lahf sub add mov lods sar es out pop fs les pop adc ret mov bound ficoml dec inc popf mov lret scas push add mull inc fwait bnd inc cmp inc adc cli and inc mov jnp lret cmp (bad) loopne int3 loop iret cmp and or sahf repz test xor stc sub (bad) mov ss push cmpsb nop je pop mov jp mov mov adc push imul fwait shlb sub sbb push cmp mov notb mov adc add pop sahf test and fnop fbstp int xchg push or dec daa pop fdivrp (bad) jae clc lahf leave adc and int3 and push les mov xchg pusha ficompl mov xor test lods bound sub xchg sbb sbb cmp sub movsb lret cmc addl add fisubl jnp ret ljmp lds (bad) adc push out inc push mov and insl lret pop outsb dec xchg (bad) push and sbb dec mov mov outsl lock repz mov pop lret jg push lahf repnz adc sbb fdivp fistpll ja sbb add cmpsl push int3 popf cmp jns jnp pop jl sbb aad xchg pop lods inc inc xchg xor mov pusha mov push adc mov ss mov inc mov xlat xchg inc push (bad) fidiv dec out jle ja outsl cmp (bad) push xor add and mov cmpsl push mov outsl fwait orb push mov test cmp fwait sub les ret xchg lret call cltd mov scas pusha and cmp push lock adc mov movl movsb adc movsb cwtl pop jle popf pop pop push xor jp (bad) jo or add aas cmp sub push sub loope iret sbb jb jge and stos je or in mov jecxz and sbb arpl inc and sub xchg sbb pop inc jg mov push test dec and inc out inc push jne clc fldl add std cmp mov sti (bad) xor adc mov lock sarb cld mov dec (bad) dec icebp xchg push mov xchg sti rorl fdivl xor lds inc scas inc mov cld push pop pop repz enter push xlat xchg or pushf fsubs and je (bad) in fwait cld leave mov popl add sub mov mov into push lahf cmp insl xchg mov gs ja lret rolw dec popa or pop in sub inc lds mov stc xchg fdivrp iret jo jnp push sahf icebp sahf arpl movsb outsb imul cmp gs sarb and insb dec xchg dec inc add jl pop or or mov cmp xchg test sub lods push pop and push loop mov fmuls aam ss push imul xchg and sbb mov mov stc cmp out and jb,pn pop outsl fwait mov negb test pop add xor add sbbl out icebp jbe jne jo call add sub add push loopne adc jg cmp mov pop mov inc lcall enter scas cld adc (bad) daa push jo and dec pop xchg jno hlt aas fcoms pushf sti add pop and jb mov mov (bad) out lret push je out outsb cltd jb mov lret into mov call aad in jmpw cltd push push dec push into scas dec jno sahf pop sub fnstsw or xor lods add fisttpll sarl mov and pop xchg loopne mov adcb add (bad) icebp inc loopne mov mov iret ss mov fucomip sbb mov in insb std (bad) repz xchg adc jb jge bound sub popf (bad) loope push outsb clc dec gs push or cltd ror jl subl cmp lods sub into jae add jo lock fadds lret int3 jl and adc dec xor fcomp rcll jae xchg call sahf jle mov lret cld pop add les mov sub das mov lret xor das (bad) sarl fisubl and dec add add scas dec les cmc add jno sarb pop or ljmp sbb add jge jecxz (bad) push test jecxz sahf std push bswap je mov sbb insb ret mov cmp xor cs push inc inc push aad into mov add mov sbb rorb or add mov das das incb les pop jmp sbb out mov push out and das enter cmp xchg dec mov mov sbb andl mov xchg cmp inc mov scas add push mov loope shrb out or (bad) out inc clc test outsl (bad) dec (bad) outsb inc lods stos daa lahf popl xor jbe shrb cmp jne insl xchg imul sbb popf fadds pop add xor add sbbl out icebp jbe insl in fndisi(8087 lds data16 shll lock mov fdivrl das sub icebp ret je adc add add pop push int3 mov mov push cmpsb sbb ljmp fwait mov push cmpsb xor sub xor xchg mov add pop into xchg gs mov xchg lret addr16 fwait mov ret dec sub (bad) int xchg fwait into scas pop jno xchg mov add add pushl fmuls sbbl stos imul add jae cmp out sbb data16 je jnp imul sbb sbb lret jecxz outsb xchg movsb mov js adc inc jns mov sti loopne (bad) lret in inc (bad) push jp lds (bad) ljmp pushf or outsl (bad) stos std inc pop lret subl mov xor insl xchg lods (bad) adc stc mov push out pop or adc dec mov clc enter aad sahf (bad) xor mov mov iret mov jmp sub iret popa mov cmp sarb das cmp add ficomp das outsl push repnz mov pushf xchg cmpsl lret in loopne loopne mov lods out jb and xchg loope adc movsb in dec out divb (bad) je cltd (bad) xor inc das jp mov jb test add scas cmp orl fcmovnbe push bound dec test ret xchg out adc add jb pop cmpsl test push (bad) xor cli lret mov in xchg es sbb rorb shrb pop movsb ds or cmp jns xchg jmp inc shl xor loop iret xor sahf pop imul arpl test imul std or add jb sub add push neg fs fstpt (bad) xor outsl xchg sarb inc outsb mov and add sbb mov sbb xchg ret add sarl fild in cltd dec outsb int gs (bad) int3 mov jmp sub add add and mov lock inc scas pop sbb lret sbb xchg notl fisttpll int3 shll out xchg cmp cmp scas sbb in fimull mov rclb xlat cmp lcall sub add mov jb lahf and ret push loope jg adc add inc cli test sbb insb xchg ljmp lcall inc icebp jbe outsb dec xor mov lcall outsb jae adc aaa adc cs add lods sbb xchg xchg pop aam inc adc add add enter push aaa hlt dec out iret mov ret jl (bad) jmp jbe push in pusha inc out cmp push xor xchg or and pusha dec and aas inc outsl cmp or push push xor int sub jnp cs pop fwait sbbb push mov lock ja mov pop adc add add ds pusha nop inc adc nop xchg fmul push pop pop mov lcall ja loop sarl sbb les mov push into mov fbstp pusha shl adc adc negl (bad) fdivs jne pop into xchg (bad) mov add jno mov push dec cli sti mov lahf aad pusha in dec lret push mov ljmp jle movsl or lds test pop int3 fs mull inc fwait sub int3 popf (bad) dec daa pop fdivrp (bad) outsl xabort repnz xchg out sub aaa adc addr16 sub add frstor hlt xor enter mov pop int cmp mov pop mov mov ret push lock int3 push mov adc test inc loop jg adc push inc testb pop stos mov test lea push (bad) mov sub scas into and sahf lods or add popf mov lret scas sbb js xchg f2xm1 add dec xor inc sahf push xor (bad) loopne inc mov jnp lret xor (bad) loopne shl jns jbe repnz cli xchg iret loopne stc mov das pop insl jb mulb mov data16 (bad) dec jns lock xchg lahf xchg cmp adc cmp pop push and gs mov adc push cmp (bad) cli ljmp pop cli pop aad int fwait out clc pop mov in inc rcr mov loop pop arpl dec ja flds xchg sahf stc insl add stc mov call test add add sub jb pop enter jg test lods xchg dec dec mov inc lods mov addr16 les sub (bad) push cmpsb std or push daa (bad) xchg stc popa push scas cmp and out std dec neg inc push jne lret clc lret sbb xlat xor lods divl add jl mov clc dec fiaddl sbb or lcall adcl fist pop lock xlat adc sar in imul mov cmpsl pushf daa fcmovbe rcrb dec lcall sbbb jle in add xchg sti stc or dec in (bad) lods (bad) aam dec addb add add adc jnp cmp mov mov cwtl std or loop jge mov jne movsb push outsb addr16 std sahf lcall pop jbe and ret lret mov and rorl and adcb data16 mov push sahf dec xlat ss movsb xchg stos inc mov aam pop ljmp fidivl adc in scas jae mov lret repz or inc mov jo sub lret int mov jnp and jnp cmp mov jo cmc mov xor mull int stc loope ret ss out lods mov add add rclb test arpl mov fs and rorl out add mov adc cmp sbb hlt (bad) xor pop cmp cs or lret movsl adc sub enter aas mov sub add loope in rcrl cli mov subl sub xor loope xchg in jns xchg sub xchg int3 daa in (bad) cmc mov and xor mov pushf cld sub sbb mov in push jae add and sbb cwtl lcall sbb cmpsb data16 testl add push pop test inc lahf and popf (bad) mov into xchg stos xor pop (bad) jo call jg xlat jns fildl sub mov xchg dec loop xchg (bad) popf pusha ljmp out lcall or fbstp in push push dec inc dec sbb pinsrw xchg pop into adc mov add add (bad) mov push (bad) mov sbbb push mov (bad) in enter aam lea mov scas mov xor or push ror pop imul (bad) out mov mov cwtl jp sbb lcall jmp add add add add mov mov or ljmp or inc jns cmpsl (bad) out cltd jae addr16 cltd xchg mov dec cmp dec out jns cmp das sarl ja mov xor xlat mov xlat xor sahf xor fwait (bad) in mov cmc mov cmp pop and dec mov add and stos and add into push ret push add test and xor add gs push enter loope in sub sub push popa movsl sub (bad) in aaa adc adcl sarb push movsl into or jae lcall pusha adc fmuls mov test sbb mov adc push sub cld fcoms push xor or loope es cs mov and daa mov in pop adc mov and and sbb test ljmp mov pushw cli rolb add xchg mov shrl mov mov les sub into int (bad) mov lahf sbb hlt js or lock mov (bad) test add ficomp add push jecxz push divl in outsl das push imul add add sti push out sar add or push lods xchg popf (bad) mov (bad) fsubl sti loopne (bad) pop xor ljmp sub cltd mov aaa mov (bad) xor xor sti (bad) arpl jae cmp popa jb xchg cmp mov xchg pop push inc inc bound add add int3 call fcmovnu fwait mov pop mov and pop test dec stc pop inc loopne xchg repnz push into iret fsubrl xchg or jmp mov dec cltd xchg fadd stos jbe jns cmp dec jmp jnp jnp sbb push je lock pop repnz pusha xchg push mov add addr16 xorl mov popw gs clc rcrb loopne jmp fcoms pop jae pop adc out divl jg pop pop xchg (bad) mov aam test jb fildl push movsl add inc fwait out push sti out ret push movsl mov fwait test in jl call and jbe add push (bad) in push popf add jo push dec aad flds shrb les mov dec test xor and jo lahf mov (bad) daa jecxz mov cltd mov das jnp fisttpl cmp mov adc dec je pushf pop jle jg mov adc and (bad) xor std push xchg (bad) fs loopne out imul (bad) sti push mov xchg lods jl mov xchg rorb stos dec outsl mov in xlat pop outsb in mov and cmpsb repnz pop fiaddl add stc inc push mov inc push adc dec and leave sub xor and sbb xchg inc andl push inc mov arpl out dec jg,pn popa hlt xchg dec xlat sub push movsb into xchg push lret or push jne icebp mov out daa push add add std push sub xor mov mov mov js or sti popf cmp mov jecxz divl insb dec mov jb and inc cmp ret lods lret sub in inc sbb xor adc inc sub xor mov mov dec inc out dec and add add add add pop ljmp xchg dec (bad) jno mov int3 out mov fs cmc mov mov xchg push pop aam adc fidivl insl jns popf sti xchg inc sbb cmp cs fildl test sbb pop icebp sub mov mov call mov inc add push andl jns stos shr dec loop,pt into in jb or xorl aad mov enter fcmovnb mov push in (bad) arpl push (bad) es push sbb cmp add lcall stos add xchg sti stc or icebp push jecxz add stc testl mov mov (bad) push mov and neg xor sbb inc push orl push adcl test outsb mov lock push fcomps cmp aad sub jbe push jno ror int3 outsl mov add add fwait cmp daa pop fdivrp fbstp imul bound jmp movsl insb jmp decb je divl cltd test sbb mov icebp jb into or hlt nop pop pop push in test jle mov xchg dec and stc sbb sub in or dec cltd std movsb xor sub jmp (bad) cmpb xchg adc dec (bad) out inc xlat loop lods imull push mov inc cmp and (bad) iret add inc into cmpsl dec ja sbb mov test pop jo fsubs xlat stc ds ret mov push lock cmp add pop sub das mov pop mov mov xlat jmp xchg dec je mov mov in xchg scas test stos sub cmc push addr16 jle cltd cmpl in pop and mov adc xlat cld sbb popa fidiv loope dec and and pop mov stc in add cmp mov mov enter je push inc out inc pop imul sub in lcall das mov popa ret in cmp mov xor pop rcrl mov push inc test jne push mov jecxz add or jmp adc in movsl movsb in sbb lret xchg (bad) js fidivrl pushf cmc or stos add cmpsl imul fwait xchg xchg mov cmp and scas add dec adc std add stc outsb push movl gs xchg push movsl mov (bad) lahf add add add pop sahf roll sub out push jbe sub les fdivr out push or mov push jl sti aam cmp jp xchg jecxz push cld inc hlt inc (bad) and pop dec or out sbb out (bad) je les aaa adc test mov fwait jp test add jnp sbb imul and and in sub push xchg push inc out cli test pop (bad) in xchg rorl push push lea adc and sbb cld push cmp lret (bad) pushl xchg pop je into inc jmp inc (bad) jle mov loope rcl adc mov movsb pushf call add idiv mov push cmpsb mov test dec xchg stc xchg into sbb (bad) push push cwtl aaa fsubrl or (bad) jp lock push xor cmc jno imul cmp int3 lds sbb loope ret incb add xor xor mov push ss inc sub popa jmp add mov inc add or mov jl mov xlat sub lcall call xchg sub sub cmpsb pop pop pop sbb jns xchg sbb xlat test dec xchg loope int xor (bad) lret or ss (bad) jp add loop test push sti jmp mov inc lods negl pop rorb and and neg push bound adc lcall mov fidivrl adc mov fmull xchg (bad) xor pop test mov inc rorb mov repnz xchg add mov sub pop mov inc jecxz test (bad) xchg daa dec cmp cwtl cmpl in push cmpsb dec mov cmc xchg loopne xchg (bad) js push iret adc or nop cmp mov mov xchg adc dec scas fld mov jae fisttpl lea dec inc and add inc mov dec test mov popf mov (bad) xor mov outsl insl loopne inc icebp fistp lcall ja in xor icebp cmc mov xor and xor out in data16 xchg add out cmpsl jbe add add in repnz mov pusha add dec xchg jp addr16 push fwait (bad) and mov aam (bad) lods lea lret (bad) mov sbb movb addr16 xlat sub addr16 into push rcll mov inc jp inc aas cmp (bad) xchg loopne outsl aas lret cmp icebp cs mov mov pop mov test adc ja imul dec sub push cmc xchg or pop pusha cwtl jp xchg jl mov sbb loope insb cld pop popa adc sbb addr16 fdivrs xchg (bad) mov mov add out inc cmp mov jmp jmp add add lods rcrl cmp lea pop repnz mov ljmp in scas dec daa and repnz mov into xchg test sbb cmp ss insb jmp and test cltd test ret ljmp dec push cmp ret jl mov shl pop (bad) mov cld adc inc insl mov ficompl repz jbe lcall lahf loop in push decb inc xchg jb mov pushf leave xchg and jle jbe aas pop fs aad xor xchg fwait sbb fimull stc fadds lret inc jns pop ljmp mov dec cltd fisttp add lahf push fcomi ds adc xor xlat (bad) cmc push or ljmp mov in jg cmp es notl sbb mov mov mov insl outsb into aam mov dec push mov data16 push jp test or lahf sub push cli (bad) cmp and push cmp imul loop push mov insl ret in and lock xchg or jbe inc imul sbb shlb inc fidivrl xchg leave dec rolb into xor jge flds fildll stc mov setnp cmp aaa adc hlt (bad) mov pushf adc into or repz fdivl (bad) xor adc jecxz setp fs rcl popf add popf stc scas mov push mov (bad) mov out daa inc pop mov gs les ljmp pop jecxz pop cwtl (bad) mov mov stc in into sub add add add add into ror les or and sub shlb aam fsubr aad loopne outsb in pop mov negb scas mov insl adc or dec loop and push hlt mov adcl les jecxz popa jmp adc or mov push inc and jge add add repz div lcall sti pop das adc lret rorb jno cmp add mov xchg lea dec mov ss add ljmp cltd dec in mov adc pushf ret fdiv std lea xchg add pop mov xor add mov mov popa xchg (bad) or mov aas fcom jp fidivr adc mov mov cld xchg stc and das scas dec mov xor sbb flds lock dec loopne lods ss idivb int3 or sbb sub shlb add add pop jle movsl sahf cs inc xchg or scas dec nop push fsubp jge xorl decl dec push add inc xor mov hlt sahf dec push fadds mov fwait cmp test movsl mov add ficom icebp ss icebp mov je cltd xchg je mov mov adc dec push inc dec aas dec pop jle in cld add push jnp sub inc shlb fsubrp daa inc push mov mov mov xor add jbe xchg into clc inc sbb pop sbb sbb cmp into in and into (bad) adc inc out cwtl dec xor sub outsb push pop add push sub hlt stos adc cwtl aam push fdivr adc out int sub test arpl fisubr rolb sub jmp jp ljmp out adc loopne (bad) cmpsb (bad) and into mov cmc mov es ret nop jge xor cmp test cmp add add clc push addr16 mov and ss out icebp popa sub (bad) mov bnd sub iret add cld outsl add adc test (bad) jp jb lahf stos push clc sub loop das sub adc sbb cmp xchg mov add mov cwtl sub imul jb out jle stc ror jae sbb jne imul in mov fstpt adc and jecxz mov outsb fnstenv or mov insl sbb mov (bad) or notl pop xchg xor iret in das ljmp stos inc js xchg xchg cld rorb push dec test xor mov sarl mov (bad) lock mov pushf hlt cmpb mov xchg out sbb mov aad xchg movsb lods xchg mov ds inc ja sub add fs test repz ds mov jb mov (bad) cmp fiaddl sbb stc mov mov fmuls icebp pop mov push leave mov mov cmp loopne push pop mov push push stos mov push mov sti mov jno into dec add nop xor mov sub xchg jmp test sub in sarl out popf xchg repz loope jne outsb stos push and ja inc movsb lret enter flds je cltd test (bad) and xor cs xor fcomps xor (bad) cmp jl hlt or add dec addr16 sub daa (bad) mov sub fmull lahf out int cli fcomps cmc imul pushf ds int nop aad pop sub out push jbe mov adc sub inc jb cld dec sub lock addl xchg push sub out adc xchg stos xor push inc (bad) cmp ljmp jnp push and mov pushf inc lock jp pushl adc push jnp addb out dec ja js inc jae xchg int sar ss sub dec cld inc das dec cltd mov and sub (bad) repz fwait xchg mov int mov add pop xchg push push pop jbe push dec jecxz adc jmp in or sbbl lea xlat ret (bad) fadds repz xchg sti mov out xchg mov les ret ret in (bad) into in cmp or ret lahf sub into cmp je jge push add add (bad) jmp pop clc dec pop adc sti jne cs jle dec jecxz cmp inc xor sarb loope (bad) jbe movsb out in inc mov mov add and movsb xor mov and iret cli add in mov sbb pop addl push mov lcall sbb xchg aas fcoms mov mov xor sahf mov les das mov pop pop (bad) shlb add pop mov xchg push jg mov and push dec push les dec clc push mov aam push mov ret cmp subb adc (bad) test inc aaa push lcall rorl pop fisub or lock xchg jae lahf push mov sub repz clc dec es sarb adc rcrl (bad) push and je inc leave rolb add jb mov inc push in push mov rolb nop jnp loop pop sbb mov sub rcr and aam pop mov xor pop jno aad int3 int3 fidiv push fcomip rcr cmp mov xchg dec outsb mov pop adc outsb xchg lcall mov sub add sbb ds xchg mov mov aam mov fucomi loopne adc sub mov push (bad) adc jno add mov xchg dec inc jb (bad) push mov dec cld mov lcall lds mov inc fidivl pop add les add add jle xor cmpsl cmp movsl and inc int xor xor jnp adc push push cmpsl inc jnp xor mov test cwtl sub and pop mov jnp cmpsb mov push xlat rcll sbb mov mov test test call dec sbb add sti sbb bnd push adc mov (bad) jne or test lret adcl inc inc movsb pop xchg sar int3 lods inc jle xor test iret rolb mov cmp xchg stc jg leave mov (bad) xchg mov sub fdivl push mov add pushf and movsl fimul xchg xor inc imul dec fsubp (bad) mov mov cmc cli sub xlat loopne in mov jecxz jg add cmc in je rcrb andl fisubrl mov dec and and js jbe aas xor or (bad) leave lds sbb out clc dec sub dec mov jb lods cmp test pop mov add xchg stc rorb inc cmp (bad) xor mov mov add mov lfs and mov mov cld xchg jns add adc add arpl inc je mov ret ja push mov sarl daa test (bad) arpl xchg rcl push inc mov mov lret or popf cltd mov bound inc xchg (bad) fisubl mov mov es and in mov cmp mov sub aas adc xor xchg mov movsb mov int jo outsl adc jae push pop and test mov xor ret (bad) cmpsl fwait in push lods sbb add pop sub (bad) repz sbb loope add xchg int3 sub push mov jne out add jo in aam push push mov add add add mov dec mov fs cmp jmp and pop jae,pn hlt dec stc loopne sub and xlat jp imul ss pop mov sbb dec push dec or lods jecxz std mov movsl jae mov dec (bad) mov ss imul jns xchg ret add add pop loop scas add push aam xor icebp test or cmp insl jne test dec bound mov adc xchg mov add (bad) fiadd push xchg stos cs cmp mov jb jmp jnp jp jne adc or add add mov hlt pop add icebp and (bad) sub les in pop aas push test in mov outsb gs pusha (bad) leave in aaa adc ss loop inc pop push mov jns jb jb in mov xor aad loopne loopne es push pusha inc fdivs sbb add cltd std lds mov lahf (bad) outsb loope push enter icebp imulb jno xchg das movsb data16 test adc aam mov nopl shll jbe test mov sbb sbb jne aaa fstps into xchg dec js xchg cmp sub cmpsl jbe ljmp add js fist hlt adc in cmp lahf adc in pop xor pop push repnz pop adc pop sub dec test dec sbb add mov or rorl xchg lret lret adc fstpt add adc pop mov adc dec and add fwait mov push push mov gs (bad) cmc nop nop test ja jae mov xchg dec pop jno jecxz es lret add pop div mov add (bad) mov adc push mov repnz hlt sub ret loop sbb jnp and stc call js adc add daa sbb push scas add pusha xchg cmp adc add dec mulb daa lahf rolb stos stos jbe insb pop push push or or pop dec aam mov fwait mov (bad) mov je cs int xor sub add add jge xor aaa jecxz es xor add and int cmp sub and push xlat mov lea repz xor mov dec sub push lea jnp inc or lret pusha aad call out lea arpl cmp popa cmc jbe pop cmpb push stc inc (bad) adc sbb add ljmp mul jl in adc data16 inc test sub jl jb xor ds xor sub sbb ja ss inc inc rorb je loopne loop,pn stc ds arpl add je mov xchg add imul pop inc inc dec add jg aam (bad) lcall pop mov movsl in repz xchg jmp add pop and push mov sti fsubl fcoml ds jecxz jp mov xchg outsl addl lea (bad) popa and sub stos out push xor lret and mov decb lds stc add add fs xchg and xor ret pop mov push dec stos fistpl xchg jb ljmp test adc pop xchg arpl outsb or fldcw inc jns pop leave push pop adc jns and push loopne bound jae lret add fsubrl imul jp or out push mov sub xor and pop arpl mov fldcw mov xor jg jbe mov xchg dec sahf ja jecxz (bad) fwait mov sahf in dec stos inc adc into pop ljmp or mov add add enter adc in xor dec mov or es outsl mov sub add jns cmp ret jcxz inc dec bound mov enter fldt mov orl ret mov inc ret rorb repnz sbb push stos push clc (bad) (bad) sbb add psubq lret jnp push inc imull dec xor mov jne jge ret rcll rorb lahf adc das push movsb jbe int daa mov mov jae dec ficomp mov in xchg sbb xor test lea add sbb push sub int3 iret jg xchg std or das nop or push xchg mov xchg add out loop clc inc fwait rcrb and sbb ja dec push or fwait or pushf mov popa cmp adc imul scas ss int3 dec xor (bad) cmp in jne jge ret ret rcll rorb lahf and aas jnp adc out push lcall ret mov std fisubr ds cmpsl daa int jbe xchg dec rclb add test jg cmp addr16 xor scas (bad) cmp add ds xor mov add xchg sar dec divb pop inc sbb jne or adc scas subb int inc xchg xor add cmp dec fsubrs push movsl inc dec out cs lods scas dec (bad) sbb (bad) nop aad arpl pop and les test and sub aas sbb in add clc faddl add sbb mov or cmpl xorl (bad) and popf dec arpl fisubl xor (bad) jge dec xor div mov fucomip xor dec lahf jl mov pop mov std sub sbb (bad) sti sahf cmp rorl icebp jle mov xor add add cmp hlt jge pop scas mov mov adc push out out sub aam int3 out shrb int push push in jb dec mov mov stc mov push push test xchg dec push sub rorb fwait jne pop scas mov repnz mov add add cmp cmpl aaa mov popa sbb dec mov jnp add mov loop mov into push rcll (bad) cmova sbb push leave mov xor xor inc sub (bad) mov jne sahf inc push insb jmp dec push pop xchg add add cltd data16 shrl (bad) push repz test fiadd add test stc cmp mov jo ret test mov or jb loop cwtl cmp cmpsl push sti xchg cli lret or add inc pop and sbbl mov mov mov out lea add js xchg pop daa (bad) rclb add dec mov fdivl inc fwait iret dec frstor stos rolb xchg repz cmpsb jmp pop mov push lcall pusha cmp or xchg xchg push mov mov xchg or pop push cmpsb sbb cmpsb (bad) add and outsb mov pop sbb cmp jg (bad) test notl xchg xchg mov dec in pop test sub aas xchg in sahf ss fcmovb mov (bad) imul ret jecxz out inc push sub cmp add or (bad) (bad) dec out and test nop movsb add ret add dec ljmp (bad) fidivr pushf fcoml ja jb mov xchg pop int3 les fs mov inc ret push inc mov mov (bad) lea cli popa nop cmp sahf xorl lock rorl inc lds cs movsl flds jl pop mov pop jbe xor mov ficoml mov xor jno or pushf ja ss add dec ss fcompl xor sbb mov cltd mov cmp sub jb add in inc scas jnp das jnp jmp adc mov sub add add cmc add jecxz setb stos (bad) ror dec inc xchg loope int ja cli mov bound push mov lret sarl jne in pop outsl inc pushf jmp and xlat bswap lods mull xchg pop sbb and push mov mov rorl or nopl mov cmova (bad) add movl mov dec es out and shrl out ffreep sub jg mov sub or notl xchg icebp cmpl icebp mov and xchg inc pusha js rcl (bad) iret fstpt mov (bad) into cmp xchg hlt xor add xchg dec fcoml xor cli pop pop push or pop sbb inc xchg shr dec and lods into adc jno pop pop clc pop mov dec jg sti inc int3 jl ja pop jle jge xchg and dec inc jmp cmp xor jp dec ljmp mov dec lahf xor push mov cmp ret movsl shr xor je mov lock and mov cltd jp std jmp xor xchg repz xorl ret clc ds fbld or add ljmp les imul mov les add add ret mov lock in (bad) icebp and fxam or add mov mov inc repz pop mov dec addr16 sbb xor je and aaa and push sub data16 insl mov mov test notl sbb out fidivr sbb adc lods out xor (bad) add push lds mov je pop lcall call pusha xchg cli and pop stos (bad) lods mov add addr16 test xchg ret (bad) (bad) sbb push pminsw add adc jno andl out mov xor out or pop push lcall lods add xchg mov gs jae int3 push xchg jecxz dec sbb pop xor jns push or adc fisubrl ficompl pop push pop shl adc sbb scas push pushl mov push jl in cmp jecxz or jmp adc (bad) or mov add mov outsb aas fnop mov pop repnz rcrb adc xchg lods (bad) jl and xchg jecxz mov fidiv and push lds ficomp and shlb fist lods jae mov dec insb mov inc xchg jp mull cmp divps sbb lock sub xchg add adc xchg gs push xor (bad) popf fldl lret test outsl das push imul jo mov cmp xor mov jecxz (bad) in dec sbb sub leave dec rcrl xchg xor and mov or mov mov sahf add add dec inc outsb sti inc sub add lret adc lret mov push in cmp mov or inc jbe arpl mulb lahf sbb adc and jno test cmpsl pop cmp sbb mov xchg data16 loop inc xor mov lahf add (bad) pop adc mov sbb dec fs and addr16 mov pop cmpsl lret cmp dec or leave mov ljmp (bad) jge mov dec cmpsl xlat adc mov and cmp xor add add xchg adc push (bad) jmp pop fmuls mov sarb cmp sbb (bad) add lock adc push aas sbb out adc rcll loope mov inc inc cmp and cs insl cs mov xchg push mov xchg mov xchg add lret pop push or xor pop inc out int3 xchg and (bad) dec jno movsb adc pushf sbb xchg mov test pop dec das push cld loopne out aad cmp sub aad push push and data16 icebp mov in jmp dec or xchg out lock lahf xchg call add jle mov mov inc xchg xchg mov pop test xor leave popa xchg add inc jbe fisubrl cmp jecxz insl sbb mov test scas icebp popf lock mov cmp ss and mov sbb sahf push jge addl repnz jno push cwtl and out ljmp add add ja fiaddl rol cli lea xchg add jge enter and int3 lcall enter call scas lea addr16 (bad) or cld sbb xchg stos movsb pop cmc mov sub sub xchg sbb dec cmpsl cwtl jne sub fmuls and mov add outsb movsb daa add into out jg mov enter push mov into shll mov pop std and push xor fsubrp sbb or push pop push aas push jno inc aam sbb push sbb push pop lahf or mov movsb in or pop cld dec fld ret dec inc fdivrl or addr16 mov add popf stos insl fdivrs add mov adc sub mov out stc pop mov pop wrmsr stos dec lods mov xor enter ficom js jle popa xchg out jge mov cld ret popa push mov or push into adc xchg into ds xor mov add add add add or cmp gs icebp lods lea jnp loope dec repnz fbld movsl and int xor sub dec movsl clc mov xchg push out (bad) popf stc fisubr dec push jae mov sbb mov fldt out inc mov nop loope push lahf pop xor add add (bad) dec pop cmc cmp mov pop inc add repz push shll cmp pop stos ja enter fst inc mov movsl and cld movsb je jno arpl in mov scas dec cmpsl pop dec push xchg mov outsb or rorb mov jnp push (bad) in mov cmp aas jae addr16 adc adc push stos test call gs mov addr16 gs data16 dec repz xchg lcall sbb cmpsl and mov add pop xor movsl incl std pushf call jmp cmp xchg push push cmpsl inc mov mov leave lock (bad) out jno add test or hlt push jb xchg cmp repz das jp aam addr16 kmovb insl mov mov xchg dec rcll mov maxps push stos jne imul (bad) repz push lock sub mov xor (bad) les xchg cmp mov inc cmp push jmp pop mov fistpll dec and int3 sub cld mov imul mov pop inc cmp mov imul fmuls xchg mov mov jmp call cltd dec sahf cmp test (bad) movsb jle push add pop jno lds out mov push outsb es scas movsl and ljmp gs mov gs fsubrs jno dec adc push movsl ja mov int rep ds lcall mov sahf sbb inc pusha in popf (bad) xor xchg pop jecxz pop or hlt add sub cmpsb cmp lcall scas negl jge jle enter xchg add push das movsb dec jne lahf pop push lea dec ja divl adc insb repz test fsubrl fidiv or cli add jmp dec mov or cmp out jo fbstp std add push daa xor stos cmpsl pop xchg push inc dec cltd std ja dec dec jo pop nop inc ljmp mov mov int3 or shll adc sub jbe cmpsb jl sbb adc add sbb or inc push or sbb fnsave ror cmp xor pop (bad) push pop lret aas adc and cli (bad) ja mov pop in pop ljmp (bad) ljmp gs mov outsl fstpt sub out sti xor push rcl mov cld push push sbb cwtl jp movsl push or test addr16 (bad) mov dec xchg and das cli (bad) das or pop jg cltd sbb add add bound or roll sti aas nop push imul sub sbb adc pop adc test sti (bad) call pop mov inc test je jne jecxz (bad) ds mov dec add adc hlt mov negb add pop ja sar dec mov rcll xor pop stc pop in cmp xchg pushf xchg sub lsl add mov cmp inc fwait pop xor daa lret sub stos leave rcrl decl lret (bad) xlat sbb jb push jp std add jmp inc xchg jp sub (bad) push mov ja in test repz repnz test (bad) rcl test mov cmp ja leave imul mov repnz test fcoml inc cmp gs xchg dec and sub cwtl inc adc and sbb orb pand loop sub xchg add add xor push push les mov cmp (bad) movsb repz out std call push rolb xchg add sti lods mov pushf cmpsl mov adc mov rcll adc or test les pusha sub push sub mov int3 cmp jne movb add push cwtl rolb push xorl mov notb (bad) out jg (bad) mov leave push aad test mov mov jne lret fsubrl out mov out adc ficoml push ds xchg and and fnstsw mov shr ret mov sub dec cld mov add stos push es inc pop mov neg adc gs inc dec push out aaa dec inc jno push daa jmp jbe popf cmc and add or pop fstps add push jg out mov pop mov (bad) repz fmull sbb sub mov mov add das cmpsb xchg movsl xchg mov and outsl xchg adc cmp lret clc xorl sbb sbb adc sub loop je sub cmc push jae mov jno int or cld ret xchg xor lcall je pusha ficoml popf mov mov test jecxz pop cmp mov inc add mov js call mov stos stos test ret sub (bad) cmp xor (bad) int and or rcrl push arpl stc inc push aad movl fwait and loop dec cmp sub cmp (bad) adc mov sbb add jl sarl xorb in les and pop dec cmp fisttp sbb das pop mov adc je inc sub lret nop enter lret or jae cmp ss jns adc test sub mov and in sbb incb shll add stc inc repz scas fcomps xchg push sbb push push ja aam xor (bad) rolb mov ss jno dec outsl inc rep gs push xchg mov lea xchg push jecxz lret adc popa int3 push fwait in fcoms out sub ret dec loop lods loope les les add mov xchg inc sub pop popf add mov pop inc cmp mov lahf push push outsl stos out outsb movsl xchg mov jbe das fistpl xchg shlb pop test fiadd mov push push outsl mov stc pop in movsl or add callw adc jp sbb mov add add (bad) repnz cmp imul call and sbb push push push jbe xchg fdivp adc cmpsb out adc xor inc outsl (bad) ljmp insl aas pop ds mov outsl push or arpl leave fwait cli pop mov call outsl mov and je in iret dec and or hlt daa cltd jl icebp mov pushf sbb scas pop mov negb test xor mov cltd out xchg inc int daa dec add fs pushf out lret jo aam inc jbe (bad) test leave mov cmp inc iret icebp inc stos mov mov ret add add add adc lock scas mov cmp subl pop aad fnclex loop test jae and rorb arpl push sbb arpl or push (bad) xor hlt loop push fnstcw in xchg dec mov insb rorb out (bad) and sub add stos pop les inc (bad) sbb cmp sarb or jne nop sbb pop outsl sbb mov add (bad) mov jns (bad) jp std iret adc stc jnp push mov out scas outsb dec into inc aad push arpl popa add bnd frstor and rcll ret xchg dec mov data16 xor jge pop inc ret sub jecxz icebp pushf push outsl sbb push pusha repz mov inc out adc sbb arpl scas push jne das cmp ja add pop add lcall cmp add aam test int cmp in in jno sbb push rcll movsb sub leave pop das pusha jge in cmpsb fmull sbb test cmpsb sbb movsl int3 adc inc mov loope sbb xchg cs insl movsb mov mov xchg jns mov mov pop mov pop or add mov push addl jge cs sbb jmp and mov lods (bad) inc push sub pushf cmp stc dec xchg (bad) or fcomps stc (bad) shll mov out es mov jbe in out int mov aam test mov adc and test add add push inc mov jecxz (bad) jg aad jecxz jle xorl xchg jne xchg jns inc push mov aaa jae or dec cmp idivl xchg fs arpl push push je ss mov pop jmp fs and retw mov out (bad) push popf sub adc pop int3 lods dec adc pop ret fistl adc in dec bound int3 inc enter (bad) insb iret rorb outsb int push loope dec inc inc les dec sbb pop jmp lahf lds sub enter jne jl and mov mov push sbb xor add add jo clc xchg lock jb pop pop into lcall xchg imul mov push lret (bad) sbb dec xchg adc loop movsb xchg in add js repz jae sub push cmp std and sarl mov cld jmp rorb in push orl subl xor cmc xor cmp dec rclb jl mov xor hlt enter cmp jg sti mov pop pop pop (bad) dec dec ja movsb push rcll xchg cwtl sbb and push js mov xchg (bad) cmp xchg cmp add inc jge,pn add add cwtl dec mov cmpl lods mov mov mov or mov inc and cmp inc pand push jnp stos jnp pop jne or cld or insl imul push sub out or mov or andw lahf sbb test add add loop xor mov mov addr16 xor jno inc add mov fwait insl js add rorb adc (bad) push pop (bad) and sub jno fsubl rcrb cmp or inc inc jne test mov adc cmp fldt ja cmp pop push mov sub push cmc or sub add mov lock mov and (bad) inc inc outsb in pusha dec sub scas mov dec push mov pop inc add jl repnz addr16 fcmovnb popa repnz stos push inc add movsl jns cwtl rclb pop jns in (bad) clc push imul stc gs adc ja outsl loopne (bad) fsubl xchg decl sub pop xor mov push and repnz cwtl lods mov test pusha faddl cmp xor inc shl lea inc add lods cmpsb inc add push sub fimull sahf cmp add movsl mov add (bad) insb movsl sbb xor pop ficom insl cwtl xor jle (bad) dec (bad) ficom mov lods call xchg inc je (bad) lock add xchg outsb pop notb sub pinsrw inc add mov div stos and pop leave lods andl aam add push inc ljmp lds adc add sbb xchg jmp xchg add scas lods hlt hlt sub jnp lcall pop (bad) mov lods lods stc daa inc xlat loop mov add xchg add xchg adc test pop ja jae movsl stc mov rcll out sbb push xchg (bad) push xchg (bad) mov fmull sub mov iret incb pusha les push cld jb push ret or xchg gs (bad) fcomi jo subl xchg add add mov daa or inc dec in dec fsubs pop and repnz push pusha nop jne xchg mov push scas pop out jae insb std or data16 iret test xchg movsb pop (bad) xchg rol xchg pop sub mov cmp xchg fs test insl das loopne mulb nop xchg jmp ds mov ret jle adc dec mov lea dec sub inc add sbb fwait sub fs mov push and stos cld scas enter dec popf sahf mov sar outsb outsl mov in or (bad) out fnstsw add or data16 roll add add outsl loope sar cmpsb rep jns outsb and dec adc fs shrb sahf leave cld mov cltd inc movsl jl loop int int3 test push inc or or std pop enter mov pop jne pop sbb xor push seto add add mov fdivr aam ja inc scas jmp cwtl cmpsl movsl movsl xorb pop or (bad) test hlt mov ffree incl scas bound cli mov bound icebp icebp jae sti into dec xchg arpl mov adc xor adc into sub lds out (bad) push gs add aad icebp in addr16 push xchg pop dec and lcall js pop push pop jb push imul dec cs rclb dec mov sub in mov xchg sti rcll sbb or xchg fstl pop icebp jmp mov in popf fimull imul add es dec mov adc or add push inc jle lahf mov jbe jle xchg leave pusha das jmp sub fcoms ja mov lahf (bad) negb pop lea xchg repnz inc out cs and sbb xchg call out cmp in jbe sti jmp add daa add loopne adc in adc sahf in mov insl (bad) cltd mov fdivrl add mov xor sbb xchg pop sbb cli and or stos mov test sub mov int fsts sahf dec mov sbb outsl (bad) decb pfcmpge push idiv adc outsb loopne (bad) icebp pop mov cmpsb rcl inc xlat mov mov das (bad) (bad) jo xchg mov cmp es adc fiaddl aad dec cmp mov mov mov sub aad inc pushf in leave add add and sub push sbb mov ja pop sub shrl mov imul xchg dec iret or stos data16 out fsubl pop insb push pop mov push and pusha jl (bad) movntq jae mov sbb xchg scas lret fild scas bound add fadd fs aam cltd sbb mov adc jne,pt aam and lods cmp inc inc cmp add pop repz jmp xor fsubs mov fsubrl es (bad) xor xor call mov or inc cmpb aam icebp enter jae add cmp mulb push aam push aas jns cmp mov and sahf imul int insl in sub xor adc scas jb jo mov adc testl cmpb sbb wrmsr (bad) mov sub nop icebp lea scas in add shl cmpsb fiadd bound movsb jg (bad) and lcall cltd inc adc fsub inc mov mov lods push xchg ss rcrb addr16 cmpsb push in loop fs lret push mov or xor es imul lret dec jge mov add cmp xchg mov pop sub test ss fistpll mov jbe sbb dec call xchg inc xchg jbe inc xor pop dec fnstsw and jo mov mov out dec xor pop xor enter lret nop inc xor sahf repnz pop push add add sub loopne je jne jb addr16 xor cltd inc imul and hlt fcmovne mov cwtl in fs cmp xchg mov hlt out push imul popf addr16 cmp ja mov jns sub aad xchg add pop mov cmp pushf and and ja add xchg fwait mov (bad) iret mov ficompl (bad) mov loopne lcall pop outsb inc fidivrl cmp (bad) mov loop in sbb popf stos scas xor orb mov insb jne lods push pop sub add mov insb jo aas and aaa lahf mov jl out sarl test clc outsl jmp sarb push and xchg cmp aas inc xchg rcl jl or std add or jl subl sub stos aaa jmp insl repnz push ror insl or inc in and add dec mov add push in lahf pop or sbbl jae test pop in mov out and das inc push fucom bound inc loop pop xchg mov stos jp enter js cmp (bad) and jo or jns cmc mov sub xlat or add xchg test jo jge pop cmp aam lods mov xchg pop xchg aam mov cmpsb xchg xlat mov push lret mov or inc push xchg je ljmp sarl sub and add rolb outsb cmc iret mov pop mov push sub (bad) or add or rcrb xchg int3 das inc test in xor sbb out cmc imulb xchg jl xchg mov dec das repnz shlb push lcall xchg and add inc and neg fcompl imul test adc adc add flds mov (bad) mov rolb lcall xchg mov mov pop (bad) (bad) je scas aad cmpsl mov mov push mov push or stc xlat out and adc loop mov inc cwtl andl jmp outsl outsb pop jmp inc mov add in adc add jbe mov add mov lcall call pop imul dec test lods into jg js psllq enter jns pop aas xchg rorb or cmp lret fisttp sub (bad) mov daa mov (bad) clc jge,pt mov push push add mov add dec data16 cmp cltd or sub jl fstl imul testb out pusha repz or add xor (bad) repz outsb ds dec add lods cmp insb (bad) push test push add dec pop or inc std sbb add push shll or inc cmp dec iret shrb jle mov add jne xchg xchg jne sbb insl push insl sbb test popf sahf xchg (bad) mov push repnz sub stos cmp sbb int3 pop jecxz jmp fsubrp dec jmp add shlb and int or mov sub lahf push push inc xchg sub pop sub (bad) outsl fwait mov or lahf in call push mulb out push adc xchg push mov (bad) and fwait add push repz jg les inc enter jnp loopne pop jo adc call add fmul bound or lret das aaa mov jne jb jo std insb mov xor clc test mov lcall or jb (bad) enter add aad clc sub sti mov cmp jmp cmpsl xchg js or pop mov add gs xchg inc cmpsl or bound and xlat stos add add divb jge push (bad) xor push jae gs and jnp pop lret ds pop into cmp hlt rcr lods sahf into mov neg insb dec mov fldcw push or ror add pop (bad) jp lock mov (bad) jmp into xor sub mov fisttpll outsl rcr xor mov (bad) ss fcoms (bad) decl das inc xchg sahf stc ja in cmpb stc das int3 (bad) fnstenv or mov rcl cmpl add inc sub cmc add adc idivb das js inc adc cmp jbe xorb lcall loop fisubrl dec pop fisttpll popa push repz jp fnstenv dec (bad) repz xor jns ds cmpsb (bad) and inc ja out pop dec cltd rcrl xor add xchg cmpsl mov pushf xchg pop push sbb (bad) stos rcll mov orb and fwait out mov scas add mov push mov sbb pushw xchg mov ss addr16 lret xchg and fstl sbb pushf push jp mov inc mov add add aad cmp ret ljmp in adc pusha cwtl jp fnstenv leave pop jnp xchg test sbb inc test push cmpsb (bad) jl jo adc loopne daa icebp lret xchg (bad) js fidivrl and pop test push fdivrl or shrl flds add jb or inc add adc cmova popf popf out aaa pop dec and bnd stos inc adc (bad) arpl leave sub shr xchg lea lods dec data16 pop outsb mov xor pushf push add mov inc in les fs int3 and fucomi jo stos mov rdmsr shr fs cmp fistp hlt test lret and fdivrp mov mov enter fstl loope test xchg xchg cmp mov xchg repz push push pop xchg cmpsb xchg popf repz cmp popf dec push add popf inc xchg fisubr add (bad) cvtps2pd lea sub in das xor out jle mov cmp xor inc lods mov xor sti inc ds push cmpsl dec mov and int3 cmp lret adc jmp pop sbb mov mov popa adc jns (bad) jnp dec (bad) bound dec nop mov push dec popf mov add add pop cmp adc imulb xchg mov loop movsb and into cmpsl pop xchg mov inc mov enter inc rorl (bad) sbb pop or pop lds stos pop out (bad) jne push lock out into mov push leave mov sub add movb call pop test pop imulb mov inc fildl mov push sbb adc dec jecxz testl sbb xchg (bad) cmp sbb dec or mov mov pop dec xor add or and fistp jns xchg jns lahf xchg stc sbb mov add and and xchg fdiv in sbb xchg loop pop cmp fwait cmpsl (bad) icebp inc jecxz inc std inc out shl lods mov push mov adc jns jno sbbl loope enter addl lcall cli repnz (bad) jbe subb mov xchg push outsb add insb nop cwtl mov das fdivp (bad) mov aaa hlt rolb add jmp adc cmp test dec jae sub cmpsl xchg pop bound or outsl inc cld fcmovnbe ja xchg inc ljmp xchg inc add sbb movl lcall sub jns popa sbb ljmp lods cmp ret cs lock xor sub lahf cmpsl pop sub jmp iret jae hlt or mov lahf sbb dec (bad) loopne and sbb hlt cmp mov into int imull add pushf pop mov mov inc rcrb je repnz stc call incb insb int or daa mov xchg inc shl push insb push dec sub cmp dec jle and push push fwait jg rcrb mov sahf dec xor push mov jbe cmpsl repz stos (bad) sub pop adc (bad) add aaa jo push add fcoms cmpsl or aaa lret or xor iret jae and sub pop lock jae rcrl lock or pop mov mov (bad) jmp fisttpll sub push gs clc mov cmp int mov fistl push push outsl mov sbb or add add (bad) jo fisubr hlt mull mul ficoml arpl jmp dec data16 sub out lret jb ret (bad) lods dec or xchg out lea cs mov sub loopne int xchg jp adc pushf pop adc pop pop (bad) xor (bad) scas aad in fist ss add mov cmp arpl inc sub push aam je pop shlb xchg lahf and stos cwtl pop adcl incb das jmp repnz and aam je and sbb aaa sbb out xor in inc push mulb and xchg push out mov cmp sub jb pop pop cltd ja or sahf gs roll leave (bad) js leave cmpl adc pop loop imul pop and jmp xlat stc xor ds or shr dec mov dec jo,pn fcomp movsl mov and add push jge addl add int xchg (bad) mov cmp stos mov mov pop gs push lods and jbe loopne mov jns jg hlt jmp adc pop (bad) mov mov ret dec loop cld scas mov cmp sub mov and and mov (bad) push add add push jnp scas bound push jb and addr16 popl lahf inc cld cmp (bad) xchg mov icebp dec repz and xchg dec es jl add push icebp (bad) aam mov pushl cmpsl jne add in xchg mov add push ffree sbb and inc frstor dec jbe outsl (bad) pop arpl and mov movsb xlat adc inc push lods or sahf (bad) daa loop sbb out cmp or push popl or xchg in push or cmpsb rcl and push push sub mov mov lcall int3 rolb jb sub add lea call test xchg jp movsl test mov xor in scas and data16 add mov cld dec enter out call inc mov popa sub sub js fdivrs clc sub rcrb shrb add cld out jns mov (bad) outsl cmp add scas test rorl mull and inc dec ret fistpll push arpl lea lods lods pop xorl imul xchg test mov movsl pop mov push je xchg sub mov mov push lods adc add add add dec shrb cmpl std mov ljmp dec (bad) mov jnp dec fsubs jb push outsb (bad) sub dec inc std outsl scas add (bad) cmp adc cmp scas cwtl movsl xchg je ret js aas mov dec sarl pop cltd iret jge outsb aad cltd loope (bad) cltd inc out xor js mov popf xor test xor mov shlb ja or adc mov pop fldt roll cmp fcomps mov faddl mov jae mov or insl or stc cmp add add xchg mov pop mov jp mov mov mov pop rol aam cmp mov inc inc sbb add fstpl and hlt push xor add loop rorl js pop dec scas or lods loop add aas mov ja sub pop cltd add sbb (bad) mov loop fwait pop add cmpsb mov and subb fmull mov outsl inc lahf in je sbb into scas test adc lock daa loop in mov xor (bad) dec mov icebp test shr pop (bad) outsl sub ss outsl lret aam hlt or pusha mul xlat pop cld add dec stos jle adc leave push pop xchg mov loope jno (bad) sbb jg pop ds inc pop loope in push outsl ret xchg xchg fildl outsb mov in inc push pop (bad) fldl cmpsb add sub out pop subb mov gs cmp inc push add mov adc jg or dec xor or out jno sub jle repz add add mov es xor rcrb bound dec dec mov or pusha push scas pop pop es gs stos rep or dec sbb add add fildl sbb fildll mov sub lret push cwtl repz mov push clc shrb imul lds addr16 and jmp cmp sti bound test mov sub cmpsb push movsl cmp push sub (bad) fdivl mov (bad) cmp mov mov cmpsb jbe sbb mov inc pop cmp dec test (bad) add (bad) call fnstcw adc iret stos pop in stos inc sub xchg and mov out or outsl out xor (bad) jmp lret inc hlt push loopne add insl pop lods jp dec dec and popa mov push inc adc loop xchg push mov daa inc lock mov adc and push in outsl cmp fildll mov and sub out repz stc adc pop adc push daa xchg mov jp push xchg add aas push nop dec push cld mov loop inc insl aas pop hlt insl add or adc cmp int adc adc push xor xchg jno push pop ja add sti and add in insl push pop dec clc or cmp dec fs push orl in mov leave push jb mov or pop add repnz cmp je jae xchg jno test and push in inc rcll fnstcw ret (bad) ret pop jl das clc pop push xchg cltd outsl jmp scas out and mov cltd sbb pop inc lret pop lods mov out jae (bad) int add arpl (bad) xlat ret jne popf pop jp shrb icebp sub push mov clc mov mov movsb dec jb cs mov lret bswap cwtl jns inc sbb push lods or mov dec fistp enter gs in inc jge push pop scas aas pop (bad) mov loop pop insb add cld mov or jge mov adc shll and (bad) into test je push imulb inc mov ja fwait clc sti mov sbb jne sahf shr cmp and push cmp mov mov sub mov jmp dec inc add mov cld pop popa or adc mov ds mov cmp cmp inc mov mov in inc sbb cmc lahf (bad) lahf test xchg in adc in mov cmp pop loope rcrl xchg je into push out (bad) jne data16 push mov pusha inc aad push mov mov pushl mov cli pop adc fldl data16 sbb inc xor cmp ljmp cmp sub inc mov jno and test sub mov push movsl push sbb lods shrb (bad) adc add (bad) or mov lods int mov fwait enter add xchg cli leave (bad) lea pop outsl loop cmp cmp inc popa (bad) icebp std xchg data16 mov shrl ret rcrb std cli outsl cmp test dec idiv and xchg icebp mov push nop fidiv loop (bad) adc jle mov mov push pop add add add lock cmc lahf js adc stos dec repnz xor mov fimul push jl sbb and adc nop lea push dec and ss (bad) fs lea sbb cmpsl mov push pushf xor lahf enter xor clc push adc outsl adc add adc add push mov pop cmp clc bound lea push push jae pop daa mov push jle mov cmc mov rcrb adc jbe outsl scas and sub mov adc lret clc stos fnstsw (bad) sahf addr16 fcoml and fnsave decl add add imul data16 sahf jmp xor insb dec loopne xchg add pop rclb push jmp mov (bad) jmp int lret aad cmpsb cmp (bad) sbb and and jg rcrl cmp loop imul cltd mov and jp add adc pop adc add (bad) adc int3 push ficompl adcl pop ja xchg and (bad) movsb jle lods jns std imul or addr16 lea ds cmp mov mov imul aad pop pop push mov xchg fisttp fnop hlt ret inc or push (bad) pushf mull in pop pop popf fs add add out lock inc cs mov aad sbb mov sbb (bad) out mov sub or pop cs mov mov jbe xchg outsl jbe sub lods push cmpsl or push sbb push dec sahf mov xchg pop test inc or pushf pop cmp clc xchg add jp pop ret pop ds cs iret arpl pop mov add cmp enter push mov into and shl insl int3 cwtl mov (bad) jbe xbegin jmp test fdivp xchg arpl popa fcompl icebp aas dec ljmp add mov dec lea mov add jb mov sti inc adc and sbb adc mov ret in imul ficompl sbb lret and fbstp adc mov std jno leave xchg adc aam push push xchg movsl mov test jnp les add add repz es (bad) test imul mov fisubrl fsubs cmp inc int xlat adc push cmp sarl std jge fiadd dec jae lret lods fdivrs add pop mov jge mov insb leave test roll sub and jmp sbb lods mov add add add (bad) inc (bad) sbb cs cltd repz xlat sbb jae mov mov dec js lock fsts pop add lret push call outsb addr16 stc lds and daa cmp imul or push (bad) hlt jmp clc cmc sbb aas jno add add adc pop lret js (bad) fdivrs lea call sbb cmpsl js push or je in insl loope ja jne scas cmpsl insl pushf mov stos pop movsl sbb push mov adc lock jmp xchg push ds and (bad) mov aaa push daa add add cwtl xor ret xchg scas int cs test mov sub (bad) mov inc mov jp pop lahf mov ds dec xor pushf dec or mov jns outsb sbb sub xchg jb mov lock adc xor xchg movsl xchg pop lods ja clc in enter add and mov sbb out xor mov xchg (bad) inc cld sti sbb mov stos pop sub cmc je xor out in orl push repz pop sti pop test dec int3 or or shlb xchg ret fstps and mov xor hlt sbb frstor sbb push pop test shld rcrl out pop js in movsb dec idiv jmp in pop pop outsl (bad) int3 scas stos inc ds pop mov pop (bad) pop xor ljmp xchg push jge inc and fadd jnp aad lods stos mov adc mov add cmp cmpsl inc xchg jns and adc add lcall int nop sbb daa jne je cltd fbld cmp clc xor mov fnstenv rorl iret push adc cld dec cmc pop inc test add (bad) mov adc sub add lret xchg jns cld cltd aas or sub pushf inc push push call add or xchg sub mov inc ficomp inc mov icebp jl xchg mov fildll testl sbb mov mov ror cltd pop (bad) jmp pushf daa pusha pop cmp jl mov cmc jmp sub adc jecxz push test sub add xor pusha lret mov add aaa mov jb sub ja sbb sti jno fisubr hlt xchg dec decl mov outsb jo mov xor jp add sbb (bad) add cmp sub mov mov cmp in push outsl adc mov add add pushl adc iret loope,pn xlat cltd adc pop adc pop mov cs out dec loop arpl addl aaa call orl add and jae (bad) movsb mov pop ret jne mov push push outsl fcoms cld mov cmp xor sbb adc add (bad) and pop jo push or pop daa adc insl fldt mov jp (bad) popa mov and pop sbb out and sbb imull pop out cmpsb dec ds xchg mov jnp dec mov testl hlt cmp xchg push popa sbb cmp dec cmp sub sahf shll dec mov lods fs imul mov pusha loopne (bad) push push nop ficomp cltd outsl and das push inc xlat in lcall paddd movsl repnz call dec fwait into mov jle (bad) out fiaddl aad mov dec dec int ficompl das sub mov add dec lret mov lahf scas or mov shrb sub movl test int mov xchg scas and jae adc xchg sbb aaa or inc sbb xor xchg jp into repz inc sbb out imul mov repz setp fiaddl add lods push mov arpl out and fstpt pop jbe lock ret cltd fist fdiv fcmove xchg out lahf or xor lahf mov sahf ret push pop popa push scas pop push loopne lds cmp adc cmp pop mov or das pop add div cmpsb int dec sahf xor mov add add push mov mov popa mov stos (bad) stos imul (bad) mov add sub (bad) xor cmp (bad) jle xchg mov and popa ss (bad) int mov movsl add std adc ret add push pushf psadbw lcall cmp je,pn das movq add add dec (bad) incb xor lcall icebp pop cmp rcll dec adc inc lock inc pop mov ret shrb cmp jbe std inc das xchg es fld push imul mov lods loop sub fisubrl test jge test mov mov int3 dec into inc add add pop pop xor inc mov jns mov jge mov outsb jnp popf icebp push sub ss repnz lods std dec sbb jb fisttpl imul lahf (bad) jle js enter (bad) mov das inc loopne enter sahf xchg pop mov scas xor push mov lock add cmp push (bad) test jmp adc push outsb lret or jp bt sarb pop leave pop aas xchg shlb outsl daa (bad) ja pop jl jo imul fmuls jbe stc (bad) jno push out jnp bound mov cmp add out leave or add popf jnp xchg cs aas or push or inc bound or sbb insl out inc gs xchg ret call stos and cmpsb (bad) mov push lret js (bad) insl lock jp fiadd ljmp gs dec in jl jmp dec hlt lahf or push arpl (bad) stc add shrb loopne add out xor sbb pop push lret loopne mov repnz lods dec notb fiaddl mov inc or mov rorl mov jl (bad) xor pop add iret xor pop add add xchg or sub in adc out jnp ret cmp jmp jae cmpsl jmp and (bad) in nop or add int3 int and cmp push arpl add xchg pop mov in xor rcrb mov mov xor sub test add push aas add jp loope addr16 loope xchg and xchg xchg jge stos xchg fistpl js pop clc inc dec sbbl aad dec mov test dec int pop push push insb js icebp hlt xchg pop xchg xchg mov push negb insl add pop popf (bad) sbb ljmp stos sub jg xchg sti push stc icebp ret lds xorl pop repz mov jmp and aas mov cmp (bad) ja lcall in sahf sti cmp dec call into ljmp add add sbb mov lahf std (bad) dec or rorb adc mov enter fs lods imul mov inc ss add mov pushf sbb or jge aam mov jns jne mov dec or mov push push outsl add add push (bad) mov jmp mov or sbb sub jbe dec ret lea jl mov daa das neg dec jo and hlt divb add xchg and xchg test sbb push dec mov cli (bad) mov es nop data16 add fsubrs pop aad push mov pop daa mov sti inc jne pop rclb mov lea loopne clc xor mov mov dec pop and sub pop lds std xchg add lea pop jb sbb dec scas pop icebp jbe push pop fldl push int add inc fld1 std rcr int inc mov ds loop ror jle push sbb push jg gs pop pop xor cmp fistpl or std das jg (bad) lahf mov xor inc je inc xchg sub push jb dec mov leave push mov int3 je ds add adc mov cmp jne jmp gs nop sub sbb out gs or dec fistpl jl lcall jg xchg push es pop sti lcall sub in out pop and (bad) ret dec sahf and add dec adc add mov cmp sti jmp cs scas ret inc fs (bad) in sar pushf aad adc xchg jmp sbb xor mov cmp daa or lcall mov inc lret cmc (bad) iret lods aas es test outsl das sub fnstcw sbb push outsb sti jb pop cli dec inc sbb add mov lea mov xor lods sub dec and add pop addb imul test ja mov pop inc fsubr or test or mov popa jecxz jecxz je test pop rclb mov inc add scas lock add (bad) mov sub xchg cmp jb cmp inc aas inc iret add fistl repnz insb mov pop mov ds nop rcrb mov movsb fstpl cwtl repnz call aas jp mov cmp outsl aam mov mov push je bnd shlb add mov mov mov jbe jno cmp pop in mov faddl enter and ja aas xchg push lea jl xor gs mov mov and push mov rorb mov aam cwtl xchg or faddl add cli mov jle sub mov call sbbb mov xor xchg push add sbb xor repnz dec (bad) jb ror mov mov mov mov movsl insl call or and pop mov adc sbb add add imul cltd lds push sbb in or ret mov dec in pop sbb xchg sbb int3 fstpl dec pop dec push pop outsb notb push jge mov dec lods faddl mov mov in adc insl jp lahf cwtl fdivs lea dec xor test adcl insl mov xor mov dec loop jl aas lcall lods outsb jmp mov std sbb fdivrs pop xor push push pop cli outsl out xchg mov xor stos mov mov cmp stos stos adc bound in adc mov add pusha xor xchg sbb xchg cltd mov stos aaa repnz sbb mov cmp sub je pop lods iret das xchg ss clc dec fdivl ja hlt js pop addr16 pop mov dec lock (bad) pop xor arpl in pusha mov xchg bound and cltd scas mov test movsb stos inc in xchg inc mov inc sub rcr or cmp div fs fwait or (bad) ljmp jno xlat scas xor subl sub mov cmp and jae mov fidivrl sbbl sbb push pop outsl dec insb adc add add arpl cli mov mov mov and dec js jb xor sbb scas sbb push or stc pusha jns and push fstl gs (bad) fidivrl jmp sti mov or loopne inc cmpsl adc in sub xor xchg sbb mov add add add imul and xorl daa or repnz xor mov clc mov or mov pushf outsb jp (bad) shrl testb lock mov in in ja sbb push jno adc sub sbb inc repz dec mov add adc fadds add add fldl2e adc js pop pusha jl xor xchg pop les (bad) dec in push and pusha xor lahf sub lret lret mov gs fwait jae xor jnp add lods dec and enter xchg fldcw neg add xor rcrb add add fistp sbb out sbb mov xor pop mov push mov (bad) je enter jecxz mov mov inc mov adc iret jge,pn insl icebp or push adc clc mov sbb xchg mov sti iret int insb addr16 mov enter pusha outsl (bad) aam lcall addl add add pusha inc mov mov dec mov push loopne pop xchg lods sarb and jle add int3 or insl inc cltd imul movsb mov in mov iret icebp (bad) call jne andb inc test jne dec or aas jp adc sldt add mov rorb cli jmp dec or mov insl jle dec js scas lret jbe fisub imull or fcmovne xor ds movsl cli lds aaa jae in cmp or jo push hlt pop int3 lret das int and xor sub or add add dec or inc xor sbb cmp imul mov push aas cmp insb movsl mov (bad) jb mov movsl xor cmp mov mov repnz pop cmpsl adc jle sbbl mov lods cmc mov mov pop fnstenv xchg add mov loope add pop nop jne mov push or das fdivrp dec sbb inc imul scas pop push (bad) in (bad) sub add mov daa push xchg rol loope xor mov test int sbb cmp sub adc and je sub fs sbb cmp adc and mov jecxz dec (bad) rcl jb mov out xor movsb pushf sub jo add push out jge fidivl mov arpl lcall cli (bad) mov mov jecxz add pop dec add sarl add ljmp idivb mov pop clc push imul pop daa cmpsb pop pop adc inc stos lcall add or lret mov outsb sbb jl or je and insb sub aas jmp push jae xchg jge es rcl cmpsl test adc mov xor add add mov clc dec jge sub lods lret push jp mov fsubs ja pop popf outsl (bad) mov out dec (bad) pop popa dec xchg push sub add cmpb sub and mov mov ret xchg test jg adc lds loop add ds xor jmp pop in bound jecxz lea pop jp xchg mov cmp pop push iret push jle sub inc dec roll sbb cmc mov xchg or mov sbb add ss xchg sbb xchg inc repnz fnstsw in movsl ljmp daa add test test dec mov sti addr16 loope xchg xor subl outsl scas enter or mov inc or (bad) push fnstenv stc xchg pop sub orl mov call sar xor dec mov jae dec test popf outsl (bad) push inc xor push or cmp mov data16 out push push add xchg orl (bad) in add push dec pop adc cmp and xlat mov adc aas mov sbb add scas xchg add pusha adc fisubrl add add jl pop mov (bad) test aad std imul dec mov cltd shrl or mov jb or mov into imul (bad) xchg mov cmpsl jl aaa xchg xchg pop loope xchg cwtl fcmovbe mov cmpsb mov mov add add pop dec lret jbe divl dec cmpb dec sub xor repnz mov xor (bad) (bad) xor negw into cmp jno cmpl jbe mov or xchg mov das test pushf in jbe xor and int movsb lahf lods inc test add add add xor push xchg in ljmp addr16 sub pop cmp repnz push lcall inc nop stc repnz (bad) dec jle fisttpl pusha push mov sbb addl (bad) loope cmpl cmp cmc (bad) scas aad enter mov dec dec (bad) mov mov add adc sbb sub std (bad) enter jle mov sub loope pop icebp (bad) adc dec add negb fidivr jle inc pop fldenv pop scas xor jl iret stos jne mov pusha test and inc std mov xchg shll push insl fucomi add add cmp pop dec jo int or push or push loope jbe mov mov movsb aam inc popf sbb adc ljmp (bad) out icebp clc cmp push adc enter cmp pop sbb push clc sbb rcll sub xchg add adc xchg xor lret into std mov out fimull jmp mov mov jne adc or sti and xchg nop sub sub nop jg mov dec in insb add or push mov icebp gs int3 repnz imul add sub lret pop mov sbb sub imul pop hlt sub in subl jge jne scas xor aas push push sub rcll outsb fcoml in mov mov icebp push sti outsl cmpsl inc sarb std scas mov sar jns inc ja lods roll add add add ljmp orl jmp adc lahf inc call cs hlt ljmp out jle fwait in sbb mov push pop imulb pop sub push jno push xchg pop xor lods int lea (bad) (bad) js jns inc dec arpl mov add and or mov inc xor sbb jbe jno int3 inc movsl out and ss loop inc push push mov sti mov sti mov add and push push mov fwait mov add sub fucomi dec idivl add stos push adc add add add inc (bad) mov in push pop xchg and fs stc clc dec jo rcl xlat (bad) int bound roll mov sbb in lcall sub notb test fistpll lret xchg mov xor pop pop mov push mov xchg cmpsb mov orl bswap out or add add add pop cli mov std jmp pop xor jmp jg pusha pushf jmp out mov inc dec lret in js jo cmc data16 das into fcmovne cmpsb leave jne xlat aaa popf mov repz adc push jns inc push sti or push mov mov insb imul mov jg scas mov inc loop in dec push push mov mov push stc and add aaa data16 cmpsl pop jg cmp js sub ret aas mov aaa push jecxz push lret imul mov cmp sub jne std aam addl add out dec xchg leave ret aas es add (bad) (bad) test das int3 sbb daa pusha insb pop hlt repz stos xor push data16 mov (bad) loopne mov lret mov sub aas push lods dec cmp cmpsl (bad) jo cld aas mov and rorl adc jle je test adc and pop lods dec jg in mov add add fdivl out (bad) or js push mov mov pop adc es dec jecxz push out jo int3 aad and jae pop (bad) rolb aas mov punpcklbw sbbb andl lret pop dec mov or push ror stc nop sbb repz add add adc lods mov pop xchg rorl jg movsl pushf aad int3 add imul mov mov sbbl pop js (bad) in jnp sub das cs ja (bad) push (bad) stc sub stos xlat push out jno scas inc int3 test mov rclb inc sbb add add push shrb leave mov add in jo fiaddl and int3 imul push xor mov fs pop jp jmp sbb gs adc fnstenv jle test push cli dec fldenv popl xorl stos xchg jno mov add jmp ret pusha or push jmp pop cltd incl outsl add stos push dec pop mov push and insl add dec repz jp xlat repz add aaa xchg add lcall (bad) ljmp mov inc and add cmp sub int3 out rcrb in or pushf (bad) cmpsl test loop insb xchg stc jg sub dec cpuid pop xchg jne pop push sbb fist scas mov mov fsubrl add (bad) movsb push jb sbb insl subl mov cmp jb sbb add out outsl dec cld xor add pop lcall negb lods outsb sub sbb push fs lea adc (bad) loope daa add mov imul into out mov inc cwtl cmp adc pop or inc sbb arpl adcl add add les adc fbld sub dec and mov push mov push les aas xchg out jmp nop scas movsl insb mov shrb xchg cmp aad dec inc clc pop repz sti xchg clc sbb cli jp push pop pop std pop mov loop and add add enter pop ja push out iret adc cmp out (bad) xlat fsubrl lds repnz gs cmp or sbb sbb incb bound jle fsubs or sub xchg xchg jbe (bad) add mov push cmp fisttp movsb mov jl xchg pop insb fwait jecxz add add fs inc sti jno xchg mov xchg sub daa std (bad) jno adc mov repnz stos negb mov cmp push inc outsb dec lret sbb scas pop shl pop loopne (bad) pop push out adc fsubr sbb fwait pop pusha or add add or mov outsb (bad) stc fidivrl movsl cmpsb pop aas js xor mov push loope dec in bound inc incb xchg clc cld or lcall push lds cmp fdivrl adc or inc jo clc loopne (bad) aaa mov bound out popf mov add pop mov jbe loop das inc inc daa mov js jno fsubs leave push call (bad) sbb mov mov adc fcomps shrl inc or mov xor mov sbb popa out adc mov xor xor roll add loope mov repz ljmp pop ficomp mov xchg cwtl jns xchg mov or movl inc cmc (bad) mov pop js or push sub stos js mov jb int pop test dec jnp jns cmp xchg andl into dec sbb adc inc ret add add pusha cmp cmpsb icebp sub aas mov pop adc cmp aaa es scas and mov lods pop cmpsb ds lock in test (bad) pop les sub orl hlt push mov aas mov fsubrp pop push push std mov mov mov (bad) leave mov iretw mov add mov loope mov into add cmp test and add xchg dec mov and cmp lods mov mov mov sub (bad) imul pop and ret movsl popf jg and data16 mov int js mov pop shr loopne adc ficomp stc ds mov dec subl inc mov adc jle test enter dec push int3 sub call in (bad) shrl add mov out xlat mov inc mov loop jmp xchg inc push nop cmc pop bound xchg repz es mov jl movsl xchg pop repz sub cltd pop adc arpl jbe and repz fnstsw mov sti gs mov (bad) scas cmp (bad) sub xor xchg inc and lods mov lret push mov sbb aad xchg mov mov jle sbb pop jns add jmp inc jge push imul and fcoml jno das push or mov push xchg in xchg repz dec mov fsubp inc call sahf sbb push int shufps adc (bad) cli stos fstpl (bad) (bad) lds and dec cmpsl push decb add (bad) mov or (bad) mov sub inc and call sub ret fbld stos pop jmp pop sub cmp sub mov push lahf and popa icebp mov (bad) lahf cmp mov inc rclb loope dec fisubrl fmuls rolb and adc xor mov loopne call add add aaa fwait mov lahf inc scas leave fld je sysexit divb cwtl cmp jae dec inc hlt xchg mov fstps inc adc loopne mull inc mov lretw inc lahf jmp inc movsb ljmp stos repz dec dec xchg add or mov dec ss cltd insb mov push por add and jnp push fimul mov sbb and jae lods mov out addl xlat xchg inc adc mov loop arpl dec lcall mov sbb (bad) (bad) std jl xchg jo pop stc bnd (bad) sti xchg nop test fidivrl (bad) scas push add push test popf xchg mov fdivl pusha rorb scas sub xor leave jecxz dec add rcr std inc inc and stc sub leave pusha cmc cmp xchg pop daa mov lods inc fwait inc mov mov mov cmpsb (bad) icebp iret push add out add iret les outsb xchg stc mov aad and cwtl outsl and into pusha es push lahf test lret jl insb jge out and xor jecxz cli hlt push gs adc in mulw cs jg mov in add jns int3 repnz inc or adc repz xchg jmp jmp pop or fisubl xor inc add insb sbb lret mov cmpsb mov mov mov mov sub mov js repz xchg loopne mov dec ficom inc mov sahf into pop int3 sbb stos push mov out jnp iret jno (bad) cld shrl xadd xchg pop add adc push adc les pop insl out jno cltd xor xorb loope and es (bad) imul inc inc xchg cld mov mov insl fldcw outsl in mov fnstcw and pop cmp sahf jae xor aad lds add mov call mov add mov (bad) loope jl sub scas pop xlat out out pop aad rorb dec aas xchg ljmp cmp mov loop push dec scas sub adc fdecstp imul xor shrb out mov mov mov insb sub mov mov sti xchg lods es mov test add add add add lock lcall mov call loop gs jp xor jmp jbe cwtl and sub jne sub push inc es jp mov lods div aam dec rol mov add pop (bad) popf leave imul (bad) xor sti mov add add jle das pop push cwtl aaa in add ss mov and and fisubl int3 push lret (bad) xchg (bad) sub inc test xchg scas ret data16 adc das dec dec inc adc mov inc adc test dec mov sub es pushf shll add jno mov (bad) mov dec mov outsl stos ss out daa lret or adc stos aam inc or mov cmc ret inc fadds mov data16 or mov xchg test aas pushl arpl inc fsubrs jnp push addb add add add add xchg jbe and jno jle int rcll cmp js pop add lods aaa or rcrl popa lret push pop icebp movsl jnp js inc push (bad) push dec fisub (bad) jmp and stos dec fisubl mov in jb inc stos cmp jne xlat popa mov jmp int3 lret loopne cwtl inc mov add pushf data16 test pop arpl gs fsubl int pop mov lods cltd (bad) in sbb pop loopne adc sub cmp push jge mov mov (bad) jno into pop scas cs loopne fisub sub stos fist (bad) or add sub mov adc or je in lret mov dec out add data16 adc inc daa mov repz outsl mov mov pop bound mov cmp mov cmp or mov nop cli jns mov mov sub pop repnz dec sbb add mov push mov push xor loop or xchg xchg fisubr (bad) repnz ljmp shrb push mov mov rcrb mov popa into test rorb mov pop pop xorl jnp mov push and add add cmc scas scas nop and sahf call mov inc sub xor mov mov lahf or jl pop sbb sbb cmpsb jmp sub push lea test mov nop dec repnz xor lds out xor jmp stos mov (bad) fsubl sub sti in cmp add cmp add add cmp add in push (bad) repnz daa (bad) ret sbb pushw repz loope in ret out mov xlat daa or lods sbb cmp imulb jmp movsb ret cwtl fmul ds insl add push das fcmovnb sti dec test dec std add (bad) (bad) (bad) mov or lret loope cwtl push and mov out std js stc adc imul (bad) mov sbb clc sahf daa inc (bad) push pop jg xlat lds lcall push nop imul dec lcall insb or xchg (bad) sbb jle or pop test sub jae mov mov orb adc loope mov fwait jo push and push cmp pop jle adc push nop add jbe leave inc adc cmpsb or pop pop mov mov iret jnp jnp movsl sub inc int3 or add mov mov ret push sar dec jbe fsubs lcall fdiv xchg shrb sbb push cld cmp sahf fcom cmp jno xchg pop enter repz sarl lret mov lods xlat cmp aas popa mov dec push jmp in push add add fwait sbb push pop mov sub pop dec maxps push mov mov fs loope adc pop in outsb rorl xchg mov popf mov stc es and test ja mov cli jecxz lahf les sbb sub xchg lret lock add add mov add dec mov add pusha cmpsb mov mov sub out jle inc cwtl mov and xchg imul mov rorb scas dec jecxz mov aam mov scas aad pushf mov xchg xchg inc bound mov aas jecxz and cld xor test andl add add pop or and pushf (bad) adc scas push divb jmp sub mov mov push cmpsb xor popf lods cli inc inc ds imul cs stc sahf dec xlat movsl push add xor (bad) js ljmp jo cld mov in je add sahf repz into add dec repz mov insl jne mul std inc xor insl jo and inc nop dec inc es adc adcl adc adc jb pusha lcall divl or lock lcall movl lods cmp ret jmp aad imul bound jnp ss bound cld or ss (bad) stc cld sbb dec addr16 stos into sub hlt or mov popa push stos repnz cs add sar (bad) in xor or add add bound into xchg test iret sub loop cltd sbb xchg call (bad) and dec ljmp mov (bad) not imul dec mov xchg fdivs jge mov std mov (bad) ljmp xor xor aam leave sbb xchg stos adc insl in add add jle inc mov xchg repz push xchg jo leave cmp test mov sbb and cmp out adc xchg (bad) movsb mov test arpl xor addb popa xor mov lods pushf jmp out pop or xchg add cmp mov fnstsw add mov dec xor rol (bad) xchg mov aam and push ret mov push inc mov fisttp int mov popf pop sbb inc jl mov mov cmp cmp lcall inc mov inc xchg inc dec loope sbb add sub (bad) add inc sub dec pop dec les jmp icebp enter aaa pop aaa mov cmp sub cmp jp jmp xor outsl and xor xlat pop sub ja add out nop loop lock (bad) (bad) sub test popa (bad) sub jge mov movsb aas jnp arpl xchg mov nop cmp rorl add fldcw jmp loop pop jbe push cli pop repz (bad) or lods lret lcall insl repz xchg (bad) xor cmp jns clc xchg and mov mov sarb sbb mov pop or pop add push cmp test add add std cmp std adc pop cmc or and (bad) or mov popa ja cmp fisttp pop aad arpl (bad) jle and movsl ds cmp ljmp and stc mov ret mov add mov clc inc adc add add xchg mov mov roll aad cld mov les push ss ja mov enter fisttpl pushl gs and pop jne arpl or add int3 sbb add inc rclb jbe jg pmulhuw xchg sti lea add adc mov outsb ljmp scas lret and enter subl jp int3 loopne subl stos or push mov push inc jmp jg pop lds jmp push lock iret xchg insl mov mov out push and adc std les lret add add sti mov add sub add jl mov mov jge push xchg (bad) lods xor ja jns xchg std adc xchg push dec sub mov dec out sbb les psubusw xor test (bad) stos cmpsb (bad) jo frstor sar xlat fistp and xchg dec push sbb pop and add dec ss mov popw mov mov imul cmpsl rcrb pushl pop push push mov div jo and jbe dec adc jae pusha loope mov fcompl xor add sbb or in outsl mov (bad) (bad) dec aas add push pcmpeqb pop jne clc clc fldenv jne idivb loopne mov xlat push sub jno push lods dec inc lock bound pop pop jl loope push das sti pop out mov int test (bad) pusha leave outsb jge aad fisttpll movsb mov sub add imul mov mov xor out pop ds sbb loopne or pop lods cmp cwtl push (bad) jb sub lcall leave mov cmp add cmp inc cs mov mov sbb shr or add jg jbe mov scas pop test jg outsb test xchg stos int and lahf dec mov adc addr16 pop sbb sbb pop ret rcrb push jge xor jp dec dec xchg es push icebp fild and movsb lods pusha ljmp xor clts ds push add jge icebp inc push mov xor mov adc dec mov jg and jb data16 cli push or add lret cmpl bound inc (bad) lahf fisttpl stos insb mov mov and (bad) push mov into ret cmp jl mov add outsl ret data16 lock test add lahf test push pushl aaa repnz fldl or dec or sub sub ficom cld mov dec lods repnz push xchg add sbb in aad mov pop stc push lods imul jge outsb aad jg mov sbb sub les loope xchg imul rcrl or ljmp cmc enter mov fstpt pushf mov adc fldcw shrb popf gs dec sbb jbe fsubrs insb std pop arpl sbb ds jecxz mov inc cmp out dec mov mov test daa (bad) mov inc das dec icebp ror repnz lcall mov cmp mov rcrb jnp arpl adc add pop mov pop mov jno inc arpl les sub stos or repnz xor cmp add add add sub lds cmp adc push (bad) jmp cmpsb inc dec pop mov les jle pop outsb mov scas pop stc jbe loope (bad) (bad) fucomip out lea sub mov push loopne rcr sbb into sbb pop sbb sbbb bswap cmp int push pop sbb (bad) (bad) push lock adc add add mov or add cmp (bad) iret jmp mull popl dec cld dec call int mov imul xchg mov ja jnp repnz ja push fnstsw fdivrp pop push int3 aad addr16 shlb inc (bad) repz clc sbb xchg ret aaa imul add add enter faddl cli mov out (bad) adc (bad) es xchg aad imul pop loope into pushf push ret rcll push adc pop inc and jg xchg sbb daa out and das pop xor mov jae xor xor push aad mov mov je jge fidivr in mov int3 popf adc cmpsl pop jle loope xchg out pop jb in outsl and mov aaa (bad) hlt xor adc call xor adc adc pop jo pop ljmp pop sbb imul dec in pop xor xchg sub sub ret adc add jb dec iret enter adc repnz sbb mov and ds ja xchg mov jno bound push notb cmpsb rcrl sub int3 jae adc dec or cltd lods pop jno jno call iret fnstsw ss push xor sbb add add adc insb cmp mov inc (bad) xchg aad (bad) insl in xchg mov insb mov cmp int out mov sbb adc cmp decb popf push in dec xchg xchg push mov clc (bad) inc pop in into push fmuls bnd je mov jae dec cmp add inc cwtl popf adc inc cli and pop mov xchg adc mov aam push fsub es xchg adc loopne pop push jo pop (bad) fldenv jp (bad) sti out pop js jge pop lret fimull std jmp movsl pop pop lahf sub daa mov (bad) clc adc dec and fsubl xchg mov jecxz cmp add add ja rol enter and xchg sub fist insb sbb push xchg divl (bad) jbe (bad) outsb hlt insl mov insb roll mov or jo mov popa movsb xor mov mov mov xchg xor push fsubrs add mov jae and movsl adcl mov push mov incl loop and pop stc mov add mov iret lret jae or lahf cmp push push xor jo outsb ret hlt loopne lock mov lret push aad mov loop push rorb add add fwait push pushl movsb jge jp mov xor cmp ret test xchg cmp cmp aad cmpsl (bad) scas sub inc push or inc dec sbb js popf sbb test dec mov lahf mov mov sub fldl add in jne jnp or daa pop xchg js or cmpsb jo ret jmp roll adc ret mov inc adc add push push pop fs dec jg xchg adc pop aaa cmc cmp push jl movsl xchg xor adc clc mov jmp int testl add push cmp push mov popa xor sti cld adc xchg movsb repnz cltd test mov mov inc sti stc (bad) cli dec in outsl cmpsl jecxz xor mov push and fwait pop mov aas xor lahf out xor aam cmp jle push cltd repnz insl push xorl iret fsubr jle in imul add adc (bad) adc jmp pop in insb fistpll lcall lods mov and push hlt lcall or repnz cmp pop inc mov sbb sbb mov loopne stc pushf sahf les add sahf cmp and (bad) add mov add stc cmp xchg pop unpckhps les orl aas roll add xchg out adc pushf (bad) std int add mov xchg lcall pop xchg mov lods das imul jbe into imul mov add jnp push (bad) dec mov cmp cli popf inc fld dec mov in add add sti push or rol mov mov xor jae inc mov inc xchg mov dec in inc adc loope lods lea adc dec mov mov insb loopne cmp divb (bad) rcrb or cmc cmc cmp aam insl pop mov dec lcall add (bad) jp loope mov loopne jmp ret mov or sbb sahf jle adc ret or inc dec and rorl and popf pop fs (bad) enter sbb push pop stc js mov call cmpsb sbb pop jmp add mov add pop xor add inc push xchg and pop mov insb mov fmulp mov and lods jbe mov repz repz jecxz inc lret add dec mov cld cmp xchg inc scas insb cmc sbb jnp fwait les adc aad xor add mov cltd ret add inc gs sub or ret pop (bad) flds inc int3 dec sbb lods mov push xchg mov mov inc cmpsl pop inc sbb pusha repz cmp call cmpsl mov inc add jg lret loop push daa sbb add xchg push mov cmp loope cmpsl insl sbb push push push jmp cmp or out cltd xchg aam adc cs test daa ljmp (bad) pop pushf mov ja fcoml xchg jl mov dec outsb jae mov or daa lods add ljmp add add test nop fiadd repz mov je lods mull aam push mov sbb subl jl ret jnp push mov scas test cli lret daa dec aaa push jmp mov mov imul lret inc pushf cmp lods jmp mov sbb out test jmp iret add loope jecxz pushf (bad) pushf push sti mov xchg add dec inc adc jg in pop cltd mov sub jmp mov xchg and jg and jnp xchg inc stos or popa loop jb add loope xlat jno cmp mov jmp fs insl enter rcrl idiv adc jge push mov loop fadds and mov mov sti mov sbb arpl bound push xor fisub in add ja (bad) out push mov sbb mov add jmp outsb outsl dec pop mov out push xchg iret rcrb cmpsb mov cmpsl lcall out mov dec jns dec data16 in inc out lods mov push mov xchg pop stc (bad) repnz loop cmpsb int mov repnz xchg mov pop jmp ds outsb xchg aad loopne xor pop jo dec add cwtl lret xchg mov ret lret gs ja or inc sub mov js lea mov and pop outsl jns adcb and stos xchg enter pop mov sub add punpckldq xor lret rorb and jnp ret mov aam nop int3 lods mov add add add mov sbb int imul mov iret cmpsl das xchg iret cltd bound mov lret (bad) mov cwtl push mov int3 dec aaa enter (bad) mov int3 lods xchg sahf sub adc daa imul nop sti sbb in jge les push xchg (bad) nop add inc mov jg pop cmpsl shlb pusha jno jle gs inc pop and push cmp lds mov add call dec xor dec sub push mov and add loopne pop je movsl xchg push dec enter adc nop icebp (bad) dec pushf iret cltd mov cmp add lock cld inc inc pop mov jge xchg mov push lds int3 jne sub fstps outsb adc or cli pop adc aas cmp jg add mov add and in push cmpsl jbe and enter and add inc push imul mov popf cltd mov mov cmp push inc and insl es stos (bad) adc stos push enter subb ss mov pushf or pushf fidivr pop iret cmp mov int adc mov push mov or and leave pop xchg je add stos or ret pop mov je push add ret and lea push jno or sbb clc jbe std mov jo stos pop out dec sub ljmp xor or (bad) adc or scas leave dec pop (bad) or sar xlat aam add add add pop repz adc clc bound ds insb stos call sbb push pop enter add mov das adc lret in dec cmpsb out jmp push nop test mov out ja push mov mov rcrl push jg,pt daa xor cli mov lahf (bad) mov fcmovb mov dec (bad) lahf dec push sub daa add add loope rcrl aam jne (bad) lcall xchg mov or cmp push sub jecxz cmp inc out loopne fsubr test cwtl sub stos test adc movsb mov mov mov in ret sbb mov bound lcall repz into arpl add add add add cmc jle decb std mov pop movsl add data16 xchg pop test je (bad) enter mov jo pop xchg jmp test fsub vpmovzxwq repnz sbb push out es aaa test in mov mov jnp push mov imul out test (bad) imul flds pop ljmp add add xor cs fwait fwait dec enter out arpl je pushf fiadd and scas ret jp out pop ds data16 mov hlt pop ss repz or sbb outsb and outsb aas xor bound mov repnz sbb xchg pop hlt mov hlt pop daa (bad) push iret insb lock adc shrl pop push mov (bad) mov xchg fidivl dec data16 adc push pop into cmpl insb andb flds ret jo jno mov loope loop xor inc push inc mov addr16 adc xchg push into fwait sub insb loopne pop int3 sub out add pop pop inc insb aad sti inc fidivl dec rcrb dec xor imul pop xor push icebp jb aas (bad) or push add jg ret rol mov push cmp ds mov ljmp or mov daa mov add lods lcall add add pop inc cmc adc leave and push repz jb and lfs pop cmpsl or inc cmpb xor popa or loope cmp xchg mov or aam (bad) dec pop adc adc push aas jb adc in cmp ja push and gs push je repz add mov ljmp (bad) fldt push pop int xchg sbb sar out sti loope (bad) jo,pn dec pop pushf adc je (bad) lret add in and and ljmp mov push fstpt xchg sti test (bad) ret push xchg ja (bad) nop scas movsl outsb push outsl mov xchg lock cmpsl scas sahf push loopne push popf (bad) mov pushf pop adc daa (bad) dec mov mov out aas or imul xchg out dec cmp in jmp in lcall xchg sbb mov add and cmc je mov or pop xchg aam push into in add add lret push pop add xchg in cmpsl add mov xchg or xchg xlat lock xchg pop int movsb dec sub sub fisttp test pop cmp inc jge (bad) xor cmpsb xlat adc sarb mov lcall iret out dec (bad) dec cs mov jp mov add add push loopne add xor arpl mov xor int pushf jge notl inc in mov jmp jge shlb std pop dec aad fldt xor ja push xchg notl je pop dec push sti inc dec xchg pop lods outsl jmp xor sub pop ror mov add add jno pop inc subl mov imul mov cld mov (bad) pop insb inc outsl jno loopne out pushf (bad) or sbb cli cmpsb mov mov sub sbb dec aad sbb dec test cld jle jns aad (bad) add rcrb popa roll jle adc jg in pop push inc enter push cmp xor sahf dec in sub sbb daa shrl ds mov sahf jge mov xlat adc dec fisub imul adc aaa repnz adc dec shrl iret mov repz push stos jb nop pop adc or imul pop aas sub pop mov xchg lahf iret movsl lahf test lret pop inc in xchg pop loope sbb lret and jns mov xor lret adc inc (bad) adc push jp add cmp mov sub jg shlb cmpsl and add cmp xchg icebp xchg dec cmp sarb sahf push inc xchg adc cmpsb aam jmp push push enter pop pop jo ja or fsubr outsb sbb jl mov fs movsl push push rcrb out inc dec inc shlb xor in and xchg incb add jmp cltd jle out sbb xor or nop shr rolb sbb mov loop les mov dec push xchg dec (bad) (bad) push jnp daa sti out std fldt jg mov xchg dec ljmp or jno push inc fstpt add cmp pop jno iret adc fisttp mov dec jbe sbb out jl fs cld outsb scas add sub int3 cmp mov dec push inc stos and mov dec pop in cmp sub stos push adc lds mov cmp xor xchg loope or jo mov add push mov xlat mov inc call and xchg cmpsl sub cmpsl and sub pop dec aaa std rcll jnp pop cmc push and adc xor std in mov dec notb aas cwtl mov aas notb repz out add add jb arpl xchg jl sub jo pusha pop in negl rorb repz dec shrl lock out push insl (bad) xchg (bad) out mull xor jnp mov fiaddl out xor popf or jne sbb repz adc mov lahf mov add dec adc popl or inc cmp mov cld pop out cmp xchg icebp mov xchg out adc mov repnz (bad) cmc js iret xchg das icebp xchg mov sub sbb repnz and pop orl movsb gs bound inc jns mov pop and jbe push icebp lods sub jmp add loopne push pop sbb mov dec jo xlat mov push das mov test loope arpl ficomp (bad) (bad) fucom mov icebp mov into mov jnp mov mov inc loop decl adc push rol repnz push imul xlat jae lahf aam lret pop cmp lds daa sbb inc lds sub xchg in adc jns or jle xchg sub dec dec push xchg xchg push cmp adc pop repnz lock and sahf clc push nop/reserved sub push lahf xor test std xor lods adc movsl addr16 and or or add add out jmp mov mov int3 mov add push pop pop push cltd icebp leave push xchg mov pop into inc or cmp insl push xor sbb int3 xlat dec std xor inc dec enter mov or fstpt icebp push mov fcomps inc leave insb dec adc jns (bad) test pop mov push sbb or in and arpl mov je sbb lret jg jle cwtl cmp stos mov mov mov xor ret js xor js fldl2t mov nop xchg mov in in push (bad) out mov (bad) fimul and add add inc push mov (bad) push imul fimul jge pop dec loopne pop out push jns bound pop lcall dec pop gs push scas dec mov in or push xor aam insb pusha lcall mov dec call or add movsl roll lods xchg jecxz scas cmp fisttpl into adc mov (bad) je aas or mov popf pusha in movsb shlb cmp adc xor mov outsl mov daa pop and inc mov (bad) icebp and imul mov jns add add mov iret sub jl xchg les mov xlat cld ds sub scas (bad) pushf dec ficomp addr16 out jbe lock pop xlat adc lock icebp jae and push sub xor lret mov pop test adc call add repnz cmpb add add lret inc mov aas pop clc jae or loopne rol lods pop xor stos daa xchg enter int and xor cmp sub adc mov xlat jnp lcall hlt repnz or sub ljmp fmull leave nop xor or (bad) lods sbb out push mov or (bad) push or lds lahf lcall fprem1 out or push add test xchg cld ja test push dec xchg jno into adc cmc mov ret and dec loopne aaa popf xchg pushf shll daa push mov test jmp jp sbb (bad) in push scas jb inc jl mov (bad) pop xchg data16 xchg add sbb in mov mov icebp jnp cmc stos addb fdivrl loop sbb jbe pushf jg jmp shll push jns or push sub sahf inc mov add outsb mov (bad) xchg enter stos js in int3 push cmp fcmovnu test lea out dec adc insl fidiv xchg jmp jge xchg jle push mov inc add inc (bad) mov jmp idivb pop mov or xor sarb fs test aam add nop jp sbb mov jmp div dec scas cmpsl xchg add adc sbb scas ret xor xor dec adc xor xor aaa xor adc mov sub cs push sub (bad) pop mov out jle cmp push adc push inc add xchg push xor (bad) xlat mov mov mov cmc inc (bad) (bad) scas pop cmp mov mov xchg mov push imul jmp sub (bad) in add arpl cmp mov xor int jp leave (bad) adc ret nop mov xchg inc out jbe add add add and aam dec or jbe mov sbb shlb adc sub dec push add pop ljmp iret push outsl sub jns scas mov test cmpsl stos pop jge add loopne jp out sub push js or ss nop inc push adc xlat (bad) fs cmp js push xchg daa ret daa add add out (bad) stos fdivrp mov out pushl scas dec xchg (bad) mov aam xchg sahf js and fs sbb sub mul push dec jnp dec andb nop (bad) jne pop out lea pop xorl nop xchg dec jo pop jp mov das xor push fidivl aam add daa jne mov pushf (bad) fistp aas jecxz mov fstpt pop ja shlb bound push fnstcw jns mov sub jbe mov inc and jo fistpl dec insb ret jbe mov pusha inc sub stos mov add dec mov add mov jle mov push xlat data16 fisub sti pop fimul mov and lds insb scas push out or mov (bad) sahf bswap cvttps2pi jmp pop ja movsl cmp pop (bad) loope jge adc fsubrl inc ja (bad) fidiv (bad) push add popf std ror inc or fldl xchg xor mov fild or and jge es dec add std adc xor jo das lock bound and push test mov mov pop hlt or sahf std js inc mov adc rorl lcall sbb push addl add addl outsl fidivl mov adc fidivl pop mov inc sahf jo aaa popf es cmp push xor mov pop stos lods mov or loope lock dec fnstenv subl lret cmc xchg ljmp (bad) das sbb lea add inc pusha repnz out lahf in cmp fwait enter cld add cmp (bad) lods inc out xor lea jmp fist mov ja inc rorb pop rclb in xor dec insb loope aam (bad) inc push test lock mov pop sbb or cmp mov imul dec dec mov xchg push cmpsb jbe pop mov mov (bad) (bad) xor nop push (bad) outsb lds pop inc popf imul adc fnop and cmp jge mov xor jmp jge or mov fwait les and pop mov xchg mov test cs into dec repz call int (bad) xor scas inc arpl lods push enter imul push mov sahf nop adc mov pop add clc pop xchg lds stc or fimull repz imul jnp or adc cli rorl mov ss mov add add data16 or ret cs daa pushf mov and xchg and cmp bnd xchg mov stos mov ret addr16 add pusha or mov push mov std rolb xchg push shrb test mov add xlat and jbe jl fldcw shl sbb or push into test pop mov mov fsubs outsb (bad) (bad) xchg rol into push sarb loopne inc mov jno int cli push shll mov mov fistl in test (bad) fsubs add add pop and neg mov fwait xchg xlat ret jno mov fwait adc out (bad) sbb push pop stos mov movsb insb lock fst xor dec xchg push dec xor mov data16 mov jmp cmp mov sub mov rcl jb mov clc les sbb fiadd dec rcr push adcb sbb stc jmp lods and cmpsl lret movsl ljmp inc shrl aas jmp adc loopne int inc or add or stos loop push movsl in aas jb mov in sbb negb sub roll add in mov lcall xchg sysret xchg stc inc in mov out arpl pop lret js dec push pusha mov popa xchg jge ret in ja fsubr push mov push std (bad) leave mov cmp jl imul mov push mov push sbb fdivs loopne xchg lea add leave sahf popf pushl aas pop xor call adc (bad) jae rorl pop pop nop enter push outsl mov mov ret sbb fwait arpl xchg mov mov lret xor push inc sbb xor sub xor cltd push sbb mov and cmp add inc in mov mov jmp sbb dec lahf mov push cmc xlat loop cmp jmp jge shll push push out xor test mov lods cmp mov sti pop jns js mov jo jne nop repnz cmp mov lahf call fidivrl mov shrl je (bad) inc cmpb ljmp popa adc xchg lea pop lock or xor pop (bad) repz sti jg mov sub inc inc sti stos sub mov daa pop sub add fsts pop testl rclb cmp ret aaa aad push adc rolb daa push jns inc jno pop daa hlt or mov (bad) adc mov ds cmpsb rep dec dec ljmp inc dec mov fistl xlat fwait jno aas int3 inc jbe call xor xor and mov (bad) in shlb pop je jb cltd int3 xor rcrb insl es idivl xor lea jne jns mov das imul testl movsl outsl push cs stos mov (bad) popa push sbbl inc push int3 sbb int3 inc cmp mov add (bad) pop xchg aaa dec mov sbb push sub lock in into inc inc push jp xchg aam je xlat mov lods dec xchg or xchg adc pop dec sub sbb pop push jno dec pop clc mov xchg outsb mov les test mov shrb je mov pusha test jl pop xchg test call cmp js repnz add fisubr imul jbe out and jge dec pop insl xchg adc xor jne mov test ficoml xchg outsl cmp cld push ret sahf stos lcall rclb mov sbb imul add add add add sub fistpll pushf or push pop in aas cs add cs push pop dec adc dec fisttpl mov fimull dec sub mov mov xor xchg add cmp in jg shrl push or inc sbb fsub sahf sub popa fildl inc push mov mov xchg jbe cmpsb push jnp (bad) movsl push mov or mov insb clc test in popa pop pop test cmp fs nop xor or pop sub aaa stc outsl rcrb mov movsl mov sub movsb push sbb push mov push xchg sub hlt add add add add out imul rolb and out dec and scas cltd dec mov push loopne mov (bad) into negb pop fwait xchg sub dec lds xchg loop pop add into or call imul cs mov inc push push lods in cmp outsb ret push sbb add ret fsub xchg je push or gs inc js nop and xlat sbb jle push int3 std adc adc fwait dec lret in daa loope dec lea sub into xlat lret shll push mov lea pop lret (bad) jl imulb xchg jg adc hlt inc sub (bad) lret loop aam mov add cmp out sbb icebp push or or mov dec stos rcr movzwl xor loop,pt sbbl cmp inc loope sub dec lock out imul addl (bad) mov imul fildll std xchg icebp (bad) loopne cmpsl cmp in out cwtl repz add add mov adc js imul sbb adc mov pop roll inc negb adc lret je popl or cmpsb imul data16 (bad) sbb add jnp test inc fs cwtl nop add lock bsf add xor inc jo out xchg and pop or dec inc das (bad) pop in sub xor xor inc dec and xchg shr mov subb and mov dec dec lods call cltd mov sub push jl roll cmp push mov xchg cmp data16 add add add mov cwtl js add sbb je mov adc add mov gs mov aas jp cmp dec enter adc jno dec iret mov (bad) into fwait pop inc ret aad jl xor xchg bound int add sub lds mov loopne int sti loop pop sti push add sub jl adc out xchg dec enter or inc bound pushl sti call jg xlat addr16 lods mov sub (bad) and sbb int pop jo mov push pop fmul stc lahf leave or repnz lcall stos push xlat cmp dec and push ja das or ss ss std adc movsb push and in ja sbb add fdivs push inc jecxz xchg mov (bad) in (bad) sub jo je fisubl cmp pop aam js fdiv push aad lret scas outsl or mov (bad) ficompl cmp je imul lods test cmp push leave arpl dec sub sub in add push orb mov pusha jb push mov loopne xor clc fcomps lea mov jb push mov int3 je,pt cld mov aas lock les lods add add sbb repnz lea sbb and dec rol and mov pop lock sbb push mov adc and shr sub xchg loope push fisttpl or push cld push push cmp out (bad) pop rorl (bad) xor push ret fwait popaw cld popa cmp jle jb lods stc mov mov sub insb fs pop push sub inc pop sbb push jmp mov aas sub inc inc fwait cmpsb inc or ja add cltd dec mov ret iret (bad) outsl sti push pop mov dec dec jge ja mov bts call leave pop inc jo mov inc aam mov mov mov push (bad) mov adc inc inc lds jmp cmp loope shrd repz push (bad) cmp fwait aam xor push in lahf mov mov cmp push mov lds add sub and ret sti loope aad and fcom lahf vpackuswb shr aam mov ret popa fs mov in xor jne pop divb bound pop add jne sbbb imul sar and xor mov call push (bad) icebp mov sbb nop inc (bad) shl sbb sbb jmp mov jg aad mov xor mov xchg pop lods std sti jl popa cli xor mov cmp cmp xor lods negb dec imul mov int3 pop inc mov ds lret in add add adc xchg (bad) movsl cmc out mov cwtl (bad) xor push jg nop xor mov mov and or aad mov fildl cwtl test test cmpsl pop push fisttpll jnp imul cwtl mov pop out sub ret add add cmp out xor xor xor addr16 rcr clc push sti inc in jp jg fistpll mov insb rcr xchg cmc std test mov nop mov stc ljmp inc pop fimull mov ljmp in adc call out (bad) fnsave jecxz pushf push add sub mov fs test lock xor sbb (bad) clc inc mov and fidiv js mov lods fldenv pop xchg push pusha push loope push scas cwtl pop and jno jmp or lret iret dec fstpt rcrb insl and jo jne (bad) mov das xchg and aad (bad) dec jo add add clc ja clc and sbb pop bound addr16 aas dec ljmp shrb cmc int push mov pop jo (bad) int sbb aam mov lods cmp js xchg jg adc adc das and xor mov ret xchg inc outsb add repz cmp inc and push enter xor cmp jno fdivl pop cmp cmp (bad) fwait cld outsb dec dec sbb xchg divb pop mov fisubl decl pusha xlat xchg xchg ss lahf ljmp mov pop fdivrs sbb add add test mov mov das lds decl add pop inc in dec mov adc and inc int ret mov fdivrs dec ret add shrl lods mov loopne loope push jae adc pushl cmp push mov insb sbb add insl fldl sub push add add jge mov out pop cmp ljmp es (bad) out iret jge test jne repz add ja scas cmpl arpl inc xchg xchg dec nop sub mov jecxz std inc in jp hlt add in inc loop fiadd add add jl jge lock aad push add xchg loopne sub test popf stos rorb (bad) mov ljmp (bad) mov and mov loop xchg fstpl push test repnz pop arpl test stos push push into fwait inc cmp out jne test pcmpeqb add dec fistp cmp cld pop jns mov cmp push dec xchg in negl mov outsl mov inc jae sub pop and sub push cmpsb sahf popa bnd sbb loopne loopne clc inc test mov sbb xchg adc cld insl adc xchg pop inc jo add add mov fidivl mov jae orl xchg sub push jecxz in into and pop or sbb (bad) iret pop out mov xor lods lcall dec adc aaa cli andb pop loope std ret xchg das in inc cs loopne cli sub sub add mov jns stc add sub bound push fadds add out subl mov mov sbb es neg xor je outsb mov divl sub fsubrl mov and push mov push loopne mov mov sarl sbb mov adc outsb and cmp pop shrl add (bad) mov imul in adc leave dec cmp (bad) adc cmp lret (bad) rorl ficompl adc pop mov xlat pop insb aaa repz jb (bad) cmpsb mov add es mov (bad) (bad) int pop cs and push (bad) ss or add push arpl ds jae dec mov or fstp in fstenv sub push popa mov rcrb jge and ss sti (bad) icebp push jl pop js mov add in sbb rcll jp subl in sbb mov mov sbb aam repz in test add add out mov mov bound or int test je (bad) adc aas pop sbb pop scas inc in sbb pusha inc cltd pop or push loopne popa cmp or jecxz cmpsb mov xor (bad) (bad) pop sub out in into push mov fbld stc mov outsl xchg outsb mov outsl add add lcall mov or mov fildl decl (bad) adc pop cmp cmp enter inc ja add push flds push push repz sub and mov je jg or xor or push popf add pushf outsb loopne popf mov xlat cltd movsl jnp insl pusha das aad and (bad) xor mov adc push adc xchg adc loope pop mov xchg pushf or lea rcrb daa loopne iret mov mov push jl (bad) cmc frstor fwait sub repz movb add std pop pushf fdivs inc pop pop mov sbb js mov or push into add mov out clc mov test pop sub out cmp jmp sub push inc adc mov inc xchg jne mov mov dec ljmp lahf test scas (bad) or add add push in jae sarl dec pop cli (bad) dec les std dec ret hlt aad outsl (bad) out add pop xchg add and stc push inc movsl loope jns cmp sti es divl ss (bad) jne aam lahf push cmp jge inc stc ljmp mov mov pop lahf jnp insl addb add stc dec aas xor daa inc mov (bad) or dec cmpsl fwait mov sub cmp ret leave mov ret xor pop pushf (bad) or mov xchg movsb xor xor stc xchg mov xchg pop rcl gs jbe cld fstps xlat sub jecxz mov aam repz sub lock add pushl fwait js add dec push (bad) out sbb dec add or mov mov mov xchg push pop mov fcoms cmpsl inc jmp (bad) or cmp jg out dec push jp aam mov jmp mov dec push lods and pop outsl pop mov add add push negb int loopne test xchg mov fnop or fmul call jecxz (bad) cltd sub in xchg hlt dec mov ss sub push and ror dec mov fbld dec jb pop stos repz jnp sti push aad dec dec xchg popl add shrl rcrl icebp les sti (bad) gs and test add (bad) ret pop push cmp movsl sbb mov mov jmp repz push rorb pop jg and je ds add and nop push hlt in in int3 sub sub outsl (bad) mov aad int push gs push pop sub cmp mov pushf and xchg sub mov cs add pop int3 in xchg cltd sbb xchg mov xlat xchg jecxz enter rcrb hlt push es dec dec sub add lods cmpsb mov int3 (bad) xchg loop leave movsb inc pop sbb clc add add lods dec imulb mov xchg or mov xor cs adc ds jge or out inc aas loopne lret sub sbb xor std xchg sahf dec inc repz dec dec sti inc add and sub pop test pusha xchg push stos push scas push sarb mov jno insl fistpl out addl xor insl xor popf in out inc or cmpsb mov dec cltd pop mov add ss popf sbb dec loop rol sub pop pushl orb hlt jle,pn nop push push faddp pop add clc data16 jp pop jle cwtl sub (bad) push addr16 dec xchg ds fsubs sahf push xor mov add mov shrl (bad) and or mov fiaddl push sub jno les lahf dec je and cmp add jecxz push cmpsb adc cs es std push pop popa (bad) lret mov cmpsb mov cmp mov lds lods sub les ror add gs das mov inc lods cmc jb (bad) cld push xchg mov sbb mov adc inc xchg in int mov pop popf fisubrl jecxz nop pop or xchg and repz push int3 cmp fcmovu push aad popa sub (bad) fistl lock adc clc out les cli or push add xor mov xchg addl sbb cwtl dec or cmpl dec imul das dec mov into mov cwtl jnp inc sub mov sbb sbb outsl ljmp lock mov cmp mov (bad) fstps add add mov push xor sti (bad) aam push sub cmp jns fld imul andl (bad) xchg dec cmp pop fs pop outsl pop arpl and movswl mov jmp (bad) movsb jb repnz je cmp dec sti rorb in pop dec lds add aas push cltd add test sbbb mov rolb gs cmpsl ljmp stos xor mov movsb add push popa insb mov mov add fs js dec adc dec cmpsb xchg lods xchg mov pushf jb repnz in ret lods insl pusha mov sub ficompl out int xchg (bad) ja mov scas sbb jl dec nop lret dec rcrl push stos std in pop push pop lods sub dec sbb nop and sub sti or stc ret mov cmp data16 pop repz jp xor or stos insb leave arpl (bad) add cmp jecxz cs pop add add je iret into cmp cmp fdivl push lods sub jmp rcll mov es pop mov sahf aaa pop xchg and xchg and mov lahf xorl jg jecxz xchg sub sahf packsswb ret loop es enter jecxz loopne push add inc cmp sbb pop out movsl inc int bound pop mov fdivl ficompl cmp push mov sub js daa aam out and lods ja jns fldenv arpl (bad) (bad) mov rcrl inc push sbb hlt aad adc xor es rcr sti mov aaa add cmpsb add add fimul aas ror mov shrl xchg dec inc sahf ljmp shlb loopne popf ljmp movsb xchg stos mov mov jl fdivs out loope daa mov (bad) ja adc sti stc fistpl adc xlat ret fld add pop (bad) dec inc mov jge xor add mov adc ss movsb cmpsb data16 pop rclb push scas jle mov out mov xlat iret sub clc sub sub rorl loope leave subb mov inc mov (bad) mov jp out shrb dec push repz inc mov add add mov fsubrl sbb cmovno insl mov stos inc pop popf mov and inc in insl cs scas leave je sbb cmp mov adc jecxz push xchg paddq or std sti xor jae in mov aas cltd outsb das nop in insl push inc (bad) cli cmp (bad) mov mov pop sub je add adc insl test xchg xor test xor push subb les cs sub iret inc sarb mov gs test pop fs ljmp cwtl cmp dec insb or ficoml add add dec dec call sti daa push adc sub push stos fsubl push mov fdivrl add xor sbb and inc rclb jg cmp nop jmp idiv inc cwtl or mov popa jnp out negb inc xchg insl iret add add inc sbb mov fcomp and xor imul push sti mov fsubrs das (bad) sub inc dec cwtl movsb fwait rcrb mov and jae mov jmp stos add mov (bad) mov add jns xchg out test aas sbb dec adc or pop inc mov mov in loopne out sbb ds adc ljmp pop rcrb lret outsb iret repz jecxz out cli mov iret cli fidivrl stc dec pop jnp arpl push in lret rclb jp icebp mulb add lret imul push mov in out enter testb push xor or dec out mov mov iret in stos cltd or xor (bad) cmp push pop data16 adc test cmp jmp outsl pop mov adc push std cmp pop jl push pop into push jbe retw jae fldl add js outsl inc xchg and cmp fisubrl and jno or test (bad) or xchg mov mov repnz data16 daa jecxz iret adc or lds lods scas (bad) ds fsubr pusha sub pop mov dec mov test push sub push lds adc imul add imul lds mov popa out push mov mov mov mov outsb jo addr16 adc pop cmp jl scas xchg mov mov out fwait icebp and pop or mov xchg dec cmc sub nop mov (bad) add pop pop inc stos and adc fs adc mov push std jmp sbb push xor inc fbstp lds ljmp (bad) or inc or mov cmpl iret repnz nop inc pop icebp push inc xchg jl sbb xchg (bad) adc adc rol add add ss lcall xchg xorb sbb test mov ret and imull and rolb (bad) and js xor jno imul daa ss xchg mov inc pushf into sbb jecxz pop sub cmpsb idivl (bad) iret inc lds stos sub add jae adc dec (bad) mov mov (bad) mov mov lret or xchg out dec push xor mov das or adc stos gs into mov or insl mov iret imul push test jnp add dec sbb ds lahf hlt mov mov cmp push dec pushf in xchg test (bad) fistp mov adc daa pop mov call (bad) cmp mov jns mov xchg addr16 cmpsl or add xorl inc pushf jmp jmp movsl rcl push out int3 sbb push fcoml pusha mov aas inc les testl add inc or lds stos mov icebp mov add xor mov sbb sub int add enter outsb inc (bad) mov repz mov adcb test test leave jmp dec sub cmp add call shlb mov std pop fs adc xchg in out testb inc jo test inc and jge mov lods repnz mov fimul aas and mov arpl jno movsb in jle pop mov test inc mov add xor add add cmp sub dec into ficomp leave sub inc stos jp pop iret leave or xchg cmp mov mov je subl orl imulb or cltd (bad) addr16 hlt cwtl loopne imul jp lcall push xchg dec lret ror sub add add jnp aas push pop xor jo add lods jp ss inc or or pop ss fadds loopne popf (bad) dec outsb fstl fwait sub xor xchg pop int mov xchg sti push scas mov sbb adcl mov add ljmp xlat and cmp add fs mov mov push pop in (bad) jno mov xchg cld fldcw push mov insl repnz cmpsl jno popa imul clc mov nop mov ret cwtl mov rcrb scas jo xor repz dec and ljmp and lahf push hlt into (bad) scas std xchg mov add xchg enter les mov enter adc jle cmp sub sbb sub insl add sti jae xchg jmp xchg sbb mov pushf adc iret mov jge inc mov cmpsl sub lods dec sbb sbb add add mov shr mov mov in sahf sub mov push pop int3 pop cmp mov (bad) xchg mov shll and mov ss sbb dec sti ret lahf cmp les inc jmp repz lods and xchg movsb pop loopne ret incl add add loope das scas xor xchg push nop sti addr16 gs push int out sahf inc jb addr16 inc aaa lret aad and jbe push pushf (bad) fidivl jle sub mov push sub call jbe mov test mov cmp cltd pushf and add fstl mov sub js adc fnstcw xchg add and leave mov in in push pop cli ja cltd rorb add stos movq scas jp into clc pop xor inc out dec push into insl push out (bad) push add shr mov das es sbb ss dec leave xchg xlat (bad) fldl lcall cmp (bad) sbb xchg (bad) jl adc scas lcall jp mov cmc shll std les pusha test jge xor pop (bad) lds (bad) mov repz std xchg mov sbb out in out lds movsl lcall sbb add add and dec fldcw mov dec mov pop test mov dec cwtl mov imul insb mov adc pusha inc add push xorl gs ror mov pop icebp cli fwait jb vmwrite sbb mov sub xor push test ja bound pop add add imul push adc jl mov jp js or fldcw jmp push ss or and lods fsubl pop jg aaa or or aad sbb or and rclb das xchg scas enter loopne cwtl pop pop movsb and scas pop mov add add (bad) lock (bad) dec fistl or xor repnz pop mov fdiv sub cmpsb (bad) test int3 jmp pop and adc mov ljmp add add ficomp (bad) clc and and jecxz popf popa add test push dec pop add pop dec fistpl jae cli imul (bad) mull fwait and (bad) xchg fdivl sbb js mov adc rcr mov sub mov xor test mov bound test mov mov addr16 daa popa ljmp dec jmp add add test mov cmc fcompl test lret mov call pusha inc pop fisubl ss add jp and inc test out mov cmpsb xor loop pusha stc ret pop push jae sahf out mov mov push inc je jecxz and and test sub mov jp pop dec out fdivs (bad) (bad) fwait push das rclb stos ret icebp je add mov fisub xchg sbb imul mov pop cmp fcomp xchg imul add test pop jbe (bad) xchg fbld dec inc stos add inc clc add cmc mov outsb inc lahf cmp xor je adc dec fmull fisttp mov jmp inc mov mov add pop cmp and dec jg ds in jge repnz fwait add lret push faddl scas push bound fisubl xchg jo add or mov mov push cmpsb push cmp inc add jns outsl test cli data16 jle (bad) xor in cmp cs (bad) in fcomps fldl push popf call mov push sbb inc ret nop push mov test call inc sbb movsl jl and out adc int push or jmp mov xchg mov pop lcall lods cmp (bad) mov and ja fisttpll inc iret mov sbb lahf or mov jb inc push ds xor das push lret or (bad) add pop into inc jns add xor lahf loope std pop daa clc mov int3 test adc bnd pop and test adc nop sti push pop insl fldpi in call pop pop shrl lods sbb sbbl add add arpl add inc pop (bad) adc push int3 int3 xchg mov sub es mov mov fbstp or int3 or popl push jg mov xchg mov or and sbb aaa test fwait or ss mov outsl sti mov push add mov dec sub fdivl pusha loope out and jg inc jne sbb je add inc pop mov jp and fadd insb cmp rorb shr push add xor sub or pop daa xor (bad) aam nop test test add test pop push daa sti insl push cs sbb lods inc stos add shlb cmpsl mov loop jge (bad) mov pop cltd adc dec sub (bad) dec cli push push fbld dec jns movsb jle lret cli mov jge push adc retw adc std cltd outsb dec hlt mov mov std add fcomi outsl xlat mov loop xchg lahf push mov bnd aas movl imul fsubrs iret push xchg packsswb pop movsb js jmp enter pop (bad) adc push jecxz aad push jb cmp inc stos add repnz sub pop cmp add into inc push test popf xchg push sbbl test insl jmp mov out jge push ret aaa xor mov push mov (bad) loopne jbe xchg insb sti out push push out jbe std (bad) inc jle inc mov jg hlt lret cmp and pushf add xchg pop jnp fucomp inc repnz add add daa enter and lods mov out jnp test push jmp xchg aas xchg inc scas shl pop lods (bad) sete sub cwtl call sub arpl jl enter rcrb xor fdivr out shlb cld xchg fprem1 and mov adc mov jle mov sub addr16 stos add int3 loope out add mov and in pop xchg xchg jbe and (bad) and bound xchg xchg in xchg mov fcomip jl cs scas repnz sub inc lcall mov les cmp int3 cmp add pop fiaddl rcrb in inc xchg outsb iret sti pop and or xor mov jo jns mov jo xchg insb cmp (bad) mov in (bad) push ds or dec mov sub dec lea test jae (bad) ja lret fs lds and add or arpl in dec outsl popf (bad) jnp push int jb cmpsl in or sub fnsave sub jg mov (bad) shrl shl stc add xchg lods in ljmp mov repz loopne or arpl mov scas jmp test sbb push mov test cmpsl js es adc mov pushf (bad) jb popl cs xchg rolb outsb pop and or cmpl (bad) add pop in in sub mov sbb mov pop lock dec pop mov push iret mov fidivr xor or add add add and fcmovnu sbb jno mov scas in popf sub out stc repz iret test fwait or xchg xor mov leave pop or and out in xorb mov mov iret and mov ja popf push out inc fwait adc add inc mov outsl roll sti bound dec out jne push (bad) adc dec inc adc xchg inc sub arpl adc ret test (bad) (bad) sub or pop stos (bad) (bad) xchg out cmp push imul (bad) jbe mov add out jb mov xor lods xchg add dec in fidivl movlps insb add (bad) shlb lea jnp mov xorb pop jp push lahf pop pop icebp addr16 ss ret lea clc insb mov xlat push dec and dec pusha xor je lods repz aam adc das imul enter mov loopne test mov inc jo leave push push outsb inc fisttpl push cmpsl adc scas xchg pop xor sbb nop out lret int3 lret outsl mov jg sub mov xor mov push jp inc in xchg popa lock ficom sbb mov cmp lods or sub roll aaa adc and add cwtl fildll cmp dec add je jne mov sbb (bad) in ljmp outsl xor (bad) cmp push out aaa iret call xor or idivb cmp cli mov jb rorb sub cs inc or sahf add add lods xor aaa (bad) mov divb and mov push push sub shrl sti push mov popa subb out mov outsl out (bad) (bad) sub out fcom push jno popa dec ficomp cmpsb xor movb jle call pop loopne ret xchg fnstcw movsl push jbe xchg (bad) jo adc inc sub (bad) sbb test mov outsb insl sbb dec pop sbb jge hlt xchg and xchg sbbb inc pop fisubl xchg pop mov test call pop rcll jl fnstcw test dec scas mov jnp add scas cs ljmp (bad) (bad) dec and mov ss aaa mov xor push push pop pop loopne push jb cwtl push cmp cld (bad) insb cmpl dec mov adc adc fdivp std push outsb pushf cltd lahf dec mov pop xlat push add add mov mov (bad) pop repnz sbb sub cwtl sub cmp repz adc rcrl ljmp imul mov int xor shrb out add inc (bad) xor mov add sbb les out outsl aam add mov mov rolb xlat (bad) das fadd inc or inc xlat enter test xor jl clc jo jle sub pop inc xchg es xchg lea stos mov in cld jnp test adc cmpsl out pop add dec mov shrl (bad) inc jge test mov pusha sbb ret cmpsb sar add add add add sub sub mov fsqrt fs ret and inc outsl sbb jp loop or pusha xor loope push push xchg xchg in psubb jo cmp fistpll xchg cmp push mov push dec lahf jge push cmpsb fdivs loopne js lods mov ljmp out fcmovb sub loope push jae dec daa xchg jmp cld ljmp push cmp xchg in mov mov adc or xchg sub and pop adc icebp pop mov lock in int3 lock in loop jae add enter push mov add add aad adc call cmpl (bad) dec xor adc add es mov in add mov dec push inc add dec nop insb popa or pop mov insl add mov outsl xor orl cmp jmp adc cmp imul mov push jp arpl xor in (bad) lods add push call push jg fildl test mov sbbl and push mov jl int3 lahf hlt pusha sbb rol int3 repnz push mov push cld pop cmp aad fsubs inc mov (bad) dec push adc xor cmp subl adc mov mov in lds (bad) out xor inc pop xchg pop loop adc lret cmp cmpsl fs fdivrs pop push mov (bad) adc mov ds adc test sub test pop cmc pop and enter add push mov popa cmp dec (bad) mov pop loope sbb jbe (bad) out or movsl dec sbb pop cwtl cmp jge fmull test push or subl repnz (bad) out inc int3 lahf pop in sbb or xlat jo sub or add inc fidivrl les xchg negb mov ljmp xlat xchg test or jp outsl shl pop orl pusha xchg cmpsl and clc aaa inc stos dec cmc loope and test js outsb inc (bad) jo sub lcall cmpsb lret push pop pusha inc push add add add addr16 pop (bad) loopne add movl mov sbb cs (bad) xchg mov push daa movsb lods mov jecxz mov inc jl or push cwtl cld mov mov add cltd push jmp cmp enter js sbb xchg sub sub add add negl sub sarb fidivrl dec and sub push mov cmp mov mov fldl sbb mov inc or addr16 mov add lret mov xchg iret fist pop and mov pop ja xchg add or add add and dec loop push mov loope mov mov push sti push clc je scas jmp inc iret and (bad) (bad) sub das pop lds mov or sti movsb mov scas cmp jb pop mov xchg lahf fwait inc xlat cmp add inc xchg aas (bad) pop shl xor pop gs std pop sub add idivl mov add cmp jmp repz xlat lods jnp xchg ss insl js test lahf (bad) jg ljmp call sbb addr16 and leave xor out xchg cmc mulb mov sbb dec sub cmp mov add xor jb int pop dec mov mov bound xor xchg inc fwait cmp data16 mov enter xchg popa fcmovnb mov mov fisubrl or mov in out inc mov and out nop mov sub fs mov push sbb sbb dec fisttpl sbb mov sahf jb fwait xchg out mov sbb pop dec sbb (bad) mov mov mov (bad) scas loop inc xor pop loopne adc pusha sbb inc int3 mov lods in fs add insb sar fisttpl pop push jno sub jb mov xor add (bad) push outsb arpl popf lret in add add sbb pop shrd loope int3 inc push mov out pop pushf scas add rol add fsubl loop sbb jle mov pop ret mov cmp inc dec push ljmp jl mov cmc ficom xchg xchg xchg inc and into mov sbb addr16 arpl add aaa adcl test addr16 hlt pop push les jl add push lock mov adc add js jmp (bad) pushf dec mov test es adc int mov mov gs cmp mov roll adc add add movsl lods ret cmp fsubl es fsubrs adc or jmp pop rclb fwait jno mov mov inc xchg jecxz mov sbbl xchg cmp jecxz fldenv stos stos push mov pop popf jmp adc pop pop sbb add lods xchg stos push rcrl sarl pop cltd mov inc push xchg push sbb aaa icebp inc xor test pop sub cld xchg xor mov out fdivl nop cltd (bad) cltd das jge add xchg ret stos cmp xchg mov xchg mov ficom (bad) cld imul in in mov pop pop sub cmpsb repnz and sbb mov dec cmpsb pop inc or push (bad) adc push inc adc (bad) and add in pushf xchg js aam stos sbb push jle or ds fisubl in dec and lock fcmovnu jle jp mov inc mov mov cmp lea addr16 je add jne sub daa std xchg cmp add in in fcoms ficom cmc aad in mov stc pop ret jo mov adc les or sub sbb jo sbb fwait mov (bad) jb jne add sahf js pop pop pop pop js inc jae push stos or and imul scas mov sub lret xor jge decl cmp push sub pop mov push xor lcall or pop push jl pop insb add jno,pt lret pop xchg scas xchg dec movsb mov xor decl mov or mov out and lds add mov cmpsb jle (bad) jbe jg ds out arpl sbb mov insb daa jmp (bad) cld mov out ljmp push mov loope stc and cmp mov cmpsb sub mov loop adc sbb mov dec roll notl jne push mov sbb or dec mov sub nop mov ja and stos imul idivb pop mov lods sub adc (bad) mov daa jp mov xor sbb xor les das pop xchg push popa xor mov push add push outsl mov mov rorl je ds adc add loop into add xchg dec jnp inc nop add and mov sti arpl mov and fisttpl js push cs xlat xlat add mov daa enter mov fwait test add add dec mov sbb xchg inc add out outsb and add dec mov gs or push sub das bound stos fisttpl push pop dec pop push add fwait int3 (bad) aaa outsb (bad) rolb jg movsl jo aas mov les add popf mov sub mov popf push clc jo mov sub movsb int3 fld add pop cltd jae jmp adc push stos test push inc or aam pop addr16 or int je lods mov ljmp inc xor clc (bad) mov in movsl lret cwtl add and xor shlb and (bad) repnz dec rcll sbb je add lahf pop mov in jnp jl ret mov mov sbbb or and mov inc fmull add xchg sbb or add das int3 repz popa add pop sti push mov fisttp xchg pop cmp inc cmovbe add outsl iret adcb mov aad (bad) fnstsw int adc sub jg cmc sbb push aam int and (bad) mov sub pop sub test add iret jge push jno std jnp inc xchg xchg jae jnp jle and addr16 dec or negl mov xor mov push inc outsb icebp addr16 (bad) jnp scas inc xor imul and popf loop dec or jecxz (bad) cmpsb push add mov mov (bad) jb sub jns or push jge or push popa inc lods lret dec inc sbb stos push ret xor adc stos xchg jmp mov stos ss dec mov lahf inc call imul mov add sub push (bad) movsl jge imul add test cmpsl jnp imul dec shrb xlat cmpsl jno mov cmpsl mov dec jae xchg ret push xor out loopne dec add out ljmp and les inc push xor mov ret loope and adc into ljmp icebp gs clc jb test cwtl cld lods adc fcoms lock jge inc loop mov sub mov (bad) jg inc test cmpb mov dec jnp adc fcompl dec or fwait adc (bad) nop xlat (bad) iret push cli popa jbe or mov pop dec inc sub ds sub lret sub add mov insl imul outsl fldcw mov cs movsb add cmp shlb nop loopne int3 and cmp add jb mov arpl jo inc jo jmp xchg or imul rorl lahf mov pop insb cmc xchg ds add pop fs adc add mov lahf into sbb lods clc inc imul imul push inc and inc ljmp push xchg push pop loope ret push cmp and pop sub test sbb aaa push add (bad) fimul (bad) out out cmp dec or (bad) inc dec popa bound jmp mov inc cltd dec pop bound loopne mov mov cmp out mov inc adc aas pop mov jle jbe and into (bad) jne mov inc aam lret int jecxz push xchg pop test sbb andl lods push push mov into ljmp aad pop frstor movsb sub sbb cmpsb add lret movb in add push ja insb das mov push and jne inc jno adc and dec sbb pop out jmp mov inc xor add leave xrelease or outsl dec or or push pop inc xor and jp lret jae mov adc or xor repz repz jb ret or inc jg cltd jl stos icebp and sti fs mov jmp lods xor loop adc out add add add add fcoml cltd pop enter sub jno mov fwait int push xchg cli (bad) unpcklps jno dec icebp divl test mov add push dec or ljmp (bad) jae data16 sbb lods gs xchg sub and (bad) xchg cmp popf cmp push mov pop insb js arpl popf (bad) lahf andb dec cmc in int3 cmp scas ficoml sbb jns jns mov adc jb scas in push add add mov insb xchg pop pop (bad) jl test xor push cltd lds add add cmc inc imul test jmp out popf add push adc sti mov aaa loopne test test cmp ss enter leave adcl rcl popf cmp mov pop ficompl xchg jnp imul mov scas xchg stc sbb and lods jns mov andl add jge insb stos sti adc or in jp fchs (bad) mov cmpsl arpl push int xor inc mov lock inc push or icebp repnz outsb cmp out xchg loopne add mov mov mov inc lea (bad) call out xor movsl rcrl mov in icebp test or lcall and xor (bad) push sub rcrl pop push in pop stc scas cmp xchg or sbb cmp ds mov ds dec faddl es aad ror dec pop mov cmp ds iret sbbl roll jns hlt fs adc lcall mov pop loope and insb inc jae pop (bad) inc xor pcmpgtw mov lds adc in jmp in addr16 jg sub add into and and mov add mov fdivrp jecxz or push test (bad) fs cmpsl js loop mov pusha push cmp and iret jg call dec ljmp insl xchg jbe iret cs into adc in mov pop mov je loope stos hlt movsl lea jl mov mov add sbb mov jae sub out mov (bad) push xorl cs in stos jae or bound jmp push mov ror lret add cmp add test std adc push outsb jl enter (bad) (bad) pop maskmovq divl into jge inc xchg rol (bad) or pop mov add add or xchg nop stos cmpsb pop ret loop les test popf pop loop iret xor cld (bad) mov cs jae sbb xorl push pop xor or test xchg loopne xchg mov cs loope lret mov and sbb jbe push mov add testl add lret (bad) sbb pop movzwl das mov cs popa push cmp sub ljmp lcall dec daa ljmp test gs inc and or sub pop cmp mov sub xchg ret xchg stos xchg das imul push adc xor add add sbb clc sbb (bad) or (bad) jb dec sub loop xchg and cmc hlt jo and pop negb ja lret rclb das cmp cmp imul add icebp and push js add jp shrb pop jecxz and data16 push dec add mov repz or mov adc jns mov fcoms ss sub pop sub dec int3 aas jmp sti std inc dec clc jbe mov aad cmpsb sbb js inc cmpsl int icebp idivb rcrl and mov pop insb add add pop bound jae enter pop fstps mov mov clc cmp jecxz les call adc dec outsb xor dec mov iret inc vmrun adc movsb ds mov push paddw or or sbb sarb adc xor faddl dec adc mov xor push fild mov test pop inc mov orl rcrl imul js cmp repz pop pop inc enter stc xchg mov gs and cmpsl fcompl cmp sahf aam movsb and mov add enter sahf test out hlt jnp movsb pop mov pop or pop aad arpl jno inc addr16 or movsb mov lahf lock and sub mov into pop popa xor loope sub inc mov lds lcall or jno rorb add js cmp mov dec or cmp xorl sub mov sbb out xor call jbe jmp mov mov dec sar xor sahf push lods mov insl mov (bad) das xchg jmp fucom inc dec js je cltd pop movsl test dec outsl mov add pop repz jp pusha pop int lahf clc and flds cwtl lret dec pop (bad) repz sbb xchg cmpsb rolb arpl push or les pop stos mov add push std cltd cli or enter out cmp fisub les add or js in ficom dec push out aaa or fldcw sbb lods stos push pop dec sti ja lcall or imul (bad) cmp outsl sti outsl add sbb test push out lds dec fs ss jle cmp lods in les push jmp add fldenv popa mov int3 mov loop rclb jnp mov das (bad) cmp cmp mov jb push loope,pn inc jp je fimull test ret cmc jmp jp cmp push sbb xchg fmuls mov and or repnz hlt jno outsb vpaddsw add inc mov mov loope negb pop add mov adcb addr16 push nop out daa ja mov aad push roll imul aaa xchg popa aam fildll orl lea push leave repz or lea jae inc jp aad dec repnz xchg dec fwait pop add add pop ss out xchg fnstsw sub push jle add xchg in sub sahf xor test pop mov jo adc rcrl stos mov jle and adc and pop pop fidivr sbb mov cmpsl ljmp add fidiv repnz daa inc cmp add cmp mov andl adc adc inc and mov icebp pop pop sbb pop fldenv cmpsb (bad) xlat int3 je stc xchg mov popl mov repz xchg fs push push mov mov add sbb or daa jmp test (bad) mov push enter sahf mov cld sub scas lods or data16 stos ret aad rorb add push mov pusha loopne popf lret ljmp inc xchg mov dec sub xor sub inc jmp loope fwait mov xchg addr16 and xchg or scas mov data16 in and in repz adc push adc imul jbe mov xchg das into fwait gs ret jl and out cmp cmc add or inc xlat jmp bound sbb (bad) xchg xlat add or test pop pop insb addr16 cmpl fcompl inc push stos jg mov daa iretw pop add pop (bad) mov dec xor pusha (bad) push nop jl pop mov sub aam repz sbb nop cld push pop mov or or xor cmp out das push mov faddl out cmp cmp and pop shlb sbb sbb jmp mov nop mov push sbb cmc jo push inc dec int and movsl clc les pop push push cwtl (bad) mov das ljmp jo in lods mov popa loop push jae out cmp ret call xchg cli add adc dec cmpsb popa (bad) jge sbb push mov jnp imul sbb bound mov mov cmc js jge sahf fnstcw and jmp iret jecxz test fs xchg push es mov int3 sbb (bad) js enter popf dec jno cmc mov sbb cwtl pop test jo mov jge pop insl imul es sbb daa imul cmpsl in icebp es cmc repz arpl mov ret frstor das xchg dec outsb (bad) cwtl imul xor inc or and lea mov test lods jb add add push mov dec jp mov cmp iret les mov dec cmp insb aam push cld sub aam ret sbb mov and mov mov insl lods xor mov pop fidiv dec push icebp adc pop sbb push iret stos shlb dec into xchg pop ret or xchg mov push or add add or push sbb mov and scas les imul mov test jbe and adc stos outsl shl fldenv and int sbb mull rcrl iret sti pop push sub cltd imulb nopl mov adc (bad) out or dec add mov idivb add xchg and roll sarb push outsb fcmovb and dec or and xchg pop clc mov gs pop sub fdiv aaa fmull push andl mov and push int f2xm1 rclb push leave aaa mov add and pusha pop pop adc fcomps lret pop jle push outsb das aas jb (bad) lret das xchg cmc bound pop xor repnz movsb lds std cmp mov sub in inc and and xchg adc scas fistp in or shlb cli insl mov out mov daa je push in and cmp lret xchg jae dec cmp cmp mov lcall lret cmp mov stos mov dec xchg jne aam loope xor (bad) (bad) (bad) cmp cmp and sub pop xchg and sub mov aaa add mov repnz dec add or stc int3 sahf inc aam sahf scas add cmpsb inc in push mov lods out xchg pop jp dec jb int3 leave cmpsl ss ds mov mov jb scas in sbb fst push loopne scas adc xchg and fisubl iret in lahf repnz stos out or mov hlt push lcall adc pop cs imul arpl and mov pop and fidiv dec (bad) stos push clc loopne js mov push xchg (bad) mov sub in nop icebp pop mov incb rol lea cli mov daa add add imul gs dec xor movsl pop push jmp fdivl mov fstpt xchg or sub mov sub (bad) adc arpl insb in xchg movsb roll inc inc std dec repnz and sbb cwtl gs test push imul xchg (bad) jne mov popa adc inc negb aas fdiv mov out mov adc movb clc pop gs in pusha mov pop pop jno nop pop push daa cs mov and fbstp mov xchg mov dec ss lea mov lret aas inc cli fldenv pop add movsl call out and aad jns cmpsb dec or mov mov jmp inc jae lea push xor repz push pop jb cmp push push jo dec stos jl and into sub push push fidivrl inc ljmp mov movsl std outsl adc (bad) lahf mov jl ret (bad) out pop mov add adc stos mov gs ret popf sbb imul fdivrl mov inc das push mov nop lds or lret sub or loop fstl jno add inc dec push xchg ss mov pop jnp in push add dec dec pushf inc jb inc dec (bad) out stos and and out sbb add gs negl shrl dec and pop adc fisubl ficom pop or inc stos mov sti fild cli in lahf dec loop leave mov fstl dec popf sbb inc lods mov (bad) lds xor repz add add loope sbb enter daa (bad) std dec test out cmp pop popf and mov mov mov mov mov push (bad) aam daa (bad) fmull inc insl cmp bound imul bound push lea imul mov pop inc sub push sti add add add icebp xor rcrb fs sub pushf sbb pop or push (bad) xor xchg es xor loope jae aad sahf mov hlt sbb lret ja pop sbb jmp pop cmp mov pop sub xchg jge shr or cmc lods push mov add and push mov or mov scas cmpsl push sbbl scas mov mov shrl fstpl xchg adc jns jne inc aaa js cmp into sbb add mov test adcl push mov adc push fsubp nop xchg jbe push mov les fdivrs push movsb inc push jae cld xchg test add (bad) in jl jmp (bad) mov stc inc xor ret pop (bad) ja inc or sub xor stos ret out mov in daa fwait add popa mov xchg or inc mov repz sub add add gs cli outsl inc (bad) in sar lods pushf scas jae ljmp aaa (bad) stc rorl rorb addr16 outsb jns jge into mov das push fs outsb push xor mov inc mov xchg data16 into mov (bad) repz inc sbb mov sub orl add gs gs or test addr16 jo push ret loop (bad) int mov pop sti ret test push insl pop test inc test pop cmp (bad) test xor or mov mov lods push lret stos push jb push mov out cmpsl mov dec repnz sub or mov add and fwait sub mov movsw mov jnp jbe test movsl paddd lods fisub je (bad) sbb into in setp add add sbb aad mov jb adc lock gs loopne fistpl or mov sbb fisubr lret jge imul xchg stos push lcall xor xchg icebp mov pusha add pop fistl fisubrl cltd shr push xchg adc cmp shll aaa mov cmc sbbw xlat inc push cmp push (bad) mov mov mov add add cmpl aad repnz and inc push lahf dec mov pop adc lret out pop cmp inc mov mov inc dec iretw (bad) in cli sub lret arpl lds push mov adc push inc dec sbb xchg pop enter leave and rcrb incl dec xchg and xchg orl xchg mov mov inc ss sbb sub jg sbb out push scas orb loopne or xor movsb flds data16 aam xchg push (bad) and aam and ja loopne cmp sahf push dec dec adc aaa inc adc sub push jnp xor mov scas (bad) xorl mov lea jle cltd fwait js or icebp xchg mov sbb sub js mov ficomp cltd lcall ss or lret out repz (bad) out jl add jae sub xor add jns or push cwtl cmp or and enter inc pop pop lock adc xor jle mov dec ret das jbe out test mov pop scas push sub int3 jne mov loopne and fldl pmaxub mov dec sti push ficoml mov fdivrs mov push into std adc xor or jns (bad) cmp cmp fcoml xchg dec inc jnp add xchg out (bad) jl ljmp js shr adc or pop mov mov (bad) and xchg je mov in stos out (bad) (bad) sti mov outsb dec jecxz xlat push cmpsl add fcompl and push jmp sti out add add and test call in add mov test xchg xor xor scas adc pop sti jl gs mov mov adc shll jg insl orb jge ret pop out pop jp push insb daa std pop sarl bound aaa nop out xor xor add jne popf sub pop pop in mov sub pop push jp pusha pop bswap sbb daa vpcmpgtd push std dec mov (bad) mov loop cld ss sbb jno or sbb push iret mov push push jmp xchg dec cmp mov jp pusha sbb adc pop and aaa and and add les sbb repnz in sub cmp dec pop enter js outsb mov pop xchg and dec sub dec cmp shll or fmul (bad) ret out jmp std inc jnp and sbb pop addr16 cli fldl clc aad xor add inc (bad) aam fwait int stc add push jmp or movsb and das add shll mov push adc inc cli mov jl sub jp js ret repz mov test insb cmp nop lods sbb mov mov (bad) add jne add outsb or je loop repz cwtl and (bad) out (bad) dec divl sti mov int3 aas push fsubl nop shlb int3 bound cmpsl inc sbb jmp rclb fs outsb sub push xchg nop sub pusha xchg divb xor fildll fidiv mov add add add sets fwait icebp xchg jecxz push mov jbe cwtl idivb mov pop xchg js cld sbb arpl les mov ret dec and in aas sbb xchg js outsl jge cwtl sub (bad) dec cmp in pop ljmp cmc jmp les push add sub notl loopne dec pop or sbb sbb jns push ror loopne imul pusha mov sarl dec xchg xchg jns push rcrb rorb popa pop jns push lods (bad) adc xor dec or and xlat std jns mov ret out xchg rorb (bad) xor mov es add sti cwtl mov cmp popa mov jl adc dec lcall fmuls adc cmp xchg add dec sbb sbb xchg insl sub pusha fstps adc imul inc cmc jmp test adc nop add rcr mov into out jp dec mov mov inc xchg test jge mov pop dec inc (bad) das outsb mov mulb sub daa js,pt aaa mov icebp das pop lods xchg das les stc pop enter pop sbb or adc sub (bad) cmp leave lret jge xchg sbb int lds add jecxz ror sbbb sahf add adc ret lcall mov jnp mov cmp adc mov (bad) in repz lcall push add sub pop pop lods stc push mov lret hlt imul mov in movsb cs add add jo loop dec repz cli (bad) add mov cmpl lods fisubl aas (bad) jo sub dec ljmp mov xchg push jmp pop push cmpl xor cltd jge cltd mov fistpl wbinvd outsb cli stc cmp xchg add add dec call mov and icebp scas push dec cmp ds jb int sbb jbe mov insl mov inc push or (bad) mov mov inc test enter or ret xchg jns ja mov lcall inc sbb cmpsb push adc popa jmp cmpsb fimull add add add iret (bad) fldenv cwtl xor push mov cli repz jno insb xor cmpl sub lods cltd mov fsubrl cmp jecxz pusha xchg dec mov jp sub jb sbb enter jns inc repz faddl lea outsl out sub mov sub sbb jns hlt push movsl sub loopne add add mov fiaddl mov fucomip scas jge or jl cmp sbb xorb sub adc iret inc sahf mov jg ficom jb insl repz aam xor lods mov or adc daa popa ljmp fs dec adc incl pop inc add add add mov dec xchg xor xchg in sbb mov movsl aad lret fdivs stos test adc ljmp push adc fucompp mov dec mov fist repz mov dec xor add stos mov sbb sub xor pop rolb add mov pop mov subl lock push and test bound jb mov mov inc dec sbb mov pop push call test adc cmp clc test leave or cli js es scas bound jno jge push adc add add int stos mov lret inc pop pop or pushf mov add dec mov mov (bad) mov scas pop push aas notl mov and sub inc sahf sbb fisubr or mul pop bound push dec les mov cmp lea push dec loope push and add adcl mov sub jnp,pn push ljmp adc xchg scas xchg inc sbb mov push pop jmp mov clc mov mov jge shr sbb int3 std aad sbb mov dec pop and dec lret stos ljmp xor popf dec test out rolb or (bad) xor xchg xor aad in icebp inc ss aaa sahf (bad) jg daa cmc push jns mov mov insl push es dec jmp mov in jae mov lret mov xor dec fs call add fs jbe loop mov mov std pop rorb mov gs call mov add negl dec push jns orl jnp pop movsb jge orl ss out mov sahf xchg jmp and pop jo pop inc ficomp cmp jae mov add test test mov ss mov mov mov loopne mov or gs rep cmpl or xchg popa mov shrl xor cmp jnp retw rep cmc or cmp mov xor xlat or ret mov cmp jg rclb sti jbe test pushf lea push in les repnz bound cmp test cli lea jecxz cmc loopne dec lret push inc nop pop stos lods pop jbe pop out lret add push ja mov push ljmp or pop (bad) out push jecxz jo add nop jbe mov push dec dec int3 mov adc fdiv std pop aaa iret add mov sub mov addl out xor pushf sub insb xchg cmc jle mov pop mov inc stc adc mov dec push jl das fisttp jbe lock enter cwtl xchg mov mov add add sbb fnstenv movsl scas xchg cmp faddp cli add or mov test lret sub pop aad daa outsl add hlt test mov inc cwtl dec xor int3 ds std imul or mov mov in jo jle stc lock cwtl sub cwtl or aaa and add adc xor push fstpt push imul push stos daa jnp inc js stos in fidivrl mov js sub add popa movsl adc pop je gs jmp pop aaa sub (bad) fnstsw and (bad) xor imul jb es push lcall addr16 movsl jecxz mov add add sti roll cltd adc loopne or iret xor (bad) or ja jns mov lock mov inc cmp (bad) mov sahf mov test cmc popa jg push mul mov sub adc clc mov xchg daa (bad) xchg add ret xor ret dec insb scas movsl out and add jmp or inc or dec mull jb xchg jmp jmp stos xchg add (bad) stos outsb adc push fwait lcall test (bad) (bad) mov rcll lcall mov (bad) fist cli inc push sbb add andb ret lahf aad das sbb jae cmp pusha in jmp and loopne cwtl into fild mov in inc sub cmp xor mov std aas mov sub lods push mov push push lds mov cmp dec fwait call nop in negb add add cli aad and jecxz push mov mov push rclb cwtl sahf jmp cmp jae cmpsl cmp mov movsl xor adc int adc and imull ja add out fnop test ret test jp or jp lret in jl dec test add add icebp xchg mov and or lahf cmc outsb cwtl into icebp (bad) inc aad lods call dec push fstp lods adc jl in insl mov inc insl cmp outsb mov ds shll or leave pusha sti scas dec jno stc lods and pcmpeqb push mulb add xchg sub add lods add fwait inc xor negb mov lcall mov cwtl add movsb sbb fcmovnbe sub iret xchg lret mov fstl sub cmp xchg mov out push imul jp das stos ljmp cmp push inc roll add outsb popf or xor jo je ret addr16 sub sub out daa clc out pop sbb pop iret sbb test sbb (bad) gs mov and cmp jg lcall sub cmc push xchg fcoms inc (bad) sub pop add add add add add cmp movsb jg icebp les in lods or lahf inc js pop xchg pop gs insb into scas push fwait fwait adc mov pop cmp dec or fnstsw es xchg arpl repz sub (bad) jne mov test add into xor outsb push mov test dec loope ss fisttpll mov divl cmp cmp mov clc and dec popa int into mov jp outsb jg xchg sub (bad) lock inc pop in movsb adc int jmp sbb sti mov jmp cli cmpsb imul inc mov or ljmp inc loope dec mov bound in out push mov test mov fldl arpl sub push add cmp outsb pop ds (bad) mov std cmc lsl sbb mov xchg int3 jo dec lods movsl dec or scas lret add or mov add iret dec loop subl xchg arpl aaa mov xchg int3 aaa in xchg icebp pop jmp and sub jle xor mov jne jmp fisubr pop ds xchg or movsl fs not xor pop call loope das sbb sub fnstsw add les sub aas jnp fbld lea ss jle inc in adc insl push jno popf ja mov jmp cmp icebp imul and je dec leave mov cmp popa test out jp bound dec loopne xchg loope (bad) sbb popa loopne add mov mov and test ficom arpl pushf gs adcb inc mov mov andl sub xchg xchg mov pop mov cmp pop jb push push out rep mov leave or jmp rcrl popf xchg repz add add lahf out fwait mov scas rolb rcl dec int3 push sbb sbb movsb (bad) into shrl (bad) dec add fild dec add (bad) fs es idivb jo int3 push sub jge jb add jb or mov shrb mov movsl or lock mov popa dec jnp bound push rorl xor sbb cmp sbb idivb xchg jge add inc movsl mov xchg xchg cmpsl addl arpl insl jge lea dec andl cmp fldt cli push hlt mov insb mov add add xchg (bad) es test xor cmp mov lahf push jno jecxz hlt imul lret and loop or insl and popa (bad) pop lea adc mov cmpsb mov mov fwait jmp test cmp mov movsl push loope xor dec jbe xchg pop xchg movsb or sub add add sarb jg ljmp sub mov lds pop xchg jg in movsb (bad) (bad) ja or adc sbb pop lds sbb cwtl jle mov sub daa ret cwtl cmp xor std js dec mov idivb mov cmpsb es arpl adc mov add add dec sbbl xchg insb pop daa jp pop fisttpl jl or xor inc push addl std mov hlt adc jl in aad push out arpl mov rcrl mov sarl outsb cwtl cmp mov pusha dec and es mov mov sub cli cmp add add add shlb int mov jno in mov jg arpl sbb push xchg pop out xor scas add rcr mov cmc xchg mov cltd (bad) repnz xchg int or inc and pop push ss push adc xchg mov sub mov ret and sbb add lret pop ror in fdivrl adc in imul push pop sbb lods add xor adc (bad) and daa cwtl mov cli xchg scas (bad) lea jno push jecxz fstps mov xchg pop repnz pop jae cli cmpb idiv or fild add jbe clc fistp std jnp cltd sahf test aad out out (bad) cwtl mov xor xchg rcrl aad daa popf in cmp xor insl push push pop arpl test add imul and les es push das lds pop mov std sub jmp add add pop lds shlb movsl loop mov xchg sahf lret mov push pop (bad) cld mov pop push lahf xor mov pop dec sub pusha sbb mov sub and addr16 jecxz xchg dec loope lcall xor int imul sbbb push add add and xchg fnsave xor mov and (bad) cli je sbb test jae or stos dec push xlat and int dec sbbl ja aad sub xlat int3 adc out pushf add (bad) jne inc pusha rcrb pushf jecxz fmull iret test repz add add xor aas xor sti mov mov lock adc int clc inc out das mov cli arpl push test dec sub data16 movsb xor push add xchg sbb test cmp dec xor pop and cmc test fadds loope ret sub jl mov xchg jb inc add add add (bad) cmc enter dec push add mov push popf adcl jb fnsave fs lds repz in add je or fbstp ds mov mov jl mov mov dec dec aad and or mov add add pop ljmp cmpsl xchg inc std xchg mov out lods pop sbb sbb imul setno mov inc lods roll andl je sub and adc pop int ljmp cmp loop and inc sahf mov add add xchg bound mov xchg cwtl inc std push or lea out (bad) insl in dec rcrb push sub push out cmpsb add fs sub sti mov out ret xchg cmp sbb and or push sbb mov cld pop cmp xor fwait push inc insb aad test movb add adc pop je outsl ret jno sahf cmp mov in jo mov inc push jb jecxz std mov and orl push outsl or mov mov test mov push rorb loop push clc insb mov lahf jnp insb loop int3 cmpsb sub sbbl or xchg add mov dec sub fdivrl stos pop sub xchg jge xchg mov mov jne xor pop leave loopne,pn stos mov idivb lods nop data16 jo shll adc aaa xchg pop mov lcall jb push mov pop setbe popf inc add add push xchg int3 dec lods rcrl push stos fmul cli xchg das xor pop icebp nop cli fistp dec mov cs cli adc gs push (bad) pop dec inc mov (bad) leave lock jns insl sahf fisubrl popf sub (bad) in cmc cld test add mov mov cmp and out ret add add xor fcoml lods or mov loop xchg aas mov idivl pushl inc adc pusha imul sub xchg nop dec xor icebp pop daa daa lock nop std daa push xor and popa stos mov push addr16 out pop jge xor les sub mov (bad) sbb sbb add cltd mov push test aas and out jns int3 adc scas sub cmp dec push jg cmp (bad) adc pop push push cmpsl stc addr16 jp mov das push sub jge stos int3 imul xchg mov jge jecxz push lret loopne int3 mov int3 xchg or pop push into out mov mov (bad) xor mov mov add mov jecxz mov pop std gs fmul lcall mov mov sbb idiv adc das pop push pop roll stos pop jb xor cmp mov ds pop lcall jne or pop sahf pop push enter cmc ds jge cmp xchg scas mov dec (bad) addr16 inc cmpl xlat sub pop inc add movsl dec rol jl cmp push stos bound xchg les xchg mov push mov and mov xchg jle call and cmp lret jmp add shrb cmpsl xchg int3 sub sbb mov dec orl cltd xor aas sub test push mov out pop mov inc mov mov pop xor sub xor rorl arpl arpl mov jbe add out mov jbe or and pop push sbb and pop xor mov xor xchg clc pop push sub lods push dec test inc bound xchg loop leave push je xor test aad xchg push fwait insl into fildll sub insb cli sbb fcoms lcall mov add adcl jmp pop lods (bad) mov xor jle cs out cmp jns add xlat scas loopne lahf cmp xor mov jp xchg or arpl pop enter pop lret fs jno or push push xor hlt push jl mov stos (bad) adc mov mov (bad) ret scas popf data16 int3 pop and adc std dec out xchg xor sub aam or pop mov jle hlt fwait (bad) cli out das jg mov and bound pop fbld (bad) aam stos lret lret lea fisub fcomip fldl sbb pmulhw add lret pop movsb pop mov sbb jns fisub inc cmp rcr scas lea (bad) aad inc xor dec loope mov jb cmp outsb pop push xor movsb aaa les outsl into addr16 jns mov mov lods xor jecxz fidiv lcall and sbb add xorl cmpsb mov adc (bad) icebp mov sub stos pop stos popa mov out std jno pop inc cld loop mov int aad stos scas sbb outsb cmpsb cli rclb cmp sbb adc and xchg dec clc or mov or clc add in psubsw inc sti lcall ret xor add loopne inc ss adc pusha int3 cli aad xchg movsb test movsb inc daa fs push imul mov (bad) data16 lret mov scas jno sbb (bad) mov into add jb lods dec add loope mov add add add lret int3 jo (bad) cmp mov mov addr16 fs sub mov rcll lret add jb or xchg xor dec xchg rcrl aad (bad) pusha or inc int3 adc gs mov je or das mov lock scas and mov add add lcall mov pop push adc mov sbb (bad) test rcll mov sub jo shlb fwait loopne sub add and (bad) cmpsb lret outsb sub mov (bad) jl sbb sub adc fcoms fildl clc and adc or int mov cmc mov sbb ficomp sar rcll dec and fsubrl push rorl cmpsb std out fldenv sbb dec nop jnp fist jae push inc nop mov add insl stos repnz scas jno sbb adc ficomp ljmp xor jge nop cmpsb jle loopne cltd cmp ficompl addl lret jno mov bound xchg outsl dec das ljmp ss cmc mov or pop (bad) sti aad fsts stos lret inc xor scas push xor lods add add dec lds (bad) roll or adc sbb cmp insb les or xor dec inc movsb mov xchg nop shrb push pop push aas insl (bad) xchg jno push outsl ret fwait mov or test dec repnz cmp add add add fldl push dec mov mov lods imul ss dec jbe adc jecxz lods call xchg scas xor testl inc aam mov mov std sbb and enter mov (bad) mov inc sbb sub jle cmp mov out fiadd add xor mov sub mov in inc loop mov and mov push (bad) mov test pop xlat cmpl lret cmc lret test jg ljmp mov push mov jns (bad) jecxz in dec push push mov jns pop jecxz add pop mov or mov xchg adc rorl adc dec jb push sub stc push adc int and mov (bad) lock bound cmc (bad) int mov xor adcl mov dec or lret pop cmc fnop inc ljmp sbb addl lret add push push mov mov mov push lods xchg stos add xor adc adc cmpsb xchg mov out pop outsb mov shlb fcompl stos xor push add jns dec fstpt cmp roll iret ljmp hlt mov out sub sub (bad) or add and lahf adc nop lock xor (bad) fist xchg push cli xor mov cwtl ret sub xor dec sub iret adc mov jl inc and sahf shr test mov jno jb cmpsb aas push dec dec jnp sbb and push hlt add jp lock mov (bad) in ja je fsubl test sub aaa clc (bad) lret sti cmp aam pop mov mov adc add dec sbb sarb xor stos sbb ret dec push mov ret mov test data16 push inc xor lret add add lock das xor fcoml xor fdiv inc bound insb popf ss dec jnp popl rcrl repnz dec and clc sbb hlt sub xchg pop push mov jmp jae fnsave or lds inc lcall sbb or scas aaa or cmpsl les add add push push imul shrb adc cmp cmp mov aam dec mov add cli inc arpl inc inc cmp jnp xchg cld mov adc sub leave pop push fsubr je pop adc mov inc push int push pop xor lret add add fnstsw mov add jae and xor adc das pop pop or fnstenv inc mov sbb mov mov xchg fstpl xorl fmulp mov daa loope fdivrs dec (bad) clc adc ret cltd dec push add rol outsb push mov xor or popf pop cmc loop cmp push dec xchg pushf popa insb out mov stos (bad) sbb push ljmp (bad) add jb in jo mov leave clc int3 into or pop add popa sbb xlat into jp ljmp push call xchg xchg xchg add arpl mov cmp lods mov inc xchg push pop add mov push xchg pop mov and ret mov fcomps lds and sub mov sub aas inc shl outsb mov pop fist movsl ficompl or cmp pop lods loopne mov jge adc add or gs shrb xchg add dec aaa push (bad) mov cmpsl scas push dec push cmp das push inc jae repnz into jo mov add jbe cmpsb test sub mov or sub or es arpl loope jg dec scas xchg cmp mov mov fwait sbb arpl add sbb xchg je mov mov in push pop cld sub inc movsl clc lods je stc iret add das stos jae hlt in je stos hlt jg cmp mov dec bound dec cld les test cs out imul dec xchg mov pop xchg dec sub or sub add ret inc jb rol imul rolb (bad) out mov xchg and or and les fwait mov vucomiss aam jle inc aaa sahf adc inc insb cmc loope inc mov loop or sbb sub icebp ja mov cmp add add in sub sub in fnstcw push orb fnstcw lret sub push and mov iret push jbe leave inc (bad) fisttp lods je ret inc stos pop xchg pop dec adc cwtl lret pusha (bad) movsl and dec and mov sbb ss xchg subl xor mov lods pop orl pop cmp jp pop mov inc sbb sbb and aad mov arpl (bad) insl cmpsb pusha xchg inc call sbb jns mov cwtl inc mov cltd push mov sub je scas popa xor repnz or add or pop leave dec xor or pop jp test xchg adc rcll cmp scas icebp (bad) insl cmp lock dec fwait adc subl bound jnp mov insb lds (bad) aaa cmp or mov je mov insl pop mov sbb xchg dec push push loop xchg push jmp add sub xlat sbb test icebp and lret cltd or cwtl ljmp or mov pop mov pop stos or bound jg scas pop inc lock push xchg push ja fistp insb popf adc add rorl cs xor inc fistpl dec push pop cmp sbb scas xchg (bad) (bad) mov adc fildll add push push pop adc push mov aas addr16 jno mov ret outsb fs dec mov pop inc cmp loop cltd dec call dec lcall xor add add mov aaa jne repz call xor add (bad) divl ss insb push and mov out cmp add ret out mov xchg jge hlt sbb xchg jle mov mov incb fcoms sub xchg cmp xchg stc sbb mov add add and rcrb mov inc mov aam mov aam dec outsb add mov out in cwtl push adc int3 inc mov jo jo (bad) std mov and sti es leave pop mov and cld dec pusha xchg dec and pop gs mov mov leave push and mov les add mov add (bad) mov lods call mov shlb popa add and sub fsts or mov cltd or arpl into or add or push jae xchg or jnp insb and loop inc push xchg and add sti lahf xlat xchg pop outsl push aad xor leave sar outsb mov add xchg xchg mov lret int3 sbb sbb stos adc mov push sbbb iret xchg gs sbb mov sbb test and dec es and jns add xchg mov inc imul xor imul mov dec outsl lea rcrl clc fwait xchg out cmp and adc sbb sbb xlat in cltd mov or test outsb cmc pop int dec push or leave and fisubrl mov cld adc and add sbb xchg pusha cli adc loop or inc or ds (bad) shl mov es daa mov lods dec rcrl stc fucomp inc les (bad) into inc sbb jns and pushf in dec (bad) xor push push xor inc mov cmpsl dec xchg clc addr16 aam xchg leave int3 fldt test out mov add dec mov es jle int sub (bad) popf popf lcall out xchg out addr16 in adc xor cmc nop xchg lret or fcmovnb inc pop loope cmc aam outsb jle ficomp aad xor xchg inc and add lea mov mov add push push inc and fwait sarb jns push inc adc scas adc adc jb aas mov sbb dec jo adc sbb movsb sarl cld push (bad) mov pop ljmp xchg movsl (bad) repz outsb inc jae xchg push pop adc lcall lods mov out lock mov (bad) cmpsl xor add add mov fldcw dec js lock push dec dec mov fcomps add pop jbe jg mov rorl pushf insb orl stos mov icebp dec rclb jae je mov mov xor pushf lret dec mov jns push ljmp mov add add in movl xchg arpl cmpsb ret shll inc imul xchg inc je or ljmp ret out cmpsb dec push sti add das mov and jnp pop mov or cmp xlat adc ss sub stos ficompl ds outsb mov add xlat repz fdivp inc dec mov push popf adc iret push fsubrs int mov (bad) jge lcall outsb call aad mov aad xchg or push xchg jo push outsb pop dec pop (bad) outsb jecxz je mov sbb lea jmp fdivrl cld add lret add add pop fnstcw (bad) and call call sub sub adc out stos addr16 mov push mov dec test cli jne test pop imul cmp pushf fimul fstp cmp movsl push pop xlat sarb (bad) mov push rol pop add inc mov push ret (bad) xchg loopne mov das xchg adc lahf cmpsl cmp jb pop mov mov lock lret or xchg test int rol out push push shrl mov xor addr16 xchg inc sbb icebp das xor add add and add hlt inc xor sbb mov adc mov inc popa lods pop addl je hlt adc ljmp mov fwait inc fdivl jb loop mov cld jge adc mov xlat sbb sub cmp gs loop fimul cmp sahf lahf jp push lret daa mov or fwait cli push mov pop daa push xchg gs and ret call mov pop add pop mov popa movsl jbe cld sbb test inc xor ret outsl xor mov add pop mov aaa sub nop push lret mov adc mov dec cli pop pop mov pop imull cmpsl jmp pop pop adc mov rol jns inc mov and push shr pop inc rclb mov inc insb jp dec out (bad) fldt out mov rol and add add jl jp sbb loope cld push popa lahf dec test bound lods (bad) mov push loopne push jo repnz subb (bad) (bad) pop repz dec fcomps dec inc jb cs jecxz cmp cs sub repz (bad) cmpsb repz push ret push pop add add push movsl icebp add stc or mov cmp cmp aaa jle out sbb push rcrl adc xlat or inc and dec add aam jl and aad add mov cli fcoml rol subl insl inc pop gs xchg pop cmp jne jnp mov add sbb xchg bound jmp jae mov fmuls inc cwtl sub psrlq pop jp jecxz pop (bad) lea lret xor popa cmpsl lea dec mov orl mov sahf pop out repnz sbb jge push inc stos cmpsb adc push int add mov (bad) mov ffreep outsl cld pusha and movsb mov test jo sti or out repz adc daa or (bad) mov movsl jl hlt dec stos icebp insb push dec pop (bad) in xchg scas sar push jno stos sub nop jo pushf pop mov add in xor lds jle cmp jmp pop js pop fild in cmp adc nop xchg xchg mov jns mov mov in in and sti call pop loop mov dec inc jb repz insb das inc lret mov inc adc inc (bad) xor fs push push cwtl leave xchg and movl cmpsb or outsb inc mov xor pop adcb jecxz jecxz cmp sbb int popa add movsb push or imul mov dec push into push push leave out lods sbb outsb and into pop push push sti dec mov mul les repnz (bad) mov push scas lret xchg dec mov add add push pop adc push cli jg sbb (bad) mov dec xchg inc inc loop mov inc out mov jbe lods xor mov mov cld fstpt neg (bad) mov mov xor les cmp jg insl ffreep sbbl cmp outsl gs jne cmp pop adc (bad) fnstcw gs mov jl xor fistpll mov push arpl cs xchg inc sbb mov push mov jne pop sbb pusha push mov mov imul sbb push mov add pushf xlat add inc pop add fldt mov or push mov (bad) jns aam adc add or mov mov test cmp ljmp mov xor (bad) xchg or jno push ss mov out fnstsw mov (bad) jnp popf dec dec mov add repz ja into dec mov add dec outsl sub adc jg movsl shrb (bad) push fistp nop fucomp std imul mov and jbe fstpl (bad) in add push push xchg bound jns dec (bad) pop test dec add jno mov test int adc fnstcw xor lods pusha jge shr movsb mov fistpll lret andps adc rorl shll mov (bad) iret cld dec adc and nop (bad) jo cmpsb push adc lret int daa jge push mov rcrl push sbb add outsb sbb aaa push push inc jge fs mov dec jmp lods loope (bad) pop sub mov dec push shll push xchg ja rclb mov movsl mov insb mov push jp mov (bad) xor fimul cwtl xor mov jg mov sub inc je dec xor cltd test dec loopne (bad) xor insb outsb fstl mov popl cmp xor inc ss sbb lock dec int incl test fwait adc out gs stc inc cltd outsb daa int js pop push insb lods ljmp mov sbb (bad) cmp add inc out and pop and and rol ds (bad) push mov jb call sarb aas xor xlat ljmp aam lahf out jb and ret pop nop int3 (bad) stos cltd dec xor add or test mov loope pop push cltd or xor jl mov add bndldx out into adc add (bad) or xchg lret (bad) mov xchg ss xor push push ficoml aam lret out scas ret jb,pn cmpsl adc mov jmp pushf imul dec pop bound repnz (bad) xchg xor fwait sahf fistpl or add sub in test jb ds inc mov andl repz hlt mov inc jle cmp movsl std aaa xchg stc xchg arpl into cld hlt jecxz iret js lods lds cmp push xchg pop jo jl out or (bad) fstpt xor scas pop and inc mov add dec cmp mov and xor jno push sahf xor imulb repnz add leave jnp dec sub orl sbb jne adc mov and pusha mov aad xchg stc sbb movsb push scas loopne jp pop test pusha xor call mov bound into mov xor add add cli arpl pop add push pop ffree in leave outsl and push fnstsw mov inc out adc popf popa xchg push fsubrp xchg xor mov mov insb sub mov adc xor push ja cmp mov ds cmp sbb mov mov add sub addr16 pop xchg (bad) mov mov xor and xor push push inc sahf loope jne gs repnz mov or repnz mov sbb and sti push inc je es insb ror push std in pop pop push popa rcl fldt out xor jl insl sarb loopne outsb shrb ret xchg add bswap hlt shlb lods stos mov mov fildl inc adc enter and cli and mov sbb sub repz je cmp hlt mov xchg rcrl fsubs out push aaa xchg pop lea out adc movb add push lods (bad) lods mov push negb jne (bad) mov cmpsl pop mov mov test add push inc dec cmp sbb or or sbb orl pop dec leave ffreep or jae nop inc or iret jecxz fdivl loope or pusha cli mov xorb add inc jns insb subl les or decb push jecxz sub lret add gs movsb xchg mov loop (bad) ss inc pop add (bad) (bad) ja mov aad push jae add sub sub lods scas add dec and (bad) push fwait sub sbb add add dec dec aad pop pop out jmp mov leave mov aad ljmp popa xor xchg push and mov sub hlt jle and jp test mov mov repz push mov or clc pop ds push mov cmpsl pusha gs les pusha dec mov cmpsb aad add add add std sub jp nop cmp xchg negb sti mov iret cmp jo fisub push inc int mov (bad) cli fcomps and fadd repnz scas jae std jb mov stos jg cli and outsb ret nop xor out das cmp test xchg xor add push mov xchg dec insl mov fwait loop les xor pusha ljmp xchg sbb test inc cld mov out daa or xchg fldl mov xor imul mov mov int sub jo cmp and sub add jecxz lret adc add cld jl lea pop rorb xchg repz loop movsb frstor adc xor (bad) sub pop aam sub lea lret andl fstpl leave or hlt pop lods popa xor (bad) int cmp rcll mov jl adc fsubrp imul cld push in add add shlw fildll and mov outsb daa roll xchg mov (bad) rcrl imul cmpsb pop mov pushf pop dec push and or jnp aad (bad) pop push jl jecxz lock sbb and (bad) push xchg icebp mov (bad) add cs pop cwtl xchg daa arpl mov outsb push jnp jecxz dec cs out scas data16 lock mov mov sahf dec dec mov je jmp xlat or adc xor dec jg lods lret xchg paddsw sahf lahf and mov sbb xor int mov jb sub add jae fisttpll shrb adc jb inc lea cmp xor xor out scas cmpsb aam lds add in into cwtl or cmp inc sub mov bnd arpl pop jmp add mov and cmp pop jg or add jle inc xchg mov cmc nop jno pop jl nop dec out in jns or push sti xchg mov cmp or sbb sti fisttp cmp cmp dec movsl (bad) je pop cs pop out xchg jg ljmp out mov xor mov cld sub add out ljmp lea fsubrl cmp out cmpsb and andl sub dec sub lods movsl pop out xchg pop insl test add aas jp jle out ffreep adc into faddp fnstcw mov add add jb sbb mov pop fs aaa popf dec dec leave daa int3 sti mov and add lret mov adc mov sub adc cmpsl inc jle jecxz dec and cmp cmp stc mov inc push fstpt mov pop or imul ljmp mov mov movb (bad) or add mov jns xor test loope cmc inc xchg lahf cmp add sarl inc fwait cmp in into sbb xor rorl icebp add mov cwtl insb out mov sbb push push fistp nop cmp cmp inc das dec out stc aaa divl xchg in insl notb add outsl insb das and xchg call lahf and push add mov (bad) mov push and fnstsw cmp xor mov or pop ds lcall cmp inc adc in cmpsb scas cmp jg jae in (bad) dec mov sub enter pop mov pushf cmp xchg jge add sbb lods adc pop or loop lock inc xchg push cmp mov ja sbb dec iret cmp cmp sbb sub fldl je clc (bad) ds add cmp in xchg popf xor inc movl xor dec sub add jp pusha imul sbb popa mov aaa or cwtl lahf cltd fidivl xchg das cmp fldenv addr16 fstpl cmc popa push ja and or or sub repz add or ss dec inc and push add mov les insb test movsb mov adc cld and mov cmc cmpsb cmp lock pusha mov outsb sub sub sbb roll es test mov mov xor pop or jno popf aas test cmp ljmp (bad) sub and mov jb,pn or add int sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and add add mov lahf xchg mov add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov mov das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf add fisubrl cmp and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or notl cwtl jp xor add mov insl mov jecxz xchg cmpsb (bad) and sbb add fdivs and mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov sbb into xchg (bad) xor rcl fucom call add push adc push and cs aas inc dec dec push pop pop gs jne xorb push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa add pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps pop and aas inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno add jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs aas inc dec dec push pop pop imul popl xchg fwait mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg add add rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test add add (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add aam fsubp add out hlt cli incl unpcklps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu add ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp testb add add or sbb and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps and add dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl add adc das xor push pop arpl js xchg stos mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub add inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl unpckhps pop and aas inc dec push push pop pusha gs movsl stos mov mov (bad) fsub out icebp idiv add or sub dec dec push pop pop arpl je jle mov stos scas mov mov fnop in lock sti add or push sbb and sub aaa cmp pop pop arpl jae jle mov movsb stos scas mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl je jg mov stos mov mov (bad) fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jae jle mov test add (bad) lret fcmovu in lock cli add and sub cmp dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addl mov ret rcr fldl add jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pusha imul addb mov mov (bad) in out hlt cli incl and inc inc dec push push pop pusha imul addl mov ret rcl fucom out repnz add add push adc push and cs ds dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or sub dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out lock add or pop add sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) lret fcmovu in lock sti add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out add cli add and sub add add cmp inc dec push push pop popa insb jb jl xchg test mov mov fcomp jecxz out repz incb unpcklps pop and das xor aas inc dec push push pop pusha imul addb cmpsl lods mov mov xlat fucom out repnz std add or sub xor ds dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jae jge mov test (bad) leave iret aam (bad) ljmp adc xor push push pop popa data16 add add add add jl xchg test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push add imul addl mov ret rcr fucom call add push adc push and xor ds dec dec push pop pop imul add add movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) lret fcmovu in lock cli add and sub cmp dec push push pop popa data16 jno jl xchg add cmpsl lods mov mov fcomp jecxz out hlt stc incb unpcklps pop and das xor push push pop pusha imul addb cmpsl lods mov mov fcomp jecxz in repz incb or adc push and cs aas inc dec dec push pop pop gs jne jg mov stos mov mov add rol rcl fucom call add push adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) lret fiaddl add add in lock add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl and inc inc dec push push pop pusha imul addl mov ret rcl fucom call std add push adc push and cs aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fsub out icebp idiv add or sbb xor aas inc dec dec push pop pop fs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or add pop sbb sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in lock sti add and sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and add add xor push push pop pusha imul addl mov ret rcl fucom call add push adc push and xor ds dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp add push pop pop arpl jae jle mov nop xchg lcall rol rcl fsub out icebp idiv add or pop sbb cmp pop pop arpl je jg mov stos scas mov mov fnop in lock sti add or push sbb sub ss inc dec push push pop popa add add add jl mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop pusha imul addb cmpsl lods mov mov fcomp loop in repz incb or adc push and cs aas inc dec dec push pop pop gs jne addb add cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov stos mov mov aad loopne jmp add cld add or pop sbb cmp pop pop arpl jae jle mov add movsb test (bad) aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl and inc inc dec push push pop popa data16 jno jl xchg lods mov mov ret rcr fsubp jmp add unpcklps pop and das xor push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl faddl add loope in icebp idiv add or sub dec dec push pop add push jne jg mov stos mov mov (bad) fsub out icebp idiv add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in lock add sti add and sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repz std add push adc add sbb and xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos scas mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb xor cmp pop pop imul (bad) xchg lcall mov fneni(8087 in lock add or push sbb es aaa cmp inc dec push push pop bound jae jge mov test (bad) leave into aam (bad) jmp add unpckhps pop and inc inc dec add add pop pusha imul addl mov ret rcr fucom call add push adc push and cs aas inc dec dec push pop pop fs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl add jns test movsl stos scas mov rol rcl fneni(8087 in lock add or push sbb add dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in lock cli add and sub cmp dec push push pop popa insb jb jl xchg lods mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and cs aas inc dec dec push pop pop gs jne addb add rol rcl fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall rol rcl fnop out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov movsb stos scas mov add fnop in lock add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addl mov rol rcl add loop in repnz std add push adc push and cs ds dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) lret fcmovu in lock add add and sub ss inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt add add and sub ss inc dec push push pop bound jb jge xchg test mov mov (bad) jecxz out hlt stc incb sldt adc pop and das xor aas inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub add add aaa cmp pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli add and sub cmp dec push push pop popa data16 jno jl xchg test mov mov fcomp jecxz out hlt stc incb push adc pop and das xor aas inc dec add dec push pop add insb jno jl xchg lods mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl add je jle mov stos mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl unpcklps pop and inc inc dec push push pop pusha imul addb add add mov mov fcomp loop in repz std add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rolb int3 rcl fucom out repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall add mov aad loope in icebp idiv add or pop sbb daa sub inc dec push pop pop bound jae jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa data16 jno jl xchg lods mov add fcomp jecxz in repz incb or adc pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out repnz add or sub dec dec push pop pop arpl je jle mov stos scas mov mov add add loopne jmp idiv add or push sbb daa add dec dec push pop pop arpl je jle mov stos scas mov mov fnop in lock sti add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop pusha imul addl mov ret rcl fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or adc sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa insb jno jl xchg test (bad) leave iret aam (bad) jmp add unpckhps pop and sub xor push push pop pusha imul addl mov ret rcr fucom call add push adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp add push pop pop arpl jae jle mov test (bad) lret fcmovu in lock cli add and sub cmp dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov xlat fucom out repnz incb or adc pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl je jle mov stos scas mov mov fneni(8087 out lock add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push push pop popa imul addl add add mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop add imul (bad) xchg lcall add add add add rcl fneni(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli add and sub ss inc dec push push pop popa insb jb jl xchg test mov mov rcr fsubp call add push adc pop and das xor push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock sti add or push sbb es ss inc dec push push pop bound jb jge mov test add lret fneni(8087 in lock add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) ljmp add add unpckhps and inc inc dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz out repz incb push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out bnd mov test add add enter fucom call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb add add mov (bad) fneni(8087 in lock cli add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl pop and aas inc dec dec push pop pop gs je jg mov test (bad) leave add iret aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat faddl add add out repnz add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out add idiv add or pop sbb es ss inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out add cmc sti add and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb add add or sub dec dec push pop pop bound jae jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fsub out icebp idiv add or add sbb sub add inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or add add sub dec dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and das add xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge orl test (bad) leave into rcr fsubp jmp add push adc sbb cmp add inc dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa add add jno jnp xchg cmpsb stos mov mov rcl fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or adc xor dec push pop pop gs add add test movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl add add mov mov aad loopne jmp cmc sti add or adc xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb lldt xor dec push pop pop fs je jg mov add xchg cltd sahf movsb test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jno jl xchg add cmpsb lods mov mov (bad) fneni(8087 out lock add and sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov add add rcl fsub out icebp idiv add or push sbb es aaa cmp inc dec push push add insl jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov add (bad) lret (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov add fnop in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov xlat faddl add out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp add add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or add adc sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push add and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and add xor push push pop pusha imul addb movsl stos scas mov rol rcl fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub inc inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps xor inc dec push push pop data16 jne add xchg test mov mov fcmovu in lock cli add and sub ss inc dec push push pop bound jb jge xchg stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb add mov rol rcl fnop in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test add add add add leave iret aam loop in repnz add or sub xor aas inc dec push bound js test movsl stos mov mov xlat fsubp out idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp loop add in repnz std add or sub dec dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov lods mov mov fcomp loop in repnz std add or sbb cmp pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz std add or sub add add cmp pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds add push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop add add add imul mov scas mov mov (bad) jecxz out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul je jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul add add movsb test (bad) leave into aam fsubp jmp add push adc pop and das xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd add lahf movsb test (bad) leave into aam fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov add add into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test les leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam add in out hlt stc incl push adc pop and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl or adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpckhps add and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das add xor ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov fcomp loop in repnz add or daa sub aaa cmp add inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push add add pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul add add jnp xchg cmpsb stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul test movsb test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test vaddsubps fneni(8087 in lock cli add and sub cmp dec push push pop pusha imul addb add fwait mov mov (bad) fneni(8087 out lock add or adc xor cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop popa imul addb cmpsb stos add mov mov (bad) fneni(8087 in lock add or push sbb sub xor push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov add add lret rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es cmp dec push push pop popa insb jno jl xchg lods mov mov (bad) add fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out add idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push add sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es add xor cmp inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp add add push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop bound add jl xchg cmpsl lods mov mov xlat fucom out repnz add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz add or sub dec dec push pop pop bound jb jge mov add add mov rcr fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test mov mov (bad) in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test les add leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fiaddl (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp add cmc cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb add add sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es add cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc add pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop add popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jno add ja addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb aaa cmp push pop bound jb jge xchg add cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jb jge mov add mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov add mov rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jle mov test mov mov add rcr fsubp call add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp add jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add add add add add adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor add add aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec add dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl pop and aas inc dec dec push pop pop fs je add jp test movsb stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add push adc pop and das xor aas inc dec dec push pop pop imul add test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov add add mov fcomp jecxz in repnz std add or daa sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg stos mov add mov rol rcl fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov add rcl fnop in lock cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fildl add out lock add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp add add add idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add add add push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb add daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub add add cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub xor add push pop pusha gs jne addb movsl stos scas mov mov fnop in lock cli incl pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop add push je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli add and aas inc dec dec push pop pop gs add add jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp adc xor push push pop pusha gs jne addb add mov stos mov mov aad loopne ljmp adc xor cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb add add mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp idiv add or adc xor cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov int3 rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) faddl add loope in icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp add add cld add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or add sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz std add push adc push and sub add cmp pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop add fs je jg mov stos scas mov mov fcmovu in out cmc cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha gs jne add test movsl stos mov mov aad loopne ljmp adc sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb add stos mov mov aad loopne jmp cmc sti add and sub push pop pop arpl jae jge mov stos mov ret (bad) fucom in hlt cld add pop add sub xor pop pusha outsl jbe test scas mov (bad) lret rcr loope out idiv add adc and sub ss pusha outsb jne test scas mov ret lret (bad) out cmc cld add adc pop es dec push pop arpl js xchg scas mov (bad) lret rcr loopne out cmc cld add adc and xor cmp pop data16 jae orl (bad) lret rcr add out repnz add adc sbb sub ss push mov mov (bad) fsub jmp stc incl or xor inc dec dec push pop outsb jne orl mov in repz add push adc ss pop insw jae orl add int3 rcr loopne out cmc cld add adc and add cmp inc dec push push pop imul xchg mov ror fcomp out hlt sti add adc push and dec push pop pop data16 jbe test mov fsub ljmp push and inc dec push pop add add add add jns xchg mov mov loop lock add sub aaa ds dec push pop popa outsl jbe test scas mov (bad) lret rcr loope out idiv add adc and cs pop pusha insl je (bad) mov mov ret fcomp out hlt sti add adc push and add add cmp push push pop insw je orl enter in repnz lcall data16 je orl mov ret lret (bad) in hlt sti add adc pop es push pop pop outsb jne orl mov mov (bad) in repz add adc sbb add cmp push push pop insw jae orl leave rcl (bad) in hlt cld add adc and cs pop insw jne orl mov (bad) (bad) out idiv add adc and cs pop pop insw je (bad) mov mov (bad) lret rcr (bad) in hlt sti add or pop push es push pop pusha outsb jne orl mov ret leave rcr (bad) in hlt sti add adc and das ss popa push lea mov loop lock push or xor inc inc dec push pop imul xchg mov ret add rcl fsubp in hlt cld add adc mov mov mov fcomp jecxz out hlt stc add add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa data16 imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle orl test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl pop and inc inc dec push add popa imul addl add add mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa insb jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push pop pop arpl jae jge mov test add lods mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov add add lret fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne addb movsl add int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov add fucom call add or sub dec dec push pop pop arpl jae jge mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli incl add add pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add or adc xor cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb es add ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push add arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push add insb jb jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul add test movsb test rol rcl fnop in lock sti add and inc inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge add mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd add add mov aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp or push sbb es ss inc dec push push pop popa data16 jb jl xchg lods add add int xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov add into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad add in lock cli add and inc inc dec push push add insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz out add add clc incb or adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add add add adc sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test add into aam fsubp jmp add unpcklps add pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb es add ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb add unpcklps pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop add add imul addl mov rol rcl fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae js orl test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop add imul addb add cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov add mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall add add aad (bad) ljmp unpckhps pop and aas inc dec push push pop pusha gs jne addb cmpsb stos mov mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov add add rcr fucom call add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam fild in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fnop in lock add add add sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl and add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop add insb jb jl xchg lods mov mov xlat fucom out repnz add or sub inc dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and das xor aas inc dec add dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec push push pop pusha add imul addb movsl stos mov mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb js (bad) mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul add (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs jne addb movsl stos mov mov aad loopne ljmp or push sbb sub cmp dec push push pop popa data16 jno jl xchg mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge mov test mov add rcr fucom call add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave add add into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop add push jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl faddl loope in icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom call clc std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test add aam (bad) ljmp add add unpckhps and inc inc dec push push pop pusha gs jne jg mov stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb add add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub add cmp pop pop arpl jb jge mov test mov mov fcomp jecxz in repz std add or adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli add and inc inc add add push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz std add or daa sub inc dec push push add imul add test movsb test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs push and das xor aas inc dec dec push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es add aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and aas inc dec add add pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop add outsb jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul add mov stos scas mov mov fnop in lock sti add and sub cmp dec push push pop pusha imul addl mov rol rcl fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jge mov add cwtl sahf mov add fcmovu in out hlt cli incl pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg add lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov add lret fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or and cs aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl add fnop in lock add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp add add cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or add add push adc push and cs aas inc dec dec push pop pop imul mov stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repz std add or add sub xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa add add inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop gs jne jg mov stos mov mov rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec add add pop bound jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 add add jbe addl mov rol rcl fsub out repnz add or pop sbb aaa cmp pop pop bound jae jge mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg add add movsl stos mov mov aad loopne jmp idiv add or push sbb add aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg add mov rol rcl fneni(8087 in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov test add mov mov fcmovu in out hlt cli incl pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad jecxz (bad) dec cwtl fsubp out hlt sti add daa das xor pop pop data16 jae orl (bad) int fnclex jmp add add or push sbb daa sub inc dec push push pop add outsb jae jle mov test (bad) leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push add add and sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das add add aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha data16 jno jl xchg lods mov add fcomp jecxz out repz incb or adc push and xor ds add push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop add add insb jno jl xchg cmpsl lods mov mov fcomp loop in repz std add or sub ss inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg add mov mov xlat fucom out repnz add adc pop es dec push pop pusha insl jne (bad) mov mov ret rcr fucom call add push adc push and xor ds dec push pop bound ja test mov (bad) lret rcr (bad) in hlt sti add add or push sbb ds dec push pop pusha insw je orl mov rol aad loop lock add adc and cs pop bound ja xchg lods mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul add test movsl stos scas mov rol rcl fnop in lock sti add and sub cmp dec push push pop popa imul addl mov ret rcl fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov add mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fneni(8087 out icebp idiv add or push sbb add sub dec dec push pop pop arpl jae jge mov test add mov mov out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rolb add fneni(8087 out icebp idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop fs je jg add movsl stos mov mov aad loopne jmp cmc cli add and sub xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp add cli incl pop and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in icebp idiv add or add add pop sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and add add xor cmp pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov add fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or sub add add push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push add imul mov mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp dec dec push pop pop bound add push (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add add xchg cmpsb stos mov mov add fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg add mov lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp in out hlt stc incb push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall add add (bad) lret fcmovu in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb add aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov ret rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov add (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into rcr fsubp add add out repz incb push adc push and cs add dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push add adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl je jg mov movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop add add das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add and add add inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec add add add add pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov add enter fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb add ja (bad) xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jge mov lea lods mov mov fcomp jecxz out repz incb or add pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop imul addl mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push add popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods add int3 rcl fsub out repnz add or sbb cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov add add lret fnop in out cmc cli incl pop and das xor dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb jl xchg test mov mov add add add xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fiadd add jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov mov cmc cli incl add adc xor push push pop pusha gs jne addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) jmp add push adc push and add xor ds dec dec push pop pop arpl jb jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push add push orl test mov mov fcomp jecxz in repz std add or sub add pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop add add insb jno jnp xchg add rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and xor cmp dec push push pop pusha imul jo jnp test movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repz std add or sub inc dec push push pop bound jb jl add addl mov rol rcl fneni(8087 out lock add or push sbb sub add cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul add test ret enter fucom call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha gs jne addb add lahf movsl stos scas mov mov (bad) in out hlt stc incb push adc pop and das xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc sbb cmp inc dec dec push pop pop arpl jae add mov test add scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and cs aas inc dec dec push pop pop imul nop xchg fwait mov mov add lret fnop in lock cli add pop and aas inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs add addb cmpsb stos mov mov add fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jnp xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out in repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne ljmp adc adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub call add or sub add dec dec push pop pop arpl jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor add add inc dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov aad loopne ljmp adc xor push add push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl addl mov rol rcl fsub out icebp idiv add add sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub xor aas inc dec dec push pop pop gs jne jg mov add add scas mov mov fcmovu in out cmc cli incl unpckhps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and xor cmp pop pop bound jb jge mov test add int fcomp loop in repnz add or daa sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov rcr fsubp call add or sub dec dec push pop pop arpl jae jge mov test mov mov add add enter fucom call add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne add lock sti add sbb es cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsl lods mov mov xlat fucom out repnz add add add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno add xchg test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb add add add add es ss inc dec push push pop popa imul addb movsl stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and add add xor ds dec dec push pop pop arpl jae jle mov test mov mov aam (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc sbb cmp inc dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz std add or sub xor aas inc dec dec push add imul mov mov mov (bad) jecxz out repz incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl outsb jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge add add popf mov mov xlat fucom out repnz add or daa sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov xchg cwtl popf mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) in out hlt cli incl unpckhps pop and aas inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop fs js mov jmp or sbb add and cs pop pop gs add (bad) mov mov ror fcomp out idiv pop movhps es pop bound jb jge mov test mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jge add mov test mov mov xlat fucom out repnz add or daa sub aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl add add mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl add and aas inc dec dec push pop pusha gs jne addb movsl add (bad) lret fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jae jge mov test mov add add fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov rcr fsubp jmp add push adc push and xor ds dec dec add fs je jg mov stos scas mov mov fnop in out cmc cli add pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne add add ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc add cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb add rol rcl fsub out icebp idiv add add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb add add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub add add cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp add std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub add add push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop add add push orl test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub add push pop pop arpl add jns orl test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle add orl test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl je addb add fwait mov mov (bad) in lock sti add or sub dec push pop gs jne (bad) mov test mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov add add add rcl fucom out repnz add or sub dec dec push pop pop bound jb jge mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam fild add jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fneni(8087 in lock add add add sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom call add add add add sub dec dec push pop pop arpl jb jge mov test mov mov fcomp loop out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop add das xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop add jo jnp test movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or sub dec add add pop pop bound jae jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor aas inc dec dec push pop pop add imul mov mov mov aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop popa imul jbe addl mov rol rcl fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es cmp dec push push pop popa insb jno jl xchg add add lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jge xchg cmpsl lods mov mov xlat fucom out repnz add add adc push and xor ds dec dec push pop pop arpl jae jle mov add mov rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov add rcl fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop add insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fadds add fucom call add or sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out add add stc incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps pop and das xor dec push pop pop gs je jg mov stos scas add rcl fneni(8087 out icebp idiv add add add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop add daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or sbb cmp pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub add xor cmp pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb add unpcklps pop and das xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc add add push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc das xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec push push add gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push add insl jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle add add sahf mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov add add lcall rol rcl fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb movsl stos add int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add add add lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov add enter fucom call add or sub xor cmp pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam (bad) in out hlt stc incl add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out add icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add add or daa sub inc dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push add imul mov mov mov (bad) in out hlt stc incb push add adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and add xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp add dec push push pop popa insb jno jl xchg add enter fucom call add push adc sbb cmp pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec add add pop imul mov mov mov (bad) jecxz out hlt stc incb push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop add add add jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add pop or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov add add scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec add pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos mov add add aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fnop in lock cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov iret aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out cmc cli incl unpcklps pop and aas inc dec dec push pop pop fs je jg mov movsl stos mov mov aad add loopne jmp cmc sti add or adc xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out add cli incl adc das xor dec push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop bound jb jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add add sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub add cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec add dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop add push jne addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add jbe addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle add mov mov (bad) in out hlt stc incb push adc push and das xor ds dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov add add mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl add mov rol rcl fsub out icebp add std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add enter fsubp call add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fiaddl add add in out cmc cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp add pop bound jb jl xchg lods mov mov xlat fucom out add idiv add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add add add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add add and inc inc dec push push pop popa imul addb mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub add xor cmp pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc add push pop pop fs je jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb cmpsb stos mov mov aad loopne jmp add cld add or pop sbb daa sub aaa cmp inc dec push push add insb jno jl xchg lods mov mov xlat fucom call add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl add add jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg add mov stos scas mov mov fnop in lock cli add and inc inc add push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg add add mov xlat fucom call add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test add add into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov cmpsb stos mov mov add add lret rcl fneni(8087 out lock add or push sbb cmp insw jae (bad) mov scas mov mov (bad) in out hlt cli incl unpckhps and sub cmp dec push pop pop bound jae jle mov stos mov mov aad loopne ljmp adc add adc das xor dec push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl je jle mov test ret leave into rcr fsubp call add or adc pop add add cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub add cmp push pop bound jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out lock add or push sbb sub cmp dec push add popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push add add imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov rol rcl fnop in lock cli incl pop and aas inc dec dec push pop pop imul outsl je jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl add addl mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec dec push pop pop gs jne jg mov add (bad) xchg lcall mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out in repz std add push adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods add int xlat fsub out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) lret (bad) in out hlt stc incb push adc push and das xor ds dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov add (bad) fndisi(8087 out icebp idiv add or push sbb sub add cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu add in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz clc std add or sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add add or push sbb es cmp dec push push pop pusha imul addl mov rol rcl fnop in lock cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc sbb and xor cmp pop pop bound jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa add sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor add aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fnop in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb and sub aaa cmp inc dec push push pop popa add add jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge mov lods mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop fs ja xchg add mov mov (bad) in out hlt cli incl unpckhps and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jno jl xchg add add (bad) lret rcl fneni(8087 in lock cli add and inc inc dec dec push pop pop fs je jg add movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov add rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add (bad) int xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec push push pop pusha gs jne jg mov stos scas mov mov add fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add stc incb or adc sbb cmp pop pop bound jb jge mov test mov mov xlat fucom out repnz add or add sbb cmp push pop bound jb jl mov cmpsl lods mov mov fcomp jecxz in repnz std add add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incb push adc sbb and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb lods mov mov (bad) fneni(8087 out lock sti add and add add add xor dec push pop add imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub add aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov add ret enter fsubp call add push adc sbb cmp add bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in lock sti add and inc inc dec push push pop pop add push jne jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or sub inc dec push push pop bound jb add add mov lods mov mov (bad) fneni(8087 out add idiv add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul add mov test (bad) leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub inc dec push push pop popa insb jno jl xchg add mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor cmp dec push push pop pusha gs jne jg mov add stos scas mov mov (bad) in out hlt stc incl unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push pop pop bound jb jge xchg cmpsl lods mov add fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pusha gs jne jg mov stos scas mov mov add add aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle test movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fadds add add fucom out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg test mov mov rcr fucom call add std add or sub dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or add add sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repnz std add or and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and sub add add cmp pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push add pop pusha add jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pop add add push jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge mov test add into rcr fsubp call add or sub dec dec push pop pop arpl jae jge mov add test mov mov fcomp loop in repnz add or daa sub dec dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa insb jno jl xchg add add mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov add mov rol rcl fnop in lock cli add push or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov add add lret fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam add add fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor cmp push pop pop imul mov scas mov mov (bad) jecxz jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jb jge mov test mov mov fcomp loop in repnz add add add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or add adc sbb es cmp dec push push pop popa imul addb mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add sub cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor add push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp add out cmc cli incl and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub inc dec push push pop bound add add jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es add cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb add jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb add add add add stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle test add add add add mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or sub dec dec push pop pop bound jb jge mov test add int fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov add int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov rcl fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov add add fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fneni(8087 in lock cli add pop and aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out cmc cli add add add unpcklps add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or sub dec dec push pop pop arpl jb jge mov test mov mov xlat fucom out repnz std add or add sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or daa sub aaa cmp inc dec push push pop bound insl jae jge mov test mov mov fcomp loop in repnz add or sub cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb aaa cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss add push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and inc inc dec push push add pop pop gs jne jg mov stos scas mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop add add add je jg mov stos scas mov mov (bad) in out hlt stc incl push adc pop and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push pop pop arpl jae add jle mov test mov mov std add or sub xor aas inc dec push push pop pusha imul addl mov mov fndisi(8087 out repnz add or pop sbb cmp inc dec dec push pop pop arpl jae jle mov test add mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov rcr fsubp call add push adc sbb cmp pop pop bound jb jge mov cmpsl lods mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub add out in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp add add sti add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp add or adc xor push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl pop and das xor cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl unpckhps and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and add das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc add add inc dec push push pop pusha gs jne addb mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push add push pop popa imul addl mov rol rcl fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop add push je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add fsubp jmp add push adc push and cs ds dec dec push pop pop imul add jns test movsb test (bad) leave iret aam (bad) jmp add push adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop fs je jg mov add movsl stos scas mov mov fcmovu in out cmc cli incl pop and cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov add mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol add add rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno add xchg cmpsl lods mov mov xlat add add jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add add or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov aam (bad) ljmp unpcklps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps add add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc add xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb and sub aaa cmp add dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push add push pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound add insl jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl add test movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae add jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov add add mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop fs jne jg mov stos scas mov rol rcl fneni(8087 jmp add push adc and inc inc dec push push pop popa data16 jno jl xchg scas mov mov fninit jmp idiv add push adc pop and aas inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov add add fsub out repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpckhps pop and cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add push or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb es aaa cmp inc dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc add sbb and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and add add xor push push pop pusha imul addb mov mov (bad) fsub out icebp idiv add or pop sbb es aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp add inc inc dec push push pop bound jb jge mov test mov mov fcomp loop in repz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push add add arpl jae jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fiaddl loope jmp idiv add or push sbb sub cmp dec push push pop popa data16 imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge add (bad) xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov add cltd sahf movsb test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das add push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl add stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop bound jb jge mov test mov mov ret rcr fucom call add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jle add movsl stos scas mov mov add fcmovu in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out add add icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb cmp pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add add or sub dec dec push pop pop arpl jae jle mov test ret leave into aam add in out cmc cli incl pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc cli add add xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub ds dec dec push pop pop arpl je jg mov test (bad) lret fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and inc inc dec push add add pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl add mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je add jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb add xchg lcall rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg add lods mov mov (bad) add loop in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov aam (bad) ljmp unpckhps and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub xor cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub add out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add incb or adc push and cs ds dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc add add xor push push pop pusha imul addb mov lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or add sub dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt cli incl unpcklps pop and das xor add add inc dec dec push pop pop fs je jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb cmpsb stos mov mov (bad) add loope in icebp idiv add or pop sbb daa sub aaa cmp inc dec add add add push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl add jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je add mov stos scas mov mov fneni(8087 in lock sti add and cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop bound jb jge mov xchg cwtl popf mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and aas inc dec dec push pop pop gs jne jg mov add add (bad) aad loopne ljmp adc sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge add mov mov (bad) jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor dec push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz add add add repz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam add in out cmc cli incl and inc inc dec push push pop popa imul addl mov rol rcl fsub out repnz add add or pop sbb daa sub inc dec push pop pop bound jae jle mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl add sbb and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub add add add add ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas add inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec push push add pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl add jns orl test mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul add add movsb test (bad) leave iret aam (bad) jmp add unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc sbb sub cmp dec push push pop pusha imul addb add add mov rol rcl fildl loop in repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos add lret fcmovu in out hlt cli incl unpcklps pop and das xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov roll (bad) int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repz std add or sub inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out add repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add add or adc pop and das xor aas inc dec dec push pop pop fs je jg mov xchg xchg fwait mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb xchg cltd sahf movsb test (bad) lret fnop in lock sti add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fnop in lock sti add and inc inc dec push push pop add imul addb cmpsb scas mov mov (bad) in out cmc cli incl pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb es ss inc dec push push pop popa data16 jno add mov lods mov mov xlat fsub out in repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop imul add (bad) xchg lcall mov fcmovu in out hlt cli incl unpckhps and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loop in repnz add or sub dec dec push pop pop arpl jae jge mov add ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl unpckhps pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub xor push push pop pusha imul add pushf mov mov add rcl fsub out repnz add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out in icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb add add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fcmovu in out cmc cli incl and inc inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc add push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das add push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb add add xor cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repnz std add or sub add inc dec dec push pop pop bound je jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or daa sub dec dec push pop add add insl jb jge mov mov scas mov mov (bad) jecxz out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul jo jnp xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg scas mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha gs jne addb add mov stos mov mov aad loopne ljmp adc xor cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jb jl xchg mov mov xlat fucom out repnz add or and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and cs aas inc dec dec push pop pop fs je jg mov stos scas mov mov fsub out repnz add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl je jg mov test (bad) leave add add aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa imul jl mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp push or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add add or daa sub inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb push add adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov ret rcl fucom call add or add add sub xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp add dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push add arpl jae jge mov test mov mov fcomp jecxz out repz incb or unpckhps pop and aas inc dec dec push pop popa insb jno jl xchg lods mov mov fcomp loop in repz std add or sub xor ds dec dec push pop pop imul add outsb je jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa imul addl add add mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound insl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul nop xchg add fwait mov mov (bad) fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out hlt stc incb push adc push and das xor aas inc dec dec push pop pop fs jne jg mov stos mov add mov rol rcl fneni(8087 in lock add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov add into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test rcr fsubp jmp add push adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in add cmc sti add and sub cmp dec push push pop pusha imul addl mov aam (bad) ljmp or sbb sub cmp dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or add push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repz incb or adc push and add sub dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor add aas inc dec add pop pop gs je jg mov test ret leave into rcr fsubp call add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp add push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc and sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push add add insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl outsb jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov add xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno add jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop imul add add test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov aad (bad) ljmp or adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov add (bad) lret rcl fneni(8087 in lock sti add and aas inc dec dec push pop pop gs je jg mov stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec add pop pusha gs jne addb movsl stos mov mov add aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop arpl jb jge mov cmpsl lods mov mov xlat fldl loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out add cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt cli incl sldt adc pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat faddl loop in repnz std add or add and sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and add xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and sub xor push push pop pop gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop imul mov lods mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop bound jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop fs jne jg add test movsb stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jb jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg xchg pushf mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pop gs jne jg mov stos scas mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop gs je jg mov add movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov add rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov add xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and inc inc dec dec push pop pop fs je jg mov test (bad) leave into aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or daa sub aaa cmp inc add pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec dec push pop pop gs jne jg mov test (bad) leave iret aam fsubp jmp add add or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock add add and sub xor push push pop pusha gs jne addb mov mov aad loopne ljmp adc xor dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and add cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add and add inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov fadds (bad) jmp add push adc push and xor ds add dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push add pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound add jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jp test movsl stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha gs jne jg add mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound insl jae jge mov cwtl popf mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pop gs je jg mov add (bad) lret fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas add rcl fndisi(8087 out lock add or adc xor push push pop pusha gs jne jg mov stos scas mov mov leave iret aam (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop add add repnz add add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp testl add add add add add or pop sbb daa sub aaa cmp push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add sldt add pop and das xor dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec add pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or add sub dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and cs aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jb jl xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push add arpl jae jle mov add (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle test movsb test (bad) lret fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add pop or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg add xchg popf mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and aas inc dec push push pop pusha gs jne addb movsl stos add lret rcl fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test mov mov add enter fsubp jmp add push adc pop and das xor aas inc dec dec push add imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat add add loop in repnz add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jl xchg lods add into rcr fsubp jmp add add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb add add daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor add cmp inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add add pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec add add add dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa add imul addl mov ret rcl fsub out repnz add or daa sub inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop add jo jp test movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge mov add add lods mov mov (bad) in out hlt stc incb push adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb add add (bad) lret rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov add (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov add vaddsubps fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb cmp pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or add sbb cmp inc dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in lock cli add add and inc inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul ja addl mov ret rcl fsub out repnz add or daa sub add aaa cmp pop pop bound jb jge mov test mov mov (bad) jecxz out repz incb push adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and inc inc add push pop pusha imul addl mov rol rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop add add je jg mov stos scas mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae add orl test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg xchg xchg pushf mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop add inc inc dec push push pop pusha imul addl cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop imul mov mov add mov (bad) in out hlt cli incl unpcklps and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov add fucom call add or sub dec dec push pop pop arpl jae add mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out in icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp cmc sti push or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push pop pop bound jae jge mov test mov mov add (bad) ljmp unpckhps add pop and aas inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub xor cmp pop pop arpl jae jge mov test mov (bad) in cmc cld add adc push and inc dec push pop popa push mov mov std add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall stos scas mov mov fcmovu in out cmc cli incl and sub aaa cmp inc dec push push pop arpl jb jge mov stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test les add add add add iret aam (bad) jmp add unpcklps pop and das xor aas inc dec push push pop pusha imul addl mov ret rcr fucom call add or sub dec push push pop pusha data16 jno jl xchg cmpsb lods mov mov fcomp jecxz add add out repz incb or adc push and xor ds dec dec push pop pop imul nop xchg lcall rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop arpl jae jge mov test mov mov sub cmp add add arpl jns test movsb stos scas mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop gs jne add add test movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push pop pop bound jb jge mov xchg cwtl popf mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha gs jne addb movsl add stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb aaa cmp pop pop bound jb jge mov test mov mov int fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) add add loopne jmp idiv add or pop sbb cmp pop pop bound jb jge mov test mov mov fcomp loop add hlt stc incb push adc push and cs ds dec dec push pop pop fs je jg mov stos scas mov mov fnop in add cmc sti add and inc inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insl jb jge xchg test mov mov fcomp loop in repnz std add add add or sub dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas add push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb aaa cmp push pop bound jb jge mov test mov mov (bad) jecxz out repz incb push adc push and das add add aas inc dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock sti add and sub cmp dec push push pop popa imul addl mov ret rcl fucom out repnz add or sub dec add dec push pop pop bound jae jg mov stos scas mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl add jae jle mov test (bad) leave into aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl add addl mov ret rcl fucom out repnz std add or and das xor aas inc dec dec push pop cmpsb lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) add add loope jmp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop add add repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop imul addb movsl add (bad) lret rcr fucom call add std add or and xor ds dec dec push pop pop bound jb jge mov test mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add add or adc das xor dec push pop pop imul (bad) xchg cltd lahf movsb test add lret fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test ret enter fucom call add or pop sbb aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec push add popa imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg stos mov mov (bad) fsub out icebp idiv add pop or pop sbb daa sub xor cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and cs add add push pop pop imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push add add pusha imul addb movsl stos scas mov mov (bad) in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov test mov add (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop imul add je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec dec push pop pop gs je jg add test movsb test (bad) leave into rcr fsubp call add push adc pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub inc dec push push pop popa insb jno jl xchg add lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne add fwait mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop arpl jae jge mov test add int xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pusha gs jne jg mov stos scas mov mov add (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov rcr fsubp call add or sub dec dec push pop pop bound jae jge mov cmpsl lods mov mov add xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fiadd jecxz out cmc cli incl pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb add int3 rcl fndisi(8087 out add lock add and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul mov scas mov lret rcl fsub out icebp idiv add or pop sbb aaa cmp pop pop arpl jae jge mov test (bad) lret fcmovu in out cmc cli incl and add add inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz std add or adc pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out repnz add or sub cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add push adc push and xor ds dec dec push add pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add add adc xor cmp dec push push pop popa imul add add jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb add mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa insb jb jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov add (bad) leave iret aam (bad) jmp add unpcklps pop and aas inc dec dec push pop pusha add jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test add mov aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg test mov mov aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out add in repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp jecxz in repz std add or add add sbb cmp inc dec dec push pop pop arpl jae jle mov test (bad) leave into rcr (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in lock sti add and xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or adc sbb cmp pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop add insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa data16 add jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge xchg test mov mov rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul test movsb adc sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp testb add add or push sbb and inc inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov stos mov mov aad loopne jmp cmc cli add or adc das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp unpcklps add pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop xor xor dec push pop pop gs je jg mov add (bad) aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp add inc inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb daa sub ss inc dec add pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom call add or daa sub inc dec push push pop add add insb jb jl xchg stos mov mov (bad) fneni(8087 out lock sti add pop and inc inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call incb or adc push and xor ds dec dec push pop pop arpl add add js orl cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop arpl jb add jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jb jge xchg add lods mov mov (bad) fndisi(8087 out lock add and cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov add cwtl popf mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop imul mov add ret enter fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov add rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl add (bad) lret rcl fneni(8087 out lock add or push sbb sub xor push push pop pusha imul addb cmpsb stos mov mov add add lret rcl fneni(8087 in lock sti add and inc inc dec push push pop pop gs jne jg mov stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov add add (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in add hlt add incl pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov rcl fsub out icebp idiv add or pop add add daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop add insl jb jge mov test mov mov fcomp loop in repz std add or sub add add dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb aaa cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop gs je jg mov test rol rcl fnop in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps push and cs ds dec dec push pop pop add add je jle mov test ret leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add push adc pop and das xor dec push pop pop gs jne add add test movsl stos mov mov aad (bad) ljmp unpckhps pop and add dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg add lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg test add add int fcomp loop in repnz std add or sub xor ds dec dec push pop pop fs jne addb cmpsb stos mov mov xlat fsub out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg lods mov mov add add fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov stos mov mov (bad) fndisi(8087 out icebp testl sbb daa sub aaa cmp inc dec push push pop arpl jae jge mov test mov mov fcomp loop out hlt cli incl adc sbb sub dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp or pop sbb sub xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add add adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl cmp pop pop arpl jae addb mov (bad) lret roll add add loope lock sbb sub aaa cmp pusha push mov mov ror (bad) fsub ljmp sbb sub ds dec push pop bound jbe test mov loopne in icebp idiv add or push sbb sub cmp dec push push pop add add jnp test movsl stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul add add movsb stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add mov mov fcomp jecxz out repz incb or adc sbb outsb je jg mov test (bad) leave into aam (bad) jmp add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fiaddl add (bad) ljmp unpckhps pop and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb add add push adc and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov ret rcl fsub out repnz add or pop sbb daa sub add add aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp add push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push add pop popa insb jb jl xchg leave rcl fsubp in repnz std add or daa add xor cmp pop pop arpl je jle mov test ret leave into rcr fsubp call add or sub xor ds dec dec push pop pop arpl jae jle mov add mov fcomp loop in repnz add or pop sbb es cmp inc dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul mov add add into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb mov mov aad loopne ljmp unpcklps push and cs inc dec dec push pop gs jae orl ret enter fucom call add add repz std add push adc sbb cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp testl cld add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add add adc xor dec push pop pop imul mov scas mov mov fcomp loop in add stc incb or adc sbb cmp inc dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or add sbb cmp pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc sub xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul mov mov mov aam (bad) ljmp unpcklps pop and das xor add add cmp inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or daa sub inc add push pop bound jb jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop add push jne addb movsl stos mov mov aad loopne ljmp adc sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa imul add add add jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle add popf mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov mov aad loopne ljmp or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test mov rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave add rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds add push pop pop fs je jg mov stos mov mov (bad) fildl loope jmp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add idiv add or sub dec dec push pop pop add je jle mov test (bad) leave iret aam (bad) jmp add push adc pop and cs aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add add or adc pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpckhps add and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop imul addb movsl stos mov mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub xor cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc sbb cmp pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop add add pop bound jb jge xchg test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp add jmp add push adc push and xor ds dec dec push pop pop arpl add add js orl test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl jb jge mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jge add popf mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add add mov mov (bad) fsub out icebp idiv add or push sbb es xor cmp push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push pop pop arpl jae jge mov add add ret rcr fucom call add or sub dec dec push pop pop bound add jle mov add (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov add aam fsubp jmp add unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add add int fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jge mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov add add add (bad) ljmp or adc xor cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne add lock cli add pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub xor push push add insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb add add sub ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb es add cmp inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add and inc inc dec add pop pusha imul addb movsl add (bad) int3 rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or daa sub inc dec push push pop add bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jbe addb movsl stos mov mov aad loopne jmp idiv add and add dec push push pop popa data16 jno jl xchg stos mov mov rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl add addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha gs jne addb xchg lcall mov fcmovu in out cmc cli incl and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov movsl stos scas mov mov fcmovu in out hlt cli incl lldt xor cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs ja addl add add rcl fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol add add rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha imul addb movsl mov rol rcl fneni(8087 out add add lock add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp add add pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or add add sbb and xor cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) jecxz out hlt stc incb push adc push and add sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and sub add pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub inc dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec add add pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop add arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or sub dec dec push pop pop arpl jae add add orl movsb test (bad) leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add push adc push and xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs aas inc dec dec push pop pop imul mov add into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov add enter fucom call add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat add loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul orl mov rcr fucom call repnz add or daa sub aaa cmp inc dec push push pop bound jno jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jge mov test mov mov fcomp loop in repz std add sldt add add das xor aas inc dec dec push pop pop fs jne addb scas mov (bad) fnclex ljmp sbb and xor ds dec dec push pop pop fs jae (bad) xchg cltd mov (bad) fucomip idiv add das xor push push pop pop gs jne jg mov add add add cltd sahf movsb test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz or sbb sub xor ds dec dec push pop pop arpl jae jle mov test mov add add fcomp jecxz out repz incb or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter add jecxz out repz incb or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jae jge mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz add or sub inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz add add or daa sub inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz add or add sbb cmp push pop bound jb jge xchg test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub add add aaa cmp push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov fcomp jecxz in repnz std add or sub add add push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop add add imul mov scas mov mov (bad) jecxz out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out hlt stc incb push adc push and cs ds dec dec push pop pop imul add je jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov sahf movsb test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov add add rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp inc dec dec push pop pop arpl jae jle mov stos scas mov mov loop icebp clc incl push adc sub cmp inc dec push pop imul mov mov in hlt cld add adc and das ss popa imul fwait mov mov aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov add add (bad) lret rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl je jle mov test ret leave into rcr fsubp add jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz cld add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or add adc sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop add add add cs ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub add add cmp pop pop bound jb jge mov cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc add add pop popa imul addl mov rol rcl fndisi(8087 out lock add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov mov fnop in lock cli incl pop and aas inc dec dec push pop add add push jne jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out hlt stc incb or adc push and xor ds dec dec push pop pop arpl add jae jle mov test mov mov fcomp jecxz in repz incb or adc push and xor cmp pop pop arpl jb jge mov cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jl add xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg fwait mov mov (bad) fneni(8087 out lock add or adc xor cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor dec push pop pop gs jne jg mov stos add scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop imul mov scas mov mov add ret leave into rcr fsubp jmp add push adc push and xor cmp pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push pop pop bound jb jge xchg cmpsl lods mov mov add add fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne add ljmp adc das xor dec push pop pop gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam fsubp jmp add incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg test mov mov xlat fucom out repnz add or add add pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and and inc inc dec push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out hlt stc incl unpcklps xor ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out cmc cli incl pop and das xor aas inc dec dec push pop pop add add add fs je jg mov stos scas mov mov (bad) in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul add add orl test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps push and cs ds dec dec push pop pop imul add add test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov add mov mov fcomp jecxz out repz incb or adc sbb cmp inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov rcr fucom call add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov add int fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat faddl loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz idiv add or daa sub inc dec push push pop bound jb jl mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out repnz add add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es add add add ss inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc add push pop pop imul mov scas mov mov (bad) jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push add imul addb movsl stos mov mov aad (bad) ljmp adc das xor dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl add js (bad) mov cmpsl lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add or push sbb and inc inc dec push push pop pusha gs jne add lcall mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov xchg cwtl sahf mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol add rcl fneni(8087 out lock add or push sbb sub xor push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul (bad) xchg lcall rol rcl fneni(8087 in lock idiv add or push sbb sub ss inc dec push push imul nop xchg lcall rol rcl fneni(8087 in lock sti add or push sbb xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or pop sbb aaa cmp push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb push adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge mov add add test mov mov fcomp jecxz out repz incb or adc pop and cs aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp cmc sti add and sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock sti add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov add add add (bad) int3 rcl fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) add add loope jmp idiv add or push sbb es ss inc dec push push pop popa insb jb jge xchg test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl je jg mov stos scas mov mov fcmovu in out add cli incl and inc inc dec push push pop pusha imul addl mov ret rcl fucom out repnz std add or sub xor ds dec dec push pop pop arpl je jle mov stos scas mov mov fnop in lock cli add add adc xor cmp dec push push pop popa imul addl mov ret rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and add add add add das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repnz std add or sub xor add inc dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out repnz add or pop sbb aaa cmp push add push (bad) mov test mov mov fcomp jecxz out hlt stc incb push adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl fnop in lock add or push sbb es ss inc dec push push pop popa insb jno add addl mov ret rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and aas inc dec push push pop pusha gs jne addb add stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov add test mov mov xlat fucom out repnz add or pop sbb daa sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol add add aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub dec dec push push pop bound jb jge mov cmpsl lods mov mov xlat faddl add out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl je jle mov test ret enter fucom call repz std add or daa sub inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl add add unpcklps pop and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or pop sbb aaa cmp push pop bound jb jl xchg pop sub cmp dec push pop arpl jp xchg mov mov loop icebp clc incl or xor cmp pusha outsb ja test movsl stos mov mov aad loopne ljmp add add add and inc inc dec push push pop pusha imul jl xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repnz add add add daa sub inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or add and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and sub dec dec push pop pop arpl jae jle mov test mov mov aam (bad) ljmp unpcklps pop and das add aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and das xor aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc add dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom call add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out repnz add or add sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop bound add insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jnp add add fwait mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc xor cmp dec push push pop pusha add jno jl xchg add add lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addl add rol rcl fneni(8087 out lock add or push sbb sub xor push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov add add add add (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop popa imul addb cmpsb stos mov mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg stos mov mov add add rcl fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad add in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add sti add pop or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop add sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push add bound jb jge mov test mov mov fcomp jecxz in repz std add or sub add dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor add add add dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push add pop pop arpl jae jle mov add (bad) leave iret aam (bad) jmp add unpcklps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pusha add add jne addb movsl stos mov mov aad loopne jmp cmc sti add es dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa data16 jno jl xchg mov stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl add and inc inc dec push push pop pusha imul addb add lcall rol rcl fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and das xor aas inc dec dec push pop pop gs jne jg mov stos add add lret rcl fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test les add leave iret aam (bad) jmp add unpckhps pop and inc inc dec push push add data16 jno jl xchg lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov stos scas mov mov fiaddl add in out cmc cli add and inc inc dec push push pop pusha imul addl mov ret rcl fsub out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) in out hlt add incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov aam (bad) jmp add add adc pop and das xor push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or daa sub dec dec push pop pop arpl jae jge mov test ret leave into aam fsubp ljmp unpcklps pop and sub xor push push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub inc dec push pop pop bound jae jge mov test mov mov (bad) jecxz out hlt stc incl unpcklps pop and das xor aas add add dec push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or add sbb cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov (bad) jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne ljmp adc xor push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop bound add jge add mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb add add mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test add aam (bad) jmp add unpcklps pop and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov rcl fsub out repnz add or daa sub dec dec push pop pop arpl jae jge mov test (bad) leave add aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz add add jmp add push adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add add or add cs aas inc dec dec push pop pop imul (bad) xchg lcall mov fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or add add push and xor ds dec dec push pop pop arpl je jle mov test (bad) lret fcmovu in out cmc sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub add add xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addl pushf mov mov fcomp loop in repnz std add or sub xor ds add push pop pop imul (bad) xchg lcall mov fnop in lock sti add and sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop add outsb je jle mov test (bad) lret fcmovu in out hlt cli incl and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fild in lock sti add and sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl je jle mov add add mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or pop sbb aaa cmp pop pop bound jae jge mov test add scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec dec push pop pop arpl jae jle mov test add (bad) lret fcmovu in lock cli add and inc inc dec push push pop pusha imul addl mov ret rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor dec push pop pop gs jne addb movsl stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out repnz add cld add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add add pop or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop add add es ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out in icebp idiv add or pop sbb daa add sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp add inc inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub xor push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub add inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb add add lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos mov add mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) aad fneni(8087 out lock add or adc xor push push pop pusha gs jne addb movsl stos mov mov vaddsubps fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc cli add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov add add loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in add cmc cli add pop and cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp add add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl sldt adc das xor dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc pop and das xor aas inc dec dec push pop pop imul mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop add and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor cmp inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec add dec push pop pop arpl jae jge mov test mov mov rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push push pop bound add jb jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or and sub dec dec push pop pop arpl jae jge add add add orl test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov add mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg add add int3 rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa add jb jge xchg lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov add fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov rol rcl faddl add out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add sti add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add add adc xor cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add push or push sbb sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push add and sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add and add xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp sbb sub cmp inc dec push pop arpl js cmpsb mov ret lret loopne lock pop push adc cmp dec push pop add jl mov mov rol roll fchs out hlt sti add adc and das xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp add unpckhps pop and xor push push pop pop gs je jg mov stos scas mov mov fnop in lock add or push sbb sub ss inc dec push push pop bound jno jl xchg test mov mov (bad) jecxz out repz incb push adc add push and das xor aas inc dec push push pop pop imul addl mov ret rcl fucom out add clc incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incl unpcklps pop and das add add inc inc dec push push pop popa imul addl mov ret rcr fsubp jmp add and sub cmp inc dec push push pop bound je addb cmpsl lods mov mov (bad) in out hlt cli incl and sub dec dec push pop pop gs jne (bad) mov lods mov mov (bad) out repnz incl adc sbb cmp inc dec push push pop arpl je addb test enter (bad) jmp idiv add or pop sbb cmp dec push push pop popa insb jb jg mov xchg xchg pushf mov add (bad) lret rcr (bad) in icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) mov stos mov mov (bad) fndisi(8087 out repnz incb or adc push and das xor inc inc dec repz incb or sub xor push push pop popa data16 jno add jge mov stos mov mov (bad) fndisi(8087 out repnz std add push adc xor cmp inc dec push pop pop fs je jg mov scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb add add ret rcr fucom call add and sub dec dec push pop pop arpl jae jg mov lods mov mov aad loopne ljmp adc sbb daa sub cmp pop pop bound jb jge mov stos scas mov rol add lret fneni(8087 in lock cli add or push sbb es aaa cmp pop pop arpl jae jle mov test ret leave into aam fsubp jmp pop or sbb and cs ds dec dec push pop pusha gs jbe addl mov fcmovu in lock cmc sti add or push sbb es inc dec push pop pop arpl je jg mov stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov stos scas mov mov fcmovu in out cmc cli add add sbb sub add pop pop gs js test test mov rol rcr fsubp ljmp adc and cs push pop pop imul test cmpsl lods mov mov fndisi(8087 out repz incb unpckhps sub xor aas inc dec push push pop add insl jae jle mov scas mov mov fndisi(8087 out repz incb or adc and sub aaa cmp inc dec push pop pop fs ja test mov ror fnclex ljmp sbb cmp inc dec dec push pop pop fs jne addb movsl stos mov add add add add (bad) in out hlt cli add and sub aaa cmp inc dec push push pop arpl jae jle mov test (bad) leave into aam (bad) jmp add adc push sbb daa sub dec dec push pop popa outsb jae lea lods mov mov idiv add add add add sbb es aaa ds dec push pop pusha insb jb jle mov scas mov ret rcr fsubp jmp pop or sub ss inc dec push pop pusha push mov mov mov (bad) in lock add and cs inc inc dec push pop pop data16 jne add add xchg stos mov mov fsub out icebp idiv add or sub cmp dec push pop pop bound jae jg mov mov mov fnop out repnz std add unpckhps and sub cmp inc dec push push pop pusha data16 ja mov mov xlat add add loop in repnz std add adc sbb cmp pop bound jle mov (bad) into fsub jmp push or pop sbb cmp dec push push pop arpl jae jg mov stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl je jle mov stos scas mov rol rcl fsub call add push adc push and xor aas inc dec push push pop popa insb jb jge mov test ret leave into rcr fsubp ljmp adc sbb sub cmp dec push push pop popa data16 add insb jno jl xchg cmpsl lods mov mov (bad) jmp idiv add movhps daa sub aaa cmp pop pop gs jnp xchg scas mov ret aad loope in repnz add or add xor cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz std add or sub xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov add add add add int3 rcl fsub out repnz add adc and xor ds dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb es aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) jmp add add hlt stc incb push adc push and xor ds dec dec push pop pop arpl jb jge mov mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt add incb or adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add add or sub inc dec push push pop bound jb jge xchg lods mov mov xlat loopne lock add push adc push and cs ds dec dec pop pop bound jge mov scas mov vpmullw out cmc std add and xor inc inc dec push pop gs je add jge mov mov fsub jmp cli add movhps and dec push pop popa imul fwait mov (bad) int fsub in repz add adc sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or add sbb cmp pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb add sub aaa cmp inc dec push push pop popa insb jno jle mov mov fucom call add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos scas mov mov fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae add mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb cmp pop pop arpl je jle mov stos scas mov mov fneni(8087 in icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov add add mov aad (bad) ljmp adc sbb es aaa cmp inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) ljmp adc sbb sub ss inc dec push push pop bound jb jge mov test mov add mov (bad) in out hlt stc incl unpcklps and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz jmp add and inc inc dec push push pop popa insb jno jl xchg test mov mov add (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec push push pop pusha imul addl mov ret rcr fucom call add incb or adc push and das xor aas inc dec dec push pop pusha imul addb cmpsb lods mov mov xlat fucom call add push adc push and cs aas inc dec dec push pop pop gs jbe addb cmpsb lods mov mov xlat fucom call add push adc add add push and xor ds dec dec add pusha imul addl mov ret rcr fucom call add push adc push and cs aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz std add or sub add xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fsub out icebp idiv add or pop sbb aaa cmp pop pop arpl jae jle mov test mov mov (bad) in out hlt cli incl and inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov add fucom call add push adc push and cs aas inc dec dec push pop pusha add add jbe addb cmpsb lods mov mov xlat fucom call add push adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb cmp pop pop arpl jae jle add add movsb test (bad) lret fcmovu in lock sti add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpckhps and inc inc dec push push pop pusha imul addl add ret rcl fucom call add push adc push add inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall add rol rcl fneni(8087 out lock add or push sbb daa sub aaa cmp pop pop bound jae jge mov test (bad) leave into aam (bad) jmp add unpckhps pop and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fadds fucom call add push adc push and das xor aas inc dec dec push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or sub dec dec push pop pop imul mov stos mov mov xlat fsub out repnz add cld add or sub dec dec push pop pop arpl je jg mov stos scas mov rol rcl fneni(8087 in lock add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl sldt adc pop and inc inc dec push push pop pusha imul addb cmpsl lods mov mov xlat fucom call add push adc push and cs ds dec dec push pop pop fs jne jg mov stos mov mov (bad) fsub out icebp idiv add or pop sbb add xor cmp pop pop arpl je jle mov stos mov mov aad loopne jmp repnz add or sub dec dec push pop pop arpl je jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp add dec push pop pop arpl jae jle mov test (bad) lret fnop in lock add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) ljmp adc sbb sub ss inc dec push push pop popa add add jl xchg test mov mov (bad) jecxz out hlt cli incl unpckhps pop and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb unpcklps pop and das xor aas inc dec push push add data16 jno jl add mov mov fcomp jecxz out repz incb unpcklps pop and das xor push push pop pusha imul addl mov ret rcl fucom call add push adc push and cs aas inc dec dec push pop pop gs jne addb add rol rcl fsub out icebp idiv add or sub xor ds dec dec push pop pop arpl je jg mov stos scas mov mov fneni(8087 in lock add or push sbb daa sub aaa cmp pop pop arpl jae jle mov test add add lret fcmovu in lock sti add and sub ss inc dec push push pop bound jb jge mov test mov mov aad loopne ljmp adc sbb es ss inc dec push push pop bound jb jge mov test mov mov flds add in out hlt cli incl and inc inc dec push push pop popa data16 jno jl xchg test mov mov fcomp jecxz out repz incb unpcklps pop and das xor aas inc dec push push pop pusha imul addl mov ret rcr fucom call add incb or adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb lods mov mov xlat fsub out repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg fwait mov mov (bad) fsub out icebp idiv add or add xor ds dec dec push pop pop fs jne jg mov stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl je jg mov stos scas mov rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub add cmp pop pop arpl jae jle mov test (bad) lret fnop in lock sti add or push sbb sub ss inc dec push push pop bound jb jge mov test mov mov (bad) in out cmc cli incl and inc inc dec push add popa data16 jno jl xchg lods mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pusha gs jne addb mov mov fcomp jecxz in repz incb or adc pop and das xor aas inc dec dec push pop pop gs jo jp test cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli add and sub cmp dec push push pop popa insb jno jl xchg add mov lods mov mov fcomp jecxz out repz incb push adc pop and inc inc dec push push pop pusha imul addl mov fcmovu in out cmc cli add and inc inc dec push push pop popa imul addl add mov mov xlat fsub out repnz add or adc push and xor ds dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov add enter fsubp call add push adc push and cs aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jae jge mov test mov mov (bad) add add jmp add push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop add outsb jae jle mov test (bad) lret fcmovu in out cmc add add and inc inc dec push push pop popa imul addl mov ret rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov stos scas mov mov fcmovu in lock cli add adc xor push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl and add xor push push pop popa imul addl mov add enter fsubp jmp add push adc push and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad loope jmp idiv add or push sbb daa sub aaa cmp add add push push pop bound jb jl xchg test mov mov fcomp jecxz out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop add add insl jae jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and aas inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb and xor ds dec dec push pop pop arpl jae jns test movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov xchg cltd sahf movsb test (bad) lret fcmovu in out hlt cli incl pop and inc inc dec push push pop popa imul addl mov ret rcl fsub out repnz add or sub dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fimull push pop pop arpl jae jle mov test (bad) leave iret aam (bad) add lock sti add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and add xor push push pop pusha gs jne addb movsl stos scas mov mov fnop in lock cli add pop and aas inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out cmc cli incl unpcklps pop and das xor add add inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and xor cmp inc dec add add dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop add outsb jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae add orl test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jge add movsb test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle add mov test ret enter fsubp call add push adc push and xor cmp pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov add mov rcr fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop popa data16 jno jl xchg cmpsb stos add lret rolb xlat fsub out icebp idiv add push sbb daa sub ds dec dec push pop pop fs jne addb cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push add bound jb jge mov test mov mov add add add fsubp jmp or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jb jl xchg mov mov (bad) in out hlt stc incb push add add pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov rcl fsub out repnz add or sub inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock cli add and add inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc xor inc dec push push pop popa imul addl mov ret enter fsubp jmp add unpcklps pop and aas inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub dec dec push pop add add add add push jg mov test (bad) lret fcmovu in out hlt cli incl and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop imul add test mov mov aad loopne jmp idiv add or push sbb es ss inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz incl unpcklps pop and das xor dec push pop pusha imul addb add mov stos mov mov xlat fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) lret (bad) fneni(8087 out lock add or push sbb es aaa cmp inc dec push push pop bound jb jge mov add add mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out add clc std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov aad loopne jmp cmc sti add or push sbb sub inc dec dec push pop pop fs jne jg mov stos mov mov xlat fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test (bad) add add fcmovu in lock cli add and sub cmp dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in lock sti add or push sbb sub cmp dec push pop pop arpl jae jle mov add (bad) aad loopne ljmp add add adc sbb sub ss inc dec push push pop popa insb jb jl xchg lods mov mov fcomp loop in repz std add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out icebp idiv add or daa sub add inc dec dec push pop pop arpl jae addl mov rol rcl fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and sub cmp dec push push pop add add insb jb jge xchg test mov mov fcomp jecxz out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pusha imul addl mov ret rcl fucom out repnz std add or sub xor ds dec dec push pop pop fs je add add mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop add outsb jae jg mov stos scas mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov add mov mov fcmovu in out cmc cli add and inc inc dec push push pop popa imul addl mov ret rcr fucom call add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov add rcl fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov (bad) jecxz out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov int xlat fsubp jmp add unpcklps pop and das xor push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop imul addb cmpsb stos mov mov (bad) fneni(8087 out add idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fucom out repnz add or sbb cmp pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc pop and das add add aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor add dec push push pop bound jb jge xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop add add add outsb jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas add rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul add addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul add add test (bad) leave iret aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov add movsb stos scas mov mov fcmovu in out hlt cli incl or adc xor push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp dec dec push pop imul xchg mov mov add rcl fsub out icebp idiv add sub cmp dec push pop fs jae orl leave rcl fsubp out cmc cld add adc and xor inc inc dec push pop insw je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc add push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out add idiv add or daa sub dec dec push pop add add push orl test (bad) leave rcl fsub out in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs aas inc dec dec push pop pop imul jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl add mov lods mov mov xlat fsub out repnz add or daa sub add push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add and sub cmp dec push push pop popa imul addl add mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop add je jg mov stos scas add aad loopne ljmp adc sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov add add into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fildl add add add loope jmp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov rcr fucom call add or sub xor ds dec dec push pop pop arpl outsl je jg mov stos scas mov mov fcmovu in add add cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add add or pop sbb daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add or adc add add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov rcl fucom out repnz add or daa sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and add xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or daa sub dec dec push pop add imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add lldt xor push add add pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound insl jb jge xchg test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul add test movsb test rol rcl fneni(8087 in lock add or push sbb sub cmp dec push push pop pusha add jno jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov add xchg cwtl popf mov mov (bad) jecxz out hlt stc incb push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne addb movsl add add (bad) aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add pop or sub dec dec push pop pop bound jae jge mov test mov add aam fsubp jmp add unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fnop in lock cli add and sub cmp dec push push pop pusha imul addl mov rol add rcl fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa imul pushf mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp add idiv add or pop sbb daa sub aaa cmp inc dec push push pop add insl jae jge mov test mov mov fcomp jecxz in repnz std add or and xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc sbb and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jae jle mov test scas mov mov (bad) in out hlt stc incl unpcklps pop and sub xor aas inc dec dec push pop pop add jo jp test movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and cmp dec push push pop pusha gs jne addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec add pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp testb add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods add int fcomp jecxz in repz std add or sub dec dec push pop add pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl add add add jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds add push pop pop gs jne jg add add add movsb stos scas mov mov fcmovu in out hlt cli add push or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg pushf mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp push pop bound jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec add pop pop fs je jg mov test add aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov add add aad (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pusha gs jne addb movsl stos scas mov mov fcmovu add add jmp idiv add and inc inc dec push push pop pusha imul addb mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov (bad) in add out hlt stc incb or adc push and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp add incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or add cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam add in out cmc cli add add add unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret (bad) in out hlt stc incl unpcklps add add and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and add add xor ds dec dec push pop pop arpl add test movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc inc dec push push pop popa insb jb jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor dec push pop pop gs jne addb movsl stos mov mov rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound insl jb add mov test mov mov (bad) jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out icebp idiv add or daa sub dec dec push pop pop arpl je jle mov stos scas mov mov fcmovu in lock cli add and sub cmp dec push push pop popa insb jb jl xchg add popf mov mov fcomp jecxz out repz incb or adc add and das xor push push pop pusha imul addl mov ret rolb fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jge mov test mov mov add leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jns test movsl stos scas mov rol rcl fildl add in lock sti add or push sbb sub xor cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fnop in out add cmc cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub inc dec push pop pop bound jae jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor dec push pop pusha gs jne addb cmpsb stos mov mov rcr fucom call add or sub xor ds dec dec push pop pop imul mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb and sub dec dec push pop pop arpl jae (bad) mov stos mov mov aad (bad) ljmp adc das xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor add inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and daa sub ss inc add pop popa imul addl mov rol rcl add loope in icebp idiv add or push sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor dec push pop pop gs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul add add add outsb jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub dec dec push push pop bound outsb jae jle mov test mov mov fcomp jecxz in repz std add or and xor ds dec dec push pop pop arpl jae add orl test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge mov test mov mov xlat fucom out repnz std add or daa sub inc dec push push pop bound jb jge xchg add add add lea lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne addb add mov mov rol rcl fneni(8087 out lock sti add and inc inc dec push push pop pop add jbe addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne jg mov add add (bad) aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jb jge mov test mov add add fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp testl adc sbb aaa cmp push pop bound jb jl xchg lods add add int fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat add add loop in icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp add add cmc sti add and inc add push push pop popa imul addb cmpsb stos mov mov aad loopne jmp testb add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add add add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc das xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add add adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg mov scas mov mov fcomp jecxz in repz std add or add sbb cmp push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb add add add xor cmp inc dec push push pop popa imul addb movsl stos mov mov (bad) fucom ljmp and aas inc dec dec push pop pusha gs jne addb cmpsl mov mov (bad) in out hlt cli incl unpckhps and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz adc push and xor inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov add cltd sahf movsb stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov fsub out repnz add or pop sbb daa sub aaa cmp pop pop add outsl jne jg mov test add add aam jecxz icebp idiv add or pop push add xor ds dec dec push pop pop arpl jae jle mov stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop pusha imul addb lods mov mov fadds fucom call add adc das xor dec push pop pop gs jne jg mov stos scas mov mov (bad) out cmc cli add and inc inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp testb sti add or pop sbb es aaa ds dec push pop pop arpl jae jle mov test (bad) int3 rcl add loop in repz std add push adc push and cs ds dec dec push pop pop fs je jg lea mov mov (bad) fndisi(8087 out icebp idiv add or sbb add sub cmp push pop popa push nop xchg lcall rol rcl fnop in lock cli add and inc dec push push pop gs jne addb movsl stos mov mov fcomp loop hlt stc incb push adc push and cs ds dec dec push pop pop imul add jns test movsb stos scas mov mov (bad) in hlt cli incl unpckhps pop and aas inc dec dec push pop pop insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop fs js jle mov add test (bad) lret (bad) out icebp idiv add or pop sbb daa sub add ds dec dec push pop pop arpl je jle mov test (bad) lret fnop in lock sti add or push sbb sub ss inc dec push pop bound jb jge xchg test add add lods mov mov fnop out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fsub call add push adc push and cs ds dec dec push pop popa imul addl mov rol add rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fnclex call incb unpcklps pop and das xor aas inc dec dec push pop pusha insb jno jl xchg add lret rcl fndisi(8087 out add add icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add pop or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov ror xlat fsub out repnz add or add add xor ds dec dec add gs jne jg mov stos scas mov mov fnop in lock cli add sbb sub cmp dec push push pop pusha imul addl mov ret xlat fsub out repnz add or sub inc dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb jge xchg test mov mov xlat fucom out repnz add adc sbb cmp pop pop add add outsb jne addb movsl scas mov fimul cli movsb scas mov (bad) rcr loopne lock push push push sbb jg xchg xchg popf movsb stos mov mov fnclex call pop or jo jge mov scas mov ror aam fsub jmp or adc and sub add dec push pop pop data16 jb jg mov mov mov fucom ljmp push sbb cmp dec dec push pop popa push xchg lods mov mov (bad) in repnz incb and xor cmp pop arpl jbe (bad) mov scas add add fchs out repz incl or sbb and inc dec push push pop imul test test enter loop out hlt sti add or sub cmp inc dec push pop pop gs jb jg mov mov mov fucom jmp or adc add add cs inc inc dec push pop pusha insl jae addb lock sti add and inc inc dec add pop popa insl jb jle mov mov mov ret xlat in pop gs jne orl mov (bad) in out hlt stc incl cwtl mov ror (bad) fsub jmp cli add adc sbb cmp pop popa imul sahf movsl lods mov (bad) lret rcr loop out idiv push push adc cmp bound js (bad) mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop popa jg mov stos scas mov rol rcl fneni(8087 in lock add or adc xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor inc dec dec push pop pusha imul addb add add add xchg xchg fwait mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov add add ret leave into rcr fsubp jmp add add adc pop and das xor push pop pusha gs jne jg mov stos mov mov (bad) fneni(8087 out lock add and sub xor push push pop pusha imul addb movsl stos mov mov add fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop outsb jne addb movsl stos mov mov xlat fsub out repnz add or pop sbb daa sub dec dec push pop pop bound jb jge mov test mov mov fadds fsubp call add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and aas inc dec push push pop pusha imul jbe (bad) mov lods mov mov (bad) in out hlt stc add or push sbb sub cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp add adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb add sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov ret rcr fucom call add push adc push and xor dec add add pop popa insb jb jl xchg lods mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fnop in lock cli add and sub aaa cmp push pop bound add ja (bad) xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl push jne jg mov stos scas mov mov fsub jmp idiv add or push sbb sub cmp dec push pop pop arpl jae jle add add mov mov fcomp jecxz out repz incb push adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and sub cmp dec push push pop popa imul addl add rol rcl fsub out icebp idiv add or sbb and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov add (bad) lret add xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg lods mov mov fcomp loop in repnz incl push adc push and sub dec dec push pop pop arpl jae orb mov ret fcomp out cmc add cli incl pop and inc dec push pop popa imul xchg pushf mov mov fninit jmp sti add adc xor push push pop bound jnp mov mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov (bad) lret rcr loopne jmp cmc sti add and inc dec dec push pop pop arpl jae jle mov mov (bad) int3 aam loop icebp clc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov cwtl sahf mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop arpl jae jge mov test add add enter fucom call add or sub dec dec push pop imul mov stos mov mov aad fndisi(8087 out lock add or push sbb sub cmp dec push push pop popa insb jno jl xchg test mov mov add add rcr fucom call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add add add or pop sbb xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam loope jmp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz std add or add add adc sbb cmp pop pop arpl jae jge mov test (bad) leave into aam fsubp jmp add push adc pop add inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop bound add test movsb test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor add cmp inc dec dec push pop pop gs je jg mov stos scas mov mov fneni(8087 in lock sti add and sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec add pop bound jb js orl test mov mov fcomp in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop add je jg mov stos scas mov mov aad loopne jmp idiv add or push sbb sub cmp dec push pop pop bound jae jge mov test mov mov add (bad) ljmp adc xor push push pop pusha gs add jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov add add test (bad) leave into aam fsubp jmp add unpcklps pop and das xor dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add and sub ss inc dec push push pop popa data16 jno jl xchg add add rol rcl fsub out repnz add or pop sbb daa sub inc dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb movsl stos mov add add aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl je jle mov stos scas mov mov add fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addl mov rcr fsubp call add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in add cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa add imul mov mov mov fcmovu in out cmc cli add add pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repz std add or sbb cmp or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fildl add out lock sti add and inc inc dec dec push pop pop add insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out add lock add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock sti add add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop fs je jg mov test int xlat fucom out repnz add or add add aaa cmp push pop bound jb jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli add and xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz incb or adc push and xor ds dec add add pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor dec push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa push orl test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov add mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg add add int3 rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov movsl stos mov mov add rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov add fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in add repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test add lret rcl fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add add add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out cmc cli incl pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fucom out repnz std add or and das add aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb cmp inc dec add pop pop imul (bad) xchg lcall mov fnop in lock cli add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb cmp pop pop arpl add add jae jge mov test mov mov (bad) jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl addl mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov add add scas mov mov fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl add add int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg fwait mov leave add fcomp in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov stos mov mov aad loopne ljmp adc xor dec push pop pop gs jne jg mov stos scas mov rol rcl fnop add add ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop imul mov mov mov aam (bad) ljmp add add unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc add add and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 call add or sub add cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps and aas add inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge test movsb test (bad) leave into aam fsubp jmp add push adc and cs pop pop imul xchg mov mov in lock cli add and aas inc dec push push pop popa imul lcall add test mov (bad) lret loope out idiv add adc pop es dec push pop gs jae addb mov mov loop lock add daa sub dec push pop imul mov mov ret lret loope in icebp idiv add or push sbb daa sub aaa cmp add add push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp cli incl unpcklps pop and das xor dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop add add push je jg mov test (bad) leave iret aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop imul add add test movsb test (bad) int fninit out cmc sti add and aas inc dec dec push pop pusha gs jne jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl add xchg fwait mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov add (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test add mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or add sbb aaa cmp push pop bound jb jge xchg cmpsl lods mov mov fcomp add call add or sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom call clc std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incl add adc pop and aas inc dec push push pop pusha add jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb add add daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add push adc push and cs ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor cmp inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push add imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop add push jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul add jne jg mov add (bad) lret rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb add add add mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha data16 jno jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb fwait mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg add add int3 rcl fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov vaddsubps fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov add rcr fucom call incb or adc push and xor cmp pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fildl add add out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp add idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp testb add or sub dec dec push pop pop arpl jb jge mov test mov mov fcomp loop in repnz std add add or sub cmp dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec push pop popa data16 jno jl xchg lods mov mov fcomp jecxz out hlt stc incl unpckhps and cmp dec push pop popa push orl test mov mov fcomp loop in repnz std add or daa sub cmp dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push add add add arpl add jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl add add jae jle mov test mov mov fcomp jecxz in repz std add or sub xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae add add mov test ret leave into rcr fsubp call add push adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov add add add scas mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz add add push adc push and xor ds dec dec push pop pop arpl jae jge mov add mov mov fcomp jecxz out repz incb or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov add mov ret rcr fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov add rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc add push pop bound jb jge mov test (bad) leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fadds fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov movsb test (bad) leave into aam fsubp jmp add unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add add push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in add stc incb push add add push and cs aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu out lock add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add add sub xor add add inc dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec dec add pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa add add add jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop add outsb je jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je add add mov stos scas mov rol rcl fnop in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg add add mov mov xlat fucom out repnz add or daa sub dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos add add lret fnop in in icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge xchg test mov mov add ret rcr fucom call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam add add (bad) jmp add unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add and sub cmp inc inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out add repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add add add add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop add daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and add add xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec dec add popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp add add push push pop popa insb jno jl xchg cmpsl lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop add pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb movsl add int3 rcl fsub out icebp idiv add push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg add movsl stos scas mov mov fnop in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es cmp dec push pop pop imul mov add ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp add jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov add add rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov int fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat faddl add out repnz add or pop sbb daa sub xor ds dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in jmp add cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp add pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps sbb and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor cmp dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc add sub xor dec push pop pop gs jne jg mov stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and add inc dec dec push pop pop fs je jg mov stos scas mov mov fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or adc sbb daa sub aaa cmp inc dec add pop popa data16 jno jl xchg stos mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha add jo jnp test movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs je add add test movsb test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop add imul mov mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop arpl jae jge add mov cmpsl lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add or push sbb sub xor push push pop pusha gs jne addb add lcall mov fcmovu in out hlt stc incl unpcklps and sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and das xor aas inc dec dec push pop pop imul mov add add leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov ret enter fucom call add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov add fucom out repnz add or daa sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out add icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add add push or push sbb sub cmp dec push push pop pusha imul addl (bad) (bad) call push pop pop data16 rcr loope out idiv add adc and xor aas inc dec push pop insw je (bad) mov mov (bad) int3 aam jecxz repnz add adc pop sub cmp inc dec push pop insw je jl mov mov mov (bad) out cmc cld push or sbb sub aaa ds dec push pop bound js xchg mov mov jecxz repnz add movhps es push pop gs jne test movsl stos mov mov aad loopne ljmp lock cli incl pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad inc inc dec push push pop bound jb jge mov test mov mov fcomp loop in repz std add or sub dec dec push pop pop bound add jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae add add orl test ret leave into aam out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg add mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg add add int3 rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add push or push sbb es ss inc dec push push pop popa imul addl mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave add add add add aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fiadd add jmp add push adc push and cs imul addl mov rol rcl fsub out repnz add or pop sbb aaa cmp pop pop arpl jae jle mov stos mov mov (bad) fsub call add push adc add and das xor push push pop bound jb jge xchg mov ret rcr fsubp jmp add unpckhps and inc inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and sub xor add push pop pusha imul addb movsl stos scas mov mov fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul add stos scas mov mov fneni(8087 in lock sti add and inc inc dec push push add add gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jo jnp xchg cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl add mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jb jl xchg lods mov add mov ret into rcr fsubp call add push adc push and xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop popa imul addl mov rol add add rcl fsub out icebp idiv add or pop sbb daa sub inc dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb push adc push and cs aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne in lock sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or add xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into rcr fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or add adc sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov rcr fucom call add or add sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and add sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out lock add or push sbb sub xor add dec push push pop pusha gs jne addb movsl stos scas mov mov fnop in out cmc cli incl sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec add add pop arpl jae jle mov test mov mov (bad) jecxz out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fucom out repnz add add push adc push and xor ds dec dec push pop pop add outsb jae jle mov test mov mov fcomp loop in repnz incb or sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb add (bad) xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg add lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc add pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or daa sub dec dec push pop pop bound jb jge mov popf mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp dec dec push push pop bound jb jge mov cmpsl lods add mov (bad) fsub out icebp idiv add or adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov int fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge xchg add ret add into aam (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out add icebp idiv add or pop sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc add add add push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp incl add adc xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl add add adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repz incb or adc push and xor add add add push pop pop imul (bad) xchg lcall rol rcl add loope in icebp idiv add or daa sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul add add addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and cmp dec push push pop popa data16 je addl add add stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or adc xor push push pop pusha imul addb add rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov add fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) add out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fsub out icebp idiv add pop or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg stos mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps sbb and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa add aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock add or adc xor push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and cs add add inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec add pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or sub cmp inc dec dec push pop pop arpl push orl test mov mov (bad) in out hlt stc incl unpcklps pop and das xor dec push pop pop gs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or pop sbb cmp pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor cmp dec push push pop pusha imul addb add add aas inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp cmc sti add or push sbb es ss inc dec push push pop popa insb jb jl xchg cmpsl lods mov mov fcomp jecxz in repz incb or adc push and cs aas inc dec dec push pop pop fs add jp test movsl stos scas mov rol rcl fnop in lock sti add and sub add pop pop bound jae jge mov lods mov mov fcomp jecxz in repz std add or sub xor cmp inc dec dec push pop pop gs jne jg add add mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa imul addl mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl je jg mov add mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or daa sub dec dec push pop pop bound jb jge mov test add into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov xchg xchg fwait mov mov (bad) fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge mov test les add leave into aam fsubp jmp add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov rol rcl fiaddl add loopne jmp cmc sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call or adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add add add add pop and aas inc dec dec push pop pop imul mov stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb push adc push and cs ds dec dec push pop pop arpl je jle mov test ret leave into rcr fsubp call add push adc push add add sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov add fsubp jmp add push adc pop and add add xor ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and cs ds add add push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno ja addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne addb add mov stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop arpl jb jge mov popf mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos add add lret rcl fneni(8087 in lock sti add and aas inc dec push push pop pop gs jne jg mov stos mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov add add iret aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fnop in lock cli add sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad add add loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp add add idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp idiv add add push or push sbb sub cmp dec push push pop pusha add jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or add sbb aaa cmp push pop bound jb jge xchg lods mov mov xlat fsub out repnz add or lret rcr loopne in hlt sti add movhps aas inc dec push pop imul test mov ret xlat fsubp in hlt sti add adc add and cs pop fs jae orl leave rcr loopne out idiv add adc and xor ds dec push pop arpl jns xchg mov rol aad jecxz icebp stc add push adc cmp pop pop bound jb jge mov test mov add add (bad) add ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) lret add iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave iret aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop imul mov mov mov (bad) add add jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and add dec push pop pop gs jl xchg lods mov mov fcomp jecxz in repz add add add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out repz incb or add add push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz add add unpcklps pop add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor add cmp inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc add dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc add pop pop arpl jb jge mov cmpsl lods mov mov fnop in lock sti add or push sbb es ss inc dec push push pop add insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push add aaa cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pop gs jne jg test movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop arpl push jne jg mov add add mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov add add ret leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub xor aas inc dec dec push pop pop fs je jg mov test add fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov add xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno add xchg test mov mov xlat fucom out repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) faddl loope jmp idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp cmc cli incl and aas inc dec dec push pop pop gs je jg mov test (bad) aam (bad) ljmp unpckhps and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov rcr fucom call or adc and das cmp dec push push pop popa insb jb jge xchg test mov mov (bad) in out repz incb or adc push and xor cmp pop pop arpl jae jge mov stos mov mov aad loopne ljmp unpckhps pop and add aas inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add or sub inc dec push add arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp add dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec dec push pop pop gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add or adc xor push push pop pop add gs jne jg mov cmpsb stos mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop bound add jb jge xchg test mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne in repnz std add or daa sub aaa cmp inc dec push push pop bound jno jl add mov mov rcr fucom call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addb xchg fwait mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov add test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out repnz adc sbb cmp push pop bound jb jl xchg lods mov add mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp adc xor dec push pop pop gs je jg mov test les add iret aam fsubp jmp add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub dec dec push pop pop arpl jae jle mov test mov mov fadds add fucom call add or sub dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp out cmc cli incl add sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add add add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound push orl test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pusha gs jne jg mov lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub add add add cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs add add add push pop pop arpl jae jle mov test ret enter fsubp call add or sub inc dec push push pop bound jb jl mov cmpsl lods mov add fcomp loop in repnz std add or daa sub inc dec add push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno add add addl mov rol rcl fndisi(8087 out lock add pop or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc sti add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl add xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov add add mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out in repz std add or daa sub inc dec push push pop popa insb jno jl xchg add add rol rcl fneni(8087 in lock add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov ret rcl fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov add add int fcomp loop in repnz add or sub inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa push orl test mov mov add fucom out repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad fndisi(8087 add jmp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 in lock sti add add and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcmovu in out cmc cli incl pop and add xor dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub add inc inc dec push add arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor add add pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov movsl stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop gs add outsl je jg mov test (bad) leave into aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb sub xor ds dec dec push pop pop arpl jae jge add add popf mov mov xlat fsub out add clc incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg xchg xchg fwait mov mov aad loopne jmp cmc sti add or adc xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov add mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and cmp inc dec push push pop pusha imul addb movsl stos add lret fcmovu in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov stos mov mov add aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs add addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl je jle mov stos scas mov mov (bad) fneni(8087 out lock add or push sbb sub add cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) out icebp idiv add or push sbb es ss inc add pop bound jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fneni(8087 in lock sti add and sub cmp dec push push pop popa add add jno jl xchg cmpsl lods mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in lock cli add and inc inc dec push push pop pusha imul add jnp xchg cmpsb lods mov mov xlat fsub out icebp idiv add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb xchg lcall rol rcl fneni(8087 out lock add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incl unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb add add (bad) int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor aas inc dec push push pop popa imul addl mov roll (bad) lret rcl fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat add add fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa add dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz add add repz std add or sub dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb add push adc push and xor ds dec dec push pop pop arpl jae jge mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc sbb and xor ds dec dec push pop pop arpl je add mov stos mov mov aad loopne ljmp adc das xor dec push pop pop gs jne jg mov lods mov mov xlat fsub out repnz add or pop sbb sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub add add dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repnz std add or sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec add add push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl add push orl test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae add jle add movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp adc and xor push bound jns mov xchg fwait mov fiaddl loop and sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz out repz incb or adc push and das ss bound js mov mov ret xlat fsubp in cmc std add sub cmp dec push push pop pusha imul add add jnp test movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add sub aaa cmp inc dec push push pop popa imul add jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add and sub xor dec push pop pop gs je jg add mov test ret leave into rcr fsubp call add or sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor dec push pop pop imul mov add cwtl sahf mov mov fcomp loop in repnz add or pop and dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jae jge mov test mov mov int fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu add ljmp adc xor dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov (bad) jecxz out hlt add stc incb push adc pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl sldt add pop and das xor aas inc dec push push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop add pop imul mov mov mov (bad) jecxz out hlt stc incb unpcklps pop and add xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul add jnp xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub dec dec push pop pop bound jb jge add mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle test lcall mov fcmovu in out hlt cli incl unpcklps pop and das ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test add mov mov fcomp jecxz in repz std add or sub inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha gs jbe addb cmpsb stos mov mov add lret rcl fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or daa sub dec dec push push pop bound jb jge mov test mov mov fadds add add jecxz in repz incb or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov cmpsb stos mov mov (bad) fneni(8087 out add idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add pop or daa sub inc dec push push pop bound jb jge xchg test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha outsb jne orl mov mov (bad) in repnz add adc and das xor ds dec dec push pop pop imul (bad) xchg lcall leave rcr loopne out idiv add adc and cs inc dec push pop pop gs jae orl add add int fnclex jmp or sbb daa cs pop pusha push lea mov fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add add pop or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop add daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom call pop push adc cmp add pop pop imul mov scas mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop add add push jne jg mov stos scas mov mov (bad) in out repz incb or adc push and xor add push pop pop imul mov scas mov mov fcomp loop in repnz std add or sub inc dec push push pop bound add jl xchg lods mov mov add fucom out repnz add or pop sbb daa sub aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or and cs ds dec push push pop popa insb jno jl xchg add pushf mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop gs je jg mov stos add scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle add movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into rcr fsubp ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov add aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz add call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov add fsubp call add push adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or add add adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out in repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add push adc push and sub dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and add add add ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or daa sub add add push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul nop xchg lcall mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop add add add je jle mov test ret leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb add jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov mov scas mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jge mov add mov mov fcomp loop in repnz std add or sub dec dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound ja test movsl stos mov mov add (bad) xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov add into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop fs je jg mov test (bad) leave iret aam add in out hlt stc incb or adc push and xor cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push push pop popa insb jno jl xchg stos mov add fucom out add in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz add add add add add push adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb add push adc push and xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) add loop in icebp idiv add or pop add add daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or daa add add inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jno jl xchg lods mov mov xlat fucom out repnz std add or sub add inc dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and sub xor push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs add jp test cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg add test movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg cmpsl lods mov mov xlat fsub out repnz add or daa sub inc dec push pop pop bound jb jge mov test mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne addb movsl stos mov add add mov rol rcl fneni(8087 out lock add or push sbb sub cmp inc inc dec push push pop bound jb jl xchg lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov add into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fildl add loope in icebp clc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpckhps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc add add or push sbb and sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp add add adc pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub aaa cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or add add sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs je jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es add add inc dec push push pop popa insb jb jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and cs aas inc dec dec add pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl add add js test movsb test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb xchg cmpsb lods mov mov xlat fsub out icebp idiv add or pop add cmp inc dec dec push pop pop arpl jae jle mov stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb add mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repz std add or sub dec dec push pop pop arpl jae jle mov test add into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fneni(8087 in lock sti add and sub cmp dec push push pop popa imul jge xchg cmpsl lods mov mov leave into aam fsubp ljmp unpcklps pop and aas inc dec dec push pop pusha gs jne jnp xchg cmpsb stos mov mov (bad) fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jge mov test mov mov fadds fucom call add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fnop in lock add add cli add and sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into add fcmovu in out hlt cli incl add add unpckhps pop and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb add and sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae orb stos mov mov aad loopne ljmp adc sbb sub aaa ds add add pop arpl je jg mov test (bad) leave into aam loopne ljmp adc xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop add imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into add fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul jns test movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne jg mov add stos scas mov rol rcl fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov add add add mov fcomp jecxz out repz incb or adc push add das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jne jg mov stos scas add aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add int fcomp jecxz in repz incb or adc push and sub dec dec push pop pop arpl jb jge mov test mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) add add loope in icebp idiv add or pop sbb and sub dec dec push push pop bound jb jge xchg test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in add out hlt cli incl unpcklps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb js orl test mov mov fcmovu in out hlt cli incl unpcklps sbb and das xor aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa add sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor add add inc dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push add pop popa imul addl add rcr fucom call add or sub dec dec push pop pop bound jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl add jns orl test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop popa data16 jno jl add xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repnz std add add adc push and cs ds dec dec push pop pop imul mov add cltd sahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos add lret fneni(8087 in lock sti add or push sbb sub cmp dec push push pop pusha insw jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov enter fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into rcr fsubp jmp incl unpcklps pop and aas inc dec dec push pop pop gs jne addb movsl stos scas mov rol rcl add loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad jecxz repz incb or adc push and cs aas inc dec dec push pop pop gs jne jg mov lods mov mov xlat fsub out icebp testl cld add or pop sbb daa sub aaa cmp inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or add sbb and xor ds dec dec add imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov xlat fsub out repnz add or pop sbb aaa cmp push pop bound jb jge mov test mov mov (bad) jecxz out repz incb or adc push and cs add ds dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb lods add int xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov fcmovu in out idiv add or push sbb sub cmp dec push push pop popa data16 add imul addl mov rol rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge add add popf mov mov fcomp jecxz out repz incb add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol iret aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb add xchg fwait mov mov (bad) fsub out icebp idiv add or pop push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave into aam (bad) jmp add pop and das xor dec push pop pop gs jne jg mov stos add mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcr loope icebp clc incl pop and inc inc dec dec push pop pop gs je jg mov mov (bad) (bad) call add add idiv add sub aaa ds dec push pop popa push mov ror xlat fsub out cmc cli add and inc inc dec push push pop pop gs jne jg mov xchg xchg pushf mov mov (bad) fsub out icebp idiv add or push sbb sub cmp add add dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push add push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 imul orl mov ret rcr fucom call incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add scas mov mov (bad) jecxz out repz incb push adc push and cs ds dec dec push pop pop imul mov mov rol rcl fneni(8087 out lock add or push sbb sub cmp add pop bound jb jl xchg add cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov add (bad) fneni(8087 out lock add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov add add add rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat faddl add out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add add std add or daa sub inc dec push push pop bound jb jge mov cmpsl lods mov mov fcomp loop in repnz add or sub dec dec push push pop bound jb jge mov test mov mov fcomp loop add hlt stc incb add or adc push and cs ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add push adc pop and das xor ds dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incl unpcklps add add and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps push and add xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps pop and das xor add dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor add inc dec push push pop pop gs jne jg mov stos scas mov mov fnop in lock cli add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push add fs je jg mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop imul add outsb je jle mov (bad) xchg lcall mov fcmovu in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne jg mov add scas mov mov fcmovu in out hlt cli incl unpcklps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fiaddl loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov add add aad loopne ljmp pop and aas inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pusha gs jne jg mov stos scas mov mov fiaddl add add in out hlt stc incl unpcklps pop and cs add inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add out hlt stc incl push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov (bad) xchg cltd lahf movsb stos scas mov mov (bad) in out hlt stc incl sldt add pop and das xor aas inc dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and sub xor ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor add aas inc dec dec push pop pop imul mov mov mov flds loopne ljmp adc xor push push pop pop gs jne jg mov stos scas mov mov fnop in lock cli add pop and aas inc dec add dec push pop pop gs jne jg mov stos scas mov mov fcmovu in lock cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop add gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb unpcklps pop and add xor dec push pop pop gs add je jg mov test (bad) leave iret aam (bad) jmp add push adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg add mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd add mov aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je add fwait mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos add mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rolb add lret rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol add xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out add add repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or and cs ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and sub xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp in out repz incb or adc push and xor add ds dec dec push pop pop imul mov stos scas mov mov fcmovu in lock cli add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl pop and inc inc dec add pop insl jb jge xchg test mov mov fcomp loop in repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs outsl jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop bound jb jl xchg cmpsl lods mov mov rcr fsubp jmp add unpcklps pop and das xor push push pop pusha gs jne addb add test movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall add add mov aad loopne ljmp adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test add add aam fsubp jmp add unpcklps pop and add xor push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov add add rcr fsubp jmp add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa imul addl mov ret rcl fucom add in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg add cmpsb stos mov mov xlat fsub out icebp testl add cld add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl add add xor push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov fcomp loop in repz incb or adc push and add xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fild in lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub xor add add inc dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl and inc inc dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb cmp pop add pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa insb jb jl xchg add lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov mov (bad) jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop imul nop xchg lcall add add aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov ret rcl fsub out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov add add (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out add in icebp add std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) in out hlt stc incb push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc add add sbb and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli add and inc inc dec add pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub add add dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb es ss add add push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor dec push pop pusha gs jne addb movsl add int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul add je jg mov stos scas mov mov fcmovu in out hlt cli incl pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insl jb jge xchg add add test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl push or push sbb sub cmp dec push push pop popa imul addl add mov xlat fsub out repnz add or daa sub inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall add mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov add fcomp jecxz out repz incb or adc push and xor ds dec dec push pop add push jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop add call add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) in out hlt stc incb push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock cli add add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jns test movsl stos scas mov add (bad) lret rcl fsub out icebp idiv add or add sbb cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp adc sbb sub cmp dec push push pop popa insb jb jl xchg test mov mov fcomp jecxz out hlt stc incb unpcklps pop and add add inc inc dec push push pop pusha imul addl mov rol rcl fucom out repnz std add or sub xor ds dec dec push pop pop fs je jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push add add arpl jae jle mov test (bad) lret fcmovu in lock sti add and daa sub aaa cmp pop pop arpl jae jle mov stos scas mov mov fnop in lock add or push sbb es aaa cmp inc dec push push pop arpl add jle mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push push pop popa insb jb jge mov test mov mov (bad) in out hlt cli incl and inc inc dec push push pop popa data16 jno jl mov add xchg cwtl popf mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop popa imul addl mov rcr fsubp jmp add unpcklps pop and inc inc dec push push pop pusha imul addl add scas mov mov (bad) in out cmc cli incl and inc inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addl mov ret enter add rcr fsubp jmp add push adc pop and das xor push push pop pusha imul addb cmpsb lods mov mov fcomp jecxz in repz incb or adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out add in repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in icebp testb add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add add unpcklps pop and aas inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps add add and inc inc dec push push pop popa imul addl mov ret rcl fucom out repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock cli add and add inc inc dec push push add insl jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec add add pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop fs jne jg mov stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb daa sub aaa cmp bound jb add orl test mov mov fsub jmp cli add adc pop daa cs pop popa push lea ror fcomp out icebp idiv add or adc sbb aaa cmp push pop rclb es pop pusha outsb jne orl add xlat (bad) in cmc cld add or sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) add fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add fwait mov mov (bad) fneni(8087 in lock add or adc xor push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp add out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add add add or push sbb and inc inc dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out hlt stc incb unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov rcr fucom call add add pop or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and aas inc dec dec push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps add pop and das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and add sub xor aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb es ss add push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop gs jo jnp test movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec add pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov ret rcl fsub out repnz add or pop sbb es ss inc dec push push pop popa add add jo jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb add (bad) xchg test mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb mov lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg add add lahf movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb add add mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop gs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov add cmpsl lods mov mov rcr fsubp jmp add push adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb add ds dec dec push pop pop arpl jae jle mov test add int fcomp jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul test ret enter fucom call add add repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp add add add pop and aas inc dec dec push pop pop fs je jg mov add (bad) lret fcmovu in out hlt stc incl unpcklps pop and cs aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add add add sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub add add inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec add push pop pop arpl je jp test movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl add add jae jle mov test ret leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa data16 jno jl add add pushf mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret add fnop in lock sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg xchg pushf mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl add add add int3 rcl fsub out repnz add or pop sbb daa sub aaa cmp push pop bound jb jge mov mov mov (bad) in out hlt cli incl and inc inc dec push push pop pusha imul addl mov roll add add int3 rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpckhps pop and aas inc dec push push pop pusha imul addb movsl stos mov mov (bad) fildl add out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock add add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock sti add add adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl and add sub xor push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs add add add add inc dec dec push pop pop imul (bad) xchg lcall rol rcl fildl loope in icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push add add imul (bad) xchg lcall rol rcl fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa imul addl mov ret rcl fucom out repnz add or sub dec dec push pop pop arpl add jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor dec push pop pusha gs jne addb movsl stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa add pop pop arpl jae jle add mov test ret leave into rcr (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsl lods mov mov xlat fsub out repnz std add or sub dec dec push pop pop arpl jae jle mov mov mov (bad) in out hlt stc incl unpcklps pop and add xor push push pop pusha imul addl mov rol shl call add push adc sbb cmp push pop bound jno jl xchg cmpsb stos mov mov add (bad) aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov lods mov mov add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub inc dec push push pop popa imul jl xchg stos mov mov add aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fldl add out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov rcl fsub out add add icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt add add incb or adc sbb aaa cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out add clc std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push add add and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub cmp dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test (bad) leave into rcr fsubp call add or daa sub add add aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor add aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push add imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub add push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul jg mov test vaddsubps fneni(8087 in out cmc cli incl unpcklps pop and cs ds dec dec push pop pop add arpl jae jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha data16 add add jne addb movsb stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb add add (bad) xchg cmpsl lods mov mov (bad) fneni(8087 in lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add or push sbb sub xor push push pop pop gs add addb movsl stos scas mov mov (bad) jecxz out repz incb or adc push and sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov add test mov mov xlat fsub out icebp idiv add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or sub xor ds dec dec push pop pop arpl jb jge xchg add add mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb es ss dec push push pop pusha imul addb movsl stos scas add add aam fsubp jmp add push adc sbb cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp or adc das xor dec push pop pop imul mov lods mov add add xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov add iret aam (bad) jmp add push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov add add fsub out icebp idiv add or push sbb sub add cmp inc dec push push pop popa imul addl mov mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop arpl jb jle mov test mov mov fcomp add loop in repnz add or pop sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jge xchg lods mov mov (bad) fneni(8087 out add add lock sti add pop and das xor aas inc dec dec push pop pop arpl je jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jnp test movsl stos scas mov mov (bad) in out repz add incb or adc sbb cmp push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add push or adc xor dec push pop pop imul (bad) xchg cltd sahf mov mov fcomp loop in repnz add or pop sbb daa sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or add sbb aaa cmp push pop popa data16 jno jnp xchg cmpsb stos mov mov rol rcl fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz std add or sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc add add das xor dec push pop pop imul mov lods mov add fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov rol iret aad (bad) ljmp push adc push and sub xor cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and cs add add inc dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cld add or push sbb sub xor inc dec dec push pop pop fs je jg mov test ret enter fsubp call add or daa sub ss inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp jmp add or daa sub cmp inc dec dec add pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock sti add pop and das xor ds dec dec push pop add push (bad) xchg cmpsl lods mov mov (bad) fneni(8087 in lock sti add push or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop add add outsl je jg mov test mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or pop sbb es cmp dec push push pop pusha gs add jp test movsb test ret enter fucom call add or daa sub ss inc dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add or daa sub add cmp push pop bound jno add addl mov rol iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl add popf mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push push pop pusha imul jg mov test ret leave into rcr fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb mov stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb add add scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop bound add jge xchg pushf mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test add add (bad) in out cmc sti add and xor inc dec dec push pop imul mov mov (bad) int3 rcr loope out idiv push or xor inc inc dec push pop imul addb movsl stos mov mov (bad) fsub out icebp idiv add or push sbb add add sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov rcl fsub out icebp idiv add or pop sbb aaa cmp pop pop arpl add outsl jbe test mov rol aad jecxz icebp stc add push adc cmp dec push pop fs jns xchg mov ret (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub add out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test ret leave into aam fsubp jmp add or adc xor push push pop pusha imul addl mov ret rcl fucom call add add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps add pop and das xor push push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec add add push push pop bound jb jge add mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb add xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into aam add in out cmc cli incl pop and aas inc dec push push pop pusha imul addb add stos mov mov (bad) fndisi(8087 out lock add or push sbb es ss inc dec push push pop popa insb jb jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov add (bad) int xlat fucom out repnz add or sub inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov add add fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz add repz incb push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fnop in lock sti add and inc inc dec push push pop pusha imul addb mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loope jmp idiv add or push add add es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb push adc pop and das add xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in jmp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor push push pop add add push jne addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz std add or sub inc dec dec push pop pop imul je jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge xchg add test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl je jg mov test (bad) lret fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha gs jbe addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall add mov aad (bad) ljmp adc xor push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov add rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl fneni(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz add add repz incb push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fneni(8087 in lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb es aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec add pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub xor cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc add add push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test rol rcl fneni(8087 in lock sti add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop arpl jae js orl test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg add xchg xchg popf mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl sbb sub cmp dec push push pop pusha imul addl add cmpsl lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jge mov test ret leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov add add (bad) lret rcl fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aad fnop in lock cli add and inc inc dec push push pop popa add jb jl xchg lods mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop imul mov mov mov fnop in lock cli add and inc inc dec push push pop insb jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add sldt add add pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addl mov rol int xlat fucom out repnz add or add add xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli incl pop and add add add add dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push add pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb push adc push add inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound add insl jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock cli add and inc inc dec push push pop pusha imul addl xchg xchg fwait mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae add mov lcall rol rcl fneni(8087 in lock sti add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov lret rcl fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov add fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam add add in out cmc cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fucom call std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fnop in lock cli add add adc sbb sub xor cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb daa sub aaa add add inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec add pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop add add jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle add orl test (bad) leave iret aam fild in lock sti add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov cwtl popf mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aad (bad) ljmp adc xor push push pop pusha imul addb cmpsb stos add int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub xor add inc dec dec push pop pop fs je jg mov stos scas mov lret rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub xor ds dec dec push pop pop arpl je jle mov test (bad) lret fcmovu in add out cmc cli incl and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add add or sub xor ds dec dec push pop pop arpl jae jle mov movsl stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or add sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and add add xor aas inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repz add add unpcklps pop and das xor aas add push pop pop fs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub dec dec push pop add push test movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb add ja (bad) xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push add gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg add lea lods mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aad (bad) ljmp adc xor cmp dec push push pop popa imul addl cmpsb lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas add add mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz incb or adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol rolb add add fnop in lock sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add out hlt stc incl unpcklps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or adc sbb daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb add add add or adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop add aaa cmp pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb push adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa data16 js (bad) mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock sti add or push sbb sub cmp add add push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha add gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je add add test movsl stos scas mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jb jge mov add lods mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fnop in lock sti add sub cmp dec push push pop popa imul addl add mov rol rcl fsub out repnz add or daa add xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addl mov rol add add rcl fsub out icebp idiv add or pop sbb aaa cmp pop pop bound jae jge mov test mov mov (bad) jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne add jmp idiv add or push sbb es ss inc dec push push pop popa insb jno addb vpaddq in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc push and add sub dec dec push pop pop bound jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addl mov rol rcl fnop in lock cli incl pop and add aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov rcl fucom out repnz add or pop sbb daa sub aaa cmp add add push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push add arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add add jne addb movsl stos scas mov rol rcl fcmovu in out hlt cli incl unpcklps sbb and inc inc dec dec push pop pop gs jne jg mov stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pop gs jne jp test movsb test (bad) leave iret aam fsubp jmp incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or inc dec push push pop bound jb jge xchg add (bad) int3 rcr loope out idiv add sub cmp inc dec push pop arpl js xchg mov ror xlat (bad) jmp idiv add or adc xor push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg lods mov mov rcl fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and add das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp push or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa add pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa data16 jno jbe addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg add mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pusha gs jne jg mov stos scas mov mov (bad) in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov add add mov rcr fsubp call add push adc push and sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or daa sub add cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add and sub xor push push pop pusha gs jne addb movsl stos scas mov add mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc sbb cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl (bad) mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat faddl add add out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg stos mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp add sti add and aas inc dec dec push pop pusha gs jne addb movsl stos scas mov mov (bad) in jmp cmc cli add pop and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov (bad) in out repz incb add add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or add sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and add add add sub add ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub add ss inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and inc inc add push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add push adc push and cs ds dec dec push add pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or sub arpl je jg mov stos scas mov rol rcl fneni(8087 in lock sti add or push sbb es ss inc dec push push pop popa insb jno jl xchg add mov lods mov mov xlat fucom out repnz std add or sub xor ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addl add add rol rcl fsub out icebp idiv add or pop sbb sub dec dec push pop pop arpl jae jns test movsb test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop popa imul addl mov add add fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov add fndisi(8087 out icebp idiv add or push sbb sub add cmp inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp add add out hlt stc incb push adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and sub cmp dec push push pop popa imul addl mov mov fcomp jecxz out repz incb or adc sbb and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in lock cli add and inc inc dec push push pop pusha imul addl mov ret rcl fsub out repnz add or sub xor cmp pop pop arpl jae jle mov test (bad) leave iret aam loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add or sub dec add add pop pop arpl jae jle mov test ret leave into rcr (bad) jmp add unpcklps add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb add jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul jl xchg add add lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addl add (bad) int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec push push pop pusha imul addb cmpsb stos mov mov add (bad) lret rcl fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa insb jb jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam add fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jb jl mov mov mov (bad) in out add hlt stc incl unpcklps pop and das xor push push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out repz incb or add adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz std add or add sub xor ds dec dec push pop pop arpl jae jle mov stos mov mov rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs add aas inc dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or sub dec dec push add arpl jae jge mov mov rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je lea lods mov mov fcomp jecxz in repz incb or adc push and cs ds add pop bound jb jge xchg add lods mov mov (bad) fsub out icebp idiv add or push sbb sub ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and inc inc dec push push pop pusha gs jne addb add add mov fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz ljmp unpckhps and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge mov test ret leave into rcr fsubp jmp add hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl fneni(8087 out lock add or push sbb sub cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc add and cs ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom call add push adc push and xor add ds dec dec push pop pusha imul addb cmpsb stos mov mov (bad) fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add pop and inc inc dec push add pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or daa sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add and sub cmp dec push push pop popa data16 add add jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and inc inc dec push push pop popa insb jno jl xchg add add mov fcomp loop in repz std add or sub xor ds dec add pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov aad (bad) ljmp adc xor push push pop pusha imul addl mov ret rcl fsub out repnz add or sub dec dec push pop pop arpl jae add mov stos mov mov rcl fnop in lock sti add and sub cmp dec push push pop popa imul addl mov ret rcr fucom call add push adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov (bad) fsub add in icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jge mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add add or sub dec dec push pop pop arpl jae jge mov test mov mov add (bad) ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or add sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out hlt stc incb or adc xor push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or sub cs ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add or push sbb es ss inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt add add and inc inc dec push push pop add popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock cli add and inc inc dec push push pop popa data16 jno jl xchg add xchg pushf mov mov xlat fucom call add or sub dec dec push add fs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov stos scas mov mov fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg cmpsl lods mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rol int3 rcl fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addb cmpsb stos mov mov xlat faddl add add out repnz add or sub dec dec push pop pop arpl jae jle add movsb stos scas mov mov fnop in lock sti add and sub cmp dec push push pop popa imul addl mov ret rcr fucom call add std add or sub xor ds dec dec push pop pop arpl je jle mov test (bad) lret fnop in lock sti add and daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out hlt stc incb add add adc pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp in out hlt stc incl unpckhps pop and add xor push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jge mov test mov mov (bad) jecxz out hlt stc incb push adc pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov mov mov (bad) jecxz out hlt stc incb add adc xor push push pop popa add add jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov cltd sahf movsb test (bad) leave into aam (bad) jmp add unpcklps pop and das xor dec push pop pusha add jbe addl mov ret rcl fucom out repnz std add or sub xchg movsb stos mov mov (bad) jmp clc incl or add and sub dec push pop pusha outsb je addb lods mov rol rcr loopne in hlt sti add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repnz std add or sub dec dec push add arpl outsl je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pusha add add jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul add addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg add add lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl lldt xor push push pop pop gs jne jg mov stos scas mov rol rcl fnop in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov add add aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loope add out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out repnz add or pop sbb daa sub inc dec push push pop bound push orl test (bad) leave into aam fsubp jmp add add incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add sub xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc add push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub add xor cmp dec push push pop popa imul addb movsl stos mov mov rcl fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub inc dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec add add pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb add adc das xor aas inc dec dec push pop add add push je jg mov test (bad) leave into rcr fsubp jmp add or sub dec dec push push pop bound jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb add add jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl add mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push add insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg xchg fwait mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl add stos scas mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop fs je jg mov test (bad) aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov into rcr fsubp jmp add unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp add call add push adc sbb cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz incb unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp repz incb or adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add add or sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop add sbb es aaa cmp add push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add sub cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and add inc dec dec push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and xor cmp inc dec push push pop bound jb jge mov mov mov fcomp jecxz in repz std add or sub dec dec add pop bound jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa add jno jnp xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop fs je add jp test movsl stos scas mov mov fcmovu add jmp cmc sti add and inc inc dec push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul add movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov (bad) in out repz incb push adc push and xor ds dec dec push pop pop arpl jae jle mov add sahf mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz std add or sub inc dec dec push pop pop arpl jae jle mov test add enter fsubp call add push adc sbb cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fucom call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov add rol rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov add fnop in lock cli add or adc xor push push pop pusha imul add pushf mov mov (bad) fneni(8087 out lock sti add and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne add in lock cli incl and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp stc incb push adc push and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov rcr fsubp jmp add add or sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc cli add add pop and aas inc dec dec push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa add add aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 in lock cli add and add aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jge mov test mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop add push jne addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop gs jne jg mov stos mov mov aad (bad) ljmp adc das xor dec push pop pop gs add add jp test movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul add add orl test ret leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test scas mov mov (bad) in out hlt stc incb push adc pop and cs ds dec dec push pop pop arpl jae jle mov add scas mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repz std add or sub dec dec push pop pop bound jb jge xchg add cmpsl lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop bound jno jl xchg scas mov mov fcomp jecxz in repz incb or adc push and sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov add int3 rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad add loopne ljmp adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc add push pop pusha imul addb movsl stos mov mov aad (bad) ljmp add out cmc cli incl pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb add add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or add sbb aaa cmp push pop bound jb jge xchg mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz add or add daa sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub add add add inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu add jmp idiv add or push sbb sub xor dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound add jb jge xchg cmpsl lods mov mov fcomp loop in repnz add or daa sub inc dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb jge add popf mov mov xlat fsub call add or daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl add xchg fwait mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pop gs jne add fwait mov add add rol rcl fneni(8087 out lock sti add and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps and inc inc dec push push pop pusha gs jne addb movsl stos scas mov add mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and das xor aas inc dec dec push pop pop imul mov mov mov add into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave add aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos scas mov mov fiaddl add (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jge mov test mov mov xlat fucom out repnz add add add or pop add cmp pop pop bound jb jge mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or add push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and sub xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl push je jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs add add ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec add dec push pop pop arpl jb jge mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop add insb jno jl xchg lods mov mov rcr fucom call add or sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl add add mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp or push sbb es ss inc dec push push pop popa imul addl xchg fwait mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl add (bad) aad (bad) ljmp unpckhps pop and das xor dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and cs aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test add mov (bad) in out hlt stc incb push adc push and xor ds dec dec add pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave add add aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop arpl jae jle mov test mov mov fcomp add add call add or sub dec dec push push pop bound jb jge mov test mov mov xlat fucom out repnz add or daa sub push pop pop arpl je jle mov stos scas mov mov fcmovu in lock push or sbb add and xor inc inc dec push pop imul test movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop add outsl jne jg mov stos scas mov mov fnop in lock cli add and inc inc add dec dec push pop pop gs jne jg mov stos scas mov mov fnop in out cmc cli add pop and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop add add pop gs je jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul add je jle mov test mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge add mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and xor push push pop pusha imul addb mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fucom call add add adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov mov fcmovu in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov add int fcomp jecxz in repz std add or sub xor cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 add add out lock add or push sbb es ss inc dec push push pop popa add jb jge mov test mov mov (bad) jecxz out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fneni(8087 out icebp testb add add or push sbb es ss inc dec push push pop popa insb jb jl xchg lods mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov rol rcl fnop in lock sti add or add push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop imul mov mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa add aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock add or push sbb sub cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add and inc inc dec push push pop add add imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl and inc inc dec push push pop popa data16 jno add addl mov ret rcl fucom call add or sub xor push push pop arpl jns test movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps push and xor aas inc dec dec push pop pop imul mov add cwtl sahf mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov add mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop fs jne jg mov stos scas mov mov add add iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret add iret aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into roll add fcomp jecxz out repz std add or sub dec dec push push pop bound jb jge xchg test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out add add icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl lldt das xor dec push pop pop fs je jg mov test (bad) lret fcmovu in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps add add and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop add push jne addb movsl stos mov mov aad loopne jmp cmc sti add and add add xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp add push push pop popa imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpckhps and inc inc dec push push pop add pusha gs jne addb movsl stos mov mov rol rcl fsub out repnz add or pop sbb sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul jns test movsb stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jge xchg add add cmpsl lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add add adc xor push push pop popa data16 jno jl xchg add add mov xlat fucom out repnz std add or sub dec dec push pop pop arpl je dec sub data16 bound neg xor xchg (bad) js (bad) mov mov lret add (bad) stos jbe aas inc cmp in sahf (bad) sub and mov jb,pn or sarl mov inc sub mov into xchg (bad) xor mov nop xchg mov das sub lcall ja imul push movsb into or notl cwtl jp xor sbb fninit adc (bad) and sbb jb bound push push dec inc bound cli pop test test test cmp mov cmp test cmp cmp nop mov test test test cmp mov cmp test test test cmp jmp cmp test cmp cmp nop push test test test cmp cmp xor test cmp test test cmp pop test cmp test cmp nop ret call test test test cmp cmp mov test cmp test cmp cmp mov test cmp cmp test cmp inc test cmp cmp test cmp mov cmp test cmp test cmp mov cmp test cmp cmp test ret pop cmp test cmp cmp test clc adc cmp cmp test cmp test jmp add add hlt nop jns jae inc and pop adc gs scas cwtl pusha lds mov (bad) cli cmp call cmp cmp test cmp cmp jmp test cmp test cmp cmp pop test cmp cmp test cmp add test test test cmp cmp mov cmp cmp cmp cmp cmp mov cmp cmp test test cmp test test test test cmp dec cmp test test test test cmp cmp cmp test cmp dec cmp test cmp cmp cmp cmp cmp test test cmp dec test test test test cmp cmp test test test test dec cmp cmp cmp test cmp cmp test cmp cmp cmp xor cmp cmp test test cmp test test test test cmp or cmp test test test test cmp cmp cmp test cmp call cmp test cmp cmp cmp cmp cmp test test cmp push test test test test cmp cmp test test test test test jne mov cmp cmp cmp test cmp add cmp test cmp cmp cmp mov cmp cmp test test cmp add test test test test cmp call cmp test test test test jmp cmp cmp cmp test cmp pop cmp test cmp cmp cmp push cmp cmp test test cmp push test test test test cmp push cmp test test test test mov cmp cmp cmp test cmp call cmp test cmp cmp cmp pop cmp cmp test test cmp cmp jl test test test test cmp mov cmp test test test test sub cmp cmp cmp test cmp mov cmp test cmp cmp cmp sub cmp cmp test test cmp call test test test test cmp mov cmp test test test test push cmp cmp cmp test cmp mov cmp test cmp cmp cmp push cmp cmp test test cmp push test test test test cmp push cmp test test test test call cmp cmp cmp test cmp jmp cmp test cmp cmp cmp pop test test cmp test test inc cmp nop cmp cmp test push cmp cmp cmp cmp cmp pop test cmp test test inc cmp test cmp test test or cmp test cmp test cmp xor cmp cmp test cmp test mov cmp cmp test test cmp cmp jne test test cmp test cmp mov test cmp cmp cmp test cmp test cmp cmp test test cmp test test cmp sub test cmp test cmp cmp cmp test cmp test cmp mov cmp test test cmp test test cmp test cmp test cmp cmp cmp test cmp test cmp cmp test test cmp test test cmp test cmp test cmp cmp cmp test cmp test cmp cmp test test cmp test test cmp test cmp test cmp xor cmp cmp test cmp test cmp cmp test test cmp test test cmp test cmp test cmp cmp cmp test cmp test cmp cmp test test cmp test test cmp test cmp test cmp cmp cmp test cmp test cmp cmp test test test test or test test cmp test test nop cmp test cmp cmp cmp cmp test cmp cmp cmp jne test test test test cmp call test test test test test xor arpl and adc outsl push out repnz add xchg jno sub mov aam daa jb (bad) movsl mov mov fwait pop fimul jne test push add push sub sbb inc loopne pop xchg sbb push mov mov sbb cld js sahf push testb repz sub and jmp add popa jle movsb clc inc outsb pushf adc mov mov icebp adc xchg push and mov sbb cmp stc subb cmp cmp int mov cmc dec dec mov in bound add hlt nop jns jae inc and pop adc aad sti cwtl pusha lds mov (bad) cli cmp jp dec enter mov and lahf or outsl push out repnz add xchg jno sub ljmp cmp mov test cmp cmp cmp cmp pushl test cmp cmp test test pop test test cmp test test mov test test test cmp test mov test nop cmp test cmp push cmp cmp cmp test cmp mov cmp test test test test mov cmp test test test test mov test cmp test test nop dec cmp test cmp cmp cmp dec cmp test cmp cmp test dec test test test cmp test cmp jne test test test test cmp mov test test nop cmp test dec cmp cmp cmp cmp test dec cmp cmp test test test dec test cmp test test test cmp jne test test cmp test test pop nop cmp test cmp cmp mov cmp cmp test cmp cmp mov test test test test cmp mov test test test test test add cmp test test nop cmp mov test cmp test test test mov nop test test cmp cmp add cmp cmp test test test mov test cmp test cmp cmp add test test test test test lods test test cmp test cmp test je test test cmp nop cmp add test cmp test cmp test mov test cmp nop cmp test cmp jne cmp test cmp test test mov cmp nop cmp test cmp cmp jne test cmp test test cmp mov nop cmp test cmp test push cmp test test cmp nop pop cmp test cmp test cmp push test test cmp nop cmp push test cmp test cmp test push test cmp nop cmp test push cmp test cmp test test push cmp nop cmp test cmp push test cmp test test cmp push nop cmp test cmp test push cmp test test cmp nop call cmp test cmp test cmp add test test cmp nop cmp ret data16 aam daa jb (bad) movsl mov mov ficompl jne test push add push sub sbb inc loopne pop xchg sbb push mov mov sbb cld js sahf testb repz call pop xchg and and popa jle movsb clc inc outsb pushf adc mov mov cmp adc xchg and stos mov sbb cmp stc call stos out shrl cmp cmp int mov mov mov xor leave mov pop jae or xor mov push pop insl cmp add push and inc jge dec jb cmp or xor inc inc cmp xor push pop pop ds push and dec and jb xor dec das xor dec inc pop ds push and xor fs adc xor (bad) xor dec dec jns xor leave stos out shrl cmp cmp int mov mov mov andl jnp mov inc fcomps test gs scas cwtl pusha lds mov (bad) cli cmp xor arpl and adc outsl push out repnz add xchg jno sub mov aam daa jb (bad) movsl mov mov fwait pop fimul jne test push add push sub sbb inc loopne pop xchg sbb push mov mov sbb cld js sahf push testb repz call nop popf sbb mov and inc mov dec testl pop dec testl pop dec testl pop dec testl pop dec testl pop dec testl pop dec testl pop dec testl pop dec testl pop dec testl pop dec testl pop dec testl pop dec testl pop dec testl pop dec testl pop dec testl pop dec testl pop dec scas stos leave std inc in addr16 pop xchg fiaddl mov movsl mov ljmp pop popf roll mov mov jp inc mov push push fdivrl cli inc mov push mov mov aam mov clc inc mov jg mov std and gs inc mov out jbe mov pop pusha mov cmpsl scas ss inc cmp out xchg inc mov (bad) cld inc mov std mov mov std dec mov repnz icebp out std inc aas mov std inc out push lods dec mov xchg inc dec ds out out std inc aaa push clc dec xor cld inc mov or out and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and mov inc outsl mov cmpsl scas (bad) out inc cmp out lods sub xchg jbe out xchg inc mov stc sub test mov pop addr16 add pop and out movsb iret cmp cld inc mov fwait arpl std inc cmp out jl mov std inc loopne sub ret std inc mov out add and std inc loopne push lds ret std inc mov cwtl xor mov jo incl pop stc inc mov jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor outsl jl xor fdivrp inc mov cmpsb cs (bad) (bad) dec sahf bnd std inc or std inc mov pop iret fs adc lds ret and std inc test je nop out std inc aas mov std inc out push cltd inc mov je in ja mov movsb iret stc notb sahf out std sbb mov mov scas mov push roll je clc pop adc out add mov dec push add mov dec push add mov dec push add mov dec push add mov dec push add mov dec push add mov dec push add mov dec push add mov dec push add mov dec push add mov dec push add mov dec push add mov dec push add mov dec push add mov dec push add mov dec push add mov dec push add mov dec push add mov dec push add mov mov cld outsb mov cmpsl scas mov std inc cmp ljmp pop xbegin jle mov std inc out push in mov je sbb std inc aas mov std inc out push stc inc mov je mov std inc aas mov std inc out push or ret mov mov std inc out push and out je lods out std inc aas mov std inc out push xor ret test std inc aas mov std inc out push dec inc mov je xchg out std inc pop (bad) (bad) inc mov jbe cmp out std inc push dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop scas loopne std inc cmp out jle mov icebp scas lock std inc aam push push mov pushf int loop (bad) jb repnz cmc outsl add mov std xor cld inc mov je in pop js mov movsl push pop and inc mov frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor into frstor stos movsl lds ret std inc aas stos test scas pusha repnz inc pop in incb pop and pop not inc mov jbe cmp out bnd std inc pop mov inc mov lods scas mov std inc aas stos movsl lds ret std inc aas stos test scas and std inc aas xchg icebp (bad) jae icebp inc mov xchg mov and cld inc mov add out jl mov std inc jecxz adc out std adc in mov adc pushf out std push xor out mov xor scas pop aas mov incb gs cld pop dec inc mov jmp push mov cli jmp push mov cli jmp push mov cli jmp push mov cli jmp push mov cli jmp push mov cli jmp push mov cli jmp push mov cli jmp push mov cli jmp push mov cli jmp push mov cli jmp push mov cli jmp push mov cli jmp push mov cli jmp push mov outsb lds adc lds mov scas scas mov mov in std inc mov jbe mov out cmpsl pop pop cmp inc mov orb in mov xchg inc fsubr cld inc mov ljmp test cs std push jecxz test aas fwait icebp lds je aaa sub sub mov jbe nop outsb movb cmp sub mov mov lret mov mov std fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr fisubr gs test sub mov add lock dec xor mov icebp mov cltd out out std inc aas scas icebp int cli jbe aas mov (bad) (bad) mov push (bad) iret ljmp aas sahf in adc mov int lret aas mov int lret cmp inc js rclb adc add inc outsl test loop lret rorl ja mov std inc mov scas pop loopne sub and gs test xchg icebp int lret mov xor andl cmp mov std inc aas xchg icebp iret dec insl cmp cmp stos je mov mov std inc mov mov pop inc std inc mov outsl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam jl aam mov std inc out push jno dec adc xchg cmp adc mov pop lret in addr16 inc aas out dec dec cltd cmc mov fsubrp xchg inc fsubrp xchg inc fsubrp add pushf adc inc mov jle mov js dec adc scas out std inc in addr16 pop xor inc mov adc iret icebp fidivl mov out cmpsl scas xchg adc mov pop mov mov pop arpl inc mov jbe mov out cmpsl int out and pop add lods out std scas mov (bad) pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf daa aad pushf int out daa scas out std sbb daa add mov int inc in gs iret xor inc mov add or cmpsl scas push adc mov sti out ja ds push fsubr int mov repnz lods sub addr16 lds scas int out je mov bnd imul je xor out scas sub adc mov std mov mov inc std inc mov mov inc dec pop xchg inc mov xchg inc ficom add sub std inc cmp out xchg inc aas loope icebp fsubr std inc dec pop pop inc mov add mov stos dec dec faddl adc std xor cmpsl scas push out std inc adc loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne dec pop loopne test int adc ret ljmp jecxz jle mov js mov lret stc test sub adc int out je mov bnd in std inc aas stc fwait int call xchg inc aas stc jl dec out std inc rclb inc shl push lahf shr daa mov mov cmpsl dec mov stc adc xchg stos pop aaa push std dec xor testb movsb and mov mov inc int (bad) cmp out cld inc aaa push inc inc mov std dec xor mov mov pop shl inc mov adc mov mov jle,pt mov js mov notb mov std cmp iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg iret xchg xchg inc fsubrp je aaa sub in int dec std inc mov cmp in stos dec dec faddl xchg aaa push std dec xor inc mov mov inc mov jbe mov ljmp mov std inc out push stc mov movsb gs dec dec pushf stc mov mov out adc mov std sub xchg jbe out xchg inc movsb out std sub gs dec dec faddl shrl out std inc cmp out cltd out out std inc aas scas cmc push mov rol (bad) jbe in out aas iret and inc mov mov pop shr mov adc sub test iret pop outsl ds mov std adc mov jbe mov pop pop inc mov cmp jae cmp jae cmp jae cmp jae cmp jae cmp jae cmp jae cmp jae cmp jae cmp jae cmp jae cmp jae cmp jae cmp jae cmp jae cmp jae cmp jae cmp jae cmp jae cmp jae xchg inc fsubrp je xor out scas int pop std inc mov ds aas mov stos pop fsubrp xchg inc aas mov mov cmp out je xor out scas int pop std inc mov ds mov std adc xchg stos pop fsubrp xchg dec cmp out std inc out pusha divb incl mov iret mov cmpsl out std push aas jae inc mov je mov std sub mov std inc aas mov stos pop pop sbb inc mov xchg inc fmulp lods mov mov stos dec dec faddl adc jbe mov jns mov cmpsl scas xchg sbb mov mov adc mov std in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in dec pop in mov std inc out push xorl aas mov je fsubs inc pop aaa in mov adc scas jmp std inc out mov add test mov inc fsubrp jbe les jbe mov push inc mov inc mov sarb push mov cmpsl scas scas sbb mov jmp jle mov gs pop mov adc sub adc xor out xchg inc movsb out std mov mov inc std inc mov jp mov out std int out xor sub mov mov les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat les xlat lods push pop mov inc mov xchg inc aas mov add xor mov pop leave call inc inc adc iret xor inc mov add jne cli inc mov jbe mov outsl inc mov mov std dec xor inc mov mov out jbe mov lods push mov cmpsl scas jbe add mov jbe mov gs pop sbb inc mov adc iret xor mov pop lods ljmp adc iret xor mov inc mov jp mov std int (bad) cld inc mov std push mov je xor std inc pop jns inc mov out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out scas cmc out fcoml add addr16 inc in push mov std lds jle inc mov bnd jno std inc aas imul mov cmp inc mov and out std inc mov inc je jns mov std jnp call aaa inc mov rolb push cld inc mov loopne mov bnd std inc pop sti cld inc mov mov rcrb xor lcall rcrb xor lcall rcrb xor lcall rcrb xor lcall rcrb xor lcall rcrb xor lcall rcrb xor lcall rcrb xor lcall rcrb xor lcall rcrb xor lcall rcrb xor lcall rcrb xor lcall rcrb xor lcall rcrb xor lcall rcrb xor lcall rcrb xor lcall rcrb xor lcall rcrb dec xor inc mov fadds cs std inc mov inc je cmpb std mov rclb cmp or push mov mov pushf jnp out std (bad) mov out rolb clc inc mov bnd std inc mov std inc xor jns mov std lods subl mov std inc ror inc dec jnp inc mov xchg inc mov std mov mov dec (bad) mov std mov mov adc ficom add mov ds out std inc xor dec fidiv jp inc mov push mov std lods insb pop jnp mov sbb push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov fsubr std inc hlt adc mov std mov mov push mov std scas test add mov dec fidiv jp inc mov push mov std scas mov imul movsb loope push dec adc lds ret add shr inc out stc cs std inc dec cltd stc int out jne jnp inc mov je xor out scas sub adc mov std mov mov mov rcrl out std inc fsubr std inc mov dec fidiv jp inc mov push mov std pushl add rcll dec jnp inc mov adc mov std add stos mov add stos mov add stos mov add stos mov add stos mov add stos mov add stos mov add stos mov add stos mov add stos mov add stos mov add stos mov add stos mov add stos mov add stos mov add stos mov add stos mov add stos mov add stos mov mov mov scas sub adc mov std mov mov mov rcrl out std inc pop add jecxz add lds aas stos rol out bnd std inc rorb inc mov jbe test push aas scas mov icebp (bad) jle mov (bad) push mov mov inc aaa jmp aas repnz and cli repz push or (bad) aaa das jmp aaa (bad) cmc inc rcrl iret jb orb std inc mov push loop xchg icebp (bad) jae stc inc mov add out jl mov std inc jecxz adc out std adc in mov jbe mov out std inc je cmp pop inc call out mov std iret jl jle mov cmp pop xchg inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push push inc cld push adc mov out std int loop xorl std push cmp out adc iret jl aam aaa pop incl addr16 pop js mov mov mov xchg shl cmpsb inc push cld inc mov ds sarb mov or stc notb movsb out std sbb out adc xor out xchg inc out std mov dec adc inc fsubrp xchg inc fsubr std inc xor add cld addr16 leave loop mov loop push iret repz std and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov and mov xchg mov push scas std inc in add xchg out std inc loop test jecxz jbe mov out jbe mov and add sub inc mov leave dec lea mov adc sbb mov mov xchg inc fsubrp xchg inc fsubrp xchg inc fsubr std inc hlt mov cmp dec insl cmp mov cmc out std push loop test loop test pop outsb std inc mov (bad) enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter addr16 inc xor out int3 (bad) idivb mov loope aaa das jmp aaa (bad) std xor jbe mov lcall mov adc pop add cmp cwtl std lds fwait xorl ljmp shrb stc dec mov jbe mov out cmc inc mov std sub test sub test cs std push loop test cmp out adc movsl out std push cmp out adc movsb out std push xor out adc int sub inc mov xor test jne mov out mov movsl out std push pop dec cld inc mov jbe mov out incl mov (bad) ds dec out mov icebp jge call add mov repz inc in push nop inc mov stos int loop mov mov mov dec xor std xor ljmp pop daa std inc mov sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound sub bound jbe mov adc inc mov std adc out stc inc mov cmp adc mov std mov dec jmp inc dec mov std inc in insl lds cmc jbe mov xor out cmpsl scas cmp add mov std inc fsubrp stos mov jb cmc inc mov std sub test adc out xchg inc dec mov sbb mov movsl lds xchg inc ficom add mov loop rep lds sbb ja fildll int3 test jne mov out mov mov aaa push flds out std dec xor cld inc mov fsts out cmpsb int addr16 push out std scas pop out std inc sub fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo fsubrs jo clc mov cmc je pushf out std inc fsubrp xchg inc test std mov mov std sub adc mov std iret xor cld inc mov js mov std scas insl loopne inc out gs leave loop out out std inc aas scas cmc ja scas (bad) pop mov ljmp test mov cmc iret cmp add pop jl mov std inc cmp mov int mov cmc xor jle mov or out xor out je in pop ss mov jle mov adc mov cmc je test std inc aas jae inc mov je nop out std inc shlb dec rcr dec jbe out std and adc xor insl cmp aaa sub lods push insl cmp aaa sub iret and cld inc mov dec pushf out std inc cmp out inc inc aam std int (bad) cld inc mov loope mov out ja mov lods popf scas inc out std inc sub ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja fildll ja lods mov std inc cmp out std int ret mov or dec out mov imul mov int3 popf shlb lds ret nop out std inc cmp out pushf inc cmp cld inc mov cld daa pop inc add aam std iret loope je xor out je nop push cld inc mov je in sub inc mov gs mov or dec jmp push mov cld sahf cmp xor mov std faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg faddl xchg fsubl dec mov repnz dec mov nop cmp jl aam aaa sub push iret mov jle mov daa dec ret sub ja mov mov aaa sub jge mov xchg testb sysret aas cli (bad) or stos flds addr16 (bad) ja cld inc mov xchg push fsubr in inc mov xchg mov mov cmpsl int lret mov mov inc pop and mov sarb mov (bad) xchg std scas inc add mov mov push scas mov idiv inc mov add out jbe cmp addr16 loop or push jbe nop insl adc lcall into je pop roll out xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl xchg das fldl add rorb lahf dec adc xor pushf mov rorb add roll inc mov out pushf and xchg or adcl insl adc adc (bad) lcall pop jnp mov negl lods sub out adc or mov stos das (bad) lcall fistpl mov loopne sahf sub shr in out std js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js rol js push cmc mov loope nop daa les fwait adc fildl add movb adc pushf cwtl daa shr adc or lods (bad) and lcall shrb sbb les xchg xor mov cmc (bad) xchg sub (bad) and xchg or adcl mov std iret cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 cmp addr16 or mov cwtl adc pushf cwtl daa shr adc or test xchg xor xchg mov fcompl pop push adc or mov xchg xor xchg mov fcompl aas push adc add lcall shlb std scas sub add movb add mov test cmp mov icebp xchg xchg xor sbbl inc pop push daa mov aad cwtl push movb inc pop inc adc dec stos cwtl and mov sub mov sub cmpb addr16 std inc sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb inc push out sbb push add shrl cwtl push movb scas xor add rorl and lcall dec adc das (bad) pushf pushf xor scas std scas mov add rorl and pop out std inc dec adc push mov dec adc push mov dec adc push mov dec adc push mov dec adc push mov dec adc push mov dec adc push mov dec adc push mov dec adc push mov dec adc push mov dec adc push mov dec adc push mov dec adc push mov dec adc push mov dec adc add repnz sub out adc add sarl adc pushf cwtl daa shr adc add lcall rcrb in pop adc adc fldl mov inc pop cs xchg and sahf std scas or adcl xor stos mov ficompl add rorb inc pop or mov rorb scas add add shll cwtl inc pop in adc (bad) mov rorl mov dec mov std fs int3 fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld fbld subl in rolb sub fadds (bad) mov adc sub scas mov movb adc scas and mov scas repz mov fsubrs mov jecxz adc add lcall rolb inc pop lods sub flds lods xor lea lret bound add rcrl scas das into mov scas loopne add roll xchg adc xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg push (bad) mov adc pop mov adc or into mov data16 mov (bad) mov mov mov out cwtl sub into shlb cwtl daa rorb xor xchg ss roll imull int cwtl aas xchg rcr fs movsl mov and cltd pushf xor mov das xlat pushf xchg xor jecxz xchg and cltd mov negl mov rcrl adc xorb pop and mov jecxz xchg adc lcall xor into nop aas decl adc fs int3 scas add mov sbb jecxz adc xchg push xchg out adc inc mov std scas scas push add pop cmp std inc mov ds dec adc inc mov adc inc mov std scas mov add dec adc sub sbbl pop mov mov (bad) mov inc pop adc mov fstpl mov int mov (bad) add mov fbstp (bad) scas std scas sub rcr cmpsb mov ret lcall adc and add repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg repnz xchg pushf sbb jnp (bad) test ret iret insb lret fstl jmp in aam movsb add xlat pop (bad) aaa (bad) mov leave mov test punpckhbw push sbb fildl sub adcb (bad) gs test jno inc cli adc fidivl aas es hlt or mov sub mov jg loop lods inc (bad) xchg dec xor loope xor stos and movsb push dec jmp pop out test adc jo out div fwait mov icebp fist ja inc fistl jecxz add lds call cmp xor into pop mov imul mov mov add inc mov fs pop lahf enter sbb mov dec (bad) int inc sarl jns lds dec into into jnp inc sbbl push inc push jp cmp fsubp mov lahf and (bad) xor push adc mov adc xor sub xchg cmpsb mov cmp xchg cld repz mov mov ja mov jne or mov xorl gs pop leave add xor in jge out shrl adc and shll cwtl scas movsl out (bad) cmp add mov (bad) cmp sti adc clc sub inc adc in pushf pop lock (bad) in (bad) adc mov and frstor aad lret call je fs sub add insb pop dec or jle mov xchg jbe jae mov jne cmpsb lods jbe fucompp (bad) xor xor clc sbb cmpl xchg and cmp push movb ja push pop sbb cmp dec ds mov ds jbe iret pusha mov imul sarl in sub jle xchg inc mov mov pop pop pop xchg fwait or into sub jecxz cmpb stc inc imul push cmp aas aad sub repz insl inc pop mov ljmp das xor popa nop sub js push push push cli mov and cmp jns (bad) (bad) lods mov inc or outsb ds in push repnz pushf add (bad) and push sbb call xor push adc mov adc push out xchg movsb lret addr16 lret (bad) repnz pushf sti push inc sbb (bad) test mov mov xor and xchg or adc (bad) hlt adc insb sti dec outsb push sbb xchg pop pop push xor add inc pop das xchg sub sbb and pop mov cmp cmpsl inc ret sub cs movsl sbb mov lahf inc in add aaa pop mov leave push es cld insb push nop (bad) loopne test (bad) jl ret arpl sub inc xor cmc sub cmpsb fbld imul mov icebp jmp sbb mov sub repnz adc daa lods roll add nop pop mov cmp xor in jbe adc mov idivl idivl fs test fisubrl add mov rorl leave mov into sub aas ficoml daa loop add xor sbbl cli ret inc in fdivrl add jl push aas sbb call adc insl dec pop mov das or inc jae mov xor popa push push stos pushf push adc mov mov lods or add or push mov (bad) xor lret enter ret insb xlat mov test out sbb nop clc push sub pop jae ficomp mov notb mov push push pmullw shlb aaa pop pop sti scas std sbb mov icebp pushf (bad) jge out je (bad) adc or cmpsl out pop jmp movsl xchg (bad) frstor pusha out pop cmp mov push sub push in cs xchg push pop pop add outsb cli mov mov data16 fldl cmpsl inc aaa mov imul outsl call rcrb stos sub mov add lds icebp ljmp sub scas stos ret jne cmpsb or xchg fimull das xchg or clc mov mov push idiv mov test and push add mov dec loopne pop xor inc sub xlat stc int3 adc sbb mov jge xchg and inc inc mov mov in xor inc andb mov fadd push (bad) test sahf or mov sub and dec jg push fisub add mov pop xchg push call std add subl mov or pop or aam out pop js cwtl clc or pop aad cmpsb pop in xor mov rclb xor and jecxz adc sarl fldenv mov xor in pop and pop clc scas enter inc (bad) addr16 negl (bad) in lret ret inc ljmp pop arpl sub inc adc mov icebp bound mov sub hlt das push and push test add movsl ja dec mov lods loopne xor xlat stc inc adc int3 lea cmp mov jge push and inc xchg inc mov in xor inc addb sbb inc (bad) data16 push paddd mov dec jmp in or loope sub and add mov pop into push call std add subl mov mov in xchg pop or aam test js cwtl clc out aas pop sti shlb popf jns outsl jb fst mov or and jecxz adc popa cmp dec mov and pop mov and pop clc mov push es inc scas addr16 negl (bad) (bad) test fmull mov arpl sub add cld lock inc cmp fwait and and out test je push add mov lods loopne xor dec stc inc sub adc sbb and inc xchg gs inc xor aaa addb sbb inc (bad) data16 mov mov dec jmp in or jl dec sub and mov sub fs mov pop into imul push add adc orl or sub in test js aam out pop pop sti cwtl pop ret lea ljmp xchg mov add loop pop aad or push sahf adc pop xor and cmp les arpl adc fsubs or cli aas out repz sbb xor jbe loope and xchg push and stc sbb lcall ss aad lret call je arpl or cld inc shrb dec mov jge dec (bad) xchg push xor loop out or and sbb imul jb das hlt or xchg push negl into cmp jmp pop jnp push adc dec setae (bad) in mov sbbb inc cmpl (bad) add push out adc xor sub sub outsb inc push add mov cld (bad) int3 test push add cmp fisttpl es xchg nop adc pop add or jp or fs inc dec adc mov dec sub clc test jns mov jno out testl add and push (bad) adc fcompl movb ja (bad) mov cmp or fistpll fwait ret test das mov int push pop (bad) cmc inc dec inc in adc movsl adc loope sub leave xor arpl lods pop aam dec push enter pop xchg push mov dec push jmp (bad) shrb or aad and pop add add lcall popa ds xor jns xchg sbb repz int3 xchg gs lret and stos cwtl inc popf out push sbbl and ljmp push add mov mov insl test nop inc lret imul iret or jne mov cld jbe out fs jmp sub jb dec xor (bad) cmp les decb hlt fistpll repnz push (bad) add loopne fcoml pop pop dec mov cmp (bad) dec fwait sub ret test das outsl push scas (bad) cmc int inc pop adc movsl adc xor sub push inc leave xor arpl sbb enter dec xchg push add dec pop jmp mov rclb adc fst insb and pop add imul xchg lcall mov jns int3 sbb jle lret xchg sbb addr16 cwtl lahf push and daa mov push add mov out insl sti xchg in test repnz ret sbb sar or jbe out fs jmp sub fnstcw dec das pextrw jb cmp pop jno jge hlt or add and fcom add js push fcoml pop pop sub movb ja cmp (bad) or dec pop ret test das mov int inc pop rcrl adc adc sub mov arpl sbb enter dec push push add pop xchg jl xor push jmp (bad) aad and or add imul xchg lcall popa xchg (bad) xor jns int3 sbb jecxz jae xchg sbb push lret rorl push stc and pusha hlt test fcom mov enter or out mov neg inc scas mov addb inc lret mov mov sbb hlt pusha and in ljmp jp pop jnp sub mov hlt push cltd das mov cmp xor out add push push lds loope xchg cmp jmp cmp sub scas jno mov mov clc (bad) xor or pop testl in xchg mov rorl jmp mov clc and cmp push and or add rolb mov xor inc addl xlat push adc (bad) leave rcrl mov push dec xchg jge sbbl mov pop adc xchg jmp nop add push ljmp mov jb mov pop test mov xlat lock jno mov jne and repnz jmp push dec aaa repz and outsl push nop dec mov sti push testl loope shl lret cmpsb pop jbe (bad) imul pop adc cmp push mov mov push adc je sarl repz pop xlat dec cmovns cmp xchg loop ret sbb sbb out pop lea (bad) cmpsl icebp fdivrs test leave jp mov cmp std adc cli sub inc adc sahf pusha repnz enter adc test mov add cwtl dec lcall sub stc aad lret cmp (bad) mov or jnp xchg arpl add cld mov mov ljmp sbb xchg mov (bad) movsl pushf or test jp andb xchg and dec jge sbb bound addr16 mov pop nop dec mov sti mov iret push les xchg loope shl (bad) cmpsb pop or ror in pop jbe xchg (bad) or push mov mov mov jns je push jl fstps popf dec pmulhw cmp fsubl xor (bad) xor and out cli lea (bad) pop icebp fsub test cmpsl jp ds mov sub inc adc scas out out pusha repnz mov sahf lods cltd fsubp repnz out test mov dec mov addr16 into mov sub lret cmp jnp or or cld xchg inc mov ljmp sbb inc aam jg mov (bad) mov inc movsl mov ret addl dec daa imul mov sub addr16 mov pop int3 dec mov sti mov iret push imull push loope (bad) pop or ror cmpsb pop jbe xchg imul cmp or push insl jo cwtl mov adc jl popf lahf pmulhw xlat dec mov fadd (bad) ja loop pop and push and cli imul fsub fldl test leave jp add push mov push push cmp xor fisub outsb out arpl daa xor push mov test stc repnz aas pop fdivrl jmp cmp scas adc sahf dec push xchg mov fwait (bad) mov out cmp jmp mov and cmp js lock (bad) lea jle aam sti loope mov adc inc mov pop stc out pop (bad) xor dec jecxz xor mov arpl js je add sbb xchg mov push es cmpsl popf or mov sub push and lcall imul push lret inc add (bad) sub imul or mov out pop mov mov or push iret sbb data16 adc icebp arpl es and insl cmp or lock jecxz lcall sbb adcb push pop and and divb mov xor mov push add daa adc sub imul jge dec fsubrs shrl fist stos test cs xchg inc push mov popl lret mov out test in xchg mov or xchg sub hlt push test gs enter mov (bad) mov mov movsl rolb (bad) sbb xchg cli pusha add lret stc pop inc or orl fistl and (bad) sbb or lods iret mov icebp icebp arpl cmp cmp xlat pop sbb (bad) (bad) rorl sbb dec lock sbb jecxz lret popf (bad) jae fiadd push pop push std and mov push inc repnz bound mov push sub fsts pop add cmpsb daa fwait inc pop imul jge loopne stos out xor shrl fist stos test cs xchg inc dec mov popl lret fdivl ss adc mov or xchg clc sti hlt into test gs enter mov (bad) mov mov cmp add (bad) cmp xchg jne jno mov lahf inc or dec pop inc fcmovnbe out jnp jo xchg mov adc (bad) mov or lods iret sbb data16 mov mov push in es and sbb xchg xlat or mov push (bad) dec lock jecxz lret popf xchg jae cld sbbb push sub push mov std inc repnz bound (bad) mov xor mov sub fldcw add daa adc sub lea loopne stos out xor fsubrs les shrl stos not mov int3 mov sub aam wbinvd bound popa sbb inc mov movsb cs pop jae mov or scas andb push mov xor cmp dec aaa imul mov outsb sub dec mov stc mov mov and (bad) fildll loope pusha pop or ror cmpsl push je xchg hlt pop cmp cmp dec add xchg add and sbb inc xor and orl lds inc idivb xchg repnz dec fsubrl rorl lret int pop adc cld dec icebp movsb repz (bad) mov push and out test in fs out mov or inc mov jb cltd cs jmp scas gs (bad) cmc fs inc rcr fdivrs jmp cmp mov es mov enter sti in data16 push flds sub cmp sub (bad) mov pop sub inc mov pxor xchg insl call loopne hlt rclb jecxz roll push pop aad xor dec sbb sub iret in cli mov lea or ret inc mov aaa dec mov xor add add sbb xchg sbb mov imul inc dec mov testb cmp dec xchg rorl lret faddp pop adc movsb adc mov pop mov das push fwait sub push test in xchg mov fs out pushf push pop mov inc mov pop xlat pop int3 jb cltd cs adc ficompl cmc fs sahf (bad) adc fcmovnu lods pop jmp cmp mov ss mov enter sti or pop in flds sub cmp sbb arpl sub (bad) mov pop out dec inc xchg insl pmulhw (bad) clc loopne hlt shrb jecxz roll push pop imul aad div push cmpsb stc mov sbb iret jo mov or stos jge push ret inc dec mov xor aaa fldl dec sbb xchg sbb mov imul inc dec popf dec lds cmp loop xchg jnp aas dec fsubrl rcrl cld int movsb adc mov icebp mov pop push fwait (bad) out das jae sub test xor outsl fs out mov or inc jb pop cs gs ficompl scas fs sahf (bad) cmc inc sbb jmp (bad) cmp (bad) les pop mov sarb ljmp arpl sub lods dec mov out shrb ror cmp (bad) cmpsl mov dec cwtl mov cmp cli jg pop and lea jo call (bad) divb cmc es jmp mov scas cmpsl jns dec mov scas loop xor inc sub add jb jmp fwait push test cmp call mov and jnp pushf stos push icebp js js inc cmp xchg andl iret xor idiv (bad) mov pop clc out pop fst xor dec jecxz and inc std mov mov jmp cmp jg je mov xchg mov andl push mov imul and and adc xchg out push push lret inc add mov imul mov int3 vorps nop out add push mov in jno pushw xchg orl mov inc mov std pushf fimull adc rcr jo (bad) push and cwtl pop popa pop lock add lret sbb xchg cs push in in (bad) jnp sbb pop js cmp cmp (bad) dec or sub popf das test (bad) sbb xor pop push movsl sub stos inc clc adc mov mov repz xor xlat outsl insb adc jg lret aaa imul out adc push dec mov rolb out sub cmp je adc dec cmc in mov out loop sub mov mov xchg pop lahf enter sbb mov lock dec int sti sarl xor scas add add lcall mov aam sub repz ffree int3 fdivs aad stc mov lods jmp mov std mov and psrld sbb lfs jo pop jno lock (bad) popa test cmpsb mov lret sbb in (bad) jnp sbb mov cld es sahf pop push cmp and popf (bad) sbb xor pop push and rclb movsl inc clc call notl xchg xor movsb xlat rep insb inc ss lret aaa adc or ja out adc push dec mov shlb out subb mov cmp idivb cmc mov (bad) in and sub out nop hlt (bad) mov xchg pop sbb sbb or mov rorl ret cmp or into pop inc push and jecxz mov adc cltd push repz inc jp int3 lret (bad) stos daa lods aad dec mov mov std mov and pcmpeqw sbb (bad) shlb jo pop jno lock (bad) popa pop cmp xchg lret sbb in push jnp roll (bad) cld sbb push or push in sub popf das sbb and (bad) push and rclb movsl sub stos inc notl loopne aad xlat repz insb inc movsb jg outsl aaa adc or ja push adc dec dec mov shlb (bad) hlt outsb mov pop scas fwait loopne mov push and push inc jo mov dec mov imul cmpsb xchg inc push mov test cwtl (bad) mov aaa scas and mov cmc decb cmp ja inc cmp jecxz add jbe cmp hlt pop or sub fstl cmp mov mov dec cmpsl push dec jp xchg bound add in mov jae js inc jmp fs mov lds int3 sub ret fidivrl (bad) mov pop cmpsb and shrb inc loopne stos sub mov rcl jns test testl loope or push aam mov iret jno sbb mov dec dec xor sub push mov call xor jae sarb pop repnz cmovs (bad) jbe popf xor adc out dec inc adc pushf mov (bad) aaa dec jge adc in and jno mov lods mov sbb xchg mov inc mov loop rcll movsb and mov cltd mov movsl test jnp dec (bad) insb lret ret mov nop cltd movsb sbbl lds sbb test test out push xchg pop loop sub pop les cmpsl outsb subl xchg dec mov push xor cs hlt jnp,pt mov dec stos inc jg dec jl jno jae xor loope pusha or mov xchg repz jmp cmp adc sbb jl repz mov fist ja push fcmovne sub int ret inc add xor mov mov mov adc add xor sub outsb inc sub (bad) cmp dec adc lret loop cmpsb push inc xor mov and aam adc dec ret dec dec sbb mov add pop jno int out cmpxchg mov out test add jae mov add and popf push mov adc sbb adc pusha jae icebp in cltd xchg arpl test jns mov push push sbb cmp xor pop dec sarl outsb popf arpl adc gs sti push mov testb pop in loopne sub mov jne mov movsb insb dec imul add jge and aad jae jo mov dec test jno mov in sub inc sub add and sbb jle sbb (bad) sub cmc repnz js xchg push mov aam sub aas fxch daa loop add push pop addl ret cli add in push cmp sarb aas pusha iret call scas xchg add enter push ljmp sub out js sbb rcl adc dec dec adc jmp and add insb je add add add add add and adc add add call add add and add add add add add and add add add or add add add add add add add add add add addb add add add addb addb add addb add incl add add add incl incl add incl incl (bad) incl add (bad) incl add add xchg or add xchg mov add add pop add add or js xchg xchg mov add add add or js mov add add add ja js jg jo add add add add ja ja add add add add add addb add xchg jo jno ja outsb into addb add push js ja in in jo add ja ja ja js jbe jle movl ja xchg ja jbe (bad) out cltd add ja xchg js ja out add add ja mov jbe call divl ja js (bad) clc mov in out out or ja mov mov add ja js addb add add push clc mov in call add out add decl add add add enter lock add mov or add add add out call add enter add add add or add add add add out pusha add add out pusha add add add add add imul add addb mov add add add xchg add add add add add add jle add mov add mov add call add add add add sub (bad) clc add push add jmp add inc add incl add incl add add add add add add jg add aas add add add add add add add add addb cmp add cmp add cmp shrb jmp daa cmp jmp xor jmp xor jmp add jmp add incl pop (bad) decl (bad) lcall pop (bad) (bad) aas aas (bad) (bad) aas aas (bad) (bad) jg sub add and add inc add add add add add add add add cmp add cmp add cmp push dec add inc add inc add add dec add dec add push add push add push add pop add pop add pusha add popa add add popa add push insl insl insl add jo jno jno jne jne ja js jns jns jge jge xchg pusha pop add push or sub add sub int or add jnp add jg add andl add cmp mov cmp mov mov add addb aad add fild ltr xchg pop add sbbl aad pop add mov add lea add mov add xchg add mov add xchg sbb fistp push add cwtl add call xchg add in pop add xchg sbb loope sbb add mov or in mov adc in sbb in mov sbb lds es subl rorb and fstpl xor add xchg xor iret xchg ds cltd cmp fcoms ss xchg cmp add lcall in and call cmpsl and in test es lods daa add lods sub lock and lock and add mov add mov add mov add mov add mov add mov xor sti mov inc add xchg dec add sbbl mov test xchg mov stos mov stos xchg push lods xchg insb add xchg jo mov jno mov mov jnp lret xchg inc add cltd inc add fwait dec add push add sahf pop add mov dec add movsb inc add mov pop add movsb pop add test pop add lods inc add scas inc add mov add mov add mov inc add mov add mov dec add mov push add mov add mov addr16 stos popa add movsl imul lods addr16 cmpsl imul stos outsb add lods imul mov add mov jnp xlat mov add mov add mov gs mov jae jmp (bad) dec add ret pop add ret test add aad add fidivl jg addb addl add mov add xchg xchg add xchg cwtl add fwait pushf add xchg test scas pushf (bad) add popf imul mov movsl xchg mov mov xchg add mov movsb add cmpsl test test stos lods add test movsb add mov add mov add mov mov mov add sub (bad) cmpsb add mov scas add mov lcall sarb leave mov add int3 test add (bad) add ret les (bad) add leave leave add lret int3 add int add iret rolb rcl roll aad (bad) add fcom add fcomp add fstp add fld add ffree add in add ljmp cmc cmc testb add add (bad) incl add add add add ror int3 rolb add add add add into into fucomp fcomps sbb add ror mov icebp sbb fadds add add mov fcomp repz adc sub fdivs into xlat fucomp (bad) int3 push mov add mov int3 shr repnz icebp fmuls sldt add add mov mov mov div jmp or add add mov mov adc icebp sbb mov add add mov mov mov push add repz jle loop rcrb mov mov adc or push push sbb mov (bad) add cmp out add add add rcrb sbb mov adc or push push sbb mov sbb jo add add add int3 sbb sbb invd push mov sbb and je add add add adc sbb mov sbb arpl xor add add rclb sbb mov int3 jmp sbb icebp icebp ja push inc cmp sub add jmp sbb sbb sbb div js arpl inc inc sub add add sti mov mov sbb icebp fcom repz cld jmp fwait xchg outsb push dec sub add sbb adc sbb mov repnz mul movsl mov insl push add add add sti fnsave into repz jecxz test or add add (bad) and add cli repz fdiv sti mul push inc inc xor and add add dec leave add add sti idiv cli jmp sbbl inc das xor add sub add xchg pop add add dec les add add add add add dec inc aad jns add add jmp add lahf mov and add add sahf pop roll add add add xchg push add cmc push pop add stc pop add add imul add add add add add insb ret add push add add xchg out imul add cmpsb mov add call add add add add add add add add add add adcl add add add add add add add mov add fiadd add add add cmpsl add add add add (bad) (bad) clc add ljmp (bad) jmp add inc add incl add incl add add add add add add jg add aas add add add add add add add add addb cmp add cmp add cmp shrb jmp daa cmp jmp xor jmp xor jmp add jmp add incl pop (bad) decl cvtpi2ps pop pop (bad) (bad) aas aas (bad) (bad) aas aas (bad) (bad) jg sub add and add inc add add add add add add add lahf lahf lahf movsl movsl cmpsb cmpsb cmpsb cmpsb mov les jns js add xchg xchg xchg xchg mov scas mov int lret int3 jp jp pusha popa jp add add repz add cmpsl cmpsl cmpsb mov xchg xchg cwtl mov stos mov mov mov vshufpd addr16 add add xchg xchg xchg xchg xchg sahf sahf sahf cmpsl cmpsl test mov mov (bad) xlat xchg xchg xchg inc inc inc nop nop nop add xchg xchg xchg jg jg mov (bad) (bad) popf popf sahf scas scas scas ret ret (bad) iret iret iret lret lret lret lret lret int3 mov mov pop pop add add jp add add repz add scas scas scas jle jle test test test mov (bad) (bad) xlat rcl rol rol push dec dec dec add add jl (bad) (bad) jge jle xchg xchg xchg pop pop pop cmp cmp push aam aam lret jl dec dec dec rol addl jg mov push push push repz inc inc inc cmp cmp rolb dec dec dec dec (bad) jp mov insb mov jno movsl xchg add jae addl test push inc inc inc inc inc inc inc inc inc inc inc inc inc inc jns jp int3 int3 mov pop pop pop inc aas cmp sbb lcall sub add cmpsl cmpsl cmpsl jb jb addb test jp insb insl pop pop pusha dec dec dec inc inc inc inc inc inc inc inc inc ja js rol mov fs jo in push loopne sbb mov fisttpl add add add add add repz add add add add jno jge jns jns xchg jge xchg xchg xchg jg sbbb dec dec inc inc inc mov test insl outsb jo jo pop push xchg jmp and pushf push aad pop int or sbbl mov insl jnp jnp ja test xchg mov mov pop pop pop fwait fwait pushf mov mov jle xchg xchg xchg stos stos lods xchg xchg xchg imul jo out lods daa call sbb mov (bad) test mov cmp add imul jg jg test mov lahf lahf lahf jl jge jge lods lods lods cmpsl cmpsl cmpsl lea int3 int3 int repz mov lock in stos es and xchg sbb lea mov ret outsl outsl outsl jne jne jns ja ja addl jno jg jns jp je cltd cltd cltd rol sahf sahf sahf lods lods lods aad (bad) (bad) (bad) int xchg mov nop cs scas daa lock and popf sbb jg add add add mov jo jmp xchg addr16 js je js js (bad) (bad) addl outsb outsb mov mov mov test rcl (bad) cmc cmc imul out out mov stos xchg push mov cmc mov in stos sub mov add add add fsubl rcl (bad) jae jae imul jo jb jae jae je lea enter mov mov shl out (bad) fnstcw jnp mov jmp outsl jmp je mov add sbbl add add add in in mov (bad) insl insl insl imul insb insb jnp jnp movsl movsl rcl ror iret iret mov popa fidivrl mov xchg add scas inc int3 xchg xor lret xchg inc mov add add add add out rcl (bad) mov mov cmpsb cmpsb mov mov (bad) (bad) ljmp ret pushf aas out movsb add sahf push fist aad add repnz iret lcall add add fidivl add add out (bad) fnstsw loopne jecxz jecxz ret ret add add cltd inc fldenv jmp add cwtl add addb test add mov lret stos pushf mov add sahf pop into xchg cmp mov in mov lock sbb mov add add add stos mov add add mov rcrl add mov lods lahf mov add add lods fidivrl in inc (bad) pop clc mov add add jbe out mov rcrl add add add movsl imul das add add scas and add add add mov xchg pusha sbb ljmp fcompl add add mov add add add add add lods inc rorl add mov es add add add add add add repz add mov add add add add add scas push mov cmp add shll mov add add mov add add add mov and fsubrs (bad) test cmc ret pop (bad) fidivl test add add movsl and add add add mov add add add add aam repz call jae test add (bad) mov loope dec lds add test aad pop test mov add or add (bad) cwtl push out mov add add cmpsb push mov add add iret lcall fldcw add add add xchg aas add cmpsl pop scas pushf (bad) add add add add add fidivl les (bad) mov (bad) push add jmp add inc add inc add incl add incl add incl add incl add jg add aas add add add add add dec aaa add add addb cmp add lock jg inc outsl cmp lock cmp jmp (bad) pushl (bad) pushl (bad) jmp (bad) ljmp (bad) decl (bad) lcall pop (bad) (bad) aas aas (bad) (bad) jg (bad) (bad) (bad) jg or inc imul addr16 add test add adc add inc add incl hlt push add dec add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add (bad) (bad) incl add add push add add add push add push add push add add add add add add adc inc add (bad) (bad) incl add add push add add add push add push add push add add add add add add mov inc add (bad) (bad) incl add add push add (bad) (bad) incl add add sbb xchg sbb sbb dec add sbb dec sbb and inc add inc add inc add dec add sbb pushf sbb sub dec add int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov sub push push push mov movl xor lea push push lea push mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl call lea push call mov lea call lea push lea push push call mov add cmp jne mov push push call jmp mov mov mov push push call fnclex cmp jge push push push push call cmp jne push push call mov mov lea push push call fnclex cmp jge push push push push call mov mov lea lea mov mov movl call cmp jne push push call mov mov push push call fnclex cmp jge push push push push call call mov lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call push lea push call lea mov mov push push call fnclex test jge push push push push call mov lea lea mov mov call lea call lea push lea push lea push movl movl call mov lea call lea push lea push movl movl call test jne mov test jne push push call mov push push call mov push push push lea push movl movl call add push lea push call lea mov call test je call lea push movl movl call mov lea call lea call mov movl lea push lea push lea push movl mov call mov lea call push push push push call test jne lea push lea push movl movl call test je mov cltd and add sar mov mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov lea lea mov mov call mov push push push push call push call mov call mov mov lea lea mov call mov test jne push push call mov push lea push call push push lea push call push call add push jmp lea call lea push lea push push call add ret mov lea call lea call mov lea call lea call lea call lea call lea call lea call lea call ret mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop xor ret nop nop nop nop nop nop nop nop nop nop nop nop nop sahf sahf sahf sahf cmp or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp add inc xchg add or pusha xchg add or jle or mov or mov or les add rolb or add or push xchg add xchg add add or pusha xchg add or (bad) xchg add xchg add xchg add xchg add xchg add mov add mov add add popa add andb or mov add or xchg add pop mov add or orb add add andb mov or rorb add mov add mov add mov add or sub or mov add or push add adcb add add or jo or orb addb add dec push push inc push dec xor inc dec dec add xchg add jbe popa push popa jb jae inc je push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa push je push popa jb outsl jbe add bound jb gs popa jb imul pop popa fs imul xor mov pop popa fs data16 gs xor sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add push imul xor incl pop pop jbe popa dec bound gs cmpsl add fs imul imul pop jbe popa dec bound gs fs data16 pop imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa dec bound popa jb or inc insb insb inc jne arpl outsb inc popa insb insb add push data16 je outsb add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa dec outsb push je push popa jb push add dec insb outsl add testl popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add lods add fs imul xor add stos add fs imul cwtl add jbe popa push popa jb jae dec gs add jbe popa dec xor popa jb add pop pop jbe popa push popa jb fs add jbe popa dec outsb push je inc add add jbe popa dec popa je dec gs inc popa insb insb add fild pop pop jbe popa dec popa je dec gs inc popa insb insb dec add jg pop pop jbe popa push popa jb gs bound fs data16 push add dec popa je outsb add add jbe popa push je dec outsl jbe add lret pop jbe popa dec xor jns mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound 