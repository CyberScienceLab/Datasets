pop mov pop out sbb insl adc dec adc push and or mov and andl adc leave inc popf push sahf xor nop xchg stc lods cmpsb mov cmpsl xor jns mov adc mov shlb ss or jno inc out lret jns call fs fisttpll mov sbb mov stos xlat dec xchg add jbe mov fsubrl fldenv cmp lea dec mov inc mov iret mov push sub ja or pop cwtl cld cmp mov and cmp andl jo or int3 popf ret ret iret das icebp fdivrs in rcrb aas sti outsl fs cwtl aaa pop mov mov or mov js je xchg (bad) cmp jge out inc int3 incb push aam fcmovb cli jns shrl lcall inc (bad) jne out insb scas mov add mov lds jo (bad) call pop cld lea divb xchg movsl push sbb mov mov popf xor mov int xchg cwtl mov (bad) or add xchg ret mov out mov sbbb das icebp fstpl cmp push movsl lods (bad) icebp adc ret mov jno sbb jb cmp fucomp js or mov add lret repnz mov dec cltd out push in cs xchg push jge std cmc int je adc sub ss gs xor sub shrb and leave adc ret out sbb scas (bad) cmpsl inc fs inc shlb repz xchg push rorl xor lods push and mov or aad cs inc aaa icebp pop call mov mov decb mov cmp icebp mov shlb mov jne sbb fsubrl fstpl test cmpsl sub push jecxz mov dec out jle int cmp sbb outsb (bad) jno pushf aad outsl cmp xorl xorb xor imul add or movsb xchg mov stos dec data16 arpl movsb fdivrl out je mov fistp jbe lods movl icebp shll imul jns push sbb or lock mov incl movsb test (bad) icebp xor sub cwtl sub int or mov add pusha sbb pushf sub cmp (bad) mov xchg pop rorl movntq jne js and dec sbb repz shr hlt mov inc lods in mov pop add jp outsb or int3 (bad) cmp loopne xchg cli leave push or xor dec int3 aaa add sbb js jl dec leave mov fwait arpl negl (bad) lods std add lock icebp pushf insl lock fidivl push pop orl es (bad) stc sbb popa push inc dec outsb xchg lahf mov jl jp xlat out dec enter (bad) sub (bad) fs scas cmpsl sbb scas addr16 (bad) aaa popf lods or clc xchg sub mov push scas insb or (bad) mov sub mov and in add dec jl mov cmc xchg test outsb lcall jecxz cltd insl popa push push (bad) sarl (bad) jge out pop (bad) mov sub stos (bad) lock cwtl add jecxz lods mov (bad) loope mov addl add sbb mov pop inc and jo push out mov mov nop lahf mov fisttp mov cmp in pop mov xchg (bad) leave xor loope push sub mov js fs outsb (bad) mov cmc sub cltd fsin imul xchg pop adc fmull rolb out dec outsb mov mov xchg scas jns clc cmp (bad) (bad) movsl js fisubl daa sarb jns push cs (bad) dec test xchg js mov js pop xchg test lret jge pusha sahf inc sahf pop cld mov mov mov (bad) imul add fwait pop (bad) pop idivb insl adc add adc jl adc movsb iret or enter xchg push hlt arpl and lds lret cmp pop stos dec push mov mov fs add dec inc in bnd fsubr mov imul (bad) pop loope repz xchg mov ret pop lds int insl push jp insl mov push gs mov jmp adc aad aaa inc jo jne push pop data16 aam push pop outsl fs jge push dec mov or mov adc fistpll jno mov jo dec jbe lock lgs scas popf dec and insb insb lock sbb mov lock fstps xorl shrl fimul mov call mov sbb dec fcoms push mov push pop testl xor jmp nop cmp xchg push push loopne,pt xchg cld aas add adc movsl (bad) xchg pusha pusha pushf push or push movsl add gs push (bad) jge ret cmp mov mov test out in fdivs lods mov std call jg bound in decl (bad) mov insb (bad) repz in rorb popa fsave outsb jne pushf fcompp hlt stos (bad) out data16 test in mov and lods popf es mov mov xchg in push enter push inc push inc lcall mov mov jbe xor inc dec mov lds jb ret mov mov lret call out movsl pop mov arpl or (bad) sub mov (bad) cmp dec in cmp shrb jle nop inc insl mov mov jge inc loope popf push xor pop pop mov mov xchg dec stc popf jo xchg in out pop rorb xchg and or cmc ja (bad) aas (bad) icebp pop push mov or hlt ss xor je and nop jnp (bad) adc mov outsl insb jae push sub inc adc lcall mov mov mov jbe pop mov je xchg or cmp inc shrl les sbb test add test push daa arpl mov jnp lock mov repnz pop pop cwtl and (bad) out sarb jne jle xlat xchg cmpsb insl into pop mov out mov push decl data16 lahf jnp jp jne outsl mov fimul js jle jl out into mov cwtl mov incb movsb imul dec mov jb rcll aad mov movsl push push repnz popa xchg xor and xchg outsl adc xor dec test in jecxz movsl xchg mov lret xchg sti out iret (bad) or push inc stc out and (bad) and into addr16 test pop lock or mov popf pop cwtl in faddl xchg mov (bad) lock xor std ror inc dec sbb or add mov jmp fs les into jmp dec inc dec lret int3 mov inc or int3 or mov jne fldt pushf and adc add jb imul jecxz cmpsb cmp jo mov int3 lret sub pop jmp xchg icebp pop jmp lods xchg and push xchg dec add sbbl cltd or mov sub mov sub xor sub sbb arpl bsf (bad) inc fwait mov mov stc dec and fwait pop ret repz data16 cltd xor xlat mov (bad) leave loopne sub hlt rcrl js cmp pop fld mov lock out adc jne jl mov sbb iret jo jbe mov dec enter jo pop popa fldl2e inc inc das push sahf add add add xchg cmp mov mov jne cltd hlt pop pop call jp xchg pop or ds mov mov jge subl adc sbb mov mov aaa cltd popa or or out adc adc pop mov inc and pop push xorl fdivl imul or jmp pop push out test outsb int push negb mov inc or dec in mov sbb aaa addr16 jecxz sub and add in or iret xor and inc nop add xchg inc pushf add out gs stos mov sbb out dec xchg inc adc cmpb xchg test xchg mov dec out push mov inc loopne leave push jecxz das imul push sub dec lea dec in add xchg jl insb loope cwtl mov aaa ja cs sahf mov es fsubl ss je pop or rcrb pusha jns (bad) xchg xchg mov jmp mov iret insb push jl adc jb inc xor or mov repnz (bad) mov (bad) adc loop out pop fldcw aaa scas xchg push cmc xlat mov sub jge stos test icebp dec enter lret sbb lea push fbld out (bad) bound pop popf lods add aad inc push les hlt add cwtl push pop iret jns or fidivr vorps cmp arpl loop jge mov xlat loope or mov cltd test outsl inc cmp cwtl inc ret pop cwtl pop jbe popl xlat iret and mov cs stc dec cmc iret fcompl outsl dec bound jl inc adcl push ret (bad) xor and xchg pop int daa mov cmp loope inc cmp lds mov pop cs inc ja jg adc fildll xor add movl mov pop push mov imul mov es mov data16 add ret mov dec mov push enter push pop and and je stos ret push inc and ja in jle movsl and pop imul jecxz or repnz (bad) mov inc in pop aad call imul jp repnz fs ror mov (bad) movsb js cs sub mov repnz movsb (bad) dec mov inc and mov ds cmpsb sarb iret imul pop push insb or icebp xchg mov mov loopne adc fisttp mov lock inc sub (bad) lock add cmp mov lcall in sahf idivb int cmp sahf and mov aad mov orl arpl jp in bnd add add dec lds dec lahf cmc sbb and ljmp jmp jg dec or mov mov or push lret notl mov lods jo or jae and icebp mov adc lret mov outsb xor scas cwtl lock cmp inc dec icebp sub mov xchg pop fimull cld std jg mov mov jp loopne mov leave stc (bad) addr16 add and (bad) mov dec enter cwtl aam mov push xchg jge lret jecxz pop test stc rorb pop mov lods vmovd sub and (bad) bnd jp sahf popf jnp push icebp stc add or sti xchg out lods outsb out lods cmpsb mov stc jno mov push cmpsb xchg mov loope sbb mov cmpsl dec push inc movsb flds lods jo or jo add addr16 cmpsl aad (bad) xor jp or jns cltd xchg and and mov rcrl fnop ss jl call inc in (bad) jecxz (bad) xor roll jnp push dec xchg out fisttpll add fs sahf leave out xor add cmp imul dec movsl sarb rolb xchg clc adc and test (bad) (bad) andl pcmpgtd cmc jmp mov mov pusha icebp (bad) mov xchg jle jnp pop fidiv shr mov popf add dec outsl dec jo test push lods js jmp jle lret xchg fwait cld fdivr jmp and test mov fwait push insl (bad) adc and jge pop loopne mov loopne stc (bad) lea jbe mov jae mov leave inc std xchg jp xchg xchg insl mov pop adc mov adc xor insl adc mov inc xor fwait sarb lahf loopne idivl gs xor lods loopne fwait fwait xor inc movsb mov loopne imul cwtl jmp sbb push push xchg mov test inc push (bad) cli fwait enter and sbb in loope push mov nop pop add (bad) jbe in mov gs xor lret cmp dec jbe es inc xchg sbb mov out (bad) lea adc pushf and sub sub xor fwait push aam aad insb rcrb mov or icebp fwait sti mov and notl or mov in sbb fidiv in nop sahf jbe jecxz push (bad) adc (bad) lods seta dec (bad) outsb stos popw or lods mov pop cmc loopne (bad) sti or add (bad) fwait mov js cltd imul mov fisttpll addr16 loopne mov pop js cli movsl jns cwtl (bad) jle jb push les sbb test popa inc push adc fsubl xchg sbb daa mov and inc in inc jmp sarb mov jge imul mov sbb sub add scas dec rcrb xor daa in lahf sbb enter cmp dec push jmp popf and orl pop mov mov leave das mov fwait stc push pushf adc lret jb and push xor xchg fwait cmpsl cmp xor xor adc mov and aam xor mov xor jns xchg mov or or jge outsb pushf out inc sbb inc cs lock out insl xchg pop or add inc mov fs out ss mov dec pop sbb inc sub hlt or (bad) int fldt test inc xchg test jns push ljmp hlt cmp pop out movsl inc icebp mov and xchg je xor inc outsb add jecxz xchg (bad) in pop ficompl popa arpl jb push inc in xor or pop aam sub iret test loop aad shl adc out jecxz or xchg cltd std mov adc or imul out fimul loope xchg mov rcl fistpll jns inc and insl mov mov inc idiv loop jge jo xchg mov fsts lods cmp or inc andl sahf push hlt test sub dec inc pop movsl mov ret stc fsts mov mov pop cmp xor lea cli mov xchg dec push inc mov fs mov pop dec aaa dec mov or leave js mov sti dec jg inc xchg or pop (bad) adc mov xchg push pusha insl lea fwait test outsb lret mov xchg inc repnz mov adc or or add neg xorb loop add xchg int3 pusha sub in xor dec or daa and mov (bad) pop push or lods lock or insl je mov mov mov jp mov pop fisubl arpl fstl jecxz dec outsb ds push jae leave jb mov sti or gs bound in or xchg ret inc ret adc cmp ficomp mov add jb mov movaps and and test scas inc (bad) sbb enter xor jp test jg ja test adc xchg cld xor pop xor mov adc pushf mov leave xor and out leave jmp push addr16 mov sub nop call jp push out mov mov fldcw in jecxz sub cmp or les outsb xorl push in jno or fldl ret int mov push (bad) loop mov dec and repz push jl pop fsubs dec or popa lods adc and mov ds xchg adc jnp jno lret inc push jno in cmpsl pop mov jbe pop add sbb out test fwait push mov shll ret imul imul stos cmpsb fcmovnbe fcmovnbe add lock ret mov adc push jns in (bad) (bad) in stos scas pop jecxz (bad) push mov enter mov push xor pusha cwtl sbb in mov movsb pop call push jge push fisubrl aad scas xor mov test insl sbb fwait sub mov mov stc in cmpsl inc popa add shlb cmp ret (bad) sub movsl push adc mov sbb push dec adc sub fwait jo fwait data16 adc xorl or or dec sbbl in loopne push jnp decb pushf fwait xlat jecxz ror leave push pop jmp cmpl cwtl jecxz mov aas cmp mov fistpll sub mov add and out fldl xor (bad) jo (bad) iret cmc popf out jns push dec pop mov sub pop ja (bad) mov adc fwait call out jge adc cmp cmc or imul mov inc addb imul xchg pop sbb or cmp ja aas push mov xchg mov pop push jmp in xchg xchg jecxz pop fwait jmp dec loope in arpl mov or push add iret xlat out inc cmp xor lods and dec dec push sub mov adc mov cmp leave jnp out testl push inc outsb xor addr16 (bad) or call jae flds inc je xchg mov fstpt pop or cwtl xchg aaa inc imul out sbb cltd adc aad sbb or pop das insb (bad) in call pop xor cli push enter popa ret inc cli fwait mov or lock movsb (bad) cmp adc in and repnz int3 in dec push cli mov push dec or pop push mov cmp sub divb out stc aam sbb dec or or pop pop call repz dec and sub and int push leave or and pop cmpsb in insl popf lods push mov addr16 rolb popw je loope lret xor pop sbb mov jecxz jb inc cmpsl or rorb mov push push jecxz or scas push dec mov mov icebp mov sbb in mov xlat or stc xor mov xchg fstps jno icebp fneni(8087 mov mov test jl mov lds fsubrs jo fbstp (bad) xchg push test shr jg inc out or xor or inc outsb in push mov hlt push ficompl push fldt (bad) cltd call fwait add and loop inc pop test fs sti jnp test cmp nop and dec inc rcrb hlt mov sub cmp adc mov or or orl les cwtl mov push adc int3 jae push jnp xchg adc gs jmp adc into or sbb add cmp rcll dec fwait push js jnp push outsl sub jp or int xor aad test pop das movsl cltd adc and add push jp pop repz add jae sahf fimull aaa (bad) imul dec lods mov mov sbb cmpsl (bad) add xor mov cmpsb adc je mov cmc push nop xor fmuls outsb test out xchg sahf dec mov sub sbb scas xlat and fwait mov add aad out int3 ret dec rcrb (bad) hlt xchg int3 cmpsl (bad) (bad) leave cmpsl enter rcrb inc out out in sbb add sbb jg stos cltd subl les jb push adc mul cmc pop fwait cli jl push enter xchg fwait mov js loopne fwait js pop rclb shlb jno loopne or xor dec mov lock push or idivl jp mov xchg inc and mov aaa jnp fwait das out lret outsl movsl mov ljmp dec aam sti ret js push cmp xor faddl jns push aad mov (bad) add mov lods mov (bad) dec xor cmp xor out add insl bound mov sbb jg xchg cwtl fistp arpl out iret daa or stos out push or aad mov out (bad) in out xor mov sub xchg sbbb push add lods and jle in ret pusha sti mov ljmp shlb les rol loop in inc rcrl mov mov pop or xor mov or outsl ss bound test aaa lret or icebp (bad) sbb rcrl or add js fs ret insb cmp jno cmc outsl fild push mov (bad) pop int3 in cltd icebp xor or mov dec mov sub push mov enter dec std adc test dec loope push out inc aas mov xchg adc or xchg sub in out xor cltd clc pop in mov rcll inc mov out sbb add adc mov cltd or jo xchg mov mov fsubrs sbb arpl xchg cmc and mov (bad) das jns jne jo (bad) mov xchg xchg xchg in movsb mov test push cli inc xchg popa fcompl out dec mov adc ret pop movsl test jbe mov or xchg cmp in mov xchg rol outsb jns mov sarl iret in lea test in and push sahf jecxz pop jae add sbb mov inc pop cmpsl cwtl popf addl inc jle test idivl xor inc (bad) push jge xchg push (bad) mov xchg push ficom pop sti mov (bad) jns mov ss xchg xor mov (bad) jnp mov add repz adc or pop rolb (bad) enter push dec or pop lock push stos mov aas mov je mov push dec mov int3 mov inc xchg mov sub sarb dec xchg add call insl std sub jne jne mov xlat in scas aaa xchg jo jnp movsb pop adcb inc mov dec movsl mov sub mov enter push (bad) lcall jne sub pop add and cltd adc test xchg and fbstp xchg test pop mov and inc outsl bound mov lcall mov xor pop mov inc sub sub mov pop adc sbb adc test jmp jg dec push dec mov inc out mov push ss outsl out adc fwait jnp pop scas xlat sbb sti test arpl jle push out lcall (bad) call jg std xor push hlt pop cli push cwtl icebp dec mov sub stos test or mov add nop pop stos cmp fmull mov push enter push std outsb enter clc adc jmp add arpl dec (bad) lock imul out mov loop xchg mov dec jmp js sub (bad) xor test dec sub outsl (bad) fadds push ja or sarb ret push jns adc inc ret jns inc les movsbl daa bound pop xchg xlat cmp gs ja jge and and stos testl push outsl out nop sub andb outsb sbb push add push mov push imul inc mov clc pop cmp cltd mov cmpsl cmp jp jg fistp xor xchg jbe dec insl fimul lock mov fs and push jae adc aas xor dec fwait pop pop mov call (bad) in add xor push popa mov fwait scas test mov mov repnz lods ljmp jl dec and mov lock sbb lock call lret jo (bad) cmp outsb ss or jge jmp and push cmp add mov hlt jg (bad) clc jnp mov gs add std jecxz fstpl push mov or out cmp (bad) scas sub repnz and pushf out loope push xor movsl cld gs loopne fist ret add dec call fcoml stos mov mov enter push fwait jle (bad) jle sub sbb lods repnz int3 ficompl or add gs inc sub xchg orl out xor (bad) jmp inc in mov inc or or cmpsb les cmc dec xchg sub push test lret in ret aam test xchg das or cltd xor (bad) (bad) dec cmpsl or mov test or pop mov mov or adc mov xchg js test sub and jne outsl rclb pop (bad) sub cli push lods add cwtl inc xor sub addr16 clc sbb push and pop pop dec mov and mov shr sbb stos cmp imul mov in xchg in sbb mov arpl jp imul sbb jae add adc sbb outsb cltd stos mov and ret push xchg (bad) repz dec sub pop dec adc rcrl or ja addl and aaa movsb mov pop xchg dec fstsw and push cmp clc jmp (bad) mov into test mov jo cmpsl repz or and sub pusha aad sub xchg inc loope and das pop cwtl addr16 lret pop cltd inc int3 adc mov sarb xchg ss ljmp mov enter fdivr out ljmp test xchg mov shr sbb adc jmp sahf sbb xor fistl inc les or es mov data16 test mov aam clc xchg or cld rclb sbb pop mov lds dec xchg sbb jns mov mov jecxz (bad) push sub xchg sub fs pop sbbb push je fs popf push addr16 add mov adc xchg xchg insl push xor (bad) mov int pop mov icebp in stos add lret cmp xor mov sbb aas jb lret js out xor in xchg sahf out push cld repnz pop xchg cmp and repz add xchg int test mov mov jle cmp (bad) (bad) xor fndisi(8087 (bad) ja setnp pushf and dec fnstcw or push xor (bad) (bad) inc cmc out push sub das push or mov test adc popl inc (bad) cmp cwtl mov add in fnstcw push aam orl andl dec mov mov jne pop inc pop test dec nop clc jl insb dec fdivrp movsl or mov mov fistp mov rorl push fstpl mov imul cld jbe adc push fnsave in lcall jbe jp mov imul add sub cmpsl push dec sub push pop testl test stos lret pop enter fwait or mov fs sub fs xor jle inc xor cmpsb jmp andps mov mov in inc xor das dec (bad) push rcrb sbb enter pop ja mov mov dec cmpsl stos mov xor scas sbb in test xor mov aad lock ret ds inc icebp in jo inc hlt mov loopne xlat scas add stos imul std scas jns fiadd mov lahf mov jno inc jb pop (bad) and mov mov ja lcall add sbb lock adc clc mov aam outsb mov xchg xchg xchg cmp clc std (bad) repz mov xchg push insb int mov adc mov jg rclb or int3 and js insb push cwtl mov iret fcomp pop ljmp xchg gs adc push lret enter adc ret loop fildl stos pop cmp cltd mov test (bad) call xchg mov stos out push (bad) andl cmc imul mov and or sti call leave hlt add loope fwait add shrl push les repnz mov and imull inc push xchg sub insl cli or shrl mov sbb mov pop adc mov fwait push xor dec das cmp sub jp in lds mov cmpsl insl mov xlat cmpsb fcompl into scas pop call push jl or icebp or loopne xor pusha mov jnp (bad) sub and scas mov push mov fmull enter cs inc xchg out fnstenv or jle in mov movsl pop cld sub jbe popf pop or mov sub xchg xchg ret or lcall push dec bound test fwait out lods mov jo jo dec into leave ret adc mov scas pop jg fwait ss mov jbe aas in sti popf push (bad) cmc inc mov mov std pop jle (bad) fstpt out lock test dec add mov out cmpb das mov out gs je imul in int or xor dec dec aas ret jno inc lock cmp xchg xchg stos jp jae pop (bad) sub mov inc jge dec fcmovnu push or or in data16 push jb mov jg pop adc cmp out in stos fbstp push ja mov lods stc cmpsb jg xor xchg icebp (bad) int3 stc sarb inc adc jmp xchg mov or jge lods lcall or push aad data16 dec jb (bad) arpl and fwait mov xchg lods pop sbbl fmuls movsl or adc mov daa int3 pop into adc dec arpl pop push push inc popf rorl test mov dec out in adc xor adc pop in or addl push mov mov enter mov out mov push add ljmp cltd pop xchg or and jo cmp (bad) push mov mov sub out mov push or mov adc mov push add ja jecxz fwait inc jb mov jne mov addr16 (bad) fwait aas orl (bad) cmp (bad) pop pop pop roll (bad) lea or cmpsl pop push mov push cmp mov in packuswb jg mov mov lret ret shrl sbb iret add and push in pop out in ret dec jnp lret and lock ret (bad) mov mov stos mov fwait rcr adc cmp push push pusha icebp xor sti clc outsl jb and cmc add or or in pop je cli mov dec movsb xor xor loop jo fisubr jge je jg cmp ja mov imul xchg into xor mov mov pop jae stc sarl xor in jnp out mov clc (bad) xor es ret adc jg es repnz adc jb ljmp imul movsl stos ss xchg xchg sub jmp bnd or jo and into in lahf (bad) insl fdiv sti push insb mov lcall in push push mov out or add (bad) jb add gs cmp jmp or dec enter loope js jne mov insl or lods cmc js insl jbe mov push (bad) (bad) cmp outsl or fisttpll push push jmp iret add mov sub cld jae pop fisubrl inc fwait mov lahf loope push imul negb dec repz xor sbb push jbe lcall (bad) pop in and jmp xchg sbb cmp addr16 sub test pop mov jb fwait test cmpsb test test xor movsl in fistpl movsb pop cmp sbb dec mov adc (bad) push rcrb scas xchg in orl jb enter dec test jb mov in inc and and outsl gs test ljmp add mov mov popa mov lret sbb jge (bad) cs inc pop rclb adc adc mov or xlat divl ffreep (bad) mov xchg push inc out test adc pusha data16 or jne jl rcrl mov sbb push xchg movsl aas ljmp fdiv push (bad) hlt (bad) jb insb lahf inc in xchg xor add sub mov test pusha adc mov cmp fiaddl push pop pushf ret fdiv clc cmp nop movsb aaa subl mov rclb fnstenv sub xlat mull ljmp xchg dec sub (bad) ret or loopne js and and xorl xor xchg push mov mov or xor mov cmp fisub loop mov adc stc in jno or lock pop mov lahf scas std call cltd inc mov sti in xor sbb cltd fcompl pop inc mov pop jo enter fwait sub in popf or imul lods sbb mov sub (bad) ja jecxz imul push push cld fwait xor clc (bad) mov fwait bound jbe in or int3 pop in fwait enter lock or mov sbb out rorb push adc ret pop push adc aad xchg shlb sti pop lret out fwait clc fwait jbe pusha (bad) stos jne outsb mov das mov leave xchg mov xchg lock jmp mov adc mov mov mov or aad outsl adc inc xor cmpsl cli mov sahf rcl loope ja xchg jne dec add stos mov mov cbtw xchg test and mov add xor loopne rorl imul scas insb inc or dec xchg push mov cs mov and leave sbb (bad) pop mov jo xor push or insl popf js jecxz push and loope (bad) xor ret dec shrl aas push jmp fstps mov into arpl outsb fwait lahf inc (bad) xor sbb stos inc stos xchg add jge pop or sub cmp jns mov mov cltd mov notl cmp add out cmp in leave movsl cmp dec jg jno popf xchg xor jecxz or cli adc aas jno scas out outsb pop fistp bound addr16 mov xchg mov mov loope mov data16 jbe imul jo test or inc mov mov (bad) repz mov or cmp add es iret sar jg sbb mov xchg fistpll jecxz sarl mov test mov aam imul ret mov mov push rorb inc xchg add in sub mov lret rcr inc inc add xor lods pop lahf add out xchg cmp sbb out jge (bad) sbb adc js pop ret rolb mov xor lods lahf pop les (bad) jg call lret lret and cmp imul scas repz (bad) rclb dec jg dec ja push xchg out mov pop lods mov jae mov pushf mov inc test xor and push in pop repnz mov mov push adc test loope,pn push loop fwait xchg insl lret dec cmp pop fwait roll lock lock loopne loopne mov push push out hlt loope lods cli shrb jmp inc fwait jbe pop out fnop in mov pop push add cwtl sub sbb mov repz lcall out jne xchg js push cmp or jle xchg dec test jae,pt mov test lea mov ja ss push xor add mov rcrl lahf mov pop jbe dec inc jo (bad) jns ds xchg jne or mov jns cmp dec or mov aas testl and sbb fldt mov push nop in aad mov jae iret mov icebp xchg fidivrl adc or arpl push shrb imul inc out sbb jae mov lea test mov mov (bad) pop xchg rorb mov jae imul mov fcmovbe in jp jmp lret andl mov scas inc aad scas es lods leave or sub in add pop dec ror or xor add mov lret je add jge push mov sar fnstcw add or mov (bad) mov stos jae jns push nop inc mov test out sub lds lds add mov call xchg cmpsb cltd dec add std cmpsl adc cltd lds mov je,pt in xchg movsl adc in jmp movsb in inc test nop loop out incl stos add repz xlat imul and pop xor cmovp jne stos iret cmpsb sbb xchg mov mov pop out xchg and jnp jecxz int cltd js dec ret mov leave arpl jl lds jo loopne cmp mov xchg jo out cmp xchg pop stc sub sub jae mov scas or mov daa cld fisub xor test ja out (bad) (bad) fnop jb cltd mov jnp mov sub mov and and mul xchg in fldenv cli xlat test shr sbb int3 scas loope mov in (bad) dec (bad) xor xor lret sbb aam cmc arpl mov pop mov xchg sbb aam jns cmc sahf pop push ljmp daa rdpmc mov sbb clc addr16 call lods jno adc sub jmp int3 push pop stos das push dec repnz fnstenv repnz bound out mov and fnstenv mov add clc adc call pop fwait out (bad) cmc mov jno mov mov pop push into jne sbb pop or xor add nop loopne and push adc insl push imul push jl (bad) pop ret ss aas test incl pop mov fucomi enter sub sub xchg insl jae adc mov test jecxz push mov xchg jecxz in inc bound or mov std inc (bad) push mov sub xor repnz mov ret xor jb out jne mov push cltd bound dec jp mov mov inc inc mov mov mov test in arpl mov push out fistp leave mov lret fcomps xchg sub push jecxz mov push lods inc jge mov and outsl rcl mov cmp xchg aas push insb pop adc jno pop insl xlat inc (bad) lods imul jae mov lret arpl leave mov les out mov mov and push fwait stc adc mov aaa pop or call sbb lret xor ds push je int3 call pop cltd and mov inc cld mov outsb cmp leave addb repnz jns out add in xchg mov mov mov mulb inc fadd adc outsb or test adc xchg sub pop dec push sub mov lods das shrl ret xor xor sbb and sbb test jne push (bad) imulb andl data16 push pop dec dec and add mov into outsl jp jns xlat mov ja and fs xchg lods gs fimul pop int in inc outsl in sub mov cs lds add imul xchg inc add mov ret mov sub stc cli fwait roll xchg ja test mov daa ja aad xchg jo jo in jmp frstor push in push xchg into adc mov mov lret lea stos xchg lcall gs mov (bad) pop cmp in imul mov sbbb in decb adc sbb mov insb outsb xor sbb push in push stos mov inc xchg and jmp lock movsb bound xchg mov out cmp sahf pop add loop (bad) pop adc xchg (bad) data16 lret xor xchg leave adc pop mov je mov insb int3 mov or xorb mov idivb inc sti mov dec aaa rorl pop push dec xor inc test push icebp inc pushf sbbl sbb loop hlt popf jo jle cmc xlat scas mov xor jg ds xor int cs mov mov jg sbb ja jne and xchg mov or aaa or stc in in in ret push (bad) addr16 mov jecxz cwtl aad or xor lds mov out or movsb dec mov cmp inc jge (bad) int imul fstpt lods mov add lds lret pop adc jnp nopl dec xor insb or mov pop or jns cmp sti (bad) mov jge fcom loope cli icebp addr16 test or cld pop mov and inc dec loop sbb movsl or fwait into fcmovnbe xchg inc loope or xor cli mov mov lahf sbb (bad) mov cs xor hlt ja or ja adc mov aad leave pop push cwtl clc adc adc gs or repnz outsb lea cmpsb adc jns js push test push rorl lock leave or jp cmp jmp dec add add mov stos xchg icebp xchg scas jb (bad) (bad) cwtl enter fdivrl enter je sarl ret jne or mov inc sbb daa pop fwait aas jbe sub add movsl add repnz loop xor movsb dec mov cs cmpsb stc movsl (bad) enter push inc cmp pushf in inc cmp xchg data16 fwait ja (bad) insl ljmp into dec add xlat das leave jl (bad) rcl bound jae in (bad) stc cs xchg cltd pop sub jae or mov add js push scas xchg aaa and inc nop cli aad cmpsb stc daa inc pop jbe and clc pcmpgtw sbb fisttp std in mov outsb sbb lret ja loope pop mov xor aad sahf fimul lcall fucomi cld pop insb mov cmc in out es fcmovu inc lods or jle loope stc jp add call sub ficompl shl jg in movsb inc mov or rclb xor pop dec cmpsb add or (bad) xchg in and add ret mov fs sub cmpsb jnp push pop pop out jge pusha dec outsb ss pop das stos mov push sbbl int fist and push stos (bad) mov in repnz dec push or pop gs mov mov sub xor js negl mov adc inc stos or fs fiadd flds in sub lock xor aaa xchg cmp inc and ret cs xor mov loope xor cltd push jns pop negl aad movsl push out adc and jmp pop or mov jno cmpsb jl add lcall adc push xchg popf pop jnp xor test movl leave push rol xchg insb sbb fsubrs js or jg mov sbb jmp xchg aad xchg jbe test xchg imul pop dec movsl jns mov sti lods scas pop (bad) add scas into mov outsb inc xor inc cmp xchg icebp add mov mov hlt pop lret call xlat push sbb outsl imulb lods les or fldt sbb mov mov inc test dec jo mov pop xor xchg movsb mov jnp insb push xchg scas leave mov fwait sahf pop jno mov mov popf jnp and sbb xchg jnp or fwait imul pushf (bad) mov lahf jp jo pop ja cwtl test std adc leave ds (bad) mov das lret jge scas int3 sub test test in mov out test add pushl or jmp lret ds bound xchg or cmc fwait mov nop cmc push push dec shl and out lock pop out xor or mov jge xchg (bad) lcall fxam std mov mov ret fs adc xor pop add xchg rolb sbb test fldl call jnp xor outsb jmp cmp lret mov enter jmp loopne (bad) lds xchg mov jecxz test call sub hlt call push fwait ret lret or xchg and in hlt sub sahf dec jb pop or cltd or sub xchg stc loope xchg push or cmp add or push popf fwait mov push ret popf (bad) mov scas or (bad) rclb in jne popf pushf das das lock lock loopne rcll sti lret mov mov add ffreep adc xchg lods icebp fwait mov loopnew mov repnz mov mov adc out lret ja push lods xchg inc sahf leave fnsave push mov icebp pop pop push sbb seto and fisttp mov jmp mov push fwait inc mov rcr insl aad rclb jg and mov xor fiaddl or mov pop pop ret pushf push inc inc shl jbe dec aam ja (bad) jmp incb pop xchg pop (bad) flds dec int3 jg jbe or inc adc mov adc jge pop adc mov xlat and xlat cli (bad) cmp icebp fiaddl test rol out pushf jbe or pop mov and ja push in mov test mov pop inc or pop adcb je and pop imul mov lock scas fldenv lds push clc out xchg fistl lahf jmp mov stos and sub insb imul xor pushf das adc cmp popa (bad) out jns hlt push xchg lcall test mov mov xchg mov dec imul cmp mov cmpsl push movl pop xlat fldenv and adc jbe push mov arpl mov or fldcw xchg push cwtl xchg sub aad sbb mov out or lea movsl or xchg mov dec mov lret out adc loope dec shrb or jmp xchg xchg jmp scas rcl outsl mov iret inc or divb test sbb pop pop sahf popa jb stos arpl inc insl stc fiadd adc (bad) mov (bad) subl mov mov mov cmpsb movsl lret lsl push out cmp jo nop pop push pop leave xor out negl cmpsb fwait (bad) int jl das sbb xor js jg popa push or jmp roll stos sub test sub fs fwait das lcall and loop dec sub cs cmc aam clc inc fwait arpl push (bad) not push andb ror in leave loop push adc dec jno js pop rcr pop pop sbb stos xor test jne cli in test decl push push fptan pop out jle bound lods lods cltd imul jle add sub scas mov ja roll mov movsl xor mov mov or loop adc aad icebp loopew add outsb or cmp pop lret repz adc dec push pop in push movb fwait and frstor adc inc push jo (bad) adc outsl mov test push mov mov iret andb pop aaa (bad) (bad) ljmp fwait lret xor nop (bad) sarl mov mov lret cmp (bad) lcall movb jge rcl shrl mov cmp ljmp andl or add fdivp adc dec (bad) in cmp cmp ret movsb mov and mov in adc inc ss and pop sbb aaa test imul cmp or add mov stos stos mov push sbb or les cmc pop stos jmp call mov xchg add hlt clc scas cmp sti in adc push push sub inc mov pop shrb cwtl insb imul lret jo ljmp shrl dec adc lods mov jb (bad) arpl xchg sub xor or cli jecxz jnp or jo ret and xchg jmp mov dec ja adc adc jns ret mov xchg mov jmp test sti popa mov ret pop mov sub jmp cmp imul ja popa fdivl shld out negb je or (bad) mov add ja fwait sahf das negl jbe push xor mov sti push pop pop test test and and sbb (bad) mov in je lods adc push jno ja test aas in mov jo stos repnz adc xor or mov out adc in adc test imul mov sbb enter cmpsl mov into aas dec fs mov and fisttpl pushf inc dec fistpll jnp cmp inc mov mov cmpsl test icebp in clc out jecxz push mov push stos mov or jns sbb into ja push pop dec mov dec outsl and mov jns mov xor sub (bad) leave mov movntq inc sarl fdivrs cmp mov jo and cltd cltd popf push jae fwait dec fsts pop leave loop addr16 rclb (bad) sbb inc lretw aad stc test push lods cmc scas jo xchg mov gs inc and xor xchg inc push aaa outsl loop push jmp ljmp insl pop out and addr16 ret inc or mov and repz lret cli fimul adc add daa mov and mov push inc aaa push jecxz and sub fld1 je mov pushf mov fisubr (bad) mov (bad) adc inc push outsb jno or fwait out out cmpb roll outsl stc and xchg fwait ret push mov mov ja push outsl dec sbb mov mov ds sbb fwait mov (bad) jl movsb mov loopne mov iret push push sbb (bad) (bad) lahf in xchg (bad) xor jecxz xchg (bad) pop sbb add loope mov adc fcmovb pop push or or repnz (bad) das jnp popf icebp pop jg jb in ret pop mov std xchg sub cmp in sbb lods (bad) mov scas in jne xchg mov pop imul (bad) cwtl das std mov stos lea (bad) sti fxtract sub movzbl xchg scas mov sbb mov out nop xor xorl jg adc mov lds stc or xchg fdivs mov mov mov xor mov xchg jns adc or test push push jne repnz outsb test jg xor loop lret pop push jnp cmc mov push mov test and add loope ficompl xor test jo test jno sar mov popf jo movsl sbb jnp lcall popf mov loopne jo jle pop sub push ret test xchg bswap mov and xchg in jo and xchg jbe xchg jo adc stc push mov popl and flds or sbb xchg sub push pop jp adc ja in xor inc cmp or pop pop push pop xlat out jge mov dec dec fwait xor mov mov insb lret and and daa aad bnd add fnstcw ss mov ljmp and stos bound push jnp repz jbe pop xchg sahf hlt push ja in jl icebp xchg es mov mov fwait or bound int mov test push (bad) jmp inc cmpb pop cmpsb gs xor (bad) test mov pusha mov int3 lock out fucom sbbl jp in and dec imul rcrb fistp sbb mov test enter fidivrl pop xorb xchg dec and dec lcall push cmp xchg loope std jmp xchg stos cmp inc sbb ja (bad) adc pop addb pop mov ret sbb or xor dec cmpsb aas fsub rcr push (bad) idiv jge call or cli jmp cli (bad) xchg pop lahf (bad) or cmpsl mov xlat jnp daa and pop hlt orl inc orl jmp xchg mov addr16 repz mov test lret add jns imul jle jo imul xor in inc icebp inc sbb xor lods dec adc mov pop das shll dec adc rcl test loope test (bad) ds aaa into mov in outsb adc or add stos and in ja sub inc sbb in aas sub adc divb ljmp dec sbb pop inc test xor ljmp mov add add mov popa mov jge cwtl inc ss into arpl and fldcw push or lret call push mov (bad) xchg xor xor iret callw mov adc cs jnp inc repnz cmp xor xchg mov add loop out and add adcl hlt ljmp pop (bad) lea call jb fimul sbb mov xor rcl (bad) mov call jl jb mov out mov ja ucomiss int3 test gs mov js fwait icebp stos pop add and ljmp pop push dec push cwtl (bad) pop jbe fcmove andb les or fstp xchg pop jp jo insb popa das add int dec jns mov popf xor xor loope in enter inc jp add ss jb aas or xlat or shrl mov clc push popf repz ja loope mov jo xor ror jmp sub fsubp inc ret das pop stos mov movsb aas dec imul lret push enter test pop mov jne jns mov cmp jmp in mov sub test sbb imul bound or push (bad) mov xor decl in notl test mov add push out aad (bad) call push xchg mov nop fisubrl and ror mov dec js and mov mov (bad) out pop je mov push stc and inc out and (bad) dec and imul mov insb loopne fwait rcr sub dec lods sbb mov jbe mov aaa int ret mov sbbl test inc mov inc push sbb cmp imulb cmp and adc push add (bad) fstpt dec (bad) cmpsl fldpi jecxz dec cmpsb pop xor fimul fwait mov test neg in mov aad mov insl rolb jne or fstpt loopne dec push addl xchg mov lods pop jg inc xor popa jg cmpsb jns and fcompl scas push mov cmp add lcall aam ds lods in pop out sub jmp jp sub (bad) mov pop xor in std cwtl std sub xor fldenv fwait in adc adc es rcrb sbb leave sarb in daa leave outsl add leave loop movsl or (bad) or cmpsl or out loop lock inc je cmpsl ja pop push (bad) clc popf cmp mov adc cld adc mov jnp mov lds mov and cmp mov pop scas in sbb or das jg xchg sub (bad) icebp aaa jg push or test add (bad) mov gs cmp and insl stos xchg ret fldl push or xor jmp sbb jl insb dec sarb shl mov pop mov pop mov lods gs jae inc and or (bad) ffreep mov cmp ja lods cmc int sbb adc pop mov mov push call sbb daa pop jne mov lds cmpsl mov dec adcl mov insl fsubrl les xchg sub (bad) cmp pop mov mov bswap test mov mov pop fldcw aam jmp fdivrs jmp outsb mov mov mov mov cmpsl test add inc test loopne fldcw mov mov imul int les imul lret dec rolb imul lcall jb mov inc mov and dec xor inc adc jnp in mov cmpl xor and int sbb daa rcll sub imul (bad) ja,pt sbb mov stos mov cltd cmc inc mov jb (bad) mov loopne lods je cwtl repnz pop and or rcll jns out mov mov arpl cmp loopne fldenv fs call (bad) dec mov lock mov sub imul mov loop andl cmp loope in popa mov jmp hlt jb pop push sbb scas cmpsl aaa mov add xchg cli ds xchg rcrb ret sub enter (bad) mov jae or in mov mov adcl pop (bad) mov push xchg mov mov cmp cmpl xorl add jno cld in add or xor cmc mov mov cmpsl pop inc mov test mov (bad) in repnz sti imul adc test leave out pop dec sbb cmp addl movsl cmp cmpsl jecxz test inc mov int push hlt lods call push (bad) insb mov mov or (bad) xchg and mov or aam cli dec ret adc gs mov jg inc pop rclb jmp xchg out mov dec jmp aas aaa push leave add jno std xor das cli pop in jmp jecxz jp push stos sarl xchg mov pop popf add sbb jae push ret jmp push decb imul aas jb leave lret sub call jns jle fldcw xchg xlat mov pop loopne divl inc add mov dec xchg out rclb dec inc and or cltd mov cltd movsl stc mov mov das pop lods mov sarl (bad) sbb mov add cmpsl nop sub jae or leave sbb pop jmp insl xchg push mov add imul pop subb xchg cld push in sbb rclb add pop sti mov mov mov nop dec lds and testb sbb adc mov lret cmpsl clc sub in pop movsb in cwtl std adc mov jbe push mov mov jne add mov pop in out inc mov aad std rorl mov mov xchg xchg sarl repnz imul push mov sahf dec jecxz cmp cmpsl sbb ja inc in adc xor jb orl or dec enter int3 aaa mov inc int mov mov mov repz jno dec mov mov roll xchg push mov mov test jge cmc jno movsb loope test push lods fwait iret jae xchg leave jnp (bad) jmp mov pop int3 inc dec mov aam push jecxz aam sti insl pop pop imul mov mov inc mov gs out sahf push clc mov pop fwait jnp xlat cmp jbe dec mov fistpl mov push in imul loopne push mov inc fs and lcall or out addl mov call ret or mov clc mov fs aad lcall fcomps dec inc jmp les mov (bad) jb push fldenv hlt adc lret mov out mov fistpl or sub or mov (bad) jns mov or test lods mov mov mov mov test dec lret jno mov insl or jmp jle adcb (bad) mov sti loop mov lods out or xchg bound inc xor dec (bad) rol (bad) rol imul jmp mov in inc mov pop leave cmpsl test int inc jmp mov in push test mov push xor adc pop xchg jle dec xchg or movsl push mov sbb adc mov cmpl in xchg int and (bad) mov mov in sbb fidivrl dec lret in mov xlat lea sbb mov pop and iret mov outsb clc mov out or pop jmp adc jo mov andl ret data16 mov mov sti repnz out fsubrl in sub xchg das insb cli call and ja (bad) inc lcall mov in jne push xor stos into pop lcall jnp popf out stos jge or inc aad push mov call cmc fwait xchg arpl in xorb andb fstpl std adc lret adc mov test out mov mov loop hlt int3 scas xchg xchg adc dec xchg xorb repz dec enter rcll mov fidivrl mov mov addb int3 adc movsl movsl pop lcall inc rcll pop jmp loope ret dec fstpt sbb (bad) adc or in mov or mov test je movsl xchg pop mov pop test fnstcw in inc add sahf mov pop aad (bad) mul lret out dec in mov lcall out mov pop and loop xchg add out repz dec pop ret mov or mov repnz adc add jns mov out mov lea sbb sbb (bad) aas jbe push push negl mov push mov sub jmp daa jecxz std pusha stc lea andl insb mov arpl shll int3 jp pop test outsb (bad) mov mov stos nop jg inc in in in mov iret inc sahf push (bad) aad movsl pop and cltd lahf add inc adc inc loope xlat mov lock dec lret in fisttp into jnp push test scas (bad) mov aaa cs and mov mov xchg test (bad) js lods fucomp jmp (bad) jb xor hlt mov adc popf nop add xchg in jns in fmul sahf cmp xor fs pushf jnp cmc sub pop clc sbb xchg sub mov cmpsl mov ffree in push jbe idivl dec xchg loop shrl sbb lret xchg mov mov or pushf loop sbbb jae scas xchg jge shrb pop (bad) mov nop mov sub divb fucom xor mov cmp dec nop in loopne mov scas cltd std jne pop in lds mov cmp xchg sahf xchg cmp and push xlat in int or xchg sbb (bad) mov iret mov das inc jmp insb xchg xor sahf movsb sbb xor sarl sub inc les mov outsl xor jmp cs mov mov popf add ja out mov push rolb rol mov cs aam lods dec jmp push cmp out popf lea push fs bound fs sbbl pop jmp addr16 leave repnz sarb out stc (bad) mov mov mov je cld xchg je inc mov clc sbb imul dec or or enter ljmp dec ret mov pop push and test mov arpl rcr push call loopne imul cld rorl pop jae mov pop popf push lea inc mov mov mov push je mov push adc scas push push bound adc jo mov iret xchg add loop mov popa mov dec dec repz dec movsb xlat movsl push into or inc add inc fldenv stos jns jg lret les pop fnstcw push andl jno mov repz test movsl ret popa (bad) cwtl les mov mov scas jbe mov xor mov ljmp xchg mov shrl popf out fisubr and inc pop mov ljmp push cmp pop jmp out adc cmpsb sub inc cs cmpsl js ret popa push ja mov or (bad) insl xlat add xchg in and (bad) cmpsb dec inc mov cwtl pop orl divb cmpsl add mov cmc fiadd or (bad) popf mov jno add push sbb inc push or push xchg mov add jle scas dec mov in xlat mov int mov inc or popa repz mov xchg dec arpl fwait lret inc out sbb cmpsb dec cmp add mov cwtl testl cmpsl (bad) dec test jns or xchg ljmp and aas leave out xchg rorb mov daa outsl cltd mov dec in jnp pusha adc mov xchg or mov cmpsb cmp lds cmp insl mov cmpsl push mov jecxz jno dec sub (bad) pop ficoml movsl stc lret leave shll fbld pop or lock jb jno in push aam mov xchg or not cmp mov dec and das jbe popf cmp xor pop lcall mov cltd jg mov xchg scas fwait add enter jns xchg stc mov sub mov mov mov mov movsl (bad) in adc mov sub lods movsl daa sti test bound cld xchg xor jmp sbb loop loop jbe mov cld popf je xchg in xor movsb dec dec or test pop bnd negl dec call loop jl jbe in imul js push out call stos push xor pop daa mov sub mov xor cwtl (bad) int3 push rolb imul mov sub jge mov sub mov sub repz aad mov push push pop inc je fsts adc mov cmp aad sub clc cmp adc mov das movsb jo jae ret scas sub pop out cmp xor mov xchg jecxz cmpl clc pop pop aad cmpl pop lea jp jb bound int xor lahf pop rcrb aad add jns es in stos ds in mov lods lcall movsl inc addr16 pop jle mov in (bad) inc out mov add mov jmp movsb in dec sti add mov ja inc xor cmp and fisttp test pusha fmull sbb or mov jg loopne or lods xchg add adc push pop cmpsl pop mov subb jecxz dec sub mov mov jb xchg add jnp jp sysret test test dec das out inc mov outsl fwait ljmp mov cmp rolb or mov pusha nop sbb roll sbb jge addr16 cmc shrb int cmc loopne cmc ja cmp adc inc mov out sbb (bad) repz pop stos mov push stc sub frstor dec xlat arpl inc mov sub rorl xor add pop mov in (bad) jmp inc xchg and xchg cwtl adc sub stos lods mov test dec xor in orb call mov sub push xchg sub dec pop wbinvd ret mov mov and push stos aas mov or in sub fs jo cmp jmp push dec or pop or adc and xor pusha out inc xorb call push ds cmp fdivl cmp movsl jnp jl test jecxz (bad) cltd push outsb mov in xor fdivrl (bad) aam jbe add lods mov out ss lret or aam xchg jge cmp push aad xor dec loope mov sub xor sub pop xor jnp xor sub repnz cwtl sub imul cmp dec xchg pop mov loop push jne or stos mov fdivrs jmp imul mov imul jo pop mov xorl push sub lret das mov mov xchg jl addr16 (bad) pop or fsts mov enter sbb lcall stos fcomps or ret ds xchg negb sub mov imul push out dec sub icebp jp or ret pop clc rorl pushf dec pop leave (bad) jp inc scas sub fild or rol mov leave shrb popa cmp enter push jmp lods pop cld mov (bad) jle jmp adc mov out sbb pop sbb add sub push cmpsb test sti and test push faddp ret mov mov jbe cltd push sarl pushf push mov loope les loope mov mov add xlat or push iret jle inc mov shl mov jb jns xchg jmp xchg cmp sbbl (bad) clc cmp or adc mov nop adc push sub jge jbe insb xchg iret shrb cmp or (bad) scas xchg pop xchg sub (bad) movsl xchg adc in push jmp and xor leave pop fldcw jle cwtl hlt out dec push in jmp xor add scas (bad) je jmp dec sbb (bad) sub fmull xor imul lret mov scas xchg or mov adc gs inc inc icebp in mov lcall jle out jno jns xchg test push mov push clc jle mov ret cmp cmp bound popa (bad) outsl jne cmpb nop pop test aas fwait sub mov out pop popa in and and xchg test popa repz adc fcmovnb xchg hlt xor sub dec mov js fwait call movups jge pop ss repz xor add in in jge mov jp jno push test (bad) cli or notl lahf jbe mov fucom xor add mov mov and xor scas dec fistl pop stos xlat movsl shrb add lods cmpsl out movsl mov and xchg out ja out cmp or stos and mov adc std cmpsb cmpb lcall sbb scas push les xchg xchg sub pop je (bad) add sti or sub fimul clc dec push in ret push push add outsl push (bad) mov or push mov jge mov mov or (bad) pop and or dec fstps lcall mov jl out mov ds fwait aam mov adc bound or daa stos data16 sti inc cmpsb movsl push lcall test cltd (bad) fldl push jmp sub push ja dec push aas sarl add lcall ja movsl call xchg inc mov xlat dec test leave xor add lock or jb dec clc lret or xor xor jnp mov cmp int mov mov pop lret cltd in repnz push or aad mov push adc pop xchg jp and or adc sbb jne push insb dec mov (bad) out mov imul sbbl mov mov or sub fnstcw orb xchg and add movsl jae mov cmpl ds push dec inc mov mov aad out fwait inc and inc fwait push sbb or mov sub fwait ds jecxz jne in repnz jns je push jecxz sub in xchg jo dec je mov mov mov les xchg insb flds ds mov mov lahf sub add cmovnp adc mov mov or jnp mov jns xchg inc inc push lods repz mov xor scas xor dec rcrb (bad) out stos adc fbld pop mov repnz clc mov stos pop sbb (bad) sub add jge mov js enter (bad) mov add call test mov in (bad) xchg mov cltd inc push mov and icebp push fdivs (bad) mov add fadd add icebp lcall xor lret xchg cmp sub push inc xor jmp lea pop dec shrl pop lahf mov (bad) in add (bad) jb xor dec jb enter mov leave mov out sub sarl cmc fwait mov jnp adc movsl adc cs lock jecxz fwait ror mov jo sbb pop es push sbb cld jno xchg mov add lret pop inc push aad cli and inc cwtl push mov dec popa adc stc in jns add cwtl dec sub lods and daa sbb jge mov mov push mov mov enter adc lret mov les in fidivl repnz int out pop or out or jp or push adc mov sar scas ja (bad) mov lret (bad) orb xchg mov ret mov and adc xchg sub in ret dec outsl lcall cmp xor push aad mov xchg imul jecxz into test add mov cmp push fnop jecxz inc jl dec pop data16 xchg insl dec or adc sbb loop dec mov mov in xor or imul cld mov lock call imul push add cmpsl xchg pushf test push push stc sub fnop dec xchg add fsubp cs insl es inc icebp dec and cmpb ret popf xchg and and xlat or leave fldt xchg and in cmpsb dec ljmp xor add dec add or pop xchg and scas in push xor lods push pop lds xchg fsub fxch (bad) imulb imul scas jns cmpsb out lods pop mov mov cmpsb ret ret jo (bad) fsub cwtl pop (bad) loop inc in xor jl or imul sbb stos mov insb push and out inc mov imul xor jecxz add pop lock jnp xor cmp push in xor cmpl orb outsl (bad) (bad) push imul cmpsl add pop xchg (bad) mov arpl and test add es or xor and push inc mov cmp or js stos xorb cmp xchg lret out cmp mov and in in (bad) lahf and or push je adc flds xchg mov daa xor stos mov push xchg (bad) sbb inc enter mov fnstsw mov xlat in jmp leave repnz mov cwtl xor fisttpll (bad) dec mov dec dec push pop mov aaa pop adc or daa out loope pop pop nop sarb ja clc xor pop jno inc xchg movsl sbb cld adcl iret ds outsl push or pop in lahf sbbl mov fcomip push inc sub (bad) push xor or cld fisub add mov and aam xchg fcmovnbe and test jo sub and inc or call jp or add in imul call sub ret push mov ljmp cltd cmc inc mov mov mov adcl push push or add and dec cmp ss popa pop sub mov and push dec mov cmp mov ret mov mov pushw mov xor and mov popf xchg fidivr nop mov cli xchg lds and icebp pop sbbl lahf (bad) jp xchg xor xor cwtl xchg loop mov iret scas sbb les mov loop cmpl mov mov xchg out loope cwtl cmp jbe ja mov rorb loopne in adc dec dec les adc gs pop or fcoms add fisttp test leave inc fs jmp adc xchg and sarl fdiv mov mov int3 test test rorl outsb leave insb pop inc daa pushf test sbb ja mov sub mov xchg cmp mul cmpsl dec sbb xor in sub lds sub adc rcr stos mov movsl loope push cmp add (bad) or or dec or cmp mov jle mov inc xor lret pop sub test and insl in mov add jbe dec hlt mov inc pop or adc sbb cld cmpsb pop (bad) not loope andl mov add inc inc and jmp and dec push test or stos sbb jg xlat xor mov fsave cmp movsb pop sbbb dec mov xchg in mov pop imul dec (bad) sbb imul rclb pusha jle dec jbe inc fiadd stc popf push sbb stos imul xor outsl je sahf pop add mov mov push and push bound and mov aas or in arpl xchg pop cltd add xor adc js in fnstcw inc aam or pop (bad) icebp pop imul dec push push mov inc mov in push sub out enter lock mov or cmp cmpsb pushf pop adc mov xor (bad) add addr16 pop enter in pop cld xor outsb inc repz lock xchg mov cmpsl aaa inc repz mov bnd bswap mov out dec les dec lods lahf not sbbl and push data16 mov xor push adc sbb push mov aad in les cmpsl mov or inc add pop jecxz push fs push aaa sbb and leave hlt bound sbb insb call pop cmp stos imul int sub jmp insb mov lds mov mov xor mov mov imulb call jmp xchg add jmp fcompl mov fwait das jmp jae mov and cs adc repz sbb shrb in push sti jbe dec (bad) inc push (bad) or push clc push mov (bad) mov ret lcall jecxz dec iret fisttpl dec in in xchg dec les out and ret xchg sbb addr16 adc dec insl pop jns test mov xchg mov xor push in jp mov sub add call jno or loopne (bad) mov roll loope sbb in mov or xchg mov repz sti out (bad) movsb test jg inc scas mov popf je or inc mov dec sahf dec cmc mov mov jb and aam (bad) rcll out mov rorl sahf aad in rcr jecxz lea inc pop fxch pop pop or int flds (bad) xor mov or stos into jns jmp jb fwait ljmp jmp mov pop cmc jle loop sbb pop (bad) aad cltd nop add mov jp ja cmpsl aam xor lahf scas cmp mov nopl xchg jg out out mov mov int3 mov or imul insl mov int3 or jle xor cmpsl (bad) imulb loop mov ds icebp pop les int3 xchg add sti mov mov movsl pop sbb push and les lahf lds ret test fidivrl or iret inc repnz (bad) movsb out mov ljmp loop mov in in lock jg cmpsb add jmp ljmp test out xor mov (bad) jl fwait pushf pop mov in imul negl pushf adc pop aas mov and in (bad) push aaa adc inc push pusha enter mov in int popf xlat jg lds jmp xchg aas cli sbb mov mov fwait mov fwait lret mov inc mov test into mov call xchg (bad) mov lea cld xchg fldt mov sarl pop adc mov sbb adc push mov mov push fnsave jl fistpll jecxz fs xchg sub jg jmp loop cltd popa push fwait out call icebp jecxz push pop fstps fimul (bad) movsb or mov test jae mov (bad) or fwait cmpl mov imul mov (bad) ss mov pop in int xor push test mov mov movl and or pop fcompl mov prefetcht0 dec ficom jb dec sbb jg scas mov testl outsl popa add mov mov bound inc mov dec fwait inc mov mov in xchg mov js xor fnstcw cmp movsl sbb sub cmp add in and (bad) es mov sbb xor xor fwait inc xchg mov popa cmpsb (bad) mul jo (bad) push jmp fadds outsb cmp (bad) pop mov int sub (bad) mov mov adc lock push (bad) pop lret mov add pushf imul (bad) xchg xchg jbe jb jmp pop mov jp mov das mov xor rcl movsb scas out fwait or inc out push mov or add jns lock les out inc push fadd xlat xor xor mov es jmp or lret add jb int movsl imul scas inc call ror fwait push add sbb out ja lcall sarb rcrb xchg (bad) mov mov and mov sbb xor inc mov or mul and jge dec mov or clc ficom inc add pop insl jo fwait mov negl out test adc jns lods (bad) dec clc or adc or stos ljmp dec add adc in push (bad) mov dec stos aad into mov mov lcall add jecxz or dec ja sub mov mov xor or mov dec xchg int3 insl cld xchg mov int3 xchg and cmp or fisttpl mov dec ljmp xor ret int imul out cli cmp int ficoml sti cs (bad) sbb mov stos into js sub or xchg loope in and xchg shlb jbe cmp imul xchg cld jo and loop in jg sbb xorl pop out pop lods call or mov aaa mov inc dec adc mov pusha inc nop sub lahf dec push nop out imul data16 push repnz in push mov (bad) loopne push fwait lahf fstl mov dec pop xchg jae cmp mov (bad) mov adc sbb sub jl inc shl mov push or add ss (bad) mov ds jmp cwtl xchg ficom nop adc pop mov inc lret sbb js test inc or (bad) adc (bad) jae mov (bad) or outsl or sbb sbb frstor idivl jmp jecxz push push jbe cmc pop jl icebp jge xchg xchg fwait outsb cwtl leave in dec cmp adc mov inc jecxz stos pop movsl lea jecxz xchg int3 cwtl lea (bad) jo je ret lret or sbb aad adc inc fucom fisttp mov (bad) sbb clc cmp xchg lea or xchg fdivrs and jne and fldl fwait cmpsl xchg dec call or (bad) jecxz sbb mov mov call ds clc pop mov aas imul in jl add dec inc repz mov daa and and xor mov and xchg jne lret sahf sarb in jbe test inc orl std mov in out xor sbb aam imul adc push lock pop mov scas inc xchg adc fdivrs sub dec xchg fwait bound es ficoml js movq (bad) jp jns and (bad) in sbb in out fisttp mov roll mov add adc xchg (bad) ljmp enter in hlt inc psubsb bound fwait adc push lcall push or jo mov jae pop mov leave fnop subb and add mov enter mov push repnz adc push enter mov push mov jmp daa mov mov jl cs inc dec xchg push fwait inc ljmp in (bad) test gs push sahf bound xor sbb pop je loope shll cli fnstenv pop or cmpsb xchg insb cli in and dec (bad) xor repz push xchg adc jp mov (bad) test add mov daa cmp mov or mov and xlat clc lret mov insl xchg mov daa sbb (bad) (bad) jmp nop lds ss repnz push (bad) xor fwait cwtl je lahf (bad) xchg lret (bad) in cmpsl andl or mov xchg xchg cli add stos xchg jns mov movsb leave (bad) call mov push xchg sbb xor cmp add sahf movsl mov dec stc data16 push jns jle inc xchg pusha or subl or fisubr inc jnp jecxz adc and add mov sub (bad) inc push xchg jmp mov fldenv push lds test fcomp and testl push xchg push pushf aad dec cltd fwait mov ret mov mov loop fwait push fidivr push out jecxz jae push mov fs jg or fwait gs lods (bad) call mov and or fisub or jmp lock mov mov ljmp pop in mov ret or mov xchg std fnclex stos cli mov in mov sar dec fwait or or je testl push int3 or adc (bad) loopne sub pop sbb pop jmp (bad) cmp mov (bad) and orb lcall mov xchg and inc andl cmovl cmp adc mov (bad) xor in ret and test jp inc lods add pop mov xor cmc aas mov (bad) push xchg jg scas int inc call mov sbb mov cmp leave adc mov gs dec cmp in out xor mov mov fwait aaa jnp pushf mov adc inc in and sbb fwait sub add test and insl (bad) in mov push sub lock lret jg pop ret jbe jns ja push sbb push mov (bad) icebp add (bad) sti adcl sbb out sbb sbb inc xor les push dec inc rcl dec in lahf mov mov pop lea sbb scas pop jp pusha test mov lds adc pop in push fcmovne adc scas out lock push mov icebp or inc lcall xor sub aas jg push jbe,pt adc xchg lods aas pop adc in insb jmp add arpl sbb adc pop cld pusha nop jae imul xchg mov jne mov pop std sbb jo mov push sbb test sub mov sub or pop pop in cmp and and test fwait daa pop dec mov fdivrs fwait lret and bound adc xchg clc mov pushf mov xorl lea sub mul pop test xor push movsb std xor mov daa and jo mov and cld jb adc sbb pop mov add daa push negl mov ja addr16 jmp adc negb or (bad) leave popa xchg or dec std imul mov testl mov adc (bad) sbb and test repz stos xor (bad) mov cmpsl stc fwait (bad) jo xchg loopne mov and dec cmp dec xchg (bad) fisubrl dec insb insb xor out (bad) or mov rcrb xor or adc cmpsb sbb ss (bad) jmp mov xchg loope xchg xor in pop jnp hlt lret dec pushl mov leave mov je into mov and pop (bad) stc mov es ss repnz adc in sub inc cmp jp leave pop push idiv mov mov inc or or or mov or mov scas lcall imul add sbb rcrb mov test out sub xchg mov add add gs fldl (bad) pop in cmc std inc cmp dec sbb call lcall cwtl pusha xchg cmc (bad) xchg test fs xlat sub sbb jbe in stos mov or mov ja clc ret cmp mov repz jle xchg hlt inc call in mov lcall test inc adc aaa xor push mov out enter mov add cmp push pop (bad) lahf lcall mov imul andl jmp sbb movsl es nop or mov mov adc int fwait daa ret pushf into cmpsl je jo xchg or xchg adcl push sub inc xor cmp dec cmp mov pusha fs cmp jbe addr16 mov test insb pushf xor aas rclb or push mov and les add mov cli fsubl push fsts mov pop cmp ljmp in dec stc mov mov dec rolb fwait xorl mov pop sahf repnz xchg pop out cmp jg or gs xchg mov lret add mov push add repz loop fcmovnb sbb fsub cmp daa xor loopne xchg cwtl push xor mov aaa mov repnz or lea frstor scas lret mov dec hlt mov xchg jae insb mov (bad) movsl das rclb mov cmpsb push lock pop insl mov mov push push mov scas test mov mov or in or les (bad) mov xchg add or in mov je adc push or loopne (bad) int3 movsl hlt mov fwait mov pop dec xchg jg mov insb scas jecxz dec test (bad) fildl icebp int3 and push sbb data16 mov in adc xchg sub sahf sahf adc fwait mov pop dec (bad) aaa sub inc push insb or popa rorb icebp sub xchg jp leave ljmp jne rcr jnp jb cld movsl sbb aam dec mov jge ss arpl (bad) imul or clc mov jnp (bad) add mov cli icebp jmp std sbb lcall cmpsb mov mov jle cmpsl ret mov fwait (bad) imul xor adc mov mov subl mov loope sub add fwait rcrb jp or in mov call mov mov mov inc pop cwtl xchg push outsl adc movsw cld mov and es lcall add fistp lods adc or dec cmp test aaa in dec iret int3 mov mov sbb lret frstor popl dec cmpsb or rclb mov rorb cmp and aam mov stc aas scas (bad) stc cmp popa fsubrp jb jmp repnz inc into mov nop mov mov xchg mov mov std das loopne int3 leave dec cwtl cli push mov mov dec enter gs (bad) (bad) or in (bad) stc imulb mov in cmpsl mov cltd jb (bad) inc ficom imul cmp sbb outsl in or jne jo in push push pop in (bad) push rorb shlb in pop xchg jle stos xor xchg jns (bad) lds mov (bad) cmpsl jge jmp lea (bad) jne pop insb or sbb dec lock hlt pop pop jmp mov pop aas sub dec rol clc and dec adc push push mov xchg xor adc nop jmp pop cmpsl inc sub jnp xchg lock inc out mov repnz mov xor lret sbb mov hlt (bad) jae xor xor adc outsl mov inc jns imul rolb push out push mov inc or fisubl scas clc cwtl cmpsl push ret gs xor pop mov ret or sub inc fwait mov or inc in and add pushf mov or inc stos mov and fwait push mov pop xchg mov jnp andb (bad) cli cld xor inc fmull fwait push movsb ret pop pop pop in sub or mov mov sub mov in pop mov adc push dec insl imul fbld cmp cltd fwait outsl data16 insl je cmpl addr16 adc xchg dec daa std mov popf (bad) lock dec gs mov andb cmp mov inc pusha clc cmp aas iret push fwait sti sub cmp adc jnp dec gs add outsl mov fstps in mov mov push push mov sti fwait cld mov loopne mov cltd push pop insl cmp jp shrl jmp aad lahf inc xchg loope push shll loopne pop mov mov mov nop out mov mov divb push jne mov xchg ret push (bad) add movsl xor or lret sarb incb loope in dec orl scas inc into xchg cmpsb movsl and daa xchg pushf loope sbb xchg mov pop adc mov and std push leave ja stos xchg in adc mov mov adc test and enter movl out call mov lock imul bound cmpsb in pop stos in cmpsb (bad) bnd test jne sbb mov sbb repnz cwtl dec shll or imul arpl call xchg xor into pop mov sbb nop flds call add jne test mov lea xor in scas outsb cmp mov pusha into rcrl sub (bad) clc movsl cmp arpl (bad) or movsb xchg into and add pop inc lods cltd xlat push or mov sti sub dec or inc (bad) stos jmp ficoml xchg dec jge ret es xchg mov push in pop dec sub push mov scas inc stos arpl in loope (bad) mov nop adc sti lds jmp in lods sub cli call sbb mov in xchg (bad) pop cmp push daa fwait clc push mov mov mov rorb push dec lods inc pop jp mov sbb mov out push loopne or in sti and gs cli popf fwait ret scas out inc in jmp fdivrs mov loopne jl xchg fwait ror enter and sbb aaa mov pop divb rcll es fwait test pop sub leave js outsb scas or mov sub scas mov push stc inc jnp lock pop sbb in sbb jge js xchg or push push add pop xchg je in stos je (bad) mov lock mov sbb sbb lcall inc fs inc mov call pushf jg fnstenv add adc add and mov jl sbb scas lods sub int3 pop repz sub sbb outsb hlt (bad) fistpl mov in es out adc insb hlt sbb add ss std push mov mov mov enter inc daa loop cltd mov test ja pushf js sub je inc mov pop mov push add in push loope aam or testb xchg sarb push shlb ds insl xchg sbb (bad) ljmp push stc jae js xchg js sbb push pusha push add scas lahf repz sbb repz sbb int mov jp outsb mov mov xlat sbb xchg lods fildl cli lock adc jno mov in aam xor fldenv push fwait xchg scas (bad) jae jmp outsl adc daa push insb or push std jb es inc lcall jne (bad) sbb xchg inc aas or sbb adc jmp mov push sub pop mov xor ljmp push (bad) test inc xor xchg sarb in rorb insb sub fwait stos jne pop mull in jecxz addr16 xchg stos push push decl fwait fwait sub cmc inc mov test movsb in mov mov or push rcrb cmc jmp fnstsw xor enter xchg sub in or jle,pn scas or andb dec add sub xchg xchg fwait cvtpi2ps or mov nopl stos imul test or int3 fdivr stos mov out fwait pop lea ljmp icebp sahf sti cmp (bad) sub push insb jmp divb mov cltd dec or sub into (bad) shrb pop test and cwtl push and loopne (bad) addr16 jg push (bad) sbb sbb orl fsts fwait or xor testb dec dec sbb dec iret push mov aas xchg push cmpsl mov mov mov (bad) xchg cwtl mov mov iret pop enter insl cmp mov pop sbb inc mov xchg bound movsb aad (bad) lret in xchg outsl out dec cmp (bad) xor jg lods jns (bad) cmpsl ds sub adc dec jnp (bad) mov jns test imul cmp sub iret adc pop adc push sbb hlt fwait cli or dec out out (bad) das lret hlt out mov call mov xor or lahf stc jge inc mov cmp jle push aas outsl mov aad jne pop outsb dec les call lret jecxz out lods cwtl dec mov addr16 lods adc jns (bad) mov add repnz ret push mov pop mov cwtl fnstsw or mov pop loop mov inc repnz cmpsl mov lret aad pop lods add fldt lret adc push in dec lahf repnz add lcall test loop aas ret gs and pop mov fnstcw jmp mov add loopne popa scas cltd movsl jnp cltd aad adc stos leave lret sbb outsl hlt jnp enter ficom movsb sbb pushf cmp pop loope repz push ljmp lcall popa std loopne mov dec xor cmpsb (bad) dec test xchg mov and add popf rcrl jle out (bad) gs and add movsb sub push test in enter aad stos or mov imul xchg pop xchg fwait repnz mov in pop addr16 sbb repnz pop pop cmpsb mov pushf mov sbbl and inc dec xchg push repnz cmp or sarl lea xchg sub add mov cld mov cmpsb jle mov mov fidivl cmp jb and pop je std mov enter je lock inc xchg stc dec add mov cli mov out sarb sbbl sbb or out pushf jp adc mov add (bad) out incb lds jmp frstor enter cmpsb mov lret mov out bound out fadds mov jl iret daa mov lock add pop out mov sbb fwait or icebp jno cmp mov or mov lods xchg or sub pop out adc movsl inc inc fisubl or xor xor sti sbb or out (bad) jnp popf out jbe cmp inc sub aad into in jmp mov loop js cld mov cltd into nop pop push outsb lret add xchg mov mov xlat mov lahf or lret cmovnp xchg jl iret mov push sbb mov (bad) jb mov pop fwait (bad) xchg push lock jle movsl or dec mov sbb mov jmp adc fxch pop (bad) mov insl scas jecxz dec cmp lahf sub fwait mov xchg mov hlt sahf inc rcr cmp dec lds push leave and test push out adc mov cmp mov mov outsl push fwait hlt xchg hlt add fwait dec push pminsw ss or inc xchg int cli mov inc test aaa arpl lcall (bad) or dec pop fwait jns fs push in sub lahf or in add mov and xor fwait mov in jae fildl cwtl bound adc sub cmp and loopne repnz push stos pop js sbb mov mov dec cmp sub insb sarl popa (bad) mov mov cmpsl or sbb in in (bad) icebp out mov into (bad) sti shrl gs cwtl or or mov rorb nop xor add push inc or cltd jp aad fs popa add data16 xchg (bad) mov xchg lds (bad) (bad) xor add sarl and or push mov aam ficoml push outsl xor loop and dec iret pop sbb sbb fcomp and and cmc fwait mov sahf mov cmp repz movsl cmpsl mov adc add dec jmp adc add cmp pmaddwd dec mov inc hlt ds mov sub sub xor push in test test lret mov test sub cmc xchg lds fcmovnu ljmp les xchg dec out fildll mov xchg xchg dec sub icebp into or repz call fistpll add fwait sub xchg arpl adc push xchg cmpb mov push adc scas movsb insl xchg dec or push add loop sub fwait inc cmpsl sub mov jnp daa cwtl lods stc loope cwtl fstps pop shll pushf jp ljmp sub hlt or jge movsl stos adc xor jb das cmpsl lcall cs push mov push test leave cld lods sbb inc xchg xchg daa mov mov xor sbb out aaa in xchg mov movsb (bad) mov and mov iret push repz sar aas jo loope cmpsb fwait pop or push lahf dec xchg cmpsl mov mov xor in sbb jbe popf pop lods stc popf es mov loopne jo lret mov jge mov gs dec or mov xor pop mov mov movsl cwtl call rcl jae imul jnp push xor add pop rolb adc (bad) xor pop dec sbb stos (bad) hlt or (bad) inc out hlt aaa push mov xlat fstps jb push pop addr16 fisttp loopne jb push pop sub jne test xlat jb xchg mov mov rorb mov and mov jmp fcomi fwait xchg fs push lea hlt les (bad) (bad) in inc outsb mov inc orl push aaa enter fldl jnp adc in imul dec mov das sbb mov jecxz test ja pop aas add out in in xor mov xchg pop or jmp jecxz pop (bad) dec ret in push cmp push out sbb jl mov and in lock stos or mov sub pop shrb sub xchg pop sub fwait pushl test add sahf lahf adc test add ja fld push xor mov jecxz in pop sub jle inc shlb movsl call movsb mov ret push daa test xchg call stos mov inc xchg es insb pop mov xchg loop lock gs mov lods mov (bad) lret out jle (bad) roll mov test in stos mov jnp testb in sarl in mov jnp sbbl pop dec loope mov gs test repnz mov out sahf sub ficoml xor xchg sub js cmp push movsl mov or jns inc stos cmp xor mov mov push enter (bad) mov cmp in fidiv mov cli xchg jg lock add repz sub mov repnz mov imul mov lcall add sarl enter adc sub mov insb fstps shr lea mov incl call or test cwtl aaa mov sbb mov lret inc sbb mov jb jne out mov in rolb repz fwait pop mov dec adc dec fbstp push in dec jge insl xchg sbb push clc js call enter mov dec sub call or mov sti ja pop jbe in xchg xor pop cwtl lea gs ljmp fwait xor push mov and imul or (bad) mov idivl or mov (bad) inc loopne cmp ljmp ficoml dec jmp arpl sbb outsb out mov pushf fucomp (bad) xchg inc mov mov aas fsubrs mov aam or dec cmp loop ret cmpsl push (bad) scas mov ds mov sbb pop xlat sub lcall mov mov cmpsb mov out lea or movsl in test mov cmpsb loope test pop in ret mov sarb or sbb push orb roll jle jmp fwait mov xchg pushf mov dec aad faddp sbb pop lods mov jns cmpsl jmp jmp xchg jmp imul fstp mov cmpsb incl decl repz loop or push int call mov daa imul or ret cmpl lcall xchg lret add cmp xor sarb testb sub push sbb mov cmc ljmp mov pop mov adc cmp fisttp xchg das mov sahf xor mov fsubs xor in mov movsb insb sub fwait mov fs pushf (bad) jg push push mov ja add aam es or lret pop in fs ss leave xchg movsl sbb in jns pop jecxz sbb dec paddd xchg dec and std or inc sahf jb push ficompl mov jp sti mov ljmp mov mov jmp int fimul scas inc fs xchg loope adc inc int3 sub gs pop cmp (bad) mov inc fmul mov jnp testb int adc daa xchg ljmp or jp push push fdivrs push cli add jmp (bad) xchg mov mov push ret movsl call jne aaa dec aas inc and pop ficompl or jns xchg jo xlat mov fisub test ds jmp pop out cmovb xchg mov repz adc pop imul sub push pop sub mov sub ret aas mov jb push (bad) incb shrb aaa popf and enter fwait and lcall in frstor pushf mov push shrb or outsl adcl fsub push push lods and sahf fwait cli (bad) jns lea dec in dec push lret pxor les int inc repnz sub in push or or loop and jge (bad) mov loope xchg outsb fwait sbb pushf and mov pop pop out fwait and dec inc jecxz pop xchg sbb sahf sbb cmp mov mov pusha js mov or or jge mov scas fadd sub adc sub and aam jmp xchg jbe mov lret (bad) repnz cmp adc jns dec push dec pop in out push lret dec lods ljmp jmp addr16 rcrb mov jmp inc daa stc aaa xchg sahf mov dec lcall fwait ret int3 jmp add insb mov mov and sahf xchg das popf dec mov les sub cmp hlt push mov pop inc lcall mov jmp adc sti xchg pop dec mov ss xor daa adc mov test mov (bad) dec lock fidivl jno jo push sub (bad) movsl stos pop (bad) mov es fisubr insl mov dec (bad) mov dec cli pop mul je out cmp mov mov add cltd hlt dec es cld mov dec nop lea lods faddl js mov in sarl jp sahf mov inc xchg mov test sub stos lret pop or (bad) push scas movsl insl push fwait (bad) jne pop aad mov cld inc and xchg mov out out mov (bad) in pusha scas mov jae push inc jecxz pop in (bad) mov mov push repz (bad) (bad) out in add xchg inc push push mov dec popa jne movsl xor push icebp mov stos fadds mov or popf mov sbb or push or (bad) in jg or jno mov cmp adc cwtl jno dec sbb push inc jnp fwait mov out push enter cld inc sub mov cmp pop in (bad) leave xchg mov lret sbb clc ret mov mov cld xchg or mov in stos mov ret mov imul mov push imul dec mov ljmp repz fwait and out and pop in aas sub in mov or or add mov lods jbe adc push out int test adc sbbb mov (bad) clc sub iret das push sub mov sub aad mov addps out sbb push lds rcll pop test cmc ja add dec mov aaa sahf aad in lock nop ss mov negl lcall gs mov jg mov mov out fisttp mov or jg pop xchg cld aaa cwtl (bad) pop mov ljmp scas stc mov pop mov xlat movsl shrl loope jmp repz test push les fbld pop loopne fscale sarb fbstp loopne lea call sub mov or pushw (bad) push nop inc xor pop sub fsubs xorl jg in xchg adc pop mov cmpsb xor pop or pop sub mov mov pop icebp mov test enter rcrl push jne push jp sub push lret mov mov enter mov mov lods (bad) stos lea arpl sub cltd mov hlt sahf movsl fldcw in das imul adc pop jne jl jge out and (bad) fwait adc test ljmp orl stc or push inc sbb mov in jbe in and lock jl (bad) mov dec pop sarb out (bad) jge jb sbb jge jecxz scas pop add repnz daa or mov sbb arpl movsl hlt add jmp ret mov push inc lea mov add fmull fstp jl fwait sub and mov jbe lahf xchg xchg bound icebp cwtl nop mov jns pop leave test loop in dec movsb or or lock (bad) into std push (bad) dec mov mov cmc mov mov int3 stos cwtl sub mov xchg xor in sbb adc mov stos insl pop jg leave je in mov aam (bad) mov aaa or scas mov nop jle sbb xchg sub out mov (bad) or fwait mov xchg lods (bad) push icebp fnsave cmp mov dec fistpll pop (bad) icebp hlt leave stc cltd mov iret dec pushf inc mov pop iret pop insl mov leave (bad) shll in in xchg xor pop roll pop lcall insl andb xchg jne or inc cs mov daa dec cmp sbb xchg inc or pop pop push imul xchg fsubrs add inc fimull cmc test push mov and mov dec out xchg xchg lret inc fildl push int3 mov jb in test mov js jbe outsl stc mov fwait ds mov or lods dec fisubrl xchg lds gs clc adc jb mov mov jecxz in sub xlat xor cmpsb outsb test js and xchg sub add sbb add inc imul push decb mov icebp sub pmulhuw dec xchg fwait inc loopne adc es mov fucom repz mov jb xchg in in inc aam jge gs jns sub fwait adc aam pushf repnz imul push or push cld add enter cwtl add and cmc push dec fwait cmpsb xchg iret mov push fstpl pusha dec jle dec or les je jae xchg ss or shl or or bound stc inc roll mov add fwait jge sub into int cwtl in jge out xor jl or mov cmp pop cmp stc out (bad) shrb int3 sub add sub lods sbb aam xor repnz repz jge js pop mov dec repnz mov mov data16 aaa lea mov pop mov jge cwtl mov jle in (bad) outsb cmp out lret pop loopne xor add dec leave xchg pop (bad) lret jecxz mov and andb lock jo dec lahf cmp iret sti jnp outsl inc cmpl out les pop sti and je idivl xor xchg mov mov pop mov loop dec pop push or mov (bad) pop push jbe ja push xchg loope dec jmp ja out roll add dec mov dec add xchg outsl cmpsb mov add xchg xchg fimull mov and (bad) out push fwait xchg pop xor mov std push mov inc xchg in mov lock stos cli leave ffreep pop pop cld pop out cltd xchg cmpsb jge roll scas add mov mov out jbe or jmp jmp xor xchg andps add pusha insl inc xchg push mov std push pop (bad) call out imull fistl adc popa jmp push cmp gs dec repnz pop jmp in cmp xor out or push insb pusha mov fwait mov fstpl or aad mov pop push out mov aam das arpl dec cmp nop sub jbe lahf and psubd aad int3 dec push mov mov orl dec in or fwait and das cmp outsl sbb cld gs and ljmp in or arpl insl jmp or idiv aaa mov inc push je ret lret xor stc stc mov call lods xorb pop mov ret mov xchg nop sub add (bad) mov jp rorl cwtl push ret cwtl fwait popfw iret pop int frstor or push jb hlt jne (bad) dec and push jae (bad) jns (bad) mov insl fs dec pushf push aam stos leave test hlt test add cmp mov pop lret jp pop movsl ret pop (bad) fldt pop rcrl faddp sub (bad) mov xchg aas inc pop inc jmp outsb fnstcw lret mov insb and setb sub mov lock stc lods (bad) dec js xor mov jl mov mov in inc mov fildl out xlat mov ffree test and aaa scas pushl je enter idivb sub sub fwait mov dec ret inc xor dec fwait cltd or les pushl xchg in repnz fsubs xchg (bad) test addl mov sub dec mov fisttpl mov fcmovnb sub inc mov inc mov mov rcrl test clc xchg (bad) enter pop nop mov push push data16 adc stc in outsb (bad) std lcall gs mov inc loope arpl dec jbe jns dec xchg adc inc (bad) setle sahf mov je and testb xchg arpl or in in mov cmpsb loope out cmp cld push fwait pop insb mov outsl add imul cltd jne mov mov push mov or mov sbb mov (bad) mov push fwait lret mov in xor lcall je mov mov sbb fstps cwtl pop cmp (bad) insl stos xchg inc push mov xchg gs dec inc stc cmc (bad) shr mov fs and mov (bad) sbb nop push mov and mov add mov (bad) xor imul inc inc xchg testb mov scas inc cmp xchg mov adc xchg (bad) xchg cld adc daa pop movsb sub std icebp cmp dec dec inc nop lea and jbe fsubrs insb add clc adc clc xchg or imul mov jecxz fnstcw xchg loop cmp pop insl jnp inc push adc or frstor lds mov (bad) sti mov jo xchg sub and scas rorb test adc pop mov call pop ret push clc popa lcall fwait jecxz mov fstpt imul push jbe pushf clc xorb sbb insb lret xor inc sbb mov xchg pop mov movsl inc int push repz jg xchg mov out mov (bad) repnz inc incl jg test lret loope mov mov stc sahf repz sbb lds (bad) xchg das cmpsl test mov xchg aad cwtl fcompl pop cmp pop out daa jl fstps mov rol add or push aad icebp in add jg or jne test jmp mov sub push dec cmp cmp or nop inc or pop mov dec xor cld mov mov addl movsb mov mov arpl push xchg mov ss cwtl pop push and sub or jg shrb in mov ret je mov pop cli push aam sub add popa xchg in fdivrl fist cli or pop dec mov (bad) mov mov mov jecxz push dec out lret sub push ds lock ds out pop or (bad) pop hlt imul add push fstps daa jg inc out (bad) (bad) clc push imul repnz jg xchg ret rclb fsubrs cmp clc dec add sbb ljmp sub loopne mov imul rcll mov outsb (bad) push inc xchg dec loope push push in pop xlat (bad) dec fdivrl fs stos shld inc inc xchg pop call lds sti (bad) cmp mov sahf xchg cmp fwait in inc insl popa ja jl imul add xchg divb movsl xor push sub ret (bad) icebp jle ljmp daa xor xchg or mov (bad) mov and repz fwait jmp std cmp repnz or cltd test or jge je icebp cmp movsb push mov xchg dec sub repnz enter lods popf and mov fwait sub hlt push cltd jae cltd out (bad) clc lret sbb cltd adc xchg cmpsb lahf aam out dec fisub xchg inc or lret add cltd out or xchg loopne dec cmp mov push (bad) ljmp jnp cmpb scas mov into dec ljmp loopne aas fwait dec cmp mov mov in shll cmpsb es bound or pop jl adc fnsave mov and xchg test push test jp inc mov mov sti aad es sarl adcl lea aas xlat stos fdivrs insl out mov sbbl test std or cwtl lcall jbe jb test mov rolb pop daa mov sbb (bad) lret or cmp or cli lods movsb imull call dec mov adc jge scas push outsl lods (bad) xor xor pushf fwait ja test pop (bad) fwait push lea lcall lods jbe adc addr16 jne decl mov dec mov mov lret cmp std mov lret mov movsb adc out mov jns mov and movb js mov rorb (bad) mov adc sbb pop mov adc lods or jno loop dec xchg lods fisttpl or mov lcall or push and dec add dec jmp test cmpsb dec icebp sbb sbb jbe or adc js es loop inc repnz dec loopne cmp sub jbe (bad) (bad) out ds push mov lock and sbb arpl popa mov ja jle loope jnp out rorb cmp outsl jbe cmp bound and xchg icebp cmp movsb int ja loop pop loop pop stc push sub jnp scas sub mov (bad) mov loopne shl xchg sub arpl pop ficomp stos fimul stc daa lcall outsb mov mov int xor jge hlt ret xlat pop sbb jb icebp sbb fidivr (bad) mov xchg outsb lcall imul dec cwtl dec xor testb jl add push hlt mov mov dec ret sbb (bad) out pop icebp dec mov jnp push rcrb js out imul mov and ret xor pop or push xchg lret out nop lock mov cltd std cmp mov cwtl mov iret int mov push dec ret adc or xchg pushf mov sti (bad) push rorl pop pop lods jg mov sub scas xchg jecxz out mov push aad push stos test pop sbb push mov outsb repz mov sub movsb rclb fimul xchg jo loopne jnp mov es push mov inc test cmp inc or dec xor fwait pop sbb pop jno dec mov cmpsl (bad) incl (bad) insl mov cmpsb mov adc cmp inc sbb rclb cwtl jne (bad) mov jnp push psllq add ja movsl mov and (bad) adc xor sub in add dec (bad) xchg test stc push jp sub daa push xchg xchg dec or fninit daa mov icebp les mov jae xor and cld cltd xchg push mov imul mov xchg mov int3 mov cmpsl pop pop mov pop pop shrb mov pop cmp orb dec pop in mov jge mov inc or and imul push jecxz and and adc out jnp cltd add fsubs in dec nop arpl movsl sub or ror push push mov or mov adc dec jmp adc roll and mov pop rcl sbb (bad) js sub or sbb stc cltd jg or outsb lods sub jnp (bad) xchg insb in push sub or test sub dec sbb shr or or xchg xchg in xor sub jnp sub test dec sub mov adc mov out mov out mov fbld (bad) scas push shll pop jnp cltd leave pusha mov lock pop xchg loopne xchg nop mov sti sub mov lret repz mov lret (bad) jno cli ret aaa hlt mov ret repnz dec pop andl push out xchg pushf popf inc movsb fwait mov repnz loopne loope mov in mov fwait sarl call test pop (bad) je mov ljmp je pushf xor mov sub pop jmp movsl mov cs and push (bad) xchg mov je popa out leave (bad) dec in das jl jnp push jmp lcall cmpsl adc movl into push loop jbe stos mov es std in cld push sbb cld divl outsl in nop pop mov fwait cmpsl ja xlat fidivrl push in in cmc in subl call mov stos xchg scas mov loopne xchg xchg std out sar mov mov movsl stos pop in mov (bad) mov xchg aad add fwait xor leave cld mov out rcrl mov sbb test fcompp sub mov sub pop pusha or pop jbe push xchg and (bad) je movsb add pop mov mov mov or lcall mov sbb (bad) and fldl bnd das ficoml mov mov and leave div stc repz mov clc xchg arpl mov pop loop xchg jae testl in fdivrs imul mov lock (bad) pusha lcall and mov push xor iret sti mov sbb or cltd lret inc mov jl push popf data16 mov xor xlat mov mov in mov das push cltd pop add leave push mov ja ror mov scas aam cmpl lds aad nop dec lret dec mov shr mov and outsb in sti jnp dec dec clc pop scas movsb pop out call and cltd pop bound cs cs or jbe jbe and sahf in jle jns movsb fdivrl dec mov movsb mov out jle mov pop mov jg lods pop aam jmp mov mov insl pop mov imull xor sub insl lahf jns or inc incl mov xchg sub lds outsl mov ljmp insb and test and pop pop jecxz lods (bad) mov xor mov mov scas in push fucomip je push bound fidivrl test mov roll fwait sahf mov adc pop decl repz jae jb jmp loop jbe lahf lods (bad) jecxz add mov mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait in mov fwait .byte xchg inc sub (bad) test add add jb add imul mov (bad) xor xchg jle push xchg (bad) xor movsb xchg js hlt leave inc mov cs xchg (bad) cs xchg test les lods xor xchg (bad) loop jle enter jb jge leave ja mov push push ret addb stos mov ss (bad) stc mov loop (bad) jbe mov cmc sbb xchg pop shll decl xor xchg (bad) mov rcr and cmpsl inc sbb pop (bad) ja andb xchg (bad) xor arpl xor xchg xchg jno jnp in xchg (bad) xor lods xor xchg (bad) imul xlat push xor xorl jo mov sub cmpsb pop into imulb cltd (bad) xor cltd lock out mov sbb jmp mov rorb jbe sub lock out mov mov cwtl (bad) xor jmp mov shrb int3 mov nop xlat roll pushf dec (bad) cmpsb test lock out mov jno popf jge hlt and mov push xchg (bad) xor xor xor xchg (bad) xor or mov nop xlat roll pushf dec (bad) cmpsb test add xchg (bad) xor pop xor xchg (bad) xor or mov nop loopne add dec (bad) cmpsb test dec es xorb xchg (bad) jo mov out push loop pop xor lods mov shrb int3 mov jno test outsl xchg (bad) mov in xchg push aas mov xchg push dec xorb insb push ret cltd jl cmc inc xlat and jne sub xchg (bad) mov and shlb (bad) jge cmc inc xlat and jne xor xchg (bad) sbb xchg (bad) cs adc xor clc adc cli mov sbbl idivl xchg rclb cli arpl in std ret and shrb or movsb jno arpl push or ds imul lock test mov arpl mov inc inc mov mov lahf (bad) loop jnp mov cwtl into or pop inc xchg pusha adc jg inc pushf arpl leave dec sbb cli sbb mov fwait mov hlt out mov fistpl orb insb push movsb shrb dec jno or mov or cmp pushf mov adc notl dec fmull int pop xchg sbb lods outsb dec ja inc ss aam and add mov inc xor in mov inc xor jecxz inc sbb pop ja xchg and aas lods iret iret mov xchg inc ja or mov dec pusha cs pop ljmp clc or push lea pop fistpll pop sbb cs cltd dec mov addr16 cld jl add push imul sub mov xchg sub popf imul in cmp pop es add cmpsb sbb jmp fwait push inc pop pop push das lock pushf lcall sbb pop push fdivs or (bad) xor sub mov or sti pop int3 mov (bad) mov mov stos mov aam sti fsubs mov (bad) push add pusha scas cmp xchg inc orl xchg dec outsl sub loop dec ficom mov inc sbb shl jo loop push ljmp xchg mov xchg jl aaa push cwtl inc je and jb clc fldt outsb and lahf xor mov shl dec and enter ret enter lret clc repz mov popf pop int3 mov jp mov xchg leave mov and xlat jno push pop cmp shl fwait (bad) scas (bad) add mov xchg inc dec inc lock and mov mov sub pushw xor jno pop mov mov xor mov pop jge pop jne mov insl out jp lods mov addl jno mov imul icebp fnsave cltd dec mov sub pop nop lods out or data16 cmpl aad inc ret arpl xor inc cmpsl (bad) aaa pop out popa nop sti mov lahf xor jbe int3 ja jns sbb mov push inc sbb cli jae notb xor dec xchg bound orl sub in stos push sbb das xchg nop movsb mov jle sub lea lea fdiv fisttp pop int3 (bad) and sub lret inc xor jnp lret cmp sbb mov imul xchg mov jmp das add push pop jle jnp das push sbb mov inc dec icebp dec jle iret sbb mov jl loope jecxz jb cmp sbbl ljmp inc mov xchg mov xchg out arpl xchg pop sbb and int3 xor outsl push leave mov inc popa xor imul inc subl pushf xor xchg adc stos push fbstp nop ja in xor mov mul cmpsl pusha mov movsb (bad) imul into xchg pop lret (bad) mov (bad) mov push rorl adc cmc jg and sub sbb jne ret xchg repnz mov or mov pop addr16 sub loope aaa xchg pushf outsl jo pop adc and mov ret leave subb sub jge jecxz shrl sbb lcall jne push inc lret and inc push out mov cltd xorl pop jle mov mov dec dec out fild and mov shl ret pop ds mov pushl jecxz nop mov adc xchg test ret cld pop or ljmp mov pop dec or dec pop mov repz vpmulhw jecxz mov mov imul sub bound pop int xchg hlt jmp xchg mov mov movl push orl or pop mov xabort push (bad) pop dec inc ljmp lods sbb and cmp xor cmp inc inc inc jle add iret aam pop dec fndisi(8087 je mov inc mov out lret das les xchg inc insl lea or outsl loopne sbb cltd push fbld mov and add adc and adc mov push inc cwtl movsb out inc cmpsl daa push jbe aad cmp loop int3 dec int3 jne jmp jb and enter movsl push (bad) fldl pusha pop aaa inc outsl andb mov xacquire lcall icebp inc ret sahf lret sub jmp pop mov loope push add and and xor and push fidivrl adc xor imul clc xchg popf popf (bad) xor push (bad) std dec pushf xor call push rcll cmpsb icebp fwait movl sbb popf mov pop mov adcl test pop fnstcw sub test fild and jmp loopne pop insl jecxz,pn fisttp push sarb movsb jnp aad out xchg cli (bad) push imul mov test test inc add (bad) jecxz xlat jl std jbe xlat bnd roll sub xchg insl ja add mov inc fwait popa stos xchg push pop arpl loop mov (bad) sbb dec enter ljmp sub (bad) fiaddl mov and icebp popf push add mov mov (bad) mov push push cmc out mov (bad) jo or cmpsb ja fwait out xor lcall and sahf shl jb push add xor jae cmp inc (bad) into ljmp repnz out imul cli jg in dec xchg rcl cltd sbb sbb mov mov cmpsl cltd cmp push sub in loopne mov stos sbb xchg sub lea push xchg jb rol and into lds dec into add mov cmp (bad) mov mov ljmp lds push cwtl out or jnp fs (bad) cwtl ret sbb add mov mov xchg mov cmp xlat sbb es sub adc dec sbb (bad) out jp and pop rol xchg and xor mov mov scas jl clc cli je add stos inc ret or fistl mov mov push in (bad) mov mov sbb add arpl (bad) mov nop xor daa in sub mov adc xor cmp jmp jo aaa loope call add sub jb dec or loope test rolb sbb pop or movsb push push ja xchg pusha xchg pop int gs xchg mov sarl sub mov xor ja or dec xchg fcmovnu hlt adc xlat movsb pop (bad) dec dec mov sbb xor call mov (bad) add cwtl xchg xchg movsbl and dec xchg daa push cmpsl adc mov and push sub arpl daa mov jecxz dec or call dec push dec movsl lret insl lcall or outsl inc stc stos aas fdivrl pop mov inc cmpsb pop loopne or cmp sbb inc lods movsl adcl rcrb ficomp inc icebp andl pusha gs (bad) mov xor pop push lock dec dec mov mov push inc and stc mov sbbl leave push jle mov test mov in cmp jbe scas jb out inc sbb inc stos push push inc rcrl (bad) ja inc or jo sub stos rorb ljmp inc ror mov mov mov jp lcall sar dec mov pop aaa pop xchg adc lods test test jno mov sbb jp push mov jno dec xchg lret mov cmp add aad addr16 shll jns jmp outsl sbb imul xor int3 jo inc jbe push and mov (bad) pop and test push push inc push stc sbb xor lods (bad) cwtl fs mov sbb pusha mov addr16 push fnstenv repz sbb xchg cld aas mov nop scas rolb outsl iret (bad) cli adc icebp lcallw add cltd dec ljmp push scas inc and rclb push push (bad) hlt jmp xor out test stc fnsave in push xorl jae js inc sub push dec cmp stc dec push aad pop inc mov in in xor mov leave outsl jbe pop sbb rep adc xor and inc pop pop dec jg inc mov (bad) in bswap adc cmpsb (bad) cmpsl and popa cmp (bad) orb jecxz xchg mov mov scas addl pop setge fidivl es outsb and pop xchg sub mov fld adc mov mov mov loope mov mov jnp je mov fcoml or aam mov jb insl jno ret cmp add cmp sti xchg cmpsb mov clc or push aad inc ja add fadd btr and inc cli popa scas jl in test and push jae (bad) xor push aas xor lret push mov jmp cmp pop aad sbb lea clc or xchg lret jb fsubrp aaa push pop sbb cmp jno pop mov xor push add popa imul add adc rorl dec popf xorl adc push push jmp inc lea xlat mov ret mov xchg insb dec daa lret lods cld clc cmpsl mov mov sbb call ret sbb push dec add dec jecxz cmpsb stos pop lock pop add or mov cltd pusha in push nop jnp lods mov pop xlat mov add in mov push into (bad) mov ljmp push pop (bad) popf sarl mov test pop cwtl roll lahf xchg (bad) into sbb out pushf (bad) xchg lea xorb cmp insl cmp (bad) pop imul stc inc lahf mov fnsaves jle rcll add jbe out xorl jp aaa cwtl out xor bound jg imul and mov mov mov rcrb out adc (bad) fwait das pop hlt mov sbb es push jg jno lcall add jmp sbb add jno or icebp (bad) cwtl push lret out es add inc add into sub inc push add stc mov out insl pop and lret push shlb out test adc inc cmp jmp daa (bad) mov add out jl mov addl dec sbb cmp test jno rcrb adc scas pusha (bad) pop imul roll loopne pop sbb add bound jp in add leave xchg jb inc add imul push test cmp pop add push sub iret sbb insl insb fstpt icebp push rolb sub mov cmp mov cmp clc and leave lcall mov sarb push add add cmpsl call outsl shlb aas and or sbb sbb shrb fdivrs adc and add test orb add adc jno mov imul out add ja inc testb orl mov push inc subl mov xchg inc push and enter adc mov mov (bad) and cmp int3 xor mov test xchg lret sbb test push adc or test cltd add dec idiv jns test xchg add test in or adc lahf loop loope sub outsb enter mov adc dec mov (bad) mov and lea ss dec mov movsb cmp hlt bound push push les pusha push pusha adc incl pop inc shll and cmp scas dec adcb sbb lret push inc mov (bad) rolb and aas (bad) mov adc pusha add push cs sbb movb stc fild popf adc pop test nop inc mov pop sbb push test inc mov lods add xor aas jecxz lds test mov je andl loop dec mov insb xor mov js cmpsl sub dec mov and rclb adc push iret mov cmp sub inc add jb xor je popa jo cwtl lret clc sub fmuls mov mov xchg scas add jbe enter or cmpsl push test repz fsub add mov dec stc mov cmp mov xlat jns push loope mov jmp call movsl leave cwtl inc adc jo or fist mov add cmp cmpsl xor jb orl popf and movsl aad in add inc lahf lret mov xorl test jno cltd ret sbbb scas imul jae test out roll das jb test hlt dec add fildl add cwtl push mov inc dec cmp ds movsb pushf or cmpsb int3 pop add mov adc rolb das outsl push insb loop aam lea pop mov pusha mov xchg (bad) xor push loope adc add or clc popa push jo inc mov jmp (bad) jge or push inc insb lret adc inc sti loop push nop sarb cmpsl mov xor test sub lods or imul repnz push jb lods jb mov sub mov test sbb xchg mov iret lret mov mov xchg pop movsb jmp add lea hlt enter push push cwtl test inc icebp stc sbb bound and outsl add out sbb add pop mov hlt test aam inc push call sbb pop mov inc mov decb jb jge scas add lret fs test daa xor mov sbb (bad) mov cmp out pop aam xchg mov stc xchg adc cmp jno push js pop jns cmpsb aam fs inc sbb aad dec sub imul sub xor subb mov sbb pop add inc jl add mov fcoms imul sub aaa push add faddp jb nop and pusha adcl add int3 lret jo add rclb xor loope cmp nop (bad) mov bndstx mov xor jb jecxz sub mov fcompl inc push and mov test pop pusha push divl xor pop xchg ss sbb jb jno add std xchg mov imul stc mov inc cmp xor pop fucomip push sub addl cwtl or cmp xchg inc je add das push mov cmp fstpl rolb test inc xor or xor pop loope xorl mov add pop add cmc (bad) xchg addl xor inc and and mov xor push push adc dec lcall ss fldl2e or iret or mov mov xchg js xchg imul pop mov mov inc cli lret xor add pusha roll nop jl push xor out and es or sbbb dec add leave rol call or xchg adc (bad) movb push mov sub push push mov push clc mov mov movsb jl sub imul cmp (bad) lock cmpsb dec scas insb loop add jecxz mov pop xchg test fisubr cmc enter cs lock ljmp sub mov mov pusha mov cwtl insb or mov add cmpsb jle add and in cld jl insb enter add add fsubrp mov nop sub cltd xchg sbb add and xchg pop sarb hlt push push fisubl in xor mov adc push cmp push push (bad) test sbb popa out xchg cmp (bad) pop pop lret lret fnstsw cli or (bad) pop cmpsl sbb pop test loope and mov je dec movsb add xchg mov cmp inc or or and push sub add sbbb sbb lock lock dec push push lea dec cmp adc jnp fsubr xchg out dec inc add fs insb sbbb hlt mov daa add leave xchg dec jecxz imul push sub mov daa xor pop and mov or jecxz jb mov dec push inc jb pop cmpsb mov pop sub pop add sbb jo fldl movsb or mov ror inc mov xchg and cmp xchg imul add outsb pop pusha aam dec add out test aam test xor adc xchg dec lret add jae push push lcall rol jb pop movsb jo mov inc add xlat mov and xchg cwtl mov loopne sbb add xchg cmpsl dec inc mov aas loopne fisubrl jle in add testl pop ffree rcrb mov orl mov cld jno or or lock mov mov pop xchg push add lods or jnp enter test sbb push xorb fisub ljmp (bad) add adcl add adcb pop adcl sbb adc nop cld mov (bad) aam mov mov rcll fdivrl xchg loopne fadd xor jl inc mov push inc fildll xchg ret in out push sarb (bad) je add dec outsl jecxz inc dec imul fisubr xchg cwtl jl dec insb adc xchg aaa lock aad jl sbb subl mov stos add add loop or lret mov movsb dec dec pop pusha add adc sarb call mov test andb xor outsl inc adc mov inc sbb cwtl mov mov add clc jno pushf pushf (bad) ret mov pop lds push out dec push adc adc adc xor pop insl inc cmp adc inc xor mov pusha out imul and pop loop or add lret jo movsb add jns mov xor adc rol cs scas cwtl mov cmpb dec insl inc add push mov cwtl into fild popf les dec jnp adc jge fsubrl ljmp push mov test ljmp mov add push repz inc (bad) (bad) pop (bad) and call inc fsubl call pop js cmp jno push adc je add stos aam and subb out aas rcrb mov sub sbb les push gs push mov or jg rolb (bad) add inc lock shrd xor add mov mov pop sbb pop push pop xchg add nop imul sbb hlt leave rorb lods dec (bad) jl imul repz aaa stc mov cmpsl dec pusha mov jbe push xor adc test mov (bad) cmpsl sbb int shrb and repz les add push in test nop push or mov and or les clc loop add fsts mov nop pop ljmp xchg andb add xchg mov mov icebp and or cmpb mov pop and dec xor fisttpll jne scas insb shrb int3 or add inc imul sahf outsl mov rorl test cmpsl jns mov (bad) arpl sbbl and mov (bad) xchg and leave dec or cmp imul sub push push cmp call cltd or punpckhbw lret xchg or add bound or popf imul jle call or sub push popa add jb fdivrp call outsl fwait ja popf or insl repz outsb cmp add mov push lds es adc and out sub mov (bad) and das stc add and push add xor insl (bad) jp pusha ja out negl sbb roll lods mov (bad) fisubl mov pushf dec mov or loop js aam ss lods lahf out cmp push jle shll fldcw popl mov add and jns dec pop xchg imul in jecxz push fdiv test xor call testb cltd mov xchg mov or test jo or (bad) xchg scas mov cmp test add std mov lret push lods jge add cmpsb aam xchg cmp call mov or enter out stos cmp xchg inc add pop add imul cld insb loopne (bad) push rcrb cmpsb jno out (bad) jmp adc add pop mov add xor fnstenv pusha leave xchg les lcall addl imul pop mov xor mov stos dec pop mov (bad) pop and mov ficoml pop jno pusha dec loopne outsb mov pop jo jg cli into out andl add cmp es dec and pushf jle inc pop call mov jo jmp ss (bad) imul lods pop xchg push sub ret imul pop movsb andb xor lret push mov cmp xlat mov stos movsb ljmp add adcl sbb bound nop in test fisubr jecxz (bad) pop mov out in lahf icebp adc aaa xor sbb add insb repnz out aas outsl mov enter cmp push mov cmc add arpl loope loop jl or in hlt add outsb push insl jo ficompl dec add jb arpl outsl popl (bad) ss lret pushf clc inc aam ljmp inc bt leave ss in mov shr inc popf xor cmp arpl inc xorl dec outsl or mov iret lock add push pop mov add mov xchg push jg pop outsb cltd jns xor push aam and movsb adc or inc data16 inc adc jae out xor pusha jb ret imul scas dec std hlt add clc and sub ja xor mov mov sbbb lcallw adc and dec stc mov xchg imul loope inc mov xor dec pop add aas seto sbb mov and jo fxam fs dec mov scas loop (bad) adc xchg cmp test or add sbb push add adc mul cld into movsb add jle (bad) ss hlt aam sub into jp arpl push fsubrl fistpl pop mov or add xor or loope mov sbb or inc and add pop and or jo out dec pop push subb mov hlt xor xor jp jbe or icebp mov mov add test cmp push pop stos adc push pusha lcall push (bad) mov pop subl or add cmp push cmp dec movsl push cmp dec fs adc jo sub push add std dec push imul imul rorb push xchg mov lods xor mov inc mov dec xchg and inc lds mov add pop lods lock jl inc arpl mov sti mov shrb sbb push pop pusha and add or cmpsl pop mov xor pop neg or add es test out mov pop add test jns imul push and in addr16 add and imul gs aas mov cmp stos push add jmp pusha int3 cmp out nop loopne ud2 dec sub and cmp js shl adc push add movsb mov dec push adc xchg push sahf in shr add xor xorl jp arpl fisubr pushf sahf inc mov xchg cwtl in add inc dec lcall cmp pop movsb dec sbb loopne sub mov movsb call push adc aad add sahf out adc and adc add jge adcl das movsl add add push dec popf mov clc pop add and mov mov lock loop out mov sub int sahf or sbb nop rclb stos je fadds adc out mov jno and push arpl inc jp test sub bound add int clc (bad) lret adc daa push adc inc and pop mov popa and outsl pop in mov decb (bad) testl mov out push pop out xorb jae (bad) and add inc rcrb daa adc ret sub xchg dec dec sub dec imul xchg je cld lahf jns loop xchg call xor clc add pop rorl int3 sbb (bad) sbb mov outsl sbb dec test test les xchg aam jmp mov and adc mov mov and loopne sub jg push xchg pop cli lea daa dec add into xor pop xchg push ja pusha or mov cmc or xchg stos cmp jmp jmp add sbbb aaa les xchg je dec aam xor or int mov add loope (bad) adc mov xor mov cwtl jae das xlat sbb imul add fchs cwtl inc mov pop mov push outsl clc xchg inc sbb add push xor or cwtl mov push andl mov ret movsb or fadd scas add stc pusha dec xchg dec cwtl js call cmp popa xor jmp mov or push cltd test ja cmp mov sub data16 les adc shr add addr16 js xor and fstl xlat (bad) clc inc pushf jmp sbb fisttp push js add xlat in xchg jbe push loop push outsl mov dec in pop xor push call push and and mov add clc cmp test push adc xor mov inc or pusha mov out cltd mov sbb push mov (bad) lock icebp popf dec pop jmp sbb ss sbb mov or ret sbb or mov cmp add pop into or mov push and fiadd add dec jge xor dec aas nop (bad) add mov mov roll fadds js call sbb nop sti pusha xor rorl je enter outsb outsb xor jno js icebp sbb popf pushw pop mov xchg aad add mov adc inc sbb xor or push mov adc xor lea jo add push inc or pushfw inc xchg cs mov or add mov push and je adc inc loop add dec add in sbb dec xor sbb (bad) leave add pop pushf mov js insb add push out add adc add adc mov hlt sub dec fsts ja je aaa or add scas adc add cmc (bad) cmp sub (bad) lret scas xchg push push in xor outsl inc mov pop clc push adc loop or (bad) push cmc adc and fbld push mov out pop cmp lcall push (bad) int pusha dec leave push add mov rcrb cmp sarl in outsl clc sbb push lret pop sub cwtl push push (bad) loop or mov inc push push inc lret ss mov loop jmp adc (bad) mov arpl push adc jns (bad) mov and inc xchg fidivr enter insl (bad) dec xchg in or popl loope imul orb mov jmp add (bad) ja insb mov fimul rolb inc mov ss inc js add movsb adc lea push pop jnp push movsl testl push mov mov pusha outsb inc pop (bad) mov ja pop movsb and inc int3 add lods loopne divl lret xor sar icebp out add mov add push hlt insl sti mov std or or mov mov test test mov mov sub mov dec inc add push xorl andb lods jge jg mov lahf dec cmpsb cwtl xchg add test lahf imul std insb xor mov sub pusha mov or and and or aam sub dec fisubr jae jle nop (bad) or jecxz hlt dec adc jl pusha dec in int3 push aaa xchg add cs push adc add test and cmp (bad) pop mov nop add int push cmpl jp (bad) mov stc mov dec xchg jl xchg push in and lahf pop pop and insl nop cwtl lods test pop xor fildll add cmp pusha adc movsb movsb fmull push mov add add or fwait (bad) cmp dec push or adc push push jbe fldl push jg je mov push jl inc inc and loope aad or ja inc bound inc cmp adc adc sbb sub scas sti xchg cld push adc mov les imul (bad) lret dec js adc pop nop mov lds mov movsb xor sahf push rcr repnz mov mov lret jbe xor adc push add sbb mov mov mov ret inc or cmp das add cmp loop cmp or push imul data16 mov jo ret push movb xchg (bad) aaa idiv ret cmp sub adc jns cmpsb (bad) les pop jbe bound push into jmp adc jo sahf mov es push sbb inc hlt add fidiv cmp add test insb push stos test popa dec xor fwait ja add es sub add lret insl push popl rorb int mov cmp adc add mov sbb insl mov clc push jae add inc stos out je mov adc cmp add call insb add push mov mov mov testb jmp push in popf or push mov fstpl loop in add mov andl clc aad aam icebp xor add ja test fnstsw cmp rolb repz imul loopne add mov add repz or mov jp push inc sbbl add (bad) jecxz faddl jae mov pusha and in lds lcall in pop fwait or scas jo (bad) shl cmp mov dec xchg scas rcl fsub inc jae add add add leave adcl mov inc insb fstpl add cmp inc inc movsb test fiadd mov mov mov sub subb jecxz inc inc add mov fidivrl xchg mov mov sub dec sub pop adc jecxz ljmp mov fcmovb push data16 pop lcall out ret ja mov push add sbb shrl test (bad) add fdivr int3 add mov add jmp fwait jne add js addr16 xchg adc cmp or jmp mov cmp (bad) sbb cs jo (bad) imul addr16 stc dec inc mov loop pop clc add mov or rorb test lods push sbbb cld pop jp or enter or lcall and add nop and out mov push icebp sub and inc sbb out pop jnp push add mov mov loopne pop test cs popf imul lahf push mov mov xchg cmp fstpl int3 popf ds rcrb cmp fwait add cmp dec loopne adc sbb push xchg mov add xchg xor add push sahf and imul jne mov js add xor jbe inc sbb lock add mov push data16 xchg sbb cmp xor mov adc popf cmp loope sub add outsl inc int3 fstl mov sbb lods mov inc and add mov inc out xor xchg pop cmp mov mov or add push inc mov mov mov push mov pusha dec push add into and int3 das add sbb add or out not movsb scas mov dec add mov imul xchg jbe in cmp cwtl xchg outsl daa jo dec or add mov sbb mov sbb aad (bad) mov call cwtl lahf push push mov lods (bad) mov xor cwtl add mov pop sbb fcoml nop add fisubl jg or inc das rcrb sbb ss jecxz xor loopne lds adc push mov sub and fs and add lret ss add or mov jo test push (bad) fmul inc dec hlt (bad) adc or lock shlb push sti mov mov js add add push adc push jno in das add insl roll pop out in loope inc push pop movsb (bad) push mov mov inc and cwtl mov mov pop cmp fwait ja xor xor add inc push pop adc imul dec dec and into lock leave dec xor sbb dec or mov jbe and lods loop stos fisub das inc jo fs and dec xor xchg add inc mov rolb inc xor sub aam repz sbb lcall xchg test pop lret (bad) sbb lods dec out push dec nop movsb xlat lret jae in and or mov xchg (bad) pop jo fisttpll adcl xor (bad) and pop (bad) jg imull add or (bad) loope cmpb sbb repz add inc mov or (bad) ja insb add jns lret jl inc adc mov inc mov sar push add sub aaa data16 dec enter push lret aad add int3 xchg out sub arpl in lcall jl add jecxz fcmovu loopne or fdivrs adc sub pushf (bad) jns fdivs imul add and push and and scas cltd clc or sub pop inc ja mov dec sahf out xchg sub dec (bad) mov mov cltd sbb insb and sub cmpsl mov mov sub jl sub stc fcomps add xlat push data16 jo dec sub add push xchg or xor adc xlat cmp scas add (bad) hlt cmp call xchg adc imul push pop sbb cmpsb int3 xchg jo testl add ficompl sar call xor cmp (bad) mov sbb mov add or sti xchg mov jb js adc (bad) (bad) testb xchg fdivl inc out xor mov or popf shrb cwtl cld add inc mov sub pop mov fmull pusha pushf xchg (bad) or shll cmp nop pop add sarb xor imul cwtl push hlt pop lret and add or rcl add bound loopne adc add push lock add stos jbe lahf sti push mov lds fldl mov inc add jl fisttpl push dec xchg popf pop push (bad) jmp ss nop inc adc or (bad) out add ja mov xor lret pop dec movsb add mov dec fs (bad) divl jbe sbb mov adc cmp xor icebp mov mov in and (bad) movsl les push jo xor std xchg pop int3 scas fiadd xor add loop mov int3 nop sarb or ss nop sbb dec popf cmp test jecxz mov movsl into loopne xchg or add dec and call je sar mov fdivrp add push rcl dec aas int sub mov das arpl jae insl pop aad jo sbbl into or and push ja repnz ss in imul mov test cmp push pushf rcl dec mov dec add xchg test int insl push gs bound enter lods inc in adc cmp cwtl pop (bad) (bad) lret push adc pop (bad) int3 sub inc add cmpsb push mov jl inc xchg ja (bad) jb or pushf lock sbbl and int3 imul mov andb je daa inc in or mov add push xchg test xchg push nop mov xchg add pop adc adc pushf xchg fildl lds in xor xor pop gs add cwtl dec insl pop imul add xchg mov pop into jae inc inc push xchg add mov add sub inc pusha or aas jo dec jp jo lcall lock jbe adc sub cmpl cmp dec push xchg test arpl (bad) lods mov adc cmp cmp lret test adc sbb add in adc and in xchg and xchg mov pop push outsl test and das lock push aaa xchg cwtl push loopne and and push dec push (bad) jbe adc lret cmp sub mov lds mov pusha inc popa aam cmp cmp pushf notl fiadd test dec cmc in jb sub xor adc add cmp (bad) std add (bad) lock pop (bad) clc inc pop adc add dec repz (bad) push or shrb push inc repnz ficomp mov add cltd inc popa xor mov dec iret ss test push mov jnp push call add add rcll enter cltd xchg neg test faddl mov add mov mov pop repz adc push mov in sbb adc add out xchg lahf into add bnd push subb sub sbb popf cld js fsubs negb gs mov push sub lahf testl addb inc add imul inc add pop xor cmc add and mov push clc push call das sbb insb (bad) cmpl ljmp ja adc xor and aaa lret push sar lcall fistpll loopne hlt add xchg add sub cwtl (bad) dec jb nop pusha add mov scas ror and test mov mov loop nop fildl sahf xchg cltd add movsb and sbb or or adc inc xlat std mov ret dec fmull sbb imull fbstp jl dec or pop test lret jae test push aam pop mov inc cmp (bad) xor pop and invd and sub adc mov dec sub inc inc int je je out and inc mov pop cmp xor lret repz xchg mov mov or test sbb subb adc mov clc imul jge loopne mov pusha test jg or add lds adc mov xor ret add popa add mov cmp or mov mov ss inc lcall pop xchg mov lea es bound mov adc insb call stos shrb fmuls inc vmovapd mov aas (bad) popf fsts or cmp sbb les test pop mov mov out mov lret sbb pop inc mov mov das jg push stos add out addb inc insl mov inc add out push fmull aam shr push insl sub js jge dec call (bad) ss loopne and sub (bad) push nop or push sarl stc pushf inc lock in mov dec push add or cs popa mov sub push mov add xor insb and cmp inc iret push push icebp lods pop test and stos test mov xlat xchg in mov mov pushf pop pushf mov test ljmp add mov es mov movb test and jae fist aad mov or repnz xor push xor and mov xchg pusha movl das callw xchg (bad) movsb inc je lods xchg jg lods adc inc mov mov lds jb rolb add add dec test (bad) fmulp pop mov and fs jo xor add inc xchg rclb shll int3 sahf push bound inc mov pop aad jmp sub adc lret (bad) movsb mov and dec add xchg (bad) mov lea adcb push (bad) xor decl lret xor mov popa jge add push pop rorl or in loopne (bad) fnsave out cmp aad sbb popa xor stos movsl repz dec push add icebp (bad) ljmp (bad) or out mov nop add (bad) outsb (bad) mov lea inc jmp sub pop dec jl or jb inc cwtl or push loopne shr andb je or out xlat or enter shrb xchg add (bad) mov inc lock hlt cwtl adc icebp inc fadds jg or lahf rorb add lea test daa lret sub fdivs into shrl adc inc push scas lret icebp jne pushf mov add cli mov imul inc jl ret flds inc push mov and or sbb jno or mov push ret (bad) repnz cwtl add lret cmp mov out add stos lods sbb pop add push and test add pop mov daa aas aas adc inc inc loopne xchg jb push lcall adc loop and test aam and fmuls scas push cli insb pop push xor xor mov dec outsb pop insl mov add mov das (bad) insb sbb mov dec jl mov lds loope or in mov and jns push cmp and aaa xor loop (bad) sahf dec xchg sarl sub pusha xchg xchg pop pop lods fstpl adc adc add (bad) addr16 mov fcoms mov or (bad) lock mov mov int3 push push cmp (bad) lea mov and repz popl addr16 mov mov cmpsb sbb lret xchg push dec mov dec or sub int3 and add pop mov andb xor jmp scas es rcrl cmp test xor mov mov jmp loope popa cwtl sub aad cmp sahf cmp sub mov gs push hlt icebp adc les adc sbb pushf cmp jecxz,pn mov or call mov fs adcl xor adc popa mov jecxz dec inc test cmp popa das mov js mov loopne xchg fsubl add xchg aam andps les xchg rolb cli mov jne mov std mov push pop or fadds pop fldcw pusha xor push xchg (bad) add jecxz repnz std sbb adc jp add lahf ljmp cmp in jg fcoml sbb push pop mov jmp or jae (bad) mov pop or jne xchg pop and mov inc dec mov dec incl cs inc dec sub enter (bad) loop xor in enter sbb mov and mov loop (bad) pusha pop mov adc test xchg movsl lock ja xorb icebp sbb lahf lcall insb les bound mov popa fist mov push outsl dec nop loopne aaa into push or icebp xor add (bad) xor je popa adc fcoml xchg sub add pop ss push mov inc or mov ljmp mov push nop xor rcll ss int add push hlt sahf cmp and xchg out (bad) fidivl nop (bad) and aad mov aas shll mov fs xchg lahf push xor push add push pop sub jbe cld sub mov xchg lahf loopne stc (bad) jns cmpsb jo xchg and lods adc xor rorb mov sbb enter push nop adc pop jge test repz cmp push inc rorb sbb lods lahf mov xchg stos cmp (bad) js xchg or sbb cld dec inc adc pop pop xchg hlt xlat cs push movsb or cs mov add or rcl mov push loope das sub stc sbb sub shrl inc aam repnz jle jmp ret push loop aam add in or out test mov sub call sti clc pop repz xor mov fs sbb fs dec mov and mov inc lahf add ret test xor jae (bad) jl in adc insb inc mov xchg mov pop add cmpsl inc int3 and mov push inc mov loop cmp out les inc int rcrb cmp dec adc lods mov fstl test mov inc cmpsl popf ja pushf xor cmpsb jmp mov popa xlat xchg fidivl lock xchg and mov (bad) or lret dec dec push (bad) movsb movsl pop loop dec add xchg loop push pop sarl push call push jne fcoml lahf push or mov or sarb pop dec fsubs pop cmp pop aaa addr16 hlt xchg sbb inc int3 rcr xor fwait add into adc add inc lret data16 dec dec popa enter cmp out dec add cltd dec jge pop push add lds lret sbbl insl inc jno test (bad) enter sahf inc push pop pop add sbb lds imul add rorl cwtl sti pop in ds add inc and sub (bad) out cmp loopne pop mov ja add push mov daa push adcl lock bound adcl bound fistpll mov pop subb mov arpl movsb daa sbb and fmuls fistpll mov push enter and nop or imul aam addr16 jl sbb mov cld in les test jge sbb and mov adc cmc outsb push or das into in jne loopne loopne ret loope pop dec test repnz cmp jp or sbb xor lock pop stos daa jns push rclb out inc add call std xor sti adc scas mov xchg fsubrs push jmp lock mov lock cmp int3 jmpw push adc pop popf in testl adcl insb repz (bad) xor and cwtl imul loope dec mov les push and fildl dec xchg out lahf gs or push test int3 addr16 mov and add xchg movsb push outsb mov in cltd ret mov ja dec (bad) jle add or or imul add loope aam inc sub and push jle add cmp adcl mov sbb mov jne cwtl lods mov mov addr16 cmp jmp hlt mov fs mov pop orb sub int3 clc pop sarb mov sub js dec sbb mov dec mov add pop and nop cmp fcoms mov mov mov mov shrb cmpsl imull push je adc adc sub dec das test pop add xchg pop gs clc insl pop ret inc mov lahf sbb call fwait xchg sbb aam or scas inc sbb nop movsl jl sbb pop inc inc sti sbb std js in and out jae mov mov lret testb jecxz fs fwait mov pop mov nop fadds (bad) stc int3 mov xchg pop adc adc bound pop notl sti inc push pop pusha mov cld add inc int3 enter lods (bad) lock lea ljmp or (bad) fs dec dec push popf and and inc test mov jne push dec mov nop jbe sbb push mov icebp ds mov dec add xchg push add in dec rolb mov popf call in sahf fnstenv or out in add fmuls (bad) and cwtl add mov jbe dec push into test test in adc bound daa cltd cld jb pop dec adc jmp test push js dec mov sub push imul popa mov out or cwtl call add add nop push or and mov pop push and jbe mov rcrl mov adc cmp inc push pop popa xchg cwtl push das arpl fstps adc jne pop xchg imul push loopne aam call or in inc fsubs push sahf mov fs pop ret add stc xor data16 jo add fstps mov lret roll sti inc mov sub jg aam test mov dec in jo test rcrl test enter addb mov das lret fisubl fmuls push xchg int3 test pop pop or add out adcl mov orb lea add mov (bad) xor sbb xchg xchg dec cmp push cmp cmc push mov inc inc scas pop ja add ret xchg jns dec lret pop call mov inc insb sbb add xchg (bad) mov stos mov push dec jne dec or js jl pusha loopne sti cwtl cmp test js call (bad) sahf addb xchg scas xor repnz xor lds je xchg fldlg2 fwait or sahf xor daa mov add ret xchg mov stc outsl dec in (bad) icebp subb adc cmp add pop xor xchg xchg les mov (bad) out mov dec jecxz add shll add add bound sub dec sahf rorb sbb sbb inc lcall adc (bad) in sahf inc xchg scas sarl loopne add (bad) add aam xchg add and addl mov sbb sbb lahf (bad) push ret ja lods pushf xor mov push and cmp or sbb jecxz fmuls pop cmpsb lock adc sahf xchg in nop xchg (bad) sbb sarl lret popf repz and pop in out add inc mov mov sarb out scas rolb test adc out mov in add jno stos iret cmp add jo jo js daa stos mov or ljmp add inc jo mov pop call mov das test mov xchg cmp inc xchg cltd mov mov repnz frstor or stos lods lret dec or mov enter xor in push sti sbb pop cld xchg rorl out mov mov lock jle fcompl and pop aad lcall outsb fsubrs dec test das mov and mov loopne js (bad) cmp jbe pop pop sub mov or sub iret push jge add add (bad) fcoml dec push dec adc add push sahf lea cli add nop insb in add mov pop mov popf js inc sbb in xchg cmp movsb xchg adc pop add dec cmp inc dec test adc dec pusha push shrb cmp pop fs sub std xchg add xor add mov pop cmp adc push daa xor dec clc and xchg ret mov lock stc xchg pop inc test push (bad) adc fimul push dec addb sbb push hlt jo add adc jnp push lods scas mov ss rolb imul push adc cld add lcall andl jp jo lock and push rclb inc mov or (bad) lahf pop addl aam rcrb icebp add pop loop jbe in rorl sub and das inc add fwait and push lock push xor fdivrl jge pop xor add dec lds cld or jp fmull std rcrb jbe psubd sub and ss adc inc inc nop lret leave lods test cld mov nop lock fsub jl (bad) dec mulb inc imul xchg aam pushf outsb pusha in mov push xchg push add je dec dec adcb pop push pushf sahf rcll lds xorb inc mov adc mov dec loope sub (bad) rcll jbe dec cmpsb xor jno cmc mov lahf add cmp pushf push xchg adc lret inc add sub xorl sbb xor addl mov enter push bound ja sbb scas dec aam add xchg notl pusha rolb bound pushf stos cld xor push pop fs xchg mov das jg add jmp js sub std (bad) sub loope sbb inc cmp shlb cmp push nop cwtl mov push adc in test xlat add push dec mov add repnz sbbl jg cmp or jp add (bad) ljmp add sub shr jl cmp push xor inc add lahf mov cmp test xchg push pop push call dec ret aaa xchg mov push sbb xchg mov xchg pushw xor in add pusha add psllq xchg pusha sti or add sub daa dec aas int3 push sbb ja xor push xchg sub pop aad nop aam xchg cmpsl mov adc add lea clc jp fcmovnu xor mov loopne fcmovbe aam shlb test push and divl jo mov add lahf xchg sbb outsb xor xchg ds xor sbb pusha push pushf cmp lcall jae bnd xchg xor fist cld les pushf jl das stc mov mov push test lret out js (bad) xor je add in add pusha sub push lods cmp cwtl ja popf mov xor mov pushf and mov mov pusha adc cmp mov test rorb pop or xchg rcll add push dec xor fldt jmp aaa addr16 xchg popl push pusha jbe push mov icebp adc int3 mov or pop ljmp xor cld in inc mov pop out push jle outsb add iret push or inc or mov cmp clc pop enter mov inc mov fistl push shr xlat or fwait ja jmp outsl rcl jo mov aam adc test or sub mov mov mov ja adc adc fsubrs in add jo imul xlat xchg lcall int3 jecxz dec mov cmp xor lods pushf repz and add add xor rcl fimul pop je or addr16 icebp adc inc or dec sbb test les sbb sub lcall jg xchg mov and fidiv lret jae mov and dec hlt leave test add in dec mov pushf ja and icebp jne or cwtl inc je pop sub inc sub pop (bad) loop add aad call add stos faddl xor aaa pop in aam add scas and mov nop xor lahf xchg test push push out dec push or or jle call fs inc add cmpsb aaa imul shll jnp nop adc push or lods adc mov jl mov adc pop icebp orl push cmp lods fimul mov nop jp add sti mov pop and (bad) jno adc pop outsb xor sub add or and push pop dec imul hlt add cmp (bad) push and push push or xor add push inc sub addb mov push stc je ret ficom nop dec mov (bad) subb inc mov jbe jmp (bad) pop popf fstps and cmp pop stc pop sbbb setle inc add js cmp int3 or jmp mov ljmp out inc mov add pushf loopne pop adc testl lods push inc add xchg push push add inc fidiv cli mov adc lahf or push insb pop or dec dec dec xor js scas pusha add xchg in or xchg in loopne mov inc adc lahf rcr aas movsb addr16 jl or rorl mov sbbl mov ret push adc mov inc or stc adc lcall jmp loopne addr16 push push adc pop and pop iret xchg fidivr xor jne inc lret sub sub mov mov and add push inc mov add repz pop mov loopne cld test pop mov notl mov js add sub fidiv add pop jg and push into cs xor test dec jmp lods clc rorl add inc jmp add dec fiadd int sahf idivl xor xchg out push push aam lock test test pop mov and adc push dec int pusha and mov fisubr mov sbb je andb adc mov dec mov add add lods xor ret adc mov inc or lea call out xor add mov lods je sbb pop pop fcoms xor std mov mov add xchg ljmp das add pop dec push loope loop mov out shrb adc lret mov push xchg push (bad) imul add jb in je rolb pop movsb lock pop scas adc push inc xchg dec flds push mov mov aas mov dec add call xchg cmp xchg movsb enter mov lock push mov mov inc in lahf jge fcoml js popf mov cmp cmp lret lods testl push outsb inc inc sub aad sub cwtl ret das lahf cmp call jp pop lret dec test mov sti out aaa mov xor add xchg outsl push sahf push mov xchg adcb ficomp movsl imul dec mov fmull lods mov pushf push pushf add imul sub orl rcll test push or fadds mov int pop mov dec adc lods inc rolb jne or push and cs ja enter shrl add rcll ja mulb add cmpl lock fmul aaa mov aas cmp add (bad) fidivl xchg (bad) mov add outsb mov js push imul mov pop push sti sbb mov dec sub xor enter shrl je imul push leave inc mov inc hlt jo mov iret push and push cld jbe mov lods imul pop lods hlt ret adc xor fnstcw int3 sub add dec dec mov movsl xchg ja je jge das shrb cmp dec or ja stos mov xorl push les cwtl push inc test mov lock fs fwait jmp rorb hlt xchg test test in jmp xor loope xchg cltd lea outsl cmpsl pop (bad) xchg mov mov inc test pop xchg mov pop clc loope test sti mov fdivr mov fadds pop dec insl jo daa push sub fist les cld insl punpckhdq repz add and aaa fisubr push call push jno and push testb jae add push push imul pusha mov pop addr16 int and arpl aad pop sub add jmp jo out add lret les or dec mov sub in daa (bad) fiadd leave mov jnp nop shrb mov add lock xchg adc sub lea xchg lods out dec leave cltd ret push fmuls gs test mov inc sbb xchg rclb inc xor pop xchg movsb adc add lock adc push xor push fildl sub das jl stc rorb mov sahf xchg pusha push dec inc push dec or outsb push push enter sub pusha jge mov sbb xchg in in add and aaa inc test leave lahf push mov inc push add inc mov in sahf das loope push jo (bad) mov faddl loope adc sahf fcomp ss adc or mov rclb fiaddl add cmpsb loope jns ja pop jae in test gs xor clc dec lock sbb js mov mov and rolb pop mov xor test or out mov les pushf add jp add xchg outsl add xchg insl sub adc sbb out dec hlt pop mov jecxz dec aad push fs add sbb sub pop add mov fdivr dec mov push mov test mov sahf sbb pop aaa mov sub jne dec mov shrb mov andb (bad) (bad) mov add push into in cli and mov xchg test xchg (bad) int3 jle or add adc nop or mov adc enter loop or pop xor adc rcr add mov (bad) jb nop cs jg mov xor lcall and lret bound fs and cmpsb mov add inc push pop inc into or sti inc sbb ret in sahf lock out hlt jl cmp aam call push add les sub and cs xchg imul (bad) jo lods and stc hlt (bad) fild repz int ret pop adc pushf mov sbb xchg mov daa pusha dec lahf in xchg adcb outsb add pushf sarl lret sbb pushf fmull add fwait insl and add jbe enter testb incl inc mov test cmpsl nop sub fild jecxz add loopne fadd mov scas mov (bad) scas sbb add or push xchg inc push mov gs insb ret jmp stc ja or sub add lcall mov les loope mov inc xchg adc int3 add adc inc mov into pusha sbb insb add sub mov div sbb imul test (bad) aam or push mov mov (bad) pop mov call add add nop pusha cmp lret pop ds js xchg add test and sub ds cmp xorb cmpsb pop aas outsb push add cli mov fsubs cwtl jg push les add dec lret xor clc mov pop ss out fisttpll sbb lret adc jp xor sbb push fist pop lcall arpl enter fildll xchg dec addr16 lock dec mov pop (bad) icebp aas adc and cmp pop and xor add fnop sarb jmp adc push or lahf sub loopne sbb cmp and xor shl aam flds mov inc test mov pop and insb dec insl add loopne push out sub xchg sub std or fsubrs stos pop nop in inc xor and jle mov xchg pop fiaddl lock aad cmp cwtl (bad) enter pop and add sbb sti fdivl adc in or popf mov (bad) subl fwait xor inc je jmp mov fbld add push push daa jecxz mov xor dec sub (bad) rorl pop cs xchg (bad) data16 dec mov stos dec int3 jmp test adc leave sti mov push push lea jg add arpl inc cmp jns add lahf cs jne cmp lret clc sahf (bad) mov inc mov pushf xchg add (bad) repnz negb push mov outsb or int and xor dec cmp (bad) xchg adc push cmp dec jno or insl (bad) sub scas lods loop add push mov test in xor call cmpsb add daa sahf pop push lahf inc nop or inc nop jne jle mov sbbb dec mov push push jecxz test sahf outsl push add inc int3 mov icebp mov jbe sub xor push add mov repz fcompl push sahf mov or add mov enter inc dec xchg adc notb adc inc push pushf inc inc pop stc lret lea xchg pop testl icebp cld or add fstl in mov cld rcrb mov pusha push and push fisttpl lahf mov dec les test inc sbbb ja or in call mov add jo inc add (bad) lock jo xchg test xor and push dec in jbe dec mov (bad) loopne lock jno sub bound push push sub push ret cld scas push ljmp fs not cs inc aas push rol xchg inc push cmp loopne add xor cmpsl sub dec push add ret jns jmp cmp aaa leave xchg les dec push fs and out lahf xchg outsb adc cmpsb mov add mov add pop push xchg idivl adc dec cmp icebp clc jl mov xor push mov test pop mov xchg jb add stos jno mov inc jae insl (bad) adc add xor jp sub jmp fisubrl (bad) push fstps shlb pop sub push out rclb mov add xchg cld add in out xor dec lds clc lret jge add mov das and jmp rcrb insb jno pop or adc and add mov add and stos stc sub mov daa pop stc rclb inc fmull xchg or xor pop lcall mov adc sub jnp and pop adc dec dec fild mov cmp cwtl jns sahf push inc lock dec mov jl sub jbe jmp mov inc data16 lods inc sub sub lds int mov aaa add (bad) (bad) fidivl imul xor loopne loopne push jbe push lcall nop movsl rclb jne push jmp jmp mov pushf ficomp sbbl ljmp push xchg adc xor or fisttp cmpb popa in out addb add and testb mov (bad) hlt jnp add repnz negl mov dec orb or jl jb add mov ret mov outsb adc adc jp mov cmp lahf add aas lret outsl int push inc call (bad) mov adc sub adc gs popa fwait inc loope loop pop pop cmpsb sub mov mov add pop adc lret mov adc hlt pop xchg jl add repz pushf cli push mov add push push andl gs lret cs stc fisubr mov mov orb push lret cwtl fistpl push lret cld add std and daa inc lods push push pop stos lret loope addr16 inc (bad) and and lret out fiadd xor (bad) mov cmp adc and out lret xchg test jl ucomiss xchg mov mov push add add out lcall call packuswb clc jecxz add xor cmp enter cmp push add sbb xchg mov cmp inc or lds js mov dec add inc in xchg addr16 nop or scas loope mov adc int3 mov push movsb jne push adc ds sti pusha jmp idivl sub add test mov cmp rcrl dec mov sbb jbe dec cmp sub and or insl aam jno jl mov es and add xor xchg mov push hlt push popa pop mov add xchg dec aam pop add push ret sub inc in jne add nop das cli test lods outsl mov sbb xor add xchg mov inc mov gs xlat sti lcall mov popa movsb adc lods stc mov add push popf popa roll push je and jl std mov inc lret add jno xchg add sar mov add add popf jecxz clc mov lock je pop jo mov mov nop mov sub mov ret or pop mov stos jmp fdivl pushf or enter push pusha movaps and (bad) dec mov jbe add xchg xchg xor ss hlt mov clc add andb lret inc add cmp mov popa sbb push inc call outsl jl xor movl loop or adc adc push jo mov scas hlt imul pop out nop inc jp orps rolb adc add (bad) nop pop adc jmp adc into fwait je push xchg dec jl jae hlt ret and cmc dec or icebp fcoms clc sahf mov cwtl dec ja add pusha xor jnp loopne fs xchg in push fnstsw imul mov ljmp loope mov aas adc inc addl mov mov inc ljmp fs rolb inc xchg lahf inc or add sbb add push cmpsl bound xor dec insb mov and addb flds into inc mov fisttp and push xchg or xchg fiadd sbb sub leave aam stos xchg mov mov xchg faddl in nop sub xor inc jo lret aam xor add xor loopne mov lock mov test xchg add dec pusha sbb popf aad xor push es (bad) mov sbb fxch out mov add (bad) jne push sbb pop adc insb adc fwait jbe xor and adc or add fimul add and push sbbl add jb inc mov sub lods mov enter mov jo (bad) fwait add loop out or insb lock aaa cwtl sbb loopne fstpl pusha test adc inc je insl aas mov add sub cmpsb dec add dec repz fisttp loop push mov and inc sahf push mov stos xor rolb adc push shrb cmp in mov add mov jbe add pop jne movsl (bad) lahf or shlb mov loop das dec bound add jmp fcoml add inc loope test xchg mov jne negb mov ja inc and dec js dec push fcoml cmc cmp and and add movsb adc or mov pusha and pop insb insb sub pusha push lcall xchg adcb or add movsl push lock clc add mov or inc in add push test lea jecxz xor xchg sahf mov rol dec or jae cmp pop push nop adc (bad) mov pop mov add pop cmc sbb fs xchg pop xchg hlt jns push mov dec jecxz into add outsl movsb xor mov (bad) (bad) pusha push jbe add xchg cmc adc mov jo pushf add es les and fmul mov dec add sbb add cmpsb push push out mov loopne pop jle nop cmp and push push mov inc fstl add loopne cmp inc aam mov std fimul test loopne mov jae negb jg xchg fldl add imul add jbe mov pop gs or lret test xchg imul xor mov je lea dec jns aam popf fisttpll add ret call es rcrb dec add jmp cmp (bad) lock inc or stos adc push jae dec or test add xchg or cwtl incb sahf xor movsb test je add push sbb push sbb cmp sub mov pop inc adc nop call xchg jbe pop sbb xchg adc outsb inc inc jno movsb je pop and or int lods data16 add push std rolb mov mov dec das mov popf rcrb mov sub xlat inc das fistl fldl2e mov add in dec add pusha insb fnstcw lods nop fild xor mov sub or ret xor or mov mov fcoml sub (bad) rclb popa sbb (bad) scas mov pop les faddl and push jl ret mov inc mov inc fs add add dec add subl pushf push in xor ror cmpsl inc add jg imulb xchg xchg mov rorb mov xor (bad) mov sub in fdivl je cmp pop in les mov cmpsb clc andb add sti sub jne cmpsb or cmpsl or mov pop test cwtl outsb mov add gs mov mov popf fwait mov int mov push add pusha cmp es popa test hlt add rclb or dec fild mov mov daa mov (bad) hlt add sahf cmp lret cmc jo fsubl lods mov stc mov mov nop fidivrl scas test sub cmp inc das inc add add (bad) mov inc dec test pop sub add mov mov (bad) mov popa and loope sbb cmp call sbb int xchg or and fsubs sbb push cmp (bad) fmuls mov xchg mov insb cwtl imul and lock loop dec mov pusha imul jecxz fisttp push jne sbb and dec mov add sahf mov xchg add pop adcb sbb mov lods jb sbb stos pop mov dec jle add add in roll popf loopne lcall insb and clc pop adc xlat cltd cmp adc rclb outsb (bad) dec pop or lods fistp adcb mov jns mov xchg cmp xchg jbe test mov pushf dec cli in pop js std sahf dec fisttpl sbb aam fs xchg xorl inc test add pusha neg fbstp cli add jl je aam mov push arpl ja (bad) rep sub les lock xchg push fdivrs clc add and cli imul dec loope,pn mov mov jl add jnp sarb adc loope xchg mov or cmc clc nop or into fidivr (bad) xor push (bad) push je mov (bad) cwtl test adc mov ret push xchg pop fiaddl (bad) jl cmpsb xor fdivs xor push cmc ret jnp add fwait (bad) dec shl test lods mov push xor and pop mov dec mov bound outsl out xchg aam pusha (bad) js xor cld mov adc cmp call xor pop add mov jecxz clc add or sbb out add mov inc mov (bad) mov addb push stos test mov or or stos xchg orl jbe lret addb mov arpl fistp repnz loope orb mov cmp ja or test bound adc call sbb cmpsb xchg mov and cmc or arpl test add mov ret sub mov inc add data16 flds je (bad) icebp bound adc in xlat push cmp add push xchg int pop insl pop jno and int3 sysret xchg mov out cmpsl test adc xchg pop jnp sub xor js dec pop inc lods add cmpb add sarb std test sbb les mov push cs ds or sbb stos and (bad) pop or loope loop and and stos and rorl and xchg pop mov dec add (bad) pop lods pop subb test mov cmpl dec cmpl inc cmp add jp stos inc xchg jno cwtl (bad) call adc rcrb cmp pop cld sbb push insl lcall or cmp add shrl rcrl jnp add jecxz movsb add rorb fcoms xchg mov cmp fdivrl jecxz incb cmpsb xor adc add mov call (bad) ss dec clc jo push jmp adc xor inc clc and lods add (bad) leave cld pop inc je test push loop insl stos sub and mov and and and faddl loop mov arpl jno dec lods or cld (bad) jg inc test mov sbb push lahf and push sti jnp sbb xchg es lea popf pusha and push loopne mov xor pop (bad) cwtl xor cmp add adc das mov pop mov pusha (bad) repnz out test lods jecxz pop push xor pop adc pop in cld push xchg fadds mov pop pusha cli cmp loope imul add mov lret push or bnd clc ja psubsw mov iret xchg push (bad) scas (bad) mov or in orb add xchg sub sub pop xchg dec add xchg pop pop jnp cmp fsubl mov push dec (bad) ffreep inc jecxz ja pop mov insl fsubrl add fnsave (bad) and and add pop imull mov adcb or fsubrl test addl verr pop test imul loope xor xor pop je xchg adc inc lods push imul adc add (bad) jmp rclb hlt or pop push xchg and ret dec xchg cwtl pop cltd push pop clc loope add arpl in fwait les or pop loop xor sub int3 dec ljmp xchg fcompl mov xchg add dec mov cwtl xor and add in jb mov pop fiadd mov xchg mov loopne mov lret pop cmp pop adc loopne push ret mov and (bad) xor pop test mov loop pop add xchg out insb popl lods mov pop jno inc rorb mov or cmpsl jb and das hlt addr16 test dec pop mov lods add xchg add dec mov push mov sarb jns rcl scas xchg xor add lods dec les jo test fnop fildl rorb adcl jo mov or mov loope scas push xchg and push push jmp bound inc dec and pop test cwtl test mov dec and sub lcall add pop lret out lds je sbb jecxz gs lods mov out mov add add aam jp mov das inc push pop mov lods adc iret lods test xchg xor cmpsb mov mov xchg sarl add call mov sub adc sarb pusha sarl mov test inc or inc or movl les imul hlt call js fiadd add sub int3 mov cld dec mov jo and add and sbb std dec icebp mov add push ljmp enter sub xor pop fsubs insb xchg xor loop test inc cld or mov adc decb or dec xchg dec sbb cmp add xor push pop dec push push dec add movb loopne mov add and xchg sbb sub in pop out sbb orl insl xor arpl or inc stos mov sub sbb mov xor jge mov imul in jae arpl fisttpl sbb xor iret or fmuls and cmp or movsb adc ds sbb or les test sub push mov fistpl add add outsb cltd mov imul pop dec arpl adc cmc sbb jno cmp clc or sub xor mov or js add sbb xor sub sbb leave cmp or jbe push arpl dec popa adc sbb xchg (bad) orb sub xor mov sbb pushf and xor inc or add jmp or pop popf pop sbbb push cmpsb insb and jge stc or in xor dec or add mov fbld and stc sub lds loope mov cmp dec test add cmpl or xor ficoml xor dec sbb pop mov in ljmp subl xor sbb sub adc sbb aam pop out cmp add or or in push outsl sub and add in rcl pop adc xor xor out daa dec add xend and xchg pop or or int3 add addb add dec push aam sub roll xor lock xor dec or add stos add add call push mov inc fimull subb subb or or jns icebp sbb ljmp loopne push mov clc out aas mov add fistpll dec roll push mov pop add pop stc cltd push mov push (bad) xor push push pop not dec les leave fisttpl pop out jg push in cmp adc pop mov push push push mov ja jmp imul add icebp mov fdivl push loopne sub pop or mov sbb push jo pop push imulb lret pop xor pop mov pop xchg sub push fcomi stos clc loop mov loopne add ljmp ret or pop sbb pop or mov aaa mov sbb add or imul pop shl push neg push mov jle jmp jp push out push punpckhbw fwait push sarl pusha ret xchg sbb lret cs js cld loope inc jnp push cmp mov loopne push lahf cmpsb add sub cld ret adc mov adc mov lret xor xchg mov outsl es lds xor push pop rclb cmp xor fisttpl push lock addr16 xor jo dec push and push pop mov xchg mov (bad) mov sbb push add neg nop or arpl subl js imul mov enter leave pop xor pushl pop (bad) xchg pop sub push mov cmc out jmp pop push lods lods and adc mov mov dec sbbl push fild and inc lahf int popf and and iret push add out rol xchg xor push out and popa cmc cmp bound sub pop mov dec xor pop jl insl xor mov jecxz xor enter and push bound adc inc mov sbb ret sbb mov push addl mov adc orl and and pop fist adc or pop push adc and push jg push pushf es jge and sub sub (bad) pop mov es out inc inc adc xchg and mov push nop xor xchg push std and ret popl and and and test xchg (bad) pop push mov addl ljmp nop push sub mov or push pop pop orb xchg popa shr mov inc adc or xchg inc das test inc dec dec cwtl ret xor add fdivl cmp lret ljmp rcrb jns xor push jbe (bad) shl jecxz mov or pop add sub cmp sbb adc push inc mov xor stc add icebp adc jno,pn clc dec insl dec and push mov add mov push jmp into sub pop stos pop pop (bad) inc dec mov mov cmp aaa dec pop or lds add and cmp in pop fucomp push fsts jp mov push ss adc dec sub sub adc xchg pop add dec mov cltd or mov mov or push add mov jmp push mov aaa pop dec (bad) je bound inc or pop out add or sub sub and adc rorb pop or sub xor pop adc fstpl rcl pusha inc aam es repz cmpb xor pop add (bad) inc test adc lock jae xor inc push vshufps or loopne out jnp movaps or adc mov add inc mov cmp sbb int push scas sbbl pop ss int mov in stos and and sub stos or push mov xor repnz pop sbb test icebp add dec insl cmp cmpsb dec or pop sub sub roll add xor stc add xor mov fcmovb out push lock jb (bad) rdmsr cmp pop cmpsb add xor ljmp aaa in cmpl inc xchg neg fisttpl and aaa or dec jne xor add xor (bad) ffree xlat cmp mov clc ficompl mov adc inc into push mov jg add sub bound bound iret in pop push inc movsb daa push sti adc bound clc (bad) notb fldenv sub loop push mov or mov dec enter js in or sti mov sbb pop loope add jmp inc inc jne pop mov fstps iret xchg push xor adc sbb lcall and mov push mov xchg push push (bad) nop pushf or adc (bad) sbb pop fs (bad) push add push push mov mov inc mov aaa or addr16 out adc rclb (bad) jge or jbe (bad) sub jo jb and not inc and out xchg add jbe pop or inc jae inc or add (bad) and adc cli pop adc (bad) loope adc fidivl add insl lds sub push rorb push mov mov cmpsb sub adc enter add xor mov pop or insb xor mov dec push test sbb addr16 (bad) xor in int pop xor dec xchg push int3 xor add and (bad) scas cmp ficom or rol add sbb cmpsl cmp add inc adc cmp xchg or fnstenv int3 or push push and mov pop dec sahf mov pop push out and mov add roll cli int3 sbb subb (bad) inc or nop icebp outsb push jne sbb (bad) mov mov lret adcl shr mov and xchg pop mov mov push sub adc inc xor pop push pop loop sbb mov loop or lret xchg push sub adc push xor jmp push sbb mov add imul loopne mov dec add pop xor sub inc jecxz rol push inc mov mov repnz dec arpl push xchg icebp and push lret test (bad) fcmovbe adc pop add aam sbb pop push ficoml xchg pop inc enter mov fs shll cmovl mov xchg pop push repz push add addb add imul add es push pop aad repz add sub add sub js jbe xor (bad) pop push ficom shll sub xor mov int xor cmpsb or (bad) cmp (bad) cmpsb xchg je xchg mov mov xchg push add mov popa jne bound push dec add mov es pop dec cmc shrb addr16 nop out add add in add adc sbb loope jmp pop (bad) dec xchg push addl add xor pop roll add fmuls adc xchg inc sub sbb jmp mov cmp fadd lock mov je and cmp jmp clc repz aaa sub xchg scas add and fisttpl mov cltd jnp add icebp test add jecxz push fidivrl mov scas mov or and sbb scas ja xchg cmp int3 scas push ret push (bad) inc xor push mov dec pushf or cmp push cltd add shl mov fcmovne hlt xor mov out mov sub dec jno dec lret and notl mov add out and es adc dec addb in test test loop push inc sbb pop jnp adc mov xchg dec idivl je,pt les clc or jae pop aad orb add push lret mov xor pop push aad (bad) (bad) es jb cmpsl xor out dec shrb jp mov xlat inc call sbb or sbb pop adc rcrb cmpxchg aaa mov mov jmp lret jns and jp inc xor jmp out dec cmp in (bad) xor or pop lret and jg das pop xorb dec and pop addl jmp mov sub nop sbb inc vminpd jecxz (bad) mov inc or roll cwtl push add push imul inc push xchg nop jge sub push mov push pop xor out hlt cmp popf cli inc cmp xor pop mov mov sbb lods mov faddp int3 lret ret aad negl insb add gs test push mov insb pop xor daa xor fmuls xor call int3 adc and pop in (bad) push out fsqrt rcll adc sub jmp shr push notb xlat mov pusha sbb ret sti cmp jmp mov add mov xor iret mov pop jecxz push jle sbb jle sub add rorl push (bad) push sbb cld pop rorb or es add push nop jae cwtl add repnz inc sub adc (bad) icebp in sbb iret pusha adc sub xchg clc sub out add jmp cmpsl push pop or (bad) movb imul shl or push mov push or fadds push and pop sub adc inc adc imul jmp push add lock in adc pop pop popa popf ret divb cs mov fcomp push push or je add inc push fdivrs notb faddl mov pop mov add jmp add add mov add xchg push pop sub add sub inc out pop std adcl cmp aaa inc mov and lcall nop (bad) jno repz jo cmp add jmp sub jecxz lret lods cmp jg sbb jmp push mov enter push shr mov add xchg mov add jmp pmullw pop xchg xchg cmpsl or push push cmp add dec mov fidivr pop pop add nop movsb (bad) dec add dec add push icebp push into push push sahf jge pop and and not mov out pop pop xor movb mov neg cmpsl ret test pop sub faddl scas push jmp jno inc pusha in or push push mov in cmc pop push bsf sub jmp dec out inc repnz repz ficoml cwtl popa (bad) or rclb test ljmp (bad) popa imul and enter pop xor mov jle test inc cmp pusha dec dec add lock (bad) jo jae scas add cmp mov pop pop xor push loope adc or addr16 std jae dec sbbl add jmp shr xchg pop mov xchg or in push pop shufps enter das mov enter aaa lods mov adc and mov pop mov (bad) push enter in aas test jmp pop mov out push shl pusha mov or loopne and ret call dec add inc rcl or in pop dec or je dec cmp dec das or mov lock push mov xchg ret xor pop clc lcall shrl add xor jle jp mov lods std mov loopne orb and inc xchg fwait and cld pop adc not or daa cmp outsl dec push jp into add mov jmp mov dec xchg daa pop (bad) lds or mov jae jnp aaa jne dec mov movsl xchg mov sub add inc pop push mov and insl repnz cwtl pop and add cwtl pop adc and inc aas rcll iret or push pop jmp adc or out pusha movsl or sub sub movsb les sub lcall in dec cmpsb xor sbb sub pop inc mov cmc mov add sbb sub fdivrp fwait dec lret push out test inc mov push pop cmp mov or and mov mov flds mov (bad) repz jmp (bad) ret adc popf sbb add jmp test (bad) mov pop jbe bnd inc adc push xchg test add dec push or jmp mov cltd (bad) std mov mov scas adc dec add in iret jno xor je mov ret movsl mov sbb adc push add iret pop push cld pop data16 push roll jne and stos mov adc pop out or rcrb sub cmp ja movsb std mov int3 add cmp insl cmp scas shr add cmp pop out sub dec or adc sbb dec inc lret lds popf mov jmp pop xchg xchg aam out xchg pop sarb xor add pusha or inc cmc push mov sahf pushf dec out or inc popf dec add (bad) lahf dec xchg test rcrb cmp push sub jmp push (bad) dec push and aaa sbb or xor sahf sbb popf fscale (bad) mov sub pop pop push push (bad) cmp or les or into or sti test dec test andb add loop add inc ss fmuls lock xchg cltd int3 popa fnstenv bound aaa sbb je sbbb xchg sub jmp pop cmp int3 xor cmp lret fdiv and sub js (bad) dec pop pop inc sub std dec add cmpsl mov sub add fnstsw movsb mov or rolb sbb mov es scas mov mov pop pop sub xor add (bad) or jb js negb mov scas popf out std pop pop or shlb sbb pop add jmp aas xchg cmp mov inc fs inc xor add sbb push xchg sbb jmp pop cmc scas sbb inc push and out mov jmp mov rorl add xchg call lret ljmp push push mov or push xchg arpl cmpb mov jbe les mov decb and xchg mov adc cmpsb sbb aas pop rorl or push inc dec sahf cmpsb add mov mov mov add add push cmp leave and or sub sbb dec pop lret xor push or (bad) or dec loop ret fstl repnz clc sub cmp sub mov stc sub loope inc xor or sub lock xchg xchg xchg push xchg adc call cmpsb push sbb sahf mov add inc push xor cwtl sbb sub das loopne mov pop inc inc mov lock jns push add push push hlt mov ficomp mov jno popa sub pop jl lcall cmc jbe sub aam and mov or inc sub or adc lea adc and mov adc mov or les movsl push pop lret sub xchg sub jmp mov rcrb stos arpl shr cwtl mov jmp cmp pusha adc add add inc in inc pop lods pop nop les inc jmp push ret pop jnp or pop push dec lods inc adc dec xchg test add mov or repz das xor and dec iret add jmp fmulp out inc sub inc (bad) mov inc adc jbe cvttps2pi mov incl repnz int or xchg xchg mov add adc lock add les cmp aam jmp fsubrs pop xchg andb icebp push das sub mov mov push aas add adc pop fist (bad) enter inc pop jnp test add mov test jl jp pop jns subl mov jnp add mov push inc imul sub shl in (bad) (bad) ljmp dec xchg cmp je mov sub pop or pop and jmp xlat int3 fwait movsb orb nop push dec insl inc mov or cwtl mov xor adc pushf arpl decl and test xchg std add mov push mov xor call sldt gs sbb sub mov inc sub mov fsubl jle pop dec jb lahf and dec ljmp sbb push stos inc sbbb mov push jmp bound or sbb daa push add xor sbb sub mov mov mov fstpl pop xchg xor jns fadd xchg lods adc rcll sarl sbb pop push xor movzbl insb or (bad) lock inc cld xchg inc pop xchg dec or mov or push es loope dec or mov ds jno xor loopne fiadd pusha xor jns sbb add scas push cwtl pusha ds push (bad) and ficom xor push jg or push add idivl jmp sub stc add mov (bad) mov add or sbb and in add and bound or add in ret and pop add add cmc pop sub gs jb sti push inc xor repnz arpl dec (bad) hlt sbb add inc (bad) sar cltd hlt mov or imul xchg dec and pop cmp imul push sbb inc test jl pop in adc pusha jp inc adc add scas arpl jo pop into icebp shl rolb (bad) jns push jo popf pusha xor xchg mov or ret dec sub jmp outsb dec repnz nopl push fsts sbb call sub out addr16 testb insl not add and sbb xor add xor in ret or xlat xchg pop mov fstpl push stc add fsub push mov dec mov or sbb les mov mov out jnp jae mov sub sub add popa stc inc mov jnp sbb inc mov inc add scas idiv pusha sbb idivb (bad) arpl cmp test adc icebp push arpl cli pop sub leave push rcrl cmp test inc cli cmp dec and lods int3 dec pop cmp jnp sub adc or mov mov or stc cmpsl pop jo cmp jl add and xor rorb dec pop pusha xor or sub and add add xor and sbb xchg stos push sub mov xchg (bad) and mov sub aaa dec add xor or imul into scas stc test add adc js pop fstps popl lret movsb push aam in sahf movsl add div push push mov adc not in cmp push sbb daa scas push and pop sub or push ret adc inc mov xchg (bad) jae test lods pop add add push stos loop jbe in mov mov sub popf sub sub out cmp push loopne (bad) cmpsl (bad) (bad) aaa lock push mov inc or jecxz (bad) das cmp mov nop pop outsl jle xor inc jmp cmpsl aaa (bad) jb in push test xor aad and out sub xor int3 add push icebp fldenv mov into jo dec adc mov rcrb pushf testb xor push jmp and inc mov cmp push xchg push imul scas inc add daa gs or and sahf jno (bad) stc add cmp mov (bad) ja sub dec icebp mov push roll push push jmp loop pop xchg in cwtl and or pop pop adc insl pusha repz push add sub jmp sub pop xchg rol pop push xchg add xchg mov in out add call idivb shr mov scas mov bound cs (bad) jb sub mov ljmp adc push xchg jle or pop mov mov and add test or mov cmp xchg mov ds fsubr sub nop fisttpll cmc adc and pop movb and inc shlb push pushf pop dec add out or movsb dec daa pusha xor aaa sub iret in add inc imul add or pop test pushf mov popaw (bad) pop jmp pop mov dec pop push push mov arpl enter lcall cltd jae cmpsb movsl sub or cld add lret stos inc sti lods push pop dec inc push mov jmp enter aam fild mov movsb les or sbb dec stos arpl out cmp test enter or add push push pusha ja and data16 popa arpl jmp sub xor adc rolb cmp lret add (bad) addr16 add lds popa jle and outsl sub les fcomps sub pusha sarb pop push sbb out mov sbb inc pop sub leave (bad) shrb lds rcl das dec loopne daa pop scas dec push int mov movsb aad sbb in or nop out lds dec xchg xchg xor add out inc mov jg pop in (bad) or sub mov xorb add cmp xchg pop cmp mov or xor jmp or and jmp test add ljmp loopne bound inc jnp pusha inc or mov clc jmp pop js push rorl adc imul or xchg or add jbe lock inc fdivrl pop aaa in or cmp jbe mov cmp loop mov pop xor dec pop and push movsb xor ficom adc jnp jecxz popa leave xor cmp mov inc outsb fisub mov adcl hlt pop or negl or push push and add cltd cmp das pop push cli xchg xor decb xchg movsb xchg cmp sub sub push xor mov pop mov sub sahf call xchg cmp (bad) pop cs inc jmp aad movsb xchg and ja popf data16 pop adc js lcall jecxz sub pusha outsl sbb xor push movsb pop in adc loope jp mov inc pusha outsb mov inc dec mov add rolb jb je add stc sub and mov inc movsb lods or iret xor test add ret add sub add lret lahf jmp add leave adc sarl in sub cmp and icebp or das pop cli inc add ja cmpsl pop xchg push push cmp mov dec adcl adcb mov (bad) sub push add loope add or pop mov add mov xor xlat add mov inc pop push lcall or cmpsl xor mov fdivs push lds or pop add or jmp push add movsl lcall ret hlt mov loopne mov leave cltd imul dec test and sbb pop adc cld sub outsb inc mov push sub (bad) push mov mov (bad) xor (bad) enter jbe das lds pop sbb enter push sbb xchg mov int loop cmpsb push xchg fidivr mov or sbb jp rcll sbb pop lcall ficomp xor wrmsr mov xor in dec mov test jmp xor mov xor (bad) pop cs (bad) repnz or test shlb xor ja adc xchg enter (bad) or jmp fstpt jbe,pt xchg lods mov mov stc dec pop jo outsb xchg pusha daa aam pop mov fwait push movsb sub and lock inc or mov mov jmp cmp sub add (bad) mov ds (bad) (bad) sbb jge dec cwtl dec mov jo jmp and shrl xchg inc inc jno pop jle push sbb pop rorw mov adc in push push lds mov cwtl adc jp mov repnz pop iret xchg test mov imul inc jg jbe (bad) sub xchg cmp (bad) cli cmp aam or sub dec mov pop neg add pusha sarb push sub mov andl push mov dec pop jbe or jmp int push sbb les dec fiadd or add xor jecxz dec xorl (bad) jmp dec repnz jecxz,pn add insl inc jmp and (bad) outsb scas cmp jne nop jo or jnp pop lock xor stos pop add cmp in lock pop push push lret sahf dec int3 add jmp xor sbb mov cmpsb loope inc in adc add shrb pop and cmpsb sub or mov jmp xor pop inc pop jne pop ja mov jp mov cli arpl fisubrl jne or jnp inc movsb iret addb sbbb aad push jno clc add pop mov subb nop aam push sub jecxz sub inc dec add sahf push mov js xchg xchg cli and xor mul and shrl mov xchg dec pop jl mov mov ret inc cli sbb inc js jle or and popw nop cmp (bad) xchg mov sub cmc ret jb push add insl repnz push enter add fadds lock mov int daa test dec push xchg and mov out add stos xchg sti andb bound popf pusha daa and in push add or jbe pop inc shll or sbb mov mov add (bad) int add cmp xor pop or aaa cmp cmpsb mov mov repz add mov push fstl push ffreep das daa fidivrl sbb cmpsb add pusha lods mov pop xor dec pop ljmp ljmp aad add or jle mov aas cmpsl push out das notl lods adcb jp and or mov and dec (bad) mov push adc adc enter jbe push push test pop dec and or mov fwait pop rol xor xchg mov je cmp push pop bound icebp loope es shrl push int3 popf cs addr16 out adc and fstp es inc mov or aad aaa add mov and pop sub cmp in lret adc insb dec insl or les pop fisubl sub jmp pop pop sbb dec icebp dec inc idiv div mov lea push pop fisttp (bad) or dec push mov or cwtl fsubrp mov mov aas and nop jo dec jb add adc pusha dec or pop dec mov sahf dec (bad) nop or add es pop mov add push shrb scas and push test dec (bad) jmp jle ret loop push fild (bad) xor fnstenv mov xor inc in sub int3 mov aaa sub rcrb dec fildl adc rorb outsb xlat fidivr or ret push mov mov jmp int3 rorl fstpt xchg push sbbl sbb call inc push mov in cwtl jg fwait pop js mov inc cltd inc icebp mov jne outsb add dec rcll ficom movsb sbb xchg andnps out cmp inc scas mov js dec dec adc dec jmp aaa sbb push mov jg add push ja jo roll add mov call pusha mov push in mov xchg or dec rolb add outsl in popf ljmp out pop bound jl inc movsb sbb add jp add ret inc mov push movsl xlat mov je outsl lret lods jge xchg outsb xchg push into mov shr inc fcoms data16 or sub push dec (bad) push out (bad) cli and or lods shl mov hlt pop push repz mov jno adc mov inc loop xchg aas leave cmp fs pop add out xor or adc fisub jp stc push ljmp jo (bad) push dec (bad) adc inc js add mov jns xchg pop pop pop rorb sbb push push jmp int xchg dec cmp mov pop mov rcrl jo adc insb cmp mov cmp imul push mov dec es lea xchg insb mov push sub mov dec fwait rcrl ljmp mov movd sbb insb pusha xchg mov gs ds setno adc and mov push outsb jb or test stos jmp and push mov push mov add sub jmp lret pop and adc aam and jb mov daa iret repz data16 aas jmp xor xchg push test ret pop ficomp test stos inc xor bound les mov add in out push sub inc not and jae lcall dec into inc inc stc push fisubrl and add adc or ljmp pop dec out cmp aam add je mov xor inc sbb dec or movsl sub sbbb pop ds cmp iret sub movsb and cmp pop push jno pop push add push addl popa jecxz mov out imul jmp cmp pop mov jge jg (bad) sbb cmp stos add pop push add in in jns add cs adc cmpl (bad) push push jnp adc loopne pop pop xor mov add ss add enter nop insb ljmp pop jns pop push lret mov js mov (bad) xor out xor cmp add lock mov (bad) (bad) rorl stos sbb inc rcr or movsb add pushf andl rcl mov pop popf mov and sub dec cmp mov movsl mov cltd or jmp cltd push xor js xchg mov mov (bad) sub adc not rolb mov hlt cmpsl lret cmp clc xor adc cmpsb adc int3 pushf cltd push dec pop cwtl and sub mov ror lock add adc pop inc cmpsb jb rcl insl frstor orl ficompl and lock pop xchg sbb xchg sub adc adc inc int push or fisttp push pop xor jmp rolb push sub int3 mov add push test sbb enter sbb in loope shlb cli lret push repnz or jo push dec fstps pop push daa jbe stc sub call (bad) pop or mov outsl cmpsb (bad) (bad) xor bnd sub jmp ds jbe add or mov mov adc jmp bound mov pusha push mov cmp scas les jmp mov shrb adc jge jbe pop xchg xor fnop adc roll push dec mov pop jmp insb dec dec mov adc (bad) pop sub push clc daa jecxz or pop ss add fisubl dec addl jo inc aaa jmp lods jp cmpsl adc lret pop mov test mov xor cmc and pop inc cmp jmp and adc mov or mov mov push bound pop xchg jmp mov movsb out loopne push imul loop pop ljmp pop cli push sbb add push jg frstor xor mov ds in mov test push mov sbbl test cmpb andb sti sahf cmp fcoms inc and push push push push cmp push cld scas leave icebp sbb jle adc es sub jno push sub push mov and xchg xchg jge sub imul pop data16 in out arpl sbb movlps fpatan mov movsb fimull and imul mov jne adc add rorb pop shrb jmp nop bound xor aad popf or jno push adc pop (bad) sub add add lahf and ret push or sub add jnp and fnstcw gs xor xor jmp jo not cmpb sub cwtl and push cs mov sub pop inc inc adc loop add sub cmp adc mov mov mov scas pop mov mov dec in push mov pop pop mov lods fsubrs (bad) and das inc add sub inc test mov out daa sahf addb popa shl movsl cmpsl and push mov insl add fldl2t cmp sub or in movb sub mov idivb and lret inc cmp out sub sbb aad add or pop pop bound cmp and xor inc das mov arpl loopne mov push imul inc inc xchg (bad) lds add out push addb aaa neg add mov mov and inc xor psubusw adc popf loopne pop mov leave outsb (bad) pop inc ja pop lods (bad) xchg cmc add dec add add inc pop jmp push cmp xor add ljmp or es and cli adc fldenv addr16 jecxz insb cmp movsb inc (bad) or out (bad) push mov mov pop xor inc js (bad) pop jecxz adc aad add sub pop mov sub cli jmp jbe cmp out and ficom in jae,pn push dec pop mov adc adc add and xchg fldl aaa fcoms xor es iret aaa add scas jb mov mov pop jno or xchg movsb les mov (bad) imull xchg sbb xchg call les mov lock hlt fs or movsb mov cltd pushf xor jmp sbb add push cmc push mov push mov out (bad) fmuls lar inc (bad) push cld inc aam js imul pop adc js shrl pushf clc add push push add repz xor mov dec pop add mov mov (bad) mov add push inc (bad) adc mov pusha aas stos icebp cmpsb adc pop add adc fldt lret negb rsqrtps adc add xchg dec xor mov xor loopne xor ficomp push mov loope push add pop dec dec dec xor push ficomp (bad) push nop (bad) pop je mov pop pushl dec mov jp cmp sub adc mov mov mov js dec sub add adc imul mov add or pop adc out shrb (bad) sub rorb sbb data16 (bad) mov test sub dec jmp add les lret ja test or sub push std rclb dec sub dec or pop hlt in pop pop sbb das cmp push (bad) rcrb rorb cwtl sub popf jmp fadds arpl adc push stc je mov or jo dec dec loope jg mov mov and add rcrl test (bad) je jmp in jnp or jbe idiv push and sub mov ret test xchg adc xor (bad) mov cmp adc push add mov jp or fldcw pop pop pop (bad) mov xchg insl xor test xorb add inc or sbb inc jbe stc mov xor shl andb fsub fmuls add in pop xchg (bad) mov in iret mov or cmp call push xchg test imul jg push inc xchg jnp sbbl adc or stos pop sub inc sahf out mov xchg lret adc xchg div push ret repz int3 add cmp mov inc int3 daa or or cmp and mov sbbl icebp push mov (bad) or adc jb popf and jne outsl add bsf mov pop xchg ja jp push repnz xchg sbb sub lds sarb or fcoms sub jns sub push or xchg pop adc mov test push adc inc inc repz sbb push mov pop int or sbb out xor push and sbb sub jb or sub outsb into push xlat loopne pop pop into dec test jecxz je (bad) jae xchg inc pop lahf xchg mov xor daa add dec jns sti dec in fstpt sub (bad) dec add jmp dec pop fadds push jns add mov jb (bad) mov pop add pop mov xor pop or jecxz pop push movq (bad) hlt mov or xor mov imul in and fldenv sub or js xchg (bad) xor push dec sbb sbb les adc test sbb arpl loop cld bound lcall pusha xor mov cs mov xor sub push ret adc push add (bad) jmp pop xchg clc arpl enter jmp or jns test xorl not and and jae lods and mov mov cs mov sbb jne inc lret mov push mov imulb adc inc jecxz dec dec aad das fldl pop xor dec pop movsb mov mov adc insb and hlt das xor push xchg adc pusha loopne add mov inc dec xor fistpll push (bad) fdivr (bad) pop mov mov (bad) iret mov das lret add pop sub push push jbe pop add (bad) aam jmp fwait dec iret or loope inc mov push arpl loope add lret cmpb test in mov in cmp neg sbb dec in dec sub cmp addr16 lods or into xchg add jg flds mov mov fstl imul push jecxz push or sub (bad) popa mov out push mov js push out (bad) pop or xchg xchg ljmp add icebp xchg lods stc addr16 xchg cs mov jl pop mov or pop cmp lds xor pop inc ljmp jmp adc lahf mov mov notb xchg movsl add (bad) ret inc dec or mov (bad) dec inc push jl ret push pusha add sbb sub jno jmp add int3 pop adc (bad) and mov out repnz xor push mov add mov repnz flds cwtl dec xlat mov pop add les mov dec daa loopne sbb aad lods add out mov xchg dec sub adc and cmp push es enter test fnstenv mov xor pop cmp jmp jp mov add das or xor (bad) jnp xor push push pop push sahf je jmp mov les ss add leave adc in int3 add push adc enter (bad) (bad) or cmp push fpatan mov push mov pop out sub add pop rcrb (bad) push mov xchg push mov xor push aas jne,pn jmp in (bad) shr lret adcb push push jge pop in xchg add dec or and test clc xchg (bad) mov push push mov add leave xor push xchg and dec loopne sbb invd out xchg mov xor push mov ds mov sub adc and and leave or loope cmpl mov mov push das sbb xchg sub sub lock dec pop sub and sbb pop mov inc pop insb mov rcl push imul mov lahf mov push daa and sub pop xor sbb jmp jmp pop cwtl dec mov push (bad) in sub mov jae mull jnp add pop nop fisttp in fcomi jmp outsl sub enter xchg bound pop or fsubrl xor push outsb adc cmp jg bts mov pusha (bad) js jecxz inc xlat mov mull aad add or outsb add adc jnp or pop push push (bad) in int3 or add repz (bad) lds in cmp jmp stos adc clc jmp aam push mov add jecxz jb mov ret push jmp jno mov aad int3 movsb into add inc push je aam sti or in or (bad) mov jno dec movsb mov push or dec pop mov rcrl insl sub daa xor insb mov inc push adc inc int3 lahf bound daa js push jge and dec pop subl lret xor mov jo lar fisub push cmc or jne fbld jmp (bad) loop pushf (bad) pop repz pusha dec mov xchg jbe xor pop cmp lock xchg loope mov loopne lcall add js add and inc rcll out inc (bad) mov jecxz sub pop or adc mov jbe fcomi inc push cmc lock jne xor add ret pop add jecxz xor or inc mov adc icebp pop lds add jmp push add lret mov pop jo xchg imul mull (bad) iret adc das push out or jmp or rcrb aad push ret mov add rolb lret sub jmp add jnp and cld dec bound insl iret jp pop pop sbb sbb (bad) mov push rcll add jmp sub jmp sub mov add cmp add push stos imul movsb pop xor sbb bound or mov int3 pop out push push add push adcl or pop jmp pop push mov lret lret pop icebp shll inc pop pop gs jnp adc pop int3 movlps sbb sub or xorb pop xor rol out notl outsl in push sub xor rolb add mov or mov pop push sbb sub push jmp pop inc cld add inc in xchg xor loop fadd cs push lret jmp ret jb sub cli outsb pusha lods sbb xchg adc jbe sbb or lods push scas outsl xchg gs mov jle in xchg mov lret jo add into or add xchg ret jo inc xor or pop adc adc scas adc sub cmp out mov push insl (bad) or xor cmc adc xor push or sahf or cli add scas sub lock or and push pop mov sub add fistl mov adc lock xchg inc and in cmpsl outsl (bad) jae add sub test or pop or pop xlat ret dec xor cmp mov dec and std jbe and fs pop leave jmp cmp nop shll imul pusha scas call or stos or jmp xchg sub sub flds add mov insb pusha stos sub push pop fld mov xor jbe (bad) jno dec jmp pop test dec mov les pushf xchg add xchg dec mov xor pusha mov out pop loop cwtl xchg and jecxz push cmp push loopne orl or add fadds cmp jmp insl rorb pop push push mov js fcmovu add jno (bad) lds dec fs or outsl jb and mov or push lock cmp push mov mov nop xlat add adc cmpsl enter mov push sub add or add roll or pop cmc les fstl and (bad) sti add push xchg sbbl rorb cmp out mov ljmp jge jb or daa rcl jno cmpsb add xchg or push inc pop pop int stc dec ret mov xor iret incb in popa cmp mov mov lods pushf cmp enter jl fsts push cmp xor fs push xchg test add mov push sub (bad) dec or pop gs ss bound cli out mov std cmp aaa mov daa push push jge cmp pusha jo mov add fimull jp pop push fisubrl adc xor aam push mov inc add and pop lds sar aad or sbb jl daa loopne fs or cli testl dec dec push in cmp cmp dec and (bad) neg ror jmp subl mov adc rorb jmp shl push les (bad) mov pop adc inc lock daa xchg lock xchg sbbl into (bad) leave xor test sbb push sahf add mov das push int3 and pop in and jb pop xchg sti mov or stos outsb sub decl mov hlt sahf jmp cmp int3 push cmp rcrb inc sub xchg or rorl push daa sbb ror lcall in pop and pop loop ret cmpsl ret and sub xor pop test cmpsl loop sbb inc push fwait sub sub or inc sub sbb iret out (bad) cmpsb movsb mov or and and insb outsl flds imul loope rcll test fsts add jno xor and dec push sbb fsubr rcll inc dec out add fisttp push adc aad xor pop cmp pop dec ficoml repnz les outsb inc int cmp sarb mov add (bad) push insb fcoml add mov sub pop xchg add mov jle ret jae dec adc (bad) out push pop stc (bad) mov and imul lret rclb aas lahf jmp js xor and loop adc call insb xor (bad) mov (bad) inc out pop jle or bnd sbb xchg clc cmp pop xor mov dec push sub andl fimul in sub shl sub sbb sub pop jne gs clc scas xchg and and aas push pushf mov pop jg lea mov mov daa ficom push out dec mov adc fs pop sti lret enter adc xchg sub lods xor xor fwait stos mov push add sub sbb pop decb divl sub lock pop test ret or (bad) push cmc rorb push mov ljmp repnz sub cld push push fidivr in pop pop addb clc pop sbbb lea (bad) pop sbbb aad push push mov add (bad) repz mov mov mov and lods mov ficom enter and xor xchg cmp call stc clc mov adc mov push sub cmp add mov insb rorl lea jecxz dec pop pop scas push xlat icebp outsl push aas or sub pop push cmpsb jns or pop jbe ror (bad) cmp dec gs mov sub jae pop inc sbb dec mov inc dec pop (bad) (bad) out pusha sub adc mov mov xchg add jle daa pop or lods ret sbb sub and out mov or add sbb lds (bad) clc jbe adc ds aas outsl adc sbb mov pop das out jg int3 lods mov das or aaa or push mov jno loop pop dec adc mov mov jmp aas mov push popf in leave cmp in mov shll (bad) pusha add shrb jo hlt adc push jns and pop arpl out mov dec jmp push mov insb adc ds lret cs sarb pushf jmp adc add jg jno mov add insb outsl pop gs adcb sub jbe addl add stos or (bad) pop or lcall or out out xor jo push push push pop pop jb jecxz mov push mov adc daa loope inc add daa lret mov xchg movsl pop xchg nop dec cltd jno xor push adc adc jmp jp xchg xchg or sti and cli cli out cmc add dec pop sub (bad) dec xchg lret xor dec mov and aam mov inc movsl shlb loopne in or xlat (bad) je inc push aam pop sarb mov pop add lods mov data16 push fisubl push rol rcll clc cltd pop fnstenv sbb (bad) xlat shr mov cmpsb xor pusha out loopne sbb push das sahf or sarb and enter sarb in addb inc xlat sub inc invlpg lahf xchg pop and outsb cli mov mov lds out sbb xchg icebp pop jecxz sbb cmp test rcrb call pop sub mov nop sub cs sbb mov in test inc loope cmp xchg sub test out cmp movsl imul addl add jmp pop stos adc ret mov jns arpl inc jbe pop cs dec cld cmp scas int3 push jmp dec xor stos pop popf xchg cmp fadds mov cmp dec adc adc xchg test sub neg dec shl in inc shrl mov inc jmp lock add mov pop mov sbb and mov mov mov test aas cwtl out adc sbb mov add or dec xlat outsl dec (bad) decl sbb dec call arpl pop mov movsl or push popa add data16 sub adc sub aaa dec clc aaa cmc sub faddl inc mov popa ret sub mov rorl mov enter dec cmc pop dec and sub push hlt test add xor mov sub mov xchg xor (bad) icebp push aam xor mov adc xor xchg adc pop lea jns push mov jno jnp rorl xor xlat bound das scas in shr jp fs jmp in enter rorb add jno dec xor out push mov jl jbe push incl and sbb adc cltd add adc sbb cmpsl cwtl (bad) sub adc inc push rol jp dec and add pop inc clc add and out push or or fs fiaddl out lahf xor ficomp flds jb pop add pop shll add cmp jno or icebp inc or cld add and pop jmp pop sub xchg push in pop dec cmc dec std addl mov cmc imul dec sbb xor bound xchg dec js jp call pop and scas pop push aam decb rorb push inc mov add xlat jle cmp xor mulps ret mov push sub push add sub jmp pop lea inc (bad) dec rorb fs lds add (bad) in bnd or mov (bad) outsl inc and dec fmull mov push mov add dec sub fnstenv jmp sub add popa mov add xchg mov and inc cltd subl xor (bad) mov out cmp or pop push pusha dec push aaa xor fcomps push mov or dec push mov or scas jmp call cwtl sbb xchg sbb repz xor jge fldcw cmp daa pop push and fist add movsb ret xchg into and (bad) cmpsl jl dec popf push test xchg lret (bad) stc dec lods popa addb jmp push sahf adc inc aam lds adc inc adcb cmp outsb lods enter aad ljmp pop push inc and push aam and jecxz adc add (bad) imul pop adc pop ficoml imul jmp imul pop das mov add cltd inc cmp mov das lahf pusha leave lret mov and jmp outsl inc sub mov aad fs inc mov jo jecxz xor sub lret sbb iret or jbe pop aad pop pop fadds pop xchg xchg add adc fldl mov dec pop mov rorb (bad) push push or jecxz push and call jo mov lea sarb idivb or and not sub and pop icebp shll push addl add inc add dec add orb clc xor cwtl sub ficom fs lahf pop dec cmp es scas or mov push sahf popa jmp iret or fildl jne sti push and pusha adc (bad) inc popa or sub mov popf or xor pop add pop mov inc daa sub push or mov lret subl ds xor gs or movsb adc push rcll cmp std rorb xchg mov test nopl mov xchg push dec out sbb sbb repnz cmp push imul pusha cs shll push mov push jmp imul cmp das xor pop dec insl add fld clc ss dec pop stc dec or cltd inc or das dec je mov mov incb adc lret sub jge pop fimul xlat inc scas cmpl jns jge and icebp in jnp (bad) jmp rcrl pop ss ja xor mov xor fwait push imul sub jbe add ds mov jge aas addr16 subb out js insb inc int push xorb daa add xor arpl notb fstpt jle mov dec pop dec stc pop pop pop pop dec sub mov add mov ret cmp aaa fdivs out aaa xlat stos fwait ljmp inc aas push push pop xor jmp jnp std push mov pop sub repz pop jnp mov rcrl or repz addl std (bad) bnd repnz jmpw jmp sti jbe (bad) dec iret movsb push fcomps add sub adc adc fst inc adc (bad) out test jne xchg jmp sbb fimull xchg stc jb mov pushf jge jl add out jae jne jge pop or rolb add inc scas xchg jnp mov sub and faddl sub pop jecxz jne xchg adc int3 mov inc cmp dec clc in popa push fidivrl and dec xchg cli pop stos daa jle (bad) mov or inc rcll dec push es and out lods and adc mov jb call jnp sub push xchg (bad) (bad) repnz push jmp pop (bad) jae or ss dec xor or loop fldenv add fist cmp jb add js out int3 outsb enter push dec pop inc mov pop sti pop inc push dec call and cltd jno test rcrb fs adc loopne sahf and mov inc fadds dec add add jb inc jmp push fsts inc mov xor jle ja mov orb mov pop lret sub aas movsl xor or xchg ret add mov pop daa add inc mov cmpb xchg lret and or mov std xor add into fmulp fcmovb push push movsl cld xchg dec movb dec mov scas int xor mov fild and push push pop jmp mov movd add xchg fldcw icebp jae mov jne inc pop jge rclb repnz in mov pmulhuw xchg push mov fisttpll adc mov cwtl stos cmp mov dec push mov pop jae push addl pushf pop call js or adc mov jle add or xor sti mov cwtl xchg cmp mov push mov and dec shl add add jmp mov mov mov pop mov test cwtl lods push out mov mov inc and sahf add xchg mov daa cld inc sub int3 xor cltd data16 lahf test push loop icebp shl movzbl inc adc ljmp (bad) bound pop es stos in in add sub pop fist mov inc ja cmc and dec (bad) adc insl int paddb fsin test adc gs mov add sub sub pop mov lea ds test sti mov cmc fisubr dec mov or mov xchg icebp (bad) dec vunpcklps imul js adc (bad) pop roll ret inc inc push inc ljmp push mov mov jg hlt jmp jmp xchg test dec mov or (bad) loop inc repnz inc jle mov pop and stos inc xchg scas roll mov xchg inc cmc xor sbb repnz push or mov lock into out xchg adc shlb bound push adc test add xchg in xchg add sub adc dec rolb dec dec shr loop xor push or and fcomps xor sub bound inc cmp and ror addr16 notb flds or xchg sub loopne lds inc push sbb loopne (bad) mov xor cmp data16 mov scas mov add es stos or fcoms add leave hlt addr16 ret pop divl fiaddl push rcr fwait aas mov gs jnp inc or mov or pop ret dec insb jne inc jmp push mov repz rorb and cmp dec inc int3 pop testl cmp adc dec jecxz push cld test adc fmulp lods into cmpsl fucom xchg pusha imul daa pusha icebp push pop mov add xor loop add jle or jne adc ret push pushf or or add fs add jecxz and popa xchg add jno dec fldenv dec in out push mov pop call xor gs and adc out push dec mov push mov out push jne sti sbb loopne sbbl clc add mov icebp out bound and mov mov pop roll int adc inc inc mov fcomps out push push push imul push lret mov sub jns inc cli adcl sar pop loopne adc xor push sub ljmp jmp roll sbb out flds jnp fdivrl fwait push adc leavew pop mov jmp push lahf mov fbstp mov loope add out sub icebp jmp lea xchg je add das inc xor stos add in or push sub aas mov iret cld ret ljmp (bad) fdivrl ret xchg pop dec mov mov inc mov clc aas pop sub movsb mov mov jmp sub insb cmp mov neg shl xorb fsubs mov jns pusha mov movsl (bad) call dec movsb sbb lret add loop negl dec nop and orb loopne int test add cs or and sub jle pop inc out dec pop and xchg or pop pop lcall xchg xchg loopne rorl into jle in mov mov stos inc mov andb addr16 ljmp lock and push cmp movsl adc clc ret (bad) push test xchg inc push rcll xor xor dec (bad) xchg rorl jo or rorb pop jmp jne (bad) movsb lahf inc push pop imul add sub jne inc bound sub sub push add loop pop xlat or dec rsm and mov loopne dec pusha cmp adc dec jbe (bad) incl cli jmp je pop mov fsts ret fwait insb sub in or cvtdq2ps jno or imul mov adc pop and sbb aas loop (bad) incl or loopne adc mov cwtl pop arpl push push out mov dec int3 mov (bad) dec test mov pop mov inc push std mov and xor js inc test pusha insl dec icebp xor pop lods mov loopne or pop add ret or xchg pop adc lods (bad) mov pop push xchg sbb jnp push dec sub mov xor sub pop jg aad jmp out out push jmp inc mov mov cmp add xchg call pop push lret jmp and movsb outsl inc add icebp andl in push nop mov lock in icebp and cmp (bad) mov insl ljmp int mov dec lds fnop push push xchg ljmp syscall add shrb jmp pop scas sub jne jbe lahf jns pop pop or mov or inc mov xchg xor adc lret test mov sub sarl inc fimul cmp push enter ljmp pop neg or das adc dec adc dec xlat inc add cwtl cltd push daa jnp mov pop jl and fldenv aas xor or dec outsl je jmp mov sub loopne xchg fmulp xchg in fcmovb push pop mov add jmp lahf dec add mov ret std enter stos xchg clc outsl and (bad) (bad) mov pop xabort mov dec sub in (bad) xchg clc push add pop ljmp gs adc out aas lock push lahf dec inc or pop scas jle sub dec rolb gs push addb add orl aaa jnp sub fcmovb xor or jecxz sub dec pop xor push adc imul xor out mov add vphaddubq adc mov (bad) cmp roll ret loop pusha leave push xchg and arpl rcrb mov or out aaa xor jecxz sub movl pop push or loope mov and add push jmp stos adc mov xor mulb xchg mov out fdivs repz mov pop mov aad jmp out cld ret daa and push into pop (bad) je adc and add or pop cli and sbb sub xchg sbbb pop push push jl add or mov or movl or jle jo movsl xchg sbb je shll push dec fbstp jo jbe popa or int stc lock movhlps add popa push ljmp xchg aam mov in jmp jle in lods dec dec leave pop mov jp or push jo push out and imul imul call mov xchg xor add jnp mov ret jbe cwtl cmpsb mov add ljmp lcall aas xor jmp sub jecxz daa mov push imul adc sbb mov inc or jge cmp inc adc dec shlb xor sub lcall test push test and mov pop or sub mov ret xchg add and push jmp in push loopne and add lahf add adc mov push pop scas mov das stos inc in xor int3 subb and mov pusha mov cmc icebp cld push jl pop mov dec adc test jno inc cmpb leave popf repnz shlb or shr repz out nop repnz fdivrs xor movsl inc mov lret dec cmp daa dec loop (bad) jmp cmp mov mov mov adcb dec leave mov xchg bound sbb mov and cmp jno sub (bad) push stos test jae jp push mov inc mov pusha ret xchg jle add and sbb pop js push sub pop ret add je lods fsub jp xor push ret push dec push lea aad push dec lods mov rcr fwait or pand xchg mov and xorb out cmp je mov leave pop push mov ljmp push andb add enter jo dec dec subb push pop xchg cmp mov and insl cwtl pop dec xor jo jbe clc rclb jp jno out push stos or xor lock add mov cmp sbb cmp outsb (bad) sbb ficompl jp jnp scas xor jmp pop pop mov out pop sbb js mov sub jmp jecxz dec push cmp shr push jns dec add or add mov lds repnz mov enter (bad) bound push pushf ret mov test into sub fstl int ret inc stc add dec fcoms pop icebp inc dec add jnp pop cmpsb push lds sbb std jae rclb sub mov or or js outsl pop mov popf adc rcrl (bad) jb mov ja and mov inc push xor push pop and (bad) mov add cld sub xor pop mov rorb mov fistp repz jle push add sarb push adc sti add xchg pop pop add std sbb lock inc dec sub leave fimul clc testb movsl pop scas dec lods ret sub sub adc mov data16 or mov add lods inc push add popa out add mov push push cmp sub push sahf pop jmp mov imul add in mov pop push enter das sub push fldenv or (bad) jmp cmc mov mov sub inc push (bad) jae das jp insb les dec jp mov push hlt and adc (bad) lock es (bad) mov int inc rcll cmp in jbe mov ret xchg and pop add jno dec xchg inc dec arpl push cmpsl push jno leave xlat cwtl xchg jmp adc dec std pop inc or cmpsb call push push add mov push (bad) pop xlat int3 sub jbe rcl jne in adc jno sub out psadbw int3 or aam mov inc insl adc lds mov push xlat xchg loopne jae ss mov out call mull fldl mov and pop jnp pop mov subb test dec les sbb xchg cmc leave push pop push cmp pop or (bad) push mov sbb mov shr jg pop add in pop mov xor sbb sbb adc stos popa and rcll (bad) in or mov or xorl (bad) mov cld orl push mov mov and dec push fs cwtl and sub or sub jecxz or xchg ljmp cmp add hlt into sar mov mov clc adc out test mov roll in ja loope mov imul cmc xor inc stos outsl stos cld xor xor or inc mov xor jb js jmp cmp sbb add je xor jge cwtl mov pop mov inc add (bad) adc (bad) dec flds pusha jae mov sbb loop and add repnz dec or push and idivb add jmp jmp mov shl mov jbe mov xor mov pop sub sub jmp adc push sbb push xorl loop mov or adc (bad) fnsave ja test jmp (bad) pop popf pop push clc je fadds cs jnp and (bad) push imul inc ficompl add mov mov repnz mov adc adc test lods fadds cmp sbb add or popa mov repnz sbb add fldcw pop pop repnz mov lods (bad) sub push or add add aad daa pop or mov cwtl mov xlat xchg scas lahf fistl or (bad) cmp bound jnp or jmpw ret xor jge out insb sbbl imul arpl (bad) or daa rclb mov nop sub movb jmp mov push pop sub bnd test add das sahf push add or and pop fimul rcll les cltd mov clc scas adc or dec (bad) xlat jae or push scas das mov xchg (bad) mov or mov adc sub mov (bad) sbb fs pop mov shr cwtl ja or rorl jle rcll xchg mov sub adc add fwait gs jmp ret lds pop pop lds or ds push xchg push dec out inc cs dec push outsb movsb adc sub jmp push (bad) jb xchg add jmp (bad) loope lahf add jecxz mov or dec lods sbb test imul (bad) ret loope into les je mov sub mov sub jbe pop sub xchg jnp cmp pop clc loop (bad) or testl push jg sub subb sub mov dec pop cmp mov inc (bad) out push fnop js add negl dec movsl pop pop pop pop xchg dec aaa push test or sbb jns es gs test lock push add add jno sbb out jae,pt and sub repz jmp add das inc stc add lahf rcll test shrl mov js insb inc jg loopne inc dec and pop test add push pop ja pop push addb repz mov (bad) out out lahf (bad) mulb pop cmp outsl nop imul rolb sub int3 and xchg add sbb add movsb mov adc rcl popa inc xchg (bad) add lret shrb lock popf arpl adc cmp lret push mov (bad) jb push rclb sub xchg addr16 (bad) lahf (bad) xchg cwtl sbb int3 insl nop fsubs inc cmp (bad) mov xlat add nop loopne push mov mov mov inc das cmp notb push jnp cmp pop notl sbb daa jg movsl mov cld mov repnz shr inc test shl fsubs pop lds pop in xor push add fdivl add add adc jnp lock push xchg or pop dec repnz movsb jbe das pop popf lret xor (bad) mov fnstcw mov push mov pop dec sub fmuls jle adc mov mov in (bad) pop dec xchg add pop cmp sbbl (bad) in movsl push jg or cmp test lret pop movsb sbb (bad) lret inc fstpl push pushf popa es inc jmp push mov mov cwtl mov outsl sarl cld ficomp fmuls push inc icebp pushf sub inc dec and hlt inc pop js cld sbb stos xchg nop pop xchg inc add mov ret adc cld mov call (bad) pop cmp push add mov jns adc pop pop inc push stos pop add dec sbb pop ret cmpsb data16 add dec jnp lods cltd ret dec xor ja sub adc lock scas xchg mov adc mov movsb jns push xor jnp xchg sub and mov cld rorb jb push cmovs xor bound repnz lds cmp xor mull push push mov call add xor jbe aam pusha adc mov in sub in xchg hlt aad adc jl sub fs gs out jno jmp shrb (bad) es scas rcl and push popa or sub out mov push xchg icebp pop test adc bound xor shl rolb jmp mov sub pop xor jle sub push imul cmp jmp cld iret jg adc pop pop pop or mov pop nop lret cmp jae xchg dec scas mov adc or mov mov pop sub das pop cwtl imul dec shl fisubr testl ja (bad) imul mov cld (bad) push dec jmp mov push jmp cmpsl pop stos or sbb inc mov xor push xor (bad) sbb pop push xchg mov in jmp pop ljmp daa pop push fsubr mov in nop lods sub sub jne imul jge in cmc or inc mov sbb push (bad) fcoms roll push out in xor test push pop jg dec pop lods sub pop mov popa jmp mov ja add add cltd adc push push mov fildl mov add xchg lcall jne mov mov sbb into push sub iret je ds mulb cmp in mov mov stos aad add cmpsb sar lds rcll mov or js and lea js or or add push xchg inc push push adcl push inc sarl xor jne push in jmp dec add imul scas dec rcrl in ja out daa push push pop inc and icebp ret repnz mov or xor sbb jmp adcl test jmp inc (bad) lods xchg add mov jo add push and (bad) push (bad) pop mov xor add hlt xchg xor jo fidivr add push push inc sub les and xor (bad) in and push lock jmp adc adc dec mov jmp add dec pop add push sub mov xor (bad) jmp xchg mov and sahf xorl jmp ret into adc ljmp (bad) push in je stc push xor loopne enter inc andb jmp lahf dec and push or scas or xchg das inc push test dec loope mov ret dec test jmp nop ret mov sub (bad) (bad) add mov ror jp dec inc fbld outsl jne dec aas int hlt adc loopne in jnp and ss popf lret stos rclb adc adc pop inc (bad) xor and mov or dec push sbb pop push insl test stos idivl dec call in mov xor or les js mov test and loope shrb pusha scas sub dec mov xchg sub mov lock ljmp add sbb xor int3 push out pop negb mov push and add outsb xchg dec push push and or add lahf nop mov ret jmp adc (bad) fldenv in mov mov add neg mov arpl xor ljmp icebp pop adc mov ljmp add pop xor iret dec xor mov mov dec pusha and push mov ds cmp mov jmp std sub cmp notb imul pop xchg mov and (bad) mov sub out int outsb ja jge sbb push (bad) or xor mov pop mov mov or dec add bound add jmp orb fnsave daa add test aas sbb push or push in xchg mov push add lock cmp sbb sub and dec insb lret es int or callw orb push nop jo push jl mov shl cmpsl push (bad) icebp mov sub int3 rclb div pop addl loop daa xchg fidivrl pop dec dec or and jle xchg (bad) lcall and mov cld adc mov (bad) mov or arpl add sbb lods hlt or dec daa es pop dec fs lcall pop imul inc lahf push pop push fs mov cmp pop mov add dec dec cmp dec inc add sbb repz xor dec or or xor in movsl fcompp stc in fcmovu jle push rorb bound imul push mov sub lods mov mov xor push sub or inc mov xor add mov or das and or jns xchg adc inc push fsubp jmp or imul and fdivrl dec jl xchg jo sbb adc mov push call sarb pop lds or ds jo and nop lods cltd (bad) cwtl (bad) aaa jmp rclb xchg pop (bad) push inc inc adc cmpsl sub imul dec lods mov jmp pop mov xlat sbb scas daa push das test xchg or add push pop ds mov imul inc cmp jle fadds or or imul fwait mov int sub fmull sbb rclb pop pop dec mov push and outsb imul out xchg dec jp push (bad) bound add ret rcll mov outsb jecxz mov rclb jge and jecxz pop daa out or or mov adc lret out push cmp lret pop movsb mov mov dec arpl (bad) dec cmp push bound and mov push push jle dec cmpsb gs in icebp adc pop xchg cs ret pop sub je shlb mov adc add inc add std fdiv rorb bound push mov loopne mov mov std or in ja (bad) and dec (bad) mov xor jg sub mov jle nop jmp fdivs lock test aam loope sub jno cli pop push repnz repz dec push movsl inc js pusha pop jo insl cmp and popf and movsb adc or add mov subl pusha push pop fisubl jbe cli add and (bad) add jne mov in ljmp push dec and push nop mov cmp int jmp push pushf add jle mov push pop lods sbbb int xchg (bad) in pop pop add cmpsb push or or jl add adc mov dec mov pop mov inc mov fisubr xor cmp nop xchg xor xlat and ss addb inc mov mov push mov inc aam push xor sbb inc mov xor dec inc mov outsl or movsl jb adc adc cltd sub mov jle xor movsb sbb aas es cli mov push sub mov mov test js mov jb or cmp adc add add adc adc sub cmp sbb dec sbb imul loopne lods je pop cs or xor orl pop cmp pop cmp scas fdivrs cli or add test sub add and aaa aad inc or in mov pop push dec (bad) xor (bad) push mov cwtl popf xchg add add aaa adc je inc cli (bad) mov xor mov adc clc cs sbb pop ucomiss push icebp cmp (bad) xchg xor sub test pop les mov push or (bad) inc stos int in mov mov cmc mov inc jl mov shr sbbb inc ret mov add hlt or lea sbb mov das add imul sbb push jne out lea daa push sub push fnstsw sub add inc mov xchg pop or popa inc aam push dec add aam adc imul cmpsb repz add jne rolb mov cmp or push lds mov or xorb dec adc enter dec lret sub jmp popa push ret jle jmp inc pop pop mov fild cmp pop add mov ja push mov (bad) movsl dec push or scas mov call dec mov pop or mov ja daa and add sub into dec (bad) (bad) ljmp sub cltd dec das call or cwtl pop pop mov sub adc out add repnz lret (bad) lcall mov test or sbb roll icebp and das xchg and mov ljmp xor insb adc pop cmp cmp not mov pusha icebp add push mov ret cmp and ret xor mov mov sbb pop daa push mov (bad) pop adc rorl and or mov xchg pushf jae js xchg sti lods movsb test pop pop test lcall inc cmpsb fwait cmc and mov das jecxz mov aad neg sub sbb loopne icebp dec cmpb and clc jmp (bad) mov xlat cltd or jl pop clc sub sub xchg leave add pop js hlt and stc std add xchg sarb sub shr popf pop push outsl and cmpsl and sub outsl incb pushf push and sub sar test ljmp xor push imul mov pop jmp and aad int jecxz push out jbe jns sub rcl push mov adc nop and xor or pop cld mov lods popa nop imul enter cmp shll jo testl xchg lods inc lds mov cmp scas jns sbb push repz push lret add and mov mov xor movsl loope push or mov dec inc inc arpl dec cld push lret cmpsl fcoms nop sub add mov aad repz aad push cmp cmpsb xchg sub push stos js pop mov push dec pop (bad) and mov ljmp pop or ds incl inc pop imul pop mov fstps out arpl insl ljmp or jmp ret clc mov mov sub notb loopne add js push xor jo dec ficomp lods lret or aad repz insb push xchg jge sub sbb push or mov adc or dec add jmp pop jg push and push xchg pop pop jne pop roll dec and dec xchg add mov clc pop xor mov cmp adc sub into or jp ror cmp mov mov jne mov push addb push arpl mov mov push out push push cld cli cld aad roll aas (bad) out push dec inc (bad) xor or mov lds iret pop jp popf or adc roll jle aaa lret mov sub pop rorb xchg xor mov jl clc fimull mov iret adc jb push mov adc aad loope push and das add out (bad) hlt add test sub and cmp clc mov addl addb ss push pop push iret inc addb jmp push sahf jecxz fiaddl xor inc pop ljmp into mov mov das sub jbe dec add mov nop ljmp test xchg cmp push loop add cmp xchg jne pushf movsl pop (bad) call cmpsl addl jle cmp cmp pop clc out mov fucompp jecxz popf xchg jo out in jnp pushf (bad) mov ss mov addr16 add dec test (bad) hlt out jp jns xor aas dec mov push push icebp jnp imul in xor orb mulb jp dec xchg icebp pop outsl sub hlt popa imul fwait (bad) push or inc jmp lret xchg mov jo fcoms and rolb adc pop enter enter inc xor pop out sbb iret pop sub loope mov sub cmc insb popf mov and aas aaa push nop cmp add (bad) je aam mov imul push jl mov cmpsl jns idivl or jge xchg shlb shrl mov or cli and pop jecxz sbb andl xchg addl out loopne into mov push and push xchg push dec mov jecxz (bad) les sub je pop mul mov (bad) mov cli jno jl sub js jge bound leave jmp pop (bad) nop xor lea mov cs mov rorl pop neg in ljmp fwait clc insl js pop cmp sbb mov inc jns adc data16 push in cmp js push push push xor adc adc adc dec and fstl xchg je das jnp cmp jl xlat lds sub sub add push gs mov loop mov adc jbe aas fsubs not jns mov xor push mov sbb inc out mov rcrb mov mov lcall jl out and adc push rorl repz push xor lods sub mov lods sub mov aad stos fiadd out dec test lock push add adc and xor out pop shlb or popf mov adc cli (bad) push nop push scas adc imul lods mov test out fsubs lds mov pop xor jmp push fstps lds mov arpl mov push push cmp or dec push xchg xchg or (bad) push xor dec enter (bad) outsl push dec popa movsb dec mov rcrb (bad) push add dec dec imul jle jae cltd xchg add out mov mov xor loope push add pop cmp and mov push xchg push pop pop andb and mov add xor ljmp sub adc sub cmp inc push adc adc pop (bad) repz lahf and repz mov inc and jbe push (bad) sub sub sub mov jne push testl pop or xor daa cs pop popa add cmp jmp mov or das stos sahf and sbb (bad) icebp or sbb (bad) mov repnz adc imul xchg xchg add sub dec pop push sar xchg lds cwtl sbb dec and sbb add mov (bad) jg mov cli or mov ret bsf insl add ljmp and jmp les insl repnz xchg inc je push jmp movsb jmp inc inc jne or orl or sbb and lret fnstsw fcomps mov xchg in mov dec hlt or leave xor es add cs xchg test mov repz out ret stos lods adc sub add jne fdivrs out das ds lret (bad) test (bad) int mov or std pop jnp mov adc jle sbb int iret and jmp pop pop int loope,pn cmp sub mov adc jae (bad) jnp dec mov sahf add clc and rolb pusha daa jno mov add jo sub adc cmp mov pop pop xchg ds xor sarl adc in cmp sub movsl push jg xchg or arpl add test (bad) and jmp lea xchg fs add jb pop dec movsb pop add call adc push es stos push pop mov fdiv sub sub xor lahf sbb mov add jo fcomip adc push clc daa adc movsl or adc lcall (bad) jge pop push sbb mov push std pusha dec shr fs enter push add xchg or jp rorl sub pop push adc mov cmovne pop dec rorb (bad) cwtl js mov outsb pop and (bad) mov cmp push ror ljmp push pop sbb mov mov inc sti pop xor add push cmp cwtl mov arpl je mov pop jne dec mov mov stos add repnz out jnp pop (bad) movsb pusha inc push mov add add pop push js add (bad) inc pop push add sarb xor mov mov mov test inc rorb loopne (bad) jne and jl fcoml xor pop int3 cmc xchg jl and daa and push (bad) jb out cwtl lds loope jg pop cmp roll xor insb dec out sub pop (bad) cmp jae xchg mov pop dec outsb imul mov or mov shr inc fisttp add test adc or mov xor or jp sbb rcrl jno pop cmc add cwtl xor mov push or dec fcom pop push add mov je add xchg sub or in jl mov outsl xor rcrb cmc mov push (bad) mov shrb pop sub repz xchg mov out push outsl test mov sub es mov mov adc cld lods aad inc pusha xor and sbb push mov sub mov mov dec mov adc dec mov sbb lds and mov sbb shr dec inc or pop icebp cmp adc ss pop and aas push popa add loope hlt fcoml add push sbb enter xorl inc mov cmp xchg push jle rcrl outsl push push adc and mov clc shlb subl add xor jbe push popa js nop dec hlt insl or xchg jp or mov xchg pop xchg pusha lret mov (bad) dec popa test add stos jo sbb enter pop arpl or mov mov or push push push inc rcll mov mov rcrb stos psubsw js dec data16 mov dec add (bad) mov adc adc pop jecxz cmp cmp enter pop sub pop ljmp lea jo enter dec jl jmp pop push out sarb inc push mov movsl cmp testl add es jbe pop mov jge jb add jp ret sbb jbe pop add xlat jmp jp mov mov lds push pop clc sbb inc test jecxz stc jbe adc xchg mov pop jl add seto lds test mov add xor jp lea sub add jg inc and ljmp enter rorl outsl adc gs add xor in xor adc mov jle jo repz mov pop ss dec mov inc in add mov out push popf fsubl stos jne cmc leave pushf xchg das push imul mov test jp ja loop jp outsb inc add sbb outsb xor xchg cs btc enter imul rorl pop out xor xor in add sub or jne push stc repnz pop in insb fdiv into mov jb enter stc mov popf lds dec xor sub mov mov xor and jae scas sbb pop inc ds ds or push push cmp and add xchg fst add mov subl push dec mov mov push sti mov int inc hlt leave fwait add mov or call ss mov cmpsl imul mov shrb leave jno xchg pop mov xor in cmp dec mov aas add lret out inc pop rcrb or popa ret repnz pop dec cmp push inc inc inc cli outsb movsl test bound dec inc lcall shlb out loopne inc mul xor in nop xor push das jmp lds shr or sub rcll movsb push (bad) mov jne lods gs mov in into clc (bad) add inc or jbe add outsb bound jmp add pop dec or push add ds mov dec inc lret cmp out les push test ds (bad) jno adc adcb repnz daa push push xor xor and dec test push (bad) xor xchg jmp add fisttp inc pop push jmp xor lcall nop add pop push or dec or add iret ss cld inc in movsb adc mov lea subb adc mov jb adc or jecxz (bad) push addr16 jg jns or loope aam jb and mul jmp cmc pop int jp cld dec inc and add shlb das (bad) hlt jecxz cmp mov or adc pop push push push arpl xor or icebp inc push inc sbb sub jns loopne rcll mov or jae in push mov push inc subl scas or sub mov fwait jp and pop add mov lret mov adc cwtl dec push pop (bad) adc pop add dec and jmp mov mov dec cmp cmc xchg mov xchg xor mov mov and call pop push sbb pop lods (bad) cmpsb push xchg pop ret jne das imul jo lahf aam jmp shrl (bad) clc push mov loope test testl xchg je push and cmp insl movsl xchg icebp dec cmp jo repz push es cmpsb or add push pop in mov jnp outsb adc jns test lret mov lcall inc pop jo xor push sbb xchg push ss outsl xor sub (bad) addr16 (bad) cmpsb fbld daa sbb imul in mov mov or fbld inc add and jo ret add jmp mov jg xor add (bad) pop cwtl sub mov in flds and stc sub dec pop fnstcw sub fwait adc or pop pop add out sub adc out adc mov pop sbb ds xchg mov xor push popa jo sahf sti popa jmp outsl in fs add (bad) sub aas neg cmp cmp adc into push cmpsb pusha or js aam (bad) push pop mov mov ds rorl pop outsl and insb xchg xchg mov xor (bad) into pop push push movsb add jg lds pop ja jle in or and xor ret stc dec mov nop sub inc (bad) dec xchg adc (bad) dec pop push jnp call out test xchg lret xchg pop xor pop mov add jmp and repz inc repz movsb call lcall cli jno rclb adcl sub clc mov xchg ret shr sbb or jae mov mov loope mov jmp sarb das add adc lret push clc push push aaa div or cld shl push pusha icebp push mov sub cld cmp ret (bad) jae adc add add fcmovb xlat or jge insl ds cmp (bad) ljmp mov cmp cld dec mov (bad) fs sbb rorb mov sub inc aas test pop push inc test or xor inc dec adc rcrl sbb (bad) fimul arpl jp sbb xor (bad) (bad) repz jmp adc ds in les xchg dec and dec aad imul jle out dec iret ja mov mov add fcomps inc std inc jne cs cmp cltd sub pop movsb mov add xchg dec (bad) push sub roll aam xor movl mov xor (bad) insl sub loop adc jns sti stc jg lods xchg repnz push mov pop ljmp mov sub inc mov add cwtl or push jns mov xor ljmp push xor movsl popf jmp in push int3 popf hlt add lds mov mov stc stc shrl jmp mov pop add pusha out cwtl mov pop imul or ret jge loope insl mov pop mov sub mov or fwait push jbe cs jecxz movsb mov pop add jle cmpsl pop mov jae les rclb pop jg cmpsl push cs fmull mov in lock adc mov inc inc in sub rclb ret bound fisttp push idiv xor mov hlt rol popf jno add bound cmpsl scas std pop inc jae pop add jge cltd mov xor add mov inc inc shlb sar push mov pop aad sbb mov daa aaa sub mov push (bad) xor stos mov dec sub imul push lahf push sbb dec or mov fnstcw stc inc roll nop push and rorb jle rolb sbb std mov pop jg mov mov xlat outsb xchg adc pop sub add jl jae,pt outsb push (bad) mov out xchg mov pop js jl mov push sub push xchg or and mov adc (bad) fmuls outsb xchg pop adc clc mov or push inc ss add cli ret out jne push pop mov lahf sarl pop test jo js xor out iret out push xchg adc xor (bad) fcomps and stos xchg cmp fnstcw ret inc xor scas nop mov jp pop dec das sub cmp add into loope js xor stos adc add adc inc inc imul cmp mov sarl mov add mov lea jae xchg pop out je mov movb xor repnz dec pop je scas inc xchg dec ljmp nop jns xor stc pop adc sub addr16 (bad) mov xor (bad) aaa mov cld push sub out popf pop repnz fwait sbbl repz xor dec adc and movsb cmpsb (bad) mov rorl mov in in mov and pusha push test sbb add mul xchg xor mov out push inc dec lods or daa stc pop nop xor test loope adc mov cmp push mov adc push pop pop jnp xor mov add and andl sahf inc push cmp (bad) xchg jmp lds neg or or mov (bad) call ret test insb pop pop repz into cmpsl orl xor rcrl push icebp hlt and out push andl dec xchg dec neg ret (bad) mov xlat jmp stc mov aad push push push lds xchg xor push imul in pop inc adc mov lock (bad) xor xchg mul mov add push std pop sub mov push fnstsw fmull incb push ljmp add std push and and rcrl inc jmp mov lds fdivs jno lret push add aaa jmp lea aaa mov test pop or jbe jne xchg sub mov test inc or or mov jmp icebp jne aad fisttpll rorl jl dec dec pop in fs ret aad mov clc xchg sub push lret xchg push add jecxz pushf pop cmp sub rorb jb (bad) or lcall add aaa icebp cmpl mov dec call pop mov ret cwtl mov inc popf iret mov lock (bad) lds or sub or flds inc out daa pop (bad) je cmp fs insb dec hlt adc push cli sub xor pop loope lods push mov fdivrs outsb and ret jl adc pop aaa movsl mov pop push mov mov mov push les addb aam ljmp test lea int3 scas pop cmp xor jbe cltd mov sbb pop pop xor test loope dec mov outsl pop outsb xchg push jmp cli xor cmp test push pop lahf out or sub pushf cmp jecxz sbb xchg pop add (bad) jnp xor dec mov xchg daa push outsb mov pop sub lret push dec cmp push cld push add or xor or sub jp dec mov mov dec push fidivr or pop das out push add pop xor push or lahf test call mov (bad) mov das xorb pop xchg pop sub pop testl jmp or int (bad) adc std xchg mov jge and push fild and xor stos pop inc pop push negl and and inc xor ds pop not out pop mov mov pop lods ljmp pop xchg out pop ljmp (bad) adc cmp or pop or fwait icebp xchg or imul mov mov cmp push sub sub or divb inc add arpl lcall rcrb mov sar sub in (bad) add orl push mov sub sub pop test pop inc sbb sub (bad) push mov icebp and inc loop inc pop or shr fbstp dec xor aaa andl xchg lock mov pop lahf insb sti and iret rcrb in jae ja js xchg js push xchg mov js in cwtl dec test mov int3 call pop add fildl scas les add rcll gs inc add enter dec xor dec cmp push add insl cmp int jl mov pcmpgtw mov xor xor and xchg mov imul sub pusha xor mov roll add cmp cmp dec shlb jbe mov inc mov ljmp jmp (bad) mov mov loope sub dec in inc jne cmp dec incl pop jbe idivl or dec add icebp mov and sub mov lds pop (bad) lods mov jle dec mulb je lret sbb pop lret pop push push push mov gs fnstenv xchg outsb dec xchg mov mov push ret add ret push or popl sub or inc pusha xchg or lret es and and mov ret or pextrw sbb or outsl rorb test jecxz dec out adc icebp cmp ja int3 cmc ss loopne cmp icebp das adc pusha stos mov jne jns popf fldenv into inc pop in bound jbe or dec pop pop mov and mov nop sbb mov and push sub aad scas sub in jl popa in inc push xor and lret and dec add (bad) dec stc sbb adc mov xor jle mov add jg daa (bad) out and or pop sbb in push into out sahf sbb jmp mov xchg xor ja add aas and xchg push add lea mov out scas (bad) jg mov jge divb pop das xor adc push ds test fdivrs sub movsl dec mov fs xor pop ja pop add arpl daa not in mov jmp pop clc andb jns or loop adc jo and dec fdivrs es fist cmp inc cmp lret fs jb push dec inc xchg mov and dec add dec cmp sub jo dec loop orb lret fimull movl and je fildl mov pop pop andb inc nop ficompl mov or jg add ret (bad) nop imul push mov cs dec xchg mov and push sub cmp push push cli push testb les movd fdivrl mov jg insl cwtl repnz out jge mov or pop pop push pop pop (bad) hlt fisub inc sbb std lods scas inc jno add std outsb fdivp test loope sbbl pop and mov add add mov adc or les incb (bad) incl jmp sbb push add rcrl lods shlb xchg pop jno xchg int3 sbb add xchg repnz and aas dec repnz mov fcoms in xchg inc neg push jb push mov push insb loope dec nop mov dec inc jmp cmc mov pop decb push or mov loopne hlt loope dec jmp jns je xor addl jl sub push sub arpl call xchg push popa cs and inc mov push loop,pt aam add jmp ljmp push ret mov js inc shr sti loope and and jnp pop inc js (bad) int3 dec push xor loop inc cltd je subb cmp mov ret movd mov imul aam in mov cmp sbb inc dec jmp add mov cmpsb icebp adc mov rcll jne std and cmp and cmp pop pop add add (bad) in dec lods les inc mov cmp repz add cmp and jno add gs mov fcoml inc dec lods pop push sti leave and jbe and (bad) push sbb mov cmp dec rol cwtl and mov jl repz scas or pop repz lcall (bad) jb loopne sbb mov cmp jmp cmp mov pop dec inc fwait push sbbb enter xor orl cmpsl cmp xchg out sub inc pop and shl add cwtl sbb lahf dec mov (bad) cmp xorl xchg addb mov aaa adc shll push adc loope pop dec mov push leave dec lock jle pop repnz mov lret push jns adc push mov nop shll into sub sub lds ss or cmpsb xchg jb dec xchg adc mov push jno add push add xchg (bad) in mov jge loopne cmp pop mov dec out push insb xchg pop (bad) mov pop pop jecxz call cmp (bad) or inc mov pop lahf push xor repnz mov mov push mov push mov jg fidiv jo xchg cwtl adc push mov mov sub jmp addb push mov or rcll xchg adc push inc pop xor arpl cld cs insb push pop jge xor aaa mov mov repnz mov lret mov pusha jl or pop ljmp push outsl sub jmp pop imul neg push xor add enter xchg stos jns sub mov and or fiadd mov adc es push cmp dec nop daa scas (bad) xchg in dec add xor adc daa inc test and inc dec push mov rclb add outsl enter xchg jecxz mov jns (bad) pop sbb add lds add sbb dec clc stc rclb int3 push sub je add xchg mov pushf das rol out mov jmp and jmp dec add pop iret add jge pop pop cmc stos insb shl sub fwait ss loop popa pop jmp test or ljmp out rcrl dec sub push call xor clc movsb ljmp fstps mov cmp adc xor jnp add js adc or das sahf push lret or and pushf int push test dec or pushf add add and mov adc push cmpsl fs push nop pushf xchg icebp fnclex pop push jg pop sub enter xchg lcall xchg dec inc mov mov and aad mov mov jge jge sbb inc (bad) movmskps mov das rorb cmp push mov or int popa mov (bad) shrb arpl in stos add mov adc mov lahf notb pop fdivl jmp sahf cwtl call adc ljmp or adc fwait aaa pop mov add pop (bad) rol mov cmp inc and test cmpb aas dec inc sub xor ss test enter xchg not jmp jmp out add and ljmp (bad) or cmp pop or pop push loope adc sar (bad) in sub popf mov test andb adc pop inc wrmsr sbb icebp sbbb add shl jmp ficom mov call daa fisubrl adc and out lods (bad) lock push fisubrl xchg xchg aam add (bad) fwait inc mov js (bad) (bad) dec push xchg xchg mov mov xor loopne sbb or jmp les stos mov push or subb fimul jmp (bad) loopne fiaddl fldenv notl lds dec mov pop pop pop xchg jmp out pushf xchg pop loopne es repz push popf inc shrl pop ret push ror shr add pop jmp dec xorb mov add xchg not jmp test bnd mov idiv shrb push jo add jbe and pop pop push mov pushf insl cmp sbb sub jmp mov nop add mov stc add (bad) aad push push fdivrs inc adc pop jmp pop dec inc xchg and fcomps push pusha inc dec outsl lds scas popl or push adc jg pusha cltd xor add dec sbb push pop push xchg flds stc cmp jle imull cmpsl xor jae repz inc mov fcomip fsubs mov push bound adc nop jae outsl mov repnz or leave mov inc imul jp jmp mov or pushf jae inc loop aad fldenv mov adc xchg daa xchg cs out in aad lds mov (bad) aas idiv sbb js fldt lock ss jl pop or jmp lock jne aam sbb or fs nop ljmp lahf mov and and add sbb imul mov test mov jl (bad) call sub and push xlat das cwtl in jmp cwtl add sahf popa adc xchg xor and (bad) hlt pop dec mov test in jmp pushf jns mov subl rcll leave cli lret out cld pop or push enter ja aad addr16 cli add popa add nop dec orl lock sub push mov pop (bad) icebp adc cs into pop lret pop adc dec sbb mov jae sbb and (bad) dec inc inc xchg cmpsl sarb push shr add bound repz rcr mov or (bad) push pop xor push in xchg aam jmp fidiv mov pop shl or out neg add cmp in dec adc mov add and aas cmp pop cld adc outsl stos mov (bad) jb (bad) sbbl aam stc into adc pop inc hlt push or lds std and add push inc dec adc pop add push pop pop push mov sub cli xchg xor decb add sbb fs pop push lahf pop rcrl xchg dec add jno out movsl (bad) imul mov pop sbb sbb inc loopne lods push cmp in push cmc movsl jle nopl es mov fsubrs or inc cmp or les push insb xchg pop add iret arpl pusha js cltd add sub xor push mov or nop add push jmp syscall or mov (bad) enter inc add cmc mov loope sub add ja xchg push jmp push into pop dec out adc pop mov in sub (bad) or movsl out ja cmp and int3 sub mov jecxz adc pop xor mov and out xchg inc decl pop jnp fldcw add (bad) adc cmp mov shlb xchg mov xchg mov aad hlt push xchg xor xor insl mov subl dec jl mov push mov cmpb fmulp or (bad) mov push popa xchg adc ficoml push repnz movsl test clc adc sbb scas in push sub jnp roll dec adc out sub dec cmpsb adc insb push fidivl pop nop mov xchg (bad) push rolb popa fimull in in cld nop aad jmp mov aam rcrb push jmp pop push out xor push mov scas inc addr16 ret sbb iret jb hlt sarl aad scas stc cmpsl in mov call sub add and pop fsubr sbb sub pop adc add pop ljmp mov sbb das imul sbb inc add mov pop add dec xchg test es jb (bad) ret jg sbb ss ds ror sbb xchg xor mov movsb mov inc push pusha add mov pop push jae adc test test adc mov mov (bad) (bad) ja outsb xlat orb push mov mov popf inc add lds ljmp add inc pop or (bad) shrl js cmpb or pop rclb pop add sahf pop call dec scas inc pop and daa xlat call adc mov or je xchg cmp mov inc (bad) cltd lcall pusha add inc pop jg push jmp adcl out inc (bad) pushf adc outsl jecxz push mov xchg mov adc addr16 leave cmp cmc (bad) xor mov dec xchg jl adc mov pop push (bad) rcr xor push inc mov dec ja sbbb out sub cmp dec fcmovu add xor xchg or pop ret (bad) rcrb sub mov push push movsl jl jo mov in inc outsb adc cmp xchg flds push inc lds or sbb xchg pop lock loope or and push jmp xchg or mov add and inc lret fisttpll mov insb popf push lock sbb add stc mov imul ret xor outsl jmp not out jbe mov daa pop mov cmpsb addl add or and jne adcb in pop pop ss lds inc sub (bad) leave iret xchg push or aam xor loop testb xlat mov pop xor cmp jnp test and and clc jmp push mov popf mov adc arpl sbb addl imull testl push sub fwait pop adc in jmp mov mov loopne cmp push jp cmpsb add rorl shr fsubrs push aas jmp daa (bad) and xor js popf adcb sbb xor cmc pop dec or adc sbb or leave and or push pop loop aam or addr16 inc add cmp clc mov dec shl xcrypt-cfb cmpsl and inc or pop sub xor or jmp jp add pop call mov jg xchg xchg clc lcall cmp mov pop or cld stos enter or sbb sub loop jecxz lret mov insb xchg ret sahf aaa inc lods popf pop pinsrw push out push jmp enter cltd stc leave cmp xor or adc add xor in cmovo and movsb std mov or cmp outsl scas sbb adc out pop or mov in or add pop jae add andl add call mov sub cmpb push test add es neg pop dec jg loop and sub lret mov bound cli sub push inc ds enter pop gs popf (bad) cmp sti mov cltd lock stos adc fimull ja mov fwait test mov jle add add ret pop (bad) xchg jne jle addl cmp rorl jmp pop das nop cwtl push xor jmp pop jmp sbb sub aaa mov dec sbb adc fwait and sub mov pop dec inc addb mov cli push mov aaa mov push test pop jo icebp pop mov in inc mov jbe push mov pop sbb in repnz out stc inc fs add fs xor clc lret add jmp lock adc sbbb clc pop repnz mov jecxz cmp jp pusha add and out data16 add push push dec pop imul ja in imul or out pop enter (bad) addl inc sub idiv or inc adc js popf xchg out inc jmp xor sub ret les xor ljmp and mov rolb add sub and xor adc add push sub lcall rcl cmp rcrb or xchg add push push in adc adc push jmp daa cli xchg rcl pusha mov nop das push punpcklbw inc shl or push mov xchg and cmp fcomps mov pop sbb mov adcl (bad) dec ret mov ret adc scas data16 push enter pop loopne jno push inc dec ret les ret sub add lock and shl negb test mov cli stos rcrl sahf in (bad) pop negb shrl jnp pop ret pop jno daa fnstenv add push icebp addr16 mov cld loope pop imul jmp cwtl push sub xor aaa rorl mov imul dec push lock xor xchg (bad) dec pop and adc xor inc enter push xor enter inc inc nop loopne fldenv inc lret bound or loope add in leave leave xchg leave jnp push push rorb popa pop fidivr outsl out call add (bad) push mov das scas fs jl push clc pop add bts sti jecxz push cmp lods out enter out pop push xor fstpl leave testl and adc jmp sub push inc clc pop flds outsb repnz test sarl inc inc test mov push in pop pop or push jmp lret and sub insb les ror rclb push mov mov movsb push out repnz idivb cmpsl out mov dec fdivrs loope and inc in scas cltd out das (bad) jbe fsubrs leave imull ret neg ror push jge es sub imul xor push jmp inc xor sub stc jmp jp pop add ja pop inc (bad) mov not push or leave cmp (bad) pop push lock imul cmp mov sbbb push sbb xor push aas repz outsb aaa out loop in outsl xchg lods popf test jne xlat cmp jbe add movl movsl inc sub inc add daa adc pop arpl movsb hlt outsb jmp popa stc push jno mov inc inc ret xchg fistp push sub into push sub jnp add loop in loope mov jae pusha out aaa pop xor lods push mov lahf test out inc in pop push addr16 imul aaa jae jl and pop or cmpsl jle push std out mov stos sub (bad) aam shr out outsb test and imul popa mov jnp sub in or inc mov push push push mov test dec cmpsl ret mov add popf adc mov or cmp add std ret xor cmp shlb scas (bad) jnp or int3 sub das or dec (bad) add inc fnstenv ss lea push jmp push in rorl (bad) scas sub bound loop aam sbb jmp movsl sti (bad) or scas pop fdivs sbb dec xchg mov jmp mov jle cs (bad) jno push in mov dec xchg lock add jp push pusha mov pop or inc pop mov and sbbb lock add cli dec hlt (bad) das clc mov lahf sub pop push xchg mov mov or jmp xor mov pop or popf pop fldenv mov sub sub mov add (bad) and jmp add xor xor dec jmp push sub jmp xchg cmpsl fistpll (bad) fucomip aas or sbb mov aad shrl icebp cmpsl mov shrl lods push js xchg jl add movsb adc lds pusha add sub insb add je es push repnz push pop xor test adc ss clc ret aaa or xchg mov repz dec sti and add jge xor sub dec push loope ds mov inc sbb loopne popf aaa test les dec call icebp lret pop mov sub cld mov jmp push pop in adc adc mov in loopne (bad) pushf jbe mov xchg xor fisttpl add out jbe testb mov jae sbb fdivs aaa es or seto pop xor inc mov push lahf sbb xorb stos or cltd insl xchg test pop nop xchg pop mov data16 dec out and adc loope dec mov (bad) xor push xor repnz out sub movsb subb arpl pop xor fstl ljmp mov push mov (bad) aam loopne sub inc xchg push or inc push bsf sub int ds repnz mov ds pop shr xor cli mov push inc xor push fdivrs mov cli jae jnp daa loop lcall pop call stos frstor mov mov adc call bound mov mov call inc push add rclb lds sub or data16 pop jmp int in add dec xor (bad) xor ja jo sbbl jmp jecxz cmpsb rcll inc xorb and je in jl stos sbb cmc dec pop or in inc stos popa sbb and and cmpsl pop enter push inc pop test jmp cli stc dec ds cli add pop jle mov mov or fmull mov jne aas sub or in fidivrl dec mov and cmpsb popf imulb xor inc adc out je dec mov or mov idivb in dec xchg cmpsb and popf sbbl jmp xchg inc stos aas test jmp pushf fisttpll mov adc mov jg imul sub je rclb rcr or adc jnp pop xor pop (bad) cmc in push and sub mov in xor jns and pop xchg push stos sub daa inc stos lcall into popf js xchg push outsb lock mov push scas xor in lea test push hlt push (bad) adc add mulb add jbe dec (bad) cli add sar jle mov dec add push jae sub rcrl (bad) pop mov inc je test inc adc push sbb or sbb (bad) and data16 push pusha mov inc push mov sub ljmp xchg dec adc inc notb mov les pop cmp and adc pushf xor push sbb pop and aam pushl fisubr push bound jge cmp fnstcw add lods push push mov (bad) or xor pop test (bad) lret xchg je sub pop scas dec sub rclb mov inc shll and insb or inc ss add xor adc cmp daa mov rorl cs loope mov add sub pop sub sub nop dec adcl lock pop in mov popa pop add cs xor mov (bad) daa add push and cli stos mov addb jmp bound jo sti sub dec out cmp rcll inc fs lea mov dec jnp sub lahf cli push add fistpll inc jb push daa dec pop fdiv cmp daa lcall jo dec outsb lock pop ss mov sahf adc pop ljmp add stc daa jbe xor mov dec call xor add out cld inc mov push and fistpll popa inc fstps inc mov sbb enter cmp subb and pop lods test loope xor loopne ljmp pop ret loope daa add jp leave (bad) push pop add adc test daa fldenv imul loope jp or data16 dec pop sarb dec sub mov aad mov xor mov test push dec adc aaa pushf or jae mov aad adc jne xor mov popa ljmp pop sbb cmc jne pop adc das push and adc call arpl xchg sub push pop or shl mov scas inc pusha js xchg push test (bad) fadd (bad) mov movsb std test or or cmp jmp inc rcll ss das les jl cmpl cmp cmp popf push cmpl sbb sub (bad) dec push dec sbb sbb lods cmp sbb mov jmp xchg out sahf imul in mov hlt cmp int3 xchg div pop insl dec mov lcall push mov xor rolb xchg jge mov mov xor and jmp idiv inc push or leave aad cmpsl movsl imulb ret aad dec in loop adc sub ret jmp adc pop pop pop pop mov imul pop adc xlat pusha or dec insl jle jge mov or push and and out pop xor dec jmp xor cwtl jae loopne or push or pop jecxz cld mov decl ret lds pop sub add dec or push xchg xor and dec out cwtl inc imulb das imul adc sub inc ffree sahf test or or test sub loopne pop xchg push and loope (bad) jns xor adc pushf fbld movsb mov ret aaa in sub loopne sub push xor pop ret shll xor into jle add jp mov fldcw std push fstl lahf in lcall push addb sbb pusha adc add add push mov sub inc mov js add sub sub cmp cmp push adc or or jnp xchg pop add shl popf inc jae push aas jmp sub test mov pop nop jnp jae xchg mov jb iret rcrl add jae lret leave adc or cmp pop (bad) adc decb rorl cmp aaa shrl stos push mov add cmp and aam pop pop mov bsf push mov es dec adc xor in mov arpl int3 xor out nop fs push xchg or adc dec jge pop ja into les xchg add mov jmp ljmp ss je out int cmp xchg and inc cmpsl std adc lahf movsl pop jge or mov in or scas stos ret jae and sub rcll (bad) jg dec dec sub mov adc fidiv (bad) (bad) popa sub lea sub push imul test mov loope loop int jae daa js sahf pop sub jp mov loopne mov sarb mov movsl add mov ficompl mov mov in jmp dec push out mov add inc mov inc cmpb rorl cli inc inc jb cmp inc xchg mov jo push (bad) int push (bad) mov adc repnz xor jmp mov daa notl cmc outsl hlt fldl (bad) push jo sub cmp adc lahf xchg stc and nop pop aas push inc das mov (bad) negl add jmp add out adc adc int3 imul cmp das lcall jne add xchg add jg inc inc insl pop sub push imull inc (bad) ja aaa xchg push mov insb push ljmp or loop cli or adc mov insb xchg movsl sar sub leave push jl test fiaddl mov add js test jge jmp mov aad cwtl mov mov ret aas dec jp aam nop insl jmp mov pop or aas sub push (bad) loopne lret and push inc lret loope data16 adc sbb bndstx test rcll das add sahf push out rcr xchg mov rorb xchg xor cmp add lock pop fistl or xchg jl or imul xor or mov jge dec xor xchg ret add cmp lds shll xor mov sub adc or fimull ja add add sbb jmp outsl cmc imul imul add jge cmp outsb jp mov inc pop mov adc sub arpl repz cmp iret cmp cmp sar mov mov test push jnp ljmp movsl clc pop fmuls jbe cmp mov xor dec adc push sub out popf out mov cmp or cmp push xchg jg mov inc pop lea inc inc shl xor outsl add jmp test pop stc or fmuls pop pop (bad) lea clc or sub or arpl pop lahf jnp lret and icebp or outsb add sbb (bad) jb sub push pop add faddl jb jmp cld pop loop sarb sahf mov push dec jb je xchg imul movsb add cmp dec mov xor dec pop arpl in or shl push mov pop push cli in cs mov jmp insl cmpsb sub cmpsl ret cmp dec push jmp pop pop pop cwtl test cmpsb and pop test mov test rorb adc inc add add je jne pop jg mov inc xchg push mov je xbegin stc leave (bad) aam stos or cmp xchg jp dec jmp pop popa (bad) or push mov js rorl pop dec pop cwtl sub add scas xchg outsb push sub inc call clc data16 pop add sarb call popa clc push mov jno mov mov dec mov in fistpl insb js pop xchg mov jle rcrb dec adc cmp stc or cmp push je push adc cld or lret mov aas test scas mov jnp ja bound inc push sub push int jl shl sarl fsubrp and mov adc mov pop clc cmc sub cmpb pop stos jge imul add in sub outsl sub cld push dec sbb aam jbe push inc fimul push mov xchg sub test add mov or movsb js popf loopne test xchg cmp adc mov movsb push sub or int3 stos mov mov data16 sub fst cwtl xchg loop movsl add pop not shll push push sub add mov xor fistpll enter sbb sub loope ds rcl movsl mov and je push icebp jmp loopne jle arpl sahf cs pop or lahf shlb adc js rorl data16 fcompl inc hlt das in adc jmp pop dec sbb and sbb dec push xor aas mov iret xor mov icebp or xor not push mov inc add pop shl orb jmp xor pop dec test adc fisttp adc jmp fldenv cmp pusha adc cmp sarb mov out lret xchg inc call dec daa stos ds inc mov xor imul add je mov loopne lods pop and jl xor push or xchg insl (bad) pop mov ret pop add inc and adc pop sub dec or daa outsb pop adc sbbl sbb negb js subl adc das mov (bad) mov fbld wbinvd sub mov and jmp mov sbb xchg movsl mov popa icebp lahf outsb inc repz sarl cwtl sub xor int push mov and pop icebp lods nop xlat mov jle bound neg xor ds pop scas inc xor xchg cmpb clc jl dec xchg dec (bad) stc pop mov adc or fdivr rcr cmp (bad) xchg adc sub push andl imul jl insl sbb imul cs loopne jp shrb cli loop adc add mov cmc jge dec add sbb and vpsubsb push xchg xchg test or das fs mov (bad) je aad stos mov pop rcr jg ja sbb jno std or lahf xor cmp pusha adc and xor inc jmp fadds mull pop dec mov inc (bad) cmc call add jmp mov cli pusha mov xchg dec add test je loopne mov dec enter add ret or rcrb xor mul bound sub lods dec push and jmp scas (bad) (bad) mov lock pop mov sub push shrl cmc xor imul pop pop sub cmp and cmp add mov jp or (bad) out inc jmp aad mov stos xchg ss (bad) cmpsl xor jnp mov cmp fs lods dec (bad) ret sub call or xchg lret iret jl (bad) loop xchg ljmp cmp (bad) into or leave inc test dec sub mov and das pop mov scas adc (bad) lods and cmp imul inc shl lock es mov loopne in inc add push lret dec cld and outsb aad mov fdiv movsl mov ds xchg and outsb xchg or pop mov pop push push mov imul sub mov push push jmp mov jle addl stos aad rcl mov les xorl mov xchg push sub shr cs rclb or mov sub and xchg rolb cwtl les mov lock (bad) add sub adc adc or insl sarb insb mul xchg and mov and push push pusha push loop sbb mov dec repnz stc movsb repnz pop popf jbe sbb xchg mov sbb out add ds push orl (bad) fimul loopne add imul jg sbb jl cmp fisub adc add mov jo push arpl mull mov test cmpsb rclb sub mov nop xor pop js push push cmpsl jns imul mov lcall jmp std pop lock ljmp adc rcrb outsl cs xchg sbbb int jb push (bad) hlt push stos rorb mov dec scas mov mov cmc pop inc xor xor sub xchg or or (bad) mov sbb inc xchg jo daa test jb ds dec adc stos adc out add push data16 imul sub xchg (bad) scas popa adc xor das or call dec cwtl pop daa addr16 and push mov ret add addr16 adc pop pop rcl icebp xchg outsb lock lahf push jns dec jle pop sbb jmp adc iret push scas cmp push mov xchg fisubr repz aad int3 jmp push adc jnp or lcall loopne mov sbb mov subb cmp pop dec or jmp pop ror test repnz or gs out addr16 insb pop pop (bad) (bad) outsl xor popa dec dec repnz jp rcll adc cmpsl dec mov push pusha add clc sbb or jnp cld pop int xor pop add inc mov push pop cld test sub jmp inc lods jno pop and mov ljmp fnsave and fs push push mov movswl adc add pusha or adc cmc jns outsl dec xor fs push pop mov cmc test push push or cltd sbb imul dec adc sub out loop pop cmp pop (bad) das push daa imul add add test mov loop shll (bad) or sbb inc mov push jmp stos pop sub icebp push sti cltd (bad) sub pop mov or or (bad) aam xchg lds (bad) ja mov mov aas jp cmp inc ret dec or jne xor int sub and or inc or mov sub es pusha pop or (bad) cs lock mov neg das je hlt jl xor pop stos hlt and mov add (bad) inc in jnp movsl push sarb jle or adc and xor xor sub loope test mov (bad) dec sbb mov push lea mov nop and lret dec add or mull pusha sbb imul dec mov dec pop ret bound push or jg jge push jp dec sub xor cmpsl adc pushf or icebp aas jne inc pop orb pop cltd aas insl xor or push adc fnsave adc adc inc pusha mov adc dec push mov test sti call sub pop cmc mov xchg mov dec push repnz adc jbe sbbb xor add mov imul int pop arpl dec cltd lds dec mov dec rcl or inc out in push pop xor shll cmp inc xchg pop and push mov mov ret pop mov xchg pop fbld iret inc adc push popa pushl push imul aad mov pop adc xchg dec mov pop xor in push arpl stos sub dec dec push mov pop push and loope pop xchg sbb jmp xor dec sub js nop dec add xchg jmp jmp out add push push pop inc push movsb xor jmp pop dec rorb jns incl xor add leave into inc add rclb ffreep pusha add pop mov xor add pop je aas adc mov and jns push mov sub sub cld mov loop popf cli pop push add cmc inc or jg aad rorb add push mov loopne push jmp sti pop (bad) and xor cmp out or push pop hlt ss ja dec xor enter pop jmp lock mov mov push add (bad) das fsubs (bad) test cli dec out mov dec test mov movsb mov mov adc cmp xor fisttpll jne mov pop mov out mov cmpsl pop pop push es nop fmuls pop push add sar int3 das popa inc dec cmp bound test xchg and mov xchg mov shrb mov fldcw aam jmp (bad) or mov jl and mov jne sub (bad) add cwtl repnz lahf pop inc push jmp mov test arpl std add push push divb jmp mov mov vsubps pusha cmp xor lret push les mov pop sub test popf out stc test test mov xrelease add adc lock loop imul sbb nop xchg inc dec insb pop pop int inc dec sbb lods je dec sub xchg dec incb add mov pop movsl in or not xchg add stc xchg out nop jno int3 jo mov ret push in fidivr jno enter xor cmp fnstsw mov pusha add das sahf lea pop mov sbb das dec push js pop cmp push rep (bad) cmp jge add mov add inc (bad) and mov idivb add pop das push aas mov stos addr16 es sub (bad) aaa xchg jge xor jmp dec pop pop dec mov xchg xchg mov mov das lahf rclb lret mov add jne clc pop pop jp jle iret adc mov inc inc mov adc rorl ror jmp pop into inc dec push aaa fisttpll in in push jo and shl add test mov inc xor daa push test data16 inc or inc add loope cmp or push mov jae gs add or outsb or push and lock cmp std push test xor popf mov lret xor outsl inc xor pop pop bound stc or cli imull in leave repnz or add push and stos inc jmp adc push scas sub aas xchg or les ja or iret (bad) jl inc pop (bad) lods testb ja mov in push mov xchg push mov adc popa mov mov bound push cltd rorl subl and ja js std sbb push pop mov sub popf cmpsb icebp sbb add adc cmpb mov dec shlb push xchg pusha jge mov roll mov test push subl fwait cld cld cld xlat mov jmp mov daa out adc js outsb xchg mov pop sub (bad) rcrl sbb mov jmp mov loopne clc movsl mov insb and lock jns xchg (bad) icebp lret pop sub adc sub sub dec dec jecxz xor repz cltd adc push cmp mov cs adc dec clc mov xchg mov mov mov adc adc push dec jg or fsubr popf cli mov and pop adc push jmp mov xor bnd or inc jl iret push (bad) dec mov rcrl push or ljmp mov push nop pop neg push cli mov sub add lea add cmp js scas mov push pop xchg mov out inc jl,pn push mov mov ret adc ds sub lds add mov push inc add pop int3 mov pop xchg iret push sbb fldcw ret imul cmp sub and push adc arpl pop (bad) sbb dec cmp push dec mov push in aam pop pop shll mov add pop pop outsb xor or test lretw shll jns and or push pop add jecxz jmp sub jne addr16 adc pusha mov or mov cld push out dec jno add xor in pop dec movsl cmp or jne dec jge mov inc jmp lods hlt pop xor push mov cmp lret adc lods (bad) fstl add jno sbb inc rol or cmp xchg fisttp (bad) xlat add ljmp and jg push rcll push fcoml push push jp daa cmp inc rolb mov (bad) cli nop mov and lahf pop movsb int3 mov cmp loope cltd xor push and lret shr xchg mov popa sbb test jmp or sbb das int3 dec jle pop sub insb mov add movsl or xchg clc jnp inc hlt pop loope xchg popf push aad push sub mov push xor not incb or punpckhdq push jle xor cmp ret inc pop jmp pop push mov dec inc (bad) sub in pop push xchg jne xorb sbbb add add or popa inc or frstor sbb adc dec xor push stc int push pop clc mov lods adc ja,pn sti xor ret push mov imul pop xchg je sub nop sub in push shlb push pop aas mov mov sbb rclb xchg (bad) fcmovnu add pusha sub icebp addl out enter and lock or imul mov jle or jae pushf or push das and pop sub in mov rorb outsb add xadd add frstor inc nop jge add inc les shlb nop pop and inc ljmp mov lret fs adc mov xor jmp pop (bad) jg inc (bad) dec call jo cli lock push scas iret mov imul pop mov lods add add or movsl push mov jp sbb xchg and mov or push cmpsl jmp cmc sarb stos adc adc mov scas adc sub pop ds push push jmp flds xchg popf mov fwait lods and jle cmpsl aad in pop adcb adc cltd in popa sbb push lods fwait mov test adcl and xor jge movsl mov adc add jne in mov add push jmp scas cs fwait mov pushl test (bad) add or pop mov push ja (bad) insl in std push (bad) sub sti insl or out lds sahf mov pop cmp push and in lods hlt add mov xor fisub add adc push in xor scas sub add (bad) jle mov or dec mov imul mov adc mov iret out cmp push push (bad) not or xchg (bad) lock jmp aam out loop ffreep mov out inc adc (bad) in into mov adc decl cwtl inc mov cmp jp pop in jecxz jmp lds test shl sbb sbb jnp daa jne jbe ficomp in les imul jae dec inc mov mov scas and jb rcll add jge icebp imul cmpb int lret push (bad) repz jmp sub pop loopne dec pop clc popl xor jmp loop adcb outsb xor lods mov and add xorl mov scas push push adc pop mov inc lods pop movsb xchg or sub push or pop mov pminsw pop xchg and sub mov cs mov push mov es mov inc jb sub in xchg pop push (bad) cld sahf rorb push jg repz xor lea mov call or xorb pop repz cmc iret sub pop sub insb dec lret mov xchg (bad) xor adc jno add jo test push add pop jne mov nop push jmp push or ss dec mov push jmp jle pop (bad) push and push and dec sub adc jle addr16 ret loop icebp (bad) sbb mov inc addr16 cmpsl mov add mov push addr16 sub or aaa aad and jno test xor or aad fsubs icebp pop inc adc pop push mov jmp fmul in jmp scas add ja popa mov les shrl push hlt mov adcb adc inc sbb ds adc adc pop aam adc add outsl arpl adc sahf push mov jp addr16 or push (bad) jmp inc sbb sub jecxz inc pop push mov sbb jmp dec mov fwait push push popa and cmpsl inc fisubrl test rcrb add and scas sub lahf scas xchg push aam cmp dec mov mov inc mov xchg mov test push or jno jnp sub push sbb jae jmp mov mov or scas sbb push pusha std lods pop (bad) xor push fbld in jge xor jae popa push ds add test int3 outsl aad ret push (bad) out add push movsb sub scas lahf gs mov pop fisttp ret cmpsl (bad) lock int3 mov iret add (bad) xor dec cmp cmp jbe xor jp loope cmp xchg or xor sub dec add push leave imul repnz mov (bad) adc in add mov inc push cmpl push test add jmp pop movsl cld cmp or xor mov popf push das inc and jg cmp dec mov cmpsl loop push mov xor js repnz out addr16 jo outsb movsb fstps hlt test jns push (bad) dec fldcw and add pop out das mov add clc mov inc popf jle popa jmp inc mov lods mov cli gs pop dec mov aad test insl cmp sub cwtl add pop lahf inc scas dec std insb pop fs sbb and or cmp neg xchg dec lret push dec add xchg or xchg subl xchg dec pushf rcrb sar xor (bad) out addb lahf rclb gs loope mov in pop and dec mov cmpsl push push or mov fwait mov jmp sub push sub pop sub pushf dec aam mov inc pop push (bad) jmp push mov loopne popa adc iret mov orl push call test mov or fmull mov dec inc in les cmp lds insl shr popa pushf hlt das lods icebp xlat lods mov in leave xchg stos xor xchg xchg push xchg cmp push xor loopne mov jp arpl push inc ja jg and or pop mov and je push jns jle aaa jecxz outsl push mov (bad) mov out jge xchg inc roll dec lds add lret ret test dec bound inc adc or adc adc jle mov add hlt flds sub mov cwtl fidivr or call (bad) cli mov lea sub adc sarb outsb daa jbe (bad) rclb push sbb push dec jge or insl test sahf or xlat in dec pop call jp pop (bad) std (bad) jmp scas push or test sub xchg add sbb ds in scas in cmp in (bad) loopne dec pop sub or fisub add cmp in sbb push inc insl fist (bad) xor push add sub rolb cmp fadds push or push push sbb add mov ret xchg cld sub xchg testb bound jge push stc andl das loop insb push xchg popf add xorl mov mov sahf (bad) imul mov jo pushf fsubr jg pop pop inc mov leave xor inc xor movsl mov pop popf dec push gs push cld jl cmp and mov and adc inc xor sbb sbb inc push shlb mov inc cmpsl cmc sbbb jmp dec je or pop jo mov mulb sub fnstcw addl imull push ljmp jge adc cld pop (bad) mov jmp jb or mov ss lahf push ret adc aam out xor lret lea into je or (bad) dec mov dec mov mov orb pop and inc and push push stc sbb push or adc mov cmp mov or inc fwait (bad) fbld pop sub add pushl in add and jo push add in insb jno pop cs imul push jl aas or pop cld push mov jg push and lahf dec sub lock (bad) lods aam jae scas add das xor adc sti shr xchg mov in cld mov inc (bad) stc fs add fadds ja mov out adc push or jmp pop add mov addl add adc repz mov popf push test cmp add ljmp push push or cli rorb sbb ret popa cmp je xor push push pop add push lahf inc inc jmp lea push js or mov (bad) bound inc data16 xor mov fs mov loop lret pop sub mov leave push sbb pop cmc andl add jmp in mov loope xor adc inc inc ljmp inc pop popa daa push mov inc add pop arpl add pop xor mov ret pop cld or sbb pushl adc cmp loopne add (bad) inc or stos test adc lret push dec out js bound adcb mov scas add sub push add mov xchg sbb and jmp subb dec pusha or pop lds aas or add aam daa inc cmp and push popf add cmp jge aam jl jnp lahf aam inc xchg repnz popa sarb mov ss outsb loope jmp ss mov xlat loop adc adc push sub mov lret mov add sub push out repz and repnz adc cmp pop ret or dec push or mov popa ret sub cmpsl xchg (bad) sbb add pop cmp ret xor xchg adc outsb push adc jbe je (bad) and or or das ja push jecxz (bad) aad jns mov aas aam negl or add adc shr jle jae and popa mov cs cmp lock mov jo adc call adc sub pop xor jb mov lock enter or jns (bad) fildl xor lahf arpl shrl cmp pop lods ret mov sub sub pop je es inc out scas xor cwtl inc adc shr in add cwtl sbb pop or sbb pop lods rcrl mov and dec pop push rol sub dec xor and and data16 daa add xor push (bad) or pusha dec inc loopne xchg aam in dec xchg xchg sbb xchg ljmp mov xchg push jmp pop andb dec inc subl and enter dec call es aad xor test lods rorb jmp add sub hlt sbb or cwtl adc enter mov (bad) daa std call ret aaa aaa pop nop repz shr add inc pop rorl mov test inc out xor fadds and or and add pop sbb or jb pop adc fcmovbe push cmpb push xor or sbb sub pop enter mov rcrl pop nop dec or cmp adc hlt aaa push (bad) out sbb sub fmulp les xor and cmp pusha loopne sub popf stos or push lcall popf xchg pop lock push push push (bad) outsb or jp sbb push dec push mov and add sub xor mov mov dec decl scas cmp mov dec (bad) xchg mov dec fs and add ror sub insl or aam adc movsb jns sbbl dec shl nop cli add loope add in insb inc jmp sub je or inc pop aam mov jmp test shrb push add test andl adc cmp jmp mov std (bad) mov push add dec inc and enter cltd stos cwtl in sub mov add pushf dec outsl imul push push inc mov loopne mov popa in out jnp dec and in jl aaa pop inc lock imul pop ret inc jmp test push push mov clc scas pop xchg dec add jp sub in pop mov outsb pop ret leave jbe (bad) jnp push jp pop ret push lock sahf lcall notl cwtl sbb xor loope cmp jb roll out bnd jg add push bound adc lcall add or es jmp add add sub cmc out lret mov sbb pop test clc imul adc mov dec push mov push pop ds pop adc fistl pop jmp pop pushf mov adc jmp lea inc lret out dec fstps jb mov jnp or and mov loope xor mov (bad) movsb or mov sub dec xor nop das mov inc push jmp push pop push cmpsb shr lcall sub cwtl movsl stos fdivr jmp cmc dec call xchg mov pop loop outsl nop xor mov dec mov and cmpb adc sub pop (bad) je mov mov mov or imul call cli add out xchg inc dec fistl shr xor hlt jb shr push (bad) mov push adc (bad) in add addl mov frstor xor fstl enter arpl or cmpsb or das mov outsl xchg sub xlat inc cmpsb daa mov jo out ficom jbe push pop jge lea mov mov and out inc or mov outsb or mov inc dec pop ljmp or inc or jle (bad) pop and les aam cmp dec rcrl pushf jmp dec (bad) jmp xor adc cmc cli cmp outsb loope cmp xor dec push pop cltd idivl xchg dec adc sarl popf mov mov or and pop mov add mov or in fsts popa int push cmp outsl mov add push in cmp or shll sahf mov jmp pushf sub and fcompl add lods push inc jmp cmpsl pop jb add mov xor sub cwtl mov add mov inc out in mov cmp sti or (bad) push xchg ret (bad) push jmp test scas fsubl jmp or test mov pop dec out pop (bad) mov ljmp dec int rcr sub jmp add stc sbb push xor xor in xchg (bad) cltd addl aad addr16 scas loop xlat roll sbb adc inc jae push push (bad) int sub mov xchg incl imul cmp hlt or push repz mov fsubrl xchg pop pop into hlt cmp shrb out daa dec shl adc mov push add stos sub xor adc loopne and xor mov cmova inc or mov dec cmc sbb sub repz and adc mov mov xor adc repz pop (bad) cld lods adc shl mov xor sub in mov mov mov pop clc jns mov jns test jne fdivl sahf or mov scas pop pusha cmpsl dec adc data16 pop pop and add pop sbb data16 scas jge add and pusha decb decb fstpl add and jmp add xor repnz shll mov xchg lock push add faddl jnp loopne and add inc inc das fcmovne sbb push adc jmp pop cmp fisttp mov lcall mov push sub jecxz inc ret dec cmc and repz and pop not cmpl xor sbb hlt jp (bad) fild mov dec dec scas rcrb repnz add out mov in xchg add mov mov out jl mov sbb dec xor inc push jo sub es roll mov gs ljmp leave push jge sbb (bad) (bad) and icebp dec out ficom jnp xor mov pop mov pop mov int3 cmp mov (bad) hlt and lret iret enter or and or or sbb lret jmp jl add xor lahf imul xchg pusha and test adc add add loope daa imul stos add (bad) stos push mov (bad) pop cli daa rorl (bad) jns add xor xchg bound test sub mov mov lea mov cs adc add shr push fsubrs inc ret int3 or pop fldl xor jnp xchg ret and jmp jge mov inc pop pop divl and (bad) dec add loopne jo bound cmp test pop out fmul jmp lds adc lods mov mov mov subl push sub lock and inc add jo fs mov adc inc xorb or inc pop js and or fcomps inc jl push pop sub or test fs repnz xchg and pop push aad js jecxz loop or sub add out push add cmp mov inc mov loop xchg pop or pop loop lods adc movsl add push test mov cld mov or adc mov mov das push fsubl push sub outsl aaa mov enter sti and nop shlb xchg call out jle push xor cmp pop rcrl out stos inc into and mov ds fcomi rcll subl jno push out xchg cld add add xor inc pop xchg (bad) sbb fadds xor das jg mov xor (bad) js pop adc nop loopne fwait enter cli cmp mov addb pop fsts cmp adcl push cmp pusha lock xchg sbb icebp mov sub decb sbb mov in add insl pop sub mov pop bound jge adc fnop ljmp ret adc out pusha mov mov ss icebp popa jno inc pop daa push dec jno or push fcoml das in icebp pop fildll cltd mov insl cmp test hlt into or fdivrs push xor adc jb add pop inc fsub or or mov andb dec sbb lcall jno add int3 subb jo mov out std cmp dec inc out add dec fildl push inc sbb xor popa pop push push or jmp rorl test rcr ret gs leave jns mov loope repz mov mov add inc and sbb pop pop add stos sub cmc js or mov test cmc pop pop sbb jp insb incl inc dec inc and hlt inc leave or es and jp adc loopne lret inc xchg or bnd sbb je add insl cmp push xor jno cmp mov jns push pop and ljmp sbb push adc adc push jge out dec pop pop ljmp mov stos mov and pop or jle push jne mov jmp into cmp lock inc sti les mov xchg or push hlt mov arpl movsl add sti orl das dec fsubl (bad) mov repz adc dec inc jl sbb or daa xor ficoml or jmp sbb adcl rcl sub sub adcl xchg sbb push xchg push in (bad) es or adc or pop mov push adc test mov addr16 loop dec pop pop cld jae add lret pop outsb push jle adc dec jecxz scas or popa or sub or icebp adc add push adc push mov mov or daa loop loop add push je out mov sub movsb xor ja gs out xor push or adc inc fnstenv jmp dec mov and fldl pusha bound dec dec or shl add hlt dec gs inc movl push out data16 jmp loope pop imul fadds or stc pop jnp xor dec dec cld xor sub pop into xchg lcall pop stos xor xlat popf rcl cmp add jg nop (bad) jmp mov dec inc cmpl jns add pop movb js ja jle adc add (bad) xor cmp pop push daa lret xor pusha sbb sbb jae in mov hlt mov inc ret cmp imulb ja (bad) or xor loope daa push repnz mov orb (bad) movsl sar call mov adc sub scas cmp push (bad) roll add push lock sub cld add pop add mov (bad) and cmc and xchg pushf mov rcr jmp sub adcl gs jno inc push mov jle pop sub sbb ret ss adc pusha addl fistp jmp pusha jae add jae das jmp dec inc mov out js add or dec pop pushf push xor and xchg repnz nop xchg dec jmp icebp jmp pop mov pop cld outsb or adc pop sbb test pop pop leave dec out mov or stc push mov roll enter hlt push lcall cs mov cmp jo orb mov ret and movsl pop jne (bad) dec mov push mov sub pop jae pop xor dec addl cli push in push call into xchg stos lock stc push jmp js sub cli or pop xor pushf sbb mov imul inc popa jnp inc add push add cs dec pushf scas movsl cld js bswap jbe jae xor ja inc shr bound cs (bad) bound pop icebp outsl or outsl push (bad) fwait hlt dec jmp dec loop rolb loopne jle inc sbb add out jg fldt aas adc stos into stos pop test fcoms pop push inc jnp mov mov and out adc nop xchg push push (bad) jb js add jmp sub push fucomp dec enter cmp mov (bad) js adc (bad) icebp push push test loope adc rorl jp adc cmp arpl mov mov pop mov dec clc mov test push cmpb inc cltd ret pop push in mov mov shr cltd out clc iret fdivl sub xlat pushf jp sbb inc fldl mov imul pop out cmc sti rdpmc fwait test xchg mov add das sub mul ljmp out xor out inc les and popa dec sub loope (bad) shrb in in leave scas or lahf ret mov iret inc dec jnp je push nop cmp sbb pop mulb inc lods jmp sub sub mov mov xor sbb jecxz mov scas push (bad) mov dec testl or push cmp (bad) xor in mov imul loopne pop jmp push xchg pop imul unpcklps dec add mov mov add adc arpl cmc dec aaa dec jmp mov daa pop shlb and jae inc xor (bad) (bad) push cmp sub xor scas lods cmp lea stos imul imul popf clc (bad) push add (bad) mov dec dec mov nop (bad) mov or ret push add add popa mov aas xor ficom inc adc out cmpl sub xchg xchg dec mov dec cltd cmp jno push arpl fwait jbe and (bad) or or bound dec arpl push inc xchg in mov mov aam add or inc xchg pop adc xchg mov aad mov cmc inc rol cmp add dec mov or pop loope or mov icebp (bad) cli sti fiadd das lret (bad) pop pop cmp inc add data16 popf nop xor push jne popa lret mov sbb xlat popa jne add (bad) (bad) pop dec je xchg sbbl (bad) sti inc dec pop mov in dec aam mov lea mov sbb in or and scas rcrl xchg sbb pop push mov push cmp mov js jb xchg or xchg mov sub sub push or sub add adc call push and pusha dec in mov (bad) xor pop pop daa rorb adcb sbb inc sub xor insl fwait shrb push cmc cmpb aam adc adc pop dec mov push push out mov imul adc mov clc cmp lcall icebp or iret mov push pop xorb sub pop inc aas out daa push in push repnz dec lret or je jle add or push jle push and shrb bound repz ret or loop jg pop sbb cmpb mov jmp shrb push mov cmc jg insl xor xor mov inc sub arpl xorb add arpl rorl lahf out xor cmp dec scas sbb sub scas add adc mov es xor scas dec jg daa inc and push mov fisubr dec jns xorl push sub push add mov xor pop orb loope rcrl sub dec loopne mov imul rcrl or xchg pop mov pop adc outsb mov jg adc outsl enter inc lahf (bad) and mulb and xor mov inc xor mov cmp lods fs pop jnp dec repz jecxz or inc inc (bad) test lcall movsb sbb adc sub xor lock clc xchg popa (bad) popf stc pop sub or ja ffree test sahf mov pop add imul jmp xor inc fwait arpl imul fdivrl rorb (bad) clc mov out repnz adc or fldcw pop add add sub mov sbbl adc clc inc popa dec fcom out shrb int dec popl add je mov sbb jecxz daa sbb inc outsb xor mov rorb sbb std cmp les mov inc mov add dec inc (bad) add and cmp lret scas pop mov icebp push cmp sub xlat shlb mov cltd inc jge mov out hlt das jnp and aaa lcall sbb add cmp in insl in movsl jle or nop push add and push jmp rcl lds xor leave rclb mov and (bad) ficom fs (bad) dec xchg pop ljmp jecxz cltd lea sbb leave sbb pop and pop dec xchg (bad) pushf stos lock push dec scas xor push xchg out push xor subl xor lock fcompl xor inc imul ret lods call sbb out fisubr dec lea ds pop pop adc ret bound sub add iret dec pop lods loopne xorl leave jmp ret daa jmp leave (bad) in je inc repz xor js dec cmc xchg pop hlt data16 jmp mov arpl pop popf pop rclb cmc int3 cmp mov sarb and ljmp pop fsubs loop pop jne dec ret ljmp add pop or mov pop inc and sar push es xor (bad) sbb or adc rorb xor or add or into and push mov cmpsb mov dec and in ljmp (bad) clc sub lds arpl jo mov xor sub pop add inc sub push loopne and or out dec adc xor das (bad) dec movsb or ja and xor testl leave cld push pop pop sbb mov sbb mov xor out pop cmp sbb sub adc repz mov push negb or pop cmp orl add stc push or es pop ret dec jl (bad) sarl adc mov adc (bad) rdtsc std pop push pop das ljmp sub lret jmp rol in pop or jnp popa jmp out and mov dec pop lods pop pop loop (bad) sbb sbb mov push je add into jmp cmp std movsl stos pop loopne das or pop or adc adc push fwait adc sub sti jb data16 sub jmp add pusha pop lods dec and inc out sbb neg add add pop jnp test or xor cmp lods es (bad) pop (bad) adc add adc jb int3 jmp adc push xor test in cmc cld and pusha fbstp fist mov cmp jge call std icebp jns pop mov or and push rolb andb pop push sbb loop gs push mov inc pop fnstcw repz out into or dec lret jmp shr mov (bad) pop or lods je mov xor pop add mov ret push into jmp mov mov add ret add mov out cli nop (bad) scas inc repz xchg jmp or inc cli cmp insb push xchg add setg sub std out add in pop mov ret dec and or cmp sahf inc in pop loopne imul push xorb (bad) sub pop incb daa jmp push push cmp testl loope xor cmp sub leave es sub xor inc js (bad) cmp out push xchg or xchg sub or push pop daa add pop inc mov inc sbb adc dec in inc xor or and movlps and mov sub push mov insb or outsl jae pushf scas pop jnp out pop or jecxz xor lds sub mov or or les add in push ja loopne and mov and mov mov sbb hlt mov mov inc jnp push das insb mov and or (bad) lods adc (bad) fistpll dec adc fisubrl mov testb std clc enter call ret pusha daa (bad) sbb jle mov testb pop loope pop xor jno xor es hlt inc fild icebp sbb leave jnp inc roll push sbb jno stc pop (bad) enter loop cmc je sub push out mov fistp (bad) xor cmp xor push rclb adc mov sub inc aad push mov adc in ss dec push aam or jns pop out mov mov pusha mov neg add mov out push in pop outsl loope leave mov sub pop out lret sti cmp mov jns (bad) cs lea ljmp jno mul outsb mov and test leave mov movsb add add (bad) dec test clc aas sub jg dec jb mov push das cli ja jb test (bad) xor and daa add dec inc je jmp cmpsl push jecxz gs lcall int call (bad) les loopne or jmp mov pop push cmpsb out mov lea mov lcall cmp pop mov mov jne or pop in push stos incl jmp mov push push daa inc (bad) out mov xchg loopne je or push push call test scas cld call or sbb sub mov push mov jmp sti or cmovns arpl add jmp inc mov xlat mov addl jmp jmp jae lret xor aas stos jle jbe lds outsl xor pop shl pop or jmp fld fs cwtl or mov movsl nop shrl cmp jb dec loop jge xor es clc push (bad) fldcw push sbbl add in gs xor pop mov add daa inc cmpsb ja scas lahf dec inc adc mov inc xchg cwtl cmc and pushf sbb jmp dec fisubr sub jmp mov jbe andb movsl cld clc mov pop fidivr imul cmpb sar jns mov insl vpaddd xor cs mov js lahf cli lods and xchg sarb xchg insb ja jmp adc inc xor mov dec and sahf jne jmp je pop cmp mov add rorb (bad) inc je dec push int decb pop daa popf fs jecxz inc sbb dec jmp cltd push mov inc push in lods xchg scas add and loope push and int sub xor outsl ljmp fmuls iret dec adc adc xor sbb add popl xor pop ds scas adc add fdivrl hlt inc mov out lods pop inc adc leave sbb inc mov cs sub pop es inc das negl xchg ss pop xor dec mov cmp push cmpsl movsb jl inc or adc lea pop push dec lahf pop pop les inc ret bound outsl cld inc adc fs sbb jmp lret negl shl cmc inc push out jl jb mov hlt insb push jmp dec sub sub pop lahf ret jae pusha pop push push push sbb push loope,pn iret outsb mov sub pusha dec or std not mov pop push (bad) cmp cmp (bad) (bad) mov imul jnp cltd rcrb add xor xlat inc sahf aas pop xor jnp xor in inc dec out jbe lock mov cltd ja push jp jnp shrl inc inc push push inc sub mov rorb mov push in xchg pop xchg icebp addl jmp mov jp xchg dec or sub lcall sub cmpb sbb adc loope sbb add popa pusha dec js jbe add cmp aas sbb add push cmp addr16 cmp in inc ret push sub (bad) gs lret and jecxz leave jge emms pop pop xchg or jmp cmc addr16 cs dec ret cmp dec cmp aaa and std movsl add imul add mov sub test or push insl jge pop mov add (bad) shl aas gs push sbb testl pop hlt aad dec ficompl orb push lahf inc sub fadds mov push fsts sub jb lahf push lcall iret int3 mov sub sbb adc xchg imul xchg (bad) scas pop pop lret jmp ficompl and mov or sti jnp das into sbb inc fstps pop pop lods add jb mov imul add aam adc scas shrl outsl mov cs fwait iret aam dec adcb pop push jge or inc push aas enter push sarl xor js add loopne clc push shl push dec (bad) push mov push test das mov movsl inc jp jl cmp jp and in or adc sbb cmp jecxz imul cmp push lret in mov icebp mov lods js out jle sbb icebp xchg xor inc popf pop push mov add in outsl mov pop js jge ja dec cmp mov test stos pop jno (bad) mov sbbl mov dec add add dec repnz or sbb adc pop shll dec loop pop pop out cmp addb jne cli scas dec sar cmpsb push push ret push lret mov test fmuls das xchg inc xchg push mov mov inc cmp daa sti inc mov push adc xchg jns insb hlt add mov (bad) jle test ret jnp jg loop xlat ret lock dec rorb testl arpl jns jle push ficom jbe sbb repz cmpl les jmp dec xchg daa test nop dec add sub leave sbb aas sub das fdiv xor out js mov das mov xor lods push lock (bad) push cmpl aaa adc add adc jb mov (bad) pop jmp bound or jae pop (bad) mov lret xlat jo sarb sub int3 fimull adc or shr jmp enter sub cli lock push nop inc or outsl aad mov or pop test push adc and cmpsl dec arpl jmp popf cmp and push imulb add sbb dec jmp mov sub fisttpll iret notb jmp nop pop push xor pop mov rcr movsl es pop or shr ret pop jg pop sti dec jb daa cmc jl in and aad iret jmp xor faddl cmp pop popa push out mov mov dec add pop in scas push mov add sti lds sub nop fldcw rclb jle and iret mov cmp push adc lret (bad) mov gs and (bad) aas lods pop mov insb popa add or xchg mov and mov (bad) push std mov loope stos dec (bad) popa pushf into fcoms jg,pt jp daa popa scas cltd (bad) movsb repz in sbb ficoml mov or sub nop cmc paddsb lret jmp mov or add pop add fsubrs adc cmp jo xor daa into imul pop clc sub data16 (bad) add fisub mov push xor add push not cmp popa sbb inc cwtl sub inc fistpl movsl sub loop jno rorb ret das adc add ljmp or ds outsl add in push lret data16 fimull sub mov out divb or or push jb and lret rcl ja mov loop jmp sub push or push adc testl mov or dec xchg push mov adc test das lea inc lahf into add xor out adc xchg push imul add orl push sub inc cs jmp hlt push inc repnz dec push test xchg add cltd sub mov sub jl insl or push movsl mov adc dec arpl pop imul mov gs cld mov out sub stos push aaa fisubr jnp (bad) push or jnp mov incb cmc in cld repz (bad) jne into and or sti push jg fimull pushf shlb (bad) mov or clc imul lret mov dec pop xor and popa and mov sub dec cmc pop jge pop add sub outsl insl les mov xor ds push xchg mov push xchg jmp imul repnz out jmp aad jmp xchg inc pop divl cmp xor add dec pusha jnp and mov xor mov js jne cltd leave lcall and xorb repnz test call shll addl adc lock push xor sbb stc xor inc int3 out popa inc mov add nop (bad) pop jb rorb ljmp dec xor sub cli aas mov mov cmc out xchg stc in fist dec inc stos sub adc sbb mov icebp js (bad) pop mov les (bad) (bad) stos and aad inc mov daa cmc clc test cwtl lret xchg pop sbb lahf or add mov add push or sbb push aas xchg lds cmpsb imul js xor mov (bad) (bad) lods jne mov add or movsl add sbb push inc ss jle imul push mov cs pusha or arpl cmp xchg jle and add push imul push mov dec inc cmp pop pop add xlat dec loop push add (bad) mov mov in out sub ret movb or pop in movl xor adc aam test adc loop lret push jno pop (bad) fild pop in sub iret (bad) push jmp push push dec popf and and cli aam jp ret sub cwtl (bad) mov cltd negl movsl sub (bad) aam add mov push aam popf dec rcl inc pop push fdivl (bad) mov jns jmp dec or jmp pop loope je add jmp or (bad) sub test and cmpsl jne leave inc lds negl cmpsb scas adc inc push pusha push pop shr fwait adcl xor (bad) push dec loopne push sbb inc pop mov xchg (bad) or jmp leave pop sbb out js and push or sar ja xor dec nop outsb push mov push cli (bad) je pop and adc pop fcoms lds pop jmp mov (bad) xlat rcl mov jge cmp aad inc (bad) test ljmp (bad) (bad) sti popf mov and dec mov (bad) jmp pop movsl nop mov fldcw jns or iret (bad) push add neg enter jecxz les jmp mov imul clc loop or (bad) mov cmp lret push or (bad) jmp mov dec pop add xor (bad) lahf pop movsb mov orb lds adc adc ljmp iret dec xor mov inc push stc mov inc add icebp and ds sub adc xor adc js mov pop push push repnz mov push mov inc shrb cmp push fs fmull test ret ljmp adc mov pop cmp out or loopne pop push push inc cmc mov pop sarb and mov bts pop sbb cli push pop out test das xlat xlat je xlat inc stc push jno call pop xor flds add push cwtl and jmp mov repnz cwtl or jmp and (bad) xor adcb (bad) mov call clc jle das sarl cli jo imul mov addr16 xor test loop enter adc aaa mov movsl adc fidiv lock repnz pusha mov jns xchg jmp jo pop jmp fdivrl movsb xchg stc pusha out cltd je add jmp sbb dec sub push gs jmp or sub add sub and xchg daa xor push shufps xchg daa repnz mov pusha add aas (bad) cmpsb pop add inc xor mov sub add mov xchg lea jl add in fidivrl sub loope push sbb pushf mov mov mov mov mov push mov jno pop mov xchg sub loope inc add mov enter pop shr pop adc inc xlat nop mov pushf jge idiv mov jmp sarl jne push ficompl mov adc push inc pop jno add sbb sub lret jne push int jmp dec mov and sub pop or outsb mov jecxz dec cs out xorb mov aam aad push xchg scas sub hlt addb loop sub or xor jnp sti cmp iret in xor stos pop xlat cmp mov sbb and cs jb push ret imul cwtl pop sub and int3 add jmp mov and mov jmp lods mov in adc mov cwtl das shrb adcl in ret adcl lret lods popa fsub inc adc jns fwait mov pop aad add xlat (bad) hlt shr or push mov mov fsub ja mull push pop jl (bad) mov adc dec gs sti mov jecxz jne cmp or pop movsb bnd lea hlt xchg jns (bad) jl je xor or mov cmp into icebp shll imul mov cld test repnz or ds lahf pop fisubr jmp lods adc jg bound cli test stos sbb pop jbe in lock sub aad inc add push jmp jne pop push pusha leave mov jle xchg and push sub and mov inc sub jne fwait cmpsl push mov or insb insl popf lds test sbb add aaa inc inc sarl or push mov xor push xchg repnz addr16 jl inc sbb pop test data16 scas jge mov pop popa sti and shrb pushf mov loop adc (bad) adc loope (bad) push icebp push xor hlt pop cmc in sub pop and into mov loope inc and aas xor sub out cmpsl (bad) pop and ja or inc out mov (bad) jmp mov pop imul sub or and add pop imul rcrb mov inc sub and mov pop jo pop sub jne lahf xchg or lods and or mov stc inc cmp loopne cbtw or sbb hlt cmc and xor inc or and sbb and or add inc mov movsl pop or adc subl mov adc dec or cmp sbb movsl or push or mov fiadd jno sbb cld xchg pop cmp and nop xor add and scas inc add xor cmp lock fwait and xor add stc and rolb xorb orl in lock or orb les cmp fnop inc rol inc xor sub cltd xor mov mov and andl mov movsb mov add and xor sbb loope push daa andb adcb test adc in or xor adc lahf adc sbb adc (bad) adc xor jnp (bad) cltd fs sbb and sub fdiv faddl call mov or inc cmp or xlat mov add push push xor inc gs addr16 adc fmuls mov and dec or cltd mov out inc mov bound and add loope movsb pop int3 add in add add jp inc mov inc lods inc test dec mov push movsb cmp push lock adc in mov outsl ljmp andb push xchg mov mov stc sub or and lret leave or and xor or mov push mov sub cmp inc aam add leave push out push and or pusha (bad) cld maskmovq imull and push mov (bad) in push push ja loopne or push mov stos sub sub xor pop xor add scas add jb or add push push mov pop mov pop stos inc or add (bad) int3 add rclb std pop mov cli jns sub mov stos mov push stc jecxz roll idivl push push mov das pop adc adc inc dec jg mov mov mov stos pusha and push and in out add out sbb sub ljmp test or or lret push fdivrl mov jno scas rorl in mov dec mov jg addr16 dec mov jae sbb xor nop js pop xchg jge ret xchg sub fisttpl test mov inc pop test mov ja cmp push lahf into in pop dec cmp adc mov lods (bad) pop mov flds ficoml lds pop push xchg repz or jle dec fiadd adc sub add loopne mov push inc enter jne bnd dec and adc or mov lea dec inc pusha and ret mov add cmp adc cmp jmp ret sti mov mov cmp jp pop clc in mov clc pop add add js add ja dec lcall add pop js add test pop mov dec in shl push ds mov adc mov pop popf (bad) xor mov dec sbb shlb js or ljmp fidiv push arpl and fcoms sub out or pop std push inc pop es in mov negl stos and sbb sub and add sysret and and ds jo into arpl (bad) ja into sub inc test mov mov add (bad) xor pop ficom pop les outsb mov pusha in sub or or popl (bad) popa ret sbb adc mov and notl add sbb mov sar rcr sti ds and pop repnz or daa cmp je sub lods outsl jp xor fimull fcoms js test pop cmp test inc or and push add mov mov and pop inc cltd push or inc mov and adc inc adcl mov ljmp fsubrl insl push dec cmp sysexit shlb pop adc mov xor testl add push add stos cmpl fisttpll mov push or adc cmp jae lret sub je lock sub xlat pop outsl mov arpl add inc loope add push mov push fldenv push cmp lock adc and adc jo cmp fidivr or push outsl push mov jmp in lret cwtl daa add jp pop inc lds fisttpll roll jne mov cmp sbb lock clc pop mov (bad) roll out xchg mov nop scas adc or pop int jb mov shr andb cltd jp bound jo mov push pop add push (bad) int popa add pop cwtl adc das inc add ficom and popa cmp jp dec jg fwait or hlt cmp fistpll sub push (bad) test mov cmc xor mov push dec outsl (bad) les jns outsl call cmp mov hlt push push jns or and sub pop push inc out cmp xor (bad) das pop xor hlt push inc lahf jb or pushf xlat ss jp data16 enter and push or insl dec nop nop pop in pop add mov mov cwtl and or jno jbe ss dec pop fstl aas add in outsb rcrb int js cs aaa pop cmp lcall jl jnp or test dec insl jb sub dec test push or xor cmp inc jno mov jge clc nop out pop sub pop (bad) add jb lret or cmpps addl and popf cmp ja xor xlat loop jle inc add (bad) mov lock add jle test adc pop or jbe scas xlat adc mov mov sahf push xchg sti in aad daa cmc push mov in cmp push lret or fsubr push or mov or gs push inc fiaddl or (bad) popa push push jmp inc mov test fcoms mov push pop adc int3 add jo stos xor mov (bad) xor pop mov jne,pt stos mov jmp mov jbe mov push sar fs mov jo add jp popa mov xor mov pop adc pop sub test inc dec stc inc and add pop cltd pusha add mov sub fildll lret lcall arpl push mov hlt mov pop push push jno cmp dec test adc nop outsl and mov ficom out sub pop adc adc mov shrb add cmp adc add and jp or and ljmp or mov scas dec popf ja sar (bad) jne cmp pop jmp adc xor stc and scas add rorl sub lcall xchg and arpl fcoms jl adc outsb loope add jmp mov aad and sub mov (bad) pop std mov es mov or cmp cmp xchg idivb aas roll or pop inc or pop es cmpsb adc pop push sbb pop xor or insb fs pop jae daa out cwtl lds jne xor adc jge lret outsl out inc mov and (bad) mov jnp je daa repnz inc mov andl and std xchg adc jno mov pop push js pop xor push xchg scas adc mov icebp and and jnp scas (bad) xchg pop icebp lret cmp pop xchg pop (bad) es add add mov push or out dec add dec pop out (bad) push ret jno (bad) movsl jge xor sub or (bad) inc inc (bad) adc jbe add shrl repnz repnz jno mov loop mov insb (bad) mov add lret dec mov mov in mov mov ljmp push pop loopne push inc mov stos push add rcrb xchg (bad) (bad) or lock dec inc test pop and jecxz push fwait cs orb aaa add fdivs or inc inc sti iret std fbld loope sbb sahf mov das jbe test or add push xchg in fildll push inc dec sbb cmp std nop adc dec sub stc inc or ret int3 mulb lcall and leave sbb (bad) adc ret adc add test das loope (bad) test fimull subl sub in out mov repnz push pop inc out adc mov bound (bad) sub imul inc inc aaa mov mov xchg fistpl dec loope inc sub xor inc rorl lcall (bad) inc stos or sub (bad) push push js adcl pop xchg sub inc scas pop and (bad) cmp cmp cmc or daa mov pop daa xor pop lds leave jmp rcrb mov inc add sbb cmp scas js pop pop xchg ret das lods jns pop inc lds ds pop jbe cmpsl dec gs test xchg mov pop fstp addr16 sub adc xchg jne lret jae cmpb or cs jo xor sbb mov fdivrs imul dec push push pop cmc (bad) aaa fnstcw das mov xor pushf push add pop xor mov jmp mov push mov push shr inc xchg andb aas and add in dec vsubss lock ds fcompl dec mov nop std add mov push gs jmp pop and stos (bad) jnp neg mov xchg pop mov cmp incl hlt nop push out push or stos add dec addr16 jle push pop aaa (bad) fistpl popa add (bad) shr iret jmp mov or or scas jo es xor imul mov test sub outsl and cmp push imul fsubl in mov popa lahf jmp xor or add aaa stc or and inc or into jle sub jne inc orb push xchg xlat push fcmovb inc jmp push fcoml iret jmp xor aad cwtl ret shrd addr16 orl cmp push inc push mov jg jnp in and imul xchg stos ret pop add je andl in inc jmp push sar pop out sub loopne pop xchg xlat xor inc add jo loope test outsb cmp xlat and push daa push adc sub add or clc push fwait jbe addr16 push pop sub adc cmc sbbl adc sub movsb dec adc mov decb cmp or sbb icebp fiaddl pop push jmp sub cmpsb mov outsb add sbb cld test xlat push icebp dec pop icebp add (bad) push xlat inc xchg sti add (bad) cvtps2pd cmp push and es addr16 sub mov inc hlt ds pop scas mov leave (bad) mov shr sbb pop clc push sbb sarb push mov pop mov cmpsb adc inc jl sub push push and shll inc ds lea inc jle sbb mov nop enter mov in pop pushf xchg mov (bad) and add pop add mov loope push mov xor and inc neg cli das dec aad dec mov out into sbb mul mov cmp adc mov into push outsb lods push add (bad) call jl into pop push dec push mov sub xorl aas adc dec scas sub (bad) jmp and sub leave fisubr roll das cli dec mov loopne adc (bad) clc pop and mov das sti or sub add jp jg insb adc (bad) xor mov cmc loope lea movl xor out sbb sub push xchg or sub add xor sbb mov dec push push dec jge in mov and pushw xor and addb popf ret jle add dec stos push pushf sbb pop xchg pop std or sub push mov mov adc and jnp (bad) cld jl add sub dec shr adc push addr16 sbb dec sbb pop cmp fisttp or xchg jg mov mov repnz loop rolb jo jns xor sub and loopne imul dec sub mov pop pop push add lock shl inc rsm adc or push mov sbb mov (bad) xchg jo loope jmp insb imul sbbb lods jae fs xchg add dec push sti add xor mov xor cmpsb in pop cli stc sub clc aas mov or movsl mov iret push xchg pushf insl push dec push mov add ss das jge mov pop push test jb inc adc inc dec push dec pop inc test mov adc xor adc fbstp fldenv sbb jecxz xchg pushf (bad) add nop xchg push xchg mov mov hlt or je cmp sbb adc adc js orl mov add pop mov adc sbb lds test pop cli ds jle lds jmp jmp sbb mov sub jne inc test cmp imul pop daa mov in aaa in sub faddl ljmp mov bound clc leave add dec test jnp or mov pop and aaa sub jmp shll adc sub sub sub sbb and or sub imul sbb adc dec call xor fistp cmc adc jg adc movsb add or xchg testb subb add push add pop sti add cmp jecxz add xor jecxz outsl add pop or test (bad) icebp cwtl sub or pop cmp inc dec rclb add mov ret inc inc fcomip jge add pop inc aas push push sub fcmovnbe add push fcoml sti mov adc bound or test or xchg orl jg or in out daa cmp sub dec movsb mov call idivl mov addb fisub iret pop test or xor adcl clc or mov das dec add push pop outsb repnz jne test inc or mov xchg xor or mov rorb (bad) jmp push iret sub fdivrs adc pop notb mov mov movsl mov pop push or inc in rcll push sbbb repnz push subl adc out stos adc sub and stc or jge int3 pop inc add dec jns sub jno add sbbl sub in sbb xor sub adc cmp push jns ds sub cmp lret xor pop jmp mov cmp jge je pusha rorb nop decl outsb pop rcrl jl and popf xor das add mov mov add pop xor add xchg jge xor enter push xorl insl jno ljmp (bad) adc ret inc shr pop xor inc mov push idiv dec cmp sub mov jbe xor scas in inc fsubp sub jo sub jne inc inc inc pop add pop xor pop dec jecxz pop loope ret jns jge mov mov mov cmp adc dec rol (bad) hlt aaa fs pop (bad) cltd add push icebp mov pop call push inc jbe sub dec out dec push add adc mov sub jmp jge mov sbb cld mov jge xchg popfw pop add mov fiadd add mov sub and in dec mov pop cmp stos cmp lcall sub jl fmuls sbb cmp jle pop mov adc ror stc jae pop push mov jmp mov add imul into push cwtl lea add nop xor sub xlat mov jmp out mov out adc testl add push inc or rcrb xorl loopne push xchg inc in push idivb pusha xchg pop in cmp sbb adc pop xor pop (bad) cmc push jns or insl outsb push add jecxz xor or outsl cmp int (bad) add (bad) ja subl xchg xor in adc dec mov dec xchg adc jl out jg,pn adc (bad) or ds ja inc adc xchg inc mov sbb in mov pop pop pop push push pop pop jl cmp jno cld scas xchg int3 push rcrl add call push pop addr16 nop mov sub pusha adc test push aad mov jp popf mov scas sbb push jno lods sbb (bad) push adc add inc push test sahf sub xorl mov add aad pop jb subb and jnp cmpsl fdivrl cltd das bound notb in (bad) cwtl icebp popf adc jb and or and jo stos adc scas dec or adc test faddl add or pushf out push add and add lock add jle jmp lahf or push out add popa mov (bad) push mov jmp neg fidivl cwtl sbbb adc or sub loop das sub stc inc pop jp xlat fist int3 xchg aaa xchg lods jae test xchg sbb leave xor lods cmp idivl mov adc call iret stos adc mov in sbb cs dec adc hlt or jae lcall ret rcrl adc adc push jle dec xchg sar daa shrl das in push mov pop add in cmp sub pop adc mov cli popa mov push jmp push pop clc scas inc mov fsubs jg cmc xor inc sub jmp mov push mov or sbb in notl pop jp rolb lock or test into add hlt mov bound cmpsl (bad) repz test sbb sub lcall sbb shll es aam and test in pusha mov ljmp add andl jmp fisttpl mov sbb out mov addb xor jge aad (bad) aaa jg and sbb xor fwait or sub das add inc stos inc cltd dec dec lods jge jmp push (bad) sub rol sbb imul adc inc push popa fwait les pop adc jmp push push sbb sub inc xchg xor js add leave or movsb aas cmp xlat in pushf mov fidivrl sub inc std mov (bad) mov pop add xchg mov sahf dec jp add jg jp rcrl inc sub ret mov enter inc jmp neg mov dec pop inc jecxz pop inc xor dec adc mov cmp insb adc jle jmp mov hlt pop stos dec notl cmc popf ficom mov jle fdivrl pop push lahf add push pushl sub and icebp notl jmp push mov addr16 movsb loopne xchg sbbl xor push aam ret or adc and sbb pop es pop je mov jmp pusha call push imul ficomp fildll adc jmp jle loopne fdivrs cmp or or ja mov dec mov push addr16 popa mov jmp mov ss inc push (bad) insl pop out fstpl iret push popa mov xor outsl sbb xchg or sbb cs dec adc cmp inc push rclb pop mov stos add mov pop mov push jmp push or sbb xor mov pop xchg or or fild xor inc pop cmc in cs and sub addb cmp pop sub or (bad) shll sarl xor icebp cmp push mov cld mov mov xchg icebp add add add jl pop cmp xchg pop test cli lcall add not call xchg pop push pusha andl xchg mov sub add cmp (bad) jnp dec inc inc push and jmp repnz xchg cmpsb loop pop pop sbb xchg mov xchg or jge cmp addr16 daa std mov in std push repnz movsb ret add enter (bad) jmp mov fsubrl mov mov scas fidivrl and push pop inc movl add int3 adc pop jnp daa shr into (bad) push push or push in stos dec pop mov adc or jge and mov and mov dec sahf xorb int3 and lcall mov cmp std xor mov sbb fcmovnu (bad) add out fbld jne loopne scas (bad) mov pop mov jmp sub pop or mov sub jmp movsb aas pop and sub insl xlat jmp mov pop loopne std movsl add or pop cmc mov test (bad) pop and aaa push xlat cmc xchg fildl sarb pop icebp push std enter sarl mov (bad) sahf adc ficoml push scas cli jecxz push mov jno xchg loopne rolb loope (bad) out movb add stos xchg je push dec pop daa or insb and test cmp or add dec sub xor sub xchg mov (bad) or mov imul sub add pop ret in rcl jecxz adc gs in push test mov fs pop sbb sbbl xchg sbb or pop push repz and fisttpll mov fsubrs cld jle mov inc adc push or push add pop pusha ds xlat (bad) ljmp mov sub shrl or ljmp data16 jmp stos jno loope insb insl mov lcall jae out scas sbb mov adc fadds inc imul pop rcrl stos fisttpl jl push jle adc jecxz out rcll sbb cli iret or push pop mov in clc sarl imul push pushf int3 out or cmovns or subl mov sub add adc test sbb inc std pop pop dec push (bad) stc mov jecxz insb xchg lret test mov outsb test mov dec jmp mov push cmpsb aas sub cltd icebp insl push or popf mov push xor in cld inc mov push sbb test test test pop andl (bad) or inc jmp mov or inc not add repz stos ficomp cmp push adc js hlt lds lea xchg cmp or pop inc inc movsb mov (bad) mov ss jmp pop imul pop or aaa lds mov dec mov xchg les adc enter insb insb sub xor sbb imull or jns jge adc shrb rcrb mov lret jmp pop js stos stos (bad) jns (bad) pop std int movsl or sahf adc addr16 dec movsl mov push xchg push push inc mov sub sbb adc sbb mov pop in fstl sub adc (bad) or mov push nop lock addr16 in (bad) or aas scas js add ja xor (bad) mov sarb or jmp pop bound push push das stc xchg std pop mov pop inc push outsl and scas add lods pop xchg imul cmp mov pop pop pop jmp xchg inc dec ljmp dec and fcoml xor lock adcb push and adc adc cmp loope push add insl repnz sbbl es mov jne sub jge add aaa mov lds pop sub sbb add jmp sbb leave iret sbb mov inc push (bad) and and xor xor cmp or pusha sub mov popa jecxz add adc pop mov or or out pop test pop out je add int lahf ds pop pop scas sarl pop daa leave loopne mov dec inc ja cmp inc xor jge add pop or jae pop push push jmp pop push push push daa lret sahf pop adc (bad) push nop sub sbb add xchg add imul ret inc bound cmp test imul or (bad) rol pusha add jge sbb adc mov sub cmp or jne (bad) sbb xchg repnz dec jnp dec and shrl xchg in and je adc or mov data16 (bad) pop xor mov pusha push push (bad) mov lcall cli repz adc push in loop push lcall aas adc in repz int scas mov xchg fdivrl push pop jmp sub addr16 lock sub and cli pop loope ja and pop and sub in int adc psllq loope mov xchg push jbe cli mov mov mov xor dec js mov or push xlat call mov aad or icebp and cs add in xor xor cltd test ficom shr repz mov pop mov aad push xor cmpb sub add jmp mov test insb and or push jne add push add adc xor repz les loope loope pop movsb test imul lds mov negb jb adc cmpsl add push pop inc sub xchg dec ret mov xor pop push push inc mov pop pop push lret cld pushf mov std dec in stos jge int3 mov pop add sub jmp mov mov aas data16 (bad) fucom and lret mov cmp inc neg dec sub ret and fisubrl (bad) fisubl aam inc scas clc icebp inc or and mov cmpl xchg loop in dec jg loopne out fcoms je or push adc dec fs jmp test pushf push orb call push xlat clc ja fmuls pop scas inc pop xchg scas mov (bad) inc add iret mov loope push in inc dec incb cli xchg xlat shr es lods jg mov adc out sti sub jmp mov push mov cmp add push outsb test icebp cmp les push jmp inc sbb lods push jno jp cmp mul sub sahf mov mov cmc ret xlat push repnz push inc xor movsb pop xor stc pop adc cmpsl fcmovnu jg cmc (bad) mov push (bad) jnp loopnew sti add pop add push mov dec jmp es mov jnp rclb and (bad) pop sti pop ja into cli gs mov inc bound sbb sub pop xor and and push cmp dec incb jb nop or sub loope test mov clc jle outsb cmp (bad) mov fcompl sub push sub lds adc pop mov sub xchg jns call adc (bad) cmp gs jmp sbb nop fucomi mov mov push mov push mov push loopne dec fs sti push inc movsl or push in mov repz or jmp xchg fmuls dec sbb sarl mov fs or add xor inc dec push mov lahf and adc lcall addr16 repnz or xchg push cmp mov and mov cmp leave ljmp dec pop jmp jns out adc jmp or sbb outsb dec arpl repnz cwtl iret adc jo cld mov sub mov in scas je jp or fwait pusha fnstcw in bound stc fwait add insl jle insb push inc xor es adc test outsb std outsb mov or jecxz mov mov fwait std mov push dec outsb xor sarb or jmp lret push or push jmp pop sub enter xor pop fldl lret repnz lds or cmpsl (bad) push push les (bad) int xor xchg (bad) hlt jp cmp lret mov sbb xchg pop sbb xchg frstor cmp bound fs or ljmp jbe nop dec push pop insb push fcmovb xchg push mov or or mov xor ljmp inc call ret gs or push lahf add fnsave inc inc repnz jle jnp pushf add (bad) or pop pop into sarl add pop dec push add sahf cmp (bad) inc add js or adc test cld in bnd ds ljmp xchg cmp jge add push lret mov data16 mov ret (bad) jne cmp pop (bad) ja jne outsb or dec pop adc sub dec dec jb shlb pop out scas pop xchg pop jne icebp push gs inc xor adc pop pop call (bad) daa push add mov insl (bad) push mov jmp mov sub mov bound pop add mov fdivrs cmp pusha rorb unpckhps inc xor popa jmp lods mov test in mov out repz add xor xchg sbb adc dec pop les enter dec xchg fstp jmp and notl clc cmp sahf or xchg bound mov arpl data16 fild or xchg loop push fimul lret jbe je add les cmpsb ja icebp sub sub stc aaa add add cmp sbb idivl (bad) sbb lcall pop stos mov cmp das add jl adc xchg jg int3 add inc sbb lret mov inc xchg incl pop rcl imul stc mov and ret icebp lcall add push add stos sub fmull push push addr16 ret jecxz cwtl push imul fwait movsl or mov adc and jne repz movsl divb jnp in and lds outsl xchg dec and ficoml sub sub cmp pop mov fwait push push mov jo cmp dec push pop les dec jae add mov push lods scas movsb mov add jle jmp jmp pop loopne and ljmp cmpsb mov je jmp decb call and inc test inc clc jmp jne or jmp cmp xor and mov notb push add or push clc inc xor call sbb in jne lahf inc popa movsb cmp outsl test sub addr16 lods add (bad) cmpsb mov add xor jbe scas pop sub push jmp popf pop add mov out add fadds add adc dec test lea jmp popf dec mov and xchg pop mov xor add das ja iret jb jle and pop sar adc orl dec std dec js sub pop in (bad) pop inc outsb or sbb xchg cwtl pop push push pop push repz test mov push mov das dec push pop sbb cmp sub arpl cmp inc jmp lock fcomip pop cmp fnsave jle loope (bad) int3 push in mov or xchg push lret mov push inc mov aaa xor rcll xchg or call adc and push push inc ds js jmp imul ds pop mov pop cmp mov xor push neg inc out adc jmp js and hlt xor jecxz cmp fs sub sbb rcrb js adc and js pop fstpt ja push leave jns fild mov push lea mov add push (bad) ret (bad) or cltd push adc stos imul and adc insb sub sub add loop push pop dec push xlat and push push pop icebp scas sub int adc dec jno sub lods adc mov enter xchg xchg out jne daa js cmp das dec adc fcom decb push je and clc cli (bad) mov and xlat jnp push (bad) int3 xchg push add sbbb nop das clc out pop add in jmp adc inc adc out cmpsl (bad) fstl pop or ljmp dec add (bad) jne mov add dec jmp sub dec lds mov push sbb or sbb inc das notl (bad) sti hlt das cmpsl fstpl test push add std inc jecxz push add mov cmp aaa (bad) ja pop test ljmp out das jl jo add das mov push inc cmc and movsb aad insl inc mov aaa movsl stos add mov int3 push mov shll rcrb fucomi push sub sub fs mov pop (bad) mov adcl adc cmpb jmp pop add and scas inc int jo js mov push jmp repz pop push fnstsw cwtl dec push mov add xor aad jl jmp or sbb jno cs mov cmp pusha inc xchg outsl orl add and clc ja dec adc insb movsb or pop adc or psubsw pop pop test scas and sub loopne xchg adc test adc add push add lds jno cmc inc sbb sbb inc pop mov sti (bad) jmp es scas adc int in cs (bad) out mulb jae jge leave in out jne scas loop rcl jno test jmp aam (bad) push push mov jnp aaa add popw mov dec sbb dec push cmpsl js sbb add mov xor int3 out fcoms insb ss call stos (bad) add es push je jmp mov and mov or enter push insl (bad) fist dec shlb ficoml push push sbb nop bound mov jmp add pop (bad) mov addr16 out rclb test jno lret pop pop popl adc adc rorb stc and inc movsb scas test pop stos sub sub pop cld outsb jge or sub mov mov cs cmc data16 js test jmp pop cltd (bad) or rolb pop add or or outsl adc xchg mov jmp mul xchg sahf xchg hlt inc fidivl in mov jns lahf (bad) lret push mov jns mov mov push xchg fiaddl cwtl lds inc mov or xor mov pop rcl dec push arpl pop cs pop cld cmp xchg pusha (bad) jae sub movl dec xchg add push or adc les movsb cld dec dec cmp fistp adc subb inc lcall mov mov shlb outsb pop insb aad add lcall int3 or jno xchg push hlt add mov add out cmp pop inc rolb pop push add sub jle mov ficomp pop cmp push in push dec test xchg push das mov or sub adc mov ret or pop inc int3 scas rcrl fdivs fucom jmp or les add jbe push push dec push faddl jmp mov jl sub int3 (bad) fistl cvttps2pi lods out mov or int in push inc xchg ljmp dec ds adc ret xor or mov jle push scas les add cmp jg add sub movsb mov jl xchg popf cltd js imul mov xor mov pop push loopne sub adc int3 inc subl test stc movsb add dec iret xchg mov jmp inc sub bound faddl cltd and add xchg add andb rcrl xor unpcklps repnz adc rclb shrb pop pop mov es jns scas dec sbb test in imulb imul xor pop xchg shl jge roll mov arpl add popa sub lret mov sub addr16 and in loope inc or fdivl sub jle iret test enter pop out sub xor and jge movsb call jae movsl shr or aaa add aaa out push mov insl jmp cmp adc sub into movsl (bad) mov mov mov inc ret push mov xchg mov push xchg add (bad) mov stos add adc cmc mov pop and jo xchg mov shl xlat inc std xor ljmp xchg inc and pop not popa cmp icebp gs (bad) imulb sub mov pop out xchg fild movsb push pop mov and sbb addr16 insb rcrb dec test loopne icebp mov out or aas loope cs fbld lret pop xchg bound fnop add or adc shl dec cmpb idiv pop data16 sub add cmpsl mov inc roll js cmp ja add adc adc in int das xchg dec shlb jae cmp fs add nop add lock mov lret fs ret ret xchg mov and cmc mov dec dec pop in push jb xor xchg cwtl xchg push and dec push aad hlt aam scas add add not xor mov push shrb push call jmp mov fidiv pop sub aam jae push pusha gs negl les add and into sbb es jl ret jne dec daa dec or loop popa sub loop subb jecxz mov (bad) jl sub cmp je adc orl sbb jne jo or sbb pop and imul (bad) mov movsl inc aam jp pop dec mov ljmp inc pusha out loop xchg mov loop gs lods ror add pop lahf rclb das (bad) jns das inc mov cmp adc (bad) sub icebp jne out das loop fsubrs push xorb mov minps mov jmp mov dec sub lret stos pop fsubrl in or jo clc mov xchg sbb cmp push rorl push out push pushf sbb cmpsl cmp add cli pop push xorb cmp inc mov sbb les out popa dec pushf add repnz adc mov push loopne jle outsl sub or xlat notl scas xchg jle or push jb test add popa push push aas loopne push pop pop mov jo mov mov data16 push ret icebp insb jmp lret or xlat mov jl cmp add ljmp pop (bad) fildl dec in adc inc mov add (bad) stos inc push imul mov es and mov pushaw dec imul cmpsb and pop out mov div and sub shrl outsl jecxz in daa sbb mov leave cmpsb xchg mov mov lods jne pop jmp cmpsl loope call xchg (bad) leave jns loop rorb push loop sbb or lret sbb add sub imull sub and sar push lds andb lret xor test inc mov fsubrl pop cmpsb jg sbb pop push and xchg mov cli aad or mov or (bad) jmp jg xchg sbb shlb xorb jg scas hlt or jo or and sub das cmp jne decl pop scas or (bad) pop insb loop jmp lods xor push mov mov mov add inc call pop sbb and push jle xor xlat push sbb jmp rol mov aam in or test (bad) adc jbe or outsb cld cmp push mov rcll icebp jnp leave int lcall imul cmp das in test or jmp loopne ret pop pop leave cltd fmul mov (bad) or out pop lcall (bad) sar lock push cli xchg xor pop mov pop and inc movsb push divb lock sub mov add fnsave gs mov mov aas adc push and jp test addb xor sbb jo add dec aas jnp idiv jb imul pop push call lock pop daa or scas mov loopne push inc ficompl push xlat mov dec dec add ljmp push xor xor pop add sub sub jl cs push adc pop inc out push nop call jmp js lds and or push pop shrl sub jb fidiv push mov push and enter mov sti loope jl daa inc jg xchg cli cli inc jge xor das pop scas daa push scas and adc dec inc xchg add xchg std add jmp popf push push add jae and pop pop lods inc pop add cmp addr16 mov aam lret inc lods jg inc jmp movsb adc pop mov das mov mov lea aaa push test dec enter push pop inc mov pop bound imul sbb push movsl push es add sub adc or faddp bound les repz sub pop or or push js pop out pop push sub and dec add push outsl and fiaddl negb and sbb ss js or jmp (bad) stos int3 jo pop cmp lods or jno addl mov sbb xchg in sub cmp cmp out push jg pusha dec mov sahf push test movsl (bad) icebp inc and jp test and pop sub pushf mov push leave or sub jge push jo fmull mov aaa lret popa and mov lock lods and inc rolb pop jmp push cmp (bad) lret jecxz fstl pop or pop arpl test idivb clc inc dec imul sti inc or xor push out popa daa push jno cmpl cltd or psubusw in shlb stos test inc lahf loopne inc das or mov xchg add mov ficompl repnz shr mov pop in mov sub jb pop and xor cmc sub mov rcrb jmp jb lret or jmp call cmp xchg ja jb adcl aad outsl sub or pop aam mov movsb sahf inc arpl pop sbbb ljmp loopne xchg imull shrl fnstsw mov stc mov mov scas fisubr and leave mov push testl xlat popf dec mov rolb and add inc and inc cmc dec xor mov jns pop xchg sbb pop dec outsb mov push cmp das and iret mov mov mov inc jns inc mov mov cwtl jb add dec inc or pusha push jns mov jmp mov pop mov cmc std in mov dec push popa rcrb hlt fwait pop loop push sub adc repz loopne nop push popa xor popa jle xchg gs test xor add popa jns (bad) adc jbe push sub xor jmp mov std jmp xchg andl sbb jg aas testb mov xor lret and out xlat inc or andb mov jne mov sbb leave shrl sbb cmp dec jecxz adc cld pop xchg cmp push mov clc add insl or mov push mov pop mov je mov addr16 mov add inc jmp mov push out fist decb add cwtl sahf dec xor inc jle iret repz and or cmp (bad) bound pop mov inc inc rorb jb or mov pop out mov out inc out (bad) lahf fdivl push cld fild cmc inc fbstp xor lret mov add jbe or loop lock push or rcl add add inc push arpl mov add jno lods icebp or sbb das ja and daa push xchg push les dec or js mov cmpsb xchg cld add add and xor inc (bad) xor sub fnstcw test add dec ss gs dec xchg loopne push pop sub add inc dec add inc insb shrl sbbb pop imull (bad) or or test icebp jmp pop stos cwtl lods and inc out jl mov mov add aad int3 add call (bad) pop add push jg rclb insb in xchg and or pop mov sub mov xor out or shrl clc xchg cs fiadd adc mov addl test mov mov dec sahf mov movsl das mov mov sbb sub std and lret pop mov cmp roll and or mov cwtl and test out (bad) ds push shlb xor cld das inc or sbb cmp pop dec (bad) lods sub xchg cmpsb cmp pop notl cmp fnstcw mov mov addl insl inc jle imul add loopne je xchg pop nop jmp mov dec mov pop out aam inc outsl pop imul dec repnz movsb or pop ljmp mov out (bad) aaa adcl cmc cs pop add leave push add xor lock jae xchg cld inc and jbe ret cli hlt loopne and jae push inc jne pop add or out lods and cld pop inc jecxz movsl addl push jmp insb mov mov and add cmp or add pop or (bad) jae js ss adc adc aas mov aaa and or adc or jge out jle pop push cmp popl and xchg ljmp jmp pushf adc dec xor das add inc jle cmp xchg jl and out add test sub and dec xchg adc push jg pop dec out andb mov pop xchg fisubrl jge add insl jmp and loopne mov push ss xchg fiaddl or and not inc or cmp loope cmp stc arpl jmp or ret jmp push ja arpl sbb add mov adc bound cmp lock (bad) push adc or dec mov sbb adc in in jecxz xor adc (bad) xor and xorl push and les (bad) lock sub in jno mov inc not sbb loope push push andb inc xchg dec sbb and lods and or jbe insb out mov adc pop push lock xchg gs cmp push test shr inc shrl sarb (bad) rorb loopne imul cwtl pop or jecxz rcll popa cs ret out mov push (bad) outsl xor xor notb fdivs call sub mov loopne jo cmp xorb (bad) fcmovnbe lods out gs push std pushaw xchg xchg cli xchg mov cld imul out fstpl inc aam and outsb test fucomi test mov pop rorb xor mov mov jb pop out mov out dec and dec outsb mov daa jmp shll inc pop stos pushf lret inc imul lret mov jne popa (bad) sbb inc rorl shl aaa and adc sbb xchg add mov leave xchg push adc dec push and cmp jge pop inc pop push loopne leave or mov add iret xor push stos push lcall or cmp cmp add add push pop fstpt push fsubrl lds pop jmp add or jo stos imul and push pop stos and mov dec fdivs sbbl sbb cli rorl jl clc in dec pusha call je loopne dec adc jb mov sub cld lods (bad) cmp mov cwtl and jae jo push daa push loopne fnstenv and or add (bad) loopne push imul add mov (bad) popf (bad) lock mov mov andl inc push (bad) and hlt test cmc subb sub dec pop ret fisttpll fcompl or fildl pop fs and enter cwtl jo mov imul aam add cmp in add lret es mov add scas sub sub (bad) imul cmp lret nop (bad) (bad) int shrb jo das jne sbb dec fisttpll mov add inc sub fimull ds mov bound (bad) mov mov jne push or outsl ficom pop and jbe push int sarb test xchg aas ljmp xchg adc (bad) movsl pusha mov push or pop jecxz push not aam vmovntps pop jae daa test sub mov lret rolb push cmp and notl leave push push inc xchg or dec add mov aad pop dec arpl push push lock popl mov add jns dec dec mov (bad) or and jnp lret into fstps and fldl mov jl fbld sahf iret mov mov jnp dec sahf leave push mov mul test mov jbe pop jno inc or pop test inc sub sub sub repz xor push sbb or inc movsl clc jg pop (bad) adc ss in imul jmp push push push or ljmp xor pop cmp inc dec and mov clc dec jmp push mov add mov mov ljmp or lcall sbb adc dec nop je jns sbb fcmovb mov jbe rcrl icebp inc cmp or jle imul dec add pushf xor pusha xor adc ss cmp lds es frstor pop push mov (bad) pop inc inc jmp jp int pop pop ja mov gs ds add cwtl mov sbb add jmp add dec popl (bad) jb cmp pushf push xor jmp hlt or sub orl or sbb sbb incb mov fildll (bad) mov inc fild dec repz push jge jg lret mov clc and aas or jg push mov mov lret push lcall inc push dec lods mov mov jmp subl lds sub cmp or (bad) jg shlb mov mov je cmp push push sti enter mov test mov outsb add inc or (bad) mov pop pop bound push push pop xor std js mov bound push sbb jecxz add sub push jbe cmp and adc sub sbb and rorb push xor sub or loopne (bad) pop popa in adc jecxz aas xor das inc test incl add push adc mov xor lret push mov rcl jb std cmp xlat jbe ret jmp add push sbb cmp mov js and mov jg iret lret aad lret or outsl ss fstpl loopne icebp add pop cli add pushl les jg xlat add cmp push add pop (bad) push scas adc repnz jp inc cwtl ljmp add mov cmp pop outsb mov add pusha jo outsl sub jge data16 or cld xchg std cld pop mov or sar mov test outsl sar or loopne push add jmp xor popa mov cmp or push cli insl jl shrb or adc movsb bound pusha lea sub dec add pop mov mov pop (bad) pop pop push jg add push xlat push adc adc pushf dec or repz lcall pop inc cmp push out daa inc lock in test lods movsb cmp and push pop fstpt or mov aam addb jge and mov cmp mov movsl mov inc inc enter jl and cmpsb push add sub or add dec jb sbb jl fstpl pop jecxz sub xchg enter mov insb inc push push in mov iret subb das jmp mul and or add push xchg push jp inc push add pusha pop sub lock repz ja inc add fcomps jg pop xor sbb pop push adc lock into jae fldt add mov aaa (bad) bnd mov (bad) sub add into and mov dec lods popf ret jmp mov and push loope add push cmpsl xor mov dec jmp jne ja adc lcall xchg (bad) or xchg loopne add xor shr sub les or sbb test das adc sbb out pop xor sub pop outsl sbb rcrb or mov push cvtps2pd inc xchg push mov push adc cltd pop jg pop aaa nop out pop not jne add js cs jmp mov or push or in mov insb xchg or (bad) and test dec add xor xchg aas xchg jb pop fst jmp add inc scas cmp push bound mov adc jno lock aam shr xchg jne or xchg dec sbb adc add punpckhwd rcrb add push rolb add das cmp enter xor fidiv jg mov push mov pop mov add push sub add jmp repz push pop or sub pop adc add mov scas aam sbbb dec outsl push add sbb xchg inc sub xor sbbl pop les xchg add sub addr16 fsts andl cld imul push adc repnz sti lret mov test hlt jmp xchg lret push cld sbb pusha lock adc xchg mov sbb and mov (bad) dec xlat push adc mov sub inc pop jb loopne add inc push or dec mov arpl sub stos mov add and sub lods or xchg and inc pop dec jb testl pop pop sub dec add mov push inc mov adc mov ret jle mov push jmp mov sbb enter imul mov jmp push incl xor jo sub mov out xor or lock addr16 cld lret xlat and mov aas mov xor adc pop push push pusha pop mov pop adc fiaddl sbbb (bad) jmp (bad) fnstcw inc sub pusha adc bound add add mov pop add xchg cmp loope pop popf lcall ret xor stos push add xor repz add push and dec mov or mov pop popf pop jge (bad) cwtl and lret jle cmpsl add adc add sub jns sub inc cmp bound mov sbb add dec sub sub aaa adc or mul outsl add rorl lcall pop jb or daa jo pop push scas sub testl or jo push pop and ja add or (bad) jge jns or pop notb loopne stos inc clc cmp gs inc add scas pop adc cwtl push cmp ja aad lods cld dec sti mov adc adc xor das sub and jmp movsl mov xchg and mov lock icebp nop shr push adc fnop call sbb or fs dec subl mov push adc dec jle mov sbb (bad) fisttp push xchg add mov pop dec mov mov push cli jecxz (bad) test fnsave mov dec adc js test fnstcw cmp inc incl xchg inc jb xor repnz test (bad) sub add ljmp in es or push (bad) sub cmp (bad) jnp loopne push pop mov pop or fnsave inc xchg scas pop cmc mov ja sbb in add push sbb in shrb nop dec dec sbb (bad) scas push pop daa dec fmuls sub cmp jle mov push xor add mov test int je push imul jne mov call cltd jg and sub push ljmp push adc push or pop adc pop arpl and jg or sti scas daa pop xchg push pop test or sbb out dec jmp jnp mov or mov popa rclb bound sbbb and sbb movsl or mov inc mov mov cmp and out sbb add aad ffreep and ret push push sbb les jl and jge dec xor sbb out add inc and out stos jo and fildll das adc fisttpll mov fwait adc push aam adc call ljmp sub sahf dec das pop xlat push sbb shl jne inc and dec arpl xchg in cltd sub mov sub cmpsl mov movb (bad) jb cmp out data16 loopne add mov pop cmc mov jle sti mov or cwtl push add les or pop enter jp aad out addl mov mov div or jmp out pop xor adc add push out neg mov lahf lret mov xor orb lcall or lret adc or dec adc inc ret jecxz sub add lods pop out inc in xor mov das push lret nop push push outsl pop into lret repz push jp dec push jle popa jp pop dec scas subl sub jle and mov sub subl xor or add addr16 mov push jmp out sub ljmp insl popa loope add add stos xor mov jmp add mov mov and repnz cmpsl rcrl mov outsl xor jne insb ret popa sub js xchg or test jae and (bad) clc pop cld cmp mov (bad) hlt test mov adc and xor or sarb int3 and (bad) call add sub or outsb sar mov lock repz jmp mov in (bad) add les jmp (bad) mov push (bad) push jmp and mov jno test mov fisub ljmp int3 into int sub pop and cmpb add mov (bad) gs inc scas pop mov push rcrl mov cld dec dec lea out add xor out pop daa lea adc add out inc bound adc rcrb mov (bad) cmp daa loopne pop mov imul add jmp push cmc mov mov adc bound int sub mov dec and lret std enter rclb inc or shrb push cli rcrb pcmpgtd outsl je (bad) and mov (bad) rcrb push test mov sbb dec lods nop cli repz or mov subb push shrl fs leave adcb popl add sarb in fnsave sbb jl add dec push push (bad) jg insb lods stos pop cli pop push aas es scas add sub mov inc pop mov mov fsubrl cmp adc fdivrl pop loop fldl cmpb or mov push xchg dec inc mov mov jmp pushf in push adc and ss sub sub add test xor mov sub xor and add mov mov out int mov xor or push notl stc adc out sbb pop add into lock mov shrl push dec pop pop push cmc push push cmp cmp pusha (bad) cltd dec jmp jmp xchg je push jmp (bad) mov arpl test jg test jmp add push mov add dec cmpsl por sub add insl in pop nop cmp mov pop fsubrl cmc imul sbb adc divb cli cs xchg lcall xor fstl add icebp add test (bad) adc cmc outsl pop inc mov addr16 call mull in jmp mov push pop mov dec push dec ret lret jmp sti fwait dec push mov pop xor push jp mov cmp pop mov add jns or fdivrl ljmp js cmp icebp add or sub pop cmp cmp or sub jg push and sbb jg mov (bad) popl pop jns mov or pop es (bad) push aad sub dec das cmp push push mov in fcoml lds adc inc xor in add sbb pop and scas ret pop aam clc add lods and mov or arpl xchg sub es js push ljmp stos add pusha lds dec sub jne add pop pop push mov jecxz cmp jae call jp sahf out (bad) dec hlt stos adc loope push jg sub push jbe mov push push jle dec mov mov les jnp and mov mov clc idiv inc jle mov ss xchg inc push test pop jbe pop xchg das mov xchg ficom adc xor inc testl outsl xlat aad cwtl pop daa jmp sub add xchg mov movsl inc cmp dec popa insb pop cmp in jmp es and mov lahf push lods test jb adc add or (bad) int pushf loopne and add into or adc xchg jge fdivrs and xor sarb xor repz xor (bad) pop ja mov xchg mov out fdivs mov jmp mov jg inc xchg lret dec pop fs pop pop lods loopne scas mov pusha sub mov mov cmp sahf sub ret flds dec dec rcr repnz inc sub cwtl jmp (bad) sbb or sub inc adc mov (bad) (bad) std and inc xorb sub shrl in push dec add inc out inc adc cld dec push jg push add xchg push ja cmp jmp lds sbb xchg ret rcrl repnz jmp inc int3 test sub (bad) xor pusha mov ljmp je jns lret lods inc lods hlt ss fs and insl push add imul addr16 mov lods je std xchg dec testl ret and mov not mov repnz int3 sub popa adc movb push adc dec push and mov inc jno lret pop mov pop jg fs sbb adc xchg dec cli add stos (bad) (bad) sub test ja mov iret fisttpl int3 (bad) inc iret inc cmp dec pop cmc inc cmpsl divb mov dec jno,pt lret call fdiv hlt xchg add jne popf sub mov jmp jmp scas test sbb or test outsl and push (bad) pop loop push xchg mov popf inc loopne int3 jb pop push dec shlb aam ljmp mov call sbb xor mov jmp pushf lods xchg ja adc or cwtl pop sub mov das (bad) jp push pop in ret and sub nop or aam jmp pop jbe mov cltd dec push cs gs adc (bad) stc pop jl insl sub cmp scas fcoms pop dec mov push dec push (bad) xor (bad) jae cmp outsl (bad) jg fwait adc or sub mov (bad) inc mov push cmp or faddl repz nop enter mov clc pop mov imul fwait lahf and mov and cld mov sub adc or mov (bad) dec jae push outsl mov or adc xchg stos enter adc dec out jne add sub add jmp jecxz (bad) dec into in jge jno shll cmp mov or sub add xchg lds addb pop pop mov adc fst cmpsl das push mov pop pop mov daa fstl add jae insl jmp add fisttpl jmp aaa out jne xchg mov sub ljmp add pop sar pop add out push push stos mov sbb mov cmc or out add xchg test mov push pop es pop push cmp imul push ja paddw out sub stos inc cltd mov mov cwtl adc xor ret push mov xor adc in xor (bad) pop mov ljmp or (bad) js cs ljmp mov outsl lret arpl (bad) aas push pop pop push pop pushf in push cwtl mov call mov adc icebp jnp cmpsl lahf or or or mov adc into sbb xchg jge sub sub sub jae (bad) rolb (bad) inc push ret jmp dec ret jo add or mov adc xchg inc fist and xchg (bad) add or add (bad) inc (bad) mov push add mulb rorb bnd aam push sbb cld jmp add pop xor jge ljmp pop hlt daa jl xchg dec ljmp mov popf and push stos xchg cmc adc iret stos shr daa in mov pop adc cmpsb mov inc sub insb dec lods pop add in mov lock cmp lock imul out and lds pop mov add inc pop cmp cmp sub aas fisub int3 mov add sub int push iret push pop dec or js pop repnz aam adc loop mov pop movsb ret addr16 and xchg cmp ljmp push jmp cmp or sbb xchg adc andps dec mov stc pop mov push call out jp sub das (bad) lock mov out cltd jl push sub pop push cmp shr pusha aaa inc shr cmpb inc add pop mov repnz jns dec lcall jp push pop mov icebp add pop push jae add rol das mov test mov (bad) into sarb mov mov in mov imul andl fs (bad) mov xchg lret fnstsw aad cmpsl cmp push mov int or push in shlb adc loop in cmc dec pop (bad) xor sbb dec jns fistl inc cld into movb sub not dec push (bad) out sbbl jl and or mov push stc andb data16 pusha dec add mov cmc mov and imul xor daa push push add adc clc sub daa push jmp into movsl mov sbb in cmp movsb pop mov (bad) stc cmp sbb add fisttpll sarl mov out enter xchg jecxz xchg adc pushf and sbb test pop test jmp and jecxz sbb push pop pop adc adc clc and push aaa test push cltd dec fadds adc push add pop (bad) fistpll lock jbe jns push xor pusha push pop sub ljmp hlt dec leave or add push inc sbb or out push or cmp sti or out pop bound push jmp jbe jae inc or xor pushf divb pusha or int add icebp (bad) into jbe les push mov push lahf clc dec and mov (bad) jne add and loop jae adc cmpb pop xor int push add adc test push (bad) mov shr lahf pop int3 pop pop dec sbb lret fs push notl or stc fnop jle sub popf jo les xor lds sarb lahf xchg pop in mov cmpsb xor jns pop push pushw dec adc loop pop or mov pushf and div push push lahf les and movsb (bad) lods mov ljmp mov push cwtl xchg imul pushf (bad) add std add jb mov negb jge xchg ret stc outsb dec adcl adc gs scas int3 inc pop xchg cmp push jle pop dec pop repnz test fisubrl jo add mov mov test pop scas mov mov mov aam inc int3 cmp pop adc xor dec ds dec adc lods mov rcll enter test mov fwait pop mov add sbb push stc adc outsl scas int3 loopne pop clc or dec pop out adc outsl fstps xor add mov or pop hlt mov dec sarl mov push es jae mov adc cli pop adc adc addl pop jmp adc mov (bad) adc lret xchg sub sub add cmpsl pop test dec jns mov out ret dec push pushf fcompl add jo lahf pop xor mov cmp jl pop movsbl and call jmp test stc lods sbb rcll jo lock enter leave lds mov pop cmpsl je out loope int3 mov jge jae sub add add sub sub insb loop mov adcl lret mov adc and leave push mov xlat add mov mov cmpsb mov pop pop xor mov mov rorl imull and pop mov sbb lahf pushf rcrb pop in mov push jb push iret add (bad) je flds sub mov jnp inc add xchg int mov arpl clc add data16 iret xchg fild (bad) hlt pop add lahf bound in movsb lock pop push adc push add neg sub movsb jge sbb sbb adc test sub lret jmp mov clc and dec test push pop inc mov bound mov or mov inc and adc push inc pop inc or outsb bound clc jmp fimull xchg sbb fadds or jbe dec out inc ret lahf cmp pushl sbb out adc int3 push lret add push xor pop push cmp mov and xor push push push mov xor push or lahf pusha fs pop popf inc xchg sbb pop push ret jne cmp jno jl cmp sbb xor cltd or push pop cmpsb jbe push leave out add inc jbe or mov push das ret loopne mov lret jge nop pop cmp imul jmp daa jge out insl test mov or adc add lock jp xchg in cmpsb cmp adc idivl xchg iret cmc fidivr push inc popa or adc jle pop mov aad mov sbb and lea ret cmpb loop xor movsl pusha dec in into mov outsl mov sarl (bad) outsb pushf in lahf (bad) imul dec daa aad sub add cmp inc push pop dec sub jg cmpl dec shrl cmp test bnd mov add add pushf std and and rcrb scas hlt pop jge pop int test repnz in dec in mov pop lods test and xchg dec fadds push sbb jp adc inc dec jle roll adc daa dec jg and adc jmp popa loop loope loopne insb jmp outsl xor andb lock fsubl pusha jl in adc mov pop ret xlat sbbb adc aad data16 xor popf mov and in shr xor cmp mov mov dec xor cmp push pop mov jbe iret mov out shlb push mov pushf stos inc inc ss jmp js pop sbb mov mov int3 add xchg or pop mov out pop pusha xor out aam test or dec pop (bad) iret inc rol xor out jl mov cs add sub (bad) sahf cmp repz lods jmp cli nop cld jmp push lahf mov add in pop popaw stos xor orl mov dec cmp cmc xchg lcall fcomps das cli pop jbe (bad) stos lea repz ret cs movsb mov test adc xchg pop inc pop push sub cmp dec cmpb mov inc pop jle lret jnp aaa dec add inc or daa (bad) fcoml add imul sti add and (bad) movsb popf add sub or ja push push mov lea cmpsb loop (bad) out dec and iret int lods sbb mov cmp jle mov and push sub or insl stos in aad fildll push xor adc xchg repnz mov xor sub mov lret inc mov js xchg pop pop jmp push push mov ret pop push xor add (bad) lock jecxz fsubr and add inc jmp subl hlt aas sbb pop dec pop das jmp dec jg mov add add xor sub cld sbb das add sub dec icebp adc stos lds mov stos push adc lret in into and (bad) (bad) adc push add inc daa add je dec js pop in inc movsb ds rcl lret add push orb fildl imul inc lods into fiadd dec jge pop mov jge imul cltd jle pop into dec movsb or ror call jl pop dec pop xor das xor mov add and sub lret imul loop push imul or inc into sub xchg leave in cmp mov daa mov scas fldt jmp sub mov xor lcall cwtl imul xchg call xchg mov sbb cs adc cmp sub push test jo dec test cltd aaa fcmovne sbb cmp sub dec sub test (bad) out mov xchg or sti enter push notl xchg (bad) negb nop push adc jmp sbb call (bad) xlat les or jno sub or sbb (bad) pop cmp mov dec xor add jge sub pop or sub hlt adc arpl add dec sbb fsubrp and xchg pop push cmp dec movsb scas jecxz push push add daa pop test mov jge dec fst mov inc adc xor add aas pop adc adc adc jecxz mov sbb js push scas pop pop loop (bad) dec jp xor fstl xorb addb jmp aaa jl das xor mov stc adc and lret add inc or pop sub jg js shlb ret or lock lahf xchg ret cmp jo pop out bound add jecxz jb sub mov sub pop popa fs mov xor dec jae aaa pop in inc outsb sub js ret lret nop sub mov mov stc jno andl adc xlat stos fidivl push push es pop orb outsb adc stc js int cmp or mov pop repnz jb and pop (bad) push adc sahf pop push xor inc cmpsb (bad) enter leave push repnz sub in shr mov fisub int and jmp dec in lcall iret inc and add inc pop mov push lds cmp cs push xor imul and sbb dec icebp xor xchg xchg adc add xchg dec sbb in cmp cmc daa add test mov lret les mov adc je dec jg push xchg (bad) jb cmpsb stos repnz or stos arpl ret xchg mov shr jno inc adcb sub loope add mov stos jmp push inc int jb dec divl fs mov or pop or add xor negl pop (bad) cli and ficomp jle mov inc push dec subl dec and xlat or fwait (bad) movsl push mov out dec fiadd jecxz add jo jmp decb inc jmp adc mov xchg stos rcrb pop jecxz in pop into mov lret nop xor xor cs xor shr jmp push ret push into sub mov rol pop add je pushf jns mov mov xchg imul jbe scas std scas inc inc pop movsl fdivrs dec out into frstor or fsubl cmp dec rorl dec fldenv mov dec scas mov jp aaa movsb xchg loop enter divb dec pop push jmp jg mov xor pop loopne je loop popa cmc xor (bad) xchg icebp add ja jo jmp jmp cmp outsl test repnz rclb mov add pop push or pop mov mov mov and stos add xor cmc jmp (bad) popf insl mov aam fdiv subl lods jo and push pop lods dec or loope sbb jo cmp stos add cmp pop fidiv loopne popf jbe cmp shl (bad) mov (bad) shlb pop or (bad) ret adc jle mov dec xchg ret call dec add mov and inc data16 ret sbb outsl inc push xchg std lds loop xchg scas cmpb out pop fisttpl (bad) jno dec loopne mov lock pop mov xor cs jo xchg lahf adc mov dec xor adc pop push cld notl scas ljmp xor mov xchg movsl sub stos mov push rorb sub (bad) push pop push jnp push adc cli sub and lret and pop pop out fist jno push xlat ret push lea pop loope rdpmc clc dec mov cmp out bound enter xor ret lcall push shl pop dec test pop or xchg pushw enter pop adc not push jle es loopne rcrl fwait add sti cltd xchg add mulb fidivl out push push mov pop je shrd jmp fsubrs cmp out pop int or jge call sub in or mov out addb loop push push mov or sti mov bound dec int xchg daa add cld adc rolb add sub push dec cmp xor ret mov dec or or popf push mov jge sub jno jp inc jle dec jno push int3 mov inc inc adc adc add int and orl outsb repz xchg int inc jae pop ret and lock push pop mov cld inc inc outsl mov pop add jmp add cmp sub aad jo xor adc cmp sub and lods add mov jge pop loop aad xor mov mov enter outsb pop push add loopne je es imul mov cmp adc movsl xchg adc or jecxz cs push fldl pusha inc ja loop (bad) lcall cmp pop daa pop add das int scas mov nop std mov test dec inc incb pushf jp mov dec inc add orb cwtl mov add out cmp cs cmp insl fs out add xor pusha test jns mov adc push xchg es aam pop xorl cld add jb mov and stos repz cmp insl pop jmp sbb (bad) insb or sbb int imulb xor (bad) incl inc mov in xor loopne push cmp (bad) xlat ja xchg aas fcomi outsl push add sub into xchg aas not lods sub adc jecxz adc add or out and mov idiv (bad) fimul inc repnz sbbl jecxz fs pop das cli sub rcr sbbb ss pop sub lret in js scas leave jl ret push mov jb mov cld mov ss (bad) aaa mov push sub dec push fs add clc jo lret or dec sbb es mov xor or add push les pop sbb int3 mov pusha pop xor sbb (bad) jne mov sub sub inc inc push lcall in sub cmp (bad) std xchg xor out nop cwtl add and nop jmp adc lcall mov jmp loop popa call movsl sub popa stos cmpsl mov mov pop dec mov mov push fmul mov roll mov xchg push jp testb or mov xchg jmp cmp pop push mov jge jns jnp cmp pop outsl loope push jns push out dec repz jmp ljmp fsts push test popf mov xlat or jbe,pn push pop and pop sti sbb add int3 add add pop lds lock adc and xor push push mov and nop cmp in push inc xor mov popa pop movsl out dec mov addl xchg jne lret sub mov pop ret adc dec gs in test js mov or push stos inc cli adcb cmpb mov pop icebp xchg mov and mov add mov add inc fcmovbe push ret fcomp dec in inc sti push xchg insb leave mov (bad) mov mov mov and lea adc daa (bad) push cmp or inc mov or jmp jno inc sbb into dec repnz imul push push leave out mov xor loopne popf les add cltd push cmp or jp add jnp push and and test jl and stos inc push (bad) movsb dec in mov loope scas inc hlt jl popa mov insb cli je clc pop pop sarb test in test sub adc fnstsw daa out and stc inc pop push xchg ljmp test add jmp lahf pop cmp cmp mov cmp mov test mov jmp pop ss inc stc mov add xor pop rolb sarb das push adc inc outsl lods cwtl lret dec clc mov idiv inc mov (bad) adc and dec pop mov adc dec sbb xor push and adc jmp sar mov (bad) mov push xchg and push ds pop mov inc ret nop into sub cmp lock shr adc pop pop int3 inc stos cmpb stos repnz (bad) rorb dec push mov fwait ljmp push pop xchg sub xchg add sub gs das cmpsl pop into adc mov sub pop repz enter jo mov fs aad push mov adc xor push js adc xchg push mov bound stos lock testl shl imul jmp movsb add mov mov add addr16 rorb ficompl pop (bad) jbe and (bad) shr test inc pop pop xlat stos popa mov add xchg rorl add mov jb pop fiaddl scas in or out and pop sub call push aaa hlt adc sbbl pop fdivrp cltd push cs movsl xchg pop nop pop mov repnz push lds jge cwtl add jno push dec or negl push inc mov les test sub sarb test or lret jno pop das or push test cmp add mov mov mov enter in inc bound cmovno sbb rorb dec adc incl xor loop adc jbe lock xchg xchg pop and shr jmp pop call decl add inc sub add dec mov xlat stc test add jp shl add cmp sbb sbb and aad rolb mov cmp vorps out and hlt dec jmp and addl popa pusha imull add mov jg push push or add push and cmp adc imul push mov mov adc aaa rclb xor xchg rolb pop add cli mov cwtl pop mov popf inc and mov stos clc sub shl inc aaa push or add jno xchg xor sti push out mov pop in (bad) dec cmpsb nop imul and pop inc ljmp rorb jecxz lret xchg and push pop das inc mov leave sbb rclb test rclb pop push sub lock cwtl cmp in es dec cmc adc dec adc insb sub (bad) sarl push mov daa jle std adc or push mov jnp fs rorl outsb dec ret mov or or push das xchg xor mov mov push out in add lahf or lret lods xlat mov dec pop cli lret and mov adc test sbb sub jge dec push or add (bad) (bad) jle adc mov lret cld (bad) dec sti lret cmp add cmp xchg aad or test mov inc test xchg pop repnz pop sti les mov or mov ret xchg mov jo je and xchg clc mov mov xlat push daa cmp lods inc pop mov pop lock mov cmp loop or jmp je mov jg mov ljmp jb mov cmc enter rcll test pusha pop lods push cld pop mov das jbe out push push movsb adc mov xor movl push mov adc xor sub sub lock (bad) mov cmp out repnz ds das fmull xor jecxz (bad) xlat js imul cmp call dec xchg mov pop cmp xor sub scas and dec sahf mov cmp adc sub dec in mov mov mov test test cmp dec cmp fsub sub hlt cmp sti mov push repz icebp push loop,pn fnstcw mov jae sub pop pop hlt insb mov dec loop pop insb ss jmp inc sbb dec jb (bad) sti nop call fnstenv clc rclb push or insb jmp mov xlat out subl mov rcrl xchg int3 dec icebp icebp repz inc int adc dec xchg pop pusha push add xlat repz stc rcrl push ja xor js notb leave cmp mov jno lret icebp lret aas sub push mov insb hlt out pusha mov fsubr push jmp fcoms scas dec or fs xor inc sarl cmc pop pop push xchg jnp cmpsl jge sub sbb (bad) repnz rorb js das mov das jge pop jmp adc mov jle ffree adc dec dec jmp or shll mov pop push jmp fistl mov jno inc out sub mov push add xor scas inc dec pop mov adc ss sub mov or pop daa pop mov xchg add mov mov adc sub mov fs stos cwtl inc sub out jbe add popf minps pop aaa mov cltd ss ret fisubr mov dec push mov sub cli adc cli add std pop pop lock mov mov inc test mov inc xchg lret ja cmpsb and adc or fbld adc xchg dec andb and lahf (bad) cltd pop insb leave sub or xchg push inc cmp push push gs fsubrp jg pop adc adc pop or iret xor add sub jmp push dec out gs cmp or fist push inc pop insl arpl ficomp pop mov and fs in mov popa or (bad) inc inc fadd sbb push in cmp ds xor les int add sub or or mov icebp test or push cwtl inc incb xorb ja push push jmp (bad) fadds sub cmp or and inc dec xor ret pop mov rcrb pop add imul mov sbb mov lock jmp mov and push (bad) xor inc jl mov test adcl push jmp rclb dec hlt adc or xchg push jae or scas push mov fsts or push das and test add cmpsb pop adc (bad) xor test pusha pop or adc adc mov pop push mov inc ret pop add mov pusha lods gs push (bad) add arpl clc jmp dec xor stc ds leave push sub push jle xchg push sub loop les stc mov or jae xchg xor inc sbb sti mov inc (bad) dec cmpsl test add pop shl cmpsb add in pop mov and pop aas mov cwtl inc mov dec push add test (bad) stos fs and jg out and in mov int sub mov test and hlt adcl call xor or mov push or loopne mov pop inc mov or pop pop fadd xor mov sbbl cs test push sbb jo out lahf pop fnstcw daa adc push jge jno pop shrb sub lcall lods pusha xor cmp and dec adc js mov (bad) (bad) sub and xor mov xor in fnstsw mov xor xor pop adc add shl jmp aas (bad) jmp sbb iret sub decl jne repz sub xor pop cld jae pop cmpl or mov (bad) jno and repz adc into mov adc fnsave lret inc sti sub cli sbb push jg mov jmp mov jmp mov call (bad) jne sub push push out add mov mov ja dec push mov push adc inc adc add add inc imul sahf jge inc imul inc inc adc movsl nop shlb add mov or sub or inc dec mov sub add xchg xor mov xchg out mov repnz scas sub fsubrs inc mov bound movb mov sbb jge cmp mov mov pop rcll in xor (bad) fildl push jae arpl testb inc pop shl scas or out rclb add jge jmp (bad) (bad) iret mov dec adc and mov negl cli cmp mov lahf or inc add mov in jg push pop (bad) leave xchg stc push sarb imul nop inc dec inc cwtl pop mov pop mov dec lahf inc pop mov andb cmp in test pop xchg subl (bad) mov sbb push cmovae pop out repz xchg cs loope sub cmp (bad) int pop test inc jbe dec daa lds sub mov loope push shrb jnp addr16 or pop jbe scas (bad) mov inc adc sahf cmpsb inc and (bad) repnz subb add lahf hlt jl fdiv daa and daa negl inc add mov mov stc xchg (bad) pusha dec jmp jbe jp (bad) shrl mov push mov pop jae pop pop lods maxps or inc add leave pop test add jmp out xor push test sub rcrl sbb inc jge das jmp jae out mov shlb (bad) (bad) mov stos push sbb pop loop mov les in dec in hlt pop push ja popf mov dec xchg xor mov stos pop xchg out and inc fiadd push adc cmp sub pop ds push mov xchg out push std lods jmp arpl test jmp ds xchg scas popa mov stc fs out sbb negl pop daa aad xchg xor mov pop add fsts fdivr lahf pop xchg sub inc adc pushf gs mov xchg push xor sbb push fucomp add add jle push outsw xor les (bad) repnz fs dec mov jno pusha (bad) push adc lret mov jp lahf pop adc jnp jmp push scas test push imull mov xor jg pop int3 push mov pop insb (bad) lret xchg xchg ds push daa imul cmp test mov stc sub xor jmp cs sub pop loop scas lea mov insl mov mov or ret subl (bad) xor pop jb imul (bad) cwtl or ja aam push mov pop mov into or mov mov int add mov pop adc sub mov sub push adcb or pop add bnd mov mov negb lcall xor xchg iret add repnz push dec outsb shl add and jg in orl sbb clc pushf jle outsb dec outsl push push in (bad) add daa not (bad) ja add add addr16 adc bnd jns or leave sti movsl jl dec fdivrp sbb pop cmpsl fnstsw jle push mov cltd jl sbb (bad) pop pop mov sahf mov mov pop in pushf ret stos jno add xorb test sbb sahf xchg ja stc pop inc repnz pop mov pop xor or mov push sbb or pushl push mov pop dec imul repz rclb mov sub or sbb addr16 mov sub sub xor popf lods adc pop cli and push jmp repz mov xor push lods adc pop push mov enter xchg jne mov icebp pusha fisttpll mov add and mov (bad) mov repz out fdivrl and push (bad) sbb inc xlat fsubrs cmp sub fmuls call loopne adc cmp jnp pop leave add mov adcl mov inc jmp xlat cmp pop cmp test (bad) xchg lret ror mov sub push sbb pop pop shlb xor cltd jns and inc (bad) or dec stc jns and insl jo movsl les add and xor adc mov bound push test (bad) sti cmpsb sub (bad) adc fwait out and popf jbe js idivl lcall jp adc nop push ret fcoml cmp sub out neg or push hlt lods mulb cmp andl rcrb jne aaa adc sub add mov pop cwtl push xchg jl push adc inc daa or cmp daa sub inc inc cmovne in jmp push inc or mov dec xor les add push mov cmp or mov pop jge out jo aam jp xchg hlt fsts rorl and push das push or data16 jnp mov jp gs dec not fnsave push sub mov dec test pusha data16 or xchg movsb insl popf out inc mov jae mov mov cmp addl (bad) mov add (bad) dec lret rorl (bad) lods mov mov jo push dec dec pusha sub jmp jp xlat or push test and (bad) int3 in jne push clc or sahf add xor cs into xchg loop lahf add popa insb bound lea mov (bad) mov repz sub dec sub inc dec jnp push arpl xchg notl je push scas push hlt or xchg jnp add mov add add xlat push stos int3 mov das mov lcall pop push xchg adc add addr16 ja sbb push dec xchg adc rclb ret xor xchg dec cmp nop jl imul je nop mov ret jmp cld mov cmp dec push inc aad stos rol jns cmc cmp add dec mov (bad) or aad adc es jo xchg in push js push clc pop (bad) pop or pop push (bad) clc nop fildl int sar or cmc xor pop jl and movsb xor in mov fistpll cmc dec out test cmpsl ret jns iret les repz out add fild cmpsb pop ficoml or push lock adc out adc cmp rorb out cmpsl aad push aad xchg subb cmp jns negb or rcl cli xor ficom dec push (bad) lods pop outsb test push (bad) int3 jns and dec test mov shlb outsl or jge out lret leave mov test adc inc dec cmpsl and xchg xor test roll xchg add pusha cld js leave push fisubrl idivb add ds imul xchg mov (bad) or (bad) popa push js adc jmp jno and jmp ja (bad) cmp adc xor imul sbb add mov push pop sar loop mov (bad) scas gs mov jne aad roll push repz daa mov call or fnstsw xchg mov ret pushf or and aad sbb mov dec bound (bad) daa and mov and add lcall dec (bad) subl out cmc (bad) test test or mov pop decl stos fldpi inc xchg (bad) or orb inc sub cld cmp xchg in pop fiaddl sbb rcrl loop incl dec lahf xchg ja enter jno inc jmp (bad) inc enter pushf (bad) mov sub ljmp mov stos jo fisubr loope fwait adc in or xchg jecxz dec loop int3 imul popf cmp outsl fadds sub out pop cmp adc lock push cmp cwtl dec push mov call dec jg shrl call mov fdivs jmp jge sub lods jge or mov xor jecxz pop stos and pop xchg ret test lcall fcmovnb xor fimul add aas xlat xchg cmpsb fnop and sub out push into xor add or stos or or push add mov addl (bad) sahf add aam push mov sub mov inc and mov pop pop mov and std addr16 push adc mov fs dec js rcrl cmc jmp add ja add mov (bad) rcl js jl sarb or dec mov aad pop pop pop imul push mov repz fistl xor clc jne mov icebp or (bad) ja and into (bad) sbb sti cltd imulb clc icebp outsb into push jg push mov jnp icebp jp scas jge and sub add out jmp jnp inc add call lahf sub dec add fcom pop in and sub jecxz inc and mov lret rcll and jmp outsl or and pop push sub mov add jge (bad) sti daa mov or pop pop adc dec pop xlat sbb xchg adc in insb pop repnz or popf push sub cmc mov push sub mov sub xchg sbb inc in inc ss pop cmp addl shlb cli and jmp jl sub jmp jecxz popa jb int3 repz loop xor ljmp xor stc mov cmpsl mov or incb mov outsl xor les pop fwait add hlt test jmp inc add notl popa ds cmpsl push testb xchg jb push and popa mov inc or sub ss add xchg cs movsb xchg pop pop or or insb cmc xchg out dec push add dec pop out add lds in cli push mov fsubrs aas lret divl pop adc movsl pop les sbbb imul popf pop add push (bad) mov jnp or test pop push cld out test sub out outsl add lahf iret fs cld xchg (bad) push jmp sbb mov add js imul loope and nop push nop xchg add or sub cmpsl push mov arpl or bound jg pushw xchg dec push daa push adc loop jp mov push (bad) popf sti pop adc mov mov and inc sbb insb es push pop push inc mov jp cmp mov cmpb xchg adcb aaa in pop mov or and or pop es sbb cmpsb andl popa pop inc sbb add inc inc pop arpl inc lret add push mov mov push add and cmp add (bad) les adc cmpl mov stc fs fldl and loop add add or adc mov adc sbb pop push or outsb jecxz push cwtl add or xor cld cmpl xchg adc (bad) cmp sarb aaa adc mov sarl mov inc orl arpl mov rorb push ss cmpsb sbbl push gs clc sub cmp cmp inc push inc jnp in icebp add out mov dec or out ret xchg pop scas or out insl inc inc xor jb xchg out inc dec mov add stos push je shrl add add jg jmp out (bad) in sahf or pop mov rcl sub mov or sbb icebp xchg mov mov (bad) xor jmp das int3 or cmp inc out and mov fsubrl mov leave stos (bad) fisttp cmpsl jle push adc inc ret jno hlt repz sub sbb push (bad) imul rorl and or add push (bad) pop mov xor push push and (bad) dec inc cmc jo ret mov lock jmp mov jmp addr16 int rolb lods in jecxz mov dec cli mov jb fnstsw cwtl sbb dec mov cmpb xor movsb fs aam mov into xor cmp mov xor and add jmp jg (bad) mov cmp jmp xchg cli xchg pop pop lods cmp fnsave pop push xorl pusha imul inc lods or hlt mov out or push bound add adc popf shrb xchg adc push add lret out or pop jmp pop push sbbb sub or (bad) (bad) mov out inc push mov or pop js mov push push add push push cmc (bad) repnz xchg adc pop push xchg shrb mov jno dec push pop xchg sub dec pop sub jns xchg enter sub subb add data16 inc repnz or test pop or subb xor pop fidivr pop lds push mov sbb push adc or push aas addr16 push pop xlat mov imul pop mov adc sbb mov fsubp call ret ljmp subb inc cmpsb mov xlat pop pop push push mov xchg push pop push sbb cld jmp nop xor pop pop pop stos and and cwtl jno jmp cs (bad) mov xor dec dec add aaa cld ffree adc into add shr sub mov call and jbe sub es ljmp xchg stos lahf cmp add push xchg clc and jno pop add push mov mov (bad) adc dec pop push frstor add es add mov jnp clc jge mov mov add stc push insb jbe,pn mov pop push cs aaa loop jmp pop cmp (bad) xchg pop cltd sbb push shrl sar mov or jl or addr16 lret movsb adc inc and fisubl xor mov push xor xchg pop clc test cs fist push aad mov xchg dec into pop in scas (bad) nop push sti ja cmpsb sub hlt out cld fwait movsb scas in inc out mov mov daa out mov sub (bad) enter pop inc lea pop sub mov in ret jmp cltd mov aaa adcl into pop push mov push mov pop aas cmp enter sarl insl lds xchg pop in xchg cmp dec xchg imul adc daa jae xchg aaa mov pusha das cs js xchg cmc test nop ret adc dec pop jge push lea call mov fild dec xorl adc jecxz mov leave and jnp push mov pop or lret divl subb mov adc fidivr mov hlt sub and xchg scas andl sub push (bad) jp mov adc ficom mov fnstenv jl sub imul and push cmp add add pop leave pop mov add shll out or xor push or or loope inc xchg stc or jmp add dec jl inc repz pusha mov ss mov dec mov or sbb inc xlat cmp sub fidivr adc ds mov mov or je fs push xor dec repz adcl mov mov outsb add loopne adc xlat add pop outsb in inc loop pop or popa jae in fisttp (bad) sbb (bad) les inc xchg pop mov mov adc mov into jmp loopne inc jl mov add cmp sub push jns or cmp jp test push pusha or stos add bound xor jmp movzwl mov push jo add cmpsb cmp (bad) lods mov lea add sti bound add fsts dec add add add sub cwtl lds mov mov and bound icebp pop insb jge scas hlt addr16 adc xor daa cmpsb sub jmp xchg jle jbe add xchg mov inc cmp push push ljmp sub cwtl cmp sub sub sub cmp fdivl pusha adc aaa jl lods push inc rcrb mov xor (bad) mov dec jnp add xor cmpsb fisubl xchg fsubrl cmp das aam sub fisttpl es xor (bad) test and test mov (bad) cmc daa aaa xchg adc movsl pop popf and pop insl mov fisub rclb stos and push cmp (bad) es and or bound ret cwtl or nop pop ja jle lahf nop sbb mov sbb mov cmp pop fldcw mov inc jg stos orl xchg rorl dec sti sub push adc mov add cwtl jne xor and sbb sbb dec jge bound movsl test in xchg adc fidiv ret push mov add call inc and pop fsubs imul inc mov in xchg jle lock adc and lods mov mov pop les sahf jb lock add (bad) ror pop pop push aam ljmp cmp jo cwtl cmp jl mov clc sbb enter sti sub and and mov frstor or mov and das dec adcl insb dec adc and inc pusha lods sbb inc mov jno and or or jne neg lcall imul bound mov push loop rcl xchg lods push sub xor mov mov xor arpl cld pop xlat dec jne std add shr movsb leave jo or inc lds jg xchg dec inc sub add mov andb rcrl jle xor test and jecxz lret test push insb sbbl push fs mov add sbb ljmp jl les movsl push xor or mov into pop inc cli lods mov mov cld adc pop testb xor add dec add mov pop xchg dec pop gs xchg pop add mov or add adc call jae stos inc or inc dec aam cmpsl jle cmpl lods sub dec push inc mov xor adcl data16 bound or pop loop add mov xchg jne sub mov cmp jg mov inc sub ret pop cmp mov push iret jns or jmp out gs inc out add or add cli fstp in leave clc ds xchg jge and leave (bad) idivb outsl fstpl clc jg ret jo popf jle jb stc les out pop nop test ret push in lock push sbb orl push add add push jle ret add pop pop mov and imul (bad) push or add adc and cmp jmp (bad) or push xor fldl and jmp popf hlt lock lock js adc sbb subl xchg jns (bad) movsb inc dec add dec (bad) repz stos xlat lret ds movsl push (bad) or idivl bound mov or mov out mov stc sub cmc js jmp in sub push add scas mov pop inc (bad) movsb or out push xor mov push push push lcall xor sub (bad) and pop mov leave enter and xchg xchg ljmp fdivl cmp and push mov sbb movb cmp and push lahf rorb xor std xor push jmp adc es jb mov xor in gs jnp bound hlt or jg scas cmpsl js mov mov not adcl jbe inc cltd push mov cwtl mov (bad) pusha les in (bad) mov jecxz xor jle decb sub lret in pop lds mov xor mov mov xor enter pop lret out mov push stc xchg mov mov sub int3 mov sub test mov push fs addl sub jmp icebp mov xor mov adc sub out (bad) inc orl ja mov daa sub dec sbb mov sbb or jns xlat mov outsl xchg jle cmp push or (bad) notb jmp testb loope inc and call sbb jb std cmc mov repnz in add inc xorb js or es mov (bad) rorb jo jl or cmp jnp mov rcrb bound mov add pop pop inc lock lcall call push inc leave adc adc xlat or push pop jmp int cmp sarb shr fwait jns imul push sub push and pop es pop mov scas pop ret mov dec or sub gs lret xchg subl fwait adc mov cwtl js mov insb add jmp (bad) sub pop pop rorl push andb add mov and shr cmp sbb jl into fist repz xor jmp pop xor push mov cmp sbb das (bad) pusha ret out mov dec sbb icebp push inc dec jmp test mov push cmpsl pop nopl movsl clc add (bad) jg insb ret or adc fs mov icebp outsl or add aam pop push lahf fs ret repz adc add mov test mov dec fsubrl repz ret jl rcl mov and add jge lea jmp adc dec fdivs push jmp loope dec ret inc push test xchg add push jg adc dec roll ja daa add pop jl test fiadd (bad) push imul outsl inc mov xchg (bad) add dec push in sub pop dec xchg mov adc (bad) insl lods jbe inc not push (bad) mov xor aas sub push repnz or push leave jmp mov pop movsb push push das std nop test (bad) sub push (bad) mov jo fistpl dec pop adc or add or fdivrs pop or and popf sub jge stc pop push clc shl pushf inc and popf jmp xor and jg adc inc out loop aad mov cld mov cmp imul call mov pop cltd dec dec loopne mov dec mov mov xor call and ss cmpsb inc mov ret pop fimul lret sbbl sub sbb sub bsf decb add dec jmp add jb xlat mov sbb xchg add mov lds push jne jmp lock cli xchg in test mov push dec cli lret jp push imul add add push push call add hlt lods push add mov es jne mov ret pop pop push pop inc mov and pusha cmovg jb jmp fdivr dec shlb jmp and jno jge ret push in movsl mov outsb popa dec or dec xlat add sbb jbe scas inc js or js dec add bound adc pop ja add (bad) pop cmpps and mov push cmp add jmp mov push jmp ljmp pop mov int out add fwait gs adc xchg xor les (bad) in pop add sub and rorl arpl jmp cwtl scas ret xchg rcrb sahf movsb add ds sahf pop push pop clc add stos (bad) shr (bad) enter sbb cltd jmp test inc in sub iret lret dec daa and push xchg add fwait xor lock les push push mov inc mov jp cmpsl jmp xor mov mov add xchg push adcb sub je jmp mov push (bad) testl add pop push lods fist jg xchg fcompl ds add pop and jnp jmp mov ret icebp push and in aad or add pop shl dec sub dec xor and nop xchg jb daa inc pop cmc and jmp xor sti adc cmpsl or jne pusha or adc popf je mov mov pop iret add adc add push loop push mov jmp imul add pop out imul mov fucomip or incb leave imulb adcb jmp movl daa mov repz daa pop adc xor fxch lret lods or add mov xchg addl nop cmp jl add (bad) int3 popa and cmp lahf sub lret mov inc jae cltd faddp cmp inc out or cmp mov add or arpl dec jb or add lcall pop or or jmp call bound mov and mov push mov (bad) fsts fwait shrb mov les add je cvtdq2ps cs xchg push push decb dec mov jp imul dec fmul (bad) leave or shl sahf xor mov and and or pop fild sarl jo and jg mov xor sub (bad) mov inc push push push mov xchg shrl or dec push aas inc inc mov xor lcall and pop scas popa jne sub mov es add xor mov sub shrb test mov fs add les out push add rorb jbe xchg pop or xchg mov addr16 sbb je rclb jmp push add stos inc sub lods or repnz adc sbb popf mov insb jg jp js ficompl xchg stc dec insl jns cmpsl orb and and and orl mov xchg das lahf inc repnz xchg mov add push mov sub sbb mov stos ret pop fild lods and (bad) out shl addl or movsb dec adcl sub pop aaa nop adc sbb sbb mov xchg pop dec sub or xchg mov inc sbb cltd ret dec push into out iret mov mov or push push pop or jg pop daa add inc out (bad) xor dec cmpsb or pushf dec popf mov test jl xor cmp push dec push fcmovb nop decb add push or add jmp jg sub ficoml test mov gs ss pop mov nop xor push jns (bad) xor and fwait imul mov mov xor mov add push dec shrb mov in repnz pusha ds dec mov mov pop mov out push push pop lock es dec push lds add jns dec mov inc push push fidivl in negl pop cld or lret and mov daa mov (bad) mov sbb mov xchg sbb test cmp pop dec loopne cli pusha inc (bad) repnz push popf dec push cli pop loop cmp addr16 push mov xor sub adc lock xchg cli mov sub mov outsl ja mov cli cwtl leave cwtl xchg popa sbb arpl inc mov addb (bad) lea sub fstpl cmp dec in xchg sahf pop pop xchg popf dec imul push add adc mov add mov fimul xor outsl rorb or fldcw pop sbb mov das inc incl addl mov or jl push fwait out add test mov dec sub dec lods inc cmc mov lret push cmp cmp push or in adcl repz push sbb push sbb add xor mov xchg cmp pop pop test and lods in adc and pop into add adc popf cmp (bad) cwtl pop shr pop dec xchg dec inc jmp push xchg repz xchg call jno out and in dec popf mov xchg popl inc fscale push ret xchg jno fisttpll jecxz test dec pop adc xlat jae jne add push and iret inc sbb mov stos aaa add out inc push (bad) pop add fdivrl lods or imul sub xchg xchg hlt roll shlb lds insl and inc mov cmp shl xlat mov and cltd dec jne adc lods inc dec mov fdivl sbb ret add mov xor or jo sbb dec (bad) and or dec je adc xchg dec ja push sbb cli mov pop push add mov loop dec sub pcmpeqd push lahf adc insb inc ret fild pop mov insb push sub shr push xor or out sub mov sub dec and icebp lahf inc jmp aas add in sbb inc mov pop mov mull das adc lods aad xchg sub add mov or jp pop or inc mov mov sub or jl xchg jmp adc into nop daa push fcmovbe cmp push add stos xor sub es jmp stc ficom jle cs je inc push test pop arpl mov sub pop push sbb adc push imull aas xor scas orb cs out cmp cmp stc test enter push add jmp mov or pop cmp inc jns xor xor mulb scas ja sub rorl sub xchg sub dec pop push or test and into test xchg data16 cmp push mov pop das adc movsb and adc pop rcll (bad) clc inc add sbb sbb daa jbe pop (bad) test sbbb stos jnp cmpsb out sub test add ss dec fsts mov pop cmp xor cmp push add xor out xor mov dec mov int3 xchg shrl imul push push dec (bad) daa and mov sbb jge js jg push pop cmp xchg out add (bad) mov leave mov sub sub sbb cmpb cwtl dec and ja pop add push dec icebp and cmp push push mov or mov lds sti (bad) gs jle insb mov adc sub iret jmp add xchg sub jmp lods sub (bad) mov fistp gs int3 and jl ret mov cmp mov rolb rorl xchg xor pop je mov inc test mov (bad) jnp and aas int push fnop or pop mov arpl daa jecxz repnz repz cmp mov add je int3 adc inc xchg cltd pop pop cli daa dec xchg unpcklps scas aam (bad) and in imulb or xor dec dec jnp mov sub sub xor cli mov add inc movsb cmp mov sahf and pop test inc sahf cmp mov sub in les inc xor jns mov cmp fs lret inc test adc xchg stos cmp dec sbb mov mov subb repnz xchg push (bad) pop out pop push mov dec int ds (bad) cs loopne push push pop pop out sbb push inc jno xlat xor cmp movsl jne xor aam daa ljmp or je xchg std or pusha mov dec mov shr push pop ss jmp ljmp xchg outsl shll mov loopne xchg mov pop xor aaa and shlb rcrb cmp push ja dec lret pop xor cld mov addb (bad) jge imul add xor mov sub loopne and sbb cmp jne cli dec lahf sub xchg fnstsw stc pop or mov push dec inc sub mov ret sbb lock addl and andl jae cwtl push pushf test dec sub pop enter shl mov rclb repz test leave shr mov fistpl or shr mov xlat stos mov loopne sbb push pop fildl push pusha in jnp fmuls lods inc movsb mov jns cmp outsb adc (bad) sbb add dec inc xchg push or lods (bad) push push and ret cmovg jo push inc adc (bad) add push push imul and cs aas js cmp (bad) push or rorl add mov inc imul inc inc bound jge mov cmp xor jmp pushf es ficomp shl cltd es push pop push add and lret xchg lret jo push push addb add sub imul mov add ss addr16 push pop push adc adc test sahf add jp sub fldenv ja rorb and nop cmovo sbb rcll push push dec and mov add or or cli xlat stc outsl dec int3 loope pushf pushf imul fdivl mov clc xor pop push faddl adc insl shll mov cmp dec repz add aam sub or push aad jmp icebp inc imul sub inc adc cwtl push hlt into and xor cmp mov mov ret jmp rolb movsl sbb push lds mov add jp add sarl imul popa sub and orb sub dec ret cs test and inc pop out out (bad) loop and mov dec push inc mov rcl loopne jle jge mov adc jmp data16 mov dec adc dec aaa loop ror inc jae adc popa mov repnz sahf xor pop ficoml loop mov push mov jno sahf cmc mov xor push shrb sub into pop xchg mov or adc out sub loopne das sbb xor push mov inc pop rorb clc xchg add test (bad) mov lret ljmp inc shlb sarb mov jmp xchg mov mov fwait ret je jbe push dec inc cltd sub jns xor cli adc mov outsb add cmp jo mov loop shrl jno adc xor or mov sahf dec or popa mov jns js rclb mov lahf jnp add xor cmpsb dec imul add jmp pop fldenv pushf (bad) sub sub pop insb mov cmp pop xchg fprem1 pop sbb dec pop mov add jg clc add mov mov mov lock sarl call nop inc mov data16 push imull ds inc fmuls into loope out lret sub arpl js clc je stc je ss rcll sub int loope jle mov sbb js xchg cmpsb movsl or push sahf sbb clc xchg pop mov ret loop mov test mov les ss pop iret outsl jl pop (bad) adc jmp jno dec cmp sbb pop hlt xlat shll out inc in mov add dec pop imul adc mov test cmp loop xor out push cmpb cmc xchg stc mov pop test mov or loope rolb pop xchg fldl2e or (bad) addl sbb shrb clc aas pop jg add enter dec inc int3 mov dec xchg (bad) lods add xchg dec fidivr sbb xor fwait int3 xor adc out dec rcll mov (bad) (bad) sub push or jno xlat popa hlt iret jl cmp arpl or imul xor mov or mov movsl dec in cwtl mov mov sub push mov in repnz add bound (bad) cmpsb bound or out rcl add ljmp test mov sbb jg sti mov sub pop mov ret sub rclb dec push fadd in jmp int add push hlt dec push inc lret clc xchg pop scas sub mov in push mov adc or lods cmp and enter fistp sub loop jmp movsb andb fadds aad inc xor lods ret imul fimul add mov fist adc push daa (bad) scas or push outsb or dec out movb push mov jns bound adc or mov mov call scas or push or cmp pop xchg pushf or push xchg lods (bad) sub pop xchg out outsb pop loop jl push add pop or xor int3 xorl xor xor push sbb aaa (bad) das dec loopne js push jge hlt push pop push inc pop mov adc mov jns andb stos xor pop sub xor push (bad) pusha jnp inc bnd dec add jl dec mov or aas test mov and mov lock lret rorb rolb mov and push push aad ret imul stos repnz scas xor jmp xor aas sub sub push add std fstpt and lods pop cwtl and lret xchg iret jl sub lahf push add xor ret xor into sbb ret adc or xchg or bound daa (bad) ficomp std jmp cmp mov sub and mov out pusha rorb add push jge inc mov and or and dec (bad) or mov push push test insl (bad) pop cmp xlat adc rol jg in jns or ror pusha pop xor outsb insl xchg in push sbb sbb icebp mov ret mov repz pushl rclb inc in push addb lahf lcall pop popf add dec sub insb jmp mov or loopne movb imull add add sbb aas jne xchg adcb dec sub data16 popa bound or or fstl aad leave push or add shl mov push stos xor lea push push negb (bad) aas add (bad) jmp cs dec jl xchg push pusha cmp sub and lds es mov add inc push add mov sub out ret out add fildl rorl hlt imul or jg idivl mov test and push pop imul pop mull jno adc pop adc inc inc cmp rcrb add fmuls lock add shrl icebp pop inc push inc enter jmp (bad) icebp adc (bad) call xlat aas adc stc call push bnd cmc mov cmp pop xchg cmp push inc push cmc inc and push sub xchg push and fmull sbb adc das mov cmc sub xchg push add pop add inc sti add mov loopne or mov jo incl lret stos jp sub sbb mov jne jle lds xchg mov fdivrl pusha or pop sbb push inc mov or pop mov mov je daa inc xor jmp add cmp fldt fstps mov das mov cmp lock push mov push sub cwtl inc pop insb xor and push and push ljmp rorb scas or jmp or jo jl popa cmpb scas adc das negl inc popl dec aas cmp stos rorl lea imul add or jne cwtl sbb inc jmp je lods daa enter ret jecxz jno adc stos xor out std test push pop add aad orb mov enter test (bad) mov out add mov js or dec xor adc pop pop pop popf add mov mov outsb or mov add inc lods cmpsb add sub shrl faddp push (bad) test stc lods dec jnp out mov inc adc push cmp loop cwtl push xchg cmp (bad) stos dec int and dec inc sti or sbb add xchg das mov mov pop push insl add adc sbb and lock jmp sbb and pop loop pop bsr shrb xchg and dec sbb nop shl xchg add roll sub ror jae mov je ret pop xor sti sub dec pushf jle sbb mov or jmp cs push jnp mov or xor push int dec dec mov mov xchg mov (bad) jmp or mov mov std push sarl stc sbb pop push cli sar xchg sub mov adc mov add add push or add pop in mov sbb idivl std jo push jo mov push mov add mov addr16 jmp push push es inc cwtl (bad) adc lods and add push sahf sub fnstsw xchg adc dec xchg or add jge iret dec add jecxz add pop xchg insl and jmp add ljmp inc sarl xlat hlt and (bad) (bad) or xor jle cmp jg dec pop les jae jnp jp iret ret or sbb pop inc or mov adcb mov rcrl dec push sub pop xchg xchg mov jbe inc sbb jmp sub lods fld test scas inc mov adcb push and fs jp inc or and cmp xor lock aam das sub add cmp and jmp mov int ret mov movsl xorl int3 test push and pop jb mov xchg stos or aad in xor in lcall out in jle mov addr16 xchg outsl push loopne ret jb les (bad) test or je or addl mov sbb pop inc mov (bad) cmp add mov ds int3 lcall outsb ljmp fs ljmp pop dec mov lahf inc daa ret cmc int add insb sub and aaa out pop push sub mov pop add xchg popf mov push push xlat mov mov jp jecxz push add adc inc and mov pop aam inc fsincos xchg in popf dec fxch lds ret pop invd scas dec add jo in add push mov into pop push stc add xor int and (bad) (bad) popa ss fistl cmp imul xor std dec test xorb in xchg test xor mov rcll adc or add inc out xchg lds movsl push in pop jnp adc add cmp ret jmp mov push out xchg outsb and xchg inc add por rclb push dec inc or push inc inc mov pop jo popf jne (bad) repz (bad) fcoml pop inc sbb iret jb (bad) adc push push mov ror out iret push shrb sbb arpl (bad) push mov inc dec jns jbe das mov inc xor mov mov aaa add popa fwait jnp cmp ficom hlt negb xchg pop push mov sub dec sbb push mov and dec mov mov dec inc enter add shl mov xor int3 sbb pop lods sbb inc xchg in sbb (bad) mov or xchg or mov mov sbb imul (bad) mov push psubsb les dec push test jns popl pop lahf addl stos add aaa xor aad cltd scas mov and scas inc imul add in aaa jnp pop cmc mov cmp mov sub push or leave dec out (bad) pop sub pop inc mov out out push adc inc test mov in inc mov pop inc fs pop mov stos jg sbb pop andb out das add mov jg stos (bad) push mov inc repnz mov jbe es sbb xchg sbb aad dec mov mov cmp pop sub or and xchg cs mov cmpl cld xlat push shrb sahf push rorl leave and stc dec in das subb call mov lret and mov add mov das push out adc (bad) cld mov inc das cli sub cmp jmp cmpl hlt xor test dec mov cli add xor push adc or fdivrs popl nop test sbb pusha adc cmp jae lret or pop sub jecxz add and mov mov jnp push ds add pmulhuw dec data16 inc cmp js fistpll incl sub jmp add mov adc and imul dec sub int3 sub es mov inc mov xchg scas (bad) or cmpsb or inc lret out cmp push xlat xor inc mov into mov jns sbb sub stos in insl adc fldpi mov shrl adc cli cmpsb ljmp and jge pop xor daa maxps or mov fstpl pop pop and cmp jb dec sbb and (bad) adc pop inc and mov inc stos ja sahf loope xor sub es fistpll mov mov les inc jl insl pusha cmp mov not mov gs push push mov adc add pop cmp cmp and xchg push cmpb data16 imul mov push sub mov mov neg sub mov jno icebp jmp (bad) hlt insb bound nop cmp cli mov or or xor sahf push sub sub xchg add jne pusha imul lret test sub jmp decl xchg or xor jp adc leave xchg std insl dec arpl pop in mov loopne mov loopne fwait syscall sbb int3 mov ljmp addr16 and pop (bad) jge cltd add or xchg data16 and pop xchg xchg out out xchg mov adc inc (bad) jl cmp fimul add popf clc or cmp pop mov jmp mov data16 test adc outsl or jge sub xchg fstpt pop inc dec (bad) gs jmp mov adc dec xor mov add xorl add dec push ret mov add outsl or gs lock lock add pop mov push xchg jne xor rcrl out add jo mul and pop jle lock hlt sub lcall sbb (bad) in mov out (bad) jnp ficom lods xchg pop inc dec mov mov cs cmp push push mov lods mov icebp loopne sub add sub in or pop fsts (bad) ds cmc cmp xchg test cmpsb add jbe int fmuls mov cs add dec add std sbb pop push mov movsl add outsl sub mov repnz inc aas dec add rorl push bnd mov in movsl xor out jmp repnz daa push inc movsl (bad) imul push movsb xchg mov sbb imul xor jle jle sub pop xchg pusha cli pusha mov xchg popa addr16 in xor pop leave lods jge iret or add rcrb fsubrs mov mov jmp push loopne push pop sub inc movsl sub add (bad) lods hlt jmp cmpl sub push and mov push jmp add repz ret xorw add (bad) mov add sbbl push ficom jmp push movsl pop addb popf inc idivl sub adc pop push jl xlat sub xchg cmp xor imul rcl inc sbb je dec jle sub nop mov pop adc imul xor enter out fs pop add stos loope inc adc lock inc xor xor inc jne pop push iret dec ret add cwtl adc sbb adc cs mov dec jg pop pop or add cmpsl arpl adc out stc push push mov xchg aam lret movb imul dec ds scas fsts (bad) pop mov add xchg dec add push dec or cmp ret push jne mov push push insb xchg ja out and push iret or stos lret mov enter lret xor push andl sbb fwait adc sbb (bad) std push sub cmp repz mov jp mov inc pushf pop cwtl fdivrl rorl fist pop pop xchg add pop dec or shll sub push ret aas and sub add pop push xchg (bad) cmc (bad) ror add jecxz cmp xchg adc imul jmp cld sarb pop jmp xor mov dec popf test mov out subb cld or lods add insb fadds inc xchg or test mov adc ja mov daa add daa push dec hlt fidiv pop decb sub sbb sub fisttpl sub dec jl xchg jp xor lods dec daa pop pop adc ret dec (bad) dec jle mov jne push and lds sub add out or das test pop mov push jno iret jmp lret out rcrb xchg js push inc inc adc dec pop stos add ret pop scas popf push lea xchg mov xchg jl jecxz test mov fnstenv repnz roll (bad) mov into les adc enter inc mov aas loope not jge ds gs and cmc shl sub sbb pop inc insl pop leave add mov scas dec pusha fstl and mov das or imul das hlt xor jmp push cmp xchg inc sub add push mov lret cmp (bad) sti pop and cmp cli testb add sub push push add sub movsb pop xor jmp mov (bad) sub fs icebp stc dec cmp add cmpb in imul and iret pop mov nop jno out push stc roll push mov mov dec adc sbb daa fs daa (bad) sahf and fistp addb adc cmp or mov pop and add cmpsl sub dec pop mov adc leave lret adc pusha add jmp inc push mov cmp pop push mov dec mov inc mov jbe push jl inc imul (bad) xor xchg fildll pop ja cmp push fmull cs repnz sub enter push mov dec pop mov shl inc stos movsb cmp xor mov cwtl std dec (bad) out inc jmp pop add pop push pop jmp lret fsubrs es test xor and fadds pop dec xor or aas nop mov std push add pavgw lods push push jmp mov jecxz pop loop mov jne pop or add (bad) push bound cwtl sub pop outsb adc shl mov lds test (bad) repnz push out sbb sub loopne or xor and sti xor xor add sbb pop popf jb add loope cs mov je dec out jo fidivr out pop inc adc push push or jmp popa orb push dec adc add cmpsl lock add pop sub xchg xchg test pop dec mov dec cmp xlat dec add mov jle jno ret add mov (bad) mov inc adc mov mov aam cmc xor in (bad) add and mov dec fdivp repz pop jmp mov adc sahf jns or inc pop xlat xchg into add cmpsl pop push iret leave sbb lss fs in sbb mov or insb sbb fxch inc jo rcrb pop pop adc or jmp mov sub int pop push fcomi and sbb mov arpl (bad) jmp pop outsb and sbb add and fiaddl jmp sub js or and xchg add pop sub mov cmp mov cmp push roll xchg je push pop sub idiv les push in pusha test dec and and (bad) xor shlb push sub lret (bad) lret push (bad) (bad) das lds and lea mov rolb xchg leave test (bad) jecxz dec mov ljmp push icebp push mov cmc mov mov ret orl push loop cld in in (bad) dec mov fldenv movsb pop jmp nop imul mov es inc mov and jno rol (bad) jl mov pop stos fs call mov push pop jmp into push xor adcb pusha and pop (bad) les mov mov dec in fucomip lock mov pop inc insl dec xlat push or call jb shrb and add sub jbe stc cwtl sub les mov inc test imul jg pop data16 push frstor call jmp xchg sti sub ljmp fcoml out mov or xchg pop xchg sbb xor ljmp sub cmp jo fstl pop ja adc jo pop jl mov push push pop lahf pop test (bad) stc testl jae cmpsb mov roll lret pop mov es bound aam mov aad mov icebp sub add cli icebp addr16 movsl mov loop adc inc add jg ljmp add add sub jb testl pop test mov aas cli bound negl shr cmpsb mov mov dec add ja stos stos jne or cmp or xchg adc enter inc jle out imul and fisttp ja mov mov psubb cmp ja pop pop (bad) aas (bad) and mov xor push enter dec pop sub mov cmpb push xchg lahf in rol mov pop mov pop sbb xchg dec push xchg lret dec movsl add mov add adc (bad) in mov xchg jmp and mov mov das lcall fsts iret sub sub and sbb xorl int cmp or or pop add sub (bad) pop and adc xor pop out xchg mov nop inc jae or add mov rorb cmp push imul push xor push sbb std jecxz pop or mov test jns jmp aam jae repz jge sbb inc add fbld ds inc aaa (bad) dec inc scas (bad) and pop or add jne std jle das jg mov test dec mov out pop lret ds enter push in and rolb adc fmull dec imul cmp (bad) nop and insl mov mov inc in jo dec pop stc test inc push movsl fistp pushf fstps mov or sbb mov cmpb mov jg les pushf adc ja testb sbb sbb or mov add sub ret fcoms sarb mov fldl (bad) sahf push adc adc movl outsl test adc pop push jg mov ret push cmp mov aad mov sbbl push or daa sbb sub jp adc aaa add das mov or in mov jo add das ret or sub (bad) or test in loop and push imul outsl roll mov or inc mov js addl mov ret in les jbe (bad) add (bad) sbb inc mov jmp dec (bad) repz push mov push clc adc lret int pusha loop sbb mov sbb sbb mov add aam push mov mov fstpt mov pop sbb sbb out aam xchg loopne or and test icebp ret push sbb pop daa mov add jle jno lret (bad) add sbb repz lret jns rcrl insb pop push mov pop dec cli mov fnstcw into pop and jg inc sub pop into das fisubrl js push push imul pop dec dec dec adc fwait clc mov push jns loopne adc repz or add fldcw fs and and adc lock pop lods push add jp add mov adc hlt rcrb pop loopne or dec clc bnd push add loop inc jae gs nop aad jae or inc sub mov adc sbb in sbb cmp imul or xor adc inc xor rcl xchg cmp or push sbb xchg adc or mov mov repz cli ficompl push push andl out js or mov dec sbb je jmp mov add scas push and sub adc js and bound das push outsb jne cmpsb or dec jp cli mov fild xchg inc shll inc lahf mov jnp repz sub dec sbb enter les (bad) sbb sbb jno hlt movb ret push xlat les jmp sub call xchg inc or lret pusha or mov pop cmp or iret push into das and xor arpl (bad) cmp (bad) mov imul shlb inc xor mov lahf xchg es ljmp pop loop jmp push mov adc jae add adc mov ja dec or inc push mov xchg mov nop add stc pop mov rolb cmpsl add or dec jge cwtl or adc mov or hlt lds xchg inc xor sarb pop mov sti dec or mov or hlt nop das push pop jmp and repz ret or cmp mov mov mov xchg (bad) cmp mov xchg mov aad pop ja test cmp int3 jns sbb xlat (bad) fsubrs aam mov frstor in fsubrl stos cmp sbb sar call mov icebp dec mov mov loopne jmp mov shlb or fs cmp mov imul sub push push push push adc mov lods inc cmp pop add mov xchg (bad) cmpsl or out jg cwtl sbb adc or fnstsw sahf mov pop rorl es das std xlat and adc mov test icebp adc sbb je mov out and enter jmp lret inc jns les jnp daa sbb pop pop add pop and fnstenv repnz outsb adc sbb pop (bad) ret xor pop lock xlat pop sub js inc fsubr (bad) mov fmuls pop imul cs int cwtl std (bad) mov sbb (bad) xchg or dec xlat not gs or push jl or repz lahf jmp ja or mov cmp jmp js insb int3 js rorl jbe sbb xor xchg mov (bad) popa shrb (bad) lcall add push pop mov adc jae sub outsl add inc nop dec or incl mov cltd sub and jns lahf pop sbb adc mov in cwtl adc or mov arpl sbb nop sub add xor addl mov inc xchg dec leave jecxz (bad) xor or out das mov (bad) stc fildl adc jmp push movsb fcmovnb dec mov loope add mov subl pop xchg inc ss xor mov addl out clc jmp jns stc outsb sub or flds xchg fisttpll xchg adc and adc or mov out (bad) jmp imul pop ljmp jne roll jmp inc fild add lahf cld or hlt cmp cmp inc sbb and (bad) clc add jnp and fnop and iret xchg dec add lcall lods bound js jae jle loopne lahf jbe jnp sbb or jo mov cmp sub cmpsb stc jns push mov adc shlb gs push ljmp scas ret or daa negb sbb bound out in sub mov add lret push add gs jnp pop sub adc add mov or repnz inc mov (bad) mov pop mov cmp stos dec loopne push daa inc ja mov scas sub xlat retw shlb mov add rcrb cmp (bad) fiadd divl aaa jge enter jne sarl stos test pusha cmc ljmp repnz add jmp shl lock gs out jb dec scas mov sub push (bad) pop ss mov push in cmp rcrl addr16 sbb lods mov or adc add cmpsl mov push aad pop push jmp orb inc pop (bad) daa mov xor xchg rorb cltd in out (bad) xor xchg insb stos nop xchg cmc int add sub fmul addl call or sub int3 adc push pop sbb pop push mov stc or les mov outsb std push cwtl xor jecxz sti jl ljmp pop sub xchg dec mov test repnz push and mov cld mov cmpsb sub push je mov pop (bad) add pop xchg push sub leave incb pusha dec adc mov sub stos je inc add bound push mov (bad) mov jnp cmpb jae sbb ds loope bound aam stos xchg or add jae test stc aaa mov pushf pop cmp out push pop fxch (bad) mov (bad) clc repnz sti cwtl rorb out add lods adcb push cld push fimul inc pop cld jecxz lret or push imul add sub inc mov je push andb cmc and mov aad and cmpsl jle or mov mov or xlat sbb or push pop js mov mov push sub add and sub ds nop cmp adc test inc dec js pop mov movsb xchg jmp and fidiv mov adc andps xchg and addl or sub add pushf or push push cmpsb popa add push fnstcw mov inc fild or push gs (bad) ljmp push lods pop mov mov cmp cmpsl repnz pop push not xchg mov push loope ret mov dec push adc xor jl outsb pop es dec out adcb outsb mov (bad) test xchg or and jmp sub add pop or fdivrs lds pushf mov sub sub (bad) aaa pop mov xor push insb pop stc fcom adc js lret xchg or jmp pop or mov addr16 test movsb sbb and mov testl sbb dec orl pop add cltd or (bad) mov or sbb mov sbb std dec mov add adc ljmp sub and xchg inc cwtl pop (bad) jne in (bad) mov (bad) nop cwtl cmpsl adc rcrb push and xorl adc pop dec push or adcl dec jge in call les dec orl pop insl gs (bad) stos in lea push std add add mov mov ret dec cmc shll pop push adc add pop add hlt shll test push sti dec je out add add push push push pusha pop out jns loop nop mov push lock jnp mov aam loopne lret or (bad) repnz insl cmp jmp xor jg mov mov fisttpll or dec xor inc jnp inc dec jae pop mov add mov xor sub shl xchg cmc add fcomip rcrl inc ja mov addr16 mov xor shlb popl leave mov popf cli xchg nop (bad) mov dec adc mov ret loopne inc mov pop push outsl popa dec mov jne negl cmp dec or push xor loopne fistpll push push push std or or addr16 js pop and lock or mov (bad) mov hlt insl or imul and jne jp fstpt xchg fwait enter jns mov mov push xor fucompp inc mov add xor cwtl scas outsb xchg lret das jle add sub pop lahf push int inc push mov decb out and add je adc aas ja push xor shr or testb stos cltd cmpsb cmp adc movswl push ja adc mov mov cmp adc or ss dec add rcrb jno imul push add cwtl add nop jge jb mov mov adc imul inc add cmp cld hlt fwait enter outsl sub ret mov xor inc inc add xor leave add push push orb nop adc sbb icebp xchg xchg sub sbb ljmp nop sub lea push add and cld rorl or mov sti and int3 jmp push in xchg lahf clc and jmp or xor stc insb xchg (bad) test aad popa imul dec out and dec mov mov add insl lods add or jno test loopne inc pushf inc mov (bad) and inc or xchg or cld or push in (bad) jb outsl inc sbb popf inc lods icebp (bad) mov pop sbb xlat addb push mov test stc adc pop add inc leave jmp sbb xor (bad) xlat jnp daa cld jp int test pop shr not mov sub (bad) and and fistpll dec scas adc mov scas push sarb mov sbbl jns call ja mov aam test lcall add xor clc push add push jnp out aam pop or cmpsl or inc rolb or pop frstor or mulb cmpsl cli or hlt dec mov xor mov jno rcrb add loop sub jae lret push lret addl jno jne jns push mov dec in fsub loop insb jge or rcrl push mov pop mov lahf hlt mov loop pusha movsl cmpsl sbb cmc xor jge loopne push mov inc mov cld add pop jno xor xor ret or xchg xchg pop push hlt add sbb fwait pop pop xor mov dec mov jl ret mov pop and out or dec loopne push pop mov push imul sbb sub sub repz mov add addl pop pop pop pop xlat (bad) push jne sub and add push mov xor jno outsl sub clc dec mov scas mov dec pop adc cmpb add cld repnz pop je sbb adc jg xchg es or bound clc cmp pop mov xor inc push sbb pop sbb in jecxz inc punpcklwd pop push out mov adc daa lods push add push push pop (bad) sub mov sar jmp push push ss xchg xor add sbb imul mov cmp dec imul inc test ret (bad) dec in cmc xor cmpsb push push call lock out repz popf jbe cmp jecxz dec call xor adc sub or adc sbbb and decl mov push push or rclb (bad) hlt fucomip mov or lahf dec adc cli push arpl add sbb push xlat sbb jne xchg js in jne lcall mov flds jb sbb mov (bad) pop (bad) aam dec rcrl add xlat jbe xor jo pop cld or decb pop adc xor add add lea or sahf xor sbb fsubs dec xlat push inc sub lods push mov cld ret popa pop jo pop xchg leave stc sti add fsubrs sbb jmp push mov outsl push xchg push jmp (bad) stos mov cs repnz addr16 (bad) lods dec movsl and xlat push mov mov push add (bad) repnz pop cmp inc jmp add into stc mov add fsubp addr16 or sysret sarb call test adc scas cmp xor iret jmp inc mov dec testl add int or xor aas and pop push (bad) (bad) or lock arpl jnp xor inc push add mov jmp pop fidivr jno ret frstor adc xchg push arpl xchg lret dec ljmp data16 lea std dec aas push or das jnp rclb pop in xor dec popa and jmp rclb fs int3 add ds ss fldenv mov repz pop iret in add lea or aas and sti pusha pop xor jnp fwait les pop pop sbb mov fcomps aas shrl notl sub bound and jg je and fist popa mov cs (bad) mov dec add or dec mov jmp (bad) mov xchg or testb push push mov mov xchg cs adc in js lahf addr16 push mov dec out bound sbb mov cmc pop xchg mov xor pop push mov lahf sbb adc popf test sbb inc inc lret call sub adc xchg mov xchg mov and scas stc aas pusha mov test xchg sbb dec mov mov dec lcall je aas xor repnz negb push jmp xlat fimul dec dec cmp sbbl hlt lahf jmp std jmp jns and mov or pop jl jae fsubs sbb add sbb or les outsl (bad) or lcall or je gs lods inc cmp daa pop cli inc loope or out pop push push das mov jmp test outsl gs inc loope fstpl cmp mov dec mov cmp xchg inc or and adc es dec pop add repnz adc inc bound sub std or add mov je mov xchg push pop pop mov mov xchg out in cwtl or jmp loope adc jbe clc (bad) cwtl icebp pop enter idivb gs mov pop pop xchg pushf lods hlt mov ljmp adc jle jmp pop or sub addr16 jp jle stos cltd jg mov icebp test test rclb pop sbb adc and leave sbb mov sbb pop aam stos add lret sbb add mov pop xchg aaa inc dec cmp and in jmp mov lods mov jmp sbb mov ficomp cmp lds mov in in es push xor out jecxz sarl rclb push or mov mov mov add inc aad add push scas loop ret sarb inc mov jbe mov sbb mov mov les push add push lcall mov jp mov enter pop add xor pop xchg fsubl sar ret jns test adc dec popf inc adc test jmp mov and (bad) pop sub sub xlat mov repz (bad) cli sub pop dec push andnps pop adc pushw repnz and aad push mov sub pop jmp add lock and rcrl xlat or mov inc xchg andb es mov adc daa inc inc ljmp mov jbe jle adc mov mov (bad) notb les subb (bad) cmp divb jmp aas hlt fldl inc mov jb add adc or sbb rclb add mov jne cmp or (bad) adc add xchg test out in aaa adc adc ljmp adc push add mov mov cmp xchg hlt add mov je into pop pop and pop jns aaa es inc mov dec cld adc xchg cmp outsl mov mov or popf sub mov repz sub adc adc lahf and scas lret test dec test sub jne lock pop ret mov nop jg add and sbb imul rorl dec push shl pop cmp xor sub decb dec fisubr scas nop fs rcrb sbb push test loope add cmc mov popa xchg jg xor jmp jno popa cwtl mov or pop inc add xchg rorl pop mov add mov push repnz mov jecxz jbe mov adc ja (bad) jne pusha or add sub loope mov push outsl adc gs mov in in out dec lds (bad) mov daa ficomp xor mov mov nop mov (bad) and rclb adc push mov push pop mov cmpsl aas pop nop add out out cmp push lods mov sahf or pop dec xor int3 jo pusha mov lock dec leave fcmovbe pusha enter adc in mov add fstps insb dec stos cmp shll cli cmp (bad) movl push adcb gs or mov aam stos xorb adc ja or stos mov mov lret jo xchg inc sbb sbbb pusha jno cmpsl inc dec xchg push or in add int pop mov jle daa jno mov ljmp inc push shrb scas and jmp fdivp movb jg pop lods inc fistpl pop cwtl jbe inc cmp std sahf or cmp gs mov lods jl fild push orl xor pop push dec and loop sub pop clc jl (bad) jae aas std (bad) (bad) int jo adc fwait imull out das jle jb mov add adc add or pop fsts jp cmc push or adc pop fadds xchg aas push and test inc leave inc aaa push or sbb bound pop aaa dec and mov cld push and sub dec (bad) jmp scas lods frstor aad ret add dec shrb int mov mov cs ds mov push pusha mov imul loop arpl xchg mov mov adc adc (bad) pop test arpl add bound mov dec aam push push adc ret xchg out add test push pop inc int iret mov add fldcw xchg inc push call jno sub ret popa insb push or push inc faddl (bad) lds lods mov cli (bad) test mov push push pop dec sbb icebp pop (bad) mov sub enter sti xor mov sub je,pn in jb jne not pop pop inc pop movsb mov imul adc sbb push mov inc loop sub std lret je (bad) out ljmp cmpsb sbb add cwtl mov mov daa (bad) jno fs repnz add jg inc pop adc iret dec pop mov sub mov pop repnz cli into jge mov pop fdivs rol cmp add ja mov cmpl sbb push in add je and stos (bad) cmc ret mov test jo std push or jno lahf fstpt out cltd sbb stos add and outsl mov movsb es rorb add push in dec neg inc (bad) cmc in repnz in (bad) lret ret push inc adc gs cmpsl frstor mov push test and dec fsubr in sub lock idiv mov pop shl dec dec sub inc cmp stos adc and (bad) ret sub add push mov lret push dec rclb jb push mov les pop out pop xchg ljmp out lea push dec in fisttpll sti push push adc repnz cmp adcl jle xor pop movsb icebp xlat sub enter dec add test jle in add outsl mov ret jns (bad) adc jmp mov insl xchg (bad) push push ljmp mov inc pusha pop inc ret or test push mov sbb fbstp out jmp push and stc pop adcl lret enter xorl add orl add and mov leave mov push mov mov in xchg pop repz sbb ds mov push jmp faddp or jmp or test jnp idiv inc xchg xchg fdivr push and push repnz test push cmpsl inc push out mov mov imul jle xchg fidivl incb leave cmp cmp in lock xor addr16 psraw mov sbb test xor insb roll mov aas sub add test es outsb or or inc push mov lret or cmp add subl or cltd mov js stc push add adc (bad) mov rorb and xor jbe nop fldcw cmp pop dec lods scas lret push arpl mov and mov orb ret lods jmp pop bound ljmp fstps jae dec xor in xlat or int3 mov and mov das rorb nop or rcll push mov xchg xor cmp or (bad) cld push loop inc add mov pop sub sbb push mov les pushf sub movl mov aad pop mov pusha dec jmp sbb sarb add cmp cltd (bad) outsb sbb xor inc cld in sub or cmp (bad) jae jo rcl push jbe add cmp daa or jo ret repnz mov mov fistpl cwtl adc (bad) push and xor ret ds inc repnz jmp xchg mov cmp dec push and add mov adc sub data16 dec or fidiv out or jmp popa lods das pop jns mov cld jp and dec jmp pop inc ret insb sbb add jmp ficomp lea mov dec mov mov in mov add cs adc pop dec mov mov add dec ret cli mov inc xor sbb push jns sbb or adc cmp jno repz push push repnz add dec movsl jl or or sub cwtl xor jmp fstps mulb loop jge lahf addb popf repnz xor sbb int push xchg jno adc mov xlat in cmc or mov dec inc js dec pusha mov cmpsb adc loop stc insl daa and imul mov mov addr16 mov xor add pop jmp mov fcoml push jo scas pop push adc or fild push in icebp push sub sub add rol dec pusha in fnstenv in stos sbb mov sbb ljmp sbb stos into pusha pop jmp mov push push pop popa sbb mov loopne mov jbe int3 inc push mov xor push dec push int3 fs fldl pop notb jmp dec push enter add or pop mov inc jmp adcl loop aad mov pop dec sub shl push or loop jo sub jge and jg lods sub pusha dec pop jmp stc sub aaa das add xlat and add pop cld lods mov iret mov in add pushf mov dec mov icebp push cld mov imul mov scas push and sbb mov jb or pop pop or mov jmp xchg sbb sbbl ljmp mov sti fldt pop popa pop add add push and jbe jmp mov movsl pop nop add (bad) test adc or ucomiss jne xor adc int xor pop sbb (bad) sub pop gs sub in mov scas xor jne sub aad mov cld pop clc xlat xchg (bad) or inc push pop pop pop mov mov lahf adc adc sub xor pop inc fldl imul icebp add cmp add fdivrs leave insb sub adc add lahf lods mov in repz daa in push daa inc rcrl les fdivl or sets imul iret movsb mov adc jo incb daa push or mov mov add mov lret push (bad) xor sarb push (bad) push bswap sbb xchg roll (bad) into or cmp dec fsubrp adc rcrl loop mov push cmp mov jae mov popf ret rorb je stos stc outsl ret mov cli sbb add jg jmp add add push push jne loope nop hlt std dec pop mov push push pop xchg cld jmp out push mov sti fsubl movsb (bad) cmp jb aas jmp adc xor cwtl add roll pop xor mov mov push outsb add sub sub lahf xchg and ret push cmp adc push add lock fimull or inc (bad) fsqrt imul lret ret mov jo or push ljmp pop mov scas mov decb jecxz push dec out sbb jb cld test aad adc mov je mov sbb xchg sbb push or outsb jmp fdivrs adc and stc cltd and mov gs lret mov xor int3 fsincos das nop rorb mov and add movd sub dec pop or sub ret cli add ja test jmp loope lret xchg in pop inc loop cmpsl out add mov es and (bad) cmp or adc adc out mov out mov pop sub jo xchg jg je mov inc jge out je pop leave nop pop cmc mov gs sbb lcall inc add push xchg mov out pop push cmp fistpl jb pusha xchg add push fistpl xchg aad ljmp add jp sub xchg js (bad) xchg fstl xchg push add pop mov (bad) push push pop icebp xor fwait andl cli int fldt dec sub mov movsb fadds mov cmpsl or mov lret sub in dec inc bnd mov popa lret pop pop aam add jmp push mov mov mov add fsubrs push not jmp jg and aaa add addr16 dec sub out das push (bad) push cmp mov inc stos push sbb jmp not or jne es mov and inc and cmpsl clc ds lret out sub adc adcl (bad) es sbb and cmp add jecxz adc sub das add push jb mov xorb pop sub dec incl adc push mov xchg push loop sti lods shrb mov popf xor movsl lcall stos and dec mov mov jmp inc jb in pusha into sub cmp rcrb aad jl daa imul push mov add lahf inc xorl or or xor add add bound add sbb push lea adc mov std pushf insb daa call movsb popf ljmp xor push push xchg int3 mov into popa and push xor push sti fiaddl fildll movsb es pop bound cld scas das leave push or jbe outsl inc jle test repz out push pop push cwtl fiaddl data16 outsl jmp lahf stos xor int3 inc and sysexit (bad) dec outsb ja inc jmp mov inc (bad) pop and pop js ds or jns pop outsb or pusha pusha repnz in lahf adc mov push cmp sbb cwtl add push sbb xchg fcoml add pop xchg add push fcomps lahf test jns mov adc movsl lock sahf mov (bad) jmp cmp addr16 (bad) or sahf sbb jno dec jmp adc daa pop push aad inc dec sbb rorl mov pop jb mov and loopne decb stos push adc lahf in dec adc ret cmp xchg push aad ljmp lahf je icebp mov cmp push enter in stos mov pop popf inc inc or fwait and fstpt outsb pop call and dec ja pop push push sti mov inc add adc dec out cmp ljmp out sub frstpm(287 jmp push and les pop je mov int push push push mov sahf xchg mov add rcrb push enter jno pop xor pop cmc pop mov pop scas lret ret or (bad) push dec in xor and jb (bad) pop lret push sbb or xor xchg and inc mov add pushf pusha pop pop jmp add out cwtl inc add add sub mov pop std sbb hlt or mov (bad) notl stos xor aas pop jl test loopne push cld and ds dec xor sub jecxz add sub jns imul sbb pop sub push xor sub add mov not jp cltd loopne pop not jge outsb add sarl adc dec leave add inc or mov dec mov inc aad add neg (bad) xor dec into push ds push add shll add fisttpll enter cwtl scas sub out stos clc adc or xor pop pop insl dec test fadds and cmp inc test (bad) jp pop mov daa daa adc sub inc shl (bad) inc and inc and mov cmp adc dec call dec or sbb (bad) mov hlt sub stc (bad) mov repnz ds (bad) cmp add sbb roll sub fs ja incl ja adc mov mov out lahf jle pop push aam push push jbe loop hlt mov gs sbbb push lods cmp cmpsb and test mov test orl mov pop daa aam add xchg sub or insl ficom je (bad) faddp cmpsl pop xchg and xor or pop inc cld xlat inc mov fisubrl and push jmp fcom out and fmul (bad) adc ret stos push (bad) aas cs and dec clc adc pop jl mov loopne push and dec and push cmpsl fisttpll (bad) push add xor ja not mov or jbe in outsl cli add push pop sub mov mov mov pop cwtl cmp mov mov nop pop jne in test mull shrb (bad) inc xor push scas sub jg dec rolb lahf lods or jmp inc push add ja pop inc adcl push icebp test ja mov push aad adc mov add clts mov jmp mov popa bound inc sub (bad) mov not lock mov mov mov mov aaa or jne rcrl cmp in mov fbld jecxz popf (bad) into and adc dec scas add addr16 jp notl xlat fiadd xor test test sub mov jo cmp pop lahf into ret adc push popw pop lds pop fisubl shrl pusha adc pop dec int3 sbb or mov pop or cmp mov lret rclb push jmp dec inc fistpl mov cmp jae cltd int3 jmp (bad) push ffreep push mov icebp (bad) jle popa repz and xor jge or insl stc das aad jmp and pop loope or fwait sar mov pop push pop scas ja repz jae repz ficompl pop mov xchg hlt (bad) pop mov aad jmp xchg pop loop out pop add xor nop jb into adc fiadd jge jge jmp shlb test and daa xor mov fdecstp adc xchg xor mov xchg pop mov (bad) mov mov sub and cld insl xchg xchg mov ja int adc ret jp xor outsb das lds stc xchg das addr16 jmp inc dec cmc mov jge jno pop push pop mov dec xlat stc popf jmp add cmp dec add cmp cs and mov out repnz cmp icebp jnp push in out or lret sub push pop jno imul jnp add pop mov imul lods jno ret ds push push sub inc dec sub xor dec dec mov pop data16 cmp ret pop popf fisttp and ja cltd push hlt out push sbb sahf aam adc shrb fdivrl leave xlat sub add dec aas divb dec fisttpl push and sub xlat andl ret std fidivrl xchg addl mov jmp fbld call sub loop xchg mov pop rolb sub sub mov push dec mov stc add stos add into push insb xlat test lds pop mov sub push sti lret jae es dec frstor es adc inc sti mov stos or xor adc sbb or lret sbb jmp sbb in push xchg adcl imul push clc lea leave and out or pop jg dec mov out jnp push adc xlat sub mov mov pop mov xchg or lret std adc fdivrs mov std mov addr16 pop jl push (bad) aas stos (bad) mov xorl shll repz loop stos sub mov push add cmp push jnp sub cmp pusha mov imul leave mov (bad) and and adc movsl push add mov (bad) mov pop or mov shrb mov xor xor mov mov dec xor std fsubrl bswap inc mov lods dec ret mov mov and (bad) push push orb push loope pop mov mov loope das loopne pop adc sbb aas or lods inc adc or xchg ret dec pop pop mov pop jl xchg mov aad in sub mov iret movsb inc adc xor idiv mov mov pop movb stc and add jne push jge pop cmp jnp push mov jo and dec bound dec insl out add xchg test pop mov push xor push sbb test and xchg aas add (bad) repz fs sub out pop xchg adc fimul and xchg and add push faddl xchg push mov das std mov jns mov xchg pop push xchg imul and xor js xorb jns and add sbb mov sub pop push jmp xchg mov inc ds (bad) orb clc in pop sbb daa mov push cmc cmp bnd mov push xchg pop test pop inc dec mov cmp and imul or pop xor sahf sar divb push ds inc xlat push mov popa add xor mov repz clc pop nop or jmp shll mull in (bad) in push mov mov shrl lret mov cmp cmpsl int3 sub das aam pop or or add push dec push out in pop adc pop inc scas xor pop (bad) push (bad) clc negl inc xor repnz push sahf cli cltd rorl pop rcrb mov lahf add sub aad jbe or pop test shlb ljmp and pop leave lds mov and mov xor lahf hlt xor or test cwtl leave clc xchg mov lcall std test or cs dec and mov aad sub add push push add sub jmp fimull jp jnp ljmp pop enter add xor inc jb (bad) adc (bad) or push add mov mov mov add jmp nop outsl or sbb ret testl into mov sbbb mov scas (bad) hlt mov or lock xor mov aam dec mov subb xor lahf js rorl push jle insl rcrl repz dec pop push mov jmp add inc inc (bad) push xchg cld push clc mov mov push or popf ret pop push ljmp push nop rclb loop dec adc cld add inc jge jmp xor jo cli cs sbb jmp dec dec enter jnp dec push jmp rcrl into dec in cmc jbe std movsl xchg mov jmp in pop dec dec std xchg cmc cmpsl imul xchg ljmp out and sub pop push outsb push inc add (bad) adc mov push and sub (bad) cmp lret out dec add jmp data16 pop push mov adc mov sub pop mov test sbb lea pop push and es add sub mov push pop popa and inc shrb push aaa mov add jbe lret jmp (bad) repz pop rorb mov adc sub test cmp pop sub xlat sub mov idivl rcll cmp (bad) sbb jge (bad) adc icebp xchg aas lods imul mov sarb inc mov jecxz shlb popa ja lret xor jmp pop xchg out xor stos cltd (bad) jmp insb sub push rcr or sarl fidivr aaa lea mov jecxz aad push or imul ret dec cmp dec ficompl lods sbb mov int3 adc cli pop jmp push add popa xchg push cmpb cmpl add pop mov push jmp and dec (bad) je in mov xor enter call inc enter adc xor mov mov rcrb sti sbb dec (bad) fdivrs sub jge jbe xchg negb movsl xchg inc (bad) jg jge movsb les or ds lds inc (bad) iret shrb jno mov xchg sbb mov dec in stos xchg insl incl rclb add dec fsubrs sub push mov cs jecxz inc adc bound sbb add and sbb jge jl add or pop add inc pop test fmull or push push pop or xor repnz adc cmp (bad) int3 cli das (bad) ss nop inc movsb (bad) out lods or pop std sub hlt pop mov cmp xor jno aas dec rcll cmp mov mov sub jmp jne inc gs sbb pop push push pop test scas lea hlt mov xor out mov mov inc pop pop xchg jns ret fcomps mov xchg lods jmp xor shl in inc iret rcll out push lods or out xor mov sub adc les jns sbb cmpsb ret inc lret negb xor lret sti push lods shlb out inc xchg cmp clc sti les push xor cwtl popl pop data16 jmp hlt out sbb sub out lods into push rol in neg jo jae repz xchg or sbb jmp jno or and push out jl scas xor pop add into ljmp pop aad sbb stos std arpl adc fwait bound mov push xchg das das insb cwtl clc push jge rcll sub mov lcall inc adc test mul cmpsb dec mov mov nop xlat test or (bad) hlt les mov or cmp ja dec fsubr (bad) mov rep xor lahf pop ljmp lock or xor addr16 cld js jmp or pop sbb ret cmp mov xor je push xchg pop std arpl or push adc cmp sarb push pop shrb fwait es push push sbb add inc push test incb cmc mov push add sbb mov nop inc inc std jle or out dec inc jns mov or inc add stos add or stc xchg mov inc ds loopne out jp sbb xor sub in cmp and mov lahf repz push fisub into into test cltd aas or push mov (bad) mov jbe or xor xchg or inc adc lret out repz sbb mov pop xorb add sub inc (bad) adc cmp sti outsl jle inc test sub and add xor out repnz mov pop dec and or pop mov js (bad) pusha inc arpl dec xor add stos and jae or pop jo and cmp pop ret jne rolb cmc in dec xor cwtl and mov dec pop mov jno andl mov and dec sub arpl imul push pushf pop mov pop ret pop in push fwait stc sub adc sub mov subb mov aaa sub and inc in and add cwtl jge fnstcw cs sbb cmpsb cwtl lds dec aas xlat mov jmp (bad) xlat pop push xor pop adc fistpll fwait mov mov add inc (bad) or repz movsb mov add dec xlat in or icebp jle jle pop xchg push es or or inc std hlt jmp data16 push xchg jge pop enter jbe pop push pop xor push or mov out add push rorb call call jne inc and pop shl sahf mov cmp push or pop adc adc fnstsw add aam jmp lea sub pop sub jmp icebp push push jns cmpsb stos sub dec mov adc repnz mov add pop jmp push pop dec cmpb in je push popf cld pusha popa xchg pop into fisubrl test pop movsb inc add add xor lret add imul mov mov (bad) loopne lgs pop push addl shr (bad) xchg and les (bad) roll jne outsl push enter cmpsl jl mov and mov pop lret aam mov pop cmp xor clc fdiv scas pop (bad) hlt lahf add clc push mov xor in xchg jo push mov sub inc (bad) (bad) jae into lret jo and call adc pop sub adc call push aaa movsl cmc into mov and add add out mov inc push or inc js (bad) or inc add clc push aaa mov or jle and (bad) imul sti inc pushf lea sbb movsb jns lock nop popf ret dec xor sub sbb jmp mov mov arpl lret cwtl lret pop xor les in movl mov xchg fdivs xchg roll add repz or mov pusha and bound push outsb mov fsubrs mov cmc cmp push cli dec stc hlt ljmp pusha decl cmp ja icebp inc dec sbb stc pop or mov adc push test mov mov adc dec out out inc push imul popf push pop dec cld (bad) xchg inc rcrl js test or ja and sbb lcall jo fmull clc imul fstpt push xchg push repnz stos nop pop loope or jmp dec nop movsl je lock pop push adc inc xor mov add sbb jns sub jno (bad) out je adc xchg jmp cmp or shl mov mov mov mov inc test dec out add icebp call (bad) adc dec pop outsl int3 (bad) inc dec call mov sbb cmp sbb scas bound sub push jb test pop cltd add sub test push adc (bad) dec rorl out push insl adc sahf ja dec aaa pop adc lahf icebp pop das sbb roll testb daa push dec repnz mov mov pop loop or jl and xchg les call or inc mov jmp sub dec push dec int test pop inc sahf das stc push adc sub dec aam subl push or and xor rolb rorb jmp cmpsb inc out das fs cwtl cld push jbe shrl add cmp in jo xchg leave mov xor fsubl pop aaa jmp cld (bad) nop add xchg sub sti loop lahf into jbe leave pusha inc pop repz or rcrl or jge xor jne test or into loop popl pop (bad) (bad) sbb add enter inc mov fldenv out or rorl adc cwtl mov dec xor dec (bad) cmc rorl add cmpl clc or xchg xchg jmp xor jo adc push push or or cmc xchg xchg add mov pop cltd popf add xor call pop not loop leave dec push arpl test dec mov das push push in pop loop push add int3 daa mov and into mov outsb pop mov jl xor ret icebp jg hlt repnz test fildl mul es mov xlat rorl cwtl and icebp dec adc xlat loop sbbl leave insl ret lods fwait movl push es movsb pop mov movsb cmp or fist and or cmp add mov jmp lods mov sbb repnz sahf out pop mov es push mov int mov outsl cmp xor sti or roll sbb mov mov fs (bad) or or jo inc std or or mov loopne imul lock lcall test xor outsl or insb sbb lods faddl and add mov out add rolb fwait mov cmp dec (bad) rcll or mov mov inc fcoms cltd mov addb cmpb repz add xor push leave push and cli xor add sub xor ret or inc or andb or or cmpb add imul add popf or icebp fwait inc sahf js (bad) cmp sub fstp inc pushf add subb je out xorb rol or jno inc nop lcall pusha sbb xchg rcrb mov and mov pop xchg cmp mov inc adc nop add jle or or cmp mov (bad) sbb jecxz add adcb cmpb cmp enter sub or popa or adc xchg jo mov adc or sub std inc pop enter xchg loopne push inc add xor jl jns xlat inc shlb mov incb dec clc sbb jbe xchg jo mov bound cmp insl add add adc jne sbb sbb rclb cmc sub into stos add add xchg push mov push (bad) mov inc jecxz dec push mov pop xor push mov js icebp sub or (bad) loopne xor and leave (bad) push ds insl inc jp xchg fwait or dec fwait jo das and mov push mov test sub cmp std and and outsl inc pop fist xchg lahf ss in scas dec daa (bad) insb pop xorb mov (bad) cwtl and or out incl ds or lds fisttpl lret cmc adc mov inc outsl or sub imul shr imul add sarl and lcall mov xchg mov lcall leave ds repnz cmp inc dec cli sub dec ljmp mov add mov loopne and sbb mov (bad) mulb rcrl ror jmp lock jmp in mov dec dec xor or sub add cld lds out add pop jbe sub jo orl in int jg int3 (bad) (bad) or leave ds sub sbb (bad) es push xor push testb lods test mov dec push out outsb mov dec push aam xor call inc or pop push mov andb lock hlt into push pop or (bad) test jns daa add pop push sbb inc ret or dec cmp negb pop aaa cmp inc pop mov and push add movsl mov mov fstpl sub or cmp or nop mov fsubl ficom push push push ss inc mov pop dec adcb stos xchg sub mov xor adc (bad) jmp loopne dec popa prefetcht0 pop fs std jno out clc push fnstcw adc fldcw mov fsubl and xchg pop and add dec je pusha or std sub lods pop add jns (bad) cld cwtl stos jmp test rclb xor out push pop daa mov loope syscall inc inc jb mov addl dec sub pop (bad) shlb push push push mov bound outsl mov int out pusha jmp ret stc out dec ficompl daa push cld movsl jo jno es inc sbb fdivr adc sahf adc jne xchg mov icebp pop mov inc cmp cwtl push xchg addl das adc test dec cmp add sbb mov imul jnp insb int3 cmp or xor jne fwait out pop adc pop or les adc jecxz dec stos (bad) push and cmp inc pop cmp dec outsb and (bad) repz or push mov mov roll pop sub or adcb and sub cwtl data16 or mov dec mul dec push (bad) insl inc fsubl shl push add push jmp in adc and ret xchg pop xor add pop push call xchg scas lret pop xlat clc push mov cmp les rolb mov sub adc add jle jg and push or (bad) fucomip pop push jnp add fs dec (bad) ficoml mov and inc bound pop inc or lahf add and and lcall jl inc push std xchg inc scas fdivrl or inc xchg mov scas fstp and mov jecxz adc sub lods jae daa mull adc das pop xor icebp or jp push or or int mov daa pop jnp jmp (bad) cltd xor push shr lahf pop jb pop sub xchg push mov scas push pop test repnz fstpt (bad) movsb sub cwtl jp imul cmc jl aad stc lcall fs mov pop (bad) cmpsl add push jbe sub lea or cmpsb cmp aad jg add clc cmp or jg (bad) jb inc and push and pop add outsl xchg jge call (bad) pop sub adc sarl shr ret gs inc adc inc mov (bad) inc push hlt pop popf call inc pop jne loope mov mov or stc out push cmpsl in push xor iret push jmp hlt js add jg mov ds cwtl in xchg (bad) loopne jo push push push xchg add add out fwait inc jbe and add jmp inc and lock cmpsb pop leave data16 cmpl call jl xor adc xchg or add push pop fwait adc and pop aas mov xor mov and add fstps (bad) scas xor outsb cmp mov addl mov scas sub or es sub jmp stos leave test or mov jae or pop in lds dec jbe push mov pop push outsb mov inc sub jne mov movsb lock leave push or sbb and (bad) out mov pop or pop mov mov mov jmp pop xor mov and and cmpxchg (bad) jno adc mov cmpsb arpl sub mov pop add jae scas test shr inc cli hlt cmp sub out sbb push or dec lea sub fwait jbe jo jl sti pop inc push push mov dec push sub add fadd jmp add popf push into movsl andb mov xchg pop dec (bad) fs pop jae dec imul mov inc popf fldcw into daa push jmp adc js add pop bound in cmpsb mov test xor out push (bad) push mov or jmp cmp pop loope cmp xchg cs inc mov cmp xchg or jo lret enter add js mov mov mov or sahf xor push les and or outsl dec fldt daa or scas clc inc pop mov dec xor dec packuswb jnp loop lcall aaa lods aaa das lock jmp jmp sbb (bad) adc inc notl pushf add push jle and push pop into mov jne into loope fs mov or mov ret pop xlat mov fldt adc xor pop test or and sub lret sub or pop inc mov pop (bad) insb sub pop es mov adc and push inc add (bad) mov cld xchg mov js out mov das pop cld int3 pop pop xor xchg push and jge add sbb sub xchg clc popa jb add and test jp or xor jge jae xchg mov pop shlb lods adc aad xchg add js fs xchg mov sub and not leave in or inc sbb cmc imul mov mov push inc leave nop sub xor int sbb pop and dec lret cmp inc (bad) add inc sbb ret or or push and or jne add stos test cli adc sbb mov imul xchg repnz lea dec iret xchg pop into bound inc mov ficompl sub push (bad) arpl cld mov pop clc enter cmp (bad) adc push mov add xor std cmpsl pop mov lods add ja sub add data16 jnp fcoml nop or shrb int pusha or push out movnti jmp add fcomps insb adc psrld adc int3 rorl sbb or lret adc push jmp imul je xchg negl cmp ret or stos sub popa adc add xchg push std adc pop cmp lea and cmp outsl add daa ss inc nop pop mov lret mov (bad) and xor sbb pop aad adc xchg and dec mov dec lds enter test jmp and pop psubusb xchg call xor add xorl fsubs ja popf (bad) in enter and cmp xchg int3 push and bound not hlt pop (bad) pop popa fs push pusha in cmp or mov mov jmp loopne inc adc xor mov movsl add push mov in xor (bad) lahf push imul and push stos adc shrb lea dec daa mov sbb jg xlat mov mov in test xor out pop sbb jne push sahf mov lock jne lea and mov fldenv dec cli xchg test popa push cmp mov lods add ret cltd add push call sti outsl sub movsbl out daa aad fs push data16 pop dec or inc jo or add sub pop jns or sti add mull mov pop nop jb pop inc cmp repnz pop jmp add call and clc ret add in pusha outsl push arpl or push imul pop test xchg js movsl adc aas faddl add or or pop les mov movsb mov out or jl cs ja sbb jmp or mov pop cmp mov add or inc adc lret xor push sbbl xchg or stc std push sbb cs xor inc xchg add cmove clc dec stos rolb aas lock pop popf jno mov cmp jne dec sub testb outsb imul shr add xchg sub pop mov pop mov dec and sbb pop orl sbb int pushf inc lret cmc std push inc add icebp pop popa out je mov mov ss dec sub into mov hlt arpl push add inc arpl mov push decl add mov (bad) xor jmp cwtl popf lock cmpsl mov ret add into sub mov sub (bad) jge scas pop pop xor call mov call out jmp mov sub flds lcall xchg mov push mov cs pop pusha icebp pop fs enter es push xor scas xorb outsb dec jg push and test adc stc push dec sbb and sub jmp adc dec int in sub test or cli iret mov pop mov cs ret sarl dec push pop addl neg or cmp (bad) rorb xor int adc cld mov add out dec lods dec or xor rcll adc sub add (bad) insl sub sbb xor das ret pop mov (bad) adc dec stos add mov movsb inc adc push mov mov rcll add icebp jae outsl sti adc jl push cmp mov jno je pushw sub imul scas js jle jns iret leave shl aam (bad) jae xor mov (bad) dec es fwait adc mov push je add clc sbb inc shrb xchg rorl sbb jno dec lods inc inc cs outsl in and cmp dec and or mov bound lcall and lret jle lods jno or or adc inc iret lret xor rorl dec fcompl adc xchg sbb mov dec test jb add std sub pop aad int sbb sbb loope inc (bad) orb sbb roll push outsl mov int3 loop out mov inc inc addr16 fsubs or call ret mov popf dec pop mov cmp out add sbb mov pop pop push mov popa cmpsb and mov or xor jne push jmp jno xchg pop les dec xlat adc sub out xor fcompl je cmp add pop jne dec in and xor stos cmp and hlt addr16 adc jb or pop mov jae lahf push add pop push jmp pop push or pop mov add xor sbbl ja adc cmpsb xlat loop and mov sub rolb and shll push push mov and xchg pop push aam adc test icebp aaa jmp icebp push add xlat pop jl push jmp stos popa ret pusha sbb jbe (bad) xor inc mov imulb dec jge pusha lods cmovle push test loop inc rcrb mov daa ljmp jmp jecxz outsl fwait and add ss (bad) inc or sub test inc sub push push imul dec insl xchg cld fisub fildll cmpsb dec and test xor add popf lret sbb shrb enter or shrl fisubl dec pop adcb inc daa xor inc jae loope loop add inc adc in xor cld and push lret lock add enter add shr mov lods sub xor jmp aad mov adc lahf and jmp adc addb outsb sub sbb mov inc or std in mov push cmp jmp pop test pop (bad) scas sub lret clc sub push push mov dec shl add and or (bad) jmp pop int push sbb mov popf xchg jbe jmp mov jns cmp por cmpsl hlt sahf dec mov push pop imul imul mov push mov gs repnz add ljmp inc subl jle push add jne aad cmp add jecxz es pop cmpsb icebp lods mov or mov inc mov rorb lea pusha cmp mov adc inc pop in and lods scas enter pusha push cmpsl mov jl pop leave inc dec imul addr16 jmp testb adc imul dec fwait sub pop xchg mull xchg jmp daa (bad) idiv std push ret fs and lret mov and mov rcll cmp pop inc dec mov jecxz lods xor movsb add xchg frstor icebp scas sub mov popf mov cmp pop add push cld pop out push push sub int3 cld in pushf repnz scas xchg (bad) je mov jb add lret pop mov or add test scas in mov sbb leave loopne adc pop add push call xchg jecxz aam fwait lock popf or add add ret push mov and mov fbstp sbb aas dec inc add (bad) out sub aas push jbe repnz or or inc or jbe jl add mov jg movsb mov add add push aam stos sub fiaddl dec mov jb xchg fs push push lock cmp xchg sbb (bad) add mov push add jmp dec aad sbb mov dec in inc push or pop sbb push xchg push dec dec add sub jmp repnz rcrl jmp fwait shrb mov enter sbb jns dec sbb mov enter insl mov dec inc push hlt sahf loop aas js pop pop stos pop fild pop (bad) (bad) lret mov idivl push cmpsl fsub inc push movsl dec in pop and push push les insl test push insb mov subb jl push mov clc mov add push test bound mov cmc cld sbb pusha jne ds scas pop or mov mov xor jge (bad) xor jno clc outsb add pop popa mov divb inc in or rcr je inc sbb add adc adc dec pop (bad) adc or shrl loopne je xchg mov adc lea cld fwait push in push rolb pop push jmp mov dec mov dec hlt xor std push (bad) ret pop mov adc xor pushf es adc ret adc (bad) pop cmpsl push or jl xor sbb xor and dec sbb lcall adc jge push cwtl add sub sub stc inc pop ret add sub or mov mov outsb push ret sub sbb jle fistp mov sbb xor shr mov pusha pop insb xor xchg cmpl adc cmp lock pop pop dec lods dec imul js stos jbe pop mov mov mov clc sbb xor das jg in xchg pop pop mov ror in roll push mov rcr xor es xor inc sub daa add ret sub dec (bad) dec fildl fsubrl push push stc add or pop mov rcl imul push push cld ficompl movsl push mov cmp sbbl js pop ss dec add out and adc repz sub js sub adc mov jle xchg add addr16 out outsl movq mov adc iret aas dec out xor add mov nop mov inc cs push xchg or inc add cmp std lods rcrb jnp inc adc pop xchg sub pusha out push popa cmovs inc xor rorl dec lds imul outsb loopne cmp daa ljmp and add adc mov lods leave push pop into xchg mov repnz pop xchg shlb bound dec xchg and fistp movsb xor sbb cld xchg jne lahf mov jg xor in and out mov push not add in mov adc adc jae and sbb clc cmp fbld jmp lds inc (bad) bnd (bad) xchg ljmp lods sbb pop or sbb jmp inc xchg mov (bad) sarb fs outsl outsb adc (bad) mov adc mov add pop or cld shrb mov jmp sbb xor or outsl and add mov flds std cmp aam cmp negl fdivr mov (bad) into out add or addr16 fmuls sbbl icebp or movsb cmpsb and lods cmp or add std (bad) dec mov stc popf loopne adc push (bad) push sbb or lea add aas scas jo push push cmpsl pop pop cmp out sti jae add push push mov inc lds ret pop add insl int ds pop int pusha inc and jp pop cld cmp push mov inc icebp nop test add fsubr add movsb fiaddl sub xchg sbb sub mov mov xor enter add add cmp inc jmp and xchg frndint inc jmp push mov addb popf jmp dec cld fwait outsl mov cwtl ds pop pop mov pop inc jecxz adc adc lcall rorl dec sub xchg add push jmp js insl push arpl adc push push das or in cltd mov int3 sbb (bad) pop mov cmc (bad) jo mov xor (bad) xchg inc lcall jge or pop adc sub sub jl inc xchg movsl adc out call push mov push push inc dec xchg pop sub mov icebp pop push fcompl push (bad) xor sbb enter xchg dec xchg mov xchg jbe test loopne dec push add popl add inc mov or ljmp cmp ret shlb sub jbe or (bad) mov adc test out xchg mov xchg jnp test enter in add xchg add (bad) sub (bad) fsubrs xchg push out jecxz aaa test mov or push out mov mov cmp adc sub sbb dec pop add dec arpl add orl orb enter in (bad) ror pop (bad) (bad) dec or sbbl jbe repz das xlat sub mov in cwtl add sub std add xchg or mov mov dec xor dec cmp and pop and add inc xor or and daa imulb jmp push leave adc sub inc dec or mov jg xchg adc jae add pop mov mov jle leave (bad) test xchg testl in jg lds (bad) mov out loope lret sbb adc out xor test mov arpl dec inc jmp daa int (bad) pop imul and or and push mov sub dec jb loopne xor sbb jo xchg pop imul adc scas mov jae sbb cld mov dec jl sub popl xor inc incl pushf jo mov ret dec mov xor jns sbb adc mov jmp add and sub or push push cwtl int sbb mov dec lret pushf and and ret fs orb mov iret or xchg or repz hlt jno jo loope cmpsl pop ret mov lret inc or pop aaa dec lret inc push out push xchg add movl mov decb leave push mov frstor into aad or jmp xchg addr16 sub nop cmpsb fildl push insb das xor cli inc dec mov push mov mov mov xchg mov loop call push nop jno xchg into call xor stos dec popf inc push rorl adcl jnp or xor ret cwtl mov mov inc xchg mov mov mov sbbb jl adc push ja sbb pop test or rcll xlat sub push inc push ds cltd mov add cmp and inc pop clc pop shl in stc aaa adc or cli (bad) add mov pop pop jo aam inc jmp sub jle (bad) clc pop cmp or mov js in shr mov orb adc dec inc (bad) cmp movl add dec nop mov lock fimul push shrl adc repz fild call scas test lock cld dec imul lret inc push out dec sub dec mov dec lods add sub aad gs cmp loop inc pop cmp stos imul jne sub (bad) and fucomip pop in pop pop sbbb or inc shr inc and loop,pn adc push mov push inc pop inc sub xchg mov push sub cli or scas pop test test pop inc out cmp add xor pop add rsqrtps pop das (bad) out xor ja lock fcos fs inc add jmp and lret cmpb sub pop add pop jmp js adc mov daa js aaa js jo inc adc xchg lods mov pop push inc add push cmpsb dec aas adc dec add push mov xor mov sti imul jno in mov xchg dec or stc and or (bad) inc out sbb jnp out add cltd or insl (bad) mov jo out xchg lret sub add idiv cmovl push mov in inc stos sub pop stos mov aam cs mov pop lret inc sahf testl outsl adc mov and xchg pop sub inc sbb jmp mov (bad) cld add fsubs push inc nop js dec xor pop dec pop xchg push inc jmp mov inc jle jnp outsb in lods or insl repz subb in lods push adc movsb nop add jmp cmovl in push inc les add dec dec pop or test push mov repz push lds xor jnp leave int popf xor adc sub pop sbb mov rorb call mov pop mov xor sahf xor mov xlat stc mov add popf je pop xlat enter mov fwait sbbl leave loopne or repnz movsb mov out xchg pop xor or ficoml or sub ss jns add sub arpl lock mov mov or jp push pop push cmp xor inc fmuls xor sub xor sub andl push repz lret (bad) repnz pop add dec push fldenv rol stc nop push cmp push mov mov adc sub pop gs dec push stos enter or jne dec xor add out (bad) lcall mov pop mov dec inc mov int3 scas jl inc jl fmull add aad pop and lods push dec lret push adc mov push or neg pop pop add and into popa cmp pop xor lahf (bad) lret sarb daa dec mov push rorb (bad) sbb into in adc pop loopne int push sub jns pop shr sub and pop dec mov fimull push push scas mov mov fisub sub (bad) xchg cli push add xor sbb sub enter jb xor mov dec incl sbb mov das dec adc cmp xor in push sarb adc ja mov or decl sub jl fs jle sub out and sti add pop mov and push mov cmp and out lret ss lret add push push jle push sbb cmp inc push adc mov xchg into inc stos (bad) out ljmp jl cwtl adc push push jl jnp and pop xlat call cld int notb ret pop sub mov mov and inc adc sbb sub or fcomps je das dec fs stos mov popf dec mov push pusha stos enter gs out dec pop (bad) lret pop add push jbe push dec pop sub xchg mov mov pop inc shlb mov cmp pushf xor shl dec mov sub xor mov add sbb adc push and add sub or mov jmp mov pop inc pusha hlt test push ljmp scas lret adcb sub out jle and mov cltd mov push adc xchg rcrl xor cwtl jmp sub pop push or (bad) xchg xor ja leave xchg pop sub je icebp nop or jb push lahf movb add xor jp fdivrs cwtl sub xor mov (bad) pop call push imul loopne add and ds push add xchg or push mov in sbb xchg and add mov pop lret adc out and xlat xchg fdiv int3 pop hlt dec xchg shlb std addb xor fnstcw xchg dec jmp and mov std daa loope jecxz push or jnp pop fisub jmp mov ret add mov push sub cmp sub add push adc pop sub jmp sub aas fnsave xchg aad out mov adc loope push push ljmp xor out out popf adc jne mov jmp pop xchg xor push cmp repz push jecxz mov pop (bad) out std jp int3 jo je je cmp jb push sub lock xchg (bad) bnd add push pusha jp ds xchg push inc int3 mov lods js jp aam mov lods mov jp addr16 imul xor jmp std push loope stc insb jge add scas jp xchg (bad) cmp push xchg outsl sbb bound adc cmpb mov cmc or mov pop sub add popf das cmp pop sub outsl es pop inc mov (bad) sub loopne dec lock adc cmp mov mov and push inc aad or outsl dec loope rolb jnp mov pop test pop sub (bad) enter pop rcrl mov or mov push mov xor rcrl pusha cwtl push push mov scas xor shl pop push std mov mov dec in and xor into mov adc pop xor in mov xchg sbb cld jb test shll or movsl ret test push aaa sahf imul mov sub mov shr icebp int xchg cld push add mov cld adc and mov adc jne xor pop fildll mov push pop mov cmp stc mov rcll inc add pop adc iret pop and pop bound or icebp je fs call push dec mov push push cmpsb push push das pop xor aad add (bad) pop das push or pop int or lds inc jnp mov adc adc dec shl outsb test mov xchg xchg ds out dec clc out mov jo (bad) pop stc mov (bad) sbb pop sub out push cld xor call and or xor adc jg in bound mov ljmp mov btrl push fdiv out ja cmp lret addr16 rcrb out dec adc repz adc aaa out pop out adc sub out dec (bad) cld push les iret cmp imul push lea es and (bad) decl (bad) (bad) add jmp gs fwait xor sbb shlb nop insl aam loop ss inc or mov jmp mov rclb (bad) push mov dec int3 push ds and jl in push outsl inc cli divl pop jmp sbb orb push pop sub lret or daa cltd fcoml sub jmp inc mov jl dec in jne cs mov cmp mov jo cmp (bad) sub add sarb or pushf pusha leave testl lods inc and sbb mov jo push mov or adc fist inc popf push in mov sarl lds mov les out pop inc sarl sbb rcrb inc pop add mov add jne xchg cmp leave pop neg or sub test cmpsb das adc js mov inc cs jno sahf adc and popf jle and out sar add push jmp push jns (bad) test gs leave jecxz fidivrl call test or or push daa std mov popf ret lods add shrl lods or sub insb jecxz push ja pop scas pop (bad) sti push addr16 fcmovnbe daa pop dec data16 bound das sub adc jne xor in jb or jp in push cmpps (bad) xor mov insl push xor fimul jp rclb xlat cmp pop inc lock xchg xor jge rolb pop loopne mov movsl (bad) leave adc dec jb,pn mov cltd pop pop mov and (bad) imul loop test or cld mov and (bad) dec jp in adc pop shlb push mov add sarb inc sub xor add roll outsl in pushl inc push cltd mov dec push lock adc add aam inc daa push testl gs mov insb push and adc ficompl lret dec loop lahf clc mov leave loopne mov cmp icebp pop test insb push lret sti push shll pop add cmp push mov bnd jmp ljmp mov pop pushf fadds lds stos repz decl lods int ljmp jp pop insl push test in addl lret (bad) stos jae push scas adc test lock imul ja out cwtl js pop jae ret lds aad lret adc cmp mov ret inc pop mov mov and xchg popa push lods adc addl adc (bad) sub cli mov cmc aas mov pop inc adc mov sti inc out ds sbb imulb fmulp push iret jmp cmovp mov xchg das mov je lret push or push cld adc dec test push mov dec aaa aaa addr16 andl ficom (bad) jae or fcoms inc loop cld int3 mov fisub mov imul and mov pop iret push add (bad) xchg pop mov je push sub stos cs bound xor push outsl mov xor mov repnz push and sub cmpb pop data16 mov mov jmp push mov adc mov cs ds push sti xchg hlt push push adc cmc inc (bad) mov scas jbe push mov out add push mov out int xchg and addr16 loop out outsb loop les stos mov and push sub test dec mov jae (bad) stc adc addr16 push inc sbb push and push add sub jecxz jp xor insl ret fsubrs cmp pop outsl xor les popa rclb add in (bad) and mov int cmp daa or push loopne aad aam pusha aam iret adc cmc and ljmp mov pop xor push push fldt add jmp cmp jae stos leave jmp and jbe xor mov or push jle sahf jbe sbb xchg lds pushf popa jl sub pop loop mov or fistp in sub jge enter jmp push dec dec sub mov adc aas repz mov xchg or mov pop or push pop out (bad) mov add les xor outsb dec inc mov cltd je add mov test and je mov mov imull insb pop adc mov pop stc popa push mov dec leave sub leave inc lahf (bad) pop lods cmp xor sbb loope push ret jno add jno das jp dec jl inc add jmp add xor lret call cmc addr16 or iret adc pop cld mov push cmpsb mov rcll cmpsb and dec loope push mov jns or fidivl jno leave aad lock das fld jns add jle push add imul pop andb popf pop into popa fstpt jmp inc mov add xchg inc int3 ljmp cmpsb aam add adc push adc std adc sbb jmp cli inc imulb ds std sbb adc stos sbb fildll iret mov leave and or imul and flds sbb cmc and insb dec gs cmp inc xor pop test or cwtl (bad) enter stos inc inc sub add call test jmp (bad) jno sub sub (bad) movsl sbb pop pop mov popa mov lret out pop orb (bad) idivb into cwtl cmpsb adc ss daa xlat iret mov clc mov inc (bad) jo (bad) sub cmp add inc or and push lcall pop add into xchg (bad) push fs call mov popa fs jmp adc not xchg je dec adc lods out pop sbb sbb push fimull repnz add in neg hlt hlt jge dec bnd cli jb cmp add sub inc lret mov mov aad inc mov push sbb adcl fsubrl or add or das push push popf add inc add dec push mov and pop mov jge ret mov lret or inc jo into nop inc or hlt xchg les cmpsb sub cmp out aas (bad) dec add jne cmp mov pop (bad) push popf adc jmp dec loope jp mov clc mov pop inc ficompl push lret xchg adc xchg pop aaa cltd push push mov add adc (bad) jnp or cmp dec test and cmp xchg ret mov push mov std pop push cmp push gs (bad) push leave adc mov pop xor xor push push (bad) cmpsl fldcw push enter pop push mov mov inc rcl jae xchg jmp sbb pop dec addr16 jnp pop adc pop mov lahf pushf pusha or or and aas shl in cmp hlt dec add das xor pop push push int sub push imul outsb (bad) or ret imul sbb push out pushf and or inc in adc push mov or into cld mov adc icebp add loop jns mov mov int movsb aaa add sbb movsl dec or shr and push scas xor mov cs (bad) stos sub fldcw ds inc imul mov insb adc push out push push jne sbbl in sbb xor or gs ficomp scas pusha dec inc seto sub and jno pop in aam pop push sbb push push mov add test xor jmp mov stc scas add lret push add sub (bad) dec dec add mov mov mov lcall pop outsb dec stc and xchg add jmp push mov (bad) inc mov mov mov or jecxz and dec push and mov loop loope push std xchg lods push add push mulb add out add cwtl (bad) push add loope or pop pop add push lods jl pop in popa outsl push or daa imul roll xchg sub popf mov inc cmp cmp sbb add add ret movsb rcl pop add pusha pusha mov rcrb xorb in movl pop (bad) pushf int jg in arpl push jle push sarb leave add push cmp or or scas push xor vmovlps dec je add add sub push sub (bad) sub outsl jle orb inc shl jae push lods jge movsb fwait and popf (bad) icebp jae mov pushw ss dec (bad) mov inc in fcmovb or outsl and jne das adc in sarl insb sbb scas push out push pop pop mov ret cmp pop and fildl mov xor add pusha add inc mov push or jno fild push jo not jmp test ja (bad) (bad) pop jp push and adc jae and cmp and daa (bad) xlat xor shr movb rcrl dec cmc (bad) aas aam sub mov ret jg mov jmp push xlat movsl and in sub addb mov add std stc dec flds push aaa addr16 neg hlt out negb jae mov mov lds cwtl fs xor mov cmp pop mov dec and cmp std inc push pop adc incb mov repnz ja loopne rcrb xor repnz test in jmp mov clc inc arpl and rcrb add (bad) mov jg sbb sub pop jmp dec (bad) jae cli ret jle subl rcrl sbb lods aas mov jp cltd xchg or adc inc xchg cmp and (bad) xchg pop jne (bad) push push and jmp sub jle pop loope cmp repz daa lret fstps shl dec test dec xor fisttp cmp movsb aaa add and (bad) dec std push add xchg sbb jmp or (bad) (bad) jne in leave dec and gs dec rcl inc adc add adc or xchg cld insb les xor insl mov loope inc pop or dec dec mov fsubs xchg add mov pop push inc sar sarl subl and and and test push (bad) and pop andb mov popf clc mov mov or movsl add addb rorb and int and add xor inc lods sub dec js (bad) pop rolb mov pop and mov adc push aas movsb cmp lods push sbb and or add mov lods pop xchg xchg aas pop in daa lret test adc dec jle sarb popf fcoml sub test test and or mov mov inc sti pop push dec das xchg divb pop push xor pop (bad) sub insb add hlt ljmp fcom mov in pop fwait cmp pop xor xor or push pop fstpl push scas ljmp sub and dec js arpl pop add cwtl pop outsl cmp add jo sub fldl push leave pop mov scas mov outsb dec jb,pt adc call test scas fnstenv sahf push addb repz mov mov or mov and ret cmp adc and dec xchg shrb xor ds mov jmp sbb xor movsl fldl sahf (bad) adc aas pop aam and lods fcoms push jmp dec jl shll dec dec lods aam iret (bad) (bad) adc out pop jmp (bad) nop mov aam add popa clc in or jne loop cmp mov notl icebp jg adc pop add xor icebp jb or les push int3 (bad) fcompl pop ja mov mov jne dec (bad) jmp call xor es adc dec fabs sub or cmp push stos mov popa mov ja push jne fiaddl out pop sbb call shll daa cmp xor push push outsb mov push add pusha mov dec or adc pop dec mov xor cs jecxz add scas add out aas or pushf enter add jmp in and jno push mov sub mov sub and clc add jmp pop mov sub inc cmp xor pop int3 (bad) jo pop push or mov js add cs push repnz jae rcrl shrl dec cmc out clc popf xlat test mov mov mov inc pop sub jne push aam pop push in fsts jmp cmp add (bad) jne jbe push add mov sub cmp cmpsl imulb sub mov or mov xor mov inc clc mov test lods mov pop inc mov repz leave add in sub sbb push push int3 icebp mov cmpsb ret add pop dec push pop or fwait mov faddl out push mov sub (bad) fsubrs dec xchg ljmp rolb push jne imul je mov pop fwait jo and xchg mov mov mov inc and cmp sub mov loop std addr16 jmp iret jno jbe scas out or jp xor add dec gs jnp sbb ljmp (bad) sbb cmp add xor pushl sahf sub jne in (bad) or inc add lods cmp leave mov pop and test lea jns cmpb or aaa pop xor xchg lea push sbb scas xchg cmpl shll pop push push mov bound xor xchg mov popa sub xor pop (bad) out dec out adc add pop adc pop xchg shr and push insb je leave and scas and ja mov or gs or cmp sbb and in add cmc inc cld fildll mov addr16 jmp hlt movsl and (bad) imulb push push cmc pop outsl xor mov cli dec shlb mov loope mov fadds mov sysret mov cmc jmp cli test inc call fsubrs negl jmp and (bad) repz enter xchg ret rclb push ds iret xor insl add outsb lahf inc dec shr int mov ljmp push push cmp adc lods sub add jae cli dec (bad) sbb push mov adc fwait mov rcll cs xlat imul ja iret loope sbb pop xor aas scas cld and out addr16 lret icebp xor xchg mov sbb fidivr aam (bad) adc mov dec push pop clc (bad) mov dec in xor in jns adc add push sub or (bad) mov or lock xor pop and pop shl push pop mov mov mov gs adc shlb cmp in nop push and xlat (bad) xor xchg xchg loope jb push mov dec jp imul adc (bad) clc dec daa or jge out push add inc inc fwait cmp and outsb std hlt and add neg test (bad) scas and dec sbb movsl test nop push inc pop jle stc das push aam ret popa les cmp mov daa jne inc loopne xor jmp xor pop push sub leave scas xor xor xchg int cmp xor mov jne nop mov in mov xchg xlat adc mov xor jle xchg sub adc or dec repnz pop jl sub add pop divl pop mov popf andl sub adc push mov pop push fs sub mov fimull jmp push jno in add dec adc xchg out adc int inc inc pop imul push lahf jnp enter fcomps inc nop outsl (bad) add mov inc lahf inc push outsb add outsl jno or test es jbe clc add lea cld shrb jg dec fdivl fs lock inc jns sub cmp daa push or and popa (bad) je push inc daa and repnz icebp jmp je lcall fnstcw add xchg testb push pop mov pop outsb mov insl jnp dec lahf stos cltd jne repz dec and aas cmpsb pop lret pop mov (bad) xor out ds insb and cmpsb jnp loop or pop push push aaa and mov add inc jns leave in mov mov pop (bad) icebp jl jmp inc xor ss out mov test sub cmp mov push pop mov ds xor and or cs xchg inc (bad) pop pop add mov lock dec pop sbb add mov push loope dec imul fdivrs pop jmp inc popf jl mov fnsave lret outsl jbe pusha mov pop dec out inc pop mov or ret xchg (bad) mov inc cmpsl out mov add pop inc push clc int push xor pop (bad) or ss inc and pop inc push inc mov cmp adc push (bad) sub cld ja sub and cmp lods ja loope pop in xlat pop fmull (bad) dec into pop jl push pop jns and cbtw and mov xchg out ss ret xor and adc aad sbb outsl xlat scas pop (bad) icebp cli mov push mov xchg jo push pop xor inc push push mov add push rolb add push (bad) push icebp pop cmpsl and xor lods push jmp push out idivl mov push jmp mov (bad) mov imul jo mov mov cmpb popa add sub xor pop clc pop push push jl repz adc jns dec cmpsl int3 mov ljmp shr mov push je loopne das jmp repz and pop xor jge or test adc sbb rcll clc test lods mov clc stc adc fnstcw jg and mov fwait mov (bad) das add xchg stc daa or push or cmp daa fisttpll sbb xchg fist mov popa push aas jno xchg or xor aad fcompl popa popl outsb hlt mov iret inc push adc and fdiv jae cmp or cld jmp mov jl mov mov aas andb ror xchg cs (bad) fidiv sub mov sub mov or xor bound add addl enter out cmp and dec sub lods or (bad) push fsubs enter das or rclb add adc push xchg lret xchg add neg leave (bad) jo les daa out loop adcb pop or push and push adc (bad) inc push sbb cmp inc fildl add ja sub xchg loopne dec clc push pop or icebp aaa mov call xchg gs mov add xlat outsb or (bad) hlt add nop inc out and and jle pop sbb inc sub cs jb add mov testl movsb jnp insl jmp aaa pop out mov cmp inc adc test xchg in lock ficomp mov add fidiv jmp pushf mov sbb sub and and push cli lahf mov (bad) sti cmp data16 (bad) adc add cmp lods js xchg cmp (bad) push jge pop adc mov ret sub jmp sub int pushf outsl mov xchg lock sbb ja inc (bad) sub mov jmp jp push iret mov push push mov sbb adc mov pop and int3 add dec jp add inc mov add sbb inc mov hlt mov push mov pop pop sahf adc fcoms xor loop jne and jmp and pushf adc cmc test cli mov cmpsl mov push push repz iret add mov repnz in mov jge andl push or popf scas or xchg sub jp mov sbb ret mov fwait push (bad) je (bad) into rorb stos sub inc leave jle daa rcrl push rclb out das jo mov lods jg inc cmp xor out push dec pop xchg pop out and xlat fdivp insb clc pop rcrl inc das lods jle push dec loope adc je and aam adc rcrl sub mov xchg pop loop (bad) inc test mov aaa and je cmp pop dec add je insl and test and xor mov shlb mov loopne fs cmp sbb stos sbb bound push adc push lock adc xlat pop xor push or (bad) (bad) iret jecxz sbb pusha sub ljmp std insl test mov je repnz mov add rclb lret (bad) xchg aam les lods dec out call (bad) pop shr pop inc xor dec jbe adc leave mov pop sub lock push mov popf jo cwtl shll sbb repz mov movsl sub mov neg jp or xor push clc sub dec inc (bad) sub jmp stos mov xlat mov subl std int and popa lahf data16 adc sub pop adc movsl adc repz das xor lds cmpsl push dec mov sub add popf ljmp push sub pop sbb push pop add out cmp sub je adc pop fs and push mov ret push jge or cmp sub adc mov cwtl fistl les stos stos clc gs add jg push cmpl mov jb outsb enter xor mov sub loopne je sahf adc inc jmp out test cmpsl lret inc lret lds hlt sbb test stc add and out fsubr pop dec pop es xchg sar popf jno rdtsc (bad) in call lahf (bad) lret not jne imul lret pop push mov fnstenv daa or rclb dec push mov aaa inc pushf or add lds fs outsl add aas stos dec data16 add xchg std jmp cmp sahf cmpsb push xor dec and and dec add mov test inc add repnz sti test mov add sbb andl cmp cmp ljmp and inc shrl mov inc rolb pusha inc pop and rclb inc xchg xor repnz dec mov adc add pusha popa fdivrl js mov fwait cmpsl cmpsl pop dec xchg ja gs mov lds inc in dec leave pop (bad) mov bound and out movsb xchg pop scas cwtl inc mov dec xor cmp mov mov mulb std push jle push sbb mov adc movsb outsl stos pop adc data16 mov jmp into xor xor lcall fnsave fldl mov mov test cli into lods adc lock adc nop adc lods sub sub mov push lahf pop movsb push push hlt (bad) dec push popa cmp mov pushw add jmp mov js test stos testb jne out and xchg add or (bad) (bad) aad mov jecxz iret mov jl pop fsubrs mov sub fldcw xlat aad mov icebp jp or push pop and icebp jmp inc jns push pop add pop jb out xor jmp push in push (bad) (bad) rol icebp push push push inc (bad) sbb pop mov mov out add je mov pop add (bad) push mov jne out fistpll orb test les adc or cwtl push or aam scas in xor int jle sub arpl or add inc add cld mov xor dec das dec mov inc pushf sub bound or pop lret in enter xchg into fs push xchg adc mov test loop or mov jle jmp xlat sub (bad) leave pop stc jae sbb jecxz notl ret or cmp mov pop pop sbbb dec sbb mov mov repnz int sbb (bad) pop mov dec or push pop adc cld mov mov sbb movswl jno mov push push pop or or (bad) cmp loope test jnp dec mov stos repnz mov push pop dec xor cli movsl push add into mov inc sub or addr16 sbb jb or dec xchg or jp dec inc aam dec push jns ret inc lock jmp pop sti xlat adc fidiv cmp popf fmul pop push cmp pop push pop in enter nop mov sbb test in and leave paddq add enter mov dec cmp sbb cmp dec aas daa or arpl dec gs add ret or xchg and jo pusha daa push push mul pop push push mov or adc imul mov adc testl and push repnz pop mov lods mull ret pop add pop fist fwait test sbb popa stos cmp or jl adc hlt add sub mov pop inc or les add or loop out ja mov push mov cmp les xchg ja push dec and push mov or push fsubr adc push loopne xor das insl sarb in ret xchg pop cmp inc test lret ljmp jp movsl mov dec jge arpl rcll mov mov sbb js (bad) ss cmp loope pop hlt sbb imul inc jecxz pusha mov sti sub stc mov jmp push push mov or pop sti sbb inc enter sbb in cmp push adc sbb (bad) cmc test out xor push (bad) and push jg sbb push out pop pop (bad) mov arpl lret sbb cmpsl mov mov imul mov add add and dec scas call or pop push and pop add xchg in cmpsl or mov pop xor insb mov into in adcb mov es daa leave test xlat clc (bad) mov adc mov hlt popf pop lahf xor incb aas lods lods add nop sub stc add cmp lret scas popa xor rol push push ljmp jmp in mov outsb pop mov scas pop inc sbb push mov or push negl sub mov js add leave inc and xchg pop wbinvd in push fist mov iret in lods inc mov and mov adc push push jmp mov xchg (bad) in mov push aas push clc cmpsb xor cli fnstsw outsb test push jbe dec js mov test aad add sbb cwtl or sbb or pop add push push push xchg dec cli adc mov push inc xchg push xchg add (bad) jge sub cwtl leave pop sti cld (bad) mov pop and inc icebp imul rclb or in (bad) jmp inc add aas sub push loopne stc popa add xor js pop mov push in nop gs rcrl lcall adc push pop repz adc pop lcall adc insl mov insb repz add push pop jle mov push jmp insb mov mov mov rcll push pop movsb ret push addr16 in (bad) sub cmp out push addr16 push pop add rcrb pop jg pop push push or lods in data16 xchg in cmp enter hlt lods mov pop or (bad) mov hlt xchg mov sahf scas xor stc repz add add mov btr test mov dec mov popa pop adc leave mov scas sahf mov xor pop sub mov adc lahf adc and and or add mov fnstcw icebp jnp xchg addb and test or std loop cmp imul in popa and adc add jo inc jne in mulb add std scas mov adc add and in push and and jne test fsubrl mov jb (bad) mov pop jecxz aas in rorl dec test test pop add mov add push subb fucompp jno test cld lahf mov cld ds cmp lods in cmpsb mov mov jmp in jge popf cmc jae push push mov inc addr16 or (bad) icebp lods inc or out jle add adc add xor xchg flds mov inc lret movsl and adc cwtl cmpsl or aas sub stos and cmp lods insl jb es pop xor pop and cmp xor insl cmp pop jmp dec icebp out rcrl inc dec sahf or call enter ja fsubrs mov rclb pop lods fmull loop mov (bad) lret xlat ror daa push gs push scas add imul jge mov and ja jmp push mov lds aad movsl js inc xchg push test es rolb mov (bad) fsubs xchg push sti es into sti (bad) fisttpll adc call add push mov jmp push rcr dec cmpsb scas and es shrb sbb pop and jl adc mov inc pop jmp sub and daa push stc fistp in fwait xchg call (bad) mov mov or inc test mov daa xchg clc nop add adc sub stc or adc or (bad) cmp mov pop movsl adc inc sub xor and mov daa daa xchg mov iret stos (bad) loopne mov pop mov and stos or icebp pop mov (bad) shrb xchg fmull push daa push fwait push mov in lods sbb push dec lahf bound jbe add push shlb stc ja stc fwait gs cwtl xchg xor cld scas leave aad popf push push sub std mov pop jb call popa xor ljmp sub int3 (bad) pusha imul sbb repnz jne (bad) inc repz (bad) dec add out push push pop cmpsb jle notl call cmpl add jmp das ret (bad) xor repnz mov aad lret mov addr16 and add in add jp jo jmp jnp test cmp mov sbb es add dec sub aaa adc insb push sbb and dec sub sbb inc sahf scas or aad pop das mov cmp add add movsl mov leave addr16 aas add pop push div mov mov adc sub inc xchg mov pop rcl sbb jne data16 and es push or ret jmp stc sub or or sbb inc or or fmul or adc mov add xchg xchg or ficompl mov out jge pop and pop aas hlt shrb stos leave push mov sub push xor in sub std in inc mov fildll jecxz or jne adc cmp mov les sbb jp cmc xor jp cs cwtl leave mov pop hlt (bad) jo jmp in push dec fcmovnu sbb inc pop add outsb lods pop lods clc lods sub test (bad) stc mov add (bad) mov xor imul xor lcall or pop push test xor and inc arpl les data16 add and mov adc insb out sbb (bad) out add popa push sarb inc daa push loope cmp dec mov inc pop inc xchg lock popf sbbb inc loop inc sub aam jb mov inc fcos leave dec sub add idivb inc xchg das and dec fldenv (bad) jl and mov (bad) aaa rcll pop ret sarb sub shl imul add rclb dec inc cld dec inc push push movsl aam inc pop and jmp push mov cmp add add pop (bad) mov hlt mov pop jle push rorl aas dec scas sub ret add and out push mov inc fist lods sub packssdw repnz xor mov fcmovne insl inc enter pop cmp aam jb std pop xchg pop cmp or and lock jle (bad) mov add es pop or pop xchg push sub ret mov push or loop pop fistl mov stos mov cmpl cmp lock sub mov in add rcrl ds push mov call cwtd aaa fucomip mov mov test repz orb not add loop adc xlat sub loopne ret in add pop ret jmp xor pop neg ret xlat dec shl sarl xor orb or imul xor mov imul mov mov std pop shr daa xchg fcom das cmpsb mov (bad) mov add call mov and add rcrw imul nop inc and or add mov mov cmc jnp pop call inc pop les pusha mov jmp daa repz pushf sub push add mov mov adc pop in mov mov adc lret popf aad cmp push mov les in mov push mov pop jo push and add cmp or push adc add sarb (bad) jne add out rcrb sbb clc mulb dec ljmp call mov adc cli lahf push insb rorl lret sbb cld dec clc idiv nop sub jne or aad adc adc add mov push pop das cmp mov xchg or movsl pop xchg sarb fadds mov push test popf aam (bad) cmc and xchg sbb adc call jmp mov or dec jmp dec sbb loopne lea loopne sbb stos in or xchg mov push (bad) mov jecxz inc fcompl add jge add push mov sub add push lcall jg cmp fdivrp out pop (bad) loopne in add and lds out and or xor xchg jne add adcb xor loopne nop aas dec inc push fs push jnp lcall add add dec mov xor adc stos int3 xchg xor ret data16 mov pushf fdivr jae lahf mov stos into mov add adc scas int push inc lods cmp (bad) pop and sbb and pop inc ret fdivrp dec sub cld shr inc add jp inc shr rclb in add sub test out mov outsl or dec das and push jae lcall std add cli out push push ret jg xor jl sarb iret xchg negb imul mov xor or inc and sub (bad) loop adc xchg mov test sti test push sub enter pop mov in jp jnp jle adc insb jg in das push push sbb mov int stos daa pop jnp adc negl adc jne push pop mov lcall xchg js sub adc ljmp jmp repnz mov gs add sbb add mov xor adc leave add pop push je jmp das insb push cld push jb cmp cld and xchg fdivrs sub jb out shl ss dec or mov loopne push and (bad) sub rcl adc pop ja sub out jb mov jb add cmpsb pop mov jne fdivrl or pop cmp jo inc mov xor mov test pop dec adc mov push inc repnz movsl mov inc lods dec ljmp add add loopne add sub andb adc dec cmp fucom jmp sub clc test aaa dec (bad) lret inc fcomps pusha rol outsl sahf es or add data16 push inc jmp in and sub fs gs stos mov jge xchg lods les lret outsb dec scas je (bad) popa mov push insb stos dec mov repnz aas and outsb jns push mov loopne jmp jl xchg sub insl cmpsb xchg rorb jae or mov fdivrs lock loopne in mov in mov add das or pop sbb xchg sbb jnp sub pop adc mov in hlt dec in dec in hlt loope or pop jle pop jmp mov outsl mov push inc orl adc pop rolb sbb add pop lahf or frstor incb pop jb or ja outsb adc es sbb or pop xchg pop xchg ds (bad) ds movsb lcall (bad) and pop push sbb xchg xor push and mov adc cmpsb outsl fimull xlat lock push jmp xchg cli and mov lds shr xor push popa or shrl lea ficom sbb push loop inc or ss push or sub pop cmp outsb fadds sub decb add adc fs incb fst stc add insl push ds cli mov add ret pop in scas sbb pop mov rorl out and jnp insb inc idivb insl sbb mov jne imul push sbb add fs inc xor adc or cwtl int3 test add insb adc pop pop adc and pop push mov shr (bad) and push mov std cmpsl sub xor lea mov popa and sub jbe shrb fincstp roll in mov movsl arpl sarb outsl sub cmp imul mov aam or pop or std cs rolb sub rcll add mov decb push daa cmp (bad) pop dec or rolb xchg js ljmp andl in fcomps ret mov push popl enter outsl dec pop loopne rolb inc sub mov mov popf movsb aad mov fisub lahf or or add sub add pop jmp add test jmp dec add add enter sbb fiadd in xor rcrl mov adc iret cwtl or inc dec mov xor aad dec or sub mov push pop stc or mov push dec jl ds cltd loop fistl pop pop leave leave pop int3 jo jp sbb addl fstpl pop push mov sahf jmp outsl or popf aam ret fnsave jg push xchg icebp cmp sub pop add addl dec (bad) jno test mov sahf dec je xchg mov ret fs adc sub cmp cs cmpsl loopne or or call mov mov pop push scas int3 movsl jg (bad) xlat in enter (bad) inc jnp dec bound out js sbb rol adc js cmp pop dec xor sbb mov (bad) mov lret repnz sbb test inc pop sub sbb add rcrl push jo adcl mov loope lock push mov cmpb je repnz and mov sbb mov pop mov cmpsl mov lock xchg pusha insl sbb ret mov (bad) push ss push sti imul loop std fnsave push fdivs pop stos xchg test xlat lahf jbe jns outsb test lcall mov push jmp sahf xchg dec add push jne (bad) into and pop ljmp sbbl add xor fmulp pop fsts out mov mov xor cltd push sti and inc pop xchg das mov and adc and pop adc mov mov push psubusw push ret push jmp pop shll xor jmp cmp je adc pusha (bad) out pop pop sbb pop mov imul xor das cmp mov mov (bad) into fbstp push imul rorb in dec or sub jns es sub popf movsl bound sbb inc pop push mov xor jbe pop lock push or pop jg test jnp dec cmp int inc jge (bad) fisubl jne ja dec add insl insb rclb push loopne insb sbb loop or inc jmp adc ret sub (bad) adc mov jp mov (bad) aas xor lret push lea enter das icebp pop or notb add (bad) mov imul test cli sub fimul and sahf dec pop mov fild sbb mov xor das fsub mov mov ja jns jge pop popf cld push push popa lret ror sub out mov dec sub sbb jae or cmpsl jae mov stc push mov neg int3 inc ja or or pop mov xchg cli xchg rolb repz loope push das jns ret jb (bad) stc jge dec dec add push xor fistpll movsb das jecxz xchg ret xlat mov inc aam in dec std jmp dec pop neg icebp (bad) jbe es cmp sbb cmpl popl pop dec (bad) lock jmp or add fidivrl jmp in fmull and xchg icebp sbb shl rcll pop xchg sarl add fdivp or in mov push lcall jmp jbe and dec aad clc cmpps jl dec sbb jae in mov in lods test and outsb xchg nop push or dec ret jmp lahf mov arpl adc cld sub xchg (bad) dec lods stos sub add mov lock adc ret add or je jne or adc (bad) scas fwait imul push jecxz mov test adc cli pop lock iret notl push (bad) pop dec or cmp es sub ss inc lods int jae aas sub xchg aaa and js push mov add loopne mov adc (bad) sbbl cmp xor outsb sub nop lcall scas or or adc jae call imul mov stc leave pop aam adc pop in fldl sub jle test gs in lret in cmpb xor js xor lcall mov push mov cmp dec adc inc in cmp jle pop insl cltd and pop push out lods mov mov dec enter (bad) jno test test aas dec jecxz jbe xchg mov pop (bad) cmp jmp mov and sbb (bad) push fcoml xor or popf add inc js pop sub in movsb fmull ljmp ret movsb rolb inc pop ljmp mov cld sbb mov xchg das pop and dec loopne in mov pop push push push jmp mov test add inc add out jmp (bad) push adc adc popa mov dec daa inc call xor push push mov mov push test add insl vandps push mov add stc fnstsw push jmp test mov iret sub cmc in or jg push mov sub push adc sub data16 xor xchg mov xchg sbb and cmpb mov fwait (bad) cmc or xor out add jmp sub xor pop inc mov adc or sub inc icebp daa rclb pop (bad) fiaddl mov aaa ror push or inc data16 mov outsb add mov pop pop mov push xchg pushf jb push icebp aas icebp cmp dec and into mov jg shl mov mov jns fisubl pop mov js movsl mov pop lret in and into cmp adc repnz es mov mov and fstpl das mov sub imul scas pop sbb mov adc fldt std mov cli sbb aad add std inc inc xor rcrl fdivrp (bad) leave fstpl mov xor jl cli adc movsl mov xor dec cmp or (bad) pushw xor sbb dec adc sub xchg es mov push fs inc sub jmp daa repz sub pop cmp xor icebp xor adc out mov repnz adc push roll neg dec mov daa and popl push cmpsl adc push insb mov in or test cwtl fdivrs rorb aas and scas dec push inc xchg mov aad pop and pop dec adc xor fidivrl xor cmp out jnp sbb lods not or test and ret and aam inc pop push mov or rep dec nop pop rclb sub cmp add repnz add ret mov mov sub dec sbbb sub (bad) push mov bound fbstp aaa push cltd clc push jmp pop loopne cmpsl test adc aam push mov sub flds (bad) mov sub cli and shr xchg mov cmc loop je sub aas dec ret scas scas cmpsb inc mov xchg inc mov or es jbe add les out dec popa xor rcr inc mov dec sbb adc mov sbb test (bad) repz pop dec imul push push jl push loope or std jle pop jmp insl jne add dec ss sbb sarb or mov js add push movsl mov adc lcall pop popa xchg loopne mov and xor push or mov cmp ja dec leave lds inc pop pusha xchg aaa ds mov dec loope jno xor cmc fdivl adc pop test arpl js mov divb dec add jp (bad) mov loopne fdivs and ret xor in mov and mov add mov mov xor rol pop jecxz mov out scas or xchg xchg lds mov pop mov sbb sub rcrb jle jp (bad) fldenv jno xor pop pop jmp and out jbe js dec fnstenv mov add jo ficom je or es sti loop repz inc inc test repz jb idivb push movsl cmp sub out xchg loop xchg add movb dec jmp adc xchg mov in jecxz test dec lods bound clc cmc cmc movsb outsb mov outsb pop xor pop std faddl jns scas loope rclb frstor jle add push mov out adc dec scas aam jmp insl pop test ficoml or add cmc bound sub shrb cmpb loop jl push add shlb or inc cmc aam out scas mov sbb mov push jnp test push hlt sarl sbb xchg push shll inc cmp xlat jmp nop scas push adc sub dec mov adc push sbb pusha xor sahf imulb orl sub test cmp push fimul push pop cs pop movsb lret mov fsubr inc lret pop pop or push bound popf test mov shl dec jmp mov fsts or add mov rol mov test (bad) mov fild (bad) jg iret pushf (bad) sbb jo xchg idivl mov (bad) pop cmp cs jle pop xchg imull or add or scas xor xchg mov dec mov mov in repnz sub cmp pop repz xchg add cmpsl movlps sub mov add mov test notl mov popf add jmp xchg jbe data16 or test or add cli adc sbb ror sbb jp addr16 xchg sub mov cmpb lret movsb xchg fist dec mov mov fwait js in sub mov fisttp lret mov add cld xchg mov outsb and cld test js xor and in or cltd dec add ds je (bad) mov mov sub (bad) stc daa mov inc jb jmp push mov add jns enter pop call or sub jle push rol je fiadd add xor aas pop mov jae push jns mov rcrl push pop (bad) lcall mov out lds pop fbld sub sub and loope cmc pop adc loop xchg dec rol (bad) cld test cmpsl loop lcall sti or je pop loope pop sub test add push dec dec add insl loopne inc sub rcrb mov divb ljmp dec stos scas mov psrlw aam jb shr xorb xor cmp js add push pushf pop mov pop data16 xchg stos cmc lock jge jmp mov sbb lds (bad) and mov mov lahf cmp (bad) cmp pop ja das mov ror jne (bad) out sbb xor or fs adc push push or pop shrl add test ret or pop xchg (bad) inc push add popf decb notl mov stos es and mov mov or negb lods test dec rolb ret jmp mov xor or sbb movsl in sbb test mov adc pop out (bad) push jmp pushf jo popf and ja bound hlt aaa sti add (bad) mov pusha mov pop jge js je sbb push or into sbb pop jo mov push pop pop jle call push mov sub sbb insl pop cmp adc pop lret decb mov pop enter push and decl xchg jbe push loop mov out adc aam cmc mov decb rorb fnstenv test or out jmp jl js,pn movsl adc pop push jmp add inc dec adc insb pop lock popf fisub xchg sti lea xor jecxz (bad) jge jl je sub pop movsl pop mov (bad) fs jecxz fist cmpsl call or lods rcrb repnz or ja in lods ret or add fwait push pop pop push inc adc mov push imul popf sahf mov aas in or and pop xor shlb push and shrl xor (bad) (bad) dec fsubp mov (bad) lock fisub and push dec add in jle in js xchg pop cmp test shl or jmp aas add mov sub pop cmp std and popf and (bad) adc stos xchg jg lret mov xchg push cmp aam push push stos rorb pop dec jb jno inc and (bad) xor orb add jmp mov xor fild sbb popa jb xchg jb sahf add movsl les pop shrb or mov xor decl mov dec mov add or jns aad lcall sub and sbb adc pop pop loope enter inc cmpsl cmp mov jge ret xor (bad) imul into dec daa int add push mov lret popl jecxz inc jg sbb stc addr16 icebp push int add cs je sbb aas jmp in pop incb movl mov or add adc mov inc dec sub xlat jne xor je pop icebp lea stos add and mov jnp inc mov das jno,pn jmp movsb sbbl push mov sub loop mov and pop or fcmovb jmp jl sbb add dec (bad) je push xchg xor movsb xchg aas outsl adc sub xlat outsl pop fsubl cld lea mov outsl mov mov je sub pop and (bad) push enter divb pop add loope jecxz loope in or fcompl (bad) addb dec push in out add repz testb loopne sub mov sub add fs in fs enter dec les pop mov sub sbb jp int repz (bad) (bad) add in jb and push bound pop xor mov mov and out dec dec jl (bad) loopne sahf sti add push mov add pop push jmp adc xchg adc dec iret and fnstcw ds and rolb dec jecxz cs mov xor mov sub mov sub xchg in mov and push popa hlt stc movsb xchg inc pop xchg lds jp push scas mov jbe out add inc xchg imul mov test add movsl mov in add dec jp cmp es cltd mov xchg push xchg jns fdivl test cmp test andl inc fldcw or inc aad mov adc adc stc pop enter arpl xchg (bad) ja movb xchg cmp ja stos scas jecxz adc add stc mov pop or xchg pop add je out rolb cmp xchg negl (bad) push mov in jae pop mov or in scas add xchg gs mov pop sub and fimul adc or push xor lahf bound push jbe sub jmp scas cmp (bad) jge lcall pop sub dec shl pop stc xor fsubrs jmp inc push rcrl stos sub sub pop jnp inc or orb add sub adc out clc (bad) (bad) xor jb dec push add mov or xchg mov in popl pop sahf lock cmp pusha xchg inc mov cmp lahf xor call dec and sub js movsb fs and jns dec push sti int3 jnp dec xlat jmp scas scas addl xchg (bad) pop loop pop shlb adc movsb imul pop push das js xchg push xchg sub cmpsl xchg cld add aad add add pop in les test stc bound inc lret add and das add loopne xor ret push rorb popa dec lret mov or in scas jl mov scas push cmp mov jmp decb adc mov ret mov stc mov push sbb push pop nop xor imul pop fstl push add jl xor and lods and cmp add sbb add push xor jmp sbb andl mov add out xor mov inc and and fnstenv pop xor xor pop (bad) xor pop add ljmp mov push adc mov xor aas and sub jp inc add adc sub loope int and dec or sahf push mov or fldcw mov xchg cmp in test das repnz cwtl dec push mov in repz lret nop add mov test sbb pop cmp in xchg lcall fdivr mov notb cmc adc mov outsl add mov sub test pop nop jp or xor cmp mov jmp pop add push push add dec mov loope push insl das lret dec test cmc jge push pop adc sarb addl addr16 lds aas push cwtl (bad) push push faddl pop mov pop push bound stc pop pushf or je pushw movsb cld pop mov aam in scas sub cmc push jnp dec mov xchg lock and jns push jl out or add mov daa mov fs cmp mov push mov dec sub sub pop inc pusha or call mov inc mov mov pop push push test outsb xchg sub xchg hlt push leave dec push das stos lret loope cmp push fdiv (bad) pop add pusha cmc (bad) xchg pop loopne pop pop cwtl sub ds outsb sbb push jb int jmp pop in cmp mov stos mov push cmpl jp rol in jmp mov dec in lss xlat sub mov inc cmp (bad) mov out daa bnd pop ret add pop sti dec clc pop cmp sbb push cmp sahf std add test subl js jecxz or stos sub push sub sti xorb xchg sbb mov jmp pop push nop dec repnz pusha sub jecxz sbb xchg xchg jmp (bad) push and add sbb cmp xchg jle or add sarl or push sbbb mov inc pushf push add call les jmp mov popa and std push push sub icebp insl bound enter jmp mov push pop add call outsl rcll ret cmp push or daa cwtl fcmovb jb cmp call jmp sub and out sub enter dec pushf dec adc mov fnstcw mov push push inc mov in pop mov and push loopne es pop ret adc jb add mov es adc sub push xchg jno inc int inc jns (bad) and pop sub xor fmull xchg lahf pop icebp jl scas adc or xorb and dec sub add rol pushf sub and jbe xlat pop and fistp cwtl pop loopne popf add xor push shrb or les mov fcmovne cwtl adc es add mov cmp xchg pop into es test jmp add jl jge out (bad) cmpsl (bad) ja xchg clc lock xchg divb shr mov add cmpl mov int3 sub mov je clc mov not push dec adc stc addl dec in inc xchg imul or loop push call inc int3 jl mov cld and cmp xlat xchg repnz or cmpsl jno jg push and xchg dec and jmp out pop xchg add icebp dec daa jno dec jmp in addr16 sbb or push sbb cmc push mov sub (bad) cmc rol mov notb insb (bad) dec daa (bad) ljmp pop pop cli ret dec xchg cmp std bound iret movl mov movsb or pop adc jg (bad) int3 jns (bad) mov cmp mov sub arpl xlat loopne (bad) (bad) push int3 adc mov push or sub lods mov nop lods out aaa jecxz rcr out cmp mov pop ret loopne iret mov adc mov es inc jp mov addr16 lock outsl push cld adc mov pop lock or cli push aad sbb adc inc hlt xor divb repnz aad mov notl fisttpll int3 xor shl pop in sub jmp push lret ret adc into dec jmp sbb push sub int3 popf xor rorb cmpsb popl push test xor idiv addr16 or adc fst insb jne stos jecxz mov pop jmp jae nop js mov ds mov mov and pop pop test out add or inc and or xlat ss mov dec inc jae nop mov xor push sbb jecxz jp popf flds cmp adc divb sahf scas pop pop repnz adc or mov xchg pop lret push push lds inc or sub lret pusha push mov push inc push fsts (bad) mov dec jbe adc les ljmp mov inc xor femms xor add jb aaa fldcw je lea cltd pop add or jmp jecxz cmp add (bad) jo add popa or push ds pop aam imul (bad) shrb fs pop sbb sbb or add xor push dec dec sub xor (bad) mov cmp mov stos mov test sub rcl xchg dec cmc jmp out cmp or sub pop adc ljmp inc jbe sbb mov in xlat mov fldcw cmp mov mov rorl test xchg fistpll repnz adc push mov add movsb mov dec int xchg jp mov cmc xor mov mov in sbb mov popf jno cmp orb mov iret pop xchg test jg inc ljmp fstp add or ljmp xor dec addb inc sbb lret ljmp or pusha jmp push (bad) xchg popa pop pop imul repnz sub mov xchg add mov ljmp or dec pop pop xor fdivr dec rol ud1 jle jp adcl xor pop fist or sbb mov dec test ljmp pop pop fsubr addl inc hlt xchg data16 lea mov cli xor mov xor shr subl mov cmpb jo inc push add jb sarl (bad) movsb jle or orb negl adc mov add add cmp out xchg out lcall (bad) icebp aam es adc mov cld (bad) adc adc fisttpll bound push mov sub out push push or push loope mov or lds inc ret add mov sub movl jg loop or xor xor jbe andb insl and jge cmpsb mov push mov ret hlt js test mov lds cmc lahf pop adc mov out sub fs mov mov cwtl pop scas cmp sbb xchg lods jle sub nop jb add sub and push mov arpl mov mov (bad) je sarl out ljmp mov xor mov add mov inc int3 das in in and not xchg rorb xor push push push mov inc stc pop cli orb push push jmp les xchg loop cmc out jmp inc lret js add dec aad sub cmpsb adc cmp cs stc pop das mov pusha and (bad) jo data16 hlt mov lret rcr xchg sub xor in outsb cli mov shrl jle or lret add stos or outsb jb push push dec mov push imul inc pop add push pop adc pop dec or into (bad) sar aam mov and mov idiv pop insb jb aad mov in repnz jae test std push jns movb push pop push push jp les loope dec mov movb call sub and je mov mov sub add mov mov xor sub data16 rorl shlb jmp fidivr mov mov cmp mov into out mov and push ljmp scas push jnp inc das or in jnp mov adc in test repz ljmp mov lahf pop dec add push and aam and insb pop sti pop pop (bad) mov dec push out daa aam jmp xchg pop lods popa int3 je loop xchg clc jg jns pop sbb shr mov pop adc adc test xor fsts xchg push (bad) fcomip dec imulb dec enter mov shrb or or adc push data16 daa (bad) pop pop cmp repz sub movl inc mov notl gs out clc mov mov (bad) mov add sarb (bad) (bad) jmp cld lds cmpsl jmp mov inc xchg pusha shl push xor mov ss adc mov sbb shlb stc push xchg jns pop pop cli out icebp inc or jp mov rcll xor cs jmp lret push mov xor mov sbb fidivrl push push add cmp xor ret push mov and (bad) jns sbb mov xor mov cmc add xlat sub lahf repnz sub shl push fstps jle inc enter mov sti xchg mov negb jmp cmp lea out addr16 mov pushf push push (bad) (bad) cmpsl xchg inc jb fildl xor add (bad) sbb cwtl mov cli ljmp ret xchg or mov les movsb cwtl (bad) adc inc int3 scas sbb fisttpll cmp movsl add fistp cmp jp sub bound or jne jmp pop inc inc dec push inc inc and stc push in mov dec out dec inc mov idiv addr16 fldl push sub cs mov add xor and les repnz cmp mov push mov jle out mov jbe lea inc aad aam sub lock xchg pop xchg push les je popa xchg jmp (bad) jb repnz mov das pop mov xor cmp ret mov adc sbb addl aam xor cli and outsl orb jl adc pop (bad) xor notb enter mov test addr16 (bad) fcomip aas imul xor dec sarl (bad) arpl lret sub dec cld out dec mov lcall and aas dec jbe loopne bswap sbb lcall push xbegin into jmp ljmp scas push jmp sahf pop xchg cmc (bad) dec scas lcall mov cmpb movsb das xchg loopne in or test lret push mov ret cltd repz clc push and pop pop pop and cmp out int fisttpll lret sbb les mov les pop push push lds lock sahf pop push shrl sub dec push jl xor xchg sbb pop outsb mov out inc push mov sub adc les add xor sub add fmuls call or testl cmp test pop std scas add mov outsb scas test add sub xchg add jmp repz xor (bad) mov wrmsr daa fstpl leave xchg rol rolb cld push pusha sub (bad) repnz (bad) mov popa fsubs inc rcll and mov daa mov adc fldl jnp sub movsb test cli mov repnz rclb out sub pop add dec sub pop (bad) iret mov bnd push faddl testl and call and pop mov call mov notl or sub mov lret negb jge pop push les or and lods dec sub int or push xchg jo cs mov mov push push loopne cmp mov mov xor jno mov leave add out pop push lret or mov add aas push mov orl std pop js sub aam jnp jno xor jmp lods add jge jns or lds mov pop inc jmp mov loopne mov stos mov js and mov sub push add test (bad) xor (bad) ljmp cmp jmp dec jne and pop mov pop push div mov es insb aam inc fucomp and dec jnp pop xchg cmpsl sahf adc jb xchg push test mov push mov int3 hlt add in ljmp mov bound mov popf mov sub push out or scas sahf hlt push pop dec adc movsl in cs loop lock (bad) fcmovnb push push cmp pop dec in test jbe xlat xor (bad) mov mov adc or (bad) mov xchg dec int outsl (bad) or adc idivl hlt push stos aaa add xor jp inc sbb push stos sub mov cmp mov in test sar mov jno cmp add into and and xor pop pop mov push jmp das push jmp jp add mov in test lret fnstcw mov push mov jle repz mov xor pop (bad) xchg adcb (bad) jmp call dec cmpsb lahf sub hlt sti bound xlat pop dec les lods movb (bad) roll fbstp addl pusha loope pop cmp rclb mov xchg decl nop test inc inc gs dec inc sti inc loopne xchg bound adc mov add divb mov lods push (bad) je daa aad sahf jne ds or sub lods and xchg fwait addb mov in xor not repnz pop push mov inc (bad) (bad) add pop cmp or push pop out xor mov jmp enter lea or insb das xor data16 loope pop (bad) cmp shrl xor mov leave push push mov sahf push jno push pop imul dec mov inc jecxz test fist push mov hlt adc sbb std cmpsl jge dec mov xchg dec data16 les adc push pop mov je fnstenv std pop scas popa sbb mov nop adc xor adc jns cmp add das fidivrl (bad) loop pop mov jmp ds push push pusha movsb adcb (bad) push adc and add lods and mov mov fisttp negl lret inc fiaddl nop xchg add bound cmp cmp shrb and bswap mov add or mov fild dec (bad) in pop std ljmp sahf jnp push pop in nop adc out xor pop ja jb rorb inc jne repz outsb add divb xor cmc jp mov loopne push daa scas fmuls ret shl iret (bad) and js cli fisttp sub sbb (bad) hlt jbe js add fmull sub xor jne in lea adc outsl lea fnstcw dec xor and inc shr pop lods dec and push sarb mov es jg fisubl loopne mov cmp mov ljmp test sub bound push xchg cmp mov pop dec nop inc sub or clc sahf repnz out mov sbb inc (bad) mov out enter shrb pop jmp mov xchg incl pop xchg sbb jbe sub (bad) xor or shl test mov jne jmp das test inc mov ja addr16 sahf dec (bad) ds pop mov push gs pop push adc int3 sar adc xchg sub clc and (bad) dec mov sarl (bad) sbb ret test aam dec add xlat mov and xchg lret popa fs lods jl sub cmp xchg push rep ret (bad) mov sti inc pop lret mov (bad) and loope divl add ret stos repnz push jp daa cwtl std ret pop leave pop inc push dec not lcall cs mov cmp adc loopne mov mov out ja or push add mov cmp pop pop xor leave adc sub test rorl pop dec jno jp call sub mov or add pusha hlt jmp xchg mov or fistp fs jmp mov add sbb dec ljmp pop lret loop and mov xchg rcll adc test repz sbbb xchg add xor pop xor or hlt add xchg pop test shrb sbb xchg leave stc or cwtl push sub inc adc enter jle jp enter pop cli jns jp cmpsl aam xlat add cmp or (bad) jmp ss xor mov pop gs mov leave nop cmp clc and pop popf data16 adc call add push cmc xchg sahf pop or pop cld adc roll cmp adc xchg std rcrb js incl inc jno adc divl call jnp es mov ret pop jg adc or scas xchg or mov push roll imul inc mov adcb add stos xlat lcall and fildl pop lods jbe das pop pop repnz fadds insl lahf rcrl js das movsl nop clc inc outsb test icebp inc sub pop test push test mov fimull jb sbb pop dec sub dec pusha jecxz adc or push push jl shr jno ret and mov push out cmp inc out lods lcall dec adc aad sub xor and fs stc movsl mov mov loopne test xor das cld mov push pop xchg stos lea hlt jp adc imul jmp lahf hlt cmpsl orl in push add jmp inc stos push dec fisttpl mov loopne xlat iret jbe (bad) shrb xchg bound aad aad loop sbb rclb adc mov popf pop lea iret adc popa adc jge notb daa pop cmp ret push loope stos sub and dec push push push pop icebp pop jbe inc mov or pop sub daa (bad) jmp (bad) and xchg in adc cmp mov sbb inc adc negl mov mov push clc jo lods pop sbb scas cwtl sarb cld out ja push sahf call je adc cmp mov xor dec dec stc adc leave loopne fmull ror adc lahf jo mov push dec adc mov adc mov add pop pop mov sarb push xchg into cld clc out cmpsb jl mov loope add insb bound lock clc push lret (bad) pop push and jae jns xor jge mov mov neg or mull or jmp pop mov in ljmp aas add out pop test or jmp sub or cmpsl dec fisubrl xor push dec arpl shll push mov movsb pop pop lcall pop xchg push sub mov inc (bad) add pop xor nop mov clc pop ljmp cmp and push push inc dec push divb mov leave jle js xor adc jle and cltd add inc ss mov inc insl outsl in mov mov mov or lods xor mov dec sbb xchg jge push sub nop or and pop inc and or sbb int3 push bound push psllq popf xor and out pop or or add jl out mov cmp add test mov cs cmp pop sbb pop jmp aas in xor sub cmc mov hlt add adc mov movsl lcall xor in jb cmp (bad) repz scas cltd sahf inc into xchg aas mov mov les pop lcall and daa sbb in or xchg inc dec (bad) lods mov push mov psllq inc daa ss push add fadds mov and in sbb fwait je jne aad and pop shll mov mov bound xchg mov sub xchg data16 jb outsl add call pop mov mov (bad) mov fadds mov (bad) add leave and adc sub pop in mov (bad) stos pop (bad) std push push jle clc inc and jo pop insb daa or movsb dec and mov pop push sahf push xchg adc pop push scas out sub fsts jmp outsl in inc rolb neg jb jecxz pop dec add adc adc add in pushf lret xchg jle or pop jno movsl lcall sbb push mov xchg imul jb mov rorb mov jmp mov ss xor sti xor push xchg pop ja loope adc sub mov icebp adc dec push jmp fstpl jns mov inc mov jg mov xor in mov push cmp arpl ja ljmp push or movsl std or loope mov daa jmp out rclb or adc pop push mov xlat push aam push mov adc push push dec lcall scas js and rolb push push jge rclb mov cmp add mov jp fist mov xor mov fiadd mov jle mov pop add popa aas shl jb sbb add mulb shl push scas mov push mov not hlt leave fild shrl dec ret mov cmc jmp les push push push sub jl and pop and fdivrs lds inc fdivr out xchg add jmp mov push cmp loope clc cmp (bad) cmc les push fcmovbe fmull pop popf (bad) test xor mov cld addr16 xchg adc push mov push or dec mov sbb or cmp mov lret pop (bad) cmpsl or icebp jnp nop pop or push cmpl pop adc xor mov jns xchg ret fnstsw and dec cltd mov cmp jno pop popf js dec call imul fidivr mov push fsubl inc xchg xchg and jne cmpsb mov mov test push add xchg or ja mov std and addr16 mov xchg push aas imul xchg mov ret pop cmp sbb adc or add xlat inc dec dec addl pop sub ljmp test lahf lock add and jl xchg jbe add jo pop mov ret adcb xor mov sub jp vmread pushf push mov jno movsb add add std add stos in mov mov dec xor or decl or xchg add lea lods bound syscall mov fsubl inc mov test mov aas fsubrl (bad) loopne or (bad) pop shl and add loope das or das push out lock test fildll daa or jge mov push push push inc js adc mov jecxz lcall or outsb in dec push jl mov arpl call (bad) (bad) xchg sarl psubusb adc xchg add inc jmp (bad) or mov movsl jmp bound inc xlat mov or mov sub push inc or push push mov push fmul arpl adc xchg or fs je jns inc fnop jno xor and negl cwtl xchg xor cld movsl pop stos daa xor (bad) lret or adc mov fbld out cmpsl sti fisttpl cmp aaa and jg adc rcl jo adc sti add ret aas (bad) or das pop in dec mov pop std xchg (bad) mov (bad) push jnp lds int3 adc scas rolb xor adc rclb adc cld lret push icebp (bad) xor push nop add das mov jmp and icebp rolb stc mov adc jbe dec roll sub outsb mov fwait popf test out rorb mov addr16 lods push or out or sbb pop orl test dec mov (bad) in adcb pop mov ds push aad outsb xor rcll pop push jp es inc push xlat mov js cmp push stos lret out rcl jb mov outsl fsts stc adc je cmp inc dec xor sub ds jle ret cwtl cmp dec jbe inc dec or jp or push pushf mov dec add dec push cmp call dec xchg fwait push in sbb jmp aam icebp outsb pop jnp hlt test mov inc lahf xchg (bad) (bad) jl push sub jb pop push inc or daa pop and xor aas cmp shld jae mov leave aam jp mov enter jb fnstcw ja test addl rorb aad ja or pop int3 or popa adc jmp mov mov int3 loopne push scas dec popa push add adcl loop dec and pop push mov test mov clc mov ficomp and mov ss icebp popa jmp lods push mov push in pop cli data16 pop and and lds add or and push imul nop xchg dec xchg inc dec ret jecxz adc lcall jmp mov push pop adc mov mov xchg ja (bad) xchg jg in inc xor sbb popf (bad) pop mov fldcw int mov pop movsb orl (bad) jecxz dec scas in push and pop pop in into xchg popf push jmp pop or mov mov push mov push daa jmp push lahf arpl (bad) js lds or mov movb inc dec mov adc pop add and or xor push add das mov dec sbb out adc dec mov inc xchg mov sub (bad) mov adc cmp cmp fadds dec or push pop (bad) cltd test mov or push cmp add jo push outsl popa inc jne push sub cmp pop pop mov inc adc or pusha lahf sbb sub or pop pop cmc and lods lds orb jg cld mov xor dec or push sbb loope push das push notb and dec xor jmp or pop xchg paddd cmc scas push gs negl push setl sbb push mov inc add je jmp sub inc push mov out jle and sub mov mov jne loope mov sbb das incb (bad) (bad) or push movsb dec push push jns add xlat inc ja sub push mov xchg sbb aaa int3 sbb loope pop cmp pop add and pop xor into pop pop inc inc xchg sub aad les push add lret or dec out pop xchg (bad) outsb mov daa xlat in jae add pop pop push mov sbb cmpsb add adc push pop inc adc je shrl lcall lea bound test dec pop sbb sub jae add adc jne or xor insl mov jmp mov sub or add loopne outsl insb pop adc xor push testl jg push pop sub adc jb xorl gs adc inc mov add sub mov fwait or push or xorl (bad) and push add roll pop xor es addl mov pop pusha pop js adc and sbb lods das pop scas sbb (bad) shlb mov adc pop or shll rclb or lcall mov or cmc jle into add push dec push inc cmpl hlt jge cli xor xor imul xchg aam les outsb mov (bad) and or (bad) jae das rolb or fcomi jmp pop outsb movsl lahf xlat push and pop jne rol mov mov pusha xor dec pop jmp sub mov sbb and test push inc add test mov adc call (bad) or jle cmp push and iret sub push pop pop mov lds imul (bad) jg inc sub cli pop pop add fnstsw or xor pop add adc push jl dec test pusha (bad) in ret xchg pusha fildl dec adc push pop movsl test mov mul jecxz add mov add mov (bad) stos das stc xchg pop push mov push test dec ljmp iret inc and repnz inc (bad) and and dec and adc inc out xchg add pop ss addl fldcw mov insb stos dec cwtl in aam xchg add (bad) add lret sti (bad) or xchg inc idiv xchg (bad) mov sbb jnp cmp xlat jbe adc hlt xchg dec and cmc cmpsl push leave imul cwtl lea repz jnp or jmp xor lods push inc jp pop dec cmc popa testb test or int3 scas add sbb cmpsl pop adc mull push dec inc sub ss jp aaa pop pushl sbb adc pop xor sbb hlt testl (bad) mov subb pop inc pop mov dec dec jmp sti loop int xchg push (bad) xchg jmp pop loope mov arpl adc mov push inc jmp push in mov jge insb dec dec lahf sti inc xchg push mov out mov mov xor fiadd sub and xchg (bad) (bad) ficompl leave or mov movl lahf pop sbb cmpsl xor cli addr16 dec add and and cmp xor insb addr16 aas das dec sub mov add dec dec adcb iret push mov (bad) or inc add divb jo and add pusha jmp adc push repz (bad) nop cmp jb add vpmulhrsw jmp add push add mov movl sbb and xchg (bad) dec and js in out ss int push jge pop push jmp loope add movhlps inc xchg cmp push adc push incl push (bad) ficompl jo mov test and movsb xchg push push add hlt mov and push mov mov push out mov add add popa ljmp pop xchg decb pop push aad inc mov cli push int popl lds das and sub sti xor movsb xor fist sbb inc clc xchg cmp dec xchg cmc sti mov outsl adc jae cmp fmuls mov out jae push xor xchg cmpsb scas pop xlat jl dec gs daa ss inc xchg into dec xchg or jge outsl xor mov lock and scas imul pop out inc neg adc es (bad) pop dec and cld rcrb mov push cmc push test push (bad) lock pop inc sub mov icebp dec mov (bad) or push loope inc fistl call icebp mov xor sbb xor pop ja adc jmp movsl testl jp cmp pop sbb cwtl stc mov cmp inc xor cld (bad) lods xchg lds xrelease in mov mov popf jbe (bad) adc sahf or jb mov push rclb in pop nop and or (bad) jmp or subl cmp scas sub xor mov test ret cmp std jl mov mov jb push or shrl shr js les inc (bad) pop stc xor pop inc cld mov and ljmp flds pushl and sbb loopne sub adc add cmp fistl testb sbb add xor mov add jl or in adc push aam add xchg pop mov popf out xor xlat (bad) jo ret adc adc or dec jne sbb clc mov and adc adc mov mov pop js addr16 and inc fstps inc fcomps add ficom cmc daa dec (bad) add pop movsb (bad) ret movsl fnsave pop les add mov movsb fiadd (bad) xchg cmp ds pop inc add ja push adcb loope testb das push add mov imul je mov dec popa jne lahf push arpl cmp mov cli js pop sub mov add jnp add les add xchg xchg fnsave add cmpl test jb push je jo add out (bad) je stos in inc out add pop cmp fist into cmpsb addb dec iret bound mov sbb and pop ficom adc mov jp push jnp cli dec add icebp xor or push push hlt add fxch push addr16 fmull and js push xor dec jae add shrb sbb fscale (bad) pop add in nop push ja ss loopne outsl cmp dec scas or testl std sub push out test jle xchg cmc leave add sbb mov mov cwtl fwait (bad) xchg xchg sbb xchg cmp in mov enter les bound roll jp jge xlat and aaa iret adc je pop sbb sbb lret rcrl add in fisttp pop sbbb (bad) and jno add fisubl dec add and faddl add imul int xchg cmp test sub fiadd cmpsl sub push jp dec cmp dec adcb add outsb push lcall inc mov jns leave call dec rolb js je (bad) jmp sbb push push pop jle dec sbb xchg or jnp add stos out pop mov dec jb add xchg (bad) jae adc mov add cmp mov mov inc fiaddl out inc fsubr jno rolb repz aad jo aam stc imul jmp inc in fistl dec mov pusha (bad) fsubs cltd pop scas dec add rorl xor lods inc add adc insb jge push loop xchg pop sbb xor cwtl pop or inc je add pusha push mov (bad) mov mov mov clc dec imul sbb sti ret xchg adc mov jmp pop fisubr sbb pop xor inc flds cltd cli shll push add cwtl loopne or flds and jmp cmc sbb jnp pop pop ficoml cmp push mov add adc xchg cmp in loop add or nop popf add (bad) int jg sbb add jns xor sahf out enter repnz push call lock sub int3 xchg or fisttpll and rsm sub sbb dec in sub stos inc xchg push insl lock push xchg adc or mov xchg push faddl cli sbb add or testb and std mov and add mov bound iret pop push pop lock lods loopne pop sbb mov mul jmp lgs mov inc mov push add out mov sub xchg loop test sbb pop add fsub mov or mov push add mov pop lods inc out fildll adc rcll sub mov mulb adc add xor jle (bad) mov add dec push stos add daa jno pop lret mov sbbl sbb mov dec ss jecxz add test mov lock lret adc mov and push sti addb in xor push data16 add cmp add leave add lahf enter xor test jne add lods jb add or add add and jge add add sub (bad) adc stos cmpsb pop jecxz int3 mov add cmc (bad) mov lret sub pusha call dec dec es popaw jno and imul rep gs adc pop dec jl sahf cmp and jle lock mov (bad) mov mov push add xchg div sbb mov sbb push outsb dec jmp push add mov push mov aas scas fiadd das sti and sbbl dec xchg cld sbb fidivl lock push cmpsl or add mov adc adc shll scas aam repnz imul sub fild mov enter shrb dec jbe cmp aad int3 add pop cmpsl mov mov js popa cs mov pop pop fldcw shrb jo pop inc and test xchg add sbb xor inc xor popa xchg rol ja leave cmp arpl shr (bad) pop dec and mov mov jp cmp jg add xchg popa adc sbb xchg mov jo or jo add mov mov dec mov cmp (bad) cmpsl ljmp addr16 cwtl outsl mov add scas movsb lods mov addb fsub test mov ss fcos test xchg (bad) adc fild push lds lret add xchg inc adc mov ucomiss mov mov xlat and shr fimul and loop lret outsl mov pop jno lock outsb loop sub in pop test popa js add gs sbb push add push xchg ret inc fmul addl mov xor cmp sub jne je les ret insl cmp mov push mov add lret cmp dec into out jb inc add mov mov test add (bad) stc (bad) es pop sbb mov pushf orb ds lcall ret and jnp add add sub inc push test push pop add cwtl pop push lock xchg out push aad fxch add ret cmp (bad) push mov out ds add adc fadds add lret nop inc add pop and xchg push mov shr lods es push add ficompl xchg dec or rol ret sub jmp pusha arpl xor mov inc scas lahf dec jbe add fimul loopne sahf outsl cmp xchg rolb dec add mov xchg sbb push add leave jae daa mov int cwtl mov add lods sbb into es roll setnp and fldl repz cmp insb jle (bad) rcrb add sbb mov or or outsl das jno adc sbb cmp inc es cmp cltd (bad) jne in es sbb add out jnp jg pop daa out dec pop jl loopne cltd or adc cmp and inc or and pop mov mov sub push add cwtl sbb mov sbb lret add add and push popf push push dec add sti fwait inc add push jge add data16 xchg pop sub add dec mov mov or xchg fist nop push add mov ficompl jne addr16 fisttp add jg sub inc mov daa add or fild sub pop pop mov mov movsb add push mov or sbb adc or stos outsl inc repz ficoml dec faddl mov cltd pop push mov idivb loop push xchg lock xor push pusha lock loop sub shlb add (bad) sbb sbb scas inc push dec mov add mov or ss xor add inc xchg push out pop push adc rcrl sbb cmc add push imul mov add jg call jmp mov sub lret mov add push (bad) jmp xchg jle add (bad) in cmp cmp dec mov sbb roll loope pop dec int3 add xchg cmp aad lds dec and add push leave das pop xchg es cltd dec pop add fildl int ret (bad) mov or cwtl arpl loop popf repz push nop cli add js enter (bad) int3 jne jb add imul dec push add lock adc popf pop pop rcll push cli mov jl lahf (bad) out adc sub mov sub push dec inc inc inc aad (bad) xor cli add stos dec (bad) fsubs es jae outsl xchg test cmp cmp add in cmova cmovle mov push cmpsb cwtl push add sbb pop popa flds push fcomps pop add mov mov add or xlat mov addr16 pop pop je shlb mov insb xlat inc (bad) mov add inc ljmp xchg enter clc jb push out imul fldcw fldl mov out dec pop add data16 cmp add (bad) sbb dec push sub pusha or xchg daa cwtl dec pop add add fbstp mov push inc push pop or xor and adc push ljmp add pop nop repz repnz ss add int addl mov dec in pusha jno lcall out adc sbb repnz (bad) mov jl movl jae xor pop fistpl loopne sbb jno lret testb pop test mov pop ja insl pop jb or sub shlb cwtl mov inc mov pop out and iret sbb sbb sub mov push mov roll mov xlat lods and loope rolb fidivr xor jp push push jno add xchg xchg pop push or ljmp call xchg test adc dec and aad or ss push gs (bad) or mov dec sbbl out sbb andb shrl xor enter test fiadd push ret xchg pop push sbb sbb incl faddl jnp call jo js or sub ret push shl or mov mov scas movsl lahf mov add call imul mov mov adc adc pcmpeqd loope and jo enter add inc out mov mov and scas rol es push jnp fsubl jmp leave add out add pop jle pop pop jae sbb add adc and lock sub mov (bad) pop cmp mov sub or leave mov mov xor cmp mov inc fist ja add mov data16 mov pop lods push mov jl add call or mov dec jbe add (bad) fbld cmp add jae mov call fwait es cmpsl mov xchg jecxz stc dec mov in aaa in (bad) adc hlt dec jno adcl jg jo and add imul loopne jl ret add push and add lods inc add or in pop sahf js or add add add fist fiaddl shlb stos sub jo push sbb cmpl js cmp inc pop rcll sbb inc out out adc sbb add push movlps cltd (bad) cmp add mov xchg mov add cmpsl lods jg fnsave add outsl add ror inc add (bad) in repnz sub mov (bad) imul out pop leave fs mov adc dec mov enter adc ja push jg push cmp in cmpsb dec xor xchg pop (bad) sahf sub outsl pop rcrb mov dec mov xchg iret add mov jno or xchg hlt lret jno hlt push add repnz fsubl test and lea sbb mov aaa add call outsb or int3 cmc addr16 outsl decb nop pusha push shll or dec rolb imul lcall push sbb popa fmuls mov push add inc roll data16 sarb push jecxz pop add repz cmp rolb enter and jns add out jbe push pop es int3 and mov inc flds sbb fmuls xchg mov insl (bad) call xor lds enter push and xchg inc mov idivb add pop in out enter cs add xchg mov stos xor movsl jo cmp mov cmpsb (bad) das dec pop rorb nop in jge xor insl or aam roll xchg add push dec (bad) cmp adc add sub add negl adc add adc int3 add xlat push add cwtl fwait mov inc push stos push (bad) xor push aas ds loopne in xchg jbe clc ss leave jle mov xchg aam pop push push dec ss pop test and scas mov dec rclb ss fldl clc pop test jge nop adc in push mov sbb xor cmc cmp jmp xor push shll sub (bad) xor and popl imul in pop pop dec int3 add je xlat pop ja or pop fistl out bound xor push rcl add es in sahf add inc mov aas add (bad) push add cmp scas popa (bad) mov add pop mov push jp add add aam cmpsl or push push stos adc out add sti add cli push lock lret pop push adc test mov adc jg add test nop pusha sub push popa mov sbb ds inc add (bad) insb int ret jno jbe sbb and push add adc mov mov scas test in in add ret jns pop inc nop repz jecxz leave incl xchg jae roll ficomp push ficompl clc push cmpb fcoml dec sub lock mov pusha mov sti and in cld push mov or sbb rcrl jne fs add fsubr sarl movsl add in jl fsubr add movsb pop mov mov add jne adc add aam push test mov cs loopne jb rcr sub or add lock in lds mov push mov mov hlt add int3 dec xchg andb orb cmpps inc add jg mov xchg mov and out ds and rorb push xchg xchg sub cmp cmpsl jbe adc scas scas add cmp hlt pop xor or cmc push add xor or pop scas dec add fidivr test mov cmp mov push cmp add mov jne fnop js dec sub das call dec icebp sbb loopne xorb or mov mov cli jno adc addb jp sar add mov push nop gs inc sbb jns shrl sub mov addb fisttpll fiadd inc (bad) pop loope mov nop or cmp mov icebp add push pop cmp mov mov fcoml mov add stc cs cmp int push je sbb lods mov fisubr addl dec adc pop test add shlb jno sbb mov out pusha cmp add adc fcomp adc (bad) pop pushf add mov arpl push and (bad) mov fwait sbb add repz int3 mov outsb fmull test add sub xchg (bad) adc mov and push jmp mov cld loop,pt popa pop not xor push call aaa push xchg and es loop sarb mov sbb cmp xor jge shll loop (bad) and and and add sbb jp add jno movsl fistpl (bad) repnz lock add adc inc add cld push cs jne mov (bad) pop inc add sbb aas push pop adc xor dec sbb xor gs popf rcrb push add inc (bad) cli mov fist test push test and pop cmc add out call inc fwait inc test ds xor daa adc xor int3 cmp lahf push mov fildl push movsl xor inc sarb mov add aam fbstp xchg idiv test push fmull ds into pop iret xchg push pop push sbb lahf or adc roll fs movl rclb hlt sub or out call fldcw xor push push add (bad) and sub dec ret and mov lcall lret jno pop jae sti pop jl loopne lods rorb cmc jp mov (bad) jb lds push pop mov in fildl xchg (bad) repz push inc or jns clc mov mov push and xchg (bad) leave out sbb xor dec add and repnz xchg and dec sbb and xorb sbb dec test fs mov add and add aad dec pop lds add adc imul dec in add sbb mov and add pop mov add mov fnstenv add inc adc je xchg hlt pop pslld and add jecxz mov and nop popf dec ds mov dec push cmpsb bound cmp cli jo pop mov xchg and add lret sbb mov add mov clc or in inc xor pop ds repnz adc dec cltd add ds pop mov and mov pop mov mov mov sbb dec mov bound shll sbb nop cmovae (bad) imull sub mov nop addl lods push nop pop lds add loop inc mov std xor test lds sbb or jl out jmp xor test shl inc pop ljmp push lret rol fsubs lcall pop jo add cwtl scas lock pop mov subb stos pop add push lea nop dec xchg outsb repnz push (bad) call rcrb cltd stos fdivs xorb xor movsb inc xchg mov aam jb rcrl (bad) push nop out js jecxz cmpsb inc add jp call cmpb movsl add xchg stos or (bad) roll sbb adc inc sbbl and int3 jl add fnstsw xchg mov (bad) add xchg sahf sub bound adc pop mov mov cs nop or mov lea or cmpsl sub mov sbb ss add mov mov cmpsb and adc push (bad) xor scas cld lahf fcmove loop jg dec mov jno sub and nop xor es mov sbb dec lods test push (bad) aam addl sbb mov int3 add mov jne push mov inc mov test push mov insl stc or scas xchg test flds jo lret cwtl push pop lea sahf cmp fiaddl movsl lcall fwait ret add xchg hlt sbb les mov add addr16 outsl out mov shll ret dec lods mov add xor (bad) adc jmp movsb inc mov test mov xchg (bad) (bad) into mov add lods xchg out int3 push push pusha cmp sub jmp (bad) mov xchg fs and and test cwtl aad sub mov movl shrb verw push bound fwait lret pusha nop mov xor iret fimull in mov jl or adc sub sti pop add dec mov dec js adc fcoml pop dec leave testl fld adc dec rolb subl fbld scas cmp sbb jecxz fsubl sbb out test repnz adc xor xchg sub xor push pop jo repz les cli add jns cli and test scas in or shr adc fs inc xchg or and mov sub lock pushf (bad) pop sbb pushf mov cmpb inc mov jbe test fldenv jl clc add test xchg in add (bad) pop lea xchg push cwtl faddl pusha mov cld inc clc out (bad) xor inc adc rolb mov int and out add in dec inc sub adc inc and add mov movsb out lret sbb in int3 (bad) in add dec mov mov addr16 in sbb adc xor in jmp shrb hlt push sbb loop jp into or pop iret sbb inc lods xlat lds add pushf stos pop ret mov mov and shlb add mov add push push inc popf nop or pusha addl cltd out adc sti or or cmp and sti (bad) (bad) rcl add pop nop or mov test sub out mov dec (bad) clc inc mov adcl or cmp cs jl aad inc push or adc or les mov clc das sub int cmp xor dec test inc fidiv scas xor out fdivs out adc and call nop fs mov dec pop lds cld sbb subl push adc add rclb adc les mov lret lea add mov fdivrl cmp gs cmpsb js xlat clc inc cld or cmp or add sub add lret and and bound loope cwtl stos nop mov flds leave jb addb adc mov push pushf pop lock mov push leave repnz jmp nop mov mov xor popf mov add movsl mov addl dec sbb fisubl inc and pop mov aas add cmpsl enter xchg add or pop mov inc add sbb data16 add lea add xchg nop (bad) fisttp or scas mov sbb sarb jl data16 mov js adc push pop loopne push scas mov (bad) js cli and mov mov push fs add pop aam or add jmp insb pop xor fmull or (bad) jb add sbb test pop mov add inc and pop (bad) xchg orb ficoml sbb mov dec adc cmp add dec ds xor icebp sbb jo dec nop add mov rcll daa inc lock sub nop test and push push imul es lock (bad) or sarb add jmp cmp repnz sbb pushf cmpsl pop add xchg xor and scas jb shrb stos pop mov fmull and add clc arpl xor rcrb add push pusha movsb inc and xchg orb push inc (bad) (bad) lock xor stos pop nop xlat and pusha xchg inc cmpb xchg loop subl sub ret fmull xchg rclb mov mov or shl insb add cmp xchg pop mov xchg and mov inc popa push sub inc incl mov xchg ljmp cmpsl cmc iret loopne or cs lret movl fdivs adc sub int sub push mulb lock sub movsl inc arpl nop adc cmp push pusha fwait mov pop ja es mov cld inc and adc xchg pushf scas pop and (bad) pop add scas out and or add xor pop enter fildll dec fwait adc lock add fisubl sub mov aad scas inc and mov test xor repnz test shr xchg flds jnp aad pop aad adc pop sbb mov cmp and xchg insb jmp xchg incb cs test push inc adcb test (bad) mov pop addl aam pop scas pop imulb jg add sub enter add les scas lds rorb push aaa cld lock mov push or jg xor push fmuls lcall imul int3 (bad) jle scas fisubr add jo sbb add cltd inc pushf and push adc ret add xor pop xchg push hlt int3 les inc inc popf nop inc (bad) movsb lds scas add nop cmpsb push fdivs fs sbb (bad) mov movsl test add mov and jo fiaddl xchg jns cld xchg out fsubrl popa xor fucom xlat call test cmpsl or dec call loopne je or loope lahf icebp ss push and cmp adc or mov mov movsb loop cmp pop inc repnz inc xchg add push mov mov pushf and dec movl shlb lods aas dec push rolb scas jp xchg fs inc data16 and pop xchg and and xor xor adc das push shr mov popa xchg adc push fmull inc cmpsb xor (bad) shlb out and cwtl add pushl test add sub sbb fistpll push out add dec sub test insb pop mov push mov leave push cmp daa jmp cmp pop and bound pop push adc and sbb ja test in cmp xchg and leave xchg sbb sub push iret aam roll mov mov lods mov gs movsl pop adc mov ljmp hlt sahf lock sub jl mov (bad) repz jge mov fist es mov or cmpsl add test add xor push sub xor in int3 leave mov insb add mov inc stc jns (bad) loopne fmuls ret in mov fs add les lods js sahf or inc rclb jb nop add xorl dec push call add jecxz sbb sbb add inc add adc gs sbb push sbb mov cmp dec sub lods (bad) mov pop scas lods addl xadd (bad) sub mov hlt inc nop cmp add clc test sub bound clc inc dec push repz adc pop mov test and int3 mov popf es das sbb inc inc pop aad insb fs rep add jle xor jo pusha loop adc jo sub push inc fild cli les pop adc adc xchg push cmp ljmp cmpsb les or xchg sti xchg adc sbb pop call dec mov cmp (bad) push adc jle and inc sub mov js mov or or inc push clc mov mov mov pusha mov hlt pop xchg (bad) insb mov xchg xor jecxz rclb cmpsl inc add dec pop ss bound ror ja mov add sub (bad) cmp ss add mov push gs out dec push faddl mov sahf lret fsubs mov shrb add cld and pop add loope and or cld xchg fsubrl pavgb enter and fs sbb test sahf movsb adc js fisub adc outsl cmp sub sbb pusha inc xchg pop or leave (bad) ret pusha test test push rolb and ja xchg sbb or ret add mov mov mov lret repz add sub jb invd xor or add out cs cwtl pop les pop and and leave add sub adc cwtl movsb mov add add out pop mov mov scas jg call lods scas fadd or or scas and ljmp cmp jno fadd fimull dec and mov leave push movsl outsl adc and xchg mov and mov or xor int3 pop push cld pop add add mov and xor lret movsl ss pop jno add jle repnz iret dec add ljmp not int3 inc (bad) aam fdivrs add jecxz clc daa mov (bad) mov or lods mov or xchg mov imul mov mov inc fs imul inc add js (bad) les or fildl call cmc negb cli pop mov les mov xorl or (bad) and adc lret lret and mov mov push (bad) sub cwtl hlt xorb icebp fistpll add sub rclb xchg inc mov push sbb sbb aaa shll (bad) adc dec shrb inc or mov mov cmc les fmull lods dec jns cld pusha add ds inc enter lods (bad) xor jmp xor push sbb adc lods pop imul dec xor cmp mov std xchg out dec mov sub add lea lcall and stos mov int clc arpl imul hlt mov add mov xchg inc scas subl push pop aaa xchg sti cwtl pop push pop dec fdivrs sbb inc dec dec pushf jl cltd mov or cwtl mov dec mov sub leave mov add and mov or xchg add ficoml add in xchg aam mov clc lcall mov jl in pop or mov int3 test movsb cmp cs cmp xchg lock mov add pop std fldt add cmp scas mov in lock orl insb mov cmp mov mov mov sbb cli and in dec or mov add xchg (bad) aam inc mov (bad) add mov (bad) mov faddl adcb dec cs mov adc data16 mov cvttps2pi rolb pop jo movl js pcmpgtb jno pusha cltd rclb mov mov jecxz cmpsl jo pop and push or mov pushf mov test shl test xchg jge into jl,pt mov mov pop add inc sbb or fimull stos rcrb movsl das dec add jg add in mov lods add pop dec inc inc (bad) je ret mov sbb ss and sub lock fcoml (bad) ljmp pop mov je dec adc mov in pusha pushf mov (bad) ja (bad) pop sbb xchg das subb jp (bad) and ljmp mov call pop push addr16 jo jl and pop xchg lock cld inc adc or xor jbe in pushf mov or sub add pushf and nop lea pusha xor push push outsb or and lret cmp test pop insl sub dec adc decl sbb nop aas sub add aaa scas test mov add and xchg clc mov add push out loop mov and int3 xchg sub nopl mov mov jne xor xchg paddusw nop sbb repz adc test rorl inc cmovs lahf es push mov jbe add (bad) push add rcr movsb push dec lcall mov sub jmp lds add cmp pop sbb inc xor push cmpsb jo add or add dec or rcll out subb (bad) cli daa push pop or xchg cld (bad) and imul pop je clc andb orl lcall sub les fsubrl push mov cltd addb (bad) push testb mov pop add pusha mov pop sub imul cwtl push push push frstor xor nop sub xchg jl add aas rcl faddl scas ljmp mov jmp jle movsb mov or add scas inc add stc rcrb (bad) jbe jo xchg sbb add cmp xchg leave dec inc mov fsubr pop sub push clc jno hlt mov push push (bad) dec jmp (bad) and or mov xchg sbb inc lods sbbl pop lret pop sbb dec pop mov das faddl xor sub and or and add repz enter mov add and (bad) nop sbb and xchg mov cmp dec sbb xor sub rcll mov int cld add lods loope test or xor mov das test sub push mov mov and imull lahf or ds (bad) pusha out xchg sub loope add dec fnop (bad) adc or (bad) fdivrs cmpsl es mov dec andb ss dec mov insb inc lcall xor int3 cwtl iret orl stc mov sub sub (bad) mov sahf lcall cmp cmpsb dec pop sbb mov add nop js loope push fstl hlt gs push lock or jmp dec rcl adc push adc or or or or mov in aaa add dec loope sub js nop xor sub outsb push not and xchg (bad) or push scas lods (bad) fildl push add cli cmp aaa mov pusha xor call adcl aas into adc orl fwait jge or ja nop sub pop fisubl loop dec nop addb sbb andb inc rolb (bad) jo icebp add arpl in push mov cmp jecxz jmp dec enter imul scas lock ret fisttp or roll xor pusha (bad) repz or mov push push jge pushf xchg sarb pop xchg movsb cmp int3 jb sub lahf xor out sarb popf loope sbbb data16 add xor out loop inc or push jo mov jo popa fcompl lcall jmp sub cmp mov lods jns add jnp jmp add pop or xor mov add push push adc ds packssdw aaa add fstp movsl sub imul aam arpl sbb or xor sbb sub jecxz jne add aam ficompl mov push or mov mov mov icebp xor xor jl jns xor xchg mov cmp sarb popw pop mov inc adc or data16 and test xor inc repz xor mov pushf add mov sarl push fbstp es adc push sahf add ja ucomisd loope add call sbb (bad) jge bound jne std xchg rorb mov xchg and loopne or popf xlat fidivrl or nop clc int nop loop add xchg sub orl sbb iret xchg inc inc aam ror loopne lock cli xor orl xchg cld mov add andb cwtl mov scas add cmp add adc mov jge ret sahf and xor and dec mov in inc popf push xchg mov dec test push ret cmp or lret (bad) stos xlat lcall push mov adc add (bad) fisttpll mov cmp cmpsl pusha pusha (bad) mov add cld (bad) rcrb pop mov push and mov pop test xchg jae subb mov add ret ret sbb push sub int3 lock dec dec mov inc add addl xchg lds adc cmp rclb jp rolb push mov jns and and pop and cmp dec xchg push sub dec scas in inc lods stos scas fcoml pusha jb sbb clc rolb mov cltd push adc xchg inc xchg and jns ja dec loop push popa mov fwait in and inc dec stc push xchg enter mov inc popa lea sbb push cmp pop lret add stos out and dec sub add push movsl les add pcmpeqb fidivr fadds dec push fisub mov in mov mov xor fidivr pop dec adcb daa mov mov mov jno mov mov jnp aam and or test bound mov fwait rolb jmp push pusha out mov movsl js sbb sub pushf movsb pop sub dec cmp xor gs in shlb sarl mov lea das adc pop loopne pop sarb pop add sub pop rorb dec pop pushf daa inc sub push iret jnp sub mov (bad) lock xor push push add loope sub cmp xchg push jmp mov pusha enter sbb adc and jb ds sub or mov in pop mov xchg insl pop les scas push and add mov bnd and popf push je dec add sub jge mov cli subb bnd test xchg aas dec push sar std les jb push mov mov pop and jno ret xchg xchg cmp adc jo xchg rorb inc lcall ret mov stos out ljmp dec and push mov xor cmc pop (bad) mov add test inc mov sub mov adc adc inc or xchg scas es add and jb sub xchg sbb push xor xor lahf mov je js aas xchg lods xchg mov xchg nop (bad) or or add aaa dec xchg add xor rcrb cs jns lds xchg sub fwait xorl pop cmp push sub ja js mov xor bound ljmp lea movsb or int3 test das faddl jbe sbb add cltd inc push bound inc jnp sub lds lcall fnstenv or lock inc int3 or imul imul xor mov inc pushf mov mov dec cmp rcrb pop mov push les dec xchg enter fsub mov lahf dec aas and pop dec cmp js adc mov in push inc sbb es push push aam jg leave adc enter jo dec mov mov dec jb mov repnz mov add cmp fdivl vmovups xchg adc adc jmp dec lcall nop shlb mov mov mov xchg call nop sub in dec adc add adc lahf mov add sbb call shlb gs loopne sub (bad) or fdivrl lret shlb pop mov push push xor sub arpl jg (bad) movsb cli rep xor shrl lock es jmp test cmp push mov adc xor repnz cld mov sarl xor jge stos sbb jae adcb inc daa push in mov mov cltd addl mov aam add mov dec or add call push mov sub test notb cmp dec inc aas push je mov or lea bound lahf stc adc test pop xchg loopne adc sti test and push sub fiaddl js add dec dec jnp or push mov add bound int3 (bad) add in mov push mov adcb mov es xchg jl add lods in cwtl test paddw lods sbb movups sub scas js add rol loopne cmp xchg mov sub xchg mov cmp add loopne jg add ds mov sahf hlt jnp fisttpll mov jbe or adc fnstcw loop loope sub imul sbbl mov nop push add mov int3 mov push mov pusha sub aam rcrb inc xor imul or push jno imul in enter or xchg icebp out popf ret pop mov lret jecxz les sbb lcall adc sub hlt pop adc aas mov fwait stos mov jmp inc add or in out int3 das inc cmpsl mov sub test nop enter js xchg sbb mov popf sarb pusha xor mov push push int3 sub adc fsubs or pop scas xor aam jecxz xchg (bad) out adc inc mov lahf scas aaa ds test test std sbb cwtl or and stos sub sbb push iret sub cmp mov lods add ret adc or or das cltd stos sub lds jne or loop sbb scas dec icebp lock mov or pop cmpsb or add loopne or dec adc adc scas mov or mov and pushf addr16 in nop mov or and mov push sub or sbb cmp test dec cmp dec mov push and dec push xchg push and push push mov pop and dec pop and xchg pop sub test xor dec add orl mov inc jb xor (bad) (bad) outsb in faddl xor inc inc fidiv icebp push loopne inc bound inc fsubr cmpxchg (bad) outsb int3 inc lcall add sti and xor cltd adc xchg cmp push xchg mov or wbinvd adc cmp mov orl xchg (bad) jl (bad) or inc (bad) cmp shrl dec jg add jmp add ljmp mov or movsb xchg and nop out add loop push enter inc movb outsl add mov aam pop out sahf add not bound out mov imul sub (bad) cli fisub je add cmc iret addr16 ss fdivs cmp outsb sti or arpl xor in std jecxz repz xor test insb cs sbb addr16 add int cmpb jmp loopne lock clc add ret js (bad) xor add sub outsl or rclb add fisubr repz iret jae std fcmovbe or push add rorl scas inc add test sbb push sub mov xchg adc add xlat inc cwtl ljmp mov mov xchg andb and sub cmc ret mov and sbb test fild cld (bad) push adc fisub push inc jbe xor mov dec adc sbb adc (bad) and or xchg movsl mov movb push or push and sahf icebp clc js imul xchg push lret mov cmp inc jg sbb adc into mov push push xor jno sbb pop adc sub scas jnp mov sub in mov xor xchg sub mov aaa sub inc add nop sbb and out loopne xchg mov sub xor les or or mov push stc mov outsl sub sbb sub (bad) add nop dec pushf (bad) loope adc lods xor xor das lea xor xor add subb pop dec pop or push or mov xchg mov sahf adcb push add pop and ja dec add and add adc insl or cltd (bad) mov cli (bad) (bad) hlt movsb xor sub cmp push xchg or (bad) lea mov pop push hlt pop push lods test mov mov scas sub adc mov rolb aam sbb xchg adc xchg lock adc mov in fs dec sahf or add mov notb mov or enter adc invd mov pop xchg xor pop movsb (bad) in adc xchg cmp clc icebp fs xchg fisttpll fwait xor sbb comiss mov pop add in sub stc xchg in (bad) movsb mov mov add mov cmp or invd leave inc xchg xor decl dec mov sbb add mov mov sbb push pop mov adc dec adc cwtl xor xchg (bad) sbb das push sbb icebp dec mov loope or push test mov icebp mov jl (bad) xor out lea rcrb ds add xor in add mov pusha nop mov sbb stc (bad) dec pop lods pop jge mov or push xchg cwtl mov test out add wrmsr and inc (bad) loopne pop pop jecxz divb cmc cmp inc shl orb call test push insl rolb pop cwtl and jo cmc mov (bad) push ret mov push insl jo cvtdq2ps sbb lods add or mov shr leave ds xchg in mov jo sub rcrl int3 sub jp bound rolb cmovno mov insl lcall imul ret or pop insl push adc add test lahf add xchg les xor adc stos mov push mov fildll mov cmp xchg stos mov cs dec in add js xlat dec jl ds xor inc push jnp sbb shlb insl adc mov ja cltd leave call jecxz cmc cld or xor sub add in sub cmp push (bad) or adc setae push (bad) fsubs imul sub inc mov cmp in cwtl xchg and nop xor pop push add fiadd mov dec mov outsb xchg in push xor rcll add stc mov push cmpsb add (bad) add ja or int push (bad) fdivrs inc outsb push inc xchg test pop sbb inc and xlat and cwtl adc jno pop inc enter push jmp xor imul and jmp in dec cwtl push xchg les shll das xor xor push es cmc or cwtl adc ljmp mov (bad) mov mov shrb ret pop add test call test sbb xchg hlt mov add cmc cld add aam or mov jo add sub out push iret push (bad) add and hlt fistl outsl aam mov sub sbb rol adcl xchg dec pushf add inc addl push adc inc in in (bad) in inc or enter lock xor sub sbb jge push or mov sbb pop inc in (bad) ljmp dec test or insl sbb mov notl test pop push xchg inc test movsb mov in add sub hlt add int3 scas sbb jp jl enter notb aam xchg or loopne ljmp push lret jne (bad) clc mov jo adc nop inc dec or repz in pop insb or push rolb and test popa fisttp lret sub mov add arpl jno sbb mov call push push test cs or call add pop aam loopne mov sti add in dec fwait cmpsb dec add lock insl stc lret push xchg push les jnp xchg sbb mov mov fisttp xor insl sbb pop (bad) xor inc (bad) fiadd mov pop movsb push xlat xchg add cmpsb add cmc lds xchg cmp stc jb movsb add fild jg ljmp in out ja push cli insl cmpsb je add (bad) loopne lods test inc andl or movsl in in dec mov add lcall test jmp aas in add or (bad) insl xlat mov or test out pop jbe out mov add xchg inc ret and scas push pusha mov mov pop mov mov ljmp mov xor add jbe jo test fisubl pop repz negl test cwtl add addl cmp pop mov es imul mov loopne fsubrs adc xor test std mov mov xchg mov dec mov add mov dec imul nop add xchg popa stos mov add push aad js add sub clc xchg mov add iret loope pop insl (bad) mov xor ret aaa add call in loope jo in add aas popa jecxz cmp inc jge sbb push inc cwtl pop cmp xor mov xlat or (bad) dec cld pusha mov daa push (bad) fidiv fs js push xorb (bad) xchg aam add clc (bad) popa popf pop out movnti pusha insl ror and adc cmp cmpsl xor fcoml cmp cmp jmp dec mov inc clc inc add jecxz in jge or push add pop test mov xchg call imull (bad) outsb dec shll jo cld enter in xor sub mov les test mov or sbb pop nop jle sahf loope inc jp in lds cmp imul jle push xchg imul add cld inc adc push add mov sub inc xor call cld ret cwtl add mov cltd aam push xchg test lods add fcoml rcl push or xor push mov cmp add push push add push inc mov and pop xchg pop sub push loopne and lock add xchg cmp mov pop jmp push mov cwtl sbb jns sub dec sub sbb dec add add rcrl mov mov inc and cld in lret lret packsswb inc cltd dec add fucomi jmp push adc je add pusha imul pop movsl cmp stc push and inc jl add or bt or loopne imul cs dec or push mov pop cmpsb xor call mov and out je mov out enter pop (bad) mov and cmp sbb dec sub insl fbld inc out and or in fdiv ucomiss aas call rorl mov ret or mov sahf pop xchg nop mov xor push ds sub insb inc mov enter test popf hlt js xor cli adc mov jnp pop aaa jmp inc js movsb pop mov pop mov lods shlb xchg push jmp in faddl je mov lcall andl mov jge push dec dec add repz add daa add and inc sub add pop icebp ret cmp adc xor add add (bad) fdiv pop dec lods xor (bad) mov or (bad) lock es push neg mov test adc (bad) rolb fsubp es fs jge pop subl or add outsb pop aam mov pop int3 add jae mov rcr xchg mov das fild popl arpl mov push push pusha rcll mov mov jne aas fidiv cld push mov call fldl2t add call or arpl or je dec (bad) outsb es cwtl xchg push sub inc xchg push dec or in call fildl dec in sar negb js adcb pusha test lods jg lahf mov and add (bad) (bad) ficoml jle add pop jl loopne dec addps add mov fisttpll xor adc push (bad) jg and and push push jmp pusha insl cmp sbb or xor push les dec add aam xorb adcl pop mov xor stc xchg cld insl xor cli push adc dec cld add icebp push adc mov cmp mov fsubrl pop sbb lea loop loopne jns adc inc jl lock push imul add inc jecxz adc movsb push js pushf sbb call add dec push inc sbb outsl std sub push pop mov incl in out or insl mov sbb or jns pop nop aam xchg inc ja (bad) adc loopne ret add sbb jne push cmp mov ror cmp mov dec jl push inc add and dec add push and push sbb pusha mov xchg mov and xchg pop shr jmp or push push mov mov inc (bad) dec xchg sub sarb xor dec cmp (bad) fimul movsb (bad) dec rcr fwait mov jb or inc mov ret mov lds fucomi int std mov mov push test call add stc push aaa pop jle pop inc mov xchg dec les lret js push addr16 xchg sub insl inc out test fcomps jle xor xchg shrb add fs push imul mov jle jb stc es pop or pushf push mov adc cs dec mov push test xor pop (bad) jb daa add sub dec cmp push sbb imul and mov inc cmp push push iret fsts pop insl and loopne push inc dec movsb jno ja sub clc add outsl loope sub xchg out push inc ret aad loopne push mov dec mov sarl inc inc shll cmpl and add pop (bad) jno sub rorl in add inc ja jl fld imul mov lods call (bad) ja hlt cmpl ss jae enter (bad) push bound (bad) xchg dec pop pusha xor inc pop rol outsl andb call and jbe (bad) in sub and movups loope fidivr push js mov inc pusha out cmc nop fsubs or pop or sbbb mov inc icebp cmp rcrb mov out gs out mov in lods ret mov mov jo lret scas icebp pop add int (bad) add pop xchg in inc popf dec add test dec insb mov cld aaa mulb ss pusha es add mov gs pusha loop mov das xchg add push xor sbb inc pop dec out mov jno popa add hlt xchg xchg jle push add mov repnz or stos push enter sub and lock sub mov test and je push lock add in mov pop sbb rolb mov sarb jae loopne nop (bad) cmp sub and dec add mov pop lea incl pusha ret push sbb adc pusha ret in mov imul fidiv inc arpl (bad) mov add js into loope mov mov daa fdivrs popf int3 lea xchg xorl pop xchg sti add mov dec pop out add test add shrl xchg out (bad) dec cmp mov repnz loope add lret ret pop jno and pop add loop ds add sbb rolb xchg cmp sub fwait mov ficompl pmaddwd int test add call daa pushf add xlat sub add xorl pop and and push jl xor push rol mov add je inc sub dec xchg stos sti xor aam iret cld lret call push inc inc cmpsl add pop dec lock inc sbb data16 sbb addl dec jae aas jp popf sub lods repnz into sbb cmp dec orb or data16 adc cli les dec jo fcomps and jae cmpsb add mov lcall ds add insb or insl adc inc adc add jns mov add ds imul mov dec add add add xor xchg fdivr and add inc icebp xlat int jecxz ljmp (bad) mov les pop dec andl mov insb mov xchg imul cmpsl orb pop pusha inc mov in xchg add mov clc scas and add xchg push shlb jmp popa nop outsb repz test mov scas and mov cmpsl fisubrl and mov inc push js add mov pop shlb sbb (bad) lods push add add mov outsl popf (bad) iret popa sbb cwtl add ljmp adc dec or mov (bad) or loope push xchg repz xor add jb dec loop adcl pop shl (bad) fiadd test je and xor xlat (bad) repz add sub xor add pusha rcll outsb mov jge add movsb or add lods sbb rorl jle (bad) xor jg pop rorb jle sahf jb mov xor sub sbb popf or inc mov rclb push inc rorb insb in test and xor jg pusha mov popa pop ds int jl sub ds cmp adc adc push xchg stos scas rclb paddusw pop sbb and sbb pop stos ds add mov fmulp add pop pusha rolb loopne mov adc xor pop outsb ja xor push lret sub roll insl sub mov out stos test push (bad) leave dec add imul xor (bad) cmpsb lods test mov sub stos bound add push jle and addr16 and xor popa xor push icebp lea cmp jge sbb xor sti fs dec pop inc mov add sahf jne add test into add cmovo xor mov cmp arpl mov in or mov add mov (bad) and mov xchg mov push cwtl cld add pop call sbb xor nop pop push cmp mov scas mov add cmp sbb aad pusha xchg pop mov mov pusha bound xor or cmp xchg popf sbb inc and add push out pop mov mov add (bad) jae cmp cli adc gs imul push mov inc cmp cmp inc xor jb dec pop ja,pn inc xor ficompl or cli sub mov ret pop pusha cmp mov daa cmp rcr lcall aas adc mov mov outsb adc add es or les pop lods popf rcrb xchg add dec andb jno or pop scas rolb (bad) or cmpl ret or lcall xor and xchg bound int and xor xchg aaa mov mov and sbb adc push pop in add mov outsb push inc pop test xor pop mov add dec sub into sqrtps and iret test ds sub xor ljmp in lock mov xchg mov enter mov rcrl cltd xor test aad add xchg insl ss pop push xchg lahf scas and mov pushf pop dec cmc xor xchg (bad) cli fs add inc add jnp (bad) pop cli pop add mov xchg lcall fs jno (bad) fnstcw mov adc adc pop xor movsb movsb fnop das sbb push jno mov lahf add sahf ret add movq jl jo repz inc sarb ds push (bad) ficompl frstor (bad) jnp test add sub jecxz sahf mov sub add test mov or push adc add push leave add pop les loopne movsb mov inc add adc mov outsl add js pop loopne lret pop movsl adc inc orl adc clc add les push adc in pop gs adc into cmp add aad xchg cld inc mov push les xchg fwait mov add pusha adc (bad) lods scas xlat mov adc add pop push mov jo add negb push (bad) and hlt xor sbb sahf add loope outsb mov inc ret inc pop xor mov pop add rol lahf mov push pop fidivl mov pop fnstenv mov dec adc aas inc lret add loop mov (bad) shrb clc js and mov pop test mov sbb xor lods mov adc mov mov lret enter fisubr add lret lods mov mov (bad) jne pop xchg cwtl pop add test jno push jbe cmp or outsb add pusha push cmpsl mov dec mov lods jb stos mov pushl test lret jae push sbb stos push jl movsb mov sbb mov xlat aam inc in leave and pop sbb pusha mov mov mov mov adc add fcompl outsl sub and (bad) (bad) or mov stc xchg push push pop rolb mov ret mov sbb and mov cmp add mov pop (bad) xor sbb mov movsb idivb push add xchg mov int movsl add clc outsl imul rolb push test add dec sbb inc adc pop adc add push or movsb add mov jno add gs pop mov notb push adc pop or inc sbb adc (bad) dec adc pop pop push push call push pop sbbl sbb push adc inc jecxz dec push lods les push pop push add adc loopne rolb pop pop pop adc push inc push push push add clc jb adc mov and inc repnz mov add push inc xor and inc sbb pop dec sbb loope sbb jl push sub xchg push inc xor jo push push adc inc adc xor add dec pop push icebp push push mov jne dec adc add je (bad) call dec push lods adc (bad) and inc and xlat gs add movsb dec sbb nop pop enter int dec and repz dec shll sbb sub mov and movb add dec push push loope sbb pop push call clc test (bad) mov loop jl push in push or test pop mov push inc fnop lods (bad) mov sbb (bad) push sbb cmp pop sub xorb push pop mov adc fwait movsb pusha xchg adc or pop movsb push jmp pop dec lock dec push inc pop and add sbb inc push hlt outsl dec adc rcll and add cwtl adc repz or inc adc clc rol lock xor add fldl add clc es pop adcl popa pop imul or pop sbb clc jnp in repz mov adc loop dec cmp push fisubr popl sub add (bad) mov jg sbb adcb jecxz mov cmp pop push jge fdivs inc cld xor xlat dec mov sbb push scas addb mov inc lds mov adc mov sbb add shlb xor pop add and lahf mov mov mov rclb adc mov push mov xlat or cwtl add gs dec inc mov pushf lret int3 shr insb jne popa cwtl push sbb mov fidivl xchg and icebp test dec mov shl jno add fidivrl mov in gs fdivrl (bad) mov cwtl xchg mov push test leave stc add sbb jb loop xor sbb add testl pushf ss push push cmp lcall xor inc dec aas mov rorl test adc and cld orb mov test add fdivs add jge clc cmp lods adc test fmul sbb mov dec dec mov xchg xor call pmuludq test mov push lods popa ficoml orb xor and movsl rorb lods fistl add in jge and (bad) adc push jo lds pop xor and mov (bad) pop shrb mov ds lds and pushf xor adc cld add lss hlt add pushf push mov je and (bad) jmp scas fs ror mov aas nop add data16 xor inc or in mov flds mov or pop ljmp test add mov bound je hlt dec mov xchg andl add sbb mov mov data16 jne out aas add inc lock jp and bound xor add lcall xchg pop fs int ds cmp push pusha les push or inc hlt push sbb es pusha enter sbb or or dec sbb mov jp adc arpl testl mov and mov test dec cmpsb push cmp pop sbb fistpll push add xlat mov (bad) je push mov stos inc repnz add testb pop mov out xlat xor jo ljmp or popf add mov cmp rclb hlt roll mov cmpsb jge mov pop push rcll mov enter fmull lcall popl cltd outsb xchg push cwtl repz cmp adc lcall arpl pop push dec mov and les imul jmp push adc int3 push scas lods pusha xchg stc and ret jbe cmp cmpsb push sbb leave dec mov xchg cmp dec aaa add dec adc jge cmpl adc mov or mov or cmp xchg push mov dec test (bad) add mov fisttpl js push fmull out lahf add or shll int3 sbb lahf pop nop ja xor cmpsl sbb test push aaa xor dec popa bound inc inc adc ds in enter jno fnstcw push add ret stos int push inc pop add insb orl push inc sbb int3 add adc push or mov or add fisubrl lock fwait add push insb adc xlat bound push or pop leave xor js push xor pusha test inc test add dec es xchg and out jg xor movsl pop cld lahf test add dec paddsw mov pushf xor xor xor push stos mov outsl shll add orl adc (bad) mov nop int3 xchg adc adc add jg dec or imul out xchg (bad) fidivl xchg stos fdiv or negl test sbb push insb pop push sbb xor movsb pushf sub fimul add hlt xlat repz inc add inc mov sub les sar lods push clc xchg subl push cmp inc test leave jb test int jecxz cmp mov cmp and out inc dec xchg add inc xor push loop popf mov imul jno mov push mov test hlt sar sbb sbb push loopne loope push push lock loop int3 repz add (bad) ljmp les add sbbl repnz test adc test dec pop adc mov and in mov push sbb cmp or aas and xchg mov add mov dec pop push xchg mov adc push nop and mov mov sub jmp int3 in mov mov mov sub xchg call cmc mov jbe add push ss aas add outsb lahf sub push dec mov (bad) lock movsb xor lcall add scas fs gs or add pop lret jnp add fnstsw (bad) fiaddl in fcomps pop xor lods or aas mov dec pushf call ja xor mov add scas jp dec mov jo shrb dec add aaa ret inc cwtl jmp sbb cmpsl pusha lahf les in xchg nop cmp mov in inc xchg mov adc or in xchg faddl repnz add cld fiadd popa ljmp cmpsl ss mov imul aaa dec lods dec rorb in xchg and add sbb xorl out or andl pop add push data16 bswap ret in push cmp mov pushf aaa rorb cmp nop mov pop sbb jg cwtl sti fisubl adc sbb (bad) xor sarb gs aad add mov aam mov mov and inc int3 add push in inc frstor cmpsl call jns dec mov push rclb data16 mov cmpsb movsb daa outsl les xlat bound or and xor jae pop pop inc add lock in mov out jg lahf and cli xchg add adc push add pop repnz test jns xchg rol cmp in cmp daa push xchg cmp add aam mov sbb dec xor add pushf lock shlb cwtl cmp imull pop push loop mov sub test hlt test xor mov arpl fwait dec cmc sti jg nop movsl add std pushf rolb add scas movsl mov mov ret test sbbl or adc mov enter cs push mov inc push bound nop pushf daa cmpsb popa add outsb pop xor adc pushf push pusha or or adc lods pop in shr repnz push xor mov shll adc clc cld xchg je inc clc mov add sbb es inc mov xor imull add mov xlat sub adc lods fstl or xlat xor lea and call mov dec mov sbb xor cmc lods in and adcb push insb bound pop inc xor scas add call inc in ja fcmovu mov xchg push arpl rorb cmp jg lock popf (bad) xor sub int3 movsb dec or rolb add lods and out mov push dec insb lea test mov rcrb lock cli shl jb pushf dec cltd or pusha aas cmp dec dec hlt adc imul test add jl inc clc lea xchg xorb sbbb into or sub hlt xlat shrb rorb and cmp inc xchg push jecxz int3 insb movsb test mov cwtl add imul mov xchg repz and lret arpl mov cs jl fdivrl fimull xchg xor addr16 jle push pop adc push sbb push adcb loopne jno sbb inc xorb outsl sbbl or je jne push rep test dec sub adc into and loopne pushf mov sbb shlb cmp push fidivl test mov mov xchg or outsl cmpb mov add fmul popf sub insb lea adc mov mov xlat sub dec lea out xor call incb jb jne pusha int3 mov adc add faddl pusha cmp aam fimull mov sbb popf (bad) mov push xor adcb mov fistpl ret dec sbb pushf mov test jl push push lahf inc mov sub cmp or sbb inc cs (bad) (bad) inc iret jmp or dec sbb cld (bad) cli cmp imul mov (bad) push or mov das outsb xor shl or js shrb add xlat and xchg adc (bad) dec loopne test gs jae popa push add xchg adc mov les mov or sbb mov sub cmp xor mov cmp sbb sub mov call sbbl cwtl xor jns ss fs mov ss cmp bound sar xchg mov pop and ljmp add inc repz dec sbb stos les hlt dec cmp jmp push xlat xchg and add cmp jae clc movsl pushf pop icebp cmp push outsl subb pusha dec jno or lret add jb pop dec popf (bad) cs movsb mov cmc push cwtl or loopne dec leave jo rcrb ret lahf repz les mov pop jbe dec cmp call sub mov js js cmp outsb nop mov push sarl or lods or outsb mov popa scas enter cwtl xor test mov xchg push cltd xor inc repnz jge rcrl jo cmp aad and adc mov xchg adc and stos cmp sub insb movsl mov cmpsb fwait lock push mov add test cwtl ss or test mov push fsubl outsl scas mov xlat in inc mov or inc test insl xor and sahf mov aad add or mov enter scas and dec and or pop andb inc adc ss (bad) dec adcl cmp int3 sub mov scas rcrl movsb add cwtl jge adc cli imul push mov xor sti inc or mov les sbb lret lods pop js icebp (bad) in pop ror mov xor les xorb push pop dec dec bound xchg sbb arpl enter enter add push jno pop ffreep push lahf xor js xor adc and mov mov shlb dec jns lret aas xorl es (bad) enter push loopne and popl mov and sbb shrl (bad) xorb insb repnz (bad) mulb sar inc xchg arpl in inc nop fs js scas cmp aas das leave mov push pause add imul pusha lcall jnp pop sbb sbb mov push pusha pop out (bad) lret xor push lcall xchg pushf fdivs pop mov fisubrl add dec mov ljmp or mov test push movsl add inc (bad) ljmp inc js mov and (bad) repnz xlat call mov and and push cmp ja pop cld lret dec or ficompl add icebp enter sbb iret cmpl pushf dec outsb test adc sub jl adc jno mov scas and or or dec imul call cmc xlat xor xchg pop xchg add xlat ss in jmp adc lock or fnstsw (bad) sarl xchg sbb xor mov or adc push mov das lds inc jmp icebp (bad) xor mov adc add js cltd ror adc fiaddl mov dec sbb scas pop test pop inc ljmp or insb js sub cmp mov lret mov jg pusha sub enter aas cwtl bswap adc mov push push leave js and aaa push imul imul leave (bad) mov push pop (bad) lock xchg xchg movsb les sbb push cwtl fs mov cmp mov and aas dec add and sbb test xor sbb inc outsb inc add mov add xlat popf mov mov addl jg jge subl jo jo mov cmp xchg mov fisubl loope or jge mov sub xor out lcall xor shr cli xchg add mov adcb lods xor add add popf xchg mov dec int3 je adc xor bnd stc out in lcall pop hlt jl aam and pushf daa mov loopnew push mov mov inc fs inc fwait pusha int3 mov push inc out add jns call xor nop cmp test fs add cmp xor cmc mov mov pop (bad) fldenv push or xlat cmp xchg inc sbb adc fldl dec dec cmp fs push les inc cmp or lahf and aad mov movsl xchg add (bad) and clc hlt inc inc pop add lret dec add pop or js and mov ficoml sbb mov mov out jno sbb sub push push pop push das movsl sbb jl (bad) repz lahf xchg add mov jge int3 (bad) fisubl xor test or aam sbb shlb mov adc cmpsl sub mov cmp mov repnz bound pop hlt and lahf adc ss lea inc clc aam movsb aas mov test hlt xchg mov pop mov cltd or mov or or mov push popa loope inc loop and pushf sub insb pop lock test fisubl push xchg add fwait add and cld icebp add xchg pushf flds rcrb js addr16 in popa push into add lret adc inc cwtl dec lods mov popa test push jge sub inc xlat inc dec loope mov jne inc test shl ret inc test cmp lret jne or imul outsb fbstp jo lcall adc scas add lcall (bad) add mov push dec daa add ret add mov fs jns add push fmuls stc and sahf int loopne sbb sbb lock out cwtl gs test pop popf in mov int3 sub sub inc js add cmp cmp add and jno in ja iret hlt add mov pop repnz xlat lods test in jne fs push push mov jb xlat or add aam (bad) out aas cltd mov add lret push xor mov leave imul fldenv ja lcall inc mov addr16 mov xor rclb sbb mov rolb add les mov mov rolb imul sbb mov mov push bound mov adcl ret pushf inc jo pop mov pop add cmpsb mov cmp push push fmull cwtl pushf loop cmp leave add cmp inc lods jae hlt mov movsb adcl in xor sbb (bad) adc pusha mov insb repz or (bad) add add mov and add add ljmp and sbb addr16 lods xor (bad) fdivs call in xor inc sti sbb xor fidivl dec aas inc inc push loope arpl in mov xchg nop sub adc test popf push xchg adc pusha lahf and insb addl sbb mov nop pop cmp daa mov in fcoms shr dec adc xchg cmp dec mov fs mov or repnz cwtl dec cmp pop test lret test icebp mov and xor pmaddwd das inc cmp loopne or inc gs mov cmpsl and sbb pop data16 jl daa xor call jae pop cmpsb sbb add sti xor loopne mov pusha pop or stc pop push xor ret rol xchg pop xor adc add mov cmpsl nop adc mov pop mov mov sub xchg daa fwait pusha adc push and push push cmpb xchg shll pop mov dec mov scas aam jo cmpsb pusha and dec lea (bad) stc pusha pop repnz xor (bad) enter adc cmp clc les or (bad) fadd xor xchg mov ret iret rcrb mov adc pushf (bad) ss (bad) loopne aam cwtl rolb lret inc in add js mov lock test jns clc pop xor mov push pop dec jl push pop or popf add mov and popf pop movsl sbb enter test push add loop (bad) sub mov in dec mov mulb dec xchg adc adcl dec push inc or and pop xor nop gs mov cmp insb pop push (bad) cmp pop pushf dec shlb orb xor iret dec popf cmp das lods cmpsb nop adc xchg add leave push test mov push push fs mov (bad) and push je lret xchg popf fidiv add nopl mov add pushf stc movsb or push xor xchg mov movb jl je xchg lods fdivrl sub push mov mov xchg inc test test add cmp sbb adc add sbb xor add in push cs mov pop (bad) inc or es sub rcrl and cmc add xchg inc adc daa stos or mov test mov movl inc mov sahf push and sbb add sub jo cmpsl xchg add cld adc mov mov int3 je xor mov cmp sub pop loopne add lock test mov loopne sub mov fdivr in ss inc mov inc mov jno dec push or push mov aam sbb xchg sub mov addb cld cmp jo push int sbb aas cs bnd (bad) xchg aam push nop rolb or add sbb push addr16 loopne in js sbb jo push sub xchg test mov adc imul cmpb fs nop xor nop pusha push clc mov das cmp mov pop test inc or xchg icebp pop mov jne add and add jmp sbb add add pop aas popf mov add cs mov xor jle cmp insl mov jle sbb fisubrl rolb aam addb popl xor mov test add lahf xor and cmp mov or dec cmc cmpsb xor repnz cmc lcall pop in adc test and cltd sbb popf or shlb out mov es fiaddl xchg add popf outsb sbb addr16 pushf fnstsw ficoml loopne out jnp pusha xchg inc xorb movsl arpl add sbbb insb push and push cmp dec sbb push int xor cmp add cltd js xor xor or aas sahf ja (bad) in jo adc mov add idivl dec xor mov mov (bad) lret ljmp xchg jecxz jmp test fidivrl test mov mov jno push mov rorb loopne sub inc je mov andb leave imul sahf adc popa insb jmp add add lret test mov sub push and inc (bad) mov je int inc test repz mov dec jo xlat and je push jns cmpb es cmp pop xor cmp fisubl loope xchg cmp (bad) aam xor clc adc popa orl sbb or (bad) lock xor pushf (bad) xor orb or adc sbb imul or addb cmpsl inc add inc or and rcrl mov das push outsb icebp xlat mov dec fcom bound call fs pop cwtl add in add inc mov add mov out ficompl sub (bad) in ret out lret push lahf push mov and scas int mov outsb scas pushf in shrb fs push fcmovb cwtl jno or stc dec test cmp (bad) (bad) xor cwtl dec sbb cld add adc dec cwtl movsb pushf sub xchg dec xor cmp call or adc je leave subl testl icebp ss fwait add rcll adc bound cwtl pop hlt aam inc movlps lods inc xchg dec pop popa dec pop mov mov push cmp mov out sar lret in or hlt popa push pop movsl pop shrl push xor cmpsl mov mov lret sub out rclb (bad) into push mov inc xor cmp lds (bad) mov add mov add lock outsl adc push adc repnz pop sbb aas (bad) xchg mov mov pushf pop and cmp sahf (bad) fadds add sub (bad) movsb inc iret insl daa fnop add jmp push leave jno pop rclb lahf incb push je xchg add in jmp sbb pop cmp lcall jne dec popa xchg mov or mov bound cmp and lock in add mov imul js xchg into or adc aam outsl cmp fwait mov add pop int pop fistpl loop inc stc xlat adc and pop icebp cmp or cmpsb dec loopne ja repnz xor add fsubs dec rclb add inc in rcr pusha pushl push out bnd dec sbb adc daa xchg popf mov inc popf mov bound (bad) (bad) mov sarl fiadd lahf mov pop mov addl xlat or jo mov mov mov inc pop mov push xchg mov dec mov cmpsb pushf xchg push xor fidivl pusha inc lods add (bad) adc mov push sbb mov clc mov xchg push dec stc mov adc icebp aam jl pop mov je jno lcall popf cli jbe add and ficoml sub inc into in cmp arpl jp lahf mov adc adc jnp dec (bad) cmp fs and fdivr test aaa cmp xchg clc or sub roll or jp (bad) insb xchg push sub add add xchg mov jl movsbl repnz sub or mov cwtl xor (bad) cmpsb inc fildl pop dec mov aam out mov xchg enter (bad) or js xor movsb loop adc leave or sub add xor mov pushf fs push push lock mov and sbbl add mov (bad) in pop lahf add mov jl fistl mov (bad) jg gs lahf push aas and mov inc jae push mov jns cmp sub add lret es cmp lods int stc push add push xchg loope pop imul nop add out dec in jl mov cld fisubrl sbb or sbb mov ffreep je jo fwait mov xor add ljmp add out ljmp adc sub xlat mov xor lcall dec xlat jno mov mov loopne lcall xchg outsb jno jne or adc xlat sub aaa cmp fsubrl mov jl ficompl repz mov mov js rorb sarb xor xchg xor je inc add cmp sbb mov jmp xlat (bad) lock enter jp mov imull add ss xor inc mov mov jae push (bad) jo cmp mov js push les sub dec mov std orl mov enter call add mov or jge bound push xchg or imul xor dec sub sahf jl xchg dec pusha repnz mov and push xchg in adc jbe fmull or pop xchg popf ret cmp das out jno loopne jmp lret cltd push ret xchg push mov lock xchg add xor adc xlat adc in cmpsl fwait xchg xchg lds push add (bad) push mov add adc lahf mov push arpl test test adc xchg pop js in add popf dec jl popf aam sbb mov inc hlt push and add inc or loopne addr16 sbb js int lods add in js js leave cmp mov cmp push lods lock sbb int3 pusha loopne addb sub xor sarb xor add cmpl daa popf scas and inc adc xor dec xlat pop aam hlt and xchg in mov movsb add in insl mov in mov ss and jmp jle xor pusha cwtl mov aam fs idivl pop jle inc scas lds clc aam pop xorb rclb pop lahf lds mov outsl and cmp mov push popf sub mov pop int3 add fbld sbb jmp push cmp inc lds popa mov sub es daa lods insl shrl mov insb call or sbb aam popf jge inc or jbe sbb pop lcall mov xchg mov or repnz in (bad) call lahf pop je add xchg mov fiadd js jp ret (bad) jnp cmp mov popf push fidivrl repz inc out and inc mov lods xchg out out js cmpsl ret and cmp add out pop cmc out sub xchg xchg or ljmp daa mov jo cmpb in adc pop and (bad) xchg mov fwait adc icebp push repnz mov (bad) pop mov push inc pushf sub fsubrp (bad) xlat mov call into inc cld or rcll enter pop int sub mov gs hlt hlt lcall imul pop push es add outsb pop sub jae or repnz add xor jne pop jae pop sarl repnz xchg negl lahf rcrl sub les mov jl pusha xor mov inc push push lea push push lcall add ficompl and add repnz test lcall pop add xlat loop lret xor add and xchg or fcmovnbe mov repnz enter adc addb push jg push loopne mov add pop insb xchg xor int3 xorb add jo mov (bad) in fwait dec mov adcb cmc loopne mov add fisubrl ljmp cmpsl inc rcll xchg (bad) and leave or mov or xlat and stos add push lahf xchg mov xlat bnd add in fdivrl in fildl dec sbb sbb (bad) iret addl add pusha push cmpb fcoml dec call jo mov cwtl lret loopne,pt faddl fsubs jo push jo inc loopne cmp addb iret mov aas or arpl dec cmpsb ds xchg jb or (bad) inc xchg jg add push adc stc movsl or mov imul in cwtl dec fld (bad) ja mov and push sbb imul xchg stc lods or mov cmpsl xor insb addr16 push pusha lret mov rcrl (bad) adc lock and mov add mov dec pop rclb es fstpt mov jge xor roll sarb adc xchg std push adc pop sarl add mov jo mov adc or call (bad) fdivrp leave jb and xchg int3 xor adc outsl repz sub jnp pusha (bad) movsl sub pop aam repz cs sbb xchg inc mov adc xchg sbb lret mov ret mov lds mov xlat sbb in adc xor leave sbb repnz mov push and jle test ficom outsb and push jge add out hlt xor adc cmpsb test repnz add arpl mov es fwait sarl inc icebp jecxz inc push xchg or rolb in scas sub into add pop mov jge cmp xorl mov pop stos sarb mov lock and pop clc enter mov sbb mov xor jl add imul imul sbb adc cmp mov jmp and and fbstp rclb scas imul mov add pcmpeqd stos test shrl shr ret or add or pushf mov lods daa gs lods pop dec imul popa mov das and sub adc mov frstor nop (bad) (bad) jne (bad) xchg test and ja xorl daa stc mov arpl push roll test test pusha dec add lret cwtl (bad) ja mov mov adc adc pop jmp jne push sbb int dec stc ja or shr test lods sarl out ljmp mov sub aas test lods and in xlat icebp shl repnz mov fdivl pusha sbb jecxz adc add ja xor leave in repnz or imul inc inc ljmp das jnp fsubl inc fimul outsb enter xorb cmp loopne cwtl push ss xchg xchg jno (bad) test or iret fs lret xchg xor dec or out in xor lret mov cmpsl add pop aas into not or pop (bad) out fdivrl movsl stc cld adc and mov cwtl popw lahf lock mov push xor pop and ficoml and aas or stc aas mov icebp push cltd pop jns cmp cwtl sub mov xor fstpl xchg subb outsl (bad) dec push inc pushf pop std lahf inc nop ret and orl mov xlat aam or mov sbb pop outsl int and adc ficoml sub mov mov orb cmp inc aam xlat sti loopne popa fidivl mov mov out sub inc gs xlat imul jo and test sub repz jb (bad) sbb ljmp sub scas sub daa push or cmpsl in mov sub pop outsl int3 add aas fwait int add ret rorb clc lahf pop (bad) loopne pushf adc cmp pop daa mov jp and hlt mov cmp mov inc jle push add (bad) (bad) dec inc sub lods into sbb mov adc (bad) push cmp frstor mov and add lahf cld xor lea cmp cwtl ljmp sar cmp xchg xor inc data16 (bad) mov add xor and mov or sbb xchg repz and dec ret or sub aas xor mov fcoms fisubrl clc mov dec addr16 jl bound push or movsl mov out inc and fisub popf cmp jne dec sbb arpl jo pushf testb popa inc sub pop (bad) andl fs in push jge jecxz arpl test movsb pusha shlb outsb (bad) mov sbb pop enter int sbb push add xchg pusha dec mov mov dec scas clc dec pushf pop stos call aas lcall lock cmp scas addr16 pause loope mov setb xchg insb dec add popf dec xchg xchg inc or pop xor (bad) mov adc call xchg int3 cmpsl sub mov mov and sahf sbb clc sahf adc loopne mov repz stc cmp mov jl sbbb notb pop adc aas imul jo sub sbb (bad) mov arpl enter sub lcall int3 popf mov cwtl dec scas loopne mov movsb jge push nop out test les xor test mov mov mov xlat fld inc dec push sbbb sub sbbb mov loopne sti rclb inc lret dec dec or cmp or fndisi(8087 push aam add imul dec rolb ficom push pop push xlat cwtl cld shrb pop dec leave das adc mov fdivrs aam movsb enter add mov fs pusha add and add lret iret xorb xor inc fldcw loopne mov dec push out fnop xchg cmp test scas lock sbb (bad) jo jmp je add test addr16 adc jg fcoms pop adc fdiv push fdiv adc adc add les (bad) in stc xlat xchg je inc jl enter sahf push mov (bad) das jo daa cmp push jl mov sarl out sbb int3 test aam jbe mov js lret rcll mov ljmp xchg (bad) test call imulb mov dec sub inc (bad) std xor push mov loopne pop push std es aas lea sub pop jbe or aaa or inc or add mov repnz jp xchg fiaddl in in or (bad) test imul pop pop cmpsb popl add fidivrl leave pusha add enter lahf cmpsl push mov xchg fs sub test jl,pt loopne repnz outsb cmp mov nop xchg add (bad) jno ret pop adc add js xchg mov shlb sbb aam loopne outsl stos push dec inc fidivrl cmp movsb cltd adc and pop lahf loopne push push dec je daa mov mov hlt xchg mov adc test out jne adc rep call jl jae add mov add test hlt xor xchg lahf dec ss push cmp pop mov aaa pop and cmp (bad) xchg adcb jp cmp mov mov imul jo add cs lods lods roll mov nop in es test in jo cmp xlat push dec movsb aaa imulb adc push mov push in dec test cmp xor cmp pop inc daa xchg loopne ror push addb pusha mov hlt gs dec imul adc stc les fimull xchg cmp movsl aas add (bad) hlt mov cmpsb lock mov pusha cltd mov sub les mov adc or sahf fidiv in xchg cmc sbb adc mov pushf mov fimull add inc (bad) lahf lea xor mov rorl (bad) mov addl sub push ljmp xor pop xchg dec sbbl or sub int3 push js cmpsl inc add (bad) xor in and jb inc sar and adc cmp fsubp sub ficompl push mov pop jecxz or push hlt divb and sub xchg lods pushf imulb inc nop push mov mov pop aas out popa stos ret adc cld pushf dec pushl and inc cmp imul sbb jns xor ret dec imul mov data16 lcall mov cmp inc mov fiaddl add in mov les outsb ficompl adc lea and lcall fsts es pop stc or xchg pop sbb or scas rolb adc sbb lcall xor dec das mov mov int or mov faddl pop popf into inc sub xadd sti pop adc jb cmp cmpsb add outsl inc fidiv mov mov jecxz pop or (bad) int hlt addb inc pop lahf pushf mov jmp mov xor xchg xor fisubr pop add jg push push add sbb mov xor aaa sbbl cmp adc dec or lahf cmp stos push jb and lock pop nop js mov out inc push xchg and les mov lahf addr16 xor js add cltd mov roll cmc (bad) (bad) jg mov add mov lret push push les xor je pushf push mov mov loopne push inc movsb lock jg jmp in inc or and nop jae stc outsb push push push fxch out adc xor xchg fidivl sbb add xchg ja mov dec push mov pop hlt inc fidivl icebp pop push push mov inc and mov push pushfw add in jp iret jo adc inc mov add into and aad adc js xor leave add dec dec add and test fs testb mov lahf and pushf cmpsl repnz jb js adc mov dec movsb pop dec mov xorb addl pusha xor psllq addl mov jo mov add test pop xchg pop out stos mov add mov mov pop inc repz xchg call insb jns pop mov adc pop fimull test add ja imul or cs and cmpb xor sbb inc in js ret jne dec adc insb aam sbb lds mov mov lret popf xchg xchg inc push fadds inc out lea mov add xchg xor cwtl adc dec push mov movsb or loopne sbb out sbb hlt mov jg or cmpb ficompl add in mov mov mov xchg xor xchg add je add xchg popf xor or xchg xor inc add add mov popa add js xlat cld call dec (bad) call and scas xor fisubl scas jmp and test lret (bad) xor xor cltd mov fs mul popa insb in ds or and add loope mov int push clc js cmp aaa dec pop sub mov (bad) testb mov testl cmp dec pop dec popf mov mov pop es mov and test xchg enter lahf out push xlat sbb in lock js inc orb pop push push ds fldcw (bad) mov outsl mov cmpsb mov or mov andl push clc and mov pushf and add ds sbb ljmp cmpsl hlt add lret pop les xchg add pcmpeqd dec sbb and mov in out aas fwait mov xor add in ds push mov add mov in cmp popf sub or aad and push fs ss and inc push pop mov mov jg int3 pop outsb fldcw cmp cmp jo lcall arpl mov dec (bad) add imul mov mov add xchg int3 sbb test xor push mov push cmpb pop dec test pop rorb pop hlt add add hlt or (bad) movsb xor xchg pop (bad) and lahf and add es mov push pop in xchg xlat mov pop adc jl push add or add je pop xchg cmp adc cmp or adc cld xchg mov test push add dec adc cs dec clc push stc call mov adc push sbb push inc movsb inc sbb les adc sbb dec adc cld mov stos popa sbb sbb inc add inc (bad) mov lods push movsl add sbb lods gs fnstcw pop dec push (bad) jno sbb loopne invd sbb pop adc rsqrtps pop call jo add pop pop ljmp push mov pop pop jl rep stos mov (bad) and mov pop dec call cmc sbb mov stos xchg loope pop in add cwtl pop cmp add dec jnp lock lods loop (bad) xchg cmp std mov and jp dec (bad) iret xchg test sub adc hlt test out sarb ja cmp inc cld jmp (bad) fwait cld mov push lret mov or xlat ds dec and outsl lcall loop test xchg js jnp add jnp xchg lds xchg mov inc (bad) mov int cmc cltd add cmp fsubp pop aad jmp icebp gs push sbb inc pop xlat jbe xchg fldcw mov and cs enter xchg jo pop pop or add add mul jge xor jo hlt fild mov or popf into adcl (bad) mov and dec stos add mov je sti dec cmpsl jecxz add xor stos push push dec shl adc int3 push dec imul xchg in xlat sub test pshufw test jmp shrb or push inc test mov and xchg lods test lcall ja arpl dec in mov add (bad) push add (bad) incl test movsl add xor pushf stos fmuls arpl scas pop xchg (bad) in movsb sbb mov inc mov inc mov adc mov icebp test outsl loopne pushf mov jae fisubl les subb out add push mov add jo loopne in lret xor mov mov cmp fsubrl add lods ret lahf or mov adcb mov lock sbb leave push mov addl xchg (bad) lock push xchg mov pushf rcll mov add cmpsl (bad) and dec jmp inc mov pop cmp lahf movb int3 xor loope inc cmp adc in mov fnstenv and xchg clc mov inc jge push pop sbb and std je and push sub pop xor sbb fild sub popa lahf arpl mov (bad) lcall push ja push adc xor out adc test rcr fld clc aam cld xor into clc lock xchg and nop adc and sbb sub call and inc lahf in loopne xchg or ja pusha dec lods jp mov push pop out mov and push lock xor cs inc xchg data16 push add push xchg addb xor mov sub xor sbb xor adc fucom pop cmpsb pop pushf jbe in test push sahf pop dec inc mov cld and mov jecxz xchg icebp pushf or adc mov sbbb xchg bound std ret inc xor sahf call jo mov hlt inc (bad) ret mul imul adcb incb mov xchg mov cmp jns mov nop pusha pushf add (bad) sbb lret lods mov inc lock ret push stos xchg and push mov pop mov leave pop stc cmp dec and xchg out sbb pushf dec mov xor sub popf mov cmp xor lods mov inc sub mov add out pop lret xchg cmp ljmp testb adcl jl jg addr16 mov pop bound repnz pushf mov sub (bad) repz xlat adc xchg test push mov dec test int call jg aam out push jg mov jecxz mov inc sbb cld xchg xor nop add orb (bad) les push cmp repnz sub pop ljmp adc lahf iret movsl shrb insb loopne in add aad cltd fsubr repnz shrb xchg outsl movsb adc sarl and or popa test scas in jnp add std repz mov lahf js and add sbb push fildll nop cli add cmp and adc mov inc int3 lea nop lock xlat push adc xchg add in sbb xchg adc pop in cmpsl in jl,pn cmp and sahf dec je je js fnsave push push pop int or or jmp xlat push popa adc fmul mov pop add shll add das jmp inc jno adc shrl in test add mov and or outsb jl jnp sub cld pop cmpsb jo adc xor adc mov idivb test add popf ret arpl jo fcompl in push mov insl push out sbb mov add mov out lahf add (bad) xor mov (bad) loopne or out popf js add movsb repnz std in test popf sub mov jo jo and add rolb xchg add inc cmp mov pop mov sbb sahf xchg xchg adcl and cmp cmpsb pop aad pusha push loope or mov pop add loop dec test movsb mov lret or pop pusha or push cwtl hlt cmpsb mov pusha push add sub (bad) cmp dec inc mov in mov jbe enter push xor in addb mov cmpsb xor jb ljmp pop xchg inc xor in lahf or sub (bad) or call scas int3 lock cmp mov shr mov pusha icebp xlat jmp cmp xor imul leave jae or cmp adc movsb fild cmp jl (bad) bound lock mov mov cmp cmp adc das lods (bad) mov jmp rcl adc fsubs mov loopne mov pop cmc xchg pop push pop fisubr sub or sbb in mov loop pop sbb lds xlat inc xchg sub pusha pop and pop dec ret mov bound lock cld add jg insl or push add xchg pop jo mov lahf jbe dec mov lock mov (bad) xchg cwtl add xchg lahf cmp xor mov push jae pop je call pop fldl pop dec lahf insb aas mov mov pusha cmp xor mov inc lret lcall aam movb stos add mov scas mov lahf out and mov imul fsubs xchg mov fistpl or mov test (bad) sbb push cmp pop (bad) xor (bad) js xor int3 adc mov mov and pusha dec int3 lea adc sarl dec mov push ret or push pushf lds les clc mov cmp pop ficompl mov sub mov lods mov jg testl test or and push add out leave inc (bad) je shl lahf jp add add nop cmpb outsl fwait push xchg popf mov mov cmp or sub mov ja test add rolb pop repnz add cmp (bad) xor jp imul jne hlt je mov and arpl mov int3 repnz inc mov sub daa add inc cwtl jo pop mov bound mov mov mov jl int3 sarl add lock mov js cld inc ds jmp pop adc mov pop mov dec hlt xchg mov cmc adc inc mov xchg lods cmp jge mov cli repnz adc and dec dec adc cmpsl adc or mov mov and ret out cld mov pop or mov in rcrb ret adc dec and sahf mov jne ja lock inc js (bad) add mov inc sbb divb dec add mov in add data16 add or dec jbe cmpsl les and rcrb or xlat lods mov or std jg add or dec aam pavgw loop sub shrb add enter cmp and mov push test leave jb or mov lcall xchg (bad) outsb enter pop (bad) push mov and mov sarb mov ljmp addr16 add cmc test mul jo enter in xlat sub shrl or pop mov and lods push mov popf dec in je dec mov fwait and push mov test adc sbb dec std leave jl inc les mov call pop dec cwtl mov lcall jae push mov jge pop pop add xchg adc pop in repz pop icebp sbb jne pop mov and hlt loopne pop inc rolb iret rclb les orb jmp not inc (bad) hlt add push inc inc and std jbe xchg cmc and dec hlt or lds pop add cmp ljmp dec daa xor xor repz popa add mov inc jge je clc pop addr16 es sub jmp xor mov push push or call jmp cld mov sub rolb or xor dec cltd test sub mov pop xchg cmp fnsave or call pop add jmp mov push sub jmp pop push add jl xorl loope add push arpl sbb push inc sbb add lret aad jmp inc repz xchg cltd or and sub lret sub negl in jae add sbb loop pop push push ficom test ss call pop nop js pop add cmp (bad) cmc xchg hlt push cmc stos xchg xchg jmp out lods and push nop and cmc test push outsb data16 mov sarl daa mov add mov or popf jno clc mov scas sub xor scas xchg mov jmp rcl frstor jae out add inc dec aad sub push add movsb push and pop mov movsl sbb mov pop ret xlat sub nop out mov add adcl pop xchg lds jle cli push push mov adc pop sbb orl adcb clc pop pop cli jmp add mov cmp xor pop rcll ss lcall cs cmp les mov cmp rolb mov adc push push pushf and dec jmp sti mov add out out add cmp inc inc jmp jmp incl cmp push das pusha addb loopne dec sub add xchg and addl arpl mov repz xor mov adc cld add ss (bad) insl aad cli fiadd pop mov add jmp mov mov pop sti enter push and mov repnz xor fs jbe sub pop inc popf pop and cmp cmp xor imul sub add (bad) clc mov mov push pop push icebp pop iret jbe add pusha sub jmp or add pop cmpsl ret out out das add arpl pop inc dec push push sub push stos addr16 cmc jns and lahf push xchg es mov andl mov push push mov loope stc ss mov or push addl sub inc and and push push test pop ss xchg mov or and push roll daa push add icebp mov dec mov out clc pop adc out or lock aad fs add pop dec fdiv cmp pop mov push xchg adc add mov add test stos push jge movsl xchg popa xor add pop pop fs xor add pop jmp push movsl push int xor cmp add lds inc (bad) or inc hlt push pusha loopne cmp sub inc fucompp test (bad) mov jnp mov pop push push or mov mov xchg xlat and das mov sub jns pop push sbb or adc push sbb lods jno add sub iret decb aad xor or push test and mov xor sbb leave mov cmp xor sbb daa pop dec mov pop sub inc cmp dec popf pop lcall and cwtl push xchg repnz testl repz push pop daa add shl xor insb adc and cmp mov add dec out and icebp inc add in cs jmp add jg inc neg in nop rorb mov jns xlat rorl js pop xchg or sti inc stc mov pop mov pusha xchg lods sub cmpsb mov call jno (bad) mulb ss sti stos xchg sub flds mov and enter out sub jae call (bad) and and push xchg js inc xor push add pop cld sub ds mov dec add in incb es mov and mov sub sub add jg addr16 pop test jnp or add push mov inc not add xor mov adc cli std pop pop test repz add sub jnp or repz fistpll mov out add inc leave repz aad sub push jmp sub pop push dec add lods popa mov jmp mov sub testl sub inc jne jno int sbb jnp loop ljmp fs sub xchg add pop pop (bad) push repz movsl push andb push rolb mov push aas mov pop push fldl icebp pop add jbe add sarl (bad) mov cwtl dec push repz jmp (bad) pusha jl jp sub pop cmc and mov push int3 push inc add push adc push jl mov lods stos and pop loope xor cs stc or mov mov subl orb push jg cltd jmp je or adc sbb scas loopne repz cld mov add dec inc addl sbb out js sub lock push inc pop mov nop test flds adc mov inc jecxz xor xor cwtl aam shl jl pop stc aaa or jmp cli xchg in ficomp jns mov cmp pop out xor dec mov roll divl add test add fstpt inc cmpl mov add xor es (bad) add pushf pop lds loopne lret xlat pop push cmp popa das jmp xor push and aaa ja jp mov cmp mov jmp or popf jne call clc sbb mov hlt jno mov mov push mov jnp daa (bad) push push movsl jne push xchg std sbb cwtl cli inc repnz xchg jne out rol add xchg jne (bad) dec push test rorl icebp in xchg ret push push (bad) pop popa pop pop (bad) repz jns mov clc mov int and mov pop push mov scas push jmp dec push sub xor mov push jmp test push push dec pop popa or pop or ljmp push enter in decl inc sbb std js xchg and add adc in mov mov ret xor in dec push decb (bad) or dec jno dec ljmp cltd (bad) repz sub push out (bad) out sub inc repz loope cli cmpb test out int3 insb (bad) and andl fstps pop fs jae cmp mov insl mov (bad) insb lds dec inc push int3 pop or xchg lcall mov xor add in sar sub jno adc out jmp enter and dec jmp mov adc jmp int3 aas (bad) leave (bad) test mov scas ror mov test and lret into jo flds loop jp nop jne push (bad) neg ffree and inc inc pop mov pop push adc jne aad jmp adc pop or xor push mov idiv mov jp jle lock hlt (bad) xor cmp dec cmp fldl cmp sbb mov or pusha mov call cwtl out sub popa fildll adc or push mov jmp mov sub mov or call adc mov cmp aaa xchg push arpl fmul and mov and or xchg inc sub bound cwtl add test or andps pop jno push enter push dec fwait or or cmp cmp cmp add push push lret mov cld lds add push or inc inc loopne mov and mov cmp jbe (bad) bound ljmp cwtl movsb lds push icebp sbb xchg (bad) ret or pop mov cmpb pusha add mov jbe mov mov jmp mov add xor ror stos or add or and in and fstl adcb mov push out or xor jmp aas or mov xor fucomi adc add rcl add aaa mov inc dec or ret pop pop pop mov (bad) jmp sub out (bad) (bad) fsubrs aam int3 or pop pusha (bad) xor shlb (bad) pop enter enter jmp or inc rolb mov inc adc cmp inc xchg push in jl scas daa add jno lahf jb mov inc mov mov cmp addb xchg fcompl xchg add push mov cli push cmp mov mov add push ja xor mov arpl sbb add jmp jle cmpl jne adc lds xchg pushw movsl jle and or inc mov js mov rorb push loop mov add mov jno imul mov sbb inc push ret pushf xchg add xchg mov inc test mov push cmp dec hlt mov imul adc mov cltd mov add fbld cmp cmc popa jmp cwtl jg cmpsl cmc les pusha cmp mov add push lahf lret les jge je push scas mov sahf mull (bad) cmp test cmp pop jb and inc push ret sub pop sbb les rolb aas notl rdpmc add xor test lock jns popa push addr16 call mov cmp xchg xchg lahf jmp mov jmp icebp adc movzwl sub lea inc sub sbb cli hlt add jp (bad) sbb sub lea jge mov inc adc fidivr mov mov stos jo xor push xor pop popa sahf out out rcrl sbb add inc jns or pushl pop jb and inc push ret inc icebp jp jp pop test lcall add mov and add mov lret lods or mov das sub jnp jecxz,pn inc add dec das dec cmp add jmp into cmp daa adc js cld xor mov subb mov (bad) lahf dec int3 dec jnp add and aam xor inc push add or pop clc dec xor mov into or push loop xor pop add mov in (bad) jmp stc mov and push mov sahf lahf xchg push cmpsl (bad) pop aad adc sub xchg adc (bad) mov mov jnp mov (bad) cmp bound ds repnz insb mov inc push ds jns or scas shl add test jmp stos loope pusha jmp sub sbbl nop fisubl xor mov pop push mov adc adcl mov inc add enter sbb push adc pop xor xlat jp,pn pop sub pusha ljmp addr16 cld push xlat daa add popa push pop mov add popa pop ret enter cld rolb imulb aaa xchg and and inc enter add or push leave fsubs aas mov lods push mov pop jg mov or xor xor mov orb mov push inc ror pop jp sub push push pop pop inc mov jg lods add xchg iret imul xor outsl cwtl jle and xor mov ret sub add pop jmp aas lock xchg adc mov sub pusha push push mov push mov and xchg xlat mov and ret call in cmp insb push or add in pop mov lcall js xchg cltd test sti push cmp cmp ja clc jmp in mov push mov xor or push inc icebp xchg pop or sub inc loopne push push jge xchg push jmp sbb inc add sarl xor inc (bad) and lahf arpl push add sar xchg je sbb xchg or jmp dec pop ljmp arpl pop and add into (bad) cli cld push iret jmp daa inc (bad) ja xchg fs mov mov jo negb lods xor cltd push es (bad) icebp cmp jnp or pop push ljmp push (bad) xor add pop loop dec mov or addr16 or xor xor dec enter daa dec or fs push (bad) cmp fs ljmp dec pop add (bad) je das pop adc lahf push mov add pop (bad) imul and push enter jbe push inc add stc push test lods add push stos xor mov mov add insb repz pushl cmp adc pop push je adc mov push or ss jg jl sbb mov (bad) push lret and jmp sub xchg xchg sub loop mov jns dec ret or inc in sbb cmp pop push in mov cli xor pop sub add lret cmp (bad) lods cmpb jge mov popf or lock mov ss vpunpcklbw add dec orl push ljmp (bad) pop cmp xor jmp add push stos adc shrl imul pop adc push pop dec nop or (bad) incl jmp int mov je push xlat daa les or cmp (bad) inc xor movl xchg or movsl push push lea vpandn sub and pop roll and or sahf sbb jb jnp insb js inc dec or and imul xchg ret cmp mov pop sbb arpl inc aad ds or or jge leave jne sbb rcrb ret add push pop test push xchg sub mov sbbl fwait mov push sbb mov mov ds (bad) nop vunpcklps push stos add test xchg (bad) call add ja cmc mov dec pop add push mov sbb not call out jmp cmp fldl2t notb add repz fstps pop cwtl jo repnz mov dec xchg test push and (bad) xor imul dec sub pop stos loopne iret imul xor jne leave daa inc sbb jmp xor or push inc into stc (bad) jbe,pn xor call dec arpl or sub pop add cmovb or cwtl daa sub rcrl (bad) and lret pushl add aas push sub sub or aad add lahf je mov rcrb or rep pop cmp mov sub jmp sbb sub push mov add sub mov pop jmp mov sti push cmpsl add rolb pop repnz xchg movsb mov adc push push sub cmp add in ja es and add mov pop xchg adc lret pop addl xorb dec push adc add mov rol lods xor pop rorl inc jecxz and adc adc addb and or or push sbb test cltd (bad) pop movsb out add push sub iret pop pop dec shlb outsb push mov mov xchg cld std pop shr nop mov or adc inc es jb fiadd or xor lea jmp enter push jne pop pop push enter jmp adc inc add outsl jno and daa pop pop lods jnp nop sti jge xchg dec (bad) or and icebp arpl xchg rolb mov adc inc (bad) cltd fsubrs lcall bound cs pop add mov arpl (bad) pop in add cmp test xchg cmpsl lahf sub call rcr pop subb lea add sub fsubr das mov idivb scas or jecxz fwait and (bad) mov push and push mov pusha and pop adc add in and rorl add xor cmp jl popa sbb xor jmp call testl mov inc mov cmc mov cmpsl pop inc xchg dec aam mov xchg inc mov pop jmp mov (bad) jle or xor pop in es push test push xor loop (bad) mov cmpsl cltd push pop push add mov and or (bad) test adc sbb mov jle or push and cs mov inc mov ljmp mov add pop cltd fldl jo xchg std mov mov aas dec out pop out test nop test mov mov fs add cmpsb adc sub lods xchg pop jnp xor jle pop sub scas dec cli lret mov jmp mov or cmp notb jecxz lds mov cwtl inc add push push in inc xchg mov pop popf ljmp and pop pop mov jo dec pop sub or sbb jmp xor std inc lret stc shl scas data16 jl xor adc mov adc fdivrl sub add inc (bad) into push add je push pop cmp mov mov inc add aaa (bad) mov fcmove jae sub lock cmpl xor and and les int3 pop sbb fsubrp inc dec xchg add mov jge inc pop mov or (bad) pop dec xor or mov std js iret add or cmp add popa mov add clc dec mov dec enter mov fs or les or add (bad) mov int3 add inc mov movsb (bad) jecxz mov xor and mov int3 mov fistpl fadd repz (bad) call mov (bad) fiadd or lret lods ret scas jl pop rcrl rolb mov movsb pusha xorb add test int3 cwtl repz xlat pop cmp and inc cmp push scas dec lds rclb orb adc cmp imul call sbb rolb in (bad) int das add and loope sub out pop dec push add lea aas pop mov (bad) je add scas xchg jne add cmc pop and scas mov jo aas mov roll inc repnz out inc add mov aas add push dec jge flds cli scas in insb sti icebp dec loopne xor mov add outsb popf in imul je outsl pop lret mov mov orl daa mov jne pop or jo cmovo or mov mov mov adc add fldcw sbb add sub imul ljmp pop xchg jp sub push xchg clc pop aas xor stos add adc repz test (bad) bnd std aaa add inc adc scas add mov stos add stos push rcrl mov testl jmp jnp,pt add adcb data16 and leave sbb stos add xchg and sub jge bound jle in iret add int3 jnp pop adc xchg jg insl out repnz add sbb dec cmp cli fmull in mov jmp or fadd das repnz push add outsb push sub jnp data16 dec pop inc in add xchg mov rol mov cwtl in add add push into or adc rep pop add xor jbe add mov push int ret jno pmuludq addb xchg jge push addl push (bad) lods xchg les mov mov xchg lret pop cmpsb sub adc in mov into or cmpb flds sub jl add pushf mov inc enter es xor mov or pop mov add mov jno xchg or push xchg cmp stos clc mov cli shr bound xor push sub dec rolb sbb fwait call arpl outsl (bad) fidivrl orl sbbl add sbb add push mov add jne adc cld addr16 inc xor jnp mov cmp lret in and ret cmp hlt xorl idiv add rcl mov into (bad) push or mov mov sbb pop push add mov xchg adc add and or rclb fildl outsb pop mov lahf jne add stos jne or push mov mov and nop sbb xorb scas or sub movsl rolb (bad) out call jmp mov adc test sbb orl out pop icebp jo lods inc pop cli mov sbb es clc scas aas sbb lds and sub and (bad) dec add mov invd mov dec mov add xchg or popa push bound or jae pushf pop mov popw add ret (bad) mov add inc mov stos add (bad) fdivs cltd xor and rcrb nop lcall paddusw scas mov and sbb adc lock arpl fmul ljmp push hlt cmp fisttpl (bad) fnstenv scas pop cwtl leave cwtl js clc cmp or lea pushf dec cmpsl sbb mov das add mov adcb xchg inc sub add mov push pop or sti cmp add xchg or sub mov iret pop movsb add bound rcrb mov sub in outsl aad and pusha push fcoms add pushf mov lret call add loop jo adc rep lea ds mov and cwtl popa mov and add rcr nop fadds fwait jne and push andb popf push xchg sub sub sahf push xchg and pop addr16 adc add in cmp add das ds add inc lahf inc test cmpsb ljmp xor add aam xchg pop std daa push arpl dec cmp (bad) and jns push mov pop add xor repnz insb add (bad) mov subb sbb add fistpl mov add mov dec pop rcpps nop outsl and adc scas push push pop pop jnp or mov cmp mov xchg jo add and pop add push xchg and test aaa push pop sti stos arpl inc sbb mov add in ja adc cwtl or inc (bad) data16 push rorb and movsb aas add cltd adc unpckhps ja mov sbb sbb ja add dec (bad) pop ds push or cmp (bad) mul add jns out fs pop add rcl stos sbb popf rcrb mov test sub mov scas sbb add lret test cmc mov xor push js scas add mov xchg adc ret imul xchg push out aaa xor repz shrl xor jne daa loop and jmp add mov mov pop movsb jns ljmp push jge cli jmp (bad) add push sub xchg data16 rcr or rcrl cmp push fwait add outsb jno pop fisub clc jmp pusha mov add add xor mov ljmp xchg xchg sbb jo cmp loope out jbe in sti xchg cmpsl xor movl in jmp pop add imul jge add test dec movsl in add popa loopne mov adc lea stos add cmp cli add dec divl into jne jmp and sbb cmp ret cwtl sbb lahf mov fsubl aad or loopne mov mov cmova or pop (bad) push xlat adc pop add jb rclw push push xchg fdiv rorb push xchg push test in mov and rorb mov cltd add mov cmpl fnsave pop nop out popa xchg jo add mov xchg adc sbb call or push push inc enter add cmc sub insb roll iret clc sub (bad) call ds and add popf out cmc sub add ret xor xchg (bad) out (bad) icebp arpl xor jbe lret fdivs mov insb aaa add push ret loop pushf xchg add stc add fdivl pop xor add dec ret in lods in adc mov out aas test sti shlb not adc mov and xchg icebp inc sub fstpt add add or movsb fsubs push cwtl call and movl imul pop mov inc sub mov jo vorps dec pop fdivs shr in mov jl jl pop dec in mov clc ljmp add mov cmp mov add xor mov add push sti jno add aaa add gs mov (bad) les movsl nop mov or sbb popf add in pushf cmp sub xchg imul call (bad) fcomi in stos lret cmp into jne ret mov add and outsb push mov and jmp add dec dec mov out cmpsb mov dec inc (bad) in insl loop push cmp out add inc ds movsb cmp mov enter push stc or jno add xor xchg fadds mov idivb loopne arpl cwtl jbe rep push add rcll add loopne iretw aaa pop add mov in pop mov test fdivl stos ss cli jge sbb mov inc enter fisubrl rorb nop jo inc cwtl add jae sarb add sbb (bad) pusha add push dec adc sub data16 push rolb pop pop add test xchg xor stc sub cmp cmp mov test daa push repnz mov mov push loop lret orb arpl out jne sbb movsw mov sub ds int3 or add scas in or mov add icebp je add cmp add pusha pusha mov cmp jg arpl push aam cmp iret dec mov dec sbb pop push lret jle sbb mov add push sarl adc test cmp mov inc mov jge adc out add test jp and clc inc inc pop and cmp add and sub (bad) xlat xchg sar mov outsb add mov cmc or mov add repz inc push pop mov mov shlb cmp popl (bad) fsubrs orl enter dec arpl test sub mov adc push pusha and add (bad) or mov addr16 add adc add adc insl ret rol outsb adc jge fs out mov inc push push loope pop add xchg leave movsl outsb out inc xadd and cli lret mov lahf dec stos les subb lcall cli jl adc pop int3 xchg out jne add cld push or pop movsl pushf pslld mov xchg adc out inc mov gs add cmp loope jp add fidivrl cmp add ljmp and mov loopne xorb add add cmpsl adc mov hlt mov nop or roll or add in jo add pop mov in insl dec leave repnz push mov sbb subl popf stos xor mov xor flds inc rorb pop cmpsb in jmp push cmp and lds jae jns test inc or je mov or mov push mov add stos sbb shrb mov add push inc (bad) push adc fildl xchg les lods add xchg int3 push dec cmp add xor fimull dec add fistpll adc and adc jge add cs cltd rolb xchg arpl fucomi push or mov loop mov mov add outsl mov cltd or adc add pop std pop sbb cmp add push leave mov lods movsb xchg stc add dec ret out xor dec add pop les je gs adc lock push or ss or mov add mov lcall popf mov xlat imul mov addr16 addb aad pop add dec ljmp sbb in fdivs adc xchg aas dec loopne cmp stos add cmp pop test test fistl pop fwait or add cmp mov xlat insl and add sub mov cmpb cwtl add xchg in fwait dec cmp and ja popl push rolb stc xor out pop fdivl jecxz jl add mov add adc insb cmp or addl insl mov adc and xor cmpsl aam rol adc pop cwtl and inc ljmp xchg mov cmc in fs jl pushf or mov sarb subb cmpsb and cmpsl add jmp jbe fmul mov pushf mov inc sub inc ret xchg add sbb add mov or add pop bound fstps add mov aad testb popa add pop push addr16 rcrb mov lods loop out sub test insb std add xchg (bad) cmp repz (bad) cmp add push mov je out (bad) std (bad) rcrb cmp add into push testb add mov dec mov sbb daa fwait or icebp jno dec add lcall jns fadd add xchg inc outsl mov (bad) jbe fcoms femms cmp scas pop jg adc mov add mov sub arpl mov idivb add sbb pop les jecxz hlt rcrb xor inc clc mov adc aad call dec mov scas pop jle inc (bad) cwtl adcb add inc and data16 repnz jbe dec repnz gs mov nop inc lahf loop mov dec loopne mov fiaddl jno or sub or mov jae add add dec (bad) repnz les add imul add add push (bad) cmc cli add fistpl imul and psubw push jmp sbb adc or mov mov ds add insb pop in jbe xchg add lods shr je add pop arpl out (bad) pop add mov mov or iret sbb mov ss push push push pusha jle imul movsl push adc fsubrl out int divl jl lock (bad) push mov loopne ss add xor pop or (bad) sbb movsb lret insb jg cmp add pop mov and adc dec js in mov test nop incl loopne and inc xor adc push dec add flds push repz xor aad dec stc xor aam or sbbb aaa pop dec cmp jl (bad) add sti out and cld xchg sub mov cmc addr16 push sbb mov or inc xor roll sbb repz rcr add daa in test in or lods inc mov add (bad) aaa mov dec mov mov je js mov push add dec aaa les mov push outsl fwait jp shlb push int pop popf and cwtl sahf mov test rcr (bad) push sbb adc test ret arpl and in test add mov push add out and cwtl adc dec cmp out or add add cmpsb xor pusha or xor inc sub xor add notl aaa sub add cmp mov xchg add cmp movsb int dec sub add inc dec mov js lods out push push mov je pop fmuls add loop inc bound mov test je add adc pop jmp sarb in adc or ss les or dec add js aam mov adc mov movsb and daa adc mov mulb je cmp cltd pop xchg rclb and or jne jmp pop pop inc pop push push sub jns sbb das (bad) ljmp test rcrl xor and sub jle jo adc or nop cld add in add pop sbb push adc xor bound pop fisubr lret or push aaa add inc lods jbe stos out cmp rclb xchg inc addb jge or arpl pop inc je sbb setnp or (bad) popa rolb jbe inc jnp xor stc sbb mov pop mov push (bad) int3 andl cltd in sbb pop sbb insb data16 incb adc fwait loop add ret xchg mov cmp roll negl faddl mov cwtl mov push in jmp xor or add inc sbbb and repz add test (bad) xor inc pop add test xchg cmp das xor push add mov push mov mov mov or mov mov stos add and push cmp add pop cmp add (bad) mov add inc push fs cmc mov sbb add stos lea es inc into add fimul adc xchg test mov lock or mov ffree add ror mov es fmuls pop jl sbb test (bad) xor push dec iret add mov cmp mov jecxz and xor push (bad) nop lods das push or adc add add fistl and adc rorl add mov xor mov add xor fxch movl rclb push xor and sub sub push ds mov aas pop lods mov aad add stos stos push xor decl mov add sub lret stos std adc lods in stos call ret aam sbb out sub das aad fsub add mov test outsb add sahf inc add imul xchg test sbb insl iret jo dec and add inc add cltd mov scas aad inc mov add dec je test lock push sbb jmp lock inc add fnstsw jb aas add mov movsl lea fstpt xor push xchg mov adc mov add aad push gs jb add leave or adc adc or sti sbb add mov xchg in jecxz aad fs es pop dec pop jo add std pop int3 inc dec shlb adc add gs pop invd jl outsb add lea jle cmp fild adc push outsl jo out cmp pusha clc push and push cmc add lcall add mov mov movsl mov aam add imul add popf ja int addl jmp or sbb repz mov mov nop push add or or xor fistpl pop add rolb mov rcl dec jo add sar test pusha test jecxz xchg dec mov adc push sub sub (bad) rol push idivb mov loope dec movsb sbb push test xchg inc bound and jns outsb in loopne or xchg jecxz dec xlat and je pusha enter jne cld call pop mov jecxz jle adc out (bad) fs cmp or lret pop and notb mov inc xchg add xchg push les push mov jp pop add push cmpsb jb and pusha sbb pop xor cmp aaa and fcoml add dec inc shrb cmp ds adc xor xor push push jns cmp xchg adcb pop add ret or mov mov and call outsl lock push cltd mov add or pop mov lret push mov dec hlt xchg adc sarl inc pop cmp mov call jle roll xor imul mov mov push popf xor daa incl aaa xchg (bad) xor or dec dec pop cld test (bad) mov lret mov jecxz cld test mov mov in pop cmpl add test mov pop push mov ds mov mov lea add xchg (bad) lret mov out sub push pop (bad) icebp push roll or sti jg xchg add test imul lods mov (bad) adc jo xchg add loope int3 jl js rolb or mov sbb imul adc push dec and add mov sub pop xor and sti (bad) jmp dec add lcall add add mov push loopne add mov icebp inc fs mov mov jbe jnp push add jge lods (bad) jl add stc popa arpl cmp pop rcll pop and adc add adc faddl popa sub out dec inc pop add (bad) data16 or mov shll mov cmpb cld fimul cmp arpl dec mov pusha or xor lods push popa out (bad) pop mov clc sti repz int3 lret subb xchg xor mov add shrb add lret mov test jle add imul lea jmp pop or xor jb sbb fsts enter sbb inc cwtl test sbb push iret mov roll xor lret jmp jo add inc jae sub stc lea xor dec pop lahf sarl add dec mov out faddp xchg and or push xor pop cwtl ret in add repz clc leave cwtl out and jp lock (bad) in imul add jb sbb push fsubrs jns add je dec gs and jp andl add stos mov sub andb dec push je popa inc mov fcmovb outsb cwtl xorb sti sbbl and ja cs int3 sbb shr add lock rol (bad) mov push lahf pushf inc dec push xchg ret adc add and sub lock add aad sub dec lea sbb pop pop mov test js or cmp sbb xchg cld xor inc (bad) mov push add daa inc into lea add push mov or insb xor cs add arpl inc adcb jns test and inc mov lds cmpsb cld std mov loopne or gs call jno xor or adc add jae aaa fisubr int and inc sub repz jo leave and add ret and std ds aas clc xchg pop cmp lock add and stc mov jnp sbb lock dec adc hlt push inc daa mov inc or push and dec cmp repnz inc dec add cmp mov cltd or or cmp add dec dec mov sub xor jo add in jle syscall cmpsl (bad) test faddl aad mov sub lock xor shlb and xchg push add mov mov pop mov les xchg test adc add cmp add aas incl dec movsb sar pop clc add scas or cmp dec pop stos repnz add xor xchg add mov push add pusha fimul into add mov fsubl or add dec jp loopne frstor add (bad) jne xchg sub cmp arpl jecxz test add sub divl add aaa or sbb pop dec xor leave cmpsb xor in rep addr16 add adc adc and add dec daa sbb and shrb jb add out stos bswap push scas adc adcb imul in add pushf fs mov insb lahf xor aad icebp dec and lret xchg test jmp scas add loope fcomps fstcw jmp lret sbb xchg popf cmp jmp cmp and ret mov push arpl and or inc xchg cli hlt and adc add rol mov adc add shrd pop add test int fdivl (bad) jmp lds add in iret nop ljmp cmc js add xchg mov imul add bound fmuls add int3 or dec aas rcl jl orl in les xchg mov dec cmp pop popa add jo in int ret sub xor aaa xor aas or test repz or movsl push mov xchg loop adc xchg or repz in pop pop call pop mov fs xchg inc adc adc stos cmpsb add gs mov sub fsubs push cmp dec and leave scas imul sub inc pop dec lods je adc stc cmp sbb fiadd add dec jns adc mov jmp pusha adc in add jecxz sbb std out sbb out cmp roll cmp stc (bad) xor add loope jnp pop cmc xor out xor hlt cmp jp cmpsb test mov das jl cltd adc push enter loop roll pop add add (bad) in jns testl loop cmpsl aam sub stos cld dec in je sbb add (bad) push add rcrb movsb (bad) sub ret add aam inc (bad) call pusha add mov int3 add mov faddl push out mov pop cmp int (bad) sub inc add das jg sahf insl scas add mul mov xor test push loope adc adc and or addb popa xor ss adc orb rorb add iret sbb mov testl inc xchg enter das mov out adc add mov sti int3 sbb ds push les or add jb inc lcall addb (bad) cwtl (bad) outsl and pop movsb pusha (bad) out jle add out in xchg mov xchg addr16 out adc pop fistp (bad) jno hlt add adc fnstenv pop mov ficompl xchg daa add pop sbb inc xchg inc and add jle bound cmp sbb xor mov inc sbb push sysexit aas dec push (bad) ds inc ss push add pop stc int jne int3 divb or mov (bad) fstps pop test dec mulb nop rolb stos mov sub std push sub push bound test add xchg insb add jo mov xor cli inc or div nop or pop aaa fldenv sub inc int3 mov mov xor ret add js cmp pop je cli shll push and mov xchg cmp leave dec pop xchg xchg subb insb and out mov outsl lahf mov pop pop das dec or js and aam lcall adc lds sub test sbb int3 cs repz imul and add mov pop test cmp jg mov dec mov outsl pop lods push and mov cmc add or dec push sti cwtl add xor inc cmp xchg sub xorb add mov dec push xchg xor out lock inc fwait lret push inc cmpsb add or es rcll shlb mov mov sbb add dec nop or inc add stos jne add adc xorb add mov mov addl cmc mov movntps sub mov rcrb aad jne push stos inc test adc rorl arpl inc cwtl dec scas and fdivr add jno pop add add mov (bad) test stos in jmp jp jg or aam jge inc mov inc adc adc mov pop jno add aaa insl adc addr16 add pop fldcw jecxz mov incl add outsl mov push addl mov jl cmp mov pop outsb cmc sub add inc jns dec gs or out fldl fstpl or jle std (bad) fstl test add sub sbb dec mov popf jp stc andb push jne js or or in lcall popa and fcom fucomp add and sbb imul xor jge push add sub int and pop lock insl inc outsb and or add (bad) aas pop ret mov jns add jl cmpsl pop mov sahf sarb add daa xchg or iret cld xchg jg cwtl jo xlat movsb (bad) cmpsb shlb push roll rolb addl outsb nop or (bad) dec pushf push inc cli clc sbb in mov stos push xlat mov fild xchg push lods or cmp rcrb ljmp les pushf sbb sub addr16 incl xor cmc xor push dec add fs cmp flds pop dec insb or add jp into push loopne int3 add jb leave hlt fs push jecxz daa sbb sub (bad) loop and inc mov add sub inc les pusha sbb add dec add add flds dec dec (bad) insb xor push add pop and mov adcl lock les push push xchg inc jl (bad) repnz lock add or sarl dec adc dec pop nop dec out jb fld1 push gs cmp aas adc in mov jg lods or xchg lds xchg rorb cltd xlat or ret add aad (bad) mov sub js dec iret fdivl xor sub add sbb push cli adc mov mov adc stos call shlb xor dec movb test fcmovb cmp sbb xchg bound pop adc les xchg sub pusha cmpsl cmp inc jo jge mov xchg cs pop push push add iret inc test js pop imul in lret shrb hlt pop into add jno add outsb out jae push jo sub mov sarb fdivrs in sbb cwtl orb pop xor je or pop jle sub add xchg mov jne (bad) xor lcall add xor dec movntq out (bad) pop idivl cmpsl mov shrb dec pop add ret cmp or jae js ss and push sub mov add mov jmp lret (bad) (bad) test xor add jle mov xor hlt pop pop push or mov push outsl jmp cmp mov sbb add cwtl imul sbb or pop data16 mov dec and dec jnp xchg mov (bad) mov sbb jo test divl cmp xchg clc push jns stc adcl (bad) movsb (bad) or ss fcomi adc pushf pop std inc xor xchg jle and xor dec cmp test jle fisubr adc push js add sbb popa es data16 cmpsl xchg mov or pop pop mov add int3 or ret adc sub xor pop or movsb (bad) popa orl dec enter xor cmp (bad) nop lock add hlt adc or enter outsl hlt ror xor add mov mov es repnz adc punpckhwd xchg adc dec xorb cwtl sub pop mov push pushf stos fisubr sbb loopne clc xchg js call add dec push bnd and mov sub add popl es repz lods dec jo fbld test xchg int test or push jns inc gs mov and cmpl adc add adc mov sbb dec cwtl or inc f2xm1 shrb call or sub mov inc popa add (bad) sbb test scas push push xor lds xor mov stos test in nop push adc add pop ret sbb pop add dec add xchg mov hlt pop jb cmp ja repnz mov hlt inc shlb fild add lea inc rcl inc add jmp cmp add jbe or loop add cmpsb and mov dec adc fsub sub dec jo ffreep js xchg ficompl mov cwtl repz arpl shl cld add ja cmpsb test and faddl mov dec rcrb mov adc inc and int3 xor data16 mov or add icebp mov xor pop mov mov add call mov sbb xchg les and pop push cld add movsl lcall fwait push xchg push or movsb xor cmp or nop xchg push mov mov ret xor xor mov test inc aam push fcoml xchg mov scas add insl inc dec adc fcomip add outsb pop pop out add call dec add push mov fisub jb xor scas gs lock dec in ret inc mov pop dec or (bad) inc cmp push jl cmp insb cmp mov mov push dec imul dec cmc pop and push insb add imul int3 (bad) sub rolb push into sbb ret cmp imul adc icebp repnz add fs pop pop or inc mov in mov cmp xor dec inc (bad) int3 xor sarl adc adc shlb mov xor frstor pop ror push loopne mov out push push mov push mov inc popa loope xlat inc cwtl rorl js js adc mov ficoml push mov xor add inc cmp cmpsb adc or ja xor add sbb mov jecxz push gs jmp jae mov jp push test inc loopne test xchg fnstsw (bad) iret mov xchg xchg xor mov dec add int3 ss xchg jbe push or jmp ja add fadds mov add outsl adc push test xchg dec (bad) fdivr lock lods loope (bad) mov or mov add bound (bad) mov xor add lock cmpsb mov dec mov inc enter cmp inc sbb xor push nop sbb sub imul bound add xchg loope lods rolb xor push mov divb pop dec xor out movsb xchg adc push pop push adc add push test ljmp test xor clc add jecxz movsl daa adc mov pop out push jo mov mov clc push add mov aad arpl add orl push sub lea push rcl sbb int3 add xor push std mov sub pop popa mov add push imul push cmp cmp loope out cld lods shlb xor out xor popl add or dec sbb xor sarb test loop mov xchg xchg jno cmc int loopne mov dec jbe mov or and add adc fwait or xor and lods adc add fdivs in xchg mov or cmp fcompl adc xlat dec adc aaa mov jo xor or (bad) inc xchg lret je cld add lea in enter adc ret hlt lock pusha add push jmp cmp xor add jmp daa loope mov test mov xor in mov hlt addl fdivrl leave or test dec adc cs mov mov add aad dec shlb xchg sbb push pop or jnp dec lret mov shrl push cmp movsl mov and sahf xchg and enter pop mov ret movsb sti ljmp cmp hlt inc jmp or sub push les push jmp mov rolb or dec add mov hlt pop cmp les loop cmc (bad) mov dec pushf cmp push pusha jl loop adc clc mov cmp in mov cmp mov add inc popf cmp repnz xchg jmp dec pop push lock aas sbbl push loopne or std gs push movsb push jns add insw lret add xchg cmp test mov and mov loope jbe pusha push rolb or mov cmp int3 push and or push dec mov mov push jmp fldl mov out inc cld xor mov shrl sbb js sub xchg bswap in adc popa or movsb pop mov divl xor jnp add pusha or inc movsb sbb lcall add mov jbe cs fsubs jl dec movsl icebp jo xchg pusha and push mov aam int3 aaa add add stc xchg (bad) dec js pop adc ret xchg lret movsb mov test fwait aaa cwtl aaa cwtl and cmp movsb leave xchg dec and cmpsl popf mov or dec xchg pop mov jo in movsl xchg mov pop fisub or out lods pop das pop sbb inc xor xchg dec lock add mov call sbb mov clc or sub and jecxz or mov add lods sub sub mov subb adc imul decl loopne movsb cli and mov jmp or jne xor gs int3 push test call fldl sub xchg add pusha inc pop mov push dec mov sar pop dec jg pop mov pushf sub frstor mov inc in gs mov jbe adc xor aad movsl fcoms xor add or loop dec cmp test add add mov std sub pop xor or push (bad) push xor mov or add ret push iret fs jns leave push addr16 inc nop and dec in js or xor imul adc (bad) xchg jmp inc in cltd push xchg mov mov or push xor movsb xor adc and jnp loopne idivl mov fimull les xor xchg rolb rcr sti mov and pop inc fidivr add lock mov mov mov or cltd push or xchg movsb sbb push lds in orb gs dec add inc lret int cld out es insb add adc add or mov adc mov and (bad) sbb js mov xor jp xchg mov or add sub inc into clc mov clc pop mov leave add popa push inc fild faddl arpl sub and test xor push nop popf test dec dec add sub and adc adc fdivrs adc mov push jp inc and jmp mov inc pusha and adc (bad) and mov or cmp and lcall in repz xchg roll and scas xchg lods sbb orb sahf add sti push cwtl pop adc pushf imul (bad) xor imul inc push mov mov fwait jno pop adc in insl aad fdivrs add loope movl mov add mov fwait pop lea fisttp loope and or add pushf xchg adc das int3 rolb mov lods pusha push loope or push mov int dec add notl stc popa add add xor insb icebp shlb dec adc sbb sti add cld fildl pop mov dec xchg call sbb adc jmp (bad) into lds test mov cmpsl push add xlat adc add push sbb and add imul cmpsl or cmp das call pushf rolb push adc inc lret ss inc push mov pop les jno lock je pop pop mov test mov mov xchg (bad) ljmp test and jb (bad) jp invd fbld arpl add inc nop lods xchg pop lock sub call push dec icebp mov clc and push mov repz test sub xor xor loope les andl js mov cmc sbb xchg add (bad) adc add xor call add (bad) jmp xor and add divb cltd push sbb add mov loopne stc push fldl (bad) pop lock add push adc lods sub jnp pop xor ja in sub or dec into mov daa cmp xchg out in add cmpsb icebp enter add faddl mov scas scas int3 add xchg sbb mov xchg and sbb and adc xchg int ror push nop xor (bad) mov sbb inc sarl xchg push (bad) lahf fcompl cmp in add inc les adc xor std push movsb inc outsl fnstenv fwait aaa setns stos pop js add imul inc add test nop add fnsave dec mov sarl test sub (bad) lret dec cmp lock dec xchg fsubs mull add or jae sysret mulb aam (bad) faddl enter nop test mov rcrl aaa add sub cld loop adc inc sbb nop aad xchg pop movb stc push loope inc jbe jns add ret add push push add sti mov test ja xchg inc dec jp hlt aas jnp (bad) push pop rcrb push clc mov sbb or jle fldcw add mov mov repz (bad) leave pushl mov sbb pop in gs pop lret test xchg push push sbb xor cmp hlt test pushf (bad) add sub cld sbb pop cltd sbb into dec push inc addr16 mov add dec push inc push (bad) adc sbb or addb psrlw iret or xchg jb add pop nop xchg inc call sub cmp inc push (bad) cmp nop sar dec push adc inc jle add add fs sub xor inc jnp loopne mov mov or leave dec cmp adc dec int ja add cmp (bad) int3 push (bad) je mov andl jns in popa pop adc jl sbb cmp std outsb imul or jns push mov add ss call enter mov sub inc sbb mov in mov (bad) or adc cmp movsb ja xor rclb rolb lods inc or mov add xchg (bad) mov aad shll movsb mov das addl sub push xor lock popa cmpsl dec add test mov lahf cmp mov adc (bad) jnp or inc jbe out loopne xor jp fsts add or aad add cmp sbb fistl push or fldcw test jns cmp adc jg packuswb pop ja jno pop inc les mov add dec pop pop or imul pusha xchg hlt jne data16 push and faddl push sbb xlat jle add adc dec cmp add or add outsb add test pop or and jle cmp out pop pop jl dec jne cli call dec ja clc out (bad) pop add or pop cmpsl xor adc add dec adc movsl ds push add pop adc in add es mov add iret leave shrb roll loopne mov jle (bad) loop dec or mov rol cmp mov pop loop inc je dec push jbe add fwait pop lret add push test mov pusha inc cmp jno dec imul loopne lret dec bound or jns push add pusha adc cmc fstps (bad) clc jns ja jle add push mov dec nop pop jbe mull cld enter hlt push push lret or dec (bad) jb sbb repnz push mov pushf dec outsb add cmp stc jge popa mov out add (bad) icebp xchg push ret lret stc mov jo aas dec insb cld add dec sub xor sub and (bad) popf jl or (bad) mov (bad) loopne xor pop sub sbb ja enter add jbe (bad) sbb (bad) jo add mov mov adc cmp ljmp pushf in adc add pop xchg and pop pop bound add inc push inc data16 lea dec andb fadds aad pop add sbbl add stc lods clc sbb jbe sarb movsb mov xor inc pop bound test lret adc fisttp aaa push mov or push out in jno or mov and mov xchg mull jecxz add xor in add stos xchg sarb dec add in outsl mov push enter sub pop popf dec lret orb mov xor push imul cmpsl mov je dec add add mov iret add mov and stos or lock add sti xor xor das xchg test (bad) mov leave je mov add pop lods in mov fnstsw cmp add icebp sahf mov xchg add ret out cwtl movl xor or sbb sub dec pop aam sbb adc out ja cmp les pushf int inc or sar hlt sub ljmp dec call notl cli lahf add pop lea rcr loope mov xchg pop fadds call sbb jb div ja lock xchg add mov movsb in sub test xchg mov mov cmp push mov dec fimul in jnp fwait inc in add rolb (bad) lret jo sbb mov enter add test js fistl inc cmp ret mov push imul mov pop add cld cmp mov test sarb int add rclb add jge cwtl repnz call mov mov and gs pop hlt mov mov das pop or loopne aaa xchg popa imul lahf add jo sub fidivl (bad) mov adc jl popl xor lods xor pusha jne inc por ss test add decl lock in mov in sbb lret dec stc add jno fs int3 add fcmovbe adc adc sub shrl xchg xor add jp (bad) lahf and sub aad int jb movq add push mov add cmp cmp sarb inc fiaddl dec insl and inc das push inc iret mov and movsl adc jb imul pop adc test add pusha add mov dec pop jnp add daa fwait mov rcrl jmp sbb jle mov add (bad) in sub jmp jno dec xchg clc xchg fs addl jl shrb pop mov adc jp add aam loope jnp add lret out clc or loop mov jl adc addb adcl nopl jmp inc outsb lock add lods loope les sub xchg mov inc mov fiaddl clc arpl lea jl mov mov or repz push loopne rcrl pop es add lret inc cmpsb pop add push push dec (bad) clc subl cmp jno add int3 add pop daa jne adcb leave lds cmp idivb add sbb in out cld lods adc add clc add push insl clc sub cwtl stc in and jo cltd fcmovb aas das loope clc (bad) mov sarb add xor loop sti sbb xor cwtl test movsb notb dec in pop lret pusha rclb fs jns cmc add jmp mov leave add xor mov mov mov sbb sbb inc add lcall pop repz lods inc inc add pop and add scas push sbb pop movsb cmpsb push cmpb pop add xor adc add (bad) pop lret ret clc cmp (bad) stos aaa add or sub dec xchg std mov iret (bad) jmp test bound dec outsb mov popf pop adc adc fildl mov push leave jno aam mov (bad) add dec cmpsl pop mov (bad) dec add icebp fs sahf jbe (bad) fildll addb fldcw or sbb sbb mov in cs and stos dec add hlt imul idivb fisttpl fmuls addr16 jp sub add mov rorb jae jp ljmp push inc test push orb les add xor add outsb fsubrp (bad) jo sub aam add call out arpl xor loop in or loopne gs mov xor adc aaa lods repnz movsb cld enter int sub ja clc or cld nop orb add sub or bound sbb std aad add lahf (bad) dec lock pop mov (bad) es push ss adc out lret xor pop (bad) gs fisttpll fbld sbb jg cmp add cmp (bad) add xor add in inc les loopne (bad) in es ds movb iret xor mov ficom add movsb pop jle mov pop mov pop loopne pusha add faddl mov popa in adc sti cli push cld (bad) repnz cld inc or aam pusha int3 xchg div pop out leave adcb mov add mov or sbb fwait and or stos xlat mov xor mov sahf shrb inc mov into ljmp rolb cmpl add cmp mov and cld mov jg pop cmp pop mov lds (bad) hlt push adc cmp cmp adc enter fildl push add add jnp scas xchg lds mov push lock roll jns sbb lods fs es push pop inc outsl cwtl lret jbe add or xchg lock add jg jnp mov pop add out mov dec hlt and xchg push into add jecxz cmp out test add and scas push gs add add repnz adc insb sti mov push xor jecxz mov xchg pop sub sub orb xorb aaa add push lea popa push jo in add add repz cwtl int3 std mov and scas fldl add add sbb pop lods mov popf je xchg push (bad) fcmovne add pop mov or roll mov fstps xchg sub (bad) ss or ljmp add mov lcall loopne sub out fldl pushl mov test mov add push push sub xlat mov pop scas pop addb negl cmp stos cmpsl lret and xor jl add test sahf push lret test push and shll mov pop mov or dec mov push vcvttss2si cmp outsb add sub push mov loop hlt iret sahf ficoml inc add cmpl sahf add cmp mov sti outsb int3 mov mov mov sbb fmuls add add mov mov add fistpll add mov sbb adc pop push cmpb daa rcrb jmp adc test jo pushf add push mov cmc and rolb adc loopne pop dec mov enter popl cltd jno lods dec cmovne xlat leave (bad) mov fistl mov adcb pop adc xchg das fsubr mov add sbb xchg xchg mov xor jge dec push stc push jmp jae mov adc fisttpll out rcrb iret pop add js (bad) pop in cwtl cmp stos add fist jnp add cwtl push mov adc loop and pusha aam dec repz or test push xchg mov je repnz hlt add add out or jecxz dec cmp pusha ret aam pop loop es push push cwtl push lea lds jns jns add mov jo das repz or add jbe in add lret icebp adc dec pop rclb cli adc lret cmp mov adc cmp add negb sbb mov add push rcl enter rolb mov xor pop dec fs jne lock push cltd inc add cwtl dec mov inc js into cmp mov cmp push push ljmp andb (bad) sub push xchg sub insb add loope push mov mov int xlat imul dec movsb pop lds fiadd je and xchg sub int mov add pop or and fadds loop pop fistp ret lods push (bad) frstor rorb jb dec hlt test xor mov mov jmp add cmpsl inc lret add mov rorb pop sub sahf pop push sbb nop fs movb roll cmc outsb mov shrl adc in into adc jae addb inc rolb dec daa rol cs or cmpsb stos lahf add add lea notb dec push test fldl repz add jae cltd pop lods and adc cli imul sbb pop xchg icebp test std cli repnz push mov dec add (bad) je sbb pop xchg (bad) aas mov test jnp inc scas add out ret popa jb add (bad) test icebp sub add adc cmp inc add scas test mov cmpsb mull aam mov ljmp sarl loop add es and inc or lds dec and aad push int3 in in fmull dec add or xor xlat mov sbb mov hlt add cmp xor inc add negb fimull inc mov lea sub mov dec pop jns mov push shrb dec cwtl dec nop int3 add lret hlt mov mov ucomiss aam add jg adc pop pushf fadds lcall add ficom pop insb inc push inc sahf imul ja add push into adc inc pop adcl mov jbe push sarb add incl xor push in cmp mov add or popf mov adc fildl adc add dec sahf jmp lret aaa fldenv and popa pop push add xchg scas addb mov sbb inc js divl cwtl jb push cli pop jns out shlb dec and cmpsl dec int3 xor es sbb cld sbb loopne in sub push movsbl jp std movl nop lret pop add lcall pusha cs push mov sbb pop add scas imul cmc shrb jp or and test mov sti addr16 jge cmp mov orl and dec jl mov leave add fistl mov js pusha or xor jge jp xor mov push inc xchg add fdivrs or js fildl call add add inc enter frstor (bad) and test inc int or dec mov add addr16 jg cmpsl hlt es jle repz inc lock pop aas cmp into mull (bad) xor add push mov lods add lret add inc icebp xor pop adc pop inc idivl int jmp add cmp les adc outsl pop add cmp cmp add (bad) pusha add aam sub lahf jg jne test repz sarb (bad) fadds je sub pop xor aas and sbbl repz mov pop xchg (bad) jb imul lahf lock aam fidiv mov push cwtl test es mov jecxz jbe xor (bad) fsubr add popa mov jae call das mov dec add xor lret xchg out add rol and cmpsb jne add scas add pop roll enter insl lods fadds or add mov dec cmp dec mov mov push jno add xchg xchg inc or popl (bad) hlt mov pop add addr16 nop addl adc lidtl or (bad) out or lahf leave push outsb enter in xor add pusha pop or out jmp inc mov in call or scas inc mov inc mov cmc aas lret add xlat push repz jns clc lock in cmp push xor jb sbb mov inc xor jo push leave mov push fs repnz jae and adc popf dec mov and shrl orl mov jl aas sub xor out pop popl shrb push (bad) and dec add rorb mov ja,pt mov cmp and ljmp js push jns sbb add movsl dec jnp add test xlat sbb add add pop jne xor lods or mov js stc in (bad) xchg cmp add push lock add cltd test add mov cmp mov cmp sbb enter std mov hlt jo add push sti (bad) jo push andb dec pushf in mov (bad) jmp and fmul mov mov sahf push mov and jne loope sub sub incl lret or stos outsl mov hlt je add mov xchg test or xchg add imulb fwait add popf test lods bound adc add fildl rcrb mov add cs xchg cmp addr16 add xchg fisttp ret and mov jo push push (bad) push test test js idivb loopne lds xchg mov add aad jge xor or ficompl lods (bad) nop add loopne insb dec add fsubl nop add int pop adc mov arpl mov inc (bad) sbb (bad) xchg push jge mov outsb or dec mov test leavew js test hlt aam movsl in int3 lret push add mov bound in ja loop dec roll mov dec fisttp jge push and inc add lods add leave sbb dec or pop mov inc xor inc inc mov pop inc sub ljmp imul repnz dec cwtl xor ret inc mov pop faddl mov mov mov dec enter and ret xchg ja xor hlt js fmuls mov shrb pop sahf jb or ret mov xchg aaa ret fwait mov sbb xchg movsb xlat cmp mov fcompl cmove mov add dec and call adc sarl jo add xchg fisub aam add mov fdivl dec scas push add movsl jb addr16 fwait out jns inc out mov cmp in add outsb cwtl add and in inc push xor fwait inc (bad) xor andb pop add mov xor js push pop into cmp sbb inc pop adc mov out add int mov push and jnp lock and dec and xor push leave cmp jno add xor rclb push loop cltd out sbb outsb add xchg cs hlt les (bad) mov (bad) add imul insl jns add xchg cwtl cmp cmp jmp leave (bad) sbb loopne xchg or ss rcll (bad) inc inc fndisi(8087 sub xchg push cmp or orb imul pop mov aaa push mov cmp arpl push in xchg xor call ss pusha adc push mov and fucom add aad stc enter cmp str icebp bound push mov and sbb dec bnd pop imul xor jns xlat xchg push stos cld xchg ret call cli fwait add dec jbe xor roll cld out sub (bad) add sbb sahf or jl mov clc push repnz stos mov xadd scas fdivl gs mov shrl sbb push jb push mov xchg in cwtl scas pop push sub lds daa mov roll inc (bad) mov inc sub (bad) jbe pusha dec mov mov add and ud2 iretw sbb inc xlat jno addr16 call mov push mov inc jbe jnp mov pop fwait lret sbb and (bad) cmp loop sub add or mov jns rolb arpl dec or and icebp insl xchg and add jmp sbb push dec mov mov das and test stos rcrb gs into xor xchg sub test enter jg or push jge sti or mov sarl sbb ja dec add adc xor mov and in add (bad) cmp cltd jl cmp and xchg push or add repnz lahf or popa fnstcw out add mulb dec mov cmp mov in add rcr arpl sbb mov or sub xchg mov add not push sbb add call lcall sub mov sbb cmp xor xchg add xchg xchg decl ss loop ljmp jo js enter xchg sbb fsubr sub (bad) sbb (bad) enter jnp pop xchg mov stos movsb dec xchg jp in add lods int daa xor sbb jnp in shlb jecxz inc inc add cmp or sbb lods pop idivl sub fmuls sub loope mov fwait loopne add mov les popl or xchg and (bad) mov dec faddp mov add fcoms jno cmp push or cld xchg mov test add sbb in loopne mov in cmp pop or jl and mov imul push add lcall add xchg push push (bad) jns pop jge add dec pop ss icebp repnz add mov ja add add inc mov push sub js pop mov cmpsb xchg cltd push sub push lret mov add lcall pop adc push cltd mov lock add aam popa outsl mov pop (bad) pop mov lock pusha dec loopne mov out push enter loopne xor dec pop add add stc out pop mov cmpsl inc sbb dec es ds add xchg xor add nop mov cltd cmpb scas not addr16 sub sub (bad) sbb fwait dec or test adc xchg add sbb add pushf int3 cmp mov jns addl cwtl addb add popf sahf in std negb jne add mov and mov jno sarb add push cmp add int addb add sub ret add mov adc (bad) pop mov push sbb add inc pop rcl mov xchg lods sbb jne loope in jl add mov add (bad) fs mov dec add add ret add (bad) dec and cs (bad) sbb mov xchg lcall aam push lods mov dec loope,pt dec xor cmp mov pushf jmp inc in sub stc jne add fbstp sti (bad) jl (bad) cmp stc add jp test or cmp add xor cmp mov add cmpsb jb fisubr xchg add (bad) std out push mov jecxz test js or add movb cmc fwait (bad) sahf lret xchg mov pop in insl xor ret mov into pop adc mov add sub jg or ds pop xchg push iret (bad) add out int3 insb loope (bad) pop rorl pop dec and add sub (bad) clc add cli repz xor mov add cvttps2pi cwtl adc and in pop add xor mov push loope (bad) xlat inc pop inc add xor adc ja dec test or mov cmp rep add lods add les or adc (bad) xchg xchg add jo pushf test pusha add add out sbbl (bad) or mov add pop mov in add hlt push sarb scas add pop mov data16 jp sub pusha pop test adc push fldl fiaddl sub mov fisubr stc mov lret xchg cmp (bad) repz in sub and insb mov cmc js and push repnz add enter add rcrb add pop mov xor mov cmc sar sbb pop mov or push jne xor mov mov fstps mov data16 dec ja int3 aad std ljmp pop jmp add ljmp dec mov dec pusha xchg mov inc imul loop mov cld jne and inc mov clc dec pop jbe mov rclb sub and test clc pusha faddl fcmovne mov jle inc mov inc repnz add adc push orl dec add jno je add (bad) movsb jle lods and xor or add negl aaa lods cs add lods sub fwait iret test push xlat inc or imul pop or push mov mov push sahf pop or sub stos sarb sub addl imul adc push ret aam movl mov mov or pushw sbb xor xlat mov mov inc jbe mov dec (bad) dec pop dec pop aaa outsb dec icebp (bad) js rorb gs mov push push popa dec push xor cltd add (bad) xchg jg pusha stc rcr divl pop repnz sub xchg add mov fnop (bad) cld mov fld stc mov add jg (bad) out push xor insl inc inc push mov inc sub test add cmp inc xchg out sbb xor fs (bad) cli mov aas xchg inc push lea fnstenv pop sbb mov mov mov cmp mov rorl push mov and push es pusha (bad) sub add xchg mov sbb add inc add popf andb xchg rcll dec pop (bad) int3 pop add fnop outsl jge cmpsl ss inc add inc inc pop insb lock add fcmove rolb jo not pusha push mov test and (bad) push nop xchg add adc mov lret out in aas add sub jae add inc inc (bad) xor mov and lods (bad) data16 fcomps rclb mov sub add stos inc scas mov icebp rorl (bad) pusha add adc sub inc rclb xor into add sbb xchg sub (bad) ljmp imul add or jbe mov mov iret sbb dec jle (bad) pop ljmp int3 add cmp movsb call xchg inc mov pushf mov add test xchg sub movsb dec aad push cmpl sbb and add mov add mov clc jmp add fwait push iret cld cltd push dec sub mov and aam add adc scas out push cli stos xchg test (bad) inc into rcll jbe xchg add in (bad) arpl and inc pop (bad) scas cmp dec loopne push sbb add jb mov mov adc les push cmp shll adc and xor dec sbb outsb add je push add fnop jg xchg lock cmp sbb dec push adc fs pop jae insl adc nop add sbb push add push adc pop mov clc sub aam push hlt mov bound sbb dec loopne mov inc sarb adc or mov sbb dec add push pop scas jg test pop movb ja shr push mov sub in inc icebp push mov and in inc xchg fidivrl dec out test outsl rorl mov enter orb mov mov ret aas dec lahf adc dec cmc xorb push pop nop sbb int3 add icebp movsb ret inc mov stos fidivl adc mov loop cli scas shl lods rorl stc xchg (bad) add test insl js or outsb rcr push dec or add ljmp mov rorb aad inc adc nop mov pop mov pusha je add mov ss adc mov push pushf std outsb sbbl dec fnstsw mov imul add mov das iret fsubl pop or daa jmp xchg add xchg sbb add xchg lret aas cmp sub int3 or dec cmpsb jb add xor adc aam in mov pop fldcw dec mov gs lods xchg cmp lock push add outsb xor rclb sub lds pop push (bad) or ret mov add test jb add (bad) add das push cmp iret add lea fildl mov clc into mov push sti data16 das shl es add xchg daa in or lods addb mov mov pop mov or das scas push dec mov movb mov int3 in mov pusha add rclb ss call mov aam cmp push sbb (bad) jo sub aad push jne popa std notl add inc stos mov add xchg movb or jl sub jle mov dec scas arpl lahf cmp add inc gs in leave aaa sub adc aad sbb andl mov enter add sti pusha addr16 or inc mov sbb bnd add adc sahf test cmp jp pop aaa ljmp pop mov rcrb dec mov jmp dec push adc out push aaa outsb nop mov add pop push mov sub mov xor jmp add adc cmp gs out sub add xor loop and movsl or mov fs pop mov cwtl xor and add repnz pop lock movsl cmp xor xor outsb sbb enter sbb dec popf xchg or fadd loopne aam shr add popa (bad) mov add cmp dec pop jecxz cld outsl addr16 pop inc or push push mov jl rolb dec lock pusha mov add cmpsb cmp movsb adc int3 xchg pop add push jp imul bound jne iret pop loopne ljmp lcall shr nop test xchg or add mov add xchg psubq add popa inc push dec les cwtl mov cmp fimull imul pop cld xchg xchg pop cmp scas pop aam add or jae fadds test imul fdivl jg repnz aam xchg mov sub add test sub aas lods addb mov push and cs loopne mov dec add int inc mov movsb jbe xor clc and (bad) cltd mov and loopne xor pop sbb ds push mov or jns loope test mov in cmp push add js inc repnz jle push addb pop dec push clc popl sub in hlt cmpsl cmp pusha dec js inc fsubrp or add add daa and adc pop data16 sub mov xor inc push fadds adc (bad) xor pop shlb add xor jbe test or adc jecxz js sub push sub push and add imulb cmp loope jmp stos inc test cld jecxz add sarl rcrl xchg movl leave sub add jnp jns sub or (bad) jnp add cwtl pop jb dec push sarb dec add xor add (bad) xchg and aaa add movsb rcll aam xchg outsl movsb fld ds fadds xchg push adc test outsb roll mov out out and push xor push mov adc jecxz cwtl dec ljmp jo jg xchg aad add je mulb ret pop call push sbb xor mov (bad) icebp repnz popl jg cmp in push push out sbb loopne push lods pop jle mov jnp xchg jo faddl popf sarl fsubrs mov push ja js fisubr mov or jns add das out cmp cmp dec inc sbb scas icebp inc inc adc outsb ja cwtl jb mov cs btr sbb adc fiadd pop aam and mov adc jo xor xchg mov mov add loopne fdivr push cs mov push pop adc and repnz push addl pusha pop mov mov add icebp jl mov pop dec hlt jae push inc je stos out and ret out or mov int3 xor notb loop rorb addl dec mov add inc mov add mov cmp sbb es stos xchg and cs sub dec add cmp cmp dec mov gs sbbb js add fldenv mov xchg or aam mov mov pop and bound sbb inc mov add dec je sbb inc adcb test push add pusha out jge pusha sbb ret fnop dec cmp inc rcll jp insl js fmuls call scas xor sub mov or fwait dec cmp je fs sub mov xchg imul push inc sbb nop fwait js mov cmp add or add dec pop add mov push dec (bad) jge inc mov jmp jg jl xor stc push imull rol mov dec or xor add dec rolb mull jae add sub inc popf and in lcall pop aas xchg test aad xchg cld adc jne fmuls sub in stc add sub enter dec imul int push ds orl dec add sub (bad) adc int pop xchg push dec in jl aaa call ja mov add inc sti sub nop imul fcomip pushf sti arpl push add mov or cmp dec xchg pop add pop clc dec add sbb cwtl (bad) push imul sub mov pop sbb or cld cmp sub shlb lods insb add jbe rclb (bad) dec sub outsl inc and sbb andb and adcl notb cmp jne (bad) push loop (bad) je dec jl add clc fcomps aas scas loope cmp mov xchg cwtl adc (bad) add jo cltd mov pop pusha call and fld or adc js sub test and or xchg loopne jmp mov add lods in test daa in add test cmp inc rolb scas or repz dec fcoms adc or ret clc add out pop xchg fisttp popf jle scas jmp imulb add sbb iret add aam xchg mov sbb dec rclb push mov pop (bad) jbe mov pop inc pop push and enter add dec push mov leave nop mov ss mov aad push int pop jo add or imulb out dec mov mov xchg repz mov loopne mov adc jg add jo sub repnz in (bad) hlt (bad) jbe jo jb out mov jmp xlat cmpsl or push mov dec fiaddl in jae es outsl push or xor dec xchg sub cmp cld push xchg mov mov jl xchg add test in add inc pop push xor into les sub push sub mov xchg adc sarl in jbe sti push dec int3 pop sbbl enter jb mov and inc add xchg jl in addb pop iret cs ljmp test insb inc or in add push sti pop int3 add jmp ds add or jecxz push push mov insb adc push mov imul inc dec jmp loopne and fisubl sbb add pop jb clc sub mov or add jne stos pop mov lock (bad) mov cld inc sub test dec xor (bad) mov and clc pop mov pusha xchg cmp frstor push push (bad) clc push xchg lods nop mov stc sahf mov mov rolb inc push push fadd jnp cmpsl call sbb or outsl xor xchg sub mov fldl push test out add addr16 (bad) in or jnp jge add xchg add jnp fstl mov pop mov inc jl lret add js fdivrs cld enter push inc aaa xor mov ret mov pop (bad) push cmp lods lea jecxz mov pop cmp dec (bad) xchg inc push xor addb inc pop stos jne add mov fdivs hlt stc cs xchg aam sbb jecxz and add push repz lods or sbb (bad) lret data16 pop ljmp pop jmp call jle in cmp aad clc mov dec add stos mov cmp and adc sub pop sbb cmp pop jmp pop nop daa jne mov inc pxor jecxz lock mov sarl cwtl int3 jmp rclb test cmp (bad) push sbb lods stos sub test jo faddl ljmp (bad) xor and std aad xchg xor add aad lcall out pusha imul jl jecxz and push clc rcrl pop insb jo push sub icebp add mov jp fisttp adc cs in lock adc add adc push das fdivs add and dec add jne sub sub daa mov call out outsb fs dec push pushf add (bad) enter notl das pop add iret aaa or add je adc push mov call xor push iret sbb rclb fisubrl add xor loop stos add dec cmp scas cmpsb xchg adc mov sbb xchg or daa mov add pop leave fmull ja xchg ror jp in sbb ret dec xchg aad in mov mov or rclb mov jmp mov pop enter test jns and push lea mov je pop hlt fild or lcall test fmul pop pop pop jmp inc push imul jl add jo add or xor repnz decl xchg mov mov or mov test rolb sbb cmpsb clc add mov xor add or mov dec fwait or mov add jmp mov notl dec push cmp inc lcall adc mov mov push cmp int (bad) into mov stos fcomps lea xlat cmp ljmp xchg nop mov pop and dec mov mov inc mov add adc (bad) pop (bad) mov clc test mov decb subb movb add loop xlat testb add rorl and mov xchg adc in xchg add jg decl fwait mov mov mov adc lods cwtl jns cwtl adc and popa mov faddl pop test add sbb inc aad cmp xor sbb and add aam hlt lcall sub cmp stos add mov lcall inc mov lahf nop lods fisttpl add mov mov pop jbe out adc sub add jb in pop and cmc xchg add pop (bad) aad inc mov pop les das xor pop xchg cli inc inc (bad) std add pop adc mov cmp ljmp jo add dec xchg fbld jmp std rcr mov push repnz add cmp lret mov xchg push cmp int pop dec stos enter cmp add ss insb xor out mov jae pop add inc mov fiaddl rclb or xchg in mov xor popa loopne or ud2 ret mov push lods mov add cmpsl js lods dec inc cmp dec add popa (bad) pop and or loope sub cmp loope pop add std mov mov out cli inc pop outsl or add scas icebp xchg lcall mov jmp or stc dec pushf or outsb sbb push adc leave data16 adc pop mov lock incl sbb xchg xchg pop out (bad) bnd add popf ret add (bad) sti jp xor adcl rorb add mov xor hlt gs shrl jae jno sti inc in or lock add mov test mov lods or (bad) jmp inc mov mov add or mov push jle out addb or mov cld inc pop jne jae adc imul dec adc in add and idivb dec mov and jl add int inc add aam in sbb andb jbe out push daa jnp fildl fdivrs add inc sahf jnp ja cmpsb push popf (bad) lock fadd add ja cs das es enter out add and or popf xchg lret jmp add lds xchg push add outsl popf xor dec jae add xchg (bad) icebp sub std dec aam js and add (bad) out add dec add mov cld aam loopne sbb fisubr push and scas add flds sub push and inc loope cmp pop sbb (bad) xor and adc hlt and cmp dec out add push mov push lea xchg pop jg orl push loopne iret jne mov int dec sbb xchg mov xchg sahf push inc pop mov inc (bad) mov jbe leave adc ss push mov cmpsb popf pushf inc cmp dec add add lcall adc fcomi add or out dec pop xor xor inc (bad) mov rcll lock add xor add sub (bad) sbb cmp gs add cmpsl inc sbb adc pop push add inc pop mov add xor movsb add ret cli pop lret aas in (bad) std cmovo push aam je add add sbb dec nop hlt xorb ljmp pop fstpt push bound push movl and inc jl mov (bad) clc call and dec loopne loopne and cmp adc add cmpsb rclb dec add mov clc jge add and mov sti and out call xor loopne fxch out add mov subl mov push (bad) aad ror sahf mov ja mov add sbb out aas pop sbb xchg enter lea mov cld add test xchg sysexit repnz ret sbb popf clc cmp pop add jnp (bad) das push mov sti jle xor (bad) pushf add sbb test jl lock add fcom jp pop int in inc adc add mov bound adc fcmovne mov mov aas test dec in push adcb xor mov loope add js sub movsb inc test int3 (bad) popf cmp lret lcall xchg add and and mov mov cmp jns rcrb (bad) or sbb je lock and add pop sub push (bad) repz add lret or add dec mov fadds push into and xor in rcl rcrb push xor sbb rcrb (bad) fdivrs leave rorb push dec nop xor in add push popa fs ss mov iret mov push pop mov sbb pop fstl push mov ret and mov mov movmskps test add mov pop adc cli jno and (bad) call mov add add dec test mov shlb dec add jp adc (bad) aad sub add or inc in cmp cmp adc pop mov cmp fldenv or add xor jo add jns cmp cmp mov jbe add jb sub (bad) inc push fildll loope xor pop mov cmp aas addr16 add mov add pop shrb pop jp mov add jae (bad) out sbb (bad) fwait inc add inc orb nop or xorl andb into xor jle popf rcrb add std daa jge call fs cmp out or mov loopne adc jbe cli pop dec test aaa lods jne add sub inc mov sbb div or mov jbe cwtl xor lret repnz int3 add ret addr16 not dec sbb test out or adc fldl sub mov ja or addb loop movsl or shl pop fiaddl lahf rcl mov dec fildl cwtl stc push popl push jle,pt mov jne ss inc mov pusha push sub add divl jecxz shrd out xchg movsl pop gs addb jge push mov and mov add add jmp jb add imul mov ds cmp xchg or xchg push pop aam cmp pop cmpsl test or or gs pop clc imul fnop insb add mov loopne push mov leave push outsl add movsb mov inc sub stos std inc in mov jl add jmp call add paddd hlt sub shll xlat inc lock xor rolb pop add dec ret pop call add mull rcrb xor sbb mov dec cmpsb mov cmp and aam cmp (bad) mov inc fildl sti lock cld out pop mov and test test pusha and add lret inc out in nop add mov pop mov or push iret mov xor pop lcall mov add push xchg sub xchg add push lret add dec int data16 cmp cld dec das cmpb sub ds leave xor pop stos cmp add scas and shr enter mov dec push nop mov and out pop add icebp shr xor rclb dec add sub xchg dec aam jmp push pop testl jae sbb sub mov mov sbb (bad) jge adc lahf add fnop aaa or cmp add lret or add inc popw rcrl (bad) mov add jecxz stos repnz and pop movsb add push or int sub in enter mov pushf sbb dec jbe rcll mov add and imul lods daa mov mov mov lcall imul mov sub flds push imul add leave cmpsl cmpsb mov inc (bad) xor icebp popf push movsl cmp repnz or das cmp mov push mov pop stos xchg mov lock aaa movups sbb jmp jae push add ljmp and add out push mov fidivl in mov xor jle pop inc xchg cld rolb std cmp mov add (bad) popa (bad) decl loopne fs adc stos adc sbb cmpl cs pop out mov (bad) int xchg add (bad) mov and dec das xchg and aas mov push dec sub jmp cmp sti pop pop rolb push outsb in cmpsb cmc add xchg push jle movsl scas pusha jbe cmp inc and test test inc (bad) pusha jo push lahf inc fadds es enter rol mov mov call push and push nop or push jl mov cmp push adc push mov inc mov push enter add mov popf add nop outsb rolb scas sahf add mov add aad icebp pop dec (bad) loopne ss sbb cmpl popf push cmp cmc sbb incl sub cwtl mov add pop mov (bad) mov sahf sarl xor inc add rclb out or adc lea sub mov add or (bad) loopne xor inc jbe nop xchg ljmp es mov fldenv sbb add (bad) fldl cmpsb lret mov sbb add mov or lods mov mov sbb hlt mov cltd push cmp add mov loopne add into adc pop adc dec add sbb lret xor cmp stos xor dec test mov pop dec adc jge add out inc pop add add adc push jp cmp cwtl mov pop gs push pop push outsl inc dec dec in pop repnz (bad) mov xchg outsb cmpsl jnp pusha fcmovne std popa adc adc mov pop fidivrl inc ss mov xor and into sti setl frstor mov xchg add mov sbb adc inc jmp lahf popa add add jle jl add push cmp sbb fwait dec ds jle rcrb add xchg pusha dec add fstl push (bad) inc hlt daa cmp jo xchg fidivr mov or jp test call mov sbb dec pop insb mov jb imul add mov jecxz rorb jg lock xor ficom cmpsb pushf icebp lods shll push stos add fisubrl add stc (bad) and mov cmpsl roll pusha je inc int3 adc cwtl enter in xor mov add add fs dec inc shrb repnz lods in arpl jecxz cmpsl push jl push mov pop call fs push mov clc push flds stc push xor add std daa dec jl leave add repz mov add scas inc cwtl mov test add cmpsb push xchg push xor sbb xchg subl es testl test aad pop xor ror jp xorl ret sub and push out scas imul dec or test cmpsl cmp xor mov dec sbb sbb out sbb or or cmp pop faddl sbb aas push xchg insb jmp dec ret pop sub mov and pop in mov lret sbb mov dec cmp jo lcall pushf jb xchg pop and mov pop insl lahf js test hlt mov setl jo xor mov stc pop cmpb cld dec inc push xchg loopne lock and out xchg xchg pop cmp sti adc dec scas add mov push stos xchg cli loopne add fnstsw xor adc adc add cmp add mov loop push adc inc shrl test xor xorb push jbe insl dec pusha jo pop das fild pop popa ljmp or jnp fwait add movsl mov mov mov pop les pop dec add sub dec ds xor sarl add xchg fiaddl push (bad) pushf pusha imul add sub or or mov es dec loope clc inc mov jmp stos test (bad) cld dec push xor ret dec push dec int test or jge push add insl mov mov (bad) out or adc daa inc aaa jae ret leave lcall enter mov in (bad) and rclb push mov ljmp add push dec pop add jmp jo cld js xchg mov mov adcb fsubrl lret dec push pop mov aaa add outsb push add dec xchg sahf stos xlat add adc sub mov mov add add add dec push and aaa jo push push dec jl dec rolb inc xchg mov or pop arpl rcrb pop or mov mov push xor mov loopne enter xchg pop mov mov testl (bad) popa push add lcall sbb mov sbb dec enter pop inc dec jae lahf add jno sbb sbb jl fs pop cmp (bad) or out mov push (bad) xor pop ds ljmp scas sbb push out pop and add fneni(8087 or movb leave test out add lcall stos jmp (bad) xor push cmp add stos cmp ret les cmp dec in or out sbb jno popa xchg aam in mov lret test xchg add arpl jmp sbb js (bad) in aam inc mov jl jo negb insl pop add fs jle mov adc int3 add xor add test add mov xchg fwait cmpsl mov adc stos adcl add imul inc push jl out inc pusha push movb or push dec jge add xchg or scas push add mov (bad) fist push jge add (bad) dec imul cld leave push cld sub lret dec inc addr16 ret imul add rolb jno pop dec pop pop sahf cwtl ss xchg stc add push jbe mov add pop (bad) ficoml fwait cmpxchg pop and and xchg repz ret dec add push hlt into lea int3 add (bad) icebp cmp xchg shl inc in adc add sub dec dec aam pop movaps movsb push loopne cmp adc (bad) push jbe pop (bad) movsb pop sbb ja clc or sbb xor push mov scas movsb in inc ret cmc adc sub popf jl out add inc xor cli dec lea push mov add xacquire mov int3 add and out push sub push and jmp in inc pop push enter mov rclb stos ja add mov push std or in lea loop les mov cmp adc pop xor das pop add aaa icebp in sub jae,pn add hlt rolb cmc rcrl loopne mov adc or gs jge push sub add test mov jge pusha in popf lret mov bound sbb xchg fstps add push mov add sub jb push (bad) out add mov add cmp int lods in xorl sbb cmp jo ljmp jbe subb (bad) jp lods push xchg js mov bndstx pop cld mov xor add insb jecxz mov stc add imul or and lods and sbb or outsl xchg jne sti ljmp call mov jg sub pushf pusha test xor popf (bad) xor ljmp test rolb imul pop jl dec aad add push (bad) or je add nop insb out add mov sub adcb verr or mov nop or scas jmp iret mov pusha cmp xor jae testb aas mov mov push pop add jecxz je mov or shlb add dec push addb stos into fsubrs pop dec add or inc aad xlat add pop nop mov test xchg add fwait pushf xchg cli or mov push cmp and (bad) jne lahf mov popl nop mov leave push xor cli scas xor cmp roll repnz mov sbb add lea test xor jmp and daa mov lret pusha mov (bad) xor sbb fstl dec add xor dec cmp push push lahf push test (bad) mov (bad) cli cmp int3 fs or or mov cmpb lock in cmp insl dec out dec add in cld stc iret add fdivr ret jle dec ja add sti loope mov sub out ja (bad) mov and shlb push inc add sub inc ret fistp rolb movsl mov pop test mov (bad) icebp loope je push mov add (bad) in add xchg mov add cmp mov cmpsb add mov adc arpl pop sbb in nop cmpsb adc int3 bound rcl cmpsb xorb push xchg sbb mov sbb orb pop lock sub sbb jae sub (bad) (bad) enter add inc mov and add and push in add push cmpl ret add lret scas dec jl and add data16 jle,pn adc add (bad) bound arpl push pop shlb push jl frstor dec add cmp or ljmp or mov repnz add xchg lea lahf sub dec add xor cmpb aad and mov cmp sti xchg (bad) repnz mov mov in mov sbb das jne add pop dec push nop loopne cmp in inc pop jnp aas sub pushf negb sti jo jbe add mov clc add pop sbb xchg data16 aam iret cwtl cmp sub clc lahf sbb and push xor push dec jle lock sub add xchg inc xchg xlat ljmp pop pop rorb cmpsb fldt add ret jo xor add xor sub and xchg insb test cmp xchg cmp fstl out std outsl push (bad) aam adc es jb pop ss add scas mov jns mov adc jo sbb enter dec jle mov push xchg (bad) cmc mov add lahf cmp and (bad) lea mov andb pop inc jmp pop jo add bound xor xchg sub push sub add pop cmc sarl rorb (bad) or es add push pusha inc xor cmp add mov mov add pop nop in inc iret mov rolb jae add loop xchg push ja fild xchg add negb add lock sbb xchg or (bad) out and fdivl push and out xchg test rcrb (bad) add jecxz ss cmp sbb and add push adc add pop imul orl lods add xchg mov push add or jmp call enter adc mov pusha push movsb inc subl dec cwtl and in cmp jg outsl sbb addr16 movsb loopne add pop xor jp and js jle add xchg adc fs repz adc adc test dec (bad) and mov jns and add arpl add aaa or cld adc pop jbe daa push repz and and ljmp insb add dec hlt push xchg add fwait pusha push test movsl scas and sbb xchg or insl inc add ss add mov jp and aas popa sub add (bad) insl cwtl cmp mov mov jnp cs aaa dec xchg pop add jo aad adc pusha add stc inc inc jg loop pop xorl xchg add xacquire aad popa ljmp test clc or (bad) std scas and xor mov xchg mov sub popf fsts sbb clc xchg shlb fcmovnb sub add out cwtl jmp push xor jmp int3 fcomps add lcall or mov xchg push and mov xchg bound (bad) jne adc imul and pop push or cmp sbb sub repz xchg mov xor or add mov adc int3 mov pop aam ja sbb in test push dec rclb inc int3 lea lods dec xor pusha jle (bad) xor clc push add gs pop fnop or add or inc push mov fidivrl xor sahf adc fisttp movsb decl les inc mov int xor cld inc mov pusha (bad) push pop jo fisub call add cmp js add shrb fmull sub push lret jns push scas mov insl rcrl out push mov test leave xchg jo das daa sbbl jl or mov icebp mov sub jp cli testb icebp lods (bad) xchg shufps insb pop push imul orl mov rorl mov mov adc ficompl (bad) fadds shrb loopne add not add mov sub call mov test imul shrb rclb xor insb mov ret add mov jb xchg add out rcrb xchg lahf pop iret adc (bad) pusha nop pusha mov mov adc add sub push cwtl stc dec and cltd sbb xor nop sub inc pop pop ret (bad) jmp test iret (bad) lock into aad cmp addb or ss jae add jne cmp pusha aam push cmp and ja test lds nop cmp add aad or inc mov adc popa pop pop push subb dec mov add das push inc std add inc inc shll in jl cwtl adc cltd push mov clc cs in nop test int3 pop jp dec pop or add pop adc je add (bad) testb lahf or sub add push sbb lds call xchg stos cwtl enter and dec ret scas (bad) add sbb xor push xlat push pop ljmp push pop pushf stos add (bad) dec fwait add xor inc mov mov cwtl popa dec mov mov add jge roll ret push add xchg sbb popw mov push es movl pop mov lods push add jb scas clc call inc xor fadds xlat in jns ficompl inc or daa adc nop cli and pop or add popa sti or and aaa jae xchg roll subl aam cmp or adcb test das add jno add cmpsb inc push cmp inc lret hlt addr16 add fsub es mov add add data16 hlt mov inc push push aas pop adc cmp daa push xchg imul loope inc gs xchg add xor test in addr16 push or aas bnd and imul fidivr cmc icebp pushf pop add dec inc idiv xchg add mov clc cmpsb add lods (bad) outsb mov mov mov in cwtl mov scas add ja push psadbw sbb mov out bound push add sahf sub pop jbe xchg sbb pop add or fidivr add push adc mov add sbb add mov out xor add cmc outsb jge cmp (bad) add repnz bsr pop and xchg mulb add dec into rclb dec inc (bad) mov mov addr16 push dec jne jecxz pop add xor sbbl pop cmp imul xchg leave and mov fistpll jbe add stos ret pop push ds xor imul arpl and pushf cmp rclb cmp xor pop push lds ret xor sbbb sub dec add cltd inc sbb loopne (bad) cmp add fadds mov or jb sbb flds setb mov and jns (bad) sbb pop or cmp xor push mov dec push pop and (bad) sbb or mov jo add lret cmp jle or add lds xchg lahf lods (bad) jmp lret pop ljmp jns rcll push test dec daa into adc mov lret cmp jp and mov addr16 add imul cmp ret pusha cs inc add add adc mov push push fisttp pop dec cld add decb mov std insb push mov cmp and mov add fs dec add adc in pop add bound mov xchg mov stos movsb lcall (bad) push pop add push and add outsl jno out sub addr16 daa inc mov stc jo loope xchg xor repz or lret adcb mov fisttpll cmp xor cmp clc ja popf add xchg push add xor add pop lods aam push add outsb cmpsl add and loopne push add xor sarl and inc popf push add in pop es addl and xor dec mov fdiv out orl inc cmp sub mov cmp add out ds pop sar (bad) js add arpl test jge xchg pop jmp test pop or adc add pop add sbb and push js ret xchg in test or dec adc jp pop add inc in xchg (bad) orl insb call adc sub mov push pop imul adc (bad) lock loopne pop popa push mov aam imul ja out movsb lret outsb inc ret push xor cmp hlt iret nop pop add xor mov in add jbe das mov jl add mov fs push pop dec pop lcall pop js add arpl push inc pusha or lds gs add das mov or sub mov fcomp ror adc add stc and cmp mov push add stos pop lahf pop inc add (bad) sahf scas lea sub clc xor push pop cwtl add sti imul test or and push icebp popf cmp add pop scas lods mov mov roll mov mov mov cmpsb cmpsl fmul nop das orl cld (bad) les cmp xchg and shrb sub pop icebp and rcrb jns adc xchg sub dec jg push sbb add fdivrl scas and (bad) ds add insb cli jg jmp add xor push mov ljmp xchg shrb ss (bad) repnz xchg and cltd sbb imul xchg dec in fstl test test or pop cmp jecxz add fisttpll ljmp and (bad) push mov cmp shlb sti out push out xchg jle fcmovu test add sar popf pop pop cld lret mov adc add test mov clc adc in rolb test dec ja jo (bad) add (bad) icebp and xrelease fucomip inc add bnd lahf bound pop mov push shrb pop imul lahf add add add jg push lods dec inc sbb mov mov dec movl fwait orl mov add sub out xor pushaw cmpb push inc (bad) (bad) xor cli sbb or mov cmp xchg xchg jae mov lea nop aas xor sbb and cmp push inc push es sub insl xor pop and pop in (bad) sbb pusha je add outsl notb jge scas add and sbb cmp mov xchg fbld sbb stos add and cmp roll pusha lahf inc mov add repz (bad) push push mov mov or cmp jns pop pushf push sub cmp mov fisubr add mov mov movsl mov call imul or jmp pop shl xchg push sub xor cmp js lret lcall adc cmpsb add sbb aad mov ret lret popa xor xor inc xchg add sbb stos mov mov movsb sub push es add mov xchg mov xchg addb icebp pushf insl mov adc test in jmp push outsb or jns mov scas push ds bswap dec aas and cmp lock jle js jae nop add loopne loopne pop pushf pop add jns fisttpl add mov fisubrl push sub xchg pusha cli lods cmp or and jecxz and inc pop pop cld mov add addr16 decl mov inc fsubrp add imul add lcall pusha dec and aaa xor arpl pusha add popf xchg push adc xchg fadds icebp pop aad test incb mulb (bad) ja adc loopne inc rorb mov fildl (bad) mov daa dec lea add xor jno loopne push arpl adc out cli pop mov add cmp adc rolb xor add (bad) ljmp pop jbe push add out xchg into scas mov lods inc insl divb pusha lea add jmp jg lret adc mov mov loopne lds aaa pop arpl andl mov add sbb flds add push loop ss cmpl divb imul les jo push sarb out lock cmp stc shl aad imul hlt lahf (bad) and inc xchg pop or pushf lock add and loopne dec invd outsl mov lods ret out add addr16 mov mov or adc sbbb imul add nop mov aam cmpsb movsl pop jecxz js pop or rcrb sbb xor adc addr16 lahf add and daa inc cmp mov adc orb jecxz push mov mov imul xorl movl rorb mov sub dec nop mov loopne out shrl add adc inc jo pop push push push add ret aaa lods pop add and test incb cmpsl mov icebp cmp (bad) xor add and cltd xor mov add jg dec mov mov aam adc push ljmp adc add aas cmp stc mov insb sub leave add mov dec shlb add fisubl mov decb push or mov mov popa sub add jg iret dec ficom cmp faddl outsl mov andl adc and cwtl fisubl pop out or inc mov sti cmp add addb out lods rolb repnz xor inc xor add jle loopne ss popf js jne pusha imul clc adc pop out jno movsl add ret fimull push sbb shlb lds call add cmp mov fsub outsl pop das cmp (bad) repnz add mov in add cli cmpsl pop cvtps2pi loop add test loope mov add movsb xorl xor mov loopne xorb dec loope sub xchg daa or xchg nop or xchg insb add mov and scas sub das enter add dec aam or adc popf pop aaa fs cli and push int3 cld (bad) mov pop ljmp mov xchg dec sub sub je mov push push (bad) in pushf dec xchg mov mov in dec push insb faddl out inc add sbb sbb add mov loopne jecxz jge not add pop int xchg add aaa push mov in (bad) mov push and (bad) call and mov sub dec in aad test insl pop cmp stos add push dec cmc push sub xchg push mov or cld jg mov add out in xchg pop mov fisub jg lcall outsb mov movsb test or push inc insl xorb or and in jno jne cs clc test cli dec push bound add jno inc mov fmull pop and ss sub (bad) cltd movsl cld xor aas pop inc or mov jmp add sub dec fdiv and add mov mov xchg (bad) mov mov xlat notl ja insl (bad) sbb pop add mov movsl push add cmc mov sub cmp xchg dec roll pop mov nop add jg fadd inc test or mov pusha sysret rolb rorb pop or sti xlat add inc or lds into or add push js add push xchg loopne imul sbb mov jmp lock pop or sub add test cmp lcall mov stos inc notb add mov cltd xor adc or add push push dec ret mov adc inc pusha mov add mov pop xchg mov and test les mov add ficomp sbb setp rcll mov (bad) push ja mov pusha enter dec (bad) stc sbb aam add (bad) ds aad lods test sbb sub add xchg and dec inc and scas push adc push adc dec cmp ss gs test js addr16 mov add jge xor cs xlat push clc das fiaddl ljmp faddl and mov cmpb cmpsl dec sti pop mov adc add jo pop mov push (bad) rcr jno lret add sub push imul jnp mov or daa fs sahf pop nop sbb dec pop jmp xchg add or xchg dec pusha cmp loopne in add ss xor push jecxz add sub leave add out mov ja mov mov cmc cmp out pop rcrb sahf loopne add sbb jne,pn xchg mov push iret loope inc fnstsw fcoml xrelease pop add jge test (bad) cs repnz jno icebp and sub push les push daa (bad) or fadd add aas je cmp mov add sub repnz bound pop mov clc cmp popf addb push cpuid arpl sbb add clc push mov mov sbb in ret pop add cltd ljmp ss adc inc add aam inc mov xor add into mov lods iret jbe orl cmp mov mov adc mov push and orb jmp pop inc mov and loopne sbb fs icebp add jbe lcall pusha lahf xor (bad) hlt add push sub insl icebp xor add ja add add test mov imul test xor sub or jne add adc ret push mov add sbb dec xchg and sbb ljmp addb push add inc fildll mov push xchg and nop lea outsl and enter cld out inc out stos xor add pop jno or dec add inc mov xchg add fldcw mov pop int3 sbb pusha pop lret and mov adc div arpl sub dec xor inc pop inc sub adc add ljmp pusha pop jge pop add inc mov hlt push loop sbb cmp fsubs push fadd dec jge push xor lahf negl test inc push mov push in add ficompl int3 (bad) mov test mov mov mov out jp add hlt mov ja add sbb add out stc dec test adc pop jo push pop icebp mov js lret addl mov dec (bad) push dec jp or cmpsb mov mov sbb add xor inc xchg sub sbb xor je inc notl jb int lcall sub add faddl outsl jo in mov (bad) aas les sub sub rorb int3 fwait in sbb xchg or push xorb mov out add mov dec aaa pushf add rcrl inc scas xor ljmp add xor dec dec lahf mov xchg sbb pop xchg pusha bound xchg fbstp mov sub pop pop call inc rolb or pop fmuls test or pop jg add fdivrp test sbb rorl mov js add pop packuswb loope in test mov mov pop rcrb xlat pusha jo add arpl imul lea add subl mov dec cmp add mov and add shrb (bad) test push clc sbb stc add mov adc sub lcall sbb add (bad) xchg in cmp mov je clc mov icebp scas sbb int and adc pop cmpsb aad into add jecxz pop push flds frstor stc pop inc cmp test pop and fildll mov push add shr movsl mov loop ja jp rclb add and xor pushf (bad) xor dec jp test les adcl dec mov xorb mov dec int3 in xchg fidivl xchg mov (bad) jmp lret and and mov add sub aam fstpl (bad) ds push cmpl test sbb xchg pop addr16 es inc jmp in jp mov sub dec ds jmp sbbb pusha in sbb xor and sldt cmp jb pusha stos add sub cmp pusha or add adc pop add push pop xor dec pop xchg lret dec sbb daa jno rcr cwtl xlat cwtl (bad) out test repnz das add adc negb ljmp sub stos pop adc hlt inc data16 in add push js mov sub add gs cld cmp jne sbb mov div and mov sbb add nop repz mov jnp loopne dec call xor add fdiv je cmp add stc inc lret push rol add cmpxchg sbb outsb clc xchg fdivrp mov mov cmp cli sub addb sbb push arpl ret mov mov ss pop pop es xchg stos add pop sbb inc insb dec add pop shrb cwtl mov xchg stos cmc xor pop sub sarb mov mov in fstpl add loopne enter movsb dec xchg adc jge jo add adc sbb add test ds mov je into xchg in rcrb dec sbb jecxz inc lea push sbb push xor jno push mov shrl in mov lds fsubs insl mov pop sbbb fs or fmulp (bad) dec das insb adc sbb mov pop ror inc mov xchg add daa jp aaa pushf add xor dec add popf jo add lods and pop add cmc push lret test sub add in arpl dec and jo add aaa sbb pop sbb (bad) mov inc push data16 jge pop cmp rcrb sbb push push movsb fs or add cmp add clc sbb out or mov lcall dec mov inc adc popl imul mov idivl repz add mov xlat add inc out cmp (bad) hlt jb add sub sahf cmpsl das sub add pop out push aaa push inc cmpsl movb dec or xchg push cld pop rolb pop fcoms jecxz ja add jbe iret add das (bad) cmp pop pop lea lock mov pop lds rcr jno popa out cmc lock add test xor loop imul icebp or loopne in sbb (bad) fdivs cmpsl popa sbb add test dec xchg mov hlt push push inc cmpsb inc mov inc pop je ja mov sub rclb fbld pop daa call mov scas sbb add (bad) pop jg call fwait mov jbe add or push mov clc pushf cs cmp fnsave imul cs rolb out add scas mov add shlb dec adc xor mov mov cs testl pusha mov cld adc aaa sub orb pop shr inc add xchg mov aam or lret outsb xchg imul fstl mov mov fiadd not shrb add add inc push (bad) pushf mov in mov test movl push repnz add (bad) sbb add sub mov mov lea nop (bad) aas arpl leave cmp ss jg add imul incb pusha xchg pop adc pop push jno das shlb xchg sbb std adc push lods sbb outsl icebp cwtl pushf mov jecxz jne adc jmp add (bad) jbe lret into stos mov les jecxz js xchg roll xchg cmp fdivl loopne stc add pusha jl add ficomp cltd mov jge mov loopne xchg cld roll push and add rcll jnp xchg sti or xchg jge out add or in bound sbb sub add sbb cli int3 aaa icebp adc add mov mov add mov inc add jo mov fist lock outsb add xchg mov and and cmp (bad) jle push mov (bad) incb imull add addl arpl sub loopne add push test fmuls pop dec shll mov pop and lods xchg dec jl rcl ja xchg add dec lds insb fistpl sub adc adcl xchg clc xorb sarb dec ret mov aas movsb cmp out divb jecxz mov lcall adc (bad) (bad) je push adc add add mov repz mov bound push xor test mov add stos lcall xchg dec add pop outsb sub loope pusha xchg add xor enter out mov repz jo mov sub cmp les popa out pop add js pop add xor xor fisub insb sub lahf mov cmp xor fstp add xchg lods sub push add rorb add mov lcall js adc roll rorb cmp and cmpsb add das mov test clc push add aas std pop push test roll ret push fadd mov or jbe inc xchg aad sbbb mov in sbb dec ljmp push mov orl mov push test out add sbbl inc dec dec fs cmp sub mov bound push dec push cmp or (bad) sub les jecxz rorl add mov shl into pop inc pop gs lahf and dec mov dec mov inc mov xchg addr16 es and jne mov mov sub push dec xchg and add cmp rclb cmpsb mov sbb jae sahf aas jl outsb (bad) jecxz faddl or jbe lret rol and in js pop cmp dec out out or mov int3 sub jl aad push inc sbb add xchg cmp jns add push and nop fmull movb stos (bad) sbb imul and popf clc out inc ja dec xor dec add sub hlt aaa test push adc mov xchg js negl dec jl repnz adc add divb xchg in jnp cs cltd push icebp mov pop push adc test std call pop push mov xor adc jmp test lcall sbb int3 pop fsubr sbb sub pop xor cwtl add push jnp loopne cmp jnp sub lahf add hlt rolb incl ja push jecxz sti cmp and nop insb add lods ror sbb lods push fcomi js push jo or movsl jecxz jbe cmp call lds or in scas add add arpl shrb jecxz daa jae push sbb (bad) sti push adc or stos add xor xchg add bound aaa xor pop or enter movsb inc add sub jge inc add push jae dec add insl sub add repnz jb xor dec jle sbb cmp mov fiadd aam inc mov jae mov es jmp test aaa push xor jp add test pop add das (bad) jno ljmp stos push scas dec ljmp in cmpb fwait ss in push sar add mov rorl and xor add mov xlat add repz add mov push adc outsl cmpb (bad) test mov mov subl call pop dec out movb or rolb lock add sub pusha mov adc sbb cld mov sub mov lds subl mov pop test xor and or cmp neg shrb mov jge sub out cmpb pop fstl lcall pop xchg scas or cmpb loope js xchg rcrb (bad) stos adc repnz xor in pop in ja imulb add imul andl in lret stos mov icebp roll push enter cmpsb add jle add add repz cmp add ja and outsb cld xchg lock mov xor aas add in lret cmpsl mov add push mov outsb cmp repz push (bad) enter add (bad) addr16 movsb inc lods pop xor outsb push pusha add adcl jnp add mov xlat add sub lods push mov leave insl mov iret lret add pop mov les jp push sbb hlt push dec lret or cmp add push mov or sub pop xchg add rcrl into arpl add pop mov repz push sub sbb (bad) out jl (bad) dec inc cmp pop add cmp loope jns rcr cltd scas lahf ret sahf mov test xchg or jo mov aaa out cli inc adc sbb sbb stos add mov call jb add xchg dec stos movsl addr16 and xor or inc sub addl add xorb xlat test js mov out (bad) jno add mov inc psubsb test arpl rol icebp cs add ficompl add jp mov add imull fdivrl xchg jge jl repnz sub jle int3 xor je mov dec mov adc inc jmp call jae xor push add dec aam jg and xchg sbb cwtl pop lahf add jb mov ljmp inc xlat xchg mov sub jno push adc add ja arpl add mov movsl das inc je pusha jae add fs out lret dec add imul mov scas clc pushf add push pop cmp and arpl xchg adc leave jmp jae (bad) push negl pop xor mov icebp add movsb push adc sub pop and xchg loope loope dec es xchg xorl add inc mov repz shrb add gs fmuls mov xchg les add inc add push sbb mov xor inc (bad) in push nop jno add cmp dec adc outsb and cmpb mov decb lea xchg in dec pop repz decb pop and fstps addb push mov cmpsl push sbbb xor push xor movsb subb adc push imul jne nop jo mov cmp sub data16 add xor fld dec push xor dec mov psraw pusha mov sub xchg push add repnz pop popf inc mov mov into push jnp mov aas sub add test add xlat hlt cwtl mov (bad) jg add push insb add cmp cmp mov inc ja adc mov iret dec fs jo mov sub add pop bound mov (bad) lret xchg fisub dec mov xor dec mov mov mov jo rolb add add xor add les add fdivs iret dec add lret mov add (bad) movsb push mov repnz inc in enter and fiadd add xchg adc ss sub xlat adc add dec push or mov mov gs icebp iret cld inc add pop sub xor adc ljmp add sub cmp xchg pop lock fidivrl ljmp xor movsb mov std push or bound or test shrb add inc pushf aad test cmp ficom andl jge loopne fcompl adc inc into lock and sahf pop bound push jle mov rcrl into sbb xchg (bad) lock movsl sahf jge loop in outsl hlt xor (bad) inc inc rcrb push fsubrp pop xlat mov sub add cltd xor aaa add sbb sub or rolb jl or pop les jg jne xchg sbb add icebp cld test fstps mov rclb adc mov sbb and ljmp jo ret mov inc add add cltd mov leave mov repz mov push adc mov add pusha lds pop jo popa ror int pop stc add add mov pop fldcw fimull and xor add das and xchg insl dec mov push loop add out add ds std add ljmp js add dec jmp lds repnz or push jecxz xchg or mov sbb sub (bad) stos les dec sbb or mov add in adc lcall sahf sbb jo jbe cmova ljmp dec out add test push mov sbbb jge rcll xchg insl ja test or push icebp int3 or repz sbb push jmp addb mov loop push sub dec add sbb cltd stos mov jle push pop loopne jmp xorb and add sahf jg xor adc fiadd addr16 daa xchg data16 outsb cli pop js ret mov mov add inc bound push cmp add loope and mov adcb add pop in cmc clc mov jne mov aas xorl dec paddusw fsubs subb and ret cmp mov out stos or inc mov jns in add and adc jnp mov adc jns mov jl mov push push pushf outsl and add push push mov add push notl lea daa adc das push push xchg andb ja add sub xchg fwait sahf je push pushf xchg cmp ja mov push aam sbb pop lahf dec and xor int add pop add call and jae insl lods add fstpl mov mov test test cmp add dec insb into add push push dec add xor leave add (bad) insl inc cmpsb out aas dec add or mov lahf add gs into les scas add or and out cmp or dec jle,pn and pop xchg pusha insl mov adc or (bad) out inc popf adc add test sbb test dec addr16 ja enter cwtl push push mov sbb negb mov dec call jp inc and mov sub (bad) dec add fwait push sub mov dec movsb mov idivl add sahf mov iret add jns sbb lret sub repnz cltd es cmp push xchg inc aaa inc aas add pusha jmp pusha es ja loopne dec adc or inc fwait sub (bad) stos xchg jae pusha pusha xor enter jl add mov (bad) loopne mov xchg arpl sarb xorb mov ss xchg add inc jbe jo (bad) and dec int3 js lock (bad) out sub mov ja ds push pop fild incb stc cmp aaa xchg lcall cmc int lahf pop push add idivl xor mov adc dec add dec add jge nop cmp addl ja pop sub add and dec add pop shl xchg sbb addl jle int push jo pop push mov rorb lea push pop les sbbb std dec inc add jmp test pop pop mov add dec out pusha push loopnew add cmpsb cmp out mov add or sub cmp cmp sti dec lea pop outsl cmp andl fldcw ret dec add push dec gs push (bad) hlt sbb int3 iret push cld or adc add adc iret sbb test sbb out xor fdivrl sub cmp aas dec xchg rolb and sub jmp dec loope (bad) hlt sbb pusha sbb ljmp dec (bad) aam dec out push (bad) jmp add dec lods sbb movsl adc roll shrb pop fidivl lods mov das addr16 add pop mov fldenv jmp mov push hlt fwait sub pop pop sbb mov js mov mov lea shr cmp jbe push add add dec insb add cmp and iret lret je das cmp jbe lock push cmp adc out movd sbb add in jns xchg adc popa push aas pusha pop adc cwtl dec sub add adc inc xchg test ss (bad) push jp clc pop add xlat psubsw adc xchg mov fldt cmp add inc jl add int add pop mov dec je cmp dec mov add xor pop push inc xchg lret out and sbb bound dec xor push ja,pn adc or clc mov aam mov (bad) mov icebp mov loopne and inc push mov xlat inc fsubl jns movsl add sub testb sbb addl inc mov sub in xchg test repz sbb negl rcr push and add js inc or xor ss add imul adc sahf aaa push and nop add cmpb in mov or mov push ret add mov jbe adc cmpsl cmp pop subb mov jg pop add cmp out jns jnp push dec loope outsl fs push mov je push jge adc sbb dec mov popf mov and or in pusha push bound add sbb outsb leave adc loop lods mov and pop cltd sbb jmp pop xor sub ret dec add mov add jl push sahf jns mov mov mov jl or (bad) outsb add pop and pop or bound inc push (bad) jb cmc loop mov sbb roll mov out or adc pop jge jp pop push pop loopne add push pop ret pop adcb ljmp xor mov sbb cmp lods sbb test push add jp inc popf cmp add push push ret xchg add inc mov add ds cmpl ljmp ja push jle mov add outsl push aaa push aaa and addr16 loop vmovss out inc inc addr16 outsl sarb jne fstps add pop push cmp add aaa (bad) jno xor js test lret cmp dec xchg hlt inc sbb adc mov xor pushf xchg mov (bad) leave enter dec mov aas xor into add mov push jecxz xchg decb mov or shlb add mov or std cmp js add jno movsl fsubrp sbb push sub or das (bad) mov ja loop popf fmul mov cmpsb jg out jnp jo cmp add push dec inc jbe clc lldt sti push (bad) sbb xchg adc jg push fadds xor cmp popa mov cld mov jle push cmp std dec outsl mov and ret inc mov sub push jb and pop imul icebp dec pop jbe push pop test mov and add lock push je ds push in add push adc push std inc or sub call cmp enter imul xor mov pop dec push ljmp cmp addr16 push and rolb jb,pn pop mov es xorb or test outsb mov add rorb mov add ror fisub scas jp dec xchg push imul add xchg inc outsb jo mov lock push in push pop fidiv or inc mov and jle ret or pusha mov jns das adc add and lret add xor aas movsb and xor jle push (bad) add notb popl push cmpsb add sbb xor xor inc push push dec inc push and push dec inc lods push add jg or dec dec xor inc pop inc dec xchg inc mov bound pop aad add add dec aam mov stc mov dec add loope lahf dec scas cmp mov xorl pusha cwtl jmp test aam mov popa iret scas clc rol out inc hlt (bad) adc pop cmp inc cs ret add sub (bad) push pop mov sbb popf test popa jbe add cmp push or jae mov mov fsubs add jnp dec sbbl (bad) and popa rclb add pop fsubp push mov push enter stc add mov and scas push shrl insl add xor sub or fs xchg pop adc movsb sar add cmp jne lea push adc mov and hlt adc pop xchg xchg sub mov nop in ljmp popa jecxz je ja jmp (bad) cmp dec imul inc sti push stos mov mov add pusha movswl aad fwait std jo test mov or pop (bad) mov dec lods push xchg scas adc andl xchg add add jmp or mov pusha sub mov pop mov inc xchg add cld (bad) xchg inc ljmp jmp aaa test or pop aaa add mov jmp sbb add add push dec and inc clc mov and mov adc pop mov fcmovnb popa insw repnz es xchg mov xchg sub pusha rorb mov jne pop loop mov dec (bad) adcb and enter add or (bad) int3 add leave add add xor popa or dec push cmp sahf arpl xchg int3 add mov add adc pop gs test (bad) test push add dec or movsb jo add push xchg in ret daa push (bad) pop pop ljmp data16 mov lahf xor es popa jge pusha out (bad) stc loop cli ret xchg push rcrl sbb add mov nop ss pop nop sub push add mov iret outsb inc mov sub sbb and adcb push sub cltd sbbl mov adc (bad) into adc sbb xchg push cli add cmc mov dec test xor add inc shlb (bad) loopne jp gs adc mov pop popf mov daa jp jo hlt dec push dec add xor int popa and call stc xor pop add mov push ret dec dec jnp scas lcall push mov and push test clc out test out arpl nop jae jns fbld push xchg jo lcall add imul stc jge mov xchg call loopne rcll jle inc pop hlt mov mov pop mov sahf cmp mov add lret adc push add rcrb ret (bad) add mov stos icebp jo scas cli xorl cltd inc mov scas adc xchg mov mov push jmp pushf stos faddl cmp cmp xchg repnz sub daa repnz jae add nop mov out ljmp aaa dec sbb lods jne mov sub in sbb mov push push adc ret in add push fiaddl ljmp add (bad) je lea pop mov cmpsb jne and cli mov xor movsb mov jg rcl rolb ja dec add jmp mov aaa (bad) sahf xchg cmpsb pusha (bad) fcom addb aad inc xchg pop loope cltd inc sarb add and jbe inc xchg mov inc popa add pop je addl mov loopne mov xor and ret into add ljmp cmp fwait mov outsb sub add in add add mov pop dec not sub aam jno add sbb out and and pushf repz imul dec je sub push and add mov rorb (bad) jmp fs les out mov xchg sbbb xchg push push fidivl jb add dec push push pop pop not add pop mov mov sbb cmpsl add fsubrs jg fs sbb outsb sub adc xor test lret cwtl jg stos or mov add mov in insb (bad) push push add push dec pop sbb rcrl push inc jmp xor addr16 fmuls pop addl push mov push xchg sbb gs movsl or in mov aas pop push sbb minps xchg sub bound fmuls rcll out sub cmp pop sti out (bad) negl fist stos or push jmp xchg leave nop sub xacquire aam nop pop gs push mov js fcoms add cmp jae repz imul adc pop roll fdivrs (bad) addr16 push add xlat (bad) call sbb cmpb xchg or pop loop adc test xor mov and and adc fmulp push or xor pop pop in jg mov or stc cmp push add ret add mov inc rclb mov (bad) sbb dec mov mov or sub adc add aaa jns push push nop sbb dec arpl dec movsb (bad) push lds in std (bad) inc pop jmp andb out pop push mov test in clc jl inc in and mov into stc out add mov or pop inc call not jmp fsts push adc xchg push data16 xor sahf push xor or cli adc stc pop pop sbb push jns and push out or mov add inc push sub adc push xchg stos pop xchg add cmp sub lock sub pop shll scas push push pop pop mov addb and pop shl or or xor mov mov mov sbb dec rol ficomp daa cmp or pop push jg adc cmp aad fstpt xlat mov hlt nop add jmp and add add pop add stc add sti outsl xchg repnz jle add test imul push pop leave push inc es sbb or sbb ja sub out jge xlat in aas nop jb add addr16 movsl sub pop pusha fldl2t xor cld pop (bad) adc rcl gs out sbb xor lods into mov popf aad cmp test jns jae dec cli icebp cli push dec add or push and pop bound or add movsb mov movsb jmp sbb add or lret pop icebp inc xor lret and rol lret pop fs nop int adc add pop xchg mov push push push push push push fcoms or adc adc les leave push dec stc push (bad) cmp adc call int sub ja mov and aad and and cmc pusha dec mov mov push sbb jge and add mov sbb mov push xor pop cmp add jbe inc xor daa shlb push sarb jp sbb imul into int push push dec push js xchg sub push push clc aad xor cli rcr push dec out jl imul dec into pusha mov jns mov jecxz cwtl xchg xchg inc pop xor mov jnp push inc add sub (bad) pop push mov mov or jp gs mov aas mov in (bad) gs fisttpl cmpsl add popa sub lods (bad) cmp cs js jns push push add inc out push xor sub stos xchg add or sahf test add add mov push xor or jne dec addr16 jbe pushl lock sbb in pop mov push iret in jno cmp in in or xor xchg fisubl pop test xchg lds mov jno (bad) aas gs stos mov sub mov pop push out xor pop fistpll pop pop popa sub jb jnp pop add pop xchg sub adc js cmp or arpl cmpsl pop stos mov adc and ja das pop ret aad or sti orl mov ret test mov roll jl outsl xor and test and mov push add pop or rcrl test es movsb lret in adc cs add lods bswap sbb (bad) nop test jmp mov or pop dec dec imul repnz xchg sub enter rorl and fwait sbb int fcoml pop or mov inc push pop ljmp xchg fildl (bad) sub push (bad) mov andb pusha dec push xor fisttpl popa insl jmp (bad) and das add add mov inc adc rcl stos std mov push shrl mov and pop dec je jg jne rcrl mov call cmc dec mov orl push pop add pop sub pop inc mov xchg add or mov pusha and test add and notl xor imul add repnz scas pop lds jmp add imul or pusha mulb and push add insl cwtl movsl or add cld lea mov cmp add out ljmp pop inc leave and sub xchg sub jmp mov stos rorb xlat test mov xchg mov add call add adc dec push xor iret add aam arpl add pop pop sti and data16 in or cmp add mov inc cmp inc jmp pop sarb push sbbb pop out xor outsl push roll sbb and mov xor and repnz add sub jmp sbbl lcall mov jmp push mov insb mov mov pop insl xchg daa repz pop push jmp and popa sbb cs cmc pop imul push sub mov cwtl imul sub pop dec es xor imull pop pop fsubp pop ret rol jmp ja out dec nop stos mov add dec mov js inc faddp sbb inc addl add sahf and push jge sahf sbb stc push sar sar mov in lods lea add mov inc gs cmp jg lahf xor xchg mov outsl in stc adc adc inc std and sub imul das or sub pop add pop pushf ret mov mov mov ret dec mov stos in add or cld jne call adc pop pop sub jae jae jge outsl inc push rorb push (bad) stc and mov jno ret or jb xchg add jp out push mov or xor jno push movsb push and cli dec ret pop (bad) sub cli fwait push fwait loop push push mov leave ficoml mov pop flds insb popa inc rcrb icebp gs clc popf jo xor dec and jl insb sbbb ljmp pop add imul xor cmp scas or in add dec xor mov test push mov inc sub loop dec ss mov push xor mov dec add adc ficompl fsubrs or mov mov lds jae push push xchg cmc cmp popa lret mov push push push lcall dec inc or mov es mov xchg push pop mov add mov jns dec push add lret ret mov jbe add push mov (bad) push fisttpl sti lods xlat or jecxz or add aaa push hlt pop xchg outsb and je jb popa jns in js arpl outsl fsubl cld cli aas jne mov cmp adc cmp sub pop or stc mov je pop jle sbb jo mov xor cs inc and push imul add cli adc dec icebp cltd aas das and popf scas jae incl ss push call (bad) sbb stc cmp pop pop sbb push popa pusha nop cmpb add add ret ss push pusha sub ja xchg pop push add mov adc loopne add mulps sbb and clc jns rcll push mov add xor push loopne xchg lahf mov mov (bad) stos cmp aad aas aam add je mov clc insb dec mov inc sbb stos (bad) pop add push jmp pop arpl loope or fsubs cmp xor outsb sub (bad) cmp test cmpsb repz test push add sub mov les add ret or adc adc or push aas cmc js es jecxz or pusha xor dec mov das jle sub add jns push sbb and inc ljmp ja adc pop in jmp jnp push ljmp inc sbb nop fdiv and cld add add mov and xor popf push mov call cmp adc jg mov orb into inc xchg xchg add outsl lods sar adc (bad) (bad) or mov mov fldenv sbb es jl sbb out dec jb loopne cli push stc test fsubrl add movsl jp add lods out add mov sub pop or (bad) popf cltd sbbb mov popa jmp sbb jp inc inc push cwtl pop outsb cld pop or mov mov pushl adc dec and cmp cwtl call and push out insl inc iret in shr mov call push dec sub std add stc mov les addr16 inc lret popa imul adc add jnp dec lods adc cmp push divb imul jg xor sub xor jge adc call add xor mov add sbb jle fisubl mov and fstl sahf add push cmovnp inc in and cmpsb sahf mov lcall les mov adc clc inc nop jne mov imul int shlb xor das sbb les pop sar aaa xchg setl repnz movsb sub in subb add xchg stos inc rorl nop shll pusha push pop mov pushf push insl std nop dec mov push mov ret or mov mov adc (bad) sub rdtsc in mov pop pop gs orl mov imul jae add test icebp pop lock enter les rcrb xchg mov mov sub adc adc int3 dec xchg rcr inc data16 jg sub clc nop pop dec sbb jp xchg inc cmp sbb enter sub movsb jo adcl daa mov repz mov fdivrs jo pop scas imul add mov in cmc popa push pop sub mov inc xchg mov fwait jo push stc cmp (bad) and (bad) add inc roll sub sbb je adc fstpt jo adc cli (bad) xor adc aas add push loop xor int3 adc and pusha cwtl xor out mov cld dec cld xchg mov mov and (bad) mov jnp adc mov jno push enter fist inc stos and call cs add (bad) pusha sub push or aaa faddl test mov daa mov add push fimul in mov cmpsl and cmc movb or inc xchg adc dec outsl mov xchg pop imul dec sub lcall out mov es fisub add push inc pop cmp jns mov cli es inc fiadd cltd mov mov adc lret add fild or pop sbb fwait scas adc std out out add scas jae ja fadd mov pusha rcl pop add mov call andl je loopne adc add mov mov add pop rclb loop xchg call stc enter pop mulb xor add pop add mov inc rcrb sub dec mov inc sahf inc jmp add mov sub (bad) dec adc and rcrl sbb pop ljmp xchg sub add nop outsb dec lods repnz jb adc jl and mov mov inc mov sbb dec mov loopne pusha mov and fisubl fstps push pop lcall mov mov shl mov (bad) push stc pop movsl stos (bad) stc adc xlat xchg xchg sub and cmp jb inc and add pop adc mov dec test jae pushf cli pop xor icebp add jp mov inc nop push cwtl leave and imul (bad) cltd loope mov test mov xchg adc out xor fwait divb sub pop icebp add mov inc lods xchg int lds mov std dec popa hlt loope add push mov push mov adc aaa loop xor adc sarb aad fistl push pusha xor jmp add and addr16 sbb test loop lea and cmp add cli xchg fwait std push (bad) nop pusha push add pop push pop push (bad) pop popa adc bound (bad) mov popf and cmp push jae mov pop addr16 mov cld jb lock add out gs push pop adc dec ss out xor push or jo jo sub stc push enter lods cmp xor testl pop and stos pusha imul enter jo outsl out and movsl js lods and push or cltd mov pop mov mov test mov fiadd outsl loopne and fisttpll or push push jo mov incb jo jmp (bad) lods cmp faddl ret repnz sub lds lcall stc add push mov or or test push adc lea loop push lds and sbb shr inc or repnz es push mov test jbe pop lret (bad) mov pop xlat mov push push push cli adc cmpb pop sub (bad) mov lods andb dec in iret inc popl call or arpl add cmpsl js mov daa stc stos aaa inc add cld pop decl sbb add xor lea jmp push dec lods je ja daa push cld jmp mov pop xchg mov pop mov clc stos add pop jne push xor scas in std add sti push cld xor dec aaa mov mov sarl int ljmp jmp push fdivs xorl dec jne xor in ja sbb not adc ret adc cmp je pop clc pop das call ds xchg pusha call and mov orb dec dec nop int3 pop mov cwtl inc add xor cmc sub dec xchg xor and orl or nop mov mov daa pop mov dec (bad) stc adc shl fwait mov out sub lcall sbb cmpsb and insl and xchg xchg popa cmp dec mov (bad) mov xchg push and repnz sub adc int3 testl or mov add add jns sbb mov test pop mov pop mov les popf in arpl push js scas add gs sub pusha insl mov xorl addr16 sbb add xor or into lahf add lods jge xor pop jae dec push cmpsb xor rorb adc sub mov mov or pop push gs xchg (bad) mov fcoml int3 sbb mov int3 hlt add adc and adc dec mov data16 pop cmpsb and jb popa outsl or repnz add (bad) push add leave in repz xor rolb popa push jmp scas add fstl mov dec push sahf mov aaa jno nop frstor fidiv and nop pop test jbe mull push mov sbbl clc pop dec jno jb jb popf aaa pop sub xor popa imul sub daa into mov fiaddl int3 add imul sbb sub (bad) sub add pop inc mov pop mov hlt inc sbb cld jmp and (bad) (bad) pop mov dec jno mov sub adc std dec mov addr16 cmc xor lret lea cmp incb dec mov icebp scas adc jmp aas sbb sahf push inc test xor (bad) repz in push push push push lcall jge clc (bad) add dec push subb or jb scas inc fnstsw mov adc adc (bad) pop pop pop pop leave into in addl mov mov jnp or rcrl sbb cmp std fistpll inc fs shll cmc jge mov jmp sahf mov shlb inc jl jle dec sub or sbb mov add nop mov lahf popa dec fwait ret add cmc dec jbe xor sarb loopne mov test in xchg and repnz add jne rclb dec and mov out add clc xor mov imul sub add cmpsl call or ror lret out call cld aam in nop cmpsb push push pusha jb iret jnp add pop orb pop pushf in das (bad) jg sub mov sub shrb adc stos ljmp enter nop mov mulps xor push out int3 lock xor fldenv adcb pusha nop lock or addr16 mov inc rorb cli popa mov es cmp mov out pusha fimul cs jmp jnp jmp (bad) ss outsl and rorl adc add push mov adc push testl pusha pop popa lea mov cld add xchg jp xor out adc subb test sub push outsb fiadd sub cmc popa mov xchg int3 rcrl sbb ret mov and adc stc stos stc lea xchg mov cmp pop outsb stc daa adc xor mov (bad) and lods fwait mov or jg jno (bad) push xchg dec dec add test jnp outsb out or dec sub dec or into inc lea rcrb adc lret fwait add inc stos ficompl xor cli pushf mov dec mov xor cwtl inc js xchg loop inc mov xchg mov (bad) into orl or out ljmp test dec dec loopne stos mov jbe loop std pop int pop ss sahf lret stc clc es xor push sub or xchg mov dec push adc cmpsl dec je jnp lock and xor punpcklbw pop repnz sbb or mov (bad) dec mov jl pop xchg int3 pop inc mov mov in pop and mov es add xchg in testb add adc popf mov xchg add push or pop pop popa mov sbb (bad) mov test insb add mov pop mov mov mov ja add lahf inc fistpll mov mov jmp and mov gs cmp test adc test mov cmp mov add add push je push and sbb popa aaa iret or movsb or inc das xor sbb inc rcrl pop inc aam outsb add cmpsl pop mov int3 icebp (bad) xchg xor xor xchg add push push adc stos adc lea mov pusha push or lods add pop (bad) int3 out lds fimull pop popa cmc lea jno out in (bad) movsb fistpll dec outsl lea les xchg mov xchg or (bad) mov mov test sahf (bad) icebp jmp jmp sbb cmpb jg cmp and jp movsl mov dec ss stos mov rcrl adc ss mov dec add adc add xchg popa xor fmuls movsb mov jo cmp dec mov cld ja arpl sbb std add add aas push or test clc hlt daa aam push add mov and mov sub cltd loop mov push out add jecxz jmp les test (bad) jo leave lods rorb (bad) xchg push (bad) js adc push jmp cmp cmpb jne pop pop jp inc ret ret lds or stc push pop xor xor ret outsl aas jo mov ljmp cmpb and mov inc (bad) neg jbe and pusha mov sub mov add mov fcmovnu pop pusha mov cmp jp jp sti jbe xchg dec testb cmpsb call push mov mov fild jnp cmp out dec addl in lock adcb lret or xchg std cmpsb movsl add jl aad adc cld outsb test xchg out mov movsl icebp cwtl pusha fs jne std (bad) push ds ljmp pop loope stos iret mov xor (bad) mov enter push (bad) test dec repz or cwtl xchg inc and add push jbe mov mov loopne mov or jns xchg fimul sub xor push movsb and or divb imul lret cmp cld mov dec in mov shl xor pop sbb dec dec outsb sarb repnz rolb jae loop lea xchg lods (bad) pop pop insb adc add adcl repnz rcr sub sahf pop (bad) mov pushl dec xor pusha adc jnp cmc mov jl popf paddsb mov or and (bad) jl push aaa adc mov adc int3 adc sub lock movsb add push aam pop or roll test add sbb add test pop stos inc or ja cmc mov sub add push or mov jae mov mov mov rcrl stc mov ret mov mov aad out outsb (bad) jl or and dec iret arpl inc or out cs ja pop (bad) xor and push adc or xchg cld outsl inc add leave jo pusha scas and dec mov lock rolb adc pop cmc mov mov movsl sub adc sbb add in mov sub stc xor adc sub testl and inc push mov sti adc xchg repz aaa fsub lock mov push pop add cmpsb bound inc inc rcrb add aam dec or xchg xorb daa mov add lahf mov pop addb or rclb and inc call jg cltd ret pop xor in cmpsb or inc or adc sub pusha cmp std fcomps fidivl test push sbb sbb gs bound dec and pop push orl stos leave jl pop (bad) aad mov loopne (bad) cmp and lret incl xchg mov lcall pop push rorb je es pusha jp popf cmp imul jp sti xorb add fsubr into sbb xchg fsubp sbb add mov pop add decb jo jbe dec and pusha cmc xor pop push pop push mov mov adc repz pusha sbb ret inc movsb pop xchg pop mov push aaa mov imul mov aas sbb pop push mov jb push cmp fiaddl rolb insb mov aas and pushf test lahf inc pushf push push jmp (bad) pop pop push push jmp push out test rorb stos loopne std jp ja sub add xor sbb inc pop fxch mov ljmp mov mov stc mov push and inc jmp jge gs sub push es and push mov pop (bad) sarl xlat inc mov sub pop xor mov shrb decb pop dec adc mov push fildl sbb lock jbe (bad) inc add jp fcoms cmp enter or shl nop dec jne or sbb cmp daa jp sbb (bad) ja popf dec add mov xor dec je sub pusha pop test jb inc sub nop addl dec inc xchg daa push mov ss add xlat jmp (bad) loop rclb adc pop fcos mov sub inc dec loop pop jle sbb pop pushf pop add inc xor pop pop not and push and aas leave cmc push and or mov iret sbb or adc mov movsl test jno add repnz sub jnp dec jg xchg lods lods adc mov or (bad) adc rorl fistl pop pop cwtl pop sbb repnz dec movsl adc popf mov stos jge push je call inc dec shr add dec mov sub mov jmp cmc xchg fimul ss jg push or rclb call cmp xor push pop push push dec cld test add adc ret inc xor sti pusha fbld sub xor push sub cmp push pushf cli push sbb fstps jmp push stc sbb mov pop in (bad) pop sub (bad) xor push fdivr popf pushl mov std mov scas ficoml (bad) push test sbb frstor fsubr mov xchg sub aad or (bad) mov cmpl inc popa pop movsb jmp fimul push and not fist inc mov adc xchg std or pop push in add pushf mov test mov int pop mov aaa cmp sbbl xchg out clc out mov add xor push sub mov aas not sub mov outsl mov push push jns inc ljmp lds xlat ret inc pop add ret aaa pop cltd movsb subl insl leave test in add jnp lahf loopne xchg cld adcb in xchg cmp add xchg cli sub mov in lea xchg add mov mov pop int and xor jmp (bad) xor or into cmp out xor nop sbb (bad) jmp popf out (bad) mov mov push repnz cmp jecxz jo pop dec jecxz add inc cld pusha xchg cmpsl add loope add outsb das pop std adc imul in and ljmp in test mov imull nop dec xchg pop frstor call movsl cmp mov jae xchg aas xchg outsb cli lret popf sti push mov push imul adc pop xchg and sub sub add mov test pop pushl sbb lahf fnstsw pop sub push add leave and xchg cmpsl add (bad) (bad) mov repnz sub jge and sbb or adc repz movsb stos addb mov pop pop and xlat mov decl jmp pop mov sub mov jbe cli mov ljmp pop aad fisub (bad) lods popa sbb in pop or or test fiadd push inc mov ss neg push mov out mov lock aas (bad) inc mov add sti iret push test add lret sub mov movsb lahf jecxz and ja fsubr lds or push add repz mov nop dec das sub arpl jae fwait cs sbb jmp push sub (bad) out cmp push lods pop sub insb adc les fbstp cmp in mov sbb push ret inc jmp (bad) insl sarb dec lahf push jg pop xor and sub pop dec push aam cld jl arpl lcall in shll lods inc cmp mov mov sub mov pop inc xchg mov stos xchg and mov std sub mov mov dec jb pop push testl ret sar push push mov (bad) (bad) int3 xchg arpl jns mov int3 (bad) mov mov pop addb sbb out or or jae dec mov xchg pop into mov and or fnsave sti dec pop sbb (bad) xor sub dec daa push mov dec mov jb mov sub add xlat pop and and jno inc (bad) sti xor pop or aaa and xchg sub push idivb mov cli or push add xor pop add jnp aaa dec int3 push fs std dec adc push add inc in xchg push insb in pop sbb loopne shr xor adc push jo mov clc add sub jp and pop sti add fiaddl add pop pop cmpsl cmp std push jl sub sbb xor or push jmp cmpsl sub not push or rclb mov mov cmp pop fnsetpm(287 aaa pop mov push addl lret imul dec jge add fbld insl sub jecxz or dec and jbe das std xchg out bound add out push pop outsl xor pop push mov pushf xor inc or neg call mov stos ret inc leave dec or mov aam ljmp xor cltd imul cmpsl popf and sub adc or int3 sbb jle adc add in cmp repnz sub std cmp and inc add cli cmp andb xor insl or loopne add or loop nop sahf xor lret imul les insb jp loop inc push popf adc cltd mov mov test in sub jge lds mov aas mov test dec iret ss pop mov lahf lock and das roll aad inc sub sti add cltd cmc test popf dec enter (bad) in fs jnp add sbb arpl aad and rclb call inc sbb cmp mov add inc mov and dec push fnstsw daa sbb (bad) bound adc lahf add jbe cltd mov insb popa sbb lret mov push lock pop (bad) (bad) cmp lcall (bad) jl ja pop xchg jnp lods jp sub add sbb pushf add out pop push pusha and out pushf cmp aam pop jl mov std pop mov scas cmp cmp adc dec into adc and or sbb or push (bad) sub pushf add inc orb arpl aaa in or icebp mov xchg sub repz push add cmp addl rcll (bad) idivl xor and jb add clc cs into dec adc pusha sub sub sbb mov in std enter (bad) xor mov xchg insb (bad) cmp lret xor jns in sub andl rcl das add pusha push rcrl push add (bad) mov fcomip push add mov cmc bound pop mulb mov inc cwtl xlat adc ds inc mov dec iret mov jg fstl sahf aam cltd (bad) lret hlt xchg lret and jmp arpl push (bad) int3 sbb addb and jb mov mulb sbb pop and das jno xchg cmpsb add cwtl pop cmpsl lods mov rcll sbbb jg sbb add xor fs cmp or sbb mov cmpsl add mov inc add inc stc cli mov xchg jge cmp pop inc enter add daa lods inc jnp add jg mov xchg sbb and sub inc stc dec bound daa pop jb add (bad) fxch (bad) icebp sub adc inc or outsb adcb bound push pusha std xchg mov pop jno jns mov movsl xchg mov ljmp lret jbe mov add gs jg int enter cmpl daa enter int3 pop call xor lahf and dec movsb fwait lock push cld mov xorl cwtl add das jmp cli cmp gs inc pop xor adc and cmpsb rolb cmp xchg insl add cmp hlt lea je xor push ja adc outsl vmread dec std adc add push pop iret add push stc mov push xor shll sub ret jo pusha add in pop pop outsl adc pusha ret into jne add sub push ljmp sub or push jle mov jne and add stos xchg mov fdivs test cmpsl out push punpckhbw fistpll leave mov cmpsb mov push mov mov xchg mov je add (bad) je fmull hlt xchg pop pusha (bad) pusha arpl loop or add xchg dec mov add sti icebp adcb mov push mov test addr16 (bad) orl pushf test push mov icebp (bad) and cmp cmpsl into test push cmpsb mov jns pop jns add stos cmp pusha sbb fwait adc sub enter xchg (bad) rolb adc pushf into lods fs mov mov mov inc out xor cwtl jge aaa add test fistpll add cmpsl mov sahf dec jge scas xchg cmp cmpb inc or out (bad) push add lea or dec out aas mov iret pop fst jnp or (bad) mov xor mov push aaa pop mov lret arpl addr16 push int cmp pushf cld pop xor add aad push aam clc in push stc add adcb xor xchg xor shlb pop push test xor push sbb or pop js addl pop nop shrl xor sub cs hlt pop out mov clc xor mov adc lret jno add cmp inc clc push ss jb jns insl push notb add out cmpb lock and ficom or lret ror add (bad) fdivr add xchg and push adc sub jl push jno pop add and jmp jge popf lahf mov stos imul add lods adc lods adc inc loope popf adcb add jno sti mov push cli test and jb movsl or add pushf popf stc addr16 xor mov (bad) js add dec pop popa out dec leave mov rcl push mov mov mov and cmpl leave mov sti push syscall push jnp pop jmp rolb xchg xchg jecxz pop inc movsb add xor rcrl mov sbb popa mov add add dec add mov rcrb sbb pop xchg add add (bad) mov adc jno dec mov xchg mov out in out xor leave pop sbbb mov or into int3 insb call pop cli shrl pusha psubb outsb jp mov scas popf dec mov add loopne push fsubl cld add cmp rcrb sub ret out mov push xchg add add subl cmpb in dec pop add (bad) movsb roll xchg pop popa imul sbb inc es mov push call pop add inc jle pop aaa (bad) outsb nop cmpb enter popa xchg aas fimull adcb nop ss add cmpb pop ret pop fildl out test mov and or clc lods and add mov or and aam add xlat rol add lahf cld xor lret add fistp mov and xor arpl sbb jb dec add int loopne sbb push jno,pt and pusha push sbb pop test jecxz and out or cs xor xor sti cmp push dec orb xchg cmp dec loopne xchg test dec ss xchg inc pop push ret jne cld add mov mov (bad) jae add push and add jg (bad) xor cmpsb inc shrb add xchg pop cltd add fnstsw imul adc sub jle (bad) pop shrd jbe fisttp add stos aad ret and jmp mov mov mov pop add sub aam imul mov xorb ds sub add mov les shrl and ljmp fs push add icebp fcoml inc sbb lods sub adc in cld dec out xchg add push (bad) (bad) jmp div std dec pop sbb add pop add jle shll add out add push (bad) rolb movsl cltd pop scas lods aaa mov sbb push sub sub mov in or cmp jb mov data16 mov sbb sarl push popa cmp inc add dec dec lods add out sbb insl and sub popf cmpsb push add xor ret clc ret rolb mov adc out mov jbe xlat xor loopne add dec fwait sbb fisttp pop inc dec jmp out daa hlt and scas loopne pushf add cmp dec jno jb leave out outsl and mov dec push xchg inc or xor jbe mov fdivs dec rclb in in stos ret add add rorl in test mov mov fs adc pop es mov (bad) and pop rolb mov mov lcall adc lret insb mov push subl clc and cmp add push sbb add test sbb pop mov mov jmp inc out aaa or pop popl mov jns popf fistp adc xchg cmp call add mov push (bad) cmpsl insb arpl rolb xor xor hlt das inc jecxz ja or nop ljmp in add jno or mov cld jmp out add cmp push mov xor ja movsb add cmp cmp mov jae shlb push pop shr inc xchg loopne pop (bad) iret arpl out sbb dec cmp add daa popf loopne push cwtl mov fwait (bad) in and iret and and cld dec or loop mov or push rcl cmp push fidivrl je loop push add sub nop cmp scas into cmp (bad) xchg and inc push ds pusha adc dec out jmp orl or int3 or les repz mov ficompl jge aaa arpl leave lock inc (bad) out sub jecxz add lret mov iret add adc pusha dec mov push test fnop add mov pop add ja pusha pusha shlb orb sbb js push pop stos or js adcb or call in cmp lods pop clc xor int3 outsb xchg push (bad) hlt and mov mov fidivl rclb cmp push aad push mov in xchg cmp or adc je mov and push (bad) cld and mov in xor repnz test sbb fsts add mov cld adc push xor ret xchg push or dec jne and rclb dec adc addr16 fwait cmc inc push lock hlt les inc int3 fadds andb add jp ret adc adc adcb adc out mov fwait or les loopne ja inc adc xchg daa lahf and popa sti loope fwait mov push mov das push xchg pop push inc or or data16 sbb xchg dec xchg xor (bad) jno mov sahf cmp iret push in test and push mov movsl mov jo jo rorb push (bad) dec sub add loopne jg push inc in lds jl and ds test sar out inc push in sbb out loope (bad) add pop adc adc test sub fs cmc mov shl xchg enter sub cwtl jge dec dec mov std mov ret sarl int3 add pop push mov mov adc call dec fiadd or fisubl mov lock cmp push orb push (bad) daa cld clc cli int3 add jb icebp cwtl aam lret into lea mov mov popa xor cmp idivb jp roll rclb test rcr jecxz jno inc mov shrb fisubl push cmp jb in mov pop adc aam lods cmpl fistl mov fdivr sbb xchg cmp js or dec movl int mov mov movsb sub xchg into sbb and icebp xor mov add pop or pop push loopne sbb inc in (bad) mov push mov sub jno add jecxz xor adc lock (bad) mov scas ret add imull fimull call pop sbb cmp test push xchg loope xchg cltd jl xchg leave add enter gs fs jns pusha lret sbb popf mov stc aad pop test xchg and ljmp aad test jle adc inc (bad) (bad) in iret test sbb push pop cmpsb add test (bad) aam add in dec add sub movl pop push fsub sbb adc or fwait movsl xchg mov pop add aam xor sahf js push call dec sbb or out mov orl sub dec jbe cmp in lods loope (bad) ja adc jl hlt mov enter mov leave mov xor add jge lret fidivl loopne add sub cmp dec nop add pop and xchg adc movl mov sub push enter sbb in push pop nop and movsb movsl or pop rcrb or test les (bad) sbb dec xchg xor or mov (bad) hlt jb push arpl ret icebp add inc imul cmp fcoml cmp pusha mov dec ret add and push rclb pop (bad) (bad) sbb (bad) adc pop sbb in iret fmuls xlat das sub inc ficompl mov clc (bad) je sbb test xor fadds and popf loopne or aaa (bad) (bad) les add fsts aaa in ror pusha xor add pop sbb int3 enter cmp js shrb pop std ljmp in (bad) adc loopne imul inc sub add mov xor add push je add and dec je sub test ljmp pop sub push cs pushf add push dec cld dec cs mov notl mov pusha jno jno insb cwtl in lret dec mov hlt xor insb iret shl pop inc xchg push (bad) loopne add scas adc std into pusha push scas rclb test xor jno sbbb push cmp push push in (bad) (bad) jb fimull popf ret xchg jno cmc scas mov test sahf add (bad) pop adc clc cmpb xor jns push fxtract je jbe adcb mov daa mov pop movb inc sbb and jl pushf mov int push incl dec sbb in and aas xchg inc aas std loope jo and sub and arpl test pop enter xchg push adc or jmp (bad) mov xchg ret mov or inc scas xor push int lea add (bad) jbe push xchg call inc jecxz lahf sub push jge push pop cmpsb int sub sti xchg jl mov mov lcall ret sub sub add mov inc xchg clc adc insb dec mov mov mov aam ret add sbb (bad) inc iret or dec cs outsl mov lea xchg pushf cmpsb test xor cmpsl mov in cs mov jb jns mov adc loopne mov jle (bad) dec std hlt push add sbb (bad) sar add mov add pop iret lock wbinvd lret jp int fadd incb xchg mov or cmp inc mov repz push divl cltd mov push sarb xchg loopne pop or and push adc mov jo es sarb enter xchg cli fidivr mov adc mov mov dec inc clc loope inc pop add (bad) or mov dec (bad) xor out push xor and pusha add (bad) fwait js jno mov mov add in scas repnz jae add push stos dec mov xchg jno rorl cmc (bad) dec add jb and js and insl pop les add nop push add loope out (bad) das push leave lret in out inc mov dec or (bad) sbb add ret mov xchg hlt adc cmp push pusha sub adc sub dec cmp test outsl sbb jge pop ret push jo rcl add push mov mov movsb add dec rorb or add clc cs pushf or in adc push or jno jl lret mov call sub dec add aad inc in fld pop ss mov aam mov addl adc add and and or out mov jmp or pop mov frstor push insl cmp lret in movsb mov fs mov leave adc dec sbb add inc adc add bound sbbl mov aam jl dec pop mov daa lcall dec xor pop vunpcklpd cmp dec xorl pushf push cmpsl sbb test in mov or jno cmp sub mov xchg add sub xchg call sbb aad jb in ret das clc push hlt add xchg and dec mov cwtl and mov add push add cmp test dec xchg inc sbb inc adc out push inc leave xchg fisttp push test sub push add jns xor mov pop fiaddl or and mov or mov fisttpll cmp pop pop pop nop nop jp xor aad sbb aam pop and mov add pop lock fmuls add add int3 add sti xor mov sbb push fisubl inc mov push sub mov sbb sahf mov sub int3 pop pop popl sbb aam push mov or loop dec xor sbb (bad) movsb js rcr popa add ret popf iret inc sbb roll and dec add adc add pop cli fiaddl pusha nop rolb push push mov fisubl pop add fist adc push sahf leave push pop sbb rcll add mov movsb movsl clc cli xor inc lcall es jle,pt xor pop and aam jno aad push js loopne mov rcrl jae aam xchg clc ds fwait or scas add mov mov inc or arpl clc loope ja xor or push add sub stc sbb mov out ret lock shlb add popf jecxz jg pop and and jno cmc sbb push or jbe and sahf lock push pop mov icebp rcll ss or or or pop cwtl mov or movsb or js movsl add ret jne jns xor or push pop cmp ss out ja loopne push sahf add pushf sbb loopne fdivrs shll mov movsl sbb inc mov and lret push and push mov adc (bad) or mov out sbb xor (bad) rcrb or push fs pop fildl nop data16 jne pop js ret sti add fs test shll clc add mov cmc loopne and push popf out negl adc push repnz xlat and xor popf jmp call dec add pushf inc pusha mov insl add popf movsl lea or pop movsb push stc mov sahf push fidiv adc add incl and and sahf add stc clc movsl aam inc test sub jge loopne insl dec xor cmp sub sub cmc inc adc mov adc test inc rcrl test xchg pop add insb and insl adc dec (bad) fidiv adc xor xor dec and pop cmpsl mov rolb cmp sbb cmp add add fwait stos sub push test or xchg pop push ret add push cmp or and jo lcall cmp movsb cwtl or mov outsl mov fdivr popf lock add add push cmp pusha push test jo jg bound (bad) sub sahf cmc shr dec mov xor out push int3 adc jo sbb push faddl (bad) hlt adc inc test test push out mov mov fidiv loopne xchg xabort push add faddl jne enter sub mov jecxz fcoml stos (bad) clc fistp or mov sub cld iret fidivrl lret xor add xor dec and push cmp add add ret cltd xor add pushf (bad) mov lock push cmp jb aam jo into loope inc sub test dec sbbb call arpl mov (bad) shl or add mov aas mov cwtl shrb popf dec xchg cld test push mov sbb int xor jo cwtl shlb fs and push test pop inc enter aas push les sub mov int3 adc jb and (bad) pop and push les pop jns jg outsl and sbb push repnz leave push cwtl popf insl xor cs gs popa push (bad) fs dec jne mov clc stos int3 inc mov les inc popf xchg inc push lock push sbb icebp push fild (bad) aam mov mov and xor pop fsubrl xor and sbb fs push mov movsb int3 sub jl test cmp lock jmp call pop adc push mov orl lock add add scas (bad) int insb push mov add jecxz daa fldenv stc aad xchg dec dec add repz cmp or daa je dec test pusha insb arpl and popa ss dec jne add push inc cmc dec cwtl movsl outsb loopne xchg jl cli cmc pop call leave sbb inc adc dec jne fnsave dec add jnp int js sbb cmp std dec les mov pop (bad) xchg xor bnd sub inc iret aas ret add loope,pt daa lret xor cli neg stc das js rcrb adc jge push sub test (bad) inc cmp adc (bad) call ljmp repnz mov cltd sbb mov les xorl xlat cwtl jmp add sbb xor add or mov or test adc (bad) enter push push sub and rcll dec arpl cmp sub rorb xchg pop jnp jno fwait cmpsb cmp lea sbb movsl and adc (bad) jns pop mov inc adc and mov pshufw roll mov aaa dec movsb sti xor mov (bad) cmp cmc xor pop inc lahf sbbl das push out (bad) mov test jno adc and add mov ds enter inc xchg sub popf push mov xchg insl aad adc or xor mov stc add mov leave jbe cmp pop andb add and test add (bad) (bad) cmp pop inc cmc mov add outsb add sbb cmp lahf loop fcompl jbe jnp mov cmp arpl jb cs fistpl add aaa lds sarl sub (bad) xchg cwtl mov pop aas adc orb imul push adc pushf add sbb xchg ljmp mov dec out and shrb xor pop add adc cmpsl push ret movsl add pop mov jnp rcrb jbe sahf add mov jp es add mov cld jbe fist cmp testb fwait mov inc cmp sub xorl mov lcall mov in std push mov arpl dec mov insl push popl dec jg stos mov and testl (bad) shlb adc cltd mov pusha lock or sbb test scas push js pusha sbb adc jbe push cld xor faddl xor add ret and add lahf lret sub cmpsb cld mov mov push mov sbb pop ret adc out adc jg add cli mov outsl add andl jo add xchg adc out dec stos test lock in stos add add cmp add int jo iret add inc sahf pop xor xor loopne lret outsl into cwtl pusha push jg (bad) sbb aam cmpsl add lea and mov loope enter pop or aaa shrb and scas outsb jb fdivrl rolb jle add sbb jl add dec dec outsb push mov fistpl fs les iret and pushf rolb addr16 xchg arpl mov xchg sub add add pop adc add testb in and mov mov fild leave loop test rcrb inc mov (bad) dec jo imul and xchg mov into sub xchg test fistpl mov clc in andb push dec fs add pop sti push sbb test mov jmp pop fucom adc sub add xor leave pop add out fwait movsl int je mov fucomi sub adc ret es stos pushf jmp pop iret cmp mov push movsl jecxz add std xor adc mul fstpl jge sub shrl dec mov cmpb je mov jb lret add mov std push sbb sbb push test dec stc scas loop jmp ljmp push popa (bad) add xchg ds loope push push add (bad) fs xor pop je sub mov iret dec pop pand mov addb xor adcl xor add in jno xor and xor clc lds cmp lcall fsubrl pusha hlt xchg cmp jmp neg pusha cmp fistl mov add mov lcall fisubrl cmp and mov outsb adc leave dec fidivrl mov add notl outsl mov add push cld add jno dec je pop lcall mov mov gs push mov push arpl ljmp and mov call jge lahf in cs mov stos or jbe lret ljmp addr16 ret std mov idivl jb popa jmp orb out inc popf movsb and mov cmp push or fmull dec mov xchg mov xor out call and out cmp imul es loopne imul and push ror mov add jmp insl pusha clc test addr16 xchg or leave pusha xor icebp dec orl xor xchg inc fwait xacquire push lock frstor shrl lret jle sub pop xlat icebp add jmp pop (bad) mov mov nop jl cmp (bad) dec push loopne xchg es xchg add add xor or bound repz loopne mov test std punpcklwd adc imul test adc cmp lods mov loope push idivb mov lcall test dec jmp pop pop cmp add andb mov mov int pop imul loope inc fs mov push add adc add imul insb mov fisubr stc and jo pushf jne punpckldq andl ljmp fwait mov or cmpl cmovb mov xorb in push pushf pop sbb mov sbb and pop popf pushf stc mov cmp dec stos xor divb pop in dec int3 js addr16 and push inc push imul pop pop cmpsl mov xor add pusha sub adc and pop xchg cmpsb aas push add or faddl xchg sub fwait xchg xlat hlt cmp pop push mov out repnz xchg xor bound movsb jbe cwtl sub int push add cmp mov and push xchg pop cld ret fucomp (bad) xchg loope mov jp cmp or push lret incb push cwtl stc (bad) das mov adc add cltd popf adcl pop xchg cwtl push add ret xchg mov mov lcall lret fsubl ficom pop shr mov inc movsb iret xchg or mov xor cld mov mov pop inc movl movsb and add cmp xchg shr pusha adc stc scas int outsl loope movsl ja sbb or or cmp movsb jno fstpt mov sbb stc dec inc mov mov je ja sbb movsb adc ret dec adc add adc outsl pop xchg add inc sbb pop pop sub pop shr mov add imul pop dec push ffreep cmp sysexit aas add mov shlb pop jge xchg add mov (bad) fwait inc repnz add into test fs jbe dec cmc mov add sub mov inc sbb add ja push add jp add add fidiv xchg add gs mov sub in jns add cwtl and mov add lcall fcomi andl and stc test pop rorl cmp mov pusha gs test add xlat das dec or cmp jb pushf out and test push adc call inc lret sbb sub pushf push stc inc adc sub push addr16 loopne mov and mov push inc std ljmp popf xlat pop bound clc fwait dec jns mov insl jb loopne push adcl test mov dec fistp pop lea mov test (bad) add stos movsl add dec xor icebp pop insl cmp aas sahf inc pop lds inc xlat rolb push es cmp xchg pop and mov jmp cs push mov mov roll dec popa jae les cld rcpps mov inc dec pop arpl pop and add scas je test fs add or js push (bad) shrl cld cmp pushw add fsubrs jb adc sub cmp dec pop cmpsb enter rclb jo jae popf sahf out inc js test je (bad) lret push in add fisubl add mov dec pop adc and add jg mov sub jae es je and lret fist xor cmpsb sub mov mov mov cmp imul mov repz loopne inc fwait fs xor jae aam inc hlt mov enter adc sbbb int3 dec shll in adcl es pop xchg add out and inc out inc dec xorb dec mov add push (bad) push mov lret mov mov mov pusha inc fs and push inc lret in hlt loop mov adcl fcomp inc or js pop pusha testl xchg pop mov push stos add insl (bad) shrl clc shrb push lods xchg js in stos sub fs popf push dec sub inc pop lret js cs popa mov bound pop adc loope test cli adc dec pop inc loopne pop sbb je and cmp (bad) shlb add push cmp push mov add xor mov inc add movsl test add (bad) (bad) cmp sbb sti fisttpll push add or stos push pop sbbl adc inc and mov stos add mov mov xor out int3 xchg nop lahf imul call scas fisttpl xor add cltd (bad) mov pop sarb pusha cld loopne verw mov pushf xor lcall sub cli cmp jp mov gs in inc push xchg inc lea dec add sarb mov (bad) data16 push adc sub jnp test jl je or xchg test sbb mov insl mov je adc pop jmp fidiv loopne mov dec das sub or mov cmp iret into jle pop sbb ljmp xchg dec lods add jl add pop mov enter inc clc cmpsb es fisubl ds mulb aad push mov xor lods xchg into and add aam mov mov sub pop inc test test mov mov bound addr16 sbb dec cmp push mov add pop or push jg inc aam (bad) lea add cmp adc mov cwtl push fsubl dec pop add lock rorl xor cmp add adc rorl inc add out add xor pop add jbe mov sbb pusha push sbb in mov add movsb pushl adc aaa mov pop cltd movsl mov add mov mov and sub ret jle xchg add scas daa sahf add mov pusha fsubl xor xchg xor and xchg sub pusha mov sub mov add pop lcall add into push sub negl add arpl xchg add mov mov xor test out xor cwtl jle add js and mov in sarl lret jo (bad) out cmc add loope mov add xchg shll fcomps mov xor adc scas cltd add (bad) out sub adc mov push add mov add pushf cmp sub cltd mov xchg add mov dec add add push shr jp add addr16 iret fisubr add andb daa pop nop js call movsl mov out (bad) fnstsw mov add jb syscall cmp mov repz mov es cmc pop jae je pop fiaddl pop inc adc or add push add jo sti test sbb mov lods adc clc inc cli test adc fimull rcrl inc sbb and arpl (bad) int3 clc scas addl fsubrs cmpsl ret add dec shlb pop js fistpll cmove mov push add and loop fisttp add mov (bad) pop mov sbb push jb sahf add pop adc inc mov pop lods ret (bad) dec dec or mov adc cmp movsl sbb adc mov cmp minps lods pushf and movsl push jnp sahf add mov and add cmp or add popf pop add mov ror add cmp sbb aas xchg je cltd add fwait add sub mov repnz pop dec movsb mov test das adc (bad) cmp mov jbe insb call cmp mov mov pop jmp out mov add pusha rorl pop decb in add dec (bad) iret ja sahf fadds xchg sbb jns adc add mov (bad) repz pop mov mov mov adc mov (bad) ret jg popf rep loop add popa push mov push push cmp adc ja push je hlt jae cmp pop pop mov inc stos out scas sbb and stc dec pusha dec jg movsl jl push cmp test pusha mov sub aas xchg mov sub (bad) idiv inc mov xor gs lret inc cltd push mov cmpsl (bad) repnz dec lds lahf xchg lahf sbbb lock add pop in inc fistl testl loop jns xor or lcall pop les dec push je dec xchg add xlat xorl int3 xchg xorb add mov jne cmp mov push (bad) cmp (bad) xchg cmp jno lock add fcompl pop lods mov push pop jne rclb adc cmc scas jbe divl arpl sub add insl xor push lret add out je fldt add in rol adc incl enter shld mov addr16 inc stos stos lret cli mov jnp add (bad) xor adc mov incl xchg xchg rcr sub daa mov push loope insb sbb push or mov imul add std aas faddl pop ret inc or out fwait xor sub (bad) mov imul es inc mov add mov call sbb repz sbb cmc push jo mov (bad) xchg pusha (bad) inc test sti xchg shrb add add sbbl (bad) push inc add add gs jbe out rolb daa adc push stos xchg mov inc cmpsb add ljmp fild ljmp sub inc loopne mov pop or add inc jle add shlb fidivl fs call add lahf push lret je add pushf dec pop push adc jg movsl xor add cmp pop sbb push jae push adc stc in xor hlt cmp dec cwtl call cmp lds xor test popf xor and pop jne aas push or lods pusha mov imul cld or pushf adc push push imul pop call or mov ds cmp jno icebp sbb cld jo mov cmp add fimul icebp subl mov pop call add mov stos dec fldl jne adc aas mov addb loopne mov out jmp fs cwtl add or div scas add cmc cmovg pop pop add in ja mov (bad) sti imulb dec out data16 add stos add nop sahf inc and loope lods shr jmp mov add lret sbb int jns fcomp add fsub cmc repnz sti lods pop in add les out lock jmp jno inc pop jp add lcall (bad) dec or (bad) cmp dec (bad) cmc incl or push jns sub add mov daa sbb arpl xor xor call test adc lods movsb sub mov inc xchg add or jl (bad) mov push lock rcr add cmc hlt dec mov add cwtl xchg iret xchg enter icebp adc push add xor inc adc or jno push fist fnstsw cwtl enter scas jns aaa add mov push or fdivrs loopne xor fild aad test push lret mov xchg lock popa jge popa fidiv pushf adc and dec cmpsl fsubrl pop scas enter loopne or and pushf icebp adc cmpb xchg jbe cmpb inc or adc and cld push lods les jo xor push cli rclb adc pop mov aad cwtl enter push ss push stc inc add clc sbb cmc xor hlt xchg add cwtl clc in popf repnz push int3 outsb fsqrt xor inc push imul lock dec loopne dec mov insb and or or add inc cmp or add js dec xchg popf cwtl add (bad) pop sar mov pop hlt mov cmp push mov lods jl outsl push int loopne jo and push movsl cmp cwtl pushf and pop cmpsb sbb loope mov cld insl mov lcall adc movsb cmp inc fdivs roll fisub xor adc sbbb cmp sub pushf popf out outsl jle pop aam dec add jbe cld mov cmp mov xor cli addr16 pop insl ja adc sub mov push std mov push aaa in add fucomp and icebp mov sbb cwtl push inc fsub mov lahf sbb ret pop inc add jecxz add lcall inc xor (bad) mov fdivrs or pop add pop aaa cmp push sub add xor and syscall movsb sbb sbb or fdivrl sub inc arpl aad xor lea push or add sub repnz jns mov insl add fs movsb jp cmp mov inc xchg mov add (bad) mov inc cmc add leave adc cltd push pusha push sbb in jg and add aam mov or fdivrs add pop out sbb loopne loope and mov mov mov shrb in stc test ljmp std sti call pop hlt mov test jbe lock call and push mov mov enter mov dec mov jle lock lock or cli jne mov jl pusha stc sbb mov inc es push cmp push xchg add lds inc repnz repz add sbb inc (bad) cli fimull fsubs add je shl sarb daa or cmp inc loopne or jns and and call das jne inc fadds mov mov adc and movsl sbb inc popf fucomp nop shlb xlat push push pop cld and fdivl inc adc int3 icebp push (bad) mov or loope pop cmc fisttpll out mov in push cli add xor movsb mov dec in or jno loope xor xchg mov pop and std xor add das imul xor pushf push call loop add (bad) in les js cltd aad popf in xlat les cmpsb sbb or or jmp xor sbb test mov mov xor push cwtl loopne dec jbe fs or add xchg movsl jmp adc sbb jle add mov push inc test int3 cli out sbb inc cmp ror shrb dec push xor int mov cmp out jo mov jb loope sti fmuls scas add sbb movsb cmpsb leave sbb push movsb pusha sbb add mov mov nop add cmp pop and mov mov popa inc js add jb out lcall xor add jg and cltd and push cmp mov add jb xor sub incb mov add xlat and push sbb (bad) mov mov cwtl scas shll cmp jo (bad) fnop sbb bound je push call les adc test jbe pop cwtl add jle or pushf inc adc cli int lock rcl adc (bad) xor cld and ret loop dec (bad) jmp mov in inc mov adc sub nop dec jo dec hlt dec stos mov popa sub sahf sti lods xchg cmp out dec (bad) push bound mov inc sub mov lock xor ja pop dec and inc mov pop ds mov add sbb xor sbb mov fadd cmp xchg js add and jl cs popf mov mov ret add lods and or sub out (bad) push push adc data16 or or mov lahf xchg nop jnp xchg cmp add (bad) (bad) add fmulp pusha icebp cmpl xchg jle movsb loopne or or jo sub test out push add cmp js mov xchg inc adc dec popa add ret popf fucomip mov or sbb inc dec sbb xor aam or fild sub int3 lret sahf mov or cmpsl in addl rcll fsubr and rolb add das add pop push inc add pop out jp ret or aad and hlt push fsubrl push insl call xor ret inc les popa insb or out lods xchg inc adc add mov sub loop dec xorl dec sbb data16 or fsub xor adc or call nop enter test cmp cmpsl mov pop jle inc pop add or mov pop rclb popf jmp xlat ja and mov mov adc sbb mov les sbb adc fstps push in cmc loope inc add cmp out adc stc push (bad) mov cmpsb rcrb or orl outsb ret and mov or push sub inc and notb sbbl sbb cmp nop je,pt jb xorb fs pushf daa jns cltd test jns xchg cli cltd push and pop cwtl (bad) and push add push mov sar popf jo incb pop and nop cld setg push push xchg fstps push jmp cld pop xor cmp dec sub mov outsl adc dec lcall pop loop xchg (bad) sub jne or hlt das add loopne cmpsl insl mov es movsl add push lock test add call lods sub add inc les jecxz nop bound scas sbb ret or sbb das cmpsb sub cwtl jno add int3 pusha les lds or dec inc faddl add in jne in pop (bad) xor or jb scas pop xchg je fadds jle jge xor add adc sldt in ljmp adc movsl inc incb adc arpl es (bad) bnd or sub (bad) or mov cmp leave push je inc push out stos adc fstpl out (bad) xor xchg (bad) sbb rcrl add adc cmp mov (bad) dec jns scas pop imul leave pop fmull mov je push shlb mov mov scas adc adc sbb add hlt out mov les xor and shrl pop bound mov inc push cmp and adc push insb test xchg add add mov sbb int and pushf add and insb mov adc pusha call dec inc and push or cld mov movsl (bad) movb sub lcall add xor cmp outsb xor cmp jl arpl jb add push cltd loope mov sahf insb adc lcall dec enter jge or sub shl add pop dec jno push test push mov jns pop adc sbb pusha push and scas loopne xor jmp (bad) jae arpl xor dec ds inc push xchg mov ret in dec push adc push adc shlb push in mov std or and sub inc pusha dec mov (bad) cmp xor pop xor push rcll pop (bad) fdivs hlt jns pop loope mov cwtl adc cli movsl adc xchg movsl inc shrl or add (bad) jb mov xchg add push cmpsl arpl add sub leave sbb js psubw into xchg sti pop int3 or mov movsb je xor enter dec dec (bad) imulb push dec fsubs inc mov dec add pop add xchg mov cld (bad) pop or and pop data16 push add (bad) xchg cmp dec outsl icebp test sbb aad cmc in jecxz popf sahf flds jo push dec std into out mov loopne mov fsts cmp mov in adc cmp mov shl inc js adc inc movb lcall loop push cmp repnz les addl repnz sbb pusha clc mov insl leave sarb ss dec into enter nop ret cmp pop pop sbb inc int3 dec hlt and mov ret and (bad) mov push jae xchg mov shlb pusha adc lret mov push add mov adc bound inc push int3 cmpsl ret xorl xor rcll cmp test mov orb adc lds or cmpsb add gs push cmp xchg clc cltd xchg in out les es xchg fs imul sub inc stc hlt cmp shlb pop test sub insb cmpsb push lahf repz sahf rclb mov enter faddl loop dec ret pop xchg inc adc mov stc and or add hlt and mov adc ljmp (bad) mov in add dec sahf rcll inc pop pop jge test add repz sbb je rolb jb sub xchg and and mov cld repnz imul dec dec and add movsl cwtl ret add jnp out enter call add fsubrs add roll push jnp pushf es inc pushf pop or jg push insb xor push pop notb mov roll and mov adc add push mov and and jo sbb js roll sbb jns mov add les inc push nop sti mov (bad) lcall add rol pop dec dec fcom add cltd jb je loope jo inc call adc aas and mov je aad test add and xchg add xchg js cmp mov push rcl ljmp sub fucom in rclb adc stc movsl fwait ret std (bad) aam jp movsl add sahf pop (bad) mulb mov cmp push (bad) adcb int3 push js jo add aaa dec add mov mov dec mov mov cld sbb scas add xchg int3 push mov and add xchg jp mov icebp push shlb lret jge addr16 sub int3 sti push sub sbb cmpsb push out call pop mov jecxz add or adc adc and xor cmp stc sar or cmp inc js push lock add rcll inc push fwait cltd xchg inc xor adc push lret or push leave adc jge add cwtl into stos ja clc fcoml xor lret xor movntq or (bad) hlt add cmc pop cmpl mov (bad) jg sbb dec and or cld push xchg andb add mov ret cmp mov fwait add lock xchg jo mov sub jno jo scas pop inc leave xchg or push sbb mov jmp js add mov dec adc lock testb les or repz or aas xor xor pop sub test xor into xor andl nop push inc and push mov mov pop fdivrs in insb pusha push jne push lret icebp mov mov lret fs clc fwait (bad) push loope nop lds insl sub xchg add dec mov (bad) ss and in add dec xchg lcall ds (bad) (bad) loopne int3 mov aas ret jno mov and aaa add ja adc imul ljmp dec jo in mov pop mov loopne call or scas scas add repnz mov and pop hlt pop iret cltd aam and or test push xor adc lcall and cmp lds sub pop daa pushf je inc sahf loop js dec sbb xchg add jo clc test (bad) int3 or les in loopne loop int3 cmp add cmp leave ds xchg sub inc mov andb add or int aad hlt push cwtl test sub inc sbb xor sbb sbb or add ret jns pop lds icebp push pop sbb adc movsl lock sbb imul pusha cltd add and lds rcll in je cmpsb xchg adc inc icebp std shl mov push and sub mov repnz xor jo jle cmpsl xor xor mov push out dec mov add imul mov js cs pusha (bad) data16 push pop cmp das (bad) push or int3 adc pop and ds sarl sbb rorb push mov dec cmpsl mov inc rolb pop dec push cs jne loopne sub aam fldt int addl je dec pusha scas dec pop mov push xchg pop movsb mov jge lock pop mov mov jo rcll data16 test mov pushf jp mov and adc dec rcrb (bad) pop jl sbb mov aam and ret dec movsl bound cmp icebp xor mov sahf and mov pop lret dec push ja adc sub mov iret leave cmc sub (bad) mov dec in adc and push ja add gs adc pusha nop iret pop cmp or cwtl les push xchg mov jb xchg scas adc sub xchg loope push lcall test cmp fdivr mov dec jmp and pop orb enter pop and test inc adc ret cmc fld pusha adc jl movl add dec rorb inc add movsb pop lea mov pop pop pop cmp and mov xchg cwtl mov loopne mov loope addb fadds mov lcall adc in ret ret xor popa pop js test subb out mov mov xchg jle es mov hlt add dec (bad) and push mov in mov adc sbb mov push arpl enter jb cmp sbb adc mov adc or mov sbb push out add push inc cmp divl dec push pop inc and mov or data16 movsb scas decb add jle (bad) ret enter insb cld xorl cmp and cli repnz fs (bad) int3 ss inc add roll mov fs lock and sbb jl call insl sidtl fldcw call (bad) mov xlat popf or imul adc and xchg lea rcrl lock (bad) fistpl push into fbstp pop dec inc popa lods popf out dec test xor push push enter testb xchg jecxz mov xor push lods cmp les pop inc flds inc lds pop les push (bad) js fisttp add call and and inc jno es push xor push fstps xor sbb mov jae jno mov lods incb movsb add or ficomp mov or sbb add add add hlt imul add fcomps jae jno jo (bad) fsubs cmp inc lret add iret stc adc mov into rorb pop push xor jge and adc test cltd add jne sub inc and adc jl sahf scas pop cld leave fucomi rcr int3 xor fdivrl xor rcl leave mov cmp lret subl loopne or jo aas or es inc or inc and or and xchg pop add xlat add imull mov lcall call (bad) mov add add sarb ds fwait loop lods and add dec add jecxz and mov popa inc aad push cmp es shl lret and cmpsb xchg jae or sti inc jecxz dec in pusha mov adc xor mov pusha or and (bad) lds test dec mov mov xor stc icebp dec jns sbb and into repz adc clc les push lods jl pop add adcb pusha mov xor jmp pop aam push movsb ret cmp sahf and scas fadd dec add pushf ss mov stc push inc pop pop lods loopne and xor les and cmp ds add jno addr16 ds adc clc push cwtl inc out repnz sti ret add mov call lcall out sarl sub push mov mov dec (bad) push jo imul loopne or sbb push in pusha sub dec sahf cwtl inc push popa xor inc add push xor popf and mov (bad) sub pop inc aas add fistl xor add inc fiadd mov lds sbb out pusha call mov add inc and push and push lods fmuls xchg sub pop sbb ret rorb arpl adc out mov xchg lret and mov xlat jp nop adc jo inc dec sub and add out push clc out mov pop add js adc jo cmc inc fidiv clc pop jl notl sahf xor adc jo loopne and or (bad) add mov mov mov xor add into cmpsl ss xchg cmp out add lret cltd push push lea adc fiaddl and lods xor leave jl arpl push cli pop fs hlt dec lret cwtl rcrb push into aad leave lock inc dec popa adc sub mov cmp jecxz add inc add stc cli addr16 mov faddl lcall inc cmpsb movsl xchg subb clc jg mov cmp mov sbb dec and mov xor jnp mov cmp lods mov push (bad) push nop cmp sti je cld in cmp clc aaa mov fbld cld adc idiv ret xchg dec adc and cwtl add push mov xor pop mov mov dec jmp or mov mov ss lock and je movsb add sub inc or push add jecxz jge in int3 dec dec dec sbb sbb dec rcrb bound int push adc and inc or xor fisttp and xchg fsub orl adc lret (bad) rol mov loopne sub xor outsb jb or unpcklps inc sub push fnop dec out inc add mov or es xor inc scas add jle mov test mov rclb repz mov xchg sahf jl int popf or clc mov in mov mov (bad) mov add mov ret in shrb add adc aam sbb clc adc and pop shrl inc or (bad) push notb add fsubrs cmpb add insb add mov insb add or adc push mov inc dec or repnz sahf ret sbb add adc std cmp and inc (bad) jae xor sub xor fwait inc adc std adc xorb inc sbb add clc outsl popa xchg add mov incl or jb pop popf hlt push or enter jae loopne test pop xchg in aaa in (bad) cmp movsb mov mov push dec or movb es loop add mov jo xor jmp or les or std sub jmp jns mov movsl fs fisubl and dec push inc or (bad) lods js mov enter out out jne add xchg in cmp sahf aad dec call fs lret out cli pop ja add shrb (bad) das sbb adc or loop add pop cwtl (bad) fildll out jg repnz enter pop cld int cmp inc dec andl ljmp inc dec in popa or clc ljmp jl add pop fstpt pop ja sarb jg xchg add stos ret xor sub aaa imul push xor add sbb in cmp or jbe push mov fwait hlt mov das and dec out add inc xchg ja jnp popa or pusha test pop xchg clc adc add fdivrs les add imul cmp roll mov push adc sbb xchg fwait push loopne sahf out fsubrp imul jno jns sbb add ljmp cmc pop xor rclb arpl and bound jmp je pop push ljmp add bound scas rolb andl xor std sub add fdivs scas adc and push pop add adc ds cmp pop inc add mov and xchg (bad) or test pop mov adc xor or inc xor mov adc inc cmp xor stc jns pop aaa loop sub test in xchg pop adc lods adc clc repnz xor cmp fs imul mov jb pop pop push push pop mov rcrb les in jle inc and jo push adc (bad) sbb fs adc dec push inc mov pop rcrb pop jge sbb aam hlt and mov lahf es pop iret shll lea push std (bad) push int pusha int3 lock rcll mov push pop test mov mov mov xor cmc or add cld das dec and dec xchg lahf cmpsl xor popa je loopne in add xchg movsb jno xor sbb cmc or pushf add dec stos in adc jne stc adc or cmpsl lods ret (bad) out push les cwtl push gs pop pusha outsl sti push push mov fist ja mov and std dec or xchg cmp add xchg xchg push lock xor mov daa pop aam pop and dec xor dec test and aam in sub in add adc and in sarb sbb shrb mov movl mov xchg lock xor push jo enter pop sub dec sbb xor rcrl int3 (bad) loopne mov fsubs lret das pop mov sbb inc cmp jecxz clc xchg push mov lods call rorb insl int3 push and (bad) hlt push rclb ds jae das jo popa fdivs stos ret mov imul das mov push and jl add jbe cmp stos cmpl sub (bad) bound movsl out stos stos in data16 push mov dec rcrl test sbb jo in cmp mov push push inc mov sbb pusha adc jns pusha adcb or and mov add mov inc ljmp loop test ret jo sub lret cmp xor push dec add cmp or cld pop fcomi cmp pop stc fisubr (bad) pop add loope jno jns dec call xchg aad test lret fisttpl loopne sahf aam lock xchg stc adcb mov pop push rcrl lock xchg add insb in int add out sbb adc dec pop pop pop inc fmuls xchg int3 pop inc pop add dec mov and cmpsl push inc add sbb xchg mov add xchg test shll jle fs xor pusha mov push cmp cmp and sbb pop hlt insl scas xchg or js outsb out add sub mov negb pop jp add jno inc push mov fadds mov jbe mov adc nop mov lock (bad) or nop rcl jle aad jmp jb mov stos sti divb fldl2e or in xor add int push inc out mov (bad) div (bad) sbb arpl pop xorl push add jmp mov pop shr mov movsb movsb xchg mov incb pop or jo inc push shlb push cmp cmp cmp xchg push (bad) jns sbb add jnp sub int3 sub add jbe imul (bad) jp sqrtps mov sub push xchg xlat aas clc andl call fyl2xp1 pop sbb icebp mov push pop inc dec sti or mov inc jno and lahf clc pop push or repnz cmp fldt loop inc add das adc add cmpsl push mov adc roll dec mov cld mov add pop (bad) xor std test fdivl push jno or mov in lods xorb popa std sub movsb out push data16 enter mov out cld es or je xor inc add dec pop (bad) xor mov addl mov mov lcall dec xor int3 mov (bad) mov xchg lods push cmp js pop add fidiv cs andb add ss sub and add leave pop sarb aam mov popa xlat leave cli addl adc rcrl insb fnstcw push mov lods gs clc mov cmp inc lock add rcrb mov mov and hlt add cli xor movl sub out stos and loope add push rcl and andb xor in sbb mov add scas cltd cmpb ficom ror adc xchg in sub lcall lea out enter cmp loopne xchg das xor ljmp subl into xor xchg js divl mov mov xor cwtl mov rolb cs lea in clc popa push inc jl mov xchg pop nop mov pop inc pop add sub cld pop hlt (bad) mov dec loopne imull scas pop inc leave mov pop (bad) inc (bad) dec mov lahf inc pop rcrb pop fucomi push or lock cld cmp insl inc pop jbe push add mov and pusha js in add xchg xchg hlt add test xor add cmp addb aad and mov fcompl sbb negl test clc insb (bad) fwait jns push mov sbb xchg rcr pop sbb bswap nop pop and xor cld cmpb lret xor repnz add lahf sub mov sbb push adc test and xchg loop cmp add sbb adc mov mov mov lods adc lahf pop or ja test js aas mov je inc dec stc push leave push jp ffree or pusha push cmp jae (bad) mov mov sub lcall into repz sub subb xchg arpl stc insb pop mov nop icebp pop vpsubb xor movsb ret call sbb outsb fstps hlt adc imul int3 (bad) fsubrl add pop rcll je imul ffree int mov cmp add fs jns push dec callw mov call add out adc wrmsr int3 push add xchg loope mov pusha sub insb add pop cmp adc fdivrs xchg shrb xchg mov pop (bad) xor dec xchg mov pop push and xor (bad) push mov ror xchg js je hlt aam jmp movsb jecxz cli lds xorb test fmull loopne sub (bad) pop sub pop scas ja xor dec gs rclb mov adc shrl push push pop test sub jecxz push mov cmp mov test add mov mov arpl cwtl pop jno and mov xor xor aad dec jo inc push and mov jg iret (bad) or mov call (bad) add mov and negb int3 sysexit notb add or jg inc pop add jnp loop mov mov mov pop in pop push inc mov fsts or fcompl outsl push pop sbb xor stos mov xchg loopne es cld test in into dec enter push call lods cli jns inc subl cli mov mov xor loope push nop mov add adc and daa aas scas xchg cli insl fidivrl lods out and movsb sbb test in ds js loopne inc in call inc jmpw mov pushf or ret pop rclb dec and xchg scas aas mov repnz xor xlat cmp dec mov pop in mov rolb pop and jl inc or or mov fiadd xor add aaa fs (bad) leave xor fdivrl push fisttpl add push ret je shlb xchg mov insb stos add mov mov lahf push lea cmp pop loope cwtl pop mov das int3 insb (bad) dec iret jecxz or test and cmp dec cmp mov faddl imul sub cmpsl adc jle push sbb pop adc movsb fs dec pusha fistl addl jge xchg xchg sbbl dec mov sub and push mov mov and push pop adc inc sub mov shlb jo ficom jne or pushf dec mov (bad) xlat mov insb cwtl sbb push xchg mov (bad) jo cmpsl add mov js shlb scas jns cs notb pushf mov enter xor cli sub bound push (bad) scas fxch cmp cmp push hlt pop fsubl fucomip push fwait jl js sub rcrb or adc ds call repnz aaa js push iret hlt in sarl cld imul rcll jo or pop hlt inc arpl xchg mov dec mov enter pusha fxch sbb fadds push cmp sbb (bad) jo rclb aad (bad) add movsb test test nop orb ficoml (bad) fistl sub movsb cmpb cmp push popf into add mov js popf xchg (bad) add mov inc mov in hlt popa mov mov cmp push cmpsb sahf aaa sub dec cmpsb pusha jecxz cltd jg rorb int3 mov cld inc pop inc push lret mov aaa aam push inc or ret add subl ret xchg or rcrb clc push lds xor inc test cmp dec cmp test mov sub pusha ds into inc xor push sub mulb pop stos or call xor sbb inc lods ret ret jnp sbb aam and pusha jecxz push and pop pop mov sub inc in jo orb shrb adc sar pop cld or les repz fmull mov and subb imul ss iret and pop cmp add push jo in and push or into dec out add mov xchg jge (bad) mov push cmp lods orl faddl gs mov jo lods movsl dec and sbb jp or push lds shlb pop fadds inc iret les repnz dec (bad) push inc ret in pop hlt sub insb add push aam mov call xor fist mov cwtl pop daa int3 out jmp push sub inc adc aad push jle lea add inc repz add xchg lret lods xor push add jp pop rcrl (bad) repnz ret xor repz and inc pop mov lock icebp test or pop outsb roll (bad) clc inc sub (bad) or add loope mov or (bad) xor aad add js pusha mov stos sub iret (bad) or js movb jecxz popw mov adc xor cs in sub mov enter inc notl hlt inc lods (bad) jo movb cwtl pop insl dec dec addb xchg sbb (bad) (bad) and xor fimul sub jl out pusha or inc mov hlt insb fdivrl xor jo push mov dec lods enter cmp dec ss lods and cmp fisttp xchg sub cmpsb sbb add pop push add add cmp add nop mov ljmp and popf ss push cmp into mov pop rclb dec les mov fldl pusha int (bad) (bad) or add into aam mov mov fwait ljmp push cmp ret xlat mov pop add jp xor jns jns sbb pop push ficom xchg add push cmp movsb and cmp push and dec or insl xchg push push adc sub or push fildl pushf inc xchg mov or mov cwtl aas pop jl jb add rolb sbb inc adc (bad) loopne adc (bad) lcall js push xchg in pop mov (bad) dec adc pop mov fiadd adc test in jo and cmp add xor imul mov insb mov cmp rcrl lds cmp pop cmp pop enter cmp mov pusha aam mov jp inc scas mov loop xchg sub adcb icebp rclb clc std xor add pop lahf jb hlt test xchg add loope cmc add lcall inc push sbb push jbe,pt dec lret sbb rcrb hlt pop insl fistpl mov js nop nop inc or push faddl sub repnz dec movsl mov loopne jne add adc call out push ror mov lds add cmp inc adc (bad) adc push shrb (bad) and pushf dec mov push (bad) into call shrb adc pop push jecxz test shlb xchg cmp repz or or (bad) mov into xchg dec pop sub lret xchg mov pop xchg adc pop mov int3 adc mov pop mov outsb nop leave ret sti mov and push cs adc arpl aas notl sahf out pop and lret fnstsw add xchg nop xor mov mov fmuls dec hlt movl xchg gs xor mov imul or and or nop clc ljmp data16 sub int3 or xchg adc das cmpsl insl sbb xor test push cmpb rorb and add pop add cmc rolb inc fimul add fistp call push into es add data16 or and add into sub fimul out imul aam jnp js ss rolb and add test xor add or xor nop jmp adc dec in pop inc xor fldenv push enter push and xor mov (bad) or ret mov test add nop push and adc addr16 sbb cmp rdmsr add push pusha lods sbb and pop dec cmp add add cld ret movsl sub jl movl aam (bad) pop rolb in (bad) (bad) leave pop or xchg add xlat push cltd adc add into and arpl add sub into and (bad) or add loopne movsb jmp jno mov add adc xor adc pop lods add and (bad) push testb xor jo str sahf mov mov nop outsl jmp pushw das dec (bad) out push movsl pop or dec and add std mov sbb mov add jmp cmp test push inc push dec mov xor das sbb mov pop mov sti sbb dec adc xor rolb sbbb sbb mov dec pop loope sbb dec rcrl adc stc cld sub sbb loopne test mov push jl xor cwtl or xor loopne sbb add fsubr cmp push arpl and add nop push ljmp add mov fwait add fistl rcll and add xchg (bad) ds sbb repz leave and mov cltd jle js and push lret or add cmp aas adcb popa xchg or addb adc dec xor js pusha cli and pop out jp cwtl inc inc cmp push lods pop push scas sbb adc push dec clc mov add stos loop (bad) clc aam or pop cld add out inc loopne iret mov add xlat xor icebp in dec lods loopne out push xchg jo rcr or add cltd ja arpl inc repnz enter adc je jo and (bad) pop xor mov or testb or jb cs sbb or lock xchg cmpl jecxz sub jle add popa xchg xor gs and pop mov movsl addb push or imul add adc and sbb pushf add insl and leave add les mov push je mov dec cld out outsl sub hlt pop sbb inc and pop adc aas loopne sub into pop add sbb loopne mov sub push add push je cld out add mov adc adc (bad) and push rolb cmp outsl jmp and pusha and xchg push push dec js fstp or pop mov inc add push cmp and pop fistpll pop jns pop sbb (bad) mov inc jmp je pop ret or lock pop mov (bad) cmp sub pop mov sbb daa xchg sbb into cli and scas inc add lea mov jnp dec mov (bad) mov jle adc int xchg in dec (bad) or mov and lea outsb pop mov jno sbb pop dec xchg jbe jl je add stos sbb loop add jb mov mov mov jg push out test sbb sbb dec insb out popa insl add pop sbb or into leave fdivs sbb or test repnz dec add scas mov clc sub cmp punpckldq xchg out call xchg cmp pop in (bad) xor arpl push jmp inc imul ret in jne adc and inc pop dec and test add mov fs enter or jl es ss push cli andl mov loopne movb jl add dec and pop lock jns pop ret sub pop push js into mulb push fsubrs mov jno cmp push bound lcall test and loopne int3 sbb xchg das ret mov dec mov sbbb stos add cmpsl imul clc leave cmp cmp out dec icebp movsb call dec mov xchg rorl add addl add mov inc push into pushf xor aaa jno test adc add xor fsubl inc push int3 iret imul add add shlb add jbe imul rcrb add cmp jns in faddp fildl dec sub dec mov fsts or dec addb out ljmp pusha pop in sti movsl arpl mull rol rcrb mov testb pop sti mov pop push add (bad) lods inc rolb add int add rcrb out addr16 mov mov push sarb or mov test sbb add in and pop or and loopne lock mov adc push add push and sbb and mov push push sbb and ret cs xchg add stos jp adcl adc or jmp add clc mov cld xchg or outsl (bad) fwait push mulb add dec mov xchg add mov push mov xchg insl cmpsb sbb xor push or rol dec lods adc ret push lods adc jne (bad) popa pop adc outsb cmpl push sub leave shll (bad) shlb hlt adc mov in movsb pop mov ljmp ljmp adc jae fs adc mov cmp rorb (bad) mov xor pushf insl movb push add nop push and cmp jp sub nop sahf inc push xor outsl (bad) into push repz sbb mov or add cmpl mov dec add push in add (bad) mov mov pushf in pusha fwait sub arpl mov mov out inc (bad) jno shlb aas xchg cmp push xor cmp stos rcll add fs sub mov test jnp add (bad) enter add pop jp jg mov dec jge cmp push cmp int jl mov imull mov jle test incb xor xorl cmp idiv mov ja add frstor mov mov xchg mov mov inc jo inc xchg sbb in cli xchg or cmc inc dec orl push insb mov les mov fnop fadds and adc push adc push push lret lock pop in adc add pusha data16 pop rcrl loopne and stc push or rcl (bad) mov fwait mov push cs mov test cmc mov pop mov ljmp outsl jge lcall cld enter pop pcmpgtb mov hlt outsl out dec jns cmp pop repz mov push (bad) insb push enter or jnp aaa adc adc lods leave jl lods loop xor cld or or xor stc inc pop adc mov rclb push pop mov lock pop lods xchg or mov (bad) or pop pushf mov jbe inc or push test rolb jnp push ret adc mov jl cli imul arpl pop adcl int3 push xor push fnop add jl out jnp inc push mov adc nop enter add inc fcmovbe cld jns inc pushf in jne mov sub add bound push rolb xor lret cmp or loopne lods enter out nop add mov cmpsb and cmpsl cmp inc movl int3 xor aas dec jb sub dec imul sbb cmp insl sbb push (bad) in push mov mov cmp iret sub fadds add ljmp or out popf (bad) in daa aaa lods cmp mov pusha xor add cmp add fcmovb xchg scas test jo (bad) xor repz mov pop jnp pusha or pop sub pop pushf add cmp adc push inc mov push sbb lods inc scas enter inc js out mov rorl test or sbb inc enter out dec pop pop xor or mov nop jg cmp jno mov cmp or mov xchg and pusha insb mov add xchg subb pop jns nop loopne xor pop mov into and shlb into (bad) xchg add push push ffree mov test jmp add pop push cmpsl cmp or mov icebp and xchg nop jb repnz mov push and sarb dec test mov jg aad iret adc js inc push repz ds sub insl or push and sub cmp cmpb xor and sub fild dec lret rol or fadd add cmp fidiv xchg clc ljmp sbb out int sbb int3 in ljmp adc mov jge mov adc mov pop pop inc sbb mov popa jp popf cmp add cmp fwait add leave lock cld popa add and sub insb lods dec mov dec mov fnstsw and cmp add xchg xchg sbb mov test pop xor sub cwtl mov es sbb add dec push outsb nop add inc sub pop pop adc add loopne xchg mov push dec loope mov lods sub in call jge (bad) dec js sbb jp dec and mov or add or dec (bad) insl adc in sub inc xor cmp mov cld enter fdivrp pop test je in js fstps xor add add mov scas inc dec cli inc hlt cmp and push test dec lret and fild jle mov sar cmp outsl mov mov test sbb xchg insb xchg movsb dec rcrb jnp mov cmp icebp add mov mov push sbb mov mov xor rcll loope rol popf and mov xor loop scas xchg mov mov or not jae mov fisubr fcompl cmp add scas pop cmc adc mov dec addb cmp xor or push sbb push mov sti inc fcomip fnsave imul pop movsl xor add sub mov out add mov lock ja lods mov mov xor rorb mov adc sbb leave rcll test int3 add icebp ficomp nop cmp jge cmpsl hlt rorb loope mov push subl xchg add aas push add sub jno add jno sbb in mov nop (bad) jnp clc cmp fadds mov adc dec rcrb das and push push fsubp or mov shrl push sbb mov ret stc loopne out mov pop add call pop xor test imul or lock jne inc shll mov lock in push es mov and push loope sti cmp push sbb push rorl pop inc fsubl dec mov test mov mov cmc and xorl cmovbe pop std test mov dec loopne xchg into adc xlat mov testb mov dec fistl or pop int inc cmp cmp js addr16 ss aas call dec (bad) push das sbb mov pusha cmp out imul cmc add mov (bad) fs sbb add push pop cmp loope adc adcl popf push inc mov cmp add jns ss out pop push add cmpsl xlat movsl mov mov mov fdivrp or aam adc mov pop push mov and bound fsubs add and jl cmp in mov les negl fdivs cmp add jns jnp cs int push out sbb aam mov xor (bad) xor and mov and jne cmp xchg or jle push and icebp aam std aad jge cltd mov xor std add mov sarb add jno dec dec popf xchg adc cmp push add outsb push imul jo cmp lea mov mov or das lret sub mov jb out scas mov xchg rol test test cmp sub xchg mov shrb fisttp leave inc subb jno ret cmp (bad) mov xor sbb jge call (bad) add or out or aaa adc or cmp ljmp mov je cli xor loopne cmpsl icebp push (bad) xchg pop adc lret outsl rolb or and jp push pop int (bad) pop pop dec fsub adc xchg mov cmp nop push add (bad) pop stos jl add push mov inc push test pop add adc cltd test push sub lcall mov and mov std fdivrs cmp add sti cwtl push fstpl je imul inc dec mov dec inc pop pop neg popa js jl and add mov xor sbb mov mov (bad) adc ja (bad) icebp pop nop dec jp in mov std xlat and adc add test mov push mov test popa mov add in stc fildl xorb add and inc mov fst or and (bad) addl subb arpl xor add (bad) aam pop lahf hlt loope aad and mov add insb jl add clc daa mov add push in fiaddl sbb mov in pusha sub cmp sbbl xchg loopne or mov ret or das and xor mov in adc xchg dec add ljmp roll add dec shlb add das xor cld test frstor fisubrl scas pusha sbb ret test add dec fmull dec adc push aas rorb cmp stos fs sbb jb rorb push pushf enter outsb lock test mov movsb ds xor adc push mov push pop xor mov adc xchg add imul add testl push frstor call cltd cmp xor adc or jecxz mov xlat adc call ret pop xor cltd mov sbb iret add mov push sub cmp je in fstl roll adc add jge dec xchg (bad) jno into xor and xor xchg add inc push int adc pop add adc test jnp rcll mov add mov inc loope add sub call and mov fsubrs add (bad) jl mov popa or into cmc push popa xchg sbb rol inc push insb aam jmp sbb add lret xchg imul xor fwait in shrl call sbb push add mov negl mov pop lock fs pop lods jns sbb popa (bad) sbb xchg pusha call cmp adc dec add sbb push in xor push inc idivl push cs xchg cmpsl (bad) xchg mov (bad) xor mov adc jbe dec sbb and push mov jbe xor jmp add add sarb loopne pop pop pop fwait in ds nop xor loopne (bad) mov fwait mov or cmpb mov dec or mov add cld es inc mov jne scas xlat push shrl leave out push cmp leave push pushf inc inc inc aam push and gs pusha popa mov add rcrl mov pusha aam out subb neg (bad) inc jl sub test inc inc pop or xor aad push shrb or mov nop stos imul clc xor sub (bad) inc fdiv sub test int3 xchg mov push xchg add mov push cmpb inc cmp xorb ja add mov call loope jo hlt in mov push fsubs and pop add mov loopne es add nop pop sbb push aad cmpb jb loope add leave mov fmuls lahf inc adc ret mov jns mov dec add ss lcall cmp (bad) or xchg fadd adc sbb jp movsb mov xor xlat mov pop cmp in fidiv mov cltd mov popf test mov popa and adc or cmp stos jb mov pop je and (bad) fisubl test sub push jp out rorb out dec xchg js gs and mov push into inc xchg aad adc das push and or mov adcb adc icebp or add mov hlt jnp or inc dec in xchg test lock aas or cld les lock xchg std fidivrl scas and add mov fwait loope lret into cvtps2pd mov push add in inc pop pop popa and adc imul push xor stos pop sub mov jl and add push lds adc lret popa test push sub test cwtl xlat pop repnz mov jp inc mov lret cmp js cmp or adc in dec and push mov fisttpl add addl mov sub cs add popa das mov mov mov sbb ret in dec jns sbb (bad) jne or mov dec push sbb add movsl push fdivs sbb cmpsb pop xor add and push icebp push imulb or inc aam in outsb pushf lods and sbbl shll sbbb add mov and push nop dec push test lahf and adc dec sub enter out popf pop cmc pusha movsb sub or mov sbbb lods decl insl inc fsub and (bad) icebp lock push pusha mov or fsubl test jo mov adc lods or xchg mov ret jbe mov aaa jle cwtl pop bound pusha les mov stc and sbb test aam sarb add test pusha lock cmc add dec mov nop arpl and ja les and adc push ljmp pop subb sub fistp outsb pop sub call loop jnp or mov mov sahf adc sub addr16 push test test in add dec push aaa insb ficompl fstpt cltd lret sub int3 addb sub mov jo push xor rolb pop iret faddl fcomi jmp mov daa xor sarl add pop cld adc cld jg or and pop dec or dec or btr div pop (bad) pushf lahf in mov cwtl add stos cmp mov xchg push jmp imul push cmp je xchg add sub cmp imul iret imul push add xchg aaa sti dec cmp xchg shlb (bad) in outsb mov inc mov popa mov sarb testl mov mov push add popa fadds cmp aaa cmp cli and mov add cmp dec mov push sbb add xchg pop adc cmp inc inc rorb cli mov push fstpl addb sahf imul and xchg ds mov mov js stos and cli pop or andl add dec mov jns adc and test (bad) es mov es dec js and sbb jo add sbb push pop dec mov xlat mov and int3 bound nop orb push jle rclb cmpsl pop inc into lea movsb adc dec loopne sahf jle cltd push add xchg jmp inc std movl inc call int3 jge cmpsl nop add pop add xor cmp cld mov in and nop mov repnz mov sbb add inc xor mov dec add cmp dec push lret xor xchg mov push sbb (bad) sbb xor mov fisubr mov pop gs repnz mov mov cmpsb bound and mov popa push mov cmp test cltd sbb data16 in lret addb clc addr16 and js call pop add mov xchg xor jnp std das nop and dec sub xor add imul xor dec push xor cmp insb mov movsb jnp fucom in mov mov push out xor sub add add insb (bad) hlt jns add mov adc into add push pop add fchs adc dec add icebp cmp inc sbb fstp add int3 fldt push push pop bound inc leave sbb daa aad pusha test mov push xchg out xchg shrl faddl lods jne or add xor ds cmp lock sahf xor and push or insl stc and pusha push jecxz push sar iret dec push xchg xor pop sarb sbb aas insb adcl jge push mov xlat lods movsb push add es or add mov cmp add mov cmpsb mov mov daa xor ret push js out sbb sub sbb and pop inc fprem inc loop loope mov into stos jmp movsb jle or cmp and sahf pushf test jnp mov popa lcall data16 inc clc imul loop or adc sub int cmp adc mov loop lahf jnp mov cmpsl dec fisubl jmp mov out les add fsubrp and loop mov add incb and inc jne das mov xchg test insl dec sti xchg xor lods cmp cmpsl xor mov fmuls cwtl dec daa out mov ret add mov pop jbe shl stos xor pop cmp xchg mov jl dec add in xor movsb mov movsl add push or call sbbl jge call cmpsb pop xchg xor popf add jae mov xor xchg pop inc enter or jno loopne fistpl pop stos add loope js subb fildl je cmp add mull add jge test push (bad) rcrb inc mov popf add xor inc mov minps mov push andl pop out mov loopne cltd pusha rcrb mov jo or imul aam or bound lret or test nop mov (bad) loope int sub js je stos je jl subb xchg lods xchg popf lock lds out adc (bad) dec ret jg add stos or xor lahf mov nop movsb stos adc pop jle dec int dec or mov incb adc xor mov sbb mov or cltd adc mov add outsl inc adc cmp jge push mov cmp add jnp mov test in lds mov and mov cmpsb rorl add out mov jg cltd cwtl rorl xor sub jno flds (bad) not pop mov cld and push loopne loope or xchg (bad) and xchg inc jo xlat stos push push sbb sarb das movsl std push pop enter or lods nop push out push ffree es adc mov fnstenv (bad) push mov nop je xor pushf cmp add aaa je adc test dec (bad) jae push or ss dec rorb loope push outsl cmpb cmp ret cli inc bound adc xlat mov sbb test shll sbb sahf and inc xchg push pop dec rorb pop insl mov mov imul les pop mov jmp imul sbb es popa loopne mov cmc lods cmp pop mov add ficomp pop mov test movsl jle repnz or mov inc mov fs pusha mov movsb int3 loopne mov fcoms outsl pop mov bound (bad) push fdivl cmp add mov and xchg rcll sub es fldt dec cmp sub inc bound lock ret jno ficomp pop mov add xor cmp call xadd sub mov mov or adc (bad) xor ret sbb add sbb (bad) jbe adc jecxz mov enter mov in jl seta in sbb pop adc ljmp loopne pusha out nop pop aad sub mov inc addr16 ret jns pusha jp mov add push shr dec in or sbb cmp inc cmp sbb adc pop pushf js nop (bad) mov in jno js push xchg mov (bad) or mov sbb inc dec add std out out push sahf and mov dec sub xor fisubrl mov scas (bad) xchg mov imul mov mov leave (bad) jmp mov test test xor sbb stos cmpsb rcrb xchg aaa cld subb ljmp and pushf popa xor fcoml insl adc dec sti xchg popf inc sub jbe push orl push fidivl xchg (bad) inc sub or xchg cmc pop adc and xchg lret and mov jmp call or mov inc sub (bad) adc and inc adc enter inc dec stos pop jo adcl mov pusha outsl cmpsb movsl (bad) fldenv inc mov loop fistpl adc in test and in orl pusha rcll notl dec cli xchg cld dec and xchg aaa adc jno pop mov pop lahf mov push or ds decl mov mov dec mov les std push (bad) leave add jmp sbb pop sbbb add pop and mov into inc mov xor rcl in jl dec sbb test and aaa mov pop adc lea xor icebp pop popf xorl adcl mov add or popf jb add cmp fs mov push mov cld inc mov pop jp xchg inc xor push fsubrp popf or fmull pop adc and out stc popa and mov mov push popa call addb push xor nop pop rcl push movsb sub xor adc or mov shrl xor and mov xlat mov outsl add lret in and fmuls in dec ret int rorb adc int addb out out jmp in ja nop shrb mov cltd sarb pop bound xchg repnz mov mov jp mulb cmpsb test (bad) xor cmp mov (bad) cs int movups aad loope,pt or adc inc mov (bad) insb adc pop or and mov js clc mov jo repz mov fidiv test sbb add mov (bad) dec fidivrl add cmp sbbb add in (bad) in nop pop mov mov jp inc out push fdivrs and in add outsb add lcall ljmp lock jl mov mov push sbb test xchg test or add sub mov in pop xor push dec add mov ret dec push leave and jae sbb (bad) test sub nop test js das insl sbb fidivl sbb jnp add lods (bad) aas pushf pop add cwtl test xchg add movsb test mov jge push push mov sbb pop pop adc add fnsave scas inc xchg adc inc lods fisub adc insb mov int test sarb cmpsb mov mov pop mov loopne stos jno into push jl dec into call sbb (bad) lret ds and push into (bad) and scas mov shl lahf sub push hlt es sbb pusha mov dec add lock mov mov push dec sbb pop cmp popf xchg mov inc jp movsb sub xor mov loope in mov push add loopne aam loope cmpsl xor ret push pushf mov dec mov pop rcrb xor pusha add fs jle pop and clc push fs or mov int inc (bad) nop outsl xor sbb test (bad) xor lock add into jmp std jno add push (bad) pop (bad) lods add imulb js jb sar dec mov clc (bad) xchg (bad) fdivr push add push cs adc popf je (bad) push pusha daa push sub adc mov test sub neg and cmp nop adc psubd movups add mov es out add negl inc mov sbb adc fcomi les std jge jle add daa and add sbb and pop xchg loop and int out xor or mov or cld divb cmc and add jae call or xor add sbb adc mov (bad) stc enter and loope inc nop in popa mov mov ja push or push jns sub cwtl xor jp add mov (bad) dec xchg add or or mov mov mov or inc push in int dec or dec (bad) shrb adc fadds and fwait dec js clc cmp sarb daa push sar andl dec and jns add rolb and ss adc mov ret push aam dec enter add jae pop dec or xchg inc add enter cld and ret cli xor enter pusha shrb or mov add insb sbbl das lds adc sub lods popa decb mov dec and adc jno xor push xchg clc adc mov test push xor adc pop pop leave hlt and cmp (bad) ds dec sub lods shlb (bad) xor arpl popa leave adc sub not mov mov sub dec add push mov mov cwtl (bad) mov aad pop sub sub mov fild add je or pop call jne out pusha decb mov sbb sub mov int mov push enter add out in dec dec imul add xchg repz push or adc sub and scas lods or xchg add adc mov xlat outsb xchg negl stos inc jl jnp jno add in nop bound mov pop mov jge fidivrl mov mov push sbb in fsubrs push pop and test add or dec add popa mov xorl sarb pop dec and pop out and ljmp adc (bad) bswap pop loope mov sub adc clc lret add jmp fstp pop dec out popa ds push mov cmpsl jne pop (bad) in xchg mov mov nop imul scas inc mov nop outsb test mov add sub std push cmp add sub mov jno dec xchg in add and pop mov or lea sbb push inc pop pop mov dec (bad) sub sti xchg sahf add cmp xorb out fmull and scas insl cmp pop mov popf jecxz subb adc aaa stc and push jmp popf mov dec nop imul add pop mov xchg dec mov xchg xor mov add lds (bad) sbb jmp sub pop and movsb jae xor lea dec mov (bad) and imul mov cmc lea sub add xor push movsl cld or jp stos xor nop push cmc mov pop push cwtl pop mov sub iret paddd and and rorl jne subb shrb add nop mov sub push or or test fcmovu add imul add test mov (bad) movsb xlat jo add xchg adc jnp or jg in loopne pushf cltd mov rolb dec add mov dec xor movsb dec (bad) dec icebp popa lods repz adc inc aaa icebp (bad) jmp outsl ret xor icebp (bad) sbbb add shlb scas repnz add jmp jnp or in and test int3 repnz mov add stc mov out push scas repnz lret jg jo bsr and fnstsw (bad) push fnstenv bound xchg mov loop jo mov js dec push push mov mov and sbb lds xchg ljmp xchg add adc jmp mov js dec jecxz,pn jmp fsubrs bound dec rorl insl mulb test fnstenv mov sub stos stc mov andl fcomip icebp push adc or cld scas imul push mov cmpsb and jno jnp lcall iret rorl lret sub test and dec sti enter xor jno inc dec mov aad lods sub push push push imul (bad) addb lahf dec nop pop addr16 xor lea xor add jae jo adc test mov ret mov xlat adcl out mov arpl in mov sub stos xorb aad and rclb call repz cmp mov add mov mov cli inc sub stc fadd call data16 dec and add add ret dec sub outsb mov out clc xchg push or add adc mov pop mov orl jo mov xchg addr16 sbb cs sub push cmpsl inc mov mov xor and fxch pop xchg xor dec sub jne scas jecxz lock ja push adc mov nop mov mov push sbb mov pushf sub xchg cli inc sbb push movsl inc xchg and xchg loope (bad) jp nop pop sub cmp adc test les mov push xchg add int adc dec xchg xchg pop inc mov iret movsb jno test xchg nop cmp or xchg in nop fmull pop pusha add cwtl sub pushf punpckldq and clc pop repnz adc pusha or shll pop xchg call jae inc lcall test lods imulb inc cli mov aam inc fsubl decl mov test pop ffreep aam mov mov je xor mov pop and add sub and push lret xchg aaa movl jp sub push pushf repz push outsl loop add stos adc push cmp in cltd lret dec ja jae inc add jnp push clc out mov inc jnp sub pop pop xchg cld jo push xor add inc (bad) in in add les mov mov out sbb ja into xchg out push addr16 fiadd rcrl xchg loope pop pop adc popf ss push xor scas adc movb or mov (bad) jbe (bad) jl iret mov (bad) into and add popa (bad) mov or mov xlat test test (bad) imul mov jno jno mov push mov sub fbstp mov in call sub jge fadd testb inc jae std jb cli bound jl sbb ja xchg popf xor je or xchg pop ss js (bad) (bad) or call pop sub jo testl push mov stos out jecxz subb popf mov and mov mov dec inc ficompl movsl add scas movsb in add xor addr16 dec aad loop les push add mov sub mov rcrb jns adc add ret lret mov aas ret rolb bnd pop xchg jle enter push cmp pop sub xor jne sub jecxz inc push xchg mov jmp sub in push aas leave xor xor outsb lods pop xor lea pusha daa pushl div pop xor loopne cmpsb and add flds inc insb adc fiadd repnz iret inc stos pop mov out loopne dec jbe add rcll mov lcall or and popa ja (bad) in add sbb lret push mov mov gs sar xchg xlat push and repnz xor sub jmp or in inc add pusha mov js bound aas cmc add xor pop sbb mov adc mov pop pop das mov jb mov jg scas sub xor pop add pushf movsb inc mov push xchg jns jge push pop sub adc sub int sar les xchg pop mov add fldl shrb xchg cmp mov outsb test or repz add jecxz push sbb pop pusha std in xchg mov cwtl add popa jg xor jle out push lret push int jns (bad) ljmp (bad) mov add (bad) cmp xor out sub push or gs stos inc out fiadd loope push jne sub mov and jno loope inc add popf jne sub pop mov xchg adc xchg mov xor mov dec ja fwait jns (bad) addl js adc cmpl hlt and dec jle fwait mov aas cmpsb imul and and xchg add pop xchg jle mov dec leave pushf mov cmpsb loope pusha test jg xchg gs mov add pop sub add mov and inc lret cli cs stos add daa push fisubl dec pop jo mov int3 jge adc xor nop adc sbbl mov add fiadd insl lret push fs add out sub push out adc jmp les (bad) mov sub jno fs addr16 pop jo add mov or push pop nop aaa dec lahf jb cwtl (bad) mov sub lock dec icebp or jge pop mov push jmp clc mov (bad) fldz andl jmp out sub xchg out mov add out outsb into lahf inc js dec outsl lea adc pushf arpl xor aam xor pusha mov out add cmp cltd sub mov lock and sub cmpsb cmp pop (bad) andb stc dec jne (bad) cltd cmp pop aaa add xchg pusha in jns push mov out add out adc (bad) icebp sbb leave xchg inc jno out mov leave lahf sbbl dec push enter and stos lock xor sahf cmc xor shl add mov nop xchg testb jb enter data16 repz insb pop gs mov dec adc nop sub pusha sbb mov (bad) jns sbb mov inc mov daa sbb test mov pop xor and pop imul mov mov inc mov mov mov sbb cwtl rcll mov stos fwait in mov rcrb faddl jp les lcall sbb scas testb sbb out movl (bad) push pusha xor popa pop mov rclb add cmpl jno addl subl clc xchg div add ffreep mov mov shlb sub xor lea lods clc call sahf rcrb icebp std cmc dec push int3 sbb outsl pop push stc faddl mov out ret jnp,pn pop clc pop lea mov jg add mov jmp fistpl sar add repnz jae xor sub adc add (bad) in daa push pop rorb dec pop (bad) push call sub xor dec imul lods in add sub out ret mov call scas inc mov movsl lods and and and xor fcmovnu shl xor dec rcrb aas ret and mov xor cmp mov test inc les lea add jp jno iret popa pop ficom pusha in nop imul sub sub addl or arpl lret jnp inc pop nop dec push xor je jmp fistpl cmp sbb idivl pop add into out mov add cmpsb xor popf adc test push add push nop in inc sbb xchg shrb adc out imul cmpl lds mov insl shrl xchg xchg jbe xorl mov cmp adc (bad) add push sbb call adc add mov iret mov and test in add dec push iret daa inc sbb dec xchg adc xchg mov jmp sub add (bad) jb add push nop lcall arpl cmpsb pusha sub gs mov mov lds dec fwait mov testl pop mov rcrb add xchg incl xchg add (bad) aad jge adc sbb dec inc push and mov ja and in sub (bad) and fldpi mov push mov and jmp stos push xchg and add sbb mov jge aaa add pusha fistpl xlat stos lcall repnz push push xchg (bad) and iret dec adc xorl fldl sub movzwl cli mov sbb fdivrl (bad) add add dec lcall mov in pop (bad) hlt mov les dec add (bad) mov fwait decl js cmp and lock lock mov add mov add adc lret pop in lock pop add jle in adc mov sbb stos jmp ss pop fs daa cltd push mov mov shl mov adcb bound dec jae in xchg lret xor out dec loopne stos ljmp or aam push sub int fisub pop sub push popf adc xchg pop lock xor shlb ss mov mov rolb xchg cmc or mov ss mov jno or mov aam cmp (bad) jo pop mov sub ljmp pop xchg (bad) (bad) dec test out out mov decl xchg sub fmull mov dec insb or jbe or pop popa popf jne mov (bad) aaa and adc js mov add inc add xlat daa xchg sti mov ljmp xor or insl push popa mulb loopne jbe sub jne add fsubrs add pushl jg adc shlb cmpsl mov out jmp sbb and or xchg push sbb xor negb push test aas sbb jl sbb jl push shrb add shl jmp mov add pop add mov les ret mov and push push inc xor and add add adc sbb dec jo cmp or call andb cltd jecxz das inc cmpsb add lahf gs adc jl push bound orb cs lock jo add push inc sbb or push outsl lods (bad) mov decl or out jae mov dec pop xchg inc push sub xchg nop movsb sbb sbb push nop push push push push adc sbb and sub pop mov in push loop cmp addr16 add shlb push or cmpl sbb inc cld add std incb jnp sti mov push push push push mov add movzbl inc mov push xor sbb dec mov jl push lea add cmp xchg stos or push cmp xchg (bad) rcll or test mov jge mov movsl sbb std movsl int popa mov jmp and jp sub imul jne fbstp lods pusha arpl mov mov cwtl pop lret lret test or clc shr lods xchg jmp mov add pop ror cmpb rol shr test shrl pop cli mov push add (bad) or or dec pop sbb mov push pop cmp clc or and es in cli lret ret jmp push fs push inc inc adc test fwait mull or fimul jmp cli mov test jo cmp inc ss cmp and pop pop mov mov add add or insb jmp sub xor or xchg add mov nop and or push jne cmpsb or outsl adc mov mov xor xchg jbe repnz cmp cmpsl sbb cmp in and adc cmp cltd xchg stc adc sbb and pop mov xchg cmp loopne lcall jecxz xor and stc adc mov (bad) push dec add jae sbbl sbb xchg adc and pop mov test pop pop cld ret leave ret or mov lock pop inc pop push pop shr jle outsl out jns in push add add pusha cmc xchg sahf aaa dec dec and push mov dec fldt pop stos aad or or mov loop dec add push push adc aad repnz pop sbb addl shl sub dec push jmp rolb sbb fwait mov (bad) aaa jp sbb push and es add mov (bad) push rcll xlat and arpl rcrl into idivl outsl test mov arpl ret (bad) jae sbb jmp xor ljmp ljmp dec int3 loop push add sub pop stos pop adc pop cs sub lods xor (bad) pop jmp pop into xchg aam aaa xor adc sahf push in ljmp push xor pop ja les and add push xchg sub in loopne cmpsb flds push mov jmp push mov add mov stc push pop out outsl enter inc cmpsl xor dec push or mov mov fwait std int bound dec rcrb in pop add push inc mov jge xor dec call push jmp pop sub or cli movsl xor mov cld (bad) (bad) hlt push or pop dec xchg fldl (bad) xor pop mov xor mov inc mov clc lods test mov pop or pop push or int loop fidivl push pop inc rorl mov addr16 push mov mov cli inc sbb pop dec xchg push lcall es mov pop dec push adc out add loope sub jne dec lock sub idivb push pop xor test xor adc test add add pop xor cli sbb and push pop pop add and xchg pop mov jbe dec ret bound popf add push or (bad) mov aad repnz pop sbb push mov pop in inc rcrb sub pushf inc mov sbb dec lret inc push push jmp xchg subl xchg xchg adc aas ss std incb out inc or out xchg pop loopne lret add dec out pop xchg add pop xchg fstpl and xor inc add pop add repnz jmp fildl mov push xchg dec adcb cltd mov sbb imul dec or add shll mov les dec dec pop mov icebp pop add ret roll mov adc leave das pop (bad) adc iret rcrb mov xchg mov gs push cmp out cmp decl aam or dec pop repnz (bad) sub or jns jg or cmp mov gs cmpl xchg push jmp (bad) add pop mov int3 ret movntq outsl inc sbb movsl pop in mov jmp pop xor stos jl imul dec pop call jle mov cmp sbb sti pop sbbl subb pop pop xor pop inc scas test dec sahf add pop or pop pop push (bad) jg idivl fs pop dec addl fimul inc add flds or pop jno xchg test mov sbb not jmp enter pop (bad) cmp rcl mov mov add pop insl ljmp inc (bad) mov cmpsl or or jp dec add xor inc push imul adc fcomp sbb es js imul rcr in inc jge,pt fidivl or add cmc addr16 push sub push mov or dec xchg xor and add and add pop push inc scas xor js imul inc adc sub mov orb or inc push jmp ret std das mov nop mov jae push (bad) psubsb dec stos inc aaa xor push jle (bad) or adc ljmp repnz jns pop stos xor aam or dec xlat movsb and scas in mov ja cmp and fildl test pop adc sti mov push jecxz adc adc and (bad) lds lcall xchg fisttpll jno lea js jae neg out fcomps sbb dec mov lret mov pop out (bad) pop cmpsl es addl sub cmp mov dec in inc push push sub ret test mov adc loop add add testl jle popa addr16 jg add pop aaa (bad) cmp pusha or clc stos pusha nop shrb fidivrl and mov jecxz pop js xor ja jne divl rorl imul ja cmp and pop dec bnd aam adc ds dec add mov notb scas fs popf push dec (bad) fiadd jmp adcb sbb xchg (bad) dec push das lahf loopne jnp ljmp cmp dec jmp lahf and faddl push mov inc (bad) scas or sti add sub pop add dec jns adc das pop jne mov cli add dec sbb add mov add cltd sbb outsl xor or js dec sub adc fmulp (bad) add (bad) xchg cmp push mov inc push cwtl cltd cmp jns es cmp add xor pop xchg add and and popa jbe mov jae in sub adc pop (bad) jge orl (bad) fstps dec adc or push push xor jmp out mov ds jno lahf and incl pop cmp or lcall pop sub pop scas rorb bound sub movsl cmp and (bad) or add jne lea push xchg dec shl and ds jne xchg mov jle jb aaa fbld or sbb arpl out or lahf jp stos xlat stos mov pop adc outsl add mov or push lds and pop push add lret mov shl or dec orl xor xchg mov sub cmc pusha cmp cmp push push stc xor pop aam sub and pop sub adc mov pushf push and sub pop cwtl jg loope sub adc xchg test iret jae ret addr16 es adc push push dec loopne enter in sub roll idivl pop data16 mov add or not mov push cmc jb dec mov and pop jmp inc adc mov int3 pop push jbe cmpsl push add pop fs mull push adc push jbe pop add cmpb push inc xor jecxz daa pop jo sub dec push testb jns cltd mov mov adc inc and and mov mov and cli xchg mov cmpb pusha (bad) jo pop mov xchg inc shl adc push xor add inc xor sub push dec in dec add or push mov jae popa movb in popa lock push xchg sub out fs push adc loop mov push pop sub sahf adc scas mov jnp xchg push cwtl xor or and fsubs ret sub subb stos add dec pop lods adc decb int3 push repnz mov mov push dec push lods cmp add mov mov repz and pop push pop xchg push cmp or out imul jecxz adc pusha pop rorb mov jmp pop push out imulb mov and aad aas inc jmp loop ds outsl xor adc add xorb adc and cli stos test add dec pop adc in push push scas mov lds mov cmpsl jg call cwtl es sbb pop mov dec push pop inc inc lret xor mov dec dec xor cmp jae cmc adc add les rclb pop mov sti rcrl pop push lock inc test jns adc mov mov pop cli lds pop shlb add test adc lds add jno loopne cs (bad) call std push lock shr sbb mov adc pop out and outsb mov repz add pop sbb arpl sub mov (bad) jmp test mov pop cmp mov push pop (bad) icebp in jno add sbb or pusha jmp inc jle or mov xor loop fwait mov jmp push lahf bound addb fcmove or and in lahf add sub adc jecxz add xchg call push bound add jle fild add pop jl gs fstpl and sbb jl sbb lea in sbb outsb adc adc lock pop inc (bad) les mov push nop sbb mov ret cmpl fcoms jle xor dec mov xor adc gs mov sbbb psubd add push cmp enter sbb adc stc idiv xor add imul test adc sub test in ret add gs sbb and push jl push addr16 mov mov xor fdivl les jmp pop pop cmp add pop fnstcw lret daa nop mov or les mov cmp nop cwtl popa push jno inc pusha mov jle adc lock iret inc cld call mov fnstenv jge loope adc mov add pop idivb push fs mov cmp push xor pop push pop dec daa mov stos and xor out or dec jmp mov icebp test imul into inc ret inc cmp push pop mov jo out cmp arpl xchg inc inc les sbb add aam cs icebp rcrb in mov cmc mov and and add xor lahf popa and adc add jmp sbb fadds mov push xor repnz aas pusha inc inc and add ljmp add les int3 out adc xor addb or and fs pusha and adc pop fcoml pop mov (bad) sbb pop cmp xor add lcall dec pusha movsb out add dec push mov mov iret add lret add add and test addr16 or movups mov cs (bad) add sbb mov xchg jg and cmpsl add or cli mov push mov insl sbb mov mov sahf test clc add in xor push mov jno aad test mov movsb mov xor mov mov jl gs repz int3 jne and andb or pop jno adc aaa mov or jo ret mov add xor cli inc and (bad) shl or cs out xor inc mov xchg and adc mov pop pop dec repnz andl scas add pop pop lret iret xor ret pop jl gs arpl push jl aam sbb std cld cmp jno call pop sbb adc jp gs mov xor sub mov (bad) sub mov popf sbbl xchg pop fildl sub push sti adc dec jnp pop divl mov and ret mov fwait xchg rcr ret lods fisttp inc int3 loopne xchg sub sbb rcrb (bad) ret sbb scas lock and mov adc lock push push test sub pop inc loop shll cli out fadds bound movsl sub and push add rep xor adc pop jl cmp loop daa fcoml sub out adc inc cld mov xor adc cmp icebp popa or dec pushf mov xchg es jecxz mov pop nop cs js inc sub or fyl2xp1 sbb add test add mov gs loope xchg hlt repnz rolb sub andb gs inc repnz pop jl lcall shrb mov (bad) xor cmpsb inc pop testb sbb cwtl int3 mov dec dec inc push mov das cmpsl push pop adcl or add cmc mov sti out into scas xor inc sub je push pop notb ficompl lods and add nop add aam call cmp jg rol lahf push mov inc lret dec cmp arpl (bad) pop add push inc push add (bad) adc cmp mov fsubrs movb into insl or mov leave loopne xor or pop add popf ss shlb int aam jmp imul jg add pushf adc mov repz add xor add sbb sub aam lret clc dec bound popa mov lods pop leave fimull shll mov idiv outsb pop add adc rol sub loopne add xlat sub add aam popa xor (bad) nop adcb addr16 inc pop fs cld adc andl add dec ja cmp sbb pop add pop pusha shll adc add popa cmp sbb ja ret inc inc mov sub inc inc xchg cmp iret fdivrl js adc push fnstcw daa add push pushf nop ret je add cmp mov add decb mov les mov pop leave dec mov push xor jmp pop cmp arpl fwait inc stos cltd sbb or sub or mov shlb scas or pop jle and mov (bad) mov jbe mov arpl in cmp call and add icebp dec enter push or pop add out cmp pushf jns sbb ror sbb pop fisttpll adc or iret jmp xchg int iret mov es push cmp add loope inc rcrb mov loopne jecxz xor cs or addl sbb sbb icebp gs (bad) fwait add and jmp mov sbb rcrl or test dec loopne mov adc adcl cmpsl sbb rorb dec loope std xor add icebp xor or dec xchg fsubrl pop xor test jbe add xchg jmp sbb sbb or dec cmp lahf insb pusha xchg push iret adc and mov cmp fstl xor pop push (bad) xor adc inc and mov aad (bad) cmc cld orl (bad) in in pop add paddusb inc xchg or test in push lret sub jno pop enter mov xchg mov jg cmp pushf popf and pop add es popl out xchg cmpsb mov add (bad) pop pop push loopnew (bad) movb repnz add aaa inc enter les add lea pusha xchg popa dec mov xor enter (bad) jecxz lret ret add mov lahf mov rclb inc mov xchg icebp les or cmp rclb pusha in lahf pop and adc add in sbb icebp cmp cmp pop ljmp pop rcr in sub sar das xor mov mov mov mov loop xor pop fadd out clc mov stc rolb test scas cmc lds push push in call fninit or add push mov xchg dec lock add sbb xchg in cmp add mov in and jns loop adcl add (bad) jb dec dec and xor adc rcl pushf shr popa inc push jle dec es int sbb cmp into lods xchg (bad) or imul nop (bad) xchg scas mov add sbb push test or sub pop (bad) jno ror pop xchg xchg (bad) adc cwtl jmp or imul xchg ret mov mov sbb cmp movsb xorb int3 or enter inc insb cmp pop in inc xchg mov add inc dec popa test and mov jnp sub outsl jns inc push xchg sub add push ja imul push jge mov fs dec push sub add sub mov mov mov add mov or (bad) mov cmp or aad out push pop sub cli loope or and and iret pop add movsl xchg rolb fs cmp cmp cmc sbb inc cld fwait aaa cwtl test leave inc js mov les loopne jo mov jns sbb xor mov sub movsb pop adc adc rol pop pusha add arpl pop (bad) sbb jo lahf addr16 jl inc fcomps pop mov test xchg mov int3 dec pop fbld (bad) lods push aad ljmp clc xchg dec inc dec aam les je jnp add mov incb cmpsl stc add add roll (bad) or lret cmpsb (bad) adc xor jbe rclb mov rorl mov push gs test (bad) jb nop sub dec fsubrs int3 mov rorl jb dec outsb in es xor pusha adc dec pop stos sub nop clc adc jle add into pop pusha push repz sbb xor es pop out mov cmp add sti push add pop dec cmc aaa add push cli les nop mov xchg add push jge shlb shlb cmp and test les xrelease mov fsts jmp xor enter mov xor cltd loopne adc inc test nop lds enter add jbe add and sbb lock inc clc cmpb push mov daa out add ljmp popa add cmp fistpll add sbb push (bad) or shll mov sub lods cmp push and mov cmp aam clc call sbb in nop cmp xor add lcall and or loopne pop xchg pushf xchg cld xchg and push inc and sub mov ret and ljmp mov add inc das push add scas mov xor push pushf scas cmp add mov std js mov outsl int3 out mov call dec add lods add popf clc fsubs or movsb adc imul fwait mov jle add or add andl mov add add loopne add mov xor jge addr16 xchg mov inc roll mov in fstpl in mov push fs test adcl dec int3 xchg dec pusha into inc arpl sbb movsb out mov fnstcw push andb mov or stos pop pushf pmulhw mov jmp and out loope movsl sub xor adc imull cld add mov bound enter in push pushf cmpl loopne cmp add pmaxsw mull xabort add ljmp add pop cmp and add stos or dec ds dec movsb pushf push divl lods adc scas or cmp lret push add add add push xchg rcrb lret mov addb shlb shl sub mov lret fs fcoml test test xchg mov pop popa dec lock mov (bad) pop cld in sub mov popa lods shll and push add lds inc (bad) decb (bad) call out jp in xor lahf mov fistp xor adcl out sbb cmpsb cmp out xchg cwtl xor mov movsb mov les add xor orl rorl clc out mov lock popa loope and pop pop test pop sbb sbb nop faddl and inc sbb mov je,pt mov jbe stos adc mov daa push mov inc cs call mov or xchg adc andb in push or cmp mov jno movsb and sbb mov je inc dec pop mov push lret fcoml or test add pop rorb fwait cmpsb sbb testl xchg jno jmp call mov and fldl sbb and jmp nop clc adc and cwtl add sub test dec je mov mov xchg into add loop in ds sub adc pop (bad) aaa xor pusha jp ds push fsts jle sbb clc pusha jg add or mov fcompl (bad) adc pop lods adc sub adc jge and pop lock aas dec xor mov out ja cltd test sbbl xchg add push not push cmp out test mov mov cltd adc dec xbegin push xor mov scas add push into mov test dec mov jmp lock out lea pop stos mov inc cmc pusha std dec mov adc jb xchg rolb push push add cmp addl mov outsb orl divl insl pop dec ret add pop dec mov push xsave imul subl inc pop sbb and repnz add jne andb and adc mov adc add push pinsrw or shrb adc pop cmpb repz mov test (bad) and jmp mov sti or mov hlt add dec xchg int3 cs movb mov add xchg outsb jo dec and and int enter pushf pop inc into add xor mov addb mov imul out adc (bad) sub dec push in cmp loop repnz xor data16 pop dec mov ds mov and je test in jns test ja add push mov add insb push or jmp dec rcrb movsl or or inc and sub cs loope sub out pop mov xor lods pusha in or hlt subb int sbb jg ljmp adc xor sbb add sub fcomps inc xor hlt pop (bad) jl hlt adcb repz mov add out pop (bad) data16 enter xor in or sbb add daa inc push inc cmp mov mov or stc jmp cmp test xchg std add inc loopne fwait cld or xchg jno and push adc dec and add mov test fstl ds les sub stos mov clc cld orl aam jl mov sti int3 pusha aas jae add mov imul dec lret lret sbb stc or inc lods add jns imul in mov sbb sub in adc cmc ja jecxz dec je test std inc mov add (bad) xchg lods adc fstpt mov cmpsl rcrl push push push aam popl sub sbb adc enter ret mov mov pop fistl add repz pop adc cwtl movb inc or mov jge movsl pop xchg xchg jbe inc rcrl add test sbb rorb inc jo add jmp push movsl imul pop pop mov cmpsb pushf mov les imul push out add cmp sbb sbb adc ret enter movsb and jno inc in ficompl adc popa dec loop outsl add push repnz rolb pop repnz std add jo sub add add and sbb les jg fstl call mov xorb and cmp jecxz dec movsb cmp xor mov aad jo inc sub call dec pop lcall jmp in xchg sub xor sbb push mov inc notb loop add pop jecxz pop mov lret scas adc add push adc mov fimull xlat in sarb or add sbbb push sbb jp add (bad) push pop push add loope test add aaa xchg (bad) push push xchg sub jae js sbb or jae add mov hlt add mov jno je add adc popa pushf int loop rclb mov mov je rclb cmp dec (bad) shr (bad) mov inc fidivrl shl mov ficomp adc (bad) add out lret xchg rolb sbb jmp mov jno add add out push lcall enter sub repnz mov mov add mov loop jg or inc xor pushf pop rcrb pusha pop dec push mov pop mov add mov inc and addr16 mov push fdivrl mov mov push jno inc add sbb imul cmc in lods fs mov push (bad) int3 inc sahf inc clc ja jge enter pop daa nop mov cmp add mov imul das adc lods add xlat mov and mov (bad) movsl pusha popa mov sbb adc ss jo mov mov and gs sub adc or cwtl mov hlt xchg lock (bad) jo mov jle and fildl fcom in out mov in fsubrs fdivrl push xor mov and (bad) loop fidivrl cld push fidiv add ret mov push jl dec loopne push daa adc jmp cli cs add (bad) push xchg add xchg mov pop pop pop andl sbb cmp fs nop adc sub jmp ret add xchg enter cs lret in sbb xor add add mov popl cmpsl sub or shll popa pop mov jl push mov nop sti pop add xchg andl daa jnp add pushl and mov cs je cmc cmp adc rcrb je cmp ds push add inc mov jae pop add xchg enter gs cwtl (bad) mov je and cmp push dec dec add cltd push push hlt leave cwtl fmull adc jmp gs push sub push adc outsl cmc dec outsl outsb inc je arpl or cwtl jmp lret xor test loope xor xchg mov fmuls lds pop xor mov lcall add dec idivb cmp pop pop sbbl jle mov jg mov clc mov cltd xor adc pop add adc sbb push mov push sbb loop in subb sub pop lret mov in les and das outsb movsb and mov add mov mov fcomps adc insb push push dec test andl mov enter (bad) jno rolb add (bad) pop js dec or int3 sub mov xchg popf jmp lds push or mov aam sub mov sbbb shrb jge movl in pusha adc dec sub in enter es outsl push scas in lret lods out sbb push arpl rclb or arpl sbb roll sub addr16 mov xor xchg into rclb add sbb or jl insb pop movsb hlt cld hlt pop ret int sub sub and sbb aas mov movsl mov xchg sub sub enter mov or inc push mov sub fs iret sbb nop jl fmul pop inc cmp imul pusha in rclb js add mov pushf test nop lock in lret in ljmp inc sbb pop add mov push add scas mov push mov adc movsb or mov or cwtl mov aad jbe add dec cmpsl pop clc add mov ret dec js fsts add (bad) mull inc pop xchg loopne push adc sub sbb call adc bound shrb sbb sbb inc mov pop cwtl enter sub out pop add mov mov rcrb pop out mov add movsb add pop popa or sbb ds sub cmp mov pop clc scas rcr sbb fsubr xchg psllq shrb push rcrb ret cmc test fcmovnb or nop imul sbb ret inc sub cltd mov inc icebp add push sbb cs sbb movsb aad jmp xchg sbb jge add repz adc xor cld jb mov lock loop dec sub sub xchg lcall lods test std loopne fldenv dec mov lahf and cmp pop mov sub fdivrl mov (bad) sub imul fsubs rorb hlt scas nop jg mov xor mov inc xchg test rcl jge cltd xchg repnz cmp add mov scas inc sti adc popa inc icebp pop lea andb aaa js pop fcmovne add pop (bad) out inc pop lcall dec pop adc call or sbb pop ret adc mov enter mov push dec adc shrb ret xchg add mov negl mov sbb add cmp inc mov lock fwait popf add xor mov pop or cmp ljmp adc es enter std cmp and inc pop mov (bad) sbb xchg pop iret scas leave es mov js dec btr popa xchg or pop inc push xchg sti in out dec insb into loopne scas shrb jmp nop xchg pop out add icebp xchg mov fs adc adc mov daa xlat js mov mov ljmp xor cmp popf sbb xchg enter sub and fiadd and cmp or (bad) pop add sbb pop pop je hlt cmpb mov mov enter pop cli pusha push jmp add mov call dec push clc test and jg in xchg (bad) in movsb xchg cmp and add fistpll add dec pop add push psadbw (bad) xor imul fwait xchg add insb cmp fs loopne (bad) das movsb and add cwtl call sbb test push stos bound cmp adc mov fwait add leave jmp inc mov nop in in push in xchg mov pop cmp and enter lahf leave rclb push and adc jns scas (bad) lock or pusha mov cmp add inc lcall sbb test or and xchg jno jo jmp pusha nop inc push and pusha dec adc movsb adc loop pop (bad) (bad) lret jb pop pusha (bad) sbb or addr16 xor lods ror add les test xor std add cmp imul and xchg mov cmc inc add fwait movsl xchg lret les int3 js das xor mov test cmp gs arpl jp add lea aaa inc sti daa shl icebp mov enter rcrb xor in jge add (bad) mov inc xchg push cmpsb ljmp in out inc adc or in xchg in adc dec loopne mov ds push push scas mov or (bad) call mov xor mov jle test pop movnti ficoml mov push xor inc js add sbb flds lock add xchg cwtl push dec lret call addr16 mov jo cmp xchg std es mov in add aad mov pop xchg nop adc sub mov fwait add cmp mov push rcrb inc mov sub mov mov xor cmp test jnp ja repnz ror and daa pop xchg sbb mov dec add sbb sub sar imul xchg adc test test clc xor jno adc test mov loope imul (bad) push je movsb adc mov stc mov nop hlt outsl lea pop xor jg (bad) mov (bad) xor inc pop pop popa stos dec sub jl inc repnz xchg pop inc jo xor addr16 add sbb mov fldt sub lea sahf test cld jp inc lea jnp enter mov fnstenv arpl or faddl in push ret push xor add sub lods (bad) mov cmp (bad) mov adc mov adc imul or movsb xchg pusha aas test or pop lods mov xchg movsb cmp push or mov cwtl fdivr or add push pop jb push inc lock sarb jne pusha jnp nop cmp inc jno pop (bad) xchg xorl imul push daa or imul gs lods sbb test add or inc clc add inc xchg adc ret xchg cmp or sar adc fnop repnz add (bad) sub daa xchg sub loope push ret pop sbb or lods and push paddb mov dec fstps pop add mov pop xchg sbbb inc adcb out (bad) mov jns rcrl sbb pop pusha adc push outsl pusha mov ret ja pop mov je lea pop or dec clc ficomp pop loop adc pop push or xchg add xchg sub loop sub mov push push cmpsl pop xchg push inc pop adc insb jge out mov roll (bad) jbe sub mov popa or push cs adc push xchg xor push ljmp movsb push jo add pop and or xchg xor inc sbb out xor dec push mov cmp xor add mov mov mov and stc add push orb pop loopne or int add xor add cli sub (bad) (bad) and push mov test mov mov int3 push mov and mov adc hlt push add test rcl add push outsb (bad) int jbe inc cmc rolb inc and jecxz mov add stos ret jmp andb cmpsb test jl sbb add pushf pop notl jo popf xor push cld add push xor in (bad) mov and repz call mov mov adc sub int3 into mov cltd into cmp test add dec sbb sarb sub or arpl add xor add popa add push or adc and test imul aas fstpt mov push ret mov in (bad) xor stos inc adc or sbb icebp mov das enter mov insl or dec jecxz js add pop adc add (bad) movsl xor pop shrl adc or aad arpl pop scas and into lock out cmp paddsb adc adc adcb fsts rcrl dec add lods or test sub call pop mov daa mov daa or inc sbb cli int push mov or sbbl pop sub fiaddl sbb adc enter les xchg and add lods mov jae and movsb sbb cmp add inc mov dec cmpsb faddl push (bad) mov and sbb jge (bad) xor sbb or push ds dec push sbb mov orb sub (bad) cmp cmp cwtl aaa faddl repnz negl (bad) enter xchg andb inc inc pushf mov or fsubl or mov push mov and mov jnp cmpl or test sub les ds lret ret lret es cmp out dec fld1 pop add cld mov pop add ret pop sbb xchg xor xor push mov fwait cmp sbb mov dec pop cld xor in inc push lcall xor push and mov insb (bad) aad xchg inc fs add pop sub pop das jle xor sarb lds sahf adc aad add pop rcll cmc imul cmp xor xchg sub pop es xchg pop arpl je adc sbb dec sbb inc dec push lret jb dec lcall ja xor sub lock cmp shrb mov dec and cwtl xchg jno or dec pop out or xchg notb mov sahf popa sbb insb sub cs nop insb add add je test (bad) repz std dec dec mov ss sbb adc out jecxz jb mov faddl imul mov int3 pop inc push cmp mov or sbb adc (bad) xor mov mov jge add pop inc icebp inc test add das imul adc dec and pop xchg (bad) jno in inc test push (bad) out pop (bad) lods mov in dec push xchg cs inc dec sbb hlt xor inc jno repnz mov xchg jle xor sbb add into lret mov push je add mov enter mov add lahf das int3 jmp rcrb mov push repz aaa push cmpb add jg sbb aas xor mov popa dec mov pop fistpl dec or mov push lock adc stos and mov enter adc mov call std aaa adc dec adc movsl pop and or xchg xchg jmp js sahf mov inc repz xchg call and lock mov inc sbb popa hlt and sub pop and or pop fcomps call cmp push out pop test test (bad) in in add sar sub int3 in or xor movsl add push add sbb rolb (bad) mov or push in pop clc jmp jns nop sub fidivl adc dec sub add sbb jno cmc add sub js sbb sbb mov jl rcrl pop cmp test icebp mov pop push or dec rcl movsb cmp cmp notl dec movsl pop and in sbb jns mov loopne imul adc lret mov clc adc cmp cmp xchg loope inc or xor pop dec fwait dec (bad) std cmpb or in adc lods pusha loopne cmp fcmovu jmp repnz inc icebp sbb push lods mov incl fimul cmpsl loopne cmp inc sbb movsb fwait loope sbb adc addr16 pushf aas fistl push cs in movsb addl pushf call fistl sbb lock imull enter jl test mov jnp in ret add aam sarl add insb mov mov jmp cmovno xchg adc jb jne lahf adcb je add aaa xor cltd in out outsb nop and mov mov cmp mov push stos adc xchg lret inc dec sub jo adc jns fs sub jbe cmp pop pop sbb addr16 sbb int3 jecxz aaa cmp outsl hlt popa movsl mov add popf mov adc xchg movsl pop add xchg mov mov dec test push sbb inc aad movsb xchg or loope mov fwait orl cld pop ret sarb cwtl popf and mov rorb js cmp movsl pop enter mov add cmp js gs add rcr bndldx imul xchg pop in jo incb addr16 shl lock imul lea jns add push mov pusha addr16 sub lock movq rcrb loop dec clc adcl rcrb loope push jp adc adc enter into add xchg int inc dec xor sub add push imul inc (bad) mov enter jb in out fs pusha int3 inc push add xchg pop cli andl fmuls cmp sbb xchg ret push stos divb jge and rol mov ljmp add pop imul inc jnp rolb insb lahf xchg aam cmp mov jnp pop ja add rorb xchg mov mov and xchg insl (bad) (bad) cmp popa test in xor sub rcrb nop add jne bound jge lds mov rcll inc enter ljmp push fadds and xor orl sbb clc mov adc fadds test push mov mov cmp shrl pop add (bad) js add sub pop rorb push mov jno push vmovsd pop lods or push (bad) push push in aad jg mov in inc je idivl lods xor shlb xchg aaa sub das dec or or sbb adc bound dec and mov add jp lahf (bad) in xchg mov sti add push cmp je das or cmp mov cmp hlt jo sbb cwtl data16 bound jmp cmpsb xchg les stos adc push sub movb mov xor or sbb push jne sub pop mov loop xor jo adc pop mov dec push mov cmp and add adc push add and or ja imul add add jno cmpsb xchg call add mov mov ja addl stos xor cs add mov add test dec pop mov mov inc fidivr cmp mov loopne call or fs stos les into add jmp loopew adc push inc or rcrl or std cmp stc addr16 lahf aaa sbb add and mov sub jo iret js repnz xchg adc or jo inc js dec jnp pusha dec mov hlt mov loope lahf push bound in adc inc call push jo data16 add or xor jo bound adc sub adc roll cmp mov nop mov pop orb test fildl push jns and add mov in push cmpsl push and xchg add shr (bad) mov js mov xlat xor stos nop mov adc cmp ja mov in or js xor (bad) dec push and adc cmpsb pop or (bad) mov ret jge inc imul push push int mov idivb sbb jmp or xchg fs pop fnstsw loopne pop pop push test (bad) push jno loopne fcoml mov xchg cmp in pusha push (bad) jecxz mov (bad) (bad) ljmp sub xchg adc (bad) xorl shlb inc push pop dec adc cmp aam (bad) add pop push fsts cmp cmc mov mov rcrb cmpsl add inc rcrl push push jo add gs iret lods lock and les lahf nop in mov add mov out outsb add ja or popf das sbb in dec lock cld cmp add cltd popa mov fsubs andl int3 jno fcoms add cmp or sbb mov mov idivl lods sbb fstpl ja das lea sarl cltd add loopne sub inc js lods (bad) mov aas push mov xor and xchg mov iret pusha inc fimul inc arpl mov imul push ja in pop in push add pop (bad) dec xchg loopne and cmpsl inc inc lock (bad) (bad) fist xchg movsl dec push pushf stos add push sbb mov xchg lahf loope dec adc (bad) ljmp jno add sub or (bad) lahf adcl adc outsb into sti pop loop xlat xchg or lock or pop mov test enter (bad) bts cmp (bad) push call movsb mov xor sub not loopne dec (bad) gs daa pop inc stc clc sbb jge jne add jnp jge sti arpl push mov and adc add cltd pushf jecxz push xchg mov or mov mov xlat fucomp scas cwtl adc movsb inc popf sbb in loopne js and fisub mov hlt movsb mov mov xor int3 shlb cmp mov bound dec and out in (bad) xor pop aam loope vsqrtpd icebp rcrb lea test rorb outsb push inc sbb mov enter lock pop push es inc and cmpl or in adc fdivrl or aam fnstcw mov clc pop cmp jg mov call and mov dec ret mov aad (bad) arpl stos bound add imul mov inc or dec inc add lea loopne jne pop xlat cmpsb nop mov xor push add shr add pop jo push adc in mov idivb mov jbe fimul sub mov mov clc mov mov aad add or andl arpl int push add aas loope mov test push adc (bad) aam push mov add (bad) push push fs and inc jne adc dec mov bnd (bad) add pop insl repz (bad) or inc push and insb dec add enter dec adcl mov mov adc rolb adc sub jge in imul pop pop sub int3 shrl enter test jo pop repnz dec or movsb adc ret cmp or in rolb mov mov add psubsb bound xchg roll mov mov (bad) pop mov jg and cld loopew xor jo das pusha fs cmpsl (bad) clc fistpll adc sbb hlt or mov xchg cli sub popa (bad) mov mov xchg lods xchg cmpl out push xchg ljmp sub add dec cwtl inc jns js add (bad) iret (bad) xchg push fnsave or adc sub inc mov jae and mov pop push or cmc imul and test aam add fdivrs das hlt add lret scas push stos cmpsl popa out inc inc xor mov mov cmc jmp add cmpl jbe add cmpsl pop cmpsb jmp jp jp je cmp sub scas add add loopne lcall xchg idivl mov cld add lock push or jo add and test add mov dec lcall sbb xchg mov add mov mov or dec mov loopne or je bound adc and leave push xlat mov jl cltd xor icebp and sub mov mov mov jae (bad) je mov adc adc negl adc scas and je,pn lcall mov test dec fisubr in sarl jnp push cltd aas loop cli mov add adc lods jl xchg push jge dec inc fdivs (bad) pushf arpl sub sbb jl sub stos sbb daa imul xchg lods faddl sbb cltd mov sub icebp negb sub mov (bad) and hlt xor xor rclb mov and or and cmp sbb std add sbb pop scas mov mov je test pusha nop call xor sbb aam add in xchg push push xchg xor xor add je movb sub int3 stos fisttpll cld aas inc adc enter mov push imul mov push cltd loope jo mov bound jl mov cs js inc test lods cmp push jns adc add loop adc and out mov push adc aam aas loop addr16 add movsb inc xchg jo sbb (bad) mov xor cs imul sbb push sub jg push pop es repz pop inc cmpb mov mov divb cmp or hlt mov add (bad) out insb pop insl lcall pop test popf (bad) dec hlt pop dec divb loopne cmp add je mov in cmp pop das mov pop xchg rorb adcl dec call add fwait sub mov popf xchg test repz mov in movsb and js xchg and in lea int arpl mov xchg imul dec dec repnz cmp pop xchg lock add mov pop and push popa call imul sbb pop dec scas jmp iret xchg enter clc mov and mov push stos pop pop mov pop inc lret sbb jg add and and or ret cmp mov dec gs enter sbb rolb sub outsb jge rol fwait imul imul repnz adc mov test jg add loop or pop gs cltd adc and (bad) ljmp pop pushf mov loop insb test pop stos xchg xchg mov dec push (bad) xor imul iret scas add mov shrb dec add and std or sti inc dec leave jns in xchg js out cli dec dec arpl jmp pop inc or sub in sub jns cld mov xchg movsw xchg std mov mov pop inc mov xchg sbb pop or sbb push int3 adc test in inc inc mov and adc popf inc push cs and inc pushf xchg cmc adc nop add shr pop xor mov sub clc jl imull lea clc inc push sub bound fwait in sbb in (bad) imul jp (bad) outsb arpl lock lahf adc adc add pop out daa adc data16 inc mov pushf lock or into rorl push xchg sbb das lds cld (bad) xor pop xchg ljmp inc fdivrs leave sub lds mov push and push movsb add (bad) cmp or push push or push adc or insb popa fmull jo cmp xor faddl dec iret dec mov dec movsl or insb xor xchg inc scas xchg xchg jo lret (bad) outsl and jl cmp dec fnstcw repnz mov insb movsl adc sbb mov (bad) dec sub inc xchg inc insb or stos inc jo js pop decl (bad) sbb in cmpl cmp and test add in adc mov mov sub aam adc jmp xor jo lds sub sub mov mov xchg pop mov cmp jg mov xchg xor ja and or mov cs mov outsb mov push gs outsb xchg push leave lods inc aam fimull cmpb pop cmp and and add jmp mov out lea in and popa dec pop xchg pop add add lds dec fcomp xchg jno xchg sbb jmp lods les mov add movsb adc int3 sub xchg push inc and jmp jo pop test fnstcw jb dec xchg bound cmp add fimul loope dec xchg mov ds test jl rcll sbb ret xchg shll add inc or push jb cmp jp call inc lret loope ret adc roll insl sbb xlat dec xchg pusha ret mov fwait dec ds loopne adc pusha mov mov or fbld or xchg aad clc mov in lret add addr16 inc sub push xchg iret andb cmp pop inc inc cmc xorb ret mov jg mov aad loopne cmp (bad) aam and sarb cmp gs cmp addl jle inc and sub fcomps mov adc mov dec mov scas les pop push mov lret int loopne inc xor mov add adc inc cld push or stos call mov mov enter nop mov add fbld push sub xor mov push and in cmp and cmp hlt push dec add jns aad add push and mov bound cltd int3 movsb push popa adc and sti and imulb aas movsb xor adc cmp int3 mov in imul push test push jecxz jb add bnd roll xchg push pop mov add pop imull inc imul pop push test and pushf and cltd add mov add pop and pop jl aaa xchg mov (bad) xchg push cld adc xchg mov enter in sbbl sbb mov mov xor insb imul mov cmp mov stos outsb orl aas sbb test sbb (bad) sub lods adc clc adc mov imul arpl inc lret idivb test fildl push movsl je mov imul jno add cmp in mov inc fsubrl lods std mov add in repnz xor dec movsb in pop pop pop mov jnp adc jp push adc lock fs pop push mov jecxz jg mov xchg add dec cmp jmp nop inc sbb add loope call fs and nop push outsl pop lahf inc sbb jnp add notb push jg mov sbb into jns (bad) fdivl sub and xchg int nop add mov or lret std aas adc pop dec in enter mov add int3 clc (bad) jecxz add test aam or mull cltd rolb popf gs push std loopne cmp mov dec adc sahf nop and xchg mov sbb or insb inc push ja sti sub dec or xor pop mov mov clc std popa or in add imul push scas jge and jg mov adc push xorl cmpsb xor inc and and in (bad) add in bound js add xchg and mov je lock mov shrb sbb inc jo sub shlb pop adc aad das je (bad) add or hlt adc push roll dec xchg dec pop cmovns pop data16 lods jo pop sahf nop pusha neg push out xchg and gs jbe inc or jmp xorb mov js nop pusha sti fwait jmp cmp inc pop imul lret lods aam pop xchg xadd in jmp test repz inc test icebp (bad) adc (bad) jo bound ret or sbb xor popf sbb push adc mov inc cwtl cmc and int mov pusha mov cmp cwtl lods mov fwait push fsubr outsb clc add add and push xlat adc clc loop sub push add gs pop push faddl (bad) js fstl adc push mov inc ret add adc adc sub loopne mov cmp xor add sub and adc je imul push shrl cli clc pop in pop push ja mov xchg jmp (bad) inc mov or xchg pop mov dec mov sbb mov out dec and sbb xor cmp orb imulb mov andl sbb (bad) dec cli and xchg and inc pusha bound (bad) lods ficom xor or pmaxub inc jbe pop les add dec les jo mov push lret inc loopne mov call cmp xchg add dec daa sub cmp push and pop push out pop out mov in ljmp push sarb and insb add flds pusha out outsl xchg pop mov sub pusha inc scas adc and jl or (bad) pushf mov jp sbb leave add xor jno cwtl in mov or dec shlb xor lock cwtl mov jle loopne sub push jmp jmp fucomi mov lret repz xor dec and icebp and pop rcrb js jg mov popf push mov addb stos je sub adc or lds sub int3 aam add in mov pop mov flds xchg les or adc mov arpl out das (bad) sbb in clc shrl les stc add (bad) or jge cmp xchg data16 dec arpl lods mov xchg cwtl not sbbb stc js jns icebp icebp sbb jge shrl cmc aaa adcb dec mov mov add ret mov sbb addb mov (bad) mov push out add push fnstenv mov fisttpll imul repnz in push add mov pop out rcl ja,pt dec mov jge rclb push push push mov xchg xchg add lock das mov aas gs sbb push mov xchg jl push pop sub xchg and or push shlb adc mov push xor sbb repz (bad) outsl out arpl xchg xchg mov fmul xchg mov sbb jo cmp das xor loopne xchg aam xchg push fcomps dec clc divb inc mov sahf inc dec add les sbb mov add cld daa pop call sbb rcrb test xchg clc rorl loope pop (bad) lcall add sti sbb dec adc lcall test sbbb movb and aaa cmp jecxz mov das jns inc add loopne fcomps mov hlt lods mov add sbb add dec les sti xchg andb adc mov add lret rcrl fwait pusha andb push dec movsl arpl enter xchg push add or sub sub test sub push rorl adc mov mov sahf push sub lock add lods mov inc cmp pop je dec add leave sti cli cmp pop (bad) push jmp outsl ret mov idivb cwtl or xchg pop mov jnp add popa adc add xor sbb mov push aaa xor adc jge dec sub fldenv sbb insl push jno xchg mov icebp and repnz (bad) mov cmpsl pusha in pop testb fnstsw add dec xchg cs dec dec or ja jno les ds mov (bad) push out popa ss mov sbb rorb push outsb and add mov jl rorl and sti js sbb and inc jecxz fidivl addb (bad) jo mov (bad) outsb jne add test std ficom ret hlt add or cmp hlt mov xchg cmp out pop out mov inc add push mov sbb sbb dec cs cmp mov adc add mov into lock rcll les add inc je cli in adc jo or push jb loope aaa jbe jecxz pop ret cltd aam ds sbb div push (bad) data16 mov mov mov or push enter or sbb mov lahf int push out add mov xchg ja push sbb inc adc addb scas add test repz fidivrl pushf div into inc mov dec pop lds enter pop leave in cmp push mov xchg pop imul mov cmp je clc lock stos mov into f2xm1 and lret imulb mov jmp and lret add sub das cmp or jno out push (bad) rolb lret test mov fidiv push mov rolb stc jnp xor mov mov call nop aam aas add std or mov push and orb lret xchg jno add push pop lods scas or pushf pop cmpsb mov pop icebp movsl push cld popf add sub jb xor cmp sub push inc add in inc xor leave adc xchg fdivl fstl or inc or pop mov xor test enter popa and mov imul add pop in cmp popf sbbl sub movsb push adc mov lods xor push push or push mov enter call les add mov xchg lods inc fisttpl ds jge stos mov insb jno inc push mov jg ja cmp out add fmulp add cmpsb sbb mov add inc pushf xor add pop (bad) xrelease (bad) push mov lret adc pop (bad) fadds adc xor nop out cs pushf push mov and push call cmpsb pop pop in xor sub pop sbb cmp lods jo cmp mov jecxz mov int3 pop jmp loopne mov mov dec movsl insb popa enter mov dec lcall add adc adc jo pop pop movsb adcb shll push out push dec mov cmp add sbb mov ret pop dec mov mul lahf mov sbb rcr sbb popa sti add outsl cmp arpl jae add lcall pop cmpsl popa xchg aam fstl jns lods xchg lods add jge aas or and cmp xchg fstpt int3 idiv ds ja xor popa dec lds mov push mov add mov sbb iret jae rcrb insb mov mov out and pop push aam push inc jo test scas int mov rcrb or in dec repnz jno (bad) rorb je xlat push mov xchg stos addl jl sbb xorb jl mov and xlat adc inc sbb movsl dec xchg pop xlat xchg mov xchg shll bound insb mov xchg and (bad) lcall pop fs pop jo mov mov xchg jl (bad) mov jo or inc xchg or push xor xchg push aaa (bad) add out mov jmp mov sub cmc push gs mov fistp add dec mov jo mov daa push and adc sbb sbb (bad) fwait pop pop add lods rcrb push sbb adc popf jl (bad) jge add mov lock add call and popf xorl (bad) mov out (bad) cmp in imul mov sbb fsubs push in and and sbb push add je or mov leave sub into pushl adc pop pop loop out and push add pop lcall bound pushf mov (bad) mov add mov push pop pop sahf add sub jp jo add stc mov insb popa cwtl aaa dec fsubr inc loop or xchg mov lds add inc mov ja pop pop push dec or out lret or xchg xor add mov inc dec add call out jmp mov clc clc sysenter adcl adc repz mov and test pushl mov xor scas jae pusha (bad) ljmp (bad) push inc add adc cwtl sbb jne and popa sbb sbb pop jnp js pusha push push push pop rdtsc and fsubs cmp or xchg pop mov xorb sar adc cmpsl out sarb lea loope cs popa lret pop movsb js and mov xor push out dec lea fs addr16 pop push loop pusha fidiv aas sbbl popa nop mov imul xor test sarb roll test daa xor inc mov add iret add (bad) out sub push and or sbb ret add call mov dec das add loop jne jmp ja andl sub shlb sbb pop adc inc push sbb sarb adc adc add jno mov xchg insb pop es insb or push mov addb inc pop aam daa inc (bad) jb pop mov std push sbb pop adc xorb mov pop mov push jae arpl add push xor fstps pop shl cmc inc and and out dec test into inc xor and mov pop mov shrb cmp pusha data16 add js adc clc mov je push add push add adc in int3 mov addb (bad) into fwait jge dec (bad) xor leave pop dec add push or rcrb loope mov out sbb push push sbbl push sbb add cmc ret push cli jae cmp sahf data16 add jb push xor bound push cli pop mov inc adc notl adc les inc add and ret lods or xchg je dec add mov dec popa add push sti dec pop clc int3 repnz idivl cmp and imul mov adc movsb add pusha add scas dec sbb add mov xchg ds movsl lea jp xchg inc cmp add jno xchg and je fmull push or or cltd ds cmp cmpsl xor fmul xor inc add jns adc or push cld sbb lret (bad) in lcall jne popf jle sarb rorb pop gs fs subb mov and push loop pushf and push arpl fdivp xchg cmp fiaddl jge or sti cmp mov cli in mov mov xorb movsb test mov and mov adc stos xchg std push (bad) or cmpl push adc test xor cmp adc jg jmp cs add push adc mov pop cwtl inc pop lea jecxz sbb rol rclb add stos fisubrl int3 mull sbb add ljmp shll dec mov sbb aaa xchg and es mov mov fld xchg mov mov les fnsave sub lea int3 scas pop jae and dec xor nop jmp lea divb jnp (bad) xor push lock cmp push das aaa push mov cmp out (bad) cmpsb add nop mov pop adc lods repz ja and les cmpsb scas mov (bad) cwtl mov hlt fiadd adc jecxz cltd sub push out (bad) ret sbb sti pushf or jg add mov lods adc adc std push sbb lcall dec mov rorb push pusha test cmp and cmp jne sbb pop outsl pop add xor aas inc sbb test cmp or and in mov sbb rorb cmp inc pop dec cli dec sbb movsb push sub and leave push xor js pusha pop popf dec cmpsl jb fs jmp scas mov ljmp mov pop adc stos cltd xor jae loope sub inc cmpsl mov mov add cmpsl sub addr16 add jb pop xchg adc mov dec aad push ljmp dec and add addl imul pop lds push test mov inc sbb cli add fadd add adc shrl push notl mov stos jmp pop lea pop and inc sub inc add sarl pop mov (bad) jo push loop and mov mov jmp fstpl mov outsl mov dec mov enter sub push inc dec and adc push sti enter je scas cmp call pusha jmp out add repnz imul jecxz and popa mov loop mov or sub push adc sbb mov mov adc lock dec adc lea fs fisubrl cmp (bad) inc adc stc jmp mov push push mov pop ja repnz fdivl push test in andl or dec mov and xchg pop inc push cltd pop inc roll in cli rorb cmp fnsave hlt adc fstpt std pop xchg ja adc movsb cwtl in cmp lahf movsb add lods insl mov in cs cli lcall pop rcl pusha or xor popa xor nop ss rcrb fildll call hlt cld sub or lods idivl lret jno wbinvd nop sbb cli and or mov mov mov in add or pop add jnp jbe adc aad push rol jne or jnp imul cwtl or lea jno xchg jnp sahf push (bad) loopne inc lcall xor repnz push lods mov stc jmp loopne push add hlt subl cmpb jg in sahf test and mov push xchg mov xchg test fisub xor add xor adc push fisttp sub lods cmp xchg mov (bad) mov jae (bad) push lahf xor call rcrb (bad) rcr xor and add mov inc insb mov aaa xchg mov mov mov mov add and movsb add and push mov add pop mov fcmovnu adc jg mov inc mov jmp jmp add jb add dec outsl xor and nop repnz push fimull sbb jg sbb lods push inc das jb mov ret add jo mov fisubrl xor lcall add xor ret lret dec or dec insl add push lret jne xor mov int3 in add idivb or stos les mov jge int3 inc or add in xchg sbb mov xor jge stos and js dec add (bad) add popa pop ja repz fnop movsl insb xor or ljmp sub add pop pop and out push cmp jne mov dec lock jl mov lods push push leave lret mov xlat es and inc adc pop adc das cmpsl and in xchg pop xchg mov mov mov sub les and cmp arpl lahf inc fisttp dec cmp xchg adc push out (bad) ds add push xlat dec enter xor in push ror aaa xchg mov cmc rorb cmp jno outsl lea push int loop clc and aaa xchg lcall push xchg arpl push fiadd add jle sub jmp in push add in jmp int3 or sub (bad) loopne fildl adc popf dec mov adc test add jne (bad) sbb arpl loope imull fnstsw sti dec mov out rolb adc xchg lcall scas inc lcall mov push sbb dec ss push sub popf aam jle push push (bad) call stos inc sub lock pop sub adc sub xchg add sub rorl sbb and cltd popa movsl dec (bad) ja std pop sbb fbstp jnp fsubs pop sub mov mov call call lock jne (bad) mov pop cli enter pop add lea sub and add int (bad) ja nop xchg add in andl lea movsl inc ret loope lds cmpb xchg sbb dec sub imul dec xor shll outsb cmp push dec mov icebp sub daa pop xor ss mov fst sbbl pop dec add add out push std in cwtl aad sbb mov push push arpl in mov pop add adc daa out inc (bad) adc push lret jl lcall xchg mov add outsl fcmovb mov (bad) xor jle and dec fcmove cli cmp outsl mov dec addl xchg fwait and movsb add (bad) jl mov or imul sarb jnp jo rol enter out cmp pushl divb pop mov add sub call stos pusha add cmp add xchg xor mov push cs add pop leave xlat les stc ljmp dec jne adc nop js adc adc sbbl xchg push daa loopne pop adc in aad lea lods or lret sahf mov push push xchg mov sbb add mov cmp mov data16 pop or or mov mov or mov scas inc js push mov pop sub fisttpll mov les lock dec scas add mov mov icebp push lret das mov mov std sub sub mov add (bad) nop xchg mov jle or popf dec mov shll fidivl push xchg sbb sbb mov jo fcmovbe imul pop add adc mov and nop cmpsb sti icebp mov mov cwtl and jmp test dec add xchg push mov dec and and outsb sbb lds add or push pusha (bad) es or ss int adc bound mov inc cmp (bad) ss test add fs jl aas pop fisttpl cmp sub jecxz jne sub pop daa or cmp jo sub mov in jno adc jo push or adc cltd mov addb stos dec xchg sub mov sahf xor lahf push jbe inc adc dec addl ljmp cmp add jb fcomp dec mov loopne out xorb rcrl out jne add cmp dec inc popa notb or scas insb dec mov adc fcomps popf add sub stos sub cwtl push addb and pusha dec call popa pop dec inc testb add popa jo dec sar mov xor jmp and cmp add inc and mov add cmp xchg xchg add adc mov ds popa enter pusha inc mov xchg pop push sub push movsl sub lahf (bad) loop or lds into test ljmp inc stc repz push push outsl dec lret inc jno pop mov in cld mov pop and imul sbb or and in jbe push sbb pop cld shlb popf hlt fwait (bad) pushf dec add xchg dec sarl push inc lahf inc xchg scas or rcr int pusha xchg pop push ret pusha mov push fmull adc mov pusha stc add popf inc loope and jo in cwtl dec cmc jb add push cwtl or mov pop mov xchg push shrb in dec inc fimull mov outsl inc dec push add lods dec pop xor add pop push and lahf mov cli xor mov cld adc mov sbb pop aas mov mov xor sub sbb out add sarl adc sbb scas sub lods add lock mov mov push ja aam cli hlt mov pop es push movsb and adc adc es test xlat xchg ret add mov xchg xchg in mov xchg bnd adc test dec fwait hlt test test xchg repz mov arpl rorl stos and mov dec mov push loopne cmpsl and xchg and ss outsl or and add stos mov sub push (bad) fldt jmp int inc inc lods and nop lret aaa outsl or push insb rcll mov pop xchg mov pop cmpsl jae fwait jl cmpsb roll testl xor pop push mov xchg data16 arpl repnz push sub and fcomip push cs dec rorl iret sbb sub enter push aam dec lahf pop cmp add sub inc add rcll mov sbb popa pop sub stos rcll insb into xchg xchg gs fmull imul cmpsl (bad) add pop mov pop subb pop add movsb mov xchg dec add test mov inc sub push pop and mov fwait test sarl and cmpsl xorl sahf sbb xor aaa adc add inc push mov pop xchg mov imul les fwait hlt (bad) or sub xchg jp int jne sti imul loopne mov add std mov jmp push in or lods cwtl adc xor lret arpl ljmp xchg mov pop lcall xchg push (bad) nop imull sub push pop inc ja and inc ljmp jp sahf incl mov add test and xchg push int mov mov push push jg mov decb adc mov sahf and sub inc popl jge mov pop int ret lret insb pop mov (bad) mov gs fsub ja ljmp aad cmp push stos rorb jg mov outsl pusha pop pop cmp imul hlt shrl adc leave daa or adc push mov lds xchg in add cmp lods lret lods addl shrl pop mov andl and lds pop adc idivb add mov mov adc scas jb (bad) imul scas popa mov (bad) sub add and mov or (bad) test sbb sub sub fimull es stos (bad) fldl2t adc je pop jnp add nop bnd pop sti jmp push push add jbe pusha fwait popa mov lds mov dec lcall jo call jns or push pop jo nop lds testb push pop push pushf in mov and movsl call dec lods push lods push jae mov mov xor test sub xchg sbb cld push cwtl mov mov inc mov mov cs cld pop jge call xor inc dec fstpt push rcrl mov mov jns lods jecxz jno add mov dec pusha sub mov repnz xorb popa loop int in mov adc xlat and or das xor xor mov add mov loopne (bad) addb das lret add dec mov jp xchg ljmp sub push push notb in aas xchg ljmp pop outsb push xchg inc cmp pop inc fnstcw idivb push xor jle adc push sbb mov (bad) aam jns xchg out sbb scas inc push add test push add xchg in mov add ret pop or ret sbb (bad) les and push shr cmc out loopne mov push or popf test add and add lods mov sbb sbb notl jp sbb sti dec mov loopne sub inc or inc xchg out and ja pop cmp and mov xlat jmp and sahf pop jno ss push pop dec add lret mov sub jmp es icebp dec imul jecxz aam cmp pop gs loop mov push fwait (bad) jbe shrb sub dec add in (bad) leave das adc popf pop clc jno add (bad) sti lea dec pop js test mov xor cmc jns mov pop aam xchg add mov inc cmp aas xor push pusha cmp mov mov leave xchg pusha adc (bad) repnz adc add dec adc inc or test pusha pop outsl in dec orl jnp and aam cmp mov outsb xchg push dec lea jp pop jns test push xchg stos push push add stc cli mov adc mov shrb cmpsl jle and cld pop shrl cmpsb in in shll stc in push sub fnstenv ret add out or pop dec jbe (bad) ss jae orl mov out cmpsl insl aas ret rolb out nop xchg inc js mov mov inc xchg insb aaa int3 nop out xchg popa (bad) cmp sahf test fbstp imul decl inc and mov pop jle add addr16 sbb into fisttp xor test mov mov sub (bad) enter adc ljmp add mov push push pop icebp push imulb inc and je push push pop in call adc mov sub sbb popf xlat repnz push cs mov mov cli push cld pop xor add cmp jbe stos nop mov or out pop ds inc fdivrs leave jg ss jo add and (bad) addl faddl adc mov or mov push or mov fs repnz fs fild pop and cmp push cmpsb fmul adcb mov call mov jns aam and in xor dec (bad) imul add mov imul mov out jmp mov pop (bad) xorb mov or mov add (bad) out xchg ss imul xchg movsb pop sub or xchg clc mov fnstenv jle and pop pusha cmpsl stc cld repz cmp sub xor adc inc add outsb and jae xor or and xchg mov pusha ds aas add adc mov cmc add xchg cmp sbb xor mov mov jne ja xchg aaa sbb or cmp (bad) mov mov mov xor mov jb,pt lret mov sar popa mov ljmp fwait jo mov mov mov cmp cld mov into in cwtl jg adc xlat dec sub jecxz ficomp jl inc inc jmp bound cmp mov repnz push (bad) (bad) push or fwait mov xchg add cmp dec dec lret inc add mov mov movsb or push mov stos jne scas mov fdivr lea add inc sbb rcrb add jno dec mov mov pop sbb repnz test add push xor pusha (bad) testl loope cmp out cmp mov sti imul mov jle pop mov xchg fisubr adc hlt std test xchg inc jns mov popf adc data16 mov mov rcrb or sub cmp clc and loopne in pop add and mov jae xor sbb imul sbb repnz rcrb push cmpb add (bad) mov or mov or sub popa push in icebp les out inc sti lahf popf movsl pop and jno and push icebp push adc sbbb pop sbb lods or push xchg cmpsl and pop push lods inc rclb fistpll xchg aas cld cli adc xchg mov outsb and test shll call pusha adc lds and push jmp dec popf fs sub mov scas shr sub push cmp lea cmpsb cmp stos je add sub std les sbb add subb aad and std lods movsl or jge dec cmpsl roll jno lods fs pop push imul push jae sub stc pushf jae leave lock cmp xchg repnz outsb lods dec xor mov stos repnz or add aam outsb stos pop jb sarb in into pop adc pop repz jecxz cmp mov fwait test test mov push pop jmp or pushf out push imul inc loopne and push xor iret mov jae cli imul sbb mov add daa icebp pop pop es pop scas lcall popa out fldt push add mov leave lea sbb pop ss mov inc (bad) and ret aad add mov stos fnstsw loopne pop xchg movswl sub fbld fisttp outsb mov and mov jno frstor fldcw es lret lahf (bad) jle lds mov scas cmpsb sub mov bound and scas cmp add or inc mov xor sub push ja push add xchg adc insl imul adc ret imul xlat pop push popf sbb pop mov and mov fcoms push jge cld lods push jl arpl gs insl pusha loopne xor push clc adc std movsl dec inc sahf and (bad) and lahf dec inc movb movsb push dec (bad) enter add lods add xchg dec stos orb push and (bad) add xchg (bad) and mov in adc jmp mov ds adc xor insl popa jno test pop rorl inc xchg mov addr16 push sbb lcall add cmp daa hlt popf test push cmpsl xor pop mov cmp pop (bad) sub lea pop lods xchg movsb or jae rcll push int imul shlb adc mov icebp cwtl ds xchg test shlb mov xchg mov mov add testl xchg inc popf pop xor je in or pop xorb mov dec and add bound push mov jge daa (bad) dec daa inc sub mov add xchg sarl sub sub lods roll (bad) xchg in inc fs mov pop jge mov jg add xchg cld in mov mov lahf rolb cmp ror aas (bad) sbb add ljmp push jno lock loope and fsubrs xor iret push mov (bad) jns test jno and sub sub sub mov insb es sbb fs testb add out loope push xor daa sbb cmp aaa add mov cld pushf fisub xchg fsts sub add lcall inc hlt mov adc push pop sbb icebp push sub push (bad) cmp icebp pop inc mov daa dec std repz js mov add (bad) xorl outsl cltd inc ret pop cmp add sub shlb add out rcrb imul or xchg jo push add aaa xchg xor movl mov xor jno push mov gs push jl incl jb adc (bad) cmp add and push test xor add loopne ljmp and pop adc rol xor pusha (bad) jne add mov mov and ja cli mov packssdw add mov jno sub adc push pop out je push or mov (bad) and les in mov pusha stc mov adc bound mov or mov cmp shr es mov loop pop sbb cltd shrb or jle loope lahf jg mov mov fnstenv lock or fmuls and call sbb es xchg add or sub mov lret add or inc jmp fisubl ss ss mov xchg mov pusha sbb sbb pop popa add adc jns cli fidivr or jbe rorl and sbb xchg out xchg das popf lret push xchg fs add stc in adc push dec dec sub push inc push xchg xor push aam cmp jle cmp loop pop std push inc jmp pushf repz ret xchg add pop pusha out and jno fisttpll jl movd mov aaa cs add cmp add xor aas adc sub lds push adc sti dec mov sub nop xorb stc mov stos add insb or mov ret push add out sub dec jae adc mov mov cmp sbb jbe (bad) dec es xlat add sub mov mov jbe jecxz test sbb or repnz mov jnp jle pushf nop stos cwtl subl sbb test add out test rol add std repz mov test jmp sbb lcall int sar pop cwtl add mov add push aam xchg lcall ret jo add dec cmc pusha mov fcompl jp fwait mov jb mov mov pop xor push or xchg int xor or inc sarb addr16 pop adc mov inc add aas push repz xor cmp pop add push scas shll call pop pop sbb test mov pop mov dec fs pusha outsl xchg fstpl leave das mov add push add mov mov jbe ffree xor lods cmpsb pop adc pop inc push xchg push xor in je inc scas mov enter jl push shr mov push (bad) xor out rorb xchg push push mov sub loope cwtl popa movb lds loope jno push adc lret mov mov jg iret aam repnz lcall movsb and add mov test (bad) mov lcall insl scas jo mov out and mov and lret lea lock or (bad) adc push (bad) fdiv inc pop pop pop data16 jnp fcoms push mov push push (bad) mov pusha xchg jmp sbb hlt inc mov jmp aad std ficom dec push mov xchg sbb push jg inc sti pop mov mov add xchg nop cs les add jl lcall adc pop xchg mov or mov fimul xor push out push push mov leave popa jo jl das dec sbb xchg xchg pop push imul jae pop ljmp out cmp popa in dec mov cld fistpl (bad) xchg sti jb int3 sub stos or popa jnp jo jg scas lea jno leave repz in xlat mov mov mov jbe loopne mov push gs jmp push pop mov loope sub pop addl adc fidivl fildl cmpsl cmc cwtl adc andb sub ja adc daa xchg and sub pop (bad) push fildl stc faddl adc push push cmc push pushl cmp pop cs mov (bad) jb pop cltd push push sub push (bad) ss aas and xchg fldln2 ja aas mov mov jbe push pop sub mov cli and fisttp sbb es lret js push movsl outsl loop adc insb add xor repnz loope sbb aas bnd inc mov (bad) aam pop mov daa popa gs and rclb mov push inc movsb dec pop int outsl in fwait (bad) mov add or and mov mov (bad) repnz outsb jno mov adc je mov je mov mov cs sbb daa outsl or and inc popa sub fidiv test and mov mov cs sbb inc mov adc repnz xor lds (bad) cmpb fsts sub xchg popa rorb mov imul xor jp mov adc sbb lods sub push cmp mov jo sbb xchg jbe fdivl mov data16 in jno sbb jns ds cmc mov push mov xor sub xchg and mov jns js adc es cmpsl or xchg adc imul in mov pop jp cvtps2pd imulb out pusha les and popa lods fcmovnu or sbb xchg mov pusha ret xchg mov cli jo popa fdivrs js mov (bad) sbb sub and jmp xor adc hlt cli adc std je inc mov pop cmc sar and (bad) pop jg mov and xchg and jg add inc mov je adc mov arpl (bad) fsubs es push pop stos rolb pop rolw dec lds cwtl dec xchg outsl inc cmc out ljmp add rcrb mov push sahf lret or sbb sbb (bad) mull ret mov fsubrl xchg push cli fwait fwait xorl and sbb cmp push and (bad) ficom mov jge pusha shll xor sub sub adc pop and ret or loope jg mov inc imul sbb rorl daa (bad) aaa push nop push jp dec stc cmp mov nop std add jmp mov (bad) cld inc lahf jge sahf sbb (bad) call shl inc add mov call (bad) adc ja pop icebp mov mov add movsb push mov mov xor mov les mov cld loope sub mov push test imul mov pop jb xchg mov cld inc imul add gs testl push or es fiaddl jae out lods repz mov or push int3 stos xor xchg and jne xor stos popf sub jmp test add and fisubl loope add mov xchg outsl push push sbb xchg (bad) mov dec stc (bad) xor rorl push inc rcll jae xchg scas rorl pop in sti xchg test cltd insb or imul xchg jp push movsb adc mov add add outsb mov data16 xor ss rolb or or sub pop and pusha sub xor xchg add imul clc jmp cs out push sbb cs dec sub sub or stc pop xchg mov add loope xchg insl nop sarb mov adc scas outsb jg data16 pop sub dec push cmp add fidiv fwait inc scas hlt nop add dec mov mov inc and je add punpckldq std pop cltd (bad) mov lods pop inc lea or jle nop jge add test push cld loope or bnd add loop (bad) xor rorb jmp jg subb xchg pop mov int3 fiaddl pop xchg mov cs mov jno iret xor mov (bad) je mov sub les in jle sub mov in mov xor push int3 jnp fistp xchg mov bnd push add loopne sahf (bad) std aaa cwtl mov outsb repnz or into sub les popf repnz adc ja adc popf sub adc xor xlat xchg mov jae dec shr pusha sub std (bad) cmp jbe mov push cmp cmpsl popa and mov pop shrl sbb push cmp daa lea jnp dec out dec dec nop out loopne xchg lret push cmp insb mov mov inc subb cmp pusha pop push mov dec mov sub add jb and mov (bad) loop xlat xchg lods jle mov (bad) mov dec repnz inc out ljmp fcmove mov sub out inc pop ret jnp push mov push adc icebp loopne out arpl mov dec pusha iret sub out outsb push add idivl cmp push xor mov ret cmp fldenv xchg jnp (bad) das mov jl push xor (bad) daa sbb sbb mov xchg pop adc cmpsl mov pusha loope cmp lret vldmxcsr loop add add pop jae sbb adc cmp pop xchg lret stos cltd lods cmp out or sbb xorb pop sahf pop mov int out pop outsb mov lods push pop (bad) xor mov imul xchg inc or cmc xchg push (bad) jl pop fisttpl xor lock jmp push add int3 fnstsw pop mov add (bad) pop pop imulb ds adc pop adc sbb das and addl add fbld cmp in sti pushf mov mov add xchg fnstcw jmp inc (bad) pop andb jl mov pusha out mov mov mov xchg in sarl stc cmp xor rclb cs enter mov mov and xchg cmp pop hlt mov insb hlt mov add fidivr in out adc adc aad adc mov insl mov (bad) xor lock ss mov (bad) inc xlat xchg xchg xlat push jl inc inc stos and add popa push int fs pusha es addr16 les fs (bad) and test xchg lods (bad) sub in sbb mov jo xchg cltd out pop enter std (bad) movsl sub mov jg fdivrs inc faddl divb mov popf ret sbb add or adc push and inc push and arpl dec loopne xchg mull xchg xor das test stos popa push xlat inc addr16 or sbb jmp jp cmp scas popa xchg fs lods sbb movsl insw mov and adc dec push cwtl ja jl jecxz add cmpsb sub and jb mov push addb and mov jl leave bound enter mul xchg and add sbb (bad) fwait and mov mov add jne or popf pop outsl clc cld cld push add fdiv sbb out (bad) repnz imul inc add fstl les jno mov mov adc cld mov dec push loope pop (bad) (bad) pusha lea les lret sub jecxz decl ficom jmp add jb mov sub add jmp (bad) cs test cmp out das mov xchg jle inc andl out sub push or gs stc fimul cmpb test jecxz pop add repz jmp xor (bad) imul in (bad) mov pusha adc adc add std add pop mov mov xchg or mov (bad) and fildl dec in nop push sbb push adc std ljmp inc out fnsave jae jns sbb push std add pop push fs sub das (bad) mov out inc popa jg (bad) loop stos (bad) xor ss (bad) jne push lods sub mov mov push push inc jecxz fcomip adc ja mov mov adcb pusha scas jg add nop out mov add jb cmpsl add adc loopne in test push add dec jno out adc shr dec test sub add nop test aaa call add (bad) xchg mov dec pusha push pop inc push popa pop mov cmc ss fwait mov loope cmp test xor jns and add add mov (bad) js test (bad) jns lods pusha add or push shr pop and outsl lret pusha jmp inc lods xchg adc jnp mov jecxz repz jbe cmp sbb or daa stos sbb fs push jno mov das addr16 sbb mov pop sbb sub (bad) push push loope cld test test stc sbb sub inc inc jecxz lret movsb pop jmp iret fildl icebp out or xchg fcomps test add (bad) popa scas push aaa repnz test jnp and clc push movsb cli xor sbb xchg inc sbb xchg into aaa adc jbe jmp fistl inc loop std jo cltd push or mull das negl movb int3 mov daa xor cmp add xchg dec jns fmul xor inc cvtpi2ps mov adc mov dec in cld mov sub repnz ljmp cmp repz adc jo rcrb lcall inc sti pop xor cmc add push sub mov fnstcw fisubr cld daa bound jno push pop adc mov aas push cmpsl mov fistpl cs test and ljmp mov jo lods push add test std mov rorl cmp mov add lock xchg inc sbb cmp fisub adc or cltd pop adc cmpl mov mov outsb sub xor fsubl sub add cmpsb cwtl (bad) sub mov aad pop fisttpl dec and xchg xchg dec outsb lret stos xchg jne pop into loop pop sbb movsb es test dec cmp or add push mov cwtl cltd rcrb mov rol subl jmp mov fiaddl dec add popf decl aad loope push mov movsl push fadds sub xor push mov jecxz decl sub pusha push mov pop sbb add pop xor shrl pop sub mov sbb lahf jmp dec mov ss adc bnd jnp pop sbb in fs push add loope add popf xchg xchg fmul clc or (bad) gs js fild jnp pusha xchg dec ja add fist xchg adc mov inc pop mov (bad) out jg ljmp testb adc pop arpl nop mov enter test cmp (bad) in push fcompl sbb daa xchg push hlt jl pop test popf sub dec xchg mov dec test mov jns cmpsl xorb in orl test add cmp xchg in add xchg and das pushf inc int (bad) lahf or rcrb data16 mov xchg ficompl nop push out pop or xor shlb mov pop inc pushf jb xor nop mov cwtl fldcw test in xchg popa jmp sub pop (bad) xchg jae addr16 pop sub mov test out pusha mov cltd pop (bad) jmp test test xor jp idivb scas push daa repz sahf into sti mov jne mov push mov popf outsl ror rcl add rclb cmp loopne cmp lea dec mov sti jno sub push push push and xorb sahf std or pop sbb xlat cmc orl aad mov cmp clc outsb lahf xchg mov add and sub jbe jmp outsb dec xchg mov dec adc adc fcmovnbe mov enter mov lds sbb add mov lcall or xor add mov push hlt add in call and aam push or xor xchg popf (bad) xor pop or push dec pop add pop add sti mov cmc lret das xor xlat add adc adc push sbb dec pop ret sub pop pusha and ss pusha xor pop fs push mov cmp (bad) mov dec clc mov das xor out dec add dec je xor sub xchg cld or sbb dec shr lret or je lret movb xchg or pop jle aam mov sbb sar adc mov pop pusha in jp adc leave cli push (bad) loope cmp push and pop les mov (bad) idivb test into add faddl add jne jp sub xorb (bad) jecxz add xchg xchg add sahf push adc popa and adc test daa jmp push or and fwait push mov and shlb sub lcall push inc lret and mov push js stc into les pop insb xor loope cmpsb mov and lock mov stos (bad) stc adc push je fcoml cmp out add mov pop adc push adc scas dec inc movsb lea add pshufw xchg sbb push jbe xchg rorb adc and sub mov mov inc push dec leave fdivr add mov js mov cmc cmp sub cld adc scas xchg sub ficomp popa adc fdivrs jp mov popf add adc lds outsb push cmp sub add cli pop ljmp jae sarb push add mov mov mov push test jb mov pop scas pop mov test mov pop mov jnp (bad) adc mov popf or jnp push adc pop mov jns mov pop xchg movsl mov add cmc cmp or stc mov jns mov loopne sub adc mov lock jne add dec jno (bad) js not pushf cmpsl nop test icebp or push xchg stc daa or xor sub out fisttpl daa jnp xchg call in inc mov lock or add cmpsb enter add sub mov dec jge in xchg or icebp leave jle adc ret jge mov mov lret nop sti dec jb shll pusha fistp mov xchg out mov add lret and pop jmp push pop mov adc (bad) out mov push orb or mov xchg mov jp cli sub loope cmp add das adc shr sub (bad) jae push movl sub jmp hlt xchg add dec arpl add and clc xor push cmp or (bad) mov xchg dec test mov push das jnp lahf pop xlat adc mov xor sbb (bad) xor or jp jne cmc (bad) jne lods mov inc cmp int3 inc mov ljmp dec push adc sti jo,pn cmc jmp and adc stos leave shrl inc shr jae scas xor cmc adc dec addr16 js adc dec jne lods cmc adc push push (bad) adc adc add iret iret mov inc xchg (bad) loopne pop popf adc clc xor fsts jbe add pop jne add loope add or and addb sbb test xor jo nop add sarb fwait add and popa lahf or sbb push inc adc xor fiadd mulb repnz shlb push mov xchg imul lock jg xor mov pop xchg xchg cs xlat and cmpsl xchg lahf stc and cli fist or add sbb adc add icebp mov mov outsl and dec inc dec lret xchg fcomps jb or pop pop lea push test out mov sbb xchg or or fldenv pop lret pop sbb inc mov adc adc adc popa icebp sbb or mov cmpsl jo cs adc insb mov jo sub sub loopne xchg out pop mov push xchg in and pop cltd lock das bound stc pop ss mov push pusha lahf sub add std mov loop nop out add mov dec push add xchg cmp sbb mov pop push outsl jb push sbb push (bad) mov push je insb sarb rolb jmp push adc cld dec imul aaa add mov cs mov hlt add movsl cmc mov fdivr pop add dec sahf int mov and movsl (bad) lret fmull xor jae push mov pop test xchg jo add adc lcall int jl (bad) repnz mov mov or pop and rcll inc out bnd das cmp fwait iret cmc or addr16 add pop sbb lock xchg out dec and xlat sbb orb jo lret mov jecxz shr jns dec pop scas sbbl pop push mov stc fcoml fldcw push (bad) arpl in mov mull pop pop lret mov scas sbb or add jno push lret xchg jl xor add adc jmp fild inc sub andl lods scas xor sti xor pop pop les push push ficoml es jne lret in xchg pop add mov add popa int3 mov add push jo xchg adc mov mov test loop rcrl push sub push icebp rclb fmuls dec xor lods bound stc iret inc pop data16 dec hlt cmp xchg es fstpt (bad) clc push push adc xor jge outsb fistpl sbb loopne sbb or test popf dec mov xor inc jbe rorb dec sub mov mov and je negb pop xor xor (bad) mov jle jbe xchg adc xor test jnp and adc xchg scas adc jecxz add cmp add jae push mov lods sbb je add push mov pop push xor add pop sbb dec mov add mov (bad) (bad) inc adc sbb lock aad cld (bad) or push iret inc js xchg pop fsubl cmpsl pop loopne xchg bound ja (bad) or (bad) pop les cmp and mov pop add xchg push mov jmp icebp mov inc mov adc pop mov sub and jmp mov pusha imul in clc xor or ret and pop add mov jns inc pop inc or xor jno insb add subb dec mov push into mov aaa test add sarb push pop fmull sarl xchg mov aam dec fs andb dec test sahf scas adc sub enter cmp jne sub test xchg out clc sbb call (bad) pop faddl push jb xchg int3 negb pop jne mov gs in sbb dec pop in jl dec pusha mov cmpb or and shlb dec pop iret cld or xor jns stos aam (bad) divl mov cmp xchg adc test jmp (bad) int mov push scas adc outsb pop lea or push cmpsl lret cmp (bad) outsb (bad) add or test or lds add pop jbe sbb sahf pop add addr16 das xchg push inc add je out push push xchg xchg out mov sbb jne pop int jmp fxch adc clc or xchg int mov or mov pop int cs scas adc mov lods inc or xor sbb fcmovnbe loopne mov jmp mov sub (bad) xor fistl add mov mov mov or cmpl mov sti jp fldln2 cmp scas sti add jb adc mov pop push movl mov ret inc imul sub sbb or push mov ja adc push mov adc inc xlat repz inc das cld xlat (bad) pop mov out adc movsb lcall loop add lcall xchg or aam stos pushf test inc and pusha xchg push pop mov mov and or ret lock psraw xor rclb inc push shl xchg push dec add sarb sub pusha pusha pop mov lret xchg pop xor push dec clc dec xchg mov push cli in jno lods hlt shrl test mov xor sub add pushl jmp xlat ja stos fnstenv loope mov push fisubl int3 cmp and and push sub mov pop paddsw hlt cmc mov pop or inc out cmp xor jo jecxz cmpsb out inc mov pop and inc adc pop movsb cli mov lea mov outsb pusha mov sbb cmp sbb xor into stos pop ss (bad) cmpsb shll scas jmp iret sti mov cmpsl dec ljmp or add xchg sub mov pop mov push fs add and stos imul and popl adc inc pop loope jmp mov ret cmp stc mov (bad) jnp jno jp (bad) lods inc mov imul push movsb pop add test stos fstp jbe loopne daa fs and cs or inc stc add jb dec dec and jle mov mov add je ficom jb sub push arpl mov stos cmp cwtl mov jp sbb incb sub addl push sbb add add pop pop cli mov popf dec clc sbbb jge sub lcall fcmovb loopne jne push aad xor add push push xchg push pop pop sbb push add hlt add loop inc das nop push sti fs int lods mov add fs cmc lock outsl test scas dec leave push sti lods jo aaa and mov (bad) dec enter xor and mov js pushl repnz cmpsl xchg sub fldt xchg mov inc stc popa pop int3 aam bound pop in movsl jnp push inc jne mov cli adc push pop int3 pop mov add push test jae dec sbb cmpsl mov sbb push pop stos (bad) sub or mov or mov aas adc or sub push stc fcoml (bad) pop gs add mov jno mov cwtl movsb adcb inc mov mov adc out xchg pop popa pusha xchg and add pop jge dec shrb test std cltd bound mov xor add test push push sti xor mov (bad) mov jne xchg aad pop xchg adc inc clc lahf add sub iret out mov adc int3 cmp in add test mov push jno (bad) mov pop xor mov dec sbb hlt icebp cmpsb sub ljmp push (bad) mov mov sbb jp addb push xor icebp mov jmp stos jbe lea push dec push cli cltd mov mov lahf sahf sub cli sbb lret in sub pushf dec mov mov lcall loopne jbe movsb xor inc add mov mov (bad) mov outsl outsb adc (bad) jmp sub mov iret (bad) xchg adc mov jno (bad) or orb pop dec cmpsb call (bad) or dec and loopne mov js movl ret and int push cs outsb xchg das dec sti pop sbb roll xor xchg ja test mov mov lcall in stos xchg mov es mov cmp scas repz jecxz dec lock dec das sub fadd adc dec rcrl sbb lret xchg in aad mov mov mov push insb jmp jecxz inc pop jge clc shr test jp jecxz mov xchg sbb in mov add push jbe sarb lea inc xchg mov addr16 aaa push loope mov adc in adc mov cmp dec mov cmp pop push xchg fnsave add arpl ljmp push (bad) je push test adc call test push out lods push jne inc push inc loope pop inc lods jl,pt and subb js mov daa sub mov orl push repnz fldenv add loope jge roll jp or aam cs add icebp cmp popf xlat mov push mov adc pushf add adc insb push movsb das add hlt dec push cmp fisubr das (bad) xchg push cltd das out mov xchg xchg aam aas mov add push sub sbbb lods push dec jb pop mov xchg sub xchg aad je dec lahf and dec inc sub mov cmp sub repz lock lock dec loope,pt pusha hlt cli add mov adc les add bound mov jge dec lahf xchg inc mov lret fisttpll inc and fs jo push repz xchg ljmp out or mov aam repz xchg add adc xor jns movsl dec pop mov xchg jbe dec dec adc cmp or lcall pusha cld dec sub and lock mov pop push push lock loop pop mov jb cld fsubs push fimul outsb (bad) mov stc mov dec lcall leave sub repnz mov not add cmp js ret test ja inc pop lods jmp mov nop pusha daa push sbb xchg lods xchg xlat std mov jne mov ror sbb adc cmpsb mov sbb cmp (bad) mov jne or out add call incb mov or mov cmpsl jmp mov inc push sub call outsl fwait out mov sub add lds sub adc stc adc sub and inc pusha pop rcrl outsl add mov pop jo adc loop add lret mov cmp inc repz mov cld dec (bad) cltd es fs mov lret hlt sub xchg inc sbbl xchg sub out and sbb add out cmp fwait sarb dec fs cmpsb jno mov jl mov fisub sub movsb pop add imulb or fimull gs mov xor xchg cmp xchg or cli and mov mov jle or add pop mov or dec popa or das stc les addl outsb (bad) nop cs adc add icebp mov xchg and sti and mov jmp loopne cmc sbb jne pop (bad) mov dec adc and nop (bad) xchg or into lahf inc call add push wbinvd lds data16 aam pusha out lock cmp ss add sti cmpsl push movsl dec aas icebp dec adc push xchg sub ret repz test in and incb xchg cwtl xor inc lahf cmpsb loopne cmp sbb adc and mov subb sar mov inc xchg dec inc loop or xchg pop mov mov test (bad) aas adc mov dec push pop push add repz adc and jecxz fcmovnu shl shlb mov mov (bad) notb jg lahf dec push rclb xchg stos or mov lea pop push jg jle dec jmp test mov xchg out or sbb call xlat lret int3 hlt push mov scas int3 out and or js push cwtl mov xchg xor pop lahf outsb add imul jl pop sbb loop ja (bad) jecxz (bad) stos push cmp mov imul into and cmpsb scas xchg or mov fcompl shrb push aaa ljmp shlb cmc (bad) xor adc negb push fnsave loope and test add xchg jl sub icebp in stos in fcmovu in or add hlt repnz cmpsb fisub inc add push shll mov and mov pop std int inc and sub sbb or xchg sbb loope repz adc add sbb sub dec pop xor add loop push mov add stos inc mov inc push shrl push popf gs repnz clc sbb mov les stc dec popa lods scas add cmp clc mov fcmovnbe cmpl adc cld xchg or push sbb nop fcomps sub dec lock rorb mov or sbb mov mov sti xor popa cmc ds imul add outsb mov outsl nop add push xchg and or push pop sti mov sbb shrl inc add cli ss pop dec popa les scas xchg lods xor add popf fs cltd mov jp push lahf inc sbb ficom sub mov adc inc dec (bad) dec ja ss repnz mov pop pushl or xor mov sti sub push lcall push cmp pop hlt lods pop test dec inc lret lahf mov jecxz stc pop gs sarl dec in mov push jno fsub bnd adc jo ljmp add sbb lock adc mov jge add idivl xor jg clc cmp rcll sub sub adc xor fildll pop test and xchg xor aam out lahf or (bad) in inc or push mov mov scas add ficoml push insb mov andl arpl sbb jbe popa jp shrl dec xchg cmp adc pop push xchg xlat sbb sbb cmp jg sbb xor jo and sti mov pop dec adc in mov loopne xchg in and add mov (bad) pusha ror shrl dec push data16 adc repz aad rcrl int addb enter lods stos lods daa loopne (bad) jne fildl test xor cli and pop out sbb cmp gs imulb ljmp xchg movsl int inc pop mov test dec mov or imul pop ja cmp sahf mov dec sub stos add mov js lds mov test sub cmp cmp aad cmp inc push and adc pop test divl imull (bad) cmp xor mov popa (bad) xchg out jns add pop and mov sub dec (bad) adc stos leave xor sub sbb mov orl loope xor test sbbb bound inc cmp push jmp enter adc cmp add jg sbb adc add dec push insb jno mov pop test ds jne ds xchg pop outsb adc dec push sbb outsb jg cwtl inc ret pop nop push int rol mov and dec pop or sub das das sbb cmc jmp scas adc pop pop movsb push loopne xchg outsl xlat sub cmp pop add test sbb sti add lock out mov add mov test push mov outsb add call pop jae sbb les rorl fistpl add cmp xchg add pop lcall and lea scas js xchg mov fadds xor rolb imul scas inc add sbb js add mov popf add pop in push cmovs addr16 xor xchg mov sti nop xchg mov dec pop insl xor repz ja sbb aaa out add inc mov (bad) mov out std or incb in sbb lock adc gs or jg clc adc and orl jmp cmp xor lret xor and std outsl (bad) ja push fiaddl push shll mov dec mov jmp call inc stos ja add (bad) xor push loop add mov or fstps sbb inc subb add std inc lds or in fwait or bound adc jb xchg loopne (bad) xor cmp inc inc cmp or adc adc scas fist add jae sbb aaa (bad) cmp sbb pop adc lods cmp add outsl das xchg fisub jnp inc sbb cltd mov sti mov je xchg fiaddl jle dec or ja add out mov xor push mov lock test cmpb sbb and arpl xchg inc (bad) call mov add jne cmp and jae add test popa data16 mov xor mov out jg sti lea mov add es inc fiaddl xadd ds subl push xor es pusha mov adc xchg push mov sbb sbb inc mov fisttpl es sub lods cmp xor adc cmc inc sub add cli icebp dec xor fnstenv add cmp sub add or fildll cli jg inc xor cld cwtl xchg nop inc dec enter es add clc shlb jns loop inc daa mov push pop out add cwtl sub inc push or mov dec sbb adc adc dec mov mov mov pop jo mov sbb ss dec and subl push sbb dec mov inc and pop cmp mov xor mov enter jl stos push push inc stc xor dec test scas push sbb xchg ret sbb (bad) inc nop or add sub pusha mov scas push cltd add mov add dec into int outsl add fs ja xchg jmp inc add dec inc iret dec xor inc xchg in jl add adc dec stc mov add dec adc mov and imul test sbb scas pusha test xchg call fnstsw pop mulb mov ret int mov stos inc nop xchg icebp jne xchg rcr inc xor lock push add leave icebp testl inc mov dec add rolb sti aaa dec cs es push inc add add mov stc mov lahf and add add add lahf dec fs adc add xor movsb sbb jg mov jl in inc adc cmp stc cli pusha dec jns cmp sbb push rolb or mull scas jg mov inc adc dec jne cmp fsts scas roll aam jmp mov insb push cmp and push loopne stc bound out inc push (bad) call add rcrl adc aas adc stos pushf or repnz pusha inc sbb jns jge mov add ds dec pusha shrl cs gs icebp mov sbb rolb xchg push pop frstor inc inc push inc and movsb shlb stc push mov jne push xor cltd push pusha inc repz frstor jmp insb xor and es stc and js sbb ss add and in dec add sbb mov sub stc pusha inc push and push int (bad) mov push shll dec push add cld andl pop outsb xor dec add inc xchg orb pop enter xchg popa mov fcoml cmc lods lcall jo iret dec (bad) lock pop test insb adcl inc jo inc add mov sbb fs and mov xlat (bad) xor and std xchg jp pop jg les loop movsb es pop xor int3 adc movsb mov cmp test xor clc and popa jo dec add inc shr es lcall call das (bad) xor hlt xor jbe sub adc loop pop jno jge pusha cmc lods lcall in mov or dec xor inc push clc bound adc cmp sub inc dec mov aas movsl cmp or sbb mov cmc mov xorb (bad) and imul sbb imul xor loop pop jne sbb ds sub dec inc pushl or pop nop push add es or xchg loopne bound repz sub push push or es lock dec fst cmp xor xor jmp test inc fsubl or frstor inc adc call mov movsl out movl push adc sbb test push dec adc mov dec scas (bad) clc sar mov adcb scas lock and sbb (bad) cmc lds mov test and scas or js sbb pop movsb dec enter sti dec data16 lds test stc iret mov sahf adc mov and divl rclb pop inc push inc scas mov leave mov lock adcb add xor pushf dec mov movsb popaw fs mov adc sbb inc aas cmc test add jne pop sub out xchg adc cmp stc xchg cwtl test add stos xchg loop test test cmp test push xchg xor lock cmc adc adc xor test cmp insb ret insb clc sub pusha xor add cld pop arpl out xchg cmp or es in pusha xchg pop clc and sbb enter sbb push lock scas xor mov test push stc sbb and push movsl lea stc testb dec iret and sub stc sub icebp test pop dec call or js adc movsl dec cmp mov lods mov push inc jo cli outsl xor fnsave and jp jle push bound xor (bad) push shll stc jb pushf jo cmp xchg xchg cmp outsb push jmp cwtl loopne popa test daa std mov and sub out pushf add add add sub adc loope loopne xchg lods std test push and loop add mov pop mov sarb int3 push jbe add pusha out (bad) xor sbb aam rolb cld adc inc push iret sbb shrl pusha les cmp test pop fs xchg fwait mov cmovl inc dec sbb jecxz or mov cld ljmp sbb sbb stc data16 jmp mov out cli jecxz stos push pop outsl add push nop repz or mov pop and pop xor scas push cltd fmuls xor je jmp lods add scas lcall nop push xor push es xchg pusha lods cld add loope pusha pop pop adcb add int3 scas pop ficom xchg test dec sub push adc adc andb push jne cmp cmp jbe mov sbb in inc fucom nop in sti jle jb add push or cld fidivrl enter dec repz lods sub pop jg pop outsl cmp cmp add loope shll daa dec push loopne or add inc in sahf and hlt movsb pushf in inc cmp or cmp fwait adc xor inc jo push cmp adcb dec fcoms pop xchg dec out imul xchg or add xor (bad) sti jmp xchg or test push jb mov dec jmp (bad) adc or ss xchg cmp aas push (bad) test in loope js hlt adcb add mov xchg nop adc cwtl or mov cmp fstpl sbb stc xor add jg jb les or roll mov jmp loopne sub and push inc aaa adc or (bad) pushl push lock es (bad) inc clc adc fnstsw lods js adc adc inc stc dec mov adc dec mov xchg xchg cwtl push clc rcrl xor jecxz enter cmp ret sub pop cmc xchg es xor es jne test push cwtl lods movzwl mov and and mov mov shrd das jno subl clc mov xor in cmc mov jl leave add outsb sarl nop push dec (bad) in jmp lock cltd mov push sub addb sbb jge pop out insb lock adc test jo dec jge or cs sub nop sbb jg sarb or scas (bad) call jae jmp xchg adc cmpsb xchg or and dec jle adc scas inc out xchg jl or lods jmp scas mov xchg mov adc aam mov test call fisubr out xor push xchg mov add xor cmp dec mov add pusha sub or and add out test rcrb mov dec mov pop pusha add aas hlt sbb leave (bad) aam pushf add push scas (bad) js add jb mov inc loopne lea inc dec int dec and nop or daa adc test dec jge inc xchg test and dec xor iret inc inc jge (bad) xlat dec sbb es adc dec cmp dec and mov stc andb (bad) js pop je sbbb xor add je cmp dec mov andl into or push inc dec inc fcomps jp and mov push push jne dec test add mov xchg sbb and push xor lea and or sarl lods add pop inc scas jmp pop in adc pop inc jl,pn enter ljmp stc rcr adc mov arpl or lcall or test lods add inc xchg lods dec cmp mov data16 subl dec inc shll sbb bound (bad) adcb sahf sbb cwtl out aaa pusha test add jmp popa dec enter and adc mov ret add cmp cmpsl push lods popf pusha mov dec mov inc cmpsb push lahf or ficompl inc addr16 or loopne addb add pop es or fcoms and add fistp adc push aas xchg and in add and add loope cs sub xchg hlt sbb repnz and inc add xor mov cmp orb push inc xchg mov mov nop push inc add push loopne pop mov int3 dec xchg inc lret testb cmp pop add jns popl lock pop mov add testb push jo imul add loope push mov push add test imul stos push cmp hlt adc xor es icebp lock popa add rcll inc out outsl pusha pop dec test pop xor rorb mov hlt and aad or pusha push test jno roll inc add push push add xor cmp arpl mov and pop fmul dec xor xchg xchg or ficomp sbb push and mov popa adc jge or inc add in scas mov and add sbb mov daa sub jbe (bad) adc rorb dec or or mov cltd insl ror xor call lods mov pop pusha push sub mov cmp add inc pop mov addw fsubl add lcall add pop inc xor xor add push lds int3 out ljmp adc sub addb sub xor mov hlt push push push das sarb mov int3 and and and inc xchg jp xchg movsb push fsts jno or repnz iret roll pop fmull movsb cmp dec add pop xlat out xor pop adc das dec add mov and cmpl cltd mov xor lods inc pop mov or andl sarb fisttpll xchg and (bad) cmp adc add insl pop mov mov in mov scas test mov push adcb leave mov out and shrb inc (bad) push pushf inc and pusha cmpsl insl pop bound mov and mov stos gs add add push scas sbb fwait cmpsl cwtl fisttp mov insl loopne test and insl pop add add popl rolb add sub cmpl dec add popa movsb movb or xchg clc (bad) adc mov mov inc test inc movsb (bad) sbb rcr fdivs nop inc add dec xchg gs push push insb add lods insl adc leave lods cld loopne xchg insl push dec loop rorb add addb cmp orl mov lds rolb enter or sbb dec add add aad and sbb rcrl push sub sub add jmp and jns pop sub or test nop (bad) sub aam test loope test mov aaa sbb test mov push add add fstl and xor mov sets outsl js test mov add les mov pop inc sbb dec or cmpsb push mov add inc fisubl pop out inc test mov subb xlat push (bad) dec shlb adc mov loope jno test xor in dec test sbb stos or test in add lahf nop std imul (bad) and mov popf pusha mov inc cmc aaa or aam and jae add (bad) outsb stos sahf adc clc lret and aam lds pusha dec sti das and push add mov inc pusha or add push cli add xor jns mov inc stos mov fist mov mov or aas and mov jb stos daa xchg inc ret roll (bad) add cmp pop push or sbb fmull aaa (bad) lock fidivrl decb les imul roll adc mov outsl icebp mov add mov test and stos add shl in mov or test xor xorb (bad) shlb adc sub xchg inc jl sbb and inc push mov and dec aam or xchg popf dec sbb fs cmp addl jmp sbb pop jns (bad) xor fidiv pop cli xchg mov push mov push rcl push pop (bad) call out imulb or mov add and (bad) sti std or cld add push mov rolb cmp and aaa sahf stc mov add sub loopne jg mov push add mov das outsl push hlt or in add or outsb repz sub cmp stos rcll inc mov push dec cmp push add xchg imul add add adc or push inc inc movsb or leave cltd lock xor push add and add xchg pop push test fdivr fsub jnp push scas mov ja push stos push cmp mov push in dec xchg nop cs (bad) cmp lret add cltd add addr16 add pop clc ffree mov pop sbb xor inc test sbb or adc push hlt rolb add mov dec stos popf mov testb inc mov sub (bad) mov aas (bad) push adc mov add pop (bad) lcall loopne push addl xor cwtl push push add cmc mov or and pop jo flds jp rcrb sub movsl xor xchg mov dec fs rclb addl jb ror pop or insl cmp and sub jns adc sarl cmpb (bad) daa jns and pop add cwtl popf mov rolb add jo dec jmp add rorb cwtl test imul or shll (bad) jnp into jns adc jg fldt fiaddl je fstps jne clc push xor adc test pop arpl lods xchg mov jnp scas cwtl adc or jae stos pusha ljmp xchg das mov add lahf std pushl loop xor rcrl scas add pop stc push stos sub jb add mov (bad) popa cwtl push movsb adc jp or add insb flds shr push js or and out out (bad) mov sbb outsl cmp or stos (bad) sbb adc push dec iret popf adc xorl imulb pusha pop sub add pop pop stos scas ja inc or stos pop jl outsl pushf dec sarb addl lds pop aaa (bad) fldz and stc jl,pn ret add mov rcr mov cwtl loopne or js mov push enter pop adc add xor push add mov (bad) cs add dec les and dec dec rolb push lret mov lahf lea fnop cmp push dec push insb adc add leave push push adc pop cmp jge popa jnp ret inc stos loopne enter mov mulb dec lods pop mov cld adc add xor js add cmp addl fwait adc add or mov sbb jb jl lcall mov jo test xchg mov inc mov inc xor sub push adc jle aam cs pushf mov js stos clc ret ds cmp lods arpl pop sbb or push out fisubr repnz add iret incb test or and in fstpl and dec popf and cmc xor gs fisubrl cltd add jl xor xchg sub push or or dec and push mov push xor mov push push cmc rolb pop aam (bad) rorl daa jns or pop popa pop mov mov push mov nop in shlb roll in ret movsl or jns shll push jb add inc je loop enter add pop inc and or in and xor push add outsb popa lahf and pop lcall fs or sbbl inc push adc cmp mov inc out mov mov je jns shl sbb xor dec aaa sbb or insb mov (bad) mov (bad) or mov mov inc loopne das push add (bad) mov or call add jne sub dec cmp arpl add sbb ja pop mov push fxch shll push nop mov mov cmpsl sbb scas add sbb (bad) or inc pop sub rolb int push insb lods scas add push loope inc or in push mov push ljmp fs add fdivr and mov dec sub test fcomps nop (bad) enter cltd fwait and mul cld jmp neg add fsubrl popa rclb aas enter mov cmpsb xchg gs pop or xchg xchg add pop cli leave lret or add and push jl repz fs fnstcw aam mov jo mov pushf cmpsb movsb addl lock push dec push hlt or push movsb subb stos xchg mov je sub pop rcll xchg test jbe mov hlt pop pop sbbl add sbb fadds cwtl sbbl and cld xchg jns imul popf mov dec lods add andb movsb mov mov xchg add test and add jns push lock test (bad) clc mov jae not inc shll push fmull adc cltd inc fs mov dec leave pop jle inc neg mov add xor adc clc jb cwtl mov test inc call push scas nop sbb inc test inc cmp mov lret ds mov (bad) ret push and jo jae mov add xor and lret pushf daa mov mov rclb rclb stos lods mov test dec add dec pop push sbb orb add sbb push dec les and jns jno and sbb iret mov mov nop cs xor add mov adc inc in push inc pop lods or lea add inc stos and jmp jg fcmovbe pushf and push and inc inc adc test inc movsb aad imull cmpl push push add pop add cs fldcw sub orb xor movsl xor or cmp push lock mov jns fs add sub int pop cltd cmpsl outsb adc sbb mov leave insb or mov lret arpl leave cmp aas rorb arpl scas imul ds pop sub insb cltd add dec add ds pop ss add jmp sbb mov jle test mov adc push rolb test push loop sbb loope push daa hlt cld jb push ret nop mov adc pop mov xorl and mov mov add sub adc inc ret and mov jb add js jns jo push adc in cmp add or mov xor jbe lahf pop jns insb enter fcoms movsb push daa mov xor and ret inc and sar ds inc loop mov or push xor xchg js add adc pusha ror sub or pop outsb je push mov sub (bad) sbb ret mov inc mov sub jb out mov mov adc mov add pushf or ret dec add xor rcrb scas jns adc dec add out (bad) test jmp inc jnp sarb mov jns outsl enter lods je es and sti loope xchg fsubl jp stc movsl adc push test mov dec xchg adc add pop add sub push lods inc mov dec pop sub decl pop adc std icebp movsl cmp xor test jns call jle xorb xchg and fsubs mov jns int3 cmp ret add inc scas nop repz sbb cmpsb add adc es pop out add mov pop pop push xchg test imul add fdivrl push jnp scas push outsl adc dec inc push xor cmpsb push repnz adc cli add pop cltd xorl or xor push hlt sbb clc loopne sbb mov xchg add ja aas sub daa jb push mov inc mov sbb mov xor cmp jp jle add jo xchg test push add sbb xchg cld movntq out cmp and mov pop ss mov roll loope imull in adc (bad) adc mov add rcrb (bad) into push xor inc mov or push cld sub lock sub adc push dec lock inc rorb test jp orl sarb dec es hlt test lahf popf lret mov lcall incl push stos sbb push pop sub cmp push push inc jnp add loop add fcmovb add xchg mov push test fisubr mov dec inc or push imul cmovae xchg add fxch icebp lock add and (bad) (bad) lock push outsb insb dec mov cmc xchg sarb mov pop (bad) xchg es sub dec push push or add inc movsl sbb add cmp into xchg lock dec add add test popa cs lret fisttp insb cmc (bad) mov aaa pop repnz push dec inc add jae xchg dec stos lcall (bad) je fistl negl std push loope stos pusha inc dec enter stos xchg adc xor test mov lock add test and cld cmpsl push sbb leave adc pusha sbb loope rclb add repnz xchg fmul add popf xor pop loope adcb mov mov ret and lcall mov or cs cmp pusha rorb (bad) mov jbe jl pop shrb in aas lret push inc out xor cmpsb add lods rolb mov sbb in push add std enter pop imul imul out stos mov rol (bad) repnz xor inc inc add in adc push sbb fstl loopne pushf push add inc test add mov add mov add lret mov data16 cmp popa mov loopne in ds add out lock mov adc sub pop shr adc inc or clc add adc test or xor mov movsl dec scas xor or imul adc jl pushf or push rcl mov adc nop cmp push lret mov js cmp xchg nop lods sarb hlt outsb pusha loopne sub add sbb es adc addr16 add pop xchg jnp add add enter mov sbb repnz dec pop fdivs dec adc sti mov mov or xchg (bad) out sub and fs mov dec mov aaa add outsl cmp out lcall daa dec orl push xor lds popa out jge adc mov cmp and xor aad imul cmp dec (bad) xchg mov stc sbb jo inc pop add or cmp xor les (bad) movl pusha loope fimul addr16 sbb lods ljmp jo adc or rorb xchg mov sbb mov andb sub mov mov dec mov nop subb in mov das adcb adc (bad) pop cwtl adc and std dec mov daa inc test mov push mov push dec popf cmp push xor adc inc jmp add fidiv xchg test out pop rclb cltd fimull repz lods sbb loopne enter pop or lcall outsb jno or add fcmovbe dec sbb inc add xchg cmp dec adc push push xchg js scas mov sbb je ror clc loope call or or add (bad) mov pop jno inc not mov and sub and test xor adc pop repnz push jo mov mov cmp arpl andl mov lods lret pop push xor mov int xor xor aas imul data16 jge mov les dec lret add popf loopne lea sub out inc inc adc cs (bad) dec push dec add in test xor fsubrs sbb jbe mov jo dec cwtl int3 mov add out inc dec leave adc mov jl rorb pop dec sbb push mov push lea adc in insb popa mov cld out lret rcrb in out rcrb ds push repz dec jns or dec lahf and out lret dec fimull or push jo sub xchg lcall inc inc clc jmp sbb inc jo adc and pop and pop dec lods scas lret loop dec xchg es mov dec repz mov popf pop mov inc xor loope outsl mov and inc mov push fyl2x and push in mov sub mov pop pop je push outsl push or jle push pushf (bad) mov push nop ret inc or in pop stos sbb pop outsl ret dec inc idivb gs movsb rolb push add cs adc nop sub adc adc mov sub push push clc fadds xchg jno bound mov (bad) lock push shrl push js sbb inc sbb (bad) adc push sub nop sbb jl mov das sbb push pop mov dec in push in inc daa movl sbb inc and xchg push mov xor mov mov mov push pushf mov cmpl lcall int3 dec and mov nop add pop rdtsc (bad) jp jo jae test notb std les dec push inc sbb jb mov dec xor or test add xor ret imul cmpsb or add in bound out andb mov xor imul fisubl cli not sbb (bad) loopne scas and push cwtl inc add stc mov ljmp scas lods cmp dec push lods inc imul les mov hlt popf or and or cwtl push adc mov or sahf scas adc xchg arpl push rcll mov enter or dec lock or or and scas pop outsl out sarb sti clc (bad) push jns daa add cmp lcall fs in or dec or (bad) out xchg cmp add (bad) out out xchg adc mov shrl and add ds inc add mov dec movsb fdivl push rcr int3 stos imul lods cmp mov and cwtl int3 ljmp daa das inc in or js pop in add (bad) (bad) mov out and adc mov push dec add sub or add xor cmp loope push mov sbb cmp dec aas leave mov jmp jmp or scas push rcr mov sub stos movsbl mov pushf psrlw fwait sbb aas and fs xor cmc mov mov imul cld scas lds out shll jno mov adc sarb test hlt dec mov dec mov loope stos or sub fs and lcall arpl add adc mov adc inc out movsb and or push les les adc aas or inc mov cwtl push adc je pop dec or dec and lods xor enter test jb and fisubrl and inc cmp xchg daa xor dec icebp out xor rcrb push dec aas add addb scas loopne adc fnstsw (bad) jo pusha (bad) insl add xor scas call mov hlt push sub les loope cmp add push adc add dec shr dec jo cbtw jns add inc or and add cmp xchg or adc (bad) lock mov jl mov sbb add mov shrb add testl adc outsb mov bound sbb insb xchg out xchg sub mov fsub les cwtl xor lds sbb jns add mov aaa movsl mov (bad) hlt mov xor xchg fidiv loopne cmp test mov adc movl xchg mov mov fwait ja fadds mov pusha ret sub mov dec pop nop sub push cmp icebp push dec daa rcrb movsl mov call push xor subl nop xchg outsb push fnstenv paddusw push and (bad) xor sqrtps cld push stos mov lcall sbb xor mov test mov add lret insb lock pop or popf fsubs cmp mov ds ja jne cmp pop dec iret cmp mov dec and or add fldenv sub sbb out in jg push les push adc dec adc xchg mov xchg sarb int3 sub test inc pop (bad) push mov loope call mov xor push rorb add and imul cwtl enter fwait (bad) jle or sbb out adc sub push cmpsb add mov push loopne sbb push fidivr adc cmpsl mov lret or ds lcall xchg outsb jle pop or (bad) adc adc jle mov popf dec shr jno ret cmpsl mov add mov es and inc mov repz sbb incb movsb aaa or mov clc out ds pop clc dec cld jle lcall cli jb (bad) cmpsb sti pop (bad) jge xorps dec test (bad) jle jle push lods movsb push add out cmpsl test inc pusha mov insb ret in push int3 loope iret mov push (bad) ja add fcmovnu push cmc or icebp rorl jno das (bad) mov fdivr mov add cmpsb push mov ret pop adc add add cmp pop adc sbb mov movsl cmp roll inc test insb sbb pop dec testb mov add xchg sahf push add lcall (bad) xor fs jecxz sbb fmuls xchg add pop cmp movsl faddl or jge add (bad) dec fs sbb add add inc popa xor pop aaa scas fcmovb mov pop mov shrl (bad) call add xor mov mov xchg xchg sub in push sub lods popf add mov pop inc sti shrb out sbb add (bad) cmpsl cmp xorb dec mov lret fmuls mov cmpsb faddl mov add stos nop xor adc add xchg and jb add xor aad ja inc cmc cmp dec inc sbb (bad) mov cmpsb adc in sahf jl call mov add mov push shll xchg cmp xor sbb pop mov add push or xlat push lods notb cmp push fidivr imul jmp popf add in lods sbb push and or xor fildl pop sbb mov pusha xchg jne sbb add or dec lea and shlb or mov or std mov mov orl and cmc push mov cmp push pop fidiv and faddl pusha inc test xor clts xor push adc add negl pop cmp mov add bound push sbb mov jns jecxz (bad) jbe xchg add testl push mull xor les loopne sub jg movsb (bad) loop cmc lock sub std nop aam add cltd movsb xor cmpsl fistp sub (bad) and inc jg adc pop fimul and jnp xor mov pop xor enter je leave add mov out subl movsb cmpl out inc inc (bad) mov loopne ret roll xchg aam repz lods es jl or xchg (bad) mov pop pop pop ss xchg stos pop andl adc (bad) repz ljmp jb sahf xchg scas shll cmp pop inc sub sub movsb popf fnop out pop push (bad) add add xor add jno std push xor lret fadds adc int hlt add or pop fadds fwait lock pop sub cmp cmp mov cmp dec inc clc add pop shr add cmpl (bad) jbe add lcall jnp les lock cmpb push jnp dec rcll addr16 lcall aas jnp xor fwait loope or push lock add inc es rolb mov xchg dec lock popa or push fwait (bad) test jle mov (bad) xor mov cmp add dec xor out add cld mov sub inc xchg fcoml or fs and adc cli cmp dec into add pop stc clc and andb push aad arpl sbb inc sub add cmp mov dec cwtl push out clc sbb (bad) push ljmp xchg add cmp add ds lret sub xor mov fcoml xor inc xchg and (bad) stc add mov mov stos push pop and and lock sbb xchg es (bad) lahf inc or add sub mov test shl inc dec pusha outsb sbb jne or add lock ljmp daa js sbb in jo or addr16 xor js add pop sbb mov jbe adc pop and lock aam cs and pop int3 out clc sub pop addb mov (bad) jne nop or mov xchg cmp adc loopne inc add jl cmpsl je mov cmp subb push jo jg cmp mov or cmp mov xchg (bad) jb js xor les pop rclb lods sub push popf sbbl (bad) loopne jno mov push mov je sbb add lea add aas in cld adc adc stc pusha cmp outsb mov pop mov aas rorb and mov sahf xor rcrb lock fs mov push out add push popf inc pop cli mov pop (bad) clc outsl or cltd test or cmpsl out push orb outsl or enter sbb dec cmp (bad) adc sub dec xchg adc (bad) ljmp jne test icebp outsb pushf pop jp aaa push inc lods std clc (bad) adc hlt add jne cmp outsl add pop roll imul cwtl add adc mov xchg loopne shrb and mov sbb add test sahf jnp inc pop push arpl idivl pop std ss mov sub sub stos roll xor adc jae pop int adc or lock mov add daa add xor dec ret or sbb push (bad) scas xor or jo mov lret and inc add fwait dec mov sub hlt push rorb icebp xchg pop dec mull or add jbe mov cmp rolb add inc sub pop add pop insb sub add pop call push jne psubb inc xchg inc insb je add pop dec int xor xchg inc mov mov les jb and lods xchg push add mov push es outsl pusha mov test pop and nop aas cwtl ja add mov jge cmp dec (bad) lds das ror adc mov adc test dec cltd add dec sub sub pushf cld push mov jno dec xchg movsb adc xor and push incl sub daa jnp js add sbb pop cwtl add mov sbb lods insl or xchg adc or inc mov es aas (bad) cwtl add aaa gs movsb ret add jno xchg add jmp jle decb push sub out and sahf xchg and xor es pop sbb xchg push add push in es inc movsb or push add push ds adc dec push mov out mov test push xchg aam inc movsb push adc adc dec mov and adc sbb and dec mov cld sbb cmp (bad) mov xor mov nop add cld push sbb subl fs pop call mov sbb fldcw mov insb sub add push ret pushf xchg mov add jbe pusha in cli (bad) inc test es cld pop movsb lock mov add nop icebp pop adc mov push movsb mov (bad) push js add hlt jno dec or lret add cmpsl mov subl dec sbb mov lock push sbbb inc jo sbb pop pushf iret push pop (bad) int3 inc mov dec sub and or popf cmp mov inc xchg imul push inc rclb (bad) push sbb pop xchg mov sbb or inc adc das inc pushf pop test ja adc xor aam sbb push lahf inc (bad) lock xor mov add sub adc inc sub mov dec xchg mov sub adc out (bad) push cltd push sbb cmp inc insb inc in test xchg add movsb add mov mov daa lock mov ja jno sti add or mov or cmp inc pop out enter in imul in cld js pop mov inc enter add imul insb add jg add sahf out push add sbb push inc adc add mov add xchg xchg addr16 std inc cmp mov mov out js push push mov cmpsl sbb dec push adc sahf or push push stos and cmp les enter mov in inc mov sub mov mov or adc push pusha and imul xor (bad) sub dec xor insb fidivr cmpsb notb mov xchg push and loop subb (bad) aam xlat in add fwait xorl sarl add ficom clc cli mov enter cmp popf addb leave fiadd js adc inc (bad) push dec mov adc push clc pop mov addr16 repz shlb (bad) mov xor add adcl or call out mov mov sub cwtl adcl subb adc lret fisttpl add inc clc adcl lds dec pop or inc orl rclb mov andb push cmp pusha addl push es popa adc lds insb neg loopne sarl lcall daa dec cli cld sub test jae std testl xor daa jno (bad) xor mov out lock pop js xor inc xor xor pop xor add fs andb movsl js mov icebp sub add pop sub sub push adc cmp stos enter test push enter addb hlt cld adc es ret jle xor and inc lods nop or push fsubs test push xor nop jbe adc mov xor pop sub add ja jge ljmp jae adc test sahf out rcll mov or or cmp aam sub in adc dec and loop data16 xchg movsl xchg xor xor xchg rcrb inc fisubl xor add stos cmp sub cs mov int mov mov and push mov insl or xchg jle imul das add sub pop iret rorl jle (bad) je les mov insb add iret push add or insl repnz mov enter cmp mov sarl outsb sbb push inc inc je push cmp mov jl push fs jo cmp dec mov sub adc xor sub adc mov mov dec cmp out popa push les hlt xchg inc sub std nop cld lock mov xchg jo mov lock add inc into js enter dec cmp mov add push mov pop cmpsl jb push and scas add in aam xor pop sub shlb cwtl push in adc sbb out ret pop fcoms pop jnp cmp and jb add push xchg mov cld icebp nop cmc lock adc rolb jae fmull inc add xor cmp andb lock push lods add lahf push cmp jno jne xor cwtl xor add outsl fdivrs sbb push pusha jb xor xchg std pop add andb lock mov arpl jg,pn fs push xor and les add and jecxz idivl aad mov xor jp mov xchg pop pmullw add add xchg es lahf scas movsl pushl add jle mov push cwtl je jns ss jmp push add aaa sub add shll loope dec add rcrb outsb push xor add cwtl repnz incl inc pop test add mov movsb push pop xchg sti mov test add ds push call adc push jge add dec addr16 mov repz scas (bad) add cld imul and sbb xchg adc insb add rorl sub iret cmpsb add pushf add sub mov inc mulb in add jb ljmp cmp out cmp sbb xchg inc aam xor (bad) jle inc mov cltd nop inc test jg cld push dec pop mov add imul xorl popa test mov and xchg data16 mov rclb ret and push and ret xchg inc add lret jns mov je lock cmp add push jmp test sarb and cli add pop dec push mov mov pop int3 or and scas ja test imul bound pop jne inc in adc inc nop sub jns rorb add add sub pop xor push jb dec pop mov ss scas jg daa sbb add call push mov add jmp cs pop push push push sbb mov fwait cs mov inc fmul mov add mov mov add or rep iret stos or flds push jge hlt rolb cmp ds rcrb cltd inc cmp (bad) gs insb inc jae adc cmp sub call add push nop dec sub cmp pop in mov aaa mov lret mov outsb cmpsb adc aad mov sub clc jns hlt sbbb sbb out mov dec sub outsb xchg lret lcall cmc int3 bnd cld add test ficom mov arpl es or add xor out cmpsb cmp jecxz or jns add mov movsb add mov in jnp movsbl ds out add pop push lods adcl inc gs rcrl in sbb mov add movsl cmp dec cmp pop pop out push insb adc iret cli pop enter scas (bad) fmulp stos lock mov jg rcr loope add stc or cmp out pop and jmp add movsl lret call pop ret add jmp push add mov test inc out pop mov mov xor mov cmpsl sub mull xor repnz add cmp stos inc mov imul jnp sub mov push fimul data16 movsb add adc cmpsl mov push pop ja pop mov pop (bad) std sbb enter fild xor mov or mov cmp xchg jmp fstpt movl and stos and and cwtl adc adcl sub addr16 insl lods lret fsubp mov test push mov bound rcr add hlt cli add xchg movsl icebp fisubr lret pop fcmovbe (bad) rcrb enter pop fsubr (bad) into arpl add mov add stc pop sbb xor stos xor (bad) (bad) out jo cmp inc add mov (bad) aam add and mov out movsb pop gs mov sbb jno jle sbb xor mov add stc outsl add into test testb aaa push cmp lea lar adc and popf xor sti int3 add xchg in pop add push repnz mov mov inc adc sbb jl gs add or pop sahf hlt les aad push lds pop mov in mov xchg call stos dec inc loopne push rclb lea (bad) (bad) inc fcoms jo fucom add add jbe adc roll ret add cmp dec movsb roll fdivr dec sbb xor cs shr add cmp push mov lea out cmp push faddp iret daa (bad) jno dec popa pop idivb mov mov mov (bad) sub pop imul cwtl pop sbb sti aaa es jb mov jbe jecxz or or push push repnz mov sbb fisttp adc add sbb popf (bad) icebp es add mov aaa pop push loop call inc push fdivs push mov jge scas add pop frstor adc pop dec xor stc pop pop jnp sbb add hlt xor sbb jle inc out ja les outsl lock or jle shrb add sbb stc repz pusha mov roll les dec cmp or sbb cmp dec push lods mov push nop push icebp ja ja pop pop addr16 push adc xchg cmpb xor jmp push outsl lahf sub mov mov adc mov dec cmp rcl js push lcall pop inc stc cld scas push fiadd xor xchg push sbb call jnp lcall aam scas bswap pop inc jns jg adc cmp jp rcll adc (bad) mov fisttp adc scas in repnz add movsl rcrb sarl inc loopne push in or dec or inc cmp loope inc cmp inc push add arpl lock fsubrs add cwtl clc sub mov cmc add rclb cmp fild std or je and inc (bad) adc out jmp add cld mov add jmp adcb insb addr16 in shrb or les pop imul mov dec cmp push jbe into jns jp jns add pop sarb xor xor mov shrl ret pop add xchg add pop ljmp leave call adc out in sub insl jmp add outsb and or stos mov arpl inc mov adc add outsl cltd jbe jge (bad) mov orb (bad) jl adc add mov fisttpll add roll sub negl adc fild cmp add in into outsl add cmp sbb pop sbb repz pop mov sahf sub mov ljmp dec pop fistpll and fldt cmp call jno mov cld icebp cmp dec push call loop jb add jp test icebp lds mov leave inc cld data16 loopne repz adc nop fs push add stos or fnstenv lds repz pop lock fidiv dec insl mov jo or add arpl sbb mov inc (bad) int sub cmp mov mov hlt mov mov fistl pop add out hlt mov cs stos insb add (bad) fiaddl push sub andb or hlt xor cmp lock shlb mov xor add fiaddl adcb or pusha jb and mov add call mov xor pop jl ja fisubr loopne test jbe push adc sbb ret mov fist jge lret pop in dec add jae and addr16 push sbb and push add cmc pushf dec xchg and adc js add cs aad mov adc or icebp je dec ljmp mov and enter mov stos jne inc (bad) fisttp sti pop pushf mov adc aas mov add (bad) push ret jg add outsl icebp lahf dec fildll test in jle mov jnp cmp lahf add pop pop lds xchg inc shrl add xchg test add xchg loopne mov cmp arpl aam (bad) clc das pusha add (bad) mov push add outsb ret inc scas test or test pop xchg dec movups fimul add inc sub xor pop int3 cmpsb or adc lods mov mov xor (bad) cmc mov sarb andl add xor push pop call or xor xchg push push das mov inc (bad) test sbb repz pop imul mov xor mov xor loope push mov jbe add ret xchg inc add dec ds dec into push sbb sbb cmp cmp push jge popa stos test and add add pop nop ret enter in xchg mov mov (bad) pop scas mov dec jnp rol xchg lock jb mov pushf jp mov and lahf sub sbb xor mov gs add cmpsb xchg in jp xchg add jl sbb es add gs data16 fwait pop stos nop add in scas inc in inc mov outsb aas ja cmpl add jnp int cmp lcall rorl les add cmp mov dec sahf push cmp sarl js jns fcmove xor verr rolb inc arpl aam jb cmpsl and dec pop inc in sti (bad) fstpl bound hlt fimull adc pop loop nop fdivl or test and add fcoms jnp cmp mov out (bad) test mov inc jnp ds sub cmpsl popa fiadd push or adc add loopne in add xor jne sbb cmpsl loope ja add addb add repnz fsubrl stc ljmp push stos (bad) popa inc lcall notb add in push cmp sbbb aaa xchg test mov int3 sub stos jecxz xor inc push xchg adc ret mov pop pop aad push (bad) gs add fcmovbe adc inc sub std cs add insb and add mov arpl xor cmc fldenv (bad) sub or data16 in hlt in add test jne and iret mov and mov fcomps repz add jge add or (bad) mov and jg add pop stc xor call push inc inc leave adc cld adc push (bad) pushf mov add xchg clc add ljmp mov aas push incb clc cmp and daa jnp add and cmpl and bound add fsubr subb pop jmp rcr test pop adc xchg sub int3 add mov mov sub aad add fistp lods push rcr js mov pusha pop ss cwtl xchg add pop mov add xchg jns add gs call pusha clc fcomp mov or jmp lock daa popa repnz mov aas shl sbbl inc pop jo (bad) es out into or push and jle push rolb jmp or loope add and mov cld push rcl and mov dec rclb add (bad) (bad) and popa pusha and lods int3 or push maskmovq sarb mov cmp xchg push xchg push add jo pushf mov push rcr enter xlat nop enter adc orl pop add in std aaa add xor xchg jne jno sbb out sub xor loope xchg xor lds add mov or push aaa hlt leave add sbb scas adc stos in rorl mov xor xchg mov xlat inc mov add fisubrl test sbbl out mull mov xchg cmp insb leave dec fisttpl cs cltd stos out subb fs mov xchg jl cmp jns ficom popa (bad) jno jecxz test scas xor mulb sbb push jbe leave daa xchg dec test rolb les test cltd shrb mov dec test add test pop sarl ret in cmpb lcall lahf ds jno add ret fisubl inc jo ltr mov in mov (bad) repnz jl cmpsb fsubs int3 aas negb popa outsl shl sub mov jb pop into data16 les (bad) push cmpsl add add xchg in add add sbb icebp fnstsw lock loopne xchg jge mov xor shl outsl lock xor push loope or inc pop enter in call mov xor add rcr fdivrs push ljmp xchg and sbb sub (bad) ja adc dec dec sbb or mov and sahf sti ja in jbe std add loop pop mov inc mov clc cltd and pop arpl pop adcl fmuls jae add mov sbb inc adc add xchg (bad) adc add (bad) xor pushf xchg mov add mov add fistpll loopne inc loope mov cmp and xchg add and mov mov pop aam xor and jns adc adc insb jle adc cmp jns lock mov iret and and pop (bad) push punpckhdq fwait and imul jno or les call int3 add adc add int lret ljmp or inc out sub stos add leave and inc out push ljmp loope imul in bound lahf inc subb mov push adcl rol fild jge ds ds out push ljmp cwtl jne add les neg mov xchg dec jae and scas enter add int cltd or out add push in push aad loop add rcrb add mov push lds lock mov shrb or fwait int3 inc js mov daa dec xchg or add cli scas push dec adcb add xchg out sbb inc mov das inc add mov dec pop add add sub jne lret mov fildl fdivr ret dec inc enter les inc cmpsb adc int3 xchg (bad) cmp andb ret sbb add cld fsub mov stc mov cmc mov into ds cmp ret lock jnp add loope cmp and dec inc lds ja pop push mov cld add sahf adc adc push cmc aas jg lcall push mov or subb cltd inc mov or xor pop mov mov repz add sub jb add neg xchg arpl or fcompl insb and mov aaa xor xor pop flds pop iret mov inc dec mov fisttpl sahf rol ja pop je dec leave mov xchg jg aas dec popl mov jo lock cs add lret cmp into add arpl lret fnstcw inc or jnp xchg sub xchg and push mov mov in inc xor adc test aam xlat sub cmpsl push push or mov (bad) fxch cltd push dec (bad) adc add cmp push mov mov mov clc push sub repnz add and sub lea push ja and repz mov mov repnz rcll (bad) mov data16 inc xor add push imul pushf nop nop lds xchg shr pop jns or and shrb into xchg sub and push dec add loop push imul fcomps pop inc mov fldt lret add cwtl or or xlat sub cli inc add insl daa pop push fldcw mov xchg add shrb cmp shl cmp mov cmpb xchg xor mov push jmp mov rolb scas addr16 int mov adc int3 repnz call push adc out pop dec and frstor cwtl cld mov jle adc loopne mov or jb adc or repnz add (bad) xor push sbb lea pop add cmp jmp cmp add aas in add lret shr jns add adc dec clc in test cmp pop jecxz sub mov jmp add lcall add std mov push shlb lock add fadd push mov add cltd jl jge sbb dec mov add icebp jle call fadds xchg ja int3 pusha insb aas or pop cltd adc push push add sub ret stos and insl hlt fwait xchg pusha (bad) xor inc imul push or mov add outsl fwait stos or add xlat popa add loope add jns add popf fistl add (bad) cld pmullw fmull mov pop fwait je std xchg add mov icebp xchg pop das mov fs push sub and pop popf bound xchg mov cmpxchg int or idivl or dec aam jo jne add fwait insl (bad) notb fisttpll pushf cmp data16 push pop fcompl stc cmp add cli mov std add pusha loope xor mov mov daa and add cmp jmp lock movsb addr16 mov stos cltd pop jecxz aam add adc xor xlat xchg and lahf pop add into adc fs sub (bad) loopne add push notl sbb clc test aam movsb or sbb xor or (bad) clc mov push fisttp aaa in sbb sub rclb cmp cmp repnz pop sub gs push stc aaa push add insl into or in push les fnstcw mov je add xor movsb push insb add dec add cltd cmpsl stos cmp sbb add and pop dec sub add and add dec xor pushf in adc pop dec cld or inc add daa out push mov pushf pop sub loope iret xchg lds not mov call subl test sub lcall dec popf adc adc sbb inc pushf roll (bad) hlt xor jae pop test add cmpsb cmp cmp push add xchg xor sbb movsl das xlat cmp sbb xor pop fisttp inc adc mov fsubr arpl pop scas mov push jge adc aas imul fs movaps push lods and (bad) adc out dec add xlat xchg les jo ljmp repz pop pusha jmp ss sti xchg xlat mov mov std lret cmpl vphaddwd out xchg mov test rorl mov dec add test mov imul outsb add inc aas std xor add popa ret cltd shrb (bad) (bad) pop push mov in in mov dec and mov fwait jl push (bad) ja add cmpsl mov xor mov data16 pop add clc jae add mov inc fisubr cwtl int3 push and les mov data16 xor adc push jo add sbb push hlt jmp bound mov shlb jge sahf ds mov in jl mov aam inc jge aas xchg call cmp dec lret and mov add idiv xchg data16 pop fs pop mov add jmp mov add sub mov (bad) jge add leave cli adc cmp push push dec cwtl push add pop test mov ret cmp cmc inc daa popf pop add jb,pt in mov lret mov cmp sbb jnp mov push iret dec or sbb push test cmc add xchg pop cwtl repz stos decb mov mov inc out pop add sub sub add (bad) ljmp add mov add mov loop (bad) xchg add jo jb test lock cmc jnp xchg add mov dec add aaa loopne jno add jnp mov in sub leave add mov stos shrb or or scas add fsubs stos mov (bad) (bad) es movsb mov insl add push cs or clc test cmp shr mov pushf std pop insl movsb add and push mov inc and and push xchg mov sub (bad) mov faddl mov inc pop jbe add jae dec add xor mov or add dec push ficompl int3 sbb mov test sbb out pusha cwtl adc das lret inc pop pushf aad nop cmp mov mov push xorb dec pop and pop add jmp xor outsl fdivrp add add imul and (bad) xchg xchg jge cld add cld pop inc into repnz sub xchg mov cmp dec test sbb add add mov adc sbb adc cld popf das xorl in and ds nop sub in dec imul jns enter mov mov adc loopne sti fisttpll sub jecxz mov ret and inc mov xchg pop pop out test dec and xchg lea movsb dec sub or add sub cwtl pop sbb adcb adc sub cmp data16 push inc mov loope jbe mov and add pusha (bad) pop arpl pop cltd add das out in sub out and scas imul add xor mov mov dec add insl add jno push in and ja xor cld imulb clc mov cwtl out push pop add mov pusha ja add sbb inc add data16 sbb je jmp add mov pop int3 sub cmovo add aad test and or mov das rorl (bad) int3 mov pusha adc add out add adc add in cmp lds add and cli mov (bad) rorb add mov rclb add loopne cmp pop loop adc inc je adc inc add in pop ja add sub inc mov xchg lods jo add jge cmpb dec add push push sti add pop add add sarb jbe insl pop or cmp sub in lahf xorb adc out aas and loopne add cmp sub and addr16 add loope and jbe or add mov clc or cmp daa or orb inc test jbe add int3 add add (bad) jne (bad) dec and adc repnz pop rcr mov (bad) mov mov mov cmc sbb es sbb pop ljmp cs jae hlt shl add pop jg out inc dec addr16 inc mov or int3 cmp roll sbb cmpsb mov cmp cltd std js add out stc xchg cs xchg add pushf sti sub jl add orl sbb or ret out rolb add je pop jnp fwait push aam jae cmp sarb add adc ret or xchg jne out aas mov iret out jle sbb jns cwtl lahf inc fldl int3 adc aad cmp jmp push jns fcmove add out aad add fnsave lahf xor adc mov and jp lahf add and movsb xchg pop rcll and push jne repnz add dec loop,pn or cs adcl (bad) or jnp push (bad) push rcrl xchg sahf mov enter pop sub in shlb into out mov shrl or lock jbe sbb xchg (bad) push js call in (bad) aam rolb sbb cmp jecxz repz in and stc push or jp inc adc insl push mov pusha loope sbb or icebp in jle inc mov call dec jb pop clc aas lods cs xchg ljmp enter fsubrs scas mov sbbb jne pop ljmp pop xor and gs in mov jne insl add xlat fcoml xchg js inc xor pop dec sbbl jp out out rcl sahf add mov or (bad) cmp testb rclb movsb or sbb pop idiv xor fistpll dec pop add pop add xchg leave je lahf jp neg test dec in and push sub call inc dec add cmp mov pop ss outsb pop mov fistl cmpsb rorb dec pop mov mov (bad) test dec aaa xor dec mov push mov cmp add sbb loope push repnz dec in inc lods cld int3 sahf xchg pop add ss lret test sbb fldl xorl idivl cwtl jno mov pop and xor int3 add aas xchg clc cwtl cs ret scas repz in mov or fcomp cwtl enter dec test pop movsb adc bound sbb mov xor ficom sub inc aad fs cmpb sbb sbb pop repnz push ret sub xchg lahf push sbb mov and mov enter sbb adc pop push das mov xchg inc dec push lock add cmp test pop stc aaa push dec fwait subl add sub xor pop sbb fabs sar sub xor mov outsb notl lahf orl popa sub jmp sub sbb ljmp pop pop mov arpl or sahf mov mov cvtdq2ps or in data16 ja inc nop rclb ss imul mov xorb inc jo xchg sbb xor mov test idivb adcl imul movsl adc add mov xor fldenv sub call clc cmp cld incb (bad) add mov nop pushf add cld inc mov cmp lahf cmpsb xchg sbb lds mov out out push adc les mov dec mov mov adc push jge mov mov dec rcrb xchg lret cmp lcall xorl in push movsb int3 pusha jl xlat or adc mov pop jae add xor pop xor adc dec dec mov sub fistp dec pop or mov sub int3 rol pop (bad) pop stc lcall and or mov out cmp (bad) add loopne shrl test or loope jl test mov mov mov push int3 and inc rcl xchg outsl (bad) (bad) sbb rcrl aam out add pop push daa lahf push jnp pop aaa cmc pop sbb adc mov sahf rep xor inc cwtl and cmp mov sub push xchg les xchg jne subl mov dec mov adc jno fisub and in decl loope xchg sub aam cmp inc and jb sub lea mov add sbb repnz andb sbb stos and xchg add or sub mov and or adc add cmp pop push daa pushf push add inc and cmp dec add sub int sbb xchg pop divl pop adc aaa (bad) sub cmp and pop mov inc pop adc dec insb inc lock xor adc lea pop inc xchg mov imul mov lock sbbb loopne pusha pushf push sbb xchg jmp mov cmp sub mov xlat mov lret add orl cmp sub adc test mov xchg and aam cmp xor sbb pop fprem or sarl dec test adc repz xchg lea mov jo outsl ret sbb jb push fs fisub lds ss cwtl enter stos add repnz mov cmp pop pavgw and insl ss imul mov std test pop rcll inc pusha and push sbb sahf or pop lock adc rcl out mov pusha push mov imul (bad) les push add decl adc test aas xchg push pushf and or insb mov mov (bad) ljmp or adc ret mull movsb stos dec mov in jp movsl xchg add xchg popa mov lock add sub scas xor fnop adcb fadds push mov push pushf dec mov lret xor cwtl sub out jge (bad) mov mov add pop jns negb jb nop inc lahf imull and pop and or lods xor dec cltd mov outsl jno popa xor or sub xor cmp cwtl lods pusha popa sbb fisttp xor ss add jmp dec adc mov sbb mov push in mov lock nop sub sbb sbb insb inc fist or bound shrb clc xor sbb insl imul (bad) outsb xor xor divl jnp add pop push int3 inc out stos jo push sub jecxz cld pop xchg push dec and mov push dec lods leave bound pop xor (bad) je repz sbb lcall aas pop cmp sbb xchg and or mov fistl xor enter sub lock sbb xchg push mov xor shlb push mov sbb cltd add xor cmpsl lods add inc ljmp out add cld and pusha dec dec insb adc stos xor lahf rcrl xchg xchg and mov mov mov inc ret add outsl push clc add sub cmc xorl cmpsl lret dec lods loope cmp daa cmp cmp sbb pop pop mov stos loop xor lods adc inc outsl add and fdivrl jle ret add dec mov push mov pop mov pop loop cmp (bad) jne add in mov add or ret mov xor xchg inc loopne inc jge aaa xchg orl pop out push cltd mov add loop add mov push add or enter js add mov xor add jecxz mov mov (bad) add mov (bad) std out call popf inc jle cmc in arpl arpl nop xor (bad) xor repz push adc and loopne shr add ss rcrb mov mov and mov (bad) cmpsl xchg clc popf sub push mov mov lods add das lods xorl cmp fisubr pop scas mov pop cmc push enter rorb mov add cmp sbb mov add cmp mov dec dec mov add shrb ja xlat sbb xchg xchg and aad adc or and popf add gs pop or out call sbb enter rorb cmp leave push cmp addb or mov test mov mov jae add mov dec sbb out sub push push fmuls mov pop cmp adcl mov enter in jae and daa xor sbb fwait xlat jmp stos arpl clc sub sub and xor arpl inc les and fwait cmpsb adc sbb pop sbb xor pusha cmpsb jp sub call inc dec test cmp mov aas sub mov call ficoml scas inc dec adc faddl js xor mov jge push testb out leave pop (bad) test in jno push into mov jo xor decl xchg mov mov addl mov sbb inc sbb sub jo (bad) jo add sbb cmp push jecxz arpl test push outsl movsb sbb lock and push xor and aas add dec icebp pop insb cli cmp sarb push mov pop in xor push in les shrl mov mov add or push rorl loopne pop aas cmp and scas popa dec lret pop mov push loopne add or add test or and mov fld1 inc pop pusha jne add mov pop popl pop shld add jb int repz sbb lret sub dec add shlb testl cmp add das sub aaa xor pusha jl loopne aam dec rsm add call push divl or jo and pusha and mov divl movsb pop adcb insb in pop inc mov mov and pop scas add ret pop mov inc jb repz lods add insl xor test fldl pop clts das push xchg nop loop pushf popa mov lock in lea inc outsl inc lock enter icebp adc (bad) cmp push jmp arpl push inc mov repz xchg sub or inc mov ror pop pop in dec (bad) out adc pop jmp push or jb push pop adc lret or dec add dec aad push repz or clc dec inc xchg sub rcl jno pusha lahf push fwait dec pop ret add (bad) add (bad) xor loop add mov sub ror out inc cmp rolb dec sub lock add fbld and xchg fildl stos add mov xor and push add movsl push mov or xchg add sbb cmp je cmp aad adc jb insl daa lcall imul inc test je add sarl or sti pop adc jle scas add push out xchg incb cmp cmp aad mov dec (bad) es xor ja or rclb or loopne sub jl arpl dec js out mov jbe add xor pop xor cmpsl clc jb ss fldl cmp add xchg arpl jne sub leave mov add in push mov (bad) pop push sbb repnz cmc out jne adc enter jo je add bound lods sti add dec jae test push imul lcall jle movsb jle add jns mov jg xchg jbe inc inc cmpsb aaa mov or dec shrb bnd addr16 add out mov les enter fwait rorb add mov arpl lock push je push sub cmpsl cltd loopne and mov in inc (bad) lods add adc mov enter mov idiv wbinvd lock and pop xorl aas jle add pushl push add aad ljmp xlat test bound add cld or add add sub adcb pcmpeqw fimull cmp xlat sarl test add in fmull loopne mov pop inc rol jo xchg sub add out test cmp leave ljmp mov aam xorl inc xor or shrl stos pop sub jnp sbb xchg sbb (bad) inc mov sbb (bad) mulb pop push mov and ljmp hlt insl mov pushw xor cltd push cld push stos sub mov jbe mov add lea push aam pop inc jl lcall push mov subb or and sbbb rorl cmp add dec fucom mul add xchg iret stos movsb xlat pop add sub xor add jecxz dec lret outsb cmp push sub or andb sbb jp in loope outsb ja fs divl adc jg inc dec add xchg push movsb loopne imul sbb jmp sub lea out sbb mov in mov hlt sub push mov cmp lahf int3 dec fsubrs adc decb xchg or int add sahf adc sub out pop fdivrp (bad) add add sbb pop pushf or aas push xlat add xchg aad jo add (bad) adc mov call inc add add cmpsl jnp test insl jo dec wbinvd into fdivr add mov pushf xchg xchg subb call wbinvd mov xor pop mov cmp xor sar pop jle enter dec sub test inc scas adc hlt pushf push or inc cwtl dec lods or inc imul dec push inc adc push xchg test mov jl mov dec add sti fisttpll fsubs push inc loopne lcall lods stos push push mov add (bad) adc inc enter xchg push add idivl cltd inc inc mov icebp cld out iret add xchg in pop dec mov xchg cli push xlat pusha je out cmp fnstenv outsb xchg (bad) pop push test jle push fiaddl jg sub cmp push aaa imul loop xor fcomps pop out gs add push pusha mov jns (bad) or sti adc inc iret fsubrl pusha xchg movsb in cmp mov inc jp mov jb in sahf xor sub jbe (bad) mov cltd out rclb sbb fidivr xor pop inc addr16 shrb cmpsb mov rol andl and cs bound mov das xchg lahf rclb test lret fnstsw das stos aam push mov mov dec mov push ret (bad) movsl jmp xchg fs pop pusha push push adc shlb xorb repnz jnp lea jg movsb out call adc adc jbe add jo and insb ret enter rcrb rclb pop popa push shll sub add dec cmp lcall inc push nop shrb sub clc aas add cmp or ljmp into mov scas jae cmc imul fadds sti lea outsb roll xchg insl sbb pop movsb mov jnp bswap sub sub pusha test add std outsb mov mov dec xchg xor mov or mov xchg mov mov cmp and mov popa int cld arpl jg sbb push xlat add jno jecxz (bad) arpl fisttp xor in adc jecxz in cmpsb pop lret mov xor or fstl sub mov dec hlt loopne push ljmp mov or jge push cmp mov xchg jno lahf add cmp aad sahf fiaddl mov inc xchg das pushf (bad) lea pop mov push sub and sbb xchg pop jo pavgb add cmpsl ficoml push pop jge inc mov mov imul sar add sbb xor fwait add push cmc into jmp call dec fldenv aam add push xchg imul add pop push ljmp sub mov or xchg adc ficom (bad) push add add lds outsb cs rolb int cmc fiadd into lock dec add dec add xchg test add and xor cli sbb jb add sarb pminub mov mov add repz mov mov aas add push push mov in sbb pusha mov std add mov adc push xchg fisub shrb push mov cmp (bad) inc cmp mov sub mov movntps xchg xorb pop mov mov pop (bad) mov cs in inc mov imul sbb enter add sub sbb inc cmc mov mov and xor adc outsb dec lock lods mov pop je add xlat sub jne mov push das mov inc nop sbb cmovs adc add mov pop or stos jne add aam add mull jbe arpl ja stos jg popa in mov les lods mov sub cmpsl rclb (bad) aam jg or or adc inc mov test inc add cmp pop and rcrl push push lret out adc out push mov and test les xor mov cltd mov or add iret js sbb mov jmp mov lcall lret out mov fs xor and adc add aaa (bad) fnstsw add xor dec pop adc popf mov or jl or inc sub pop xor (bad) mov in jbe add xor ficomp out das fwait and add fist add aaa faddl ficom aam cltd loopne add call lcall add jnp cli mov add xor mov xor mov sbb rcll jne ja ds shrd scas mov cmp (bad) jno jnp or stos jg sti sarb clc fwait push lock and xor xchg sub cmp cld inc mov cltd rclb jo stc das out sub rcr push rcl repnz add fs dec andl ljmp add cmpsl dec add jp scas mov rcrb xorps inc repz inc and add test cmc sbb add pop mov incb xor inc pop jo loop fdivrs dec inc cmpb lret jb sbb fcompl mov pop shrb jae jmp cmp adc pop adc js mov adc xchg jmp stos or add cmp add sub add and lret dec xor cmp (bad) jl push repnz test xor popa seta mov mov sti dec fcom xchg mov mov cmp clc pushw pop int3 into inc add test cmpsl sbb sbb xor push aam lds imul inc out and push cmp inc dec adc xchg popf jmp add mov mov sbb mov add outsb stos dec xchg clc (bad) add xchg (bad) mov pusha inc ljmp push repnz sbb enter add xor sbb incl clc jae addr16 pusha pop rolb push xor lea add aaa lods decl cli bound dec cmpb push or repz add lahf sbb (bad) in fadds hlt outsl pop jge in inc push pop push roll sub call mov lods (bad) fisttp iret ljmp cld xchg test jp mov fisubrl repz push push sti pop test push mov cwtl sbb ds aas popl xlat out jo add adc clc jae pusha xor cmp mov cltd popa cli add dec subl push (bad) xor test sbb add sub or fildl sbb shll lock jg mov mov sbb mov add inc sbb rcrl push add outsl sbbl subb mov pop test arpl jbe push push jge dec imul nop add lock dec mov push adc add fwait mov (bad) sti add mov roll popl call inc add rclb cmp stos sbb inc lock fbstp loop mov adc sbbb cwtl mov cmp push jno and mov inc jo sbb mov add int3 jecxz add sbb fisubrl dec dec (bad) shlb stos inc jno dec sbb push lods sub and (bad) bound xlat cs test or iret (bad) rcrl pusha lods sub push xor andl ds enterw mov cmp cld add add xor sarb int3 mov or inc push popa subb sbb pop cmc mov adc mov jge jmp push decb in sbb adc gs std inc pop inc push jl push jg pop inc xchg inc pushl add mov xchg and sahf vmwrite outsb add add mov rorl push mov push sti fcoml mov fisttp mov sbb pop xor xchg das xlat push lret pop and bound mov sbb (bad) negb arpl push dec push or mov and or add sbb scas insb pop mov nop mov mov ret and xchg jge jle cmp sub rorb rclb andb cmc enter aam es push mov sbb or fadd dec dec sbb add stos rclb aam xor imull into xchg sub jb dec sbb jno add or mov xchg leave movl and fwait sbb sbb movsl enter fcmovbe into and or pusha test nop fwait add cwtl loop jae mov cli xor out pop push inc or xchg push out (bad) ss sbb sub pop add cld add icebp mov and insl mov ja adc add inc add sub call pushf arpl iret push cmp mov loopne sub pusha push inc or sub mov (bad) or mov or clc sbb mov gs mov jo cwtl sbb xor sbb add and or pushf call cmp into add dec orl jne test jmp sbb push fcmovne daa roll mov cmp cs fisub add add pop loop pop mov add sbb push nop push adc dec add (bad) out mov mov (bad) sub xchg sbb pop sbb mov cmp idivl in add lods (bad) xor lods adc sbb add xor dec jge cmc add dec rolb sahf push ret lret mov pusha mov inc fmull sahf xchg pop add into ja xor pop icebp mov sub mov (bad) ja jns (bad) mov add jecxz add (bad) int3 aam jae movsl movsl mov adc mov stos in add nop movl add pop inc fisubrl pop addr16 jl xor xchg outsl stos sub sbb jne push in dec push and cmp (bad) in iret cltd adc push add sbb xor lea out roll and lock add out popf sbb test push sub arpl aad inc sub mov push sub pop stos addr16 push cmpsl hlt lds dec shrl enter dec jl fwait mov or add iret sbb and ss add sbb sub jno or cmc sahf add dec jmp cmpsl jnp fisub push sub mov and pop pop sbb push pop adc sbb add out dec add faddp add ss xchg pop add in dec pop or test lret and outsb lock add cli lret add xlat jae ss inc add (bad) fwait mov cwtl and in mov mov (bad) xor loope bound push push inc lret add or in and mov vmread fcompl add mov cmp cmp cmp out jg pop flds add or and sbb add dec xchg cld inc pusha sahf push stc aaa ds sbb incl mov xchg jbe lcall or sbb inc mov adc or out hlt mov cmp lahf loopne adc icebp loope and into iret and add jge mov subl sti roll sub push jle neg mov add xchg xor flds pop pusha pop in mov sub mov and cli es sbb or fcoml adc ret pop out sbb or dec jp cmp inc xchg out std push push adc (bad) cmp push fisub sbb stos sub sbb inc pop add mov insl testb (bad) pusha cld nop add inc lds cmp out orl out insb sub push pop mov js xchg addr16 repz dec add mov pop add mov pop hlt stos out shrb jl (bad) sbb pop fldl2e test out xchg pop add gs mov mov aad addb jb mov (bad) sti lahf add push sub jmp into (bad) lret inc adc dec add mov stos mov inc notl add stc xchg cwtl jmp data16 sti call test in add sub push mov cmp cld iret add ja lds jle cmc psubusw xchg outsb dec lea sar jo dec mov hlt fdivrs cmp or les add mov jbe imul stos mov mov data16 mov xchg sbb push pusha pushf adc (bad) mov sub mov (bad) adc xchg loopne fild add (bad) add pop mov sahf arpl add add mov das or mov pop xor mov aad addr16 mov and jp push add bound add mov std jp stc or cltd xchg scas outsl je mov int3 mov add mulb cmc sbb jle push (bad) cmp out xor xchg fisubrl in negb mov adc cwtl and sub data16 pushf push es sub mov lret hlt push push mov test cmp icebp cmpl jne loopne sub cli pop xchg aad leave add push (bad) mov add (bad) dec xor pop aad fcmovnb xor mov (bad) or daa loope (bad) scas or mov aad add sbb fild fs jl sub xor sub mov rorb add stc icebp popa insl sbb pop xlat je inc imul pop scas cmp sti mov cmp inc (bad) jne les xor clc repnz mov dec pop dec out shr add hlt adc repz lahf add movsl jno add adc cli aaa jo sbb add rcl (bad) out add jmp jge,pt sti add in dec lods mov or push cmp dec shlb adc pop xor pop cwtl addr16 jg push mov add rclb ret jmp add dec ret jbe in add or lret jnp push and jae and stc inc arpl pop mov pop cmpsl dec add dec mov pop sbb cltd andb idivb insb lea push and xchg jmp cmpsl add ja or dec jmp rcll xor aad pop pushf mov adc add scas mov clc call inc mov shll jge sbb or cmp arpl jo inc icebp mov push push sub enter sub pop shlb push test cmpsb or loopne loop cmp les jno xor test andb mov mov flds inc push out mov (bad) sbb sbb lods pop mov sub add dec pop cmc (bad) rcrb sub loope cltd pop inc inc sbb dec (bad) fsubl daa and adc mov mov mov inc inc mov sar inc add xor sub xor and fdivrl pop add int jnp into insb prefetcht1 sbb or push into sub fldenv xchg (bad) cwtl movl cmp jg cmp inc pop inc xchg pop insb addb xchg mov outsl add cwtl or das add mov jb fistpl and or xor sub (bad) sbb pusha adc lcall out clc cmpsb lret add (bad) sbb dec enter (bad) jo pop pop jecxz add inc into push sbb cmc mov fsubs std gs enter loopne fldl stos or cmp adc mov or out fsts fimul inc sub xorl jb push pop cmc lret sub pop movsl or iret shrl pushf fistpl add dec inc mov sar or imul push cwtl jne ss out or ret adc mov push inc sub add lods add sub movsb popa orl xor loopne sbb pop xchg icebp jl mov mov jg push pusha sub cs sahf push sbb pop or jge cmp lods add call cmp iret cmp repnz shlb push or sbbb or aas adcb xor jp ffree fild cmp cwtl or and ja insb out jns int je mov das popf adc aas mov call push add inc test xchg add mov jmp adc pop insl pop sarb sub push (bad) ds cltd shlb and add sub movsb loopne push iret adc xchg xor jns or aaa cmp shll test or ret and dec inc popf mov cmp repz sbb jae add push sub add or push inc ljmp mov push xor mov push outsl add pop and push xor outsb popa push mov cmp add push dec cmc jge cwtl insb add (bad) or cmpsl cmp (bad) ret jecxz push pusha xor pop shrl add jbe cmp cmpsb push xchg jae es pminsw cmpsl int3 cmp test les xor add movlps xchg insl popf jns fsubrs mov repnz cmp movsl dec out cwtl js dec cmp addb leave xchg add mov mov fs js pusha test lahf and test jmp jg enter scas test jns mov xchg mov mov mov pop roll sbb call jb pop sarb jmp movb movsb xchg push ljmp and lock shrl imul pushf mov movsb movl into mov faddl pop out (bad) js lods mov sbb add sub sbb and or insb rorb addb mov jecxz in movsb and pusha xor imul mov cmp adc cli jge or jo sbb xchg ret mov in or jmp in inc mov push sub adc sbbb and pop xchg cmp outsb daa add fcmove (bad) jo mov (bad) scas or xor sub fs lret and push je add pop pop repz shl addb cmpsb mov xor imul pop dec xchg fsubrp out into sbb fisttp pop xor (bad) xchg nop mov lods lock lods fwait (bad) lock (bad) sbb lahf xor mov adc xchg mov xor sub gs jp mov int3 mov shlb jns fadds add push andb test sbb cmp shrb es xchg pop outsb xchg scas or xor pusha jp pop movsl xor cmp xor add or movsl andb inc dec push fs push add ja mov xor testl lock add xor xchg stos inc cli push outsl in jnp jge add and andl test sub sti lea orb aam roll jne xchg fildl jae mov (bad) and jb cmp movsl xor sub jae and or imul lret out stc or pop adc mov jo add or mov add mov pop psrlq out pop xchg call and pop adc xchg add roll lods stos movb jno or ss mov and dec sub fs pusha lahf and push add pop lret les pop mov repnz pop cmp add and mov sbb mov dec dec adc xchg pop add xor push rcll push inc lock inc add lret push je jecxz fcomip and std adc pop push arpl aad push adc sbb in call and xchg lea ret fsubrp jge mov push lock pop enter in sub inc and aaa add lcall add and movsb push stos inc push loopne jnp push and xchg sbb mov xchg jns xor sbb pushf jg add lret jg stos sub gs or dec int3 aad int3 (bad) (bad) shlb movsb loopne outsl jno dec jmp xchg mov (bad) cmp sub add (bad) and aam rolb push add inc je add cmp in mov xchg insl xchg pushf (bad) inc sub out jl stos fistpl scas or or mov out sub adc pusha mov add inc lds xlat xchg add insl jb mov mov lret jne rolb xchg pop les pop (bad) outsl aaa adc cld insb pop loopne push add xor addb or pop add je inc mov cmp pop inc ret lods dec adc add add repz mov add add jnp xchg cmpsl lock dec inc jb mov sbb aad rcr push mov loope call ja insl sahf (bad) mov xchg adc sbb push js hlt js add push insb pop lea test or cltd sahf add call sbbb loop outsl jp ret andb mov add sub cmpsl pop mov add push mov push aam (bad) sbb add push jge shlb std pop fwait mov es ds inc cmp add dec into gs std daa pop add in mov mov dec mov nop mov jnp sahf cmp push and frstor add sub aad mov loope lret jae or push adc mov mov sbb shl jno adc add nop jo lods jl aas nop and fiaddl and jbe push jmp or stos pop lea add add mov cld int3 xor dec (bad) xchg pop and add (bad) aad imul js mov stc dec mov inc pop pop pop fucomp sbb ljmp push or lea iret cmp stc popf push scas dec mov and jo add shr and loop inc jae jbe test add ror xchg mov adc add fdivs and mov lds je add ret add adcl add int3 rol daa add ljmp add (bad) xchg shrb xor addl jmp nop or pop idivb ds hlt push add dec cmp neg pop jmp sbb jp add es jbe or in (bad) mov mov add daa mov dec ret sub push fs mov in pop mov adc aas mov js add scas dec fmull ds or mov push add fidivl dec inc mov sbb ljmp add jl push mov cmp adc inc inc push frstor hlt add jo pop pop lock mov inc sub add sub mov ss addl mov enter lcall push jne inc dec jg xor dec mov cmp adc loopne rol call or and sbb rolb mov and jo sbb inc iret mov xchg inc sub adc sahf aaa mov mov adc sbb fs in add movl mov adc dec add inc or cmpsl xchg scas rcr push test lock imul pcmpgtb adc xchg and data16 mov in dec (bad) dec push in shr or cli dec dec cmc dec xchg push pop inc pop pop adc add nop mov push out mov icebp adc mov andb shl dec sub pinsrw orb loope nop adc push add mov dec (bad) dec lahf add and add mov nop or int flds adc icebp int3 add and ret sbb pop iret jp jecxz loop cmpb ja ret push mov or ja es ret mov les inc nop out dec and mulb add (bad) mov jl mov fisubl jge or ljmp ret repz or dec cwtl idiv cmp enter mov add mov iret inc add dec pop fmuls popa dec mov and xor mov push add inc movsl leave cmp inc adc inc jmp ja ret sub jae mov push sub xorb add push push imul xor insb daa cmp rol mov push dec popa sub jge xchg cld leave pop (bad) hlt inc sbb lock mov sbb sub imul mov jo pop (bad) push lcall mov adc test and dec imul cmp pushf push data16 lahf mov sbb sub sub (bad) insb mov das mov inc leave cmp insb add sahf jp cmc (bad) pop fsubs and mov roll js pusha mov pinsrw (bad) xor or pop mov (bad) lock jle and leave mov sbb mov sbb push sbb in add aaa xor add mov test in les jg add mov (bad) jns xor daa jl test mov cmp ret mov rorl cld dec mov xor pop adc ror punpcklbw loope leave add loopne adc aaa scas push add add sbb adc gs data16 push or mov lcall xchg xchg lret and lods and or jge nop xchg dec push pop mov (bad) jnp repz idivl adc test popf xchg cmpsl imul (bad) jg sub in roll sub loope fisub pop dec inc add subl mov jns pop xor iret ja int test xor loopne mov fwait lds xor inc or push mov lock (bad) sbb or test ret fs sub push mov inc movsb mov xor cmp inc push cli add add mov test insl mov rolb adc and sbb pop dec sbb gs jo (bad) aaa mov sbb mul and outsl mov (bad) xor jae and cmp leave sbb sahf iret (bad) cmp pop pop jg jecxz call cltd outsb push sahf imul test pop push and adc inc jl es jg mov rclb pop or push add or xchg jae adc or dec push shrl rcll test xor arpl xor jecxz add mov fidivl add sub xchg push rorb add mov ja jecxz xor push push mov rorl test fimul sbb mov jns test inc sahf add aam dec int3 mov ret push jae sbb mov inc rolb pop mov or xchg and sti pop sahf xor add dec push adc int3 dec adc or out add scas push add or and test adc shll test leave fwait loope and ss add push dec jne ret mov xor in stos clc add or ror sub icebp xor call mov push sbb sub jo dec outsb or mov dec jo gs adc pop sbb add xor sbb add xchg push mov and orb in rorb jecxz stos call sbb pop jo cwtl push xor data16 cmc add shrb push imul into jns sti inc and in dec dec push xor lcall sarl cld or lcall ds adc xor in sub add push and sbb loopne cmp repz mov lods ds dec cmpb cli js test lret dec into add xor mov pop push divb rol nop aam pop fisubl or pop add jnp pusha push sti sbb mov inc pop adc rol std xchg mov pushf imul add fcomps lret es (bad) or add push inc xor es rcrl cmp xchg add fstl fdivrl inc push xchg and sarb mov sub add cli sahf and idivl and push rcrl outsl cmp loopne pop and sbb xor (bad) adc fwait or and add xchg fbstp in jns add (bad) roll inc or sub sbb (bad) nop mov sub stos repz mov sahf mov xchg ret add push mov movsl add mov lahf nop mov test sbb leave push fidivr pop inc or jl loopne add mov cmp push inc mov aam movsl sub or shrb add popf fs sbbb fimull outsb push mov stos xor add add and fneni(8087 (bad) dec ds pusha nop cld cmp push movsb data16 xchg fmull sbb mov dec cmp add sahf add jp push sub add lods add repnz repz cmp pop ds add cmp cmpsl mov outsb sbb mov repz ja lret int3 ds out push and mov scas sbb jns int3 sub data16 shrb stc leave in add and stos push dec dec and subl push and add jo xchg (bad) push aam adc dec mov bound and cmp movsb gs divps and lods sub mov cmp test jecxz cwtl sbb sbb lret decb xor pusha push scas cli xchg add shlb pop ret and ret inc sub fs mov add push (bad) pusha push pop js adc adc xchg pop xchg sub sbb push fs push in add fimull mov in jo add repz inc loop inc and (bad) (bad) sub xorl mov ret popf adc push jbe insb mov stos sbb adc shl push add sub mov add inc sbb rcl pop push add loope andl push cwtl xchg mov add imul int3 movsl popl insb (bad) hlt lods cmpsl adcb pop mov sbb cwtl inc push arpl push adc add lods xchg push mov sbbl mov add adc pop roll and add add jmp adc sbb pop test cld pop or popa cmp (bad) pop inc and (bad) roll in repz sbb sbb sbb (bad) xchg dec sbb mov rol (bad) jle dec pusha jmp int3 fisubl lods add cltd (bad) into stos pushfw rclb dec inc gs adc and test (bad) repz mov or out jno push add dec push adc push les sub nop adcl push jg push dec add push push fwait dec xchg into test sbb scas add (bad) aas push add jmp and mov sbb add add or xchg lret push fcomps sbb add mov mov insl xchg add bound es rcrb add dec pop mov adc inc nop and clc aas addl push cmpsb fimul mov xlat push sbb sarl cmp jge rcrb les pop xor add mov mov xlat dec sbb dec adc push loopne cmp mov xlat xchg ja add adc sbb aaa subl mov adcl lcall inc mov cmp inc loop je or outsl adc test sub adc xchg pop inc add sub jp xor in push inc cwtl fmull inc jle sub dec xlat gs (bad) add and repz pushf pop inc or mov cmp dec mov popa adc pusha aaa enter fldl adc stc repnz insb rorl sbb andb pop sub dec in and mov mov xor cwtl xlat fs hlt mov mov push lcall add inc cmc mov test pusha (bad) inc mov push nop enter mov ret pop fsubl add push xchg jge and or aas arpl adc ja add pop inc out pop out ret (bad) int adc dec mov inc jns cmc xor or xlat test lock (bad) sub add or pop xchg push sarl mov cmp jne xor add xchg iret les mov cmpsb outsl adc xchg (bad) in fild cmp call fcomps jnp (bad) addr16 es js ja pusha cmpsl stc pop add rorb jnp and add push mov (bad) aaa out inc loope pusha xor ds xchg jecxz arpl ret mov dec push push push jge fnsave lcall cmp mov popa iret js mov pushf call pop les in mov pop mov aam push mov xor hlt mov xchg popa sbb pop xchg lods nop push ds sbb test xchg movsb adc mov sbb push adc iret xchg jns in xchg push lret sbb dec cmpl inc pop or push (bad) jl or pusha mov dec rcll jo add sbb and mov mov xor sbb mov sbb mov inc cmpsl push push rorb cmp dec sub lods add push jae imul fnstcw jo (bad) mov int3 adc rcrl mov sbb add inc out cltd xchg sub sbb (bad) orps out inc add cmp xchg mov mov mov or mov jb and fiadd push in insb test je sub push jo,pt adc sbb fs add test rcrb nop popa mov dec popf adc hlt inc lods call or fcmove pop out sbb xor mov push mov push dec add lea jb sbb jne xorl test mov jg push push outsl nop dec scas shll mov add inc xchg sbb pop out imulb add dec mov inc dec aad push cmpsl movsb cwtl push add (bad) pop mov lods or sahf loopne xchg sbb mov enter push jg sbb add roll or or mov enter inc enter cmpsl mov jo dec add add push sub mov shrb leave mov aam jae stos adc add cmp add push adc mov mov psllw or orb xor push (bad) xor sbb mov pop dec xor adc jns iret cwtl andl or jno mov add pop psrlq cmp or push sti sub add mov leave inc mov push mov test or mov mov rdpmc fisubr data16 out fcomps rorb add xchg pop pop ja add push xor pop int3 andb sbb push nop sbb jns or adc lret or test test daa pop xlat add mov add add and jb pop jns inc lock mov mov sbb outsl pusha mov push cmpsl mov enter and shrl inc add cmp xchg pusha sub add inc cmp adc add das cmpsb xor shrb and ret xchg hlt xor mov orl add dec cmp test push add add fcompl shlb pop test arpl in cmp rcll orl jl add movsb call xchg sub adc orl mov sahf push nop push xor mov sub add js das add cmp lods jecxz mov mov dec mov fsubs mov xchg fwait stos test inc sarl and add inc iret sbb enter test movups andb lcall dec sub jnp mov push xlat xor stos roll call jo shrd xchg xor test out sbb mov mov icebp cmp leave call pop les xchg cmp mov add pop shl sahf mov je xor ffreep mov jo mov test add popl cmp aad insl ds adcb or rclb wrmsr in orb push cmp mov rcll push xlat repz adc add xchg inc hlt rclb les cltd test and xor test cwtl xchg pop adc push mov lcall or fwait push jne sub cmp push js stc sbb lcall and sbb add into stos pusha (bad) iret mov mov mov (bad) sti or adc repz or in or subb repz mov pop sbb adcl ss ret pop cmp inc insb enter stc mov or add decb popf aas pop mov push dec lds pop lcall pushf xchg dec and das sub xchg or cltd and cmp cmpsb dec and add inc sub fwait aam push aam cmpl pusha sub nop inc jno sti mov es leave test jae fwait push sbb lret inc mov or jmp in push or push sbb inc push je sub rcr pop pop add sbb inc movsl cmp ficompl cmp cmpsb mov jo pusha add jae mov test add mov sub ret push add adc and inc or xchg add add clc sbb mov lea aam sub testb xchg loopne bound ret mov fwait clc xchg jo and cltd popa in and in ret inc scas mov mov clc mov mov jecxz stc ljmp or mov mov scas or nop pop aas xchg cwtl push and fwait mov xor addl mov repnz decb in mov scas adc add cltd lahf cmpsl leave jp sub enter pusha xchg lock add xchg movsb pop xchg std sub adc icebp push rolb xchg or call dec iret add mov inc jbe xor mov daa mov mov mov lea cli lcall call ds inc push or popa pop stc movsl cli inc adc inc or mov test mov mov jl fcmovbe mov xchg jns jnp lret fwait push loopne aas push pop add inc call cmp test adc adc add inc adc pop adc add push in jg push lods das fwait jno sub add dec inc dec push add push mov or mov add sbb add cmp xor js cmp sbbb mov aad adc mov sbb cmp ret cmpsb fcoms setae lcall das repz cwtl cmp jno in ret inc call pop and pop (bad) or orl adc jo into addb aaa js push push and adc pop or rolb or leave (bad) add fwait cli nop mov cmp jge jae add loope scas and mov mov out adc pop ficoml mov xor std pop add mov add mov fwait dec sub cmp dec and rorb inc sbb notl sub cmpsb sub popa mov sub mov or je dec nop (bad) mov xor adc mov mov adc ret add pop subb sbb sub pop mov push adc xor inc cmp enter sbb nop enter push or sub insb sub and dec leave andps in fiadd or push mov mov jg xor or stos pushf xor jb clc add or dec adc stos pop add jmp aad rcrl mov push cli inc mov sub inc push andb rcrb jb lcall cwtl inc add insb aam pop fidiv or movsb jno subb sahf test dec insb cmp xor in jle add inc cmc push pop adc ja imul fsubs adc sbb xabort and add cmp xchg mov adc push lods in or icebp xor or fwait rorl sub and js lret cmc dec push mov adc mov dec fwait push in inc imulb mov fwait jnp xchg push dec fs push hlt hlt push push jge movsl out ret fcoms mov push nop xlat or fs and aaa stos xchg pop dec (bad) call rolb mov add lret stos cltd and or clc add sub dec or std inc movsb sbb and movsb cmp pop xor or xchg dec addb in inc inc scas add test cli nop mov orb mov cltd in lcall leave dec data16 loope mov js pusha adc roll paddd cs and fcompl sbb cwtl sarb mov pop xchg aam mov xor ret add mov in and popa hlt inc mov jecxz in addr16 pop in add mov jbe mov aaa test lock subl (bad) std xchg dec mov lock cmc sbb dec add jmp fild pop jnp add mov in xchg push pop lret pop leave xchg rclb xor mov add fxam rclb push fiadd push pop jl cltd call outsl xor push cwtl fdivs pop mov stos divl pusha enter gs std (bad) sti fsubs mov lahf pop or xor loopne fiaddl add add add (bad) sti pop imul mov fdivs rclb mov lret repz sub fldcw pop call mov in imul pusha out sub inc ss jae out add sbb push dec pop add sub gs cmp mov cmp or sahf and mov add ret adc lock out mov ja clc cmp loope repnz cmp jg cmp push (bad) cmpsl dec enter add add in movsb fcoms mov enter cwtl int test mov adcb inc std dec pop rcll (bad) sbb and mov rclb mov jecxz mov fdivs dec icebp add rorb jo pop sti pop lock pop sub pop mov push imul lock loope adc movsl enter xorl fidivl jo cmp adc test outsl pop orl dec xchg push inc xchg out mov add xor divb or rorb jp,pt and scas (bad) jl or mov in sarb dec addr16 jne cmp or and cs jg push mov add popw fisttpll into loope xchg or and xor fimull inc mov adc cwtl or and fildl arpl je dec jl addb cmp jnp add repz adc orl xor mov nop icebp pusha in or call imul add adc popf add jecxz stos pop ret add stos and inc inc dec jp push addl mov cltd add adc mov lods ret jl jmp dec jno sbb inc pop ret rclb pushf add rclb fs cmp jmp rcl xchg repz jb sub testl movzwl add dec pop add add sub popf xor add mov push test add mov and sub add dec mov int3 xor loopne adc jbe hlt pop adc adc clc mov pop pop sub jns sbb push outsb or add mov lea sbb rorb add pop in pop sub lods xchg push inc int3 dec pushf ss fldcw jo jns inc jp add iret add lds jecxz aad sub pop sub out jp into test movsb cld jbe fs pop cmc or add sub mov out cmpsl dec xchg or mov addr16 aas or pop adc rorb push bound sub push fimull cmp push cmpsb xor outsb xchg mov mov push or insl jbe inc inc cmp imul sbb or mov sub and jbe in add sub cmc dec sub xlat adcl aaa je xor cmp call inc mov add enter pusha (bad) call inc popa jge xor cmp fcoms push jne add fwait addb repz movb lret cmp push sbb or lahf or lcall out lds add mov add scas push lds (bad) pop cmc and loopne xor adc call add iret dec test in dec ds notl shrb push add cwtl adc (bad) add (bad) call roll pop cmc sub outsl lock int pop mov loopne adc in mov add pop inc icebp xchg jo xchg dec mov push sub incb ds add sbbb es push add xchg cmp inc cmp sbb pop dec outsl push add mov in pop adc mov xor pop (bad) addl pop or sbb push jle aam mov add popf jae in add into ret call cmp cmp lods sahf add push jns add inc in add push sbb dec or divl cmpsb jo add lods or adc adc imul lock mov lds ds cmpb arpl mov push push ret and mov xor pusha jle mov leave (bad) xor mov aas dec xchg xchg mov jno cmp or fcom test add addl pop int sbb jbe jbe sbb xchg dec jmp inc sub xchg push mov xchg mov fiadd test pop repnz out aam lret sub int inc scas xchg shlb ljmp jecxz repnz out pop add sub add mov push outsl and iret mov mov push into jle sbb push out ret in jmp ss add flds cld js adc sbb js mov xchg mov call add les adc mov rcrl leave repz sub (bad) xor add cmpsb (bad) jb ja ret test add jbe jecxz fwait cmp add in shll outsl fucomi mov xadd iret fcom daa add inc or jl and xchg add cmp jle cld dec sbb cltd lods (bad) rcr and lds aas cmp sub test push cli inc in mov add mov sbb push arpl in xor jmp or or sbb aad mov lea ss push pop outsb dec fdivl mul cmpl imul adc cmp and shll push fsubl add loope aam cmp pop mov xchg add add outsb (bad) jecxz cmp jno add ja stc or adc pop outsb test sbb sub add sbb add mov adc imul push push jne add fldenv xchg clc cmp sbb mov adc popa (bad) jp in stos dec sbb inc push push add xor es fldl mov mov aas rolb aaa xchg and jg cmp pushf add in das mov sub icebp add je clc mov lods ret adc pop nop or ja cmp (bad) pop enter dec mov orl int add mov push sbb sbbl xchg xor add imulb bound sub jp fwait stos incb rcll add push sarb mov pop stc into xlat cmp pop popf ret cwtl enter cmp mov add xor mov clc add je mov mov shll add aad jo cmp xor loopne mov mov dec pushf mov and sbb mov flds pop xchg clc or dec mull cmp je add ja add mov jp xchg ret pop cmp xchg sti sbb add jmp clts inc nop mov mov lods jbe mov add add mov mov adc add pop pavgw jge push mov out pusha mov jp mov sub inc (bad) adc (bad) cmp daa push inc orb pop pop sub cmp cs xor mov cwtl sbb add sarl jl cmp add addb push mov movsl dec adc lds fildll fs iret notl or int inc test pop jg ror enter imul lods ja or (bad) loop xorl test dec jns add inc add mov out pop jns and add rcrl popa mov or mov and add loope jb,pt (bad) out lret loop sbb in mov push add lods jle sti jbe scas add jae pop mov sbb add cwtl aaa xor ret or xor jle pop cmp mov jae add shlb lret punpcklwd add push inc and inc add int xor add or fwait xor iret inc hlt pop add add add stc inc dec js add ljmp add or add or fs inc (bad) jmp sub push notl enter and test sbb data16 mov add negl add jno into jmp mov add (bad) js cmp dec push leave adc mov cmpsb dec xchg add gs scas add and movsb (bad) xor movsl mov jnp sbb mov inc push (bad) fildl push dec inc call and into fiaddl rcll inc inc mov lret adc dec (bad) lock mov cmc pop leave cwtl imul out cmp lret aad ds aas in lods mov sub mov and inc mov sarb push jge jno scas xor cmp addl jmp mov pop leave ljmp loopne fs xor xchg cmp psrlw push out jp inc std pushf fadds mov lret push stc or aad add std pop cld pop fwait lods add jns inc les faddl icebp into push dec dec lret add add fwait daa sbb movsl mov movsl lock outsb sahf mov loope add inc sub dec out or ljmp lret jb mov test out insb mov adc jne jl mov cmp jp inc push clc call inc push scas cltd mov dec (bad) jmp add arpl mov push mov imul lods add push test xchg out (bad) pop push mov push sbb arpl inc add cmpsl add in dec cmp out xor jg ss jns mov push rcrb add cld cmp adcb in imul xchg rcll xlat jbe inc fmul push mov add sub xor fcoms scas (bad) lret or xchg mov cmpsb dec shlb cmp cmpsb push mov xchg mov add cs int addb jle in jmp add dec pop jp out mov mov sbbb jns insb cmp cmp mov jbe out add test mov sahf push dec pop jo ret and push inc test lcall push push jnp and jb mov xor or push (bad) mov cmpsl jno nop and push mov in dec adc xor pop add out and sub jmp loope mov in pop int3 add xor loope push xor movb mov stc add fs cmc pop mov mov stos out jmp cmp pop fs cli xor and dec pusha mov bound pop loope stos lock adc je add mov add cmp sbb fcoms dec insl xchg mov ljmp popf cmp fisub cmp sub pop stos pop inc sub dec inc js popf add mov sub xchg inc inc pop fwait push out repz (bad) and es or int and and xchg (bad) xor mov cmc push sub push or cmp push add xchg es dec add (bad) and dec add mov lcall pusha xor (bad) jae fidivrl lahf jp mov push (bad) ret add mov sbb inc imul mov lret push pop fs add and sbb pop (bad) (bad) mov jl add sub mov addr16 and pop dec fdivs aas xor xchg dec add push sbb lret and loopne pusha test adc mov ds ffree sbb in aas xor ret push dec add push in dec xor and daa add add or add cmpsl aam cmp divl add pushf je mov sub inc pop sbbl dec loop pop add pop adc sub adc in movsb aam push imul aaa mov xchg mov jno adc jle add loopne mov js jo mov jl or adcl ret popa pop out mov mov imul mov xchg adc scas (bad) out pop cmp add adc xlat ljmp inc add dec ds jbe test mov push ss popl xchg push xor mov lret (bad) inc add inc (bad) and jg adc cli adc or xor add inc pop inc cs js add mov ljmp testb inc sbb imul (bad) in pop or jno jmp cmp push loop or push rolb pop lock pop xchg dec xor mov hlt (bad) mov fistpll ds cmp xor inc popf fiaddl gs les dec jns sub add mov jnp mov fsub hlt xchg mov xchg icebp mov add inc out mov mov pop inc movsl push aas or inc add out icebp in (bad) or mov js add xlat aas xor lds pop adc inc lret lock push mov (bad) push xchg aas add cmc inc jge add scas inc push rol add sbbl add lret out add iret repnz stc mov adc ljmp lds jne cli adc iret xor jmp jbe sub icebp push adc add cmp rol or sti sub add push sbb xor fnstenv add pop jo push fist cmpsb adc pop add insl xchg add sbb sbb fcompl add mov xor xor cmp dec int inc lods push testb aam push sub scas mov ds cmp fdivr add fwait dec inc sub daa stos cmpsb stos fbld push add mov sbbb mov push out pop add stos cwtl and lret mov (bad) addr16 pop push add sbb push or add push mov sahf mov xor xchg add mov pop add flds test or call addb pusha add nop add sub sarb scas cmp mov cli pushf xor pop add pop sub add inc aam mov adc fldenv lds rcrb mov int add js push imul push test adc adc mov repz in sub pop xor sbb fdivrp test mov cmp ds inc bound mov movsb add adc mov (bad) xchg dec mov add mov xor sub enter mov mov xor jl dec jne addr16 and add in std xlat mov loop xchg out inc xchg mov adc fwait sbb add push and add pop fwait mov dec rcrb call (bad) clc jbe imul jle xchg pop pop loope mov dec dec xor fist mov push faddl dec into sbb add aaa dec cmc add xchg push incl imul cwtl add mov sahf hlt into adc mov negb pop cmp outsl pop sbb lods rcr jl xchg or adc roll inc push add andl inc xlat aad dec js sbb int3 loopne jbe mov sbb xorb outsl jns ret push sbb or loopne xchg or cmp icebp into pop aam mov add sbb scas add jb and inc jne xor cmp and and cmpsb mov lock cs sar fadds push and pushf inc frstor add test (bad) adc insl add mov add leave mov lret or call add lret xchg sbb cmp fildl movsb loope xchg cmp pushf sub sbb jbe add repnz es jae push je mov mov cs push fwait repz add push fldl nop fdivrs testl xor lahf in jb sbb mov rolb iret jl mov and add add push fs and mov dec pop and divl jo fildll xor jno inc sahf decl and push stos xor dec loop cmp jecxz iret pop fstpl arpl dec in add add sti mov fsubrl js cmp cmpb inc popa fs add outsb sub leave fldt add nop cli (bad) xlat orb ficoml fnop dec flds jo cmpsb sbb pusha (bad) enter nop fdivrl pop divb mov test outsl call clc push jmp inc add dec pushf dec dec push fs inc mov mov pop adcb push or lock addr16 pusha cli jle scas push inc push xchg cwtl cld add pop xchg push stc push jnp in cmp pop (bad) push sbb fldl xor add add (bad) lds cmp add adc inc cmc lahf (bad) sbb adc jbe adc sbb cmp cmp divl leave add xchg test in aaa add dec inc jmp imul sub add xor fldcw add cmp lcall adc repz push cmp sbb mov inc dec fsubs ret dec jle xor add popf or mov (bad) fwait pop std loope loopne stc jmp bound (bad) inc movsb xchg and push (bad) mov adc fiadd imul xchg ret gs sar or inc add inc repnz loopne mov insb jne mov lock repz mov inc sbb call repnz sbb xlat inc adc stc and inc sbb xor mov pop inc mov push inc push js gs je out add adc inc cs push repz mov inc cmp pop sub adc xor pop add in add rcl cmpl xor or and jno mov xchg cmp dec push jge gs add sbb push rcrb adc arpl mov inc popa push clc (bad) xor add xchg icebp in push rcrb aad mov (bad) lods add mov movb inc xor mov movups xchg outsl inc in cmp cs xchg sbb or mov insl mov roll out cltd jmp test mov lahf aaa scas add xor push xchg pusha fistpl jne dec and stos idivl inc fisub add nop lcall jmp lea aam dec add ret mov xchg loopne sub pusha out add mov mov xchg dec sarl sub (bad) adc imul shll or or add js mov push lods sub loop enter pop insb and daa aam dec les push jecxz add inc xlat aaa jl dec add xchg xor push add jne fwait xor mov stos or adc or inc aad add add xor push push xchg add xchg pop pop add stos xor out adcb daa int xchg pop mov loopne pop sarb cli add mov cwtl xchg cmc mov add cmp jmp and push repz pusha pop mov dec icebp testl imul into clc jne cmp sbb sub test add outsb imulb pop rolb addr16 jb cmp add fisubl mov fwait push dec push cmp int3 nopl xchg movsl pusha mov add es enter xor adc or cmp jp cltd je add rorb sbb fcomps rcrb cwtl (bad) (bad) fistpll in xor add sbb fwait mov push test ja add pop fcoms loop push adc or addb inc cmpsb push mov enter jae in push xchg pop jo lret mov inc or fildll test rorb pmulhw pop and inc and jp lret icebp xorb add daa and dec mov enter cmp or jae push add dec ret (bad) call xor add mov test add insl insb dec push fbstp dec fwait test (bad) inc add imul add std out scas pop mov add arpl fwait lods data16 add test loopne scas popf push pop lods imul out imull adc fs sahf mov mov repz popf pusha xor add inc sbb mov sbb gs push xchg jne stos cwtl add push sahf loopne clc add loop fidiv fidivl (bad) insl jo paddsb push sub in mov mov add std pop out inc xor jno and jecxz add mov stc (bad) xor jle shrb cli mov push xchg xchg push mov jmp es ret push sahf xchg add add push leave push inc loop xchg sti rcl and jl mov push jb sahf add aam iret fisub adc das hlt add fcompl mov jns add inc or dec pop bound cltd loope xchg or fcomps xchg cmp subb rorb nop push dec cmpsb inc add xchg sub cmpsl cmc lock and push lods add inc add lcall aam dec loop js add mov stos jl fadds inc adc outsb jnp dec add lcall cmp sbb push mov mov jae test lahf adc js add cmpsb inc mov leave jecxz das lock xor lods cmp jnp ficomp jo add ja scas das cwtl add push sbb or iret lock xor add jmp lods pushf stc nop xor cmc stos mov fmull andb inc enter fwait cwtl xor out cmp push xchg movsb xor sub sub fldl lock pop xor out lock and xchg sti or loope insb lahf push std sbb add test out cmp mov adc fdivrs add es mov add outsb cmp add (bad) add sub cmp fmuls aaa jge cld and scas cmpsl jb pop testl push sbb push sbb add or push lret iret sub jns or mov and mov push add sub aas pop dec daa test fs loope sbb adc mov mov pop clc xchg inc xchg cmp sub cmpsl jg test fwait dec mov cmp push sub push mov add or mov sti daa push jo or cmp xadd out in cmpsb add fs test fwait add enter lds pop movsb inc pop pushf repnz add cltd and lods cld lahf (bad) ja pop cmp rolb sub sub rcrb lret and fstps jmp xor xor jae movb mov inc jo jle (bad) in pop dec (bad) sub (bad) cmpsl cli ja cmp sbb sub cwtl aad leave add rcrb or and pop add xor mov pop pop add movsb (bad) out push mov add push add dec bswap mov pusha jecxz imul aam call mov in popl nop cmp dec rol xchg mov or sub pop fstpl addl dec pop scas popa sbb jns adc or mov jl push rcr add cltd scas adc mov sbb cmp mov xor nop lock sbb test sbb dec fs xchg xchg push add imul arpl movsl dec xchg add mov scas and arpl in lret in mov add mov add int3 icebp (bad) frstor ljmp add mov mov add repnz inc jno add pop dec shlb mov add int imul sub mov insl add (bad) cmpsl jbe,pn movsb fild add cmc push repz mov add mov push fmuls sbb add xchg sub sub add repz add mov in sbb (bad) out rcrl dec jns jl sbb xchg mov arpl add (bad) or and shl pusha imul imul js pop movsl jno dec add xchg jo loope and sub (bad) xchg test dec mov ret scas add mov pop cmpb imul clc push add mov dec jle add mov les mov fmuls scas mov dec or add add jl push mov mov lock dec pop icebp jle jp sarb repz mov adc lret add mov pop inc dec xor pusha mov orb pop push push mov cmp add xor fnstcw sbb inc inc or repz lock ja jmp jne and mov xchg jl int3 lcall fwait sbbl and adc xor fisub mov cltd push rolb dec int or cmp push cwtl aas jp dec test hlt mov pop add ret les add push lock lcall xor xor inc dec xor ljmp outsl mov add lcall add xchg or imul and repz pop popf xchg scas divl adc call (bad) dec push cmp (bad) mov cmp push hlt fidivrl push add push pop das mov flds andl lds mov fistpll jo shrb xor stos pop adc movsl mov dec clc nop inc aas imull ret sbb xor loopne add dec push rorl cld jnp add lcall hlt jns cmpsb add pusha xor inc test add test add pop or mov rcrl pop cmp rolb adc or or sbb cwtl pop outsl gs adc add in and sub (bad) cs out int3 add ret xchg sbb arpl lahf mov sub sarb stc pop pushf lret aam fstpl ljmp pop scas mov daa cld mov outsl push mov (bad) push out inc or into clc cmp cs popa mov loopne imul sbbl sahf lock dec nop add lret jecxz add ljmp add jo cwtl movb movsl or and imul add cmp sub dec mov add sbb in and mov jl scas push mov sarb add jbe daa data16 fadd adc inc ds cltd sub aad adc stos and bound add push adc js cs lret adc and fcom add push mov or sbb popf cld sub clc pop fsts xor cmp xor pushf mov push add rcl stc ficompl lret add dec xor data16 inc imul xor add rcl vmovhpd jl xchg insb dec push add xor out xorb and mov pop mov std xchg data16 mov call (bad) adc in lds push loope sbb je add jmp add add jl scas mov mov imul dec pop sbb je dec lret rcl out xor pop mov add repz aam addb mov cli lods mov push xchg (bad) jb jg cmp add jge,pn jmp push push ja pop loopne shrl rolb or jp add xor sub mov mov mov stos dec mov sub es fisubrl xor test sahf jns xchg es in sub add sub scas or sbb stos test sbb or add cmp mov or data16 xchg mov insb xchg wrmsr dec inc cli add jle pop sbb loopne adc pop std mov aas cmp addb push jne mov decb cmpb sub ret mov dec sbb cmp rclb sub add add bound or andl jne mulb inc xor lahf js push inc jns mov jp push mov jbe imul insl ja cmp ja add jo add pop jecxz add or push sub push cmp cmp lahf test (bad) mov andl jbe and and add dec lahf (bad) stos xchg add or lcall insl xor sbb clc cld add xchg mov std lret (bad) cwtl mov leave call xor (bad) cmc pop (bad) or popf out aam sbbl test inc lea and cs xchg mov xor (bad) jp xchg add shll inc jecxz mov add call push push pop push jmp fisub mov pop (bad) xor mov lahf xchg hlt adc jnp loop pop add sbb lods add mov (bad) adc mov test xor add sub add nop xchg cmp lods cmp pop int sub pinsrw adc fwait add and fsubrl in pop addr16 in inc lock cmpsb dec insb lcall inc mov pop sub ja sub jg fadds dec sti gs fcmovnu jl push inc nop mov notl test dec cmp add sbb ret lods jb adc inc pop enter mov or add orl cmp inc cmp pop cmp aam addr16 stos adc stos pop sub dec pop cmp mov test jb loopne xchg dec jle inc add dec ljmp hlt pcmpgtd sub (bad) or mov or xchg je add nop inc in incb and jne roll andb ljmp out call out outsl push xchg pop sub fstps scas rcrl repnz lret (bad) sub add pop insl fcoms repnz lods sub out cmp fadds mov mov mov or and hlt push add ret fdivrp test sbb dec adc sbbb dec aad or into jg jo scas add sub sub jmp call add subb (bad) push hlt cmp test dec (bad) xor loop sub pop or pop jg sbb xor mov pusha dec xor add sti add or xchg sbb imul push adc cmpsb lea pushf outsl fidivrl aaa or xor (bad) or pusha subb and add mov out pop sbb aas add push jne dec jmp in add push inc js and (bad) push push adc or andb lret add dec mov mov jns adc add cwtl cld sbb std mov add xchg xor and cmp jecxz enter lret cltd fidiv jl or shrb scas enter out test subb add test dec lcall xor cmp dec add pusha lret pop or repnz sbb and adc add mov jno and aas mov cvttps2pi scas mov mov repz stos lcall les cli mov mov add xchg mov sub cmc jb sub mov cwtl mov mov mov dec (bad) in test cltd add xchg addr16 pop scas (bad) mov mov push pusha adcl pusha ss push add es add test adc add stc dec lret add add in pop jno cmp std loopne dec or add xchg scas (bad) rclb dec xchg or sub mov pop test test lahf pop push cmp dec popf imul repnz (bad) not adc mov dec lds popa aam jg les cmc add dec (bad) es aam into shr sarb dec out rclb mov jbe add xlat aad sub adc dec sbb add mov and xor mov mov nop add ja cmp rcll cmp mov clc mov cmp push fadds push xor mov add push add dec and sub rclb inc dec and data16 mov fdivl out add test pop cmp xchg sub loopne daa test je push outsl aaa jbe lods push out push lahf sub in adc lret loop movsl loopne mov stc add cmp mov es pusha subl push aam mov cmp lea jl fsubrl add pop add insb pop cld jb in mov dec ret sbb lret and (bad) fmuls pop mov xchg pop icebp jmp dec inc pop stc mov ds aam aad mov adc mov inc pop popf dec adc orl cmp lret or pushf int pop imul fiadd push sub fildl xor mov jmp fsubs push nop mov cmpsl xchg mov sbb icebp dec add (bad) mov sarb cld aam add lock cmp mov push sbb daa push sub pop ret inc rorb das dec push dec pushl add xorl stos mov add sti pop popa xchg mov aas fwait sbb sub lock mov arpl aas popf adcb inc (bad) (bad) movsl xchg pop dec cmp js xchg mov icebp pop cmp or std loopne cmpsb repnz mov ret pop ret insb jge out xor sub mov pushl addr16 pop inc push push dec xorb dec int3 incb notl sub push add pushf outsl punpckhbw cwtl cli mov add dec mov sub push adc ficom out stc movsb enter outsb mov mov test add pop adc add test jle call in xor popf test and shr push iret ds addl ret movsl xchg sbb test push outsb jecxz mov jo ds out sbb je sub sahf data16 jb xchg mov add or or pop sub fisubrl lods ret pop stc inc sbb dec add repnz adc imul mov hlt fidivrl sub mov shr xchg aad add mov icebp xchg cmpsl shrb insl push test add pop xcrypt-cfb cmpsl mov ret mov and inc mov in dec xchg mov flds rorl or roll add inc pop clc or jle push push sbb dec addr16 jb mov test pop pop jmp dec int mov pushf add (bad) fsubrs add repz ja adc sti jecxz pushf inc inc andb dec pop rcr inc sbb aad hlt mov push jmp xor pusha pop imul adc sbb push cmp push cmpl clc sarb (bad) sub sub or add ja sub sub sbb adc punpckldq or xchg sbb int3 lahf es pop mov lds add cmpsb xchg lcall hlt dec ss and test hlt aas rcll xor cmpb jecxz scas mov mov or int mov sti inc nop les xchg dec inc xrelease dec andl mov cmp mov cmp add adc push sub xlat pop out cvtpi2ps aaa flds jae sub pusha loope sbb mov pop test xchg mov dec adc xor add pop aas xlat int inc add int3 scas lea sbb movsl mov xchg mov add push sbb fiaddl sub lods dec xor jge push movsb push scas xchg xor lock add popf pop int3 add mov sub dec add cmp cwtl int3 add mov xchg add pop outsb out jns inc popa sub in cld out add rcrb cmp cld adc add sbb ja sbb cmp pop add iret push jg int3 sub aam repz add inc sahf xor sbb push add xor mov movsl mov xchg add pop jecxz pop jno adc add xor cld xorb pop sub mov repnz add popf pop fsubr lock adc lret adc add in leave inc add xor add push inc xor pop pop cltd dec add cld pushf cmp fidiv add bound leave cmp pop push fcmovnbe push testl stos iret mov cmp mov mov add (bad) sti and add cmpsl lret dec outsl sbb xchg mov flds dec pop pop movsb mov or bswap mov call jnp lods sbb or add lcall cmp jns cmp test sub hlt (bad) jp add in sbb inc push mov add push mov mov and jg (bad) fs loopne cli loope test popf repz out arpl add inc jns add and fdivs cmp test sbb push popa clc mov mov pop sub fbstp and pop rorb cmp or mov test xchg sbb dec push (bad) adc fcomp mov arpl push xchg sbb xor push out (bad) pusha rolb inc clc and orl les adc pop fisttpl fnstenv inc shl dec lods dec jno add popf movswl mov sub lret icebp mov sub call (bad) xchg or mov jp add in cld add xor test add nop mov cmp mov xor aam imul nop sarb inc push xorl lods sbb out loopne ljmp add xor enter adc movsb or inc ss inc cmp push or inc add cmpsb or pop testb and hlt fldl pop pop mov mov xor lds divl mov popa jne outsl rclb xchg iret mov or or scas subl cltd mov push mov push mov sbb inc sbb cmp add pop std mov gs xchg cld jns sbb jge mov fnop mov fsubs mov es dec je cltd repnz push mov (bad) add fs add jb clc add aas dec imul jnp cs dec loop sbb push jno dec xchg clc xor xchg inc dec mov (bad) sub sub add das mov and xor sub xor outsl add xor and push imul iret nop or stc sub pop add sbb jne and sbb cli pop (bad) xchg leave mov jo xchg addr16 subb out sub add add xchg addr16 pop adc add adc cmp push pop or lods loop adc mov loopne or mov push dec stc or mov movsb mov jo cli lods insb jo add add leave aad jmp cmp rorl sbb push add pop jmp (bad) push int3 int lcall subl ret inc add sub shll cmpsl jmp sub xchg je dec jle testl sub out ja add fcomps mov pop sahf add fimull (bad) lea idivl les sub sbb stos je rclb cmp add test xlat andl sub adc push or inc outsb out add push mov mov repnz add mov inc jbe and and mov popa xchg xor lret jns mov and add daa sub jecxz push push add dec push mov lock call nop mov pavgw and add add rcrb imul into jmp or js sbb cmp into mov add test test xchg pop add movl mov cwtl (bad) mov or cmp ror xchg lods fcomps add cld mov (bad) sti sahf xor scas mov mov (bad) sub add leave icebp lcall jecxz ret mov add sub and bound mov xor jo mov lods mov adc sbb push ja add dec cmp rcrb push mov je and sahf (bad) pop or ja addl lods movsl cmp pop mov fistpll inc fldenv pop dec push popf mov mov mov add push rcll or add adc out or xchg in ja add paddsw lods ror (bad) dec or dec rorb ljmp mov add dec ja (bad) out cmp cli loopne push cs inc add mov ret add jmp dec sahf sti (bad) mov inc fdivp add das int ljmp fdivr (bad) push push ret mov and ljmp sbb push test jbe pusha pop mov push repnz add cli insb add aad mov aas push dec adc nop add or xor xor sbb mov cmp or cmp jp and mov jp or das in andb mov add xor inc dec jo cmp mov stos push xor sbb jno cmpl lret or mov insl xor scas aam cmp jg add stc sbb cmp test push sar rclb push pop pop std pop and into (bad) lock sahf dec add lret add mov mov and mov leave dec inc (bad) or cmpsl scas add movsl push imul inc pop push out fidiv push cld into sbb or or cs inc loopne xchg mov mov pusha scas test pop outsb adc add xchg cmp cld gs rcrl add movsl pop lock mov xchg test cmp push enter pusha pop jbe sbb mov adc xchg fwait js imul lcall movb stos adc lds sub xor pop cmpsb cs roll mov scas pop pushf shll add test cwtl sbb jge imull pusha sub push in test or or cmc dec stos jbe test pop stc add scas push jno (bad) push jo mov test lret xor incl lock xchg and pop movsl call pop or cli ljmp sbb lds inc pop enter jno pusha popf lock in and add loope movsb dec loop add mov frstor mov in pop add inc jg test xor mov nop sbb mov (bad) sbb inc add dec int3 xor mov movsl push xchg cmp cwtl add shll mov jbe pop add iret sbb sbb cmp hlt jae (bad) xlat fdivp add mov and mov enter repnz imul test add cmp aad iret mov out sub add in or add xchg fsubrl mov push cmp clc push pop mov mov xchg sub dec xor mov mov adc sub sbb sbb push pusha cmp add pop jp mov fstpt loop add imul jl in mov int3 packsswb and dec clc pop repz push push cmp inc add stos addl jae mov clc sbb jno adc xchg call nop aam mov stos in jnp inc and enter ret sbb pop (bad) xor dec xchg mov or addl push mov cmp add adc mov mov outsb jmp cwtl jmp rcrl sbb xchg pop lret cmp add sub adc cmp or xchg daa pop scas sti lea rcrl xchg add js jnp and aam sahf jecxz xlat inc or add fmull rcrl jns mov mov mov add push and xor insl xchg add push fwait add add add popa lods dec xchg jae and jns sbb inc rcrl pop cli sub mov fsubrs add outsb sub push inc hlt adc repz lcall mov xlat jns xchg push (bad) mov xchg repz add mov mov inc adc add cltd aam pop js in out pop aad jnp pop sarb (bad) cmp loope aaa sbb dec add (bad) rclb cwtl imul add dec adc xchg es mov push iret test add adc dec lahf push mov jp xor loope pop loopne shrl xor cmp (bad) jnp push add push xchg push leave mov mov pop insl xchg add push cld push push cltd adc leave jae push js add mov xlat cmpb add inc push faddl adc fnop data16 rcr dec add mov lret add inc and sbb push lds orl inc pop std push in sub in cld add arpl sub int3 insl shll in adc mov nop movsb dec mov nop push or inc hlt and push and dec ret push pop nop movsb orb sti pop lods push add rorb cli xchg pop stc inc adc xchg icebp jmp das sub dec dec daa insl pop mov adc repz out cs sbb jg dec sarl fidivl dec movl cli test mov xor ret lahf add aas test dec jne dec pop xchg add pop or (bad) jb inc adc and jo sbb lds in addr16 popf add or add (bad) lock out out int3 dec mov mov out aaa inc cmp clc xchg dec les mov mov mov sbb fcmovnbe into int push jo mov mov out jp pusha push or mov dec pop push sub js pop jmp lods xor inc mov xor pushw faddl add sarl xor loopne or pop ljmp and add and mov jb inc jb add inc or bound (bad) out xchg (bad) mov lcall and add pusha sbb cltd jae shr movsb test add pop stos cwtl jb sub mov sbb mov test push test aaa fisubr stos fidivrl push movsb xchg inc pop push jmp (bad) loop (bad) xor or outsb inc pop mov add dec jle add popf and dec ss push in add test pop add dec mov inc or sub ja xchg add rcll lahf jo add dec adc test add inc andl aas add mov push sbb out jmp ret stos bound and mov call dec pop jg xchg and les (bad) mov (bad) ja fldt hlt mov add ljmp out xchg cmp push xorb scas sbb push mov xor stc push cld adc add jge insl add mov xor xchg out out xor mov fcoms cmpsb mov and or add clc mov mov jns adc (bad) dec and lgs pop add mov pop push add nop imul pop or aas imul and add mov mov xchg sbb jnp sbb push mov les inc or fistpll (bad) push and and dec mov rcl pop mov (bad) add inc mov mov (bad) pop test adc pop push dec icebp inc add jne fidiv and mov pop pushf cmp fadds in sub (bad) mov mov je (bad) jae popf test in add or jecxz lahf push jmp or push (bad) mov lods add sub add mov int3 dec add stos repz sub ja add sbb push sbb jb call add push sti insb xchg je mov mov cld fiadd (bad) push mov pop (bad) int3 sbb mov mov sarl mov add adc xchg or inc add and xchg popf adc lods add ja das xchg jo jmp push add mov or mov cs add sbb and pop fdivs inc sub cld lods add fisubr cmp hlt fstpl fdivrs xchg sbb in or out outsb faddl pushf pusha adc add push loopne test push clc adc ficompl stos cwtl ja push cmp jmp xor enter add or inc lcall cmp dec test out cmp pop popf adc test inc dec repz push cmp cmp hlt add enter cmp fs sarl jnp adc jp or je sarb fsubr popa mov jne test call or mov sub mov xchg jnp jle pop jp popf add insl mov cmp add jp mov lret sub sbb add jle (bad) sti dec ret add leave adc add push fwait and out add and daa push xor lds cmp pop ret sbb sahf js pop inc xor xchg and (bad) jb addr16 add pop dec adc imul mov mov add jmp mov add add push mov (bad) jbe jp dec pop xor in roll mov lret jl and mov call (bad) daa xchg enter inc add cmp push add or mov loope adc and in adc jl lods pop mov or (bad) outsb inc fisubr pop or popa sub je push frstor dec or add cmp and add ja add popf (bad) mov pusha inc sahf mov (bad) jne dec and fs mov pop and xor mov fimul insb add mov movsb (bad) rolb fdivl xor sub pop add xor test cmp add stc jne mov add inc fs addl in addl add (bad) or arpl add cli (bad) cmp push jmp jnp pop dec mov mov add repnz add pop mov mov aaa mov xchg shrl pusha inc into daa add inc cld (bad) icebp sahf cmp aam ds cli jb insb jecxz or lods mov push add or sub (bad) mov addl xlat xadd in inc divb movsl int3 sub adc fild test jp and add add jle push je,pn or xor mov sub push add in ljmp lods push add incl out daa add insb lock cwtl jno or push ret mov mov jnp clc (bad) mov dec sbb jp js add sub mov jge out add xchg jne cwtl dec faddl insb js inc jbe out add jb cld inc sbb out add addr16 (bad) xchg cld popf pop or out pop (bad) xchg add add sub fistpll fwait jo call mov lds out and gs fimull add flds shrb push enter push mov fdivrl dec outsb sbb mov or int3 in stos jnp scas aaa mov push mov add cmpsb xor push adc jbe mov mov arpl dec rcrb call and rcll and push xor cmpsb lods std jmp jecxz call jae pop cs rorl enter add mov jo mov jns jne in xchg lock add and flds out or inc xbegin cmc sbb dec pop mov pop pop enter ljmp mov orl pop aas mov inc sbb add push or xchg pop adc jo sbb sub dec add jecxz repz sbb push inc jmp lods and xlat xchg test xchg sbb push mov adc ljmp cld cwtl outsb int3 insb cmp adc sub fidivrl cld add mov notl cmp sbb jecxz sbb scas mov dec push dec add cmpsb cmp dec js inc dec pop sbb xchg aad scas mov mov jo mov lret add lock add adc dec jo xchg aaa xchg insb aad loope lock ss mov pushf dec push fadd (bad) in mov fsubs ljmp xchg inc stos out push mov fidivr xor mov or mov adc mov mov test push mov mulb ja push adc xor cmp add ret mov maxps push data16 inc out out loopne pop mov pop push mov xchg mov lods std add stos je cwtl add mov mov fdivrs adc push push cs popa add es ret mov addr16 mov jp dec das xor imulb incl loop jne sbb sub pop sbbl into adc or inc pop out push out bound icebp sbbl lds fistpl (bad) test int add scas sahf xor add ljmp ret in add xchg adcb xor fnstcw add cmp jo ret adc jle fmulp add add (bad) inc dec jnp nop jmp fstl movsl movb adcb xchg cs out pop in insb add inc and and pop sub jp fwait add (bad) mov idivb dec rolb aaa cld pop add add clc or pop rcll mov mov add loopne lahf xor aad lahf add cld and or (bad) ficompl int3 in sbb movsl jge xor mov pop lds xlat lods sar sbbb hlt iret add dec (bad) mov inc xor cmp enter inc and aaa jecxz inc cld fwait aas add jno iret nop ds add ja jmp out rcrl and andb outsb (bad) (bad) push inc jbe jge add adc les or fwait sbb inc mov sbb fmull (bad) pop adc leave mov or nop or cwtl outsl or ret (bad) je pop or in or xorl cmpb mov pop or cs fldcw cmp xor adc sbb verw (bad) jno gs mov in (bad) fs ljmp add xchg mov inc gs cwtl add pop push or pop out aam pushf mov push cmp mov gs add mov push lods addb or lcall (bad) mov dec shrb andb test inc lock repz cmp xchg mov inc jno clc pop (bad) movsl popa enter push add out push loope jo xor jo fistpl add add cmp scas ret (bad) xor push hlt or lds call add imul lcall jns movsb mov imul jmp out push adc cld popl inc lahf jno scas outsl jp jge add jns lods js jae cmp inc add out sub aad and out (bad) sub addr16 clc sbb pusha push enter pop sbb js in xchg mov das aad loope jmp jmp inc xor or inc and mov cs mov xor add sbbb fs pusha lret stos jle jae add and inc sbb aas mov fdiv sub adc clc mov inc in cld decl repz add inc mov push lods mov or xchg fild in or cmc jnp or mov add int out push js cmp push lret cwtl sbb push bound push and addr16 pushf cmp add das lea mov dec es add pop add sub aas cmc or and sub push add inc fiaddl xor scas lcall cltd add (bad) movsl not push dec cmpsb add push and lea adc mov into cld sbb dec daa lret xchg mov stc rcr add sarb xchg add je lcall or xchg in outsl fidivr aas add push sbb inc add das ja dec cltd jl add mov mov testl (bad) shrb add mov add mov sbb hlt xlat inc lret js les fwait sahf sbb (bad) push jae ljmp aas add push add cwtl xor stos in add jb mov pop pusha or xor aas dec cltd and stos je add inc repz stos sub add nop out xchg cmp scas lea and loop adc (bad) lds mov sub mov adc fistl add sbb insl sti flds pop aaa push add or or cmpl js js add adc enter loop xchg mov out movb scas popf jo aad add push push inc es add aam out lods sarb and push add jl add test and fmull xorb fnsave xor sub xor add les cmp or xchg aas pop sub ss xchg shl add out adcl push add push and out add fcom loope lret add jnp nop pop sbb int3 add xchg jge fldenv push cmp out inc clc add lcall test xcrypt-cbc cmpsl xchg jl and stos xor loop out dec rcrl lock dec sbb fisubl movsl mov idivb add cwtl fildl push add sbb es jo add push push push popa repnz sbb jmp in jo popf cmp xchg loop vmovq int call add (bad) (bad) cld cmp xchg (bad) xor or les mov pop dec cmp push mov rcrb mov ret sbb add (bad) mov test xor hlt idivb pop mov add mov out mov jnp jl (bad) cmc add stos mov push add icebp mov mov add (bad) dec lea xchg loop mov aas iret jne sarb cmp clc jnp inc sbb jg dec test gs jl add mov pop mov test loopne iret sbb cld mov sub sbb cmp loop pop or xor mov je aaa lcall add cmpsl or pop cmc add fwait jp add in jmp test mov adc sub (bad) adcb jne sbb mov jnp push dec adc sbb scas xchg fidiv pop jmp pushf test add sub sbb insw mov pushf in sub add (bad) jle pushf pop pop pop push mov or sub inc add add frstor adc add shrb mov cli ds jb add pop mov (bad) mov mov mov cltd push pusha cmpsb push mov cld ds pop addb mov sub sbb aam mov sbbl in sub pushf mov out outsl mov inc jae nop addr16 loopne aas repnz add sbb fucom int3 add repz mov std inc stos add cwtl aad dec push adc outsl out inc pop push jns jnp cmp or insl and pop sbb push xchg mov jns stc pop or shrb call data16 stos ds dec xor add addr16 sbb add imul and insb mov sub inc bound add jb add aaa jne mov jge loop add stos sbb mov out cmc cmpsl ficomp push out movsb inc add fildll (bad) stos bound repz rcl enter push leave dec jno (bad) cmp outsl test xor add lret push xchg mov add (bad) in data16 xchg or mov dec add mov and jecxz sub push and (bad) dec orb and add push rolb dec popa pop pop or ret mov bound sbb sahf jle inc outsl and sbb loopne sub (bad) ret test mov testl arpl push adc lahf or inc add pop loope cmp jp leave jl mov gs and test addr16 pop aad lock add call fwait in or (bad) sbb and clc mov push add (bad) lock or aas hlt les in add sub out leave (bad) xor sub xor std mov dec add cmc xchg jmp inc fcoms lods inc or popf les add add fisubr setnp dec cmpsl jns add mov call add loop cmp add fcomps add das (bad) dec sub mov xor jno les add and add test push enter xor inc stc dec fcomp adc loop rorb cmpsb add pusha aad add jb cmpsb add jl xchg add mov fisttpl cmp add outsl cmpsl and repnz (bad) leave repz dec pop rclb shrb bound adc in add popl xor sub pop scas and shlb jb rcrb lcall clc adc add mov lock push cltd sub add add xchg adc mov ss lods divb fdivrl add cltd (bad) cld lcall sbb xchg jmp mov imulb or sbbb cld aaa insl dec dec and adc sar dec pusha or pop jmp jae in pop jbe,pn xor xlat cmpsb sbb shrl xchg xor or push jbe or dec imul lods loop add stos dec insl push je clc je add mov pop rol cs or or arpl jge xor lods enter and mov loopne aas cmpsl add cmp fist sbb pop inc orb mov mov mov ja jecxz add imul and jno add mov sbb loope insl add (bad) jge dec std mov lods add rol cmp add mov dec lret ss jae clc lods add mov ds addb mov xchg xor xor jl cmp push xchg mov idivb add or sbb shlb nop push push cmp lcall out aas add repz and iret push push out test mov xchg int3 mov popa add aas (bad) cmpsl subb lret je loopne jb test rorb or mov dec bound jo movsl dec (bad) fnsave jno scas jge add into test inc and add sub sbb insl inc pop inc jecxz sbb pop push add cwtl inc mov nop punpckhbw mov mov adc (bad) adc (bad) adc cltd ja js dec xor scas movsb xchg stc js add and imul push roll ret jp dec popa add or aad add out add popf hlt cld out push add lock or into testb mov imul aam mov clc ret push mov fisubrl mov addr16 pop pop add xor or stos insl jl add ljmp push add into xor fisub pushf dec mov hlt out mov adc repz stc sbb add or add int3 call mov in jle js add mov jp mov add loopne imul insb pop jl js enter xor jmp stc xchg add out add ret fs add jecxz xor insb fstpl and push add cmp fadd ret movb push and and rcr (bad) pop xchg xchg inc (bad) mov sahf andl sbb lret int3 add je aad pop rcrb jge fiadd adc das push xchg or and xor pop in sti dec mov rcrb pop icebp push stc xchg pop dec pushl test jge add lods inc push js and xchg and xor pusha add std aad push inc clc add dec push cli pop cltd mov std js movsb push pusha cmpsb sub loope push fwait sub jb or mov loop rorb (bad) mov incb pop lcall push arpl outsb popa jb pop add push aaa add xchg add andb in in stc fcoml sub popf gs push aad mov repnz xlat jbe add or pop add inc push add stos pop mov inc imul mov add lods jecxz andb or cmp cld test or outsl aas ret jbe or in inc imul xchg inc jae add sbb sub xchg std mov ss subl jecxz push repnz adc aam or dec xchg out daa push inc hlt mov xor add pop sbb bound adc or sbb out sub add jmp push mov call sbb mov add stos popf outsb (bad) clc inc mov test adc adc jg adc sbb add loopne cmp or ljmp xlat lcall push mov loope mov loopne push and loopne sub pop cltd xor ss das (bad) mov add in nop aad out movsl and ss cmpsl mov jl sbb jae add mov inc in ljmp rolb (bad) pop xorl adc adc push rcrl add cmp iret adc xchg inc xchg lock mov clc add leave (bad) cwtl adc xor sbb aaa and sub add fwait paddusb dec adc jp pusha fcomi pop push add mov jnp add das cli push add sbbl les jge xchg inc push enter cld ljmp aas jae jl les aas bound cmp scas movsb mov addb inc sub cmp add fistp xlat aaa xor lret bound ficom and add cwtl jb add enter insl pop (bad) cli call xor adc xlat enter shr or gs add call xchg adc inc lock add sub dec sub or js push clc and add inc adc jp enter les sub add clc cmp lock pusha aas mov mov xchg fsubrl es cltd testl inc and (bad) add xor (bad) push test lock test notl xor cltd add inc cmpsl mov push ss imul mov jo mov mov xchg int3 or add scas enter and cmp add pop mov sub xlat pop push xchg out (bad) or xor push mov imul cmpsl cmp add adc nop cwtl push out sbb je add lock addb fcmovnu fcoml cmpl adcb jns xchg pop add pop push jno adc rol adc and insb or inc add xor aas mov xchg and adc mov (bad) adc mov sahf test andb cmp add mov xchg int js loopne lods jge imul out pop add pop jecxz add icebp mov daa or test loopne hlt fadds jg incl xor roll jo aam out adc test pop aad mov enter mov adc add jns lahf cmp fsubs jne (bad) adc inc push add stos xchg imul sub push lea add (bad) es pop dec rcl add les stc dec pop pusha inc inc push sbb sbb cmp xadd xchg add clc loopne add int sahf pop (bad) mov pop add aas mov mov fs add scas push stos add sub mov add incl dec pusha movsl lock loopne add hlt mov sbb (bad) pop mov adc sub push sbb push jbe ret fldl sti pop ja in push out add jge fmul mov insl add sub mov add nop and je dec aas add xor popa dec mov in repz fs scas push add xor lds ljmp jnp push aam dec cwtl and mov pop popl daa ret negb stos (bad) adcb icebp add pop loop sub jmp out push outsl push leave pop mov sub nop loop cmp sbb in xchg dec lcall push sub dec pop mov popa (bad) pushf shlb dec cwtl cli xchg or dec mov rolb or add xchg add inc mov push push popf psrld iret jle jecxz movsb mov jns aaa push pusha insl cmp addb pop (bad) stos adc aad xchg orb mov pop dec icebp pop dec lock fcoml dec add or jecxz sub idivl xor aam sbbl movl inc xchg xchg xor (bad) xchg insb scas or inc mov add (bad) lcall stos add popa push or xor out cmp pop push xor (bad) out or xlat subb iret add add in lds and push in idivl mov outsl sbb (bad) loopne sub lock das and sbb push add icebp mov push aaa loopne adc (bad) mov es add les cli insl sbb add pop cmc je cmp inc add dec xor and int3 mov ja sbb pop (bad) sub je fdivp xor or xor or insb pop or movsl pop (bad) mov inc (bad) mov cmpsb adc add dec dec inc inc xchg add rorb jne into jnp sbb and sbb pop add lea push or loop mov roll lahf pusha fwait cmp (bad) flds add or shrb add cmp fsubp sbbb add mov xchg rcrb add in and push push add mov sahf je aam mov sbb sbb xchg mov std mov add shl sahf leave adc sub pop scas insl sbb push lret xchg orb sub jnp test in nop lods loop pavgb inc lods rorl lret mov jbe (bad) clc xor cmp cmpsl cmp (bad) testb add pop xlat imul mov fcompl add xchg enter xrelease push (bad) push cmp outsl out inc inc or inc insb adc jno mov (bad) ss xlat push in into add cmpsb fsubrs push mov lods add add xor pop jge add jns fadds lea scas add mov ficompl repz xor sub shll nop cmp lret add xor aas jg mov rol jecxz and sti sbb sub mov cmp loop pop or insb test and add ja cmp lods sub fsubrl add fiadd iret sbb out xor inc mov repnz add pop push lock cmpl loopne dec cmpsl mov ror jecxz add xor xor arpl push mov mov sbb pop adc mov stos fcoms push sbb pop rol jae dec push movl mov test clc jmp xor add add mov add jecxz jno and fiadd push movsb or mov add pop xchg inc mov dec or stos sbb sub dec add sub rorl add scas pusha add add and dec pop sbb adc insl adc or adc outsl mov xchg outsb add inc loope neg xchg sbb iret add push lods repz mov rorl add shr fnop cltd jnp or ja shrb and sbb bound pop add test mov add in sbb push fs pusha xchg leave fcoml add adc out or cli stc adcl cmp or sub fadds outsl nop add pop sub add pop mov push std jo int or pop push or loop inc add cmc or jg add inc std xor push inc xor jnp aas (bad) clc mov adc subb pop push (bad) mov rcrb sahf adc add mov sub lea test and andl push xor loope pop sti add loop add mov (bad) mov cmp sbb or lret in or xchg jb ljmp mov dec add outsb fisttpl add (bad) sti int3 lock movsb cs xchg mov test mulb lea pop cmp jo push call xchg imul test cmc add add add (bad) add icebp pop sahf adc push cltd add jmp aam add cmpsb nop stc xchg icebp push and mov add hlt jmp call mov int3 out scas add jnp mov pop sub mov ja adc xchg dec sbb lods stos mov stc aam inc add cltd icebp les mov int shll fs xchg cmp dec ljmp jns lds js add imul sbb or and fs gs lock mov stos inc pop adc loope outsl push or out mov mov or fcom fnstcw lahf inc subb add pop mov xor clc mov mov movsl cmpsb stos mov dec sbb xor push nop out pop jno pusha add add push or pop xor das fwait and iret loopne (bad) repz shlb cmc mov mov mov bound cltd nop sub into add mov rolb jo icebp xor lods sbb or movsl fimul lret aam push jbe and sbb aaa or ret shrb inc cmc ds or aam push mov pushf mov jmp lahf push in ret mov mov or movsl rcll (bad) fs int3 xor mov or add cmpsb sarl push daa pop mov adc xchg add bound sub rorb icebp ljmp cmpsl js mov push decb cwtl add lcall xchg pop jge or (bad) mov pop add mov pop mov xor add fdivr pop cmp mov pop add jp mov out cli mov jg add xchg inc and fwait lock inc or test dec pusha sub cmp inc pop pop push sarb and jno (bad) popf and jg out insb push nop nopl jge je add rclb mov pop add add jle mov lods test xchg mov ds ja add cmp lds lods cmp adc out jae push pop loope je cmpsl lock inc sbb add xchg sub push xor lds xor add mov adc adc lds out jnp mov or and add imull mov lods les xchg push inc rclb pusha pop cs (bad) mul dec inc add in imul adc mov je mov jnp dec sti (bad) sub add jns add jb jge add sbb enter add repz add (bad) out sti mov adc stc rclb shr rcr add xchg and sahf iret out adc outsb sbb sub fldl add xchg scas xor add dec mov pop sahf call (bad) mov lods inc jl add in mov dec add lock push and mov loope lea cmpsl loopne xor or ret xor aad bound cltd add pop iret icebp jecxz aad xchg cmp mov push mov pop std sarb nop add daa inc ret mov adc stc sahf add pop jb cmp cmpsb insb inc sti iret mov mov add int dec je punpckldq cmp ret add jnp movsb sub in jl in mov dec cmpsl scas pop mov sbb sbb les scas aam hlt aad xchg cli pop push sub cs or clc dec aaa in cmovle fwait ret sbb xor inc imul xlat fmulp fildl push lcall pop in jl fist pusha and fisttpll inc cmp add sub call add iret rcl push (bad) fistpl aas test cwtl das cmp add sarb loopne sub jmp repnz movsl push dec daa mov fiaddl lcall or imul add jb dec xchg cmp gs lahf call push add push pushf loop dec mov adc sub pop fbld pusha out push and repnz add jmp xchg push pop call sarl cmc xor mov cmp pop push lock pop out and or cwtl pop jmp sbb push cmpsb test dec adc add out and jle add rclb in in jns call shr jecxz dec xchg fs cs add leave mov cmp pop push push sub push movsb ret or enter mov add xor or loope push aad pop les jo rorb ret jbe pop push mov orb imul add push add pop nop xor jge add xor fildl cmp xchg loop inc add and or fidiv xor nop push (bad) loopnew icebp aas inc aam pop add shr xor or scas fimul (bad) loopne sti add subl pop enter ret mov adc insb lods out dec push (bad) or aas push cli xor pop (bad) add sbb xor decb mov push rorl mov or push (bad) std loopne jmp adc pop sbbb insl push adc cmp add lret mov mov (bad) out aam loop mov sub xlat mov cwtl fdivrl (bad) shll or push push (bad) rclb add cmp (bad) pop scas xorl xor mov add dec mov (bad) cmp (bad) lcall push adc loope adc add out pop stos notl lret je mov data16 notb inc sub mov pop xor add push mov jb add jmp cmp ret repnz mov sub movsl cmp pop or popw pop adc pop mov inc jmp add dec dec add pusha cld pop insb add movsb mov cwtl add dec test outsl scas fmuls testb loopne flds pusha mov push fldl jb add mov mov add ljmp cmp cmp mov addr16 jg sahf inc add lock mov sbb stos sbb sub adc pusha mov inc lahf sub fisttp add addl add flds in pusha ficoml add shl scas aaa sub add dec cmpsw add push push fs push sahf push scas addb lock addb icebp ret arpl scas daa mov roll popa pop add ds pop sahf in (bad) popf std sbb fsubl or enter pop mov or inc or pop (bad) ljmp mov mov sbb (bad) js imul lret je out repz sub clc sbb icebp jno sbb jnp cmpsl push xor out in in loopne sub loop aaa clc sbb pop (bad) in test mov cmp cltd daa std add loop sub mov loope push pop pop mov jge inc call cwtl pop (bad) dec ds adc xchg mov sub pop in movsb add sub adc popa cmpsl es iret push pop mov sar inc jae lcall xlat lea hlt jo mov cmc pop push dec out add lcall js (bad) divb in into mov dec push sahf or imul int3 jnp adc popf popa flds pop ds int mov or add or add mov scas mov and or inc (bad) sub jecxz add je rcrb jns add cld push les pop pop or push lret pop dec pop lret mov or fscale push arpl in add ret call popf adc pop jns js lret sahf push cmpb jmp faddl mov mov dec aam repnz jne add pop inc dec das dec sbb ja sub mov push pusha adc insb scas lahf jecxz (bad) add mov add lds inc add repnz outsl add adcb clc sub icebp arpl fistp add pop jne add mov sub add pushf int3 movsl pop jecxz outsb add dec xlat jne adc clc sbb out mov jge mov inc mov cmpl lock scas out mov cli call add int xchg mov inc mov jge cmpsl or mov stos inc adc pop add jae stc cmp inc add inc lods sbb nop lret mov xchg hlt pusha sti push add xchg das (bad) mov push nop add xchg jle dec mov push insl clc jno pop test js int fdivrs insb mov cmp std ja push add aad mov das sbb pop xor pop dec imul push out inc push xor mov (bad) push in into add cmpsb and (bad) jg add int3 bound mov pop sub inc sub arpl xchg aaa fild icebp jb adc fsubl inc mov or daa dec sub sbb out and mov cmc call push daa dec lea add fisttp mov push ds add and push inc add out push xor mov out mov dec test fsubrs add push xchg cmc mov mov montmul cmpsb add push popa mov ret jnp add pushf (bad) mov je add jl add ret jmp stc movsb adc adc (bad) stos popa xor and scas rsm aas lret (bad) inc in repz mov xchg jmp and xchg push add push sbb movsl inc nop scas and add cmc lret pop xor pop add mov test bound clc addb add jle (bad) data16 into or mov fcoml cmp sub mov jmp hlt test add loopne idiv add mov adc clc out sub adc sbb mov das jnp loop add push ret sbb dec xchg or scas jae mov rolb fisubl dec sahf outsl dec ds faddl jp (bad) pushf andl push jbe mov jge or inc dec (bad) jle add mov mov movsl xchg scas push sahf xor cmp add and add fistl mov ljmp pop pop sarl and jnp pushf mov xor cmp pop adc hlt cwtl adc sbb add dec xchg mov jl fs or rol add lea push (bad) dec mov jo add sbb adc add mov int3 and addb cmp (bad) or test xchg xor mov (bad) or add add add addr16 ret call add xor pusha (bad) outsl cwtl xor dec sbb mov ret div ret loopne jnp or out mov lcall add mov sar dec mov ja add aaa addr16 enter jl or sub jae add lds pop mov pusha lods mov (bad) aaa push sbb sbb imull add imul adc inc cmp xlat add add and add add pop and xorl dec cld add push adc jno mov jmp daa mov push dec popa inc dec push mov push pop jp add std add mov lahf rcr fwait arpl in mov imulb test out sbb jge cmp divl je add int inc add les enter add push arpl xor xor pop test pop inc lods cs or adc enter add xchg xchg pushf aad in add mov clc mov aad sahf xchg cmp pop lods sbb test mov xor and das insb fmul fucom in stos test dec leave into (bad) mov in push and sbb stc rep inc rcrb dec mov lea (bad) push sub add add loop and and xchg or (bad) in mov in jae lods xor (bad) xor adc inc pushf inc das mov jle (bad) sbb loopne sub add push stos add out lret pop dec or and iret add movsl add lcall sbb in pushf add leave add mov and cmp les cmp pusha lds loope cmp and cld or ss loop push dec push jne xor or bound mov aam loop adc xor adcb sub stos cmp nop insb xor adc es sahf or ds sub test inc and es aam push cmpsb fmuls inc xor sbb mov add sbb xchg jmp cli dec or sbb je mov sbb cld aas outsb push mov pop add pop ljmp testb iret stc or jno and add adc cwtl arpl fdivrs and stc pop inc cmpsl jecxz insl xchg mov inc aam or test loope and cli sar ljmp push adc pushf add cwtl imul es cli dec xorb icebp mov or mov psrlq mov add movb add ljmp pusha inc and mov sub or cmpsb movsb repz mov cmp inc ja inc add lcall sbb leave adc ret inc (bad) mov and scas lds cmpsl or dec ret inc sub and and ficoml iret adc xchg lret hlt ret or inc mov add int3 sbb inc dec jmp cmp flds ljmp sbbb fildl lock pop repnz adc add cmpl shr pop lds add add adc mov sbb mov les (bad) arpl stos ds add in cmpsb push lods (bad) mov (bad) scas das test (bad) mov push popf pusha xchg inc xchg jb sub (bad) xlat mov xchg (bad) fistpll ret mov lds test xlat and mov fldl pop iret shrl test cmpsb pop arpl rcll or or mov add inc or (bad) adc mov out outsl inc jns outsl jmp push mov test popa dec out mov in dec xor mov pusha mov push and mov xchg xor data16 ja in jo ficom hlt rorb mov inc cmp lahf and scas jbe mov cmpsl or fwait add mov test xchg aam std xor or xlat jg add or fnstsw scas add inc cmpb imul xchg and and js nop pop (bad) cmp popf rclb sti mov mov jg insb push scas xchg andl (bad) sub add and add push outsl push push dec cmc and inc sbb and rolb sbb das ds call mov push call mov not cmp loop add and mov push add pop xchg pop out fist mov pusha push adc and gs dec lret stc pusha ja sbb add and mov sti iret lcall in in pop insl inc jnp add imulb lret lret cmpsl out paddsw mov aad mov or xchg or or adcb jecxz jge adc add jbe xor dec mov mov cld mov fs or push stc add ret push call test rcrb cmp add stos sub call add cmp scas push mov dec ret dec mov mov mov rorb inc push (bad) xchg sbb xchg pop lret addr16 cli sahf fwait add ror je cmpsb mov rcl loop lock push add push xchg or add fimull rcrb push js int3 sar sub sub aam mov bound push xchg clc fs adcb xorb jg ljmp xor cltd and fsubrs mov inc int3 lcall push lds ret les lock clc icebp xchg cmp mov jo add fstpl xchg ss sbb cmpsb orb insl mov add cmp mov jge add jl and scas out jnp rclb mov or sbb (bad) ljmp lcall sarb sub std and mov ret mov into bound mov arpl pop lock sbb push js mov fistp lcall xchg add and dec mov cmp fild js loop dec cmpsb ss add bound clc xchg lcall lods cmp xor xor ret sub pop jle mov jbe lds (bad) les roll sbb add mov sti daa ja pop mov rorl xor inc jbe movsl fimull jne clc adc xchg xchg pop aas leave in cmp dec call add rorb std and in lock hlt adc in rorb cvtps2pd icebp inc xor movsl sub add out aaa sbb insb rol inc mov xor cmp pop inc sbb mov pop movsl hlt out xor xor add mov loop std pusha fisubr inc sub push ds popa jbe or add insb push push sub jmp mov call add fs adc aaa sbb icebp ret sti cld jmp lcall pop cmp add xor push (bad) outsl lods sbb push mov sbb push sti or ja jno or or std pop push inc or adc jo jl add loop fwait mov pop hlt add sbb add icebp cmp jo jno xchg scas xor inc (bad) movsb pop xchg xchg and xor lahf cmp pusha mov (bad) jb add (bad) lea lock push jnp inc or scas jb lret add inc and lods enter add xor jo push sbb mov fdivrs pop add or (bad) push sub add sbbb std stos outsl add (bad) mov aas adc hlt (bad) cli inc add (bad) into push and incl fs sub sub sub into push (bad) ds adc ror and lret les inc or or inc or insb dec idiv adc addl xchg scas in cmp adc xor mov cwtl mov enter aaa (bad) adc mov add mov mov or inc pusha (bad) repnz cwtl mov out lds xchg lret loope fmuls hlt xor lods (bad) inc or faddl sub out dec imul ljmp mov add inc xlat jp repz cmp and clc negb mov fwait add or add add (bad) cmp rcr push pop mov and sub mov test pop sbb sbb mov mov and inc fild sub out mov jno cmp out stos repnz mov cs inc mov daa inc cmpsl jmp pop adc pop out mov scas xchg pusha sbb (bad) sbb dec mov sbbb mov (bad) fadd add pop cmp fadds dec outsb out sbb mov dec push icebp iret inc loopne cmp lods pop add jns fsts out and add stos sarb cwtl cmp adc xor pop roll js sub push sbb push push lods movsb addr16 bound push ret xchg cmp pop jns jo mov hlt sbb in cli je jns add or lods aaa adc push add adc fwait imul xchg sub xor enter out test push (bad) jo xor cmp cli outsl cwtl mov (bad) push mov dec fdivl add dec outsb scas pop lret popa into dec lds xchg add push xchg add cmpsl rcr pop dec add (bad) adc add test xor adc imul jo fisttpll gs lods xor dec xchg nop and add hlt movsl mov shll enter xlat cld push cmp jbe or and push add movsl mov add cmp push mov add test pop push push popa cmp ds add (bad) into fcmovbe jno add push push push adc pop loopne cmp xchg xor (bad) pusha sti jmp bound mov and sub xchg pusha popa sbb push enter inc es jl xor hlt rorb jo lahf push cmp pop push cmpsl gs loopne dec sbb (bad) icebp add xchg xor add push int3 pushf bound jp pop dec adc sbb add add add adc push adc repz fwait push in cmc test loopne lods ja xor lock outsl inc out jb mov pop (bad) (bad) loopne jnp test add jecxz push xchg xor xchg nop leave (bad) sbb psubsw mov push les cmp mov pop icebp sub xor add add in xchg sbb stos js loop add sub xchg xchg xor nop inc cmp icebp lcall xorb bound sar sub (bad) cld sbb ss movsl add cmp push mov aam xchg xor add cmpsl cli xchg mov jge cs mov inc add push xor data16 repz sub and sub or mov cld pcmpeqb in or mov stos or fstl out or xor pushf jl sub mov loope cltd add in mov mov inc inc cs sbb sbb mov test pop stc push daa pusha xchg (bad) sbb or data16 mov push mov (bad) mov push add ret jae sbb adc fs loopne push aas sti scas imul add cmp fiadd xchg adcl or clc or fs xchg xor dec and add add inc mov cmp das in (bad) mov mov jb mov arpl mov call popa mov cmp shlb int sub push dec scas mov loopne push aad add cmovns adc add stos fnstenv ljmp (bad) adc add sub and push push push lea inc pop add imul lret test add dec mov flds sub dec add les mov pop push mov pop or je add sbb push or stos je dec addr16 add mov add fistpl fadds repz pusha dec inc lea bound add or xlat mov sub mov mov dec xchg mov pop push pop sub lods add xchg roll and rolb or inc dec jl sub fisub imul jmp into push test lock leave push cmpsb inc dec lret mov push dec mov iret add jecxz cmp fdivl sarb xor nop out cltd ret scas pusha stc pop addl sub dec out pop lods repz mov mov pop xor fstl lods xchg pop mov out add mov das sarl jl xchg adc adc stos xchg fs inc and lahf out int xor push xor aaa arpl jl mov mov adc call (bad) or sbb sbb sbb lods jae cwtl fildl orb rcll cmp sahf add jle imul aad test xlat add lods in push pop xchg stc and add imul add cmpl jle push dec out add push xchg sub ljmp dec cli push add dec pusha pop testl insl divb (bad) sahf add adc call adc jmp or daa adc faddl ljmp xchg cmp mov inc lock sbb rdmsr pop in pop cmp push sbb pop jno and pusha outsl jb push sub stos sarb mov in sub xor lods mov es mov jge in test inc pop pop jne jno pushf imul (bad) adc add stc aas out cmpsl clc (bad) loopne dec sbb lock jmp pop in mov gs addr16 add and mov and addr16 xor pop push stos lods push adc pop es inc js sub faddl cwtl and xor xchg mov test hlt sbb or xlat and or popa out jl imul sbb pop mov push add fadd xor testl mov iret mov cmp addb add ret add xor pusha and add push rolb jne imul lret and dec adc mov insl (bad) ljmp lcall inc out mov mov mov mov repnz mov ret hlt pop xor inc es loope icebp sub ds lods add js push mov das icebp test call mov mov add mov sub jo xchg loopne mov mov jno sahf inc je pop dec push movsl sbb daa enter sbb in int std sub mov test (bad) xor pop add mov dec add lret mov sbb lahf aam imulb xor jmp dec cmp or jo fisubrl add idivb push lock aam fs inc mov loop add jmp adc jle adc xchg in add mov sarb and lods jo pop cmp cli lds xor ja test negb pop lret pop jae push jb ret fld cmpb cmp insl mov or adc push add (bad) test pop add (bad) cwtl adc mov cmp jg mov jmp out jne dec jne add out add pop and pop call (bad) jg cmc or xchg add mov in or pusha pop sbb sahf mov cld ss ja or sub scas stos mov insl or and push rorb in (bad) inc ret or push scas pushf leave mov (bad) iret cld add cmp cmp push xchg mov mov push (bad) sbb ljmp dec repz pop cli nop add xor pop rcl pop xchg dec adc cmp pushf or (bad) jmp add lcall sbb pusha lock outsb aas dec add xlat mov add dec mov mov mov inc pop stos (bad) aam rcrb sub in pusha (bad) sub or xchg nop sub inc xchg shr cmp dec and jno (bad) add or cs sbb inc xorb enter (bad) addl add es ljmp ret pusha add test inc roll xchg lods pop cmp add insb out out test xlat es xor shrl mov es mov add sbb scas xchg arpl pop or (bad) pusha hlt jns sub add fs sbb hlt psubusb cs aam pop add rcrl push push jbe lea pop sub jle mov sub dec xor fsubrl cmpsl xchg push pop mov add mov mov or mull js aam mov cmp cld mov gs cwtl cs inc sbb jle jbe test lods xor xchg notl mov inc sti leave cmp fs out mov out leave inc in fs lret or add call sbb dec mov daa mov imul add pusha arpl dec fiaddl inc (bad) out mov pop lods pop or jb (bad) jae enter inc push (bad) xchg test cmp pop push rcrl sarb (bad) movsb xchg add inc inc jbe dec mov punpckhdq and stc decb inc adc dec and mov add out adc cmpsl loopne subb pop pop ljmp cmp imul pop aaa adc inc lock add push pop dec jne (bad) pop je add cli inc pop mov add sbb push add sbb out jne push dec sub cmp or pop (bad) inc push mov add scas adc add shlb loopne int add mov dec cli xor divb orb or sub cli lock pop in add adc dec xchg mov out rorl mov js pop sub mov enter mov add dec loopne into mov add mov and imul aad mov jo cmp xchg data16 xor sub lea test imul cltd cmpsl pusha and in es dec in add inc fdivrp mov addr16 dec xchg adc jge outsl cmpl data16 popf adc sti and outsb cmpsl jo mov pop sbb mov leave cmp add xchg lods pop add in cwtl out cmp and icebp dec addl push xor daa repnz or lret cld fcompl (bad) testl mov jae or int and dec test jo lret add lahf jg out fldcw cmc pop incb in pop jl dec daa or adc (bad) int3 insl sahf sbb mov in popa dec inc xorb add popf cmpsl add or jmp popa inc mov mov daa movsb repz pop (bad) jae ret sub jo push loopne and cmpsl adc and shlb pop lds pop add repnz add xor pop ja pop dec inc fidivrl lea sar out add add mov sub ret jbe cmp jge mov repz mov lods pop sub or jg push and test mov std push and and xchg pushf jp xor js call icebp fs xchg pop add ret out push lret mov dec mov test mov inc add stos in mov inc add push sbbb movsb jmp mov add inc fimul in xchg and stos mov (bad) lret test mov add mov jns cmp shrb add adc pop outsl push inc mov out subl mov out repnz jbe les xor insb or icebp or jo call addr16 mov adc dec cmp mov jmp das aaa dec sub out sub repz pop mov lock stc push aas mov pop adc mov (bad) fsubp pop push cmpsb push (bad) sbb mov shrb and mov cmp aad pop test rcll xchg pushf (bad) mov add andl imul pusha dec cmp push out jmp sub xor pop shrl mov xchg add scas nop ss in sbb and aaa rclb jg add xchg lock popf inc ret pop ret add mov cltd fcomps xor push add fadd out xlat int3 xor xchg test jo loopne sub aaa ljmp inc or jne xchg (bad) sbb dec jb repnz xlat movsl nop aam pusha stc fdivs icebp add add popa stos xor aad add mov pop enter push and xor mov sub aam jbe popa dec sbb nop inc sbb and mov or jae es mov push mov cwtl andb fcoms (bad) lea sbb xchg ffreep inc sti test and lret mov sub aam aad sub fcmovb adc dec push in lahf jecxz and sarb sub mov enter js cmp mov ja add mov in mov fisttpl lcall cmp add int3 xor adc sbb add ret into test xchg push mov mov loope arpl rorb adc add and gs jmp xor ljmp mov ja add mov add out xchg dec pop sub inc mov add dec insb add test pop mov and pop jno dec mov cld inc cwtl arpl mov push ss rorb jae xlat xchg clc add shr add cmp adc xchg insl cmp repz inc mov es daa inc test or mov and or jo add fwait std inc enter xchg push (bad) lahf faddl clc inc decb das das mov mov jbe in xor add inc jge out test add inc ss sahf and fwait add xchg lcall mov sbb pop pop aaa add xchg je xor add aam pop jg adc mov inc icebp xor test fisttpll nop or sbb mov push add js sahf in and bnd mov adc xlat xor das add mov cmpsb jno add in ror add call loope push pop lret popf leave dec in inc in je sub or add or adc mov or lcall pop mov pop and cmpsl add or addl jecxz adc or dec lcall fwait and sti aad jo js mov xor cs jbe or add add stos pusha mov insl inc add mov mov jbe loopne cli out sbb add jecxz adc or cs and inc or mov push sbb xchg sub (bad) int xor xor xchg lods sti cwtl xor test push negb mov dec (bad) jne cmp mov hlt rolb mov add arpl adc xor adc inc cmpsl jle popa je and jl stc mulb push jb mov fucomi pop pop loopne pusha pop sub icebp pop xor sbb and (bad) xor or (bad) mov sub inc std cmpsb fnstcw addr16 mov popf (bad) jle arpl ds sbb (bad) cli add hlt inc sbb add push loopne add test jb add (bad) daa hlt add push popa xchg or cwtl popf pop or enter add cmp lahf or aas cltd adc add lret lds in sbb cwtl call imul push int inc push sub rorb cmp test call mov out sub mov popf add xchg push mov jae bound add xchg mov jle std xchg ret aam lea pop push mov insl lret (bad) addr16 sub and jecxz shll mov movnti pushf cmpl sub inc add imul push sbb jmp add (bad) (bad) pop mov addr16 or scas aad push jnp cmp xchg push mov stos pop sub xlat push jl fiadd jo jmp daa sti jg stos pop add add popa inc cld js add jb dec add sub repnz shl mov xor jae or sbb or rorl hlt mov addr16 and add mov mov add addl orl popa dec lret sub es mov xchg popa lret xchg rolb (bad) xor rcll int sub sti in add insb mov loop stos push inc xchg sub cs cmp push cli adc jae loop enter lods hlt fildll repz fiadd add push mov (bad) icebp fdivs add sbb test pop sbb mov sub pop nop out dec inc jne and push inc mov test mov loope cld dec cmp add fstpl ret scas lcall sarl inc pusha jecxz (bad) sti jg,pt add and out jno into fnstsw aad mov add loopne ds mov fildl cli push es push xchg push push mov sub sbb dec mov js pushf jno rorb inc in or scas call bound daa out xchg pop sub adc dec cwtl daa pop adc cmpsl lock in ficomp imul xor jo add popf fildl sarb movsl sarl xor addl jno add xchg stc and mov rcrb pop daa das xchg inc loopne push (bad) pop sub (bad) xor rolb sbb push fisttpl (bad) adc xor and shrb (bad) sarl aam adc (bad) add adc lcall (bad) ds inc jmp sahf cmp or hlt jge xor pop lock push cmp jnp cmpsb ror jmp lahf call add mov fst or scas mov jnp fsubrl adc movsl and or dec mov test (bad) ret jecxz mov push hlt sbb xchg ret push inc dec push rorl outsb add jne mov addr16 lds sbb fiaddl repnz inc adc imul cltd mov sti popf aad adc add lods mov stos andw stos add push enter or xchg pop outsb in xor jp in cs cmp sarl cmp jne fisub xor aad lcall cmpsl roll xor add movsb mov adc add shll jg orl fcmove (bad) xor pop or add mov ret int3 (bad) push sbb push or or lahf or push loopne enter dec push xor lcall mulb cld insb cmp enter mov lods dec sub ljmp rorl cmp (bad) adc add jns or popa js jb add lcall out add nop into lods incb add sbb daa fisubrl adc adc movlps pop nop jle xlat jl out mov fimul xchg jb jg nop dec xchg or push ja xchg dec mov mov stos push sub ja fisttpl push pop push or lock and mov add pop mov sub mov dec lods lds cli adcl in cltd or or push jno mov (bad) je insb mov pop enter and lods je push test arpl dec bound add inc fs inc pop or sub jecxz pop and sahf add sbb xchg adc xchg add pop out sbb sub sub xor mov cld stos adc icebp fs xchg dec push xchg and mov imul in rclb lcall sbb add ret js loope inc push (bad) jno xor pop icebp in push jnp daa add lret sub out dec pop nop or (bad) push fcmovb add adc dec (bad) or or inc lahf pop mov movl inc push rcrl mov push insl (bad) cmp dec adc mov mov mov lret add mov jnp xlat mov frstor aam add gs mov or addb adc mov insb inc adc rolb xor push add lea shrb das cmpl inc push xor cmp add jp test mov and dec jecxz push mov add or mov adc sub xchg fbld andb mov jo pop add daa je scas xchg sbb ds add shrl add mov loop fidivl popa bound push shr pop int3 clc (bad) out xchg add insb sbb add jmp add mov dec imull dec repnz popf cltd loop hlt call fmul push movsb roll (bad) lea jecxz aad or jae scas inc ret adc cmc and xchg stc or repz ret xor sbb daa popf sub mov int3 call and jbe adc jb mov add clc in xor and xor gs pop and pop popa cmpsb jo push mov add fldt add icebp mov adc rcr pop pop sbb inc arpl add xor js (bad) xchg test jl dec jo fidivr add inc pusha mov xchg pushf inc and (bad) push sbb push lds sahf loop adc sbb or les adc or loopne (bad) cltd sbb or xor inc popaw imul dec mov mov pushf xchg fucomip or loopne adc mov xor pop lock addb addl call aam jae add lods sub int decb mov adc (bad) mov jecxz mov add sbb fnstenv or les xchg and and add rclb or clc mov add inc test inc pop popa addb push cs push add mov inc mov aam pop call test in mov push lret leave rcll sub daa (bad) mov imul dec pop jbe pop test out bound jge,pn cmovp je push mov or push adc in xor sub in lahf adc push push add fsts jecxz popa add icebp push mov push cmp mov xor pusha pop popl xorl push mov scas ret inc push add xor inc jnp add push pop and test jne push sbb mov (bad) call aad (bad) cmpsb mov lods das dec push mov aaa inc shl push mov adc out mov lea cmpl ret jne xchg push xor push push sbb movsb and inc je and pop jg ret imul (bad) iret add call add or jns aas pop xchg sub in adc loopne inc or inc and pop push mov mov fistp adc or sub push mov push jmp pop xor repz arpl imul push cmpsb nop das adc call add xor sarl xchg xlat fcmovu cmpsb or clc call sbb and rcrb loopne push or icebp add jmp leave mov int xor inc dec test or (bad) and bound adc leave pop mov push sti inc aad xor inc adc or add ret mov push pusha pop cmp push sbb out xchg add add push lds jmp aad adc push dec sub jmp push xor jo cwtl cmpsb adc dec cmp xchg push inc out dec addl pop inc int3 rorl stos je stc pop dec movsl sub xorl xchg jmp ret push push pushl icebp xchg jbe in or stc test leave adc pop fsubp sbb in push lock mov pop push mov jmp and sbb loop pop sub les or mov add lods (bad) inc ret mov mov mov pop push adcl lret cmpl pop int3 xlat jmp ja push xor xor syscall cmpsl xor enter repz xchg jo push aam mov cmp lcall es mov xchg inc (bad) xor cmp dec adc leave push mov pusha pushw dec dec aam sub mov jno jmp or pop sub pusha add lcall jl xchg stos mov stos iret pop add jecxz paddusw jne fstps xchg xlat das jmp fiadd or or cltd pop and or jge xor je mov adc or cmp clc pop fidivl fisttpll sub icebp lret jmp dec push jns mov mov mov xor add in push and or add ret push pop in pop push xchg mov adc mov add neg (bad) xor add xor pavgw mov jmp sbb cmp xor dec mov push pop adc add sahf push fistp flds mov aaa push int xchg mov sub or and sbb mov mov dec shl fnstcw or dec pusha pop shlb hlt mov les push lea lcall dec cmp mov in sbb xor fldlg2 imul mov cld pop movaps cmpsb mov (bad) int lods rclb xor sbb mov fistpl or int3 jp push mov test sbb ror addr16 (bad) shll add mov lods jl pop cli in jns push arpl add add and inc jecxz mov or xchg push mov mov adc inc or lock push jmp sahf scas add add stos sbb jno push mov cmp into loopne mov xor enter lock mov adc dec paddsw cmp push push cwtl insb (bad) ret push pop stc mov sub mov sti movsb stc loop and cmpsl and sub adc xchg icebp dec out mov adc add add push adc outsb cmpsl jae stc inc mov or adc push retw jne or jno push or adcl or sahf stos pop dec pop sub fldz sub xchg pop dec mov mov cmp mov popa xor dec add push divl or mov inc adc ja mov out sbb jmp cmp push nop sbbl pop dec lret xor cs sbb xorb jl pusha push or add in dec mov sbb adc pop jge push push mov stc pop sti dec sub cmc cmp sbb sbb cmc dec jmp nop aaa push push aas pop dec or ss or and push fldt push and call xchg cmp mov mov mov jb push jmp push push sti jg mov dec iret pusha je movsb out flds ret jmp jo sbb adc mov inc mov add add adc repz inc test adc adc sub xchg dec mov pop ret outsl xor test push push push and stc push push add add (bad) mov adc lret add ja hlt andb jnp in leave xor (bad) jmp push (bad) adc mov xor or add mov shl add pushf aas push outsl xor pop jmp push test jge or jnp in mov inc or jmp add mov mov xchg shrb pop mov iret add add sub (bad) cwtl jnp pop mov ret mov inc add rorb adc dec movsb movb and push popa aaa cmp jge aam jmp pop and pop jmp xor shlb cltd rclb lds sbb adc clc push not push pop and shll int3 pop cli jg push jno inc inc push pushf cwtl leave mov xor movsl and fistp test xor or test xor sub es data16 push shrl and pusha jmp inc (bad) cmp leave push cltd add call popl push jno dec add lret xor add dec andl stos (bad) sub xor xchg jmp lods lret mov and mov adc add test sti cwtl pop fcoml xchg pop rcrb fsubs push or mov fsub push cmp pop sbb add add add call rol add push rcrb and push mov mov sub popa or call jle (bad) pop jecxz inc into push dec cli pusha xchg xor (bad) std lods xlat repz jle jns jno inc fwait or (bad) xchg or (bad) mov test add xor pop sub mov call nop insl insb cmp insb fwait pop xchg (bad) jmp icebp or lods jae pusha sub mov sub push pop jmp addb shl jmp mov mov dec pop ss or out adc and nop rolb mov cmp dec mov pop imul add js (bad) outsl ror test test roll addl jno nop dec rclb or out and pushf xor add das jb movsl arpl adc test or pop inc add dec add and pusha cli push add adc inc rol inc sti out sbb dec fadd in lock add inc cmp lret andb xlat pop test sbb push jmp mov adc jb sub ficom ret lods sti and sub xchg incl dec jne pop dec inc cwtl adc inc add add mov xchg push pop (bad) sbb stos popa enter mov jmp xor pop mov inc adc add inc dec fildll and xlat and lea cmp push and rorb pop call cmpsl movsb loopne or xor cmp int test clc add in clts ds rolb pop js (bad) jne xchg pushf (bad) push lock lret xor mov inc push and pop or lret adc add xlat data16 test xor xor orb jbe inc mov adc mov push cltd pop jb sub xchg pusha shlb inc insb push add inc add rcrb mov das push aaa clc fwait sbb add xor mov add lea xor enter pushf or ret mov inc scas push js add bound jp js mov xor or loopne xor pop clc jb (bad) dec pop (bad) icebp adc inc movsb cmp (bad) dec aas and cli inc pusha push loopne ljmp std pop cmp pop mov test fcmovbe push add leave jle les js sub mov mov std (bad) jmp or jle cmp call (bad) es loopne sbb cmp cltd pop sbb dec es sub and add or rcrb or lds xchg jp add test sahf ljmp js pop rorl or insb stc insb push or scas sbb and pop xchg push hlt clc int3 push sub mov cmp in push dec jnp add lcall fist lods add xchg push lea pusha and adc add push dec std jge adc dec fisttpl add inc xchg push inc and pop out sub sub arpl xchg shlb add test shlb js push pop jno fimul shlb fcmovne (bad) jecxz pop (bad) dec fwait inc add lret push xchg sub ja adc sahf xchg xor fs mov paddusw add dec adc mov jo cld stos loop xor enter cltd fild ret mov or test cltd ror imul xorb and mov and enter (bad) rolb or dec mov test and les jne dec pop fdivrl inc or bound and clc mov adc push add cwtl inc add dec xchg inc and inc fs in cwtl roll pop ds add aas mov push mov pop dec fiadd xorl dec cwtl pop or and adc mov add lea add inc and or sbb mov test mov clc sbbl in test dec (bad) cmpsl xor lret dec mov xor (bad) (bad) and ja inc movsb add scas jo inc pop jbe or (bad) cs push dec dec mov cmp ds mull mov loopne add dec ja movsl imul shl jnp lods lods inc adc sbb loope addr16 mov insb add and xchg stc mov scas xor std mov pop or (bad) xchg cmpsb loopne dec mov push lcall js sbb cmpsl pop sbb sbb clc nop cmp mov dec xchg push push subl lahf fs jb les add cltd fs in shrl loope or cli faddl mov hlt dec add (bad) les sub lds in inc inc js pop (bad) xor cld inc pop and adc cmpl mov push add clc sub add xchg insb out rcrb pop test mov adc rolb xchg stc mov clc in inc repz add imul pop popa and jo add sbb mov xchg (bad) clc or mov lock adc push in loopne lods pop mov xor adc sbb or mov and inc jl dec push mov xchg cmp addr16 shlb and popf xchg inc mov sbb popl add push push lret sub mov dec or mov sub loopne pop jge pop (bad) jle cmpsb mov js and rol add dec push movsb pusha sbb ret (bad) cmp pop jne es je add dec insb push sbb notl int3 or movsb adc or sbb movsl inc repnz test jmp loope adc rorl fcoms lds or inc sbb inc push xorb adc into or popa and rolb aad mov jge push xchg adc push test add mov add and in aaa and xor inc js push pop push data16 cld es test add movsl cmp pop cmp adc pop add add jns rcrb sbb mov in xor xor add aad fadds std mov push mov mov pusha cld mov inc lods add sbb pop shlb mov cmp and pop mov mov lret movsb lock mov xchg sbb dec mov aad xchg sub sub test inc xlat push scas mov repnz adc adc faddl mov cmp dec pop pop mov adcl sbb add inc mov in jle js call mov lock (bad) cmp add sbb xchg xor dec nop negb mov and sub ret es cmp jae ds inc sarb int3 dec (bad) arpl jp mov cmp cmpsb push pusha and push daa add (bad) jo push loopne jo js inc xor sarb cmp mov xor sub mov dec xor add jae loop mov lock bound adc out arpl adc jecxz stc inc (bad) xor jp mov add inc mov xor clc jge sbb inc (bad) mov mov scas sbb bound in cld pushf jmp adc and and jl xor push popf and pop roll push inc rolb lret fwait js xchg movsb add jmp add mov mov pop insb inc push mov adc rolb mov xor lds sub movsb pop and test and xchg (bad) icebp test jno lea sub jecxz fimul aam loop mov jae xchg xchg pop jo lods add pop pushf outsb sbb add shr dec or inc (bad) jb mov (bad) movb pusha dec cmp (bad) decl push rcr pop ja jnp pop mov inc sbb jno cmp loopne sbb mov je add pop push pop sbb or jp add push test cmp and xor mov add pusha dec aam and jae je scas xchg lds mov je sbb push mov (bad) mov lret push pop mov or lods and sub adc fwait add or test mov aam js jl add sub xor cmp mov pushf cli rolb cmc mov mov dec fiadd cmp rolb push xchg sbb lods loope mov (bad) repnz les lcall jb pop (bad) je xor (bad) sub (bad) mov add test and rcll jo stos lret xor nop xor sbb (bad) aaa in xchg loope lea xor hlt stc or mov xor mov xchg add mov dec lods or sub push lock bswap push or and add cmp xchg add sbb jns test daa jmp push (bad) sub stc mov dec test push jg sbb inc cmp int3 xchg aaa sbb jmp pop sub fdivrs enter ror pop xchg (bad) out cltd mov sbbl mov push or std push dec cltd add addr16 mov push (bad) cmpsl aam mov pushf jecxz mov jae int les ja jae jg into lret pop add xor push mov add dec adc xor push adc mov add xchg test push xchg hlt icebp ret push sbb mov pop mov iret cmp dec dec mov add xchg xchg sbbl pop int3 xchg dec dec jno iret test jge add sbb test addr16 add test add ret xchg faddl and cmp ss mov mov fcmovb sti icebp out jbe fcoml ds stos js pop xchg (bad) loopne dec mov cs fimul rolb ror dec or and mov add ret or push je in arpl adc dec call xacquire jge cmp adcb sahf test movsl mov pop lret fildl mov (bad) push inc sub xchg jmp lock ret pop adc push inc js (bad) fimul rorb adc mov add movl xor stos and jns sbb mov rolb mov das pop add sbb cltd pop pop xor or aas inc push pop xchg add mov add ja add (bad) call in lahf popa add xor pop (bad) xchg xor or adc adc add dec pusha clc sub add js insb test or aas fcmovne sub and loopne add push cltd mov push push aas xchg repz jns fwait adc and scas push cmp mov insl imul jl mov jp push pop push fiadd scas cmpsl leave adc (bad) mov test in cmp pop add in js aaa and lds add js test push lcall jle push and push fnstcw mov andl add (bad) pop mov idivb xlat mov movsb pop mov xchg dec xchg jo popa sub fiadd aas xor push or test sbb in sub std mov jg (bad) lock aas icebp push add dec add push push push mov and fwait mov or sub and rcl js cwtl das pop add call lret addl and jmp mov dec add lret cs mov add repz and ja add xchg (bad) cwtl push xor dec add inc mov (bad) bts shrb fwait lods aam mov and test mov add sar loop mov cmp cld xchg lahf mov jae sarl add xlat ret int3 imul xor xor push xchg add pop sbb adc mulb mov in add xchg jmp add and insl cs cli pop out daa and or xor add mov fs rcrb xchg stos add xlat and pop popf stos (bad) pop mov imul add cmp jmp les iret sbb hlt fcmovnu aas sahf add insl mov jns push adc pop faddl xorb faddl dec addr16 pop xchg test sbb call test mov cmp ljmp pop jmp adc scas inc clc pop add pop inc xchg mov insb aaa add imulb add and mov or jne cli loopne pop jge push lret shll enter and lds pop lret data16 mov push push add mov add std movsl movsb jno mov dec cltd add add into or leave jge add mov sub push xor xlat frndint or fimul add imul adc dec adc ret push jbe pop (bad) push sahf loope nop lahf pop aam mov outsl add sub mov inc mov or frstor in adc push and xchg push or stos lds clc pusha xor cmpsb ds adc jge xor jl inc push jmp testl or mov add mov inc push dec js cmp test mov and insb or rcrl add cwtl add icebp and mov es or push pop mov fsts push stos fsub xchg adc add outsb scas (bad) loop inc sub add and pop or or gs clc ja pusha dec sbb push outsb repz inc in adc add data16 stc pop lea jnp dec inc add cmpsl sub add cmovae xchg (bad) jne ficomp adc xchg jo add (bad) int test xchg sbb jl lret lock nop add mov dec add ja aas ljmp or aam cmp push lret add cli lods rolb lds rorl push dec int add inc xchg add nop push cld lahf pop pusha rolb xor mov mov push lods cwtl lds orl pusha mov lret adc jmp addr16 daa push push js mov mov and icebp rclb xchg push int ret add adc add (bad) lods and jecxz repnz mov cltd (bad) adc lock add adc dec pop xchg std and iret ret adc mov push (bad) aas sbb shr cmp aam pusha clc (bad) jmp das sub add add mov dec dec int test in inc ds add cmp or adc xchg (bad) lods adc ja dec sbb sbb js sub push shrb add test fptan (bad) mov fs mov push jecxz adc outsb pop jmp push and jle mov pop cs loopne hlt repnz jmp xchg jb cmp cmpsl jge sbb or lods xor xchg and (bad) xchg (bad) or push pop cmp add in and inc inc test ret adc cs in add xor or lods dec push add insb clc pop adc ja flds jno and test jmp int push push sbb mov add dec jae push inc mov jge jmp lret dec popf sub movl push add adc mov push ja cmpsl pop mov gs insb xor add mov and add inc out arpl mov or cwtl jmp or add sub add add nop sub or xor (bad) and cmpsl lea add addr16 inc into add adcl sbb sti add cmp inc add add xchg add movsb roll in aad test hlt es or xor jl mov fadds adc pop mov or add dec (bad) aas (bad) mov lock add xchg jbe xchg enter lods repnz icebp setl push push imul roll adc cmp add xchg mov add push popa arpl inc xor or les lret inc repnz cmp mov add pop sbbl xchg lret add inc xor add rcl cwtl out push add xor stos add lahf add hlt scas pcmpgtd and and push jb aas mov pushf adc dec ss inc inc add mov xor push add (bad) add mov xlat add fcoml add pop xor rcrb loop add xor js stos dec call add cld mov mov add cmp fadd das pop out add adc addr16 imul add dec incl and nop les push mov mov dec ja fsubr jns test xchg sub jge adc and add pop inc leave popa lret add int3 rcrb cwtl aam push pop inc fadds add jns add xchg pop mov in out aas add imul lods xor add mov popa add repz in sub pusha cwtl dec push les (bad) xor aas je mov arpl sbb add in daa mov adc mov jl repz int3 pop sub insb sub jne pusha jae add xchg nop mov lret dec mov popf lock cmp jne ret add out mov add mov pushf lds add pop push out fwait sub fcmovne scas fidiv pop cmpsl jmp daa mov ror xor sbb add xor aas xchg lods ss repz loope xor jno jbe fsubrl cmp flds jnp inc into push jp stc add arpl jne test sahf add or insb add sub lods cmp and dec push (bad) sbbl cmp pop adc jecxz movsl sbb pop jno add mov mov (bad) repz mov add xchg cmp or nop adc leave sbb mov pushf gs data16 bnd sti iret std dec xorl xchg adc jl insb loopne or push cmc shlb xor clc aas lcall fcoms leave pop xor out xchg push sbb mov or pop mov push loop xchg shl and test fadds cmpsb test mov int3 dec xor add sbb add adc call add dec daa jmp aaa or add lods lret fidivr add cld mov cmpsb pop cli (bad) mov sarl xorb adc add (bad) mov add fidiv or xchg cmp pop lock fs xchg adcl js and repnz mov pop add fisttpll xchg xchg add cmp push add aam repz sub ret pop cli add push sub lret xchg popa cmp fdivrl aas arpl add (bad) sbb clc cmp cmp sub and add mov or cmp repnz test loop sbb push addl inc call sbb pusha jno jo xor add fwait in xchg mov pop sub and lods loopne mov push xor pop and cmpsl sbb popf testl xchg xchg inc sub dec psadbw std add pop sbb popf shrl test in xchg mov cld add cmpsl xor pop aas ret pop sbb xchg add ret mov and xchg push add pop scas xchg push adc fs sub leave imul adc iret pop xchg (bad) cmp sbbb adc insl cmp jmp (bad) loopne or stos lds lods add aam adc int inc mov movl fs movq xlat stc inc gs les adc mov pop test andb fcomps pusha cli mov or iret mov les add mov pop pop lahf out add insl add jmp cmp ret add mov mov xorb jg loope lret hlt sti mov or inc add cli mov mov push fsubrl pop xlat push fstpl push dec mov sub push (bad) cld jg ss (bad) lock push dec add push jnp rol xchg cld add mov inc fnop xchg push xchg mov add ljmp ret xor icebp clc jge sbb (bad) fildl and cld fmuls je sti data16 mov cmp (bad) mov add ret add push pop mov inc pusha and popa inc sahf lods add (bad) xor inc fcomps aaa adc dec int lret rol mov add in add pusha cltd push ljmp loop ja adc sbb and add cmpsl lods insl add jno mov aam push add aas nop sbb popf rol or jge pop shr xorl and sbb lcall lcall arpl pop add mov clc add dec or out faddl adc mov add xchg lahf cmp dec int in ret clc sub lcall mov or xor aaa jp add jecxz jnp ljmp (bad) std push xchg fistl push out out fbstp movsl ltr add sbb pop sbb push pop add adc jp,pt add mov push mov jecxz nop out jmp cmpsl aam xorl fistp cli mov add std in fstl or push repz or scas rcll loopne inc dec mov push stos cmpsl inc mov fs add jo scas dec std mov mov mov lcall sub imul add dec rcll mov add xchg cmc repz in lods add pop rorb xchg mov rcll pusha or aad mov xchg sahf fild nop movl inc lret cld mov adc add aad fnstsw faddl fidiv lcall xchg jecxz rorb mov stc ja add push push cmp cmp push repz add sub mov in add push scas sti xor aam push add sbb add sub jnp data16 mov (bad) push add push out dec add roll (bad) adc mov or add mov pushf add enter les pusha movsbl add add rorb inc jle pusha clc outsb sub add fisub adc movsb jnp mov jle add pusha ret push in fistpll int inc mov (bad) add adc xor leave mov push outsb push inc repnz mov mov jge,pn jno iret pop mov les add dec ja add pop cli and and inc incl sub add sarl push movsb xchg in xor sahf xchg negl xchg adc add mov jnp xor pop insl or add ss in add add mov loope lahf add jecxz mov dec jne test ret adc cmp lahf imul fwait popf pop je lods inc ret insb cmc jnp mov pop addr16 movsl scas jl push mov data16 aad in sarl xchg or pop movsb (bad) and add fistpll mov dec xor and mov push out xor dec add scas data16 mov push mov out mov add hlt cmpl in andb cld loop call inc insb mov add xchg test lds add mov and xchg movsl or push fstps cmpsb add sub push add mov mov and clc and xchg xchg cmp cmp enter mov cmp and pop shr mov inc ds or js test add jne aas adc add insl cmp cli push cmc loop hlt shrl ljmp xor lcall sbb aas mov jb icebp mov dec (bad) add and shl mov push xchg adc loope jl inc aam inc insb out aad test add popf sub lea mov sarb arpl add (bad) sub and addr16 movsl mov lea jo add push xchg inc nop sub xchg push addb imul add arpl sub or add xchg subb pop (bad) push sbbb incl xchg orb pop aad scas cmp pushf xor mov add sbb outsb shl xchg lock ds xchg add add ja add int imul pop xor push mov add insl mov dec sub mov or push (bad) loopne push add cmp dec mov add add inc add xor out jnp sub rcrb repz add pushl loopne jmp inc pop out add sbb add xor add or push add out pop xchg push pop mov and dec jle add mov rorl daa mov cwtl pop jmp xor dec sahf add nop xchg and lret xchg enter dec loop bound cmpsb pop (bad) mov jg sbb pushl in push (bad) aas cli jecxz or jae sub jmp jge scas cmp repz ljmp xchg or cmp push or lret add sbb add sbb sbbl push out fisubr cmovl loope push rcll mov xchg mov iret femms fdivrp roll fidivrl jno inc cmc cwtl xchg cmp out add xlat mov cli jmp out inc (bad) lods (bad) pop and loope jns and add rcll arpl (bad) pop inc insb fiaddl in shrb ja sbb fisttpl dec call jmp mov add adc lock dec rolb mov ret mov xchg pop rcl sahf add fwait shl dec (bad) sub mov imul add dec loope dec cmp mov insl cmovg ret (bad) lret push add push add cmp repnz loopne sbbb or push xor mov sbb jnp cmp dec js adc sub jle add popa repnz jns inc and imul outsb push jl jb mov into or sbb xor cld iret rol test mov int3 lock and arpl hlt dec xchg lds in xor dec (bad) jo cwtl js dec push (bad) xchg pusha xlat and mov sbb xor mov mov push repz pushf add xchg sti in xlat (bad) ret sub dec clc sub (bad) aad dec mov push or pusha stos pop adc jmp mov leave xchg sbb jge mov fcoml jmp lock jecxz (bad) int icebp in sar mov std push pusha mov dec or mov aam add mov xchg iret inc (bad) pop dec pop js aam fs fcoms gs mov add leave (bad) punpcklbw (bad) mov xchg clc lret xor das outsl insl mov sahf adc inc arpl sbb jnp jg add scas cmp das add aad stc lahf mov xlat add add jae imul add dec out ljmp pop xchg ret loop mov or sub xchg stos add clc pop mov jge add add add imul out addr16 out shrl repz pop jle add jb (bad) mov insb cltd int3 dec and stos add add and outsb mov jle sbb (bad) jbe (bad) stos push sbb dec pop and cmp pop repnz push mov test sti jmp sbb in push jl call fldl fs mov mov std call data16 add lods andb add (bad) hlt xchg pop movsb jp mov sub roll or xchg add pushl shll (bad) dec jbe sarb loopne je adc cmpsl js push add mov out sub nop or push mov add cld les sahf push lock mov sub xchg nop aad je aad adc push cmp into fbstp cs mov or pop cmp mov testb lea stos fmull cmc pusha clc inc cmp xor jbe addb cmpsb push clc pop movsb or (bad) int3 push lds popa dec inc push lock mov mov lahf add jnp jg fistpll test call imul add jp mov sbb dec xchg hlt add mov mov out jp cld add mov call mov mov push movb or adc pop mov add movsb popf enter or dec mov cld pusha push ds into test cli popl ja push lea lret pop rcrl jmp push mov pop aam inc push int add sub add mov sub insb leave push cmp out mov sbb pop pop inc aad push std mov sbb fs leave imul xor loope push mov add enter pop jg mov in lods xor add sub sbb pushf or mov adc (bad) add inc subb xlat pushf fistp mov popf xor or sbb movsb mov add leave adc pop test mov rcl inc add xchg loopne dec (bad) xchg add jle cmp out (bad) (bad) fadds push push add in push sbb inc out sub dec jg pop jg mov cmp sti nop push adc inc add (bad) aaa lret or add or jg int3 in roll xor inc cmp xchg fs fiadd roll push setns cmp push add dec jle cld cli or inc add add andb add mov adc mov pop jecxz mov inc fcomps xor das (bad) call add and xor add negl out add out ljmp push add push sti inc pop lret ds mov add pop roll cmp xchg js sub xchg xor pop js roll add push loopne push pop push lods jge je shrb adcb repz push and lods scas sbb sub add js cld adc cmp push fcoms adc and inc arpl lds es push push push sbb dec mov test das aas out orb data16 fs sbb xchg popa in jl enter in mov sub mov je pop cld hlt mov es js sbb jno insl push add stos or je lods loopne add je in fist push pop pop ja daa in ret repz push clc mov add inc jns pop in adc or inc insl scas (bad) lcall mov flds adc or sbb add fwait shrl sbb (bad) jb mov and add mov xor jge mov add push popf je add adc (bad) jb mov add dec xchg cmc hlt stc add lods pop xchg mov jecxz or lock sub lahf addr16 and jns xlat lds cs mov xchg cmc cld jl add ffree jge inc sbb add inc in and (bad) push mov mov (bad) jmp xchg shrb sub cli fsubl push add leave loop gs adc add sub scas sbb dec data16 imul subl enter shlb jae add lret and mov (bad) mov inc dec add inc repz notl popa ret or test push (bad) insb fildl inc add shlb cmp adc push pop sbb fsubrs pop inc xlat sub adc push pop nop xor aad push ret (bad) jmp ja adcl les es mov lds out and pop adc jae push mov add xchg cmpsb (bad) gs fimull push (bad) xchg fs adc enter aam sbb adc adc xchg cmc scas lock aam add jle adc push jbe xlat outsb add mov pop mov psubusw pop faddl xchg mov lret scas mov stc fld jmp mov or arpl stos out mov adc cmp xor cmc mov enter pop stos push je insb test (bad) adc add outsb pop loopne les invd cli sbb es jge int add fwait jle cmp add test mov mov sbbb pop inc sbbl hlt add lret pop sbb add (bad) shlb popf adc imul lahf xchg add (bad) mov (bad) loop xlat add ret lods addb sub add mov js dec flds sbb (bad) lahf fidivr xor sub out cmp jo cwtl add aas jns xchg jge add imul ja pop notl adc add mov jb dec lods jle add fs or int sub imul cmp popa adc lods or insl cmpsb push (bad) ss adc jmp sbb fadds add xchg push xchg jns int jno adc xchg ror insb adc push sbb pop cwtl add int ret add or inc iret cmpsb fsubrs enter pusha fidiv arpl sbb sbb sbb (bad) int add std cmp test pop pop orl xor push jo mov cmpl das enter sbb mov ficoml sub sbb mov adc mov dec movsl push fucomip sbb out andb mov add test popa add xchg (bad) loopne pop icebp repnz clc sbb enter loop cld or jo mov add hlt outsb inc add cmp and jmp xor xor addr16 inc lods push fwait addl mov xor std sbb dec add push adc lods dec xchg sbb mov add adc int daa xor sbb rorb add jns loop push (bad) enter enter add sbb std (bad) sti pop jbe int3 or je (bad) sbb ja fcomps cmp movl sbb test add xchg shll mov or lock push mov shrl mov add cwtl cmp mov adc and loopne xchg add push add or int call les popa popf ljmp test stos inc xor or add add flds imul cmpsb aas cmp subl inc add out jle incl xor into rclb sub or aam clc stc mov add mov pusha cs sbb sub mov mov or clc fldenv (bad) dec inc rorl push ja cli in aas ljmp mov push shrl sbb bnd cmp sarl cmc mulb push jp add mov pop repnz xsetbv push dec pusha mov call jo,pt xchg mov xor inc push shrb js sbb dec xor push sub or dec jno js pop jp loop (bad) es movb add cmp push mov lcall and call mov inc sbb jne js rorb jl adc add fsubs fucomi add (bad) stc fsts arpl cmp jns mov (bad) fs lret roll and or sbb mov jp test in inc adc je sbb or ficomp or add pop or and jno mov insb cltd lahf jmp add outsb adc fildll xchg fldt cmp sub or aaa dec and imul jg mov loopne push insl mov es push mov pushl imul mov fcompl jl out and sarb and jmp push (bad) (bad) or and aas push dec cmp dec ds adcb cmc lods mov mov mov push cmc fistl imul rclb add (bad) lret aad movsb push add fistpl pop repnz jo icebp and mov fwait add jg hlt sbb or addl lods xchg mov add xchg add mov add fsubs push mov aas jle rol gs hlt fldl sub cltd or (bad) xor adc push iret dec test lods xor movsb in jecxz or stos sbb fs cli test xor ror and pushf addb scas mov mov in push subl shll sti jb xor call xorl pop adc push add (bad) sub pop inc insb add pushf add cmc in dec mov fcmove jbe adc lods in pushf or and adc cmc test nop jo adc xor mov (bad) push inc or imul push pusha lods jl cmc scas xchg mov in (bad) fucomi xor adc sbb aas dec sti nop adcb js dec imul call sub jl mov inc adc jg mov in addb (bad) push add movsb popa xor jg mov push add addr16 cmp ds bswap stc sbb and add lods push fstl mov and mov add mov addr16 rolb sbb push jne xor imul pop push stos pop mov cmp add ret hlt xchg add rsqrtps or sub pop (bad) dec pop and data16 add push jge xor add insb rcrl mov pop xchg or jl push orb pop lock in ds dec inc jno pop fwait cmc pop add mov mov sub arpl mov jecxz hlt bound dec pop adc inc movsb (bad) aad xor add gs faddl or mov inc sub push xchg inc imulb subb cmp cmp dec push sub lahf insb adc mov pusha jb nop insb outsb cwtl inc (bad) inc add jmp add lods es mov xlat cli xchg xor adc push ds push pop aaa fs jne je jge int3 xor xchg inc xlat (bad) cmc add mov or sub add test les ss rorl push fiadd mov sbb nopl dec daa mov test jmp sbb jno push in hlt jne push jns push xor xor (bad) clc inc cwtl shlb xchg (bad) mov lods lds clc sub test sahf sub inc in mov push movsl les rolb push add add cmp rolb mov aaa (bad) fidivrl andl sbb aad add mull inc sub mov push adc add out sub add das (bad) shlb sub xor (bad) jno aam adcb jg sbb nop jno fxch push jnp and mov mov push es aas js adc add fisubl fisttp sbbl sub pusha jmp dec and sub mov rclb xor jge add arpl sub sbb mov push insb add push jne loope out inc add (bad) lock call mov shr loopne mov enter sub jl lret lods xor mov mov and mov lds or cmp (bad) mov test add jb jo test mov mov xor jl movsb xchg xchg sub rcrb mov pop inc cmp adc out cmp out and mov dec pop cld mov inc rcr add int3 fsubs cwtl aam repnz (bad) lock dec (bad) clc loop insb push jg stos test ds mov add popa orb scas stc subl inc in jnp mov je sub and add inc imul sbb lea movsl andb jno lods xchg cmp scas adc mov inc in cmp add xor movntq out enter xor xor call xchg mov popf sbb outsb sahf nop inc sti pop and insl mov nop push iret bound mov rcll inc js movb add aaa pop and popa cmc and and add dec dec adc jb xlat fiadd nop ret xchg iret add and and push test ljmp add nop jmp sbb je mov mov int3 mov stos adc add or mov sahf in cmp add stos cmp bound mov sub outsb movl es (bad) lret xchg push fidivr cmpl pop and pop sbb ss add (bad) hlt loopne repz sub ret push lods rorb mov (bad) dec (bad) nop add or add pop imul push ljmp icebp xchg and out adc ret push pop push pop adc insl jnp add dec adc scas movsb and and je push jb add mov je or dec xchg add jl cmp je xor add test sbb pop sub in jmp cmp push faddl je inc cmp jmp or cltd xchg jns mov jo xchg mov sub ja jno jb add jbe cwtl pop ds mov push push inc or test fisttp mov add sbbb and mov out les mov and in or insb test xchg add xchg xlat pop (bad) or mov or repz push aad add call bound xor sar add cli leave cmc xor pusha xchg nop aas mov movb std in cmp adc rcr sub cmp lods outsb add mov std dec sub mov sub add sub sbb jge mov pusha dec cmp negb jo cs (bad) mov loop push sub xor xor sahf js add sub xchg jge dec (bad) mov pop inc adc cli and stos and (bad) icebp ret ljmp mov inc les jg add stos inc shlb lret mov adc adc add jge hlt pusha and sub push add add push aas ljmp pop hlt adc add dec xchg add jo sub lret add cmpsl mov mov sbb js pop or add jo call add dec xor add stc fnstcw cli adc in sub lret mov jno loopne scas je stc fildll mov jno insb and adc mov add lods jmp mov mov mov lcall (bad) hlt xchg or push je or aas sub movsb add jl xchg sbb xor out jl push pop popa push jmp jo or movsb (bad) xor jb call cmp dec loopne push mov jo cli and mov jl rcrb jo cmc mov ret psubusb sbb adc (bad) shlb iret mov pop out add or popf (bad) push popa push fadds cmp pusha add push cwtl xor outsb xlat mov nop mov xchg in addb test push cmp ljmp xchg jno bound rcr or pop jg hlt incl xchg pop mov sub pop loope fiaddl sahf sub cmp pop mov add push xor push push inc addr16 dec test mov push jp or adc add xchg into pop jl add movsl push jecxz aad add clc out int3 sub jo push push pop sbb aaa mov inc mov pop or mov dec dec pop inc lea adc and and add data16 mov and add scas fildl push popa lea xchg adcb xchg inc mov insl or rorb cmp lods jmp pop sbb (bad) sbb loope add cwtl dec xchg add das and sub fcmovnbe rcpps mov or inc out cmpsl in inc out mov jle loopne sbb (bad) aad dec das add xchg jmp nop (bad) js add mov pop (bad) adc sub fisub mov xchg shll push sti je pusha or adcb jle ja push lret inc xor or xor cmc dec fsin add loop not and data16 jmp out fadds jae cmp dec sbbb add aaa lcall pop add xchg fcomps jbe adc mov mov jecxz pushf add out dec ror sti xchg jecxz adc mov flds xor mov je scas add cmc fildl cwtl adc add push mov mov lock clc xchg mov mov mov add sahf and nop les leave jnp dec pusha mov (bad) jo add sub sub movsl mov add addr16 pusha adc and or pop push mov cltd scas popf and jbe add ret pop das pop fidivr mov xchg pop int3 and scas sub loopne fild pop push push fadds or push cmp sahf jnp mov inc stos xchg addb outsb and xor and lea ficoml (bad) hlt adc out (bad) or sahf cmp mov adc inc daa jge xchg dec stos add int3 add jnp test addr16 inc ss add dec cmpsb ret push enter push stos pushf jno stc push cmp orb stos mov pop push mov sbb addb and push je cmp rcr add (bad) xlat push add mov push push mov mov cmpl dec mov mov adc scas insl notl add pop adc inc lret incb das xchg ljmp jg iret dec pusha mov (bad) pop add call out add mov push add xor cmp cmp sub sbb imul jnp adcl dec sbb add pop or jne sahf (bad) mov add cltd movsb mov (bad) cmpsl add orl fidivl test inc das and sub xlat inc add hlt movsl (bad) jo push jb sub sar js (bad) push mov lahf or stc popl xor and and add add jne pop shlb iret (bad) aas cli cmpsb add arpl add rcll sub mov out lock push lods fcomip xorl lea push sub enter add out sbb cmp add dec orb sbb stos stos pusha xchg cld push pop and fbld outsb add nop mov push out addr16 hlt push and add push roll add out pop pop fsubrl ja bound rorl les nop addr16 add xor arpl fisttpl mov and std insl add sarl into jb add cmp pop mov push out pop or fidivrl mov enter in lds push test (bad) mov add xchg fcomip xor fsubrs add and jae xchg add mov pop pop stos xchg cmp addl int mov jae pop xchg popf rcrb iret (bad) cmp outsb adc imul scas jns hlt mov xchg dec jp add imul or and test add adc pop push sub dec sarb xor push pop jns pop dec add push mov imul addb adcb xchg mov dec push cmpsb adc or aas pop popa push sbb outsl add pop add sub fwait add pop mov ret push cmp add mov and dec jle add xchg dec mov lretw pop jg push or or nop hlt add sbb div dec inc gs (bad) test inc pop fild mov inc add jo sahf sarb and xchg pop xor xchg lcall cmp inc cli jl setle leave inc and mov ds fildl test cmp pop cli push pop mov jbe sbb adc add out or rolb pop push adc sub xor sub pop xchg or xlat pop fcomps mov and aad pop add scas xchg or xchg xchg imul sahf js nop add leave cmp fwait jecxz sub jle jno adc stos xchg sub or push mov out aas into and aaa and scas out mov je and adc or fmuls pop (bad) sti and arpl out or (bad) xor add adc xchg add fistpl lock pop pop in jne jo ja cmp add loopne in add or cmpsb or mov inc jmp (bad) and push lods add outsb add dec add add dec aas sahf push jo add push inc popf movb xor dec imul (bad) sub cld pop aam loop or sub imul add in mov imulb cli or add les cmpl nop enter notb inc jb loop fs push mov sub test push add lret mov mov cmc mov push add push jmp (bad) lock push dec cmp xor xchg cmp pop jg dec cli lds push mov add imul mov jl std cmp arpl sbb cmpsl add in xchg pop cwtl sbb cmp sub cmp cmp xchg pusha inc push xorps jp cwtl inc xchg mov data16 add mov scas stc cmp test xchg in sbb int3 mov xchg loopne cmp sub sbb sbb cld add (bad) lahf imul daa mov pop xor push cmc adc ljmp stos inc stos pop xor paddq out stos out flds cmpsl loope mov std and test inc test xchg mov add adc push out sbb xor nop loopne mov add jmp xchg push or inc hlt in outsl ud1 shrb and add cli nop xchg jae jecxz nop xchg int add pushf call fiadd cs push adc gs icebp add sahf xchg sub adc (bad) xor xchg aas (bad) cmp xor mov rorl out push sub add pushf jno lock sbb aad add xchg pcmpeqw sub add xchg int3 lahf das mov xor jo pop dec movsb add insb fiaddl jg mov xchg mov pop test stos arpl push push cmp mov icebp bound mov in add incl pop or push and add data16 in loope cltd sbb inc add xor push xor rolb mov lock scas xchg and addr16 (bad) cmpsb stc mov fcompp out add in into push (bad) pop push jg jno mov int lea dec jbe cmc imul add jge inc cli and add mov enter test push sarb inc xor loopne dec lock int out repnz sbb inc (bad) lock test stos sub push adcb add fistp test lds sbb into testb sbb mov fwait aaa stos fnstcw jp mul mov dec add insb mov add add push shlb sub fstps sarb mov cli jle pusha xchg test loopne mov sbb xchg mov inc call loopne adc stos add cmpsb mov lret pop add leave movsb mov jb setp sahf add jmp xor pop or call dec push je sti xchg lock push and add mov aad adc flds stos cltd movsl pop enter push dec nop in push out add jge xor inc adc xchg dec xor int3 or or imul xorb sub add out cmpsl faddp cwtl push push rcl add dec push addr16 orl ficom (bad) sbb add adc push scas fmulp cmp jno adc lahf sub add dec cmp sub xor ret inc add fbld add adc add in push add outsb movlps add mov xchg cltd mov sbb and test mov addb jge mov fadds ds jle sbb xor adc repnz nop subl sbb inc push add mov lret add faddl add rclb push mov sahf xchg mov mov fs push es les aaa dec sbb pushf sub loopne mov push pop add test out out loop jnp rol outsb mov aas (bad) add inc cmpsb jb sub adc push add rclb pop push test jb add lods push pop loopne sbb xor add pop mov mov or insl adc (bad) (bad) adc inc pusha iret imulb push pop clc repz ficomp mov rorb mov sbb out lds test imul add pushl insl jns adc xor pop in dec cli inc and call in xchg inc add adc cmc and mov or add mov add or mov push enter xorl sub cli pop adc pop daa and jmp mov sbb scas add push jne lahf push lods sbb rolb and lret add jnp mov lahf cld push dec sbb and icebp and (bad) sub in int3 fcoms std and aaa add sbb data16 push daa stc mov cmp mov mov xchg into sbb push sbbb imulb (bad) xchg jne aad push fadds and test pop add movsb je push inc idivb mov dec and fiadd ds fidivl dec ss je sub add lret and adc inc imull add push or mov add nop fcmovnbe addr16 add popf (bad) lock mov add push pop cltd ljmp pop aaa mov nop push inc das fstpt mov pushf aam jp add shl std icebp push jl mov ljmp repnz mov mulb test pushf (bad) out repnz mov daa jl sarl aam jge sbb or jns push sti xchg add (bad) (bad) (bad) pushf movsb inc xor or dec cs test add js push ljmp mov lahf cwtl xchg push add cmpsb js add dec (bad) lods or inc out ret es pop add aaa push and mov nop mov mov mov cmp add or add ret aam out inc add xchg in cwtl push xor push jo cmpl into add sarl ja aam cmp daa loopne in cwtl data16 mov cli loopne add push add add sbb je sub call jecxz pop fwait into or test mov dec (bad) hlt das mov test inc nop xchg jne sti testb (bad) mov inc shrb dec ret or add aad (bad) lock cli inc imul push pop jae imul add mov or (bad) jmp cmp movsb and mov fucom addl dec in test add pop aas incl xchg xchg add mov iret push cmp add pop adc fsubl clc sub bound sbb add (bad) mov mov clc aaa test ds mov jbe adc sbb les test frstor mov cvtdq2ps gs loope or ljmp pop add pusha xadd rcrb jne mov mov mov mov xchg stc inc adc aam testb mov dec dec add loope cmp and adc add sbb and add es loopne cmp (bad) addr16 sub addb and leave xchg mov (bad) cmp call add cmc stos loope pop add shrb adcb andb push mov inc add int3 cmp jg mov ret push lret scas ja bsr dec pusha mov cwtl or lret dec in add push popa outsl mov orb xor xor subb aas push sbbl subb pop stos or cld mov clc and sub sub add lcall mov adc ljmp lock lock add enter or add pop and out add sub mov andl addb add inc mov (bad) cmp icebp lods jne sbb sar jae jns or es out mov sbb jbe dec add pop insb add adc xor ja and push sbb jnp add int3 inc imul pusha jb add xchg adc add or cs push adc xchg test adc xchg es add pop (bad) stc mov xchg jb dec jae jge hlt pop xor jl add clc cmpsl fstpl jb jno push pop mov adc inc add jmp ja je add mov and fidivr sbb aad mov adc add mov lds add sti sbbb xor or ret dec fwait mov pop dec mov jmp cmc push sbb cmp pause add sbb nop jb sub orb addl insl jo pop test sub adc push add loope xchg cwtl jg add mov cmp add in push add data16 hlt add adc lcall stos mov mov lea (bad) adc xor push fdivs (bad) mov add pop jecxz jo add sub pusha xchg in negl (bad) repz jbe push enter push shl xor lods pushf aaa jge je jns in pop inc mov rcrl cli add cltd inc cmp cmp mov cmp sbb cmovp dec sbb jecxz cmp or and xchg hlt pushf add icebp fisttpll in shrb fmuls iret mov int mov adc xacquire xorb jbe dec xchg (bad) loopne jecxz push ret push fidivr mov js ds test push or (bad) mov shll rcrl push xchg push inc xor sbb jmp fs cmp test inc mov in mov sub pusha mov cmpsl add testl or mov sbb pop repz leave lock inc stos fldenv incb xchg out (bad) cmp add in or push addb ret push inc mov sub mov sbb cltd data16 push push dec xor (bad) jge xchg (bad) cs ss lock lods or scas add mov cmp push in inc or add pop inc sbb inc mov add xlat push or (bad) adc jl call add subl stos xchg add rclb sub inc (bad) mov cmp or inc jg iret jne xor sbb dec and enter stc cmc xchg or mov repz jl lahf or inc push pop jg in mov add cmpsb xchg faddl mov dec jge add movsl or fmuls add test cmpsl loop pusha shll jbe add rcrb cmpsb inc jno xor lahf xbegin dec jns out ds hlt cmp arpl mov and adc sub addb pop (bad) fsub dec lret cld nop mov mov mov add mov imul jl lcall jmp xchg aam rorb aas add fnstenv in add jne jmp adc pop xchg dec (bad) sub or add fwait push cmp mov stos insl jg lock (bad) mov mov jns sub add fs lgs fiaddl fisttp imul cwtl add pop daa stos push mov shr sbb inc pop pop and push cmp fsubrs pop cwtl in mov mov and cwtl jnp mov cmp test add lods push call lods dec add (bad) fabs add imul adc lods push cltd out add xchg adc leave xor in fnstenv jbe popf rcll add shr repz add add out push in cmpsb rolb cwtl jg test sbb add jnp aaa repz std add loop mov hlt pop add lret pop xor (bad) bound add push nop add fistl dec sarl mov and and jge add aad sbbb jne add cld (bad) xor add (bad) jecxz bound lock out mov fnop push cmp add mov mov fcmovnbe adc add fild pop inc out mov push pop xchg xchg pop adc xchg dec js add add into sahf loope roll mov push sbb dec hlt adc xor popa add jne mov dec inc icebp push push loope imul ss ljmp push jecxz xchg cltd mov add adc in add and fiadd pop dec rolb popa pusha lret push mov cmc cmp sahf mov add push mov xor sbb test gs mov mov add sbb dec imul rcrl add (bad) clc pop add into test cmp mov cmp cli inc jns (bad) dec dec add pop cs push and or cwtd mov aas jge add jecxz icebp pop mov dec and mov xchg repz test and mov mov sbbl pop sub ds loopne idivl lret nop add xchg mov repz int fdivs mov test insb xor push loopne adc in or push adc lods orl sahf xor push mov mov mov xchg add insb and lds add fwait inc mov add rcl mov into int3 jo pop or out sbb xor add (bad) pop add push movsl push sbb nop inc int daa jae (bad) xor push add mov push loopne sti add pushf lock xchg fwait into inc add xor cltd sahf add pop cwtl mov and bound adc icebp xor add subl mov xor mov enter lcall mov js push lahf adcb inc add pop fwait pop ja sbb xorb ljmp out inc arpl jp sbb mov repz into jmp nop pushf inc add and or mov pop mov add ret dec sti mov in lock cmc inc in xor in fsubrs mov leave add lret xor outsl fidivr aas add mov ss xor and pop pop in and xchg xorb popa cmp push xor add push inc adc fsubrs pop add sahf or call sbb inc add stos mov dec jmp fstpl xchg out xchg rcrb rol inc mov (bad) and xchg pop cwtl cmc arpl mov push into negl push sbbl lret in sarb fdivrl inc xor (bad) add mov jecxz outsl sbb lds sub ljmp adc loopne mov lock jl data16 sbb sub loope add scas jno pushf or add inc hlt inc mov test push hlt mov insb popa dec adc xor mov pop mov enter sbb push pop sub or test adc jp fimul jmp mov push add int3 sub inc pop cmp and aam add (bad) out (bad) fscale add mov loop add jnp subl mov das nop mov dec es faddl lods into popf xchg xchg pusha adc loopne mov push inc mov fsubrl or dec dec mov inc cmp stos into adc xor mov mov add je cmp push int dec push and rol fwait mov mov or aas push andb icebp popf add or in insb inc mov mov cmp xchg add jnp or mov (bad) cmp sti lea insb jp mov clc insb add pop das (bad) fsubrs dec enter pop xor add cmp sub push pop add scas pushf push jge inc xchg mov push subb add or pop int3 das and adc adc mov aam jne lret or add (bad) movl clc out in add lock daa add push (bad) (bad) or xchg shrl ret iret lods lahf dec popa sbb sub loop add mov daa push push cs sbb repz fmull add lds cmp je xorb sbb xor jne stc insl (bad) fcoms pop iret dec bound add pop push cli xor add lods inc leave insb push xchg clc sbb add (bad) jo mov mov xlat pusha out mov jp call jnp mov jmp inc cld mov sbb pop loop mov cvtps2pd rcr je cltd add fsubr test pop jne and roll pusha xchg and test mov orl bnd push cwtl push add loopne test mov rolb add sbb stos mov js xchg mov add lea add mov in in js dec ja cli xchg jno mov sarl inc pop das jecxz hlt stos or mov adc pushf or mov cmpsb add pop test insb inc adc jb adc mov rcr sahf add adc mov loope mov add xor popf pop add loopne rol add leave jne cmp lock xchg or cmp pop data16 fcomi jns sbb xor leave push push jae xchg pop and out enter stc lods add mov mov inc cwtl cs sbb push js lea movsb fs adc ret push cmp cmp out mov clc insb decb push xor sti sahf div mov test push je (bad) fcmovnu xlat lods sbb js jge inc mov movl aas add fsubl xchg push inc sets fmull orl cs and inc cmp cmp push fdivs pop mov (bad) or dec push pop and sahf loopne pop adc out push jns sbb pusha mov jno fadd in jl pop pop scas popf inc dec dec mov sub rcr mov mov (bad) iret inc push lea bound fsubrl pop std outsl rcl jbe pop jp imul addr16 mov lcall or rclb movl loope movups in adc arpl push and lret mov ja sbb lret xchg clc push add loopne cld cs push push sbb jo sti (bad) sub fiadd sbbb rcrl inc push jae insb or jmp inc outsb add mov jecxz xchg add lods nop fildl xor mov or xchg mov insl lock andb adc push (bad) sub lock (bad) lods stc aaa outsl inc int push js mov xchg xchg push bound negl movsb test add fstpl cmp mov lock ljmp push ds and repz mov add outsb insl test jb rcl add xor into ds add fdivr and rol pop jle out and in or into inc sub inc loope jae push jle sub mov daa dec roll sti outsb xor les or lods loope dec popf iret out (bad) xor cld test sarb stc leave cmp shlb xor mov add into mov repz out mov lcall fistp es inc mov fwait add push push or loope pop add cs cmp add sbb imul push into pop sub arpl cmp push shrb add or in pop es ret popa add push mov lret sub test cmp inc jge sbb mov hlt test sub iret mov dec stos add pusha adc mov add or add test popf lock pop leave jp pusha pop icebp push pushf push jg add sbb shll sub loop add loope ret cmpsl (bad) cmp xor into and out lldt cmp addl ret inc adc sub add xor xchg movd and iret jecxz pop xlat or addl cmp jle add pop push sub mov inc xchg call sub aaa leave inc (bad) rol cmp out mov nop and lret fadds shrl out and cmp test adc add hlt loopne std or jl rolb nop fimull test jle insl push sbb add jmp dec pusha test pop and sbb es add ss mov add adc lcall idiv sbb and imul adc scas call fdivrp lea add adc outsb scas add mov cmpsl ret test dec pusha icebp lds pop xorb pushf (bad) pop mov std pop rclb cmp push add jl cmp sub cmpsb or add ficoml lods sub add and fdivl clc loope add or and in cltd loopne dec push mov fstl jg mov pop stos adc repz add test ficompl pop mov sub aas dec mov mov jmp loope push mov xor and mov pusha xchg cmc adc dec imul add or in fcoms cmp punpcklbw push fnop std jnp movsb add movsl xor push das nop stc daa and movsl add cli (bad) xchg mov dec mov (bad) xchg enter add (bad) pusha add jmp mov cltd inc cmp mov mov xor push add jne or (bad) push mov jns push sets adc add xchg adc bound dec aas mov shrb or push lods fwait sub add pop push push mov and subb lods es outsl xchg fcomip xlat and in add pop out push (bad) cmp sbb sbb sub adc pop adc (bad) sub lret call xor xadd jbe push jns mov inc and lods cmc es pop sub mov pushf ss pop pop adc xchg arpl and push loopne pushf xor sub xlat adc adc mov jmp push loop out sub inc and out (bad) (bad) stc mov jo fcomp idivb xor jge mov fs mov pop mov pop add gs and inc rolb int3 lods pushl xor in adc cmp add in imul lods ljmp lods cld add icebp dec mov aam cwtl mov xor insl mov xchg ja cmp or in shl decl and aad iret and arpl sti mov test cmp aas in ret sbb mov xchg fbstp add mov mov dec das popa fcomps jb in xchg mov nop mov adc or inc daa inc add cmp hlt (bad) add mov lods push clc scas add mov dec or shll dec and sbb xor cmp push and test push cmpl lret mov fstps andl jae jbe or sbbl push push data16 add xchg cwtl iret nop add pushf popa das push sbb loopne add imul fdivrs cwtl add dec sub jnp adc push pop popf lret mov xor inc add mov rol dec hlt or arpl insb mov add add xchg mov addl sub into inc inc je pop test add pop int3 out xor (bad) sbb mov adc or je fucomi mov mov adcb adc sub sbb gs icebp shll add push scas ljmp pop xlat push add mov adc dec movsb add jp mov sbb inc mov (bad) adc repz sar add out add mov sbb movsl jl add ja mov inc add cltd jo test movsb xchg sub insb jmp ret mov push daa clc pop movsl out pop and add xchg lock jmp scas push jl movsl stc push mov inc push cmpsl jp pop out add scas ret push outsl pusha orb ror loopne sahf jae add add cwtl xor inc fbstp addl sarb pop xchg insb stc (bad) jecxz in inc jmp aad cwtl das add pushfw mov add (bad) xor pop stos dec add jae aam pop fisub or sbb enter cwtl sahf add imul stos mov incl call xchg into sub dec pop xchg add mov int3 outsl fnstsw mov mov ja into popa sub mov (bad) idiv or sub xorl gs push and or in or fstpl add gs and add rcrl stc inc add nop pushf mov lods addb mov or cli xchg pop and in fsubrs sbb dec or mov pusha test add lret loope add cmp mull cli jns nop xchg lcall or scas lock jae add arpl std daa aaa and xor pusha sbb jle mov sub mov sarb mov xchg inc lock cmpsb pop add icebp inc (bad) sbb xchg adc test or lahf subl add mov jle add cmp push ljmp xchg testl mov test pop mov sub push push xor add jne movsb or adcl and push sbb dec insb mov nop inc add or call cmpb mov add aam and mov inc in cmp add inc mov add rcr loop test jnp dec arpl addr16 push push jo repz xor add adc add bswap cld rorl jno cwtl and lods mov pop bound in stc lock outsl je add push mov add xchg mov (bad) in xchg pop and lods test dec add xchg cltd cmc push pop push pop push leave mov repnz bound fisttpll mull and jge in cmp lock test or dec mov jne jge sbb sbb dec push test lods adc cmp xor sub or outsl stos xorl ret cmp dec mov inc push mov or mov (bad) ret jl es loopne add push mov repz sti fmull pop aas dec sub clc das incb xor inc pop rcrb clc add pop mov push (bad) xor add push and mov mov sbb sbbb or xor insb jnp add les imul je int3 das dec std andb cmp fildl sbb hlt lock sahf add mov ret enter pushl pop jecxz xor sub dec cmp add mov and (bad) cs inc lret mov movsl dec lds out adc mov add or cwtl popf xchg adc mov inc add lods xor stos add rorb mov cmp push pushf hlt xor add mov dec or clc or dec mov inc in push fisttp cld add sub add cmp mov adc push pushf xorb mov cmp enter in add rcrl inc lods lea push sub cmp call (bad) push push in cmp insl mov add inc les lods (bad) in adc shr jge andl leave dec iret and xor or inc (bad) xor xor pop push add out add adc and mov adc daa das mov adc lret add or jae ljmp or adc pop add cmpsb jae cmp add jnp aaa add out dec js (bad) icebp add insl push pop add mov dec (bad) fadds adc mov insl add (bad) rolb mov mov xchg mov mov andl dec popf or popa out and or add pop lret pop lods or rcrb (bad) jno lahf into dec mov sbb or push inc add mov cmpsb fildl pop (bad) mov cs clc daa sahf add out xor pop sub and scas sub aam adc mov add xchg out scas cwtl push rcrb int3 adc in add fisttp fimul cld push and call add add add xchg lret xor inc rcll sbb cmp mov xor cmp sbb test xor add xchg adc xchg cmp mov mov sub sub add and das fsubrs push mov mov push sahf mov inc andb test cmp pop mov in lds std dec sub inc (bad) iret push sbb mov add mov fsubl rcrb add sti push xchg jo cmpb jnp inc dec adc test adc into mov pop add imul ret sub ret std adc xor cmc xchg into add xchg addr16 fsts pop push cmc or inc adcb pop mov mov js sbb (bad) sub jecxz (bad) test and je pop clc inc jp pusha mov or movsl loopne add push lahf push dec icebp sub je bound pop bswap dec inc pop add fs adc aam daa xor jl xor shl cmc jp gs lret and (bad) std enter fwait imul sti fadds lock shl pop add test pop enter inc faddl dec and sbb jmp xor (bad) aam add sub pop (bad) mov sbb inc cmp add xchg pop aam out push rolb rorl push nop pop jnp and mov mov add pop push lock aaa das cmp popa daa mov stos ss les dec cmp orb inc xor add inc stos inc repz add daa push lret dec imul sbb (bad) cmpsb movsl push mov lret pop sub popl dec and cmpsl mov pop outsl fcomi inc mov test push ja mov mov outsb mov out dec adc arpl add movsb pop adc adc test push xor bound aaa loopne dec inc gs xor adc dec adc pop adc dec mov lahf movsb loop cmp lea inc sbb mov test adc push mov bound in and loop add (bad) cmp pop and and in sub test dec mov sbb inc cwtl sbb pop fs sbb add fcoml addl sbb iret jno adc jns mov mov add cwtl and imul mov lret jl fwait in cmp adc xchg push dec mov jmp mov add push ja fstps in mov rolb xorl add sub pop idivl pop ja outsb into (bad) dec scas (bad) mov or in mov jno xchg jae mov ja sar loop pop fsts fisttpll push mov (bad) in inc lahf fs popa xor add jmp insb div add out xchg add pop jle sbb pop test jecxz adc orl scas aaa in cli sbb cmp rorb inc movsl test fwait ja add xchg mov cmp neg pop shlb outsb fs loop dec lcall push out icebp mov add outsb mov push test jecxz and hlt pushl ret ja cmpsl pop mov insl or pop add ror xchg (bad) popa call sub sbb icebp mov clc mov jp pop ljmp sub mov dec lcall mov dec adc xchg divl lods xchg notb add pushf add in sbb in fistpl jbe mov add pop sbb xchg imul imul or ds mov jbe pop add or push add cli rol mov jg lahf out testl jbe cmp xor or mov cs sbb aam or in push outsl jge stos incl pop mov mov hlt fstl out cli sbb dec mov insl jns push jge jbe add inc orl orb dec repnz mov (bad) adc jne add pop sbb mov pushf add mov add icebp cs int3 orb jl xchg lods lods add push sti pusha cmp and xchg and fs aas mov push adc popa loop cwtl mov faddl inc fwait push ret pushf ficomp lds insb pop imul popf lds cmc mov daa inc cmp push add mov mov outsb or sub or je inc insl add pop cmp sbb cmp xor push cmpsb add rolb fadd mull jmp add fildll imul rcl add add aam add xlat rorb sahf pop bswap add fwait rcll lret xor cwtl popf cmp test fimul push pop out push (bad) dec out xchg (bad) inc pop add push cltd stc cli pop cs xchg or jo lcall fcoml adc (bad) inc lret negb add fcoms mov scas add int rolb iret cmpl add data16 sbb lds mov jne or lods add mov add inc jbe push inc xchg mov jg add sarb xor leave idivb add bound jo add scas adc (bad) out or add mov jmp inc adc xor and loopne jmp stos add push (bad) jno iret add jmp jae mov hlt fisub lock add cmpl test scas (bad) imull mov sti cmpb mov insb pop popl or sbbl fcmovne pop test lret daa fsub call fs ss rolb dec mov xchg mov cmc push mov repnz inc ljmp or (bad) clc aad mov mov push into xchg add aam sahf add mov mov inc nop cmp sub add mull jb cwtl pop les test xchg add pop add mov push jno punpckhwd ret pusha mov jecxz jnp xor push xchg add and lcall and iret fisub out pop or fsubrl mov push add (bad) scas cwtl add sbb add lods pop lcall push movsb fwait xchg add dec add gs pop cmp je cmp inc and lahf push add xor aas sub fmull jp test add loope add xchg popf mov push jb add cmpsl push sbb into int xor hlt add cmp push in imul dec adc je and jnp mov out push test mov in xchg sbb cmpb sbb dec test adc loop addr16 les inc mov cwtl (bad) jl add rorl cmp cmpsb push add push in mov dec jg jne sbb movswl ljmp mov dec jnp add and jl ljmp xchg das jg cmpsb (bad) sbb jbe xchg pop ja rsm out and cmp loopne iret out cmp xor xor dec add hlt test subb pop jb je add pushf inc test pop xor inc test lock mov cld sbb add outsl scas mov aas data16 lcall add sbb cmp sbb (bad) aam mov arpl inc stos movsl lods lds jbe shrb cmc and test pop in add les and (bad) loopne je add int3 mov mov inc mov jno out addb jo mov or sub inc pop add in sarb in cwtl scas and dec mov ret inc or and unpcklps fcomp xorb das mov xchg mov inc and jnp iret ds add (bad) loopne fs push clc jae jg add das push cmp test rorl ret paddsw dec andl pop add aaa fisttpl loope add test push add add imul or pusha popa jnp rorb rol repnz rolb cltd subl push xchg lock or outsb in push or call mov sbbb pop cmp icebp pop aad push xor jg push (bad) mov out xor icebp add lret movsl cmp add lahf (bad) pop sbb nop cld ja cmc lods or insl lds icebp aam add out mov jl sbb add and lahf out sbb lods cli pusha adc jecxz xor popa lods (bad) out or mov cmp xorl aad and pop jmp movzwl xorb cmp adc test sti (bad) aad add fldl add mov sub cmc jmp stc adcb aas jg inc call sahf add mov pop aas movsl inc mov fisubl mov ror add mov xor add mov xor gs out nop mov jne lret and and rcr es int jmp adc addb or mov add (bad) in pop add gs movsl (bad) jg and jbe aad (bad) mov xor addb pop jae fwait sbb push nop insb jb mov add iret ret jecxz clc adc fdivs sarl push add adcb dec xchg dec mov sbbl mov (bad) test leave out mov mov jp mov cmc mov in jno je dec daa sub and pop das mov inc cmpsb pop hlt sbb jl arpl add sub and dec add ja aaa inc arpl shl clc mov cmp cmp add mov xadd sbb push add xchg cwtl xchg or loopne mov jnp std push mov inc inc and test pop mov sub xchg pop push xorb (bad) sahf sbb jl roll jmp jle add mov xor add add pop (bad) jae mov cmc icebp inc (bad) mov xchg sub std faddp add loop mov sub pop movsb ds sti sysret xor in pop or adc xor addr16 imul sbbb add out or cwtl push sti scas out int3 add (bad) cmpsl iret jno or enter (bad) mov or add int pop das aad and test pop ss xor xor or addr16 sbb stos xor test ss jmp push popa into cltd add mov insb aas cmp add add andb push arpl ret int3 sbb adc rclb lret test push sub in cmp outsb jno cmp sub xchg shl inc jge or loopne add scas lds jle or sub stc into jnp rorl rolb sbb movaps aad mov add (bad) fild lret nop adc jo xchg popa add add aas out dec (bad) pusha jl sbb sbb out aad adc jnp mov add or pusha insb cld cmp sahf pop jo jg subb mov movsb sub xor repnz adc jnp les cmc pop sub stos cmp add cli (bad) adc in add adc mov pop cmovb das or dec fwait lock inc popf jne and add std mov (bad) lret cwtl int3 sbb movsb xorl pop pop aaa add into add stos rdmsr insb jl sbbb lcall push push cld push or cld rcrb lcall (bad) loopne (bad) mov movl xor pop add js jmp dec jne add clc int3 cmpsb jecxz stos pop inc arpl mov rorb ret arpl mov jno into cmp ja in mov stos add xlat aaa test (bad) xor pop fmull jae mov add int3 fimull (bad) xchg lret and adc pcmpgtd shlb popf test add and xchg jae in mov mov imul idivb add (bad) pop pop in mov add jp add icebp jge add xchg mov adc lcall add cmp inc or subb adc add cld dec adc cmc pop add adc fwait mov pop fstpl clc add sub sbb outsl inc inc inc fwait add sbb mov add sbb insb pop adcb inc sub imull fwait xor add dec push xor adc fistp add fcomps insb cwtl or push and pop push loop mov (bad) xor sub cmpsb push xor xchg mov lock mov pop add pop dec mov add incb pop js test push xor testl test in das add sbb dec rol ja jecxz or sahf pop xorb mov les nop clc (bad) mov cwtl addl jo cmp xor add cmp cmpsl ret into fsubr push pop jnp sbb mov add aam add hlt stos je lds scas add dec clc xchg mov add bound adc mov test add add sbb add push ljmp jnp mov pop cli or js adc sub fwait sti arpl je add lods sahf jmp loop setno sbb rolb xor add xor lcall push call in pop lds adc mov pop loopne push mov test cmp (bad) fisttpl sbb mov icebp jbe add popa and dec mov jmp cs ret dec add mov sub lods or and pop mov mov ret adc aas push sar into lgs data16 pop sub sti aad dec pop add push pop sbb dec imul mov lret rclb add test mov or decb add mov fs jno roll (bad) fstpl cmp dec pop arpl sub mov inc inc pop movsl add cwtl test fistp andb push or dec inc out shrb ret clc or xchg mov pushf subl dec les rcll dec inc test add jne dec pop and push mov outsl ss mov movb leave pop insb rcrl call stc fisubrl and addb test dec push pop mov push fstl je or shll clc arpl push (bad) jb call rorb sub cmpl add daa repnz jae (bad) js pavgb loop or pop pusha pop das add (bad) mov inc adc adc out add test stos pop adc inc cld add jns xchg add fbstp sbb add (bad) aam xchg ja popa adc mov adc arpl leave adc and imul lds mov dec jg pop fs repz mull add movsb daa (bad) jne pop jno and les loope xchg cmp rcl js sbb (bad) hlt insb dec ljmp jae cmp dec lods out fildl mov push es cmc xchg in mov pusha xchg xor add mov and cmp dec cmp (bad) icebp popa mov imul fs shl xchg daa cmp add aaa mov or cmp ficomp add adc xchg mov add mov movsb and shr cmp add xchg out cltd loopne mov pop pop int rclb add insb inc jnp cs movl cmp loop add sbbb mov adc subl add loop or es mov in out imul mov xchg xlat in push cmp mov clc arpl xchg out add fmuls outsb scas xchg sbb (bad) inc dec psrlw pop mov out jae and xor add mov add lcall add lahf xchg dec or xchg or pop add cltd lods sbb mov lock insb jl xor loopne into fstpt out cmpl scas shrb cmc add ret jns (bad) and add xchg xchg in out jo or add arpl add mov dec scas xor and add roll or rclb inc scas inc add xor clc lahf add pop dec pop push fildll adc (bad) xor inc arpl (bad) (bad) loopne and add jo jae (bad) jb add pushf cmp pop mov movsl mov inc xchg movsb mov ret add mov dec xchg mov pop inc pop dec push outsb add test adc xorl daa out lock sti push jae lds sub je jbe add push icebp cmp dec push or push xchg cmp xchg pusha shlb push ds std pop jb cmp outsb int3 in jbe fsubs pop xor sbb xchg cmp inc out add fildl or mov jo mov push aam ljmp adc add stos movsb sub (bad) pop or fwait inc fs xchg mov jns dec dec repz jo in outsb add mov cmp add sbb fs sbb outsl xchg push inc nop inc pop or scas out cmp mov add jl add rcrb add inc lahf xor das sbb inc dec add dec mov loop mov std rorb xor cmc movsb xchg lods sub xchg add adc int fisubl add mov pop daa inc add pop aaa hlt add loop mov (bad) mov push mov push lds mov js push inc jle pop pop adc pop add pop bound jb call mov repz xchg std jecxz insl (bad) cli ja pop add lcall subb add pop hlt xchg cwtl or lods push pushf test dec cltd cmc repnz xor nop aaa xchg aam jp mov or cltd cmpsb call mov sub and addr16 adc pushf adc and sbb sub lea sbb inc test hlt pop jbe pusha mov sbbl sbb loopne aas mov aaa fildl push pusha clc inc inc inc add dec pop rcll dec jo add ja add xor jmp sahf sbb cmp pop mov add cmpsl inc and pusha or or mov add sbbb push daa (bad) in inc lret xchg test test fldl aad scas mov scas rcrb mov adc add into dec adc loop pop xlat mov xchg ljmp push mov test (bad) dec lret jns jno cwtl adcl adc imul sbb mov nop daa xchg mov xor add mov mov push in imul out sarb pop lods mov jl xchg cmp add cmc fldenv and clc add data16 dec (bad) xlat add addr16 test jg pop mov jnp das outsb mov mov pop sbb insl adc inc cli inc dec jo add cmp hlt es nop adc add jp mov (bad) aad xchg leave popa imul or mov push add lds movsb repnz roll push imul add rol outsl ret test mov rcll lret and and lods add dec out and pop aaa xchg add mov push (bad) add rorb mov in out jmp mov in sbb out push mov sbb mov cmpsb add inc pop ds or lea inc add ficomp sub mov sub add les sbb add mov shrb mov lds or push fisttp andb and add adc add lret in push cs jl enter pop pop adc int dec push es stos mov addb out inc mov push push add xor mov push and mov arpl int popf or out lock add (bad) mov push sub xor xchg xchg imul mov bound (bad) movsl mov xor push inc movl movsb adc nop or jae enter in fisubr pusha rorl inc les mov add adc mov mov add (bad) fnstsw dec mov aad andb xchg inc (bad) pop test xchg xchg add mov insl pusha mov xor pop and mov sub add add ficoml add xor mov test leave add adc mov mov inc in aad stc or jae add test push in aas add gs and ds add loopne or mov add pusha (bad) rolb push sbbl movsl fadd push ficompl and xchg aaa sbb add sbb adc add or out daa addb add adc shll ljmp js push pop in add mov jge cmpsl in add fistl pop (bad) mov cs cmp and ds push mov or adc lahf ja repnz sbbb jbe pop inc add fstpt push add imul outsl dec mov insl mov sbb mov dec pop jb lret mov or and xchg jnp (bad) mov sub pop lock test mov lret div out sti sub adc mov je pop or pusha mov mov add hlt sub shld shll dec fcoml out push add or out sahf jmp adcb int sbb push sub add fwait push pop and push inc jbe out add xchg add test or cmpsl inc ret xor add aad xchg out movsl negb xor loop or dec jmp sub add arpl inc es incl add mov cmpsb ficompl xchg sbb or repnz fnstenv nop cwtl mov add int inc sub repnz je mov cmp movsb mov call or out pop push lds pushf add push cwtl jmp add adc add enter mov aad mov push and popf scas jne inc xchg or pop mov xorb sbb loope (bad) cmp test inc cs or add jmp mov jmp (bad) xchg aad bound daa pop sbb jae push cmp and lcall pop xchg call add pushf add cmpsb xor push in add js lahf fucomi rolb fldcw cmpsb xchg pop push call add and pusha dec jp (bad) xchg arpl adc jns or cmp jo repnz movsl and mov out push add sub pop add iret add pop jg fwait mov cmpsb les and jecxz sbb leave jne add sbb (bad) lock add stos or not and daa pop lods jl and lock adc inc mov add and pop pop stc fadds xchg xchg jns jp cwtl negl cmpsl dec jmp fs ljmp sarb jge stos outsb add dec out lcall pop and add mov lods cmp loopne,pn or and insb mov sub add mov nopl roll mov mul push pusha mov push lahf int3 mov aam test mov imul mov je push in mov sub push rcrb pop add (bad) sub pop mov add adc pusha idivl sub (bad) js lret mov add dec pusha lcall cmpsb insb in sub mov pop push pop add (bad) xor xchg cmpsl ss fcomp leave push pop subb testl mov mov cli xor push pushf stos xorl addr16 mov pop add rclb mov add (bad) (bad) push push dec loopne cld daa jno or mov xchg mov jp les adc add (bad) pop out imul test pop (bad) lock lods fildll pop cmp movsl cs adc dec push or sbb aaa inc mov icebp cmc jo adc sbb hlt arpl pop mov dec add pop xchg lea mov loop loopne sub lds mov fsub add stos lds aam mov data16 loopne xchg add xchg add cmp (bad) rorl inc sbb lods imul add out sbb in (bad) cmc std mov and pop gs dec (bad) cmp sbb iret std fs xlat mov push mov rcl or pop inc add cmc mov dec stos fadds arpl push push inc mov in cmp pop and scas cmp ljmp (bad) and xor in out pop pusha std pop rcll stc sbb cvtdq2ps dec loopne cld fst in mov adc mov aad and dec add mov add add fs out push add dec jp in rcrb (bad) arpl push add loopne mov add inc jl xchg dec pop add cmp fiaddl je inc pop jl out sbb es push stos test aaa add sbb (bad) loop mov pop pop add leave std orb hlt repz mov dec adc inc cli out inc out aas inc nop xorl jp add inc fnstenv notb loop dec push xor cmp add mov dec movsl rcpps fbld xchg enter mov aas or cmp lahf es xchg subl add imul xor arpl or lods xchg popf inc in add sub dec dec cwtl inc arpl add pop jo inc adc pop pop int xor pop adc add pop popf push lea hlt imull mov lock sub sub cltd movsl lea add cmpsl mov pop xor sub cmpsb iret xor or cs fild leave jmp jbe mov add adc (bad) movsl add dec mov cmc xlat sub mull aam jnp pop inc pushl xor out cli cmp cmp nop pop adc lods aad repz push add pushf fisttpl mov loopne daa cwtl jnp jnp sbbb push mov add jle test cli stc add (bad) arpl mov pop push xchg dec loope aas enter xor jle icebp popa jno and push xor dec rol (bad) xor add pop clc sub xchg add int je xor roll push sti subb add xor loopne jb add cmp iret mov fstpl das js add cmp loop cmp xchg add nop mov dec pop sub pop es mov add ss inc push ret call lahf mov jae jl (bad) xchg pop cmpsb rcr sbb insl fisubl lea jle sbb mov xlat sbb aad fidivrl jg popf xchg dec adc inc add int3 add loop sbb xor ljmp testl mov nop sub pop (bad) mov adcb add (bad) repnz pop enter loope (bad) sarb add inc sub divl add pop add repz mov or outsl js add jl jbe mov std mov mov ret mov add mov call add cmp shl addl xlat out jle add pop shr jmp jne push pop int3 cmp sub fsubrl std les int3 ja add rol mov mov push fs outsb aas scas add adc inc sbb pop es nop cwtl repnz sub pop jp add das push mov push fwait mov nop add fmull out iret fdivs pop xor xor fwait jne shlb and ljmp sbb sub jns mov ss addl and hlt add push (bad) in cwtl jge repnz xchg incl orl cmp js int3 dec je xchg adc push outsb and and add cmp fdivl pop add (bad) ror or add fiadd (bad) and add loope mov cmp in loopne mov rol xchg fcoml push lea xor or sub movsb stos cmp fs imul mov repz add sub jp stos loope insl add ret rorb addl add mov scas ret ja fstps repnz add ds add pop fnsave sbb mov orl add or cld or jo add sbb ret jnp mov inc lock add add mov andb nop adc dec stc jns,pn or mov adc fiaddl add inc rolb push mov sbb in and adcl jp sbb xchg mov sbb pop les or pop repnz adc sbbl inc push pop xchg xor lods popf sub inc push or xchg lea sub scas loop out call lea adc nop lcall movups jl sub cltd fadds ss pop push inc pop sbb nop sub cltd aas in add mov xlat add mov popl pop loopne lret inc aad xchg pop or inc adc mov xor xchg xor imul sbb add (bad) (bad) xor xchg mov int3 pop dec adcb add mov mov cvtpi2ps leave pop int pop mov arpl push rclb out in sub movsb lods fisubl add add hlt sub jno mov es in adc pop adcb movb int3 into lea loopne mov add pop pop jecxz out inc inc ds jmp scas lock sbb xchg add cwtl jmp movsb mov mov out sbb addr16 bound mov jo jb add cld in xchg orb add arpl (bad) xor cwtl or bound pop dec add push test mov add push in addr16 fcompl mov or fadds in dec push and jae mov push (bad) adc mov stc (bad) sub lock and cmp adc pop test push fwait repz add push add (bad) add dec pop popa js xor ret bound push fidivr jae mov xor add adc and add add adc pop cmp leave mov (bad) adcl and xor or mov jecxz inc aaa add adc push pop in xlat dec or addb rorb or adc int3 sahf cmpsb add push adc inc or xor ds (bad) inc aad pop in add or pop fisubr movsb lcall lds dec cwtl insl add mov cwtl push dec nop cmpsb lret add adc enter (bad) mov les sbb push ret add leave and or cmp mov dec push dec test mov xor jns xchg push push dec sbb push pop pop insb pushf sbbb ficoml movsb ja cmp sub ret mov andl sub inc push leave int3 ret mov xchg and add or sub stos cwtl push pop xor xlat xor mov mov add insb jmp mov add xor roll nop sbb pushf icebp cwtl pop add xor or push jg (bad) push add mov nop sub mov inc mov out (bad) cltd and cmp mov (bad) in add cmp mov popa sub adc jo lods add xor loopne iret xchg and and jb sbb (bad) jle push sbb push dec sbb cld aam mov or fsub adc pop sahf add push push fistl icebp add pop movsb push mov je dec out aam xchg insb or xchg lock and xor mov les call cwtl mov push into push push push add mov add roll and cli movsb mov faddl cmp les fadds add xorb pop cld int3 add addr16 dec outsb cmp in movsb xchg add pusha lods aas push test lock (bad) push jb mov test mov adcb icebp dec xchg int3 (bad) adc fcoms aam idiv mov add test pslld xor sbb dec or pop loopne insb mov push ljmp add jne mov cltd lods jno out std scas or jnp ja js cs fadd mov loope (bad) popf pop fisubr outsb sub add jp into add push mov dec outsb xchg in bound xchg sbb mov stc sub or inc sub mov sbb mov push xchg cmp sbb clc mov add enter xor dec add or sub or jo mov mov push fisttpll sub push sar (bad) repnz aam xchg sbb jl mov xchg in adc dec cld adc sub jmp lods xor xchg jo inc adc enter xchg fs add addr16 repnz inc mov lsl repz add (bad) sbb loope loop xor icebp cmp cld add jp jmp inc movsb dec pop lock adc adc cmp mov (bad) add push test jb movsb pop cwtl or cltd das pop addl or jp sub xor jno movsb ret mov test push mov adc (bad) aaa shrb pop xor xchg adcb insb imul inc movsb js fs aam sbb add push sar fcom es fs sbbb repnz test test add (bad) mulb jns push cmp mov or push sub leave fldl2t or and in loop inc cld pop xor jmp stos dec cld fs xchg and add je fiadd fistpll in mov loope aas inc inc je (bad) fwait and push int enter sbb adc addb mov enter jle adc inc mov test sbb daa sub arpl notb dec stc mov ds dec cmp jno or sbb adc cmpsl divb cli and ret or sub add mov push xor jb test (bad) arpl loop adc aam mov cmp pop or xlat and adc xor ret jge enter sbbl stc mov je xchg fs adc xchg sub test leave inc push pusha inc sbb sub adc in pop and jae push fs scas leave pusha sti mov jmp pop lock iret enter xorl inc ret sub xor sub xchg dec mov or sub and cld adc add push cwtl repnz clc push push cmp add loopne cmp pusha sbb rcrl add repnz pop movsl nop and xor or cld or leave add shr pop fnclex (bad) or aam incb stos ret mov and add jp sub push aam mov ja pop xor js pop dec push mov sbb add aas scas movl push lods in add jecxz jb xchg mov or ds stos ret dec or xor fs or and adc mov icebp sbb dec (bad) ror nop rcrb push add jle pop (bad) pushf add jmp hlt stc jl dec repz insb adc mov add test adc rorb mov xor push std andb pop mov mov jmp add outsb dec push dec in out pop inc or sub nop mov leave stc mov pop inc adc dec cmp adc jg or mov xor jo add inc cld rclb es lods sub inc mov mov jns loop in add mov mov add fsubs push movsb add xchg dec xor sbbl mov repz sbb addr16 mov push hlt sub add mov outsl decl xor (bad) mov inc scas mov dec nop adc pop add add call maskmovq idivl mov xchg int rolb sub adc lock dec les (bad) mov cmpsl loopne lods (bad) enter nop fwait shll shlb sub jo jmp lods mov fstl jecxz les jo or fldl aad sbb aam sub hlt sub negb add jle xchg mov mov inc mov stos rolb add outsb pushf mov pushf (bad) adc mov icebp xchg fucomi dec add dec mov ret and cmp sbbl xchg mov bound pop repz daa inc mov xor add pop mov push arpl sti into dec add mov and mov outsb idivb sub loop mov dec add or insb call add mov add inc jl es test movsl (bad) sarb sbb scas mov ret mov jnp ss adc imul ss andb jmp sahf cmp stos pop mov outsb cmp inc add cmp int3 push push cmp into or mov or push leave jns mov sub mov jmp cld mov pop xor sub call addb cmp dec adc (bad) call cmp mov xor add mov xchg jo adcl push jnp,pt enter and sbb loopne xchg add add jp add fwait jnp add leave ret add xchg testl mov add icebp push ss cmp jb and sub jns rcrb xchg add jmp xor mov jne and mov xchg sbb sbb and mov mov xchg add scas mov add hlt mov lods jb shlb loope lea cmp adc pusha cs xchg repz add sub dec add xchg test mulb sub or nop sbb mov in mov aam lds test arpl or pushf sub int je nop cld test inc dec test test stc clc mov movsl (bad) fdivrp movsb mov sti cwtl out add lcall push xor mov (bad) xchg in insl mov jbe sbb mov jmp addl jae xchg jnp add mov add lock xor fmull pop imul or inc add inc push add ds adc daa addb ja (bad) flds sub mov jnp xor xchg fisubl je adc add bound mov xchg outsl mov add test add popa stos in add mov mov fildl dec shlb dec push clc ffree cmp add jp mov add mov xor sub add movsl pop dec dec sbb lahf mov lea clc fs adc sbb lret jge ret sub pop rcrb scas add call pushf fnstcw xchg cmp mov rorb movl repz add mov cwtl pushf push jle popa dec dec shlb push arpl dec int3 enter jnp fldenv inc or ds outsl add dec xor xor jb and adc sbb mov cli ffreep add adc push or mov in xorb or and pop test js lock cmpb and xor out in je mov nopl loopne daa pop mov and punpckhbw out imul push sub pushf push and mov sbb je adc and add lods push cmp les rolb lods push add adc sbb mov cmp xor inc divl jecxz add lods push mov cwtl mov or outsl data16 push ljmp cmp jbe (bad) out add es pusha inc mov push push add aam and lret add pop or in (bad) (bad) add iret mov pop ror mov cs sarl adc adc mov add or lods (bad) aad test fstps mov push and mov add inc xor add jno fldl insb loopne,pt aad lea xchg (bad) (bad) in pusha add add and sahf jae sbb push add mov cmp lds and pop cltd sub (bad) sub mov out adc ljmp hlt or lcall rcrb pop dec lods movsl add mov imul in cmp jno aam cld adc or push add or pusha mov and mov nop and scas outsb ds mov shrb sub cld sbb shll sub sub mov leave mov jb lcall push fs mov push mov in out testb (bad) mov out pop popa jne test sub enter add scas pop push out lock jp imul and cmp inc lea ljmp add outsl movl xor les bound jb sbbl xor add test fisttpl clc inc stos add imul push add (bad) cmp rcll pop add sub in xlat lods cmp pop push mov outsb enter insl and mov sbb cwtl sub sti arpl or (bad) mov or add jbe pop add (bad) loopne jae lods push arpl push or outsb add jle add mov pop inc push sub mov (bad) push xor push xchg cmp or push sbb cmp mov movsl pusha cld or xchg xchg pop lret lea movups fsubp sub aam inc xchg mov pop in subb xchg pop push mov jne jmp add cmp xchg add add pop rclb stc (bad) mov push in je pusha mov add js loope (bad) mov lock xor add pushf or adc int mov dec and add popf fmul add fstpl add push jecxz xor pop xor sbb out or add mov out sub add mov int rol out data16 pop fsubrs and je mov scas push jge in mov dec or call lock popf loopne xchg mov sub fist in mov push add and and aas imul mov pop nop jns inc loope ljmp dec mov andb (bad) add jnp loopne enter or popf pop cmp in test pop inc ja clc xchg hlt (bad) incb xor and (bad) push out jle inc inc adc rcrb and pop loop (bad) mov aas popl add sub enter pop pop mov inc mov cmp mov add popf icebp or xchg daa lock add push aad ret rcrb add lret add inc pop and test lods pusha lds sbb mov and add add adcb xor cmp lock rorl pop outsb roll pop in add and dec int3 push sbb cli pusha lahf and add repz jne int bound sbb mov pushf jg add adc je cwtl popl mov pop cmpsb cmpsl mov cmp mov aaa out add pop xchg push or rclb add (bad) xor test inc roll or imul pop fidivrl je arpl xchg sahf or inc fisub arpl sbb stc popa adc inc inc pop push add jl or xchg adc jns push dec xchg jge rorb jne imul nop (bad) out mov push push sub fcoml sbb ret jl cmpsl add mov mov add add lods push mov (bad) enter add cs lea mov inc add cmpsb clc in add inc int xchg repnz and pushf and jg std add adc add dec lret cli inc mov add imul add outsb outsl aad jnp push push add addb dec and fsubl call nop pop (bad) in aad add or sbb push out lret test arpl scas shufps mov popf add sti insb loope js xchg adc mov enter std fbstp cmpsb (bad) leave out nop push mov mov addl pop out insb jge and test xchg dec pop mov mov fwait push lds dec jl into push mov inc add repnz int3 pusha es adc cmp hlt and jge movsl repnz add inc cltd mov shrb add sbb jne pop or mov inc out jb add scas mov sub or out in mov clc ret pop add icebp stos push mov adc pusha andnps inc int3 pushaw enter mov rep sahf rol push jns pop aam sub fs pop test sub push cmp mov push dec out xor sbb adc xor adc mov arpl add inc orl movsl add sahf jae arpl addr16 adc jle clc int fisubl and dec mov cltd lret rcrb int3 call pop popf dec fcmovnu sahf shl and lret lock add fistpll test lds ja pop push pop loopne add call aad cmp les popa inc add loopne mov sbb pcmpeqd mov mov push fdiv in xchg lock add xor and and jb push mov outsb jbe lods hlt mov dec and push add xlat add push popf lock mov push out xchg inc or add pop dec pop add pop ljmp (bad) pop sbb rclb or jne xor adc add loopne int mov push xchg sub sarl mov movsb mov xor inc sub test xchg and sarl leave push or (bad) fs psrlq fsubrs sbb shrl lcall add jl dec nop adc or sub inc push mov adc adc vcmpnle_uqss mov jno xlat enter fnsave push es sbb mov lock js and call inc (bad) ficom out pusha cld or xor clc mov and mov movsb decb add andl fs (bad) mov add mov cwtl push arpl sbb pop xor pop jnp jns mov pop adc push popf loopne,pn jns add mov movsl dec dec xor mov fs pop insb add lock mov punpckhwd movsl shl sbb cmp int bound or push mov pusha test adc aad add ss pop push dec mov cmp ret sub rolb stos xor sbb out aam lahf inc mov dec in hlt jne jecxz and loope jnp ljmp push add les mov push or pop rclb mov adc and sar cmp out cmp push add enter pushf and insl addr16 fwait push (bad) fildll jbe sbb mov testb xchg and loopne pop mov lock dec das mov cmp scas iret repnz inc lcall (bad) jmp and aaa mov les add icebp call loope inc mov cmc lahf bound lret add mov pop add loope test push jnp cmpb in sbb imulb sub and inc into or lods mov or sahf rcr xor enter push dec cmc sahf and leave (bad) xor int rclb add aam add mov imul stos icebp fistpl pop add sbb dec movsb xor frstor mov fimul rorl stc mov mov ljmp test add push cmc rorl jno adc pop mov aad aaa (bad) cld movsb xchg clc sbb add leave sub and cltd xorl in cmpsb jl (bad) cmp fdivs push fnstcw xor add or lcall sbb add cmp in dec xchg pop xchg nop fisttp add lods pop outsb inc ja test mov outsl imul stc repz inc jno int3 and sub add addl stc push into popa aad add lret xchg adc sbb and rorl add cli addl and xchg lods xor shrl xor and cld or jb add pop pusha inc icebp lods and fidivr mov (bad) sbb js jae push sbb cwtl jle (bad) mov mov jecxz in pop out jp in add divb pushl mov add add call fdivl ret push add movsl push (bad) jp add xchg test add inc lock andl cs popl movsb loope iret and xorb mov push inc jns sub outsb cmp test mov add std clc inc cli (bad) jno popa enter push jmp scas fsub es or js xor xchg cmp xlat xchg cmp sbb or push add (bad) testb ficomp sub nop push add inc out lahf (bad) mov inc add sub int xor or sub cmp out xchg add lds push or add ja fsub mov lods adc xchg repz pop jmp cmc ja pop inc add push sbb into cmp (bad) jb mov or int xlat in cmp jns into xchg push pop jmp push insl xor xchg loop xor ficom dec jecxz insb mov (bad) xlat pop loopne cmpsb lds and jne mov in add pop (bad) xor popa jecxz add push inc movsl cmp in rcll incl mull pop inc iret jle xlat loopne add xchg lahf ds pusha or je add inc sar jns sbb mov pusha dec xor lret test push jecxz mov add pop inc pusha mov aad inc cmpsb cmp dec sub jle das push adc paddsw dec fistl push add call rcll sarb inc add and mov adc add gs adc stc sbb pop dec or aad jg out sbb scas mov lahf mov (bad) dec inc adc popf jbe add jmp push xchg loopne add pop rcll jmp lret shrb aam jge ss adc add icebp push jb mov addl push add fwait jbe aam test aaa insb loop adc sbb movsl scas xchg add arpl ffreep clc add int3 ds push pop xchg and data16 (bad) mov sbb ret xor call inc cmp (bad) imul cmpsl cmp sbb add pop push fcoml (bad) mov test or (bad) lea add cltd scas aam mov add push shr fwait mov push push (bad) jae mov add fsub pop mov rcr clc adc add sbb add pop add xor add call insb add and iret test fdivr add aam pop jne lcall pop adc stos iret int ss jge add and mov lock movsb xor push (bad) jns add in enter aas add stos pop stc and sbb push xor cltd or mov mov leave jbe daa stos jnp pop jno dec push popf arpl aas loopne hlt pushf roll outsl nop movsl aad imul push pop dec mov pushf dec std cld add rol addr16 mov out mov push ljmp add imul cmp test add std scas pop lahf mov addl mov rorb ja inc add insl jle mov jnp daa les xor or mov push call mov fldl xor lret mov lds in add ljmp shrb ret add push je mov pop cwtl add pop push mov test fcmove sbb inc in xchg cmp mov add fmul mov add xchg mov (bad) pop xchg out add cmp mov ja add loope movsb xchg mov mov push mov lods mov xchg and inc cwtl dec call lods outsl cmp sub sub test add jne push int jl nop mov adc dec cli fcompl mov jle add sub aad subb pop leave or xor xchg add add adc sub fdivl or dec mov aam or dec jno add sub jb add int mov fucom out shlb add pusha in mov imul cmp push add (bad) rorb mov bound aad sar jl add out stos ss inc clc and adc cmp mov shrl out mov push cmpps pop or je (bad) cmp sub hlt add es stos sub sahf rclb push add adc stos xchg mov or or add pusha outsl incb popa adc ljmp sub jae jb jge mov std inc movsl push mov dec insb add incl pop cwtl mov inc add jnp cmpsb xchg pop cmp jns add cmp and stos add xchg fdivp push add and jl push out cmp ljmp popa add jno add (bad) rol mov cli adc cmp and xor mov stos add imul dec mov add jp pop add jge push mov lock push insl cs pop lret add test add push scas push ss adc or dec mov sbb add cmp push rclb fcompl mov (bad) or subl enter cmp push dec lds adc lret pop jae shrb add insl and jle xchg xchg adc cmp lods mov add mov inc push adc (bad) dec jp sbbl add clc sub mov inc or jno (bad) outsb lea mov mov sub pop mov adc das jmp lcall repnz cmp roll (bad) (bad) fnstsw or mov pop cmpsl std lods adc mov pop pop mov adc jge jle add pop add sahf mov add in lret (bad) out pop add dec sub xchg arpl movsb xor mov and cmp cli sub in jnp loopew mov xorb add pushf sub pop stc adc mov mov clc push xchg and add daa in sbb lods nop sub mov fs adc pop add add nop add pop inc enter add mov xor or pop mov sub jmp imul movsb daa or (bad) fstpt (bad) imul (bad) and add add jns add cmp bound pop cmp mov jp add add mov movb rep mov jo in dec adc data16 insb mov int pop or jae jp sub jbe negl lock jle nop xor mov push push push add cwtl out add jno dec add fistp add add int xchg mov rolb adc nopl aaa sarl lock loopne jle sub dec xlat add mov push cs orb push ret clc mov mov and lock add dec adc add es cmp mov add stos mov push push sbb jno fcoms add jle pop add repz mov aaa psrld mov sar sbb (bad) fcmovu ficom and push aas pop (bad) mov xor and movsb lock add xchg dec mov add pop adc jno dec pusha sbb (bad) mov dec add push cmpsl cmp aad rcrb (bad) or inc enter bnd inc rep and cltd jmp mov js add test add repz in popa in (bad) aad sub dec push add xchg cmp or cmp add stos mov add dec inc cs dec and pop cmc xor pop icebp cmp add sub (bad) testb pop mov (bad) scas adc adc lret sub pop jl call hlt fcompl push mov cli (bad) dec add es ret mov ljmp iret outsl jg testb pop mov cmp test lcall cmp dec loope sbb adc mov lret pop repnz or jg add jle movb scas push stc sub pop sbb notl cld movsb push add push call add scas sbb mov (bad) fistp lret cmpsl scas ret stc test add int3 insl add arpl jp sbb mov jecxz dec enter add pop add jmp shlb and out cmp sub lahf data16 ret push pop cld (bad) add shll out add cmp scas jnp rorl push cs mov xchg inc or mov add or outsl adc push stos add insl aas mov adc xchg add movsl andnps insb add jmp mov (bad) or int adc and mov enter imul mov mov push mov rcr mov hlt lahf xorl and add inc cmp ds add lret loopne in movsb fcomp add idivb ds (bad) add shl das pop inc pusha cmp imul sbb add ds mov pusha lahf stc hlt push mov lock test mov (bad) mov mov lahf std hlt and sbb in inc adc push idivb or ds cltd cmp nop and push clc or (bad) movl mov lret (bad) hlt lock dec mov adc inc shlb adc popf add jns xor inc sahf lret add mov (bad) rcl mov inc sbb and mov addb xor adc dec loopne adc fldenv jl xchg pop push jno mov sub push les sub mov rorb mov fcoml nop or or popa push clc push sbb dec cmp (bad) lahf push pop cs mov cld orl inc adc jnp add mov popa outsb int rdtsc jno rolb mov divl jnp ja xor test aas loope add loopne orb inc sti fiadd or xchg mov loopne pop nop inc sub insb add aam cmp movsl and test pop jb pop jns adc mov jo pop rolb mov and nop nop push int3 hlt lahf push jae aaa lcall aam xchg sbb add sbb jp cmpl xor inc movsb fs cmp or push test fnstsw push (bad) dec int3 lds pop ja sbb dec orl add adc call mov or sub sbb or add roll fdivl cmpsl jo test aam rolb dec popf pop mov movsb loope dec cmp xor mov push and jmp lret push ret mov xor std add sahf adc add into arpl cmpsb dec xor icebp xor jmp mov test add push inc cwtl loopne dec mov push insb mull sti or ja add xor xchg leave jmp sbb adc sub jmp pop aaa xor push add mov mov dec ret cmc jmp test push lock fcmovbe push fnstsw nop xchg popa and shr push movsb xchg ljmp adcl and or lds (bad) jb or inc fisttpl incb xchg cmp movsb mov sub mov orl inc xor cmpsb inc push xchg xchg mov repnz icebp add inc xchg sub cmp xlat pop sub loopne xor mov ror and (bad) cltd jmp adc loope pop xlat dec fiaddl inc cltd fcoml loopne pop xor sbb pusha cmp mov (bad) aam test sub cmpsl sub (bad) xor dec orb add (bad) dec lods shrl scas mov daa xor push jo lea (bad) push mov fldl call push sbb (bad) mov movsl imul xor mov add jmp stos mov loop dec dec sub pusha cmp ljmp push and add sarb test or hlt addb dec outsl test nop mov mov mov push mov mov leave int3 out add fs cld sbb dec aad add inc outsb je pop call jmp mov gs popf insl sub push fmul mov sub add cmpsb jnp scas sbb xchg xor xchg inc push add loopne add adc (bad) adc les imul pop mov or jnp mov imul adc push popa cmp pop fildl out fstl pop notl mov dec inc cld inc pop test clc add pop aam mov xlat add inc mov add mov loop sarl add clc fistpl cmpsl dec xor cmp xor cmp arpl xchg or and mov inc int3 cmp lcall out add add shrb sbb (bad) aam das lock cmp mov scas push mov inc or inc dec test xorl pusha pop mov inc mov les mov mov sbbb out nop add xlat ja (bad) int3 add sub jb inc dec into bound add mov mov (bad) add jo lods mov push dec push icebp push sub je mov aam and popl jmp test (bad) dec dec cs push mov xor test add mov popa (bad) jo test es dec mov ret roll arpl cld adc cmp iret dec adc add add fcmovne pop push (bad) mov sub xlat mov add jl leave addr16 push dec cmpsb mov aaa aas imul dec add fadds dec push inc nop push and sub cmp rolb dec jnp adc pusha out cmp movsl sti dec adc clc ljmp cmpsb mov add adc stc stc out insl rolb cli lcall sub rorb push pop add push mov out ret add adcb jnp add into mov or loope cmpsl add and out jbe cmp dec call nop call push sbb push jo dec add adcb or pop xor neg add call fdivrl xchg dec or (bad) dec test push push add adc fsub rcrl insb or mov dec movsl je xchg (bad) xor aam mov ds jg or pop and dec jbe adc iret mov enter cld push or das test mov repz mov aam inc add xor mov sub mov subb or shr or ljmp sub xor and add push push xlat loope js push inc or or (bad) or pop pop in mov lock in add call jo fsts int3 aam inc insb jmp sbb xlat mov lea adc call cmp insl sub or cmpsl cmc add xchg dec inc lea ds dec or andb jne or mov pop cwtl inc inc sahf or inc imul pop ja xchg inc cwtl push sbb sub ljmp cwtl mov fistpl xor out sbb add into xchg adc adc cwtl mov mov rorb mov xchg fsub fnstsw sub addb repz insb imul sub add stos sti inc mov fsubrs sbb lahf iret andl inc and outsb cmp push ret pop pop loop adc (bad) fadds sub dec jb jl jo sarb adc jnp repz mov in pop push (bad) mov pop dec dec push (bad) push adc jnp hlt or aaa fdivr enter or (bad) nop (bad) mov adc add jp xchg into loop push sbb insb push sub enter xor pop add inc (bad) mov out in sub or mov sub and adc mov lahf (bad) hlt inc mov fxch or mov rcl adc push ret lahf loopne xor cmpl bound jmp xor adc cmp and aas mov fs sbb pop stos cmp aam and lret test lock lcall or aam add xchg sbb sbb adc adc fsubr sub int3 add add pop jge mov dec (bad) fs cmp adc aaa inc push stc scas pusha sbb ljmp adc aam push fcomps inc stos out rol in aad ja inc jae xchg loope add leave mov andb pusha cs push popa sub fdivs dec loope jg xor mov dec ret adc or fsubl dec insb fdivs jo and shrl xor movsb stos xorb nop jo add jecxz in loope mov out cmp daa sub adc xchg cli push mov movsl add dec repnz mov jo adc add ret dec cmp int3 data16 xchg push jnp fidivrl stos pusha jno pop shlb add das test add xchg xchg xchg add shrl push rcl rorb js add sbbl in sbb inc sahf jb lea pushf jnp mov cmc xor daa (bad) dec shr pusha cmp adc dec xor mov daa loopne cmpsb and inc test faddl or lds jo dec mov mov incl push mov and sub fistp xchg lock pop pop or push pop adc mov testl and mov pop mov add sbb enter inc sbbb mov inc and rclb dec jl loopne call ret sbbl sub xor call outsl js out mov mov mov push add mov dec xor and pop testl add aad push add cmp jae subb sbb mov pusha sbb or lock mov mov dec push wrmsr sahf mov cmp ret lds (bad) pop scas mov daa xchg mov cmp jle rorb shrb pop or mov dec int3 mov add mov in ss sbb nop sbb cld jbe pop adc rol cwtl rorl leave pop into sahf call divl mov repnz enter pop mov js inc jecxz or adc xor je mov adc es nop add sub int3 push insl mov leave cmc cmpsb xor inc push push testb adc fcomps fcmovu pop or insb or js push (bad) jl push adc out add or outsb inc out sarl or loopne jae add cmpsl and sbb sub sbb pop ret aam fsub lods mov rorl mov imul adc aam push inc add lock inc aam and xchg imul (bad) sub andb dec push push inc and test aam push rcl out (bad) mov inc rorl mov add xor cmp je test fimul or or data16 sub aam xor cld xor aas loope xor cmp sti (bad) loopne fsubrl loope inc rolb or mov rclb popa in aam dec das cmp inc pop dec adc cmp pop int3 and inc xor pop sub (bad) mov iret aam xor ret dec loopne sbb add hlt in loop adc or popa lcall leave das or sbb test insl call and lods jne enter ljmp fisttp (bad) nop repz fmull inc stos shlb inc pop and pop inc std sbb orl inc dec add or dec xchg push jno lahf gs or mov xchg clc outsl push mov (bad) sub and lock add inc lods mov lock test xchg ja push sub adc cmp cmp mov xchg add mov and inc add mov cli dec scas adcl mov add aad dec sub sbb popa mov ret push sub add cli add iret xchg inc add sbb mov mov inc cmp adc pop loope hlt adc neg xchg mov cs aas dec add xchg sbb add cmp xor sub out xor lret ljmp xor jnp add leave jle dec jae add jl repnz aaa xchg cltd adc arpl rolb and dec (bad) mov cs mov out xchg dec adc sbb cmp jnp jbe rcll js add lods push rolb fidivrl adc jmp cmp jbe and aam sub or add jno ss add fnstsw push cmp add fnop and pop ret rcrb jle lcall fisubl inc loop loopne add adc push add ss dec pop xchg adc js inc xor or add inc loop ss pmaxub sub push adc lods sub rorb xor xor push mov mov insb adc dec add pop xchg pop fnstsw xchg mov js pusha adc test add enter push out jmp add loope outsl jge or add push and mov cmp push pop outsl add pusha lods gs mov jnp pushf dec std cmp pop xchg iret cmp rcr adc (bad) (bad) fsubrl sti inc sarl addl sbb adc cmp add sub add pop lcall daa out pop testl (bad) fstpl sbb pop mov xchg jne xor mov mov mov pop push inc jno add rolb gs out clc jle ds sti clc jb rolb pop jmp daa pop add cmp fimull jl mov pop lahf mov (bad) sub in adc mov inc in jge stos dec mov mov sub fbstp push sbb pop ds cmp fsubrl add xor repnz cld adc push dec push sbb push push push dec cmp adc dec sbb fcoms pusha add imul mov js loopnew cmp std or orl ja rcl mov inc xchg (bad) add push sbb add pop xchg lret add jbe xchg jo xor xchg jg push pop xchg enter aaa ret inc or xor les mov gs dec das adcb jecxz add int3 shl movsl jl mov inc cwtl fnstsw movl inc and mov imul push nop leave cmp inc push sbb sub in adc add arpl add adc dec add push xchg fiaddl add aas mov add pusha pop push cmpsb mov mov (bad) sub scas test lds sub cmp orl stos lahf je notl (bad) add test clc mov into mov push add fstl push xchg pop cmpsl and mov repnz fistl add arpl dec push xlat into pop (bad) pop xor and jne push mov pop roll into inc inc inc xchg (bad) mov dec fnsave imul pop jae fwait cmp xchg cmp jmp inc insl sbb repz aaa sar add loope add cmp out stc add (bad) adc add sub movb adcb xchg add leave sbb rolb cmp mov stos data16 scas dec out iret lods push in scas push sti enter loop mov mov js (bad) pop iret jge andb adc push mov ret lcall mov lret add mov push push xor push add (bad) mov sbb jg out js imul xchg add push xchg mov nop mov and mov sub arpl add xchg outsb jae incb jbe loope inc push xorb sahf push ret push and stos addb out pusha jg add movsl loopne adc subl adc sti jge int3 or jl add jecxz into mov cs sbb int3 cmp add or sar add and sbb outsl je inc ss not pop inc in mov add loope cli xchg add push subb pop andl mov ja sbb add jmp adc jl add cmpsl in adc lahf or jge das xlat test jo aam jb stc push jno add inc push add mov leave or mov xchg clc pop cmp movsb jnp add mov cld imul sti xchg and in cwtl push adc xchg loopne mov hlt test sbb mov xlat jae dec add pusha add int3 xchg sub popf cmp (bad) or dec pop cmpsb push outsl in add aaa jg or das popa sti sbb xchg jmp sub push insb out pop add push inc inc inc cmp mov jg and in mov arpl or (bad) cmp rcr test add jmp adc jnp add sub clc inc mov jb xor cmp mov cwtl addl cmp mov je push add sub sub mov pop clc push mov add roll jmp cwtl pop adc pusha adc rclb clc int in add rcrb in nop add inc iret jle out jbe inc jne add pop imul inc ret jge cmp leave dec cmp add sub subb jb push lahf je xor push out shlb cmp insl ret push mov cmp lcall lods or xchg mov mov mov movsl aam add nop ret pop fistl lods dec or push add sub pop sub cmp cmp outsb cmp add addr16 lods inc push loopne add sbb (bad) adc cmp dec cmp add pop scas add mov lock sbb fs aaa addl cwtl nop loop add jmp inc fwait add xor or mov rclb orb sbb (bad) iret xchg add (bad) jae push lock adc cwtl mov mov lret push push inc clc faddl rclb loopne sbb cmovp lret xchg push fisub push add sbb xor xor pop inc js add jecxz sbb rol (bad) icebp jno add out (bad) cmp insb loope or stos adc in inc push and mov sub add cltd cli mov add fwait sub arpl sbb call into dec jae cmpsb fstpt adc ret cmp add in dec fs add push xchg add sub add and mov mov ficompl or out dec add (bad) push push adc dec cmp adc subb rorb xchg rolb xlat push pop pop loopne dec mov jp clc or sub dec daa dec and loope loop jge and push xchg mov push subb stos add int loope xor mov inc xchg lret stos jle add out xor add add jbe lds or leave shll (bad) add lcall stc add add imul dec add mov add sahf xchg test imul sub mov xlat push mov xor push in add insb add inc enter mov cld inc add mov jmp push inc stos xchg inc pop lahf jno mov repnz sub and xor cmp (bad) test mov cmpsb out add test push jo jae push jge cmp lea xchg jg mov ja xchg xchg add loopne push and cmp add pop std and cli push cmpsl xchg sbb fidiv insb movsl aas loopne cmp and add xchg ljmp mov in fnsave jle push or int3 xchg push cmpsl inc adc adc dec add push lods aas and call outsl inc aad test shll xchg push push enter jb cmp or pop mov cmp add mov shll fcom fisubr inc sub xor scas ret jp mov or mov fbstp negb loope cmp loope sub add jg push pop test add add out outsl inc mov mov fistl mov and xor js aas sub jb sub sub das ret add add pop mov repnz add adc ss enter sub inc test mov add pop mov mov in dec notb mov inc add jnp pop add rcrl in add stos sarb add or adc push push and lcall xchg add outsl fidivl orl add mov repz add jge scas mov add scas insl bound cmp xchg sub xchg icebp add mov loope ss add aam xchg pop mov and cltd das xor jns addl pop test fs ret inc gs movsl cmp mov adc jns in das or xor pop sbb add iret jne outsb aas jns scas sbb mov jo cmc es and xchg sbb pop dec mov add add cmpsb movsl add jl adc pusha jae mov mov js in leave adc fadds rcrb inc jbe fnsave jno sbb xchg rep add loopne push add dec mov and leave addb cmp sarb pop xchg aaa xor stos pusha test adcb cld lea xor adc jp jb mov daa dec pop shrl cmp cmp movsb add outsb pusha adc fidivr and addl call lock idiv jnp imul loop push int3 es roll add push dec jg or ss add sbb cmp cs orb xor ficompl (bad) faddl fnstenv sti push nop lret dec in test xor mov fs cmp mov cli orl aas aad add add rcrl xchg add push fisttpl push xchg mov test insb fild jge jl inc pop mov xor dec mov pop push jnp push les add js clc add int3 sub jnp pop jecxz ret xor xlat in and add dec pop out sub jno add mov push jo (bad) pop outsl xor cld add pop cmpsl cmp mov jbe sbb rorl cmp push sub nop pop fild xchg addr16 cmpsl nop in ljmp daa lcall unpcklps dec adc dec xchg push mov fdivs iret add pop std lea loop push push xchg ret add jp or (bad) sahf cmp rolb loopne inc jge add rorl lods sti pop (bad) mov pop cmp dec inc sarb add xchg pushf insb dec cmpsl sbb icebp jl or mov dec or jns shll pop addr16 icebp adc in or and mov data16 xchg pop les sub loope xchg pusha mov cmp add add andb jne pop loop add jns sub sbb mov mov push add push cmc addl test negb add xor xchg in pusha call movsb js lock push sbb xor jle (bad) and lods stc cmp add push sub add fisubr xor cmpsl call decl stos jne add ds orl push rcl icebp or mov mov xchg mov jp add jno and int fmul mov (bad) mov pushf jb mov pop pusha clc out adc idivb testl ret cmp icebp mov or pusha je jbe data16 jno nop sub dec add insl dec jns jo mov lods mov push push fildll jns aaa sbb inc jmp xchg scas aas popf out fimull not shl adc add and pop xchg jns push cmpsl add jle xchg repnz mov sahf hlt movsl inc nop xor dec jo je or testl hlt fisttpl stc sbb push and test xchg mov add add sarl test mov test adc and js add mov loopne push ret jo or pop test xchg jo jno scas cmp mov enter jb out fdivr clc add jbe stos jo gs outsl nop pop add loope inc push cmpsl lea xor or out aaa lods loopne test in add xor push loop lea jecxz add insl scas pop dec sub call or outsb push mov (bad) dec loop ja adc cmp mov aam out add rcrl es out cmpsl pop aad pop int xchg fadds add push in movsb movsl testb das xor ret je inc add jmp enter add mov sbb jnp inc push rcrb out cmp outsl stos dec (bad) pushl mov xchg add or dec add push fsubs into and add in jle divl mov addr16 jno sbb xlat push push inc pusha mov add sbb ret fs sub test nop push std add inc or add out aam incb clc sbb scas jno fmull dec inc and cmpsl cmp dec nop cmp pop imul sub xchg add push clc leave and sub push loop jge and lock cmp add stc xor and imul push xor (bad) dec (bad) xchg mov pop pop cmp test loope xor and cmp adc xchg call (bad) sahf fs add fbld scas sub cmp fldenv stc jo (bad) mov mov sub sub nop test adc inc ss ljmp cmp lock cmpsl pop (bad) mov ljmp div jecxz xchg (bad) and (bad) xor roll mov ds cmp adc push push jnp add mov xlat xor popa imul add movsb sbb repz rcr add call cmp sbb xor fldt mov add or in addb daa and add js lods pop lds jge into popa xor mov nop shl add jl cwtl cmp enter mov rolb mov call add sub jns mov lods sub aaa jo pusha (bad) or mov xchg xchg adc push dec jo scas daa mov cmc cmp add xor movsl add out sbb xchg and sub and pop and jo sbb mov cmp int3 clc psubusw pusha pop out cltd mov add pop sbb add inc loopne xlat bound jg pop or ret push add xchg lahf out sub or popa iret mov or pop xchg (bad) jle pushf lea push push arpl push test (bad) nop sti mov cmp insb xlat fidivrl jo xchg cmp push fldenv data16 or xchg or cmp subl popf mov add in jns lret add ret pusha std mov cli mov sbb pop xchg ficom add cmpsb jl cs jecxz test daa or jno or sahf push inc push data16 sub add shrb ljmp ror pop push inc je stos inc xchg dec outsb or add out mov enter pop mov xchg dec je loopne dec jo xchg add push popf imul ffree test roll call xor add stos popf jge pop add sub fidivr add cmpsl xor sahf nop jbe mov cmp inc dec adc jno xchg push fnstcw sbb lret loopne pop movb fsts push sbb cld xlat sbb sbbl js pusha scas adc lds and cwtl andb jp dec add add jmp in add test and lret push xchg ror push or push mov and je sahf insb push jmp or scas mov fs add mov mov xlat or popa add loope jae pushf rcrb sub lea add rorb adc push adc je mov out jbe jecxz loope addr16 sbbb and add in test mov adc xchg outsl xchg cli add mov cmc adc jnp sti and cld or jo js fisub xor flds loopne aam mov rolb pop push pop cmpsl in sbb sbb xor adc mov adc and dec pop cmpb out mov jbe or ss xchg adc push and jp or (bad) leave nop sbbb (bad) jge add mov clc push jnp pop loop sub inc fnstsw mov neg sarl notl jnp push das scas add es xchg stc sbb add and xorl test jae js,pt nop in rcll and movnti jbe scas and add ret push shlb xor or pop inc dec imul push pop mov inc ljmp add scas shrl mov cmp and out jb,pt or cmp and enter mov add mov pop push loope push jg xchg cmpsl loopne add adc (bad) insl and sub push jge inc into fld dec add movmskps add push mov add stos cmc jns pushf mov add pop cmp push cmp add lahf inc je sub cmp rolb add jmp shll xchg dec push out adc mov inc bound xor jae fildl hlt call add ss pop dec loope pop push dec aam add mov sti jp mov das arpl add mov add or daa xor mulb mov mov lahf in ss xchg clc dec or add jb mov add mull sahf mov push scas hlt test cmp inc (bad) xchg mov mov xchg pop imul and add cmp jbe popl popa (bad) lds loopne mov add jae jo adc add aas (bad) dec dec xor jl pop aam mov lock out mov add addr16 adc outsl pop xor sbb cmp icebp pop cmpsl push lock or data16 add dec push (bad) aas hlt jo mov and dec enter and (bad) mov das hlt pop sahf adc popa cltd imul inc pop arpl mov push rol mull xchg mov inc mov lcall mov xchg in or pop xchg pop cmpsl add jb bound lcall mov inc mov aam adc pusha mov movsl dec sbb ljmp inc inc cmp clc movsl xchg or shr pop fwait xchg jo xorb xchg add gs ss or int cmpsb xchg lock mov push pusha lods inc xlat add pop inc dec lcall mov cmpsl jb int or mov icebp out pop xchg (bad) sub arpl pop pusha lds mov xchg test shll leave cmpb cs push pusha jecxz cwtl repz (bad) mov mov add push shll cmp sti fstpt lret cwtl mov jg or sarb push cmc mov movl cltd dec adc push add mov pop jg add (bad) lock push roll mov jge add xchg xchg (bad) push dec leave add in mov lret jno nop les fild sarb (bad) into sbb jge add cmp cmp fiaddl xor fisttpl fmull xor xor mov cmc pusha wrmsr lods jle adc dec mov dec add mov (bad) loopne jmp rorb aaa lahf and orb xor xchg pop inc pop insb add inc adc shl scas pusha add call mov xor gs ljmp cmp mov sub jnp mov fwait add mov inc mov pop lds mov cmp aas pusha (bad) xor adc add mov rorl add rcrl cmpsb mov and das cmp mov push imul mov ja cwtl int3 and mov cli ss and push push xchg and fistp call sub xchg outsl mov ss stc mov in fdivrl repnz push (bad) into mov jp in dec mov lock shrb xor nop inc mov gs rcrb or insb mov pop andb xor push add cmp adc jb push out (bad) pop fild clc mov jns add mov lcall pop es sub push test nop sub xor or xchg push add outsb inc mov and jle mov mov mov (bad) cmp dec and (bad) xor negb or enter aas sub cli inc add loopne inc dec push cmp mov out ret imulb mov cld jb lea insl jbe jne lods psllw or popf pop lahf mul add (bad) pop and ljmp cltd inc mov test arpl or icebp cmp add pop jo fisttpl pusha add mov and xor mov add (bad) aaa sub or sbb andl (bad) add and xor inc loop inc add add test cltd orb imul jl mov or js sar ss adc test sbb fcoms jmp adc cmpsl pop sub inc hlt adc add roll das add dec pop push or aam gs js lahf subb in xor or add adc sbb add ffree mov xchg cltd call hlt xlat cmp fs dec ja adc sub roll rcl mov mov pop jo pusha lret dec dec pop cs loopne adc xor sarl push xchg mov xor lods cmp clc adc stos mov sarb lock cmp clc mov mov inc mov repz inc cld loopne or mov xchg sbbl jno or adc ret rcrb es xor and mov mov pop lret sub in or je popa add push int3 scas fst repnz ds cwtl andb adc xor daa pop cld cs ret pop scas (bad) orb push int adc pusha push or test lahf mov xor push and mov pop add adc enter out nop push push xchg ja je pop jno adc and dec seto or gs and push add xor pop xor lods popf jnp aaa and fbld add mov js sub sbb push mov xor inc lretw xor ds fstps cmp ret into xorl adc ja adc repnz xor sbb mov push lock leave add inc jg scas mov or sar or add add in xor cmp stos fcos mov adc push aaa mov cs jl test add shr fnstcw adc insl jle mov jl mov push pop pop inc sbb ds aaa in cld sub jge test arpl inc and pushf andl nop and call xchg and pop sbb adc add mov or inc (bad) cmp mov xchg adc notl lret or lret mov cmp xchg mov rcrb lods add push aad add jnp nop add mov or mov xchg bound aaa pop lldt xchg mov fldl mov sbb push push add jo sbb push das pop (bad) push add jge xchg mov test dec iret icebp fisubrl fmull jle daa in pop add je lret mov push pop add lret shrb push jae jle jne sbb popl cmp incl dec addr16 mov add jmp push sbb mov xchg stos xor movl and lcall popa mov int stc jbe add pop sub add insb arpl mov gs xchg js pop orb imulb adc mov leave or pusha xor orl fcompl cmp and add movsl repnz add mov lret movsb add add add add add cmp adc add sbb add xchg rolb sub and movsl cs add lock in icebp push fstps xchg add push (bad) jl dec jno cmp ds and lahf stc repnz lds andl pop mov cltd sub stos jo inc xor pop cmp sbb ss fadds add and sub mov shrl add mov add es pop cs add js repz pop int3 dec add jbe add push insb push xchg xchg mov in jecxz pop jle in (bad) mov (bad) int adc dec mov lahf mov add xorb mov adcb cmpsb sub rolb push mov fninit fs inc shrl ds mov repnz bound inc lods (bad) (bad) aam aad out nop jecxz ljmp shll lock fisubl push cmc add loopne in xor aas iret xlat add addl adc ret or jle rclb mov adc jbe push sub or xchg and dec add ss add icebp sub add adc popf (bad) or in sub or add call dec add cmpsl mov aad dec add add pop jmp add stc movsl fsubl inc sub pop into adc mov add sub fild cwtl inc test and add in test cwtl pusha lds sub shrl add (bad) in arpl add gs mov push add ror test add xor pushf push pop dec fstl ds push mov jb add push fsub sbb rclb or cwtl data16 push push loope inc jb stos int adc dec fwait and (bad) sub add mov jge add inc pop pop or loope or aaa sbb in pushf add into jnp or idivb sbb inc (bad) test add or enter nop add xor inc (bad) std push add lods clc mov mov add jbe add mov clc cmp shrb andl adc test mov movsl adcb mov pop loope sub jmp xor lahf es stos mov sbb push aad add jp add pusha mov mov mov rcrl adc sbb dec es sbb mov aas jle or push add std jae push cmp aas andl inc mov mov add add outsb cmp and insb dec incb xor in push pop xor data16 pop and xor mov test add mov xchg inc adc test mov ljmp adc cmpsb cmp int mov ja cwtl fmuls sbb popa or call sti popf push sarb jae mov dec add add test cli dec add imul add outsl in ret jo insb add xor mov xor mov and mov flds fistpl fstpl add adc stos imul sbb and inc flds arpl pusha xlat pop add scas fwait push push test mov bound mov mov add lret loope insl mov jp push or sbb into decb fcoml aaa add cld and add fldl sar jmp iret adc jae mov rorb (bad) and mov inc and pop and or ljmp adc mov pop xchg add jge inc movsb add imul in jno pop push mov add mov mov inc sbb in js enter repz aad (bad) cmc dec jl add insl sbb pop sbbb dec and movsb and push pop fisubr jecxz je nop inc or cmp sub inc dec sub add mov ret int3 mov pop push xor cmpsl mov sbb add jbe ss movsb test int3 notl in add push sbb pop mov fninit enter loop,pn push (bad) inc inc lods imul popf xor sub inc pop xchg pusha das cmp ret push insb pop lock ja dec adc inc cmp add test std scas dec rol pop add fcmovbe sub mov sub or push pop mov push inc add and push jnp out add fildl add sub js jp add mov mov pop mov cmp or push and xchg pop jl imul push ja ficom test cld (bad) jo jns add loope js adc imul in popa fdivrl icebp push jecxz add daa mov mov in (bad) jae scas cmp pusha xor add mov in dec add test xchg adc shl pop fcoml pop scas test es cmp aas add cwtl xchg push add mov dec and in jle insb enter cmp mov popf daa addb leave fcomps xor dec sbb (bad) lock pop std add fnstsw fildl sahf cmp pop aam lods push inc daa (bad) iret ret mov jp inc mov arpl jo cmp sahf push mov dec mov or adc (bad) mov mov std lcall xchg out ja addl jmp jle fist add cmp dec sarb mov pop out push and stos add (bad) decb add int xor pop push lods mov or test enter xor add addr16 xchg loopne inc add cltd cmpw jbe sbb loope dec mov fs lods lock ja adc jns sti add cmp lea xor sub fcoms arpl and push sbb cmpsl mov xchg nop mov add xchg sub mov jge shl (bad) add push add mov outsb lcall push add add shlb xchg inc xorb mov dec (bad) test rolb push cmpsb push in adc xchg sbb push and sahf int3 jnp lds inc inc mov sub insl dec adc and hlt mov pop fiadd call cmp lret cmp mov out add pop mov into jbe add cmp lret add outsl mov mov sbbb adc and inc movsb scas xor cwtl pusha mov popa add ds jbe add add mov les inc gs out jecxz add sub (bad) rcrb adc sub test xor lods (bad) stos push arpl shlb je lock pop inc mov mov (bad) aas andb dec or add mov rcll jnp add js cmovl push cs rolb dec lret (bad) push int fadds stos lahf leave xchg (bad) jge aaa xchg outsl cs cs mov xor das jmp test mov push and lcall shrb movsl jmp repnz mov add xchg test ret pop fmull fcoml rcrb cmp inc insb (bad) mov adc mov ret sbb lea arpl hlt xchg pop cli or cmp in mov iret cwtl xor add (bad) fsubrs imul int ret mov (bad) jo pop sub inc and push add lods jg aam xchg add sti out das xchg in add imull jo xchg fisttpll lea je mov popa ljmp mov in jmp gs mov and jmp rorb mov andl repz add xchg add daa add mov add mov and loopne sbb pop nop dec xchg aaa cmp rorb clc jp add xorl notb movsb dec and cli push push dec add popa xchg pop add dec (bad) fnstsw pop fldenv mov cmp cs pop xchg test xor in insb call cmp repnz test jmp rcl add hlt cmp dec pop xlat inc push popl lcall fnstcw inc sub mov sbb xchg pop int3 cmc push push and push out movsl add push rcrb add fs dec add mov and faddp addl sub test mov std mov adc push inc (bad) dec mov gs push xor xor fild imul int3 or sbb sub fs xorb cltd add bound mov sbb adc pusha into inc ds faddl cmp (bad) xor popa push pop gs ficomp add fnstcw mov pushf xchg lret inc sbb fiaddl cmp and std xor iret adc out pop and xchg pop repz add xor js imul fs xor fisttpl pop and aad push ljmp imul aad cmp or test das shrb jmp adc (bad) out xchg cmp fcmovnu cli mov xlat and cmp push add ljmp (bad) cmpsl lret dec push test enter dec sbb cmp (bad) jg xchg std sub sti popf add lds jecxz xor sbb loope add dec or pop sbb sub pop add fidivr leave lea in push and bound es enter ljmp mov std inc in in add movlhps popa fsub add stc lock movsl jns add (bad) es mov leave out mov add and addr16 adc add fbld call ret pop mov push add mov add loope nop mov mov jns movsb mov dec sbb movb ret in leave add jle lock xchg push dec add cltd add addl jnp (bad) sti inc test or adc sub add sbb add cmp in iret mov lea add cmp adc icebp xor add push stos sbb divb in and insl push in sar shr ljmp popa out mov in lods int pop testl add outsl in (bad) cmpsb popf cltd and jne pop jo xchg pop mov pop test lds pop add pop movsb enter sub sbb dec push hlt xchg (bad) lea test mov add in out xchg and pusha sub adc xchg dec mov push in fild pop cmpsl ja out dec push call rclb and xor fiaddl push push xor add or (bad) cmp xchg int cmpsl add lret or cli cld popf add add mov sti lea sbb sbbb inc add adc movsl mov (bad) xchg or insl jmp mov cmc orb int3 imul xchg (bad) popf stos sbb push add data16 add xchg add sbb inc je mov (bad) mov dec mov in jne add mov (bad) mov into repz add push outsb push sub xor test rcrl dec (bad) out add hlt mov clc lea stc mov fnsetpm(287 xchg or in sub pop and jl out mov andb jp add clc push cli pop mov arpl pop jo cmp lret fdivl jbe pop and fwait test pop pusha xor mov jl add ja sub add push inc fidivr dec data16 add ror (bad) mov shl repz pop and adc loope loopne jg test jle add add jae xchg mov sub mov push xchg dec mov lcall test jb jge push mov push xor or inc mov jecxz subb outsl add sub and add jmp inc cmp xchg sub lock lcall mov jno push inc cltd inc or xchg pop ds mov movsb es mov les sbb mov cltd test leave dec add adc movsb pop shlb or in dec cmp mov (bad) mov xor xor jne sbb add xor lcall add pop lock dec and mov sub fldenv add test push inc and jmp cmp xchg in outsb mov aam ficomp (bad) fidivl (bad) jmp dec jg out (bad) cwtl mov xor jmp inc mov add jno jle add int3 cmp jns pop cli insl and ljmp lock mov mov sbb insl dec fucomip lret add andl jno lock or sahf repz in pusha xor nop clc pop or inc sti fldl xchg call adc cld mov loope mov jbe (bad) loopne cmp or pop testl loope fs pop lahf fxch mov push pushf inc inc xchg add outsl sbb add adc mov cmc (bad) (bad) clc (bad) sub add cmp mov push fs enter movsb sahf dec lock jecxz sbb and int3 pop inc sub dec sahf xchg jge jp out ja (bad) cld push mov mov and movsl sub adc push psubb add lds xor (bad) or sbb sti inc lea jno pop cmpsl arpl call adc jle loopne repnz add sbb jne insl dec add (bad) jle or cli lods sub aam inc outsb and xchg inc add mov mov jle lea std lock pop add add inc jns pop shr leave lret or add add ret rcll xor dec add scas pop sbb xor fldt pop stos loopne mov in jo push pop je icebp add (bad) cmpsl ss push add mov test pop jo push aad dec out fs xchg out mov fadds xchg push loop push push aam js ret jge jnp cli pusha add cmp addr16 xor push mov sbbb jno add std es js fs add mov loopne test add jno add dec outsb push rcll stc adc sub lahf push mov xor sub inc inc nop mov pop sarb mov cmp pushl loopne dec cmp (bad) in xor mov or dec pop xchg inc hlt sarb pop jp pop iret int3 sub in in push imul jg jnp cvttps2pi add add test lods out lock add andb or into mov or lock dec je lcall xor xor loopne pop sbb insl or fcoml gs mov roll lods test adc jo ds in pop lret orl fildl mov sub (bad) push dec pop dec mov (bad) shrl and mov int add add sbb sub lea ds adc (bad) mov add popf mov jne mov cld test mov cmpsl mov push sub stos and or rcll xchg insb call xor xchg loop cwtl lret add ret fwait dec pop cmp arpl and or mov daa xor add into cmp fwait jo,pt mov lret cmp or movsb aas stc out jp loopne mov (bad) mov rcr pop cmp xor fsubs in add adc fwait icebp adc jb ljmp clc pop test xor in push ss mov aas fwait adc cmpsl aaa mov std sbbl enter xor add jnp add xchg jnp add test jae in sbb mov test dec jb,pt add (bad) call addr16 add std loopne stc insb pushf mov jp jle rol push jb scas ja pop jmp sbb in fldcw mov adc inc cmp add rclb mov lds push jo imul bound pop inc scas mov ja add mov cs arpl ret adc dec inc sbb push push add lea int3 add loopne (bad) xchg ror xor inc pushf in rcrb jp pop test mov dec xor adc xchg inc cli adc push add ror lods dec enter cmp flds xor (bad) hlt jnp orl pusha mov add std push notb test lods pop (bad) test fild out nop loop xor xor (bad) xchg fnsave ss jns scas lods pop xor dec add inc outsl cld fbld sbb lods ret mov testl inc sbb js fsubrl or lret in outsl jle add mov int3 sti test sub fisttp jle lcall add movsb inc adc mov mov add mulb iret call inc rol loope lcall in and xchg jno,pt add dec mov or xor mov mov or push outsl add xchg lret (bad) ret mov add mov inc add ret add (bad) adc in cld in add movsl stos out or jnp push cli je in add or xor (bad) (bad) clc xor (bad) call loopne mov aam push jns sbb fsubrl push scas mov loope jge or sbb orl mov jl add or push mov adc xchg xor ja or fistpl xchg add or lcall xlat xchg test clc mov inc xchg dec add cmp cmp mov add rol xor test xchg add pop pop popa sbb es add add jb cmc (bad) add xor scas push pop or (bad) daa sahf add adc xchg xor jecxz mov sbb add and pop mov lds add sbb or sti push cmp push sarb mov mov add cwtl or movsb mov xor pop jo sbb add (bad) in out adc push incl and sub or cmp xchg je xchg dec sub insb dec js xor fiadd adc cmpsl jg adc rol fisubl mov xchg divb gs or add daa push negl repnz and add jmp mov dec inc push fisub push xchg cwtl mov adc add outsb lret mov pusha rcrl cmpsl pop xorl jno (bad) mov mov add sbb imul outsb pusha (bad) adc loop incb pop jbe ljmp sbb addl jnp inc pop adc lea and and stos into fcoms loope adc xchg pop gs loopne push js into pop mov xor outsl add lods ror test fcoml test addr16 in test sarb add inc mov or and push sahf add cmp stos mov jl bswap out mov fidivr (bad) loop mov jmp in (bad) mov int add out jecxz loop loope rol ficompl test add scas cmpsl out movsb cs lret dec add int3 jne adc (bad) mov mov rcll adc pop sub imul mov and movsl add pop loopne dec notl sti mov sub mov mov daa and nop pop test call jb inc push sub push push sub fadds push adc inc mov test or les cli mov add pop and sub (bad) adc inc mov les loop lock mov outsb push cmp or insl push pop or mov add dec insl inc shlb add popa ss xchg xchg pop jle jo xor or or dec pop (bad) adc fimull add dec and xor in xlat ret lahf mov ret (bad) and cwtl jge (bad) lret mov das sub add xchg pop jmp add add sbb dec push adc iret fidivr inc mov mov lods cmp mov xchg xchg sti cld je clc sub add or sbb xor pop andb sbb fiadd das scas (bad) push mov push cmpsl or cmp addb sar push or push add jl (bad) hlt cmp (bad) pop jmp jo cmp or or pop loop js adc std mov les aaa das les aas pop xor add nop add cmp mov mov sahf xchg ret mov mov add mov imul sbb add aas loopne pop enter inc adcb push test enter mov inc jle fcomp daa notb add pop add add sub call (bad) imul pop loopne sub jo cmpb add sbb mov sub aas dec xor and les jg adc or pop pxor jp and lods cmp xchg mov push xor sbb xor xchg push add (bad) and nop rolb inc call mov add dec aad nop (bad) mov add loope mov mov jl add jecxz push sbb subb mov cwtl adc (bad) add cmp out jne jo fidiv rcrb and stos test adc push add in sub add xchg mov or adcb pop jp andb lahf outsb lea mov (bad) cmc out cmp pop pop lea pop int3 mov cmp orb scas mov pop aad js test xlat imul sub and add or loopne pop add dec mov orl add scas jge jo ja stos (bad) jmp loop aad push mov outsb push nop mov repz pop add lcall out in sub cmp cmp popa fiaddl add pop or arpl fwait and xor outsb inc stos add jge sbb add mov inc inc fbstp mov add gs xchg add cld mov add jle mov into pop dec pop in cmpsb add hlt mov outsl in cmp inc mov popl jnp scas sti add (bad) jne inc inc sub ja pop and xor add nop sbb daa test imul xor xchg xchg roll jns mov add jbe,pn adc sti push dec cmp adc add aad xlat mov add fsin scas adc dec pop adc or xchg add or cmp add sbb jnp loop inc add add pop movsb pop inc cmpsb ljmp scas push loop and mov xor fdivrl popa cmp sbb roll into add mov jecxz add adc cld adcl ja cmp and (bad) clc adc flds ficoml mov jecxz dec out jo add insl dec or loop add lds sarb add jl mov in enter cmc cmp push sub jb movsb nop xchg iret ss add bound jmp dec add dec into pop cmc push shr cmp push test pusha je add addr16 hlt add imul cmp pop add jg adc (bad) sar and sub mov jb add push aaa mov add mov mov cmc dec xor jns (bad) mov enter add test sbb cmp fwait jmp push es adc inc icebp out inc test out add lds gs loope add xchg fwait int mov test dec add jo out cwtl pop lret add pop jbe cmp imulb push stc mov mov loopne rolb adc out cmp and pop jge je add push xchg inc mov loopne xor xchg adc inc test aaa cld mov (bad) sbb push lahf sar jb cltd add fsubrs outsl push xchg (bad) or repz cwtl test xor cmp testb (bad) iret nop rolb and push mov or inc push add fnstsw out scas and pop xchg loope pusha inc jmp inc inc fimul dec add xchg shrb roll sbb push repnz jne add (bad) pop pop cmp out les and bound out fistl lock pop arpl js sbb adc mov adc cmpl stos jmp aas push orl jp pop push es int shr add movsb mov enter nop rclb add sbbb cld addl cmp xor out jo sub clc pop pop xor jbe shrb adc inc pop data16 inc (bad) add mov add cmp ljmp loope scas push xlat leave fimull mov adc pushf fnop les add push call enter xchg cwtl and add or xlat add add rcll ljmp add push sub add or xchg (bad) cmp add out push mov add push cmp cmp rcr inc sbb and cmpsb sub xor add inc add scas stc add sub mov sbb pusha jg,pt add test cvtpi2ps roll adc repz cmp dec add addr16 bswap inc outsl fdivrs jl and in inc clc (bad) std xor cmp rorb and pop jno add adc push rcrb lahf mov outsl dec loopne xchg push inc fistpll and mov fiaddl xlat push jno cmpsb cmp popl lods sub cmp sub xchg mov sbb js orb xor mov mov enter fdivl add in arpl mov sub scas loopne add mov loope in push in push mov mov mov mov sub inc scas fsubrs sti sbb and or cmpsb add fsubl push (bad) lds lret pop jge loopne and xchg (bad) mov adc inc mov outsl dec jo cmpsb xor daa or inc fs pushf sbbb jne cmpsl inc int es mov stos add jmp (bad) dec mov testl les mov cmp lock push xor jmp pushl loopne add xor pusha mov xchg add out jno cmp sub ss add addb jmp insl sbb test jae les in add mov pop xor xchg repz ffree adc stos pop mov add pop jmp lock and clc add cmp sbb cltd pop xchg es les jle and je adc pusha mov jno jge xor xchg add mov pop mov pop test cmpsl push mov push sbb stc loope mov adc fstps stos faddl ficoml sub adc mov pushf insb cld inc loope js mov mov dec add test mov pop sub pop dec pop xlat call cmpsb mov pop xchg push inc xor add loope jne add pushf dec pop in mov add hlt popa ss add leave (bad) int3 push mov dec xor arpl jl add mov cld scas in adc jg mov mov sub cmp cmpsb roll pop insl pop mov sub adc xlat jo jecxz inc add jbe loope rcll inc add mov sbb push jecxz rolb add jae jnp xchg sub stos int3 add or mov add pop mov add inc inc int3 repz cmp loopne pop mov es add add jecxz adc std popa stos adc (bad) out xor mov adc in insb notl pop push test add (bad) clc xchg xchg dec add aaa (bad) jbe test scas pop lods add inc jge lea pushaw iret cltd movsl insb adc and pushf inc sbb (bad) outsb fistp incl pop loop push pop enter dec fdivr repnz jo add js in loopne andb inc cmp push sbb pop test sub ret add cmp js add mov imul lods add jne mov arpl dec add js lahf int3 jns add push lods stc xor decb dec cwtl add add or lock iret js push sbb sub mov push and and rolb ljmp and into mov lret add pop lds jo shlb add into js add sbb stos cli out add xchg in add sbb incl add test adc cli add (bad) hlt clc bound add aaa int3 loop inc ljmp movsb inc (bad) or adc xchg gs pop cwtl cmp rclb xor popf pop scas add sub lea xchg cmp pop add add mov (bad) dec xchg mov lock lds pop test pop into in lods sbbb dec repnz push sub adc and jae sbb jl loopne adc (bad) dec mov adcl cmpsb mov mov adc pop pop xchg mov and jae push push and mov outsb shr push xchg cmp call mov arpl inc xchg add pop clc and jns lcall ss loope xchg mov out dec repnz push adcb pop mov das clc adc add lds cmc scas rorb or xor jne adc inc xchg scas add mov push js imul inc dec arpl sti xchg nop and sbb xorl cli insl out aam mov test mov movsb mov inc ja std and cld add repz fwait sbb xchg clc add add push outsb outsl cmovbe cmpsl (bad) or pop in add scas and sti lods push lock xchg pop (bad) in imul add dec mov ret add in inc add push or push xor jp mov and leave arpl repz mov mov mov add xchg testb jbe movsb in gs inc in add leave mov xchg or mov (bad) jmp add dec pop clc in add cmc outsl fdivrs test fld notl add jb inc jnp or call add pushf push loope jbe aas mov and push jnp rorb dec and add xlat dec push adc shrb bound test fdivr test adc mov mov movl pop insl sbb cmpsl add int3 sub repz add add add push sbb stc (bad) pop and sti loopne add xchg aam mov ffreep push pop out movsl or fnstcw mov push push enter xchg add inc fist addb gs test lock insb cmp pop push mov shrb in movw mov ds insb add jle sub str in pop jl or add dec pop mov mov hlt mov les repz pop inc add ss repz clc mov cmovs push ret leave xchg shrb ret add fisttp adc sbb sbb (bad) dec fadd add mov jge jo add jb stc cmp out and lds je push popa rolb mov jbe add shll cwtl pop ss (bad) pusha pop loopne xchg adc ja push mov dec lock mov hlt add jg stos or pusha xchg adc sti repz and and sub pop xlat add fmuls xchg inc out xor xor inc jle add mov dec dec cltd push dec test add rcrb mov mov xchg inc adcb nop cli rorl add outsl cmpsb lods sub test or mov outsb pop add daa mov stos adc jle loopne aad mov mov add cmp enter int3 mov cltd inc or lret mov jle into insl sbb jo add (bad) fidivrl out inc mov xor sbb les pop sub outsb nop add sub icebp or and mov dec or data16 dec mov pop jg hlt push pop int3 jp shl popa dec mov test cwtl jb xchg push loope add sbb mov int xchg add dec fsubrl fs out sub (bad) jp ljmp sbb ret push sbbb sub fildl push dec add cmp inc and mov enter jg fwait add lods mov mov and test xor inc aam ja push rclb jmp fstl mov push gs hlt add (bad) ljmp push nop aas sbb mov les add rolb popa pop mov aas ss cmp js mov add aaa int dec adc lret add dec cmp outsb mov cmc push pop movsb fcomps push inc pop mov pop mov nop data16 add mov and add jp fsubrs add ret xlat pop xchg or je add pop sbb pop pushf mov or inc xchg push mov (bad) jno dec inc xchg lods jns mov cmp pushf out cld inc mov outsb pop aas fistpll test fiadd mov sbb add push adc mov bound loopne (bad) mov ret pop and inc lods add repz pop add add das jno fiadd popl pop repnz outsl or sbb popa jp xchg sbb mov push adc imul ret add inc push in jno ret or dec in aam shll jp cmpsb add popf push movsl pop cmc imulb sub dec push and add and or rclb nop in call lea (bad) adc sbb jns xchg aaa pop mov fistpl add cli data16 shrl gs cmp aam add pop (bad) mov inc popf adc add push mov add pop idivb pop cmp dec pop adc nop iret lods sub dec or sub popf push aaa mov sbb ds hlt jecxz loope lods in lcall xchg or add add push jb push xlat mov add cmp das adcb sub in call add dec sub jo mov mov add mov add ret (bad) inc mov cmp in pop rcrl ret enter add sbb xchg add repz push loop out adc popf adc sarb nop add lea hlt cs insb add sub scas mov inc addb stos ss mov sbb add fsubl xchg mov add push (bad) imul inc in add adc orb push addr16 pop jae mov add mov icebp jo or rclb xchg sahf pusha xchg push dec mov add mov scas jo xor ret shrl jge call scas xchg cld sarl sbb mov add xor outsb mov mov mov insl std pop js xchg push popa mov pop pop and jg and add out fcomps cmp sub daa std or mov loop leave pusha rclb movsb cmp out rolb cmp je sbb pop lcall jns js mov popa ljmp loope sbb add cli and ljmp mov int3 add jle or addb (bad) pusha or push lcall sbb aas test outsl add or pop push hlt jle rorl push out mov out clc (bad) rolb add add je dec ja (bad) push add mov mov sbb fcomip clc mov adc sub fcompl xor jns dec es pop jnp xor in cmp add pop add mov shll scas add cmp add and fistpl add jno lock mov or int3 mov fcoms xchg das loope push std inc cmp jo int3 mov ds jp mov lods sbb int xchg aam stos data16 repnz jb pop and push sahf nop inc add xchg aas jae jne fld fs mov cmp adc add out cmp popf cmpsl cmp mov add clc mov andl xorl add in js add lcall xlat fdivl nop cmp js pop fidivl rcrl inc and xorb pop mov or in xor mov lea or mov sbb sub imul xchg jle sub push add std inc cmpsl (bad) cltd outsb xchg lret clc test pop (bad) sarb add mov mov or dec sti loopne add outsl rcrl mov andb mov push add push aam mov dec mov popf sub test cmp in pop xchg lcall ljmp je xchg pop pop sti scas add adc push (bad) roll pop jle fs repz dec js dec dec dec dec or arpl and xchg or lods jp sub mov int3 roll inc dec xchg fdivrp or push mov out sub adc rolb mov sbb popf mov add adc add push jg add (bad) push std xchg jno cld adc cmp rcrb clc ret add jae mov xchg mov push add xor push lahf push bswap dec lock in daa push divl or add cmp sbb ja pop xor fmuls xor mov lock pusha dec jle xchg cmp xchg hlt call sub mov jb mov adcb add int lret mov or cmp xchg add dec lock pushf repz add mov cld lret test sbb in and adcl dec add movsb xchg pop ret iret out pop add mov test (bad) or mov sbb stos (bad) clc add jae test and imul dec mov add sub xor jne or jno add lods jns js jbe add (bad) call ret xor loopne ja xor cmp push add test jp or push cmpsb pop mov ret andl dec outsl nop jmp pop cmp call call dec cmp repnz jg sbb into divb cwtl test xchg add test jl int3 lcall pop sub outsl add arpl jg pop add add jmp repz cmp pusha scas enter and fisttp pop dec mov sub sub xchg jne cmovle adc xchg (bad) into sub es inc pop add fstpl inc jns in add loopne sub shrb mov ja,pt and les (bad) aaa out xchg add adc lds fs cltd xchg xor js add out pop adc fbld gs jae add adc adc sbb mov out add cmp dec add mov int3 in adc xor or push js pop or fwait mov es pminub addr16 push inc add dec lock cltd fwait outsl add push adc add cmp adc jb sub or xchg and stos aas inc jnp mov add cmp (bad) sbb sub lea mov enter add pop push xlat scas mov fildl sbb shrb in in cmp jg add push test add loopne or jns into sbb testb stos push pop pop push popa out shlb push cmp mov stos fstps pop in mov in push or mov add mov rcrb pop add and out dec inc add jle mov pop inc adc lods loopne faddl or inc push sahf sbb lds fstp es lods push adc mov cwtl cmp add mov and jg leave add cwtl push inc xchg push loopne push sbb xchg loop shrb loope push or add pop pop mov mov sahf pusha push fcmovnb nop es adc dec add jno ja pop pop add movsl pop inc add and fild (bad) (bad) ds aaa add lock cmpsl inc mov mov push rcrl or lret pop mov xchg inc jns movsl cwtl ljmp (bad) mov and cwtl push aaa mov scas test cwtl mov add sti xchg mov add enter sbb mov mov subb pushf sbb out enter stc movsb cs push dec test mov add add and (bad) dec addb push jnp,pn ja pop mov (bad) movb mov jo and sbb mov das iret pop push inc push jae xchg mov inc or popf cli pop mov movsl push add fcomip sub data16 daa fwait pop lret and sahf lahf xor sbb xchg mov xor xor roll daa cltd pop cmp jae sbb xor and lock cli addr16 add mov push push testb cmpl jns movb leave popf inc addl add mov inc pusha ljmp int loopne xlat cmp insl xor lock test aad (bad) dec cwtl jno and fldenv add xchg bound pusha (bad) xor or (bad) pop inc psubd mov in mov es inc je cld pop add rcrl and push movl push push movsl xor or lods mov test cmp mov push cmp sti sub andl out testb add inc fcmovne aas dec and lcall jno inc push mov pop rolb dec fisubr cmpsl add add hlt ss cwtl mov ja add jmp mov add dec test mov xor cmp mov add aam (bad) xor lock add hlt dec mov add insb addr16 add sub push incl enter imul ret xchg loop es mov fs rcrb mov pusha lea mov or mov fs push add js test sub mov jp mov xchg outsb push scas movsl push lock add mov pop lret (bad) stos inc outsl mov rolb dec pop push roll dec cmp loope add mov js sub xchg and xchg add out jl sti fwait in add repnz pushl cmp mov (bad) lock test add ret fsub and and add pop sbb pop roll mov dec fs les (bad) adc jp and mov mov push cli sbb js lret push dec add mov (bad) xchg clc (bad) andl add scas (bad) inc lock mov mov mov lret and mov movsb and aas leave iret popf jae add loopne out mov js and and xor fs push mov dec push aas ret sarl inc jg xor fbstp int add sbb ja push inc xor push add shrb inc or pusha adc insb or lds or add sbb (bad) mov outsl (bad) jne pop mov idivl sbb jb frstor xchg repnz xor adc cmp add xchg sbb jne mov enter std adc pop fsub rorb xchg push (bad) pushf xchg add clc testl add movsl lea add fs xchg cmp xchg jbe cmp add shrb mov add addr16 andb xchg imul mov cmc push (bad) mov xchg mov cld mov mov in push or movsb lea aam jns pop pop mov sbb rcrl sbbl insl jg adc jle test adc out xchg push cmp mov xchg mov into mov xchg push inc icebp cmp xchg pop daa outsl rolb mov pop sbb fimull rolb test loopne add push dec rcrb mov jmp pusha dec cmpsb imul inc std rorb daa test pop mov lods cmp add or (bad) push sbb mov je pop cmp cmp add es rcr lock add les lds clc push dec add outsb or add int es rcll idivb dec add cli xor mov icebp cmp mov cwtl xchg nop push add cs xor andb dec (bad) fsubrs loop add (bad) xor push gs incb fildl sar sub dec adc lahf mov mov jb daa lods sub cmpsb add pop pop imul ja repz mov cmp add jbe mov pop movsl xchg push (bad) bound popf mov loopne inc cmc xor js mov in xchg cmpb andb lods clc sub inc cwtl nop dec add mulb shrb cwtl add int sub pop mov lea or or xor fldenv add jo pop adc int3 pop fsubr (bad) pop test rolb sub jbe fs (bad) and xchg xor loopne add adc nop dec cltd repnz aaa pcmpgtb push add push sbb add xor dec inc aas sub and pop or or and aas shl inc and cwtl (bad) push add (bad) and add mov iret add leave jnp repnz or (bad) add in jns or test (bad) jp jecxz hlt cmp add ja pop dec subl push or jl jae pop (bad) jae xor cs add ds sub add lds and jmp stos data16 mov cld cmp xor leave add lret add test ret mov cmp cwtl inc push xor or or repnz scas jecxz mov push mov out fcmovnu push or fbstp adc iret (bad) pop pop call lret fdivl insl fs stos inc sahf fdivr push xor in cli mov pusha orb rclb aas mov and mov add ljmp sub divl sbb add xchg cmpsl jmp dec ds subl icebp pop cld dec push add loopne stc das lock clc add adc dec imul add popa jmp add mov inc or fnstenv cmpb mov (bad) jns add leave mov jl fnstcw pop rorl pop fcoml or dec div inc add lds or push in in (bad) out xchg shr outsb add lcall cmp mov inc adc mov add mov push lock add dec inc sbb and xchg jp insl sbbb (bad) out repz scas pop adc in out dec dec jmp mov (bad) in shr mov sti add cmpsb dec or jle adc push leave dec imul (bad) jge xor and ret popf adc ds (bad) enter add lret addr16 xchg cmp sub fucomi jo aad in loope mov jp xor pop stc dec add mov lods sahf mov enter inc fs dec and ret arpl inc xor mov outsb adc (bad) add sub fidivl mov lcall sbb lock mov (bad) lods add mov mov xchg fs lock adc fmulp mov xor push add nop mov mov (bad) xchg jle js test fninit add in mov push xlat pop or push ds scas mov cs add sbb add or andb mov add adc xor mov pop push adc repnz push mov or loope mov add pushf call in pusha pop repz daa pusha mov mov add fsubs mull mov jp mov xor and dec lods aam mov or cltd jecxz (bad) adc fadds mov leave lret jmp (bad) add in add sti imul push adc imul ljmp pop mov test mov xchg mov subb aas jle outsl out jb inc movsb mov jmp lods bnd imul sub inc cli pop lock fmull add sub mov xchg fcoms inc pop jmp cmp repz sbbl dec ss fcom sbb mov movsb jl lods (bad) hlt mov add sbb add movsl push ljmp int3 lahf inc mov sub push dec pusha add js xchg mov or scas bt decb and bound std pop imul pop icebp add push and xor daa (bad) cmc xor jg inc (bad) adc and dec divl cmp sbb xchg xchg iret jge mov inc (bad) ss mov dec adc dec imul int frstor in sar jns sub cmpsb xor aaa loop push xor add cltd sub aad ja out and pushf mov sub mov cmp je fucomi xchg add rorb xor mov lret fstl mov movsb call pop das add scas inc cmp loop mov xor mov (bad) inc push jmp jp xchg xchg add dec nop push dec inc cmpsl jbe jnp add cs sub sarb (bad) xlat pop loopne test or mov (bad) (bad) cmp dec sub je add jl lock (bad) mov repnz insl add jb pop sbb shll les xlat lods orb push into add ss fwait dec inc (bad) adc inc xchg xchg ud1 sahf (bad) fild cmp sbb dec add and add fistp sbb in rcrb enter fiadd rcll mov adc sub jp xor add add sahf stos push adc xchg push mov insl jnp pop ret mov les call cmp pop int3 push stos adc xchg add add xchg pop aad mov lock popf gs icebp lock or xchg stc data16 loop pop fcmovne cmc adc loope lock ffreep jmp sbb scas cwtl insb add and shrb test hlt add enter int sbb dec in adc int3 fstpl idivl xchg lock and lds push mov loope sbbl sbb xchg fcoms xchg rolb xchg cmpsl bswap pop inc mov xchg ret xor sbb dec push cld mov mov popa dec jl int3 add inc and sahf cmpsb and and pop shlb jo test add rclb enter mov inc adc sub (bad) nop dec inc pop rorb xadd dec or pop imul xchg cmp add vmwrite fimull or dec push adc xchg ljmp or sbb movsl std test push push nop jb pop adc adc into adc mov andb push loop sbb mov inc lods dec sub add pop imul into pop push std dec jle cmp shlb insl in cmp dec cmpsl lock cmp add adc mov pop outsb (bad) mov adc inc fstl mov xor push call gs inc mov mov fchs sub outsb fisubr add mov mov xchg cmp dec add cs mov ds mov mov add enter pop and add xor arpl (bad) in add (bad) pop fdivl add pop lahf xchg jl push cld fisttpl movsb push inc add lods fcoml add int xchg add out jecxz (bad) (bad) loopne ljmp iret fildl cltd xor add pop loope ljmp cwtl jbe add push pop pushf ja cmp pop ja mov sbbl pop nop fldl push sahf cmp push imul repnz out mov inc pusha xchg jecxz mov ja push or cmc pop mov add in insb (bad) jge jnp lea fsubrs sbb daa cmp frstor das jecxz pop fsts mov lock jp mov add push push jae add insl adc push push jl add test adcl inc jne mov (bad) outsl push cs outsb pop adc jmp test lea add sub pop xchg push repz loopne add push imul and mov inc arpl (bad) sbb addr16 int add sahf add push mov stos jnp fndisi(8087 test adc ds pop sahf lret add jae push dec add cli add (bad) int3 inc pusha pop cwtl jecxz hlt mov inc xchg pusha loope,pn add out js sub sub add sub mov jg inc mov push fldl and inc idivb sar call cmp push mov push adc and push das mov add or shrb orb stos lahf sub sbb push ja mov and add fxch fisttp adc test mov jmp or add (bad) xor stos sarb test cmp mov pop and arpl aas movsl add or mov push adc add loop pushf push incl sti inc in inc cwtl mov jp std or popa movsb cmp xor fldenv mov rcrb out xchg imul mov push add sub mov repz outsl sahf jo dec xorb in jg sbb out cmp movsl mov lret (bad) and and cmp imul push dec add scas (bad) cmp inc faddl or das ret mov loopne sbb cmp xchg or lret sub add out push test add jae xor cmp push mov sub into faddl dec sub clc mov add pop or cmp add pop push je sub add add ret dec lods cmp cwtl sbb lahf push ds mov into or sub add jmp xor (bad) fisubl adc iret nop insb xchg pop adc aad mov mov mulb sbb add mov das xor faddl or nop dec adc sub xlat (bad) lret fild popf std roll addr16 mov add mov mov add add les lock cmpsl es fmuls or push cs add mull fldt sbb mov setl mov incb push test icebp sahf daa fstpt (bad) flds (bad) cld addb outsl sub jecxz insb add jo pusha add adc cs mov daa push and dec (bad) xor subl xchg push mov scas popf inc ljmp sbb jmp xchg mov aam add stos inc shlb fnstsw sub sub shlb add cmpsb lret adc test inc jle mov and mov add pop (bad) int xor mov data16 iret lret xchg add movsl (bad) clts sarl fistpll jae mov xchg add cld popf push pop andl and dec roll rclb scas das pop lret xchg inc je jmp ret sbb lock ja fs add orb cli xchg rcrb jl lods movsb in pop add cmpl jle ds push add pop movl and test outsb push mov punpckhbw add cmp add gs mov rorb sarb repz cld mov add ds lcall pushf test (bad) mov pusha cmp cmp push add push and add in jmp outsb push or iret das mov adc jmp int add mov rcrl add sub mov push jg push xor out out mov pop inc movsl test xchg push add rolb add push xchg add cmp add outsl mov lahf cld xor negl (bad) adc rcr jecxz scas xchg out dec and inc (bad) idivl or xor adc add (bad) or jle add (bad) adc adc dec mov (bad) xchg loopne into cmovnp xadd cmc adc jnp repz xor ds popa sti ss add inc clc jmp loop adc icebp in loope dec fldt inc outsl cli push mov add jle jno adc add gs stos dec adc scas (bad) adc cmp cmp or js jge cmp cmpsb arpl push fildl (bad) xor test and lret lret pop or xchg and pushl push mov add or add pop fdivrs outsb inc hlt inc jo inc adc (bad) add sahf or cmp push dec popf add loope add xchg xchg mov push sarl pop mov add pushf icebp jae sub lods test xor (bad) cmp les jae adc xchg ja cmpsb sbb mov jp cmpsb xchg sub xchg adc jo shrb (bad) xor iret loop mov xor adc int3 push push pop (bad) into add (bad) fwait push jnp add call mull inc inc add out adc js mov sub add xorl bound dec mov pop add xchg jnp stos mov sbb jecxz and hlt fistp call mov test popl nop or fsubp push jmp popf subb cmp aaa pusha add cld movsb or ds aam dec mov add and dec js mov data16 lret femms fidivr mov add pushf clc imul jbe dec nopl shlb stos dec out enter frstor xchg push data16 stos mov inc add ljmp xor popa mov sub faddl scas mov repz add mov inc mov mov pop sbb add ficoml gs add rol xor rolb add pop add cli roll testb adc sub mov pop (bad) enter xchg int3 push mov imul mov lds jge mov scas add fcompl enter cld or add aad xor inc cmp adc or fs cltd (bad) cwtl cld add movsb jecxz aaa sar adc and add fcompl pop dec andl nop or add xchg sub jecxz (bad) mov jmp loope sbbb xchg xchg add xchg cwtl add mov adc add cltd xor push pushf (bad) mov (bad) xor sub (bad) in mov shll aad pop repz (bad) adc inc xlat add in pop fdivrl movsl cld mov mov cltd js jb iret add push mov out aam jae jl and ret lret xor sbb adc or cmp movsl loopne daa add dec jnp sub iret sbbb lds testb leave rcrl aam ss add test add fstpl fsub mov imul stos add push push enter popa or push dec push cmp push into pop jbe add bound sahf pusha es jb add cwtl jnp and inc shlb out cmp cs sub add and mov cwtl pushf add add cmpsb push sar (bad) pushf das out cmp daa adc lcall roll adc push cmpsl cltd cwtl add pop popf les dec pop mov mov add sub adc imul bound push out sub cmp fs add aas xchg rcl xchg jno mov add push mov repz nop sbb and je enter add ret imull sbb jmp sbb in inc sbb adc and jg xor mov popa js and mov leave (bad) sub xor mov jae sub xor outsl cmp xor lock inc mov mov mov out pop cmpsb pop or cmp xchg dec push add stc pushf xor icebp sub pop add (bad) cmp push push (bad) xor leave or push adc in cmp pop inc or push and jno nop xor in mov rolb dec cmp mov push sbbb adc movsl (bad) push into mov mov dec mov pop inc mov sarl psubsb fs lods add push mov flds sbb or xchg (bad) shll scas sti nop insb dec xchg and (bad) and mov sbb and dec jo hlt jp in fild and pushf xchg and cmc sub testb mov lods lahf or adc jne addl sahf negb pop stos lock push enter mov pop mov dec dec mov (bad) pop pusha add ds fisttp sub sbb pusha mov xor inc in adc add pusha push xor cmp dec test push sbb or shlb push incb lahf mov fs push loope mov mov shrl cmc ss add cmp sbb sub dec sbb jle adc dec sbb sbb call cmpsb xchg sub add mov cmc add push bound mov movsb push fwait xchg test mov pop lock mov adc in leave div add xor mov or sub pop xor into cmp movsl subb jbe int3 push fiaddl lret inc jb das adc aam loopne ljmp ja int3 cmpb jno out int cli cmpsl inc add xchg xchg jns and sti lods repnz fild ljmp and sahf test jae fwait aas push jge imul jl mov pushf mov adc xchg jg push iret insb mov dec (bad) mov addr16 xor imul ret or push dec add movb sub pop and jge or or lea mov cmp addr16 mov fwait in jo cld xchg mov enter jmp in out in cmpsb add inc mov sub sarb ret mov repnz fsubr mov hlt lret add mov je roll pop loopne icebp (bad) repz add fistpl or inc and add lds xor add pusha data16 lods push push cmp mov push fsubs push out adc xchg or mov pusha jnp jg add xor in and mov rcrl cs fiaddl test sub popf jmp sbb adc add pop inc imul jns jne push inc (bad) adc adcb es cwtl call insb or dec add sahf cli outsl ret push pop sbb add fildll js cmp add into daa jle xchg ficom hlt add in lods movsl cmp or push scas (bad) negl out add inc into mov push mov cwtl inc nop xchg cmp hlt pop add push mov sub in bound or jle out push add fcmovbe mov jbe add fs sub repnz fbstp test enter adc cmp outsl add add icebp jae jge add fldcw and adc inc adc aad or pop pcmpgtd mov (bad) cld test mov dec mov xchg fsubrl lock add sub (bad) popa out in dec aam add cmp pop or inc add sbb push add aas lahf adc mov inc push mov xchg add mov pop rol aaa paddusb les lods nop mov stos pop mov (bad) ljmp and or std mov mov out movsb add or inc inc xor adc add arpl push jae fadds jo inc cltd hlt iret add ret rolb lds adc fimul add (bad) ficompl add cs add or push and mov dec push cli dec xchg or andl pavgw aad leave and xchg inc fldl scas push inc fcompl push je (bad) push bound add lds push cmpl mov repnz lret add pop jbe jns mov push cmc adc es test out pop or add pushf jne mov pop movsb adc loop sbb push jp jge jnp dec lock ret adc add xor int js add lock testb xchg jb or jo pop lret add pop int3 pushf in outsb hlt fisttpl (bad) stos fnstenvs divps inc add clc add jecxz stc pusha cmp xor (bad) xor add into scas shlb add bound test add fadd add loop jl pop addr16 add stos mov inc cmpsb mov xor adc add (bad) ljmp out fstpl adc ja push sbb jno or pop mov adcb sbb mov movsl sub fsubr xor int sub inc test adc xchg (bad) stc shr adc (bad) add push nop xchg mov mov mov lds shr mov int3 mov or jge mull add adc add repnz mov mov fiadd ljmp loope add pop add lds push add push fcompl fsts xchg pop xchg add jmp in leave (bad) mov mov jg jecxz mov mov sbb das fucomp add sbb cli mov and (bad) mov das dec cld data16 lahf xchg push pop and sbb sbb and ja adc sbb cli pop mov call scas inc popa mov xor pusha adc mov add lds add imul aad and sbbl out mov jl cmc or mov sarb popa push and and es cld and jnp push hlt fild pop out or or add sbb aad (bad) fbstp bound fcos icebp sub mov ljmp push dec notl movsb fdivrl cmpsb adc jecxz adc sbb inc or fbstp xchg and cmc pop popf fldl xor mov adc loope enter mov mov xchg add adc jo cmc insb sub mov xchg dec pop repnz daa pop cmpsb ret sbb dec es hlt pop test lods packsswb mov mov (bad) les push test lds neg push push or push xchg sbbb jae lret add sbb cmp pop or pop xor (bad) jb stos enter add pop xor out jl cli mov add out cmc and call inc mov push arpl adc push (bad) fcomip and adc dec and xchg in test and sbb popa and mov push xor add ljmp cmp push mov addl rcr aaa and xchg je push rcrl arpl sub fcoms stc mov mov dec cmp add in rolb ret js inc cld movups mov xor jecxz cld add push fdivr push or inc inc pop xor add sti mov pop clc pop fcomps dec xchg insl add and pop adc mov int3 clc pop push iret lcall js xor adc and push dec (bad) roll add outsl dec in or pop push adc mov sbb cwtl nop xor addb pop aam xor hlt test or (bad) rorb xor dec xor orl clc cmpb xchg ret pusha in push add inc cmp jno loopne add mov ja cli mov push pop sub mov jns adc test stos sbb cli sarl movsl xchg (bad) cwtl push xorb fcoml pushf aas pop or xor sbb push or es add in ret cmp (bad) dec mov sub cwtl imul mov xchg add (bad) xor bound inc popa nop lods cwtl pop push dec pop stos dec pop sti sbb cmp push enter xor jno inc push ja xchg enter pop fwait mov faddl mov jns xchg mov dec shrl inc rorb les (bad) sbb in sbb sub xchg sbb into sub (bad) sbb (bad) lock adcb push and sbb clc sub ja xor push add and leave push repz roll loopne mov daa mov xor inc fimull add cmp sbb push adc xchg rcll push lods push xor fisttpl mov pop jle push sub mov idiv add push xchg cmp jne,pn (bad) xchg xchg cld inc mov in (bad) ja rcrb push aaa mov faddl jb lahf (bad) (bad) lea mov das (bad) cltd test push scas and pop add jecxz incb roll mov leave add imul add mov stos scas add push jl jg cmp adc or mov in adc mov add lcall icebp ja sub xor mov hlt or and hlt sbb push shrl or repnz adc dec xor push ss mov sub sbb add jle insb dec xchg nop add gs mov sbb cmpb sbb cltd aam push popf pop loope test xor add add xchg inc inc fs daa mov cwtl xchg cwtl inc shlb sub jno cmc or gs mov cwtl std shlb outsl xchg add int3 inc cmp jg jae or xor inc cmp cmp in and fwait xor loopne (bad) arpl xor aaa inc jns stos movsb push mov mov and push xchg cmp or adc xchg add mov ja dec mov pop pop adc cld adc div mov pop add sbb push imul outsb mov inc or imul mov pop test mov icebp sbb je push lock adc pop jle rcrb int pop out pop add push repz aaa sub leave lret call popf orb mov pop iret push and shl arpl (bad) movsl nop data16 xchg add hlt or fistp dec jo sti andb xchg cmp cmp xor dec mov mov sub std lock mov and adc adc push cmp xor pop in ljmp push rcll jp mov push ds and dec nop cwtl leave and dec xchg movsb rcrb mov or rcrb pop adc mov or and add xchg pop int push xor adc sub jns fwait pop mov repz mov adc faddl hlt movb call adc es lock add mov xor mov rcrl out sub rcrb lock loopne test pop sub cmc call cld arpl rorb fnstcw leave push jnp adc push lret movsb es xchg jno dec mov pop mov cmp cmp daa adc or xchg pusha es mov mov xlat insb xchg pop push in jmp pop ficom in test fistpll sub or fimull sub xorl es adc pop mov dec sub or (bad) xor sbb lds or or jle mov mov or adc inc and aaa inc sbbl addr16 lds pop xor int3 pop dec out rorb add mov add xor nop and jno sti push or clc or lea or lret xor push gs mov into rolb sti std xchg in sbbl fdivs mov les (bad) mov mov push pop test mov jg add sbbb test (bad) adc sbb sub rorl xchg push xor aaa and cmp mov xchg xor or sarb lret mov add sahf ret aas or mov cltd adcl lock mov fistp and pushf adc test addl stc ret subb xor add in in shrl xor push (bad) mov xorb jo ja dec sbb mov call xor and fs setae cltd mov add dec rolb cmpsl (bad) xlat pop inc nop fsubl mov adc mov sub clc add and sbb or mov push push cltd xor xor push jns pop mov hlt repz je sbb xor imul test lret or dec (bad) nop dec mov dec jg sub push dec sbb add pop in mov jbe ljmp lock orb mov cwtl leave xor pusha and pop and inc addr16 test je ljmp and mov das inc sbb jo repnz rcr pop rcr fidivl insb pop (bad) clc inc jl or test sub out fsubrs inc fs ret and push loope and mov or movsl rclb std or dec data16 xchg (bad) ffreep mov adc jo imul sub ret pusha cmp fiadd loopne ja pop fistp push shrb add jle movsl and cmp dec sub jl hlt xor lret (bad) or lret mov mov or dec pop xor pushf mov fwait (bad) xor xor lock and xor xchg pop sub pop dec add xor sbb nop ljmp popa adcb xor jecxz mov ja lods hlt inc push mov cwtl ffreep icebp add das push ljmp fldenv lcall cmp lds add popf xorb out or cmc (bad) je out inc mov xor and cwtl cmp cmc pop insb inc and add inc arpl push jo jmp je mov jecxz ret incl ja pop inc (bad) sahf sbb dec add cwtl xor rcrl into mov push and call xor pusha sbb mov (bad) push ss vmwrite add inc xchg clc pushf add xchg (bad) pop mov mov xor xor adc daa lds dec mov or out int3 sub (bad) cld ds repnz fwait xchg mov xor fild pop in or clc xorl imul popa (bad) push or shlb mov lock scas in pusha out inc loopne jmp mov jge pop add add enter and jne adc or pop adc mov lcall mov cli aas or sti movsb add aam outsl lret xor sbb loop repnz add mov leave fisubrl pop enter inc ljmp into insb in roll pop movsb adc add pop adc push mov pop add pusha sbb pop inc lcall pusha sbb jp sub iret rol pop mov or xchg bound or mov push xchg push dec inc push mov sub or loope in adcl mov lds fidivrl push sbb mov cmp shll loope xchg and out jecxz sbbb mov jo clc jge cmp adc pop and or jmp mov test sbb pushf test mov inc test in lods dec in lret bound leave sub aad clc fwait pop inc xchg dec cld mov pusha and ficoml dec aas movsl jp ret jle cmp leave test fsub or push insl add cmp cmc xchg shrl out enter cmpsb xor arpl (bad) icebp in add vprotd fstps mov roll xor gs add scas push outsb ret add (bad) frstor sub arpl fild sbb out aad mov mov and jmp mov fwait aas nop mov cmp or bound pop ficoml ljmp cwtl xchg add and inc jp dec add and cld inc les mov pushf xchg ljmp jp mov test mov xchg xor sub add sub int3 test je daa les call mov and out nop xor clc inc hlt dec sbb outsl out and cmp mov push cmp mov cmp rcrb push mov xor movsb ret aaa sub popa stos test addl cmp or (bad) (bad) xor and daa je mov mov and lret cwtl cmp in push or pusha push repz mov mov in ror pop cltd inc or cmp cmpsl gs popf shlb mov sub aaa mov sbb mov pop nop add push jge jns pusha pop test and dec mov and clc or daa sbb lcall cmc mov mov inc dec (bad) or pop jp movsl pushf or adc pop cmp lcall cmpsl sub mov and mov cwtl mov adc sub adc sbb aaa (bad) jne xchg inc mov movsb bound popa inc xor pop inc lret add mov adc imul mov pop mov push outsl (bad) int out xchg into and cmp test and fldl lcall (bad) idiv pop and inc adc jp mov (bad) in adc xchg inc js rolb push ss mov das jp dec inc cs imul rorl adc pushf mov inc call mov jp adc sti int3 push nop jg push dec mov jbe sahf sbb add mov pop rcrb insl pop (bad) push mov and or push add clc adc movsb push sub mov outsb add stos push (bad) mov adc jo add xchg mov xchg int3 and cld sbb mov lock add mov roll sub sbb (bad) aaa add enter ret pop das loopne in inc mov cmc mov clc mov mov adc or bound adc cs lods hlt ljmp mov xchg xchg sub lods js lret or test fs pop scas lods bound pusha add adc scas mov call mov rcrl add fwait push or mov loopne cwtl stos add jle mov aaa push lods cmp pop bound fnsave in mov or push jp mov scas shll dec (bad) call xchg imul lods jp push add mov sbb adc repnz pusha cwtl mov or sub pop and in inc and test bound adc mov dec push push add adc lea pop xchg mov add sub scas test adc add sbbb mov and out sub sarl and pusha cmpsb in aaa add jns fxch adc loopne cmp push subb add std leave andb addr16 push cmpsb and lock insl test negb push inc lret in and insb rcrb xor dec inc fcoml adc add push inc mov roll mov dec mov add imul pop js jae lock in std xchg dec cmp icebp ror xlat and fcom and ret mov push lock or faddl jnp pop decl call add push cmp adc dec or rol stos jo cmp enter test pusha push dec push sub push sub or and repnz and movsb or mov cs adc icebp jle in dec or jecxz inc add sub sbb or mov or mov lcall sub or sbb aas data16 mov aam xchg jp dec sub fcoml outsl mov (bad) xchg hlt push jo lahf xchg cmp or test (bad) dec cmp adc (bad) mov test jp cld inc pusha pop sub add js or aam sbb push aad and nop push mov outsl cmp sbb jo js jp nop clc movsl jecxz push ljmp xor popa or dec repz pop and xor shr fs mov lahf aam mov push in dec dec mov cwtl sti jno add test ljmp popa add je pusha jo (bad) lret cwtl mov test insb lcall fimull adc out mov push lock pop or int3 mov mov mov cmp fwait lret daa in mov (bad) out mov xchg inc (bad) shrb in or mov pop leave jo bound outsb test mov mov push sub fist pop adc mov stc in sahf js adc add rclb andb dec lret or lds inc aam mov add cmp inc and in and mov or or pop mov add inc call enter (bad) xchg xor inc mov adc mov dec xor (bad) je mov subb adc push test outsl add mov pop or mov mov cmp pop add bound orb gs lcall sbb jl mov xor cmp mov and outsb roll les mov test cmp cmp mov mov add mov (bad) cltd mov repnz pusha mov stos mov nop xor adc inc add insb iret sbb inc mov push outsb je mov push test sub xor insb enter add mov dec scas test sbb jle dec ljmp les add jl fstpt in in mov fimull les add xchg add xorb insb xchg jge sub sbb push dec lret push aaa dec setno or cwtl pop adc cmpsb xor push fdivs sub inc and xchg imul lods data16 xor or mov aaa inc mov sub xor cmpsl stc test mov pop add ffreep push push mov xor (bad) aaa imul dec repnz xor inc (bad) fs pusha sub (bad) mov xor nop js push or lds pop or aaa adc jecxz aas inc pusha pop inc cs jp mov xchg xbegin mov test mov and mov and add jbe and xchg push xor ljmp jbe inc pop roll mov imul sti out add jg popf movsb xchg xor iret orb sahf mov pop push cmp mov arpl (bad) aas rcrb and jp add inc int mov fidivr mov js cwtl mov mov adc inc mov and xchg add cmovg add ljmp and lods fnsave popf (bad) dec inc into pushf sub test cmp mov or sbb ret jae or and (bad) (bad) (bad) dec clc and push std sub (bad) testl xchg adc jge pusha push popa fcmovb sarl add (bad) inc aas das add cltd out aam repz add xchg dec push pop movsl mulb push daa lock push jl pop cmp sar dec push jno xchg fisubr sub push aad insl (bad) ljmp int3 mov mov add iret cmp into cmp dec mov notb (bad) add push pop pop mov adc cmp add jno mov (bad) stos xchg scas pop mov pop jl inc cmp jno je push or rcrl das pop cmp mov xchg icebp pop inc test daa (bad) jno pop test mov mov (bad) repnz stos cwtl inc dec test int popa and mov mov and add cmpsb and out add pop and xor add sub testb sub add in or (bad) idivb xor dec roll cmp sahf pop shrb jno mov inc jns pusha sub idiv lock sbb loope jge (bad) sbb add xchg popa cmpsl sbb add and xchg fs xor insb dec or (bad) fistl cmp push mov push add enter mov sub in inc jmp push loope xor rol fldl add fwait inc inc adc in sbb cmpsb jp out jno lea cmpsl dec popa repz nop fnop mov sbb jne mov (bad) jno add int3 fs xor xchg add inc pop js or scas jp,pt jge xchg sub push push sbbb and mov and sbb lods sbb sbb fiaddl nop shll in and bound cmp pop cwtl ficom hlt scas ss and shll adc xchg and addb rclb fcomps movsb rolb jl xor lock test mov cmp cmp add in sbbl push mov es sti xchg dec adc paddw jbe push adc dec pop fadds in xorl sbb add xor rorl shrl sbb jno push jl lods cwtl push and (bad) sbb adc fsubrl and leave push or jae test mov sub pop add push push sbb inc add jne andl cmp sbb push stos add lcall adc sbb gs mov inc dec js push clc pop scas inc adc cmp out cmovge push fistl push mov xchg push out sbb and inc lret push jno pop push mov sbb nop sbb fldenv sub add fsubp das aas cmp sbb rclb inc clc add xchg add mov sbbb jns and dec sbb call mov or adc xor pushf lods add push imul dec testl sbb push mov loope and cmp or pop jnp mov push inc sbb scas fimull adcl rolb mov sar sahf jbe xor pop pcmpgtd or mov cli mov sbb push or jge xchg add out icebp ret clc and adc xchg outsl add mov dec das add insb xor rclb inc sub inc xor pop dec lcall adcb push or jb sbbb add pushf push xchg nop daa clc jno (bad) dec add sbb or add pop push add (bad) nop add sbb push das and and test and lods out popa jno xchg sbb pushf cmpsb pop pop nop bound daa push push jb mov ret lcall push inc rol xchg push pushf add test rclb mov pop add lods xchg cmp pop enterw aaa scas add xor into mov jnp mov push dec cmp dec or data16 fsubl xchg inc xor movl (bad) out pushf jg lcall pop mov in sbb or and lods in pusha enter jle enter dec (bad) xchg adc jge lock loopne inc cs xor mov test arpl inc sbbb rclb cmp popa adc inc jo into sysret pop sub inc xchg mov lods inc dec pusha lods push dec (bad) inc push je mov dec clc dec xchg xor add cmp fwait dec int out adc jg jo js pusha push xor shrb call jo popf adcl call sub add jb dec pop push jl adc lock jecxz push xchg loop lods lds add adc call cmpsl mov mov cmp mov xor add mov imul in iret mov add pop push cld add lods fwait in dec lcall fadd adc inc cmp jo repnz fwait arpl nop fistp inc push popl cli adc loopne out jl add pop cmp add das (bad) fldl inc aaa add lds mov popf adc mov dec push sbb insb (bad) mov push (bad) and and (bad) fild addb and sbb and imul jae mov inc mov jo cs leave nop pop jb pop mov mov andl add outsl sbb or dec dec (bad) mov lods sub cmp pop or jg ljmp lods sub cmp lods lds or xchg sbb mov pop dec xchg or in add icebp lahf ror aaa jmp ss adc cwtl in mov imul pushf mov lods pop dec enter cwtl sarb mov and loopne sbb push mov hlt cmp sbb inc or mov test mov iret adc dec in inc rolb aas sub add dec add movl pushf mov fcomp inc add inc dec fimull cmp jbe add lock sub push enter adc jns cltd sarl jmp pop jge mov stos js jb add insb or inc xchg (bad) sub mov or sahf inc add pop adc sbb adc mov rorb mov call in and add jge xchg pop test loopne pop popa push inc adc and mov sbb sar mov inc lcall movb cltd or mov xor or dec or bswap das adc movl lahf pop or in ja sbb cld mov pop shlb push xchg or xor and xchg sbb es pop pop cmc (bad) js dec lret mov xor leave orl fsub sbb pop and or dec xor or mov mov and pop fs in cmpsl sti jo lahf popa pop dec xchg adc lods mov enter jno dec add adc xchg inc aas xor jae add arpl pusha pop mov pop mov int mov sbb inc in sbb fwait mov or pop mull xchg stc (bad) mov sbb push fwait add xor adc roll hlt and or mov frstor pop push add out sbb push add mov insl test fdiv mov rorb (bad) fwait pop adc inc cltd and pop les sub and ds or push sbb into sti in jmp jnp nop roll pop pushf fcmovnb sti lret in lahf sub sbb lods jp pop sub sbb and in push les andl add jl and (bad) je add test push std adcl inc mov into and and out sbb jge and and pop ficom mov inc push sti mov fucomp add leave dec into jo cmp lock mov test cmp fadd orl mov push push mov add mov negb mov mov pop push xchg (bad) test loope adc push lods add mov pusha out and lcall add (bad) adc add dec and xorb mov add enter fisubl and add or out loope or test xchg stc and lea repnz wbinvd add add in js xchg push ret or icebp push sti sahf in (bad) jle outsb xor (bad) xor jnp cli loopne ret pop addl inc sub cltd js cmp and sbb cli scas inc loopne xor lock dec ret arpl mov xor cli shrb jns add jo inc sub sub push sub pusha jb cmp inc test imul sub xorb jnp insb incl mov inc sbb xchg mov push jp sbb add insl pusha xor push push sub or push mov ret sbb daa xor and or ss sub rol sbbb dec or add nop add and sub add add data16 jae outsb dec inc jle (bad) shrl loopne roll (bad) inc xor push in inc jp push pop pop xor dec mov cli jae sub cmpsb insb inc shlb jo pushl sub ljmp pop add dec call xor add jg pop jp nop insl sar and inc jge mov cmpsl mov mov xor roll jns inc mov inc add loope mov push jge add (bad) pop or cmpsl mov adc dec (bad) jnp sub and ljmp ljmp call and jnp mov push add dec add iret pop js sahf idiv add push sbb arpl cld jnp sbb fdivr adc fs (bad) cltd mov loopne iret mov orb inc add ficomp pop daa jb shrl cmp in push lods (bad) cmp pop or aam nop mov orb cs bound sbb and jns std cli test in and sbb xchg das sbb std jp ret test pop xchg push inc push sarb sub dec cmp and mov mov dec adc jb mov rcrb test fs pop push pop xchg inc jo push dec stc add push dec pop jecxz loop jne lcall sub add xchg mov mov inc xchg in push dec sbb mov jp rorb xchg nop (bad) push enter fs inc dec (bad) mov sub inc lods push out cmp hlt jge or add jle adc dec inc flds sarl jo sub pop cmp push ljmp mov cmpsl push dec sub push adc pop les shlb mov test add pop fwait add inc dec inc dec xor jo ret fs cmp rclb loop sbb rorl aad sub inc add dec push cwtl cmp sbb pop jae mov adc cs aas sti jb pop push add notl arpl mov je and cmp or cmp jae sub inc cli mov je loopne add xor iret dec arpl jmp xor (bad) mov jno dec inc in (bad) nop lods enter cld dec pop push inc jbe xor clc push mov enter mov pop jle adc rcrb adc add icebp (bad) cwtl es xor push cmp jl ret sbb sub jmp cmp cmova adc mov xchg add dec mov add (bad) icebp insl adc fstps nop dec mov pusha sub mov add inc test lret mov ret mov push or adc cli add rcrb adc or fild js add or sbb lret pop lea push ret loopne xor sub mov test push jmp je or insb xchg shrb mov addr16 cwtl dec insb cmp or lds cld sub push ja (bad) adc (bad) xor add gs lcall cmp addb sbb push leave add inc sub dec pop inc or fistpll and xchg call inc sbb mov and cld sub (bad) dec fistpll icebp push sti xchg stos movsb nop pushf xchg test push les and dec out out add cmp mov add call in lahf add push or in xor roll lret es addr16 dec mov mov and adc inc mov pushf (bad) xor xchg nop popf pop push sub jle xchg les (bad) and jnp adc cmp les add xor add mov in aas cs dec ljmp add (bad) and jmp jo popa add bnd dec sub sub inc (bad) mov add adc xor insb mov add mov mov jge stc addr16 xor mov cli aam mov out nop pop push test pop clc jnp or rorl dec or xorb add insl adc faddl cmp dec in push pop xchg xor add enter fadds push pop aas adc add icebp inc into cmpl mov (bad) xor cmp (bad) add jmp pop out pop xor dec punpckldq sub addr16 fistpll and ljmp addr16 andl add push nop dec inc mov lret add inc in ja fimull push adcl in add or (bad) pushl daa lods add mov push lods mov inc jns pop and ret cli and xor ret adc (bad) jno lds xor mov ret cli adc sub movsb and mov add lcall cmp jae rcll sti fisubr pop adc xchg lock adc test js mov pusha nop inc inc mov ret xchg push push sarb test inc add call clc dec sti mov adc pop je pop jnp js addr16 sub or test scas jg add mov adc mov outsb dec (bad) cwtl daa jae add nop fadd dec fcoml cmp (bad) xor aaa clc fsubl popa inc jns ret inc add dec jmp fist mov lret dec cli sbb addb inc fs adcb xchg add data16 inc dec jno add xor nop out ljmp or (bad) (bad) hlt or orb loope imul imul rcrb sbb push sbb jne cmp add and dec rolb sub enter pop dec jo test fmuls adc and sbb clc inc stos adc push movl sub pushl push mov nop pusha add es or nop add ret push mov and sar pusha ja js fbld (bad) mov dec sti movsl or mov ss or adc dec jo jl mov xor outsb aad jmp inc cli inc seto push cmpsl mov or cwtl lods daa mov xchg add pop shlb jbe pusha ds fcoms jo xchg xor adc and fcoml or ljmp jo daa rolb xchg push fwait adc mov or call inc pop (bad) pop (bad) movsb popf mov mov mov (bad) dec push pop test in shr loopne mov lock mov add dec pop add inc add lods dec call dec arpl stc push adc ret jecxz icebp xlat aas pop push (bad) or aaa pushf xor lcall je rol lods push or mov roll mov push cwtl jb stc jo loop call push jno test (bad) sbb addr16 xchg mov or cmp cwtl movsb xlat addb and inc into pushf mov adc lret cmc xor or popf in test test xchg xchg jne push or add insb in sub in mov jno sar inc mov stc xor and cmp jb inc divl addr16 (bad) sub lods and pop stc adc cwtl push adc sti ror ret dec cltd enter pop ds xchg sti cmp add sub and dec jno addb insb in and dec movsb sub outsl xchg mov pop push pop fcoms jmp rorb cld cmp add jp push mov popf or sbb sbb xchg mov test in push or sub add aad out jg (bad) aaa dec jb cs push inc pop jp lods cwtl int3 dec lds in pop xor imul rcl jmp mov cltd aaa xchg sbb dec arpl stos stos add lcall adc and stos push add sbb adc aam add sub pop sbb add into mov push add leave repnz aad jbe ret test mov inc jnp adc imul iret ja sbb js in push push add test sub inc loopne push mov cmp nop out xchg cld adc ja xlat sub pop push fmuls mov sbbl lds hlt sub add cld test dec test add xor rcrl pop lock test cmp add sbb addl jo ret push xchg jne add xor xor xorl push or fisub jle push scas sahf mov dec pop add add add cmpsb inc outsb mov fcomps push sub push arpl orl fucomip inc add push movl and lock pop pop iret sbb jno in inc jbe subl add cltd cmpsb mov popa fmuls adc add xor adc test mov add mov cli add dec mov cmpb outsl jecxz sub mov sahf jge pop xchg push fldt lds test inc rcr add cltd pop push sub mov add xor add inc ja add jb push in fadds iret enter push add jbe rcrb adc sub inc clc outsb add adc add add xchg and sbb pop sbb arpl sbb bound cwtl push add and in push ret add mov gs mov xchg add cltd inc add and sbb push sbb push aas and and data16 dec ret pop add inc es dec subb add repz les adc es daa and cmp add fsubrl rcrb xor pop jp ljmp lock jnp hlt jmp lods sub loop mov add add adc clc es cmp pop fidivl pop insl pop and inc add ds dec add mov push rcr rcl popf or cmp (bad) icebp add test sti add lock pop mov icebp mov add xchg insb clc xchg pop add jb cmp push paddq sahf add add popf or xchg inc addb add xor add inc icebp test jnp inc adc sbb adc and dec add lret das jno and push add cli push mov add stos aam lahf inc jb add push mov xchg mov jns mov adc adc add leave fucomi data16 sbb int sarb rolb stc mov ret ds das int3 (bad) cmp push add cmpsl imul inc jb xor pop sbb clc mov pop adc aas and adc iret add fisubr add mov ret repnz push inc ss out jge jne push add sub and hlt (bad) jno mov add test enter pop xchg jl add xchg add popl ja into sbb cli mov mov pop mov jo cmpl push gs adc loop pusha ret add sbb cltd test add cwtl mov addl sbb mov movl fstps aas mov add aaa add lcall add inc jmp hlt (bad) xlat push jg dec loopne jecxz aam mov add cli dec push loope add rorl ja pop jns pop je mov fwait movb mov dec mov xor cwtl imull add cmp sub cli inc add inc xchg mov rol mov aad ja out in push add and push cmc (bad) jne sbb mov inc cltd push mov jbe add sbb jno add inc add mov aas mulb out add (bad) dec xor aad lds out add or fwait cmp (bad) cld in test (bad) mov mov add pop jge add xor mull xchg push loopne xchg (bad) iret rcrl lds cmp loope mov mov dec cli repnz hlt pop jno aaa add push int3 mov add jae mov mov rolb out stc orl movsl mulb ljmp jno and push lods mov loopne xchg add jae cmp lock cmp jmp or xchg and dec int3 clc sbb fcoms xor sarb scas out cmp int3 (bad) jecxz sub (bad) popf xchg and sub test aad hlt adc cmp xchg cwtl fdivrl xchg notl add movsb popf mov xchg mov and inc push gs js into jmp loopne and cmp cli inc jno cld out cmpsl sub fidiv inc mov nop add mov repnz movsb jne push int3 adc or push jo mov std add repz pushf inc enterw std xor int add or (bad) sbb ljmp mov sbb push mov xchg adc cmp jo jae cltd adc mov jmp rclb add adc dec adc and add inc add add mov mov (bad) push in pop testb add roll sub loopne (bad) std add or outsl mov sub xchg add mov cmp pop xchg loope bswap mov fwait inc jle sbb mov shlb shrl mov lahf shl sbb decl xor inc and mov (bad) add adc push int3 cs adc pushf xchg loopne jnp inc outsb xchg xor push insl popl stos lods inc nop mov add rep pop and add das movsb dec pusha movsl add jl jg fmuls add xor test addr16 mov cwtl das ljmp cmp cli push hlt rolb sbb xchg aaa leave add add in xchg add pop aad push (bad) int3 (bad) (bad) lock inc (bad) dec inc pop cmpsl fstl cmp add fwait mov mov bswap xlat cmp mov add leave cmc push xchg shrb mov hlt inc into enter insb add jno push sub pop pop or push aaa comiss arpl add mov xor pop mov push call sub scas and adc andl add jge cmc and sti mov enter add fdivl out test add xchg cmp movl pop xor jmp adc pop xchg inc xor pusha std fcompl scas imul sbb mov adc jge xor mov cmpl sti out cwtl cmp push les mov xchg jp enter jo nop lahf imul sub out add xor pop pop xor and les inc pop pushf add jmp fstpt lods ss mov fisub sbb push xacquire push cmpsl pusha stc adcb movsb aas in sbb mov test add mov add jge fbstp je or hlt das and clc in add sub xchg imul cmp add add in enter cmp jns sti sbbb sub sub jge (bad) cmp (bad) adc and fsubrs jbe (bad) inc std adc pop add add sbb inc add fdiv pop cmp mov popl jb lock popf dec movsl cmp loopne pop jae xor pop or cmpb cmp scas adc in test jg lods jns sbb mov or jae pop test loop pop jo sub adc fadds insb pop and cltd pop dec ds mov icebp test loop insl or or pop mov (bad) push cwtl out rorb shll xor adc idiv inc add clc mov sahf xlat outsb ret pop popa jbe test mov cli add stc cwtl sub int3 lods or and sub push sbb loopne jge pusha push shr cli (bad) shl rcl fucomip psrld out retw and cmp (bad) jecxz mov out mov add or sub or xchg and inc and pop push outsl push dec add cmp add push push jg xorl add xor jle cmp out popf aam push fldt sbbb movl mov roll fsubrl add cmp push pop inc mov lcall mov inc into pop sub sub push arpl push add out mov sbb add adc push mov and jae or cmp lods jno add push add pop and int3 inc and push pop pop les arpl loope dec aas subl mov mov (bad) aam jecxz jp lahf push xor outsl ds fwait rorl and xlat out jp add cltd pop jge cmp je into sub std test cmp jno or mov xchg jns add ja push (bad) loopne add pop adc repz add push cli clc je add js loop xchg jg add push repnz insl sub xor daa pusha dec and jge inc bound xchg add inc sub xchg notl hlt xchg xor lods jl mov add jge pop adc movsl jo push push add add (bad) out mov jl lods int3 xlat xchg add or push or jl (bad) jo std pushf aaa cmp fwait pusha xchg push (bad) mov or adc mov push in cmp jl add int out int3 cmp sahf add ja (bad) add mov lock cs je aad sbb out cmp movsl aas mov add test pop mov jbe cwtl add (bad) mov aaa iret movsl out mov push add xlat fsub xchg xchg stos loopne add int3 dec xor pushf push mov jo add test xchg inc in push inc stc adc ret cmp (bad) fdivl cwtl shrl cmc cmpsb mov add mov jns add cmp outsl aad jp jle aam mov jg pop mov loopne enter in cmpsl addl add push mov test xor aas out adc movsb lcall sub mov es loopne or in xchg out or inc outsb cmp jge pop lock js jl adc sub mov std sub rclb pusha pop bound ds clc xchg leave outsb lret sar xor adc mov add pop add nop add pushf fbstp jbe imul shrb mov gs push outsl sub xchg push and imul std jae and push adc mov fisub mov stos popf adc xchg cwtl (bad) clc or pushf fcoms cwtl cmp stos out add rclb popf aaa (bad) ja sub in xchg mov nop out xchg pusha pop cmp jae rol inc movsb pop (bad) scas xchg test in and push push les in je sub aaa pop push rorl xor hlt inc jle fwait (bad) popf out inc mov lret arpl jno popf mov shlb xchg js adc nop add xlat insb in paddsw xor in dec ret cs inc add js lds push dec jge (bad) sbb mov sahf daa xchg jo loopne test cwtl outsb ret push add or xlat js xchg jns and (bad) cmp jne mov ret mov push mov sub cmp popa sbb into mov push test add pop (bad) fimul pusha xor (bad) test mov mov mov rol sub add test popa xchg push push mov sti test push je test pusha or push fstl orb add push jno sub das add pop or lret jae mov out and sahf fwait imul nop sub lea rorl fsts lock mov add xchg loopne jnp add mov out and ret sahf test lods es cmp add stos addb testl jle fwait add dec add mov jmp mov and add jne arpl adc push mov popf dec lret mov mov int3 sbb sarb inc outsl gs xor insl cmp pushf jg add push mov mov addb push dec xchg inc and xchg (bad) fdivs jle xchg inc lret in sbb pop dec xor jo add adc adc pop mov insb mov aam adc popf movsl add rcrl lahf xchg inc jmp lods mov sar xchg dec es xor js xor pop inc insb xchg push inc pop out sahf fwait inc in sbb add leave mov sbb jne ljmp add imul xor and pop adc adc xor add push push idivl cmp mov xchg ret enter add jl les les test fdivrs int3 pusha xchg lahf popf add xchg (bad) cs lret cwtl xor fiaddl and cmp sub and stc sub inc outsl xchg xchg popf aam add hlt js ds or imull xchg test bound lret xorl pop nop lds xchg or loop pop adc lods add sahf jbe mov adc jnp jp mov add sbb and gs add test popf add sahf enter sbb mov lods adc andl sti movsl test rolb fidiv nop mov mov cs and jb cmp lcall dec outsl int add int3 push cld cmpb add call js cld popf dec decl rcr jnp adc (bad) jmp inc sub fcoml add and mov or out andl xor in pusha clc mov (bad) shr jnp test jbe xor (bad) and pop mull pusha adc xor shll jge cmp jnp pop lret adc xchg fdivrl add test outsl xlat imul sarb in loope sbb jge push ret cwtl lock js adc mov cmp adc test cmpsb nop outsl pop sub mov jbe mull ret lods or in or xchg andb loope out push dec add mov mov jmp (bad) inc mov xor fdivr rolb pop cmp test jge jb popa push mov mov adc in adc inc nop and aaa shrb adcl mov int3 add or setno fnstsw nop test cmpl pop mov xor sbb std popa (bad) cwtl mov js sub cwtl cmp in fwait adc or bound mov outsb and int3 test fdivp jmp loope pop (bad) jae dec mov popa loope pop jl rcl outsb and pusha hlt subb orl pop sahf add int3 in outsb pop xchg cmp jmp push sub test call rclb pop cld movsb clc xor mov push add pop ret push push dec test iret add into add (bad) rcll jmp sub das mov inc jb iret mov add mov std add hlt gs sub or test out mov jge mov mov jbe mov nop pop sbb mov xchg pushf or cmp lods add loop movsb push mov dec xor out mov test shl push ja inc sbb movsb cmp call jno mov mov loopne mov rolb mov lahf pusha fdivrs pusha mov hlt dec std and push call dec popa jp cmp sti int3 add movsl ljmp xchg aam clc rclb dec inc daa adc (bad) jae test and out adc nop lea or and adc mov pop or xchg fwait sub adc pusha fldenv (bad) xchg shrl inc sub add cli in push mov loope (bad) mov jg lods in mov add add inc push nop add movsl inc fadds loope test push sub mov add xchg jl add shrb ret loopne push pop jl fidivrl in push cltd nop arpl outsl add inc mov in enter (bad) mov inc daa mov adc inc add add adc sub sbb roll or inc hlt add inc sub mov add xlat xchg push rolb adc sbb mov add and jns pop enter add test mov lret pop leave mov (bad) (bad) hlt add test loopne clc lea and cmp xchg popf xor add add sahf push add aam loopne inc jne daa add test out call mov int3 out mov fisubl jae into inc add leave or in and pop xorb outsb cmp and sbb mov ret push or inc gs rcll test dec in jae popf jmp xor jbe shrb push mov and xchg call push dec insb ds or xchg and (bad) pop sahf fadds lret adc je xchg add leave (bad) out cmp jmp test dec addb or lcall bound or rcr fdivrl add jne push cmp add ljmp shl roll int3 add mov lret wbinvd add adc rcrl jno push xor std xchg adc mov xchg xchg sub mov shll push faddl jnp sub add inc in popf dec dec daa ret mov jg dec xchg pop add enter mov xchg mov sbb iret call (bad) xor outsl and mov adc sets rcr bound mov (bad) mov int3 fisubr out mov and cs stos dec add dec (bad) sahf minps inc mov outsl cmp in roll (bad) sar jb sbb pop pop mov inc add loopne adc cmp and mov sub idiv add test push fild sub xchg stos add fmull mov mov pop scas loop nop push jne pop sub and clc mov sbb loopne push mov add les in pusha add add rclb out add repnz ret mov inc test int3 or orb cli xor xchg aaa push jmp rolb xchg hlt or xor mov test jmp les enter or (bad) cmp lds stos cmc and jl jbe (bad) mov mov aam and call jge stos cmpsb pushf add xchg xchg fcmovnbe and pusha add push cld add jmp fnstenv cmp es addl ret test mov aam out sbb sahf push jge add das sub lahf test iret add ret jae cmpsl add dec aam xor adc test sub xor and sub xchg (bad) adc test and (bad) sbb or (bad) jae imul cmp and jle jbe dec adc movsb adc clc imul outsl dec insb dec cmc adc push jno iret xorb pop popa push or inc adc iret pop jl add xor lods call aaa adc fcmovne mov push mov jecxz call rorl push add mov cmpb fisttp add lock inc stos cli xor add jbe inc or sub xor (bad) stos test or insb shrl aad push inc out loope stc shll test outsl xlat sti movb packssdw and lss mov rorb push or stos out cmpsl inc pop cmp std add mov or adc lret add inc aad cmp icebp sbb repz sub add aad cli ds xor pop sbb lods and or sub add outsb divb lret pusha dec aad cmp xor mov (bad) add scas jge outsb jl fwait add push nop nop inc or fisubr cmp andl repnz pusha pop sub outsb sti push pop xor wbinvd dec mov outsb push es add cmpl adc sub (bad) mov dec mov add fs lods or jmp clc adcb rorb outsb and push xor cld xor sahf adc mov cld faddl pop mov add adc stos pop in aad mov out mov ffree insb dec or outsl jno push jo xor fiadd pop and dec idivb or aaa call out add fcoml nopl aad xorb mov int fsubl inc push push aam pop push mov xor mov ljmp sub mov xor mov sbb stc mov push sbb jmp mov andl test mov sub in xor xor in and test divb outsl data16 movups push lods pusha adc mov incl sbb push pop sbb pusha dec dec and int3 or and xchg mov mov std jl lcall je sub andl and xorl dec enter fstps sbb and jo add mov ret outsl sbb add jmp loopne mov scas sysenter push daa mov les add lret xor aad fsubrl loope mov mov push add negb jp adc orb lock add cld stos xor es lea fadds adcb push dec (bad) mov add jb nop push jbe xchg add xchg and jno lret (bad) hlt pop or leave fmull lods push sbb icebp sub mov and or add sbb adc pop nop shrl mov dec ljmp mov add cmp push xor mov test loopne aad test and lds adc icebp and sarl arpl sti outsl adc add pop jmp xlat cmp xchg add call push mov movsl cmp aas dec test add out out daa rcrl inc pushf xchg inc xchg add insl inc clc lods inc fsubl fcoms call fmull fwait repz inc add mov (bad) adc xchg sub mov sahf arpl lock int push mov pop lods inc bound cmp rcrb cmp mov enter decl push dec adc and int dec iret push loope adc test js mov sti test icebp pop xchg push loop insl inc bound (bad) or and sti in cld jo add lods data16 mov ds outsl add adc lods jae pop data16 mov xor jge sbb sbb add pop inc cmp frstor inc test popf push dec nop movsb mov xchg mov nop int3 add cld cmp adc flds pushf (bad) lea push jl nop scas xor (bad) call fwait jo sub fstp lock loopne int3 (bad) jbe (bad) cmp fmull int3 add mov cmp testb and sub mov cmp addl daa mov and cmp mov pcmpgtb jo rcl xor push push repz cmp cmp cli iret movsl addb cwtl push icebp ljmp jno mov jle cmp repz xchg insb push enter jnp lods jle xchg cmp aad dec cmpb fwait dec in mov aam lcall xor adc test pusha cmpsb sbb (bad) icebp add ljmp jl inc test add add sbb stos push jg pop or xor xchg adc sub cmp mov sub lcall inc and sub addl lock push (bad) clc mov lods cmpsl jns (bad) mov inc mov movsb call mov xchg push add cmp adc test sub mov sbb adc js inc mov push adc rolb insl pop imul inc adc inc test cmp xchg add push lret mov shlb stos xchg fistpll and xchg and popa cmp push cmp addb cmp push aaa mov fdivs data16 adc pusha popa adc and dec in movsb xchg mov lret cltd aas xchg lods popf rorb bound inc push and and nop xchg js cltd in shll rolb mov sbb je test mov nop inc dec inc cmp ret mov adc shl dec mov inc mov and cmp adc mov add or dec aaa mov pop jle push cmp push movsb ja xchg shrb add jmp jmp test fdivrl shll loopne jg sbb cwtl or (bad) lret mov adc pop pop xor dec xor scas xchg les dec sar and cmpsb cwtl xor adc xlat aaa fwait dec loope xchg xor jmp sub test push and pusha add inc (bad) movsb push add popa ret stc inc cmp inc hlt mov leave push dec mov xor inc cli mov fmuls cmp push mov mov into pop adc dec xchg les jno loope je pop inc push mov inc and roll xchg and pop inc dec push and enter dec lds mov or scas call int3 add fldenv or inc mov loop mov lret pop and sub add fs or cwtl pop stc cmp push (bad) les jno test shr mov pop mov sbb and add test fs pop cmpsb div adc test mov mov xchg cld add or mov dec aam xchg fcompl pop mov mov adc push je cltd or cmp fcompl sub sub ja addb xor and ret test sbb pop jmp aaa mov add or mov add stc shll mov xor jl push mov cmpsl mov rorb jb inc mov lock xchg les lock arpl scas push inc push loop scas or adc add insb inc addl pop mov cmpsb test enter xchg adc (bad) fs jnp sbb jbe xchg mov cmp mov fisttp pop cmpb add out sahf test data16 in mov pop push push lods cmp jmp dec test (bad) sbb add dec add lods push dec fcomps lret adc les add pop (bad) movsb add fcoms std inc bound pusha aam add cmp lock inc test movsl (bad) xchg xchg add and and jo sti adc scas mov adc sub xchg fsubrl adc jns fcmovbe jo mov insl scas dec pop adc lret inc pop int3 dec inc pop add xchg imul sarb test (bad) inc (bad) mov jle add iret in arpl out pop and xor push mov shrb sbbb repz cmpsb add into xchg (bad) xor push pusha dec adc jns add and jg pusha pushf and arpl add repnz cmp jno xchg fmuls mov mov cmp icebp stc inc mov stos arpl outsb fldenv data16 int3 xchg fdivs cmpsl or mov cmpsb sbb aas sub push ss aaa mov ret out sub shrb pop inc out mov or xor sub and inc xor scas push or cmp mov es nop fiaddl enter addr16 sub sbb sar out add arpl sub test push movsb movsb cmp notb and mov cmp out or pop push cmp and loope jp push mov rclb adc rcll movsl sahf es out xor pop dec fcmovu xchg inc pop arpl rcll sub mov add lods jb inc cld into jo arpl shl sbb gs dec mov shlb cmp nop jecxz inc stos dec add nop inc add sub je ror jnp rorl mov dec jbe clc pushf fs lock push daa cmc in add stc or hlt dec adc lods cmp dec mov mov or int3 mov loope mov or lret sbb test dec popf jle add adc lods xchg jmp arpl mov pop jnp adc push int adc inc jl or dec or sub icebp cwtl dec fmull mov jnp arpl and mov xor (bad) sub mov pushf ret and shrb or dec sbb dec ret adc bound cmp sbb inc out cmp mov das jge test dec mov cwtl cmpsb add jno jmp pop jo pop inc (bad) jge not (bad) cmc jp jg sbb out add mov loopne cwtl call jne addb add jle and rorl pusha xor mov mov add xor adc xor mov (bad) ljmp fstps movsb fild dec out sub adc cli and or mov fmuls rolb adc and lcall and adc adc fimul jge icebp repnz adc rorl xorb xchg push sbb sub hlt subl lret adc mov adc xor xlat and mov cmpsl rcrb int mov es mov mov jp add and loop pop ja call dec out decb dec outsl sbb inc aas or je mov aaa and jno add sub inc xlat cli or sbb sub mov xchg loope loopne and dec fistpll pusha les ss test popf ret add dec mov xor and hlt dec xchg jge pop dec xor pop fidiv aaa jo add push xchg add pop jle in cmc (bad) clc leave pop cmp shr movsl dec push add ds mov das adc movsb add clc jl (bad) psubd lods in adcb cmp pushf lds je decb call test mov jg xchg jb ret ja jbe inc jl add jne in mov jmp gs mov pop js sbb lods inc add ja mov push push push mov insl inc popa pusha lods fs js (bad) mov add xor (bad) stc mul jae xchg stos mov inc add push outsl add mov daa popf add ds (bad) xor (bad) pop add aas loop mov add mov add cmp inc push mov hlt ret stc add jae imul and or lcall sbb imul add fwait (bad) lret add clc decb add test add xchg gs mov pop mov add movb pop in aad sub mov mov ss fs xor xor pusha push push jg pop add movsl mov repz (bad) sbb jecxz int3 cmovnp xor jnp sbb push es cmp stc cmpsb roll sbb hlt in daa pop xchg sub push xchg xor jmp jbe hlt insb je pusha xchg clc out cmp pop mov fiadd out inc jge mov ja mov jns les clc xor test lret scas inc icebp imul cld mov jl (bad) push inc fldenv das mov xchg orl dec ja in pop out pusha jbe mov sti sbb pop repnz add push lock daa mov xor ljmp scas dec outsl push in jae arpl clc cmp xor add push inc xor lods add cli mov add nop cmp rcrl mov ret pop add rep or inc sub out push inc add sbb dec data16 xchg mov sub push scas outsb aaa add push add cmp cmpsl jbe std cmp add (bad) cmpsb add insw outsb jne cmp add int3 mov enter out subl pop lret cs lahf xor cmp and and shrb push dec push cwtl jl rclb adcb or mov (bad) js mov std ss dec test nop hlt jbe add and xchg roll icebp hlt roll dec inc adc inc aaa repz mov jae rolb mov int add mov xchg add mov stos push lcall call or imul dec repz add movsb lock popf incb mov adc push stos aas add mov enter push mov add inc fisub lcall xor xor push scas mov cmc int sub test push add or jno inc mov aas xor add ret rolb imul add add jo sbb (bad) add iret insb mov add fldt enter push jnp fldl and not cmp rolb into aaa inc aam pusha data16 lds mov pop jns rcrb inc fstpl ja mov daa and add cmpsb cmp clc jle das popf jbe lret std rorb mov add pop and inc lds call hlt cmp mov push sti xchg mov mov movsl add jle jecxz sub sbb sbb cltd add or adc jb popa scas repnz and in or add xchg repz lods xchg sbb push jg push adcb jmp add dec rclb aam pop inc orl leave push orb jg adc add add repz outsb in inc jno lret adc push mov add and lock nop xchg pop and pop xor lods pop push mov scas pusha xor pop adc pop mov jb add imul push aas cld sub (bad) dec dec xchg add jecxz sub mov cld (bad) or stc dec push int jne add xor add inc dec sbb push mov lock dec add sbb or jge add add outsb imul int3 add dec loop xor ds mov add push (bad) ja inc popa test cwtl or nop sub out add and pop add xchg fisubr pusha mov jecxz fcomps mov int mov or xor xchg xor aas pop cli lods add pop adc popf divb inc pusha and lock xchg add mov xchg mov enter add aaa sahf aad popa mov mov call or dec xchg stc pop cli inc add push push cs data16 insb das cld out add (bad) mov (bad) lret imul or movsb jne add mov fidivr push loop lods or orl dec cld data16 push add loopne mov mov push sub mov mov push sbb test xchg add mov insl in xlat clc sbb ja popa pop mov add js mov mov clc xor dec cmp movsl push (bad) mov out test out jae test pusha roll cmpsl jmp and push xor mov popl lods push lods cmp jb dec (bad) shlb scas add mov sbb cld sub pop popa xchg aas push xchg call or jnp (bad) add mov cmpsl add jg test add push clts add movsb sub jge ss xor pop insl xchg cmp mov in es xchg js add fs jno lock arpl idivl inc pusha add out (bad) xlat icebp pop fist das orb dec loop jbe int3 fistpl rolb test cld cli rcll jp aas jmp rcr sub inc or fadd add out pop enter les xor mov pavgb pop inc fsubrl dec test mov dec fstps rclb dec or cltd sbb fimull loope mov cs ljmp lock jp into daa stos ss mov add loopne sbb push sbb inc punpcklbw xchg add xchg in pop add ret shlb nop in inc imul sbb into in pusha mov add push xor push in pop sbb add repz sti roll (bad) mov fwait movsl std scas jns fldcw movb dec mov add bound or mov adc xor and jbe pusha (bad) mov ficomp test (bad) fxch sub push les (bad) icebp sub fildl adc das cmp mov fdivr pop mov out ljmp pop lahf clc xlat aas xchg xor fsubl aas iret add push jp or sub jge mov xor push loop orb sbb mov in mov mov popa test mov add push mov add adc xor out mov pop lock test lcall and int3 add test mov pop push jae stc or pop sbb pop inc sub xchg dec adc das xor or fs add sub and fisttpll (bad) je adc sub ror xlat daa cmpsb int pusha add add test insb push rcl inc push cmp ds fwait jae add and xor sti jnp add aam (bad) je cmp out faddp mov pop pop push (bad) dec sub insb (bad) xorps pop in cmpsb xlat adc and dec add cli popf fimull and lods add pop sbb fisttpll mov enter xchg scas mov bound stos movb arpl or lret cmpsb stos sub lods mov outsb fs repz gs addl int out ja rolb mov sub pop mov add fwait mov dec push clc mov xchg add and mov add adc pop pop lcall cmpsl pusha cmpsl into add icebp sbb ljmp push (bad) mov or pop mov add stc js inc add mov adc pusha (bad) add lods xorl pop add pop daa (bad) add inc push cwtl xor jle and add mov add pushl fisttpl clc sub stos jne sahf ret mov jmp (bad) repnz add add push xchg incb jae push xchg loope adc add sub pop mov rcrb (bad) nop and or ss pop add dec cmc mov insl popa lea test adc pop xchg and pop call std pop pusha ret subl pusha xchg fcompl pop mov xchg ljmp in mov add xchg daa fbld push push dec lret ljmp dec rcll daa bound cld push add mov sub push fimull add es xbegin int cltd jb or sbb aam jnp setge call push arpl add je xchg ljmp aad std jne sbb push pop jle aam sbb ds fsubr insl (bad) js mov sahf jb scas push lret mov sub mov fadds clc sub stos xor add mov (bad) (bad) fwait push push add mov roll mov sub push wrmsr mov pop ret insl popf inc jne aaa mov pop jnp sbb push shlb add mov mov (bad) call jmp int3 add lret or jmp jnp jg iret jae mov adc sub cltd and adc mov lcall movl fmul loopne pop pusha and xchg cmp mov dec les add inc shrl push aas mov xor sub loopne stc or inc js icebp dec jmp inc in pop jae sbb or hlt and loop mov jne popl push mov push lock pop sahf imull (bad) add xchg jnp pop test out pop pop ljmp imul pushf adc pop mov cmp mov mov push enter ss push add lock jmp (bad) push mov in out ret push ds imul out inc (bad) mov and lods sbb negb add daa int mov int3 stc push adc inc test add add js or ljmp cmp add repz sbb mov mov add (bad) push mov in nop aam add xchg cmp xchg pop aaa dec mov lahf movsl insb add push mov clc call mov push pop addr16 add add call sub add jb enter mov inc jae add pusha add hlt add cld test or xlat sti push pop shlb in iret je ficomp jb shrb jle jl add sbb mov jb test popa xor add jns inc out dec sub imul pop mov dec and sbb sub aam add jg push add repz outsl dec scas imul pop nop mov inc mov and jo mov addr16 jp inc frstor in mov inc add (bad) popf dec sub adc cmc shr add mov jne jae push rclb lahf adc jge mov pop xchg test or out ss sahf cmp test loopne dec dec rcrb push enter nopl add pushf ljmp jge bound ds into out add (bad) loop test dec add cwtl stos adc lahf add sahf test dec (bad) icebp add dec mov and add aam (bad) mov aas les out xchg add subb jl add inc lea xlat add dec jae cmp sbbb lret mov xorl add lahf leave xchg pop xchg rolb rdpmc xchg add int add sbb scas (bad) jo cmpsb add sub dec pop add mov mov ss fimul lods xchg lds add jmp lahf loopne lret pop adc pop cmpb jb ds jae stos lods pop jl sbb loope (bad) jb jl jo add fisttpll mov mov ss in adc add popf xchg and adc push inc clc jno (bad) movsb dec loop leave lock pop cmp add jne dec cmpl cmp ja add pop jge pusha sbb add shrb pushf mov hlt je (bad) lock cmpsl add cli fsubs rcll dec cwtl (bad) loopne jns ret ss mov sbb add jecxz fs fsts add mov pop fildl repnz cmc insb add aas cmpsl add orl out add push shrl pop in (bad) mov lock or xchg jne roll scas insb fist adc ret cmp sti std xorb subl rcll inc add cmp xchg inc or sbb outsb jne cmp andb fnstcw jmp aas leave pop in mov ja je js push aam aaa cmp xor std add sub add adc add jle push ds test sbb clc add adc fistpll aas adc cld loopw rcrb nop loope fildl push test cmp ret add mov popf ds pop dec dec adc notl cmpsb fmul inc and inc (bad) xor pusha jne int3 sti lods adc in push mov mov pop dec in mov add daa ret cmp enter jns push ja loopne ds (bad) mov shrb jbe cmp xorb out push ret imul pop es js push cmc sub (bad) inc and or (bad) lds test scas push jae cmp je xor pop incb add out testb stos add mov pusha jl pop lock inc dec (bad) mulb arpl add stos repz outsl push cmp clc ja or jb add add adc adc int mov dec cmp aad xchg je xchg add pop mov (bad) negb in pop add stos cmp add add cwtl add cld jbe push test leave lret rcr adc cmc mov xor lcall mov sbb jp add push cwtl daa movsl sub pop cmp in int3 add outsl push popa lock jg mov dec add les adc aam sbb xor test jg pop or add ret jae mov dec and cmp incl (bad) cwtl imul mov xlat scas rolb or mov mov inc lock in in sub mov shrb nop sub xor scas cmp rsqrtps xor xchg dec clc mov orb mov popf sub or xor push iret fiadd add (bad) jmp or pusha xchg and int adc (bad) push pop decl jbe jno mov add out or mov clc addl imul jbe or pusha xor (bad) cmp add mov repnz pop mov popf pop (bad) push xor out cld out push mov cmp mov movsl push popa sub fisttpl lcall add mov pop cmp push mov fbld push lds shrb rcrb or popf add adc call push stc xor adc inc (bad) inc push xorb into adc stc push dec call add (bad) sbb jbe mov or and add mov add push mov fs add (bad) xchg mov push push lret or sub ret add inc dec es lret and in in add cmp push div push stos jno cmp lahf push inc ja add das cmpl les arpl orb push cmc rolb (bad) cmp add addr16 adc cmp jbe jmp sub lret add cld in add adc or push ds pop icebp mov ficompl pushf push mov mov mov int and xor push sbbb push xchg adc hlt cmp mov add fimul mov faddl sbb enter dec add int3 xchg testb mov mov movl loop or sti sub ljmp xor pop add enter fs jb jg add sbb loopne dec scas pop std adc cltd adc cld movsb mov add emms cmc inc stc roll outsl inc pop jecxz add push mov inc add movb inc (bad) dec cmp mov push pop loope push or sbb or mov pop (bad) test inc fimull les sub xchg arpl in ljmp mov lods mov sbb and mov push cli shrb loopne dec sbb mov (bad) fdivs jns shrb pop ja adc sbb jmp push mov add iret add inc jnp add pop (bad) sbb jne add push (bad) mov test lods cmp movsb adc sarl add popf xchg (bad) or xor cmpsl push enter test add pop in inc cvtps2pd pop lods pop jne int bswap fldcw fwait mov repz inc pop adc (bad) mov sub iret add fwait add in cmc cmpsb add adc sbb cmp add sub pusha movsb bound adc fwait add pushf cmp daa add mov testb es xor imul repz mov push inc js add into fnstsw loop aas add push rclb lds (bad) pusha movsb sbb jg add cmp xchg sbb adc mov dec or lds out sarb sar xchg fs or mov add dec jno and jo sbb xchg (bad) mov test add cmpsb loope adc popa sbb arpl pop pop add stos icebp divl or sub add pop rol test sub loopne or cmpsl add cmc push mov or add cmp test aas push cld and inc dec flds add add sbb or sub adc mov cld arpl inc add add pusha xchg ljmp mul shrb add xchg push incb sub pusha pop es pop add (bad) xor add xchg or mov add test jo icebp cld outsl jns idivl xchg in rorb out (bad) (bad) std addr16 jg pop out inc add inc add mov mov sarl in addl fwait (bad) mov aas add test cmp jne add ror jne jae cmpsl out and push add popf push sbb add adc sbb stc sahf xchg jle inc pop das push cld sub xor mov sahf pop aaa add decl lds loopne pushf mov shr cmp mov rol int and push sti lahf in pop cmp ljmp jl repnz mov push cmp fildl mov sub (bad) lock cmpsb mov add mov add (bad) (bad) mov idivl bound std popf add pop out lock js mov mov xchg push sbb lret jb mov ss ljmp popf loopne fdivl add cmpsb xor in rorb xchg push pop stc out add dec daa arpl pop ds add sub sti or add in mov pop jmp jo mov mov (bad) aas idivl or push add mov scas and nop adc das lahf sub add popf stos sub ret push divl and fildll add lock xor je add cmp pcmpeqd or xorb loopne stc cs icebp adc in mov cmp cmp mov je data16 es or push xor pusha imul (bad) sarl add stos loop or push add inc mov or lods xor pusha and pop adc cld sar push in pusha dec and jmp int3 js pop pop xor xor daa ja icebp mov in add es dec rcl movsl add dec cmpsb push push cmp push into fidiv xor pushf sbb (bad) add sub add fs mov cld cmp popf insb sbb push mov mov xorb popa sbb jge jp cmpsl mov mov add dec push leave fldcw aam out xchg out jmp push adc sbb ljmp stos sti outsl push lock rol push adc out fincstp out mov add mov inc adc add mov loopne lret add insl leave xchg and (bad) dec pusha sbb cmpsl push icebp dec push xchg iret mov or testb or sbb lret push jge fs xchg and (bad) rcll xor add dec or pop xor cmp cld add jl inc mov add sub inc ret cld pop movb mov sub jb add popa sub mov lock pop pop loope cwtl jb mov pop pop in cmp js cwtl test mov repnz dec inc test (bad) cmc mov and mov push icebp add cmpsl test mov arpl mov dec and cmpsl xchg mov xor inc fwait jmp xor pop push jg lret out fisttpl sub dec sbb mov shrb lahf (bad) repnz (bad) mov clc jne aaa aam addb push movsb jle ljmp xchg mulb loope cmp mov add and in or pop jo cld xchg arpl sbb in add mov dec push (bad) icebp sub mov adc add sub lods add inc in in add dec iret inc fstpt sbb jl into dec xchg sbb mov repz test jg pushf and jp add push cmp pop aas cwtl dec add lea jg push add inc sbbl pop sahf (bad) enter pop shll inc add or sub shlb aaa add xor cwtl push add pushl mov push add sub (bad) adc add cmc mov jo sub clc imul fnstsw mov fnstenv lock adc in dec mov cmp (bad) int add xchg jp add loopne lret fiaddl push cmp add repz fiadd div add sub into mov sar shrb pop aas jnp subps inc scas jb adc sbb repz mov jl push cmp xchg bt cmp adc (bad) mov jae iret add stos pusha int3 pusha cmovno add jp imul pop sub cmp call mov xor aaa inc dec add test add fadds cli inc cmp inc subb inc aad int3 addr16 mov in xchg aaa add addr16 aas popf and (bad) fwait mov insb add sbb scas mov add sub jge mov je push leave (bad) es pop mov sbb or jae add or out pop cmp out (bad) mov push dec mov dec testl sbb inc testb sti lods out test cld add stos leave out mov push add pop mov xchg dec jo cmpsb pop insl push xchg add push push xchg sub xchg add push push add adc and and sub add nop in out push adc mov dec and mov fdivr sahf rcr pop push ja sub cmp mov hlt pop cwtl add push test pinsrw shrb dec mov pop pop add pushf add jno in call add cmp nop cmp jb jp outsb in pop js jo,pn add inc pop adc push (bad) add ljmp mov testb addr16 popf bound repnz push into push subb or fs mov adc add mov loopne push into lea and and cld or das add lods enter add out shlb mov cmp addb outsl fiaddl imul or jle inc rclb pop inc cmp push cwtl js xchg adcb loop loope int je or cmp in mov push cld ljmp sbb test add add cmpsl in pop add inc dec sar in sub add dec bound negl jae addl xchg pop shrb cld cli dec add popa dec ret inc (bad) mov daa dec push mov cmp sbbb cmp scas mov and nop and roll push aad add jmp mov add mov lea in add sbbl and pop cwtl xor sub lods scas sarl jno out pop push bnd push pop sbb out clc (bad) cwtl add into decl or int mov dec daa std loop cmpsb xor in imul fimull push mov inc je pop jp sbb or add push (bad) ja cmp subb adc cmp aas add or in mov add xor cwtl inc add cltd movsl popa in jbe mov add and les mov add cli pop inc mov or xor ds fiaddl sub testb jg (bad) cmpsl stos jne popa jecxz push inc push xchg out and add mov in jnp add aam pop xor repz nop and cwtl add (bad) mov xchg ja mov jg movsl dec into push cltd inc add hlt int add test add mov jge js add clc fcmovnu pop ret fbstp mov out push jp add and push push jbe mov add push mov (bad) dec mov add inc mov out call mov syscall mov rcl push add (bad) push insl cs add loopne je cmp add ret sub add jge ja pop push jnp pop sub push leave iret cmp xchg add pop fs push jl jp popa mov in add inc scas sub addr16 jns push test add cmp inc into mov aad andb sub mov cld inc push add mov out loop push (bad) lcall mov pushf push xor xchg jmp je add ret cli cmp push loope imul sub repnz adc jmp daa fcmovnu cld mov cmpsl dec cmp out in pusha add or push push addb xor int3 (bad) jnp cwtl test out mov adc sub mov add ror jae cwtl xchg aaa mov adc (bad) mov jg test shrb jo add mov bound inc fwait cmp rcll in lea push inc add jg pop cld (bad) adc add mov sbb add mov xchg cmc pushf gs ds fnsave add and shrb insl (bad) hlt cmp and (bad) dec fnop lahf cmp movsb daa mov fmuls mov cli adc loop sbb pop je mov adc inc mov pusha push add adc int3 addr16 mov ds or jno dec ror cmp popf subl dec dec mov mov adc imul add rcrl mov push loopne sub or cmc mov shll or xchg fild int adc call ljmp in icebp jge (bad) testb shlb mov mov (bad) xor mov jl getsec stos ljmp mov shlb add andb jno xor sub out add sbbl jmp or sub sub or pop rclb jns cmp in mov jnp jle out rep push lret mov adc fisttp mov push push cmp jo or ljmp adc out movsb lock add push arpl inc cmpl pusha ret and add add mov and test leave mov add paddsw ljmp decb xchg int3 cmp push clc daa jecxz jo (bad) scas nop jp add jg add lcall pop sbb or inc mov dec and dec mov cmp sub out dec sbb bound and jno sbb jg push fldenv cmp xchg jmp pop push mov stc push push xor add test arpl mov mov lcall mov test dec insl je (bad) lods mov lea xchg mov sbb das xor fcompl xchg fisttp sahf dec into lds pop dec jg dec jle rorb iretw mov pop bound (bad) fcomps nop jae push ja push pusha data16 int test lock (bad) add dec ret das out popf and xlat cs clc idivl jno in sahf pop cwtl cmp push ss adc xchg loop mov add testb add jbe and fnstsw push hlt sahf jbe add movsl jno cld dec negb in mov pop push lea fildl fsubs lock leave or add fucomip aaa add xchg repnz test inc add imul pop add jo or or pop push xchg repz jo add or dec insl in inc (bad) mov mov xchg mov lock fisub or jp into mov aaa pop or mov dec roll add inc repz xchg repnz movsl test fdivrl adcl xchg loope scas rcl mov add enter mov add inc clc mov add push sbb stc inc push or in addl mov jle add xchg xchg fildl aad add movsl cld adc andb push jle rcl xchg xabort adc or test add fyl2xp1 cs mov lock in xchg clc add jnp fadds sub lods jge popf das push xor push andl add leave loop enter pop in imul push out cmp xor adc xchg mov loop push fwait aad add les xor lods lcall pushf inc in cs (bad) test leave jl (bad) sar das cmpsb add jecxz cwtl xor (bad) push mov adc roll (bad) cld mov xor scas std lcall les or inc (bad) loop xor call into fstps xor mov enter xor ret add roll enter jns cs cmp scas mov and inc inc mov dec repnz insb ss mov pusha cmp outsb add in mov ljmp cld daa add stos or push add sub scas xchg mov not out add inc iret into xchg mov in (bad) xchg call sub push adc cwtl jp add (bad) dec in push and push test adc cwtl cli mov xchg or (bad) sbb test sti cmp pusha mov jge out and jp sub add jle push adc pop pushf sbb pop mov sbb movsl jae mov cmp lahf dec jmp mov (bad) imul add mov int shrb xchg imul push or mov in cmc cmpb mov jge,pt cltd add mov (bad) aad push out mov sub popl jge mov rolb xchg xlat movlhps (bad) push jno and add mov cs xor pop pop cmpsb arpl push fdivl lahf mov sub add test jle stc and pop jmp dec and nop mov dec pop adc mov mov add xchg pop les push pushf add jp and pusha dec cwtl or out paddq pop mov inc lea stos (bad) xor (bad) cmp vmread mov pop cmp ljmp adc add dec xlat inc jne cmp icebp bnd inc xor pusha mov push xchg negb outsl sub pushf cmc add daa lods pop pop out int3 fbstp cltd hlt (bad) add sbb inc inc add (bad) jo loopne mov mov insb movsl and sub cmpsl add add ret fwait and insb add fmuls addr16 dec dec pop jp add js sahf clc push aam mov sub mov adc adc imul (bad) push xor sbb inc mov add push arpl fiaddl mov xlat add sbb fadd add and addr16 rcll push sub xchg inc pop (bad) push in enter cmp mov mov add inc lods stos popf gs add rcl jmp mov adc mov xor enter cli sti scas test push push dec sbb jmp test les mov add add cmpsl ds cmp jb push mov mov add push adc jnp mov add push outsb jecxz sbb mov and add (bad) sub xor sbb add cmp stos jbe ljmp shrl mov mov add fild out test adc add pusha add das cmp sarb xchg nop scas xchg jne add lods pop rorb dec sahf movsb cmp jae,pn add out movsb push inc iret push rolb xor mov pop mov adc add mov mov mov addr16 out fild xchg out pushf fimull enter (bad) xor in mov adc push push mov aas jns mov fmull cwtl xor sbb push adc lret js jecxz add cmp aam add into and mov fcmovnb jl pop adc enter jl add push cmp bound stos jp cmc test add adc movsl jle add rep shrb jo jae es add mov fwait add imul js xchg push push mov cmp cmpsl add xor push add adc mov push inc loope testl pminsw movb xor mov push addl loopne mov mov add aam push lahf xchg sub adcl push xor cli cmpl in push or fcmovnbe xchg addr16 ret (bad) es mov push mov mov dec inc andl add add sbb sti sbb sahf jp ja pop inc cmp mov movsl out in and lock xor push add add inc jl cmp xchg cmc and push clc fmul loopne add add cmp fldcw and fsubs xor repnz mov aad mul test outsb mov mov mov pop sbb test pop call loop jp pop aam push test (bad) ljmp xchg sub jae push add jle jg scas lcall push in adc add fwait js cmp mov hlt sti testl ljmp addb lods dec stc scas add adc add xchg push rclb cld jo mov add lods add add jbe push mov mov mov push int add mov xchg push cmc xor cmp andl jnp dec lods mov sub movl rorb or lods incb rcll sub lahf rclb add das xor pop inc adc mov cli and cmp xchg leave mov pop cwtl icebp cmpb aam push jg or ret ds hlt pushf add mov fstpt out nop sbb jg dec movsl fstl fdivl pusha pop sub inc add insl adc cs les pop lahf add push dec fdiv cmp lods xchg sub add dec out cmp mov pop mov add cmp xor ds (bad) arpl sub xchg imul inc out add sub xor sahf push adc xlat jns popf (bad) mov jmp or xchg and idivb adc xchg stos jp mov inc jnp jno add sti enter (bad) mov sub roll xchg pusha (bad) je dec fbld pop sub addl mov movsb lcall cmp test fs cmp dec jb gs cmc rcll adc ss lods sbb or xor sub jp bound cmp insb add mov clc mov adc mov add xchg (bad) lock outsb enter (bad) mov mov xchg jb push sub pusha lcall movb push imul add add shrl scas add es add repz push cld test ds add repnz and and aaa arpl dec enter add (bad) xor mov (bad) out and outsb sbb imul fild es fs movsl or nop adc stos add add mov mov mov je add andb (bad) xchg std inc rorb and out add fbstp repz lret adc mov mov mov and lret fcompl rcll add lods jno sbb fs mov leave add dec xor mov sbb jbe jae not pushf test ret cli bound frndint add mov lret add adc push push add sub loope dec cltd ljmp hlt inc add rcrb nop add cli jbe add sahf fcmovu xchg loopne dec fisub imul movsb push add gs fcomps add xchg je mov xor pop sahf sbb cmp dec mov xchg xor aaa ljmp xchg xorl mov xchg fcom cmp mov cmp jmp sub push mov mov or stos mov insl mov mul jno sahf fneni(8087 dec aas jge lcall gs icebp add add out cmpsl insb cmp add pop sbb repnz (bad) push fcmovnu add pusha mov mov fstps inc add (bad) data16 pushf nop adc sub and loope pop pusha (bad) movsl add push mov add ss fstpt mov ret adcb mov in int sbb mov pop cmp fs cmp test in test xchg clc and pop dec dec pop push add push out mov jne add cmp mov movsb ja add decl js (bad) xor or sbb jg cld imul pop fdivs rorb movsb shrb sarb pop popf es or jp add lahf ret xchg push mov and cmp mov or lret pop call xor mov mov mov sbb sbb in cmpsb mov or (bad) icebp lret (bad) icebp aam decl pop test cmp pop out mov in add adcl push aas rcl test mov int3 (bad) pushl add mov fdivrl (bad) aas out icebp mov fsubs in add cmp push mov pop push pop pop sbb jb cmc pop movsl jbe mov and xor subb bound pusha aam aas cmp popl jmp cmp div xchg outsl test sar inc insb stos push sub jne popf mov into mov inc lea and insl fwait jge or inc incl jo lds clc rep add fistl mov scas and test pusha mov dec xchg xchg lds cmp out mov loopne xor pop lahf ljmp xchg fst pop test push popa pop loop sahf popf and push mov stos or mov add movsl cli mov add add mov dec inc stc cs push xchg imul sbb mov mov out mov in pushf add mov lods or push push lret shll jle push or pop (bad) std add and ss dec sub sub xlat pop push mov sub hlt repnz sbb addl decl and jl sbb (bad) or movsl cmp push add mov push test jb add mov adc sarb iret scas adc adc enter pop dec fiadd pop sbb mov xchg add cmc stc (bad) mov aas lds inc cmp or push or rolb fwait jae (bad) clc cmp fs mov push inc cmp aas sti adcb push add jge push out xor cwtl adc lds js dec jg add inc loopne sysenter mov pop insl dec add mov adcb pop jns mov add mov and lods bsf push add mov lock fsubl ljmp jmp cmp mov and lods add jbe sbb push pusha inc mov in es movsb pop jnp xchg cmc addl mov (bad) or push jg (bad) jno sbb push (bad) repz lock adc sub jae dec sbb dec nop jp or sbb in and insb outsb loopne ret inc test add and add lea sub mov push mov cltd mov xchg nop fnstcw cmp arpl sbb ja call inc push int aam and lock mov jb add fwait add jae mov xor mov and (bad) add mov sub pusha cmp jo adc jno pusha xchg jmp xor test pop add push ss enter mov dec add lret push ja imul add pop lods add pop add sbb xor jb pop rcr shll popf loop add or push cmp add test leave push std and or pop or add xor rcll (bad) add push fild ffree sbb add xchg mov bound movsb into ljmp push and push xchg adc mov hlt adc dec mov mov cmc push cli mov cltd je jmp ret xchg (bad) loop cmpsl movswl add ret sbb push repnz loop or popf out (bad) leave popa or jl push (bad) lds add cmc jmp cwtl sbb in lock aam sbbl adc rorb jne or pop xchg es cltd dec adc sbb pop lret jmp push pusha out xchg js add cmp mov test cwtl bound and jp add icebp test gs mov dec xlat les ljmp test pusha jl or ja inc out mov pop and pusha loopne sbb pop add lods out or in add popa push push cmpsl sbb mov xor mov rclb push cli loopne add (bad) cltd cmp into jbe mov mov cwtl add loopne xor (bad) aaa sub mov loop dec cld das (bad) xlat roll jmp addr16 add adc adc jae leave push jg mov mov pop push test mov add add test adcl inc and mov ret jb jge hlt mov mov sbb push cmp sub inc xor lcall inc sahf cs lcall mov dec pusha adc cld push stos nop or push mov push xor pop adc rcll push or jo dec or fnsave data16 aam adc nop cmovo jae (bad) sarb repz xor xchg add or mov je cmp mov sahf insl js rcll push cs test add dec pop lcall jle bnd adc out sbb sarb enter cld mov lock in out sub test scas test and push push sbb mov and mov mov push lret jle xor add sub sbb lds sbb push pushf sub in add idiv mov ljmp aad dec add iret hlt add xor cmc push aas xor outsl mov mov xor jbe dec sbb int movups add (bad) cmc or jo lock and xchg xchg fildl out lret push fadds inc insl daa or adc adc cs leave add add mov (bad) ss fadd mov jmp pop mov mov leave cld adc lea rcrb fwait mov or movsb test or push mov scas pop add mov mov test jle mov fwait sub add mov jne push (bad) mull rorb or sarb into adc (bad) imul mov add push mov call ljmp scas mov jge jnp or dec nop pop dec leave adc push mov mov or add ror lds sub ret xchg inc jo lds mov sub add clc inc arpl fcomps and fs add sahf lods push (bad) mov add inc lea mov nop adc cmp pushf add rcl stos repz xor movsl mov insb sbb inc divb add adc xchg jmp (bad) mov pusha cli dec adc add lret or in loopne mov cmp xlat jb inc xor cmp fiaddl add jmp (bad) je and imul inc jns dec addl pusha scas icebp mov pop mov push mov fmul movb bswap pusha imulb ljmp jl lods test inc xor push inc add fdivr ret dec add dec testl aas add stos repnz inc cmp call pop out jmp push (bad) cmc shll fwait and fcomps mov mov sub movsb daa and push ss xor pop sbb cmp pop sub sub mov popf lret outsl push mov add push jns add sub sub add jmp fimul orb add mov nop sbbb jg (bad) cltd adc jnp add dec adc cwtl pop add pop in sbb in cmp faddl sti lods pushf mov mov fdivp add sub ljmp mov xchg pushf adc (bad) add add mov jne lods js out pop and mov inc imul dec dec sbb add in and adc outsl js mov inc js repnz add add in stc jne pop out dec lret popf rcrl or push add sbb sbb xor sbbb in pop or arpl andps mov mov addr16 cmp add fcomp adc or test imul sahf (bad) mov mov sbb (bad) push cmc mull lods push ret pusha div movsl sub test pop addb add jmp imul mov mov cmp or lret (bad) add test add fistp adc push fsubrs push xor mov (bad) jne mov add adcl push and fistp (bad) aaa jl add fdivp repz lock push stos adc xchg lds (bad) dec xlat xor add popf icebp and add mov mov xchg (bad) jb add sahf push lea movb dec push dec jo scas add in mov add imul push add je das jae ja add fldenv mov mov add mov jae add jo add fwait cmp (bad) and fdivr jne sbb out pop popa push add jecxz sbb cmp and mov jb mulb cmp scas adcb sub (bad) lods out pusha aaa xor sub pop idivb mov loopne in rcrb inc stos fwait call repnz (bad) inc sub or (bad) xor inc mov mov push add out call or dec sti pop mov add jnp add js or mull sbb and inc inc pop add shl mov sbb sub and sbb in add push add cmp sub (bad) adc mov daa add jl or cmp jp pop mov movsl add scas test cmc cmpsb add int jb jge mov or (bad) xor sub pop add mov adc mov repz push mov jge jmp fcoms cmc mov add bound cmpsl insl loopne or (bad) add jb add test lock fldl popl fsts xchg add sbb cld scas add es mov adc cmp out aam sbb stos add loopne cmpl add and jns mov push xor rolb add xchg mov add negb pusha test cmp jo dec movsb xchg data16 call loopne mov xor test ror nop cltd arpl add push pop adc jb loop pusha lods cmp dec les jl add inc mov add xchg mov insb add jge ffreep pop in add stos inc loope pop push mov inc or fdivl jb mov push sbb xchg lds pop arpl add jno fnsave add lods test add mov int mov mov adc dec lea mov out adc ss add cmp outsl mov rcll xor mov (bad) cltd mov xchg pop (bad) and ror mov fadds rclb scas dec jae cmp add movsb xchg (bad) xor popa jbe jge in pop or inc cltd test push fbld mov sub mov std add mov add cltd mov in inc or push add mov ss movsb mov push decb or std loopne outsb cltd pop cmpsl xor inc xor dec add loope jl nop add stos mov or mov pusha jg add insb arpl jae pop sbb add sub mov dec pop mov jle scas sub (bad) lahf mov dec hlt jmp mov cltd cmp push jl cmp in add mov push add fdivr inc push mov sub fldenv outsl mov sti loop lods dec shrb jecxz aad mov mov pop mov add in in or mov add jb jecxz je fisubl lea adc and add das fcomip sbb inc add mov pushf add mov add cmpsb negb sub mov jno sahf push cmp movsb fldl push jmp cmpsl and jo out pop div add mov mov (bad) mov sub add lcall dec pop fwait add lret add jo pop add cmp or sub subl cld jno xor loope stos rorb add jg insl cmp push call mov (bad) (bad) (bad) add cmp sub lock cmpsl repnz ja int mov rolb fsts jno cmp popa mov and enter jnp inc jmp loope adc (bad) popa add (bad) lods add add ficoml lock loope je je sub pop stos mov fld pop mov loopne enter scas in adc lods sbb popf or (bad) (bad) pop dec inc push movsb fildll and lea sub ficom pusha inc cmp es rdpmc mov fs pcmpeqd or (bad) int sbb pop jmp add mov popa mov stos ljmp and aam mov (bad) scas jb add jbe sub loop push ds test cwtl std mov inc add jb gs sbb add inc xor add arpl inc or sahf xor cld or mov mov adc pusha cmp or ret push out std mov xchg mov cmp mov in xor add leave add add mov cmpb pop repnz sbb xchg sbb jmp stos stos enter sbb ljmp ja test mov add popl js and add dec mov mov test je call inc (bad) pop (bad) xor fldenv fcmovnbe add jmp or les add addr16 add mov or pop pushf mov sub les outsl and in cld cltd and das dec ja add pop inc shrb sbb lods sub jnp (bad) or icebp fisttpll sub push pop cmpsl int3 ret inc addr16 add loope fldenv test sub stos loop out jge rcrl stos fidivr mov add cmp les sub jnp jae lock popa lods pop jbe sub (bad) scas (bad) out int ret mov test inc movsb aas mov (bad) and push ljmp nop xchg lea inc fildll adc pushf in test dec push sbb rcll imul test push lods in push xor popa lds out es (bad) mov jge add (bad) js push push add pop add sub xchg add ja mov inc or ret dec movsl hlt arpl jge (bad) and dec push cmp aad aas out add push arpl fwait imul xchg jge (bad) out inc rclb insl or ja or dec int mov mov and (bad) fistl movups aam sbb sbb stos dec cs and cli int3 cmp int jmp add xor adc adc inc loop hlt or cmp in fmul mov cmp xchg push cmp pop add jle jnp pop das fsubs aas daa scas cmovb xchg cld or iret (bad) pop incl jbe xchg adc sub orb pop pop sbb repnz push add or xchg pop xchg lods add ficomp jl add dec add xchg inc test push cmc repnz arpl adc sub jl adc sarb add cmp jbe inc push mov dec inc cld inc and nop dec push je xchg pop add in pop adc int3 and loopne inc and mov mov sub inc xchg and add add inc pusha add fdivl ret xor sub xor ret sbb repnz inc inc aam and fnop sbbl inc or ljmp sbb mov (bad) packssdw sbb aaa or xchg lods fdiv cmp adc cmc inc sub and sub jecxz rorl inc arpl push adc jne sub movsb and leave hlt lahf or add push call inc call adc leave cmp (bad) add loop mov cli pop cwtl mov int3 call nop pop pop adc cltd gs mov adc jl mov xor fnstcw hlt je ret jmp cmc test cmc les cld call push push pop fidivl ret in add xchg pop std jo lret or mov int3 leave rolb cwtl sbb dec pop lods ljmp inc push xchg mov add and cli jmp xchg (bad) popa inc stos movsb inc or sub add mov jnp push mov fnop pop enter mov std add jbe adc iret (bad) punpcklbw (bad) pop jle stos (bad) cltd int3 in xchg adc fimull rorb inc jmp loopne mov pop inc mov popa xor sarl popa mov enter add dec fnstsw les into and inc pop xchg mov add popl fild adc dec mov add inc jbe sub dec inc sub sbb adc loopne xor push add subl add jne add (bad) daa aam mov test inc sbb add pop stc popa cs imul dec movsl xchg add insb xchg dec add dec mov mov add std dec add popf je add pusha ja mov sbb test mov inc out insb jnp cmc or call fldenv sub mov cld push orb testb sbb clc nop inc enter in fidiv je fcmovnu shlb ret popa push sbb xor sbb insb add or aas (bad) movsb ret add pop cs mov and icebp and (bad) or jbe test jno lds push pop subb adc mov arpl add (bad) repnz (bad) adc inc and add stos mov dec mov cmc shll cmp push popa fwait mov xchg jp sub pop dec sbb imul add ss arpl in rclb cltd mov or lret add jns (bad) mov and xor popa stos adc add lods decb std stos ficom mov repz jno or mov scas rolb or out clc pop dec mov adcb xchg movsb inc add loope add pop mov ljmp xchg cmp jge mov mov andl shr aad add mov insb push es popf push push add aas mov lds es inc int3 mov cltd xchg out cmp shll iret inc or jl sahf adc idivb pusha cltd aam lahf mov jmp sbb xor dec add mov sbb cltd (bad) lock fdivr dec sbb mov pop jge leave dec or xor mov or cwtl add (bad) fcomps jo icebp or les sar fs push jbe jae clc and pop in mov and and add adc xchg lea mov inc add dec jns push nop inc mov jnp loop mov jae push dec cmp pop mov dec (bad) mov addr16 test lods add push cmp add sbb (bad) dec mov inc mov in rol mov pop mov in insl jmp add fwait imul add cli repz mov mov pop arpl or mov (bad) xchg mov dec data16 inc jb rcl and cld and mov dec imul mov mov xor adc ror cmp pop aam add jne sbb adc mov jecxz out dec rolb jg mov cmp hlt loop ds enter inc gs sbb pop pusha add sub loopne mov jae iret xor nop fmuls add and (bad) mov xchg mov aam xor cmp addr16 mov pop push aam test jmp sub lret leave ror jne sbb fiadd fs jg fdivrl mov (bad) loopne in ficomp or bound add adc xchg dec outsl loopne or xor dec push aam (bad) cmp sub cmp pop mov sbb dec repnz cmp aam xchg popf (bad) mov add mov and sahf cltd shrl icebp inc jmp xchg xor jb mov dec insb jae pop aad add push clc ljmp push xchg push dec sarb add cmc test insb and test popa mov in pushf mov fcoml inc mov test mov mov mulb repnz icebp cmp dec ja add mov mov adc or mov lds test fnstcw imul add movsb dec jnp aam es mov js fiadd repnz adc add pusha or loopne cwtl orb inc in call mov inc pop pop jno cltd aam stc mov inc mov xor sahf fdivs adc pop in ret out dec or inc push mov jno inc nop jecxz (bad) int sahf and loope mov maxps (bad) and push stc xor jae (bad) and mov xlat push or pop rorl iret jbe lds push cmp pop pop pop insl cmp and inc (bad) pusha cld std mov out and or xor jp loope cmp push cs outsb out nop xchg out lahf mov shll sub movsb add cmp add dec cmp insb repnz add lcall mov dec jl inc add sub sbb lret jne outsl inc sub dec aam and add dec pusha add cltd inc aaa (bad) stos fild push dec fldt inc pusha negb and or jno cmp (bad) lds loopne mov cmp divl push jns into add pusha add inc ror jmp add jle repz in push sbb lds push lret or inc mov aam and inc dec push nop push outsb or mov push sbb mov test xlat xchg add lds add xor repnz cmp addb mov stc push out cwtl add pop mov ret pop xchg mov mov adcl adc es xchg roll mov insl pushl push sbb dec jg mov pop sarl xchg pusha jp inc pop cmp daa pop xchg add ja movsb in add mov mov aad mov aas roll dec jmp addb inc mov jbe repz jmp arpl mov inc xchg rolb mov lcall push out pop movsl bound dec aas les insb add inc add jae and lcall add fidiv fwait movsb clc cld pusha inc add daa popf sbb loop es decb sbb add cli dec rclb add daa popa add ds cwtl aam rorb sbb sbb jge pop inc dec (bad) repz aam xor pop fdivs xchg daa push out sbb mov dec add mov hlt test nop add mov xor loope rclb or mov out fldt and or mov xchg pop mov insb repnz enter xchg hlt pusha inc (bad) pusha jb leave add icebp jecxz pop and lret and jae inc popa int3 mov (bad) stc sbb fildl loope fiadd mov les rolb iret cmp test ljmp (bad) mov cmp sub pop jmp or andl or inc adc or xor jb,pn lods adc xchg add cmp xor push jne push test mov dec pusha por dec or cmp inc fwait mov popf add div loopne and sti dec (bad) loopne out pop add je adc outsl and and push aam arpl add or movsb push cmp and lock push and cs xchg nop pop sub rorl addr16 jle mov mov xorb sub ret push jl mov insb test and scas dec in (bad) or jns (bad) jo rclb int3 adc mov (bad) xchg je out xchg fildl es add lahf fistp sbb imul and sbb cld mov bnd into repz mov aam push dec or jmp clc insl cltd loop ret mov int fsub inc call add mov cltd xorb (bad) cmc dec add shll jge or pusha (bad) mov lea test pop int3 mov mov mov xor xchg in cwtl (bad) lret add les push nop clc inc xchg lcall repz out sbb adc jno loopne ret inc jno shl sbb arpl jge loope cmp psubsb sbbl add push xchg aaa jp je cmpsl pop movsb dec (bad) jno les add divps in fsqrt xchg clc pop or push add aam adc data16 mov dec insb lcall pop lret loop pusha pop or push sub fsubrl jo or orb push cmp add xlat mov add fisttp movsb (bad) adc adc dec mov (bad) push in sarb (bad) mov imul mov sbb outsl cmpsb inc movsl jg push les xor test dec addl mov pop or and and inc cltd mov cmp pop xchg movl add push jb aad and mov fmull insb lahf or mov popa lods jmp mov lds cwtl and push fcoms repz jp or cmp mov imul push jo inc jae push test mov fwait (bad) pop jge sub ret jl add jne les test pop iret nop cwtl add xor push cli xchg jg daa lcall leave push pop push xchg imul insl pop jge lcall xchg xor (bad) (bad) pop loop pop pop cmp pop add lcall inc inc xor mov mov dec mov mov add je jno xchg add inc jge or pushf mov je popa int jp add dec inc movsb nop int3 das call mov arpl hlt outsl out xor mov pop leave lea push add dec cli call sbb pop sub push dec add lret sbbl add (bad) push scas insl xchg or jecxz adc sub xchg or add push push movl push and add movsl xchg scas mov jge mov fwait or mov stos lahf mov pop add push lret dec fisubrl push and pushf hlt cli aad lods adc mov xor xchg popa outsl inc mov or jmp xchg addr16 mov rcll movsl inc lock scas loopne arpl (bad) dec add cmp jp jns or mov inc lods and addl in (bad) and dec pop xchg xchg add dec cmpsb mov sbb outsl insb adcb roll xor pop add stos or xchg ss add rclb push mov and lahf loope jns sub sub aaa icebp mov and leave lret dec mov bound push call lods cs push push add or mov cmp mov add leave lcall cli or sarb les insl add les mov fwait inc dec stc dec jbe dec xchg loope popa mov loopne fistp pop dec inc inc cmpsb je xor mov or movsb inc and test imul dec test xor mov into dec mov (bad) or xor sbb movsb aam aad jl dec sti adc push lea ret subl adc push sbb push lahf sbb mov add loope push dec pop aam or mov mov jmp xchg lock push add lods dec mov je cmovp dec jle or mov cmc pop imul je ficompl cli adc in add jg inc test rcrb or std cmc pop and idivl jecxz push lods xchg insl add aam dec inc and ret add cli ret daa clc add into pop fnsave and xor jns sbb loope (bad) out inc add push push rcll xchg add lahf add mov imul scas out or cmp les inc icebp loope mov mov dec sti mov scas scas fstpl fild xchg inc cltd mov cmp xchg xchg add push and mov sub mov xor insl popf lldt and iret pop (bad) iret xor pop fadds sti aaa movsb inc or pop or cmp sbb out cwtl adc repnz pusha jg (bad) jp add dec inc cmp loopne pop fs pop add pushf push sbb adc inc push add add add popa xchg inc scas mov lock push das bound and xor mov ds mov lock pushf push aas pop dec int shr sbb inc add dec push add sub xor nop xchg inc clc or in dec fmull add sbb pushf fs imul inc es pusha or push cwtl rolb cmp jle add add cs dec enter push sub pop pop sub int3 or pop adc scas js pop add add imul dec push cmc pop test scas fstpl or rorl mov add cld mov imul fcmove das fstpl cmp out add aaa bound or scas jno add cmc in or pop and (bad) out mov and mov or movb adc cs xchg dec jno stos xchg invd cwtl inc inc push inc xorl (bad) mov sbb ds (bad) jbe jp shll xchg fcoml inc xor lds aaa fadds sub fwait cmp cmovle cmc push adc sbb je lcall (bad) insb jle adc add (bad) scas mov lds in mov inc mov mov add loope cmc dec inc push xor xlat and dec mov cmc push push and add out fs sub lods and fisub inc pop rol (bad) dec ss movsb test fsubrs and add dec aas test lods (bad) rorl add pop leave mov cmc lock add (bad) adc adcb in add ja mov xchg sub pusha (bad) xor push mov or je jge sbb mov rcr aas mov sbb xchg cli ds cmp pop lahf iret pusha adc inc inc call jge push or mov mov movsl mov add in js mov sub fsubrs aam xchg add adc lret insl cmpsb add es scas push cmp and add add sub lea dec adc insb sbb add mov mov push mov fcompl fldl shl push xchg and les pop arpl xorl add das mov stos jmp pop push pop inc mov adc mov mov dec shrl lods or jne test mov cmp movsl sbb lds test lcall dec push pusha mov cmc push sbbl clc xchg pop add icebp imull lea sub sbb into pop es rcr xor je mov mov add or cld in ja out add mov push add xchg (bad) js inc and add test cmp insb mov cmc push daa and lods popa jno lss (bad) dec push movsl add fsubr inc in out pop mov sub push ss into jbe lock sbb rorl sbb dec push inc loopne mov xchg jp or out pop sbb inc pop push ficompl jo andnps es or jmp ljmp loopne aas mov lea dec cwtl mov sbb push rcl cwtl cs jl xchg addr16 (bad) pop sub xor daa mov lods push mov jle xor add scas pop and (bad) pop or push pop pushl cmp jbe push mov pop ret test int3 xor mov in rorb push jmp or fs popf rol je add or add lahf int3 xor negl inc push push in pop pop or sbb mov or pop sarb cwtl outsb lret or mov dec out cmp int3 nop stc pop into ljmp cmc mov mov lods dec in adc ret jo dec stc sbb arpl aam mov mov pop repz dec mov add jno xchg call adc push and (bad) inc add lret cmp or iret loope cmc cmp and inc mov leave add push subl xor pop cmpsb lock add push pop loopne mov faddl into jno in xchg add nop push ret xchg add test add pushf inc outsl push pushl jb mov les dec jmp xor out fldl mov jl jo cmc push inc inc mov add fnop jae pop aas push jo inc add lret fcmovu subb cmp aad addr16 arpl dec cwtl add and mov sbb pop mov in out mov stc (bad) add ss push je push mov loopne into es add mov pop add scas rcrl add (bad) add dec jns stos subl popf or cmp add outsl stos add (bad) xor test sub inc adc ds pop cwtl pusha xor pop and sbb ss add iret nop lods mov loopne pop mov ds (bad) loopne mov lret cltd push (bad) call add pop imul cli cmc dec sbb jno cmp (bad) pop in push in jecxz sbb outsb xor negb cli adc mov lret pop cs arpl pop pop lret inc cmp jl mov call addl pushf adc mov cmp sbb inc popa adc test sti mov sub and cmpsl call xlat xchg (bad) jl add inc sbb lcall push ljmp cmp scas add push add dec xor stos add test xlat nop loopne icebp mov ret jl xor leave repnz stc push xchg jns xor push in mov push add insb xor and and cmpsl pop ret jo xchg (bad) add adc or out movsb pusha (bad) jno sbb ret add and jmp outsl inc push xchg add (bad) ds cwtl xor add mov mov (bad) cmc pop push pop int pusha push (bad) lock add sub xor movsb bound add jns add cmp fwait inc aad cmp push inc icebp xor jecxz push cli mov add fmull aaa hlt in mov dec aam or clc outsb push and xor inc cltd pop movsb xchg leave mov add xchg add jmp cli out xchg mov popa dec stos cmp movsl pop push pop jbe fsts clc lcall add fs loope mov out xchg jmp pop or inc test lods mov inc mov jb add adcl and xor and add push xchg sub xchg fbstp mov jle js shr insb movsb mov jge cwtl and pop (bad) jns push adc icebp (bad) je inc lock insb mov movsb mov dec stc mov in sub outsb shlb push adc in shl divl inc lds inc mov mov jo cmp sahf xorb xchg int3 imul inc testb mov shrb jl xor jmp and cwtl sub rolb js movsb xlat push jb int3 pusha arpl xorl nop mov outsl dec and jns mov cmp inc xchg xorl add push clc test repz ror inc cmp add adcb and inc or (bad) jo add lea mov cmc and sbb adc or es dec inc push outsb imul idivb xor mov insl mov add push add or xor and push xor sub push push test push cmp push sbb aam add dec (bad) fstps (bad) xor inc sub lahf sub inc outsl inc jo and add xor popf test mov push jno and cld inc pusha mull mov inc xchg fmuls jo pop or inc pop test loop inc mov push cld cmp sbb sub das sti xor xor test or sti in out gs pop mov cli mov sub fucom add ds mov sub dec fwait pushw sarl cmp add fdivs cltd xor xchg adc and jne inc xchg gs cli imul mov (bad) lock add fiadd pop aas mov in jo inc and sti sub addr16 jl mov jo add int3 fucomp push cwtl adc lods popf rolb scas pop mov pop jne sub xchg pop push sahf aam mov outsb lret sbb add adc xlat sarb inc mov add xchg inc fwait mov adc jnp cmp sahf popa mov fcompl mov inc xor (bad) mov int cmp subb inc je add popf aam xlat aas add push inc jecxz and outsb and sub lods or cmc icebp and test pop dec test outsb mov das adc int3 mov nop adc sbb and pushf icebp sub adc in mov xor dec cwtl mov (bad) addr16 add shll mov push and xchg mov add sbb dec vpcomw sub mov cwtl jo test lods repz lret adc ljmp shrl or jmp loope push sub and les bound lods pop xchg xchg call movsl rclb mov push adc pushl cli add leave sub xor movsl sbb in or xor push sub mov in pop xchg push popa insl gs nop inc add add xor xchg mov cmp or (bad) cmp sbbb shr jg nop test inc sbb imul lods adc or cmp pop and mov clc lods sarb jae mov fcomip es sahf call mov iret test daa mov int mov mov in shl add test cmp pushf pop mov sub mov add mov mov push add bound or nop lret ljmp sbb dec lcall mov cmpsl cs mov xor or cld loopne popa jge flds popa xor or insl inc adc pshufw ret rolb ljmp insb enter cmpsb or shl adc movsl fs fiadd sbb pop jge pop and in imul movsl xchg add loope and ds fprem es or xor int3 add and fnstsw int3 fs jnp lods xorl test imul mov adc (bad) fsubrs loopne insb add inc adc mov and add xchg add dec nop dec test or and cltd movsl jp cltd je or add aam fucom xchg xchg imul mov or lods in sbb rcrb dec mov adc cmp aaa dec sbb rorb inc xor or jecxz sbb xchg clc add mov mov inc xor int3 (bad) cltd inc dec lock pop add mov hlt testl add ja xchg in adc dec out adcl cmp int sub or mov cmp les xlat pusha sahf xchg jo inc xor nop xchg adc inc add (bad) ret sub and adc mov cli cli and inc add inc add mov mov std sub push push lods pop rcll mulb int3 sub shr inc pusha js jno icebp fdivl add jge dec lret ret pop ljmp mov pop push cmp xchg ror mov outsb jns sbb cltd pop add pop int push lods or xor pusha xor js int adc and bound outsl dec jbe fsubrs adc (bad) jl loopne xbegin fdivs mov sbb ret push cmpb xchg fisubl sub push adc aad enter inc outsl xor inc fwait dec je pushf mov or mov stc popf lods fwait mov push dec sub or add xorb pop xchg data16 (bad) jo lcall movsb outsl adc ret xchg jnp sbb loopne lea arpl clc xchg sub jge jmp iret xor xchg fcmovb lods adc adc mov (bad) ljmp add pop jo dec mov int add inc test pop inc shlb nop repz iret or call test push orl enter sahf jbe sbb rolb add xor and jecxz outsl inc and and mov cmpsb add fildl dec adc cmp push push repnz pop lds out fsubrl arpl push lds cmp (bad) ja cltd mov adc jne mov add sarl (bad) outsb mov or out add inc mov mov rolb loopne mov mov dec lock add je loope call mov (bad) mov repz inc xchg jmp xchg pop push stc xchg push lods add outsb arpl push insb enter inc test jns add add clc popf arpl fldt orb pushf ljmp adc inc (bad) je push or (bad) rep (bad) enter and mov sub hlt leave sbb fs and sub (bad) mov stos adc mov bound lahf mov xchg push cld popa sbb xchg jecxz (bad) je repnz movd lret cmpsb mov xchg ja mov rorl sti sub mov inc mov test div sbb cmp mov rcr add bound clc jne dec push jl and mov push inc inc fildll pop gs add mov adcl add cmpsb ja add sub mov sub sub push outsb xchg dec jne cmp cmpsl in clc aam xor bound cltd jo loop addr16 rcrb jl push sub dec int push inc inc sub je sbb adc iret fstpl inc mov pop (bad) fimul inc mov and adc jmp fmull out jo pop pop and pop imul sbb sbb pop adc jb add cmpsl loopne aaa add cmp mov cmp add or insb mov cltd movsb inc or popa fisubl cltd mov dec pusha or adc flds add or and add jb sub and rcl mov repz cmp nop jns popa adc sub (bad) mov (bad) outsl jo adc subps clc jecxz fs or or loop or xor decb push ror add ret (bad) test mov out adc loope fs lret lods add (bad) push add lahf lret xor lds sbb adc cmc push jmp adc sub scas mov cld push js test es js and outsb fldenv test loope add push xlat xchg sbb popa call ljmp ret cmp sbb fwait dec cmpsl mov mov mov or das xchg out adc add xor mov pop popa pusha jp cmp mov adc es loopne pop (bad) cld into jg add fisttp leave jmp adc sbb adc add cld mov jmp dec cmp sub or pop or xor add and pop jle jmp push pop pusha add jnp loopne xchg js popa test setnp push jmp fadd cli lcall daa jne cli scas (bad) mov rolb mov out daa mov rolb push (bad) jge xchg jo add lods push push adc jmp pusha xorw popa mov or add test mov push or cmp or adc inc jae add jo call jp add ljmpw ds or (bad) adc ss popa scas test or pop add repz sbb inc or pop nop dec ret pop rcl stos sub xor sbb jb or mov or adc xor add sub and or sbb sbbb das pop mov cmp aam inc loop push mov test dec mov adc mov (bad) out arpl mov sbb je mov jns imul in (bad) push and add enter add and mov inc loope popa test or push ffree outsl or pop push jae push push add inc push roll jmp xor xchg xor xchg xor rorb cltd cmp dec clc mov jmp roll add push cli adc jb mov add cmp adc pop dec in divb popl test mov fdivr popa sub ljmp mov sub adcl add mov popa lods fnstsw add les add fiadd or (bad) mov stc sub cwtl cs sub add out push or pop sbb ret xorl js (bad) mov popa inc jbe cmc add std shrb sub add movb jnp mov mov add sub (bad) leave pusha add jbe loope sti fnstenv ret and sub je jp inc out inc clc popf fistl pop inc mov addb popa jge iret pop pop in push xor push sub ja add pop nop xor test mov pop je sbb fnop add pop mov in add call dec xchg in aaa add xor inc xlat ss pop lcall adc dec cmp inc push (bad) jno cld dec pushf pusha adc movsb sub cwtl mov pop adc adc push imul cld fildl call cmp andb xchg cmc popa dec (bad) jmp mov inc sub stos into add xor cwtl out sbb or ljmp sub cmp test add (bad) clc cltd push mov and and sub clc mov sub mov fiaddl and adc sbb inc (bad) xchg bound shlb push xchg mov adc push out add into fist xchg dec xchg add pop mov mov shrb add mov imul cmpsl in adc mov jle add popa lea xchg (bad) cmc mov jnp xor fild lock fiadd jno or call hlt push bnd add aas roll cmp xchg aad or cmp jmp dec mov imul fiadd fildl ret sub xchg adc add incb mov lds loope xor sbb addb fistl adc adc or push push popa pop xor inc mov (bad) and test imul enter ret mov mov or lret nop push mov push jbe mov ror loopne and jnp js sbb mov or or push mov lea (bad) dec cmp add xchg scas or pop push fcompl sbb add xlat add sbb imul cmp in add adc mov and mov and jecxz add xor jno leave in mov mov xchg adc nop cmp jb push pop stc pusha cmpsb mov shlb nop scas repz stc push inc jnp pusha push pop mov repnz mov (bad) mov dec mov mov popa cwtl lret enter into sahf out incl (bad) xor mov or adc ljmp gs inc fdivp icebp push cli pusha pop call loopne pop pusha cli add pusha and pop je sub mov or inc mov jge add loope sbb and mov in mov add xchg xor test stc mov add movb pop pop imul js ret (bad) pushf add adc clc xor pop push cltd mov or fs outsb fwait sub cmp dec adc stc pop sahf inc bswap add push cmpsl jns push inc rcr sbb nop and sub pop xchg sub add pop pop mov popa out add sbb pop test push repz dec frstor leave clc mov sbb dec mov xchg inc and xchg cld cli shlb cmp inc in out xchg fcoms lods xchg or push sbb mov cmp xchg loop imul in push sarl adc add rol test inc cld mov sbb add lea xor jae mov lret or add add fidivrl popa cmc add pushl or xchg pop les sub sub dec (bad) jg add pop aas call mov or lods out jl xorb dec int3 jne ret rcll out ret adc mulb dec add push sub or test (bad) xchg popa and cmc cwtl jecxz fadd xorl adc enter xchg push ficoml push aas fwait cwtl add sbb dec add js mov xor pop lcall fcomps push sarb xor push inc or cld (bad) out inc pop test test sub push push nop sbb xor inc daa pushl xchg nop lret (bad) out movsb mov flds movsb dec adc shl jge xor mov lret loop popa pusha shr and (bad) xor divb xchg adc xor and lcall jecxz pop popa add movsb push jne (bad) lods daa std (bad) pop pop (bad) xorl jmp loope std jge test jae cld stc mov pop or rclb mov add inc pop popa push xor shrb into fisttp pop data16 aam adc fisttpl or pop (bad) lea jp daa mov push inc outsl orb lods fdivr sub nop in jg or lea pop dec xchg (bad) jmp push popa rcll pusha sub add insl dec (bad) hlt mov xor mov popa mul enter aam cmp pop xor push into jno (bad) mov dec pop add mov lock int3 add xor loop stos es and cmp movsl push mov adc mov xchg leave jp sbb nop jno gs (bad) aad adc or xchg inc rclb xchg add jbe sub (bad) lea push xlat ds stc and adc rcpps fwait stos mov jne ret mov gs jno cmc popa xchg and jo in dec pusha scas xchg dec mov insb js mov clc adc cmp or pop push fs icebp and pusha rclb les inc fnop pop mov add rcl pop pop cwtl jl arpl out aad sub mov or cwtl cmp push or loope xchg shr mov cmp and add mov xchg jo insl add (bad) pop pop dec ja int fwait xor lea or (bad) xor jo sbb addr16 inc sub stc mov (bad) xchg jp jo mov mov test jmp in inc addb arpl cmp inc loope mov xor (bad) (bad) mov lcall mov and test rclb push in push mov test and pushl dec xchg ret mov xor call nop inc add movsl and movsb rclb add inc movsl cli sbb jmp add pop add jl xor pop out es in or or xchg clc adc jmp add mov sbb pop jmp push jnp cld or enter movsl inc add (bad) or sub push int3 cwtl mov leave inc mov push cmp lret pop mov xlat daa add rorl push jp push push sub subb into incl addr16 xor int3 icebp mov inc or mov imulb jg in inc ret mov lods movsb iret into cwtl add push adc adc inc addl xor sbb das sbb rcl call and test jo pop cmpsl push pandn jb inc mov fdivs pusha mov test enter cmpsl clc xchg and dec pusha mov push test fucom pop or je fwait mov inc push clc xor mov xor mov fidivr cmpsb jne mov xor lods jecxz xor mov push in hlt les mov repz scas and loopne movaps pop cmp loopne sub in in xor jmp pop mov fisub (bad) cwtl add mov stos xchg push dec movl test pop sub push enter std aas mov fcmovb stos fs xchg adc incb push in xchg inc test pop mov fisubl andb cmp pusha mov mov xchg pop and sub xor push jmp test and and mov dec inc (bad) jbe inc stos mov mov xchg mov sub add adc (bad) ds fsubs mov or push lcall dec pusha push fsubl add push mov dec test jo leave fcoml repnz add push pop or pop popa out add pusha mov xchg sbb fyl2x fidivl out adc loop lea push lret xor xchg pusha xchg cmp hlt sub push inc jp adc push out loope jmp mov cmp xchg jne (bad) mov xchg or outsl add fwait ja adc sahf jle jmp lcall cmc and cmc mov and jmp dec inc rcll (bad) lret addl dec adc adc cmc add adc and shll orl stos fbstp xchg or mov sbb sbb push jl je,pt mov or jno jns (bad) xor pop add sub mov xor add inc bound lea pop aad adc sub sub mov mov and adc or stos adc adc stos adc mov pushf int3 push imul int3 mov addr16 push mov cwtl or add pop sub add sahf pusha mov in lds push ljmp add in mov mov mov xor bound arpl popl loop push mov and pop pop jmp mull lea ret aas out pop mov repnz mov cmp addl fsub inc out push pop fs push cmpsl push push jbe clc pop pusha lds in add xchg mov xor icebp push mov mov and mov or mov sub loopne and adc cmpsb sbb ljmp jnp xchg sub inc xchg nop dec mov adc sbb fldcw pop mov dec push mov sbb push jg push in mov push dec enter push lods in xchg rclb mov out pop dec push push inc dec sahf cmp xchg pushf dec pop not mov mov in cmp xor push nop je insl outsb or into inc pop inc sarb and pop push mov jmp mov shl push push ljmp out cs pusha orl pop add pop jg test xor push mov icebp add rcrl loope addr16 mov add pop and push xchg xchg rolb push mov pop add xor jmp add xor pop hlt or negl and outsl xor cmp push testl and pop inc sub adc ljmp and movsb sub jecxz ds push mov mov and int3 sub repz mov (bad) das not or dec jmp inc pop xchg sbb fimul fcomps jl es xor inc fwait shr ror sbbb add jmp push leave or icebp outsl inc xchg scas xchg ljmp xorl xchg ret pop dec or pop pop add and aad lret daa xchg aad sub or and pop sub push (bad) sbb mov gs dec mov lock icebp sbb mov xchg dec jmp aas jnp,pn int pop gs iret sub add (bad) jb daa xor lret (bad) enter add jmp icebp hlt out inc mov inc std movsb into push andb pop and mov (bad) inc inc stc and sbb push shl adc ss sbb push pop pop push movsb out adc add push and push scas dec jbe cltd mov lods or add mov loopne cmc adc outsb add lret sti in (bad) cltd mov add pushw stos xchg pop add mov inc xor pop negl push jle add test inc pop pop sbb adc add out imul in xchg scas push push fadds aam in mov into pop out xchg xor fs adc and and and adc cmp inc gs into out jmp cmp or add and pop bswap or cmc pushf imulb loopne pop test sub cmp stos mov cmp fcmovb xor fwait aas or xlat and xor mov jmp out movsl and push push (bad) sbb les add push xor dec repz mov lods pop (bad) jmp mov inc dec add xor xchg dec clc push nop lods add add inc xchg add sub mov xor test sub adc xchg mov push cmpsl jmp xor push jmp mov jmp and mov sbb ficom xor xor loop and ljmp jb pop test sub jmp call pop or not xorb push jmp mov push and dec xor pop pop pop insb subl stos test xor mov jae adc cmpsb mov mov std pusha das push cmpsl imul (bad) lock jl add ret push (bad) sti adc arpl jl bound mov push cli and jecxz add addr16 pop jmp fisttp xchg adc lea add inc xor pusha add pop popa pop push mov add arpl xor (bad) xor and or or ljmp mov push add das xlat aaa xor xchg aaa popa push pop sub test popl add stos xor fs cli add incb ficoml mov inc sub sub ja sub adc and jnp xchg adc pusha adc in dec pop out xor movsl (bad) jae pop or pop mov outsb xor pop loopne cwtl sub add or cwtl cmp outsl and fidivr xchg and repz addr16 cmp aad xchg mov cltd inc cmp mov lret leave imul add adc es adc aad pushf arpl push and adc faddl mov jp call add ret jns xlat mov xor and jmp shl jbe and test xchg or (bad) sub sbb ret pop cmp movsb rorb pop ss pop jg push jae int test lock xor dec les mov popa or and sbb mov jne xchg sahf movsl jbe cmp mov incb inc or add lea call orb test dec insl inc out mov fisttp dec addr16 (bad) mov cmp pop cltd or enter addl sub or pop push nop add inc fs inc lods cld add xor stos lret out adc sbb (bad) dec add pop push jne enter unpcklps sarb stos in add lahf inc enter mov xor in fs xor sbb or pop and pusha adc mov in sub out out jle gs pop sarb loope jmp (bad) div lds mov and mov addl mov xchg cltd push int3 push sub stos cmpsb rcrl addl rcrl lock and out es or push mov adc rclb and sbbb jp movsb dec sub orb cmp insl inc adc or pop adc aam or ljmp movsl ret cmovnp push leave daa mov xlat dec mov stos stc fisub aaa test cmp sahf inc or mov cmpsb and cwtl (bad) xor ret push mov jl sub add push and (bad) adc pusha pop dec jae dec ret ss xchg cmp sbb sub (bad) std add int xchg mov push sahf xor mov push xchg dec push cld sub sub jae and xchg push or cli sbb ret push or shl mov or add in and mov repnz scas xchg jae push shr testb ficompl cmp daa xorl (bad) repz mov sub lahf ret add jl (bad) outsl sahf testb data16 push mov push pop adc add adc xor adc aad popl rol into xchg sbb out xlat xorb mov add mov (bad) sti push aaa negb pop xchg jnp jbe int3 or add insb xchg lds pop lea sbb push or ret loopne jae jno add clc lcall and fist outsl popf add push xchg mov xlat pop shlb add sti mov xchg mov mov (bad) popf sub into sbb fbld jbe ret leave outsb rcrb or fist sbb test dec stos add push or popa (bad) popf addl xchg xchg subl rdseed lcall mov push adc mov (bad) loop jo add call add subb dec stos sbb stc mov nop lock mov repz xchg add mov arpl xchg dec movsb inc out fist mov notb or popl mov pop jb mov xor shrl mov lods or mov mov add push mov or insl pop sbb pop mov jge lcall or jo fbld mov mov (bad) lock (bad) in mov int3 imul jnp clc push pop in cmp adc dec xlat or loopne mov adc xchg test leave ret into or in xchg add add out in pop push (bad) sub push pop lods jl hlt xchg jns or push (bad) pop jg xchg add scas or adc cmc sbb sbb dec mov cld ja or sub loopne jae pusha loop xchg xchg cmp inc (bad) ds adc test xchg mov call and or xchg adc enter xor aaa int3 outsb loopne cmp add addl jbe andl mov sub inc pushf iret adc sbbb (bad) dec pop or loopne mov sbb jbe loopne xchg pop adc fadds push cmpsb dec inc pop inc push loop aam adc movb add sbb or sub push enter xchg adc orps std test pushf and popf dec repz loop stos sbb je sarb sbb incb xchg inc mov push (bad) dec jecxz cmpsl jmp or paddusb mov cltd mov and xchg cli or sbb xor or ret push mov dec and mov dec ja xor in adc outsb sti enter or add repnz jae inc sarb and adc repz mov jle pop test stos pushf pushf test fistp sarb push movsl lock pop mov jecxz ja inc cmp loopne insl sub dec rcrb movsb pop lahf xchg popl dec dec push mov sub sbbb call loop mov pusha add sub jne and cmc scas add jl or (bad) aam dec rcrl mul pop lods (bad) imul cltd dec jecxz clc inc adc push ret push ja leave hlt lock push (bad) ss add sbb icebp mov adc or adc cmp orl jns,pn add xchg add sub xchg jo xchg sub lea dec (bad) rorb dec lahf pop repz pusha sub nop sub lret hlt add ret cli sub aam or ds shll push je jge pop dec adc loope stc xchg cltd and push add test inc js mov xor push or imul ja xor ss cmp negb fnsave ljmp les dec mov aam clc stos (bad) inc and ja neg or jle out popa jl aas loop xchg mov push test add push xor cmp cmpb jns add insb push notb cmp (bad) push lock nop sbbb mov enter and push es and push fdivrp dec mov ss test mov xchg xchg xchg test and int3 or push insb add sbb clc jbe loopne cmp dec test ds cltd dec mov es push popa fmul (bad) ljmp or sub rcrb lea ja mov popf (bad) xor repnz clc xchg xor mov adc lock and jg icebp pop xchg cwtl popa cmp and jo fildll insb js loope pop adc mov (bad) jbe adc xor add mov ficoml pushf push pusha lds push mov mov ja lret inc loope mov test test push data16 xor lock clc js sub fsts mov clc jmp enter or and out inc enter sbb mov push pop xor test or mov jnp sbb xchg insb add adc lock lcall mov jecxz inc push xchg and loopne cwtl dec dec sbb js test nop push inc inc imul pusha out lock push pop jl mov mov pop fs mov lock add mov and lret mov pop enter pop insb icebp fs fisttp jo test in dec mov mov cmp fdivs pop inc add mov pop stos fsub pop jmp lock cltd pusha int3 fbld dec jno js jl or std push and clc loop xchg mov (bad) bound ja push orl push add (bad) rcrl sub pop clc add lret std fs inc push push inc and lds xlat jle ss cwtl fbstp jo pop or adc mov insb mov clc xchg shrb xchg ret loope scas xchg mov lret movl xchg dec neg scas shr leave call mov mov std mov add loop in inc test inc loop add shr adc mulps loop jb cmpsl rcll lcall mov push (bad) repnz scas pop (bad) dec mov mov ret mov jno adc add dec movsl sbb mov pop ret sbb adc inc or enter mov stc ja xor jl loope push inc popa cmc into xchg jecxz test cmc jg icebp pop movsb lret push pop int3 repz pop scas mov imul mov push mov push in (bad) int3 xor pop xchg inc add inc ja sub add nop (bad) ret jno cwtl icebp cli add testl out add enter push jns incb inc out mov lds add ret pop in xchg lock or sbb xchg fdivs or test lcall jb sbb mov add lahf in pusha mov sub cld xor sbb loopne loop sub mov add js add daa loope dec pushf and or mov add mov xchg out fs imul inc or cli int movsb test mov gs lret or mov pop push and loop mov pop add mov imul or push clc push mov ja (bad) mov push lock clc aam add cwtl daa inc sbb in sahf insl add daa fnstsw adc xchg nop orl stos (bad) xor fsubl out push push sbb ja cmp jne (bad) sub pop insb or push and sbb cmp xor mov (bad) mov adc inc in loopne les xchg cmpl stos pop dec jg sub ljmp add add dec adc add rclb addr16 loop add std jbe pushf cld push das or push test pop cld or cli inc jl cwtl add inc pop mov inc mov notl mov sub mov add addl add xor out adc cmpsl fs orl jnp neg xor dec jbe push mov or or cmpl das sbb adc imul pop pop mov mov and jg xor nop and dec (bad) imul dec ds add pop jg push pop mov orl fisttp pop ss pop imul jle pop mov cmp (bad) jg mov mov and add fidivr sbb push sub mov cltd xor adc dec adcb mov cltd loopne repnz loopne and xor or cwtl call jns and dec xor cwtl add popa jle mov ret loopne addl push loop cmp jge add mov repz mov fmulp test cmp (bad) popf xchg ss add outsl test jle mov lock lods lcall sub sarb and jmp movsl popf pusha mov add sub pop xor dec mov into enter aas enter pop aam xor sbb data16 imul movsb aaa std add into ret mov inc insb adc add cmp in sbb orb out mov xor or movl ret ret add aaa stos sbb stos push loope mov add jnp nop mov movsl and xor mov hlt and std sub inc mov and in sarb push push or loope mov mov aam push rol pop or cwtl lea ja xor in test repnz insl push movsb xchg dec add jmp cld or andl adc loop fistpll cmp lahf sub fcoms or pop add rclb inc or adc sub and mov clc loope adc ret inc les out mov jns popa lock movsl cltd test mov add push es adcl nop cld subb movsl fcoms jl aam adc add or dec in ds call add stc mov cwtl mov fsubl repz adc fs nop push js pop cmpsl jmp lcall imul les or sahf push sbb outsb iret cmp and push ljmp adc add cwtl cwtl es dec icebp pushf add mov lods in lcall (bad) lret and inc mov push shlb (bad) test or or jns scas leave xchg jbe cwtl sub and test adc and add pop inc insb add iret push es ss or rol or inc test cld add sub add push fdivrs mov xor out add xchg bound divl aaa imulb push cmpsl in mov rclb int3 add jecxz xor push repnz pop stos ljmp mov pop add and ja sub ret insl cmc sub pop cmpsb mov sbb movsb adc int3 cwtl cmp cld fiadd loopne jecxz in pop push sub pop cmp insb or sahf sbb and add xchg ficom fnstenv pop inc and ret jb add pop sahf sub adc sub push sbb icebp nopl and nop or xor adc xchg (bad) xor loopne push hlt mov mov mov hlt and jle mov push inc insb adc andb sahf inc or cmp or xor popf fidiv cmc inc push pop mov subb push aad popf add pop in add add pusha and jo cmpsl add adc pop dec pop sub mov (bad) and fsubrp call xor mov (bad) or xchg add add push scas mov push inc mov es mov or bound and (bad) mov mov mov loopne leave sub add ss mov pop stc ds (bad) into mov adc sahf iret popa mov xchg fsubs enter jge lds adc adc push adc sbb push push shrl inc mov jle adc fildl or ret and std jecxz push dec push sbb and lock cmp in fcoms fs dec dec xor inc addl js adc sti dec jmp sbb adc jnp add insb fisttp add popa jmp dec ret mov in jl xor lret rcrb xor add aas sti js add mov mov pcmpeqb pop cmp ja mov stc pop leave cwtl jmp inc cmp test je push xor adc lcall mov xchg insb clc adc fmull repnz inc add push stos xchg adc nop test add push push dec int lret dec mov push nop (bad) lock mov into dec inc fs sub scas dec adc mov push inc jl into add push sbb mov lock mov pop sub sahf ret ficom add bound adc movsl fildl into mov lahf sbb mov mov xor int ss inc add shll shll test loopne nop out ds adc add mov subl inc imul add in (bad) mov mov loopne xchg rol (bad) int3 nop lock mov pop xorl mov or loopne in adc (bad) int add aaa movsl into xor pop mov jne gs or sahf stc (bad) xorb (bad) sub lahf (bad) cmp pusha imul ret add mov adc jno jbe mov loopne test aas cwtl dec and pop enter mov fsubr imul scas movsb push push cli xor out gs in inc add xchg cmp mov mov inc shll leave inc mov or idivb xchg dec cli sbb je mov add mov aaa xchg and loop inc js cmp lods inc push cs imul xchg call rclb loopne sub loope inc mov cmp adc cwtl aam push pop clc mov jmp sub pop daa mov sub cmp rcl mov add std mov add cmp andl xchg (bad) bnd mov les mov addr16 dec xor add les mov dec adc add adc popa and push mov div push addl (bad) ljmp or ljmp fbstp mov xor push or test insl add xchg mov cmp push jl xor aad imul add loope sbb dec dec sub push mov inc push jo jns adc lahf xchg ss and ficomp nop push or sbb sub in mov add cmp mov sbbl scas add xor imul push or dec push cmp iret xchg daa sbbb lods add (bad) sbb (bad) negb cwtl mov xchg or scas hlt cmp push sarb mov jno xor sbb sub add push cs (bad) lock cmp fsubrs hlt ss xchg or inc or mov xchg mov movsb pusha or ds push out jo jb lock adc ds add ljmp push pop xor dec aam inc faddl sbbl and pop or divb roll pop and cmp js dec int3 pushf push jmp es inc sbb xchg sub jne dec cmp adc jns test add stos pop inc inc push jb push mov shlb bound xor je pop xchg in inc pusha inc xchg ja repnz (bad) jo lock enter (bad) repnz mov fisub or arpl cmp sbb and mov cld imul pop xor lock add sbb adc dec jns cmpsl test or dec cli pop or push adc add orl mov mov and or mov insb push mov pop mov (bad) mov nop mov and add mov sbb insb cmp ja aaa mov adc dec pop xchg inc add ljmp xchg adc popf cmp and add lea subb pop and mov push test jmp test mov lret sarb mov push call movups dec add stc stos loope adc cltd pop mov orl ljmp jmp fnstsw mov into sub nop add and addl add or push movsl add pushf sbb jbe jns js sbb loope add cmp imul in cmp jle jl add xchg aam js pop sub adc daa inc mov fist add or or mov and repnz ss mov adc add inc (bad) mov cmp sub sahf mov jecxz cmc mov mov xchg xor cmp mov iret scas out lcall mov inc gs cs repnz or sub fsubrs add sub xchg pushf add test pop testb jg in push add addb loopne fnstenv popf sbb xchg jno add and movb xor add xor mov cmp and ja cmp data16 or mov push aam mov or cmp es sbb popa stos rcrb mov pop jecxz mov add lods fdiv mov pop sti jg push add or stos jp xchg add stc cmp add out aaa cmpsl pushf test in sbb add cs sahf inc and or mov and adc aam je jmp push into cwtl or sbb je add or dec mov and jae adc fildl dec cmp int3 cmp mov mov pop icebp add dec mov push jns,pt incl mov pop loop sbb repz clc mov jbe je bound (bad) and (bad) shrb or gs xor orl enter insb add orb dec arpl add scas or aas cmpsb les (bad) xchg push cmc repnz sbb pusha ds cwtl push les fmuls arpl and jle add stc xor add add nop push adc mov out sbb fldenv add and add sub jecxz xor popf or xchg into inc shl inc add jle push or adc sub mov loop add es and insb aas mov xchg add push lods pop or push and (bad) testl cli bound out push scas call and mov adc add mov sub pusha jle sbb or inc cmp push and and mov add aad xchg xorl movsb pop fisub ss imul or nop push push in mov add push cmp std add sar cmpsl pop sbb loop pop cs arpl cwtl fprem stc mov sbb mov mov xor scas (bad) test cld test pushf sub ja and cmp ss mov (bad) insl into inc push sub jno add lcall add outsl aas das push cwtl div add push sub add xchg insb sbb sbb call out cmp test mov out add pop hlt inc (bad) iret pop jo add fsubrl mov xchg sub iret add nop insb imul mov jno add (bad) fsts pushf jl fcoml sub dec scas addr16 pop cmpsl in xor and inc mov add and ljmp mov add in jecxz mov je divb xor sub push insl pop add jle xor sub pop or mov xchg cmp aaa js xchg fldenv in lock insl lea stc sbb jecxz mov imul in lret cmp inc jno push cmp xcrypt-ofb xor enter add jl aaa std xor xlat add das mov imul cmp push fstpl cvttps2pi sub daa pushf lret (bad) and add pause cmp inc inc jl add lret mov pusha hlt sub leave in js add push push inc sbbb sbb fwait aad xor add leave adc lods pop dec test into or pop stos repnz mov cmpsl cwtl std lret xor data16 or push popa or imul xchg in push cs xchg jg mov dec scas mov stc inc add push jo add lea cmp xchg (bad) cmpsl (bad) cmp jg dec movsb call adc push into add fldenv inc popf aaa and mov add (bad) sub mov add push mov js sbb rol mov stos add sub mov mov (bad) dec rolb jb lods add pop xchg repnz sbb mulb xchg xor jmp fistpll xor and loopne mov cmpsb xchg clc xor pop add mov jno nop ficoml xlat mov pop mov clc pop cmp inc push adcl cld dec pusha add cmp sbb mov popl aad sbb add rorl inc scas mov adc in mov sbb jmp pusha push pop push xor out xchg and xchg nopl jecxz imul or push in sbb test aaa (bad) (bad) cs mov enter xor mov or cmp outsl aas sub mov pop daa or sbb insl enter sbb subb sub xor cmpb xchg jae add lock add xchg or mov ljmp sbbb add add test icebp adc hlt inc imul mov or stos push add loop push adc ja pusha sbb lahf test (bad) stc and lods push jmp fldl data16 (bad) and addb pop add int pop out push add dec (bad) and lret out inc jecxz add addr16 fwait std or roll repnz mov psubd lea das push push cmovo scas xor inc rcrb out test mov push xchg imul add jp insl add ss pop push push and (bad) sti iret test loopne sub cmp popa addb xchg mov lock push push xlat mov pop dec incb push or cmp (bad) push xor jle jmp mov jo mov adc xchg jl outsb add sahf mov add fsubrs int3 lock add jns clc scas inc mov divl add sbb xor add add mov push data16 mov andb inc sbb pop data16 jecxz add xor loopne (bad) aad outsl mov arpl adc mov movsb jbe imul jg push and jl imul shr lods jns icebp in cmp jo mov sarb add out mov bound jl clc mov mov icebp push repnz and adc rolb add pop add pop sarb sub rorb (bad) pop xchg push testb fidiv pop pop inc fwait mov xor push cmovp push or into add ljmp add repnz movsl add arpl add pop or nop add mov xor cmp movsl sar push xchg mov xchg sbb jmp daa mov add xchg in xchg jp xor iret inc pop out fildll mov push jbe jne nop ret test adc andb add test rorl push push bound push and sbb inc divl mov sbb jge lea adc xor add push (bad) dec mov addl xchg adc xor jp nop sbb lock add hlt or mov sub outsb insb pop push add mov add mov mov std push faddl repz cmp cld fdiv mov jbe lds add imul insb sahf add fldt ds enter in pop add and jnp add sbb dec push cmpsb add mov pusha popf pusha hlt sbb inc jge dec test dec stos pusha mov cmpl xor lret inc push cmp push xchg add fcoms (bad) jns pop push xchg addr16 sti adc pop out pop pop xchg loopne dec mov sbb push and jg mov and das add aas aad cmp cli jnp mov pop xchg imul arpl cmc push faddl add cmp cmpb pop fcmovnb xor sbb add xor and sti cmp cli popa cltd je add rclb sbb repnz call outsb add sbb pop mov lret mov sbb int sbb push cmp add xchg lods sbb adc shrl es push add jecxz jnp lahf daa sbb xor imulb lcall add imull in js dec lahf shl cmp fidivrl in mov push fwait or sbb (bad) testl inc xor add adc add push into in sub or cmp add add sbb nop gs loop aad add out call loopne add cmc inc pop adc cmpsl dec sarb inc int xor add pushf jbe repnz mov push jno addl arpl insb in fs (bad) mov and mov (bad) jecxz mov add pop and sbb mov fadds jne push add pop add add xchg push scas mov add push movsl cmpsw push fdiv lods adc inc rclb scas push aam mov push subl in sbb movsl adc paddd mov icebp push cli add pop cmp inc add adc add imul lcall shrb fsubs sahf clc mov push xchg fidiv sahf add out imul jp add pop push enter cmp cmp jp mulb rorb pop mov je mov ss jg out xor add dec dec inc add xlat mov add ljmp fdivr add js sti add test sub dec add and or jle push call add in fdivrl add pop jne mov std loope inc ja out xchg push add pop hlt adc idivl fdivr rolb pop addb or pop cmc adc add into pop insl inc and mov cmp jmp call shll cmp inc fimull mov outsl pusha loopne daa lods lret inc pop fildl in mov addr16 sgdtl lcall add or test arpl jne imul fsubr int jl or (bad) mov cmp add xor inc mov push add dec (bad) lcall mov hlt call lcall neg enter push jbe xchg pop or and push data16 add pushf mov daa mov in xor pop shl push add xor jns sub and jo stos jecxz jnp push inc pop into (bad) mov adc nop inc (bad) roll das in push jbe mov cmp hlt jl add push pop mov xor subl add fwait mov add add rcrb ret adc cld mov cmp add repnz and sub das popf cmp adcb and mov xor sub add inc add shr mov ja inc js pusha insb lods inc cmp faddl xlat mov rolb scas das dec add leave jp add outsl pusha jmp inc (bad) aad movsb stos mov add repnz mov lods mov adc pop mov sub ret xchg xor push outsb hlt int3 and loope push push fisttpl in dec sub jne out xchg (bad) fwait paddusw aad andb (bad) lret jns add into xor jmp dec or jmp lds adc popa adc add jb mov ljmp rolb cs es jle mov test fmuls adc loop sbb nop xor ljmp jo fiaddl add mov dec icebp pop pop shrb xchg xchg (bad) (bad) jbe data16 (bad) je cmc push sbb inc push mov pop jbe mov add int3 jns push (bad) out xor xchg adc and nop hlt es add aam call add rcll insb mov lea mov sbbl adcw xchg mov lods add sahf inc cs add jae add stos mov mov rolb sbb notb add popa lret loopne jno add lock inc fimul push andl repnz scas mov add mov lcall jg jl dec xor add push aam fdivrl aam jmp sahf out add add mov jge pop repnz sub pop popa and pushf negl pop add xchg xchg or shlb jecxz mov pop jb outsb in xchg xor adc pop clc movsb aam hlt add dec jnp in jg add push inc iret dec xchg scas pop push jecxz pusha rcrl sbb lods stc pop cmp dec add mov push (bad) inc std adc arpl add push ss cmp out add loope rolb (bad) xor out sbb inc lea fdivrl popl dec mov add add in imul xor cmp cmp xchg mov pop loopne mov sub add into pop add mov cli dec mov stos and push add aam out dec add push inc jle xorb jno sub movsl out adc imul push jp addr16 inc (bad) xor push mov es inc fist sbb inc xorb mov and or subl push dec push jne test addr16 jo cmpsb jle push lret add dec mov add sub xor sub ror fidivr add imul sahf add add roll mov mov jno mov add mov pop or push xchg mov pop jae add adc dec xor pusha sub cmc scas mov insl shll and stos dec xor loopne adc cltd clc lods jnp test add xor mov add mov mov or add outsl cli xchg inc int add mov xor loope inc pop mov test add or repz movups inc push loopne ss ja xor pop mov arpl or fwait xchg cmpsl xchg dec sub call sub inc rolb into repz sarb dec les nop inc dec shlb sarb xchg xlat mov and and lock fdivl add mov inc inc or mov test fsubs repz roll or das out fdivrs mov cmp ror add sbb pop jne or subb cld jle add cmp jl add dec lret outsl inc xor push add adc sub sbbb jns add and hlt and mov add jns daa sub push (bad) jb add std pop inc push xchg aam mov sbb inc xor ljmp or dec sbb adc lock fsubrl rorl cs mov test add cli dec pop inc (bad) enter fsubr in cwtl add adc je sub mov pop rolb rcr mov sbbl jns sub xor andb lret int3 scas add into js or ret insb std push pop vhsubpd dec add and mov jbe mov roll clc (bad) jmp cwtl montmul cmpsb inc lea inc sbb call adc mov adc or add push sbb dec add repnz ja sub add inc jmp daa je rolb cs rcl adc mov push rcrb in sub jl incl cs rcrl fwait call lock add add add ss xchg ljmp gs add xor sbb sbb sub aam loope shrl jg xchg add sub int in sbb imul dec pop ret imul push push inc ss stos cmp call push cmp cmp add std jno add stc inc jmp mov or or pusha xor imul push sub adc or pop mov and add cltd (bad) pop aam lcallw inc adc cmp repnz inc in leave and mov xor xchg xchg imul das mov push movsb adc in add cmp jge dec out hlt pop pop (bad) cmp xor sbb inc xor mov xchg jno data16 or fcoms add pop pop fcompl addr16 clc ret call aaa add test scas mov pop push dec xchg cmp loop or or lret push add jp mov pop lret std test out shrb pop lea add jae pop test fcoms bound xor xor lds fs lahf sahf repnz repz jb stos and daa jns imul add inc fadds idiv or fs dec mov adc inc cmp out jl add pop push push out add mov jecxz shrb xlat pop test lret mov inc mov icebp cwtl jle dec scas or and outsb das cmp bound loope jle inc ja in adc repnz and es add std das jae leave mov add clc (bad) xchg xchg push xor inc mov pop mov (bad) jl cwtl insb add xchg mov sarl scas gs add add stos jp roll dec xor icebp imul push or insl aaa in sbb popa enter add sbb addb add aaa nop jg pop les mov sub mov dec xor lss in inc mov xchg repnz flds cli mov sub or jae push test inc xchg add xchg aad orb mov stc pusha xchg dec sbb jg sub imul push add and xchg mov mov push mov add (bad) mov dec ja add mov insl push sti fprem add xor jmp inc pop (bad) fsub jg loopne add repnz outsb push in cmc xor cmp pop mov dec pop fs inc cmp in scas push mov in loop mov jmp add cmp int popl sbb in push xchg push jp mov (bad) add cmp cmp dec fsubr sqrtps cmpsl sbb and mov (bad) enter lods (bad) ja clc (bad) pop movsl and add scas xchg fwait lret scas adc std loopne test add or pusha sbb out insl ror cmpl lret mov shl jns lds and das loopne js cld lds les jne daa add add xor adc aaa push add cmp adc jl lret aaa adc pop add and test mov xor sub mov ja add mulb sub or inc push xor or jns mov mov cmp push mov mov rol add push xchg add mov pusha mov push push lret add push lock test loope xor add (bad) dec inc push and dec mov mov add js add pop dec sub sub setl repz push push sbb and jb push movzbl fwait pusha ret jp add arpl jecxz push add mov imul loopne out js xchg (bad) outsl fldl mov les or insb mov or jae adc add or mov mov jae add push (bad) cli mov cld add sub jo inc jge add jns (bad) dec xor mov es inc add jmp mov xchg push or sbb in cs iret and adc mov push pop mov out mulps adc add (bad) hlt pushf and inc fidiv push mov cmp rorb add nop cmp mov lahf test std cltd je ljmp pop and (bad) (bad) jbe adc subl dec jns pusha jns push in cmp push ret sbb movsl cltd fnstsw ss adc (bad) pop sbb and add jg xor je dec inc cmp mov add in inc pusha je cmp jecxz sbb in ss and mov sbb addr16 sbb test lret add push xlat pop out mov loop sysret test in mov sub icebp ss cmp cwtl cmp push push outsl stos adc stos jge loop icebp push (bad) add aaa dec sub cld stos mov push mov sbb psrld jp inc add jl and lock add dec dec mov shll movsb inc sbb push xchg inc popf mov insl and and pop inc lret or adc (bad) mov dec add jecxz push pop cmp lds arpl test adc or in mov outsl mov cld mov push mov xlat subb push addr16 or (bad) leave mov pop push lds (bad) or int3 pop add enter inc out seto scas pop add push adc imul cmp fucomi mov lret jle jecxz aam addl push js xchg pop jg outsl sbbb and sub cs stos lahf add cmp jmp add jg popa je rcrb ja pop sahf add pop xor pop add add cmpsl push out scas cmp and mov push adc sar cmp pop push inc test sub stc add cmp sub jns add xchg push add inc popa pop and jecxz add jl mov lret inc out adc negl popl loope sbb dec add pop mov or dec enter add sub imul clc incb add jo pushf and inc mov sub jno clc cmp cs lds push cmpsb fdivs js add pop je hlt jecxz push jle add nop out cmp and incl dec ret in xor sahf nop call call (bad) cltd fdivrl xor add pusha push add pop jmp rolb outsb lret push aam inc mov dec clc inc adc push xor cmp aaa mov add push rclb add dec addr16 mov xchg pop inc iret int3 aam add cmp cli jb lea or popa data16 add in ficomp pop stc repnz cmpsl stos adc int3 add out pop mov mov push push jecxz rorb cmp add jo mov cwtl fs add fucomip ret int3 add xchg gs cmp cmpb (bad) and mov cmp push movsb icebp mov mov dec add mov rol mov icebp pop aad notb or dec repz (bad) sarl iret ficom and jno jb ljmp xor daa faddp lcall scas popa add into xchg (bad) ja sbb ret insl cmp xor cmpsl add test push push adc ret pop sub popl test and mov mov push xchg pusha enter and and dec adc jns mov add inc iret shll outsl incl test pop mov push sbb repnz (bad) lahf rclb pop lock xor pop mov and clc and fwait lock scas int3 add in movsb add jle imul add sub mov inc mov in cmp jnp sahf ja xchg (bad) mov outsb and outsl or and mov xchg in in test scas outsl imul add lods stc mov fisub jo add pop lock add les pop mov inc pop push or test loopne leave cmp dec cmp mov int add and cmp adc cmc (bad) inc adc cmpsl add push cltd push or add push or inc pushf std inc sub fimull push xchg pop add lods jmp cmp mov loop test test cltd popf dec push jge insl sbb cmp adc push mov lods xchg pop jns mov inc add xchg (bad) cmc inc ret add lea mov sbb add nop adc add or cmp cld popa add or jmp rcl xchg push push adc push jge (bad) adc add (bad) mov cwtl idivb add pop jp out cmc push add add addl sti mov xlat and add (bad) and es popf das mov mov (bad) incb test mov fldl xchg mov mov (bad) xlat cli xor adc subb aaa and lock out xchg fucomip jg fwait cld push mov and or or sub mov cmp add shrb imull mov cmc fbld (bad) stc mov sub gs push stos fimull jno pusha xchg cs or push jl inc es pushf sbb xchg test out sbb data16 add enter pushf daa sbb and andl jge jae,pn or sub dec lcall mov and add jno stc add inc test out setne push jmp pop fild mov mov ds xorb sbbl add jle and add lahf xchg idivl cmp (bad) rep shr pop add mov add push fimul fsts jb ss push or rcl iret lret lods mov or in sbb sbb dec sub lock les add lods cmc mov add cli loopew mov xlat (bad) les adc pop loope clc cwtl data16 add push lret in movsb xor add aas cmpsl test lock push popa test (bad) jo loop push and hlt add inc cltd scas js addl fstps add cmp aas push insl stos add in mov test rorl pusha in sbb out jmp and fcomps ljmp cmc pop gs or add inc sbb fild stc aas and popf add in add mov and xchg add test inc mov jle lods inc into out in jmp add mov out dec add (bad) xchg loopne adc push add jno enter hlt sbb adc ret add scas mov adc cmc add icebp mov cld mov cmp xchg push add mov adc lods push push hlt out clc inc sbbb add cltd sub lcall push lock add sbb orl add scas mov clc scas or cmp pop (bad) jbe or pop push (bad) xor fistpl sbb jns xchg add add push dec dec xchg pusha sub pop (bad) daa xchg imul roll sbb test push or add sbb adcb sub mov add popa add push rol cmp adc sub iret mov ret push xor mov adc mov aas or sahf cwtl jg adc lock mov sbb cmpsb xor repnz mov push xchg pop ret out roll int testb cli add mov mov (bad) mov cmp dec jae into dec sbb mov int3 add pop push roll sub (bad) xlat adc ja rcrb or cli sbb sbb outsl daa adc jp dec add sub add xchg mov push add mov (bad) mov pop ret lret xchg scas mov adc add xor test dec add aam rolb addr16 adcb mov push sbb adc xor sahf pop push add dec jp add cltd xor push mov xchg insl addl push (bad) mov push repnz or xor shl movsb push fs xorl cmp and push fsubs inc iret inc adcb popf sbb xor jge jecxz mov rolb out jno in sub ret (bad) xchg (bad) jmp rcrl lock je sarl sub mov roll sti add xor mov add and jne push ret lods out rcrb jo add sarb pop mov and fildl rol push fcoml jbe outsl ficoml lcall leave pop std int cmp cmp push jmp ljmp pop call push adc add shrl mov mov sub mov mov inc leave fcomps movsb add cld add pop movb or repz lods nop mov aas jp mov and in outsl icebp into mov sbb xchg push fbstp fsubrs aam jne dec mov daa call scas hlt enter or or insl xchg cltd mov add pop mov ss dec lock cs lret dec sub push jbe add xchg push js push cmpsb ss inc or adc mov mov pop adc inc cmp out pushf insb xor push jg mov adc sub xchg push (bad) (bad) je cld lock and daa xor push adcb jecxz icebp in outsb cmc lock mov and and call mov jg mov sub out add ja adc mov inc push cmp sub stc fwait push jne pop xor cmp mov jo lods jb lahf movsb or cmpsl push testb push mov andl jo add xchg sbb out iret dec dec inc ds icebp push dec setnp xchg clc add inc pusha xorb add (bad) aaa ret pop mov mov clc in push pop add psllw (bad) hlt jmp inc outsl push add fsubrs sbb lret or dec loopne addr16 jl shll icebp shlb jnp lea cmpsl add (bad) rclb push repnz jns rcrb adc add jne movsb xor test jg rorl push and arpl nop pop adc ret aad in sub pusha push (bad) and adc pop lds add mov cli je aaa xor sbb sbb lock pop jmp xor push xor jle dec or (bad) jge and sahf lahf inc out adc jne and movsb mov xor sub cmp mov cmpsb pop or fldenv ja movsl sbb clc and sbb mov lock insb add push cmpsl in out icebp add mov int3 adc cmp and loopne cs push pop out and les add mov mov cmp imul cmpxchg jbe pushf add outsb neg sbb call in push in mov cmp push cmp add xchg mov into and xchg sbb push enter cmpsb mov ljmp lcall mov fdiv pop cwtl stos and inc sbb pop add pop out cmp (bad) (bad) out aad (bad) jmp aam repz add fsts dec outsb or hlt test cmp into sti jl pop jbe sbb sub or inc jns orb add and pusha ret nop pop jmp faddl mov mov push add and lcall mov movsl jle shll xlat push inc mov add mov push ljmp jge sbb add icebp stc mov iret arpl inc add lods imul jl inc add out pop add pusha cmp clc mov inc cmp or add hlt push push add xchg loope mov pop out add xchg jae stc sbb jne and faddl mov sti pop and test mov sub movsl lods or add and inc pop hlt es (bad) add (bad) dec xchg sbb rorb cmp dec in (bad) insb mov add mov xlat imul ficoml cld adcb cld mov cwtl test xor push aad (bad) push in add mov int add or dec mov (bad) xor xchg into inc aas (bad) (bad) pop cmp es inc add (bad) js out mov pop cli cmp add pop das lock mov add pop jae push loop add mov mov and xchg add pop sub adc mov add pmaxsw xchg idivb add arpl add xchg cmp jmp cmpsb pop sbb adcb xor mov enter bound push cmc xlat sbb int3 mov add (bad) rorl (bad) xchg cmp popf cmp dec mov add adc or gs lcall and sbb ss push and or jae xor mov addr16 pop push clc (bad) add mov aam jecxz push xor xchg and loope or (bad) jl cmpb out xchg or add pop push lods test add iret inc outsl jp imul and add push sbb sar addb cmp add lret shr cmp cwtl (bad) xor xchg movsl add mov fild add sub adc jae sbb mov pop mov pop xchg adc add push push pusha and repnz adc push mov js add arpl jecxz cmp inc leave add repnz fimull insb mov xchg push test sbb decl clc loopne loope add test mov push pop insb jp pop xchg xchg (bad) aad ffree fbstp add fildl sub cld sub xchg inc add and cld add pop xchg lods mov and add test mov xor add nop mov lret enter xor fstps add mov push sbb lret jae fnstsw mov (bad) out push sbb pop sbb add orl dec shl jne mov ffree fs pop cmp (bad) xor and jle add push rcll xchg cmp push and cmp dec dec jae sbb jne cld daa popa adc xchg fiadd add adc lahf adc mov ss (bad) mov add dec jns test or iret pop cmpsl add mov mulb sbb shl call pop insb xchg sub pop mov and push cmp pushf int das xchg dec add aaa jne add cmp cli cmp add stc shlb rorb jo (bad) and jge rcrl or xchg inc sahf out add bound fisubr pop rolb xor cmp mov aad (bad) jns loope pop je and push sub mov mov inc fidivrl loope pushl add in push rorl fimul in sbb pop rcrl sub inc ror mov add leave inc mov mov sub dec push imul add testl lds mov dec leave shr xor push adc xor add aad mov push adcb sub cmp add jb fwait sbb or outsb call in xchg ds and and icebp loop ja in mov fcomps add or pop jns mov les add xchg fcmovb pop fs lret add inc mov fsts insl mov add inc jp or enter xchg jae or test insb mov int3 xchg cmp aam scas add loope xchg xchg or push fwait (bad) mov imul rcll inc inc xor and sbb mov loop fsub push add (bad) lods (bad) test add xchg mov push inc in or decb sub aas and test es pop in push (bad) jb xor jae bound mov adc mov rol add ret jno pusha dec jle jae stos inc add (bad) mov sbb fadds int3 out clc and fild in enter or jmp pusha pop loope add ret mov int mov enter sub into jo lcall mov xchg add fldt fdivr fnstsw sub js sub arpl jge cmpsb mov or add out or in mov push dec xchg or push add data16 in divb cmp in push mov or insl hlt pop xor test push (bad) add dec mov cmp nop fldenv loope cli lcall cmpsl jle adc add fcmovne call cs push mov scas cli and loopne jmp or testl add (bad) pop add xor add mov incb pop mov cmpsl add jle inc jge test insb les pop xchg sbb lahf and xchg sbb repnz inc add and into push nop lods add enter lret and insl and jae inc jl xchg orl imul sbb xchg cmpsb call lcall cmpsl pop test jnp in lahf add nop lret mov test cmp loop add jmp (bad) mov xchg (bad) in movsb dec daa pop dec out shr or pop call add out ljmp pop mov test cld adc int sub adc mov fldl test hlt sbb xchg insl dec push cmpsl clc jl aam in mov and mov add cmp xchg jnp or adc inc clc xchg pop stos add cmp lahf mov hlt xchg xchg lock add add push adc test push bndldx shr outsl mov ffree push add sub jno adc add lea popa mov in xchg pop pusha aas cmp or enter into sbb jp testb test test xchg add jo leave scas inc std mov aaa sbb mov icebp arpl pusha add inc fstps and dec out es inc mov sub pushfw adc stc sbb inc add xchg pop addr16 or cmc add orb pop stos and shrb (bad) in mov repnz jge orl xchg jmp xlat or pusha push jge test sub jns add arpl cmp mov daa or mov inc add out xchg jns add jg movsb sarb xchg iret scas imul or clc inc jmp repnz mov sbb inc push add rcll mov cmp rorl sbb add cli cli adc jecxz mov push cmp (bad) xor cmpsb jns sub pop cmp addr16 push ss sub push mov test add lcall (bad) and dec cmp and sub mov mov pushf hlt cld add sub daa add jno sub add shlb cltd xchg jbe fdivl xor mov lahf add rorl xchg mov add mov dec fs and (bad) shrb add add out add std mov and test pop xchg rol in mov cwtl movsb js add icebp jmp test mov rcrb mov push rcll repnz jbe cmp (bad) jae pop inc clc push out or out jmp add sub sahf mov rorl push enter inc fidivrl in scas xchg dec cmpsb ss in push xchg mov mov decl call call sbb cwtl cmp add out or jp ror repnz add push in pop fnstenv jp add sbb add xor push or mov sub add xor rcll xchg (bad) cld sbb pop les nop enter add je mov jns cmp fwait in popf test xchg je ds push xor and out add push fsubrs sub lcall leave loopne int3 cmp dec cmpsb pusha mov dec cmpl xor lock jl mov push sar push lahf test push adc or subl add jp cmp add push cmp enter cmp and mov add das sahf (bad) les clc or sub jmp (bad) imul pop pusha gs test pusha mov jo scas mov lods jmp lahf or adc repnz mov sbb push xor pop fdivl and loope mov popa dec addr16 dec pop xchg int and jb pop mov pop add icebp shlb sbb imulb aad lods push gs inc loope movsb ret test push and xor loopne push shl mov fprem1 adc sbb mov stos add ds les mov mov add push pusha add mov out xchg xor adc jp dec daa rolb pop icebp xchg outsl call push mov int3 add jo cmpsl pop int push test push lea cltd fwait add sarb (bad) hlt nop add pop adc in call xchg dec lock ret add fimul negb add test outsb stos adc dec push and or sbb add xchg sbb fisttp (bad) pusha and xor add insb je rcrb push push clc js add cmp (bad) fucomp or jno loop push cwtl push or mov stc add jae inc imul xchg inc add and xor hlt adc jo aaa pop (bad) call cli cmpsb adc scas dec pop sub add push stos push arpl jp popf add dec adc sub (bad) add inc icebp mov js repz pop out into pop enter or fcomps or mov sub dec cld push xchg add (bad) push in (bad) insl flds orb incl mov add sub add add adc inc fcomip aaa (bad) dec fwait dec add or ja push (bad) scas pmaxsw or dec cmp loope aas jo loopne mov jmp mov fadd test xchg cwtl xor pop mov iret mov xor mov fdivs rclb mov mov mov jb fsubrs mov stos or or out xlat jnp add fldl or ljmp jge rcrb (bad) dec add push jns popf sbb push jp xlat push jb (bad) imul incb add mov cmp decb lock push adc aaa lock call xchg xor or and loope add test addb popa xor into js or add or fadds aam add adcl mov stos mov repnz mov inc jns negl daa sub add and adc cmpsb insl push dec negl sbb xchg cmp pop dec jne add imul add jg pop mov add xor fsubrl rcll push cmc jae fiadd das sub jo jno ret mov loop add cmp push mov or and (bad) cmp lea xor (bad) in call and icebp mov jo sbb jno xchg fwait push mov sbb sub mov jge add loopne sbb mov or push inc add adc imul dec cwtl or xor adc jo hlt (bad) cmp inc jnp lods add cmp push jo (bad) outsb jbe mov add adc adcl add pop mov roll jne dec xchg mov lcall clc inc cmpsb sahf sti xor add insl hlt cmp push or inc jno xchg dec inc lds mov es ficom sahf add sub add (bad) xchg adc mov jae std stc loop or xchg pop sub into mov jnp dec fsubs jg lds adc jge add pop add cs in mov lods xorl and and pop mov call out test loopne (bad) mov cmp push int and (bad) or and aam push add cmpsb sub loop ret add lods jno push andl sbb stos jo push mov in sbb add (bad) xor jno add inc cmp test shrb dec imul jnp je push rorb and and adc test fimul jl sbb mov jge mov push cmp inc mov outsb add mov or add add or loop sbb mov mov or add cli sub xor mov add fmul loopne jle std rolb xchg cmp add and add (bad) sbb clc mov add data16 sub mov add or sbb fucomi outsl cwtl xchg add out pop sbb or pop dec or xor mov dec inc mov nop js cmp pop sbb xor fild (bad) xor fnstcw or (bad) sub mov sub stc inc mov pop push arpl xor fcompl inc sbb stc rol xchg or js (bad) jnp lea aad inc cltd sbb daa rcr or xor cmp xlat add or add mov push push shl repz inc cld mov jle,pn movl mov or clc in popa push mov pop add mov aam xor push cli mov dec sbb push and mov adc add xor mov xchg and in aaa cwtl pop mov xchg xor jmp inc xor lds (bad) xchg push mov mov adc sub dec mov ret and mov nop and fs mov add dec mov xchg cltd movsb mov rol addr16 lds inc addl add pop mov push test push or (bad) loope mov push mov outsb add pop add and cmpsb test int (bad) pop push and fnstcw lret or add orb adc cmp idivb cmp or ljmp loopne xlat jecxz add fstps lds mov roll mov ds pushf pop dec lock add or in inc rcrb enter popa fs js movsl sbb push adc (bad) call andl (bad) adc jae xchg loopne lcall enter lea test ja add pusha jecxz out push lock or leave outsb pop fcompl mov fs pop dec adc inc test sub adc out nop and cli inc dec sub mov mov lcall pop push add push test xor sub (bad) inc mov sahf pop cltd dec or xchg aam sbb or cmp fidivrl mov sub (bad) stc mov push test insl mov adc (bad) fisttpl cwtl mov xor gs sub jne push sub or jb mov dec mov add fs jle sub stos subb add arpl or popf jecxz adc and pusha sti mov dec cmc insb sub add xor jecxz xlat lret in mov mov add insb jbe adc bound push inc adc pop and xchg test push out add push jne aad aas jl xchg or add loopne and (bad) (bad) mov ret mov lock or jo fsubs mov jg push mov pop nop (bad) jne mov xor adc push ret cwtl and lea out out xor mov jo add push cli push mov xor adc jne les insb sbb dec adc add push xchg add pop (bad) jecxz sub es mov pop (bad) icebp stc icebp xor or pop cmp jge pop adc test or inc add (bad) stc fs es cmpsb push add add sub js sbb call arpl sbb aas cwtl add rorl and (bad) es inc and adc test jne add sarl sbb jmp add inc mov add xchg mov xchg sbb push aad fildl out nop adc add and lods sbb adc loopne cld pop add (bad) aam fild xchg iret call or dec lcall ljmp (bad) jae sbb call cmc js add fadds repnz and jp (bad) rolb ds mov add xor roll les mov jecxz cld sti lock or xchg adcb cmp push vpavgw push mov (bad) lock lds clc fstps js dec xchg xor stc mov dec xchg mov and insb cmp sbb mov test mov and cmp jae fild test sbb mov insl mov pop lds repz inc nop enter scas jne pop in add icebp jb in fist repz dec rcl mov cmp cwtl dec adc mov add lret dec enter or jg xchg mul (bad) test sub pusha xchg push adc icebp sub push sarl and add int3 test inc dec cmp and and mov dec jle sbb xlat inc inc out mov hlt (bad) mov adc push mov sub test jp and sbb std sahf inc jb and inc xor cmc iret imul lds in jecxz aam xchg add cmp or cwtl xor fcompl adc (bad) cwtl in hlt pop jae cmp (bad) imul xor cmpb je pop xor bound iret icebp js rcr loopne mov rcrb or jns imul leave mov daa test add pop lods xchg and pop sub inc jo icebp mov cmp add jecxz mov push add jge hlt incl push jg jno mov pusha dec pop add xchg xor and mov or mov insl andb fwait xor add imul jecxz pop lds xchg jmp rclb xchg clc fs cmp int sbb fstl inc jmp push mov jns push (bad) mov fcoml xor call jecxz test and lock or and add xchg shr dec jge add sti pop add jb push add in xor out pop fcoml ja sub clc repz call inc es sub jecxz xchg loopne cld aad out pop push int fdivl xchg test or jmp adc lahf (bad) aam out test sub ret add cld repz jge ja add out add aad cld or pop pop jmp cmc add in divl jl add (bad) add enter xor xor inc mov inc mov mov add jmp jge mov cmp mov shrb lds mov cmc enter sub enter int3 (bad) push (bad) rcl rorb imul add sti sub test mov pop push add (bad) and jo mov xchg inc pushf sbb dec lcall aam jmp cli xchg stos push pop mov test add or jbe dec roll cmpsb mov adc jecxz inc pusha fstl pusha or xchg shrb mov sbb ss adc and adc add sbb ss mov std shrl cltd sub cld testl div inc cs out pusha add sbb xor gs mov adc pop inc dec xorl rclb inc cld clc jnp add jge fldcw dec xchg fcoms repnz push pop or lods cmp xor adc nop pop ja jmp mov or icebp cmp xchg inc adc lds insb (bad) out mov loopne add loope and adc cwtl pop push out imul push (bad) xor cld sbb ret dec xchg pusha enter fmul in rcrl mov gs mov rcr mov jb popf mov fcoml jge jo les xchg loopne push fs and add cmc inc sbb adc sarb jge xor out or add add add out add test or push add int3 out adc xor aam ror jae out add mov dec (bad) ja xor les pushf arpl loope mov inc pushf notl push mov mov and or int3 cwtl ljmp add push pop and clc mov pop (bad) mov rorl pop dec add js or mov push dec xchg movsb loop arpl rolb and or outsb mov or fs sub roll xchg sub nop mov lcall push mov call stos mov push xor test sub or or arpl jp add loopne out pop cltd jbe,pt sub ja jg add mov fdivl (bad) hlt mov ret daa dec pusha pushf sub nop jb xor insb inc clc sub pop adc inc jbe xor jmp and out or mov std jecxz,pn add pop (bad) dec (bad) (bad) mov call and xorl adc jmp in (bad) mov mov mov and int3 adc cmp jb jo lret jae add popa xchg cltd push test add in or xchg or test mov lret outsl lret mov xchg sbb and and (bad) xchg stc je,pt shrb dec fidiv (bad) enter push and xchg cmp add lret arpl (bad) ss mov push fs xchg sbb js jg jmp adc dec scas jae cli mov sbb cmpsb cs mov jb mov push sti adcb push mov out lock add sbb lods cli (bad) and mov mov pop dec popf add movsb out imul xchg je xchg add out sti das xchg stc add fsubs test jl pop pop lret lret push pop jl out (bad) cmp cltd sbb mov and mov xchg lock fldl inc push lea cmp ds ror mov mov cltd mov aam xchg sbb add adc inc aas jle cmp shrb jne inc add (bad) jo sbb dec popa push cmc js pusha idivl add lcall daa xor sbb outsl sub pop add mov sub js divb das pusha push shrl cmp cmp inc nop sub xchg xorb js pusha and xor inc ja add mov cmp push test jecxz pusha sub les int3 and repnz and in orb push pop aam test push and stos xorl fimul aam jae cmp dec or xor loopne xor push test (bad) push jmp mov into push in pop lods mov add fidivl arpl xor pusha outsl jns ljmp enter out scas clc mov mov lds fdivl pop jecxz jg inc add aas stc (bad) and jmp inc jl pop xor ja pop dec add cmpsl cs (bad) lods cmp dec bswap and inc ljmp sub out sbb push jae daa sahf adc pop sub loope fiaddl stos or adc cwtl lret sbb call fdivrs cmp fistpll insl subl int3 xor ret loope add cwtl dec ds fcoms pushf sbb cld xchg fnsave mov jo add in jp shll pushf jle lret nop add (bad) adc add jl insb push bound subl sub mov and xchg push or in pusha lods inc and mov cmp add pop fadd add mov adc sub push dec push sub and inc aas xchg inc or rorb pop (bad) inc inc add inc (bad) xor dec jo adc and js adc or iret mov dec cmp (bad) subb pop mov (bad) stos cmpsl dec arpl out sub add pop (bad) sahf insl mov sub rolb imul bnd popa sbb pop xor mov or mov mov sub hlt inc fiadd in push push cld adc in ret stos notl sbb jnp jbe es or sbb dec add int sub sub dec or cmc scas adcb sbb adc pop cmp lcall sti dec dec es add negb out or out ret add or stos (bad) in aaa mov push add push inc adc mov inc loop pop lods push sbb or cmp and in push (bad) rcll subb lret ret pop fstl bound in add xor jbe movsl and add mov insl (bad) sub js cmp xchg and xchg push xor (bad) incl mov cmp and insl hlt and sahf in fstl adc insl xor sub push mov push rclb (bad) (bad) out add dec xchg push (bad) lds cli sarl pop shrb adc call test adcl cmpsb mov jne fs mov lds sbb das jae mov dec mov fwait popf mov xor cwtl adc inc sbb jae mov mov lret outsl mov adc xor adc xchg fimul mov cmpsl (bad) mov in (bad) int3 and (bad) scas mull lahf dec pusha fs inc mov and mov inc iret push into mov in adc mov cmpsl cld jle mov loop inc cs add test xor cmpsl (bad) sbbl inc in or cld cmpsb adc in daa in test adc clc imul add xchg xchg sbb jb repz ss rolb cmp mov in cmp mov sarl cmp and pop sub mov pusha inc pop (bad) or sub and add adc dec addb aad pop aas es lcall mov mov subl inc hlt aam dec sarl sbb xor cmpb dec fidivl xchg outsl fsts push inc stos (bad) xchg add mov adc outsb ja stc lret sarb and ret fs adc xchg jb loopne xchg adc jae jns pop push in push stos rcll adc pop repz aas clc and addr16 out movsb cmp xor cmp pop data16 lea in bound adc addr16 enter push mov dec js xchg and frstor lcall in and inc in dec ret les insb xor roll pop jnp mov cmp or lods out inc dec es fstl aam (bad) fcoml jbe xor fild xchg sbb add push adc sub cltd sbb mov pop loope rolb lcall xchg aad push cmp xchg inc add cmp mov mov or mov push sub push lds inc sub bound int popa fsubrl inc push je (bad) cmc jl aam sbb sbb fsubr aad mov add faddl or insl mov icebp jns in clc movb orl popf sbbb add jo js pop xor pop mov cmp add divl adc or or xchg jle pusha jl inc add cwtl stc into sub add js insl pushf xchg add outsl pusha movsb shll aas adc push or leave out stos mov imul jnp or popf inc pop dec inc push mov push mov mov inc js cmpsl mov pop ljmp rclb fwait cld cmp pop mov je adc popa es cmp stc xchg mov fsts (bad) in inc dec cmpsb jne jge sub jl cmpsb push pop cmp scas cli inc mov dec add testb sahf mov test mov dec js fmuls xchg sarl jl add push stos jb jae xor lcall push push pop sub sub in cmpb je cltd mov insb mov push pop aam (bad) jne push movsb xlat lock bound js xor scas sbb mov mov sub mov jns mov push cmp bound or pop push and or xorl je into clc and test sbb cmp inc (bad) pushf insl and and xchg mov mov jbe insb mov test sbb ja add adc xchg insl xor push pop add xor ror mov and add sahf enter movsb mov movsl xorb pop sbb repnz add pop loop pop rcr push dec adc call fwait nop fmuls bound addb loopne out add jne rorb lret in jge add inc pusha aam dec dec aam adc add jmp pop clc aaa pusha lret pop jl cmpsb dec or and add adcb mov cld sub (bad) xchg loopne pop push cmc test aaa adc pop mov repnz repz push jnp scas adc xchg scas nop mov jbe mov mov inc add dec imul and pusha jae jmp call adc cmp mov pop bound cmp enter pop mov es es or test jo xor or pop ljmp cmpsb adc lods cmpsw gs nop (bad) mov popa movsb xchg daa shlb int3 mov leave jo ret in fdiv or je inc push leave add outsb mov adc cs mov or jne dec mov and cltd adc inc loopne sbb dec pop bound cmp clc adc sub call inc add push push hlt add (bad) daa add push test mov mov add mov push enter fiadd in fldl les add mov insl xchg es int3 andb (bad) out mov inc js rcrb imul adc sbb jae jno mov iret ret sub int3 loopne mov cld jp repz aam mov xchg fs inc add dec loopne pop je dec and inc popa lret or (bad) je fdivl mov fs add pop fmul jnp add lcall xchg add imulb dec mov mov stc cmpsb outsl adc loop pushf jl push add ljmp and inc add int cmpb xor jmp test cmpl in xchg test jge mov jae shrl ljmp inc adc and fs pop xor jbe dec adc (bad) dec pop mov cmp insl je add imul aam push push movsb pop ljmp aas inc inc pop mov adc pusha and insb dec add inc mov shl mov mov stos iret push dec nop sub js sub adc lret dec (bad) push sbb repz in testb mov jno daa dec outsb lods arpl lret fadd jmp in sbb xlat push outsl insl fcoml inc lret dec jo add lret xchg xor scas add in repz cmp outsl mov cmp pop bswap inc mov cmp and sbb int fwait shlb (bad) sti popa add inc stos scas aas jge or xor dec mov mov jns dec je pusha inc and mov add mov popa add jne cmc test cmp adc pinsrw xchg sbb dec mov jl cwtl aaa pmaxub pop or lock inc (bad) jnp dec and push mov test sub test outsb xchg aas xorl js add cmp mov ret mov push fs arpl es jbe add pop push icebp mov frstors xchg sbb cmp js cmp stos sub add dec fs fmul aam fimull daa cmp sub or mov stc orb lods push pop cltd add xchg (bad) lret mov xchg cmp flds lcall add cmp mov shlb mov arpl add xchg (bad) fdivp adcl xorl push leave add fild jb pop cmp dec test popf (bad) xchg shrb push jno sbb int3 (bad) data16 push cmp jle add lcall jns loope negb pop pop ljmp sbb cmp sbb adc jae add mov cli add mov mov or js mov mov (bad) pushf or sub sub insb fmull xor or mov cmp bound xor or mov test add jno dec scas adc in or mov repz incb mov sbb adc fstps test pop jns nop push repz xchg push out dec add dec xor jmp jmp adc pop xchg xor jg leave jo adcb repnz dec aaa repz (bad) rcrl push xchg mov fmuls pusha pusha add dec iret addr16 fbstp mov shlb (bad) (bad) int aam (bad) inc sub pusha add jp mov (bad) pop add cs add inc (bad) inc repnz jg lahf ljmp pop push xchg dec or xor loope roll pop nop sbbb push push mov lcall andl aad mov cltd int3 push icebp jb (bad) lock in loopne jmp add cmp cmpsb mov pop mov test jp adc out int cmp mov xrelease add (bad) add xor aam faddl jg pop mov and inc lock nop ret add push pushl mov orb loope or aas (bad) mov mov andb js adc mov mov mov inc push inc xchg inc or mov shlb push aaa mov and dec sub and mov cmpsl pop mov push sub push repz adc add mov (bad) in (bad) inc popa and (bad) imul or pop pop (bad) sub clc push lret mov xchg or ret add add fcomp test or mov sub sbb mov lds insb iret adc fwait jnp cwtl cmc or push fnstcw enter push xchg fadds loope xor ja pop push mov test inc jo orl inc jg call icebp push out xchg stos (bad) lock add push mov mov mov (bad) cmp repz mov je add adc repnz xor ja push ret ffree pusha jae (bad) jg addb inc xor add add stos leave (bad) jne fistpl aad gs imul or adc lea push or add adc push adc sub sbb insl mov sbbb stos xchg push jp cmp cmp inc mov sbb and jp mov push mov sub adc (bad) popl je push sldt pop sub movb daa lea outsb pop xchg mov xchg or sbb and cmp test push push lods lret scas push (bad) js imul add daa pusha sub adc mov sub inc add enter mov in adc add ja sub imul add and or xchg inc and mov pop mov push push push push sbb add dec inc mov pushf mov sti lea pop push daa or ret or popl mov push push pop add out sti pusha or loopne xlat or outsb inc xchg mov mov daa inc mov add lock add pop mov mov adc xchg push mov rorl fadds cmp ret dec or fldcw push add ljmp ret jge or insl pop mov xchg mov mov mov jecxz addr16 das push sbb jg mov add xorb test xor shlb add jge xor out push out push add lods jns sarl fdivrs jb add add or jne js cmp imul push mov sub sbb adc jge sub (bad) fmuls jne,pt sbb outsl add mov add pshufw das sub test lock pop js imul ja out call adc mov mov int3 test xor or and jo (bad) int mov add xor sub dec mov inc xchg add xorl sub cmp xchg lock and cmp cli in pop mov adc cmp int3 mov and das bound jo int3 pop imul xchg add outsb test icebp lret popf movl xor repnz cmp add rorb xor inc jnp sub aas mov lock clc pusha add lds mov aas cmp xor push inc nop adc jmp outsb push jo jge add add xor dec les sub shll adc push pop mov movsl xchg lds and inc das jae add lea enter (bad) xor mov fimull lret (bad) xchg test rorb mov mov orb aas dec cmpsb orb adc pop sub leave daa das mov add xor std push or insl dec xor incb or sbb xor inc roll xchg cwtl insb sub add rorb cld psrlw out in xor test fs rolb cmpsb testl and mov sahf cwtl push add add imul add mov mov jne pusha inc fmuls ds mov int insb inc add pop mov pop addr16 rcrl adc js mov pop inc inc mov stc mov cmp es scas push mov sahf ss hlt nop mov std sub mov test mov std aas and sbb lret rcr jne in mov xor push movsb push push cmp inc shr out int3 sub mov adc or sbbl dec js nopl jl inc jle addr16 daa mov mov jge (bad) pop cwtl add je out sub dec add jge mov or test (bad) lds leave in mov repz push xchg outsb add xor test or and mov scas jae repnz inc test push js xor lds (bad) loopne mov rolb or cmpb jmp test nop sahf add cmp das hlt push mov mov inc jbe cmpsb dec add cmpsb push xor ret pusha sbb into shlb (bad) and movsl sbb xor incl stos sub lret adc inc lcall clc adc lds mov mov pop call test negb add jno into addb adc cs std adc int3 mov lret mov cld add mov xchg subl das xor xlat dec pop jne or mov leave bound sbb jl push popa or push gs mov rcr les adc inc sbb je mov sbbb sbb mov mov ret cmp xchg add aad out xchg test sahf jg sbb dec jo cwtl push xor xor pushf add jmp cs mulb dec scas jge arpl cs pusha out aas xchg loopne fisubl aam nop leave add (bad) ljmp inc add jae sub gs push and lds ror add fldenv lds scas adc js and fwait sbb dec cwtl movb and out and gs cwtl (bad) mov cmpsb inc and pop jg repnz add sti aas fs pop pop insl jnp loopne (bad) pusha xor rcll push and int3 ds adc xchg mov push sub dec and add std or mov movsl add sahf daa mov cwtl cmpsb nop xchg rcrb aad push scas pop cwtl call cwtl pop mov dec add loopne xor sahf mov aam jbe pop or cmp movsb push sub add pop lods xor dec add push das jb dec test cmp lret fimull add add or lock cwtl sub out add dec mov mov loopne add pushf add leave mov xchg jns sub inc adcb pop pop push sub scas ret loopne lret aam sbb lcall sub pusha aam xorb rolb into nop jno dec add scas pop sbb test sub lods les iret jbe push arpl sub cmp stos fisttpll rorb mov jne pop inc fadds jnp cltd scas adc pop (bad) mov xor outsl cwtl jnp leave addr16 mov adc adc out pushf inc dec xchg sub mov les push inc leave mov dec dec int3 lods add mov lcall leave mov dec xchg sub nop jle js xor popl ds cld xchg adc mov jl js xchg popf outsb aas pop add xor je mov rcrb sbbl cmpsl (bad) push inc subb add dec sbb add add push dec pop add push scas cmp xchg xorb int hlt cwtl push pop and xchg xchg shll es push jg aaa inc rolb sub adcb movsb cmpsl jno ret adc call xor sbb cmp loopne cmp xchg rcrb insb or call push fcmovu mov add pop jg inc pop jl testb push cmpsb rolb jmp jp enter pop or int popf mov push mov lock xor add dec imul add push jno insb rclb or test adc inc repnz adc or sbb mov arpl orl cs mov and sub xor cmc into xor out (bad) in dec mov shll je add fdivp fs test icebp push test insb xchg xor pop mov lsl popa les fmull test inc sbb or inc rcrl dec add or repnz sbb add icebp and sti ds sub scas adcl adcb (bad) xor rclb sbb faddl test xor add pop pop loopne add push popf fadds push shrb cmp in test sub test cwtl or pop or sbb cmpsl and and mov cmpb xchg add push imul inc pop add xchg gs sbb add scas xchg fwait and test xor add movsb push cmp xor pop adc xchg call aas mov xor sar inc or push lret iret or xchg mov jl push add push sub inc sbb or mov sub nop popf mov jge sbb sub imul dec popa jle push inc (bad) mov out adc sub sti xor sub (bad) in call mov and test mov (bad) (bad) call xchg sbb push push cwtl cld inc push movsb xchg repz daa dec movsb and push int3 sbb or es push lahf mov cwtl in repz fbld icebp cmp mov data16 mov orl cmp mov pusha dec inc enter dec and adc add jl popa imul jae or cld or dec andb ss and pop stc push dec inc fadds cmpsl inc mov adc test sbb subb add orl sub cmpsl enter inc (bad) mov iret jp and cmc test lods push fwait sub sub push sbb sbb (bad) pop lahf and inc test ret outsb in lret lcall sub insb das push mov cmp mov cmp loope lret clc inc push sub in js ds and or and imul xor pop andb push fidivrl dec sub test xor subl xchg lret addr16 xor bound sbb inc repnz push push sarb xorb loopne fmull aaa movsb xchg mov xorb (bad) loope nop addr16 and or (bad) dec in fnstenv dec mov div adc dec mov xor gs aad mov (bad) push and jnp add sti xchg cmpsb inc fnstcw int repz push inc fadds xor and test pop add jbe cmpsl push jp mov push scas push vmovupd and inc test mov mov inc and xor and test mov movsl cmp sbbb jp dec jb add addr16 jl cwtl enter xor mov xchg nop sub leave inc popa mov cwtl arpl aaa pusha inc dec and and add pop and add loope xchg (bad) add (bad) mov lea test es xchg adc and mov xor jo mov fildll movsb test push add dec scas sub xchg mov inc mov mov call roll dec push pop jo mov add (bad) xor push int xchg sbb fadd lret pop push inc jae adc mov mov mov sbb ror out push inc sub dec rcrb insb cs adc mov add cmp scas pusha mov and or cltd or cwtl lock xchg andb scas push (bad) add int daa add pop push movsb inc or inc mov into or xchg mov push push xor xchg inc pusha test adc fimul add je pop cwtl pop push mov cmc cmpsb dec pop pusha std push mov jmp add std call adc push mov std jo fadds xor js ja push xor rorb movl xchg push push cwtl inc pushf sbb inc dec lods add inc fdivr mov or add out sub pop or addl pop nop lock mov cmpsb aaa push imul leave adc add mov cmp rolb pop lods lock or adcl pminub push std push movsb cwtl (bad) and xchg add pop cmpsb lret push sbb mov loopne mull stc add test adc scas dec mull cli popf add popl and stc loopne mov xor add pop (bad) ljmp outsb daa clc mov jmp (bad) punpckhbw aad loop push pusha notb mov sub jg enter and dec idivl push add sub ja sbb je sbb cwtl xor clc sbb mov sub lret sub call (bad) fcomps push push dec popf add arpl outsb pushaw xor add out popa add into mulb push cli mov stos or add or dec aas and push call mov or test jae add ss inc jo inc or scas adc insl jg leave or (bad) add arpl pop ljmp push sti imul test add loope insl jae push js lahf cmpsl pop (bad) cli ds shlb aam mov sub fildll push imul stc sub les push aam push dec sarb dec cld (bad) xor (bad) jno cmp mov mov push int3 mov xlat aad inc int3 sbb add scas jne scas (bad) mov aas dec mov add (bad) or add loope (bad) repz push push je std jl adc loopne push or add leave jo int3 iret clc cmp and fldcw stos add add in xchg xor movsl inc mov ret sbb add lds in loope mov pop fsubr int and xor mov jmp mov add insb pusha mov pusha push push nop jo mov xchg push lcall add fcoms mov or add loopne xlat mov sub rclb lahf xor cmp push push cmpsb fadd loop add ljmp xchg sbb adc mov adc pop enter arpl add adc pusha incb push aam xchg adc push dec mov adc xor pop inc pop and push push push sbb or insl inc mov imul lret mov xor (bad) repnz mov xor les add xchg dec mov loop cwtl movsb ljmp roll pop xor cld adc or dec adc add dec mov mov xchg or clc add leave push pop add sub cltd xchg mov add cmp sbb add aam call dec cmovae je adc or push mov insl sarb mov xlat loopne test xor add mov pusha scas sub mov push adc (bad) push lret cltd add out jp addr16 dec aas addr16 cwtl cli repz enter add test movsl pop mov push lds push cmpsl stos nop fdivl in test dec out mov das inc sahf sub mov jbe mov pushf jo stos out ret add in orb mov add lock pusha mov adc xchg adc mov xor int3 dec adc je inc (bad) cmp subl or loop cltd lahf lock sub mov jl adc cmovo xor lock push loopne notb or in enter cmp mov sarl add popa xlat or (bad) fwait add mov mov ficoml rorl and push mov mov stos jb mov sub pop clc scas or cmp out xlat mov jecxz icebp mov cld lds jmp inc (bad) ja inc sbb mov mov mov lock or mov orb cli pusha js sahf adc jnp add fsubs sub outsl mov mov lods adc call fcmovb in dec int3 pop faddl push push and adc add addr16 dec xchg inc pop add pop add loope lock popa dec adc popl add clc aad jns sub mov int3 cmp xchg cltd xchg adc out cwtl inc push stos sar mov pushf cmpsb in in jb mov add out push lds mov dec incb add dec test mov leave aaa push jae inc call popf cmp outsb je mov push jmp lds sbb ljmp js jecxz push gs xadd pop jno push add or ja fisub or int3 or mov loop inc xchg dec cltd sub and and inc adc jns dec add pushf adc adc xor bound lret fidivr adc xchg adc roll mov inc sahf sar js lcall jne push xchg inc pop outsl xchg lcall pop mov cmpsb xchg or shlb cmp subb lcall jae sarb test lock add lock rcrb sbb add in xchg and insl rcrb or push jns out jb lret pop mov lock test pusha add inc negl pop inc xchg enter bound or mov lret mov in hlt cmc adc fs out cs ljmp xchg sbb into movsl pop je and jge dec xor add mov aad jb jae loope,pt add add sarb push add and xor sbb negb sbb mov sub xor inc or daa xchg inc mov int3 xchg negb cmc rclb sbb subb jmp xor push aaa adc addr16 das rclb cmp push cmp popa and iret test xchg inc xchg and sbb sub add rorb adc or jb (bad) jge fsubs pop jno or out push sbb xor mov dec mov stos add xor (bad) mov or mov aad mov fcomi movsb inc aaa inc leave jecxz and pop xor pusha ja rolb (bad) mov stos (bad) mov mov cwtl les loop sbb fbstp xor inc cmc loope xor sbb pop cld cmp repz sti test data16 ror jo sub jno cli add xor outsb (bad) jae mov cmp fxch lock sub (bad) imul ror pshufw popa in mov add sub push das cmc cmp jp fsubs cmp and cmp fimul fwait cmp push into mov sub xor test pop sbb and pusha and adc scas into and stos cmp cmp jne push mov fildl popf and sub and add insl (bad) or lock aam xor dec rorb mov add jae push cmp cwtl push add jecxz fisttpl add add cld je pusha sarl es push dec sbb add in jo scas mov add mov pop push lock fsubrs add jmp jno std mov push (bad) add mov hlt or out addl adc dec jge movsb rorb mov add ss das shll shrl loop mov mov sbb fsubr cmpl cmc ljmp xchg enter mov add xchg lcall rclb stc jbe cwtl in push pop push mov loopne pop push stos jl fs sub dec xor repnz xchg jns insb and jbe je fsubs pop and shrb lock in insb in es loopne inc dec rcrb das (bad) jae cmovs dec enter adc pop scas mov jp sub push cmp xchg addb or push push lods mov xor jb ja sbb adc outsb fdivrl rorb dec das mov ljmp mov in es lock jno or pop pop add ds jl mov cmc jecxz or cmp (bad) sub nop/reserved pop aaa xchg sbb add aas lods inc jo test leave outsb notb cwtl or push cwtl add lea add sub jmp xor ja push xchg pop rep lods fistpl iret (bad) clc lea lcall (bad) cmp dec sbb movsb lcall imul xor icebp ljmp lods mov xchg push addb mov sarb mov xor js aaa mov inc lods rolb ret inc inc cld and mov or jecxz cmp sbb ds dec scas stos pop popl adcl sub pop cmc and inc lock add inc pop clc sub inc pop in pusha stc scas int mov bound movsb add es hlt pop cmp mov and push jecxz scas mov test cmp sbb test lods insl inc mov xor add enter mov sbb push cmpsl xchg (bad) lea inc aam or dec dec hlt mov test shrb or sub scas adc mov xor dec xchg xor xchg pop (bad) hlt add pop push adc mov cmpsb xor clc div cmp in inc and xchg mov xor add jmp push inc pusha add paddw sbb icebp insb add adc lea xor xor out xchg leave jle or jnp add xor add sbb xchg mov dec mov or push lea pop push dec jae mov fistp iret jne or nop adc push lods adc incb xchg in add xor lods inc and cld xchg insl cmovp adc dec sbb adc loop sbb arpl xchg mov js pop fcomps imul cs loopne push outsl cmpsb fwait pop cmp dec mov adcb pop mov (bad) hlt jl xorl dec insl pusha fidivrl adc dec pop cmp xchg inc or repnz or sbb mov rcrl jns and or pop mov cwtl adc inc les scas dec lock xor xchg movsb jg sub (bad) mov dec stos inc lods mov cmp sub pop in scas push iret sub xchg rorb add arpl out shrb jmp xor pop scas cmp sbbb inc lods ds dec call popf insl pop jno cmp cmp pop sub test mov popa jle cmp sbb mov mov or orb or sub and and or xchg lds pushf popa cmc imul inc dec fcmovb cmp sarb add jle arpl in scas sbbl add pop cld adc (bad) cmc outsl (bad) xchg push sbb adcl xor outsb das lahf sbbl mov shll int3 lahf jae pop add cltd sbb adc inc sarl or scas data16 addb add push adc xor pop popl jg pop shlb or nop (bad) outsl fs push faddl dec insl cmp sbb cld cmpsl adc andb adc inc pushf add xchg rolb push gs jo fdivrp ja push add (bad) adc sbb inc xor (bad) dec and pop add gs jge hlt fs mov push ja mov cmp dec xor out mov cmp mov insb sahf xchg nop pop cmp cs add cmp jo pop fcompl ret pop push xchg repnz clc jle mov mov int add push cwtl cmp cmp (bad) xor ds jl dec cmp mov (bad) hlt sub clc push sbb lret inc movsb adc cmpsl add add add (bad) (bad) int3 jne xor adc das ret (bad) in add aad push jnp enter lcall mov nop sbb (bad) repnz movsb das cmc dec adc (bad) adc xchg mov or xchg xchg scas add sti test aad sbb mov inc hlt and bound or jl adc mov or pop scas mov test lds movsb pop jo cmp sbb mov in or cs lcall jl ret inc imul mov cmp jle jge mov add push scas adc pop push out jae add lcall or adcl xchg loopne jo nop test dec and xor jne xor roll cmc cld ss flds pop aad jo les nop (bad) ja cli scas add je adcl dec adc xor test mov cmp iret or sub les jl pop inc push xchg notb or push lcall inc scas add jl andb xor repnz xchg push mov pop (bad) insl mov add mov repnz and inc daa adc xorb loop dec mov clc xorl cmp push inc addb int and jno dec push enter sbb mov adc dec add mov mov xchg sbb lock jns insb xchg adc arpl sti and push hlt outsl test dec loopne or outsl roll pmaxsw fcmovb xor cmc mov sar xor sub shlb lock or rcll mov dec jo pop sbb push pushf bound (bad) popa adc jae (bad) jne sub xchg sbb xchg pop (bad) xor aas mov add push sbb push push mov dec sub scas cli test adc sbb test aaa mov sahf push (bad) fistpl mov and (bad) mov xchg inc or jge andb jp and mov aas clc push sub adc lock jbe test mov add or adc inc mull scas sub cmp dec out ds push notb jno inc pusha push cmc loop (bad) out pop xchg add insb sbb push dec dec std leave cmp xchg add cmc faddl jo add pop loop xchg das insl cmpb stc jle lret enter ret flds push add (bad) cmp xor cmp pop jbe lahf push ret add aaa inc insl (bad) pause aas add push scas test and into xor imul jns sti mov sbbl sub cmp mulb test cmp mov fs lock outsl lret test xchg add insb test pusha fldz sub int ret cmp enter lods and jge sbbb aad jb imul test add cmp or mov mov lret adc pop sbb push in pop mov and enter nop inc test dec into or adc aas jmp mov test add xor loope dec cwtl and cmpsl loopne enter xchg add dec push push aad cmp mov mov int3 adc or dec rcrl adc sub cltd sbb adc cli push cmpsb out ret orb push mov (bad) mov inc add mov cmp xor cmp inc cmp into popa test add mov or insb sbb sti push rcll sub adc and in sbb adc int (bad) (bad) loopne adc xor into mov cmp addl je sbb mov lods cmp pop push addr16 in (bad) lock or mov test int pop xor cli lock or test pop inc les cmp xorb or (bad) dec jmp mov stc pop test or add jnp or pop add and (bad) iret add pop nop pop mov xchg mov fsubrs inc test xchg aad add jmp icebp outsb fisttp rclb sbb lods clc xor movsb cmp xchg or rcll jecxz into mov aam cmp sbb sbb cmp adc int inc loopne and sub adc mov je pushf pop add in jne das in add cmp mov push shrl xchg mov add into aam jle jae mov xchg cmp fs (bad) xor shr and aam jo (bad) aaa add in add cmp rorl adc repz stc imul mov add add and adc cmc push sarl sbb inc cmp cmp es cwtl adc xchg add inc cmp push lcall add rcr nop add int3 inc dec mov aas movsb cwtl into adc xchg and or (bad) mov (bad) hlt shl inc js ret bound iret aam xorb test pusha push outsl popf data16 sub test (bad) or out fstl dec subb (bad) sbb cwtl or outsb and je mov in push add sub clc mov in push adc sub iret pop add enter sbb movsb add cmp test mov jne add ret sti addr16 jmp sbb cmp fstps lahf dec test cmc fstps cmp sbb fcmovb sbb fldenv or pushf xor add or cmp sbb dec in dec arpl cmp fs xor cld add add je repz ror and push ljmp adc pusha mov loope dec movsl inc push add int3 outsb addb aad ret xor push cltd xchg in in jb out popf (bad) mov add xchg test xor pop cltd add mov xchg xlat push or sbb test pop movsl in sub mov add pop inc sbb nop mov (bad) int3 sub xchg push adc (bad) add scas rolb mov dec add sbb ret loopne and popf xchg les xchg lock rorl xchg mov dec cmc mov sub xor add jp repnz push or pop in sbb cmp test or int and sub cmpsb push pminub jne lods dec add icebp jp insb inc mov push sbb sbb xchg mov scas aaa sbb js xchg cwtl movsb and mov adc pop (bad) cld xor xchg lcall inc push mov xchg loope ror cmp dec cmp adc leave dec mov fs out xchg in dec nop cmp adc or push add push push das jge cs js mov xor cmp daa add mov mul xchg in adc ss adc bound or das and test dec inc lods add sbb pop out pop mov push cmp mov sub cmpsl adc ds adc loop add pop ret xorl rorl and and push (bad) xchg add jbe adc (bad) push cmp ljmp fiadd or adc adc ss nop xor or rcr push or sbb lcall call add cmpsb (bad) popf dec inc sub fs rcrb int xor aam js nop cmp dec popl xor add dec clc and jecxz aaa mov add sub fistp je push add out mov sbb jg or in jae movsb outsl mov push cmp sub and call test ljmp mov push pop adc pop sti test mov xchg dec dec push jp push cwtl mov js xchg xchg lahf add mov and testl enter aad dec pop cmp adc cld popf or jg cltd add cmp jns add loopne sbb mov xor mov divb sbb clc push mov adc or ljmp mov cltd fs or stc mov mov std adc push push add cld pop add pop sahf icebp sbb stos addb loop,pn hlt sub dec xor aaa (bad) rcll out xor sbb nop int aad xorb sub mov rclb sbb mov push sub sbb mov xchg pop push cmp and testb roll xrelease xchg add and push (bad) mov pusha fsts adc sub adc cmpsl add jne push movsl sbb js sub loopne cld sub ss pop or inc dec push xchg cmp jl jo out lock and dec xchg popa pop pop push add or imul in cmp call cmp pop mov icebp pusha xor cltd je sub fadds (bad) dec cmp out pusha fisub int3 jbe lret mov mov push and dec cmp xchg mov dec xor cmp (bad) or jp dec jmp sub lret add pusha add sbb mov or cmp ja imul sbb push mov cmp and mov (bad) mov mov mov movzbl addb or pushf dec dec push xchg lock call ret and in jl cmp mov jbe push lret shrb jo js add outsl out adc adc ja loopne pop cmpsb fxtract aaa or lock int3 dec adc mov int3 or hlt pop jnp add loopne adc out xor fldt js and xor into sahf bound adc cld xor add in and repz scas or sbb test je mov inc rclb sti cli and or push iret xor lcall in dec add or jp add (bad) dec out movsb (bad) push enter pusha ror rcl jb (bad) pushf cltd mov lods test and sbb xor pusha (bad) cmc mov movsb add dec rolb mov into mov adc pusha stos out or add fld movsl mov xchg xor (bad) pop aad sub jb mov (bad) pop adc enter loope mov test cmp nop in in mov movsb dec cmp cmp push iret or dec or sarb lods sub push sub jo add pop lds or loope mov (bad) in add aam mov mov clc adc rolb inc lahf movsl movsb sub mov sti dec xchg std sub testl (bad) repz sbb lea push add movsb sarb mov add ret add cltd jnp mov sub mov insb push sub outsb stos jo or (bad) add dec adc popf je xor insb or cmp js enter hlt enter jp pusha cltd int3 enter (bad) mov pop and lock cmpsb sbb std add mov mov mov or adc push mov imull nop or jmp in add add push out jle enter xchg je jge testl mov add adc (bad) pop jne push out xorl inc mov ds loope xor jmp popa mov pop fwait jl aam cmpsb mov (bad) pusha into rorb or stc xchg test add insl add movl dec add mov jbe mov lret pop sub iret jmp add pop es xlat rolb hlt add and add sub or cmpl pop and lcall cmp movsb xor dec mov cmpsl xchg add or stos adcb jge ret mov sbb outsb xor nop js add add test pop sub je pop mov or jnp insb punpcklbw ds mov and dec rorb mov add or add imul lahf push mov sysexit inc das loope push hlt inc iret and lock sub (bad) dec jge sub xchg loopne sahf scas or sbb adc sub and lahf push lock mov jae lret pusha add jmp loope loop jno mov pop dec lret leave push cmp test (bad) jmp push push push je hlt dec and fdivl jl test sbb lods add adc inc add (bad) mov mov in loope fist mov mov and push push inc xchg popa mov add (bad) xor xchg loope arpl sub iret fildl inc cmpsb pop sub and and loop add mov dec lret add pop add xor pop loopne pusha push int3 or enter inc mov push mov xchg stos sub cmp adc dec cld adc adc dec test aam cmpsl jne out cmp pop cli push cmp ja bound or cltd sub push popf and jnp pushf dec dec mov test lods dec in fstpl lret sub sub or mov andb insb inc sub lods add lret add sbb mov (bad) cmp (bad) test mov xorl pop fs addr16 xchg cmpsl in push mov and aas push push dec push jnp aaa (bad) pusha int3 xchg add dec jno mov ljmp sbb fisttp mov inc xor push cmp push mov xchg (bad) nop or inc or ret add push fcmovbe stc lds add xor or int push (bad) push inc fldcw cmp testl xor pop lret cmp inc adc mov (bad) hlt cwtl or sahf and call sbb adc dec (bad) daa jbe adc shlb call and and rcl mov adc push jp loop mov adc xor sbb scas scas jno sbb add insl jno fist mov call insb aad pop sahf test and xchg mov push push inc js ja sbb sarb add jle ret and sub add cwtl les loope mov and rorb test rcl addb mov push sbb dec jecxz cmp or jp and mov out add inc pushf add sub mov pop lret inc add mov shlb push sahf push mov push imul sub add xor sub in (bad) pop mov ret adc call or (bad) pop push pop or sbb xchg lds dec add lock in mov test movb or faddl aaa cvtps2pi lock and mov loopne and push addr16 ds orl test js push pop movsl rorl les add adc mov stc movsb lahf (bad) inc sub xchg call pop lret add cs test xor mov push sbbb rolb test (bad) out fs add mov test mov add popa and mov mov into rclb les pusha pop sub pop popf mov add sub addr16 and (bad) icebp inc xchg cmp pop je cmp in push js add aaa ss loope ficompl jecxz adc jno fstpl mov add in in pop or outsb sub pop movsb add sub int rorl test mov or in and data16 jae gs ja sub dec test sub ds dec add jmp mov dec cwtl xlat in in adc push pop push xchg lea push loop jo nop lret adc xor lret in xchg pop and je bound adc jp lldt test pop xorl adc scas xlat loope mov adc and jle or lods daa test data16 ljmp adc pusha sub xor movsb into pop call and (bad) xor bound inc (bad) dec push pusha (bad) fldt xchg insl cli test sub sub mov ficom sub std sbb enter lock sbb xlat repz movsb test push mov cwtl or xor int3 add lods lea int xor movsb enter push xchg (bad) xorl pop xor es adc sub mov pushf sbb fwait add nop cmp mov push test dec call push daa or out (bad) in add js leave cmp pusha adc add daa push dec mov and sbb mov hlt pop adc sbb fiadd jecxz sbb dec lret jmp mov add mov cmpsl in leave xchg cmpl mov or sub fcompl sbbl push xorl xchg add shlb dec adc sub ret leave orl dec test or or call push inc repnz unpcklps dec sbb pop xchg pusha es sub int and add pop popl sub pushf mov xchg xor mov std cmpsl add mov stos fdivrl test xor or fcmovb jo add or outsb int jl lret mov ret adc enter insb lret and (bad) out or add xor mov inc pop dec cltd in dec pop sub (bad) mov add jae xor lods add in fwait repz add negb stos sbb (bad) sub push or out andl add push sti sub dec fmulp aaa cmpsb ds test lods add pop sub sbb or or loop nop adcb outsb adc aad ja ljmp popf add lret cmpsb enter xor and mov xor mov inc jae and pop jb pop lahf mov add ret push lret cmp cmpsl mov aas aam push pop dec pop xchg movsl sbb outsl or xchg inc dec outsb mov lret pop ret jns and movsl sub subb cmp mov pop int3 xchg cmpl cwtl faddl xchg sbbb push mov sbb push inc adc cmp call inc push (bad) cmpsl pushf cmp inc loopne sbb push inc loopne std fs stc scas ljmp lret or jnp pop push xlat adc ret imul les cmp fisubl sahf xchg clc add nop lea rolb and mov insl cmpsb loope jnp scas fsubp (bad) repz mov in sbb mov ror sbb iret ss (bad) and xor cwtl or lret adc (bad) stos in jbe add ret xchg test addr16 dec sub pop pop incl and jno cltd jecxz sub aam aam add and imul xor inc or mov add bound or add loop push or and movsl roll push inc clc imul add xchg fs rorl push add (bad) hlt add dec gs dec push adc in loopne shl push data16 sub lds dec loopne cmp addl sub addr16 in imul add xchg insb jge out push aad icebp test (bad) repz mov je add pop movsb dec icebp add sub loope stos hlt or xchg fildll flds clc cmp jbe fcomp setl pop std mov movsb call adc ljmp dec rorb cmp lret mov ljmp fdivrl push pop sbb add add clc sub cmp mov inc int3 dec push inc (bad) cmp sub fbstp (bad) mov mov xchg aad inc dec and adc sub sbb jno call cmp mov mov dec aas lock mov or jl (bad) inc mov xchg movsl cmp mov loop lcall push dec inc add movsl push sbb popf sub bound or jo out (bad) test and lock xorl ss icebp int inc pushf push ljmp rorl sbb repnz mov mov lods pushf add (bad) and test shrl rdpmc das and add xor shrb lret dec aaa or add xor popa sbb dec std add ficoml dec outsl inc (bad) fcoms sbb mov outsb xor insb addl cmp mov das (bad) or cmpb aaa push lcall and loopne add dec hlt pop ret (bad) loopne insb std inc and add fsubl sbb mov in je (bad) mov icebp add pusha cmp hlt jp fnstsw mov adc add inc divb lret in add pusha inc (bad) xlat dec leave inc adc (bad) xchg xchg xor iret vpcmpeqw push lret lods dec ret jns adc or mov or dec int3 adc mov jmp (bad) ja sbb (bad) xlat add in movsb out cmpsb pop jl adc xchg add dec xchg (bad) in xor imul xchg test int fbstp jle es out add jle sbb jl cwtl mov rclb jge pusha jno sbb xchg mov pushf or jo sbb adc pop mov add bound push aas xor sbb fs inc dec arpl icebp adc pop popa test inc insb sarb mov aas push pop test lds pop mov add fs sbb add lcall mov inc fldl cmp notl or lock clc mov rcrb mov mov inc jl imul cwtl pop test (bad) fcmovb xor pop adc xchg stc (bad) mov or sbb lock dec add add add push out and inc mov loopne push mov bound push aaa fcomi aad (bad) out push test loopne out push pop adc in mov pop sbb inc testb nop adc cmp push orb mov pop xlat out lods jge adc loopne push sbb lahf pop jns and out pop add jl,pt testb sahf cltd pusha pop adc rcrl mov xchg mov fiaddl jg push call mov dec mov call mov add add sahf popf bound fs inc add add adc scas icebp (bad) inc mov and (bad) fild add adc jge push out mov mov xchg adc repz daa mov clc sbb test adc in fcompl mov mov xchg dec add clc repz jae mov call add xchg xchg push cltd push xlat add xchg mov clc mov repnz jg sahf js orb aad sbb je or cwtl idivl clc xor arpl inc inc jg pop jmp add lods cli gs xor and ret adc mov aam xor push sub out sbb ljmp mov jne arpl add add jb movsb add gs add cmpsb cmpsl push mov adc pop dec inc nop imul inc jae push ja and add adc adc clc inc xor paddq ds scas dec mov cmpsb pop add sub jg int js aad das jns cmp scas jae iret sar outsl insl inc add lret sbb rcrb inc add stc hlt call cwtl cmp push mov pusha lods rcll popa cld mov and pop dec call stc sbb add (bad) loopne out inc push jl lods dec mov xor mov cmp adc pusha cmp mov ljmp nop push call ss arpl daa aam jbe jmp adc std add shrl pop add xchg pop xor inc jns sub push push cld adc add out inc push arpl add jge hlt xlat enter in dec inc add aad sub add cmp pop mov jecxz jge icebp cmp xchg test mov adc pusha xor and lds push or fnstenv push in mov mov sbb xchg test loop xor inc add pop call std inc cwtl pop adc dec (bad) cs mov decl add push and mov in inc mov xchg mov in sbb add pop and mov xor pusha and xlat or cld and mov dec sbb cmp test dec rol stc sbb or enter sar clc push lret sub test pop jl call sbb in inc lods jge add xor dec mov add scas loope out sbb mov push roll sbb cmp add pop adc lock enter mov sbb ds mov fs addr16 jb std add icebp mov popa and les faddl mov arpl sbb xlat std xor dec adc jmp adc adc dec orl push sbb inc lock call int xchg leave adc sbb sub pop add pop cmp mov mov mov (bad) mov mov adc mov sbb mov sub adcb inc test mov pop jo adc mov xor call cwtl xor std adcb and or jnp sub ljmp jp xor pop push mov lock add inc push pop pop adc in mov es jl cli pop add or imul pop pop mov sub in fs dec or jl add inc clc dec sub test mov cld out popf add inc cwtl cmp dec add gs dec mov add xor pop roll in adc shlb in sub sbb add jp cmp rolb sub mov in jns and jmp add inc repnz dec adc or (bad) ljmp add and andb popf jbe add sub popa lock push lock or stos cltd push sbb inc or xor out push cli add sarb les scas movsl in lret out lock dec pop sub sub inc insb popf or adc test std mov inc cld push jge add lret hlt fcomps and mov jns movsl lcall popf daa inc jne or flds add std cli fbld jl add dec rcrb repz and aam in adc add cmp xorl add je adc orb mov or js je xor std jnp addb add inc (bad) xor inc cmp push pop mov movsb dec test adc sub test hlt push mov pop out jo sbb movsb xor inc jp or pop xchg nop inc je add jb jns or xchg add xor lcall jbe aam cmp push xchg mov xchg push rcr add sub inc xchg inc lods loope les inc cmp leave loop and adc int3 sbb cmp mov pop xor mov mov push add stos test cmp enter add lods lahf cmp inc pop dec and aad add push inc cli movsl jg mov jne inc add and int3 test mov shll and add xchg popa sbb leavew add test std inc test add adc push inc push xor sub cld lock sbb stc notb gs fild mov pop or mov add imul lock ljmp bound mov sbb inc pop lods xor (bad) in mov out jo cwtl xor or sbb jns pop cmpsl add rcll dec ror je adc dec cltd loop fcmovnb and pop pushaw dec (bad) xor or pop sti xchg daa jp push or lcall jo pop jp xor xchg lea add fist cmp mov mov loope out (bad) test mov add sbb mov test daa sbb push mov je andb pop mov add subb mov jnp loop aam idivl dec add adc inc movsb test rorb jae addb lock xlat in and sub sub add ljmp jge add add test lods jne gs push add or fs loopne lret push cli call cmp in fwait add jge test pop cmp pushf ljmp hlt sbb or pop rolb sub cmpsb stos add loope nop rorl xchg in cmp call aam adc cmp xor sbbb add scas add jne clc sahf mov add ss ds and mov push mov or cs orl js or inc daa aad xor loopne push jne push adc cmp xor jnp loop xchg mov loopne jg aas test mov (bad) iret mov mov push sbb mov addb and std rorb inc cmp jns or inc dec fstpl mov std pop ja ljmp loopne jmp testl imul lea inc repz mov pop mov jmp cmpsl pop insb jle add dec pop in and cltd test inc add popf fdiv inc sbb xor xchg adc sar mov paddw sbb roll dec negl clc add sub repz aas inc ror les das xor lahf ja aaa push jle cmpsb popl fstl or mov imul je inc mov xlat out arpl add rcr xchg das cmpsb add jb add ja in cwtl push js and out movsl loop cmp fcom mov cmp add movsl aam mov sbb xchg cli or sbbb add rcrb add mov stos mov loope add mov dec add fistpl test add cmp int test xchg (bad) jnp shl je add sahf add and mov inc mov mov popa jo cli int loope,pt (bad) negl xchg xchg push adc test and adc add fldl pop sub pushf or xchg mov test add loopne (bad) int3 add outsb push ja sahf insl int pop dec sbb fiadd add inc daa subl cmp pop pusha push int3 into shll out sub sbb adc mov add lahf rcrl imul and xchg test call push add xor add inc and andb jo push mov outsb jns sti pop add xchg lods shlb jl add addr16 lahf and xchg add test clc in icebp xor inc nop push in (bad) jae mov fldl add cmp or add hlt mov or enter push add sti gs hlt int3 and xchg test xor mov lahf jmp push mov inc xor add je aad add clc dec ret call push jecxz in inc pop or lahf xchg lcall scas pop mov xor fildll adc rcl nop mov and (bad) mov jno mov jae test push into add cmpl scas ret mov cmp fiadd js cmp inc add rorl mov inc cwtl and out (bad) sub add cltd out addl orb pop lds aas and mov andb decb syscall adc inc lods jl and and stc push push mov add add repz add outsl mov jp inc push mov cmp add lret mov add xchg jmp add dec les (bad) add jge cmpsl insb adc daa add (bad) fwait cmpsb add lret insl (bad) lock lcall icebp clc stc add ljmp push or add clc pop mov ret in or dec lea cmp dec inc add loopne in repnz movlps dec pop aam pop add and push jecxz or and pop pop daa mov xor push loopne test inc lods add jnp rclb or aas fdiv ds cmpsl add jbe jnp pop (bad) aam sub fnsave pop flds adc pop rorb (bad) (bad) push or push aas (bad) xor test xchg dec lahf loopne or jmp sub jecxz mov push cld jbe adc (bad) add in inc test add mov add sbb lea daa and add sub lock stos dec xchg xchg add out loop lea or mov cmp mov pop jns dec pop in roll xchg fcmove adc adc fstpt push jp adc mov stc sub daa sbb ljmp nop xchg in mov mov dec jecxz add xchg cmp test add bound pop mov xlat xor dec add outsb inc push jns fdivrs enter or hlt leave xchg add loop mov xor sub lcall mov or push pop in test shr mov adc add test repz ss pop sbb sub nop add idivb cmp pop loope int cmpsb ds push pop xorl mov jb rorb add jo int3 jmp lock push push (bad) mov jecxz jmp dec pop jae hlt mov mov push lret call mov sub cs cwtl push adc aad nop dec clc aas mov addr16 jmp (bad) loopne add add cmp add das (bad) nop cmc inc inc add iret fsubrs add scas jecxz cltd shr aas cmp add xchg sbb fstps push mov push add xchg xchg pop add stc and movb test mov cmc jp add movl shr sub xchg ds or jg add stos stos mov add jae popa ja cmp sub push push fimull in (bad) jb pop adc cmc and cmpsl (bad) icebp xchg pop lods add sub in cli xchg add jp (bad) into mov fiadd sub bound in popa das sbb xor push ja out add mov pop xor cli jg add imul xor into fwait xchg push mov (bad) add (bad) in xchg jge xlat jo push ficompl repnz ret push dec mov or add mov ja add pop fldt repnz daa aad pop inc rol js test xchg pop out push nop xor ja add into inc (bad) and cli aam mov push cmp jne fadds lock lods pop xchg or add jp loope xchg cmpsl add cld inc je outsl add les mov mov push jg push dec lods add call mov je sarb inc mov sbb out dec push icebp loopne je add es (bad) arpl jnp xchg cmp push test mov rclb dec js add cmp sub pushf aam lahf scas stos jno fisttpll dec (bad) mov gs repnz (bad) mov imul lea mov add add jl fdivrl fldl (bad) and mov mov mov loopne int sbb xor add cmp stos int clc lods scas add xor scas in inc jno push xor clc jns push aad movsl add or js jne daa fimull xchg sbb js adc mov mul sbb add or pop xchg jmp and add mov sub xor or sar clc cmp lock add rorb cmp je fwait xor and adc test sbb cli pop subb push insb add and add (bad) mov add pusha leave add jp add gs pop ljmp and loopne dec mov push mov nop or sub dec (bad) or jbe adc add insb loop pop push adc push outsl add pop dec iret mov mov adc mov rcr jb pusha fisubl (bad) pop outsl xchg pop sub sbb add andl xor or lods inc (bad) call sbb mov lret dec mov enter mov into insb inc inc int3 cmp stos push stos mov add div stos sbb and popl mov bound push roll aam push xor enter add jae mov shlb sub fwait test rorb pop mov add outsb std (bad) inc clc aaa sbb cmp call sbb add ds pop jl pop adc insl push aad shl jge adc add add aaa xor js adc lods cwtl ds ja test js and lods movsl add call popf fwait inc loop push sub out js mov pushf or cmpsb fadds (bad) shlb push mov ret mov dec aam xchg jae add imul out lods push mov pop sub or sti nop add push test pushf or fisttp xor and jg scas mov cmp repnz aas push in mov push xchg jo mov sbb adc push scas dec orl xorl add cmpsl mov push dec clc data16 xchg (bad) and loopne push cmp sbb mov sarb cli jo add mov data16 xchg out add sub or movsb jecxz nop mov inc sub setae xchg xor loopne negl inc mov cwtl xor and sar fs mov add loop test out jmp testl xlat leave rcll jge inc (bad) mov sti mov push or out rolb xor sub push das fwait add mov out push and ljmp push mov or bound popa mov pop dec lock mov int3 push insl outsb xchg es adc sub or mov ds int and fldl2e sub xchg sbb pushl int adcb xor push push pop loop jle movsb xchg cld add sub in sub push cs xchg out push loop enter cltd test sahf xor lds divb ror leave or cs dec les pop addr16 mov mov sbb xchg stos int sar shr adc push add inc cltd jmp pop cli push add push adc cwtl test xor rcrb mov mov push mov jmp sbb aam pop sldt mov cmc add pop jg fadds jle push lret stc xor sbb pop adc in mov enter add cmc insl lret std imul xchg fcomip add inc xor inc icebp ja or adc scas inc adc pushf inc and sbb testl js pusha incb mov add cmp push frstor sbb loopne sub push xchg rcll pop inc xor ljmp cli (bad) mov outsl pusha dec adc xchg (bad) pop movsl adc rclb pushf ljmp mov cmp cmp pop roll (bad) jns add lcall sub imul daa mov and pop jl sub mov pop rcrb dec out je jns add push add jo lea sbb and ss insb mov add add and push jno bound fbstp and xchg cs scas jge mov or mov ljmp xor jne add adc mov sub adc test cmp outsl pop sub xchg ljmp and add xchg push or xor aam mov and icebp adc sub in add sbb daa add aam mov lahf in add ret mov pusha pop gs (bad) repz repnz mov add dec cmc and rcl mov cmp call bswap loop cld scas mov or xor dec add add popa (bad) cld xchg imul xchg jge sbb in inc add pop insl fwait add adc cwtl or jge adc sbb and dec add jmp sarb (bad) orl cmp outsl addb cmp out jne test (bad) flds pusha add (bad) (bad) mov jl pop dec imul iret in sbbl test mov xor incb jne sbb add in mov dec aad add inc push (bad) inc mov or xor pop xor outsb arpl jo addr16 or add dec mov jnp inc incl mov xchg add fwait lock cmp add test mov adcb pusha gs ret lret dec adc mov add ljmp push or (bad) cmp push in xchg mov cs aaa test cmp out lahf popf hlt rcrb mov stc push sub pop and inc adc and lock in jnp inc out (bad) inc push mov movb xor jecxz nop stos inc jno into pop xor insl lock icebp add int3 jle add adc lahf outsl rol cltd pop sub in push out mov pop push or and pusha dec sub repz insl addl clc pusha jo stos repz sbb lret jmp mov ret (bad) pop mov pop pop movsb scas xor mov aad push jnp add adc inc sub inc add mov and jno sub mov (bad) iret adc mov rolb lods les pop enter pusha movsb and push add icebp sub jecxz add push outsb lods incb pop push add add clc sub jmp mov adc jge int3 pop loopne jno iret inc ljmp add ret xchg xchg (bad) (bad) roll push icebp subb in dec cmp (bad) (bad) and mov or shll push mov xchg test add fstps add jne pushf adc (bad) insb mov lcall mov pusha (bad) jle add ficom xor pop int3 mov nop jmp push leave push aas xchg inc and xor sub xor stos push scas pop sbb add mov repz cmp (bad) iret lods jne add pop adc xchg lods xor notl rolb bound sub je fidivrl add ljmp add xor cmp sub mov xor add xchg insl aam loope dec ss inc loopne add je gs add sub cmc mov mov lock movsb (bad) or loopne sar out fisub xchg pop out mov mov rolb mov outsb xchg mov push xchg lahf sbb push xor loopne (bad) sbb loop lds gs movsb daa test rolb cltd movsl out scas or lods hlt loopne fildl push (bad) out pusha inc pop mov pop inc xchg add mov fdivr shll mov pop add sub jl loopne cwtl xchg cmp add dec inc sbb adc fnstenv lret ss mov sub dec push sub dec add cmp mov sub xchg fadds stos pop mov mov adc add xchg push add add add adc jbe imul rorb pushl add add push jnp icebp es jecxz push je daa add jg or roll dec xchg inc cmp sahf adc cmpsl inc sbb leave add xor jecxz or pcmpgtd dec hlt mov sub add pop ret nop and lods test sub jge fisubr ss add pop push and aaa imul and add mov scas mov xlat es sti add jne popf mov in add cmc sbb add push pop lods mov dec pop and ficomp mov clc push sbb lods repz push add or push pushf stos sbb mov addb sub sbbb sarb pop das loop push dec push mov jp bound adc iret add std or ret rcrb (bad) jnp inc cmp add movsb xor pop testb add xchg mov je push sbb jo add sub jae mov mov dec test lcall (bad) test cmp push mov pop sub lahf push add nop adc int3 mov addr16 xor dec call shrb or popf sbb inc mov sub sbb xchg inc scas imul or push popf mov fmulp bound inc add pop and cmp test push movsb xor aas dec cmp roll fisubr inc pop and or mov push add jno stos dec xor in inc bound addl pop cs out push mov (bad) in loopne sbb push hlt xor arpl movl mov loope pop xorl ret jo sbb adc mov sub inc push popa xchg mov insl push nop clc outsl jae inc ljmp pusha cwtl push ds loope push adcb aad cld lds mov cltd sbb pop xchg stos mov aas xor pop (bad) pop sbb or adc out or je insb addb pusha sti add inc or push lret popa call in (bad) jb cmp repz xchg push lods test and mov int3 mov loop test push xchg jb jne adc pushf pop mov add inc sti cmp add pop cmp (bad) lea shl in mov add stos lcall lret out lahf out addl xchg cmp adcb inc add imul mov ret pop push pop add mov dec les je icebp or enter jl sub out mov jl jle mov xchg cmp lods jns add decl add inc or roll daa add cmp adc in (bad) fcomps sbb pop push leave (bad) xor cmp fiaddl adc pop pop add adc insb repz fdivl fldl dec sub aad fdiv les mov sbb mov sbb outsb iret shll sbb or imul aad adc xchg fsubrs scas pop inc rolb dec ss repnz add imul cs mov mov call out add pop mov jp outsb mov iret or pusha mov sahf mov sbb mov orb jae pop xchg jp jns add pop clc xor sbb popf mov xor ret sub jge add pop add addr16 add xor pop xor pop shll inc imull adc push icebp stc mov xchg ds outsl (bad) adc ljmp pop add outsb mov jb ret lods leave in cmpsl mov iret push lret enter pusha outsl sub repz sahf and pop cwtl xor xchg (bad) push mov jecxz pop enter pop lds sahf add push scas movsb lahf add pop js jg dec cwtl add or fsubrs add hlt test and pop outsl popa mov pop std jle out sbb jmp pop (bad) pop pop mov jo (bad) rcl add test scas sbb xchg push (bad) in xor jecxz and mov jge sub mov sbb mov jb jne or repnz mov nop ficompl mov fildl inc ds adc mov call fwait int inc push call cwtl mov add xchg push (bad) jp sbb ret sub fdivr pop mov and push adc inc mov stc xchg jge add add add lret adc add sahf or cmp ds jle mov jbe add jno jae cmp cmpsb pop addb mov shlb mov mov xor neg mov into roll xchg (bad) mov and lock cs cwtl and int jnp ja add (bad) mov (bad) xor cmp test jl ret adc into inc add aas or nop sub pop gs add pop lods or pop sub xor xchg cmp shrb or bound adc mov cmp orl jo and sbb jp mov loopne das add (bad) cmp add jle mov rolb mov (bad) cmp push (bad) loopne jne and xchg clc inc out sbb mov jae daa pop cmp jns adc lahf mov jo add loop cs imul mov fcomps add cmp or leave daa out fsincos data16 cmp mov fildl rcll ret sbb push fild ljmp ss mulb lods stos mov or push and roll ds adcb ljmp (bad) test repnz or aam movsb add je icebp dec adc stos add pop loop and sub leave mov fisubl scas cmp cmp stos movsl ret push add and in sbb add push mov mov cmc inc scas jae add andl (bad) lock and insb xchg stc popl cli fwait push (bad) neg inc add (bad) pop sahf dec add arpl dec adc decb and adc push ret inc cltd xor pop sub pop lea ja out aas xor dec xlat sbb mov aas push scas loopne jl es inc int3 mov sti add out mov xor add int3 fbld rcl outsb add andl and add pusha add add nop loope xchg adc jle add call inc mov xchg add push add add jbe and jecxz fmuls pop push aas outsl add lods ret inc pop mov push mov jl clc push dec sub pop sub aam push andb push xlat fiaddl test jbe sahf push fidiv pop jp push and pop jno imul adc add mov jmp adc jl ljmp scas movsl or clc movsb mov add dec adc int3 jmp mov add adc inc inc subb jo xchg pop adc clc cltd leave dec (bad) sbb xlat adc jbe add in fiadd dec gs mov daa loop adc and mov clc xor gs mov and add cs pop and fbstp add pop sub and dec addb add rorl add inc jmp jnp loop adc mov add mov fild xchg data16 (bad) ss ds push ret mov inc (bad) (bad) in lock xchg and sub leave cmpsl cmp fstpl lcall inc daa test add cwtl xor shlb xorl add mov jmp jne dec pop mov in ret data16 dec int3 test mov or cmc add push mov pop shlw sub sub mov les fcom loope jbe add lcall lcall and dec add mov mov jnp mov imul jle jmp inc stc aam adc clc cld push lock je add mov add mov add xchg out cmp int3 xchg add mov fiadd inc lret jne pusha jmp cmpsb lds push add push stc sbb nop xchg in in add mov or or es add jecxz,pn dec push mov repnz repz inc jmp lods fidivr addr16 testb or imul cwtl sbb loopne daa (bad) add (bad) repz dec inc add push lret sbb xchg fsubs and ret cmp fidivl fsubr lock shll out int3 insl dec out sub leave jne pop aaa fbstp imul adc cmpsb and mov pop mov add xchg add repz sub push (bad) les mov pop cli mov mov dec mov xchg rclb add dec sbb test std orl roll into push mov loopne rcr add xor add pop mov or lahf add cmp jb push and clc xchg add inc es add adc mov sub mov sbb adc ss mov add push jg jg xor mov repz pop xchg add out (bad) adc je leave ljmp cs xchg aas xchg xchg dec dec or push insb aam pop add mov add stc imul ljmp cmp xor movsb adc int fdivrl jo sub xor push in push inc in and pushf (bad) dec stos and pop add add xor (bad) push add mull call testl aam xchg ds iret jg out and add add jle icebp clc cmpl pop adc dec pop add or test sbb cmc cli (bad) movsl add lret (bad) rorb fdivrl lcall das add mov push inc push jae add jb imul add or aas pushf jae cmp push arpl push cli test popa sub dec mov mov push inc add pop leave xchg push das (bad) aad adc cwtl add add imul jno jge add popf stos clc jae test dec cmp enter inc inc (bad) nop mov push cmp enter push push sub sbb push mov int3 add dec es jnp or scas shlb mov xor pusha shl mov sub jge or push pop pop and rorl loop mov add pop iret add jg inc es (bad) lret and je pushf cltd add insl test test adc dec mov add jmp push add mov add adc sub rolb mov jge push add inc lahf bound mov gs add push cld shlb jmp lret (bad) xlat cld jae and or aas cs mov jl (bad) fsubr (bad) sbbb jno jp add lock (bad) je pop repnz inc mov add popa and (bad) push les push mov push imul pop out add adc lods pop shrb and mov clc xchg add faddl pop jno pop sub adc nop lea ficompl and dec add inc leave in in pusha ds add inc mov add in loopne ljmp dec mov ret rcrb jbe jg mov pop add pusha jecxz cmp (bad) jmp sub adcb xchg je das fwait loopne sahf add lret hlt pop incl cwtl inc ret sbbl lret mov and push sbb add add mov loopne sar mov fisubrl push fcoms jl pop adc pop jecxz rorl iret push cvtps2pi cltd mov sahf cmp cwtl cmp add mov xsaves xchg int3 sbb gs into icebp rcrb stc (bad) add add imull lea pop xbegin adc clc xchg xlat xchg push cld push adc shlb mov add pop std loopne pop adc lret xchg add sbbl or pop ss data16 add xchg imul jae inc dec and jg mov add in jl enter daa fs and add xchg pusha dec push sbb dec add add mov add mov es push popf xor popa inc add push sbb xchg pop fnstsw dec xchg mov in das add or dec aas (bad) cmc add xchg jne scas push sbb pop add jle cmp cld rolb scas or inc pop sub add sbb add push inc jg fxch push movsb rorb pusha sub sti xor push mov adc movsl aad cmp fimull lods dec dec addr16 mull int3 add add pop add add dec push add inc lahf mov rolb test jns mov cmp inc stos xchg adc andl int3 cmp mov call int3 stos dec outsl mov jp adc jmp shrb fisubl clc lods pop cld add adc add dec xchg push rorb ja (bad) mov fst fmulp inc in and in inc add pusha test enter dec aaa push lret mov or xchg loope fld test mov lods or insb add mov (bad) cmp xchg insl mov jp xor bound sbbb add (bad) jmp daa fidivl xchg push mov add add add mov pushf aad fwait xor pop jne add add mov cmp mov inc fmull cmc repnz popl dec push enter add and push pop imul int add and or mov cltd psrlq jno xchg clc call jnp mov ljmp sbb inc add add and mov add ja movb jae inc pop out pop mov lahf ror rcrb xchg in nop ljmp jge (bad) jmp sub add outsl adc clc sbb int push cmp mov out push add std adc jbe jp and sub jno cmpb fs mov sysenter dec mov cmp add ret dec xor inc dec mov cld add jg jp adc and fiadd aam lahf fidivl ljmp sbb cmpsb push les cmp xor ds xorb push clc or add pop or push ja xor mov pop fsubr inc mov out pop incl insl cld ret les push nop xchg popl xor testl dec test jo ffreep mov xchg popa pop mov sbb (bad) pop push pusha jne gs jb fs lcall mov xchg add lahf and (bad) in sbb push cmpsb mov push push cmp or mov lea popa aam xor pusha negl push cmpl dec push lods sbb push aam xor ja jge mov loopne dec cmc arpl clc roll pop lods (bad) sti push adc adc arpl push jmp xor bound int fs sbb dec cmp inc flds cmpl inc push stos mov sub jl inc sub add jb aad ljmp add and std cmp mov xchg popf mov add jle sub dec push lret in pop hlt out rcrb les push mov jne test inc fs mov (bad) mov in lock mov lds mov jns int3 popf jp loopne sbb cmpsb or int aam repnz dec cwtl push cmp add sbb jbe mov imul xchg add xchg shrb sub mov push cmp hlt out pusha imul push fiadd mov jle cmp dec xchg aas adc add xchg sub jp in sub scas sub and sarb cli les (bad) xchg jb sub movsl add add sub adc xor add dec cltd sub daa or mov inc sub cld cmc das andb test add and cwtl je dec push (bad) fnstsw xorl dec loop (bad) in (bad) mov and adc add pop leave call and lods push add push ret scas pusha jno add popf push inc add es or fidiv add push adc stos inc mov lods mov xor xchg fdivr (bad) rcrb mov jae push mov fsubrs jo add popl fadd cmp sbb pop leave adc arpl add add dec add rorl enter out mov add and mov or (bad) sub sub mov add jb repnz (bad) loopne mov sbb cmp mov imul ret push (bad) add (bad) addps mov pop sub lods mov shrl sar addr16 loope xor dec (bad) (bad) mov fadds adcb xchg test mov dec jo xchg dec mov repnz fneni(8087 jge add sub ret pop pop repnz ds or pop scas mov push xorl jge sub inc adc popf out scas mov xchg sbb phaddbw xchg rcl test repnz mov insb jmp loopne nop lret jb or lahf and sbb add xchg in movl add pusha and in shlb and sbb ret pop dec fstpl (bad) jl inc xor sbb mov add cmp inc add lock cmc add sbb add jecxz hlt stos add lcall mov mov sub fnstenv test ret jo xor add (bad) loopne pop mov dec xor std pop xor inc in cmpsl add mov int cmp xchg mov sub cmp lods and add mov add push dec push cli je dec push sbb in in mov into add xchg pop cmp gs (bad) clc sub add jb dec sbb mov mov add int3 lds inc ss cwtl mov inc jle pushf scas fstpl fdivrs add repnz decl mov mov pop sub add mov imul call sar jb add mov data16 cmp ffreep pop lods add add jo fwait cs subl lcall (bad) cmpsl dec cs icebp das xor push add fisubl pop pop (bad) cwtl (bad) mov add inc jnp je out add and outsl cmc stos sbb dec add add xor ja lods fsubrs mov cmpsb sarb mov jae cld push pop jns add mov jecxz stos test sahf lods pushf inc out adc and test jo add (bad) sbb add cmp daa loop and add sahf mov xchg cmpl cmp jmp fs mov fnstcw pop clc mov sub leave in movsl testl dec loopne xchg test mov inc fistp (bad) fmuls jb adc xchg (bad) mov add inc cs arpl mov add mov rcl inc aaa idiv add iret stos push jge imul jb ja lds mov or dec js cmp and add push xor ret pop add (bad) cmp mov pop jo jb cmpsb sbb add mov jecxz nop mov add outsl insl clc add incl nopl iret add sbb pusha in popf add loop fucomp clc aam add and ret leave sbb add icebp mov dec scas add and je in inc stos gs or fsubl push add jmp xchg movb push jnp das (bad) xor dec pusha daa xor push data16 xchg (bad) sub pop mul divb jb xor jmp add fsubs mov mov adc aad add jnp xchg es cmpsl sbb (bad) push mov inc iret jns lahf mov pop push adc cmp add jne ja xor or push andb push cwtl iret mov add ljmp lret adc xor fldt jp hlt sti aaa out mov add or ljmp cmp idivl inc add sub jns jbe jl cltd adc in loop cs sbb sbb cmp lds xor dec mov inc clc gs clc mov dec add std pop sub mov sbb cmp xchg jge push dec les xor adc (bad) ss pop das cmp push hlt xchg out into xlat add mov dec outsb push cmpl (bad) jo bound adcl add test cmp test mov xorb dec mov rcr xchg js xor scas clc pop add fdivrp cmovp lock xchg jmp lods mov cmc repnz sbb cwtl add sbb outsl add fs out dec and imul adc insb ds adc int3 sbb hlt add cwtd in xor les out inc fmull add jg ret xchg mov repnz hlt in lahf jmp pusha outsb pop notb xchg add push xchg test jp cltd pop mov int dec xchg sub aad mov fwait enter movsl push jl push dec push push cwtl aam add loop jecxz mov imul and stc jp leave push or cmp sar stc push hlt push out pop cmp and testl cltd mov and ret push adc jbe rolb andb popa and xor add test idivl sbb mov jb movsl xor sub fdivr fist test shrd cwtl shlb mov cs xor push add lahf mov ljmp sbb jns,pt cmp adcl and jmp loope and jge ljmp push call (bad) and mov sbb sbb mov lods test iret loope dec add icebp orb pop fcompl pusha dec sub das add push sbb dec pop ret adc xchg nop push cltd pop dec cmpb xorb mov das loop mov movl arpl add test movsb xchg xor call cs or pop adc add sti sub mov lock push mov xchg pop adc xchg mov add xchg add out add sbb inc add mov es sbb loopne enter cwtl ret cmp push rcll add xchg dec data16 pusha cltd mov jae inc lock lcall push adc mov adcl lods and xor lcall inc iret lods add lcall add adc test (bad) lahf and add cmp xchg and sti test inc lcall dec cwtl add pushf cmp (bad) mov push add xor aam adc mov mov sub pushf out pop fwait ret lods out push js add push das rorl push mov mov sub nop lret rcrl mov xorb ja call fwait out pop adc test cmp sub sub aad push jae push add or or or and jle dec mov pusha adc xchg sbb iret loopne clc sbb pop or xchg lcall mov clc or (bad) dec push inc adc add push mov adc lcall cmp fcoms sub cmp mov or lock xlat rcll rorb pusha jmp mov mov int in arpl pop inc jo mov pop mov nop test mov push pushf push int inc cmp out nop and sahf sbb call out xchg mov sbb hlt int3 rcll paddq int (bad) ss aad and movsl cwtl sbb cmp jle mov adc test jmp lods xor xor sbb xchg push por or xchg aad or fwait cmp sub mov push inc call les sbb rolb ds sbb mov xchg pop test and in jno sha1nexte (bad) fwait int adc sbb sub mov sub pusha enter and jno rcrb sbb mov sub iret fcoms nop xor jbe dec in imul sbb dec and mov adc lods inc cmp scas xor mov push add inc les push add mov pop xchg add pop mov out nop rolb leave ja push jge lret add adc add int3 add jmp pop xor das xor sarb xor push gs imul dec pop cltd aaa loopne mov pop pop adc jg pop xlat pop mov fsubp rcrb add ljmp test xor dec xlat out subb push pop mov xchg cmp and lret mov add jns mov add xor and movsb cld and pop push mov or mov mov cmp add cmp sbb adc jne or fucomi jmp add mov add add (bad) xchg (bad) les addl sbb xor mov sub in cmp test call enter or add movsb jp dec sbb push xchg jne add loop dec add xor out xor mov cld mov push adc lret or (bad) pop into cs add incl inc int and mov lock add and mov mov loop or icebp inc enter dec negb lahf jne rcrl lock jg xor push aaa mov adc xor cli lahf inc test add pop repnz push jns xor mov out and add pop (bad) xor dec add fisttpll inc popf jg decb test cmp adc xchg add push xchg jae add fnstenv (bad) nop sub enter sbb (bad) imulb popf add jno es jp or stc jecxz insl pusha xor rcl sbb enter xor pop mov push test mov fsubr inc add jle lahf sahf cmpsb add movsl je cmp inc lods and adcl sub (bad) imul mov push jne mov mov icebp dec leave std insb and or push addb push sub mov jno aam or rolb inc sub inc mov jbe ja pop insb pop push hlt nop jle fdivs sub mov mov stos test add in test dec cmpb mov icebp and add sub cmp sahf mov inc and dec add mov movb dec cmp dec jl lret insl idivb gs loopne in and (bad) mov scas test stos sbb pop popa inc ret outsl lret into call inc dec push pop and inc faddl ds dec int lds sbb (bad) add clc sbb pop and or mov hlt addb repz cmc test sbb add sub jecxz cwtl scas jp jp add push jl fisttpll enter lret shr aam add push (bad) movsb push adc jge sub add xchg (bad) in int pusha hlt add lds and out pusha arpl dec je rolb cwtl adc or jge add mov test out repnz sub loope xchg je (bad) fs add repnz fdivrs push (bad) movsl jno icebp ss and dec jl testl outsb cmpsb pusha mov dec repnz cmp dec jo jno cmp hlt add xor lret cmp adc nop dec out aaa jl cmp push lds jnp sub and xor out mov adc (bad) or mov push ret into fisub xor ret dec or daa (bad) sarb xchg push das pushf sub outsl push pop pop enter popa xor loopne movl cmpsb pop nop ss add sbb push xchg push repnz je cmp subl test aas shrb sbb jno int3 ds mov pop (bad) pusha dec dec les pushf sbb test lock les add aas xor outsl (bad) int pop cmpsb push (bad) rorb mul push add pop push push mov ja or lock out add push in fwait imul add inc cld out pop adc pop add dec or lcall sub pusha xor scas out pusha pop mov sbb sti sbb inc movl test or imul cmpsb xor xchg and rorl (bad) and mov mov push jno mov test pop or pop sahf insl in cmp pop lea loope add sub cmpb pop int3 or jmp jae add out rcrl ret mov push movl ret lock add xchg insl add inc cwtl (bad) repnz and and iret roll add pop bound adc push ror cmp cmp inc leave or add push les dec roll lahf adc (bad) mov mov cmpl inc bound shrl pushf scas decl add push adc outsl in fwait add sub or popf add rolb test mov out in fwait insb fcom jl jne add add imul adc sbb insb ret pop imul mov cmp sbb outsb lret sub sti mov scas nop pop dec sub jns subl or xchg int3 adc and add fsub push sbbl add (bad) ljmp test sbb in and push data16 movsb push cmc mov sbb jo loope bnd mov repz jns add int3 mov in pcmpgtd mov test mov arpl (bad) jbe jne mov loope inc xlat (bad) or add sub cmp das add jo std shll jns (bad) xor push rcrb aaa test add jbe scas vmread addb mov rcl cli aam mov xor mov xor (bad) jo cmp outsb pop cmp jno sbb cmc arpl fistpll ds aas scas loopne dec lock add ss dec pusha dec (bad) call xor sbb jecxz sti xor (bad) jmp add or or rcl popa movaps xchg cmp jge pusha dec into sub cmp ja add test sub cmp dec lods jg out add xchg (bad) test rolb (bad) cmp cld and cmp jp jnp mov rclb xchg sbb mov push roll addl shrb iret mov dec rolb jns add push mov cmpsl add mov frstor adc cmp cmp dec adc xchg repnz add xor mov add test sbb ret fisttpl adc or mov cltd lods jecxz jno sub and push out inc test subb or pop repz pusha clc and mov adc mov add es mov or icebp dec std push xor fldenv enter int3 add and cmc jae add and add pusha cmpl mov call test cmc in pop mov mov rorb cmp mov and add mov outsl sub icebp xchg repnz sub std and xchg (bad) or push mov sarb lds repnz adc mov faddl or add xlat clc mov add sub xor imul pop mov xor mov jge and sbb add cmp cmp (bad) inc rcll mov push stos sbb pushw addr16 or test xchg ja repz add das mov jbe push add outsl lea adc in inc jl subl mov icebp out adc and xchg les inc mov dec (bad) mov add (bad) cli adcb aaa add fdiv jg cwtl cmp cld cltd fs and jae and add or cmc and loop add cwtl sbb sbb inc call shrb test and rorb or xchg (bad) loope je adc fild popa in repz sbb pop mov xor mov push cmp sbb add and mov push lock stos (bad) mov test lods popa push je adc shl pop imul xchg adc fildl cmpsb mov icebp das pop mov adc add lahf mov mov add neg lock pop dec js add (bad) sarl addr16 or jmp dec rcl clc les call shll scas shrb mov and push xchg lret sub movsl fbld mov and xor cmp jmp rcll add add roll jl add rcrb cwtl and xor call ret and lods fs jle xor movsb adc out mov jns push jl and (bad) nop mov in cmp add jns in repnz sar add xor mov inc gs shl xor inc add or ret xchg movsl popa loopne and repnz jg push jle cwtl xchg rolb inc xor pushf ret jo xchg aam lds dec mov xchg mov in rcrl xor cmp (bad) mov addb aaa dec aam and cwtl pop add js addb xor leave out test add inc sub sub sbb cmp insb lock pop push inc and aaa jo dec imul jbe enter dec lahf jp fbld xor pop aaa pop jle insl and push call push mov inc jmp adc cmp and jmp adc or ffreep push dec add add jno sahf or (bad) adc adc popa add cmp xchg sub shrl add pusha adc xchg and data16 sbb daa mov pop repz and sub mov adc add xchg cmp sbb fiadd (bad) xor push and add or sahf mov inc pop enter ljmp cmp fnsave mov add aad insl mov sub cmp jg or mov pop popa dec shlb mov xchg xor adc sub push test pop test add insl mov pop icebp and sub neg (bad) js in dec popa and sbb add push bound inc jb sub sbb (bad) lcall dec push jg and dec (bad) xor or mov outsl lea and aas and orb or decb sub sbb cld xchg subl addr16 or pusha nop jmp push and outsl movsb adc mov (bad) mov out cmp cmp add (bad) pop lret sbb fwait shrb mov jo icebp dec mov mov movl add and repnz rorb loope adc (bad) xor pop jae sbb shrl pop pop fsubrl incb jbe push inc shr imul gs movsb sar movsl jg add sub mov test imul xchg adc gs sbb fdivrl dec and ja aad cs mov in pusha xchg repnz ljmp cmp cld sub pushf jo fcmovb dec ds inc cli mov icebp bound daa fstpt sbb es and sarb aam imul lret add mov fwait repz xchg dec adcb test icebp bound and in loopne orb sbb test clc jae add jbe pushf add ss add repnz cs adc daa mov mov mov adc add sub clc repz mov lahf add shlb inc flds dec je sub js jmp stc insl bound mov or lds jo pop out scas push call mov mov ds pop add mov add pusha or adc in add jae je cmp shrb and mov repz xchg adc push pushf adc testb ss and je insb inc (bad) repnz cld dec out push cld push xor and (bad) icebp inc in cmp andl inc cmc pop adc mov pop adc dec in inc or je or arpl jae js test and dec sub add xor lock test movsb rcrb adc adc test faddl mov rcll jns mov js sbb and sub into clc int loopne add mov inc mov lds add fs push jg or fbld cmp les andb add sub nop push pop scas mov pop cmp pusha mov int3 cmp rorb or add jp sub mov cmp and pop jp icebp push into pop jae mov jae or adc (bad) pop xor add and in test mov aam push (bad) jno adc (bad) adc out or or cmp and xor imul test push imull add cmp mov in mov in cld je cmpl add fnstsw mov repz push pop mov and or pop jnp sbb test es (bad) js in push dec bnd rolb inc add nop test jns mov push cmp (bad) repz movsbl movsb jb xchg add xchg and pusha add aam imul pop lods adc add xchg push add mov cli lcall pop insb pop loopne decb rclb pop xchg (bad) fsubs mov xchg add dec adc pushf add ret xchg std inc cld push sbb dec jbe aaa icebp jle add sbb xchg fbstp lahf in lock xchg fbld sub pusha addr16 or cmp (bad) fptan cmp cwtl mov jecxz mov cli pop mov in add lock int cmp test cmpsb adc jmp mov lock (bad) add mov adc stos sub sahf lods add pop nop outsb dec cli add icebp push pusha mov and scas pop iret (bad) xor lds inc cmp inc sub adc adc dec lahf push pop pop xchg nop enter test dec test add pop add sub repz dec xor and mov repnz mov add jns andb shlb or and fild sbb dec fiadd jg jae insl jne xor fwait incb cmp push sbb pop test add xchg (bad) bound aam mov mov lahf sub xchg jno and push add pop dec xchg xor xor pusha (bad) nop lahf icebp sub fimul pop add push and and mov xor pop or lock subb loopne xor mov jo xchg aam mov pop popf push out ljmp xorb xchg inc lret jle add shlb (bad) xchg and mov daa xor jmp shlb icebp outsb dec add lods mov cld mov call rcrb xor leave mov mov push mov add fiaddl gs pop (bad) mov shl ret cld sbb mov add inc popa repz add ret mov clc ja verw push xchg xchg adc inc aaa dec ljmp shrb push ret aaa repz fstpl dec into xchg add add insl cmp sub pop pop or cmp ja jl push add enter or fcmovb push popa cmpsl rcr inc add sbb and iret loopne cmp add or cltd shrl xchg dec add enter xchg add sub adc inc cwtl pop mov fld pop jle push add scas imul rclb jbe sub int3 add imul iret dec adc dec add jecxz jmp out sbb add ret loop or in loop repnz out fs mov push adc push adc inc mov inc sub (bad) imul xchg and fldenv test fnsave addr16 or jbe and add data16 add lods subb and jbe dec int3 lret (bad) cmp bound jo mov lea jg mov jnp xor rcr jno insb fistpl iret hlt popf add cmp (bad) mov mov push add punpcklbw lret fwait sbb dec sub (bad) or inc push fcmovnb gs out and adc loope mov jl jmp rcrb add roll or mov js push xor lods inc pusha add adc cmp xorl mov xor sbb mov inc je pop int3 aaa inc jg add hlt lret repz add and sbb add movsb dec sub addl fimul jno in mov add dec lret add add push sub add cmc mov sbb std add inc dec mov add fnstenv sub es lret repnz add add cmpsl loopne add pusha loope pusha jns out inc dec pop imul out test jns (bad) mov cmp enter out cmp movb popf mov (bad) add or push lahf inc jg sub push add adc inc sub xor cltd mov cmpsb xchg mov (bad) xor push and jbe and (bad) jns insb jp mov ret (bad) cli and jmp cmp sub daa outsb push jns cltd add sub xchg mov sbb mov pop xchg mov pusha out push movhps and clc and xchg adc sbb lahf test jg std in add faddl and cmp outsb stos pop xor push pop out lock cmp jo into mov sbb rolb loopne (bad) scas shlb adc cmpsb (bad) lods add enter add mov loop adcl shl inc mov daa push aad xchg add out sub add leave in dec lret rol push push neg add (bad) add cmp push enter punpcklbw cli xchg sbbb nop xchg aad add push fidivr mov add and clc (bad) fs insb adc dec jne push cmp cmc add lret mov sbb inc pusha jae in push ljmp pop add in pop ret sub lret sbb ret mov call scas mov insl push cmp cld ds mov push pop adc or insl mov adc xchg add push xor add cmp xchg xchg repz mov lock mov orb arpl xchg add test int3 add ljmp sub pusha sbb in das movsl pop shll fdivp cld movl iret fisubrl repnz jmp and sub add adc popa add mov add pushl (bad) ret lock add sbb cmpsb adc ja cmp dec pusha add dec mov mov cmp inc and lds add (bad) sti les cmc ljmp add repz rolb adc loope cli adc les sbb mov jnp cmp (bad) push aas jo mov push loop test ss xor je out and push pop add mov xor ljmp rorl lods sbb mov xchg fldl hlt loop daa aad add mov sub (bad) stos cmp adc xor xchg inc inc xchg rcrl push add ret cld add ja (bad) cmp (bad) es lcall sub jecxz fiaddl out add inc mov add push lods cmpsb inc bound out add mov cli fstl mov aad adc test rcr jnp das lea call mov sbb lcall lret aas adc cmp add cmp daa jnp add cs shrb test jmp push or adc cmp dec lods rcll iret xchg sub add xor nop jge rcl ret cmp leave inc out pop jnp fisubr inc cmpsb mov add test jns mov mov outsl add (bad) imul shll add cwtl jae sarl cld mov call add cld dec add lcall add cmp mov add pop xor sbb repz sub cmc xor leave sbb test ror jp mov add cwtl and mov jb cs add jnp mov aaa orb dec psllw lret adc dec sbb mov and pop (bad) pop xchg xchg inc mov lret inc pop or mov add das adc popa icebp jbe enter cltd idiv pop xlat inc cli pop fs out add dec pop aam and xchg cs mov jb sbb call push and sbb popf xor xor xchg loopne cmpsl add pop cs inc mov pop out add xchg sub fnstsw enter sbb push in and into xchg mov mov sub int adc add packsswb add in dec sbb insb sub rcrl (bad) pop push ja shll xchg popa dec repz add jne pop hlt ret mov xor push cld add subl push mov ja push sub jmp insl icebp sub add xlat hlt pushf add shr jecxz pop mov movsb jae pop subl inc xlat sub pop or pop (bad) jo aas leave scas sbb dec in jae inc test add add or adc into cmp xchg pop cs sub xor add add in ds in add sahf mov pop je,pn add mov add sbb jae mov lods and fidivr cmp (bad) xor lcall add ret xorb sub lea xchg adc in or add or pop mov jbe xchg movsb add push (bad) jb sbbl push xor sarb sbb jae dec and dec icebp cltd push cmp pop imul shrl mov mov pop jle shl in mov pop pop sub imul movb jae popf inc mov push push add rcll mov mov push addr16 cld xchg mov jecxz add repnz add andl push add cmp add pusha cmpsb cmc xor mov adc pop ficom jl cs pop add pop xrelease inc (bad) adc cltd int add lock lock popf int3 jecxz mov in adc mov mov mov mov mov and mov sub sbb fwait jg fsubrl cmp add xchg add int add mov dec add jae andl cmc addr16 cmp fistpll pusha xchg clc jno int pop add jo loop jmp xor mov and cmpsl add mov mov xlat inc sbb test dec fstpt jne cmp add movsl inc xchg loope andb fwait icebp flds jno push sub addr16 rcrb push pusha je je add push pop sub ljmp pop and mov out or pop jno std sbb inc adc jne add mov or xor push jecxz inc add xchg loope adcb aaa popa jae fucomip arpl test rcr and mov loopne mov out sub inc dec xchg xchg add out mov adc cwtl pop add sub add add dec dec dec add push sbbb or add push pop jo xchg ja sub hlt sub add inc sbb fwait popa xchg testb das jne pop push sub mov imul add cmp jle insb jne aas mov jg lods add push stc mov ljmp add cld stos pop rclb inc andnps add xchg lock popa int3 mov addr16 insb xlat jp push push ds jo mov xchg daa add and mov cmp jo add fildll stos push mov add notl lods sub push mov lds sub mov add js inc lea inc push int3 add mov fst pop add mov push xchg add insl stos push pop jbe loop xor cmp sub loop push loope or and (bad) adc addb (bad) push stc dec aaa cwtl lods je push loopne test inc or adc adc sub sub and insl add adc nop add les mov or inc jo dec fldl pop icebp cmp inc xchg leave iret sub and dec mov add sub popa mov cwtl add mov pop cmpsb je pop xor and mov and inc mov cmp sub push loopne xchg arpl jp jle xor int jne cmp adc sub icebp orb mov sub cmp sbb cld mov imul add repz out mov xchg add clc xor pop or ljmp int3 popa jo mov add mov cmpsl add fwait pop mov scas inc push adc test xor add mov mov mov cmpb fidivr add lcall xlat js lahf sarl mov cmp inc dec dec add imul pusha cmc cld jecxz add and sar roll arpl cmp add test mov mov push rorl (bad) (bad) sub adc add lea int3 lret aam add ljmp fsubrl adc int mov rcll inc sbb (bad) std (bad) in sbb into push loopne lahf pop cmc sahf adc (bad) pusha outsb fistp mov add nop jne xor ficompl pusha add xor shll and insb add add mov movsb adc outsl add sub ss push int3 movl dec push and setle jne add add jb xor (bad) stos jg xor sub mov pop enter cmp jbe sti xlat mov scas pop test rolb inc pop nop xor pop dec and jl add xchg push rorl cmp in add cmp push and mov cld push fwait roll add xor jne sub pusha inc inc aas xchg fbld mov movsl out aaa pop lods add mov and sub in push hlt popf shl (bad) jg enter (bad) popl lret fstpt mov test int xchg mov xchg bsr mov mov nop adc dec test cmp xchg movsl add mov mov add ds inc mov int adc and push inc fsubp ja xchg js add push and push pop fisubl or lahf inc inc cmp ja pop loope leave (bad) cmp push add scas insb xchg nop mov jnp sub pop fsubs xor jmp mov add or fiaddl dec push test out add xor cltd and addr16 test fs jne rcrb sub push or outsb and loopne aam xchg nop add aaa and insl add insb (bad) jbe inc add dec in shll imul jl lret sbb dec cmp call (bad) adc jae add push xor test jns add or les lock popa cmc pop add pop xor ja sti add fisub sahf mov out in std cmp inc cmc or sbb adc (bad) fsubr jbe lods add sbb mov add pop fldl push mov insl xchg mov aad rcl xchg add dec loop or sbb clc aas push or add xchg push roll mov mov and daa lahf fstpt cld dec push add add dec icebp add xchg jecxz cmpl movsb cmp lcall xchg cmpsl jmp cltd (bad) mov ds in rorb lahf je jmp cmp add xchg repz flds ss mov cltd pop out loopne mov and add dec and in adc (bad) repz imulb adc add or add xchg pop ret call inc nop adc pop loopne inc add mov pop jecxz scas pop jg xor push daa add adc jle add cmp lds jae push enter add pop cmp mov xor inc sbb add call mov rolb add in adc pop data16 cmp mov out lcall rolb scas mov test and loope outsb dec js data16 or loopne xchg lock adc rolb pop insb fcoml das sbb adc call cmpsb shlb push out add cmp and adc and add ljmp call ret jbe mov push addl sbb adc pop add and fs cli popa sbb or fwait daa xchg xlat push mov test cld lret (bad) cld cltd add dec aad aas sub jo push mov cmp jg mov test jbe jnp cld push mov sub sub repnz repz lock add ss mov fist mov xor add mov cmp sbbb ret adc (bad) std cld nop loopne lahf enter je movsb push imulb push or push ds pop dec or nop xchg insb ljmp xor push fimull rcrb mov add sbb pop ficomp add mov (bad) jns loopne jne ret xlat jp out mov popa aam or push mov lea sbb fs data16 loopne xchg icebp sbb subl inc mov scas add xchg outsb mov xor push scas cltd lods cld aam adcl scas jl icebp rcl xor mov jne push dec dec xor inc (bad) (bad) into shrb pop shrl pop loopne sahf mov adc repz imul jbe sbb pop cltd add rcll loopne or testb xchg or push lods negl cmc mov xor loop (bad) and stos adc add fcmovb sub inc call loopne sar inc ss ds xchg add (bad) out stos call fdivl mov cmc fildll mov push cmp push dec or jl add dec aaa lea cmc test jo in add sbb es pop jl add inc or xchg flds sub pushf add dec mov or or add mov add jno fmul mull scas arpl xchg xor cmp or imul mov (bad) push lcall lea cld fistpl sarl addl nop int int3 add jg stos add inc ret mov add outsl add into or pop (bad) mov addb out jl pop and sbb lahf aas mov pop int xor mov add push cs xchg lods add jl adc or movsb pushf jb ret inc data16 arpl (bad) std int3 mov xchg enter inc lods pop xchg je (bad) call pop fimul adc xor cltd movsl lods clc aad or and mov scas mull dec xchg mov xor nop sbb inc stos pop jp dec loope pusha adc out sbb sub adc lahf jle xorb xchg xor les and sahf lds pusha sarl pop push or xchg or pop (bad) mov jae pop mov ret xchg scas rcll xlat jo adc mov mov cmp jmp insb add xchg mov xor loope mov mov icebp jecxz sti adc push mov mov test add dec sbbl xchg in inc lock int pop add mov cmc push lods dec stos in add push (bad) cli outsb add (bad) pop mov dec pop sbb mov jmp add xchg bt dec imul xchg movsb std dec loopne roll mov mov add mov mov sub push cmp push cmp jl xchg cs mov decb adc in adcl mov stos add lock mov xor movsl sbb xor cmpsb pop or es mov xchg test in out dec dec xchg xor sarl fild insl sbb push adc mov sbb notb inc mov (bad) aad pop jo add sub arpl adc add shr loopne cmpsl and dec dec xchg (bad) mov add and cltd outsb dec pop add sti mov test add jg aaa movsb mov (bad) hlt add insl add mov cmp add push bnd das (bad) add sub clc push jp jle bswap push shlb push (bad) mov mov jp mov push cmpsb inc inc adc ljmp dec mov loope std lcall loop or aam jae push mov data16 dec outsl sahf loopne and (bad) repz add and or push lahf add fisttpll ss pusha jmp sub bound xchg add push je nop rcrb sbb (bad) xor sub (bad) sti add jg sbb leave mov roll shlb pop outsb hlt ret pop cmc add test push add jae xchg xorb setg mov push outsb loopne push enter add popf xchg test add mov inc cltd or insl dec or add mov lret and aaa sbb sub adc cwtl aad pop add cmp pop in sarb adc outsl push iret dec lds loopne mov sub rclb loope cmp jns add fadd pop lcall js and jecxz jnp fsubrl add adc add popa lret jns push or fisttpll add lcall pusha out jns inc push repnz test xor aas adc mov ss jg add cmp sbb sub mov xor xorb xchg add stos xor addr16 jb add push adc sub jnp repz sti or and add gs shlb cmc js push pop add jno lds outsb add cmp push push add mov out test pop or and jmp cli psubsb rcrl xchg inc test jae mov push mov pop or and mov pop and add add mov je sbb nop inc das int3 adc leave cmp add js cmp jns test fwait mov sub orb pop cmpsb ret sub xor add or mov mov idiv out jo sub add sbb cli mov xor hlt mov cmp packuswb pop stos add or or sbb clc outsl dec mov stc pop pushf aaa divb add xor push pusha or or or push mov xor add int3 ficomp cmp fbstp notb insl cmp add imul pop mov pop cmc cmp sbb outsl lods add xlat sub cmp ss add dec push rcll cmp pop xor inc push dec jno test popa and ret pop fucompp jb out and mov out add out add xchg ret stos cmp mov popa pop xor sbb jns add flds das bound xor inc adc inc test dec subb (bad) pop cmp mov mov adc push add lds add xlat add imul fsubrl jge mov jp add imul sub mov aaa cmp mov repnz add pop (bad) push testl lret ret add cld orl inc mov movsb add loop lods jge fisttpl inc add mov adc lods dec xchg ret jo pusha js mov add repnz add fs add cmpsb mov or jb fldl fnstenv add js mov mov sbbl test sub mov cwtl and push pop out in pop (bad) ja lret jge jmp pop (bad) pop lcall stos das mov aaa inc and je insl mov mov jo int xor nop imul add add outsl mov xor cmp sub xchg mov adc (bad) and subl popf cli cwtl cmc mov xchg push leave push inc and lret push mov dec or sarl add sub cltd dec add sub xchg or test xchg verw ret cmpsb cs (bad) repnz cmp jo xchg add iret lods pop lcall dec mov sbb sub dec mov ficomp sbb dec mov cld push add out or xchg xchg add fadds loope hlt cwtl add inc jnp inc rclb add xor aad bound loopne add daa xorl insb push add add add in test leave push cli in jecxz loopne xor fwait icebp xchg jb das pop add xor cmp or leave mov addl inc pop xor dec push pop mov aas les add mov pusha cwtl ss lret scas fbstp inc pop inc cmp add push stos add test inc out dec adc clc in add es jl add (bad) in sub das add push in dec cmp jne mov xor add xchg clc shlb mov xor std push pop cmp addl rorl and arpl mov addb xchg rolb gs dec push popa add push das xchg push inc cmpsl dec adc xlat je ret cmp das pop movsb mov cmp int3 mov cmp stos mov add mov push ja ret orb push jnp les xor mov shlb xchg and adc mov jb add sbb test movsb scas pop add mov stos in mov ret and sbb push insb add mov sti push add xor loopne or push add xchg callw mov cltd cli cmp clc mov mov add jb aaa mov dec popa add fsts cmp dec hlt add aam pusha pop cmp mov add sbb and dec aad bound adc push add jge mov loope enter adc (bad) pop (bad) xor shlb add in insl dec ja pop jo into push rcrb in fdivrl (bad) xchg inc mov sbb sbb add adc jecxz icebp jle xchg in aas cmpsl ja push add int3 mov stc add xchg jne andb push adc rorb xor jle add loopne rolb mov sub sarb or in fbld sub xchg push test xor add (bad) add mov or mov scas add mov stos sbb cmp in adc mov sub mov int xor add mov mov test mov ret and movsb nop out mov cmp fsts add shrb lea icebp add in popf nop xchg xor (bad) call hlt test in xor push add mov insb add ss pushf cmp nop lcall clc or int3 lret sbb add mov sub test or push js ret xlat mov pop cli andb out sub sar jne jo adc jo pop es adc pop push movsl sub and imul adc add pop cmp out mov adc roll pusha xor cs adc sub inc push adc mov dec add push insl std push pop pop enter pop mov sar jecxz xchg mov add lret inc lods push cli cmpsb pop jne pop cwtl mov mov rcrb adc add insb lret xor je and inc lahf jmp push jp cmp dec enter push add or mov xor std cld lahf sar and add pop mov xchg syscall mov add sub rorb sub movsl jmp pusha add xchg and add adc mov ss cld loope (bad) jno cmp insl add out fadd push cmp mov hlt test outsb add scas popa pop sbb mov lods jmp wbinvd add arpl cld xchg out inc pop sbb cwtl sub pop inc and jae sbb mov push xor add xchg fadds les std subl icebp cmp cmp add aam add lea jmp pusha iret and bound xor clc xlat cmp inc bound cmp rorb sub and (bad) std xchg mov xchg fdivrl cmpsb dec adc dec pop test jae jmp jmp add rolb sub or or dec das aad mov test cwtl jno pop jo daa and mov sbb cmovae pop mov fldenv sbb push lea inc test repz setns call add push pop gs nop inc add push repz sbbb nop pop (bad) test fildl jp cwtl fild jle into ds in inc add loope add cwtl inc jno fisttpl push xchg ret mov sbb jb roll fcoms test nop in cld aaa jb mov pop insb sbb jo pop mov in rolb cmp loope rolb xorb fnstenv outsl imul jg or sbb popa aam cld insb das cwtl sbb jl pushf xor adcl xchg pop pop fldlg2 xchg fild inc insl test into ja mov sbb lock xor (bad) ljmp add jnp jne (bad) cwtl and push std and or cmpsb imul enter andb mov fs add mulb mov aad add sbbb fsubs fstl mov jge add fistp shr in lret sahf xor and iret push clc mov mov pop xchg mov adc enter lods cmp mov mov jmp int and mulb cmp rorl outsb hlt stos dec outsl jbe loope push orl inc adc sub or inc jecxz add sarl insl jge add add adc and pop popl mov incl dec mov inc fiaddl add std roll sbb mov sub jecxz or mov push inc adc ret cmp outsb xorl aad mov ret push mov push push mov pop xor and xor out loope rcr cmp cmp sbb mov sbb lods cmp push dec movups (bad) push out out mov sub mov sahf loopne fwait pop cmp js dec mov dec mov mov add ljmp add sbb mov xchg pop or std push mov inc out mov sub adc ljmp and rcrl mov hlt fcomi jmp in je mov xor in mov andb add mov sub int cltd or add lcall inc push push add jmp xlat xchg add mov add jns adc call jge push xor add lcall add dec push cmp in test cwtl sbb push ljmp add iret je or or cltd mov sub stos ja mov add xchg mov je fist jne mov xchg push clc sbbl jl sub push pusha push (bad) jmp push and inc inc nop push add sub (bad) scas nop pop addb add loope or pop andb loopne push push jnp mov in mov jns mov add sbb pop pop pop daa cmc imul insb dec nop and jecxz int3 rcl lcall and jp arpl mov fidiv nop (bad) scas push sbb sbb adc mov inc insb xchg jnp sbb lock mov loopne out pop lahf sub into shl fidivr add pop push xchg dec dec rcrb ror xchg cltd inc std jne inc imul insl jecxz add lock lods mov jnp add mov jmp aad lcall dec mov mov add outsb jge pop data16 pusha fdivrl loopne enter cli daa aas stos inc adcl mul loopne sbb jl movsb add mov sub push add sbb leave and addb adc push fs mov inc jg cmp jno in xchg outsl and out leave mov cmc jecxz testb sahf idivl enter inc rcrb test addr16 or lcall test (bad) sahf dec push fsub inc flds adc mov daa push jl push cmp fdivrs push push pusha fdiv outsb add iret cld cmp add push stos inc push test aaa jo xchg inc loopne insb add rcrl pop sbb aad rorl push dec jns or dec lds xor add jmp mov pusha xor (bad) mov add sti fiaddl inc xlat adc sub pop add call or mov push pusha jl push push adc jbe stc push mov mov lea loopne popa out adc sbb rclb dec cmp test or add dec in xchg push xor pop lret mov add fbstp in xor push js cmc inc add add xchg hlt adc add mov dec add jle xchg jo add scas cwtl cld add pushf roll lea sbb add adc addr16 add pop enter jb insl (bad) mov fldl lret stc pop sbb mov push sbb js fsubrs xor mov in cld inc fldl call out stos not pusha pop mov imul mov call insb pop dec loopne aam pop and dec or jl jg add bnd pop stos or xchg pop shll movsl push jge mov cmc pop loope add adc jb sahf inc aas add insl inc fimul aad pusha jge pushf out xchg xchg sbb pop add inc inc push jmp push and add push sarl lods mov cmc sub lahf rorl push js or mov jmp lea scas push add sub xchg dec cmp dec outsb std add jno je inc add sbbl add stos jmp fidivl mov imul add sub push add dec punpcklbw jne add xchg jmp inc rolb inc add mov push jbe outsb sbb dec mov sbb sub jbe out ror dec add adc pop xor lret cmp ds rcrb pop clc pop jo loopne pop jnp stos sub addr16 add mov jmp inc pop das aas sbb clc rcl arpl dec add (bad) push jmp pushf xchg mov int in es inc leave les push adc add jecxz ljmp pop rcr xor in mov fisub dec add inc test les jge clc sub cld rolb fstps mov pop push add add jns pop mov cwtl insb add inc pop mov mov add mov loopne les ds sbb es mov mov push inc push jle mov jp std xorl mov mov ss pop (bad) movb repnz dec mov pop mov add fistp stos mov or sarl push test and je cmpl bound arpl fwait xor popl enter xchg ds mov test inc or cmp in pushf loop stos pop arpl jl lret dec test loop fildl rorb loope pop shrb push (bad) fucomip dec sub xchg in sahf cmp xor insl mov add push mov jp pushf in mov inc aaa add mov ss xchg sbb or in mov addb lock xchg ret pushl les (bad) cmp push ret (bad) pop or loopne lods nop sub imul sub add sbb inc add dec lock jae jp fmulp nop imul mov sub fisub shlb add test sbb push daa roll jmp pop xor add mov xor dec std scas movb and and imul lahf pop inc cmp jp cld push sbb lahf cltd in add leave shr add sarl dec jo icebp int3 inc jnp shrb mov add mov jae cmpl scas popf push int iret push xor add mov mov sarb or and add mov sbb xchg loop sbb add mov (bad) mov and (bad) mov mov out lcall daa or xor xchg push addr16 cltd fstl addb jnp push (bad) iret js mov and inc xorb add aam adc mov add orl or add stos mov mov in stc (bad) icebp or add xchg push push add pop inc repnz mov push or andl add pusha out lds int3 aas cmpl add pop repz neg add xchg hlt jne pop adc stc shrl pop xchg inc movsb inc ds dec add lods dec scas pop movsl fcoml insl jmp iret pop add lds push and outsl mov adc push or pop ret xor sub mov mov add mov mov lods vucomiss xor add sbb out ret in lret loopne in mov mov out mov and ds scas jge lcall data16 pop mov sub je xchg cltd add xor jbe pusha jo lret jbe or add mov dec jp les fldl test cmp jns ret sbb rolb sub push mov and fs outsl cwtl pop add pop adc and pusha fistpl jecxz xchg xchg fistpll jo ja,pt test aaa mov or push cmp fidivl push mov jl add adc out inc sbbb gs loop adc test cmp sbb mov icebp inc pusha das mov test add inc or shrl or dec or and xor insl dec push dec fdivrs call dec mov imul (bad) repz fdivrs xor adc (bad) dec mov cli stos push push cmp enter in add sbb add mov jb mov pop mov adcb sub add in icebp sbb cli add add icebp adc or (bad) inc push fistl inc push push add jbe add cmp and add std inc sub mov je add call sub lret icebp insl in bnd or jbe addr16 lods mov repz loope int3 mov enter mov in je sbb and test movsl lret hlt popf dec inc dec or fnsave andb dec test xchg inc add xor pop add lods and jbe or mov push cltd js add add in cmpsb cmp push cmp sub leave ret or (bad) or jle stos adc jge,pt (bad) mov fnstsw add sbb xor jbe lahf add je xor pop adc pop lods fdivs enter and je js sub push jbe mov add cmp hlt aaa add mov dec fwait or (bad) jae addr16 cmp les adc push repnz pusha add push scas jle scas jmp jge ffree cwtl add loopne fsts push popa xor mov in pop add mov imul fist mov and ds (bad) mov popf xor sub pushf xor push push mov loope outsb (bad) out loopne idivb jne sub lahf and xor outsl adc sbb popa popf nop pop test ljmp lds scas pop adc (bad) mov xor out adc jno or jmp nop mov les add stos fwait adcb mov push or fdivrs inc fcompl or cld lods or sbb dec andl sahf and jo int3 into mov or dec stos xchg (bad) (bad) enter out xchg xor sbb mulb pusha andl addr16 push xor (bad) adc loopne insb stc dec cmp cmp push movsb xor sbb test into add xor pop dec fcmovbe movsl cmp into add ret or mov pop sarl loopne sbb push roll sbb mov inc add aam mov lret fisttpl out or test inc bound inc pop andl aam mov sbbl out sbb fidivr shlb loop xor insl pop pushf or loopne test aam outsb lcall cmp andl and (bad) outsb or dec in push std jecxz loopne inc fimull sub test mov jno call fs inc xchg sbb fwait xchg jo xchg pushf jo adc movsb or insl add es ds sbb or mov sbb out jo sbb fcoms jmp jo inc movsl in bound sbb seto push push or mov or push and icebp mov pop dec jbe cmpsb sub and je clc sarl add in mov ljmp xor pop add mov out scas or adc or xchg lds mov lock enter mov repz rorb mov out xchg stc cmp daa out roll test in pop lahf or adc int jns inc and into in jb push xor pushf xor mov add mov sbb add xchg bnd add inc enter jp cmp mov rcrb lret flds lcall push xchg daa or dec and sub lcall pushf xchg movsb mov into or sbb (bad) cs xor or mov add adc pop test test pop push (bad) adc pushf fist fdiv (bad) hlt lret outsb pusha sbb sahf add fadds lret dec push orb rcrb cmp ss and inc jne fsubrl jnp dec cmp adc and lock push fadds cmpsb lds cmovg push (bad) out movb adc cwtl adc cmpsb mov pop add int3 sub cwtl jl push pushf xchg movsl and adc mov test xor mov push add out sahf push fwait adc mov sbb jp clc mov xchg clc pushf add mov xor mov mov xor inc mov xor add ds push inc insl pop add mov inc mov or cmp add mov dec jle (bad) mov push mov mov mov cmpsb and cmp mov add cmp popa dec pop cmp mov xor cmp cmp xor and nop add popa inc jne es jbe or insl mov in popa inc int arpl xchg ljmp rcll mov push das push movsb sbb sub jp jo mov jne sub repnz dec into pop add out inc mov in (bad) cltd cmp cmp test adc pop addl lahf aaa sub ds push call inc inc mov and sub or mov pusha or adc inc dec imul sub mov mov stos adc adc fucomip mov into jb mov push add jmp or stos int lcall jbe cmp shl es icebp xchg mov lahf push jb sub push and div or (bad) jns add scas les sbb repnz lcall loopne push push insb push sub inc loopne enter inc fistpll push push movsb inc or add and js push arpl xor sub cmp and sbb ds data16 mov popf pop mov xor push inc jle dec jp inc sbb mov jl pusha add shl into icebp push outsl mov pushf out add test repnz mov mov jo (bad) sbb pop jmp jge enter add cmpsl data16 (bad) int inc sub insb push fs mov clc inc mov ficomp sarb cmp or inc mov and add mov enter or xor orl mov mov pusha loopne aad dec in adc test test ljmp in sbb pusha xchg xor in jo or adcl add xor jg xchg jb test inc adc sbb mov fcmovnb pusha jle dec pop and mov push mov cli mov pop cwtl movb stos mov add xor mov dec stos (bad) pop daa and xor inc js ja outsl dec mov xchg nop mov aam aad pop jge dec insl xorb movb in jg add je fmuls (bad) into mov lods ds xlat outsb cmpsb inc sbbb add movl push in mov sub je jne loope pusha je in mov or (bad) cmc lea lret add push movsl inc mov add int pushf dec inc cld xor xor xlat aam dec iret xchg stos mov xlat xor adc fwait in imul mov sbb xor and or int test xchg movl and shll lcall mov int js (bad) das xor adc cld add add fldenv pop adc push add pushf shll loop fldt cmpsl xchg sbb idivb imul fisubrl push inc enter cmp notb dec sbb adc inc in add xor and sbb js stc dec lock rcrb or jne lods movsl add pushf jmp jo jbe cmp xchg sbb cmpsb cltd and and or cmp outsl sub push jo inc or sub int3 push fadds or xlat inc pop scas mov pop gs mul jecxz pushf (bad) popa push fnop xchg xchg pop and pop movsl adc cmp icebp sub sub inc add or movsb fwait dec push or iret test xchg mov shlb (bad) xor sbb iret pop test cmpsl test aam js add push xchg push jne pop inc je jo je aam add adcl xchg mov test rolb cmp push subl mov rcr (bad) daa sarl movl fs pop pop push xor xor jecxz pusha jo das int3 mov icebp mov inc jg scas mov in pop xchg iret adc xorb pusha push lcall inc cmp push jo lcall mov add xor clc ficom movsb push stos repz cmp xchg lock ja cmpl dec repnz xchg mov mov pop sbb addl es and pop pop mov int fiaddl add dec into sbb les (bad) pusha push pusha or push arpl pop push loopne dec push and dec jns pop push stos nop mov mov xchg frstpm(287 push cmp and push mov fs cmp add xor xchg mov xor popa stc pop sbb jmp repnz add adc xchg mov pop mov sub cmp mov add movsl cmp and jne and cmp xchg cmp hlt pusha fs cmpsb aam pushf scas aam and out imul or pop and xor pop add mov mov add jmp sbbl mulb out push mov push add loop arpl (bad) sbb lock jle add (bad) loope add xchg int (bad) mov lock mov cmp xchg sbb push and add (bad) sbb pop lods inc push cmp push ja mov rclb xor das sbb push and sub mov xchg pop push mov xchg jne in pop add mov dec rolb sbb xor aas movsl repnz lea sbb and fadds pop imul inc add in sbb mov add test call sub adc dec (bad) mov cmp addb inc inc shr jno jne add cmp les into inc flds push push imul jl test ficoml lock or add or push rorb adc xor and inc push dec aas mov push xor repnz loopne sbb push adc or pusha or or mov movsb or inc ja add push loope rorb jl dec xor add std nop mov inc test or xchg repnz and dec xor sub push pop jl add test xchg shrl std cli cwtl or add jne loopne cmp inc test ljmp mov mov mov push mov in gs push fisubrl sbb cmp inc mov inc lods jnp ds add fbld decl xorb add and xchg sbb outsb push inc sahf js sbb add cmp mov xchg call nop fs xchg pop andl and flds es push mov xor add mov enter cmp jno cmp push mov fs push lret pop inc loop fist add mov jno pop sahf loop add nop jl test aas add clc imul in adcl sub dec adc cwtl scas mov cmc mov jnp cmp insb or or js adc xor xor push jae add jno das adc dec dec in xor or test je xor dec add mov add (bad) idivl movsb add and xchg dec adcl mov xchg or mov xor or (bad) or and sub push add jae or std push test test sub mov icebp add jbe add mov inc subl sbb sbbl sbb ja adc add lds inc shll divl (bad) add dec jmp push xchg aam push cwtl fidivrl (bad) mov in cs sub jle or adcl fild out add mov nop mov shrb cltd xchg movsb push sub insb shrb adc xor xor fwait mov mov rcrl mov cmp das dec addl fdivr add add xor mov pop inc xchg ret mov dec sbb test dec inc shrd loopne test out sqrtps xlat fmull push cs mov test aam in notl and mov clc test (bad) mov pop add cmp mov pop sub stc jbe mov dec mov mov out and movsb int3 cmp jnp lcall js sbbb (bad) pop ljmp sub sub loopne push cmp cwtl sub push xchg adc sub xchg cmp or push ret cs dec fildl sti cltd sahf mov push shrb lea mov push popf xchg (bad) jo (bad) xchg arpl adc ret push mov sbbl pop fs shr xchg push fistpl dec stos inc lret cwtl mov js sbb pop std dec mov pusha cld lods inc (bad) lcall rol push popa orb xor xor and jne rcl xor insl nop mov add mov or adc das int3 orb mov rcrb cmpsl adc jo hlt nop mov and jo push xchg test clc decb and cmp ljmp mov and rcll decl mov enter push cmp xchg mov mov add orl mov or jecxz sahf xchg divb push (bad) sub and mov mov fs test sbb scas enter sbb sbb sbb add push jbe jge ficompl mov mov outsl imul loope adcl inc adc add push nop pop dec dec lret cmp fcmovnu pop mov push adc push inc sub and lcall repnz in mov (bad) testl xchg enter mov adc mov ficomp or mov cli pop subl sarb xor pop bound (bad) nop test enter adc push pop dec clc mov sbb orb packuswb fadds cli mov cmc cmp pop adc lcall hlt cmpsl inc mov xchg mov dec in cwtl jb lcall add add or out cmp lock loopne add sbb sbb nop stc or out pusha jmp sbb cmp push xchg add mov out out pop mov inc xor popa test sti dec outsb nop dec movsb cmp mov testb sbb add stos inc push in add jg negb jb mov sbb sub test into and xchg push daa pop push push sub cld or arpl int3 sub xchg sbb add add jmp dec std jl aas xchg jo sbb xchg dec sub mov mov orl add aam push or loop mov lods sbb pop clc ficoml xchg (bad) test adc sub cmc pop loopne or pop negb xor push add mov lahf add cld cmp dec imulb jle loopne loope pop or out nop into (bad) xor clc add dec jns (bad) (bad) mov mov rorb add sub cmp dec dec jmp jle mov scas pop add (bad) ret sub lods sbb jae outsb mov je fimul jle call rcrb inc les repnz out sarb fisttpl adc ret enter or mov cmp sub (bad) mov mov lea scas rcll pop mov sbb push adc popa dec loopne adc mov jo add std jge jle add add mov pop inc (bad) dec mov adc scas aam andb in aam (bad) fistpl jmp ret mov insb flds jnp nop nop in test xor push movsl and loopne inc xchg popa jmp lods int fcomps fdivr and dec out or pop hlt push mov xchg (bad) mov fmull adc lea cwtl inc nop pop mov call xchg out cmp fwait dec inc jo mov nop shlb (bad) mov (bad) and loopne fcompl rolb stos add in mov sub shrb inc inc add sub insb jge cmp icebp push mov jmp pop jp repnz loope repnz xchg xchg jo popf and cld and call adc push xor mov leave test push xchg inc ret add stos pop (bad) aaa push mov pop push xlat cmp (bad) js jo lret sub inc test das bound es jmp lds pop mov push jo add xor push cwtl nop or sub push clc dec add out pop cmp cltd or push adc mov jl add push adc je pusha sbb inc insl add cltd xchg xorl rolb mov add lret jne mov lds mov add push lods add or jmp movsl dec sbb mov and pop scas inc sbb inc in sub add lock mov lods and cli lods test sbb sbb je pop push and fcmovnu sub adc mov sub lret mov push mov loope or jo jl add xchg mov add adc dec mov lahf popaw ss imul rcl divb pop fwait mov and adcw outsb scas icebp das sub imul inc jno or pop push inc fcoml jb cmp add adc mov insl enter or pop fcmovnbe stc inc js lahf xor add cmovae adc inc add sub jne addr16 mov cld sub xchg fldenv adc cmp add rclb pop inc icebp call jle andl or outsb add add ds enter sarl or mov mov jne sub fiadd xchg pop mov pop and jecxz xchg and nop add fmull std dec lcall mov sbb cmp addl pushf or mov leave dec sbbb lods je pop in cmp and push lock pop jae pop push adc jge xor ret sbb sarb xchg imul adc mov add xchg fildl outsl das pusha sarb out sub sbb add add scas sub rorb or push xorb jl pusha out movsl leave lods mov dec std or mov stos xchg adc dec cwtl adc add out xchg inc push push inc cmp lahf mov mov inc sti dec out and sub add pop fadds add imul add in jb fsubrl mov jge dec push lahf test movb mov add loopne add or xchg add push sub mov add add pop mov (bad) jo (bad) (bad) mov push (bad) lods push push pushf add movsl adc mov xlat aaa mov pop fsub sub (bad) mov or pcmpgtd or add cmc jecxz add ret out xor add insl jno aad mov negb pop or std mov sbb inc and add (bad) and mov cmpl aas jns sub jg notb jge rol lods out xchg add mov push cmp add rcll enter pusha mull mov lcall aam jno mov mov sub xchg sub sub mov repz nop and (bad) sbb add mov enter dec push cmp cltd fstps add inc mov sub lret pop add dec mov fwait gs aam or in nop stos inc and mov dec les push mov pop das adc mov rcrl loopne dec (bad) mov add jp sub inc lret and pusha iret and dec cmp jge mov mov stos or mov int sbb rcr mov pusha sbb clc nop bound pop sbb lods mov bnd add push mov rcll mov jae inc add dec sub xor (bad) imul adc jae sub fwait cmp mov fnstsw sbb cmpsl sbbb and cmc add xchg and xor subb repnz add and mov cmpsl daa or shlb add insl rcrl mov in mov mov add jns testl add sub rep or and add clc pusha hlt pop (bad) adc dec xor add cli xor in outsb das std sbb lds add mov ret mov pop out stos jae or mov int xchg cmpl mov fldt add pop imul mov arpl mov mov push add nop cmpsl adc mov xchg int3 add test and xor pop cmp and (bad) xor std xchg dec push xor sub scas loope ret jno add mov fs (bad) lret sbb jmp insl pop subb dec push fstl inc sub jl add sbb rolb xchg aad fnop push adc mov repnz (bad) getsec int3 je inc inc call mov xchg out hlt test lds cmc popf add xor pop outsb mov daa xchg xor xchg (bad) test xchg or adc push cmp add scas jae add mov xchg lods add sub push mov iret movsbl andl out out adc pop inc das ds rcrb nop in mov out push add jae push es rolb movsl and mov mov mov faddl sahf xor pop rcrw mov mov repz and push das in stos fwait popa add xchg jge movsl movd pop ljmp mov sbb sbb xchg push lock mov or adc aad lods xchg cmp pop insl (bad) sbb jne cld push vmwrite add into (bad) pop cwtl sbb jne pop hlt das (bad) aaa pop test ret out push mov add or movsl ss mov xchg rolb sub lods mov daa lahf dec mov jle xchg mov jbe mov cmp jge (bad) mov add cltd test mov dec mov out mov pop jge push ret in push sub push (bad) dec dec sbb pusha jecxz (bad) pop nop xchg out lods loope jp ja pop cmp fbld add mov iret das mov rolb rolb xchg cmp push in mov push mov add insl int mov mov dec push push push sbb sbbb add pop inc cmpsb lods jbe mov mov lret dec popa insb xor xchg push mov int3 adc dec testl je add or in xchg test bound add loopne mov sub or arpl xlat jl test in ret mov jo add xor bound dec stos sbb rolb out in cld adc add xor add imul add dec inc hlt outsl add fcomip inc inc add aaa lock cmpsl add xchg pop (bad) or inc jg cwtl pop dec cmp lcall mov inc xchg sbb lock cmp repnz add popf leave cmpsl xor rclb call lret sbb inc xchg addr16 add aam lahf nop hlt les push loopne add push outsb cltd dec mov add mov xchg xorl arpl lds test aam loop add scas (bad) jge add adc dec incb sbbw (bad) pop roll shlb mov cmp mov jmp shl ds or and push jg mov add xlat fwait and dec ljmp add pop jl pop xchg mov pop cmc sysenter cmp mov addr16 or and xchg shlb sub into popa in mov add cli add lahf add icebp lds std add add es add mov cmp jge pop outsb cli int ja add add and out in lcall cmp icebp pop call gs shlb add mov stos sub rolb sbb or mov rcl into jecxz add lahf cmc ss ret aas dec sbb pop imul add push aas jle inc jecxz push push pop add into movsb mov cmpsb jb adc loope call push xor iret mov adc inc mov xor loop and mov enter cmp push xor adc adc hlt inc mov xor lods and and dec ret adc mov xor adc adc pop add mov jnp xor js test mov outsl mov nop call aas and stc dec bswap sti jle pop icebp push (bad) fistpl and stc mov xor inc lahf inc stc dec and imul add arpl repnz or fwait pushf popa inc mov aad inc mov addl dec inc es enter rorl push jmp ds jge test movl outsl stc lahf or push push push movsl pop sbb test inc scas sbb adc jo xor insb cmp sub out push and add sarl sbb xor je add cld lret inc cmp and dec mov or add sbb repz shrb popa stc cmpsl mov lret imul (bad) ss add iret hlt cmp sbb inc or adc icebp pusha into das fldenv pop inc repnz xor pop out add cmc ljmp mov data16 cmp orl add bound test clc dec outsl sub add push jo pop fisubl fsubs mov enter sub dec stc iret (bad) push sahf mov dec push test arpl stos inc mov ror mov fdivs mov ds mov xchg (bad) jg push add jo gs jnp dec add dec adc ss mov inc xchg retw adc inc xchg mov add rolb add mov repnz inc push xor nop subl mov mov dec fld push call or aaa aam add insb pusha jbe and jecxz incb pop js add sub mov pop add pop pop mov or xchg push in insb sbb cltd dec fdivs iret add inc scas (bad) shlb push dec pusha prefetch cmp and in jecxz xor in jns push add insl mov (bad) jb xlat sbb lds xor xor in adcb xlat cmp mov fadds (bad) repnz jmp add daa mov add rcr sbb jle add rcrb cs add push adc add arpl imul sarb adc push (bad) jbe enter mov mov or pusha cmc mov roll xor cwtl enter fldenv loopne sbb fistpll dec inc andb sub (bad) jnp mov cmp sti mov je add insb out sub movsb jo in cs js add cmp add in add push scas aas enter mov inc ja aaa and xor xchg push lds mov (bad) jne jb hlt xor stc jl adc mov cs pop add inc and lea outsb sbb lcall jno pop sbb sbb mov scas mov and gs add mov dec clc pop mov push adc or cmp out nop jo add repnz dec sub push xor cmpsl cmp leave movsb ds xchg cmp cmpsl or lret roll roll fwait sbb inc aaa pop rcl adc jl dec in pop jne mov xor lahf dec add and push data16 (bad) imul fsubrl add xlat inc xchg and dec push dec test add mov adc or push and call sahf imul lods cmp cmp sarl std pop mov lcall mov jecxz sbb movsl and outsb rcrl insl and add mov mov add cmpsb xor xchg sub or mov pop cmp cmpb (bad) sub pop cltd sbb (bad) jno enter sysret lock mov fdivrs and (bad) (bad) loope movsl icebp mov (bad) ljmp cmpb sbb call mov test jle fadds push xchg icebp push dec movsb lea pop mov xchg and push arpl enter test inc mov ja test cmp lahf cmpsl sub (bad) sub faddl jecxz jl xor cmpsb adc int fisttp or lods fimull mov or les dec fs mov shlb notb sti push or add add lock mov testl sbb cwtl (bad) or in xor add mov outsb push inc and fisttp test rolb push aas loopne add scas fsubrp add or icebp test cmp popa push adc lret jp sub mov pop sub add in dec rorb cwtl add xchg ljmp jmp xchg xchg cld (bad) outsl ds lods in les mov inc xor and cmp mov je adc add jl insl jmp pop inc add xlat xchg das adcb xchg adcb insl popa mov pop adc push push push out jp or mov or popf (bad) dec enter xor ljmp kmovw inc pop (bad) imul or fdivs pop add sub pop xor or (bad) dec roll adc jno cs clc adc in outsb push mov dec movups xchg add xchg and mov dec cmp push inc push cmpsl nop adc sbb mov cmpb mov lods and loopne and pop imul or xor stos jge jg sbb add add cmc add (bad) cs add loop stos xchg xchg dec add pop mov add jge movb leave addr16 sub lea repz (bad) cmpsb test add and jnp or scas mov andb xchg icebp lret cmp sbb mov add pop push mov hlt mov idivb xor cmp (bad) (bad) jo call loopne cs ret aad add pop xor shl in add dec add je mov xchg sbb cmp jbe stos cmp and xor add sahf in adc push enter add aas sub add les rcrb jo outsl or into mov or xchg xchg repz iret push cld inc lcall roll cmp and sbb pushf sti xchg stos jmp popf add cmpsb cltd mov cmp sub jbe inc jno fwait (bad) andl pushf xor push jle lcall and add lea sub (bad) mov repz std (bad) inc push fimull cmpsb dec xchg jne mov lods push adc femms repnz addr16 add test hlt jno mov jnp lret fsub mov pushf nop test cld in insb jl sbb aaa jecxz dec lcall add add and push cmp es add push jl mov icebp loop inc pop add inc ret add test out loopne out in cmpsb mov test fs push mov adc lods add mov adc dec ret xlat push push outsb add sub insl pop mul fmuls pushf inc add xchg (bad) jl xchg bound pop jge aaa out shl divl fnstcw in jle sub push cmp ds (bad) nop adc fnsave mull add je sahf push pop lcall pusha movsl imul outsb call mov mov jg str js pop xor test mov mov mul jmp or (bad) mov cld sbb loop push cmp popa into mov dec mov (bad) push sbb xchg push je add jmp nop add sub sti leave xchg movsb add adc add lods out cmc sub add inc add add hlt pop scas and adc push or jp fbld cmp adc mov push sbb repnz add das in loope jns in in imul cwtl and pop jp mov sbb mov add (bad) cmp add and imul or mov cmpsl daa loop push xor test jo movsl cmc add in sbb stos dec lea and lds js loop rorl mov add sbb add inc sbb xor sar mov popf (bad) movsb add ss jns cmp add imul mov insl pop dec pop outsb pop das lock ret add cmpsb pop std stos shll add cltd pop enter outsl add movsl out jae add push adc cli shlb jle add (bad) pop out insl fildl sbb push jg push call stos inc cld mov add popl jne add jo inc or and mov xchg add xchg push add daa add lock pop cs push dec push std and adc adc add cmp sub out testl sub lea repz sub and jo cmp fldl add (bad) leave cmpsl push pusha cmp add hlt mov push mov xor cltd sbbb inc and out cmp fnstsw pop xor std pop repz (bad) testb out lahf xor loope sub aam (bad) or fs mov frstor and add xor sub add push rcll cmp sahf dec je std add push out adc lds ss (bad) xor sub push mov outsl add sub cmp rcl sub xor (bad) cmpsl add into push cwtl sbb loopne sbb add insl xchg cmp and xor dec aaa mov bswap (bad) dec fiadd sahf jecxz add repz pop xor dec or xchg repnz and sub imul orb out add add nop clc add and xor shll movsb jne rorb push push imul add mov and jns and ja (bad) dec outsl sarl add out popa dec cld push or dec mov leave subb icebp rcrl dec loopne xor shlb loope pop imulb rcrb sarl rep jbe jae (bad) jb add mov jmp sbb lldt mov in add or mov add repz test out xor movsl mov xchg jmp sahf mov enter aam or rcrl stos mov jno outsl cmc mov insb inc stc xlat ja push mov sbb mov add js and add jbe or mov mov sbb xor xor mov or daa cwtl pop pop iret nop adc mov lret stos xor fs adc imul fadds pusha xor int3 adc in outsb jo int adc les sbb xchg add (bad) outsl cs sub pop fmull xorl mov pop lods addr16 enter out loop nop pop sbb jp cmp inc lock or mov add lret lcall inc dec ret imul lret insb add inc clc xchg fwait push icebp lock cli inc inc es je test xchg (bad) jl icebp pop or push sarb mov add pop pop cmp out rcl inc shrb cli push push test cmp mov js and xchg push add sar add je rorb or pop jns mov out aam mov (bad) sub outsl or (bad) stos loopne aas jae andb push js push sahf stos pushf mov imul mov es mov jg push pusha push aaa xchg les pusha out or mov sub dec mov aas or add dec add mov inc xor ja fcomps xor sbb dec sbb cmp daa fbstp inc js add test xor stc add and add sbb popa push gs or xor std sbb jae loope mov dec mov pusha lock xchg mov loopne pop pop cltd jo icebp aaa nop mov jno jl add mov add push jae add pop push xchg push jecxz sahf int3 rcrb aaa hlt jl pusha rcll dec mov into push add pop sahf add cmp lea mov (bad) subl mov add mov fsubr pop notl add sub dec add gs test stos pop lods adc cmp inc cmp stc pop cwtl mov call adc mov imul xor pop mov pop jge mov mov sbb insb xchg sbbl jns cmp into xor xchg adc dec imul cmpsb inc call dec sbb fbstp mov adc mov icebp sahf xchg loopne data16 mov ss je shlb cltd pop lahf mov lods pop enter adc mov pop push mov or mov pusha mov push pop into mov inc cmp leave pusha or pusha arpl aam adcb fildl inc sub test and mov add fldl mov test lcall idivb xor dec ss push aam dec and xchg loopne add push cmp sbb popf js sbb sbb add sar shrb movswl scas xchg fsubp push cmp loope inc adc arpl mov or pop pop loopne sub xchg scas mov and sub int3 xchg das call aas (bad) out cmp into dec scas inc jno sbb rorb loope call push sbb out add rclb fdivs push sbb js or decb inc sub push sub in sub inc fistpll aad xor fmulp ret adc dec scas or push cmp nop inc test mov sbb out mov lock mov inc test and je test or push mov inc sbb es add mov js add jbe into rcrb push or outsb mov jmp addb add cmp stc movb sahf hlt ds mov loop sbb aad jge push call fsubr xor into mov pop and or mov jbe call xor loope and (bad) insb and xorl xor test sbb lret adc daa enter sbb pop xchg popf inc mov je push sti mov mov inc fs pop imul lock mov into mov pop pop add in sub mov lods inc stc es data16 negl and mov mov adc icebp into (bad) mov adc mov mov push fsubr adc inc inc and fcomip pop mov repz inc repnz ficom (bad) stc mov lcall adcb pop add push mov add pop cli lahf and ja add xchg jo or outsb ljmp jge mov stos sbb std add push out scas adc xchg mov sbb cmp pop paddusb mov test (bad) test xor pop icebp xor adc dec dec and push or sub in push dec cmp xor fimull push xchg dec pushw fs sbb out mov into lret xchg add cmp loopne (bad) xor fldcw imul inc test jbe fldenv adc bound jnp insl iret cld push push mov jmp dec sub outsl add dec xorl push (bad) mov pusha add cmp inc sub mov dec ja fsub in stc or cmp sub xchg push dec (bad) cmp pop inc xchg dec mov mov push xor mov pop adc mov je movb sbb adc mov and loop pop lahf mov xor cmp fs sub mov jl adc fwait and add shl in xor mov scas clc pop in inc imul or mov cs test test adc mov add xor push jp pop clc stos pusha mov dec ja gs cmpsl subl or push pop fistl or cltd xor mov and aad in dec and sbb adc (bad) into cli shll lret mov (bad) (bad) fcomps fwait add xor jecxz cmp enter movsl inc mov les cltd (bad) or mov pop addb aam or cltd add adcl fwait enter insb lods add cmp mov sbb cmp (bad) xchg cltd test sbbb or ret cmp pop mov not movsb push sub push mov xchg and lods loopne ret lods cwtl cmpsb clc xor ljmp lods cmpl into push or cmpsb xor inc int3 fnsave les dec push mov mov inc (bad) pusha pop mov pop test dec sub push add rcrl iret test fs or sbb bound or cmp and inc pop add inc add jb enter mov rcrl (bad) push mov and setns pop pop dec dec and adc cs test pusha pop xor sbb adc orw mov push xor fidivr jle mov inc rorb lock jl add test cmpsb inc lock outsl inc cmpb xchg subb enter std lahf push movsl mov ss fild cmp (bad) dec call lds mov dec cmp push mov add jo adc cmp add pop mov xor bndldx test fcom js push int3 sub out lds push shl xorb cmp cmp add fxch loopne xchg addb iret vmovaps and xchg fs mov loopne xor mov call jo dec mov push rolb add xor mov rorb js add shrb adc and lcall jns int test test jo add cmp cwtl ror mov mov enter xor orl jae call nop loopne jo dec loop add cmpl push fs jnp xor pop mov sbbb fs sbb je shr cmpsl add inc sub cmp clc aas mov add mov out adc pop jl add mov in stos ret inc pushf lret mov loopne lea cld or fistpl jae mov inc xor mulb sub icebp add loopne and popa (bad) mov mov sub inc lret cmp adc dec movsb lahf push mov loope adc push cmp xor sbb push adc sahf inc or xchg cmp mov sub add shlb mov xchg rorb xchg insl dec sbb pop mov iret out pushf adc divb add cwtl sub mov mov lods and cmp mov and jle in nop or pusha pusha sub outsb repnz and push arpl jnp es jnp es adcb shr or inc or insb mov adc cmpsl jl mov inc daa dec and fadds pusha in mov test aaa test dec push mov cmp je add mov subb stos jmp repnz mov pop inc sbb test dec das push xor or mov jmp mov xchg add sbb adc and mov sarb fwait stos cmp xor loopne sbb cli pop inc test repnz add std push xlat jmp adc xor xorl cmp dec scas stos jno out push mov or ret and cmp dec xchg scas pmaxub jno clc push xchg xchg add mov pop sbb icebp adc lds cmc jb (bad) insb jge data16 rcrb add xchg testl out inc pop push adc popa or cs test nop pop sahf lock in inc mov mov mov push mov add inc test sbb mov mov mov mov xchg daa xchg mov fnstsw into mov pop (bad) lds fisttpl gs aas imul xlat ds in add fadds sub orl lcall cmpsl or sub mov mov cmp aad lock scas in out or mov shrb insl mov dec mov xor push stos (bad) setns sub mov and jmp fnsave jo fimul bound js mov icebp mov cmp cmc std mov in mov mov adc nop mov sbb aaa faddl push inc test movsl and icebp shrb push sbb lret pop pop fcoms outsl stos mov mov ja fild ret sbb sub test adc js xor mov data16 pop adc push dec mov jns test xor or push cmp add push bnd xor int3 leave add paddd or mov loopne xor sahf adc inc pusha test shll and jnp sti mov rcl ss idiv loopne jge pusha sub (bad) andnps pop stos popl rolb cmp sbb xchg inc in push sub outsb sbb push xor mov push imul rolb add test or lret shrb mov sbb movb sub into or add xlat mov outsb shr add cmp pop push and (bad) test add sub popa pop mov mov jo inc dec sbb xor add outsb push xor stos sub popf int imul aam popa add sti mov mov imul or in jp adc int faddl loop mov out loopne ja outsb adc pop loop movsb nop cmp stos push push repnz iret add add roll leave out xor mov fdivrs (bad) icebp inc xor push addr16 test pop add stos xchg push in int3 (bad) jo popa test fisubl mov (bad) mov addr16 nop xchg pusha pop sbb inc mov sub add add stos pop andb inc pusha mov lcall arpl add mov mov push add dec pop test and adc add stos xchg inc jmp aam test mov mov sub xchg mov push sbb test add jle adc fcomps add sahf xchg roll xor push outsb mov add insb mov jl jb add push adc add jne push test test shrl push icebp or mov add and mov fsubrl jecxz nop cld sub push adc mov adc orb mov sbb imul dec lock fmull rclb sbb cmp jbe add push push stos iret and loope and sbb (bad) sbb leave cli loopne lods out push fs mov add int3 int repnz mov xor mov fwait lret insl shlb pop mov xchg pop out mov push sti xor cmp push call sbb push and mov mov mov jp lds outsl (bad) push ret and je mov repnz or cmpb add daa lret sbb movsb nop bound dec mov ja cli dec sub and cs jne ljmp mov push push test lret dec dec aam rolb xor add aaa push push movsb pop scas mov stos push lock push mov xchg add mov sbb mov cs test mov and insb add mov xchg mov cmp and test cmp imul add out mov cmp sbb call lods xchg inc add dec mov mov adc flds sti cld sbb mov and in sbb in test push sbb mov leave lcall std sub dec fmuls add pop sub xchg std jecxz loop xor mov clc add sub dec dec inc adc sub push scas sar stos dec adc add in (bad) dec loope mulb pop mov xor in adc outsb xchg and mov test subb popf (bad) sarl xor push movsb outsb mov int3 test jnp (bad) mov and arpl (bad) xchg (bad) mov rolb sahf cmp inc cld ret test movsb adc add shll jbe dec enter mov mov add repz ret nop lret and or fldt dec mov rcrb dec (bad) mov stos mov mov mov les test mov call mov pop add enter push add call add in sub inc icebp fcoms mov addr16 mov nop xor (bad) repnz inc add push push aam leave xor inc add jns ret mov jl add mov inc aas and xchg add (bad) sub cltd nop movsb pop cmp lods push loopne mov push rcrl add sub adc push inc (bad) and fldcw xlat inc ss aad xor int3 in mov pusha add push mov dec sbb stos stos int3 movntq out and ret sbb js leave mov pusha sbb sub mov pusha clc mov mov arpl cmpsb mov mov mov je enter int leave and dec pop mov sbb mov mov dec leave sbb mov loope cltd mov int add or cmp or xchg pop repnz je insb test adc aaa leave sbb mov and cld add dec je cmp and mov aam inc pop movsl ret lcall fildl movsb cmpsl ss jle addr16 dec mov rclb jmp cli je daa add sub jnp xor pop fisub jmp dec roll test std cwtl movsl lock xor imulw dec testb repnz mov mov sbb sbb jg sub xchg add xor out pop loop or gs ja cli xchg call jo cwtl enter rolb stos sbb push cld mov lret loop aaa xchg scas cmp aam add ljmp bound fistp test mov (bad) daa add jae loop enter imul data16 xchg push cld rcll arpl add sar cs decb mull mov out sub test or cld push int3 inc mov int movsb mov mov daa je sub gs inc fldl les push mov (bad) xor mov sarl pop outsl push shrl aam jo test jmp or outsl xchg daa pop roll test jbe mov add outsb cwtl ffreep inc push loopne pusha out call lock xchg xor rcrl lds out in add push ret cs cmp sbb ss push fs push add (bad) xchg and lds sbb sbb add jnp adcl xor add mov jle inc out add js add and sub lahf lcall dec xor add dec sti rcr mov jmp cltd and push mov ret mov xor and dec mov aad adc shrl pop mov adcb cmp rolb adc and sbb dec xchg cli pop dec mov iret cmc data16 push jl or in pop stc int3 sbbb hlt jge (bad) xor add push les outsl xchg and dec add jmp sbb inc and lret int3 sub add mov das repz sbb leave cmp jbe adc shlb in addb jnp xor pop mov dec data16 lret add add cmc fnstsw push mov sub stos xlat cmpb lock cwtl clc add data16 xchg nop movl test inc cmp pushf xor pop pop nop imul adc jl xor (bad) fisubr xor xchg and test sub or xchg (bad) subb or pushf or movl xor xchg xchg scas adc mov ja hlt push movsl or sub adc call jl stos cmpsb fsubl in push and sub andb adc push mov test push adc xchg icebp xchg cwtl push cs jns push inc add setae fistl sbb add test popa dec repnz push and dec add int3 mov int3 pusha fwait (bad) xor cmp add mov imul int3 add stos (bad) adc mov mov leave int3 addl sbb add push in jge stc push imul push dec add sahf add fildl add pop adcb jg push cwtl xchg pop mov add xchg inc movsl xchg fildll fdivs xor negl push fistpll push sub jb lock sub cmp cmp lds adcb mov and sub push push fstpt js outsl cltd enter mov mov mov jnp jo adc cwtl clc in push pop int xchg pop adc faddl push dec fsub mov (bad) pop pop add xor mov (bad) pop push int3 ret stos cmpsl repz (bad) ss (bad) repz push int3 push pop idiv sub xor inc pop call inc arpl jbe cmp xor popf test and jo add cmpsl dec and inc add out popl cmpsb andb or add add push (bad) xor sub test add mov je shrb adc int3 notl jae sbb jnp pusha jb (bad) decb pusha stos leave push adcl or jae pop sbb dec inc xchg add xchg outsl test andb enter jno sub dec and mov push fs inc push cmp pop inc fildll sarb and icebp rol mov in add push lods addb mov and jbe divb roll movsb iret and xchg popf mov fnstenv cltd in dec add jns cmp sub and subb add jmp add ss sar add jno jle mov adc jnp inc (bad) out inc js pop out test sbb lretw outsb and xchg xor sbb xor pusha mov adc insb and loope and lock test ret pop outsb fsubs pop jp add jb sbbl (bad) enter add dec add gs (bad) and mov mov clc ficoml add cmpsb dec orb lods daa and or jmp add mov sbb xor or adc pusha sub push jae adc or xlat and sbb jns test call push lret xor lcall call mov insb add decl mov pop out jnp jne mov loopne mov adc imul xchg jg fildl movsl sub mull test testb jo je push lcall in adc mov pop leave aad pusha nop dec push loope sbb sub iret and or hlt subl xor mov add sub or out add inc lock add hlt or jnp fnsave and xlat insl pop push orl xor add xor pusha je and rclb add add repz push outsb sub sbb mov inc sub mov dec adc out jle test xchg lods add clc repz andb push loop mov lret ss mov cmp in sbb mov adc notl and es fsub fildl sbb ret push sub fmuls pop clc jmp in es inc and cmpsl add daa jmp movsb test push movsb cmp jle push adc mov add mov aas pusha popa mov es jne mov (bad) xlat sar mov mov sub push jp subb jmp pop mov and add mov jp repnz test fs jnp or imul or or and es pop cmp jg pushf (bad) dec mov push sub cwtl fs xor dec jbe inc sbb push and or mov xor insb adc nop jl adc adc out or pop arpl hlt icebp icebp or ds cmp adc inc dec jmp or push pop scas pushf js lods nop cld dec cmc je or fcmovnbe mov jnp ja sbb adc or sbbl add jae sbb add push (bad) jns lock sub sbb into loop stos cwtl or sub inc arpl lods ljmp or mov mov jmp lret push and incb or test (bad) jle lcall dec movsb imul addl dec sub add mov inc rolb inc mov and or lock addb push (bad) lock xchg insl daa pop pusha push je pop and cmp cs mov in cmp and add mov cwtl jp jmp mov cmc cmp mov adc jae sbb push incb inc sbb push adc imul pop enter xchg xchg es adc xor loop movsb loope add pop jmp or sub and xchg sbb daa (bad) div dec aam xchg fs pushl js and repz shll pop xor xor pop adc fadd jl test shld jo pushf xchg sbb xor add test mov jle add fistp (bad) add pop and inc fcomi pop mov jle xor push inc mov inc cltd inc in data16 mov sub mov dec (bad) push push add adc sbb xchg stc xor jo pop mov add jnp xchg (bad) mov add scas ja jae aam xchg add and out sub xor loopne xchg xchg sti lea push sahf add clc jle xchg nop or hlt adc cmp and pop adc add inc add dec mov cmovl arpl push adc inc push js stc fs daa xlat pop and add adc jp in sub cmc enter push inc das pop add jmp adc insl in xchg mov pop test or sbb push mov fisubrl inc adc sub jbe dec and mov xadd fwait in call xchg fs pop adc cli test repz mov jnp and dec mov add ja out mov pusha jmp dec push xchg cmp xor add add mov push add push add notb js js mov sub mov aam jb or lock mov test js or pusha clc jb xchg sbb test jns inc mov pop jg adc pusha mov mov mov or jns (bad) je xchg sub xchg mov inc movsb jl pop xchg pop jno and idiv mov add int3 cwtl sbb (bad) lock adc push pop ja push pop or mov sbb jge sti adc or add sbbb mov aad lds out ret mul adc andl xchg enter clc jno in xchg ljmp mov mov or test loopne inc jae or clc pop sbb and add cli lcall jnp mov leave or push mov cmp adc in adc dec dec sub push (bad) hlt jb xchg insl add push mov mov adc mulb and (bad) clc and and xchg dec pop or pop xchg and add add (bad) jmp and xchg dec and (bad) clc sub push mov xchg fs jge cmp fist movsb dec and sbb inc mov loop in and mov inc pushl xchg nop or mov stc pop jnp mov rorb jnp dec jp fs fsts xchg sub clc and out add push in or mov cs outsl int3 add adc push jbe adcl adc ljmp sub test adc and mov rcrb and (bad) (bad) out add andl xlat add lea cmp (bad) jo insl jg xorl cwtl imul adc xchg or xchg push js mov mov xchg jo loopne xchg and imul (bad) fcoms mov xchg shr lret sub test cld mov jl iret adc add fadds sub ds shlb aas mov scas add subb push or inc mov dec std shl or dec add fdivrl sbb imul data16 fcmovu xor jno pusha mov xchg sbb icebp (bad) inc push push cld adc push add mov mov mov pop push sbb xchg lods enter movsl rorl mov mov sbb (bad) mov push lcall mov fnop and ds pushf je sub sub cwtl xchg mov or push imul push jno xchg pushf loopne mov pop jmp fwait sub sbb sbb lahf adc fsubrs adc in and mov dec push nop mov lahf push lea and push sbb sub or jno xchg in xor pop lahf inc adcb inc stc mov icebp rolb cltd test aaa movsl push outsb cmpsb mov je add fdivl dec jp adc push inc inc popa jns,pt or movsb lds pop scas xor sbb arpl and sarl inc xchg and sub test icebp cmp mov scas push leave jmp inc arpl imul (bad) repz sbb rcr sbbb fmull mov push add mov cmp pop clc add xchg jae mov xor push and cwtl jmp push je push xchg loop stc mov (bad) sbb inc add push pop push out mov mov jnp (bad) jae cli jecxz js bound and and cmpb mov or test jo mov nop sbb hlt pusha mov and mov inc xor fs gs jg loop dec sti adc jl in push and js rclb sbb in inc scas das popf pop loopne aas lds xor je push fs ret inc ja inc mov cmpl add xchg and incb movsl mov push adc add xorb sbb add js and cltd push rcrb sbb out xor mov dec int3 andl lahf cmpsb int in lea pop add inc insb arpl fwait add cmp (bad) inc push adc xchg int3 dec inc add mov (bad) mov les jnp int3 dec pop (bad) jo (bad) sub js sub xor sarb cld inc xor dec add loopne pop ss fcoml in lret rcr mov outsl add aaa jle mov in shll sbb cwtl or add arpl lock (bad) xchg inc inc imul test inc pop (bad) jo imul dec add push mov (bad) fcmovnb in ret lea mov (bad) jp rolb adc ja mov add pop push movsb shrb (bad) xor mov inc xor shrb rcll xchg adc add xlat iret jne,pt inc xor aas cmp loopne mov pusha sbb push gs mov ret pop cltd adc movl roll mov shld loopne sahf in xor pop jle add mov fildll inc or xor popl inc outsl add mov fwait sub dec jmp mov inc add add popa fs add pusha dec lds sub (bad) fstl jg dec inc mov add mov aas mov xor add sbb pop push sub es fneni(8087 rcr je dec add nop vpcmpeqd int3 push iret vgetexpsd mov inc cwtd data16 sub mov and xchg inc mov test pop sub inc cmp add add push sbb pop and or cltd adc pop add in fstpt push rcrl push dec fdivl in push pop dec add (bad) push sbb xchg js jmp mov fs das lds call push and fcmovnb nop rolb cmp add cltd mov add les and push jo cmp nop sti std lods sbbl test insl sbb cwtl popa mov push aad shrl mov pop sub mov mov enter or dec movsb daa (bad) mov xchg jg and (bad) push mov nop out mov add outsl movsl add inc add add imul fs popa jb insb pop jp rorb push or (bad) pop outsl insb xlat clc push cs test add adc gs test into or mov (bad) std stos orb push ljmp push add mov fs add enter aam add movsl and pop jnp and pushl mov dec push or and clc inc adc fcomps ret xchg lock pop daa and dec addb add iret mov cltd andl movsb pop xor xor test or mov jae or faddl sub pop push xor sahf hlt setno mov add mov enter (bad) in jmp sarl pop mulb and lds pushw add push int3 out roll rcrb fimull aad inc sahf dec insb pop cs insb add sub mov mov jecxz push jno stos nop fnclex pop cwtl cld cmp mov fs push jmp mov sub lea stc and lock enter mov xchg imul add inc xor adc out dec mov inc mov push test pop mov sub mov pusha (bad) icebp es in and inc imul ja jg dec xor mov out lret jge cwtl mov push rcr int or inc xor jge cld add icebp sbb and push imul mov fidivrl (bad) xor test je xchg inc xchg cmp add frstor pop test popa add push or movsb lock sub mov jecxz sub cmp pop mov popl cwtl cmp sbbb ljmp int pop rcrb mov sarb fwait adc inc jp cltd mov lods pop jg mov sbb dec cmp add push jp mov cmp mov and pop test dec add mov nop das dec popf push pop mov and xchg and out jae sub pushf aas xor dec mov adcl sub jo mov loope mov sbb jecxz fstl (bad) cmpsb movsb add sbb adc push mov jle divb xchg rolb mov mov js nop inc aam xorb fiadd push lret mov je push adc les mov das or imul andb insb mov mov adc into or fidivr aam push push (bad) push inc inc dec xor addb aaa rolb in inc pop jl enter mov mov popa (bad) cld jge xchg in and popf movsl test mov insb arpl movsb mov and (bad) push xchg mov add aas push dec add push add xor push imul (bad) sarl test or sbb rolb pop arpl shlb pop orb sbb pop les cmp sbbb adc aam xor in mov mov ja sub xchg pushf add cmpsb dec add enter add or lods inc mov lods push pop bound jmp imul rolb fmul push cmp or dec push add js jae enter adc inc xchg fldenv fs sbb inc ja outsb or inc push xor cmpl xor movsb cld cmp lret mov push andl mov in or movsb mov add sbb (bad) xchg xor imul and push faddl adc push leave test and pop cmp movsb xor inc and les ja mov add fidivr hlt and jge pop mov or adc sub les test pop xchg pop or jg mov sub xor sbb sbb orl jbe jp add aad inc orb push or lcall add sbb add incl ja test and ficoml sub push test das pusha mov aad jne popa hlt cmp in and dec sarl aas pop insb push or lret push shlb xchg mov push xor pop push mov adc push nop loop daa inc sahf mov popf adc add jecxz lcall add xor pop dec pop pusha or jg and or and outsl ss inc imul test pop les mov pop adc sub inc and cmc dec add mov aad fs in jne gs shll out xor andb das push mov jmp push pop mov lahf dec add sub and push mov pop inc pop mov inc xor xchg ds leave test ret pop mov cltd mov mov or scas mov pop and xor sub mov int3 inc in lret fisttpll xor cwtl cwtl add pop jge adc mov push or xor mov sub inc cmp icebp add sarb and jl cmp pushf pop mov pop xor setae dec aas inc mov fiadd cmp rolb pop mov cmp jbe les cltd mov lds adc xlat push push and dec mov cmp mov push pushf shrl jecxz sbb rorb adc jne dec mov mov fisub lds fildl dec inc std (bad) xor push mov lods xor jb add fisttpl outsl or jge adc (bad) nop cmp addr16 and out inc and int3 mov pop popa cmp mov arpl stos add lods xor or push enter fs pop cmp lock jl jl push mov enter outsb sub xchg dec pop cld dec bound and adc add outsl xchg add lahf in add push shr leave add inc push lret pop loop (bad) or adc pushf and mov or mov pop ljmp jo sbb iret mov int lahf (bad) jbe cltd cmpl pop leave mov mov lcall ss nop jnp ljmp sub sahf lret addl imul or dec push xor jle jge cmc cmp sarb mov lahf add cmp mov jp add pop ljmp add mov subl mov xchg mov rolb test xor add sar cmc inc pusha fmul push movsb (bad) add subl ja fdivr sub lea aaa mov pop mov cmp add jmp or iret add xchg aam lea and push pop stc fcomps or xchg add add shll sub xor cmp lods push stos mov pop call mov mov xor push inc sbb jg rorb ja,pn stc hlt or icebp test bound pop jecxz lods cs mov test add iret jae (bad) mov dec push push add add dec insl cwtl or mov xchg mov add adcb clc add andl orl sahf andb inc popa add push add flds lea out (bad) inc rolb and mov pushf gs push adc pop pusha ja shll jge and mov xchg icebp mov subb or pop testb push lods cltd jbe shrb (bad) adc mov xor sbb lock cmp mov mov inc call jno cmp add in jno inc imul lock setge lcall push cmp out cwtl sbb sbb add dec imul mov cmpsl xchg xor jo cmp pop mov add out xchg push sbb push outsb loope dec mov popf lock dec push add jns stos xor or and nop inc mov and loopne inc lret cmpsl inc push scas ja mov dec jnp fidiv pop adc push jmp insl mov hlt sbb outsl (bad) mov arpl hlt fidivrl sbb mov sarb add push (bad) sub (bad) mov in push jne push mov or pop out push imulb mov or cmpsb jbe add mov push pop in test rcrb mov subl jno faddl pop dec cmpsl mov int in rol sbb xchg sub aaa xor ja pop xor mov and mov pop push add mov adc hlt mov imul (bad) (bad) sub icebp imulb mov jl cmp ljmp and inc cmpl mov and add jmp mov andb fs ja cmp inc mov lods push sbb pop movsl icebp push je add add shrb add jb sub add ds adc xor sbb inc jo jo xlat xor gs and rcll int3 adc pop sbb (bad) fmull xor sbb data16 add inc mov out cmp xor inc loopne sub adc out jge xor add xor xchg adc pop stc popa add ret fs and push sbb fldcw cmpsb dec rorl daa pop add cmp popa pusha adc (bad) pop sub fdivs out mov jle loopne xchg add sub or lds pop dec test sbb sbbb inc mov ret das lcall rcr in cmp sti rcll rcrb sub push mov insb test pusha cmp xor (bad) pop sahf cld or mulb and or (bad) rol xlat outsl fsts adc mov fldl daa mull and scas dec cld push xor or sub int3 popa dec (bad) test or daa or and or test jnp fstl inc adc mov (bad) rcrb add cmpsb ds xor test xor cmp testb and add xchg push dec ret lods sbb testb insb movsl dec mov or ret int dec or adc (bad) xor repnz ficom mov adc test cmp and cli add push rol in icebp pop dec push push test dec sub or bound xor mov lock jns lret rcrl in push ja xor call inc mov and icebp mov popf inc push movsl push push mov add dec add push push enter inc sbb add dec pop mov pop in xadd adc fisubr clc cltd mov cwtl push je pop mov and push addr16 ljmp arpl ja pop add xchg ret mov pop add mov cmc es add dec cli outsl ret pop lock stos inc mov lds adc (bad) mov in mov adc iret xchg cmp sahf mov add or lahf push daa and cs add out mov loop pop xor mov cmp add dec test std arpl xor pop fmuls rcr lea pushf adc into and adc jl mov add pop add enter add mov add adcl sub mov and sub cmp popf rolb cmp pop lahf mov inc int3 cli loopne push mov xor out pusha stos scas loopne xchg jge add add ds mov lahf mov in jp lods movsb stos dec movl insb xchg sar adc and repnz jmp out ss test push xchg sub fsubl cltd insb mull test call sub lea mov add xor mov dec cltd inc rcrb push dec sub sahf add jns js sub test and cmp movsl ss pusha repz out pop inc sub jb andb movsl pusha mov repz and xchg xorb cwtl cmp push scas test rcl icebp and loopne ja,pn xchg insl xchg inc mov hlt push mov pop sahf test cltd testl nop add jl mov or mov inc test pop jl mov das add mov add xor lds push push aas in jmp ror sub push daa mov pop loopne ficomp add mov sub cs lods in add cld test xor mov into aaa sahf int3 fisttpll repnz mov aam lahf out sub fstpt fwait nop cmp add orl nop adc out sub mov (bad) fsubrs jnp sarl test sahf jle mov iret arpl addr16 mov mov dec je pusha jnp cmp jge xadd mov adc iret data16 out rorl jl add fs and add ret test push rol scas pop test add sbb mov subl xchg jl cld or (bad) fdivrl dec mov and arpl fldcw add or cmp arpl enter add mov js mov push add mov mov dec iret rolb das mov add push cmpsl or cs jg cmp adc loop mov or repnz add dec loopne movl sbb in add inc lods lea add fwait (bad) pushf mov mov and (bad) data16 sub mov mov sub repnz mov nop sti rorl dec jg faddl fldl call adc out xor mov and clc fsubl sub push lcall in xor jns cmp sti mov or cs into pushf pop repz aad and mov (bad) into sbb (bad) sbb mov dec mov stc (bad) push add or add adc jmp jmp test fnstcw inc je clc rolb jno (bad) arpl jnp add out daa lds insl sbb sti jge and pusha aam jo pop ret test dec mov fcompl dec mov push and out sub and mull adc test sub enter (bad) sahf adc cs and cmp or jae mov pop cmpsl inc call mov pause andb add cli inc fcoms (bad) mov mulb nop add mov add xchg mov lock notb lahf iret push jl mov int3 (bad) ja sub adc push pusha in lock jl pop (bad) mov add mov mov fist cld es add addr16 lret sub test and movsb lcall or repz cmp jl sti or push cmpsl push adc add push lods test pop rolb (bad) mov shrl mov loopne cmp pop add dec mov inc fcoms jnp sub nop lds adc jl add dec and pusha aam enter and pusha jne fs cmp testl jp in or cmp sbb cwtl js dec mov and push mov dec sbb jge popa mov push or stos aam inc sahf cmp sub add fadds cmp mov lcall call push loopne ret inc sub push shlb xchg push nop bound lock xor pop ret test iret mov insl daa cmp inc cmp pusha add popw and and icebp sbb inc clc ror sbb jo jl test call fcoms daa pop or sahf iret jo js lret push andl loope xor pushf data16 pushl inc lods test scas xor xchg mov call pop push push mov aam mov test lcall cmpsl aas sub clc mov fwait jns adc int aad inc push cmpb push adc push das test in and sbbl fadd mov rcll loopne pop adc in add and and rcrl enter rclb dec add xor jb push or sarb insl add iret (bad) ja jae adc add xor data16 (bad) inc inc push aam inc pushf pop sbbl enter jb test push sub scas xor adc in je sbb mov mov pushf inc lcall mov sbb add mov loopne ret pop sbb dec mov or sub loopne pusha nop insb push mov cs and mov mov cmp add jg andb xor or xchg lods push aam (bad) in add push insb mov (bad) xor fiadd pop xchg data16 aad push xor fstpl xchg (bad) movsb popa cmp add aad das adc roll mov adc andb and es push jmp mov xchg clc mov pusha dec jns orl and sub ret sarl ss cs push mov test and dec je add pop adc cwtl mov fcompl mov lock add xor sub add enter xchg repnz in loopne popa shlb mov dec ja nop push add aad lret sub rolb mov test (bad) je shl in or rorl shlb jg stos les or call or xor lcall stc scas push add clc pop sub in lds addl push setg ret dec (bad) mov out call or cli data16 pushf add sarl xchg push add sbb shl mov inc push or and jnp xchg popf lret loopne or and sbb or lahf andb and pop in inc or pop (bad) add test or pop subb pop daa (bad) push mov jge mov jmp sub es adc es mov inc cld inc sbb stos inc add cmp mov fmull push (bad) sub loop and fimul shlb pusha jmp add xor fcoml xrelease jo mov dec out hlt rolb nop inc push dec inc jno adc movb push and add or mov pop call enter out (bad) aaa cmp in mov pop adc fdivrs inc sub ffree subl push push adc ljmp pop orb or nop xor pushf andl shlb xchg lret sub adc nop push (bad) out (bad) mov pusha mov push lock or xchg cmpsb sbb (bad) add aam in or pop sti out lds addr16 data16 cs adc push pusha test sub mov rclb dec push or or (bad) mov adc add mov adc int3 int3 dec or xor pop lret mov and mov add jmp lret mov cmp (bad) mov push adc add dec out insb mov pushw add in and cmp test jle in inc adc rcrb push adc or pop cmp (bad) lea mov pusha cld lahf mov subb jne sub lret adc pushf std les nop jo int3 and cs cmpsl xchg (bad) repz js (bad) xor test in add add or lods and dec rorb sbb add jl cli (bad) xor dec push fisttpll sahf pop ja sarl adc cwtl add test cmp fisttpl je sbb loope sbb mov dec or js inc add jecxz (bad) leave mov adc add push pop test and sbb ja lock xor mov pop adc lds xchg jnp sbb or adc sbb stc cmp inc cwtl inc insb les mov adc ja xor jg js mov pop inc mov test add enter xchg into fisubr add loop out negb push mov jnp pop pushf (bad) jo mov add lgs movsb push rcr jbe cmp cmp fwait pop push dec mov in ret xor pop loopne lret or dec lods jns lods test test cmpsl add iret fsts sbb and cs sahf cmc loopne movsb add jp lcall loop andl fwait iret mov ret popf sub notl xor scas adc ljmp adc cmp fisubl stos int3 inc leave (bad) xor pop push fdivrs sbb sbb out mov xchg xor inc pop sbb ret inc xor and insb rorl sbb xchg adc xor les and decb add push in fldl int3 inc mov mov xor into dec xchg cmp or mov outsl test mov jo scas add cmp sub je jbe,pt sub push lret pusha dec lods push pop nop dec and shrb enter push xlat push inc sbb cmp popf (bad) (bad) lods push mov clc ret and ds sub popa data16 adc aam jo xchg sub pop scas scas sbb add mov stc bound pusha lret sub in cmpsb add faddl cwtl pop lods xchg pop mov pop mov mov insl nop cmpsl popf jecxz ret pop mov adc cmc xor xchg bound mov sti mov xor xor xor cmpsl rorb add (bad) data16 cmpsb scas (bad) loopne pop sarb (bad) das pop xor xchg push call add or loope js add addr16 icebp or sub mov mov cmc bound mov sahf xchg push mov mov hlt int enter jbe hlt sub std popa inc mov or test (bad) out clc cmpsl pop adc in add arpl data16 adc sub mov rcrl ljmp ret clc jae gs aam (bad) and jb rolb jo lret push pop into jge fsubs mov pusha xchg xchg inc or pushf nop mov aam push add xor push sub inc lret xchg sahf cmpsl xorb xor out jmp les nop lcall sbb call push orb push mov ret sbb dec adc pop scas lahf mov jg mov push or add je pop popf adc cwtl push inc orl cmp sarb add pop add mov push fstpl test xor sub mov lods pop cmp push cld mov and mov (bad) xor test xorl cmc push sub mov (bad) add xchg dec push nop ret push inc inc (bad) add mov adc (bad) mov outsl dec ljmp mov cmp add jmp stos jecxz xor sbb lods push clc push mov add jnp pusha daa (bad) xor loope or push (bad) sub or push pop call loopne clc roll leave shrb cmp int3 inc out pop push mov mov (bad) sbb jmp mov aam or dec test add mov lret xor add jnp ds sub sbb aam adc and push or sbb and and mov xchg sbb or xchg xchg scas and ljmp sbb or sbb nop stc xchg mov adc jbe scas mov adc inc lods adc mov leave cmp and add inc adc pusha add or or sbb sbb pop cltd fadds scas loopne js adc daa push scas push cwtl loopne sti sub jecxz mov (bad) lret pop mov out and or or mov dec cwtl cwtl push jo js ljmp and dec add adc mov popa mov sbb xlat das push cld pop cld out fs mov cmp dec adc les mov xchg nop fadds repz push inc popl outsl mov shlb adc push xchg push mov lock in fildll into mov fs xor imul mov dec xorl mov ficom sbbb inc add xchg jns andl mov and xchg stc out cmp pop sbb subb popf jbe addr16 mov xor scas adc mov nop adcl cmpsl lock rcrb fs or fnop jne insb lods and xchg int arpl clc fldenv sarl lods test dec push or cmpsl add icebp repz sub xchg bound xchg imul xchg mov add scas sbb push and (bad) push mov shr sarl (bad) mov xor pop pop mov jno mov fsubr std roll stc adc test fldcw call aad push sub sbb jb sbb cmp jecxz cld jp mov int3 or mov jmp je rcrb ja xchg dec and int and sti arpl mov cmpsl adc xor or lods mov popa jne dec jo test (bad) or and add addr16 in jns add mov comiss adc outsl and in decb mov dec and dec mov xor rcrl sub sub fcoml mov in add jp fyl2x ret inc inc stos test mov mov (bad) mov xchg mov enter in jnp cli ss push sub cmp adc aad movsl mov cmpsl jo rcrl sub cli dec mov add subb dec cmp dec add sub mov xor add outsb and jnp mov mov sub bound cmp mov lods loopne out xor les stos stc inc test mov repnz and imul clc or xor cmpb adc je mov push inc rcrb rolb int3 icebp hlt mov test add push sbb pop add xor mov inc xor jge add sbb addb add mov adc sub push cmp sarl xor orb mov out add push jl int rol mov add jnp or xchg and pop pop adc and add sub cwtl enter push and push leave (bad) pushf or dec nop stos jo xchg mov push inc rolb shrl adc prefetch or ds clc test ja repnz dec ficoml jns add leave jae in inc (bad) cmp call (bad) xchg (bad) sub pop push pop sbb dec pop dec lret cmp add dec push add inc repz into mov mov pop pop mov idivl xor jo ljmp int3 lcall adc jge fidivr push pop xchg or lods mov into push xor jg bts adc insl or add pop int add (bad) fxch or add adc jle data16 sarb pop push mov add je loop cmp fldenv stos or push and sbb pusha (bad) mov repz jg add movl inc add jmp pop mov lret xchg add mov mov outsb add rorl faddl rclb cltd pop pop xchg sar or add (bad) (bad) mov add adc xchg cmp in lods mov or ljmp add (bad) pushf adc push cmp cmp mov jbe setns movb movsl pop lods ljmp cs movl sbb cmpsl mov jbe pop jno rcll adc mov loope hlt and or and addb push pop sti mov inc test subb add jg rcrb in ljmp or sub or repnz xor adc psubq sub rcr in hlt add addr16 (bad) ret xchg insb dec dec inc or aad cs pop sub lea outsl adc jecxz add das pusha mov fldenv call faddl cmp sbb dec aas mov inc inc push rorb mov xchg cld aam sbb (bad) lock iret xchg jne cmpsl loopne mov fidivl data16 dec cmpsb dec sbb cld fiadd in mov xchg ljmp mov inc pop mov movsl push add mov add in (bad) jae repnz mov imul (bad) nop dec mov add push sub mov push pop ficomp dec cltd adcl lcall aas mov jno add dec mov jnp jg inc pop pusha dec call cmp decb pop or cmp pushf loopne cwtl xlat pop pop inc push (bad) cli xor clc shlb add add outsl adc movsb lock inc sub (bad) enter loopne fdivrl (bad) mov sbb cs jb or int popa mov lock xor sbb sub jb adcl aam add adc rcl cmp add out adc sub add pop adc gs repnz pop pushf push inc xchg inc andb jp add mov lret sbb add jbe sbb lods iret ss es inc add stos cmp movsb sub add xchg test cmp jp add mov popf mov dec jp das les adc je fild dec test aaa xchg fildl je call call add divl jg add sbb test fldenv sahf out adcb sbb test mov push dec cmp adcl xchg or or les movsb cmp ljmp es jns add cmp add mov sbb cs cwtl fnstcw sub add lods clc andb js adc xor into add xor xor not fsts add push lcall sbb add mov dec mov push dec sarb add xlat xor popf cmp sbb push sub testl cmpsl dec arpl add adcl lea jmp sbb sub (bad) push push add jecxz add mov movsb add mov daa addb add mov lods push jae add xchg lds idivb pop popf test fucomip sbb sub cwtl stos (bad) jge pop pop xlat adc andb orl in arpl or sbb adc add add sbb add data16 add test mov push fwait pop add cmc test push imul and dec cwtl xchg pop add pop dec leave jns jb add sub dec sbb shl insb add mov xor or dec iret imul pop cmp push in jnp jo and jo dec and mov add repnz mov lods and daa arpl jp outsl stos sbbb push push pop xor add (bad) cld sbbb in pop call sub mov test test mov faddl fcom stos jmp outsb ret nop dec xchg inc lock add (bad) push data16 pusha out push add cmp aaa in jbe scas adc rclb adc pop push sub jecxz add xor add stos rorl mov push sbb and imul xor and add dec lcall int3 sbb mov int in add cmp lcall outsl rorl add jecxz cld insb xchg cmp sub lock xchg fnsave or test and add sbb xor or jb add xchg fld stc mov aad dec jg cmp lods jmp xlat pop add ljmp sbb adc add sahf lods shlb je add add std mov cmpsb push fcmovbe jge jp add jo lea cmp iret nop insb add mov mov mov mov cmpsl ds dec dec xor or add xchg loop jnp xchg js pop into push and xchg xor sbb xchg je mov lock mov sbb mov pushf cwtl test xchg fmull cmp or les arpl add and in mov add ljmp push sahf add inc and in sbb test pop pop add jae xchg fistl cmp cwtl pop pop pushf cmpsb fcoms push mov jmp adc stc or jns test imul xchg outsl xor lock mov outsb ror add sub cli and cmp add pop fisubrl cwtl call xlat ror mov clc leave cmp mov xchg out add lret (bad) fnsave push mov and pop mov mov xor xor js and or push (bad) cmp add push or mov leave out andb repz add dec lret (bad) mov add jne sbb fiaddl xchg (bad) cli add jp sarl popl lret mov pop imul test test cmp je xchg movsl mov fadds push outsb and mul sub add pop rcl xchg out shll mov inc add jmp add cltd xchg imul add and outsb pop inc jp stc mov daa orl adc pop pushf out inc hlt xorl jne icebp lock fs ss or cmp rolb or sub push and xor push add lea arpl jmp movsl imul sub insb cld out add sti xchg xor ds daa pusha out sbb adc or clc sub jae je (bad) inc sbb mov sbb dec mov mov inc push sub nop shll shlb ficoml mov jmp sub iret xchg loopne mov xor and add dec ss add mov inc test push add iret repnz popa push mov adc push test cli push or scas bound test sbb and xchg add push (bad) and mov xchg push aas and into rclb dec sub dec xor ret push xchg aaa xchg or and orb jg aas sub aaa jge mov inc cmp jnp add mov sub ds stos add mov iret (bad) out es add xorb pushf add stos pusha out adc sbb xchg inc mov pop in dec add test lcall push int or mov je stc sahf ret xor orb mov jmp push ret je js add lcall (bad) xor and cmp addb pop fdivl add sub cmp sbb fmul adc mov mov cmp mov push sti xor jecxz in lock jo jnp fdivr xchg push loop cli aaa loopne mov and (bad) lods stos ret sbb insl dec add mov dec fldcw push movsb sbbl jnp add cmc dec adc orb pop das cmp movsl scas imul add inc xlat icebp sub mov lods add lods pusha lock jecxz add add mov fdivrs sti inc xchg imul das dec add jbe jl (bad) push cmp push add (bad) mov call mov scas clc cmpsl cmp mov mov subb repz cmp dec adc ljmp mov repnz and dec mov (bad) fiaddl xchg das fisub lcall loopne cmp push xor popf repnz sbb xor ret add push inc test rclb pop pusha add mov pop in xor inc loop pusha push add add rorl fcmovbe out jae andb mov add xchg add in pop jp sub inc dec hlt and and jp adc lretw test add (bad) arpl icebp sub cmp cs into add out repz call femms (bad) push sbb daa mov add fdivs test cmp and and hlt sbb insl add out and notb addl lock mov pop add notl fsubrs cmp cli or add clc jnp out or adc push stc xor mov lea scas or data16 xor fadds add out and (bad) out and sbb sub ret lods xor mov and jno and adcb sbb and add cmp insl xor out mov les and xor cli dec xor cmp add imul mov (bad) cmp and cmp nop xor (bad) test dec hlt test inc adc cmp xchg es jne xchg call call xchg test xor js add ficoml add sub cli pop rorb movb add xor sbbl fldl cmp mov mov cmpsl test pop mov jecxz sbb add add mov loopne and add push cmc xlat es xor je adc fsubp add hlt inc xchg add push jo lds nop jo test scas add dec mov (bad) int3 pusha mov (bad) roll and add dec fdiv mov jns add test and adc xchg dec xchg fcomp dec sub mov cmp dec insl lahf push mov dec cwtl jmp push push pop add in dec ds ljmp sub icebp out and xor adc cld mov add sbb mov xchg lods adc jo ja push js int lret pusha and adc nop push addb push mov (bad) aaa push rorb add inc movsb in mov jecxz fldenv (bad) sbb add lahf cli lcall mov mov out les push movsl test es add jmp jecxz rolb sub inc pmulhuw hlt or lock (bad) call add mov jmp js cmp aam xlat leave dec pushf xorl je xlat cwtl add lea or sub (bad) movsb add lds sti lcall and cmp popa je cmp popa cmp enter je xor xchg sbb popf or sub (bad) call lods and lods adc addb or mov cmovle push sub fistp push add icebp (bad) (bad) pusha add lahf pop push add add xchg xor lods lea test sub mov inc add jp inc call push or loop mov test fsubs and scas xchg jbe ja inc es jns mov dec and and push (bad) cmp aad arpl add lds std add push cmp xchg cld repz xor andl loopne add lock sbb ljmp and sub pop nop fdivs jmp ss cmp repnz test shrb xor inc push or scas int3 jg dec add inc jnp pop je,pt xor mov pusha add popa and jo ltr and or cwtl push pop imul jo xchg (bad) mov sarl lods nop mov shlb and xor xchg add (bad) out and dec xor insb out out add ljmp pop mov les lea cmc out and xchg addr16 sbb and sub xorb xchg mov adc cmp andl cmp mov add test mov inc sub ret add xor cs ficoml or test out add cmp arpl pmaddwd jo je rclb pop punpcklbw or add push add mov mov enter cs add push add mov aam bound hlt inc lock pop mov aam add cmp and add sbb dec pop xor (bad) js jbe xchg mov dec sbb xchg test xor adc (bad) stc add add shrb sahf fildl aam lret sarb mov fwait inc adc or icebp enter xor mov sub loopne add dec xchg push and mov pop dec test nop pushf fs inc or nop test xchg ja sub les mov scas test in sub or push inc imul std je dec sub adc add movsb insb (bad) sbb add bound out insl in ret stc ss aam inc sub decb loop xor (bad) call sahf test pop das subb (bad) lret scas inc (bad) cwtl jmp jge xor mov aas push pop push mov rol add mov add jp std fistpll xor xchg out adcl mov mov das push negb pop cmpsb shlb and jge cmp xchg inc xor mov push shr cld cmp js rorl in jo mov lods enter out pop xchg cmpb add out (bad) push jns je dec loopne xchg je clc pop inc roll inc movsb outsb inc js xor cmp mov insb jle sbb movsb sbb pop es mov mov rorb add push sbb loop (bad) mov aas aaa in xchg add loop je ret lret mov or lahf aad nop mov or aaa mov addb fadds cli push fstpt lahf mov bound add fs mov icebp test or lock push int3 xor popaw jo xor and mov mov xchg jge pop push add or (bad) (bad) dec in add xor jge mov add js adc xchg inc xor rcrb (bad) loopne cltd push xlat roll jmp shr adc xor mov jp (bad) pop pop (bad) or out jmp push sbb or xchg pop test ret inc mov pop (bad) xor sbb jae subl mov cltd sbb adc ret pop aaa and test cmp xor mov repnz arpl sti pushf cmp dec jle sbb or fiadd xlat sti mov fidivl lahf add pop arpl add ret popf cmpsl cmp outsb add (bad) test add pusha sub ljmp or cltd adc push (bad) lods (bad) cltd lock inc fcoms sub mov adc scas rcll mov fstl pop pop std add xor sahf dec and sti test rolb fisub inc xor sub jl scas lret inc cmp popa (bad) mov lods insb adc xchg fildl push insl in inc push cmp mov xorb sbb je add mov adc sbb popl jne cmp mov add cmp add mov ficoml add test dec fcompl or jne cmpb push add cmp sub cltd int3 jg les sbb push icebp adc and dec pusha mov sub out fmul cltd and xlat pop sub mov sbbb cs sti xchg loopne movsb cwtl and add nop (bad) je cmp test loopne cwtl add cmpsb add lods (bad) push inc fist and in push xchg es sub add sub sarb inc add mov sub add push inc mov neg dec xchg add or adc cmp (bad) sub lods adc mov cwtl mov and and pop add repnz xor cli int3 sbb xor push pop popa mov in jg add cltd sub ficoml aas adc jb fstpl stos pop test out mov test sub add sbbb loopne iret xor xchg add or dec mov adc add rolb dec call add xor and ljmp (bad) lea cmp sti and mov push add xchg cli xchg cmpb pop stos xor rorb leave xchg mov pop ss lahf lds add nop loopne stos inc imul adc pushf or mov imul xor pop or loopne jne or les lods mov or and inc mov nop sub push mov or in inc mov sbb cli loopne scas loopne,pn adc and inc and jne add ret adc or jne and sbb lods es fidiv frstor push jo or add xor repz addl xchg inc in push in fsubl push lods insl push lea mov sbb add pop mov add add aad cmp pop and sbb pop les popf rcrl in add (bad) out insl orb jbe sbb test (bad) adc push mov add add not add pop ficompl push sub loope mov and sub jle jp lret cmp push mov (bad) call xlat pop (bad) push hlt mov in push pop add xchg (bad) pop ret mov js outsl repz orb push rolb xor mov mov cmp add insb stos aam cmp and test mov popf add push pause rol cmpsb js outsl sub mov or loopne push (bad) repz mov mov inc aam arpl add (bad) xor inc inc sub add arpl or push cld mov jne sbb add dec (bad) iret cmpl test xchg xchg add sub jbe add daa push insb scas cmp popf clc (bad) cwtl mov or cmp outsl out push int3 (bad) cli cmp xor and push leave add push icebp lock jmp shlb cmp pop sbb or jno cmp dec sbb imul add cwtl (bad) jo or adc or andl mov add insb das aam bound sarb (bad) jo loopne push js mov mov jl adc pop add int mov add or or pop push (bad) pushf adc ret xor (bad) pusha sbb incl ss jbe sub pop add and sub add jle aas fdivrl xor mov add push mov out pusha aam push (bad) loopne loopne pushf or jne sbb nop sub xchg adc xchg mov xor and or xchg aad test pop and clc cmp ficompl xor xor cmpsb adc xchg ja pushf adc push rorb xor clc test (bad) bound jmp stc mov leave sub jns and mov mov sub stos mov arpl cmpl inc push xchg inc stos xchg cmp lods orl lret push adc and test mov cltd or sbb cmp sbb lret add pop push rorb xchg dec dec add dec (bad) test sub adc xor loopne mov push iret mov mov das mov sbb inc cmp xchg sar xchg dec add bound addl jl,pn popa sub mov mov out ret imul add adc sub jmp mov ja xor enter adc or xchg push popa fs or (bad) jne xchg cmp and faddl xor or and int3 mov adc enter add mov xorl aad sub mov insb pop adc lods sub mov push inc (bad) xor xchg mov xchg sbb test out add pop bound jecxz adc push mov and dec push push nop loopne jne pusha repz dec popw inc sbb xchg testb mov dec pop and (bad) mov push inc and inc mov add bound xchg dec add scas jne xchg sub add imul pop in and aam xor jl (bad) sbb add sbb mov jne xor loopne ret cwtl xor in fisubl adc xchg or fchs inc call mov cmp and adc jge add loopne push arpl jnp sbb or clc test adc sbb jle push push test xchg pop xchg loopne mov jl push sbb xchg xor lret cs jo adc aad cmpsb shlb jns mov adc cs inc add movl and movb pop xor sub scas movsb xchg movsb add repz pop in add mov outsb inc fcoms cwtl rcrb bound pop dec mov inc add aaa mov jno pushf and push mov sub push mov ror std jno pusha loopne push aas insb loop push xor push in lds xchg fsubr mov inc lock dec sbb xchg or mov das pop mov ja out and fnop pop mov sbb add mov adc xor xchg and and jle fadds stos clc or mov xchg mov gs call xchg jp lret inc ret je jle data16 add loope lcall add (bad) pop stos loopne mov mov push loopne loopne (bad) add (bad) dec stos mulb cld xchg dec jne or (bad) repz (bad) sbb fs mov pop push xor cltd xchg xor push insl fmulp dec and dec mov xchg nop add inc sub (bad) jo iret dec adc mov xchg faddl test dec inc pop add pop adc adc scas jp or sub and sub sub (bad) enter movsl adc repnz popa or loopne ljmp and add dec mov loopne dec cmp testl xor fdivr push add mov push mov fsubrl cmp cld icebp and adc in and fdiv add clc cmp imul xchg jle pop mov sbb cmp int3 out lea repz mov outsl or pop inc (bad) sbb and icebp sbb nop xor into fsubrs sbb xorb push jg out (bad) pop add xchg enter xadd std jnp daa adc test aaa ror push (bad) shlb lret add lods jns pop dec and add push xor cmc inc pop mov push sbb xor xchg mov cmp sbbl push in mov jae sbb push inc xchg js add inc mov cs add adc mov mov xor addl inc repz dec or push add fbstp mov cmp lds pop aam fwait add enter add sbb cwtl mov push cmp aas mov inc repz mov adc fstps add lock andl pop cli orb into ja jle dec cmpsb xlat mov pop add clc inc loopne fisubrl add leave push shlb pushf add cltd mov ljmp enter insl adcb inc outsb xchg pushf inc or jp clc xchg mov call adc adc xchg add ss jle jp in mov mov out adc movsb add stc scas int dec jne or xor mov je out add rcll add adc jns jnp jmp inc push dec mov adc shlb push xchg (bad) xor pusha mov (bad) sbb shrb and sbb adc mov add inc push sldt scas daa sbb roll pop add lea rol sub pop adc inc mov cli call jbe popa dec dec fwait jl cwtl xor xchg cli lcall and (bad) add cltd dec inc mov xor push leave inc inc add (bad) and mov (bad) imul cltd sub loopne mov cmp jnp,pt dec add loop pusha mov test mov insl add xchg (bad) or push stc mov imul notl ror add and pop sbb pop stos into repz lods adc xchg pop xor and jo add and imul sub pop ljmp out lds mov into push cmp shr add ret xor add pusha arpl pop xor xchg jp add imul add dec (bad) or lods jns cwtl cmp cmp cmp pop add push cli out or daa je fwait mov bt dec test jp add pop cmpsb cmp lea mov mov aas xor adc scas pop mov add push aad les add andb sbb stos add xchg rorl hlt pop adc push dec push lds xor add mov stc ret loopne inc jno cld popf add into jge and faddl sub mov cmp pop pop add xchg popa inc dec jbe sub mov gs sbb jmp movl cld xor (bad) testl js pop int3 (bad) mov popf pop icebp rcrl cmp mov divl shl popl rorl jmp popf jecxz add std cs add pusha mov lods push fcmove outsl dec bound fwait mov xchg dec ret imul (bad) aad sbb xor mov dec add popf mov aaa add icebp jo push pop adc test ds lea dec inc sbb and (bad) jecxz cmp loop (bad) mov pop add (bad) mov lods aam arpl leave xor enter je mov js dec iret pop (bad) push mov enter dec cmpsb shrb add rcrb push mov jg adcb and dec int3 add pop cmp out fnstcw cmp roll int3 dec es xchg sub jae xor lret mov data16 mov cli jb xor rorl jae data16 es inc lcall add (bad) nop xorl add (bad) ljmp lcall rcrb and add (bad) scas dec add cmc and pop or loopne mov scas js stos adc cmp push andb imul lss loop mov jne dec mov loope add fbstp push out (bad) out add lock dec cmp in or push mov dec lret add fsin int push add pusha xchg jb sbb or sub add dec insb scas iret cs cmpsb repnz add clc fwait mov insl and lock flds dec sbb andl dec fstp dec dec ret sahf sub sub jg lods mov fcoml jb popf mov pop cmp cli inc cmp lds push inc jecxz icebp enter cmp xchg add aam movsl lds add arpl pop jle sbb dec cltd nop (bad) iret lcall fadds push nop fisubl add inc popa sub cmp data16 add mov cmc push lea outsb ja insb add jae (bad) cmc xor les inc adc jle push pushf pop pusha lods mov add stos das scas shrb outsb es mov jmp push rcl cmpsb ljmp pusha mov xor add add fsubrl iret jne cmc inc push add ja and lret repz or dec mov faddl add fnstsw les adc pop movq and cld xor add mov dec push add adc adc jecxz enter je mulb add dec jo and add pusha jo outsl or divps pop xchg and insl fwait add pop roll mov cwtl cltd sbb xchg xchg int3 out ja lahf inc and fnstenv stc adc fidiv add daa aad rorb or fmulp fldt dec rorb inc inc hlt movsl rcrb and cmp les and pop test pop scas add lock add mov cmp andl shrl les inc sbb fdivs scas mov cwtl adc jg add cmc push rcrb push sbb js inc pop add (bad) lock fnop fldcw add pushf aam pop icebp mov and sti jmp and and or add mov adc iret or adc repz push adc rolb push loope dec int push ja lods xor in (bad) imul leave jmp jo inc sbb imul mov add movsb test mov stc ja xor sahf ret shrl inc xchg or adc loopne xchg call jne sub lcall lock in add dec into sub add cli les stos popf cltd and inc jmp add cld addl jno add repz cltd jo das or ds add add xchg sbb arpl fmull xchg add and scas test xchg (bad) mov adc inc dec inc jo pop hlt lahf out loopne sub lods xchg dec aas add adc jecxz divb leave dec clc imul mov call or pop cmpsb daa imul inc xor movsl add mov adc cmp inc push jno (bad) mov sbbl sbb sub sbb leave ljmp dec daa adc xchg cmp enter add pop xor notl in jecxz add push in loop pop add inc add (bad) jle adc insb push adc cmp add aad ret add inc and call lcall add aas frstor loope arpl (bad) xchg push ja not push push popa pop fist add add push je inc aam mov cld xlat es or inc aad hlt addr16 and and rcrl adc add hlt inc or dec adc nop push xchg das out lods rclb add stc xchg sub repz fsubrs cmp and xor loopne jae lods lret pusha int3 aaa mov inc push out adcl icebp out popa pusha test cmp add pop jne xor cmpsl (bad) add xchg aas jnp push or cltd add iret fwait inc ds insb (bad) mov lahf enter int3 fistp add fisubrl hlt mov push add js jns mov lahf mov jae adc inc maxps push pop loopne add mov orb push jmp push out sbb mov rolb xor inc xchg ficom in mov cs sub pop mov mov outsb shll or mov xorb loopne jno pop pop rolb inc popa sti mov adc mov cmpsl (bad) punpckldq xor sbb push xchg sbb aaa adc xor add sbb inc fmul jmp dec test or mov std loopne pop mov mov clc sub ret cmp xor pop sbb add lcall popa xchg into daa movsl add addr16 cmp imul cmp (bad) add cmp incb fsubrl xchg (bad) lock xorl das mov sbb add xchg jne mov lahf inc push jo std dec adcb aas pop test pop xor sar sbb and push and inc repz adc adc test cmp jb lret mov and and cmp jae sbbb jbe add jno (bad) (bad) cld xchg in add sarb jle out sub in ret jecxz sub xor xchg jmp pop inc les fisttpll scas fcmovbe scas push add mov cmp sbb push sub add fistpll add ret inc in add out (bad) xor mov test (bad) scas fucomp (bad) mov jge xchg mov add sti push or iret jno jmp pop inc inc add mov jmp lods jl incb cmpsb loopne (bad) jno xor cmp and cli add cmpl inc and push dec sbb cltd xor repz add lahf sahf pop ret jno ljmp stos inc and cmp pop cld (bad) push sbb fwait lods cmpsl fdivl xchg into add add sbb add add mov sbb add jle mov sbb add les fndisi(8087 pop cmp xor sbb mov (bad) jle add mov mov (bad) adc aas lock dec (bad) xor nop shrb bound add stos addr16 mov aam xor jb clc movb out dec cmpsb and scas xor insl sarl int add xchg outsl mov push dec mov ret cld scas loopne ret (bad) je inc aaa mov sub cmp push stos mov xchg sbb orb sub pop jo add shll push mov notb sbb fadds (bad) mull pushf add jns cld in add insl adc or adc jp,pt pop movsb inc inc movsb test (bad) ja adc rol lret call push sub xchg mov xor pop loop add scas je outsl pop clc add pop jnp mov mov or or sbb fsubp (bad) lcall pop fs mov rcrb addl push jg outsl sbb fstl mov xchg jmp or mov push or add in shrb xchg std cmp rolb xchg cmp (bad) and (bad) imul lds or arpl popa (bad) (bad) push adc jmp cli pop sbb inc adc ret fwait scas add cmp jnp sar mov xor repz insb daa xor and nop fld cmp adc mov fdivl pop sbb cwtl sbb data16 fbld insb aad fsubs lock cwtl sub add pop frstor dec out shlb gs add jecxz lret aam lahf push inc pop jl mov shr (bad) and jb bound jle inc fs add dec not jp push add shrb add dec sub lds rolb and push fnstsw loopne jg add out jmp xlat sbb pop push or mov mov sbb and ret in inc and sbb inc nop (bad) incl popf (bad) mov cmp cmpsl and mov pop dec mov pop jnp mov iret inc pop mov and sbb dec xorb outsb fstl popa lret dec lock inc sbb xor nop das add addr16 adc pop pusha mov pop movsl in js leave dec add stos add xor add sub sahf jo clc fdivrs add push pop xchg or or fisttpll inc dec push call inc pop sbb dec in pop data16 (bad) cmp testl mov push push add or pop add jae (bad) popa fs roll in (bad) jo cmp add in cmp lock push add inc roll fs jl jmp xorb add stc stos nop outsb maxps flds sbb cmp (bad) std in xchg movsb sarb jnp lock inc add or outsl mov loopne inc add clc cltd push sahf sar add push jo xchg loop xor mov test imul mov mov push and add sub mov dec subb fcmove and add inc adc jle jb aas inc push add int3 ret add pop aad nop pushf add mov push std jle mov (bad) xor push pop movsb icebp mov mov test fiaddl lret test daa and cmpb mov inc xor (bad) (bad) aaa push push add leave fdiv add sbb pushf add loope mov push cld mov (bad) jo mov dec outsb loop movsb sbb inc int3 inc xor fcmove call js xor mov xchg pusha out mov lret aaa lods outsl ret mov insb inc fnstcw sub add adc lcall mov pmuludq push call inc push test lock and leave pop repnz cs sub orb icebp enter loopew pop or adc fadds and iret addr16 in cltd in into cmp mov mov jmp add xchg push add (bad) int mov add mov fstpt lret pushf xchg mov loop popf lcall pcmpeqb pop in xchg iret pop xchg imulb add jg arpl cmp orl push xor cld mov lret test addb or outsl xor add pusha xchg jno shrb mov ds (bad) rol mov jge loope ss add jb pushf xchg dec ds sub les lds pop ss or pop ficoml sub jg mov or sbb rcll es fiadd add popf ljmp or loope aam lock lcall mov mov push add scas andb pop loopne pop lahf and orb push ret or call mov stos imul sub mov and add mov fiadd in js pop into lds popa inc sbb inc add cltd xor push (bad) cmc mov jp sub inc inc mov sub dec int add cmp clc repnz jo inc rcrb arpl jmp add inc sahf popf stos lea cs and pop dec aam movb mov lret xchg push push adc push sub pop pop addl imul sbb loop add (bad) hlt add movsl inc fwait ror pop jae add pop icebp cmp mov add inc cld adcb movb loop inc push rol mov push cmp jbe adc das enter pop add ret dec rolb or aad (bad) pop xchg in add xor ds dec icebp out adc add sub mov mov in mov jno push xchg add in sub (bad) xor cltd mov add cmp loope lcall xchg stc adc inc out or (bad) or (bad) in pop ret mov jno cwtl inc add and stos stc push dec into add outsl add cwtl and add mov dec jge xchg push push sub add xor mov mov dec mov cmp adc and add push mov mov add inc cmp mov inc push lret lahf dec ret inc mov and (bad) inc adc cmp mov xor test jmp mov pop popf add and xor push inc add (bad) mov (bad) xor pop repz and popa lds push mov adc jne jnp shlb or xchg in rcll test int3 sbb xchg push out lahf mov lds in aad aaa cmp jae cli add mov mov add adc adc or xchg dec and mov dec push sub stc sbb adc or xchg fdivrs aaa dec hlt or mov scas shrl add and out mov add iret movsb test push push (bad) loopne push mov lret sar mov sbb lds dec int lahf add lret or add outsb dec and mov scas add xchg fmuls out pusha and mov leave popa lock ja push lret subb xor mov mov fnstsw pop shr in or inc add inc xor daa cli aas pop xor cmp ds add lds mov mov lcall aad add inc dec cmp dec mov imul jb jnp mov jecxz cmc adc dec cmp neg and into add in push shlb or fiadd jns mov and (bad) (bad) xor (bad) ds aaa hlt add popa popf add cmp outsl jge icebp out inc xor pop nop cmpsl adcl mov fcoms sub (bad) cmpb sbb clc push inc sub std cmp xor inc xchg mov popf ds cmp subb mov add stos mov gs aam xchg clc add push out jnp mov scas or std hlt push aad push in sarl inc mov or cwtl mov test (bad) lds cmp (bad) clc dec movsb (bad) add movsl fcoms push loopne stc adc aam outsl jne or das inc adc pop cmp mov xchg (bad) sti add popa push dec test jne loop push add sub and jg lret dec dec mov ds mov repz outsl pop mov adc pusha mov lea sbb sarb add pop adc call imul in add inc adc sub outsb lods add lcall mov push adc push sbb add dec mov add sub leave xchg xor sub jns pushw es add out (bad) jle jmp fs xchg rolb sahf nop adc inc fstpt add inc mov cmp pop push pop fadd or xor dec adcb mov mov mov jns mulb js add les pop xchg hlt (bad) jno and imul mov add dec add lds outsb or dec mov lret daa sbb push mov fidivl ss add int mov out and cmpsl dec leave cmp sbb loopne pop jbe mov lret dec xlat out push inc push pop imul ljmp nop push fisubrl sbb js faddl and or call jno add jmp pop and hlt das psllw xchg add ljmp push mov (bad) jp adc and rcrl adc stc pop jge mov cld sbb (bad) xor aam xor hlt nop leave loop mov inc mov add jb bound dec ds pop stos lret xor and incb imul mov add pop pusha inc aad or mov subl je fst out add or jae add insl divl add in and jp and test sbb adc loopne mov sub dec or pusha clc push push sbb mov rcr mov jmp cwtl gs leave add adc insl inc sub mov in out dec sbb stos and add xchg jno sub jge jecxz movsl and jae add fisub push sub add add stos arpl inc add fucomp jbe inc xor aam loop jecxz pminsw and pusha add cmpl cltd mov sbb fnstsw add cmp sbb push add and mov loopne fadds dec xor outsl xchg lock jne pop sub dec maxps ljmp pop (bad) dec xor aaa push mov loop add or and xor mov cmp sti out xchg add test repnz imul enter add (bad) mov in fildl xchg or push add add and clc jns add and pop arpl aas in mov jns xchg or testb or movsl add divl add dec push or call sti popf sbb outsb andb test shr mov add ret popl push add push stos lock xchg faddl adc (bad) xor in nop (bad) je add dec sahf pushf adc jp push cli and jns push dec mov int3 and repz out fs sub ret or rclb cltd ja pop add mov into aas jecxz cmpsb ret pop add ficom pushf movb adc xor inc lods daa ret dec jmp cld lahf xchg xor imul mov sar jo dec clc cmp mov jb cltd clc pop mov (bad) mov imul sub cmp push fdivrl and movsb out (bad) ret in loopne inc inc sahf push add out adcb mov in add cmp insb in add dec or outsl xchg scas mov in loope rcr fnstsw sbb mov add xor popa insl jae lret mov mov outsl loopne int3 push add and xchg cld and mov popf xchg inc test mov arpl clc gs add push scas lcall add dec sti jmp ret mov sub daa data16 ja add les cld divl add mov xchg aas (bad) jge sbb or xchg cmp add jge mov or jmp pop mov jbe add out in xchg sahf sbb add out imul mov dec jo add insb sahf dec push push mov add xchg mull or push pop xchg jnp inc call xor push adc jno cmp subl loope push xor pusha sub fwait mov jp jae call or dec xchg pop (bad) push aas shr xor add cwtl fadds insl xchg mov adc mov xchg dec push lock mov add in out movsl inc pop push sbb mov add jae and dec (bad) call and pusha movsb add repnz (bad) cmc pusha cltd push add pop jmp add dec inc in (bad) pop test and pusha pusha push mov and mov mov fimull add cmp loop insl xchg jmp lea sbb mov add loopne,pn inc dec into lods loope mov add mov jmp in mov mov loope js insb hlt mov call xor aam out dec cmp add (bad) cmpsb aam add dec popa les add push stos (bad) sub inc imul enter rorb xorb add add loope dec dec hlt test repz out repz and jge pop mov aad push (bad) mov jecxz push xor ret jno cmp sub nop xchg repnz pop xchg out cwtl jo jg aas and xchg pop je xor inc add adc pop sbb xlat add mov ds dec orb xor push aam ret std inc andb stos inc les aad enter jne or fwait lret pop pop pushf (bad) hlt test movsl std cmp xchg sbb or pop (bad) faddl hlt subl push add dec psllw pusha cmp jne pop sub clc sahf add sub adc imul add loopne add add inc loope mov flds dec sub call (bad) mov mov inc ss push pop pop pop lahf es jo dec fcomps pop mov fsubl sbb lds cmpl cli pusha xor xor sub es add jmp xorl add imul cs pop sbb bnd mov test adc addl mov in loop add push push add mov add loop xchg cmp clc push and adc insl addr16 jne lcall adc sub aas xor xchg add out and pusha jne mov stos and mov out add loopne push sbb and pop (bad) sub add outsb mov dec cmpsb int3 rol cmpb (bad) aad lods sub xchg clc es add adcb fucom lock scas in adc add clc mov or cmp js jne add inc adc and addb arpl push inc mov add add or daa or xchg fxch and adc and pop in ljmp push fdivrs scas add imul pop or testb js lods loope cmp xor lds pusha sub cmc test and es add lock xlat pop (bad) test pop and cs stos and jl add push in (bad) jnp push inc jne add cltd mov lock in js test call xchg add dec outsb fadds sbb rol inc in jno add outsb stos fistpl or jnp in je jbe outsl int jecxz pop nop mov xchg mov xchg mov mov add xchg inc popf nop js jno mov test xchg add jns (bad) adc imul and adc jbe mov and xchg (bad) loop mov jne insb jb mov add cmp add mov clc add adc jl (bad) jnp repz mov push sbb es movsl inc std ror add xor xor add fiaddl cmp inc jae push lods push jbe add mov push cli fmull daa add rol xchg mov ljmp add sub push pop and cwtl icebp rdpmc fld xchg push into xor sub mov or and data16 add pop cmp add push aad stos cli lods add xor add popf mov incl lods sahf pop add xor arpl mov xchg (bad) jno push mov mov cmp add jmp sbb js rclb cmpsl mov add pusha mov clc cli popl pop push xchg dec lret incl xchg fwait xchg cmpsl test sbbl insl or xor adc popf testb cmc jmp push (bad) mulb and adc jbe loop jl add test pop fisub xor xchg (bad) in add out add call add push sub popf add adc lea or mov jge,pn push lcall mov call or scas inc and dec xchg add int3 rclb rcll inc sub das add cmp add mov test adc es jle nop movsb (bad) jle add dec xorl xchg xor add fadds push and fdivl sbb jbe (bad) xor mov pop push loop mov cwtl mov in mov decb add sbb pop fldenv lock mov or fmull shlb clc pop sbb add mov inc mov inc mull xchg ja push hlt popa rcrb fisttpl push or cmpsb adc sti push adc out xchg ja lsl in and xchg pusha nop sbb pop lock add mov repnz ja leave or sbb mov out mov add push mov mov xchg lea fiadd mov sbb xor mov clc stos andb loopne push dec add popa dec push add (bad) add add mov add sarb inc (bad) mov add push dec lahf call dec push jge inc movsl pop mov mov or jle sbb daa dec (bad) add bound shl add into jle pop lock stos cmp icebp add (bad) jmp push pusha pop pop inc xchg or dec cmp jne js adc adc ds jge push cli jecxz lods or shufps mov nop pusha jns or pusha cmp mov mov cmp xchg or cmpsl adc or out mov mov push inc enter add xchg cmp xor cli xchg sub sub (bad) or add jp (bad) push in test cmp sbb or cmpsb mov test pop pop push xchg push or int3 adc ljmp icebp add dec adc and add mov out pop (bad) sbb mov dec mov add pop sbb (bad) (bad) jo add mov es ret cmp sub call mov fcmovnu shl ja loop pusha mov adc les negl adc pop adc add or dec pop jbe inc lret in aaa xchg inc dec rolb lock jnp xchg clc mov jae pop add xchg inc pop sbb sarl cmp iret cmp ja mov or inc (bad) icebp mov pop add cld add or add mov sbb xor inc push dec pop and inc push mov adc and (bad) lea addl leave test mov lret mov pop cmc add (bad) adc mov xor jb xchg scas jp pusha add mov ja ds inc pop dec xorb sbb call cmp bound jae push xchg or xor pop cld in cmp push mov pop or ja mov sub mov pushaw stos je or in ds fildll ret jmp add lret out sbb sbb lods or push hlt sbb inc mov das dec sbb xchg test push sub outsl aas fdivrl fs enter sbb pop pop mov xor pusha push cmp mov dec adc dec pop xchg or shrl sbb add xchg jo in jp push inc xchg lret xchg add sub lods mov and es xor leave jae inc clc jp and adc mov push pop lock add imul nop test or jge sub cmp add cli int xchg and call add mov ja rorb or pop xlat test out lods mov andb mov inc or in (bad) adc mov mov add or inc ja out cltd xor jo mov mov xchg dec adc and push adc negb pop adc inc jo mov cmp ret dec add out lahf jns loope and adc pop adc shrb or cmp aas adc loop or icebp push movsb sub inc es enter add int3 inc push add stos and add mov adc add aam or push loopne clc fmulp pop ds insb dec fcomps subb and adc jbe adc xchg stos loop push loopne scas mov shrb fadds jo jle insb shlb sub adc pop sbb add mov mov jmp (bad) adc mov and fidiv nop add push adcl jp inc fdivs adc ss ds mov loop sub and pop gs and stos inc adc das lret cwtl loope mov psubsw xor dec xor cmc dec data16 add loope movsl popa js or fidiv insb pop es sbbl (bad) insb adc mov ret mov imul or out jno or and mov insb arpl test enter add inc mov xor add pusha (bad) push dec sti adc jp push rolb xor (bad) push (bad) mov (bad) xor mov ret mov jo jbe out mov ljmp sbb call dec pop fs mov xchg mov in (bad) (bad) jge sub add (bad) lock adc fmul xchg into add mov add adc call add (bad) outsb mov dec mov and mov into ja rcr ret subps pop mov out add dec sub push ja je scas jp mov clc inc cs push xor mov or xor pop inc mov sub jmp mov xor adc into rcll and and cmp xchg or (bad) hlt sub push dec pop addr16 add xor mov (bad) mov add cmp sbb and (bad) lock add ja lret enter sub dec call add mov aad dec orl push and cmp mov mov xor or fmuls xorb sti push add addb cmc cmp cwtl push mov pop lds xor cltd jge sarl dec inc add scas add movsb dec mov es test xor addr16 inc mov mov cwtl dec add fiaddl add adc pop rcll add fcmove popa mov movl aam out mov jne pop ja in pushf add pop aam movb rcll push adc test cs pop inc es nop fsubl in pop mov nop or xlat sbb pop cmp divb xor push adc dec mov (bad) aaa cmp mov roll xor retw or out inc (bad) imul add cwtl cmpb pop les jp cmp call or adc sbb jmp roll mov add gs pusha nop lock mov add notb sqrtps cmp mov mov dec dec sbb push cmp ret or mov jae pmuludq dec lret mov movsb xor xchg test xlat mov add pushf or mov out dec mov mov dec outsb inc pop rcl jmp push pop xor test mov pusha sub jmp mov mov testl sbb pop add sbb scas add aaa mov add mov icebp or mov mov pushf and mov inc mov roll and push stos les add bound add (bad) mov nop add cmp xchg adc push dec add cmp add into mov mov call mov lock jnp add and xor cwtl clc clc xor cmpsl pop push mov sbb jg xor mov adc cmp lcall test add add push (bad) bound sbb mov sub inc dec aas jp mov mov add cwtl add jb fisub mov sbb mov cmp flds fidivrl stos cmp mov lods sbb lock mov mov push loopne push push iret js rolb add push repz inc arpl mov inc js nop cwtl mov clc xchg pop int3 mov (bad) (bad) jb psubsb pop rcrb (bad) or add dec mov inc lods pop pop adc movsb push mov ret sub (bad) fimul mov movsl jns mov fisubr xchg or xor mov jns adc mov nop adc jbe sbbl movsb enter aaa mov mov or push int3 sub mov xchg mov adc ds movsb add push or test xchg aam ror in push push xchg in xchg subb sbb xchg shrl fwait aaa push rorb in jns in inc subb leave popa clc mov add lea mov inc rcrb mov cmp mov add call insb notb adc pop mov jl stos pop jp inc or fsubs adc aas dec ja pop iret xchg xchg scas or cmpsb lods add cmpsl xchg movsb xlat cmp dec sub xor inc adc jb pushf pop dec pop cmpsb in or call addb add cmp mov cltd lock add pop add jg divb pop xor mov add mov add cmp jmp adc add (bad) xor mov rcrl cmp jecxz add xchg add loop sbb dec cmp jge fidivrl jbe add adc mov add popa or and mov (bad) testl mov sub int3 pop sbb sarb jecxz repz out mov add movsl adc adc jecxz pusha in rcrb or jmp clc aaa add movl clc xor adc add adc add std dec fs addb jl movsl add cmp adc jbe adc js sbb and add push rcll xchg and mov adcb or and or mov nop imul (bad) push in repz sbb ja or add xchg mov popa jo mov add js dec jae push ret fadds push subb enter cmp push jno jae lcall mov or sahf add add add std inc insl inc addr16 adc and decb cwtl mov xor movsl loopne mov sbb sti sbb xor or sbb push push or jae add das pop pushf nop loope aas add cwtl mov pop pop and push add cmpsb popl jmp and add clc sbb jp mov jge sub loope push add pusha aad js sbb icebp xchg add inc test fwait push push or loope sbb and fcoms inc push xchg dec dec sbb pop mov (bad) ds clc cmpsl fwait add fisub xchg sbb sarl into xrelease add stos test rcrb xor dec jo sbb mov mov sub fadds dec insl inc pop mov mov adc adc rclb jle faddl jge add stos mov orl mov jbe add fdivr mov add and addl out xchg and in rcrl pop out mov mov dec cmp inc add in add lock out loope clc add and packsswb jmp and (bad) mov add fstpt out add xor popl (bad) pop add jmp outsl rolb mov lods mov lret push push push xchg and je pop ja add daa and cld rorl mov shrb xor shlb incl adc jg mov pop ds shl cli add (bad) lret xor mov adc xchg outsb pushl das and repz jno xchg jae sbb in pop push xor dec arpl adc stc sub sahf add cs sub add xchg mov arpl fcmovnu call popf jbe add sarl cmp fisubr pushf scas rdpmc pop adcb xlat subb lds inc ja lods insb pop scas mov sub mov out cmpb in cmpl (bad) xchg add sbb flds outsb lcall add inc jae (bad) xor pop pop pop insl insb push adc fnstcw das out rol cwtl jne cmpb xor push inc lods add jle and add out xchg into das pop jmp loop xchg shlb dec nopl test adc addl ret inc repz popf sub ret push mov rcrb notl pop jo xchg (bad) repz outsl sub popa sbb pop cmp mov imul push cmp in mov in push xchg test jle or outsl (bad) and fwait mov nop mov mov and pusha ret add jecxz cmp cmp add enter out jae pop rorb (bad) fstpt movsb cmpl adc clc push dec dec sbb pop fcmovbe jmp inc add outsl cmp add add jmp add sub xlat sub mov and xor add cwtl aam cmc into jnp or inc out mov push pop insb inc stos (bad) jmp lret add popa sarl je lea add sti mov add mov inc subb sbb and cwtl jno imul dec jecxz xchg lock or push addl iret pop xor xor jns xchg jno stc es push jne add sbb jmp xchg jg lods push pusha sbb cwtl je cmp add les dec pusha mov cmp jb cmp sub cmp loope mov sets inc dec jo (bad) mov add xchg and test js add repnz rolb (bad) rcll pop sbb add nop faddl or or nop pusha sbb jns test daa jg mov orl add cs jno xlat jae mov sbb sbb std pop push pop fildl xor mov inc not out add mov push fnstenv adc add inc adc xlat pop sub xchg push psllq test and cmpsl jne std lods mov faddp loop stc cld addb sub addb sti add aas rcll add mov cmp add lret jbe test test test aam xchg cmp in adc mov sbb add (bad) dec test mov push cmp push stc inc add fnstenv lds cmp sbb in pushf xor out mov xor mov aad call ret adc pop xor sarb xor add popa sbbb in push inc dec xchg nop mov dec mov mov ss mov sbb inc clc stos jle xor int jg subb insl xchg icebp adcb je mov add iret lods pop add enter mov leave and cmp xorl sti add pop sub nop inc mov xchg div and cmp dec jb pop dec in fmull and xor xchg sub imul or fldt cs mov xor rorb out cmp xor and jmp add aad vaddsd cmp cmp add aas rdtsc mov mov lods sub push push jle (bad) lock xor inc mov jbe xchg pop pop or pop lret out cmp jns pop jle pop mov push xchg fs popa testl pop xchg xor mov push add (bad) xor or add (bad) repz stc mov mov mov outsl cmp push mov adc dec jle add mov loop sub fcmove cltd adc jbe popl and rolb dec xor add push mov dec pop push std push push sbb adc cmp outsl jns inc dec mov test pop jp pop cltd out cs test pusha add test push and pop pop lahf jg cwtl daa xor mov xor clc je add sti (bad) mov add pop and loopne add dec cmp aam add inc jle hlt sbb pop scas imul cmpsl iret arpl ret mov mov pusha icebp jle mov push inc popa cmpsb add je call sbb or js add mov add ja cmpsb cs mov or stos or mov and sub jne jp test ret pushf arpl push sub lock mov cwtl inc inc mov int3 inc movsb cmp add xor fildll movsl add and mov adc iret mov jecxz popf mov in ja sbb xchg test adc adc fs mov js scas movzbl mov push in inc or push add mov testb mov sar add mov je into loop movsl incl adc test add std enter aad xchg sahf mov sub inc add ljmp sub dec add (bad) aaa cltd push cld pop jge inc add int xchg sbb and push pop inc stos sub pusha rorb outsl leave fadds dec mov xor call mov lret pop pushl aad add lds xchg add (bad) cld and sub (bad) aaa clc call cmp cmpb ds pop cmc int fsubr add pop lods inc fdivr sub (bad) aaa push ss nop out ljmp mov xor iret rcrb adc ds mov add shrl add pop loopne inc icebp add sbb xlat in add test cmpsb add jnp outsl cmp push cli xchg dec jl call pop loopne sbb lods fdivp fsin les push test (bad) repz lds mov movsl jae inc pop add xchg sarl sub pop pop and mov cs xor or rorl pusha or push mov xchg cmpsb adc mov inc cmp and mov (bad) testl pop add jo push add jp sbb xor cli cwtl or sbb imul add mov add pop sub add add pop jl cmp movnti pop pop stos and enter clc inc lds pusha cmp pushf fdivs add xchg es test leave (bad) int3 push add pop xchg pop sbb push jnp xchg cs jne sbb push rcrl xchg adc add add xor add std cmp lahf mov jno and jge add xor mov jg add popa mov jecxz nop or outsb add cli fnstsw and cmp inc mov int3 fsubs add jns add cmp js leave (bad) mov xchg sbb and jo (bad) jb daa sahf mov add jg mov lcall inc out repz ljmp insl aad fisubrl dec pop lods xor sbb mov punpckhdq sarl sbb add ja test add mov incb ret mov push stc mov mov (bad) or lods cmp adc jecxz fimull movsl inc add or dec nop push in imul cld (bad) xor lods and cmp stos sti enter cmp mov and push add jmp add std ret pushf pop orl stos shrb or mov sti lret jno push (bad) mov sbb xorl leave inc loopne test add jmp movsl cmp sub ret sub mov fcmovbe push pop in testb mov mov add cltd mov add call loopne add add rclb or pop mov mov add push add add xchg sbb cs in cltd adc cwtl ja mov (bad) out push insl or push loopne pop loope jge,pt add fcompl sub test sub loopne and lahf pop adc push int3 subb jbe cmp fistl call movsl nop daa add cmp push clc adcl dec roll inc cmp mov mov fadd mov orb (bad) (bad) lcall mov pop jbe daa xor jge add sbb push and stos jns dec adc add lds nop ja and jo loope jb test outsb push jl mov call mov add arpl sub cs sub pop cmp add jle sbb xor xchg js (bad) and dec imul sbb push (bad) and dec adc add sub add stc dec mov pop cmp jns cmp xor push jne,pt lock lods sub into xchg or daa xor rcrb sub imul add gs pop arpl test rcrb and gs add clc add jmp (bad) mov add je sub enter cmp rol add mov mov sub fwait in int3 xchg inc push sbb pop inc movsl jo repz dec adc (bad) xor aaa clc test arpl cmp mov (bad) sbb and test pop ljmp pop cmc fistpl pushf addl roll mov cld xor cmp imul andl push test xor int3 or cwtl psadbw or clc inc mov add mov jge or inc cmc lret fst add rorl sarb add enter dec inc loop sub cmp mov push (bad) mov xor fwait aas outsb or adc fmull mov cmpsl or fisubl popf pop loopne sbb sbb mov cs jae inc pop xchg nop jl push in cltd inc loope and jns sub daa cmc adcb es nop imulb xchg xor test sub daa sub ljmp push xor or fcmovnu mov sbb push mov (bad) nop sub xor cmp in cmc add cli jo xchg dec arpl gs or add jnp mov add xchg insl xor (bad) in inc or adc pop push push sbb add aad add in sbb or pusha inc aas sbb addb gs add je add loopne push sub rorl outsl aam mov sub sarl ljmp ret adc cmpsb (bad) dec pusha faddl into lods cld (bad) sahf shr or add dec mull add or jmp mov mov xor push movsl sbb xchg pop dec add das fldt pop sub nop mov inc lea sbb in and adc rorl add lcall cmpsl rolb dec inc enter xor add mov jmp stos mov test dec js mov add test mov leave nop repnz cmc cwtl pusha aam mov add sbb js xor jb outsb dec xlat enter fadds xor aam inc test mov add jmp shrl ljmp mov out xor mov xchg sbb add xchg insb and add or cmp adc cld mov adc xor ret add pusha mov jle js xor (bad) jmp jge add mov mov jns add mov jo push dec cmp pop push lcall test (bad) or adc loop dec mov daa add push and cmp sahf jbe ja add mov movb popa hlt mov add stos mov xchg ja out cwtl sbb push rolb movsl out dec add sarb pushf insb dec jae pop or push movsl xchg dec xchg (bad) xor mov and roll jo addl out int and jne add iret popf pop in sub sahf or xor cmp lea fiaddl inc insl mov insb lods cld dec add jg push es add pushf pop stos push mov jb popf xor or add into dec cli (bad) mov loopne loop push cmpsb pop fcomps xor pop and data16 add imul inc scas hlt add mov clc cld xchg fildl mov jo push pop test cmp shll cltd add sbb inc adc and mov add stos mov cli add inc pop adc out scas add xchg mov push arpl sbb fldenv (bad) mov add cwtl inc ds std andb addr16 mov add addl lcall cwtl aad loop add dec add cmp rcrl lds or pop ret testl mov mov int3 stc jp or jg inc sbbb cmp mov add ja and clc orb call pusha add add faddl jle inc mov test loope mov jb inc ss push fld xor xor adc add mov sub rcll add push les cs or push pusha pop cmp stc cvtpi2ps push xchg jbe or popf push xchg add push add sub and add push jp xor jae pop call mov out dec leave add mov test xor pmaxsw orl sub cmp repz push pusha lahf mov loopne add jne (bad) adc xchg test pusha (bad) inc fmuls xchg lret add fwait roll stc or add cmp mov sbb addb push (bad) popa enter adcb repnz inc (bad) and int3 sti add adcb test add xchg addr16 jb cmc add mov gs int3 leave int add roll add stos xchg scas add and mov push sub cmpsl inc dec cs add push (bad) fiadd orl add jbe insl repnz dec leave call xor sbb push sbbb add es loop movsl pop sti add mov ds xchg xchg add daa inc jns sbb xchg pop pushf or add xchg imul orb sbbl lret add push scas add mov xor mov jo xorl aam push loope mov add mov ss pop cmp push test jecxz fwait mov adc cs mov outsb mov out add xchg jne xor mov xlat sub mov leave sbb sub aas mov dec push jge pop into pop icebp push jp xor movsl scas cli xchg or test mov dec push add arpl xchg cmpsl pop outsb sub sub dec ljmp inc imul mov sarb fidivl add push rcr xor cmp xchg mov nop cmp in jecxz add push in sahf mov fsubs dec outsb lahf enter xchg (bad) int mov add pop or lock fistpll jp mov stc push xor addr16 sub add (bad) mov add xchg outsb and mov dec mov mov dec add mov clc addr16 lret dec jnp sbb jae inc push movsl pop mov hlt inc cmp or sbb scas addl nop adc adc add xchg lret jne shrl add xchg push jg pop push rorb pop (bad) enter xor jo jae add mov hlt cmpsb lahf inc je lret add ljmp inc sbb sub test aam or cmp xchg mov add fist leave nop sbb push pop add dec repnz aam mov add loop lcall adc ljmp roll add or mov mov jle push add pop lods ficom sarl (bad) mov dec pcmpeqb outsb xchg ja jo mov pop out mov loope rorb jmp into mov add imul cmp inc ret add mov loope push add inc mov add adc add loopne roll inc push mov imul rclb jmp and scas addr16 add jne rcrb ja add (bad) or aam jnp (bad) dec in adc sbb mov add inc imul pop cld lcall jge dec or cmpsb jmp lods sbb daa fistl in add sub inc sub pop cmp cmp scas add mov lahf in jb mov (bad) jno add rorl in out push pop cmpsb test dec and xlat adc cld sub neg cmp pop gs add dec jp pusha add mov mov test (bad) mov rorb add (bad) mov in xchg dec add roll cmp addl cwtl loopne mov je loope push and into pop sub mov mov (bad) cmp mov imul lret add xchg jg push repz inc subl vpaddusw std addb pop jne sti or lock fldenv adc push fs xchg add fnop aam add cmpsl push mov add mov and xchg xor or andb sbbl mov imul add hlt cmp cmp in add pop (bad) test adc out xchg clc add xor mov add decb aam mov or std xor and sbb pushf sbb push jbe test ficompl gs insb jo test pop xchg jb shr out add scas lcall cwtl sbb add rorb add sti out pop (bad) scas add push std or (bad) popa mov popf lea add adc fdivl push and ret xor je,pn bound lahf add push cmp add add outsl icebp cmp or flds inc loopne (bad) pop in xchg sub add fisttpl add out (bad) mov add mov pushf jg push sub push add js adc pop test or shr push jle mov dec jle add inc int movsb jne fadds xchg in mov or in add add and in lcall cld or mov push add ret xchg push cs in mov dec xchg lea cmp lods enter fwait adc add imul sbb or je fbld lock inc add xchg pusha jecxz int test mov mov es in mov xor outsb pop xchg sbb lock daa adc lds stc int3 add or and nop popa adc sbb test popf pop or adc mov and movsb jl mov sbb or push scas stos xor add add inc jg xor xor int inc aam (bad) fs add xchg imul mov fistpll jne xor sbb aad mov jb mov es fld add loope cwtl or aad loopne adc mov cmpb mov sahf sub (bad) fnsave movsbl push cmpsb lods mov cltd mov dec adc pusha sbb mov (bad) rorb and pop rclb pop mov xor adc loope orb add and nop inc pusha lret jo sub xchg testl rorb lods bswap xor or sbb pusha push xor pop add or aaa pop fadd jmp mov xchg dec sub mov adc mov push clc (bad) cmp sbbl mov dec jbe xor xor add ljmp or call inc xchg fldl repnz stos int3 add xor inc shlb in or jno add dec mov add cmp repnz adc adc inc and in pop out adc sub movsl shll test mov (bad) insl jb nop push inc out dec push mov in dec mov add or add pop stc fs xchg cmp testb mov jo in cmp or fsubrs add sbb das lods cmp xor sub call mov cmpsb test mov fcomip xor sub adc in dec movsb and stc out mov sbb movsb mov fldenv repz sbb lret jb adc and lds aad and test mov add sbb and inc pushf xchg and add test ret gs pop sbb data16 add inc add mov mov and adc mov mov stos and dec pushf jno cwtl enter add out orb add add pop ljmp dec lods sbb call or imul rclb call or sub add outsl jb sbb pop add leave jge add js (bad) ss or sub mulb es mov gs jno scas jl sub in add mov mov (bad) adc subb repz std daa push out and pop imul jno pop cmp and loopne roll add into movsl hlt sbb mov movsb push mov adc ljmp stos mov (bad) loopne adc mov clc lcall loopne jle int3 inc jmp in add mov fiaddl std cmp and mov add pop outsl push ljmp test add or mul cwtl shll add push lahf and push je xor or lock or in data16 fwait std push mov add sbb cmp sbb (bad) xchg cmp xchg push xchg jne sbb add cltd sub (bad) rorl sub cwtl mov seta mov popa movsb repz cmp sahf cwtl pusha mov sbbl adc notb or mov jmp scas nop mov or adc in test adc xchg lods sarb jb enter out pop jnp das or nop jge cmp cmp xlat loopne lods les jo add clc add dec cmp mov shll cmpsl xchg mov inc xor xchg cmp pusha push add sub nop xchg ljmp jo lods popf cmc lcall mov mov jecxz iret and inc pushf in adc sub inc push iret or inc aad mov icebp jle inc sbb pusha int3 and fidivr push jb pusha xor xchg adc rcl mov stos dec leave or aad mov pushf pop daa cmp sbb cmp inc nop adc and jmp (bad) mov pop pop mov cli jo imul and lds js pop adc mov sbb (bad) add dec sub adc (bad) stc adc mov flds aad or and mov mov dec subb sub inc cmp adc subl mov add or cmp test out xor add (bad) mov jge (bad) repnz add imulb cmp adc xorl sbbb into hlt scas testl out dec adc and xor sbb aaa mov clc iret into add insb and movsb mov ds add jae lds adc xchg rcr (bad) out and or subb jl sub add push jnp jmp iret sub loopne sbb imul push lock fdivrs adc call stos lock push xor imul sbb inc js add (bad) (bad) movsb cmp cld (bad) call push aaa push xchg stc jnp andb sbb sbb mov dec fsubrl int3 loopne sti je xor xor cld add push jge mov add mov icebp adc cmp and pop ror pop lods mov mov pop fsubrp xchg data16 jecxz rclb xchg add mov cmp in jecxz dec test sbb adc jecxz dec mov out xor test adc adc repz punpcklbw sub dec adc enter inc push stos xchg cmp and dec xchg sub add jge xchg adc pop and test loopne int3 push icebp mov adc dec or push adc mov jge pop push lods out inc jl (bad) sbb cmp pushf adc int3 inc sub clc sub xor pop and cld push or adc mov enter loope inc xor int3 push ss push jb dec push and mov or ljmp mov jecxz pop jnp adcb lds orb das adc test jb or jo setle subb mov dec scas pop sub adc (bad) and xchg nop adc aas popf addb pop dec notl jmp mov adc pop mov lods jp icebp int xorb aad lds ljmp addb add and and icebp or cwtl les pop lea or jb js and ja pcmpeqw pop outsb push and ret cmp pop xchg jg and fstps push or adc imul sti xchg mov add push jp rclb mov xor push lea insb test push int3 nop add sbb sub les adc aaa push icebp in and pushf sub xor icebp push and add inc and xor and push dec jecxz rorb mov add enter inc aam cmp or popa lods in pop or mov add push (bad) or out imul cltd and out jo fs daa xlat inc in add jle test (bad) loopne rclb xor test andb in mov adc add shrl add popa xor (bad) xor lods pop nop pop mov fnstsw cwtl mov fdivp out and mov (bad) aaa jp add push cmp add aaa adc pusha les stos pop push ret xlat loopne xor in adc xor adc in cmp movsl ljmp jg js xor fstl mov xchg cwtl fisttpl cmc jae or es in jnp int inc pop jmp pop out insl adc imul cli pop dec add mov push fistpl add jg mov jp jae add sbb movsb mov loopne sbb push mov into add push add add add rolb movb xchg insb or xlat cmp add cs mov jg and adc int3 lods clc fldl data16 mov ljmp xchg jmp add inc scas add cmp jno mov (bad) mov add dec (bad) mov mov jle or (bad) rclb sub sbb call add push inc or lods aad gs add add popa rclb adc (bad) movsl dec inc sbb sbb in mov pop dec xor hlt aam sbb jp mov dec xchg out inc inc fsub je pavgw mov (bad) lods and push test fsubrl push jg inc add or adc (bad) xor push and clc jl sub popa mov sbb loopne add dec mov lock pusha adc cmp push ret icebp loop push push loope scas js cmp add in adc xchg mov lods push adcb mov jae add inc movsb mov pop stos dec push repnz mov pop push outsb push dec rolb xchg pushf add pop adc jge pusha xor xchg ds sbb iret or rolb into pop mov dec add pop sub icebp xor mov cs mov sub lret jge push in push add repnz pop mov scas cmp mov xchg or push je add pop sub jne inc mov jne les rcl sbb dec mov add sahf int3 out js add pop inc aam test into arpl add je imul (bad) xor or cli leave pop ret roll clc (bad) in add (bad) hlt lahf mov ja mov xchg ret iret xchg test mov xchg dec loop lock or (bad) push dec cmp adc (bad) or add fldt shll movsb cmp scas add imull inc out aaa jecxz (bad) ds add rcll push int test mov mov cmp rcr (bad) dec xchg lods cwtl (bad) repz rolb ret sub pusha push xchg (bad) mov addb scas int mov jo xor cs mov or inc cmp cmp pop (bad) xor test fs add mov daa popa incb or jge mov fdivl sbb and hlt xor mov lcall and in loop call xor pop xchg into inc das push mov hlt sbb lcall enter add and add repnz das add cmp xor mov cmp lea icebp in cs xor lock sub add pop test hlt subl push add lea dec cmp dec xlat xor lcall insb cmp aam adc mov push and add clc push adc test stc (bad) icebp or xor mov rcl imul (bad) or inc cmp push in sbbb add add insl orl pop and mov add sahf imul pusha pop mov cmp push push and es lret or outsb mov inc add xor decb inc push inc cmp add lock add loope aad rcrb outsb dec cmp fnstsw inc mov add aam add imul adc outsl add xor adc pop pop arpl fild (bad) lret rcrb aas ret inc mov sbb add inc std mov adc repz dec inc adc push pusha nop jl loope addr16 movsb jo cmp add insb xor sbb mul shrb mov test mov and ret scas rcrb int3 lock aam inc iret out add dec add xor adc shrl jmp adc and jno cs sbb test add xchg push cmp andb clc xor dec mov call stos adc in addb mov lods fidivl (bad) imull out cwtl cmp shlb mov jns dec sbb mov cmpsb push mov adc sub outsb in pop ret nop (bad) (bad) popf add jmp cmp mov inc mov add and add sbb fstps dec mov xchg pop mov loopne or cmp sbbl and lock mov add mov mov mov popf jmp xchg or push nop popa cwtl inc add js add xchg insb (bad) sbb pushf aas xor or fdivs nop add add jbe sbb mov out daa pusha inc push mov mov adc enter in push inc push or and enter cmpsl pop inc loopne xor test sti cmc scas subl sbb call cmp sbbl loop nop cltd cld paddusb mov xor jecxz mov jne scas inc jp shrl cltd popl inc push xchg (bad) push cmp add mov or outsb push cmp and std add jg mov jo loop inc push pmullw stos inc adcb push nop in or mov popa jb mov pop push and sarl gs add sti sbb inc btr pushf aad inc pop in (bad) lods loopne pop negb cmp cld adc add mov loop (bad) in sub fsub ret in push xor sub fldenv inc pop clc daa adc mov add jecxz sbb push fbld sbb or mov movsl sti rcrb add sub jbe add data16 jb fimull rolb mov add in xchg outsb mov xor jecxz data16 adc push mov mov push push loopne xorb push std push sub pop xchg and jmp ret lcall add xlat pop lods cmp rolb cld (bad) int3 imul add pop ror lret int adc xor adc (bad) dec lods add mov jmp inc and sub sub pop cmp popf or and and inc aas loopne daa lds fdiv (bad) fstpl ds aam xor push mov loopne jae inc mov nop push shrl sahf add dec dec rol inc in jmp xchg inc or or decb or mov js (bad) mov push xor adc add jecxz jns add add pushf fucompp iret xchg jo mov out aas xlat inc outsb dec test scas and jp mov lods inc dec test add pop pop mov arpl (bad) fstpl (bad) mul add add adc imul cli add fcoml jmp add rcrb stc out sbb push push sub add xchg sbb cmp push addl movsb daa dec mov stos aam cwtl push sub sbb add outsl and ret xor mov inc lock rcr fs je mov add cmp mov pop ljmp mov (bad) mov pop movsb nop xor add lock sub in add insl cmp roll faddp and xchg pusha scas or in data16 xor push fild loopne out mov popf iret dec pop ss pop mov movsb inc lods sbb mov lret sub pop jg add sub in or mov insb faddp and push cwtl inc push in jmp sarb (bad) lcall je daa in js cmovne outsl dec add sbb cmc insl sbb add dec mov lea jmp in jne cld sbb or shll dec cmp roll push sbb int3 jp dec add mov shlb mov xchg or (bad) push and loop and aam imul add outsl push loopne sbb cwtl bsf pop fsub dec das mov les ja add cmpsl sub pslld mov ret xor fdivl int3 add jl scas andl and pop in movsb ficom pop jbe xchg pop jne dec add divb mov sbb addb pop add jo dec xchg cmp in mov andl push adc mov push cmpsl add arpl sbb ds (bad) push inc mov call pop lahf testl mov add and inc fisttp mov in shll subl inc adc xor es ret outsb jp int3 sbb or dec loop mov test mov stos ja int3 jecxz adc inc in add mov mov add inc and (bad) js adc mov push int3 jmp lods sub push mov popf pop (bad) push jnp ret fnsave pushf mov cmp out mov (bad) inc mov mov mov add mov mov pop imul push jecxz jne or and jns je lods pop sub fdivrs jbe js loope dec loop jo bound cmp dec dec ret lcall jle add push sbb insl add mov mov sub lock adc jl add dec push dec out mov pop adc and jnp pop loop data16 int fsubs mov cmp sbb lods add ss add (bad) hlt clc mov or incb dec cmpb add mull int3 and inc lcall lret cmp and or adc push mov mov push add adc hlt mov add jge aam add sub cld mov dec mov into pop out (bad) nop xlat test rol xor addl dec sub pop pop jge add cmpsb ss add cmpsl loope cmp rcll push fildll xor mulb add dec dec push lret and outsl icebp insb inc in enter jmp jno inc xlat addl cli scas inc inc push pusha sub les pop popl cwtl xor cwtl call pop aas inc lock dec addr16 nop lods insb pusha or cmc out shll pop push add pop aad in pop out mov sti incl (bad) rolb and add movsl je xor inc add push arpl pop insb add xchg inc int3 add inc aam dec cmp inc je mov xor lds pushf push and add rcl sub rorb dec scas inc mov mov shrb xchg or cld jns adcl (bad) out add sbb push dec sti inc inc mov shl xor add (bad) mov rclb test leave sub imul lods movsb add cmp enter add mov jge mov enter insb xchg pop das fiadd dec dec add sub add loope lcall or imul rcrl adc insb lods add js sarl orb jmp add cs loopne (bad) xor jp into inc es push mov shl and mov insl aas add pop dec lahf xor mov xchg outsl sahf pop jp mov les add repnz jno sbb add cwtl sahf in push xchg fs pop pop outsl sbb scas je test or insl dec ror pop add in add sbb mov mov xchg add sti imul jmp or jnp push inc das addr16 xadd call pop push bound lods ds pop in test sbb jno sbb roll adc ret ja or insl xor aam sbb inc adcb fwait dec mov add sbb and xchg xchg je rolb ljmp inc cmp insl add push lret mov into fbld sub cmp push push xor pushf mov or inc imul cmp cmp add mov xchg ret sub or fsub testb sub push lock and rcrb and sahf dec push sub test add pop outsl aam inc sub jmp mov sub in imul aam mov lods iret inc mov ret push push es jg xchg (bad) push push outsb decb and notl mov lods adc ror add sbb pop push mov adc test mov rcl or (bad) stc out cmp mov insb ja addb sbb aam jo mov push inc ret cs and and mov mov lock dec in and adc xor push pop icebp xor cld inc mov jns jb add gs dec xchg xor mul add ror push adc (bad) ss sbb xchg test insb xor fs xor mov adc dec jbe cwtl addr16 xorl xchg xor mov push adc jb mov adc mov int3 xor imul dec and fmul fstl (bad) mov rorb mov push mov adc and lea sti lock jle ljmp mov jp add imul xorb mov jmp sarb cmp mov add sarl lock (bad) and fs xlat lds js or adc mov jecxz cmp sub nop inc stc mov in add je scas cld mov rol rclb lahf popa mov add xor out and lods sub add enter add nop js outsl stc mov mov in enter add xchg paddusw sub xor mov movsb push pop fucom sbb adc push inc xchg add push jg jl mov adc add fidiv (bad) repz lock mov mov fisub inc cmpsb imul imul leave mov jo iret and sbb loop add incb bound xor test pop leave rolb inc out add mov bound push mov call loope xchg mov or xchg add cmp andb add ret rcrl in add jmp xchg sub enter add fdivrs mov call iret mov mov mov scas and lcall popa pop mov mov test push inc loopne hlt enter push add push or pop pop jecxz xor pop imul mov and rcr mov fadds jb adc jmp sti and mov insb cmpsl aam add jno fdiv jbe daa imul add movsl or dec fiaddl dec ljmp push push jp dec imul and sub sbb sbb aas sbb in pop dec mov mov add outsl xor int jb or sbbb mov lods mov cld loope and test xchg cmc mov or sub faddl scas lods icebp mov (bad) xor movsb inc add shll inc stos and sahf mov and sbb jbe nop ret loope,pn push nop clc idivb add mov add dec test xor cmp mov dec pushf mov divb call and add jno and jnp mov ud2 adc cmp test sbb jg cwtl xor mov xchg adc add test add add fstps loope adc mov mov inc xor jno adc lahf mov pop out clc add dec xchg pop popa hlt fcompl adc test (bad) jle add insb inc enter jecxz int rol nop mov in jno lods fsub js xor fadds inc mov jge test add imul add shll mov jae je stos push jbe mov subl add loope (bad) out cmp ret pop loopne add push xchg add sub int ja popf mov leave cltd jnp insl mov inc pusha repz sbb add dec sbb aaa dec xlat xchg and outsb mov (bad) test rcr fs add jb add rorl mov dec cmp je inc xchg test insb adc jmp test push test in add jbe and dec aas and mov fsqrt pushf clc sbb test fisttpll inc and dec mov lret js add fwait stos cmpsb lock loope or out stos mull lock stos add fiadd addl sub jmp mov cmp add sahf cwtl out push add jle loop pop push icebp pusha sub and in inc and inc pushf sub adc sub adc dec push inc lods or adc add add dec sti sbb cltd imul mov cmp addr16 sub and daa (bad) jnp pushf bound mov adc add jmp addb aas jnp enter cs cltd nop in xor and inc daa inc lods inc or incb mov dec jp iret sahf cmc xchg cmp push mov cs mov int3 shrb and adc mov jp add js and add fiaddl daa push jmp (bad) in xor outsb push cmp lea push aaa repz jnp rcrb stos sub hlt pop add jns cmp mov repnz (bad) mov inc call mov rcrl dec lahf xlat stos (bad) mov insb add jecxz notb pop sub add in push jl (bad) rep dec xor dec add cmp movsl add (bad) test cmp jp sbb mov mov ret fsubrl fildl lds and or sbb shrl (bad) out inc add pop mov sti mov pop jbe fs push lock push sbb cmp and cli inc add push sub sub or imul clc sub icebp push xorps pop push addb fildl push rcrb add adc or mov dec xchg push add mov jge add xorps loope pop flds call pop test test or adc and adc xchg xchg and adcb pop or adc sbb incl cmp int3 bswap or roll gs enter js add xchg bound enter sbb adc add jb testb cltd mov (bad) pop pop pop or push std insb (bad) mov add imull add pop sub popa jb imul test adc insb and or std add sub inc add aad aaa notb add push jns negl cmp mov or jge push pop jne iret addb inc dec add adc pop rcrl sub add aaa mov mov repz or dec stc cmpl loopne sbb testl sub call dec inc add cmp jl repz xor add inc mov sbb and btc stos sub clc mov jbe inc packsswb jno mov dec jnp cmpsl movsb dec push cmp xor pop sub lods enter shrb xor sbb pop jo adc dec inc inc jae shrd repnz mov cmp inc dec jmp dec in inc rclb mov into jbe cli dec nop dec xchg sti fdivrl fiaddl or or jo (bad) call les and (bad) lcall repnz andl fbstp dec pop pop inc jmp cltd cmp add loop add add out xor pop jnp or lret jecxz sti test inc fisubrl push nop xor pop test push jnp jge out jae mov addr16 dec js push inc jecxz stc (bad) jne jae and mov idiv mov adc into call lahf adc push pop inc (bad) sbb cmp enter sbb add cmp (bad) dec (bad) divl xor sub and or js push or push add shll mov in adc cmp (bad) (bad) push stc nop ret adc and in pop dec push inc adc mov call fcomps sub add fidivrl andl or sbb cmp subb repnz push cmp mov pop mov adc mov mov gs push mov jg inc out cmpl shrb pop xchg stc xor mov add jge sbb pushf mov or loopne mov xor pop fsts lret inc mov sbb (bad) mull and and cmp cmpb inc popf inc sbb or pusha mov mov out adc cwtl push mov divb sub dec inc inc or test add lahf fdivrs adc add mov out push pusha sub mov (bad) flds testb inc cmc rorb mov inc nop cs inc cmp sbb cmp (bad) cmp push jge sub push out cltd cwtl std call inc or into popf cmpsl mov sarb and mov cwtl mov lcall (bad) popa (bad) ja add jno lds ljmp addr16 test adc imul dec test add hlt rclb call sbb mov adc sub dec int pop les loope sub ret jbe sub cmp sub popa xor cwtl mov dec add stos pop pushl out pop add mov nop test add mov pop push inc test pushf inc sub sbb loop stos (bad) hlt push cmpsl or mov mov cs add rdmsr sbb out pop sbb nop inc dec xor dec dec cld xor cmp data16 inc in add clc pop xor adcl mov and add sub add lret sarl xchg fadds add push xor aaa or daa sbb insl dec pop or out in mov call movsb xchg xchg nop mov pop jb fnstenv cmp insb (bad) push mov jnp out mov pop jno jp pop xchg push (bad) push nop cmp inc push xor xchg pop rcrl jbe jno gs adcl pusha andb jne add insl imul and jns and sub adc mov insl sbb pop mov es add pop jne jbe mulb out hlt lds mov movsl pushf add lret mul lahf inc jp mov xchg je ljmp sub and dec jg inc mov xor int3 bound das mov mov stc and mov xchg mov out xor mov sbb fadd push (bad) rcll adc cmp fadds insl add lret addb jge pop enter sbb cmp adc jl push pop inc add cmp (bad) iret rcll lea mov xchg mov popa jmp mov sbb ret pop pop dec jecxz popf mov xchg and inc (bad) out (bad) aad mov xor jl push adc ljmp sbbb ret iret sahf push loopne lahf sbb fcompl dec faddl in dec sbbl inc jne xchg xchg test mov rorl rorl mov and mov inc add in adcl movsl mov add stos ds inc sub clc jmp xor in or in sbb loopne (bad) call mov adc mov xor mov mov sbbl and inc add in and insb enter lods mov adc push push test jp cmp faddl lahf arpl (bad) cmp mov mov push push xchg test xor cmp push pop lahf mov sub je sub sti adc add xchg mov inc adc cmp addb inc pop dec xor and xor jb nop inc and lock jno sub mov fnstcw push int rorb sub inc incb sti daa jg adc out mov pusha in fs jmp cwtl cwtl mov adc hlt inc xor addr16 in mov xor (bad) xor lea pop inc or xchg rcl nop in lock pop adc xchg add cmpsl and shr add insb fbld js mov push pop mov call mov (bad) mov enter ja dec (bad) out cld popf (bad) xor push jne les mov sbb sub mov ds adc mov inc push mov (bad) xor mov add or pop lods pop out nop cmp into rcl pop pop cmc sub push mov mov gs mov dec scas push pop rcll sbb das imul and (bad) pop xor jb sti xchg mov push fsubr ja iret popf sbb lods loopne adc push lods add das xor arpl out pop in mov (bad) shr jnp jmp or mov mov inc and movsb cld stos push mov xchg pusha pop imul test and lock popa adc xchg jo inc ret out mov subb dec pop aam cmp scas pusha in mov mov lock cmp inc push (bad) les outsl inc mov add or jno inc push repz xchg ror cmp jge cltd js or lods jnp add push add add pop fs icebp fbld test push rolb sub pop loope ja (bad) xchg (bad) std (bad) dec and sub mov fdivs pop sbb adc cmp and sub test mov mov mov cmpsb push or ds xchg in js adc sbb adc push push mov or add int3 lods or cmp cltd mov and lret outsl ret cld push mov add sub nop daa stc adc sbb fist aaa lods pop fsubr imul addr16 cmp int3 fimul sub xor pusha fcoml jo sbb inc (bad) jae jne add push leave mov and jo jle and ret add enter clc popf add or lods mov pop and stos add das pop in les (bad) dec or inc xchg xchg hlt out sbb jo jns mov mov add aad push mov or jnp cld push jo mov call and ds daa xchg and and jp pop call stc sub mov mov mov mov add add mov fdivrl push push push pushf add and xor scas add cmp mov int out pusha adc xchg add sub rcrb push loopne addr16 pop (bad) sbb jo (bad) and sbb fimul jne clc data16 fdivs stc push lods xor inc push iret cmp xor sbb outsl lock test mov mov loop mov mov add scas sbb add and add pusha cwtl add addr16 stos xchg inc sbbb lahf pop bound and sub rclb add lahf jmp jns insb mov cmp adc (bad) stc es dec adc jp push cmp or pop or lock jnp adc pop clc dec and sub xchg mov (bad) (bad) or mov sub jp xor fldpi push sub push cmp jo cmp test dec add call add sti cmpsb push sbb inc les mov pop stos stc cmp out repz daa pop pop test loopne or pop cld add mov cmp sar add jb push sti test xorb add add and mov pop mov lock xor mov cli jae and add mov test sbb hlt adc imul call in push cltd js add lods das mov xchg jl nop or cmp inc fs jmp ret nop int3 or lahf (bad) out les mov jge push in mov cwtl cmp jp dec imul pop mov xor dec mov (bad) xchg and ja inc or int3 and or outsb outsb divl pop cmp sub imul mov xchg (bad) jbe je daa movsl icebp inc or stos and adc and sbbb test fcompl sub in imul stc loopne shrl mov add or call jmp lret lds mov mov std fs enter inc or push popa lods sbb aad mov addl push fs dec or clc movsb cmp pop pop dec lock call sub xchg loope repnz aaa sub movb outsb test mov cs cmpsl sbb sub xchg js and fisubrl cli rolb jbe sub rorl mov xorb pop imul ljmp push pop inc pop les cmp inc mov cltd aad mov and push add addb mov jmp js add inc push xorl cli stos ja add pop dec pushf lcall xchg lea cmp sbb and es imul pop adc addr16 sbb shrl jmp test pop jae mov clc sbb jb iret test xor aaa sti cwtl mov or adc call push add and mov mov push loopne jb mov mov cmp xchg add jne mov mov add jl push jp mov test insb std (bad) rorb pop dec cmp notl pop cs mov xchg dec pop sbb mov out push subb inc mov inc mov rorb mov test idivl jle jl mov jp and lock lahf lock rdmsr jmp std or adc adc mov dec lcall loop mov loopne fwait push and jmp or inc js (bad) push or jge rcrl mov pusha or inc mov nop fnstenv add push mov in add pop out add (bad) outsb push (bad) je push aas mov sbb pop inc dec add addr16 stc and add sbb inc aaa fiaddl pop mov add and (bad) aas scas loopne stc lods pop push xchg fadds push mov pop push (bad) sbb jl push cmpl add mov mov sub add pop adc rorl iret data16 push lahf xchg ja or push cwtl or (bad) fsubs mov std out (bad) fbstp jnp sbb pop mov add mov mov jbe mov nop mov add lea and pop add mov or dec mov adc jns loopne push mov pop and negb lock mov add rclb cmc inc rcrb mov out xchg push add and pop mov pusha (bad) adc sub ret je inc insb sub dec cld std shld aam jb add lock stos sbb test sub cmpsb andb mov pop pop mov add repnz push fwait jl mov sub add mov xchg gs jno or adc or add es sbbl jmp (bad) add rcr dec fdivl and dec mov fcmove push imul sub scas jmp dec push fisttpl jp pusha enter jb es insl inc xor sbb sbb daa adc add sbb ficom jmp repnz rol jbe inc mov inc add loopne inc movsl mov (bad) push fisub sarb xchg stc sbb xchg sbb pop fstl mov hlt pop inc test mov adc sub test mov stc xor add mov sarl jnp mov (bad) mov dec adc inc repz or stos mov test add or jl add sbb adc dec dec enter arpl mov (bad) xor adc ret das jmp loopne rclb js or adc daa inc jns and ficoml into mov lret push mov add xorb add fildll mov pusha xor clc cmp mov mov mov or and orl jnp add pop add jbe xor xor sbb xlat loopne int3 pop pop cltd add mov in adc ljmp ror movsb add aas (bad) call cmp or sub xchg addb mov sbb xlat and rolb xchg in add in cmp push cmp push cmp es mov pusha cmp js push popl mov xchg movsb mov xchg cmp xor (bad) fsubl mov movsb mov inc (bad) dec sbb in jno xor jb rolb xlat out fmuls imul aam adc insl add repnz rol fsts adc gs add movsb iret or push or les push fnstenv ret sub (bad) inc ret dec and je inc mov popf aam xchg cld push daa pop jne in push mov sbb adc cmp sbb and ret mov sbb mov inc lea pop popa pop sarl fild inc and ljmp dec mov fs sub xor lods sbb dec add cmpsl add sbb fwait add mov push inc xchg test push aad xor adc mov pop jo jl rolb push adc je jno cli push nop xor sbb es sbb sub add je cmpsb or push mov mov sub rorb jp or xor jp pop es xchg inc jmp xor fsubr gs push cwtl xchg cs inc push (bad) xchg mov out les inc or add repz dec push scas js add jp dec rclb jo (bad) iret sub and push mov add pushf hlt add jb jp add xchg out insb jecxz jne cmp pop ds jo hlt mov mov (bad) call inc adc mov addl dec add add inc popa nop daa jg sbb sub add and into push fs add jns rclb shll mov idivb cs pop ds cmpxchg cmp std cmp mov pusha icebp mov popa daa xchg jmp mov add mov es add pop shrl pop mov mov cwtl and fiadd xor in pop inc add mov cltd add mov sub add xchg cmp ds adc xchg and notb jb add lret jecxz ja inc pop es jae mov dec push repnz xor lahf lea push push cmp jl jno pop in sub inc push mov pusha or ficompl repz ljmp es loopne push add stos popa mov jge adc clc xchg imul mov sbb fsubs pusha pop out add cmp imul add adc mov mov jg mov insb cwtl mov sub jo pop cs test mov mov pop push add pop (bad) sbb mov outsb push lea and jo loopne pusha add push and test xorb movsb sti add xor pcmpeqb jns cmp pop lea out sub int3 int3 pusha add pop sub arpl mov adc dec repz nop loope add cmpsb out or in add and ucomiss mov dec jns add testl jmp daa stos mov add cmp jns movsl add or pop or shrl daa lahf xchg and xor push sbb mov enter inc push sahf mov mov xchg add dec sbb mov add adc add and hlt pop fbld push daa mov sub and sub push adc mov fs pop xor lret out sbb adc loope test sbb dec mov inc or clc popa je and mov or dec jge mov and sub xchg or (bad) pop xchg sbb push fcom mov adc data16 (bad) aas add mov lock call (bad) stc jns adc daa loopne push adcb pop add sub fist clc lods sbb cltd int3 xchg sub inc mov orl mov test arpl xor out in leave xor xor flds call cld (bad) mov xchg mov add sbb xchg push xchg cwtl clc and popf aaa mov xchg add cmpsl adc mov fimul jl lock insl push or cmp test movsl xchg and pop dec and dec dec dec cwtl xchg pusha sub mov xor mov add dec int add add add rorb mov lret fisttpl xchg push movl fildl fdivl adc mov ret lret jge clc mov fiaddl iret loopne lds jo lods inc rolb das dec push out jbe dec push andb add pop out jmp call cmc sysret fcoms sbb inc (bad) lret push jb pop and xchg jecxz xor jl das push sbb push cwtl loopne addr16 roll xor out jnp sbb inc sbb imul pop xor imulb fbld out pop add push popf adc add and add divb and sbbl add mov add mov adc xorb mov faddl icebp jbe lea and cwtl repnz fdivrp add fiadd add jns add xor jnp mov xor and add enter cmpl mov push je fs (bad) stc cmp inc sbb mov or test dec mov cli pop int3 out add xor sbb adc ss enter inc loopne ret pop add pop stc add sbb (bad) cmp out incb xorb push and add cmc push outsb in sbb and xchg sub push sbb mov call imul jle lret xchg mov xor (bad) idivl aam or cli jg test cwtl in das std adc adc ljmp add out enter pop leave dec sbb dec subb mov mov (bad) test (bad) jb shrb aas hlt xor addr16 jp dec xlat jo or sbb test pusha add repz cmp or xchg mov aaa clc mov or adc (bad) repz pop and xchg push mov aas jne aam mov rcll testl pop sbb fs and adc enter or mov and push gs sub sbb sub inc adc test and mov push jbe jae les inc stc dec sbb les pop nop and pushf mov push outsl push adc add stc sub add jnp push mov pop add jb add add mov popa add inc and or bound dec and mov sbb popa call and sbb out (bad) mull enter sbb addb jo add iret mov inc movsl or sbb out add js push test dec dec test arpl mov (bad) jne popf xchg mov add jge jno mov lock ljmp ljmp clc add fucompp in loop mov mov push adc rclb push pushf loopne dec xlat xchg ret std mov or mulb sbb test inc imul test pushf add jmp xchg jl push add lock movzwl and or dec cmp and into popa adc test push in mov movsb xlat and mov nop cld shlb popa mov mov cld fsubs push mov outsb mov mov jge xor push (bad) pop add xchg push sub shlb insl inc push sbb test or mov sub cmpsb jl pop or sub add or xchg pop cli mov sbb jge mov add and repnz ljmp es lock in fs adc pop inc je mov jns xor pop adc add pusha add dec (bad) jl jmp sub add cmpsb push out cltd enter rorl es xchg out imul mov cmpsb inc sub pushf and into aaa (bad) in out ror mov icebp add lret cmp adc fidivr inc mov add aad rol or jecxz and push or push scas fsts add mov mov cmp pop mov je pusha inc inc into (bad) repz out daa add cltd jecxz imul stc addb dec adc push jbe into aas fstpt movb jb or out movsl mov mov sbb in bound fldl js or jge pushf adcb dec jmp add orb nop adc arpl adc (bad) fnsave shrb mov push dec hlt mov cmp xchg push fstl (bad) mov test (bad) mov rorl loop add sub into push mov mov xlat xor out out or inc in insb mov fildl mov mov in cmp cltd gs push mov and loope pop cmp outsb sub aad div add pop pop mov sbb sub xchg or fadds mov in jmp mov and add addr16 sub add dec call and pop insl sbb dec cld test or (bad) jmp loope sbb mov push xor pop in hlt movsb hlt pop bswap adc daa adc sub (bad) jg je mov inc xchg jge lea jle adc rcr shlb xor sub xchg mov mov dec fucomp pop xor fs inc xchg cli mov es adc mov cmpsl adc fs pop out cmp ja aaa call mov push jb push aam stos jne sub call push fs imul icebp mov (bad) sbb mov jbe fdivs add iret jno dec movb addr16 cmp add ss hlt scas (bad) cmpl dec mov xchg mov loopne mov aas add cmpsb or add std mov popf dec or nop ljmp test movsb add leave sub rcrl test daa ret dec jo nop jne push pop bnd ja sbb pop adc and adc in in enter pop (bad) mov push cmp stos mov loop into inc (bad) divl rorb nop xor xor pop in jge jae (bad) xor leave mov (bad) jne rcl cwtl sub lock mov sarb push lds fsts jns shrl sub jmp rorl stos add adc add lret and stc and aaa xchg sbb in add mov lahf mov inc jb cmp push lods push lret mov sub mov add mov jge xchg mov pusha mov jns jne add and jge xlat out orb jns fstp or xor hlt rolb je aas mov pusha mov push (bad) jnp and scas aad xor add cld (bad) test push pusha (bad) push inc fcomip push das sub inc icebp add push xchg pop pop push enter ret rorl add into jno sub rolb cltd je mov fucomi xor jp xchg ja xor lods jge mov cli fidivl mov push out lods add push scas ret pop or xchg arpl faddl js sub sbb dec test push xchg xchg fstps adcb and mov sbbb addr16 push or flds pop mov movups fwait cld addl cmp orb xlat push hlt pushf and dec fisttpll push mov dec mov add hlt pusha call fs push es sti add popf jg inc ficompl and ja fsubrs (bad) fistpl aad xchg stc add xchg call xor add fsts pop rcrl mov cmp outsb mov jns sbb dec add xlat movsb jnp and inc movsb rcrl cmp addb shl xorb sbb add nop into es jne adc in test mov add mov add add aad push pusha dec test leave js xor xor jle cmp add dec popf rolb sbb or jns and jmp push aas add push cmc (bad) sub inc pop mov nop push rcr leave cwtl mov xlat jl roll push pop das test loope hlt clc lret push push (bad) std orl and lock mov and add add xchg fdivs mov out fldl inc push pop pushf adc mov mov fnsave xchg adc scas cld push imul nop push cmp fcmovne dec mov pop mov mov cmp pop adc jmp sub xor cmp out mov pop fs mov rclb mov mov scas test cmpsl jp js and call ds lret (bad) pushf mov lea cltd adc roll sbb push mov xor xchg imul add fistp cltd xlat (bad) shrl fsubl push and hlt adc les les enter cmc xchg out mov or xchg mov mov sbb xchg sub push xor add inc ret mov out inc push jo xchg stos push lcall adc test adc inc dec add sbb les (bad) ss or mov inc pop cmc and aad xor sbb add pop ret mov test add push test jp in leave jecxz aad cmc mov dec xchg push lock out ds lret clc cmp orb aas sub jb rorb pop pop sbb add dec add xor or push mov icebp stos and jo inc nop xchg add pop mov (bad) xor add dec sbb jb (bad) int out push scas loopne add jns aad mov mov ret jecxz xchg inc xor inc and add push (bad) jbe in leave sti xchg xor add fstpt and cmc (bad) jp sub dec or sub lcall mov (bad) jbe repnz inc inc and aas aad repz aam fs mov pop cmp fs addr16 dec or hlt add xchg jne scas test es xor sub dec lods xor int mov sbb cltd incl cmp jmp das add insb je add fcompl ja (bad) mov cmpsl fstpl movsl aad dec cld mov rclb shrb add or js int3 sbb (bad) mov and adc in scas jb mov repz sub and stos add test cltd sub orl les push test lret dec clc or movsb test in cld or (bad) lahf cmp mov mov add sbb (bad) ja idivb ret les rcrl aas aaa js jb mov add fsubl add ucomiss popa es mov add or jmp rcrb js cs sub (bad) aam cmp xor sbb mov es pop or add sbb test out xor xor rcrb adc ja xlat test movsb add mov imul stos (bad) shll mov cmp sbb cwtl sbb mov inc out inc xchg xchg loope scas push or sbb stc enter sahf decb mov in pop das cmp add test (bad) jno lcall xchg sti je loopne dec js mov jne add mov in sbb inc or push je lods jae cltd mov out loope xor mov std lds pop ret hlt add lods (bad) and add jle adc sub jg ret inc xor adc movsb test fs add or and (bad) enter je mov mov fnstsw push push pop lods test or (bad) loopne jge pushf xor out mov call out jg scas mov stc jb push add push or or repnz pop push (bad) loopne add lea insb cwtl idivb adc add ljmp sahf nop push fstpl jmp subb dec stos rorb add out xor inc mov dec xchg or xchg fild cmp mov mov pop cmp lock cmpsb mov add imul xchg add loope and fs mov ja add mov (bad) mov popa pop pop push (bad) xor and les mov inc sbb inc fstl push ja push nop cmpsb add mov movsl addr16 cwtl push out lcall fisttpl loopne dec inc ds add mov and add add cmpsb shlb xchg mov sahf scas stos push xchg in adcb sbb addb cld cs mov pop js lds cwtl lods jecxz mov add test nop add sub jne add dec out aad dec jp cmp add callw jne (bad) lods mov es imul ds pop faddp add lahf or push out add mov (bad) pop (bad) out push stos ret cmpsl add push daa icebp sub mov add dec ficomp outsw lods push orb repnz fldl int (bad) adc sub syscall xor jo dec push jb lcall das jl test mov stos mov cld pop sbb add test add (bad) lahf xor nop mov ror jb jo fcmove mov jae lods mov mov cs repnz adc pop jb rclb inc lea add inc mov add or stos loop mov xor adc push xor fwait pop test and fsubrl icebp nop aaa bound (bad) leave xchg adc mov mov push lods mov inc inc (bad) cld rcr imull push xchg mov test (bad) mov and adc cmp (bad) cmp ret xchg lods adc sbb add push (bad) jno or rcll dec (bad) push jl movsb or inc inc cmp cmp mov inc xor and push mov dec add dec insb fsubrp lds adc inc and or and clc sbb pop xchg lock shll adc out sub leave rsm clc rcrb dec sahf pop add fstl mov pushf jp das xor shlb pop insl jbe cltd dec in adc ljmp push push loopne mov or lahf add scas test mov sub jl push sub jmp lods shl mov shl push hlt xor jbe daa sbbb mov js add les int push add fiadd enter push insb push into push repz aaa icebp mov pushf xor pop xchg loop sub jno adc push nop dec icebp xchg sub sub pop add lahf in aas jnp or call add out dec int3 cmc and scas cmp clc mov orb cltd or les cld sbb mov xor mov adc stos or jae mov ss mov cld add rol push or push push inc mov jns pop int3 aas test and sbb sbb movsb and out sub lock mov add js push out and lcall jne adcb pop mov add push dec pusha push addl lea cmc and add pop dec and push push jae jle sub (bad) xor cwtl repnz pop inc pop mov jo aam (bad) xor or call add in jo xor subl nop js or movsl jp xchg nop push add je add pop jnp dec ja and and push xchg pusha cmpsl inc sbb add fisub and sbb loop (bad) outsb jecxz and dec dec jp adc insb or sti sub adc sub mov pusha movsb stos fsts into xor add int3 adc repnz sbb sbb jmp hlt add push xchg popl or mov adcb int3 repz bound fidivrl dec add inc pusha jmp and pushf leave push orl push out enter call testb cmpsl sub xchg nop dec inc pop and movsl inc test outsb adc or sub cs sbb imul orb enter adc jns fmull test adc rorb mov test inc (bad) icebp es sbb xchg movsl cltd xchg mov xor lcall mov enter cmc out stos enter inc push idivl sub pushf cmp pop or pop mov mov add add inc add adc xor mov imul movsl addr16 push sbb into mov dec adc fildl push out ds int (bad) cmpsb sub add pushf add adc xor lods clc xor out pop call divl (bad) (bad) xchg mov or mov lods cli lea shl daa lock nop push xchg add inc mov sub mov pop mov pop test xor mov lcall and insb frstor jae push dec std repnz add lds mov pop cmc ljmp mov push sub jmp mov inc add repnz test push add dec xor adc f2xm1 sbb xchg call subb jnp jb adc lock mov sub or mov insb rcl push lock mov pop cwtl cld xchg or xchg or add mov js outsl mov or add mov fstl enter loopne and mov decl sub and jo and mov shll dec xchg fldt mov in insb cmpsb push and lahf mov dec leave les pusha pop inc ds or inc sahf push lods test adc neg xchg add clc insb (bad) lret xchg pop cld pop fsub (bad) push add test cli xor or lods or pushf orb xchg stos test add popf and sbb jl sub fs add jno in add mov test lods mov adc or pop add push push mov pop out mov cli bound mov or pop lea pop test push stos add rorb lods fwait inc and push lock mov pop rol out out fsubl xor push mov or xchg mov pop mov inc push icebp push out adc sub popf mov and dec ret mov imul aad and push in pop int3 mov fadd enter adc bound ret test sub lds insl int and and cmp mov fiadd adc movsl push and jmp xor fdivl mov xchg xchg mov pop aas pop mov sahf and inc outsb add popf dec dec and das push jg push jno inc add jne pop add xchg dec cmp (bad) arpl sbb push fadds add sub mov shl movsl imul jmp cli adc fisubl or aas inc xchg int3 sub mov les enter outsb inc lds add mov fadds fild or add and jge test sti dec or movsl pop test adc fwait or rolb dec (bad) shrl in mov jo enter and mov inc pushf fs dec xchg int mov cwtl pusha pushf test movsl fs rolb cs andb adc test repnz or and add pop roll outsl sub pop pop daa dec idivl and repnz dec cmpsb clc or lock pushf mov or add jb lahf pop lret stos jg dec adc call pop mov inc and rol mov nop add test bound outsb jae adc xchg push jecxz add sarl inc int3 pop lcall (bad) fimul and xor outsb sub js inc dec and mov nop adc dec in test inc xorb push add xorl dec (bad) xorb pop scas out imul xchg rcrl ljmp enter inc xchg or pop xor adc jp or gs adc lcall fsubrs mov dec mov loopne out test sti ret xlat test add les add jae xchg jmp jp or xor or ret stos in lret aaa std mov jo mov and adc mov jp add xchg cmp or xor adc movsl or popa stos punpckhdq out and pop iret sub mov adc adc fadds mov push rorl cmp pop movsl push addr16 pop stc inc push pop cmp js pop cltd add fmull fisttpll adc movb addr16 sbb mov pushf add cmc mov xchg ss pop add mov push xor add je ret pop fwait xchg adcl sbb pop adc push mov pop lahf add mov (bad) fsubs out dec or (bad) outsb xchg leave ljmp and xchg mov dec sub dec xchg in pusha inc ljmp lret stos adc cli test psubusb cmpsl adc jmp cmovge jecxz mov cmp orl dec int3 fs js jmp data16 loopne arpl cmpsb in inc xchg adc ja clc xorb add sub mov nop and jno add sti fsubs rol rcl add enter cmp mov and lock mov pop xchg les jno cli mov pop andb fdivrs push add adc sbb enter test mov stos mov nop add jp adcl push roll outsl pusha adc mov test and mov xchg inc mov cmp mov add sub xor orb push adc repnz test mov inc in shll clc mov addl es (bad) hlt mov or cmp addl mov cwtl dec lock pop xchg clc fidivl test push jno pop rorb jl jbe add or repz mov outsb jo dec mov mov mov add dec ds xchg dec bound jb push sbb iret out jns mov cmpsb pop mulb xor pop mov call adc test add xchg adc insl mov mov pop lods lods and mov sub in sbbb jne enter add push add pushf ljmp add andl pusha add add push addr16 jo in mov jmp rclb jp imul mov in cwtl ret add repnz fimul add cmpsb std xchg add jmp insb out enter mov (bad) icebp mov or sbb adc cmp insb xchg nop push cmp sub js inc dec inc xlat xchg mulb daa jg add and mov clc lret or je mov mov mov in les lds stc cmc mov lods adc (bad) popa mov push mov inc rolb fs and sub pop stos and xor sbb sub lock pop outsb insb in test (bad) shrl repnz (bad) movsb dec xchg or call fdivl add pop mov dec and sahf std adc or int sub sub inc pop inc movsb scas cmp jne fwait mov adcb jae dec push divl pop and rorb faddl mov cmpsb pop pop or stos adc xchg sbb cmp cltd cmp insl dec call xchg or jbe dec les nop add cmp or adc js (bad) mov adc add faddl loope jno xor sbb les loopne mov adc push pop or mov mov pop adc data16 mov add mov stos lds pop icebp call xor int enter aam adc sub pop mov js xchg pop or xor jns jnp sub pop rcrb lds movsl inc cmp loopne fisttpll scas mov out pushf lock xchg mov lret dec jp dec std push jnp call stos sub mov add pop dec hlt add jnp dec test stc dec fcomps add inc fwait mov (bad) sbb faddl and pop testl mov shlb push jno ljmp loopne dec daa sahf loope add cmc lods add mov fsub xor lods mov adc dec les xchg dec push sbb push clc add push jmp mov (bad) cmp or ja pop push insl mov fwait jp sub add aaa push fdivl lds adc or mov dec add das outsb sub jo adc or and xchg imul push jge inc stos dec ret cmp lods sbb aad sub push cmpl icebp (bad) js dec xchg (bad) cwtl mov xorb push cltd sub movsl jp or adc test mov and mov mov in push out add sub adc adc call dec negl or (bad) pop fwait je shrb dec pusha test mov add push sbbl push fs mov sbb cmp dec dec fistl or pop gs inc sbb outsl push mov inc jae (bad) inc add mov push movb in lahf dec sub add stos dec sub bound test mov dec leave jb add mov sub mov pop sbb int3 orl add sub mov lock gs sbb aaa scas pop mov jno in or xor cwtl add test add das mov insb cld (bad) mov jle js jecxz mov jne gs push pop xchg imul loopne dec ret leave nop mov mov call mov mov mov out aad xlat dec andb sub das mov int3 fwait mov mov icebp mov ret outsl dec sbb leave aam (bad) sub adc mov nop add inc les xchg add ja fdivs fwait js mov sub jb mov cs or pusha sbb sub pushf int3 add popf lds mov ret mov jge daa pop mov cmp in loop int3 and test dec inc and fwait pushf push sub mov ret sti out xlat insb addl clc or mov xchg les sub lods cltd jnp mov not rorb push cmp fs dec ret xchg push jmp cmc (bad) cmpsb sub dec jp push lods out xor inc movsl in cmp roll mov icebp scas out jae sbb mov sub push (bad) push or add add test (bad) ficom lods out xor add push sbb in loope popl (bad) insl scas add adc les dec push adc (bad) push and add test fisub sub stos add imul jb inc mov push cmp lcall jno in and push cwtl cs sbb sbb lock iret cmp stos cmc sbb mov pop dec inc leave dec or push push inc frstor cmp mov rcl xor popa cli imul mov sub inc icebp (bad) cmc andb xchg (bad) xor test add sub add mov enter mov (bad) jno and mov sbb mov add out (bad) mov iret in les (bad) mov jae lds insb inc or insl fistpll (bad) adc lretw xchg test sbb in cmp jo jno mov pop insl (bad) das and push cmpsl sbb out xor add mov vmwrite fcoml or add loopne pushf push cmp and or mov xchg iret add rcll sbb insl push push loopne dec sbb cmp cld mov stos test jle mov scas outsb add mov cmp sbb imul in dec mov lods and xchg push mov sub add push out mov pop and push test call pop iret sbb test adc fisubl adc (bad) jae sub jno and inc test mov mov lea das jge add mov rcrl pusha dec enter orl xorl int3 movsb and xlat mov mov jnp das push dec inc pusha and mov sub add rcrb push popf (bad) out push outsl pop sbb roll push roll push pushf test dec add xor int3 cmp jnp jb negb mov fwait xchg bound subb iret xor test jmp add sbb shrb sub mov xor xor inc lret inc inc mov push aam sbb out jmp rcll mov add sub movsb insl add xor loopne test push andb and dec mov push mov in pop xor pop repnz ret fwait dec nop mov es add mov lock movsl rorb or pop fwait mov icebp ds imul or mov int3 aas sub mov jg ret outsb xchg lods dec and shlb test test sbb fs adc into or outsl icebp pop int3 test push out add lret mov fildl jg repnz test jns add jnp mov and adc mov andb addr16 lods inc iret fcom movsb pop jecxz dec sub cs add (bad) arpl fnstsw sahf sbbl test pop sbb scas dec pop cltd add int3 movsb mov arpl push test add aad mov imul sbb in mov loop ficoml push cmp sub sub enter test adc add ljmp test aaa outsl or out mov aad push into dec xchg or daa mov mov sbb popa fldt addl xor popf nop (bad) mov fsubrl dec arpl mov pop pop pop cmp jnp fmull les and lods add sub andl and mov aad fcomp xchg data16 cmp mov es add jp dec shl pop incb cmp in mov bound rorb xchg cmp cmp adc mov mov add cmp sub mov mov and fwait dec add jbe mov outsb pop xchg call dec cmc loop out add in enter out pusha imul push scas insl sbb adc and pop hlt add or fcom int3 ret lea fisubr mov and sbb cmp add stos pop jl pop or cmp or mov mov add movsl pushf mov mov pusha dec jl jecxz inc sbb jae,pn clc or mov rcl adcb lret ja xchg jl out popa add sbb jp add aam fnsave cmp dec jg ljmp pusha subl and jb je call mov mov xchg sbb mov push xchg shll je and push or push inc adc mov daa dec or and add cmp int3 out subb mov add in repz inc into add or aad int3 cmp les lahf dec out and cmp out sbb sahf js jecxz sbb (bad) push aas add hlt jle iret push push cmp dec xorl orb lret adc mov jbe xor push fimull fst cmp mov add xchg inc or mov inc roll test out fsts scas or push es dec out pop or xor xor int jae loopne sbb scas dec mov nop lods jge add jnp stos add fs mov enter xor je xchg addr16 or ja mov jbe jge pop test add call divl rclb popf xor cmp jp mov (bad) lods sub int sub xor fimull adc repz lods push test add dec enter and cmpb xlat jecxz clc push jmp and mov cltd mov mov mov inc (bad) sub cmp pop es dec mov dec mov movsb sub in jmp in xor andl dec ret add mov jno mov add jge int3 add je xchg pop fisubr mov bound cs decl and es dec and or cmp pop clc out sub inc sub test mov jp add jge fist xchg sbb adc add std ds xchg adc sub pop sbb mov leave std clc psllw lods loopne mov mov and pop aaa jbe hlt dec andl xor iret cmpsl sub adc jmp loop rorl dec adc xchg push outsl hlt lea sbb in dec mov les cmp test push cmp add in inc mov and mov lods mov mov push push mul shrb add or add arpl bound inc mov call in mov (bad) jne andl mov mov sbb push test scas gs cmp nop inc push mov cmp mov mov lret jl inc push sbb fdivs push and fisttp or es cmpsl rolb inc or out jmp lds out call push dec jo outsb xchg xchg pop inc je pop or (bad) adc cmp into ss cs (bad) pop add lds insb add imul roll mov loopne ds dec xchg shlb sub test inc mov xlat nop lods and mov stos or cmpb out test data16 pop and pop add mov xor push repnz xchg xchg push add push or dec mov push adc xor jo les insl dec mov add inc int lock pop cmp pusha mov mov cmp sbb inc or clc dec icebp add push mov in and sti pop fsubrp sbb add aaa xlat push xchg lcall std mov aas cmp push in out fistp add adc push test xchg leave aas adc je fsubl (bad) repz inc add sarb cwtl pop iret sub mov xchg xchg lock dec xor sbb push in dec cltd and sbb xchg stos and scas addb faddp xchg jge sbb sbb xchg jno xchg pop imul add comiss popa mov dec pop (bad) fisttpll sub mov cltd lods in jb adc jne add push out clc xchg repnz or jmp xchg inc adc (bad) popa jl,pt xchg mov sbb push mov inc push adc cmp clc call sar subb adc sub cwtl or popa add cmp pop daa mov enter mov jecxz ret xor ljmp and cmc add xchg aad jae add sub scas daa xchg test add lock cwtl dec push stos repz call cmpsb sub mov mov roll cmp dec scas daa in cmp sbb sub call test shrl adc dec icebp add outsb add inc ds js cmc fidivr add std testb lock cli mov or push cltd push dec or cmp test pop incl jge orb sub popa mov ljmp mov add dec lds pop inc fs movsl pushf or add fs loope out sahf popa mov jl out add fldcw mov inc sbb mov movsl push sbbl repz mov (bad) mov inc test inc adc xor in or enter and sahf jne pop cmpsl lock shl hlt cmc add cmpsb dec ja jge cmp ds lret repnz adc sub call scas jmp mov sbb stc cli add sahf add loopne nop add mov ja mov add mov cmc pop jns and jmp pop lea dec out pop pop jae add test cmp sub hlt icebp jl rcl add xchg enter and or fnstenv (bad) in cmp pushf mov icebp inc xlat into js imul out inc fist paddd hlt andb inc clc aam out mov mov dec sbb mov add outsb jle loop ljmp or adc dec sbb leave mov xor mov mov outsl dec sub pop pop or xchg add (bad) into add insb dec adcb pop push fimull lods mov cmp dec dec inc and in mov into mov mov mov lods and adc dec movsl sbb (bad) nop ljmp and scas shrl cmp cmp dec jae or xor jl dec into xor cmp add mov xor inc cmp mov xor inc fcoms stos jno push shrb sub mov and jl mov out test cmp (bad) fcompp add mov lret pusha or and ja and dec mov or fcomp mov xchg (bad) je (bad) push fdivr or inc das cmpsb mov cmp sub test rcrl mov add and (bad) sub inc (bad) call fdivs rorb arpl add outsb lret insb jge inc ja stos fsubs add xchg mov and pop movsb inc inc xchg popa insl xchg jb or xor sbb add sbb fmul xor push mov nop sbb mov andb out test inc adc lods fiaddl enter cmp push roll nop and adc or push xor fwait add inc scas aaa or aad (bad) in cltd push addb pop xchg push add mov leave jge add mov daa sub adc ficom (bad) insb and loope in in (bad) mov fdivrl jecxz pushf fisubrl and adc cmp std push and test add sub sbb add add movsl scas dec int3 fisttpl pop pop movsb xchg sub sbb mov ljmp add pop fldt enter fcmovbe mov pop mov mov lret dec in std push dec add pop addl push cmp mov xor inc int3 mulb lahf call les dec lods test mov push (bad) xchg sbb push into xchg aad push int leave xor lret mov push push sub hlt ror and lret mov add push or sti jle shrb xor lret cltd mov xchg lock xor outsl pop add adc add xchg arpl adc xchg jnp cmp fimul popf push loope lods add jo add sub movsb adc add rcrl pop jns pushf push lea movsl cmp mov je add add aad (bad) mov mov cltd add int3 push cmp dec int adcl loopne mov inc mov adc es faddl sarb (bad) push lods adc xlat sub rorb ret dec nop push fs cwtl mov push adc xchg dec aad sbb inc imul dec push in fldl add mov push in or cmpsb loopne icebp inc or push das into adc add mov leave iret inc jae sbb enter inc aaa jmp cwtl out jmp andnps jle xlat pop add mov xchg mov push push or mov xor loope movsl loopne pop push fnsave add adc xor sub (bad) movsb out pop dec ljmp int (bad) jns iret (bad) out pop xchg int3 dec and mov rclb incb mov pusha add jl pop sub push int shr adc and pop pushf or inc movb or lods lds push push mov dec jno mov ss ffreep pop pop add xchg or js aam fadds push pop xorl mov pop mov test add popf nop push insb test inc xchg es push mov adc and push add sbb dec jmp gs es aam addb push mov in sub sbb imul mov mov xor jle or jae es dec add lahf aas rclb aam es and out lods mov idivb lahf pop dec adcb setb cmp rclb dec (bad) xor jp add push jecxz push repz shrl inc (bad) aaa stc int3 cmp dec das (bad) xlat mov roll cs dec mov enter int subl and cmp mov mov pusha in iret add mov jmp (bad) pop jno stos imul fistp orl aaa add ret sub xchg cli pop mov test fcmovne inc dec push xor cmpsb add jle and add mov rclb and mov pop jp sbb ret pop dec xorb push inc jl lcall mov xor push mov push xchg outsb jle (bad) gs jmp imul (bad) aam aaa loopne scas call lds (bad) add (bad) push jb mov xor fmull push ja jnp add das sub icebp fisubl add adc jmp imul push movzbl or flds xor loope sub push push loop (bad) das js xchg mov movsl scas int3 loopne fdiv roll aas push add jbe mov mov pop dec mov jbe jmp dec push mov sbb add cmp xlat cs sub pusha mov sub int3 inc nop mov xlat outsl sub jmp lods cld repnz lret jb mov xor pop (bad) js jo xchg dec out push jb dec pop jno sbb and mov dec cmc push and cmp add lahf jl xor (bad) xchg dec xor scas sub cmp push inc fwait or insb sub mov mov ror add and scas mov add test loope lock and pop in add mov dec aam clc and (bad) xchg mov sub sub sub in nop pop push sub aas xchg addr16 lock dec rorl stos inc mov imul ret test pop add xchg mov mov xchg mov imul hlt add or xor (bad) mov cmpsb stc xor push push imul cs push js in (bad) pop (bad) rolb lock nop call cmp xor leave int3 dec xchg cmp mov test daa or and cltd lods out mov cmp fdivr orl (bad) sbb xor xchg popa (bad) jo or sbb sti and mov stc mov int mov push fild pop fcompl (bad) mov mov movsb lods fistpll aad mov jo ret and movsl add pop adc inc cmpsb (bad) add push sub sahf outsl pusha pusha je add popa gs xchg jno inc (bad) mov shll aad and push leave push sub (bad) int3 inc adcb out lret lds sbbb cmp aad fsubs cs or xor add adc jo add sbb mov pop (bad) fsubrs mov xchg sarb add add (bad) js sub rolb es cld pusha inc (bad) out add and aaa push data16 or std or cmp adcb (bad) insb push sub xchg hlt mov jns push adc in mov ja hlt dec fstps mov movsl inc mov cmp cmp repz cmp xchg mov adc pop sbb int push cmp adc or mov add mov adc (bad) mov xor push push sbb cmp inc dec idivb test pop pop add (bad) fnstenv lahf es cmp adc sub xor cmpsb sbb out pop test pop mov pop adc popa or mov or sar sbb loopne dec push lock int pusha test adc sub mov pusha add xchg fs lods aaa pop adc subb sbb call addb push lahf cltd pop add sub adc xor sbb fildll rclb out (bad) xor pop (bad) lock int3 lahf cmpsl push sahf bswap or xchg or loope iret aam mov xchg pusha sbb aaa std push gs or mov cs mov out popa fs add lock pop push aas mov and add add mov cltd cmp xchg add pop mov mov imul orb push mov push xlat push mov mov aas clc mov dec js cld (bad) dec mov test adc orb sahf mov fsts push cmp xchg sbb jo push lods jb jecxz push jns xchg and flds hlt adc mov pop cwtl xor ljmp insb lock arpl xchg inc lret mov lret test pop ja jl (bad) dec sbbl push push sbb das fdiv rorb scas mov enter xor adcl jl mov jo inc add xor dec iret xor mov xor inc adc mov cld add stos mov (bad) sbb cmp jge add ret or adc xor push movsb sub and div jg mov xor adc aam cwtl sarb adc aam cmp adc adc mov mov lock or inc rcl xor jnp jbe movsb enter inc pop or push add loope pop pop hlt sarb (bad) int jno jp (bad) and xor push add in push xor icebp jge jne fabs stos mul (bad) popa ret jb adc mov dec sub into dec cltd jae clc out mov jl mov jp jo hlt pop inc adc xchg or ds fiaddl lds outsl cld xchg imul test pop or fwait gs sarb test cld call add das in xor and cmp imul (bad) mov in int3 inc add lcall xor xor test mov dec stos ffree and dec xchg nop mov pop push stos pusha mov imul add insb adc sbb sbb (bad) in fistpll cmpsl mov add adc clc leave test nop int3 inc mov xor popa lods add insl inc (bad) shrl dec les (bad) add mov xor or xor lcall mov xchg or mov push xor lret js jge pop lret cwtl lds int3 or add daa scas jecxz bound (bad) adcl and sahf insb inc pop adc and test in nop adc jle cltd jl mov lods sbb mov (bad) xor (bad) cmp inc inc add push fsubrs add xor dec xor nop (bad) mov es xor cmp push stos sbb inc push clc sbb rorb add out fsubs mov push lret cltd xchg lahf mov frstor ror xor dec js adcl es les mov mov fwait cmp push daa mov and icebp push mov clc mov sbb mov or pop popf aad push add pop push adc (bad) mov je mov pop dec mov add mov lea mov mov add push aad test aam shrb adc in mov lcall dec hlt orl out mov ds xor leave cmp pop and js adc das rcrb add push lret mov add mov mov add lcall fldl2t mov adc enter add cmpsb add xchg lret addb jge cmc insl inc in add mov shlb add fiadd dec add negb and lods mov cld (bad) enter add inc dec in mov fdivrs add mov inc jle add (bad) mov dec test xor ds xchg movsl fsubs rorb pop iret inc push inc pusha insb loopne mov dec aad inc (bad) dec add xlat sub test and rolb mov sbb mov nopl mov or fcmovb pop lret cmp pop push pop xor call aaa sbb dec pop cmpsb xchg addb sbb sub sarb jae xor jne sbb cmpb and dec inc or (bad) mov int test andl sub test mov jae fisubr out xchg and mov inc jo add testb adc add mov mov cmpsl ja mov loope ret and add fisubr jle mov das mov cmp pop lahf movaps push lea inc add sub lods add xor adc iret nop mov mulb or or adc (bad) shlb inc lds adcl jp push push jmp xor rcll xchg ljmp scas inc nop pop and jmp mov pop test pop push imull inc dec negb xor cmc lcall pop hlt andb or (bad) aaa loopne iret dec push cltd and mov add xchg fadds add in jb ja jo jae pop mov xlat or in sbb popf pop pushw movzbl cs gs pop xorb mov es mov adc faddl mov cltd mov sub inc int3 inc dec add pop fdivs leave add (bad) cli mov notb loope jo enter mov mov and sub repnz lret hlt dec (bad) (bad) int3 cltd add les or int mov add jbe cmp rolb sbb push movb iret push xchg lock and push mov stos jle mov mov ffreep lret fldl2t add inc adcl cld sub fs mov add xchg in mov es add cld pop js or inc stos or clc push add or pop add jg mov xchg xchg movsl outsl testl les aad jge cmp int or stc inc cmp mov push jno add lret mov sbb jae add add push sbb push rolb cmpsb mov sub jb pop adc lret out pusha sub add jns ret dec pop pop xchg mov add lods sbb popa in jecxz push enter in nop je push pop dec add rcl xchg sub je jnp or and cmpsl in daa dec sbb add icebp fcomps pop out mov sbb test loopne sub (bad) add push and cltd clc stos and into jo adc add jb push push push xor inc pusha (bad) mov dec mov mov push jle xchg or and adc push lock lcall flds mov call push mov sub pop jne int3 das and mov cwtl insb jnp mov or aad or mov jecxz mov sbb loope xor push add loope mov jno test mov or mov pusha aam add mov cli dec adc pop leave cs mov inc shl das sub adc js mov imul mov sbb inc test mov mov xchg out xchg call and pop dec (bad) dec cmp add daa push mov and and (bad) es mov fiadd sub addb xor int lret cmp add fist jnp inc mov pusha add pop lock mov (bad) roll repnz subl stos lret mov lahf mov in dec hlt iret add out adc movb in mov rorl loopne aaa mov add dec add insb cmp sbb xlat sub pop push mov rcrl push jge jns xor add add sub cmp out or xchg xchg xorb out jo sbb pop sarb add dec aas aam mov dec scas rorb leave ja in fadds rorl sbb push mov xor ljmp add pop and add clc enter mov iret inc dec sub mov xchg adc fimull mov xchg push movsb adc fild mov es adcb test pop jo add sbb cmpsb cli out shl dec push inc add lods mov out xchg sub icebp or pop xor add aad or sbb enter lahf int3 dec daa add lret xorl (bad) sub or dec mov aas pop jno sub fwait xor push fisttpll and daa push test jl dec lods xlat cmp add jl mov movsb xor sbb lea mov movsb aam add mov or xlat and push mov mov add xor lcall insb jo cmpsb (bad) gs add adc sbbl mov test pusha jg loop ljmp notl inc mov dec add push insb loop pop inc xchg xchg adc and jnp inc (bad) push and mov insl mov push mov pop pop sub inc (bad) mov push fnstenv xchg iret push nop stc push popf nop push aad pop jg repnz (bad) push mov mov dec mov (bad) repnz stos fildl add leave fdivs cmp in inc hlt push xor add inc pop mov xor sub push add rclb xlat add sbbl mov int jnp push pop mov pop mov test push xor cmp aad push out mov rolb cli jne insb add cmpsl mov add fildll aam and push dec lret fisubrl jo xchg mov jmp (bad) or mov push fs aam dec and dec call xchg fs pop imul gs fisttp cmp fldl loope adc mov js pop rorb out jbe into xor push jmp movsb adc jo add or push xchg push insl xor sbb punpckhdq inc mov jg ljmp cmp data16 sbb int3 adc add pop loope pop dec shrb repz mov jae imul pusha sahf in sbb mov int3 add cmpsl cmp clc mov push fwait ljmp adc or dec mov push pop and cmc add aas mov js mov mov add andl push cmc push push into xchg daa mov sub pop cld es testb int3 and adc arpl aam add xor lods and rcrl add sbb bound fadds hlt mov rolb or cltd xchg data16 pop add push inc cmp sub inc divb enter int (bad) ds sahf xchg cli (bad) xchg and hlt popa add inc std das (bad) and jg incb insb pushaw call stc fidivr sti ljmp pop mov jb sub fprem pop and sub add mov pop shrb and mov fimul mov adc mov push pop rcll inc pop and mov inc stos inc pop repnz pop cmp enter insb push add or call push dec and jp pop pop cwtl sub jmp inc test loop add jl or cld add int out lods mov pop imul or test mov or cmpsl jge icebp pop loop and inc xchg jb add push cwtl or inc popa push xor enter lods sbb loopne mov ljmp xor pop pop iret push mov jo mov mov adc call icebp sub add fsubl push lock inc mov nop insl add test notb stc dec das dec add and add xor mov cld add sub mov scas add inc dec or shr adc popa add rolb xor decl out dec add lock pop mov cmp mov add cmp inc int3 push lods adc jb adc pop mov xor push fnstcw push fldl mov mov (bad) pop jbe,pt bound add nop sbbb (bad) mov rcll inc enter dec repnz test inc jns pop mov adc push mov inc jae pop sub jo jmp adc fstps inc fwait inc push pop jp dec nop push nop pushf lret xchg (bad) xlat test jl inc push inc sbb stos add jo adc and test shll mov xor and adcb pop test xlat xor mov lods test fildll jp pop sahf and xchg or sub inc pop loopne enter dec jae cltd and pop enter stos dec popf inc leave jge add xor adc mov jge adc mov add ss push mov mov and ds test aaa dec jno fadds cs push movsb push gs mov sub nop pop pop and mov push add cmp into lahf gs lods mov and pop mov in aad sub mov push jmp (bad) and das xor cmp fwait mov mov add adc push sbb mov sbb fwait mov movsb mov and and int3 es mov mov fidiv push add outsb xchg lcall pop inc push add flds cli pop sahf dec xchg ret repnz jl add (bad) lock add dec mov fiadd (bad) xor les mov cmp pop add and add mov popf stos mov (bad) fsubrl pusha mov xchg or (bad) xlat jns jl (bad) push add push lea mov mov jae add test push add ret pop pop adc xlat dec add mov adc ret pop xor mov jmp in add dec mov mov sbb xor xor sub cli or loop adc mov shrb adc pop cltd add orl mov (bad) stos dec aad icebp dec adc js lods loop fisubr dec dec sub cs push aam aam fstps daa inc (bad) stos cld jae and cmpsl cs enter pushf push loop lret jno sbb es mov popl idivb imul mov pop out mov pop cmp push pop lcall jmp xor lods add push push test rol inc xor aas and push lock faddl add adc ja iret test cld (bad) and and inc mov test add movsl ja scas mov sti add inc push mov and cs add jb sub cmpsb pop in ja das push leave es jl mov (bad) adc cmp scas pop lahf add push mov push (bad) lods inc pop cld lcall push mov mov xor in xor and dec push mov add and mov adc in inc imul mov xor adc xor pop call xor or sbb and cld outsb lahf sub lret jle lea sbb lods fild dec and cmp push mov mulw jge das pop mov pop jl add sub dec or dec or mov aam ret add jmp add jp arpl icebp loopne jb jp add fidivr sub mov inc out inc xchg or pop test and rolb xor js add dec mov push rcr rorb (bad) jo xchg inc dec jae enter cs inc shll or enter flds movsl push jno sub mov leave dec mov pushf jg xlat mov aam fnop pop fbstp and (bad) (bad) xor cld test jg adc add loopne movb lcall lahf xor xchg lahf xchg (bad) scas dec pop jl inc out into imul jnp daa mov (bad) rolb cmp mov cmp jo xor outsl in or pop lahf (bad) dec adc dec es je sbbb iret ss mov add or fnstenv in fsubr jb (bad) jbe dec adc lods mov dec add push mov (bad) fbstp bound add out popa sti data16 sbb push out add push movb mov inc mov orb add int icebp dec and decl lea imul mov or imul add dec andb push cmp add jl and or cs sub mov xor loop inc in jo ret adc jae test mov leave add fisttpl inc mov cld lahf ds cmp pop in int3 inc aad mov mov sub les loopne mov push mov xor ljmp mov xor mov enter sub add mov mov push jg mov es iret orb mov mov enter pop or mov push xchg hlt adc push into sub jae rolb push fiadd ljmp test push out mov pop dec push (bad) or into fdivrl lret cmp leave es jae popf hlt js inc push add cmp jae loopne cltd add push adc xor cmp push add cmp ss sbbl js (bad) sbb add into mov and pop imul sbb addr16 pop (bad) push add into inc jns orb dec adc aad jno pusha pop add xor test rcll jg adc pop sub sbb in sbb fcom mov add inc dec mov push xor out cmpsb add add out or clc inc movsb inc sub sarb mov or stc mov or js adc mov inc mov shrb or inc add sbb xorb shr pop inc jmp mov add ds int stos sbb rcl pop pop fistpll sub push lock and xor out add imul or clc mov and mov leave mov insl inc add daa push imul adcb fsubrl sub jo vmread mov mov and cld loopne gs add lcall in cmp dec (bad) jge xchg mov jecxz lahf jb insl iret inc sahf add sarb xor push dec mov add pop mov fcoms dec js pop sbb fisttpl clc insb es lods pop cmp push adcb pushf cs and bsr mov rolb popa hlt fsubrl mov dec rol cmc rep pop fisubl xor xchg adc aad fxch les pop nop sub cld mov or xor lods test and cwtl dec and adc inc fisttpl cli in dec and scas add les bound sbb push cs mov and add xor lock (bad) mov (bad) xchg ja aam scas jge dec in add mov scas fild sub jo xor aad xor cwtl enter jecxz cltd mov mov sbb pop aas repnz aam shrb das sahf outsb cmp (bad) sub incl xchg and jle xchg (bad) rorl inc adcb and outsl jns or pop jns mov (bad) rcl stos and test je mov push (bad) dec imul adc dec add jle push cmp add test out inc mov sub scas or xor mov jb mov icebp imul sub xchg adc sub xlat add flds xor das or std mov xor ret mov scas int jae mov xor xchg fs xchg shrb or adc add push add rcrl and mov jns int3 inc jo je or inc ret or jb imul test adc sub xor push stc adc mov adc sbb push adc icebp or mov pushl adc movsb pop negb sub mov add push daa push ja nop add add adc enter (bad) or scas lcall aam outsl mov add and add stc pop pop mov dec mov or jp pop dec fnstenv sub call pop cmpsb mov mov (bad) ja mov daa std cs and (bad) jle jb add mov add dec inc cwtl and mov cmp daa inc out push stc xor cmpsl test (bad) pop out js cld jno aam loopne clc js mov add fdivs fidivrl xor dec popa or inc lock dec xchg sbb pop in notb popf scas cmp das popf int3 je add out nop cmc dec jmp (bad) sbb divb fnstcw add xor add xchg es mov xor test pop xor add negl shrb mov xchg pop outsl js subps inc ret fld hlt jnp aas sbbl int3 push cmpsl sbb mov lahf push (bad) ror dec das nop adc mov ja mov mov mov pop into lahf cmp jnp jns mov mov dec sub jo pop fs inc pop icebp dec xor jne in lods and push fldenv imul inc icebp das or mov clc xor fiadd sbb ret popa loope rcrb mov rolb dec adc jbe jae pop pushf ret dec push test lods add movsl jmp je mov sub pusha popf jo adc push cli jb xchg test mov dec dec jnp setne sub xor jmp (bad) push insl (bad) jbe xchg sub scas jg mov pop bound and int sub js adc add std pop pop mov push cs jmp inc dec dec enter or mov dec push imul subl adc and sub shr cld repnz push xor push xor loop sbb or lock mov cmp cmp maxps fcmovbe pop rorb lock dec repnz andb mov jbe and icebp (bad) sti cs cltd dec add cmp push add pop fldl outsl mov in je adc jae insb cmpsb popf pop jns xor push add push mov push pop pop mov lds cwtl das xlat decb jmp test rol pop mov add rcll (bad) loope pop shr jg sub and fs pop pop mov dec pop sbb add inc mov fdivl pop jmp or call mov push enter add test (bad) in repnz pop adc arpl and jo popa cmc cwtl and push int fsubs mov add cld rolb or pop jle,pt jl dec scas cwtl aam sub xchg ret rcll xlat jge add (bad) ljmp jg imul (bad) incb or xor shll xor icebp (bad) popa add push in add jo (bad) movsb fimul or mov (bad) xor mov inc (bad) jle inc mov mov mov sarb jg push mov mov pusha push cli xchg fsts push dec inc iret inc mov inc and mov sbb sbb jno sub sub mov jmp sbb iret push mov xchg dec add (bad) push cmp pop rcrl and cli add mov subl adcl aad cwtl xchg cmp mov push push lds stc xlat jl lahf sbb decb hlt movsl aam push fdivrs sub rcll enter mov iret dec cmp mov test push mov out mov and xor xlat adc mov cmp dec jo cwtl dec cmp movsl sbb addl frstor mov jno ljmp mov dec (bad) adc std push xchg mov adc mov hlt (bad) dec push and push jmp mov inc mov mov add cmpsl push fist std push mov add sub lods add mov and js cwtl lock (bad) movsb mov rcr jnp push xchg pop sub xchg or adc into test push adc push mov loop dec or adc lock test test sub or aad movsb xor add adc xchg repnz mov inc dec (bad) mov int3 xchg (bad) dec mov adc or adc movsb xchg jg pop or addr16 mov jb add cli lret dec sub add into cltd cmp test les or movsb push or les mov cmp mov out verr cmpsl pop adc sbb stos fist nop push enter fwait xlat add mov sarb mov inc add into notb sbb gs pop mov (bad) fstps add add add pushf inc loop dec insl leave sub xor cld add jl and mov loope xchg push xchg lods xchg add mov sbb add pop mov popf push cmpsl add jge inc pusha jne pushf fdivs jnp ljmp pop stc add cmp push movsl push lock inc pop sahf add mov jle imul inc insl push loope add (bad) xor loopne roll lahf add ret inc push subb imull test sbb jge aas push jno scas or sub xchg dec das nop adc ds cmp pop mov adcb clc repnz push mov ret push sbbl repz mov or push xchg daa xor fs inc adc fnstcw insb js push xchg push in cmc lock push sarl (bad) ja pushf push push hlt add dec mov adc sub add jne (bad) xor icebp add adc push cmp mov orl lret fistpl fwait add pop jmp adc fcomps mov adc add dec int jae jo fsts inc jp and sub hlt add xor (bad) loope in adc rcll and lret cmpb sub mov lds addr16 add mov popa cmp or icebp cmp pop dec fsubr inc xor adc sub cmp xor cmp cmp jne stos addb inc add sti mov into std aas addb pop pop add or pop xor mov lds sti das and xchg insl js push push test lds clc fs sub das adc aaa push jp pop sbb test xchg sub fidiv or adc mov sub mov addr16 mov sub push mov lret fsts sbb and nop push inc dec aaa mov xchg dec jg clc add push test adc rcrb or cmp xchg jmp xlat mov mov fimul cld (bad) xchg add push insb mov fdivrl ljmp clc push loopne mov sub push rolb mov ja pop daa orb push notb adc add clc xchg test jl sbb test or lds fldenv mov fistp mov sub mov sbb fidivl das shl iret and dec clc cmc neg test fcompl loop push sbb or mov out xlat add aam into add inc clc test popa pop inc inc sub sbb inc push int3 pop dec jl or add lock fwait (bad) (bad) cmp inc adc int3 push add in pop adc into mov in inc cmc cmp les dec cmpsl insb pop add sbb in mov stc cmp add cmp inc (bad) les sub rolb dec enter mov pop pop je subb mov push inc pushf pusha in shlb or std inc (bad) add push fwait xchg inc enter stc mov xor or sbb insl std into jns add xchg mov xchg jo jl pop add fsubp pop xor or push inc jmp sub outsb sti cmp js adc fldcw dec roll sti adc inc cli (bad) lock lret add rcpps negb xchg mov insl sbb xor push shrb (bad) loopne pop ss dec push fnstenv mov or sbb gs add insl or jmp xchg fstl (bad) in mov out repz ret add sbb adc ljmp jecxz sub (bad) icebp push (bad) mov clc mov add cmpsl pop dec add sbb (bad) outsb jns test jno xor icebp add adc loop gs vpcomq xchg mulps ss inc push inc clc push dec pushf add lret bound (bad) push inc pop sub add in mov push lods mov pop lds loope add daa movsl cmpsb jnp push push ficoml rclb rcl sahf dec cmp jae sub or pop test test (bad) adc add xchg pop add (bad) pop sti add jb inc xchg scas loopne loopne add xor sub popf clc push push call mov mov cmp sbb pop bound outsb add lods pusha adc add test add (bad) add fbstp add pop icebp inc insb pop sbb std xchg cmp test ljmp movsb lcall xor cmp adc mov popa or jne rclb add dec mov mov or jns or pop and xor aaa or movsl xor and shrl out mov cwtl inc add movl fcoms push or inc push sbb in js sbbl add adc add jnp lahf add add pop inc mov sbb leave push repz stos in ret or lods adc dec pop push add or xor add mov and ljmp pop (bad) (bad) sarb pop jae xchg call ljmp add arpl lret loope popf mov xor jno dec add jne xlat fadds add mov cwtl add into shlb mov push jecxz arpl cmp push jb divl in inc add movsb paddb lds mov out (bad) jae loopne and jo int3 cltd add ljmp loop add lods sub (bad) mov mov add (bad) sahf rolb pop js (bad) pop hlt int3 pusha jns and cld adc adc add sbb data16 sub dec add insl and add inc fsts mov add push imul or mov jne repnz adc or add mov mov xchg mov xchg mov dec pop fs cmp add inc mov lahf add test mov push incl mov mov mov jae mov jl xchg mov add lods insl cmp mov sbbb or push add pop or add or cmp xchg mov cmp out aad add adc push cmpsl mov mov cltd jmp xlat push int push test add cmp loopne add mov pop push ficomp or xchg (bad) fsubl (bad) jno mov loopne jbe dec std xor add popa push inc mov lcall pop jge push jecxz push xor dec inc cmp lods add sub scas sub pop add movsb xor out inc lahf add sahf pop xor add rcrl push add jl mov lea int3 sbb mov je adc fs or dec pop mov jne rol out push add sub inc pop out add pop adcl orb (bad) sub shlb int3 (bad) or scas ss loopne xor lea pop cmp adc add and xchg addr16 push roll add daa jle lahf nop inc or mov xchg jecxz cmp aaa pop mov jo insb add pop pop push xor adc add xchg sub (bad) jo bound aas (bad) jmp xchg add adcb jns xor add insl pop jo sub iret ret es sti movsb fsubrl (bad) ja adc insl xchg rolb pop stos shlb fcoml call dec shr pop into adcl push addb pop add inc (bad) fadd cltd adc pop scas test mov ret add gs jno in hlt mov test fdivrl pop je inc lock sarb add or push jno ja shrl add add and inc stos jne fsubrs adc das and loopne sbb jno xchg jae xor in add or add xor push jae repnz gs cmpsl push add lds loopne stc daa mov pusha add mov test add dec (bad) (bad) adc dec out mov jecxz mov rcll pop stos xor mov int3 add jo pop add cmp lods pop ljmp jmp push mov and aaa add js mov inc mov aas jae mov or add xchg scas fcmovb xchg popf aam inc add push jecxz shll in inc add sub fwait popa cmpb sub sub movq aas cmp (bad) cmp lock std (bad) inc insb sbb aas or mov pop or cli das jle out mov div inc adc and add pop inc mov lods jnp out sbb mov aam and in push dec xchg dec mov test sar enter cmc jecxz or mov and dec add movsb das ficom add xor or xchg jle add movaps add mov push mov push gs xchg sbb or mov fild jnp cmp idivl scas pop lret or frndint cmpl add scas jl mov add rorb stc js pop lcall rorl (bad) sbb (bad) int3 and stc add mov add mov cmp cmp and cltd fs push inc mov leave ss imulb xor scas xor mov rol ljmp daa mov mov adc fmul daa cmp cmp push add push mov ljmp mov (bad) dec bnd lods leave xchg add in mov jmp cmp test or sub imul and and addb or jo pop push push jne xor imul mov add mov xor adc mov popa setns add sahf mov shl push inc cmp inc add add pop popa dec sbb out js add lret push cs cld scas add fstl cmp push mov in lret mov movsl cmpsl sbb cs (bad) call add fstl push jg add push add mov mov fistpll xlat fldl add scas push mov jecxz imul jo (bad) mov xchg pop mov or (bad) xchg dec xchg dec and push pusha pop push xchg pusha cwtl push dec and sub stc nopl or idivb mov je adc push ret add dec andb in lret adc mov daa jo jl pop jp lds outsl popa inc fdivrs adc sub add adc add sahf mov jge add addr16 movsb mov push js xchg mov add imul mov xchg repz addb xor push add sbb mov inc xor cwtl inc daa rcrb cmp pop loope push xor (bad) pop addl add sbb jae in add imul repz in add xchg popa pop cs xchg add add int3 lods dec xchg (bad) popl xlat sbb or cmpsl add outsb fincstp clc (bad) adcb add je in and stos and jge rolb and mov (bad) dec adc mov jbe xchg sbb sbb add sarb sti lock imul pushf in shlb xor mov pop lods stos cmpsl cmp pusha pop out cs movl decl mov je in jl mov mov sahf add add add lcall and scas jnp xor mov cs (bad) push test xchg rcrl ret xor push push lea push cmovbe add scas sbb cmp push nop mov xchg rolb call inc aad jmp ss popf gs cltd mov lea mov mov loopne popa test pop adc in mov add xor jno adc mov sbb lret pop cld add sahf and mov add shrb pop inc scas out jo,pt add repz movl fs ror push add leave ret and mov cmpsl pop jmp fwait jb daa test mov das imul push sbb xor sbb (bad) xchg arpl and popf fldt (bad) or sbb stos lahf cmp add pop adc inc mov xor repnz xlat add jb mov notb (bad) js dec jp lods jl and rcr sbbb faddl sqrtps das xchg dec sbbb mov int3 adc pop add leave out popf mov add (bad) mov ds repnz outsl pop xchg push lock cmp scas xorl jbe add (bad) jecxz lahf xchg sarb cmp cld sbb mov dec int mov xor iret sbb cmpsb fs sub inc inc cltd and inc add aaa push xor lahf xor add stos lods cmp xor insl mov mov pushf call iret std cmp faddl mov xchg sahf cmp pushf lret push outsl call lods cmp sbb stos pop ljmp loopne push cmp cld add out xor and gs push xchg xchg (bad) test rolb jns mov dec xor add fwait icebp scas hlt mov (bad) add mov aas add mov add lods (bad) dec movsl dec xchg add xchg lahf jmp ds pop add xor aam addl and bound jl lods push dec add mov dec cmp out fdivs iret add movsl test add jae mov mov addr16 fimull jo add into lret jle test mov call dec mov js mov jg ss add int3 add in jmp lock loop add test add xor popf imul mov xchg jmp pop xor push sbb add call sbb xor jns call in das jl and pushf pop negl loopne pop aad xchg fmull add repz out aam xchg xchg add dec mov jbe inc gs es mov repnz mov jno ret fs sbb add xor pushf add jo pop push out rcrb stc or data16 pop ficompl pushf (bad) jg cmp add cwtl jbe enter add add dec (bad) jb outsl cli jno mov inc roll out lock loop daa (bad) in mov xor add sub jno mov cmp push flds xor mov dec sbb cld sahf sub jne sbbb mov add push enter add add and movsb loopne mull mov int3 xor mov mov das inc xchg mov jne test add ss xor cmpsb sbb xchg add add (bad) roll dec loop insl hlt ljmp add imul ds push pushf mov jecxz add ljmp add shrb jno sub cld repz in imul pop clc xor lods rorb xchg push xchg push iret add add jne jecxz movsl pop push (bad) xchg out addb lret pop and shrl xchg loope sti cmc sbb cli pop es mov sub clc push daa movsl jne mov dec ds adc mov push loope xor ror sarb push rcr imul test je inc jnp in in mov ret addl jns mov scas ljmp sbb mov xor sbb leave sbb btr out mov data16 addb push leave adc pop pop pop add call jge aad add dec dec flds pop sub leave call add cmpsb xlat lret loop call pusha xchg lea roll adc loopne dec aam pop push add add dec mov stc jle add or int add pop repnz test inc popa or jecxz insb add add hlt loop call int3 xchg pop inc and dec sbb inc and ljmp fimull dec push loopne popf mov jae into (bad) stos std pop xlat and sbb pop bound push add and sbb int3 push xor fwait push iret xor sbb add jnp sarb push or orl daa aas int add stc bound sbb aaa repz pop imul std cltd sub lods add imul push lock pop add in add add add pop add cmc pop push in and cmpsb movb fstps pop sub into dec add mov data16 pop (bad) xor xchg push add sub mov fs stos addl add pop mov add dec mov dec sbb movsb rolb jp and lea add or pop negl nop push inc lods fisubr add inc add adc cmp xchg imulb int3 (bad) mov add in cmpsb sbb sbb xchg (bad) xchg push push add mov roll in cmpb add loop in jnp negb pusha nop jb add dec adc imul or addr16 dec dec jp push lret add test push mov jmp xorb insl gs mov mov pop fidivr popf xchg icebp mov (bad) xor les sarl mov pop popf and push es sti xchg imull daa xchg mov xor add or in into cmp addl repnz cmp jne or daa jnp jecxz popf pop push mov fnstsw xor mulb sub (bad) fadds xchg mov mov and cmp mov add in mov add in jge add arpl or or int3 add push bound aam jo inc sti movb mov sarb pop outsb loopne in jne cltd int lock fwait xlat dec pusha and xchg jae mov into cli daa fcompl add adc cmp push add int3 jns (bad) int insl sbb mov dec loop dec data16 imul adc (bad) sbb cmp dec hlt mov aas rorl mov out and pop popf jnp bound push cld rcl icebp xchg adc out (bad) fs sub mov mov loop add push ret pop incb pop fbstp dec mov repnz stc push dec (bad) repnz out push pop scas push pop addl (bad) adc inc (bad) cwtl mov add push idiv insb fstp dec add imul dec stc mov add out mov push movsl push in clc cwtl in mov xchg pop jo scas cwtl dec rcr pushf add push repz (bad) (bad) add cli nop divl add popa pop dec ret inc lods out mov call cmpl jmp lds out rcll stos mov pop fist and pop sahf dec mov add lret cltd mov loopne lret rclb in lods test push std push cmp pop js sub cltd call nop mov gs mov int aas (bad) js fistpll in sbb sub and inc mov test popa pop dec (bad) mov add out xor das imul sbb js add mov xor hlt or nop mov inc aaa add lahf adc sbb mov xor fcoms jmp mov mov popa jns xchg jno jge clc adc jnp xchg sahf subb test xor callw ret das inc jnp,pn sahf jo push rcrl out stos xchg jmp mov movq mov sbb stos mov mov inc ror (bad) aam loopne xor fstpl shrl or mov inc insl mov cmp sub out xchg xor add shrl repz adc out insb fistp jne push cmp pop inc sub adc pusha sub aad enter xlat xor and and and dec add xor fwait pop jmp push in xchg arpl add xchg jb out add mov and mov adc pop sbb mov pop shr sbbl xchg or mov xor incl pop ret cli sti jbe pop push push mov add add mov cmp push mov add add roll int3 adc adc push push xor pushf and add add loope inc or or jb outsb aam xor not mov push iret mov rcrl dec test cltd cld (bad) mov loop add or roll in arpl outsl add xor or outsb ror adc inc outsb sub add push mov push inc xor or aaa adc lcall jmp mov ds xor add or sub pop pop lock cmp pop add add cmp shrb jae pop jae add xor pop xor mov jmp mov mov pushl push in jne adc add ja xor jmp iret scas pop leave lock aaa xor jle inc test ds xor (bad) js push lods clc sti adc pop push jne jae dec ret loope sub lds xor push shlb add mov and pop lea push pop cmp ljmp mov sbb add dec or cmp adc push and clc loopne sub mov aaa add xor pop pop add jmp sub test sub push dec scas inc pusha xor testl sub nop pop orb jmp (bad) push dec push lock popa and dec xchg popa add add inc sub and or mov and mov push mov add xchg push push fistl mov sub add push pop pop subl sub inc dec or dec pop jecxz sbb mov rclb mov clc adc or cs fldlg2 (bad) fstps fcompl jmp fs push mov cmp js div addl xor xchg fndisi(8087 adc stc jmp sub pop sbb or and xor or lods push xor cmp jnp cmp dec jecxz not and pop les jnp insb (bad) dec mov pop adc call frstor and push fisubr push sti das inc pop ret sub pop add dec cmpsl mov cmp imul (bad) mov push inc sti fmuls mov pop (bad) jg cmp add mov rcr pop and add add imul lock pop xor popa add les vmread xor fs rcrl xor dec sbb push and or je push xchg sub mov add sub pop aas jg dec stc pop adcl pop (bad) add stc aam aam and mov add add lods and cmc push in ds aam pop mov or jge pop sub or mov xor rcrl cmp push push push not jne dec fnstenv loopne xchg iret add inc shl or out push cli sub push mov fldcw bound add cmp pop ja popa jl pop shr jge or cltd aaa mov test add insb pop sbb inc inc out xor (bad) xor sub dec sbb ds or xor sbb or jmp mov (bad) adc inc iret xor faddl cltd dec movsb or inc sbb rcrl adc push pop adc or ret xor jecxz orl and add adc insl pop movsb push or pop add loopne or mov rolb pop outsl push js into lret arpl add das cmp shl inc jo rclb pop cmp push cwtl push in or mov pop addr16 add ljmp push leave lock xor add cmp pop xchg push stos add jmp sbb outsl xor fidivl add out mov push cmp inc sti add cmpsl or xor add mov ss add xchg dec jmp pop inc pop mov or pop scas (bad) (bad) mov ficomp sbb inc dec add imul push mov test xchg mov add sub push xchg xchg push stc or cmp cmp inc es shrb shr dec jmp adc pop add jg dec mov mov add dec inc and mov add add mov or (bad) add and (bad) outsl xor pop out idivl loope pop sub in inc sub add jb and cmp jmp or (bad) mov enter mov (bad) xor inc jl (bad) push inc push xchg sbb rclb inc pop pop shl call add (bad) mov test pop test push jne and (bad) adc mov loopne push mov js mov sub push and (bad) add adc test dec sbb xor add push jmp cmpsb data16 idiv inc inc xor dec sub aaa out je (bad) aaa push fisttpl pop test add sti out jecxz movsb mov or shll outsb pop shl xor out push lcall mov pop xor repz lret (bad) cmpb loopne shr jle std mov bound xchg mov pop dec arpl (bad) xor xchg sub ss adc gs orb (bad) add push push cmpb jb lcall sub xchg adcl (bad) xor push inc fild outsb in loop stc sbb int3 in sbb xor or add sub pop push arpl inc popf ljmp cmp xor fldcw jnp out and add inc shr stos arpl nop data16 adc pop or xor pop add (bad) xor cli adc adc push xchg adc in or mov mov cmpb add push sub mov imul lock cld rcrb aad sbb xorb and pop cmovo call sub dec dec outsb adc and pop aad sahf cmp loope inc and and movsl sub call pop loopne push (bad) repnz add sbb jb pop push jbe push xchg push lcall push (bad) fstps add rclb pop in xor add mov inc dec mov adc mov mov pop pop push sbb inc adc iret aad add int3 (bad) fucomp ror xlat add fstpt push jno das sub aaa add or add in xor add inc fxch or fcomip jbe add push lret cmp imul mull clc add mov lds xchg addr16 xchg sub aad repz movsl jb fdivrs and cmp ljmp loop add push push arpl cmp jnp shrl push jo adc xor lret push jmp nop addr16 int pop js adc js xchg out mov dec pop push pop lods insl inc add mov out pop push jmp cmp and xor inc xchg add push insl (bad) in or xor mov add repnz xchg jo push ret jno mov ficomp (bad) sbb mov add (bad) mov test sbb jmp push cmp rol bndldx shrb jns push mov inc push xor test mov (bad) pop enter xchg adc adc arpl pop pop pop rol mov (bad) in aam xlat push clc cmc add mov push test pop xor dec adc add out nop (bad) xor out into add xchg aad or sub adc or cmpsl or out mov cmpsl jne mov pop push push jp and stos xor (bad) mov sbb cmpsb rcr mov call fadds int jbe das pop jae push fist add pop insb jne shrb xor add andb add mov (bad) stc mov test sub (bad) negb jle fisub sbb mov jmp sbb sahf mov pop int sub (bad) cli loopne add jle pop enter or in lds and cmp push addb jle fcomps xor push outsl cld add xchg scas add pusha pop adcb sahf cmp push imul inc rolb add shrl stos sub dec dec icebp fidiv and cmc sbb mov clc push and (bad) jo fwait jne add out pop test or (bad) insb push pusha mov cmp mov lds pop (bad) jb arpl mov jp jge and push lcall daa movl or sub mov iret sbb adc scas mov add aaa inc pop add enter adc add inc mov and lods adc sarl sub add dec sbb add push (bad) lock jecxz popa imul and (bad) xlat movsb add xchg jae mov adc xchg inc fisubl pushw add fadds or add jnp roll dec pusha int ret in cld xorb adc xor push mov aam loopne mov adc inc cmp xor dec push fadds dec mov or mov lock in dec int3 pop mov xor mov sbb loopne ja add sub dec mov adc pop mov add bound xchg stos sub inc test add stc pop (bad) mov jmp add lods inc (bad) add xor cmp sar add xchg push adc cmp jle (bad) scas int3 dec lods jo imul cmp mov add push cmpsl mov cltd push test (bad) hlt mov out fstpl dec or jge mov loope (bad) xchg dec jae adc ljmp mov cwtl cmp jnp cmp cli add mov rolb cli inc xchg push ficomp xchg enter add push xchg (bad) in xlat flds aas add inc jg pop jmp push imul (bad) lcall pop jle push notb jns adc clc add inc lea sub rcll add fwait jp ja pop inc jb lock jno adc imul sub outsl push and add mov rolb add push inc bound punpckhwd push (bad) inc call sub lret cs xchg rolb leave call xchg cwtl push add cmp faddl cwtl mov mov inc push xor pop jno hlt adc push add dec std cli or add adc je add cmp add aam adc xchg add or sub roll data16 pop int mov dec cmp lcall int pop add fnstcw add cltd call jo cmpsl mov clc (bad) jp cmp or sarb je add cwtl mov sub jo jbe add mov int jmp into out xchg cmp add sti enter call ret jno add dec je mov xor or in add xor mov push into push loop sub mov stos push sahf ds es xor add lock andb add dec adc pop or aad inc mov add jne pop xchg dec stos bound (bad) std xchg push cmp jns nop aaa push add jb gs ljmp jp jecxz or rolb sbb add movsl cmc aad adc or mov fwait in xor rolb addl insb inc add pop mov cmp add push push jecxz pop aad xor adc mov rclb das gs add pop jl push movb pushf into inc sahf loopne addr16 jge or js movsb andl mov mov into popf xchg in mov repnz cmp mov pop out and icebp int stos add mov jo sahf add pop add (bad) cli adc scas mov xor imul inc lods jecxz mov ja sbb lret dec out mov test rcrb (bad) xor inc inc test xor sbbb lret loopne lods add adc lahf adc cmp adcb mov cmpl push call ljmp imul in cmp int3 andl out in ja adc push dec rcll sbb stc das dec scas fs rol inc mov in aam addl add aas inc xor jmp add es add rcrb pop mov and movsl add dec scas out test mov dec loope inc adc inc ret rolb jo cld shl loopne sbb or push and sbb sub add iret les sahf inc add lock and leave les mov mov loop sbbb sbb mov and push push out clc add pop es fdivrl push sbb push out xlat xchg cmp add xchg daa in mov roll xchg xchg (bad) insb pusha mov add add push sti aas sbb js ds xchg aam jae add cltd sbb sbb sub inc xor push pushf lret xor sbb imul je sbb imul xchg das pop aam add pop sub mov mov loopew test ss xchg xlat push add cwtl jae rolb mov add jb xchg push scas das or or loopne aaa loope dec mov add push pop enter movsb add fbld outsl mov add fidiv lods (bad) scas rolb pop jge jmp cmp inc add sub jb imul test add jne mov jmp ja mov add cmc (bad) les je add dec test shrb add insb repz negl popa sbbb add push xlat addr16 addb pop pop xchg jno mov (bad) fistpl mov addr16 sbb decb mov mov sbb or adc rorb pop iret mov xchg movsl (bad) cmp jnp xchg mov sbb mov mov push sub fnstsw or aam out pop or scas (bad) hlt add fdivs add rolb int or icebp add (bad) fs push lods pop nop lahf or cwtl dec fldenv sbb aaa jne int aad dec add pushf add push cmp add xorl and mov add (bad) or mov adc out mov add ret sbb dec lret into add adcb pop loopne add in push adc mov sub adc push sbb lret repz or sub and pop sar les cmc dec sbbl out rcll sbb (bad) or lods pop cmp loop add add xchg loope add popa lock aaa jb cmpxchg cs xchg ss test iret xor add sub mov add mov out dec cmp loope (bad) mov push imul fwait jo mov cmp sbb add jge insb sub (bad) ss aad jp pop (bad) jbe fs cltd pop test repnz iret jecxz or (bad) fs mov pshufw je and and inc rcrb insl out dec add test popa jb cltd popa add pop iret test mov cmpl push cwtl add sub or cmp sbb xor aad fmull sbb lock dec roll push gs stc ret (bad) out push les fcomps icebp arpl push in lcall or fcompl cld mov popa push sub jo cmp sub fdivrp xor test pop lret je (bad) lods adc mov dec imulb pop add jo mov cltd mov or incb sbb loop xor xchg cmpsb or xchg insb adc dec pop or in xor mov sbb mov int3 jns sub loopne mov lret test in cwtl adc push aas sbb or cltd dec pop push lret pushf add setns lods adc xchg rorl mov in xor or add xchg sbb lock and pop addb icebp add adc push cltd nop and xor rclb and pushf and lock push in sub pop add dec cs pop mov sub in dec xchg dec push inc fistpl push gs inc (bad) adc xor scas mov pop lea fcoml test jl sub mov arpl ret add cmp das add hlt sub cwtl xor loopne add inc or and fsubrp stos (bad) shrb add cs movsb lahf jecxz mov inc sub fwait pop mov cmp testb lcall add shr xchg test imul test and xor lds call lods lret and scas lcall and lods adc pop push adc das pusha and mov xor loopne shll scas (bad) dec lds cmp movsb clc sahf add xchg cwtl adc cmp mov jl pop insl inc test or pop (bad) cwtl dec push push nop xchg loopne lcall adcb mov adc pop outsl lock icebp fsubr push aaa aaa out add shlb movsb jo push add int push lahf aad mov xchg xchg add pop (bad) add bswap pushf xchg rorb mov sub js test xlat fsubrl lds addr16 and and daa fwait adc dec xor and push dec aaa ret adc outsb nop fsub popa movsb cwtl cmp or mov fucomip pop dec shlb push cltd cs sub nop mov inc xor adc jb nop add sub cltd test sarl aam xor and and xchg mov add sar scas pop jnp mov mov mov mov dec dec cmp shr add mov cld dec push mov jge lret push xor push orb xchg fs daa subb mov pop add fnstenv pushl push xchg xor add xor fwait subb sarb cmp or or scas add push movsb sbb mov orb aas testl inc fwait push fsubl les dec mov xchg or test sub (bad) mov pusha inc cwtl xorl fcoml fstp repz cwtl dec sahf (bad) sub sub or std adc push sbb scas syscall jae fs and pusha jno sbb lcall push cmp add shll add mov adc ds pop test push fstps test movsb clc sub decl sub push sbb leave cmpsl mov dec or push cmp es xchg les cmp int3 xor pop testl xchg push pop lea add sbbb (bad) out shll fcomps pop aas xor inc in cwtl or call mov pusha and fcomps inc sub test dec add cmp stc (bad) sub int3 mov xchg fs das test mov add std cmp popf add xchg lcall stos (bad) xchg and imul sub insb call mov sbbl test lahf fs xor pop (bad) insl daa add inc push push (bad) jb push loope lahf sub push push adc in mov pop dec sbb sub mov cltd lret fisubrl cwtl enter pop pop pop ss decb dec (bad) cmp cld testl xchg aam jbe or aad xor sahf xchg clc push rcrb mov push lock inc pop sub xchg add std lret jb add jg pop jl adc aaa test fsubs cwtl movsb dec add jo xchg faddl enter jg xchg in insb and add jno out pop or sub lock xor (bad) (bad) fisubrl push movsl xchg pop cltd call ds lret fcoms and sub mov push xchg and into sub dec rorl add (bad) push push add or ret (bad) mov push sub testl adc jl ss fnstcw add mov test lds xchg sti loop gs xchg movsb xchg adc mov rol int3 sub fneni(8087 pop xchg call movsb mov in or sbb add add arpl sub (bad) lcall sub mov pop add inc lret add push add icebp orl jb dec and sub cld pop sub pushf add fs and mov cmp jle push mov adc and js mov mov add pop xlat cwtl dec mov sub inc call sub cld in xchg xlat ds adc cmpb pop jo test pushf lods nop mov subb enter mov (bad) shl das lock dec add sub add jo in push cwtl push cmp in leave mov xlat cmp dec clc cmp insb add bound cmp test cmp imul mov daa loope xchg xor xor add cmp mov add das shll stos rorb adc xor add aas mov ficom sub cmp dec sbb pop in xchg insl (bad) pop es fwait lahf iret xor xchg or lods int3 test adc insb rcr shrb push push xchg fs xor cmp lret js bound push std in inc or add jo push sub repnz add pusha cmp inc mov add mov cmp ss xchg adc adc pop stos hlt dec cwtl add (bad) call inc pop push cltd nop add cmp xchg imul inc xor xchg call push das add or cwtl rcrb cwtl add popw js enter test call dec pushf sub es push pop dec insl pushf adc mov adc test cld or les mov pop jle test dec cmp or sbb jo sti add inc inc mov (bad) cli mov add mov xchg aas push pop xadd and xchg cmpl jp fidiv cwtl les inc xorl push add xchg jl xchg enter mov pusha add pop cmpsb mov call sub sub (bad) fcomps pop add (bad) out sbb inc push daa push (bad) and pop mov xchg leave pop mov xchg sub mov or test adc mov cwtl int3 push mov dec add sub sbb test lret add mov add ficomp cmpsb pop and xor pop push pop negb adc jne sbb cmp mov add xor cmp daa mov lcall outsl sub into insb xchg jno bound lds inc loop add (bad) push xchg mov xor cmp dec cmpsb and sub xchg dec push adc mov inc ror add and out popf fisubl pop sub je dec in add ds test cmp inc mov aad dec popa mov push sub lret cmp inc pushf into (bad) mov pop subl push xor rcr mov adc pop movsl add sub dec and aaa lds lods str mov pop jg arpl xorb mov sahf mov into add sarl cmpsl fbstp dec add cmp sbbb jl cmp test or add and add pop outsl add jbe push (bad) movsl xchg ret out dec mov movb add inc fwait push scas and add dec add cmpsl out dec in sbbl pop add mov pop push push jno jbe ds push movl push mov cmpsb add es xchg pop mov push and add data16 push fldt inc adc bound cmpsl inc sbb daa sti adc sbb xchg shrl sub adcw and insl xor mov mov add das sbb or push dec xor cmpsb inc pop insl into add (bad) adc nop mov sbb add inc popf xor add pop push rolb aas and (bad) cld movsl mov pop gs sbb daa (bad) xchg add sub pop pop in or repz push push test sbb adc fs and and int3 hlt pop pop int mov enter out repnz lock dec in insb pusha out or lods (bad) mov lret out push insl add daa stc mov mov add rcrb push out out dec push addl or je add pop and cmp inc inc out mov inc push (bad) cmc pop cmp hlt adcb push popa cmpsl stc or imul das sbb dec nop daa or fs mov sbb pop and daa faddl push (bad) int jbe or sbb cmpsl test cmpsb mov mov call rcrb lcall mov and xchg sub and xchg push or cld or add mov mov dec and xchg add outsl int3 or push (bad) int3 int3 dec add dec add inc adc lock cmp imul mov add js testb push (bad) mov andl adc jne iret insl orb jle (bad) dec (bad) dec pop add inc js mov xlat clc jecxz insb xorb add lret mov add push test jo or imul add (bad) jbe cld (bad) push sahf jns inc dec imul (bad) aam adc or sbb nop mov sbb iret cmpsl or out fadds sti movsl (bad) cmp dec fistp aam dec clc stos adc mov cmpsl xchg push xlat inc std movsl enter inc enter xchg mov and cld lds adc rorl sbb pop nop clc and jecxz mov fwait sub dec adc mov xchg and pop pop xor cltd popf dec popa aam clc push insl cmp or push lret jg inc test ja adc in push in insl aaa cmp out add xchg dec dec or stos pop clc (bad) jmp cwtl sar mov adc jle push xchg sbb insb or aad push xchg loopne decl or adc pop jle push add pop pop iret popf xor aaa and cld add adc out add or pop cmpsl mov dec jmp shlb mov leave or mov iret add dec sbb push push (bad) xor sbb xor cmp sub and into cmp xorl and (bad) sbb nop test fidivl mov jmp jae scas push push sbb pop or decl dec mov jmp adc js jb in mov add xchg dec out jecxz fild cld addr16 pop mov adc add jns push push xacquire inc dec rolb flds mov jnp (bad) and pop push pushf int and aas mov out lahf mov add imul add lods int testb cli mov mov add je sbb xchg add xor mov and cs addb in imul cmp sbbl imul outsl sar lret in (bad) pop jnp (bad) in xor test xchg jb mov jge pop clc nop enter and mov add scas dec add mov lret repnz inc cmp xor and lods pop adc pop fnstsw leave mov outsb lock add rorl sbb setno cwtl jle sbb aad imul in add dec (bad) fstps stc add xchg pop popf add movsl shlb push scas add mov iret cmp test jno pop rcr daa pop mov mov scas add fisubrl mov add aaa inc enter in outsb pop sbb iret pusha leave (bad) fdivrs xchg lcall cmp add fistl pop (bad) (bad) rolb jo inc or cmc inc push sti mov sbb fadds add loopne xchg sbb fs enter mov insb sub (bad) jbe hlt or movsb and in das mov mov pop dec and sbb add cli in and aaa movsl add and popa test add (bad) test mov bound outsb inc in cmp dec (bad) jne outsl andb movsb inc lea cli notl push stc mov scas mov (bad) aaa or adc lret fbld add push sbb sti lcall push mov sub lds in lea adc divl in or dec mov packssdw cmpsb push ss sbb iret outsl es jg mov lahf into xlat sbb mov cmp pushf shlb dec into inc lods inc sub jp jg icebp dec add mov push lret add ja cld pop stos les dec xchg sbbb pop add sbb jne fstpt movl pusha dec enter loopne add mov xchg dec jae add cmpsl dec xchg addr16 in fwait ret xor scas mov and sub std adc add and rorb ror lret and addl sbb sub mov cmp pop xchg xchg or push or bnd add push xor or jl mov or pop lret test popa hlt cmpsb mov mov and (bad) mul xchg add xchg push fs shrb (bad) jbe popa dec add push fdivrp dec cmp sbb into rorb stos xlat shr mov sub sbb pop xor mov shll mov add sub gs or push jnp roll jge push xchg (bad) loopne cs aam sahf add leave loop pusha mov dec add mov pop (bad) ss js out pop add adc jmp shl loopne mul and fisubl movsb lahf push loopne jg sub shlb sub push mov jb cmp jne add pop js ret cmp subl jmp cmc inc lahf andb xchg divl mov popf cmpsl add leave int adc fcmovnb dec fdiv or mov aas xor add sub rcrl or test inc add add js dec push bound sarl mov mov ljmp call adc mov pop (bad) xor mov in pop push xchg add add pushf lods fldenv dec add adc jbe das mov add jo (bad) jge mov add jmp push dec cmp lret push cmp jno mov repz add xchg dec or aas sub adcl or minps sbb sbb xchg pop (bad) jo cmp add sti pop inc lret adcb dec push add dec cmp leave cmpsb mov xor scas jbe mov mov sub sub bswap xchg stos pushf push fs rcr lret push xchg xor or pop aad push add inc (bad) jmp jno mov add ret or mov lcall xor mov xchg add std (bad) xchg cmc pop cmpsl movsl add fs xor in jg pusha sub lods sbb or xor xchg push pushf cmp xor cmp bnd out rorb push dec mov lock pop rolb fcmovne test sbb mov stos or cmp inc xchg push fst add lahf int3 pop cmp popa pop add fcmovnbe mov test sub inc lea dec push sarb fnop add and (bad) pop (bad) xor push aam mov add push fcoms mov adc push hlt add cmp xchg pusha test mov add mov stc add leave push insl adc sbb inc push fsubl add sahf push cmp jo add (bad) negb push and gs sahf clc pop fwait push test inc (bad) inc mov add fild add push push (bad) mov mov pop ja,pn icebp add pop adc add pop es outsl into out add je stos mov cmp gs sbb inc sbb in or mov movsb add enter loop in movsl adc and testb mov mov pop sbb andl add addr16 (bad) out out jmp dec fdivl imul fstps scas add testl paddsw punpcklbw movsb es sbb jbe xor idivb xlat cmp lret es ja jns orb test aaa adc inc sar fwait inc add sbb add push stos add call mov pop add xchg bnd stos ret (bad) lods pop xor mov xor dec fild mov mov inc pusha (bad) xor xor aad jecxz or pop adcb dec xchg pop xchg and cmp iret idivb jnp (bad) cmc cmp jb or bound add jle dec add cmp cmpl add pop mov push call cs sub dec inc or mov gs xor pusha add inc mov cmp inc pop mov enter or sub ljmp stc push adc int3 push inc inc (bad) mov cmp cmc adc push iret jb (bad) ret push insl (bad) jl pop mov pusha mov and repz hlt fs jg push pop inc arpl inc mov lods add test mov iret flds sub adc add inc hlt pop pop add imul in adc in sbb (bad) xchg and pop mov mov cmpsb call stos add data16 clc add stc pop sti jp xstore-rng cmpsl add int cwtl jno ret pop (bad) mov and fiaddl data16 jmp ror add mov sbb es pop cmp xchg mov add push loopne orb adc pop and dec add mov aas rcrb jp call arpl lods or mov ja xchg lret mov pusha mov xor lock aad nop imul insb stos addl fidivr lcall add add pop in sub movsl pop daa pop xchg insb mov fildl xchg mov sub cmp inc dec add mov int or jno or loop dec add add jo mov xchg incb cmpsb jmp push test adc lahf rolb movsl (bad) lock add cwtl xor dec and xchg xchg (bad) in pop xchg mulb mov mov add pop sarl add repz dec loop dec daa inc cld jmp mov movsb add pop sub je pushf adc ljmp hlt (bad) (bad) add pushf cld or jo jo int3 outsb gs es add or add dec push ja mov cmp or pop dec popf cmp push jle push jb imul add cltd ret cld les jb rolb add cmp cmp add fiadd (bad) xlat add cli pop mov inc adc in dec push std fidivrl cmp jae push gs pop sub test stc (bad) out jbe jp push adc repnz push dec pop pop andb dec pop push pusha fiadd jae jb pushf test rcrb add or push or xor and hlt push and les jae cmp fdivs push add js push push xchg fwait or jl sbb add fildll fadds icebp pop and (bad) js loopne and xchg add xchg mov popf test out add or add sbb fcom jecxz or movsl dec pop and cwtl xchg cmp jmp test jo jbe adc (bad) mov sbb cmp testb or inc add cmpsb clc sub loop push (bad) jo inc mov dec out and aam fs stos sub mov add cmp cli popl leave sub pop sbb cmp add cld dec push push inc jmp lods inc subb dec push add insl rcll aaa xchg pop rcll add inc imul and and xor out cmp sbb stc imul inc lock xchg or rolb mov int3 jnp mov sub rclb sub dec sti and dec cmp idiv adc adc popf addb test sbb inc out lea (bad) and pop xor and call flds xor sub jb shll pop aaa add or into push pop ss iret jle fidivl cltd dec xchg cmp jecxz push add push push in add inc xchg pop dec lret xchg enter add sahf and push inc xor sub fidiv add popa push fs mov cmc roll sub add fs popf jae scas add aam sbb std fwait cmp (bad) repz data16 xor mov dec cmp jnp adc repnz sahf lea add mov cmp arpl movsl jae add or pushf add lret inc lods mov clc ljmp adcb pusha push inc mov (bad) leave dec aaa mov push pop sub (bad) adc xchg rclb add outsl dec mov inc pop aam push jl cld mov and cli xor sbb pop adc femms pop fstpt lock sahf pop dec pop daa mov mov cmpsl add enter mov popa add cmp and jge lds xchg shll shl push jge cmp sub int lcall xchg ret fs mov cmp data16 (bad) repnz ljmp xlat cmp or sarb push imul sahf orl int3 ja adc or add mov stos sbbl cmp test sbb sub in add cli faddl iret lods test push dec daa jno stos mov inc add jo and sarb adc fiadd add mov xchg pop mov sbb and nop add fnstcw cmp aaa icebp push fs movsl and jg hlt add jns and fcom mov or pop cmp xor or loopne cltd in adc popf pop push pop inc mov mov pusha fsub or fwait dec movsb ss enter scas adc sbb dec xor loope jae fcompl add mov test cmp xor xchg cs shrl and sub shlb inc bound fildll lret fisubr cmc insb add loope lcall cld mov clc mov inc loopne cli sbb push cmp lret pop push add mov mov cmpsb scas in mov sbb jo daa cmp cmp inc dec adc int mov iret pop bound and add lds testl pop fild push jo add xor fs cmpsl nop jns mov and pusha add add arpl mov fsubrs jb sub adc loope sub dec in insb xlat mov andl add cmp jle rorb xor mov jecxz mov fadds add cmpsl cmp mov mov dec add sub jbe popf sbb pusha lock cld dec jle cmpsl ds mov test xorb jg (bad) jbe sub sbb cmpsl lock xchg adc cld je xchg or add pushl inc out and dec rcrb push outsb lods sbb xchg imul movsb add jns cs in add mov pop (bad) push lds mov fiaddl dec jns add adc pop int3 insb add inc mov mov adc outsl mov fldl stc mov mov jne sub xor pusha fcoml add mov data16 arpl lcall out test and notb add mov dec xchg push add adc xchg push ss into test add movsl push jne and mov in add mov add std dec ret push addl push or sub fwait mov rorl cmpsb and mov sahf and jae xchg stc pushf add cmp test pushf xorb add cmp data16 push aaa (bad) mov rolb add loopne lods inc or aad in clc sbb jbe and xor inc enter or push or je mov add (bad) dec add leave mov add cmpl mov popl adc sbb daa add sbb inc pop cld push add mov inc str loop rolb aad push push rclb insl add scas cmc or outsb mov outsl addl add je push in lea dec add mov add popf xchg xlat neg adc xor dec add sbb add pusha mov rorb add lock lds lock bound (bad) xchg jp fstpt mov mov hlt add aaa xchg movb roll addr16 fdivrs push pop add icebp add inc add je mov mov add dec or mov pop pop cmp insl dec cld xchg sbb fnop outsb push call xchg or popf cmovo push push add in adc mov mov add sbb xor or insb push test mov sbb adc xor sarl and shlb mov insl and stc mov inc sahf jno inc hlt mov test movsb xor pop popa add (bad) mov add mov dec jns jne mov cmp push and pop loopne dec test and add retw (bad) xor add pop hlt xchg pusha repnz fldcw mov pusha mov inc add mov mov or int3 add mov pop outsb adc mov into jae add xchg pmulhuw sbb dec pop lret mov add pop outsl xchg cli push lods in fs push ds cmp fildl add test es add pop lret xor cmpsb test mov clc lret cwtl ret or and sub adc stos sbbl nopl xor mov push adc enter loop roll push cmpsl outsb pop jg mov ror inc call add add jne add sbb mov (bad) bound adc jo add std cmp add out popa adc lods jns movl cltd add ljmp pop and inc xor inc (bad) jae add sbb push test inc add mov mov cmp fnstcw pop sarl and gs sbb add jae add or sub mov sub mov xchg sub cmp add std ja adc mov sbb addb mov xchg xchg addl push mov sbb std add or mov sub (bad) in out add lret sarb push xorl push adc std push scas cwtl sbb insl popf sub incb stos or mov adc out cmp pop mov orb adc adc xchg mov out mov lcall lods add push mov sar push pusha enter xor lods out pop mov mov sbb jle pop dec or xor (bad) lock lea lret sbb das inc hlt popl adc mov in mov adc xchg js outsb int pop aad adc out jo ds jg repnz and xchg ret fadds xchg fisttpll mov lods scas add mov out and mov aad daa mov lea jne cmp push loopne inc xchg inc add xor lcall push dec and jno add fwait mov mov (bad) cmp outsb psubq ljmp in fidivrl pop and sub popf movsl push leave dec enter pop add inc daa mov pop loope faddl mov push mov cwtl add push lahf push ror jl call or pop add lods pusha adc (bad) cld stos movq sbb daa mov (bad) xor lds fs sbbb out mov lahf pop cmp add rcl loop pusha push jl mov sub mov jp cmpb sbb sbb inc mov add cwtl xchg sub inc and add popa sti lea dec jg mov add cmpsl imul jl,pt pop inc add cmp stos aam add dec cmp divl inc push push xor sub xor pop inc mov mov insb add dec aas add clc mov xor pusha jmp pop push add cwtl xchg dec sub and add cmp test inc std jecxz orb loope add jp rorb loopne cltd xor imul fisttpll pop insl lret (bad) int push or aad out unpckhps (bad) jmp cmp cmp jbe inc std add fsub jnp dec and push sub (bad) mov cmp arpl enter mov (bad) (bad) mov adcb adc sbb or push sub adcb inc js call fbld dec mov jp (bad) imul push cmpsb pop rep push leave shl add (bad) and lds dec jecxz sub sti out add xchg mov repnz lret shrd aad or sbb movsl shlb inc xor aaa lock ljmp pshufw add cmp flds sub cmp dec or jb cmp clc bound repnz fstl fiaddl mov dec movb dec ss add pop dec jmp out pop int3 jno or adc adc push mov and icebp pop fs jg loopne scas jge pusha cmp and dec mov add ficom add fcoml add pop jno mov data16 and pop mov push fild ja push lea mov out sbb add sbb (bad) jo push cwtl cmc push into add pop inc inc dec movsl orb adc cwtl rdtsc sbb cmpsl xor in iret mov cmp adc enter ds add adc movl jnp xor aad cmpsl push icebp push sub or jle mov sbb fldl push addb ds gs jo pop xor add adc add add xchg adc das cmp mov sub inc aad incb and ret mov sbb sbb jl add mov aad movsl xor into dec addl jns (bad) pop mov push add loopne xchg mov sbb and int3 sub loopne lcall jb mov jl and rcl addr16 sub pop mov mov dec popa or out push pop ljmp add sbb xchg mov mov nop repnz add sbb add popa inc sbb shrb imul add loopne adc sbb adc cmp inc out stos ja hlt and lea mov outsb loope xchg lock out mov (bad) inc add cmpsl dec les ja jge test cld pop lods enter or roll mov lcall dec jle add push mov inc push movsb dec jae adc add or std cld out xor or add mov lods add out andl jg ret mov add cmp sub sub mov int das (bad) insl roll or mov push dec xor mov cmp icebp mov orl lea dec aaa push push jmp jo jp cmp jge push push call xorl incb int rcl xchg fcoml adc subl cmpsb enter inc outsb lods js cmp push fiaddl mov xchg in in jl out data16 add cli in mov mov lahf leave dec lods das push nop adc xorl add push or add mov ffreep xchg xchg sub out add cli sub add dec loope pop mov mov and cs in test unpcklps sub stc and mov sub movlps arpl cmp add jbe ret fwait loopne sbb inc mov xchg add jo or clc mov mov add lea jmp call dec or sub inc push ds add imul nop loopne stc inc adc xor andb dec insb add pop fiadd mov add add sti mov pop test jp pop out mov dec ds sub jle das psraw ret cmp out pop add jecxz imul iret outsl mov xorw and rolb push sub icebp mov mov mov add xchg test add xor adc add lahf test sbb scas dec add add into or adc sarl xchg mov aad sbbl mov mov mov pop js iret mov push repnz (bad) adc fsts add inc inc sti out dec cmp cli arpl xchg xor int jge add popa sub rorl sbb adcb adc mov push ret push fnstcw add push sub data16 pop sarl dec xchg pusha imul ja repnz mov mov cltd cld jnp pusha jp ja push jno pushf sbb pop mov out aas pusha pop pushf ss popf js dec push sub sbb mov mov punpckhwd repz push lret sub (bad) fcomps mov andb movsb inc sbb bswap and (bad) pusha sub adc repz jo inc enter test clc add sarl rorb add adc fwait add int3 cld test mov adc ljmp mov inc jns add sbb int add lret ds mov sub sbb aas cs adc dec adc cmp mov lret sti and push mov add jg jmp push cmp mov mov and or pop test mov add and adc pusha orl aas js mov (bad) dec roll icebp jnp sub or cld lods dec mov outsb out inc and push dec mov xchg stos cmc cld push mov fnop pushf in add lock cmpsb xor js maskmovq negl mov mov add in test (bad) incb sub or dec pop add ss fldt add orb sbb or jl rolb inc mov test xchg add sahf mov out inc cmp loopne les ja (bad) outsb pop (bad) repz cmp push lock jecxz push xchg pop sbb sbb and mov nop test inc sbb dec or xchg jo push sub in insb add push jae mov cmp push mov sbb jbe dec (bad) lods lcall jnp pcmpeqw bound loopne xchg adcl je mov orb add mov xor cmc adc jmp call mov pop push jg xchg aam push push aaa shlb add jle sti add lea lcall jo js add enter popf hlt loop movsb stos jecxz and insl (bad) and add data16 popf (bad) or push or mov rorl std enter add sbb int insl mov ret imul mov adc or test xor add jle das sbb jb xor jp mov add adc scas mov xorb pop add dec add jge sub cmpb stos (bad) sbb cmpb or mov or (bad) cvtdq2ps shll and (bad) add sub mov adc or cld xchg stos dec add adc clc lret add mov mov loop in and adc std push add inc movsl mov imul xor add out das (bad) popf scas popa add dec test lahf mov cwtl dec in cli lock test push (bad) icebp pushf jo pop add sahf clc add (bad) and xor stos dec pop lcall push (bad) rcr in out add sbb mov (bad) out mov sahf in xor cwtl mov sbb sbb push ds mov ret pusha mov and les and bound add roll xor sahf add leave inc xor add lock inc mov inc add sbb adc and cmp rclb pop in test sbb pop pop bnd add test pop push and push out cmp aaa out add xchg add pop jecxz add mov outsb out les jb add xor jns sub jo add push aad pop cmp jp jne les xchg imul fcomi push insl and push mov shrb sub jmp testb sbb jg push or dec std decl xlat inc mov dec out cmp add pop xchg xchg xchg lds add ret notb mov add out add popf push imul mov xchg repz rorb cmpsl pop ss xchg testb out (bad) loop add sbb nop das nop movb cwtl mov push mov xor sub sbb mov add decl add jbe dec add les mov dec lods hlt jge jb jecxz push iret add and or and js cmpsb gs lods fdivr rcr add cs jmp lret add pop aaa add xor add icebp stc mov mov inc add ja inc arpl jl pop rcrb add push (bad) sbb aad and lds pop stos add test orl xor je add movsb dec sub mov popa nop xor pop add mov pusha mov cmp fwait es pushf ds xorb (bad) mov mov movsl call daa mov dec push dec and or dec sbb inc jns call push add mov jbe dec into fadd adc outsl inc shrl add push lahf and shr jo pop ja popf xor icebp loopne push das add cmp push (bad) cli pop jmp insb and and ja jne xlat psadbw xor cmp test mov std aas in fs stos add enter sahf loope idivb insl mov js arpl and cmp pop push xor pop ret shll sbb xor es xchg loope mov add mov clc dec cmp mov or mov inc xor pushf incl xchg repz jge jle jg cmp (bad) mov and mov push xor add mov cld inc mov lcall xor (bad) je push dec (bad) mov xchg cmp rorb add xchg jbe loopne cmp (bad) mov mov and add add mov jns add and rcrl les addl insb and (bad) mov dec call mov or enter lock inc cmp sahf jnp cmpsb das xor inc (bad) dec and cli sub push add mov outsl push add aas out pop push mov push fwait outsl add fisttpll repnz movsl fbld addl fisub add sbb fnstenv scas pusha add inc jmp jnp andb bound lahf arpl rorb (bad) rol push in add icebp jnp jo add mov add ficom mov sbb movb inc add es nop test iret cmp jp lcall jb ret add rorl dec mov push pop (bad) add into je add orl cmp pop pop das adc (bad) jp faddl aaa (bad) sbb xchg mul pop out push add add dec xor data16 adc add push cmp dec mov das rol mov xlat arpl test mov fcom add (bad) pusha movsb sub imul repnz sbb dec sarb pop add cmp fcoml pop mov mov (bad) shrl loopne test mov sbb inc jle sub dec add cmp add aas add mov sbb fnsave cmp pop add pop pop movsb lcall pop test inc imul repz stos cmc shl out nop sbbb cs rolb inc andl inc rorl hlt or les fadds fcompl push mov pop cmpsl xchg pop xor cli push (bad) xchg aaa adc push lret rorl cmpsl shl push mov and add stc stos dec loope and mov and add push lock add (bad) add xor loopne add jb rolb loopne pop cmp pop stos add mov movsb shlb adc add icebp sbb rolb fdivrs mov dec sbb sbb mov push xlat xchg mov pop xchg xchg outsl mov sbb add repnz push cmp enter test or or mov push ds or ja insl inc jo dec outsl loopne add out pushf add notb lret add fucom cwtl cmp rolb jo mov ljmp push xchg imul add and mov add test sub sub mov stos rcll sub or out fs xor lret pushf or mov in jge adc nop inc xlat push stos icebp rcr or stos jo dec movsb add jns in lock iret jbe (bad) in and (bad) jne rcll jno adc (bad) pop mov mov or fs add (bad) shl xchg xchg imul dec movsl cmpb mov (bad) lret push lret cld aaa enter icebp xchg add inc xor or push add sbb out rcr jno fidiv or cmp add push cmp das jmp mov push ret orl push les (bad) out pop add rol xor mov push pop jnp out les pop add ret fnstcw ss test add fiadd popa fs insb add adc shll mov clc push add test insl add inc sub (bad) enter adc scas push cmp js leave imul loopne jnp mov adc cmovb jecxz jns mov add jmp dec fiaddl jo mov stc push repz rolb add jnp mov fimull (bad) ds add sahf dec cli or pop mov aad loop mov mov rolb push inc push add mov into inc inc inc test fadds mov dec dec mov adc push hlt lock arpl dec je xor xor push dec imul pop add xchg xorb addl pop or push push sbb popf and and adc add push cmpb fadds test ret mov cltd sbb dec orb sbb fiaddl mov (bad) mov icebp ret imul cli cmp mov add push mov subb mov mov jb add jmp pushf mov add or cmp dec pop cmc and add cmp dec sbb sub mov push push mov decb mov call sbb push sbb add test inc dec push shrb test mov inc sbb rcll test lods mov loope mov dec add push fiadd mov out or sbb and push test rol push movsl (bad) xor jb add jnp adc ds addb push add mov jmp xchg pop or add insl pop das dec test int int3 mov aaa or push add and test mov (bad) add sbb daa test or mov mov (bad) push pop cmp xchg jecxz rol mov (bad) pusha pushf push push mov cmp fadds cmpsl and cld (bad) lret push cltd sbb mov cmpsl sbb or stos ljmp and mov mov ror sub pop xchg xor insb push and jns int3 add mov mov jne mov jmp outsl test test pop push shl notb out pop das dec out (bad) repnz data16 add popf xor pusha xor sbb and dec out (bad) pop bound mov (bad) cmp inc add sub xor mov sbb fwait pop pop sbb add xchg mov or call inc rcrb scas mov leave jno outsb lret aad sbb out xchg mov push add xchg insb lock lea mov ja add subb mov pop (bad) cli or push add daa shrl lret aad sbb repnz add dec lahf or pusha mov adc pop pop add dec in add andl movsb repz popa cmp addb test cmp adc lcall and (bad) fs mov add inc mov lret (bad) inc dec push adc pop dec push push aaa inc and lods sbb pusha in mov nop sbb xchg das sub xor rorb adc dec iret mov data16 mov test mov mov push xchg cmp pop pop or imul fyl2xp1 adc cmp or and add aas xlat or adc add subl imul cmp adc imul pop sub popa inc adc sub sub jns add rep jmp cmc negb mov clc mov fdivs jl adc test and mov mov cmp add xor cmp popa add lods jp in xchg aam (bad) add push xchg int3 repz out adc mov pop cmp aas add cltd lock (bad) add push push out jae mov xor (bad) mov xor jbe mov pop or (bad) (bad) rorb add cmpsb xchg sub outsl addb push movsl stos mov add push test test cs jo xor lcall or fisttpl xchg or iret xor xlat xchg (bad) ds cld (bad) add rorb pop sahf xchg clc cmp pushf adcb or jnp add push cmp or std (bad) stos aaa sbb in ret lret sbb push dec xor adc dec mov jbe add jne test add and icebp add loop cmp jle (bad) lods aam lcall mov push push orb dec xchg jne leave add divl and xchg push sar lods mov and shr jg arpl xchg pop jae and imull mov repnz mov add sbb adc push xchg lock int mov sub push sahf and es inc movb lods jg inc loopne testb adc sbb outsb add inc jo xchg push icebp add pop sbb repnz mov add lock cmp (bad) lea popa jno mov shrl mov dec imul or or leave cmp mov xor pop arpl stos in andl or sub lds jmp xor leave lods out push (bad) xor test add sub (bad) push pop cs loopne ja jge lock cli pop jecxz add notl add sub cmp lret cwtl jo sti rcll sub inc loop decb inc subl cmp inc addr16 icebp sbb loop lods call (bad) data16 jmp stc and popa stos loope cmpsb jns and jae mov pusha das nop into icebp inc sbb std and mov add or cwtl lret inc jne aaa jg lods push xor (bad) in add (bad) es sbb pop and pcmpgtb mov jb test (bad) dec mov rolb cmp lods sti add xor mov mov pop cmpsb cltd outsl ljmp push jbe push shll mov test cli xor adc cmp mov stos cwtl ror orl sub add mov sbb insl add adc stc dec cmp and xchg outsb lds lahf icebp and xchg push mov sub xor sbb inc mov push mov icebp add xchg jmp and out add (bad) xor dec add sub cwtl subl add leave lcall rorb aaa jbe pusha jecxz mov stos dec mov add outsb cmp fs lods dec (bad) lock xchg shr sarl xchg inc add mov lock lcall cmp cltd add mov into push repnz add js cmpsb scas push sbb pop mov in mov nop rcr lods cli inc sbb sub add mov cwtl and mov repnz inc loopne cmp (bad) and mov add pop mov mov cld jns sbb cmp (bad) cmpsl sub add xchg js sbb fsub jb loopne pop mov mov or jno or nop loop cmp es push xor push push stos inc fs cmp popa xor imul and loop int int3 sub pop or (bad) fneni(8087 outsl sub jno mov fwait mov jns lahf nop in xchg add addr16 mov sub loopne xchg push sbb jle aas push inc pop aad add out ljmp int3 add in inc inc sub xor je in fwait jno int3 test xor add or and add mov and ficom mov sub xor sarl fisttpl in pop out or add add lods (bad) pop ds and cmpsl in dec dec fwait inc add aaa jle inc jge mov add add sbb add mov mov push fcmovnu and test data16 pop add roll out pop arpl xchg fmulp hlt push les jae push mov add mov or and push cwtl add add jp insl add pushf mov decl (bad) cmpsl mov popa hlt push push jo mull inc call shrb je add mov push (bad) les mov andb clc jl test mov lods pop mov pop cmp jmp in and xchg loopne xor and out adc mov add data16 inc sahf ror mov adc setl int push aad outsl (bad) loopne out pop add (bad) loope mov pop aas sar nop aaa cmp das sbb push cltd jge int mov aas mov mov jne add adc add adc call inc test inc xorb dec and lock xchg add adc aam pushf dec mov stc pop stos lret addl add xchg pop jmp add add mov leave inc lret std push jmp pop jno sbb sbb sahf mov adc mov xchg cwtl pusha sti fdivs rolb jns xor icebp lock add loope scas repz mov add sbb cmp in add dec lds add dec popf xor cltd inc xchg add jne and pop pusha pop add push and js inc clc add shrl add lods cmp pop shrb shl sbb xor mov add test cmp add mov add xchg xor push push in jecxz repnz add jp dec cld psrad cli mov gs and mov test ss lock xor push xchg cmp add les inc dec jb ds mov add lods xchg jl add ret jmp out jo inc xor mov inc pop scas mov popa jbe cmp mov xor mov (bad) jb adc hlt add lea into cltd adc jecxz push test test nop daa pop inc fwait and mov (bad) push cwtl cmp outsl and dec push ds call sub sbb inc fwait inc and (bad) and out xor push pusha push into add push sub or ss cltd cmpsl fwait sub inc dec add repnz jmp xchg jbe mov (bad) mov aas lcall insb je hlt enter add push mov or stos inc ret mov sub mov out pop add lret clc in popa lcall repnz xchg push data16 sbb hlt adc and add cmp fdivrl iret add inc jnp popa shl ljmp mov repz aas popa outsb sub mov push cwtl hlt jp dec jae,pt or sbbl pop add (bad) fnstcw (bad) mov sub pop inc stos xchg das pop xor add andl add add lock movsl or in dec xor in ret hlt call lea (bad) sbb repnz insb jne pop movswl mov scas add mov lret mov push ret (bad) xor loop mov mov xorl and sub (bad) mov ja ss mov lock lock rorb fldcw mov orb xchg test int adc test cmp scas cmpsl movsl mov xchg add sbb or mov add rol aam mov test jo jmp add dec inc lods jmp sub mov cwtl pop and mov xchg add shr hlt push lods or jecxz popa fsubrs insb fucomip add pop push xchg or inc xchg xor pop in add push lret adc inc out daa dec pop imul mov push or or in inc push add push test rcll push and mov add or popf sbb cmpsb icebp mull add mov out xchg in add lods ficomp stos inc push mov mov test ss push add (bad) jns test mov add int3 pusha rorl pushf and add dec dec push jns outsl push rol dec enter push in cwtl sbb mov test add js mov push xchg xchg pop adc xlat or mov add in jb std cmp stos dec cwtl cmp pop or fnstcw push xorl into xchg or xor push adc mov cltd mov mov jge add scas out push enter mov dec jo leave int3 push mov xor insl sbb and inc xor mov test pop add out sbb sbb rcl add (bad) sbb scas enter adc mov add pop fistpl xchg popw imul subb gs inc addb jmp fs mov adc sarb jg call enter (bad) test loop cltd mov jnp add cmp or (bad) adc cmp adc mov push xchg das add fsubrp jle add push aad cmp add int mov icebp xor xor mov inc add cmp pop pop sub int3 or movsb add sub add fmuls mov and xor and imul xor ret pop push adc xchg or cmpl dec push xchg pop adc add jge rolb pop cwtl lds and mov cmp add daa in lea sub jnp,pn jb sbb imul rorl push mov add pop cmc js jg xlat adc inc lods leave dec (bad) nop outsl cmp mov push pop fs repnz pop push mov cmp push test add add mov sbb dec pop imul cmc xor lods popf mov loop out mov xchg data16 adcb mov cmp add cmp xlat xchg xor jns xor mov mov pusha dec xor sub push jecxz fwait dec xchg jns xor in inc ret sub movsl test aaa adc sbb jae data16 es cmc xorb (bad) es pop pop pop pushf inc bound sbb push xor or inc jmp shlb cli aas xchg mov (bad) pop icebp mov adc and adc sub aam xor mov stos inc mov loopne movsl push sar push lret out jb mov test loopne push and jae add sub xor call adc and push fwait call adc bswap mov shl loopne insl jbe or sub dec jle cvtps2pd dec cld icebp bound xchg mov push or rorl add sahf or adcl pusha xor (bad) pop xchg nop sbb pop pause xor out (bad) (bad) sbb sub xlat dec adc bound shr xorl jp,pt xchg es pushf dec pop mov push adc les mov push nop add add pop adc sahf cmp je icebp add stc iret cmp stos lock int3 int stos jecxz push mov or mov iret stos test or add rorb pop or addl fld1 inc iret out inc int3 or (bad) mov test adc icebp outsl jno je add lea and loope lock icebp mov push (bad) xor inc inc into popf sub sub fidivl cltd sbb mov scas dec jns pop aam test xchg fimull add and aaa nop in out add inc pusha out imul fwait xor dec movsb mov and pop dec or fistl adc add jo mov sbb imul adc xchg sbb scas add imul ss aad xchg dec cli mov dec push jae in and fldcw aaa cmp sub loopne add sar rol fadds scas repnz sbbb mov cltd adc (bad) (bad) jle or shrb inc aas insl jb inc faddl push mov mov or insl aad int3 add mov dec les fwait loop std adc lock bswap adc and xor les add in test fwait fs or into mov mov enter or mov les dec roll outsb aas scas add pusha fild jmp loopne addl sbb adc cmp and xor enter call lods jmp (bad) addr16 cmp iret mov sbb mov dec add push cmp movl enter pop fldt mov inc pop and mov xchg push add pop jg pushf hlt xchg bound xlat sub jl adc jge mov xor add mov pusha pusha mov or xor and lods cmp and pop ret stos xlat xchg fadds fldt add shrl sub jge add mov mov test inc pop loopne loope or icebp adc in cmp cli dec xchg xor cmp aad leave inc pop adc adc movsb adc jecxz xchg dec or mov xor ret test pop iret xchg mov jo rclb mov cmpsb and add mov aas aam fdivs fdivr je xchg nop into pop push push adc mov cli push add stos enter popf std mov test cmp pop push xor les cmpsl call test add or fcompp dec js cltd dec sbb lahf out cmp add loop (bad) lds xor cmpsb cmp adc stos add cmovp fisubr out mov sbb adc add lahf xor jge and cwtl jle sub xchg pushf sbb es mov add aas test push jne scas sbb es push inc orl lret outsb add push pop add mov aaa pop or xchg (bad) cmc aas adc sbb sar xchg mov and add adc mov in aam pop mov xchg roll dec cmp xchg cmc inc add aas daa pop int mov add inc call jl ret xor add test or ror xor adc add cld aas mov cmp cs jae sbb jle cltd lea je les fistl das jg push xchg es jmp ljmp pop addr16 fldenv xchg ror test repz mov pusha xlat xor je mov add xor sbb cmpsb popa pop loopne imul adc inc or (bad) rcll jmp rorb pop and psadbw add pop loopne add test inc dec fcmovnbe add cmpsl hlt lret cmpsl stos (bad) cmp test mov icebp jo (bad) jne pop push ds call and push aam inc xchg int3 stos adc mov jmp lock insl xor imul or in sbb jns or push add (bad) (bad) loope pusha nop push push dec cld hlt test imul add dec ds xchg (bad) inc fild mov xchg adc subl arpl movhlps (bad) iret sub lods push sub test andl jno push jo add xchg fidivr cld insb jb push imul jge or imul and sbb and mov and call cltd jl rolb xchg out xor adc cmp inc pop test je (bad) xchg xor xor and fstpl jge pop rorb add mov (bad) mov sbb mov ret or fcmovne test faddl jne popa cmpsb cli xor (bad) dec xchg or mov es adc and sarl fisubr xor push mov xlat pop int3 mov inc fwait mov add mov jb push or rorb nop inc pop add call jae xchg and inc add push dec sarb or pop add jno aas insl adc mov pusha lock iret dec jle orb inc roll je add outsl fadd lds mov cwtl pop xchg inc test jle jmp sub xor fcmovnb pushf jae fwait rorb xchg je and iret pop cwtl pop or (bad) pop xchg stos (bad) lock mov pusha sti nop cmpsl jge call jecxz mov shll push repz add lret add test ljmp jp mov in (bad) (bad) mov mov dec in add ljmp xlat shrb push push scas aas mov out add xorb add xor push jge jp ljmp jbe mov test add scas test imul pop fsubr add dec jge mov shrl add rcrl or add je jl les and mov mov dec add into mov jnp sbb dec sti mov xorl or push and or and lcall loope push fidivrl and mov (bad) cmp jbe lods imul rclb pop mov add xlat or lods xorl push (bad) loope pop inc mov das or and fldl or scas loope cld push or sub out mov and jg dec xor fstl es mov dec add stos rolb sti loopne sub cld pop jge add mov fwait cmc jle push sahf cs add enter pop loop addr16 nop mull push push jg xchg sbb rcll pop data16 lahf jae sub and (bad) mov (bad) mov jne jge or xchg pusha loope aad imul pop dec cli es add cld cmpsb pushf pop int3 sahf cmpsl jg add sti mov add jb sbb xchg add cmc dec inc add aad shll push add jnp idivb add (bad) (bad) add js std add jbe and jae lods mov cli jmp xor fwait insl add (bad) (bad) fistp add in adc sbb int sub rcll cmovge pop cli push dec xor sbb icebp jno outsl inc add loopne fcomps push ds pusha and xor out push dec movsl test mov pop xchg add and mov cmp js jae and jmp lds mov fstpt pop sub dec jo int3 sub (bad) repz inc mov stos pushf xor xchg andl fsubrs mov xchg xor out add dec sti mov push adc repnz adc pop xor bound aad adc or repz dec add ret cmpsb fs xchg add xor test adc add lds push pop nop out enter add repz push adc (bad) stc arpl sarb and add inc ficom add insb (bad) xor add movsl ficomp inc (bad) add xor add js inc inc outsl push cwtl or jg or sub dec lods clc std shlb (bad) or xor add pop fmuls push or mov and add fwait sbb push movsl pop push inc (bad) fs int add sub add fwait rcrl mov xlat ss adc in add pop movd or addr16 push mov in imul fdivs mov add mov in insl push dec inc pop cwtl ds pop or pop mov dec loope repz sub mov pop and stos mov push lods add sub jp jo add (bad) out orl mov dec adc jle add cwtl xor je add sub cmp add inc dec cmp add imul subb test xchg les mov and lods xchg rolb daa or adc pop ret dec jecxz push mov cld ss aam clc inc hlt loope std (bad) notb sub rorb jmp inc cmp out add adc imul vmread xchg fwait bound out incb icebp inc pushf ret push jl cwtl add cmp outsb cwtl lea lahf daa shll mov add jp ss push add push test lcall add cmp inc mov sbb enter in (bad) sub sub int cmp mov sbb cmc into or pop jl add sub adc cmp mov add popa ret and push (bad) jl fisubl push dec or aas sbb or or inc or add adcl lds xlat bound aad add int3 and cmp sbb daa stc mov out je aas xlat rcrl cmova sar ds loop scas outsb lock into gs add mov test add pop inc mov mov or jmp add jecxz dec push movnti pop inc mov and push call roll insb jbe int3 pop in pusha (bad) adc dec popf mov pop ret cmp inc (bad) jo push cmpsl push or xchg xor outsl flds aam movb cmp mov leave push jb push xchg xchg andb clc lret mov popf leave bound adc xchg rcl enter cltd pop out pop mov fmul mov pusha aam icebp call repz pop add sbb gs fwait add jbe jge xchg lea xor jb shrb adc jmp (bad) idivb jnp lret mov cmpsl add stos shr push add add scas adc mov imul bound pop adc push adc mov add repnz ror flds js sbb aam std push sti les xor or (bad) rdmsr leave int3 mov insl adc das and xor sti xor jbe nop pop lods int3 lea add inc dec cld cmp gs add jge xchg xor outsb pop adc repnz xor popf jb add adc out push or (bad) push mov imul shr push adcl xchg pop ljmp test out sbb mov xor addl orb sub or sarb push push bound mov popl push lcall mov xor movsl pusha push sbb std sbb jecxz aaa add xchg mov add pop adc jbe inc (bad) sbb shlb add dec add cmpsb aaa mov adc popl movsb or add lret add shr lret icebp clc js mov dec (bad) push mov push add add xchg sub pop add outsb scas fstps add (bad) cli inc orl push jmp push add in sbb mov jmp push incb mov mov cmc push les cwtl cmp fdivrl stc shlb add ret mov cmc shrl inc sbb pusha subb and sahf aad fdivrl aam xchg es pop daa inc stc mull jl mov shl and clc ss adc pop adc sahf xor jbe test sarb fistpl imul cli dec pop adc add mov jl add mov jne (bad) enter cmp cmpb test sbb or cmc mov (bad) pushf pop cwtl jp lret test in mov int3 enter push sub add sub mov cmp js pushf jns mov stc cwtl mov jle dec jno adc ljmp push jecxz jae sub mov mov jge and je (bad) jp or orb call insl dec mov movsb pop (bad) or push or add add (bad) mov ja adc fcomps cmp std repnz inc add push add inc or add in xchg xor push jle add or in push cvtps2pd insb rol sub ds (bad) cmp or sbbl sahf adc fmulp js adc idiv inc incl add push loopne out add stc xchg out movsl inc add fsts add aad pop and push cmpb pop mov mov test jnp cmp adc jp ret and pop xchg xor sbb inc test in mulb nop out jo adc xor jb jbe push push jns and dec sub add cmc cmpsl sbbl add mov dec add push ret rcrb (bad) adc push pop (bad) jmp sarl enter xchg not in hlt add roll adc jne adc xor add sub mov sbb (bad) dec xchg nop and pop or ret jns leave push add jae mov cvtpi2ps and inc add pop ss stos mov mov push sub ret bound in loopne sbb in enter lcall mov xchg faddl imul add push repnz mov shl sub xchg cmp cmp cmp hlt in rol jo test xchg aam test adc lahf cvtpi2ps inc loope dec ljmp pop pop movsb lcall xorl or imul adc cmp or add movsl mov inc sysret aad js inc xchg lea or mov and test call sti fisttpll inc inc (bad) adc std or addr16 stos scas or jo inc out mov fsubl and dec inc and mov add mov mov cmp fadds push aam rcr pop mov sbb loopne xchg int3 add sub add sti addl pushf mov dec lahf incb enter pop adc cmpb inc rclb push jnp aas dec dec (bad) adc incb mov and mov jo add fdivr jge push shll imulb je mov outsl xchg xor ffree gs scas sti xor add clc movsb push pop ds cmp roll sbb or and dec xchg sbb add call xor test test and stc (bad) aad add adc mov fdivl cmc add outsb test add mov outsl pop scas imul clc add into mov cmp xor xchg add in inc jnp ret das mov push adc mov roll repz loopne add je scas cmp or sub jle insl fimull and mov aas repnz and push sbb mov cmp xor mov adc mov sbbl jl pop sahf lds bound ror arpl pusha push (bad) push leave mov jmp in inc push clc loopne add or loop,pn mov mov loopne add fisttp xor or add and inc out or cmpl jo jmp mov in aad mov aam cmp xchg sti jge std and rclb jo daa sbb lock adc sbb pop pop inc lret and adc add cmp std fisttp pop mov repz mov add call xchg jl negb inc mov and sbb cmp pop push (bad) cmp sarb cmp xchg cmp aam mov loopne push test xlat lods ret pusha xor add or cmp inc je jne sbb popa jecxz add cmpsl lret lret loopne or jns pop pop outsl ss call pop sub int3 xorb pop jne fs push pop xchg xchg push loope jmp dec add mov (bad) adc fldl ror lahf cmp sub sbb jns jp push adc pop cmpsl add cmp int3 test cmp dec mov hlt insl pop repz das sbb lahf jp (bad) (bad) dec sub insb add in xor sbb cltd sub jns add aam ror repz (bad) bound jge nop fs lret ret dec sbb add push jmp xchg push or dec pusha dec inc fwait add stos pop mov jbe shlb add cli movsl std cmp les hlt adc mov xchg es add stc jecxz dec aaa loope cmpl cmpsl lds clc inc jecxz inc add call mov sub xlat mov dec add add mov outsb repnz popa iret mov jno or andb jb pop adc ss call ficom pusha aad dec mov cmpsb data16 mov push in in inc cwtl lcall fincstp fdivr jb pop xor and cmp sbb xlat in push sbb mov repz push push iret inc es out jo in mov add cld cmpsb jg std out (bad) shrb jno add add jmp aam clc dec dec (bad) ficomp jge mov and aas jbe addb xor mov add jns sub out sub and adc shl cmp sub imul pop aas inc jl in push sub add pop aad push dec add insl movsb in (bad) inc push lret scas add cmp add imul add jmp inc push das stc or push adc (bad) nop pusha pop lcall inc loopne pusha mov sbb loope mov sbb adc mov add out or lea out je es cld sbb in outsb pop cmp orb mov inc add js sub add inc (bad) jb push dec addl fs add inc lds xor mov adc and add out je faddp int sbb mov or popa andl jb js sarb and stos out mov sbb (bad) mov int lds lea clc xchg movsb rolb (bad) imul out rolb jmp dec pop scas push mov sub pushf xchg add dec cwtl sbb sbbl rcr pusha test (bad) sbb pop xchg mov inc inc mov call inc insl cmp add mov and pop daa xor aas movsl push add inc xor adc (bad) push sbb fwait add (bad) movsb sbb adc cmp mov sbb add dec std arpl adc push xchg scas add pop cmp call lods or imul sbbb adc xor push mov mov jle dec add dec int3 jnp test jmp add bound or add cmc fs and jmp in (bad) push movl nop lods push mov fldl pushf add imul xor (bad) adc jecxz or sbb rclb and cmp cmp das mov jle cmp xor xor cmp mov cwtl adc add xchg sub stc jp test add inc mov fnstcw sti cmpsb add lea in add or inc mov movsl jmp and jo add jb (bad) std into fmull roll aas addb add out sub push sub mov lea jae jns fist mov mov int3 inc cmpsb inc sbb movsl push xchg add or lret aad sbb xor push in fsubs xor and mov jns cmp jno jp push cmp cwtl and movl mov xor xor push (bad) lock add popl pop mov mov pusha xor inc punpckhdq das cmp (bad) push aam test out loope js xchg dec or cmp sarl pop cwtl mov jo cmc jp (bad) call shrl and adc sbb jp xorb or icebp sub push jmp xchg pusha cs lds pop xor add xorb mov push (bad) and out pop or loopne xchg push xor (bad) movsl cmp pop and xor jmp adc adc nop ja add lock sahf adc sbbl fsubs inc cmp jb cmpsb jnp pushf adc pop pop (bad) mov mov and push out pop out sbb into add lods mov imul rorl xchg dec dec cmpb mov pop jns add inc inc sbb ds inc loope add jecxz dec pop in mov ljmp cmc add mov mov xchg cwtl xor std aad js and nop notl and in pop fdivrl test xchg xchg mov lret inc mov testb adc movd repz incb sti ficom leave fldcw jecxz push xor aam jmp push sub push dec in pusha sbbl or add je cmpsb dec add inc out sti add aas loop into fidivrl mov inc or mov daa rorb enter xor add adc ret pop xchg push xorb jmp clc add add mov rolb gs mov add xor add arpl call mov fldt es adc (bad) jno inc sub inc add push mov add loope into fmulp add adc scas mov xlat mov sbb jmp ret cmp mov inc mov mov cmp dec (bad) add out lock mov cmp mov mov inc mov ljmp or xor mov or xchg rolb lock sub xchg in add adc mov inc xor fimull cmpsb rolb jne fidivr push cmpsb sbb mov lret int3 idivl dec lock and push les ficoml jle add cltd mov clc or cmp ficompl rolb loopne,pt fldcw cmpb jo in add test mov add adc push pop inc add inc jne mov mov jl mov mov out clc sub xor (bad) (bad) popa jl xlat ljmp and arpl mov push pop xchg adc es lahf inc jg sub mov jbe pop jne adc ds adc sub pushf loope (bad) je lock scas and add jecxz mov inc add pusha mov pop imul adc js lods inc fnstenv mov jbe cwtl add in xchg jb lock and cwtl add orb nop bound loop cmp cmp lahf push mov dec adc xchg xchg mov and dec add or mov cltd or rolb add cmp and add fiadd lea sbb dec call xor dec mov mov xor add fistpl (bad) int add add push xor data16 cmp or xor enter xchg adc add fiaddl mov bound lret inc clc out or sbb roll inc inc in xchg mov sbb ret je add bnd mov loopne out mov lods mov clc stc aaa call sbb shlb sbb jecxz cmp lds fcomps cs enter pop push adc imul cmp enter push jo (bad) stc inc cmp add andb out push sub jo xor xlat sbb add mov adc mov cwtl add inc pusha cmp xor popa mov lods stos jecxz or sub adc push adc xor (bad) icebp bswap add sbb call dec and add xor xchg cwtl sarb sub cwtl adc and mov rcll imul add push fidivr iret mov in cli (bad) sub push cwtl in push adc dec add inc fcmovnu mov fwait or arpl dec aad pop roll fnstcw sbb add bound mov add xorb sahf imul sub push (bad) adc push cmp es repnz roll pusha mov add adc pop out les icebp lds dec rolb cmp xor pop sti inc cmp dec out mov (bad) into inc jb test arpl mov cmp inc mov insb clc test loopne (bad) push inc sbb ljmp jp push mov add dec inc ja fidivrl inc lret icebp (bad) pop sbb bound dec add testl cmp push or jmp out or test mov xchg mov mov into or lock mov xchg mov dec xchg test adcl adc or inc mov popa push xor enter xor stc and aaa add ficom sbb sbb jno hlt jl jl (bad) mov ret add inc jl add mov xor or test inc loopne sub and mov cmpl clc cs push cmpb (bad) add les pop arpl push and or mov and add xor inc pop mov mov fidivl nop inc cmp jae (bad) pusha add cmp mov pop fstl mov ret jecxz incb or add rorb sbb xchg mov test sub add xlat aad add std movsl (bad) or aad jae xchg testb add imul inc pop or leave rorb sti push in sub mov inc push addr16 add cmp sbb aad rolb pusha mov iret in add lds add mov (bad) aam test sti rclb or rorb inc fcompl ret cwtl dec xor pop lock add push mov out sti inc outsl in inc pop (bad) jp jl fldl fs sub int3 icebp cmp pop jns rolb sbb and div add and in mov cmp fs in sbb inc int xchg ja mov daa in mov cmp mov mov lock mov lock cmc data16 jno,pt inc ficomp add outsl sti inc adc mov loopne les and fbstp in scas sbbl add xchg das or es out cmp inc rcrb add out pop popf shll leave ds ljmp adcl cltd repz jo leave pop pop aam xor mov pop jne loop push sub ds jmp or loopne clc adc adcl xchg dec fsubs and add sub shll mov and outsl pop fnop pop cmpsl inc or xchg push test je (bad) pusha enter mov push fwait sbb push frstor shrb jl add push popf xchg mov je (bad) cltd das rorb xor jns fisubl loop add jp scas push jecxz fadds xor or add repnz lock stc and dec mov gs jp push add das push in mov lcall clc les ljmp push add sub lock inc sub jmp bound leave mov mov inc xchg imul pusha repnz sub add add movsl mov mov and inc je xor (bad) test xchg jg mov loopne adc rolb lret mov mov int (bad) mov xor jo xchg and add mov in test cwtl pop pop or xchg jl je push rolb dec shl clc mov dec inc and loopne out imul mov xchg mov sahf pop push mov enter pop leave sbb mov jle jno rcll pushf jg (bad) rorl lcall pop jnp sbb inc rorb test adcl cmp repz rclb pusha call adc vmovlps add (bad) pop (bad) xor and out ja add mov (bad) and scas jno js mov mov cltd cs push and loopne jo and aas in inc cld add sahf push mov xchg inc pusha mov aad jne or decl add mov jmp xchg and inc pop ja adc daa xchg (bad) and syscall jp and mov add repnz lret dec test mov mov pop add loop push roll call inc lods test in adc dec rsm mov clc rorl adc mov sbb or add aad mov jo jb clc add xchg aaa push mov insl in add pop adc rcll lds cwtl adc xchg ja or sub mov xchg lea pop mov rcll icebp (bad) shrb pushf lods pushf mov jp add push jbe lock adc add movsb add mov adc cltd mov add sub or scas add or fs inc inc pusha inc lea data16 out jecxz loopne mov inc xor jo sub sbb fwait jnp test outsl (bad) or mov and aam loopne aaa das mov or xor in mov sub js pusha adc or aad or out cmpsl cmp push out aas jae add in call sbb and fbld jb cmp cmp addr16 pop or add xchg inc sub (bad) push inc push lret sarb test mov pop jbe cmpsl daa rcrb call sbb inc in add add sbbb cmp scas mov inc sbb adc lods mov dec hlt hlt cmp jo leave nop push les dec enter adc ljmp xor sar pop add jns xchg or xchg add mov aam imul dec int mov pop (bad) mov js add jns sub adcb inc fsts cmp mov push xor icebp add mulps mov shll cmpsb mov inc mov add test jo mov test xchg xchg mov add mov mov cwtl pminsw or push fs inc andl push (bad) jge,pn leave or ss cmp xchg lock sub adc mov mov idivl jb xor xchg arpl sarb fnstsw imul xor ret add inc fisubrl in aam stos mov shlb inc nop mov or int3 adc in lock ds add test test fwait xchg inc adcb cld dec iret add mov inc lret lock xor mov or mov mov mov cmp setb pusha cmpsb push mov out imul sub int3 in inc clc stos add adc andl pop ss cmpsl inc pmaxsw sahf jmp xchg jno pop add mov push stos fnop mov and adc leave or lock add mov sbb test jge xorl fildll pop mov mov es xchg adc in pusha mov cmp and xchg sub inc add pop outsb sarb lock dec in add add push sbb loopne test sbb xor xchg jb test xchg adc pop xor mov je mov mov pop shlb rclb popa sub and in push sbbb sti mov sbb push push add call aad (bad) rolb mov add pop mov testl movsl (bad) or fwait (bad) and jb call sbb mov jno mov push movsb xchg jp (bad) ret cwtl lock fs hlt fwait sub dec push mov test add add inc mov jnp mov add xchg add cmp mov add cli lcall in addb cmp fcom add xor insb inc aam sub cmpb sbbb (bad) rcrb sub pop lods push sub repz mov mov xor fsubl pop (bad) iret inc int3 rclb add sarb scas and loop sbb fcompl sbb or inc xor jo add add (bad) mov and push cmpsl repz (bad) or cmpsb lock notb add and scas cmp xchg sbb stos push pop jle dec add nop mov adc or push lock mov inc xor xchg pop inc daa pushf push xchg mov rcr adc add movsb lcall movzbl add daa in xchg test stc test dec add mov xchg daa mov inc jg jnp pop pusha dec gs cmp fwait dec pop mov push rclb das imul add xlat dec sub xchg jno xchg mov xchg cwtl dec inc and adc mov pop push mov and (bad) cmp inc (bad) cli pop or add push cmp nop add cltd inc jne loopne pusha sbb cmc cmpsb nop imul pushf cmp jb jns stc in inc push scas ja ds mov cmpsl add adc cld mov pop (bad) and mov inc jp (bad) xor mov sarl scas daa nop and sarb adc dec aam adc push (bad) std in xor mov sbb les adc jb shl cs jo jge int3 add cmpsl rorb stos cmp jmp enter arpl mov ds enter mov fistl test jns dec out dec and rcl add cmp pop mov aas sahf add jnp jecxz add or jp lods pop inc lock xchg adc mov xchg xor push andb ret sti xchg jg subb add sub mov add xchg js mov or lcall pop mov xlat (bad) pop add out insb lret add (bad) sub add and iret push mov in ds mov out inc fdivr push add movsl subl xor push jg sub hlt fldcw mov and call sbb loope fstps mov xchg dec loop inc movsb xor mov and daa test inc add add in (bad) xor jne (bad) cmp mov fidivrl xor ljmp adc xor xor cmp mov or in push pop or test andb mov (bad) repz and jae inc push mov cld outsb out movsb je call daa xorb addr16 add cmp cmc mov pusha add push adcl shll test mov mov xchg add enter lret push and sbb sub mov push sub pop test jl push enter xor adc pop pop jns mov add and js or lret jp jmp in xchg ljmp or cs jo loopne stos cli ret push pop in fistl imul (bad) fidiv push add lcall or add popa push mov pop xlat cmp or dec jno cmp add pop xlat or dec mov add lahf inc xor pop dec add push mov push stos cmc in or in add xchg testl pop sbb add pusha fcmovne jmp inc cwtl adc adc adc jo or pop adc cmp mov aaa js inc or pop insb mov dec addr16 adc imul test or inc in inc fadds dec jno (bad) js or add popf jbe insb push out sub jb cmp pusha dec sbb add xlat mov enter mov (bad) push and arpl rolb cmp sub es add push add aas shrb inc lock negb mov test (bad) stc dec daa cmp inc rolb ds jecxz jo in (bad) icebp pop or mov scas xor pusha sub popa int mov mov and and or mov jl fsubs or add xor andl adc inc add pop or push cmpsl sarb cmp add out pop jnp mov andb add jo mov dec pusha loopne mov or test adc ja sub cmp (bad) clc push and faddl push das lds and jp adc sbb adc jge dec int3 in mov sub aaa popa movsb les mov mov je push or add mov mov imul loop addl incl lods add mov (bad) lds jns inc cmp rorl and adc sub mov aad cmp xchg popf fildl dec xlat (bad) lds cmp adc and sbb add in add cmp xchg shl loope,pt fstp cmp inc sbb aad and add and push add pop sahf fildll or xchg mov xor stc and je fistl cwtl push mov fnstcw pop pop or movsl add lret push adc push je jge jecxz mov or xor ljmp dec add out repz (bad) test (bad) lock mov sub test xchg sbb cmp gs inc jmp std xchg ret lahf daa lods mov daa fadds test (bad) cli cmp sub adc lahf cs hlt loopne sbb mov aaa fcoms dec lock add and mov add xchg sahf lcall imul push add lahf jmp mov faddl mov push ret cwtl mov add adc or movsl add mov cmp jne daa pop cmp out sbb mov add mov icebp cld mov fwait mov cwtl add xchg ja inc lock xor push aam mov lret ja jb add sbbb cmp xor cwtl scas add push ror rcrb add mov clc push add pop rcr test imul rcrb fdivl cltd test lock pusha jo lods sub push sbb mov pop add sub xchg mov int3 imul jp add push scas roll add pusha and add imulb rdpmc add jecxz cs jns movsb (bad) sbb xchg xor and insl outsl lret outsb sbb push cltd stos push (bad) mov rol mov fldcw push mov sub (bad) jb ja adc inc fadds les adc mov push or or dec jno add push jbe adc fwait (bad) cmp sbb ds test or icebp shl rcrb adc push test push loopne js outsb push add fidivl addb mov test mov jb lret scas mov addb mull hlt inc push push inc and ret in sbb test xchg jl jb pop cmp (bad) daa push push mov (bad) rcll push mov cmp aas cmp imul sahf lds push pop mov or push add add inc sbb iret fcoms shl sarb add inc les mov dec sub scas rol inc test lods aas xchg (bad) add shl data16 enter inc arpl or int3 daa and mov call cmp daa or jl daa notl or mov (bad) enter xchg ret lods sbb clc int mov cmp nop push (bad) test mov imul cmp pusha mov jle push jp push pop pop test add pushf add in and ret lcall push jns xchg repz sub repnz xor js mov and inc mov pop adc push add or dec add fisttp pusha cwtl jle dec (bad) pop dec sbb ret jmp xor sbb cmc or aam imul mov inc dec movsb cmp jge sub fwait (bad) cmp shrb pusha sbb adc inc dec fdiv sub inc sbb loop leave inc pusha xor lock adc sub popf cs adc sbb mov lret fadds pop test rcl pop inc xchg pop and pop and flds icebp popf pusha lcall lea and push push fwait add push add cmp pop insl mov repnz cwtl test les jo out add mov add outsl xor cmp inc sub pop pusha sub sub out addb add imul push ds jno je jns imul jge fisttpll ljmp nop fwait lds jno out scas mov mov rol nop or mov cwtl (bad) lods push add icebp imul mov jns or adc sarb gs dec roll (bad) mov push repz loope adc aam add jle imul xchg xor ficompl fsubl leave add xor movsb cld pop adc push cwtl and mov and push jns out inc adc dec fmull jo and pop movsl mov (bad) data16 (bad) jne in pusha cmp sbb pusha dec das add (bad) ds insl sub les pop pusha add mov cmp cltd sbb gs add out int3 sbb push push push (bad) outsl pop (bad) jno rorb mov adc out adc aaa inc add lock push jnp jmp xchg je ret push in jno add lret mov popa dec adc add inc add movaps mov out ss adc ret sbbl jno fstp pop or outsb inc adc push clc xor andl mov fidivrl addr16 inc dec sbb fnstcw pop gs sbb loopne orl mov clc mov and fcompl fcoms xor arpl fsubl inc dec push cmp sub or mov mov repz pop (bad) iret int push jbe pop flds push xchg sbb int cmp inc cli stc fsts xor je adc sbb test jo mov inc sbb sbb loop or pusha and xchg test rcrb cmp int3 or pop fild fdivs cs mov add jb pop sarb movsb cmp sbbb jae mov add iret xchg pop ffreep rolb arpl and add xchg (bad) sahf mov es cltd (bad) mov lods bound cld cli aad mov mov mov cli push mov lret ret jno inc jl inc cs push pusha add jmp jg sub ret push adc test push fnsave test jbe jae lahf outsl shlb shrl mov into test mov sbb loope scas adc les cmc pop mov dec sub aaa and and (bad) add pop sub mov or add inc push dec inc faddl and cld and (bad) in int3 push sub push add pop cmc adc sbb nop or les pop mov pop enter push mov nop cltd bound pushf popf cmp test loopne loope pop sarb pop dec xchg push sbb fiaddl je dec add mov (bad) idivl loope popf sti stos cmp hlt mov decb dec mov xchg pop lods adc pop or jl fs cmp sbb in addb movl iret mov fsubrs xor mov push add pusha add pop adc jae adc loopne lock push push inc and testl fwait pusha lret (bad) ret pop and hlt sahf cld (bad) faddl or lods pop and rcr or dec mov fmul xchg add add outsl test pop or cs (bad) insb xchg clc out jo xor adc loopne xor push pop das jg orl bound movsb or mov movsl xorl stos or js fcoms push clc jns or mull xchg js mov xchg xor cwtl outsb mov cwtl jl sub lds loopne sbb mov and or f2xm1 jecxz aas mov add and arpl pop ficom test pop mov loope pop add dec cmovs jg iret cwtl enter jae cmpsl lods in (bad) sbb push cwtl rclb addr16 outsl ret add js shl push jmp mov jae out mov mov cmpb xor or xchg das xor movsl add arpl push adc pop or dec xchg dec das lret jp add hlt push mov sbb out jno lods ljmp jmp adc daa int3 pop cmp add jns xlat mov out cmp out scas xor stc mov mov adc fildl pusha cwtl mov pop ljmp fdivrl add xor jne je addb push dec jge and pushf mov add adc mov (bad) xor push adc mov arpl cmp inc addb jb inc push and sbb mov loop and jp imul clc dec es movsb inc orb xchg sbbb pop (bad) sbb add (bad) mov sbb leave scas ja add and and daa inc ss push int ret inc inc stos add lock or pop (bad) mov or mov mov dec or adc push (bad) mov jle,pn cwtl pop lods add cmpsb stos push test xchg std jecxz call in es inc leave mov mov push and movsl pop clc push (bad) fcomps testl out cli jmp and add xlat push call dec mov enter lods add push ljmp nop shrb adc inc push das pop rcrb jo cli sbb lret in add push pop cmp adc enter add insb (bad) les mov push push les enter mov jnp mov popf jb (bad) cmp cmp push lahf add adc sub enter outsl lods aam imulb mov mov popf sbb outsl or and je push mov add jae hlt shrl mov out sub xlat sub std push mov ljmp test add add call pop (bad) arpl xor pop cmp pop mov add mov jae mov int jl push daa inc mov sub sbb inc popl mov loopne push iret pop add orb pushf pop inc xor sar and (bad) xchg inc loope (bad) mov mov push (bad) jbe mov push leave test push fidiv inc int3 or mov jns (bad) lahf dec ret xchg xchg inc in pop rcrb imul add jno push and cwtl jns sub and pop test jae scas andl sbb inc push imul sub mov (bad) insl test leave aaa outsb sub mov cmp bound mov movsb and add fdivl std js add (bad) adc jmp push jnp jo and test pusha in pop (bad) xchg add add or es jmp out mov adc adc adcb xor mov push popf inc or mov fcoms ret out cltd mov movsb or sbb cmp xlat adc mov (bad) mov or leave sbb out js scas add stc dec shrl lods lods cmp mov mov add outsb das sub or (bad) xor push dec call ds sbb push (bad) fwait lahf xchg cmp pop mov xor mov sub subb cmp iret jle int rcrb and lret mov mov fcoml js mov sbb pushf sbb and rcl rolb mov jecxz xchg sar cmp call aaa js add mov fcoms call fcoms sti mov mov dec sub push inc insl ror jmpw aas push adc daa mov mov (bad) or add rol gs push push shrl pusha sub or out call add add (bad) repz mov insb shll push and sbb xor add mov (bad) stc sub hlt mov mov paddsb push add (bad) jle aaa js add je pop imul pop xlat ds xor inc mov cwtl js fdivrp insl and daa push mov dec xchg std add pushf test out pop jno mov fdivr mov mov cmp pop lock adc add stc dec enter inc jnp and or leave adc insb push sbb lea xchg clc sub or mov dec jge es lods loope cmp call jg jle data16 addr16 adc fwait stos test addl and cmp cmp ss repnz scas fsub out sarb icebp pop test and sub rol pop das test nop push mov xor add imul add add loopne mov out shrb jg add ss and xor in fdivl push js aas imul call and inc lret scas cmp orb add aad ljmp sub dec cs adc pop movsb inc jb mov add cs les jecxz cli loopne add xor mov xor mov ljmp mov pop rcrb out inc movsl rcl pop adc mov shll gs add inc enter push mov inc pushf xchg push pusha adc push xchg cmpsb (bad) cmp dec jp mov aas outsl fwait mov mov fild mov jmp sbb je sbb cld add das pusha mov or mov test add push adcb mov sub mov cwtl stos enter jge or fnstenv fcomps insb sbb movsl mov jae (bad) and mov mov lods lds mov daa roll jae lcall subb mov or int3 test pop cwtl dec and cmp cmc rcrb push loop pop js push mov xor and lock sbb or adc mov hlt scas adc js add sub mov push push xor in add sub and call fwait pop inc push pop push clc push loopne inc insl popa rorb out xor aad lahf mov mov jle xchg mov clc sahf cmp sub inc and add (bad) aad mov add or push xchg ret lea add cltd mov xor add cmpsb jp daa mov sub cmp mov shll rclb mov pop add fwait push and subl cmc mov ret cld xchg iret leave ror xor imul insb cwtl mov es or in popa fsubrp xor (bad) dec arpl and xchg and ja mov xor rolb mov mov adc sub and movl add repnz test mull movl iret int imul add fisttpl stos mov mov ds jp push or and or popf cmp sbb push jno into rcl add or inc xor or hlt cmp fsubs pusha dec pop mov cmp push outsb shrl pop xorl mov das or inc fsubrs xor add pop mov dec inc scas cli add sbb push push adc push cmpsl clc and jl add and mov push inc or or shlb dec adc dec mov jns and lahf or push add call clc push jmp or mov jb add jne (bad) call push notb pop push stos inc sub movsb and adc shlb sbb data16 push leave sbb or lret add add or rclb push cltd int3 adc fsubs leave add loopne dec popa xchg lret loopne daa add test cld push xchg cmp rep dec cmp bound enter shlb and (bad) sub lcall or mov xor push shlb xchg fsubp lock cs mov add aam aam cmp leave (bad) icebp jbe sahf jmp adc push xor sti insb push scas ret jbe lcall cmp xchg aaa and andl cmovae aam jp or xor (bad) icebp (bad) je jb push sub outsl push add pop jns cmp lret or nop test sbb aaa push add dec and (bad) fidivr adc orl jne aam imul das and leave dec pop xor jb pop mov cli and dec adc fsubs sbb jae loopne stos adc clc mov fwait adc or mov movsb scas in inc pop lcall int imul out sbb mov out pop loopne cmp aas fisttp push lret movsl addb flds cmc (bad) lock or test fadds add js pop leave es int3 jo and outsb xlat cs cld push lret mov lea xor cmp dec add je mov add rclb adc adc sbb or imul hlt daa or jge jns jns add jmp add inc stos insb xchg mov cmp xchg dec push dec lock mov xor sub lret sbb ret and and and dec mov and lods inc je xchg scas and (bad) and jne mov inc jle enter and push mov fcmovbe addb (bad) mov fs xchg lock adcb js jl mov fucomp adc or lcall pop add pop and ljmp mov mov sub das add aas or mov mov push mov add inc xor cmp shll ja aam std or jmp add das or mov pop cmp pop mov negb jg add popf in dec in lock inc add movsl jecxz pusha add cmp pop dec inc orb dec xchg add cmc fsubr adc push add cmpsl cmp pop testl mov push mov inc pop lds aam sbb push mov das and ret addb xchg jb clc int3 xchg stos jl pop fisubl mov mov rorb cmp pop and fcoms jno and jae call xor lds pop out or ss inc sub sub jae pop mov (bad) icebp xchg mov cmp int3 mov das inc into negl cmpl loop and repnz cmpb ret flds add sub sbb in push dec or mov jge movsb inc outsb adc into cmp and cmc lock xchg and inc dec dec xlat cmpsl adc inc xor mov and pop in add jl cwtl test js or pushf iret jl loope xor call jle pop mov sub lock js nop xchg out arpl adc imulb aas xor push (bad) mov pop rcrb xor subl inc ja adc sarb fs in testb jb nop subl inc rclb into push jl pop aad jmp push addr16 mov test and icebp lods data16 mov mov pop add mov ficoml push adc aaa repz add dec cmp sbb xlat (bad) out xor enter nop mov pusha adc sahf pop pop push rcrl das lea test lods das mov add in cmpsb or nop sub sbb rcrb stos add dec inc bound jo sub sub push pop pop pop mov sub cmp icebp cwtl add lods pop (bad) push add (bad) int3 sbb rclb xorb mov es vmread mov sub pop adc add mov sub adc in push add imul scas bnd sub push outsb and mov pop jg add (bad) xchg jb cmp push and mov loopne addb ja jno or mov add scas jb sub adc arpl adc cmp jo rorl (bad) mov adc pushf int3 add jns adc iret add dec push sub dec daa ret push pop push sbb jle cmp push pusha push notb repnz scas sub addb imul add lret imul lahf sub xor jl add outsl pop cmp adc mov pushf dec mov mov push push push shll out hlt pusha out icebp cmp jle dec sarb lret add mov sbb cmpsl js add incl bound nop jp imul icebp xchg dec sbb push (bad) in mov fadds push jo mov (bad) loop jmp js add pop sbb ja test leave inc inc add pop adc xlat (bad) cmc pusha clc sbb jae hlt dec in mov rcrb mov iret loop in insb or sub andb aam mov mov (bad) hlt int3 pop add mov lods pop mov and inc and sub add jl adc fcomip rolb adc cwtl pop int3 mov outsb mov in aaa es adc add mov jp ret cs jo mov push mov lahf xor cwtl jae and or js lea xchg push dec aas dec adc test add mov push push xor jge add shl xchg sub push cmpsb mov arpl mov or xchg das sub xchg lods in ret enter dec clc add popa dec (bad) scas pop imul xchg adcl cmpsb cld add outsb jno add mov mov lret nop mov add movsl push push cmp dec je or ror xchg nop pop insb cmpsl aaa mov dec popa add inc lods dec push shll dec jo push out shld sti add ss xchg add mov clc cwtl adc popf add xor lcall push inc or and adc paddb pop std fdivrl mov mov fs and lock mov sahf movsb aaa (bad) jmp jecxz adc call sub xchg xchg jecxz aas jo dec movsl jo add aaa push jbe pop adc (bad) lock out cmpsl loopne rcr and arpl mov enter pop cwtl xor lock add sbb imul cmp mov push imul ds pop mov fcmovb cmp ret call cmpsl add inc mov cltd cld push sub cmp imul mov scas push sahf and or lcall (bad) xchg push inc loope rclb cmc aam xor cmp pop stos add bound cltd insl test ljmp add fsubl mov sbb roll cltd adc add sbb sub add cli mov add and loop add mov lds pusha or adc or add hlt sbb call daa add icebp xorl add mov sub xor adc add outsb test mov insb mov roll mov lret inc xlat push or mov and sbb mov leave mov jne dec pop add outsb cmpsb testl and or into test add shrb arpl xor cmp and adc mov pop movsb dec dec xor popa test jb xor cmpsl imul or aaa pop xchg mov mov hlt add pop fs xor mov sbb inc arpl sbb mov inc inc dec inc sub jp adc mov and or mov sub push push adc add mov ss inc js xor xchg pop ret sub mov lea mov sub mov pop mov push test or cmp xor scas pop add scas inc in ret pop push jns or add and sub add sahf rcl enter add paddsw sbb insb imul adc cmp dec pop push cmc xor (bad) ja jmp ret cmp loopne push pusha sbb push cwtl jle add mov xor scas pop in push mov popa daa inc ficompl xor adc scas insb and add xchg icebp add mov adc jb rclb adc xchg inc jo loopne add xor cmp pop sbbb xor test mov mov adc fdivl or nop push pop js daa push cmp xchg insb ret cwtl or loopne mov out sbb call in mov int pop add imul adc fwait mov add aad iret imul int3 dec add (bad) in ret add add add add add add add add or add add add add add add add add add add addb addb add addb rcr add add add or add or adc adc push push push add sbb and and sub sub push push push add dec add inc add cmp add jl add push push add add add (bad) movb out add add add add cltd add add add add xor add xor add add cltd xor add xor add xor add data16 xor add add cltd data16 int3 data16 jmp add cltd add xor add cltd cltd add int3 cltd add lcall add xor add data16 add cltd int3 add int3 int3 add dec add incw add incl add add add add add xor cltd add add add add add add xor add xor add xor cltd xor add xor add xor add xor xor add xor cltd xor int3 xor jmp add cltd xor xor xor cltd cltd xor int3 cltd xor lcall xor xor xor data16 xor cltd int3 xor int3 int3 xor dec xor xor xor pushw add pushl add pushl add add xor data16 data16 add incl data16 xor xor data16 data16 xor pushl data16 data16 data16 data16 data16 cltd data16 cltd data16 data16 cltd data16 cltd data16 int3 data16 int3 data16 int3 data16 int3 data16 jmp xor data16 jmp incl int3 add add add cltd cltd add add add add add cltd add xor add cwtd add cwtd add cltd add cwtd add xor add cltd add cltd cltd add cltd cltd add int3 cltd add int3 cltd add data16 int3 cltd add int3 cltd add lcall add cltd add lcall add add add add add add add xor add int3 add xor add xor add data16 add data16 add cltd add data16 add cwtd add cltd int3 add cltd int3 add int3 add cltd int3 add cltd int3 add int3 int3 add int3 int3 add int3 add int3 int3 add int3 int3 add dec add dec add cltd add dec add dec add add add incl cltd add add xor add xor add incl cltd xor add xor add xor add incw xor add int3 add incw jmp add cltd incl xor incl cltd cltd incl int3 cltd incl lcall incl xor incl data16 incl cltd int3 incl int3 int3 incl dec incl xor incl dec add (bad) incl jmp add data16 jmp data16 jmp add incl movsl add add pop add ja xchg xchg add lret lret add xlat xlat add fstp add jecxz add ljmp clc clc clc add sti lock addb add add (bad) incl add add add add add (bad) incl (bad) (bad) incl or or or or or or or or ljmp or or or or or or or or or or or ljmp xor or or or or or or mov or or ljmp pop xor lahf inc or or or or or in (bad) mov or ljmp pop xor lahf lahf lahf inc or or or or or mov imul or out out pop pop mov lahf repnz or or or or or (bad) mov imul out out out out pop mov repnz or or or or in mov imul ljmp or repnz out out inc or or or or in (bad) mov imul mov or or in in in out out inc or or or or in mov imul ljmp or or lock in in inc or or or or in (bad) mov imul repnz lahf pop pop or out idiv lock out inc or or or or in (bad) (bad) (bad) decl imul ljmp jae out testl or or or or in (bad) (bad) (bad) decl in imul ljmp mov incl or or or or in (bad) (bad) (bad) decl imul imul pop push push jae loope mov inc pop pop pop pop pop or or in (bad) (bad) (bad) decl div div ljmp mov or or pop out in or or (bad) (bad) (bad) decl div div or jmp loope mov in in in in in pop pop in or or (bad) (bad) (bad) decl div div or (bad) in in in in jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in or or in in in in or div (bad) or in in in in in in in in in in in in in in in out in or or ljmp div or or or or or or or or or out or in (bad) (bad) (bad) (bad) (bad) ljmp pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop in or in in in in in in in ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl in or or or or ljmp in incl add add add add add add pop in or or or or in ljmp incl sti jp xor xor dec dec dec add pop in or or or or or (bad) (bad) (bad) decl in incl ret pop jp xor xor dec dec add pop in or or or or or in in in in in or add pop jp xor xor dec add pop in or or or or or or or or incl ret pop ret pop jp xor xor add pop in or or or or or or or or incl pop ret pop ret pop jp xor xor incl in or or or or or or or or incl jp ret pop ret pop jp xor add pop in or or or or or or or or incl jp pop ret pop ret pop jp xor incl in or or or or or or or or incl jp jp ret pop ret sti jp add pop in or or or or or or or or incl add add add add add add pop in or or or or or or or or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl in or or or or or or or or jmp jmp jmp jmp jmp jmp jmp jmp or (bad) incb inc clc add (bad) jo inc and jg add jg add aas rolb aas rolb aas rolb aas rolb aas rolb aas rolb add add add add add add add add add add add add add add add add add add add add add add add clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) cld add sub add and add inc add add add add addb add add addb rol add add add incl add (bad) incl incl add incl incl (bad) incl add (bad) incl adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc ja ja ja ja ja ja adc adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc sbb (bad) (bad) (bad) (bad) push ja jg jo adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc sbb divl ja ja ja pushl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc sbb divl ja ja ja pushl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl rol rol (bad) ja ja ja pushl or or or or (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) inc ja ja ja pushl cld or or decl (bad) (bad) (bad) (bad) (bad) pushl lock lock (bad) ja ja ja pushl cld or or decl (bad) (bad) (bad) (bad) (bad) pushl lock sar ja ja ja pushl cld or or jg (bad) pushl ja pushl lock ror pop ja ja (bad) jg jo or or or or pushl idivl jo ror iret rol ja jg (bad) jg jo or or or or pushl addb add (bad) (bad) (bad) (bad) (bad) inc (bad) pushl (bad) (bad) js or (bad) (bad) (bad) (bad) decl pushl (bad) testl sar (bad) decl or or or or (bad) (bad) incl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) decl adc sbb (bad) (bad) (bad) (bad) (bad) (bad) incl adc sbb mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb add incb add incb add incb add incb add incb add incb add incb add incb add incb add incb add add add add add add add incb add incb add incb add add add add add add add add add addb add add addb rol add add add incl add (bad) incl incl add incl incl (bad) incl add (bad) incl adc add add add adc ja ja ja adc (bad) (bad) (bad) (bad) pushl sbb push ja jo or or (bad) pushl (bad) (bad) push ja jo or paddb pushl (bad) jo lock jo or or jg jo iret (bad) lock jg or or or jg rol rol jg (bad) (bad) (bad) cld incl add rol sar add sbb (bad) (bad) incl mov add sbb add jmp add jmp add jo add sbb add add ja add pushl add sbb add incl add incl add jo add sbb add loopne ja loopne pushl add add add add add add or std stc stc add (bad) incb sti repz repnz add cmc hlt add in add in jmp mul in mul jecxz imul in imul out stc out in add clc testl mul loope cmc in add jmp add ljmp cli icebp out add out add out in add fs add test (bad) jne add jge add mov aam jne mov gs mov in xchg ficompl scas add in add out add cmc repz hlt repnz cld sti add sti cli add cli stc add je add jbe add jge add je add mov in push xchg pop inc add xchg outsb add xchg jb lcall add jno mov pushf jl cmpsl jae add test in test add mov xchg add mov add mov movsb add test add mov cmc add div add fs add jno add jns add jl add jp add test aam pop add (bad) pop add jl add mov fldl fs test loop addr16 mov xchg jb into xchg fstl jnp ljmp add in jmp add fs add imul lret add jae add js add pop cmp popf fs add mov mov add repz add clc cmc add std cld add sti cli add dec and movsb push sub lcall add arpl add push add jno add mov roll cli loope add (bad) lret add int3 ret out add jmp fldl cld in jecxz cld out call add cmc lock hlt out add div add dec push add popf imul in stos (bad) add mov add mov add mov mov stc fld add fcmovne add fmul add fmulp add (bad) add (bad) add loopne add jecxz add in add in add out add jmp in (bad) in jecxz sti jmp add in in std icebp ljmp bnd (bad) div add cmc lock stc testb clc cmc add lock add add (bad) cmp add aas push add mov add movsl xchg shlb xchg add mov add mov lcall (bad) lods add les add mov xlat add out add call loope cld jmp add ljmp cld out out std repz add div add mov addl fisubrl lea xlat scas xchg add mov add mov mov add shrl out mov in into mov add (bad) ret movsl xchg add fld add scas mov add mov aam sti in loope cld lock std div add hlt out add cli testl repz in sarl shrl add mov test iret mov in add clc repz cmc lock xor js dec add js add inc sbb pusha dec xor push pop inc add sti clc add and add xor push cmp add incl add fdiv repz repnz icebp icebp icebp icebp icebp clc clc clc clc clc div idiv sti sti lock add mov insb insb xchg xchg mov mov xchg xchg xchg mov xchg xchg xchg xchg nop nop nop nop nop (bad) (bad) (bad) (bad) (bad) testb add xchg movsb ret add sahf sahf lahf popf addb cwtl xchg xchg xchg xchg xchg xchg xchg xchg xchg (bad) testb add cmpsb cmpsl cmpsl loopne les mov lahf popf popf addb cwtl xchg xchg xchg xchg xchg xchg xchg (bad) testb add test cmpsb cmpsl xchg movsb ret mov sahf lahf popf popf cmpb cltd cltd cwtl xchg xchg xchg xchg xchg xchg (bad) testb add mov test cmpsb xchg movsb ret mov lahf lahf popf addb cwtl xchg xchg xchg xchg (bad) testb add stos mov iret mov mov mov enter leave leave leave leave leave leave leave leave leave leave leave leave cwtl xchg xchg xchg (bad) testb add test outsb test cmpsb cmpsl xchg les mov lahf popf popf sbbb (bad) testb add mov outsb outsb test cmpsb cmpsl xchg les test popf sbbb testb add outsl pop out mov mov int3 mov lret leave leave leave leave leave leave leave leave leave leave leave pushf fwait cltd cwtl nop testb add stos stos lods lods mov outsb (bad) test cmpsl xchg les test cmpb cltd nop testb add jecxz stos stos outsl pop mov outsb (bad) test cmpsl xchg movsl xchg mov sbbb fisubl stc jecxz rcl mov mov int3 mov lret leave leave leave leave leave leave leave leave popf popf cmpb add add es daa jecxz jecxz outsl pop pop mov (bad) cmpsb cmpsb xchg ret mov adcb add add add add es daa daa jecxz stos stos outsl pop pop (bad) loope insl mov test xchg les shlb add add jo xlat (bad) out rcl aam rcl ror mov mov mov leave leave leave leave leave leave shlb add call es daa stc jecxz stos outsl pop mov (bad) test cmpsl xchg movsl xchg ret test add add add jo es daa daa jecxz stos stos outsl pop (bad) test (bad) cmpsb cmpsl xchg les mov add add add (bad) xlat (bad) out rcl aam rcl ror mov mov mov enter ret xchg testb bound pop jns ja je jae jb mov scas daa daa jecxz stos stos pop pop mov test xchg les testb popa push push push push dec dec dec dec dec gs jp mov jns daa daa daa stc jecxz stos outsl pop mov test cmpsl xchg testb arpl adc or pop adc adc or or push movups out aad aam rcl ror mov int3 mov lret xchg fs and push pop adc adc or or adc es daa stc jecxz stos outsl pop (bad) loope outsb outsb test xchg add dec das add or pop jbe std decb or or jo es daa daa jecxz stos outsl pop mov cmpsb cmpsl xchg mov add jl inc add or jbe mov orl mov xlat (bad) (bad) out rcl daa jecxz leave leave leave leave leave leave leave leave test xchg push inc add fisttpll pop inc mov adc or jnp add jo jo es daa in mov mov outsb test cmpsl mov add sub and jbe push inc sub mov or jl add add jo jo daa daa in lret lret mov mov test mov add dec cmp or js aaa sub inc jb adc or (bad) (bad) xlat xlat (bad) out es mov mov into mov mov test testb push pop sub cmp xor dec cmp inc inc inc cmc mov adc (bad) incl add add jo in (bad) aad mov mov outsb mov add dec pop daa sub jle xor push adc addr16 (bad) incl add add jo xchg aad mov mov stos outsb mov add dec cmp jno imul xor pop cli mov dec jne (bad) (bad) (bad) xlat add fiadd lret leave pop mov add es xor push xor incb dec je (bad) (bad) (bad) incl add add in jo fidivr pop mov cs and sbb cmp and sub pop dec je (bad) (bad) (bad) (bad) (bad) incl add in loop outsb xlat pushf ror stos outsl pop mov testb push aas add inc inc cmp or push push sbb dec dec ja (bad) (bad) (bad) flds add in in in in jecxz outsl out (bad) testb das aas jmp and and sub sbb inc sbb ja (bad) (bad) (bad) (bad) (bad) (bad) incl add add jo jo es jecxz stos outsl (bad) testb xor add add daa daa sub or add push jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add jo out rcl mov add inc (bad) incl add jo jno sub and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add hlt hlt repz icebp clc sti testb xor (bad) incl add es add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add out aad aam xchg lock add inc inc inc inc aas aas ds pop cmp push push xor push push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add jmp mov add xor xor das push cs push dec dec push dec sub arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp icebp add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov in in fstp fucomp ljmp (bad) fcmovnu fucomi call add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add rolb add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add addb add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add pop add addb add sldt inc add add add inc add add add inc add add add rolb add add inc add add add (bad) (bad) (bad) (bad) (bad) incl add add add add add add add or std stc stc add cli cli add icebp lock ljmp cld cmc hlt add hlt repz in jmp cld div add cmc hlt add call out cld div add out add in jmp add lock add clc testl imul out stc out in add out jmp int pop add subl rorb jle loope xchg add iret rolb mov sti add sti cli add cli stc add addr16 insb dec add jl add je add mov call jp add xchg jno jmp jno in xchg jae roll push add lea lods jns add mov xchg add test add mov add mov movsl add mov lods add les add int3 mov add lret ret popa cmp cltd push cmp ret add jne add js add jp add jge add sbbl mov in imul jle add mov mov in mov in mov rcrl xchg add stos popl jmp xchg add mov add mov add mov mov add jne add je add imul inc add popf jg aad jle fcomps addl mov les std out call add clc cmc add std cld add dec es xchg jb into xchg jbe rcrl jl sti out add jmp jecxz (bad) cmc lock hlt out add div add dec sbb cwtl dec sbb pushf dec pop add and movsb push daa add pop sub stos pop das add dec sub scas popa xor repz data16 lahf imul mov jnp enter (bad) nop jo lret add xchg je stc fmul add (bad) add lds add loop add fnop add jecxz add in add in add call fild (bad) out in cld jmp add in in cld out out cld lock add icebp ljmp repz add div add cmc lock stc testb xor add add xorl or mov or xchg or mov add dec pop add push and jmp mov add lods mov in xchg add movsl xchg shlb xchg add test cwtl add mov add mov mov add mov mov add out add out add xlat lret add jecxz add ljmp sti in loop cld out in sti in in std div add sti stc add mov test shrb lea (bad) lods popl xlat scas xchg add mov add mov add mov add mov test loopne mov add shlb jecxz test out lods add leave mov out mov in iret mov add sarb add cmpsl cwtl add mov stos add mov add mov icebp add hlt out add cli testl repz shrl add mov add mov add mov scas add mov lock xor bound add aaa add cmp add clc repz jmp std add cld sti add (bad) jnp push cmp add mov incl add (bad) hlt repz lock lock add add add xchg arpl scas scas lods lods stos stos stos test addl fstl outsl outsl xchg xchg outsb mov lea xor add add xchg ret xchg ret jo rol outsl xchg xchg mov lea add add add add xchg xchg xchg xchg xchg xchg xchg xchg jo xchg xchg mov (bad) lea add add add ficomp cwtl fs ret jo mov scas scas mov lock add add add pushf pushf pushf cltd cltd cltd lcall jo mov (bad) lea add add jmp rcl iret into int int3 mov lret enter xchg popl add add jmp jecxz sahf sahf jb pushf cltd lcall xchg mov add add add call aad rcl iret into into int mov lret enter test add add add add data16 (bad) sahf gs cltd cwtl xchg xchg sarl add add add in xlat fcom mov iret into into int mov lret jo stos lock cmpb jp ja jne cmpsb movsl mov data16 sahf pushf cltd cwtl xchg xchg jo lock pop push dec xor dec dec pusha pop insb imul iret iret into int mov cwtl fs lods lock pop push or adc adc or test data16 cltd fs add pop push or pop adc adc or ror iret into int pushf lcall xor push jg adc push cld std (bad) add and in data16 lcall and push jg out jg fwait movups addr16 mov (bad) jno cltd mov add inc add and jg or insl cmpsl clc addr16 sarb jb mov add inc aaa and dec dec push jg sub pop test clc out mov mov (bad) popf sahf gs add inc cmp sbb sub jg adc out (bad) mov mov jae jb lock inc cmp xor xor cmp dec js clc out mov mov add cmp xor xor sub cmp dec jns clc out addr16 hlt hlt xrelease dec push sbb sbb and jp clc out in jmp push lock add cmp (bad) clc clc addr16 and adc clc clc out out call lock add sub (bad) (bad) (bad) clc addr16 add adc clc clc clc addr16 call add add add sbb cmp aaa ss jle clc clc addr16 jmp xchg repz add add sub sub dec inc es inc inc inc inc inc pop pop cmp clc clc addr16 in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc (bad) clc clc addr16 in in in in loop in in out out (bad) loopne loope ljmp add add (bad) (bad) (bad) cld add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add jo add aas cld add jg add (bad) (bad) (bad) (bad) ljmp add add add add add add add add js mov push add test hlt mov movsl add jecxz add xor add stos nop add lods xchg add mov mov repz add loop add jecxz add gs add pop cmp pushf push aaa add add dec add jge add andl stos jno add xchg je loope jl loop jg out xchg out mov fldcw hlt add popa cmp add div add jns add jle add sbbl mov (bad) mov sti out add ljmp cld out out std lock add hlt out add div add hlt lock ss jo add jne add mov jnp out jg out addb mov add fcmovb add fcmovne add fcmovne add mov add (bad) add fmulp add fmulp add loopne add loop add loope add loop add in add in add in add out add in add call loop sti jmp add in in std lock add lock add xor add add xchg cmp add mov add mov inc add add dec pop add dec or mov or mov sub call stos test out test in mov in mov in mov jecxz popl loop xchg add mov add mov add mov movsb add mov movsl add mov rolb cli in add out add jmp fild cld in loope sti in loop std icebp jmp add add scas nop add mov mov add mov xchg add stos pushf add mov add ret xlat (bad) mov (bad) (bad) mov aam scas add mov mov add hlt in add clc repz clc hlt add mov lret (bad) incl add add addl add jo insb push imul push dec dec dec inc inc inc addl push addl inc inc addl xor push xor dec inc imul arpl pop pop addl cwtl cwtl cwtl cwtl cwtl cwtl cwtl cwtl pop xor cmpl adc xorl inc subl or push jl subl or cwtl popa sub sub prefetcht1 jle andl sbb sbb addl pop push push adc xchg xchg mov cwtl cwtl cwtl cwtl cwtl cwtl cwtl es and and sub xchg mov add js mov add loopne add loopne jmp shl add int add add mov add add add add popf add jecxz add sahf jb add xchg add xchg mov sub add xor add pusha add add add add fcompp dec jecxz fmuls (bad) dec loope aad loopne rcll fcom push fst rcrb aad pop fcmovnbe int fcmovbe int3 (bad) (bad) lret ror xlat iret (bad) push int insl aad lds lret ret jb lret ror (bad) ja enter (bad) mov jle lds int mov xchg (bad) mov lret (bad) mov lret (bad) leave mov mov enter (bad) mov mov (bad) mov scas cwtl lds scas cltd mov jl call jp decl js decl arpl mov mov incl outsl pop incl pop incl imul jl push (bad) jp dec (bad) js dec pushl dec pushl dec pushl pushl inc pushl inc ljmp inc ljmp aas ljmp ljmp cmp imul jmp aaa jmp xor jmp xor bound jmp xor lds add mov out in (bad) ret (bad) (bad) sar lret loope mov jmp (bad) mov jmp les jmp shrb out cmpsl jmp mov lahf (bad) call mov (bad) ljmp (bad) ljmp (bad) in scas xchg in lods test in stos cmp out test push movsl ja lock jne icebp mov outsl push mov push repz push push fwait jmp xor (bad) mov add mov lock (bad) cld out out cld out in cld in in cld in jecxz cld jmp (bad) cld ljmp sti jmp fdivr sti call (bad) sti in (bad) sti in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) cli loope (bad) cli loopne (bad) stc loopne (bad) stc fmulp (bad) stc fmulp (bad) stc (bad) (bad) stc fmul (bad) stc fcmovne (bad) stc fcmovne (bad) stc fcmove (bad) stc fcmovb (bad) stc fcmovb (bad) stc fld (bad) clc fld (bad) clc fadd (bad) clc fadd push fwait jmpw xor (bad) mov add mov icebp ljmp lock (bad) cld out out cld out in cld in jecxz cld in loop cld jmp (bad) cld ljmp sti jmp fdivr sti out (bad) sti out (bad) cli in (bad) cli in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) stc loope (bad) stc loopne (bad) cli (bad) (bad) cli fmulp (bad) stc fmulp (bad) stc (bad) (bad) stc fmul (bad) stc fcmovne (bad) stc fcmovne (bad) stc fcmove (bad) stc fcmovb (bad) stc fld (bad) stc fld (bad) clc fadd push pushf push inc mov add mov repnz (bad) cld repnz (bad) std icebp jmp std lock (bad) std out out cld out out cld in in cld in jecxz cld in jecxz sti jmp (bad) sti ljmp sti call fdivr sti out (bad) sti out (bad) cli in (bad) cli in (bad) cli in (bad) cli jecxz (bad) stc loope (bad) stc loope (bad) stc loopne (bad) stc (bad) (bad) stc fmulp (bad) stc (bad) (bad) stc fmul (bad) stc fcmovne (bad) stc fcmovne (bad) stc fcmovne (bad) stc fcmovb (bad) stc fld (bad) stc fld push popf push dec mov add mov hlt out (bad) std repz (bad) std repz (bad) std bnd std icebp ljmp lock (bad) std out in cld in in cld in jecxz cld in loop sti jmp (bad) cld ljmp sti call fdivr sti out (bad) cli in (bad) cli in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) cli loope (bad) stc loopne (bad) cli (bad) (bad) stc (bad) (bad) stc fmulp (bad) stc fmul (bad) stc fmul (bad) stc fcmovne (bad) stc fcmovne (bad) stc fcmove (bad) stc fcmovb push sahf push pusha dec xor enter mov cmc lock std hlt out (bad) std hlt out (bad) fistpll (bad) fdivl xchg (bad) fdivs nop call stos mov shrl mov shlb test into mov cmp into mov cmp into mov cmp into mov cmp into mov cmp into mov lret fcmovne (bad) stc fcmovne (bad) stc fcmove push sahf insb jmp xor leave mov add mov div (bad) std div (bad) std cmc lock std hlt out (bad) std hlt out (bad) std repz (bad) std repnz (bad) std bnd std icebp ljmp lock (bad) cld out in cld in in cld in jecxz sti in loope sti ljmp sti jmp fdivr sti out (bad) sti out (bad) cli in (bad) sti in (bad) cli jecxz (bad) cli jecxz (bad) stc loope (bad) stc loopne (bad) cli (bad) (bad) stc fmulp (bad) stc (bad) (bad) stc fmul (bad) stc fcmovne (bad) stc fcmovne push lahf insl jmp xor lret lea add add div (bad) (bad) div (bad) std div (bad) std div (bad) std cmc lock std hlt out (bad) std hlt out (bad) std repz (bad) std repnz (bad) std bnd std icebp jmp (bad) cld out out cld out out cld out in cld in jecxz cld in loop sti jmp (bad) sti ljmp sti call (bad) sti out (bad) sti out (bad) cli in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) stc loopne (bad) cli (bad) (bad) stc fmulp (bad) stc (bad) (bad) stc (bad) (bad) stc fmul push mov xor lret (bad) mov mov clc cmc (bad) (bad) clc hlt (bad) (bad) clc repz les jmp mov mov (bad) fdivl cwtl (bad) fdivs xchg call lods mov shrl mov shlb test into mov cmp into mov cmp into mov cmp into mov cmp into mov sar stc (bad) (bad) stc fmulp (bad) stc (bad) push mov xor int3 sarl mov stc idiv (bad) stc idiv std clc cmc (bad) std clc hlt (bad) std div (bad) std div (bad) std div (bad) std cmc icebp (bad) std cmc lock std hlt out (bad) std repz (bad) std repz (bad) std bnd std icebp jmp cld icebp jmp (bad) cld out out cld out in cld in in cld in jecxz cld jmp (bad) sti ljmp sti jmp (bad) sti out (bad) sti in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) cli loope (bad) cli fnop (bad) stc (bad) (bad) stc (bad) (bad) out mov xor int mov add cli clc (bad) (bad) cli idiv (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) (bad) div (bad) (bad) div (bad) (bad) cmc lock std cmc out (bad) std hlt out (bad) std repz (bad) std repz (bad) std bnd cld icebp ljmp out out cld out out cld in in cld in jecxz cld in loop cld jmp (bad) sti ljmp sti call (bad) sti out (bad) cli in (bad) cli in (bad) cli loop (bad) cli loope (bad) stc loopne (bad) stc (bad) (bad) out movsb jbe pusha dec xor into ret mov add sti stc (bad) (bad) sti clc (bad) (bad) cli clc (bad) in int (bad) jmp enter lds jmp shlb fidivr fwait (bad) (bad) call scas xchg call lods (bad) call stos mov shrl xchg shlb (bad) dec mov cmp into mov cmp into mov cmp cli jecxz (bad) cli jecxz (bad) cli loope (bad) cli loopne (bad) out movsl js pusha dec xor into les add cld cli (bad) (bad) sti cli (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) (bad) div (bad) (bad) div (bad) (bad) div (bad) std cmc out (bad) std hlt out (bad) std repz (bad) std repz (bad) std icebp jmp cld icebp ljmp out out cld out out cld in in cld in loop cld jmp (bad) cld ljmp sti jmp (bad) sti out (bad) sti in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) out cmpsb jnp pusha dec xor iret lds shrb (bad) cld cli (bad) (bad) cld cli (bad) (bad) sti cli (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) std div (bad) std div (bad) std cmc lock (bad) hlt out (bad) std hlt out (bad) std repz (bad) std repnz (bad) std bnd cld icebp jmp (bad) cld out out cld out in cld in jecxz cld in loop cld jmp (bad) sti ljmp sti call (bad) sti in (bad) cli in (bad) cli jecxz (bad) in test jmp xor rol mov add lods sahf (bad) (bad) std cld (bad) (bad) std sti (bad) (bad) cld sti push aad (bad) out sarl (bad) in into mov (bad) call (bad) scas jmp les jmp mov mov (bad) fdivl xchg (bad) fdivs nop call stos (bad) call test mov shll dec mov cmp into mov cmp sti call (bad) sti in (bad) cli in (bad) in test xor ror mov add scas lahf (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti cli (bad) (bad) sti stc (bad) (bad) sti clc (bad) (bad) cli clc (bad) (bad) stc idiv (bad) stc idiv (bad) stc cmc (bad) (bad) clc hlt (bad) std div (bad) std div (bad) std div (bad) (bad) cmc lock std cmc out (bad) std hlt out (bad) std repz (bad) std repnz (bad) std icebp ljmp out out cld out out cld in in cld in loop cld in loope sti ljmp sti out (bad) sti out (bad) cli out (bad) in stos cmp ror (bad) jbe add add scas lahf (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) std sti (bad) (bad) cld sti (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti stc (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) std div (bad) (bad) div (bad) std cmc icebp (bad) std cmc lock std hlt out (bad) std repz (bad) std repz (bad) std icebp jmp cld icebp jmp (bad) cld out out cld out in cld in jecxz cld jmp (bad) sti ljmp sti out (bad) sti out (bad) ljmp call lret ret jae add add scas mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) std push fld push fadd push xlat ret aad (bad) out sarl (bad) in iret mov (bad) call (bad) scas jmp les jmp mov mov (bad) (bad) xchg (bad) fdivs nop call stos (bad) call test call cmpsb mov shll cmp mov cmp cld jmp (bad) cld ljmp sti call xchg pusha dec xor aad les add add aas pushl cmp scas pusha aaa ljmp pop xor movsb pop sub lahf push sub lahf push sub lcall decl inc adc decl cmp incl xor add ja add (bad) sti stc (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) stc idiv (bad) clc hlt (bad) (bad) div (bad) (bad) div (bad) (bad) div (bad) std cmc icebp (bad) std cmc out (bad) std hlt out (bad) std repz (bad) std bnd cld icebp ljmp out out cld out in cld in jecxz cld jmp (bad) sti ljmp jmp dec xor (bad) int insl add add mov mov loop arpl loop arpl fldl pop call sbbb sbbb jge dec jp dec jbe dec jae inc outsb dec inc insl inc (bad) mov push cmp mov cmp scas pusha aaa ljmp xor cli (bad) (bad) sti cli (bad) (bad) sti stc (bad) (bad) sti clc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) (bad) div (bad) (bad) cmc icebp (bad) (bad) cmc out (bad) std hlt out (bad) std repz (bad) std bnd cld icebp ljmp out out cld in in cld in jecxz cld in loop sti jmp (bad) call dec xor xlat iret (bad) push add add mov cli repnz cli repnz cli repnz stc out in (bad) stc out in (bad) clc out ljmp in jmp push jmp out imul in imul in cmc out push out push out push out pushl add out sarb jmp mov jmp enter lds loop movsl jmp mov lahf (bad) fdivl cwtl (bad) fnstenv xchg call lods mov aam mov shll xchg shlb (bad) cld out out cld in jecxz cld in loop out mov pusha dec xor fcom leave add add mov mov cli hlt repnz cli repnz cli repnz cli repnz stc out in (bad) stc out in (bad) clc out ljmp in jmp push ljmp imul in imul in cmc out push out push out (bad) mov xor cld (bad) (bad) std sti (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti cli (bad) (bad) sti stc (bad) (bad) sti clc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) div (bad) std div (bad) std div (bad) std cmc lock std hlt out (bad) std repz (bad) std repnz (bad) std icebp ljmp out out cld out in cld in in out nop jmp xor (bad) lret add add outsb dec jmp xchg outsb (bad) cld cmc hlt (bad) cli hlt repnz push xor mov (bad) clc lock (bad) stc out in (bad) clc out ljmp inc and push cmp push jmp in imul in imul in cmc out (bad) mov cmp (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) std sti (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti stc (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) (bad) div (bad) std cmc lock (bad) hlt out (bad) std repz (bad) std repnz (bad) std icebp ljmp out out cld out in out xchg jmp xor fcmovbe int3 popa add add shrl out outsb (bad) cld div (bad) cld cmc hlt jmp pop ljmp dec es stc out in (bad) stc out in decl pop xor popl push and loop leave push jmp in imul in cmc out (bad) mov cmp push fadd push (bad) ret aam (bad) out sarb (bad) in int (bad) ljmp (bad) (bad) sti stc (bad) (bad) cli clc dec mov cmp into mov cmp into mov cmp std bnd std icebp ljmp out out in xchg jmp xor (bad) into pop add add (bad) jae (bad) jmp div (bad) cld cmc hlt ljmp xchg jnp fnstenv ljmp mov out lcall arpl decl mov imul out imul out imul in imul in mov inc adc (bad) (bad) (bad) std (bad) (bad) std std (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti cli (bad) (bad) sti stc push lret jmp lods (bad) ljmp (bad) ljmp jmp mov jmp mov dec mov in (bad) std repnz (bad) cld icebp ljmp mov jmp xor fst iret pop add add lret (bad) jmp clc idiv cld div ljmp pushf cmp jbe (bad) fnstenv decl (bad) lcall jae (bad) mov push and outsb cmp (bad) ljmp push jmp in les decl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) cld cli push lret repz (bad) fsubrs (bad) (bad) call mov (bad) fbstp popf dec mov out (bad) std hlt in (bad) std repnz (bad) std icebp ljmp dec xor (bad) rcll add add jp jmp sahf jg std stc clc (bad) std clc idiv mov data16 frstor (bad) fisttpl cmp (bad) push das jmp pop dec push cmp popl pushf mov clc ljmp imul out shrl popl repz push fld push fld push fadd push (bad) ret aad (bad) out sarl (bad) (bad) std sti (bad) (bad) cld sti push lret jecxz xchg jmp mov jmp mov jmp mov jmp mov (bad) fidiv popf dec mov lock std hlt out (bad) std repz (bad) cld repnz jmp mov xor (bad) rcll add sarl jmp sahf jg (bad) cli stc (bad) std stc clc (bad) mov stos xchg lcall test loopne push ljmp mov ret dec push xor outsb cmp (bad) ljmp push ljmp lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) std std (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std sti push lret stc jmp push sarl push fcmove jmp mov (bad) fsubrl mov (bad) (bad) div (bad) (bad) cmc lock std hlt out (bad) std repz jmp mov xor loope aad add add xlat sbbb movsl mov (bad) sti cli (bad) std cli stc inc subl mov lcall arpl sahf jg loop arpl fnstenv (bad) fnstenv decl pop inc (bad) fnstenv lcall mov clc in jmp dec jbe lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std std (bad) (bad) std std (bad) (bad) std cld push lret jecxz mov in into mov jmp mov xchg (bad) fisubrl movsb dec mov repz std div (bad) std cmc lock std hlt out jmp mov xor loop xlat dec add add aad pop (bad) jmp cld sti (bad) std sti cli dec nop je ljmp (bad) out call push jmp sahf jg fldl inc decl mov fnstenv (bad) fnstenv ljmp and ljmp dec jp lcall fld push fld push fld push fld push fld push fld push fadd push xlat ret (bad) (bad) (bad) std (bad) (bad) std std push lret hlt jecxz (bad) in fmul (bad) sti cmc lock fistpll (bad) fldcw (bad) dec mov hlt (bad) (bad) div (bad) (bad) div (bad) std cmc lock mov xor jecxz fmuls add add test out xchg (bad) (bad) std cld (bad) (bad) cld sti call mov icebp mov dec push in jmp inc jl jmp sahf jg fldl dec (bad) cli xacquire push jmp jbe clc out ljmp push sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std push lret std stc idiv (bad) std std (bad) jmp leave push loopne push jecxz (bad) in lret jmp lods dec mov cmc (bad) (bad) clc hlt (bad) (bad) div (bad) (bad) div jmp mov xor in fiaddl add add mov in mov (bad) (bad) std cld jmp ror (bad) ficompl dec nop je mov data16 clc lock (bad) fistpll jmp xchg outsb jmp repnz out jmp push pushl cmp repz jmp jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std push lret (bad) (bad) (bad) (bad) sti hlt out push jecxz (bad) cld repz push xlat ret push loopne (bad) in lret into mov idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div jmp mov xor in fildl add loopne push (bad) (bad) (bad) std call xchg jbe icebp mov stos (bad) ljmp jmp idiv mov movsl mov stos je (bad) cld cmc hlt dec jnp call mov aad jbe iret test shrl xlat sbbb pop xor repz push fld push fld push fld push fld push fld push fld push fld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push lret repz repz repz repz repz repz repz into mov idiv (bad) stc idiv (bad) stc cmc (bad) (bad) clc repz mov xor out fldl add add mov lock (bad) (bad) (bad) (bad) (bad) ficompl (bad) ficompl call mov rorb stc (bad) fistpll dec jnp (bad) sti div inc jae inc jae inc jae inc jae (bad) mov test scas pusha aaa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) cli idiv (bad) stc idiv (bad) clc cmc jmp mov xor call add add xchg outsb push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) sti cli (bad) (bad) sti cli (bad) std cli stc (bad) std stc clc (bad) std clc idiv cld div (bad) sti div (bad) cli hlt repnz cli hlt repnz cli repnz cli repnz fldl aaa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std cld (bad) in sarb (bad) jmp lret mov out mov jecxz lods jmp shrl pusha dec xor jmp add add xchg outsb push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std cld (bad) (bad) cld sti (bad) std sti cli (bad) std cli stc (bad) std stc clc (bad) std clc idiv std clc idiv cld div (bad) cld cmc hlt (bad) cld cmc hlt (bad) cli hlt repnz cli bnd mov mov cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) mov xchg subl xchg (bad) jle push pushl dec ljmp jmp jmp xor ljmp add xchg je icebp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) cld sti (bad) (bad) cld sti (bad) std sti cli (bad) std cli stc (bad) std stc clc (bad) std clc idiv std clc idiv cld div (bad) sti div (bad) cld cmc hlt (bad) cli hlt bnd mov mov aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov sarb (bad) jmp lret out mov in scas jmp shrb (bad) lret out xor add add xchg je icebp mov stos push mov push mov push mov (bad) in mov (bad) in mov jmp stos xchg (bad) jmp movsl mov out jg out jg jmp xchg je out outsb jmp xchg outsb jmp mov loopne push pushl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov out in (bad) in jecxz cli call sar icebp fxch (bad) out aam ljmp cmp fcmovnbe int in jmp add add add jmp xchg je out outsb jmp xchg outsb jmp xchg outsb jmp mov loopne push (bad) fldl pop call sbbb jge dec jp dec jbe inc jae inc outsb dec inc outsb dec inc outsb dec (bad) mov imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov out in (bad) out in cld jmp aad repnz pushl inc (bad) fst iret pop out jmp sub sarb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov out in (bad) out in std jmp (bad) clc in (bad) jnp dec (bad) fnop rclb in jmp add mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov out in (bad) out in std in loope xchg jmp fcmovnbe push icebp out jmp sarb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov out in (bad) out in (bad) js jmp fstp dec repnz and add add mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov out in xchg subl repz out pop sarl mov sarb mov iret mov scas dec mov lods dec mov lods dec mov stos dec mov dec mov dec mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc scas mov inc scas lahf (bad) mov lods sahf (bad) mov xchg loop aas cmc repz sbb add add (bad) (bad) (bad) (bad) incl add loopne add add add rolb add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add addb add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add rolb add add inc add add add inc add add add inc add add add inc add add add (bad) (bad) (bad) (bad) incl add add add add add add add and mov jl (bad) js dec ljmp cmp dec aaa jmp xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor pusha dec xor mov ljmp ffree mov fidivr mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp scas mov jmp lods (bad) (bad) jmp jg in cmpsl jnp out movsl ja out mov outsl push mov push push fwait arpl pusha dec xor mov jmp (bad) cld jmp (bad) cld jmp (bad) cld jmp (bad) sti ljmp sti jmp (bad) cli call fdivr cli out (bad) cli out (bad) cli in (bad) cli in (bad) cli jecxz (bad) cli loop (bad) stc loopne (bad) stc loopne (bad) stc fmulp (bad) stc (bad) (bad) stc fmul (bad) stc fcmovne push pushf jmp xor mov out in sti in in cld in in sti in in sti in jecxz cld jmp (bad) sti jmp (bad) sti jmp (bad) sti ljmp sti jmp fdivr cli out (bad) cli out (bad) cli in (bad) cli in (bad) stc loop (bad) cli loope (bad) cli loopne (bad) stc (bad) (bad) stc fmulp (bad) stc fmul push popf jmp xor mov out out cld out out sti out out cld out out cld out out cld in in cld in in cld in in cld in jecxz cld jmp (bad) cld ljmp sti ljmp sti out (bad) cli out (bad) cli in (bad) cli in (bad) cli loop (bad) stc loope (bad) cli loopne (bad) cli (bad) push sahf push pusha dec xor mov icebp ljmp icebp ljmp lock (bad) std out call (bad) cld out out cld out in cld in in cld in jecxz cld in loope shrl mov shll xchg shlb (bad) cli jecxz (bad) cli loope (bad) cli loopne push mov xor mov repz (bad) std repz (bad) std repz (bad) std repnz (bad) std repz std bnd cld repnz icebp jmp (bad) cld out out cld out out cld in in cld in jecxz cld jmp (bad) sti ljmp sti call fcos cli in (bad) cli jecxz (bad) cli loop push mov xor mov cmc out (bad) std hlt out jmp shrl loope mov (bad) fidivr pushf (bad) (bad) xchg (bad) fnstenv xchg call scas xchg call lods (bad) call stos (bad) call test mov shlb xchg sti out (bad) cli in (bad) cli jecxz (bad) out mov xor mov div (bad) std div (bad) std div (bad) std div (bad) std div (bad) (bad) cmc lock std cmc lock std cmc lock std hlt out (bad) std repz (bad) std repz (bad) std repnz (bad) cld icebp ljmp out out cld out in cld in in cld jmp (bad) cld ljmp sti out (bad) cli in (bad) in movsl ja pusha dec xor shrb std div jmp lds jmp shrl loope mov (bad) fidivr pushf (bad) fdivl cwtl (bad) fnstenv xchg call scas xchg call lods (bad) call stos (bad) call stos mov shrl loopne sti jmp (bad) in cmpsl jnp pusha dec xor shrl (bad) (bad) stc cmc (bad) (bad) stc cmc (bad) (bad) clc cmc (bad) (bad) clc cmc (bad) (bad) clc cmc (bad) (bad) clc cmc (bad) std div (bad) (bad) div (bad) (bad) div (bad) std div (bad) std div (bad) std cmc lock std hlt out (bad) std repz (bad) cld bnd cld icebp jmp (bad) cld out in sti in loop sti ljmp jmp jg pusha dec xor ret (bad) (bad) cli idiv (bad) cli idiv call (bad) scas jmp lds jmp ret loop cmpsb jmp mov mov (bad) fnstsw lcall mov (bad) fdivs xchg call lods (bad) call stos mov cld out in cld in jecxz sti ljmp pusha dec xor scas pusha aaa ljmp pop xor movsb pop sub movsb pop sub lahf push sub lcall decl inc adc decl cmp incl xor add (bad) stc idiv (bad) clc cmc (bad) (bad) clc hlt (bad) (bad) div (bad) std div (bad) std cmc lock std hlt in (bad) std bnd cld icebp jmp (bad) cld in in cld in loop call dec xor mov stos xchg jmp stos xchg jmp stos xchg jmp stos xchg (bad) jmp movsb mov frstor (bad) fcoms jnp leave nop je leave nop je leave nop je leave nop je (bad) xor movsb jmp mov lahf (bad) fnstsw fwait (bad) (bad) (bad) fdivs xchg (bad) cld icebp jmp (bad) cld in in out mov pusha dec xor mov mov (bad) cld div (bad) cli hlt repnz cli repnz cli repnz clc lock (bad) stc out in (bad) clc out ljmp ljmp imul in imul in leave nop je (bad) xor stc (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) stc idiv (bad) clc cmc (bad) std div (bad) std div (bad) std hlt out (bad) std repz (bad) std bnd std lock jmp mov jmp xor shrl in mov (bad) cld div (bad) cld cmc hlt (bad) cld cmc hlt (bad) cli repnz cli repnz clc lock (bad) stc out in (bad) clc out ljmp ljmp imul in leave nop je mov pop jmp ret loop cmpsl jmp mov mov (bad) fnstsw fwait (bad) (bad) (bad) std repz (bad) cld icebp ljmp mov jmp xor shrl lock (bad) std clc idiv test dec es mov lock cli repnz cmp (bad) clc in jmp push jmp je mov pop (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) cld cli (bad) (bad) sti stc (bad) (bad) cli clc (bad) (bad) stc idiv (bad) clc hlt (bad) std div (bad) std div (bad) std hlt out (bad) std repnz (bad) std icebp ljmp dec xor (bad) jae push mov (bad) std cli stc inc jl (bad) fnstenv decl call out dec push call adc (bad) clc in jmp (bad) fcoms adc (bad) (bad) std cld dec mov cmp into mov cmp into mov lock std hlt out (bad) std repnz jmp mov jmp xor into jp push mov stc inc subl xchg je fnstenv decl ror call sbbb jbe decl mov clc out ljmp xchg jnp popl (bad) (bad) std (bad) (bad) std cld push lret out mov jmp mov xchg jmp mov dec mov icebp (bad) std hlt out (bad) std repz jmp mov xor sarl push mov cli call mov mov data16 ficompl decl outsb dec inc subl bound call adc (bad) clc out ljmp inc adc (bad) (bad) (bad) std push lret fldcw xchg jmp mov xchg jmp mov dec mov repnz std div (bad) std repz jmp mov xor aad pop push mov sti (bad) fcoms data16 ljmp (bad) fnstenv decl stos xchg dec jae decl mov stc out in (bad) ficompl (bad) (bad) (bad) (bad) (bad) (bad) (bad) std push lret jmp ret test out mov jmp mov cmp std div (bad) std cmc out (bad) fistpll xor fisttpl mov (bad) (bad) std (bad) frstor push out (bad) frstor decl ror (bad) fistpll call adc (bad) frstor (bad) (bad) (bad) (bad) (bad) (bad) (bad) std push lret hlt jecxz (bad) in fmul (bad) sti cmc lock ret jecxz cmpsl jmp mov movsl (bad) fidivr movsl (bad) fistpll incl add add add add mov hlt enter xchg jnp out xchg jmp stos xchg pushl (bad) (bad) dec test (bad) push das jmp ror jmp stos xchg inc subl bound (bad) ficompl lcall (bad) (bad) (bad) (bad) (bad) std push lret std stc idiv (bad) std std (bad) jmp leave (bad) mov jbe decl imul arpl jb inc ljmp cmp pusha dec xor loopne push (bad) fcoms jno rorb push (bad) fistpll lcall clc idiv lret dec jnp dec jnp inc outsb dec (bad) jmp pop sub (bad) (bad) (bad) (bad) (bad) (bad) std push lret (bad) (bad) (bad) (bad) sti hlt out push jecxz (bad) mov sarb jmp lret in scas jmp mov xor out loopne out outsb push enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) sti cli (bad) std stc clc (bad) std clc idiv cld div (bad) cld cmc hlt (bad) cli hlt bnd stos xchg jmp (bad) (bad) (bad) (bad) (bad) push lret repz repz repz shrl (bad) sti call sar out aam jmp xor out loopne lock jmp jmp enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) std cld (bad) (bad) cld sti (bad) (bad) cli stc (bad) std cli stc (bad) std clc idiv cld div (bad) cld cmc hlt jmp stos xchg ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) std cld (bad) (bad) std sti inc mov (bad) (bad) out in sti call sar gs ss in sub out jmp jmp enter enter enter enter enter enter mov stos push mov mov (bad) in mov (bad) in mov jmp stos xchg ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) std std (bad) (bad) std cld (bad) (bad) std sti inc mov (bad) (bad) out in sti call ds in sub out jmp jmp xchg je jmp xchg outsb jmp xchg outsb jmp mov fisttpl pop call sbbb jge dec jbe inc jae inc outsb dec inc outsb dec (bad) mov pusha aaa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) std std (bad) (bad) std cld inc mov (bad) (bad) out in subl out loopne lock jmp sarl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std std (bad) (bad) std cld dec mov lcall loopne lock jmp sarl mov sarl mov sarb scas dec mov scas dec mov lods dec mov stos dec mov test dec mov dec mov dec mov jmp in sub out in sbb add add (bad) (bad) (bad) cld add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add paddb add cld add aas (bad) (bad) (bad) ljmp add add add add add add add add xor jmp xor jmp xor jmp xor jmp xor jmp xor jmp xor add loop (bad) fistpll cltd jmp mov jmp mov jmp scas mov in mov out test out jg call mov xor add out (bad) sti out (bad) sti out (bad) cli in (bad) sti in (bad) sti loop (bad) stc loopne (bad) clc (bad) (bad) stc fcmovne (bad) clc fcmovb (bad) jmp dec xor add in loop cld in loop (bad) scas nop call scas nop call scas nop call scas nop call scas nop call scas nop (bad) clc fmulp (bad) clc fcmovne jmp cmpsl cmp dec xor add lock (bad) std lock (bad) cld in in sti jmp (bad) sti call xlat (bad) cli loop (bad) stc fmulp jmp lods test arpl pushl dec or mov or mov or fwait inc add lcall cmp incl xor call scas nop call scas nop (bad) sti in (bad) cli loope jmp scas mov arpl (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl add cld out call (bad) sti call (bad) jmp mov jmp xor (bad) (bad) (bad) (bad) decl pusha aaa (bad) cli xacquire gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl scas nop call scas nop (bad) sti ljmp loop xchg jmp xor (bad) (bad) (bad) (bad) jmp cmp hlt enter xor add sarb (bad) decl hlt out call scas nop (bad) cld in in sti jmp cltd jmp xor (bad) (bad) (bad) (bad) pushl imul (bad) xor xor insb cmp (bad) lcall div call scas nop (bad) cld out out sti ljmp arpl call xchg jbe (bad) (bad) (bad) call xchg jbe mov mov and frstor jmp ror lcall clc repz scas nop (bad) cld lock (bad) fnstsw xor push loop (bad) ficompl push loop (bad) mov loop jmp mov mov or (bad) scas nop call scas nop (bad) std icebp jmp (bad) fnstsw ss jmp mov cmp sbbb (bad) dec sbbb loop jmp mov mov or std clc hlt (bad) std cmc out pushl dec jmp jmp jmp stos xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl div (bad) std hlt out (bad) mov lds push out jmp out xchg jmp stos xchg (bad) jmp sahf jg fcoms callw jge dec jbe inc insl inc pushl div (bad) std hlt in inc stos pushf jmp push out jmp fadd mov xlat (bad) mov (bad) (bad) mov aam scas call mov stos dec mov test lret mov dec mov push out in sbb add add add add add add add add add add add add add incl add incl add incl add incl add jmp add add add and add add call add adc add add sub add add xor add add or test add add and add add or test add add add add add add push add xor add add add add and add add add add adc add add add add or add add add and add add or test add add sub push push call int3 pop mov inc sub sub add cmpb jne movb mov push push push push call add mov pop pop ret push mov push push push push mov mov shr mov mov test je xor add add dec jmp pop pop pop pop leave ret sbb push loopne imul adc xchg mov mov xor sub xor push mov mov or shl not xor add xor sub xor xor xor mov mov mov push mov add add xchg pop pop add sahf cli add xor or cmpsl mov mov fidivl aam flds jnp popf adc add push xchg inc xchg or (bad) ja rclb jp pop push shll mov and add repz ljmp insb imul shlb xlat ds stc loope cltd mov push stos add stos pop mov inc jne ret sub lcall cli rdmsr (bad) lahf or inc inc les popa pop cmpsb push mov inc (bad) fisub in sti mov sbb or or push mov ja xchg lahf jp jno popa pop gs nop in stc mov cmpsl jp int3 and rclb push add mov nop (bad) push nop je outsb inc loopne cld xor push cmp bound mov movb (bad) push mov dec stc xchg pop add ret add jnp add test pop xchg test 