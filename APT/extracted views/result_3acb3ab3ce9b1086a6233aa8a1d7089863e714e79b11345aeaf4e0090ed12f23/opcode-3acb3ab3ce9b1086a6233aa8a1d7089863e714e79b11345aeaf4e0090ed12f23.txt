nop add add dec add add add add add add add fildl add js add adc add push sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub xor add add add jb add jo add add jb add jo add add jb add jo add add jb add jo add add jb add jo add jb add jo push add add jb add jo pop add add jb add jo or add jb add jo or add jb add jo or add jb add jo or add jb add jo or add jb add jo or sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo push add add jb add jo sldt add jb add jo adc add jb add jo adc add jb add jo adc add jb add jo adc add jb add jo adc add jb add jo adc jb add jo push add add jb add jo pop add add jb add jo sbb add jb add jo sbb add jb add jo sbb add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo sbb add jb add jo sbb add jb add jo sbb jb add jo push add add jb add jo pop add add jb add jo and add jb add jo and add jb add jo and add jb add jo and add jb add jo and add jb add jo and jb add jo add add jb add jo daa add add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo sub add jb add jo sub add jb add jo sub add jb add jo sub add jb add jo sub add jb add jo sub jb add jo add add jb add jo das add add jb add jo xor add jb add jo xor add jb add jo xor add jb add jo xor add jb add jo xor add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo xor jb add jo add add jb add jo aaa add add jb add jo cmp add jb add jo cmp add jb add jo cmp add jb add jo cmp add jb add jo cmp add jb add jo cmp jb add jo add add jb add jo aas add add jb add jo inc add add jb add jo inc add add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo inc add add jb add jo inc add add jb add jo inc add add jb add jo inc add add jb add jo inc add add jb add jo inc add add jb add jo dec add add jb add jo dec add add jb add jo dec add add jb add jo dec add add jb add jo dec add add jb add jo dec add add jb add jo dec add add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo dec add add jb add jo push add add jb add jo push add add jb add jo push add add jb add jo push add add jb add jo push add add jb add jo push add add jb add jo push add add jb add jo push add add jb add jo pop add add jb add jo pop add add jb add jo pop add add jb add jo pop add add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo pop add add jb add jo pop add add jb add jo pop add add jb add jo pop add add jb add jo pusha add add jb add jo popa add add jb add jo bound add jb add jo arpl add jb add jo add add jb add jo add add jb add jo data16 add jb add jo add add jb add jo push sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo imul sub add push add jb add jo imul add jb add jo insb add add jb add jo insl add add jb add jo outsb add add jb add jo outsl add add jb add jo jo add jb add jo jno add jb add jo jb add jb add jo jae add jb add jo je add jb add jo jne add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo jbe add jb add jo ja add jb add jo js add jb add jo jns add jb add jo jp add jb add jo jnp add jb add jo jl add jb add jo jge add jb add jo jle add jb add jo jg add jb add jo addb add jb add jo addl addl jo (bad) add add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo addl add jb add jo test add jb add jo test add jb add jo xchg add jb add jo xchg add jb add jo mov add jb add jo mov add jb add jo mov add jb add jo mov add jb add jo mov add jb add jo lea add jb add jo mov add jb add jo popl add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo nop add add jb add jo xchg add add jb add jo xchg add add jb add jo xchg add add jb add jo xchg add add jb add jo xchg add add jb add jo xchg add add jb add jo xchg add add jb add jo cwtl add add jb add jo cltd add add jb add jo lcall add jo fwait add add jb add jo pushf add add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo popf add add jb add jo sahf add add jb add jo lahf add add jb add jo mov jb add jo mov jb add jo mov jb add jo mov jb add jo movsb add add jb add jo movsl add add jb add jo cmpsb add add jb add jo cmpsl add add jb add jo test add jb add jo test sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo stos add add jb add jo stos add add jb add jo lods add add jb add jo lods add add jb add jo scas add add jb add jo scas add add jb add jo mov add jb add jo mov add jb add jo mov add jb add jo mov add jb add jo mov add jb add jo mov add jb add jo mov add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo mov add jb add jo mov jb add jo mov jb add jo mov jb add jo mov jb add jo mov jb add jo mov jb add jo mov jb add jo mov jb add jo rolb add jb add jo roll add jb add jo ret add jb add jo ret add add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo les add jb add jo lds add jb add jo movb add jb add jo movl cmpsl add jo enter add add jo leave add add jb add jo lret add jb add jo lret add add jb add jo int3 add add jb add jo int add jb add jo into add add jb add jo iret add add jb add jo rolb add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo roll add jb add jo rolb add jb add jo roll add jb add jo aam add jb add jo aad add jb add jo (bad) add add jb add jo xlat add add jb add jo fadds add jb add jo flds add jb add jo fiaddl add jb add jo fildl add jb add jo faddl add jb add jo fldl add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo fiadd add jb add jo fild add jb add jo loopne add jb add jo loope add jb add jo loop add jb add jo jecxz add jb add jo in add jb add jo in add jb add jo out add jb add jo out add jb add jo call jb add jo jmp jb add jo ljmp add or push sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo jmp add jb add jo in add add jb add jo in add add jb add jo out add add jb add jo out add add jb add jo lock add jb add jo icebp add add jb add jo repnz add jb add jo repz add jb add jo hlt add add jb add jo cmc add add jb add jo testb add jb add jo testl add add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo clc add add jb add jo stc add add jb add jo cli add add jb add jo sti add add jb add jo cld add add jb add jo std add add jb add jo incb add jb add jo incl add jb add jo add add jb add jo add add jb add jo add add jb add jo add add jb add jo add add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo add jb add jo push add add jb add jo pop add add jb add jo or add jb add jo or add jb add jo or add jb add jo or add jb add jo or add jb add jo or jb add jo push add add jb add jo sgdtl add jb add jo adc add jb add jo adc add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo adc add jb add jo adc add jb add jo adc add jb add jo adc jb add jo push add add jb add jo pop add add jb add jo sbb add jb add jo sbb add jb add jo sbb add jb add jo sbb add jb add jo sbb add jb add jo sbb jb add jo push add add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo pop add add jb add jo and add jb add jo and add jb add jo and add jb add jo and add jb add jo and add jb add jo and jb add jo add add jb add jo daa add add jb add jo sub add jb add jo sub add jb add jo sub add jb add jo sub add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor add add add jb add jo sub add jb add jo sub jb add jo add add jb add jo das add add jb add jo xor add jb add jo xor add jb add jo xor add jb add jo xor add jb add jo xor add jb add jo xor jb add jo add add jb add jo aaa add add jb add jo cmp add sub add sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub add xor pop add add add adc fldl add or add outsl push add or add jo (bad) add jo (bad) add jo pop add or push lea add add or add sub add or add jo (bad) add jo (bad) add jo pop add or sbb or sub add or or add sub sbb add push add add add adc or add or add add or pop adc add or and outsl or add pop push mov (bad) lea add add add adc adc imul adc ficom adc add incb adc pop outsl push add or or add add add add push add inc add add add xor dec add add add adc or jo faddl add or add or jae add or sub add or or jo adc add outsl adc add or add or sbb add or outsl push add or push push mov pop add or push add add add sub add add lcall inc outsb fsubr add add xlat dec mov sub sub push dec push aad jmp mov sbb and mov jne fbstp push paddusw fs jp pop in rcr pop daa jno mov inc sbb (bad) jg mov mov push shll mov lods outsb adc hlt outsb push push cmp cmp mov fucomip push xchg inc mov ret in jbe mov lods stos jnp xchg sub push outsb inc int ljmp stos and lcall inc scas mov test mov pop outsl jmp in sub pop popa push dec outsl sbb out outsb sbb jb jns fdivrp pushf sub jle mov xor or pusha mov in das cmp pop or in nop jecxz push fstpt aad jge inc dec add lods test int3 adc push sbb and mov inc inc (bad) sbb aad jns or mov jge aad jmp mov sbb and mov aad jmp mov sbb and mov push dec mov pushf fstp cltd popa dec push adc inc dec hlt outsb arpl sti dec (bad) pop nop xchg aad xor mov sbb ljmp sarb sbb pop push shufps mov sub dec outsb out or movsb jecxz subl lds cmp je,pt push push xchg imul enter insl sub std cmp mov adc fisubr aaa xor adc cmpsb mov stc cmp popa jne and sbb and mov pop les pop and lds stos mov mov push gs loopne or jl cmpsb cmp push add aad jmp mov sbb and mov aad jmp mov sbb and mov push xor loop aaa into cmp jae jg push xlat arpl inc and aad (bad) xor rolb pop nop inc pop pop pushf aas add repz mov xchg aam arpl std cmp hlt sbbb ror mov dec cld ret jne clc pusha fnsave dec cmpsl out rorb cltd lret pop dec jno cwtl out dec or xchg mov enter pop xchg jnp inc pop js fs sbb mov cmp mov add sbb cmp lea cmp adc mov mov cmp mov in mov add mov icebp sub xchg jg jl ret int3 pushf pop cmc test outsl loop das push xchg out ret jmp lods add fwait clc push std pop fidivrl mov inc enter rcll shlb fcoml addr16 xor rcll push lahf dec outsb mov dec pop jae fldl mulb push dec rcrl inc test fwait rol mov mov inc sbb out sbb das and mov lcall or push repnz dec shl ret mov mov mov ret test xchg popa nop out jo or cmpsl sbb push lcall pop daa add cmc rorb mov jle js xchg xor aaa aas sbb ljmp mov sub mov movl inc inc and popa jae or into popa adc outsb cld xchg in arpl loop xchg adc sbb dec movb dec outsl mov inc sbb mov lret and imul in movsl dec push jl jne imul in fistp push push pop cmpsb jecxz mov movsl and fcomps xor fldl cmp dec (bad) mov adc mov testl jg bound and or imul or in sahf pop icebp dec in xchg fstps mov adcb mov push push inc jg in cwtl push pop add push sub jg push rorl push inc cmp mov fldcw xchg iret outsb movsb outsl push jl fs bsr push mov (bad) and sahf and loopne mov pop cmpsb mov push inc insb push mov sbb dec js cmpl fsubl rorl loopne insb cltd lds dec negb cmp dec and movsl and mov and jae ss data16 jb or repz scas and xchg out out fisttpl ljmp lods cmp bound sbb shll (bad) je mov xlat aaa pop and push mov ret movsb movsb ret stos (bad) and or mov sbb (bad) xor and (bad) and inc pop lods stc mov push lret mov loope stos clc inc rcrb sti dec sarb aad pop lcall std cmp int xor popf aad movsb fwait test xchg mov adc pushf mov scas or xor std dec aaa xchg fisttpll frstor test xor (bad) dec sbb repnz iret xchg or (bad) mov mov pop outsl jp mov mov ss fist mov mov mov les add ljmp dec inc adc mov adcl bound daa cwtl inc hlt adc jl inc mov cmp add dec test ss push jnp push mov add mov pop push sbb sub ljmp sbb imul in fsubrl push lods jecxz pop movsb outsb sub xor repz pop pop idiv test push mov and and aad dec dec pop (bad) adc cmp (bad) jecxz xchg std popf push jne mov mov and add ljmp fmul jecxz sbb clc (bad) clc mov icebp inc inc add push dec pushf adc jno das addr16 aam fbstp inc das lret mov movsb inc sahf sbb adc int fmull jmp sbb pop dec add inc add cltd sub repz loopne cmpsl int3 xchg lods loop jae dec fcompl cmp mov or push testb fwait mov xor inc cli xlat rclb jbe fs lret inc add in in outsl jno jle adc (bad) pop or jbe mov sbb sub pop sub test push sub cmp mov popa xchg mov scas shlb push xor add clc mov repz jae xchg cmpsl pop cld pop pop loop movsl test xchg adc xor mov jns adc sbb sub push les loopne out pop xor sub cmp aas sub jb int cwtl iret and lcall sub push test scas xor xor push push and xchg data16 push lea iret cmp mov add sub ds (bad) mov outsl ret leave gs in mov mov outsl lods je inc mov push pop adc les out mov xor das adc adc lods dec pop push dec jnp xor lock out arpl lahf add loop (bad) divb inc hlt add or stos dec sub loope shrl js and mov leave shrb inc lods shll test mov stos adc inc lds mov add sarb sti ficomp outsb jns orb data16 jno lock (bad) pop pop pop jge,pt xor cltd mov xor movsl mov push pop shrb inc stc out jns mov mov sbb jo lret dec nop jp into push push mov mov pop nop int sub cmpsb sarl movsl pop imul dec jbe mov inc mov imul sbbl fnstenv stos inc cmp push cmpsb lock sbb xchg stos stc mov nop jmp call cmpsl mov outsl jmp xchg outsl and cmp inc call and cli or (bad) or mov mov xchg xlat sahf (bad) jp mov pop sub adc mov mov ljmp mov call (bad) cs call pop lds xchg fwait push imul or push loopne out push ja xor dec cmp mov mov (bad) repz add pop mov mov push cmpsl sarb aas aas test (bad) pop in ljmp sub (bad) arpl pop enter or clc lods scas sub icebp test jl popl xor push pop cmpsb imul mov sbb xor js xor not adc sbb out push pop lock xchg xor sub mov loope imul mov dec rorl dec add xor and insl enter push loope lcall dec mov adc xchg fstpl aad popf mov test mov push pusha cmp cmp inc or sbb js mulb mulb pop xchg dec mov ds dec mov cld loopne mov divl pop sub repz divb imul popf adc js add pop push lret dec subl imul inc mov or ud2 mov clc scas cmpsl sahf data16 ret or push (bad) inc mov adcb xor adc mov add or popa xor mov adc mov stc imul test (bad) sarl xor sti or lcall std (bad) mov or jae (bad) fxch std and mov jg ret addr16 jnp xchg lods jnp sbb clc mov sbb shrb mov fs pop cli jge pop scas cmp inc rorl sbb or xor daa xchg xchg in fidivr pop cmpsl push or insb sub pop hlt aas push lods inc push xor int outsl pop mov out or dec lret mov jle jmp sub sbb into pushl das in gs adc pop push dec fcmovnu fiadd mov test jmp push mov push out (bad) hlt cmp xchg dec add xchg bound push inc add mov xchg xor sbb fidiv sub repnz inc shll xor lret aam stc sub push push ds aad cwtl stc sbb out adc adc ljmp loop and popa jo das std repz movsb fcomi fwait mov and cmpsl xchg add test cltd cmp repz aam hlt das xor sbb mov push cmpsb mov mov and jmp pop inc mov inc out xor repz dec ja pushf cwtl (bad) test mov aaa jb outsl loope push and adc dec mov rclb ret dec int3 (bad) jp xchg fsubrl and adc gs xor stos jns adc les sbb ljmp mov xchg lock test add fild call jns,pn push dec fidivr cmpsb fisubrl std push jg push test push aam incl je cwtl hlt xor xchg mov arpl fisttpll int3 movsb push aaa and out jecxz stos push mov push jne mov fldl aaa or mov pop mov mov mov cwtl cmp cmovbe sub int3 or and aas dec dec cmpsb lcall arpl push lods mov mov test sbb jne or sbb xor mov cltd lods dec fsubl jmp es inc cli lret jnp icebp lcall jns mov test mov (bad) stos mov cmp or cmp jmp cltd cmc lret mov or add clc sub push sar ss xchg sub lock in add mov mov mov sbb cs add addr16 jo xchg test imul push add rol push aas xchg sbb outsl fwait repnz sahf ja icebp xchg mov xchg test push xchg stc pop and or xchg cmc jg push cmp stos jmp lock sbb and sbb lret sbb rcl mov mov dec xchg lock (bad) stos mov hlt mov mov pushf push pushf mov mov (bad) mov imul iret jae cmpsl xchg cmpl lret dec push mov fsubrp pop xor mov inc mov push mov scas loope inc adc jle sarb outsb shrl pop cmp lock mov hlt rep pop inc adc ficomp adc bound enter out adc in jge stc add (bad) xchg push cmp mov sub stos mov sahf aas das and push sti js imul mov fildl test inc mov jge inc dec add jp loop jg ficoml xchg adc mov rcrb movsl mov insb add mov lret lahf fdivrs jns dec aaa push js addb dec fwait jg fistl punpckldq cld cmpl lahf ret aas leave jecxz nop or fxtract push inc insb lret cmp icebp jnp outsl clc roll hlt jge adcl sub aas and jmp and (bad) inc lcall push cmp les push inc cwtl xor fs aam sti mov dec push xchg insb cli xchg xorl aaa adc decl xor xchg mov adc pop das std mov ljmp xchg xchg mov fld into xchg mov mov in psubd (bad) aad cmp inc dec xor inc das test push mov in repz bound loopne inc add (bad) aad fimull push scas or dec pop outsb cmpsb push scas mov femms sbb dec stos pop cmpl xor inc fidivrl mov sbb mov jmp imul cmpsl xchg icebp sub push sahf repnz push in fwait lahf arpl pop adc into push xor lods ss outsb aas leave pop int sbb push les repnz adc xchg fsts push sbb mov jb popa pop adc pop inc aas jg mov inc nop lret (bad) cli xor pusha mov ss xchg iret and repnz xchg aaa inc xchg or enter lods mov mov idivb jge dec mov nop jl xor pop jno mov push stos dec stos mov sbb push and xchg sbb pop gs dec inc xor (bad) jb or push imul insb mov rorl pop mov sub mov mov out sbb inc xor jle and lahf jle fldl pushf adc (bad) ss pop mov xchg xchg hlt out loope int3 es in clc lret jp ja lods sbb push in xchg and (bad) sbb inc cmp popf bound pop mov test out popf mov jecxz push iret decl je mov popf roll int3 inc jge incl adc outsb pushf lcall (bad) icebp jnp je scas shrl test lods xchg cmpsl cwtl or in ljmp cmp jns jecxz pop mov jle mov cmp test in movb sarb xor or push scas pop pop push into mov cwtl gs or inc cmpsb mov xor jne jecxz cmp (bad) in ret sub xchg in mov inc push mov aaa pop arpl ljmp add inc dec pop call push mov mov jbe xchg jle subl adc lock mov fcomi mov in xchg sarl test xchg pop mov imul mov or jnp pop inc mov jp cmp outsl test xor mov pop cld lock mov xlat repnz mov push push sub xor push lds imul dec xchg lock insb sbb mov jmp sbb data16 cld jnp movsb xchg mov xchg inc pop mov sbb lods loop mov iret lods xchg push pop nop scas (bad) fnstcw daa jp fisttpl inc xor or and mov xor sub ljmp cwtl push xor mov adc rcll push mov xchg mov mov hlt cmp xor and add xor js adc fldl xor adc mov insb (bad) lea jl lret push pop push (bad) jmp push dec popa and aaa push cmp jl jbe leave mov dec mov sbb ja push push pop les jb push sarl pop add (bad) and rcl js fbld pop add add (bad) push aad cmp aad int3 jb cmc stc push outsb mov (bad) ljmp loope xlat in rcr push push inc mov ljmp pop in das push mov in add xlat insb and clc (bad) dec shll sub lds push mov ffree adc sbb dec rclb xchg sub jno out add shrb fwait push lea in sbb aad mov scas (bad) ljmp push jae out pop dec mov bound cmp jae jbe shll out jb dec (bad) sub (bad) mov vgatherdpd (bad) mov xchg enter xchg inc jp push cmc dec rolb iret (bad) xor add inc pop pushf aas les dec mov or sub fwait lret in pop fstp repnz int3 jns xor push mov mov aam fdivp lea sbbl fstl je sbb inc cmpsl daa xlat and outsb outsb loopne ret ds loope xchg xorb movaps jnp aam push push arpl je out mov fistp mov and jnp adc ret pop mov mov inc mov cwtl popa lahf xor mov mov inc aas mov xchg dec scas leave stos (bad) mov mov lods pop test inc mov xor xchg shll dec sub sahf mov outsl loop lea (bad) in and push lds push sub xlat test cli cmp in repnz mov and adc mov cltd and mov xlat sbb ljmp mov adc sub push dec dec popf cs iret into inc shll inc ret inc jno ret (bad) (bad) fdivs mov stos and aam aad adc mov or sub arpl imul call fisttp testb icebp inc sbb jp inc cmpsl dec push into mov mov add pushf pushf aaa mov stc loopne and fs jbe ljmp and (bad) jno or sti mov in pop addl sahf cli in in jle (bad) cwtl sbb add cmp mov aad jb rol mov sub ljmp or in stos mov inc and fcmovne mov push aam mov add (bad) pushf sahf push stos cpuid mov mov inc inc loop test mov repz sahf lods and pop test adc jmp call (bad) xchg sbb dec arpl or aam mov push adc jnp (bad) adc out lcall inc out into int3 outsb jle jno in jp test sub hlt sub sbb rcr popa loope and nop popa mov scas xlat (bad) cld inc pop jne jp cmp mov daa addr16 or test and mov adcl inc dec lcall push ds leave xor outsb add lcall mov push mov jmp cmp lcall pushf mov stc adc imul gs push mov xorb int3 xor hlt or xchg addr16 mov mov inc and sti pop cmp lret and aas fdivl dec aad cli mov cmp cmp pop cmc rolb idiv (bad) lcall and pop pushf clc sub sahf adc cwtl add jns add (bad) lock fcmove test inc mov in lods rolb xchg fidivrl mov ljmp ds sahf mov mov push fwait and push fidiv adc mov inc mov lret scas gs out pop jecxz add lcall pusha mov xor dec cli and (bad) nop mov fdivl fbstp fwait sbb or dec xor mov jnp (bad) mov xor cmp std adc aaa es mov stos pop jle cmp mov jno in bound lret shrl or adc cli push adc ret cmp dec adc shrb xor and mov cld in addl dec inc (bad) push enter mov dec dec cmp scas sbbl neg mov adc push push mov adc jecxz insl loope mov pop mov push (bad) jne fs sub movsl xchg lock xor pushf test test lock in xchg pop fldt xor pop test xor daa jns test (bad) out or add dec sub xor pop ret lahf xchg sub jmp movsl pusha push adc or xor repz xchg popa repz sbbb pop mov add out dec flds mov cwtl inc push jns xchg mov pop mov inc mov stos cmp jne fnop pusha std test xchg std clts rclb add scas std in ss push outsb loop cmp inc sub xchg push pop fisub (bad) (bad) cwtl fs jnp mov dec fiadd call stos cld cmc cmp icebp js pop movsb decb mov xor mov xchg push inc sub imul push rclb jle movsb push shrb sbb pop xchg sarb inc sbb cmpsb mov popf jge mov inc mov jb add sbb sub mov cwtl ja lods ja and movsb xor xchg lock sub sti pusha or jno addl sbb jne dec sub test sbbb lcall loope or mov adc in fidivr loop push pop xor jno mov sti (bad) adc cmc dec add scas test lcall fisubr xor loope iret comiss adcl cltd int3 sub jns lret xor (bad) js in xor or hlt xor test outsb jle jmp mov mov jmp add cltd xlat jle rolb mov adc out pop fstps pop push push enter sub lret xor bound enter gs jb adc or (bad) hlt faddl ficom inc jg mov into sub push mov ror roll pop negl aas test jge lea pop in push pusha pandn pop inc es sarb in or lahf gs sahf fsubs and jle mov sbb pop data16 adc push dec dec fadd inc lahf push inc test cmp push mov repnz jnp outsl jne mov addr16 or mov xor mov add add ds fwait jbe xor popf jmp mov scas xchg stos xor in aas les (bad) sbb leave jae jge les jnp scas cmp outsb int3 mov adc outsb addr16 mov jb cli lret push ret pop mov aam xchg push (bad) or sahf fiadd (bad) in stos dec mov dec roll movsb sub adc xchg dec ret xchg clc xor mov sbb dec (bad) ja into loop outsb jg push (bad) (bad) push out adc adc hlt arpl fdivl jne pop sub rdmsr rcr sbb (bad) call fsubrl jg ljmp cmc adc dec push stc incb fldl mov lock jnp icebp insl dec cmp jbe sbb pop jp popf pop test xchg inc jge add repnz faddl mov (bad) hlt lret or dec push out ret lods popf inc mov scas mov pop out dec lods xor dec jo fwait jb into dec (bad) js sbb pop xor xchg jns mov loope arpl sbb mov stos outsl xor lds xor aam call (bad) loopne sbb or subl jno into fwait mov lret nop popf int3 xor je movsl push pop fisttp cld mov aad push xchg lods loop popa xor dec xor jecxz (bad) mov popf shrb xchg jp dec idivl fisttpll and xchg jg xchg mov mov push mov and shll arpl pop jae (bad) lock lods push jg into xor lret pusha lahf addl sub lods jo lret inc imul or mov dec cmp test (bad) loope pop (bad) pushl cmp repnz aad pop mov pushf xchg pop in inc imul xor xchg js pop adc pop int3 rcll mov push insb and sub xor push nop movsb mov rcll icebp sbb daa jmp mov xchg int jbe (bad) sbb mov (bad) adc pop jmp in mov xor mov (bad) mov xor mov cmp aam cmpl add inc cmp mov cmp mov addl jmp mov sbb dec or cmpsl dec push iret popa (bad) cmp cli fstl lods mov xor arpl sub inc pop js imul cli sub ljmp dec rep xchg xchg cmpsl cmpsb cmp pop lock lret jnp mov je sub sub arpl jg aas ret inc jb leave adc loope xor and dec nop imul scas flds xchg (bad) mov dec hlt adc iret lret sbb fdivrs dec jle icebp lock stc dec aaa scas xor lock and loop ror push mov cs sbb sbb ss fiadd (bad) and es cld fdivl cmp jge jecxz mov pop push dec pop hlt sbb push test mov jle test xor add aas cmp jb xchg pushf ret adc pop stc mov sbb cmp dec out inc or xchg adc call add arpl out cmpsl pushf mov mov sarl pop aas mov call dec shr xorl mov adc sbb stos mov cmc lea jg cli cmpsl (bad) mov sub in lods es cmp lret mov jecxz mov mov movsb xchg daa rcl data16 test jb xor dec dec jle push lods call mov pushf ficom sub dec lcall rclb rcrb nop es xor push repnz add push inc sbb adc xor mov pop lahf xchg rcr push sti cmp jo test cmp in push call movsl das outsl xchg (bad) mov cmpsl dec loope or or inc repz sarl jg fdivrs or or xlat cld mov sub aam popa mov sub dec lods mov push mov sarl mov outsb lret addr16 jl std lret (bad) daa sub and push negl dec inc movsl aam and push sub inc je enter xor push psrlq in (bad) nop add push outsl push daa sub mov mov sahf xor or sbb mov jg jbe push cmpsl mov jb into xchg jno scas iret scas in les mov cli push dec sti das cmp inc adc mov jmp xor push or jno in mov push aaa xchg sbb int mov sbb cmp shrb xchg (bad) mov jg out (bad) pop loopne pop mov outsl pop and xchg mov std hlt dec xor xchg pop mov jnp pop pop js out int mov shlb popf test mov std test lock xchg mov (bad) cmp fdivs jmp andl popf dec ss dec outsl mov (bad) jb add sub repz mov inc mov sub cld sub jmp out jecxz enter mov loopne int3 dec test mov dec xchg and fcmovb dec cmp popf call pusha push pop insl or (bad) mov xchg and dec jge mov or add xchg and lret pop insl addr16 xor dec inc xchg cmp push pop inc mov out mov out mov ret scas aas lahf mov jo scas adc cmp bnd stos dec jl sbb push xor xor xor jo dec pop or mov rcl adc lds pushf lcall (bad) mov repnz cmp sub cmp lret paddsw xchg pop roll scas cmc popa data16 lcall mov and xchg cmp dec out ficoml insb pusha decb sbb mov bswap and shrl std cmpsl fs lods aad fwait rcrl xchg in imull xchg (bad) fstpl and mov out (bad) pushf fldenv sub hlt imul aad add push cs adc call mov add int3 shlb mov je xor lcall (bad) mov xchg pop mov movsb jmp xor jne rclb rcrl imul inc pop mov (bad) nop mov mov imull mull lods jecxz popa mov cwtl sbb in xchg int lock inc push psrlw dec in or andl jge (bad) xor cmp imul leave mov sub lods pop cli adc jecxz pushf xor test mov mov push push pusha sub sahf rcrb push pop mov mov pop jg lret rcrb std pop xchg jb movsb addr16 xlat repnz and push inc ret and out aaa outsl div xchg je jmp xor push sub out pop mov icebp fistp sbb les jl gs pop fnstsw cmp imul (bad) add adc stc xchg dec lods mov imul cmp loopne pop cmpsb cmp mov dec cwtl dec cmp and (bad) icebp jo jbe sub mov incb sub lea lea in cs icebp mov imul xor ljmp pop popf jno pop mov dec mov push aam into mov cmp sub push push out lret rcrb scas data16 add and dec dec add jae adc icebp xor adc push call out sbb push push stos jno (bad) jbe push aaa dec push and mov jo sbb inc xor mov or xchg inc adc cmp mov push adc in imul lods movsl push in mov sbb roll imul fiadd sbb inc sbb xchg mov cwtl jmp sub adc or mov fimul pop xchg adc arpl fistpll xchg jbe add orl pushf fnop mov dec mov mov xchg insb cltd and out jne cmp stos mov mov and or xor cvtps2pi push (bad) jl inc addl test xor out push inc jo into negb xchg icebp jge sbb mov bound insl push mov pop addr16 cmp ret scas movsb loope mov adc fidivr cld mov lcall rclb sub mov pusha mov add jne outsb ja (bad) mov mov xor cmp js (bad) addr16 jno loop aas das leave (bad) rolb stos cmp es jge,pn mov mov aaa sbb das jg cmp jns inc mov mov fs mov add mov dec (bad) in rcl jnp jno jno fist and incl arpl xchg fsubr sub jge es adc idivb or inc ret out lea and je mov ljmp jmp jmp fwait (bad) fucom dec ljmp sub pop mov call out inc (bad) es and out xor and push hlt jecxz push cmp jae xchg sbb ljmp and lea fsubs cmc xchg ret fwait in sbb std lret mov (bad) int pop dec inc call mov jg sub mov fidivrl lods out adcb aas movsl lret cmp inc and leave push push xchg mov adc fiadd (bad) (bad) (bad) jl les stos inc fs adc and pop repnz pop dec push lods leave inc push jg shl xchg out adc add out adc in dec hlt cli (bad) in shll or (bad) ljmp fs movsb jne mov pop add (bad) add mov xchg push inc imul popa sub cmp loopne mov inc cld rolb out push xchg test pop mov or loop or stc dec jnp cmc xchg rcl jg test rep negb aam scas jle loopne mov scas inc pop (bad) mov mov ljmp inc cmpl pop jmp dec stos jnp jns mov sub dec and repz lods sbb xor inc or adc and xor xchg jbe xor icebp sahf rcrl loopne notb xchg sub mov pushw fninit xchg (bad) push fcom sbb cmpsl shll mov jne push adc mov mov dec test addr16 xor cld data16 mov ds mov (bad) fisubr lock xor mov push data16 jno ljmp push xchg push imul xchg mov std cmpsb fcoml sbb lods pop bound push inc fucomip ds nop clc es mov imul mul repnz dec xchg in push xor incl pop adc cmp lahf lods bound (bad) dec enter mov sbb popa sub mov mov xchg outsb ds stc shrl xchg imul add pop or dec sahf or push fmul mov (bad) cmp (bad) mov xchg dec adc (bad) out pop rorl lcall sub xor cmp adc jb add (bad) cmp mov xchg xchg repnz mov adc (bad) mov fwait popa cs or mov jl cld mov aaa call icebp pop out cmpsb scas (bad) cmp subb lahf inc xor test push loop pop popa push aad lsl inc sti dec int3 icebp xor hlt push jo sbb xor movsb jge leave int push (bad) push mov sar adc or cmpsl add and jae or mov cld into dec add add cld lock mov sub gs push int3 and outsb ja insb repz fmuls loope and push cmp in mov test outsl aas bound pushf cmpsb repz add jno push pop iret push mov xchg dec or inc sbb out data16 push sub das xor fidivl out (bad) mov scas mov jg xchg adc ret add push outsb (bad) xchg sub add int3 sahf jp inc out jne sub sub cs dec jmp jnp or stos pop scas or cltd lret pop jns adc lea or sbb xchg push call mov inc mov (bad) repnz jno loop mov lret push dec loope pop and (bad) lahf push jg fistp adc test pop sub data16 xchg sbb aaa mov cmp aam mov ret sub notb mov sbb arpl mov push fldl xchg cmp icebp sbb rorl mov adc jmp inc dec cltd xor (bad) xor adc scas fs mov lds ret mov scas and pop test mov add xor aam xchg mov mov movsl push mov (bad) pusha sub or xlat pop pop mov fwait mov jp dec mov and flds (bad) scas mov mov xchg adc cmp inc jg sbb and hlt cmpsl movsl xor int mov xlat hlt rorl xchg jmp pop aaa jl add sub xor add lahf mov and xchg inc inc lea push imull add lds mov inc in lods inc loopne cmp (bad) outsb shrb cltd orb pop (bad) rclb xchg in mov xchg fdivrp test (bad) std lods jbe cld xchg dec rorl test mov sub int xchg aad (bad) call int fcomps push in lret fidivr imul clc fs lret xchg gs mov xchg xchg in cmpsb stc outsl mov xor jb (bad) lock inc or mov pop rol push push or out pop pop fucomip jge xchg inc iret mov pop add divl movsl mov jmp cmpsl lret icebp sub loop dec movhps sti cltd sar inc daa popa or adc sbb out dec js xor (bad) cmp in pop jl xor mov xor rorl pop aaa or imul cmp outsl ss push sbb and out adc cld aam add cmp jmp rcrl xor inc adc xchg ss jmp jae xchg sub xor ret jle pop inc dec push insb pop inc std inc xor jp out sub test and lret mov and xchg dec lcall sub pop (bad) fidivr sbb mov sbb cmp add addl sti fs out test sub jbe outsb push sbb icebp incb aas mov (bad) xor add push adc leave mov sbb cmpsl repnz aaa xchg xchg loopne push andl lea cmp js and xchg mov sbb int3 adc imul fisttp pop jmp fs call hlt movsb cld lea jno fwait imull aad ret push cmp push xor mov stc fidiv inc adc pop pop outsl ljmp scas add inc out sbb out leave xchg ljmp (bad) adc mov cmpsb lock push mov sbb push sbb adc jb sub into mov pop xchg push iret aad sbb dec fnstcw mov jnp pop pop xor mov sub iret push adc (bad) repz in js pop insl mov sub (bad) cmp sbb xchg idivl les in mov sbb adc stc cmc inc cmp leave shl cmp repz sahf outsb addr16 mov sbb lds les inc sbb ret jge pop gs mov test dec dec clc shlb jge mov pushf mov (bad) enter mov jl and sub adc mov aas scas (bad) (bad) mov js push fist mov pop lahf xchg daa iret mov dec xchg push out mov jecxz addr16 pop gs dec insb lods rcrb xlat gs cmp cltd mulb and (bad) pop fstl xchg dec pop clc inc (bad) addr16 mov jne or subb insl sbbl xchg das lods sub sbb bound cmpsb pop loope shrb and xchg mov std push push mov inc push pop cs (bad) cmpsl in jle lds rcr pop inc mov mov inc mov iret popf jbe cmp cwtl movsl dec sarl dec (bad) insb lock dec add jbe out mov aaa cwtl inc cmpsl imul xchg inc mov mov cmp and and sub mov xchg outsl lea call bound and pop xchg adc loopne sbb sub jge xchg xchg iret pop shl add ret test cmp xchg movsb xchg dec sbb in jl nop dec sbb cld (bad) int3 and out jge lds lds addr16 or dec call lahf mov in xlat mov inc push movsl int fdivs outsl push inc aaa adc mov jbe xor mov in mov or popf ss scas add inc sub sbb nop adc movsb mov cmpsb inc test inc xor mov push dec cmpl test lods enter dec pop dec sbb scas push or outsb repz xchg cli leave dec xor cwtl push cli xchg inc inc cmp mov cwtl push jo movsl int mov sbb rorl sbb push push es jg cmp sub mov or push pop es jp xchg adc rolb add and out dec popa inc xchg dec and jo mov push js (bad) cmp push add data16 mov inc xor jae add roll inc mov (bad) dec out fcoms loop adc pop je lret mov xlat jo movsl dec sub jl mov jecxz aam test ret inc pop adc xchg call xlat mov jbe test scas sub nop xchg xor dec mov fucomp movsl inc jns mov fwait pop roll scas fdiv sarb decb jbe (bad) and pop mov xor dec imul pop cmp mov xor pop in mov lods or dec mov jg je mov rorl cwtl outsb or sbb fild inc scas jbe and lods ret imul mov xchg pop shrb xor cmp test gs fwait push sub pop xor ficoml and and lods push dec nop pop fmul xchg (bad) div add dec xlat addr16 iret dec xor mov push fisub adc inc jnp pop outsb pop ret shll (bad) jo mov mov lods pusha or mov push jns sbb or push lcall enter push fsts lea xchg dec mov movl leave (bad) dec movsl enter mov dec jl out stc or sub push mov mov push arpl mov (bad) mov out push (bad) push shrb pusha mov in pop sbb fiadd pop pop pusha push mov mov sarb js adc xor mov gs and pop xlat dec xchg dec repz mov or mov jae mov cmp sub inc add je pusha cmpsb icebp jecxz inc inc pushf dec imul cmc (bad) stos mov xor sbb cmp fstl mov cltd and dec inc pop xlat fisub es (bad) clc add cs sbb pop in xor ljmp test and loopne sbb pop mov cs mov jmp sub cmpsl mov lcall or push xor in ret xchg cmp dec ss int pcmpeqb imul mov sub outsl std mov ss xchg daa inc xor adc mov sub jbe (bad) cld lds push cld test add sbb push inc jg pop mov andb sub aad push insb pop fadd xchg or dec clc jno xor mov cmpsb ja add cmp ret psllw int sbb out or data16 adc xorl cmpsb sub fwait xlat fdivrl les rcrl cmp test sbb mov test xchg xor xchg lcall rolb ds mov mov jecxz call repnz nop in and ret and iret movsl jp and cmc cmp jae (bad) (bad) cmp repnz pusha movsb rclb sqrtps insb add mov sub (bad) out or iret leave clc push pop loope ss xchg xchg mov inc cltd cmp (bad) xchg adc push cld push int (bad) in clc pop xor ret movsb mov fistpl xor shlb (bad) hlt xchg pop mov or stos pop push or imul add adc mov pop push es dec int3 (bad) outsb mov mov das divb mov push push add cpuid (bad) add negl jb imul mov shrb popf sub (bad) cld push adc jl jnp fmul pop push lret push mov je int push xchg push stos pop lds xor xchg mulb mov repnz cmp into push jle pop pop mov es or push int sub movsb push incl cmp adc arpl mov mov cmpsb dec mov andl push stc and jno xor dec jmp loope lea (bad) pushf xchg cmpsl push pop movsl push push sbb (bad) dec fincstp push dec xor int3 xor jno fucomi pop inc inc out add or dec add or push je lahf fldt xchg mov cli jg mov add ret std arpl aaa call aad add into (bad) repnz rorl adc iret and js,pt inc (bad) daa adc (bad) jecxz rorl jmp cmp (bad) dec rclb dec mov daa sbb sub mov mov mov fwait jge adc adc push mov jmp cmp push outsb fadds jg pop inc icebp pushf lds scas je adc (bad) or stc loope loope movsb in fbld (bad) mov push push cwtl in lods mov popl mov fistpll sbb fsubl sti xchg add repnz mov adc pop cltd sbb jns xorl daa bound fsubs jae scas xchg (bad) push xor dec ja scas push cmp mov jo shl xor adc pop jmp push sbb xchg iret subl or outsl and xor mov daa xchg int leave sub push mov notb out insl fimul clc ljmp mov outsl dec push lock xor testl out add xor loopne mov pusha mov das inc (bad) mov pop xchg jl xlat sub dec jnp je lcall pop insl lods ss (bad) popa mov dec inc push cwtl ljmp cmc pop pop mov add and adc mov aad add xchg rcrb stc pop fisub push xchg lds cmp pop xchg mov loope cmpsb fldl push mov lcall mov mov sbbl cltd mov mov or or fnstenv dec ds addr16 inc insb cli xlat adc loop sbb stc lods popa mov cli imul ljmp lods cmp inc xchg (bad) pop movsl in les aad push (bad) cmp and outsb ss lret sub pop sahf fnstcw dec or sub (bad) jbe pop sbb sub jmp fnsave jecxz leave sub ds (bad) jl pop pop stos or and and adc (bad) jecxz push loopne pop mov rclb xchg es push dec mov jne aaa mov (bad) mov inc mov cmp inc mov xor (bad) push sahf push push aam loope test outsb pop dec in push mov cmp inc xor or clc outsl cltd clc xor cltd fwait aas push jmp or dec fisttpll and (bad) out pop cmp mov adc pusha adc fisttp mov mov or xor sub and dec sbb in or aad out mov jne (bad) xor mov lret or dec pushf mov fidiv push lret or or xchg mov call lcall je cmp jbe push adc fmull (bad) xor outsw xor push fsts lret mov in and mov loop movsl pop inc xor aas pop mov or lret cmp es loopne xor adc into in adc daa insb nop push dec mov shrl mov sub outsl andl sbb popf push mov xchg adc push outsb shl pop (bad) ljmp stos add or call mov dec fnsave popf lcall (bad) or mov jle ja in aaa repz sarl popl lea mov cs pusha insb movsl lds mov sub sbb call add divl fildll (bad) jo ret leave and test pop lds sbb enter in add imul sbb ret cmp pop jo jge testl clc lret bound xor addr16 xor sbb pop lahf pop push (bad) roll cmp mov xchg addr16 cmp cltd mov insl in xchg inc out mov add sbb sub mov sbb mov subl in icebp add and lods scas fbld inc int push cwtl pushf in sbb lods and mov sub outsb xchg cld jb mov loop jns jmp call negb test adc push das ret and mov and bound and loop aam pop scas sbb cmp cltd sahf pop movsl adc push pop inc ficom paddb sub setbe std cli adc sub fcoms (bad) repz add popf pop adc xor test dec push adc jp sbb push pushf mov and rcrb vmread and aaa outsl movsl inc mov stos sti xchg or bound (bad) inc and inc adcb xchg (bad) cs inc sub (bad) cld pop fcmovnbe pop ss lahf sti jae mov es or pop int clc outsl add cmp iret (bad) aam sbb push iret push (bad) adc adc popf repz inc push lret pop jbe (bad) insb stos pop addr16 pop xchg and les aam fistl cld gs fstpl sbb sub push fdivrs mov aaa xchg sti or sbb adc jge ss cmc xor ret mov (bad) dec pop dec jae jae ja add jnp mov jge (bad) dec xchg test cltd and hlt adc mov xchg push jmp cmp ds mov dec into ds stos inc mov (bad) (bad) mov sahf cmpsb push dec lods movsl int mov mov stos xchg adc mov adc aaa and stc jecxz xchg pop je stos adc push mov pop xor (bad) fldt mov aad cmp cs daa pushf push popa dec jmp push jbe loopne push scas fcompl int3 xor xor mov frstor xor (bad) mov adc (bad) push lea push hlt faddl adc jno xchg lds iret ret adc (bad) cmp into push leave inc mov cmpsb rcll jl add jo jnp cltd mov call adc xor fisttpll movsl mov mov add (bad) je aas or ret dec pop movsl add cmp push test stc pop or pushf inc adc sahf imul dec pop loope jge sub les and aam aas add and inc adc pop decb sbb rolb xor xor and mov mov and stos jno mov daa inc jbe fcmovbe mov (bad) mov cmpb scas enter fldz xlat cwtl cmp sub push fs xor push xor adc mov cwtl arpl mov (bad) mov in jnp mov shrl jbe dec fisubr pop pop cmp lock cmc iret aam xor push ret clc dec loop sub aam in lds std f2xm1 dec (bad) ljmp xchg sub jmp jae cmpsl mov (bad) (bad) lcall pop xor mov ljmp mov or in cmc rcl js push (bad) imul dec sti push negl clc xor sub stos adc dec popf insl dec out addb push or add cmpsl xor ja xor adc adc data16 les fmull dec xchg (bad) fcoml push clc js aas push sub pop sahf sub jle (bad) push mov xchg xlat cmp call and insl leave or sbb sub jmp jmp push mov adc jb mov insl cld jle icebp push insb cwtl (bad) pop fimul ss (bad) (bad) decl addr16 ljmp clc mov mov les stos and shl fs dec pop xor push ja arpl push stos xlat add loop fs push in jge push sub (bad) cmp mov cmp (bad) sub scas jbe push (bad) or sub push dec test fildl sbb cmp les add lock mov mov (bad) dec lock popa lods fcoms or inc push inc cmpsl sub es mov pop push jbe pop mov notl shll cld out xchg sub xchg mov stc push jne jnp pop aaa (bad) in out ds cmp or pop xchg add pop xor sbb mov rcll or pop pusha std lods imul inc or (bad) gs adc lahf lea xchg inc cmp mulb hlt adc cmp mov cwtl mov repz fstpt cmp xor sti lahf jae fldenv sub push or push imul test std push add clc mov mov jnp clc mov int arpl jg sub jae stos (bad) and insb xchg dec push shl aam loop xlat (bad) sbb xor imul cmp sub fwait mov mov dec adc lahf arpl cbtw mov pop sbb out leave mov push popl push loopne push arpl aas push js xchg push inc popa add das xor lret mov jmp in sub cmp or jb test pop outsb sbb mov sbb push sarb test xchg and lock fcmovnb adc movsl sub jb in xchg shll xchg and jne and mov inc adc ljmp cmp sub pusha roll cmp mov pop or es pop scas jg sbbl inc adc push fild sbb cli mov mov mov lret pop jmp lods add jnp test stos ficomp inc adc sub outsb les pop xor stos xchg std sti push push movsl rolb popf mov lea test inc call or into sub sub push cli xchg mov imul leave xor pop or mov sbb add or and mov mov lcall loopne jno iret shll dec popa jge mov mov mov adc pop push lea enter mov aam adc (bad) subb popa out inc jl sahf sbb inc stos sbb lret (bad) xor jp movsl rorl dec sar sbb jns push mov nop add xchg jo pop aad insb popf adc jmp cmp jmp dec jae xchg fiaddl pushf (bad) loop or jns inc push push rorb test sub imul loopne loop push jmp jmp xchg mov push or in mov jle enter cmp xchg and rcrb gs mov imul pop sbb je mov cmp jno and mov sbb scas repz mov mov mov (bad) push mov mov (bad) movsb sbb pushf fs (bad) and mov subl sbb push and mov xchg pop lea adc fsubp mov or dec (bad) cmp xchg inc pop test out (bad) je or or xor ljmp jg in sbbb add and lret clc push in push mov mov xchg dec out jle iret xor sub sub mov (bad) cmpsl sub (bad) or fwait add push lea sub and stos mov icebp mov sub adc dec lahf jb,pn sbb sub xor mov (bad) mov xor cltd mov inc push je fisubl and fsubl mov in or int incl mov pop jno out cmp or rorb adc mov sub lock mov loop addb cmp and push xor lret int rcll jmp mov stos out or mov rcr hlt popl jl mov sbb scas cltd pop pop lods mov js xor rorl es gs xchg and arpl mov cltd test pop fbstp fisubl subb pop mov mov jecxz prefetcht1 xor mov fistpll leave aaa inc push push imul or sub sbb pop es in ret pop rorl loope ljmp sub fsubrp in sub add in sub lods push xor mov pop pop pop sti aam mov mov fsubl lcall push cmp incb leave mov mov stc stos pop xor (bad) flds aas insb and outsb adc int3 mov or cmpsb sbb in cltd inc fidiv bound aaa (bad) les sub sub out sub or jbe or or mov xor mov sub in iret sbb inc imul xlat es std push adc mov push lea mov mov rcr xchg inc jae bound dec and xor mov (bad) and jne or (bad) mov inc adc movsl jecxz add js mov sbb call pop mov rcll aam lret mov scas lods lcall leave les jg add xorl into dec or inc bound dec push sti dec bound int3 std cmp adc fldt add pop or clc repnz aas mov push add adc adc pop or jmp add cmpsl stos jo or adcb lods adc int loope jp lahf mov mov loope xorl bound pusha into repz jle pop add inc test outsl aad lcall cmpsl mov mov xor outsb cwtl imul andb adc mov mov pop notl fiadd pop xchg rolb mov sbb je lret add xor inc dec xchg es js mov and adc sbb ljmp sub shrb xor add ljmp imul lret shrl stos shr ffreep lea jg ret cmpsb icebp adc cltd mov or out js test jmp or adc in jae inc rcl cmc adc (bad) push add inc (bad) scas jmp xchg lret ljmp test insb outsb and (bad) insl mov (bad) fdivr clc sbb test xchg fwait jns fdivs jecxz int3 cmp call adc mov push (bad) ss cli xchg add mov or fldl2e test jb fnstcw mov (bad) adcb pusha in arpl mov dec push insb data16 fs dec or ds cmp push mov xchg aaa sahf (bad) pop push mov cs adc adc push pop dec mov push stos push mov aam addb xor (bad) mov cmp push push aad sar push add mov cmc cli bound jns nop or inc dec cmc shlb mov imul mov into fdiv sbb push and ret test cmp test mov or pop insb out lret inc popa fist (bad) mov mov add in add cmpsl dec lods outsl aaa jl jp sahf inc xchg rorl fwait lds add jbe push add sbb inc xchg and push xchg (bad) dec dec aam int pushf mov (bad) push pop xchg xor ret dec mov enter push (bad) testl mov jbe xchg pusha xor cwtl sbb xor lods mov dec dec dec faddl dec (bad) add hlt or insl rorb loopne jge or jg fsts jno xor leave add jnp and fs mov pop stos outsb ss lea cmc push in hlt sbb mov iret cmpsl (bad) aaa ss maskmovq adcl fsub divb lds push push and xor pop jp int3 ljmp xor or mov cs sbb mov adc cltd push or sbb mov xor sub push cwtl or xchg xor cmp stc iret mov mov add cli ljmp mov mov (bad) cmp pop ficom inc push negb xchg arpl outsb call insb fistpl lock mov ficompl scas pop mov fisttpl push mov sbb mov mov mov pushf sub pop std xchg scas outsl jns movsb mov dec mov jb imul inc mov mov test cmp cvtps2pi test cmpxchg cmc es arpl mov cmpsl sbb pop push icebp jae or outsb adc jle rcrb ss clc loop xchg jo sbb cmc lds sub adc push (bad) jo dec jno fistp or xchg fild jns scas or pusha adc mov pop xor xlat cwtl xchg hlt push push ret and movaps xor fwait cmpsl or adc mov sub adc lret xor cli push xchg pop jmp jle inc xchg pop (bad) aad and cmp xchg out jo mov mov push pop sbb jnp rcrb lahf in les fsubrp je ss mov movsl xor mov das pop cmp mov pusha cld divl and cltd in inc aas repz jmp in frstor jmp (bad) leave fstp les xor or or int3 jnp jne push out out andl cltd loope push popf popa out fstpl xor jnp pop fistpl lods dec jno fwait cmpsl pusha cltd add dec ss ds mov (bad) cmp (bad) mov fcmovb xchg mov push ret inc (bad) in rorl out xlat jnp jecxz xchg in sub mov fs es and xor mov xchg scas xor aas call cmc sbb jle adc xchg mov pop mov daa xor sarb aam cmp test push mov inc jo lahf and jbe icebp cld shr jg testl es xchg xor outsl add dec and ret jmp imul loope inc call jmp movsl mov sbb aam cmc mov icebp les xor je jge mov lret pop ja and dec mov fsubrs and xor sub mov xor mov dec push pop cmp lods cmp inc mov dec add xor adc out mov pop fucomip ja popf xchg xchg sbb das lret xchg test sub jns inc popf cmp fsubr fwait dec and mov in mov ja add mov push sbb shl loopne lcall jmp push test dec and ret or cld pusha int3 xchg repz test fiaddl pop or das js (bad) icebp sbb inc xchg jl sbb pop jb,pt or inc jae lcall dec mov scas mov (bad) cltd inc sbb xchg cltd jnp sub aam call rolb notb loopne roll clc sar mov cli jo jne in loope mov mov out xor leave push ljmp pop cmp fistpll stos mov xchg aas mov sbb jl mov ljmp mov xchg scas mov scas and mov xlat int3 test lcall out aaa addl icebp mov (bad) sbb stos xor incl in icebp inc mov loope and std stos pop mov cmp add xor and test dec (bad) inc gs daa or or jno nop or dec jne cmp push xchg sbb lods mov (bad) (bad) leave loopne mov js repnz sub sub test adcl test or mov inc inc mov jo (bad) ss lret enter mov jnp mov jge pop test sub mov dec aaa fcompl (bad) mov pop mov add cmp dec int3 ret add push or call test sub fsubr outsl cmpsb call repnz or sub mov push in fcomps lds js adc mov cli and mov lret cwtl incb push add jmp mov (bad) xchg add pop cmp in int test imul jae je test dec cmp outsb and arpl sbb mov jecxz (bad) mov mov roll aad push jb pop xor lcall mov xchg cmp pusha popa in f2xm1 sti jmp pop mov cltd mov cmp inc mov push or pop je out dec notl lods test xchg xlat mov fsubrl aas sbb xchg sub xchg xorl dec mov es jp mov sbb mov movsl rclb xor call sahf aaa push outsl test iret sub movsb dec dec cmc xor push data16 daa inc mov inc insl mov fldcw push pop cmp (bad) cmpsb pop imul inc mov add adc (bad) insl std mov fs inc fnsave push subl cmp dec (bad) leave push jbe lret xchg mov cltd sub pop outsb cmpsb mov dec cld adc lods or mov scas push bound inc in cld mov mov mov push pop xor pop rorl rorb sbb pop add loop adc data16 cld (bad) shrl test sbb xor push insb xchg pop sbb mov repz mov test mov mov pop cmpsb lret add repnz or jl,pn pop jae and xchg test sub repnz clc in cmp mov es lods mov ds imul jb fsubrs loope out xchg aas sbb lret iret mov (bad) adc mov cwtl cmpsb and and bnd jbe movsl mov pop es cmp cmp test cmpsl push ds out daa push cli pop push sahf nop fstps xchg and adc es add (bad) mov push bndldx hlt fs adc (bad) cli pop gs popa xor insb add pop sub push pop in xchg and fcomip pop data16 add out rcrb sub xchg in sahf scas lock sbb inc mov imul inc dec sbb push in or mov or jb adc adc mov add pop rcll in adc sbb scas push out mov loop pushf pop loope data16 mov (bad) lds jle xchg xchg adc cmpsb shrl pop pop stc cmp jg mov iret jne xchg adc js sbb pop movsb aam iret jge aad and sub xchg mov pop in xchg cmpsl or jnp in lea xchg xchg jo in test test mov and stos insl loope mov jo mov and gs lahf dec pusha mov push pushf push mov loop jno fistpl addr16 xor ja inc xchg sarb aas push mov jl jb mov (bad) call pop push dec test or cmpsb stos sub xchg daa jmp xor in push jo insb movsl int3 imul mov mov test adc xor cmp movsb dec mov daa aaa push (bad) jne cltd cmp lcall push cmpsb cmpsb cltd hlt sbb xor pop (bad) jmp cmpsl or out into xchg xchg mov add xor lds (bad) in imul inc mov cmp push loope mov add adc jnp mov xchg (bad) and pop add push pop lods mov push xchg fistp cwtl xchg sarb lods pop pop inc add imul leave mov or xchg xlat pusha dec movsb leave mov xchg imul lret xchg mov or jl in in jmp jmp mov test iret cmc nop add push sbb push adc (bad) idivl subl pop push push andl imul out sbb pop jb test mov jmp call and cltd mov out clc add mov out add insl loope fldl mov jge or ret lret lahf sub inc mov mov mov push inc xchg xchg push sbb jne mov adc (bad) loop mov adc jb pop orl cltd idivl mov pop roll ljmp xor ja add outsl ret fnstsw std std or test xchg repnz inc repz mov cmpsb cltd idivl lods test inc sub pop jp adc and (bad) pop fisttpl mov pop cltd inc test (bad) ljmp add pop outsl call negl incb dec mov xchg sahf or sub adc (bad) push mov cmp push divl mov xor out sub xor pop mov leave add cltd repnz push in aam add adc add mov push jb mov ja mov jecxz imul jno adc leave aad daa mov or inc int3 jo lods mov rcl jp jmp add arpl and inc and pop adc dec out sub xlat idivl movsl jno js push sbb std cwtl lods ficom call lret cwtl cld je test test mov shl adc sahf roll xchg fildll pop aam xor dec pop sub into pop adc jp cmp (bad) into cmpl xchg mov mul (bad) fdivr dec mov xlat clc pusha repz popl push cwtl cld sbb pop repnz ss cmp cmp outsb dec test mov scas jp out mov into test rcrb jle dec lret jae aas jl and sbb cmp xor ss inc stos in mov scas repnz add lock sarl repz adc jp out adc (bad) jae (bad) mov jns fidivl test imul mov sub aad jge jl xor sbb fldcw or repz xlat jo lock ds xor xor fnstsw jmp mov lret cld jmp pop sub xchg daa push and (bad) insl std (bad) repz add fiadd xchg push push xor xchg ret sbb cmpsb pop in lods add sahf push or fsubl inc sbbl xchg movsl icebp sub mov (bad) xor cs lods mov movsl pop (bad) sub jb fsubrs test (bad) or cmc add (bad) andb lods pop push xchg int3 hlt inc outsl adc jmp mov jbe pop jb loopne fwait mov jo push outsl icebp cmp push sub adc xchg adc xlat lret lock je jae push dec dec sub xlat fwait or mov push lret and loope jmp js add adc daa jecxz inc mov test arpl je inc insl mov andl in loop rcl arpl xchg adc inc jle sti (bad) and and pop inc int ficoml lds and inc jns fbld sub jb aas roll stos mov fsub sbb aam adc leave (bad) inc inc call jmp pop push inc leave lods subl and add push fldl bound mov push mov incb inc add enter les sbb and adc and push cltd (bad) jmp movsl inc stos (bad) pop je and outsl clc ss add sbb and (bad) cmc (bad) loop pop fisubr inc bound mov inc stc mov stc xchg jo push aad mov cld and dec xor dec leave push and adc or or ljmp mov jge test mov aaa test sbb lods sti xor in insl ds movsb cmp mov fdivs mov fs pop test adc popa pop xchg (bad) stos xor cli andl add scas xchg scas dec cmp lcall daa sub cmp (bad) xchg adc dec icebp jge push jns gs inc rol xor push adc loop cmp dec jns xchg fist sbb push loop les pop cmpsl lret aad insl push xchg in push into inc jns push push jns xor sub push pusha or mov call fdivrs add in xchg cmp daa pop cld stos cmpsl cltd mov shlb push pop daa (bad) inc imul in pop inc (bad) adc cmp adc je mov insb icebp or mov inc adc mov test cwtl mov (bad) mov (bad) in inc test addr16 and jnp cs lods imul xchg and int3 mov icebp addr16 push test push insl dec sbb adc inc lret mov insl rep inc int3 loop repnz pop je rcrb dec mov push pop inc aad and (bad) fwait mov idivb or rcl inc out mov cmp push int fistp lahf mov mov imul imul mov pop loope mov mov sbb pop cmp inc inc hlt insb hlt sub aad daa gs popa xchg or std jnp (bad) fdivrs mov pop mov xchg cmp push or jb cmpsb push sbb pop dec inc cmp push movsl jle dec jo jns sqrtps stos mov cs in out and and inc cld (bad) and stos ret inc ljmp mov mov pusha and pop es enter dec sub popf cltd loop adc arpl cmp mov jb test cli xchg pop insb in (bad) jo clc sub (bad) fildll cmp cmpl xchg mov imul in addl lcall aaa jecxz cmp adc repz call mov jnp pop push fidivl push pop in and add jnp lahf xchg jmp ja scas sti lods cmpsl aad mov repnz (bad) cmp cmp or add mov pop in js mov mov aaa xchg jae gs loopne push pop mov out add jnp divb mov cmp gs and dec inc inc xchg kmovb or mov sahf mov icebp lahf pop inc arpl repnz xor lods das stc add es or enter (bad) aaa pop and call sbb repnz (bad) aaa push push push xchg ja push jg inc add jge jo mov jnp pop and mov daa or fwait sti mov push xchg out mov push ss mull cld stc push push jmp test jge xchg nop and outsl adc add sbb call xlat xchg pop add push push sub pop or adc ret jne mov stos shr xchg lods in pop mov dec jle sar je push loope fstl and aas lds adc mov sbb mov mov (bad) mov adc mov xchg jle ret (bad) repz adc movsb adc pop pop cmp jbe mov rcl inc std outsb (bad) mov mov popa lret inc repnz movsb inc shrl idivl pusha sub jle leave adc inc ja ss jl in lock mov (bad) xor pop cmpsl insb fimul mov sub pushf into cmp (bad) adc jle xlat fistpl insb or and pusha in mov sti pushf rolb dec xor out mov sbb ja cmpsl sub mov xchg pop and std xor add and repnz mov add mov lock sub lds dec jns (bad) inc xlat movsl inc loope sbb stos adc or add aaa sarl xor dec repnz or fwait mov sub (bad) gs daa mov jns int3 cmp in push mov fidivrl loope sub in aad ds mov push stc dec loop fmull (bad) repnz les repnz loope int insb ja pop cmc mov ret pop icebp xchg je repz or lahf adc dec arpl mov jle adc xor ljmp mov (bad) jns sbb xchg arpl dec into xor xchg ss lods fimull pop dec jns or jno xchg mov outsl mov xchg mov or flds mov lea inc mov daa inc mov xchg xchg mov add (bad) fidiv aam push out sub scas cmp mov cld test mov lea rol ja enter adc jno hlt daa inc pop mov pop and dec ljmp aad dec rcrb cmpsb jb fidivrl mov (bad) test xchg popf mov orb lods outsl mov cmpsl in out in cmc mov or les and test aaa push push cmc jns jo scas daa es sbb sti mov pop mov add popa insl data16 fwait cs sbb mov push loop pusha lahf int3 add jge xor or mov std das mov sbb sbb pop add popf (bad) jno aad lods sub and adc push loopne xor sbb add sbb sub dec adc mov sub inc aam outsl out xchg jg inc pushw dec inc faddl jae rorb cli and adc imulb lahf add mov lods mov movsb out xchg out or (bad) jl sti in into push jecxz pop mov in mov push mov out sbb stos fs test dec clc (bad) gs fwait xchg lea aad shll lret inc out in ja pop adc cmp pushf add xchg stc xchg hlt daa insl and jbe bound sahf or insb imul adc pop out jmp dec pushf (bad) jb hlt int3 fs xchg mov jb mov rcll push jp (bad) call xchg mov inc std fs into outsb sarl dec into repnz imul adc inc jle inc adc int xor adc test xchg icebp insb adc mov jle lea notb lods or std xor mov sahf das fnsave pop push inc lods dec push fbstp cmp cli xor lret pop xchg call xchg fidivl sbb mov jb adc pop push fisttpll cmp xchg dec pop add gs dec or push rorl stos call sub push icebp out insl xchg sub xchg mov xlat in dec xchg push pop sbb aam movsb xor or sbb jb jmp adc sbb fsubp cmp loopne mov jnp push outsb sub add aam addr16 addr16 sbb pop add movsl pop sarb lds fistpll add sub xlat (bad) loopne sub ljmp push mov add cs pop jmp (bad) hlt or cwtl stos lret cmpsb xorl out pop push pop cli sub ret iret daa imull push push (bad) fisttpl repz data16 stos cmp cmp dec int aad push sub xchg in inc sub inc pop push stos sti rcll lret dec jg add adc lcall dec addr16 sub inc lods loopne sub scas pop add cmp or (bad) in xchg xchg xchg jns pop leave ret call mov cli or cmp icebp jae xor add pop xor mov and jne arpl and mov scas shlb mov lods movsb xchg xchg adc clc fdiv pop aas cmp inc adc dec xor jge lea movsb sub lret ljmp lcall repz jecxz mov jns push test (bad) mov repz inc cld or (bad) jnp cli pop mov jmp push jbe push lcall add stos (bad) mov and pop jg sbb js cmpsl pop inc std dec test mov fild mov fwait pop mov xchg xor sub sbb cli xchg jo adc mov xchg enter dec dec popf loopne out cld gs push fcoms adc (bad) xor mov push or cli xor ljmp test add movsl xlat stc pop mov mov popa mov (bad) jge mov add cld mov cwtl scas mov mov push decl cmc in cmpsb add ja adc mov shrl ficom and repnz inc jb push pop cltd out aaa aam leave (bad) and inc andl and and adc pop push ret inc xchg fimull mov ret sbb incb fnstsw pop dec testb xchg (bad) enter xchg pop cli ja xchg cmp sub call loop outsb inc js out push xchg sarb mov enter repnz sub adc stc jb dec inc mov cmc mov xchg ret in and xchg cmc aaa or pop push aaa add push xor decb imulb or das cmp leave lods cwtl xchg push cli stos push jnp mov inc pop sarb dec insb lods add mov jmp push and xor push add stc enter gs (bad) pshufw out int3 les (bad) jmp mov (bad) and push pop shrl vmwrite scas lea jmp fldcw jne jo (bad) mov pop mov xor out cmp aas fdivrl icebp test mov and jbe ja push scas fwait dec xchg pusha (bad) or xor xor push scas cmpsl test lods dec pop daa dec subb sbb popf popa repz lods pop sub in mov mov xor fadds mov cmp (bad) mov ret and mov mov (bad) fistl xchg mov daa decl rcrb ret mov movswl enter and mov icebp popf push les push push sbb andb test insb sub mov test fidivr push sub push xchg sub mov popa mov adc (bad) xchg add push iret movsl push rcrb (bad) push push stos in jae int cmp lcall cwtl jl jns xlat or cmc stos loopne push das aas in (bad) pop imul mov lret xchg int adc fwait test sarb clc loopne fildll int3 arpl sbb push pop scas pop sti pop mov aad imul xchg inc movsb shll sbb and ret mov pop or jo xchg (bad) mov mov sarb sti aad mov sbb sbb movsb mov jbe inc cwtl xor mov push rcrb xchg mov imul movups pop cwtl adc inc inc push clc pushf fadds ljmp inc xchg test jecxz test enter mov push jne cwtl jb data16 negl cmp dec mov adc pusha xorl out jns push sub inc sbb add mov fmull roll fdivrl and jl cwtl rcrl push mov fbld out pop mov ja fimul rcr popa mov cmpsb dec and xchg popa popf fnop dec sysret int3 cmp mov mov out pop (bad) jbe sbb stc leave cmp jb sub pusha (bad) (bad) cld sbb inc inc jb push jge add pop hlt mov cs fnstenv dec sbb jae cmp or outsl addl inc mov cltd lret mov sbbb mov fdiv xchg sar dec inc es jnp mov push adc int3 mov jecxz jno icebp ja or lahf jnp jns fisubrl xchg and pusha idiv loopne subl mov push cmpsb mov call mov adc mov out cld call push pop (bad) scas (bad) jno divl sbb adc push dec dec fs faddl add into shrb push mov cmp cld mov in xchg xchg pop xchg dec ret pop sub mov iret xlat jb xor mov cli incb dec rorl rcll mov sub lods mov nop push jnp jecxz and mov loopne adc jmp cmpl test mov pop sub scas push mov imul test sbb fisub push mov inc sahf fiaddl adc xchg cmpsl fistpl ret sti mov pop xor add and xchg ljmp cmp mov add ds repnz insb mov aad in mov ja mov repz or aas fisubrl lods bound shrb jbe movsl imul mov sub dec mov xchg sub pop fs pop cmp mov mov outsl rol clc scas icebp fwait mov pop ljmp ja lods int3 popa inc jbe xor mov mov xchg fwait inc push in (bad) mov nop in cwtl pop decb dec pop mov lcall xor fsubs stos dec xchg test mov xor dec sbb pop inc and leave mov adc xchg push adc mov push pop dec jmp mov pop pop xor hlt int3 test xchg loope adc mov (bad) leave ds mov int3 mov xorb cmpsb rcrl adc call fimul mov jmp xchg fidivl mov lods or add stos dec mov scas adc pop (bad) popf ret or addr16 int push mov out dec (bad) popa and imulb out outsb in arpl add sub mov xor int3 stos es mov in out pop scas imul out and adc ror aad dec rcll insb mov push loop xchg ret push cmpsb add sbb and xor and es lods and mov dec mov out in movsl sub jbe push mov rolb mov xchg sbb cmp out ja push nop mov scas or sub push inc add ret (bad) sbb loop fmull (bad) xor fist cld mov movl loopne stos xlat movsl cmp push mov add enter jl push pop out lahf inc inc mov jnp in mov or (bad) jbe ljmp jmp mov mov js pusha lret das loope cmp lods fidivl test mov test fidivl movsb adc push adc cmp imul cmpl leave cmpsb jb insb mov pushf loopne rolb mov sub repz icebp (bad) into cltd mov or (bad) addl mov (bad) (bad) inc mov dec mov pop not cld cmp fwait icebp inc push pop mov nop or out or sub loop stos fdivr xor push pop and push and int dec or repnz pusha sbb in pop push stc adc xchg or jle int3 jl enter outsl push sahf mov loopne jo aas mov and out pop jg pusha and jmp mov pop loop xchg add shl pop cmp daa jns push mov fcoms leave pop imul les fbstp and pop in jle jp jb (bad) ds ljmp stos sbb pop data16 outsb cmp fwait dec cmp ret and sub and rcrl stos sub je jb xchg sbb dec icebp dec cmpl rorl loope mov xchg pop sub adc xor sbb pop xor pop push mov push stos movsl (bad) jne and push jae mov int or push loopne or in pushf movsb or mov push mov push push mov mov dec nop inc inc mov (bad) push in fistpl add jnp dec add insb cmc adc stos pop test ret mov xor inc js stos imul iret imul mov xchg std das movsl push (bad) sbb and dec mov sub sub pop cmc imul fidiv xor add insl xchg cli mov mov mov enter sbb sbb mov int3 push les aad (bad) jb fldlg2 (bad) sbb leave leave lahf repz arpl pop out and lcall sbb add pop (bad) repnz mov leave xchg mov cwtl pop (bad) lods (bad) mov rol jg (bad) push movsb out sbb jnp pop jo lock stc pop test xchg ja mov pop xlat pop adc inc mov sbb imul fnstenv push fiadd xchg cwtl (bad) mov xchg push in cmp xor sub stos sub lret add inc mov pushf insb cmpsl scas add push xchg mov inc xchg jge xor cmp lock xchg (bad) xor fwait movsl push frstor inc stc subb jno (bad) fcomps jle imul inc xchg add dec add in mov and pop sub xlat mov xor ss sub and les cmpsb sub into test mov pop call sub clts test jg insl ficomp adc xchg shl lcall push std lcall pop popa mov imul cmp push mov jbe xor pop (bad) pop push data16 mov push rcll addr16 cmc cli imul fnstenv mov add jbe (bad) out jge lea and xchg adc xor (bad) mov xor cmp (bad) sti sbb dec or mov mov popf or lods sbb and xor mov mov stc outsl sub sti mov adc lods adc jnp mov push pop jle add fmulp adc int3 cwtl mov arpl jmp icebp jnp lds movsl mov insb pop in sbb cmp mov ret fdiv int sub jle pop or jle and adc ja lods inc in xchg outsb scas in mov jmp (bad) add dec (bad) xchg fwait mov mov imul jno gs imul or arpl leave cmpsb pop mov jl repz (bad) mov rorb out popf jb repnz push push imul adc mov mov iret pop pushf testl pop xor ret cmpsb ljmp data16 stos data16 bound inc cmp xor adc das jmp outsl lret lods mull cmp push jecxz movl xorb test sbb and mov push xor call cmp cmp pop out add lcall mov xchg xchg mov ss test xchg (bad) imul adc mov es xor cmp adc xchg jle push fnstenv pop scas (bad) mov sub aam cmc jns pop cmpsl (bad) sub int3 in (bad) prefetch dec fildll add inc jecxz pop mov jae in dec das mov adc jg lods rcl dec in out mov ss (bad) xor inc fyl2x iret mov rcrb hlt rorl jge jl fisttpll daa or push (bad) in xchg mov mov test dec lcall jo loopne xchg aam xchg cli mov cmpb cltd sbb cli or sub mov mov cld or pop mov cmp loope fmul push ljmp bound scas or ljmp pop sahf loope test and bnd jb cwtl jecxz mov inc stos mov cli fisub xor fs sub outsb or mov jbe out pop das add (bad) aad mov test daa pop xor and push inc push insb push pop jge es das or jmp xchg add dec movzwl es fist xor pop (bad) repnz das push push daa (bad) mov imull pop pop movsl jle xor push test push pop dec addb jo xor push cmpsb (bad) test sub repnz jle iret dec jne xor out scas or arpl imul cltd fldenv cmpsl jnp dec dec loopne push pop dec mov mov (bad) pop ror cmpsb lret pop add out mov mov mov ret cmpxchg test push imul aad sbb add pop test sti mov push pop xor scas pop fcoml pop leave bound (bad) out adc cmpsb mov xchg ljmp std add or scas mov jle ret and mov xchg inc out imul fldcw adc arpl pop lods (bad) lods cs jmp add insl push jg sti xchg or cmp lahf popf rorl sbb ret mov jnp xchg mov pop cmp arpl nop inc xor pextrw je add and mov imul cmp stc xchg fnsave imul inc add mov jmp out scas insl bnd aam add call sbb adc push dec std push ss mov dec push mov sbb mov into (bad) (bad) iret cld jecxz sub jp pop ds xorl and sub inc test test lds data16 (bad) in sbb lds jecxz fmul push jl outsl xchg pop xor jmp push sub xchg stc out lods sahf mov popa xor popa dec popa in out imul icebp lcall jecxz mov hlt sub inc cmp cs or imul out mov clc andb popa cmp and fs and mov add dec (bad) lcall les mov dec dec popa jle mov mov mov bndldx fldt and push pop inc imul add popl or popw leave out lods mov mov xchg inc inc jb ds fcos cmpsl xorl std shrl mov push repz popf jbe mov sub cs mov jg in cmp aam lahf adc inc adc sti inc inc push dec dec xchg pop idivb fs cmc mov and js clc mov daa mov mov mov lahf inc lods popf sub xor sarb mov xor (bad) cmpsb pop mov stos adc imul xchg adc fsubp inc mov sub lret in jmp xchg into call gs popa pop pop (bad) pop ljmp dec sbb push repnz sub test mov enter outsl jmp test outsb mov test add es xchg mov hlt aas inc rcrb cmp jae call jne cld inc xchg dec loop sarb and shl mov xor xchg add (bad) cmc sbb xor es sbb lret push das scas mov and jmp frstor sbb mov add cmp push mov test cmp cmp push and xor decl movsl push je popf rol outsb mov and addb sub outsl ljmp cmp inc cltd fwait dec dec and aam mov mov pop mov cmp jg mov ret cmp sub imul jle cmpsb jno mov fs sub ss jge inc pop add dec mov mov sbb mov adc pop or mov mov sbb into cmp adc dec pop push stc pusha sarb bound incl xchg int dec fstpl or insb dec sbb test outsb into loopne sti call lret ss pop inc mov imul jbe jge push cli adc insb es stos xchg shlb xorl push inc mov add inc insl pop xchg mov mov adc (bad) cli jmp dec mov hlt jne test cmpsl stos loopne insl sub sbb push ret fcompl outsl incb addl aad dec xchg inc aad adc mov into gs push push dec sti gs das les xchg repz call dec jl xchg loopne cwtl dec (bad) daa jl adc bound jb loope or mov mov sbb mov cmp in xchg scas stc pusha insl iret mov (bad) int inc dec cmpsl mov stos out inc decb or push icebp sahf lcall inc rorl movsl cmp sub inc pop loopne add fisub je and sbb pop cmp enter dec cmp jp push add in ret and sub mov (bad) push stos jge xor nop pop add sub lds push fwait repz dec decb arpl jb jo add loope int adc cs and stc testl incb (bad) jmp sti repz jns roll xchg (bad) inc gs adc fiaddl adc push rolb test loopne jmp mov mov fwait lock sbb in jne fcompl ffreep (bad) out inc jo inc jo lret fwait std mov sub xor jne sbb pop pop std mov sub mov sti adc pop xchg je fnstenv bound cmpsl mov (bad) jo xchg mov cwtl mov pslld test and mov ret (bad) mov mov test cmpsb loopne cmp in rclb out popf jb in xor mov shll push push test cld shlb and out add mov lock inc cld (bad) mov bound adc notb mov and jbe sub sbb inc ffreep lret fstpt inc pop inc mov push mov inc mov (bad) testl adc dec (bad) je mov gs cs or add repz mov test xchg lods cmc (bad) repnz pop rorl mov fmull xchg sarb jge ss and test xchg stos sbb insl (bad) mov lcall add (bad) aaa sbb aas icebp xchg js or imul mov mov xchg sub pop jmp fnstcw inc std shlb (bad) pop sbb lcall stc push adc aas insl hlt js loop rcrl (bad) int pop inc popf addr16 xor stos push push sti pop test aam cwtl rorl inc inc aad bound ss int3 cltd push or testb in mov lcall aas sbb lods sahf pushf adc repnz (bad) adcl call pop push jno mov xchg and mov pushf adc (bad) dec xor jmp daa dec jno push lret cmpsb dec adc mov or dec sarl jmp jle (bad) xchg repz aam ret iret mov dec ljmp mov mov insb sti pop std aam dec add aas pusha test push adc mov rol xchg decl jmp adc outsb jle mov dec stos mov adc and dec inc xor lods mov imul dec jmp lods jae mov jg sbb push lcall sub sub mov xlat jae ds mov ss aad xor sbb (bad) jne xor ja and imul mov scas sbb lret adc push scas xchg push xchg xor nop movsl pop sti test pop popf (bad) repnz shlb les idiv icebp fcomps outsl inc and add pop add out rcrb and daa jecxz call pop mov icebp mov xchg aaa shrl push pop cmpsl sarl test sub sub sub movsb stc xchg imul insl bound fsts jecxz or cltd ss je lret mov shrb push push roll lcall or out lcall aaa mov sahf inc jecxz fimull sar jmp fadds mov insl negl imul mov hlt cwtl cmp push incl sub iret mov push or cmpsl jge out inc cmpsb pop sub ljmp icebp cmp outsl enter movsb mov mov push pop add scas and jno push bound add mov cmp sub popf or aam mov mov sbb xrelease mov inc mov xchg mov out aam jns (bad) rep lock lret mov lock les popa lcall sbb (bad) xor push xchg pop pop data16 and mov aaa mov push popa in cltd outsb xchg xchg inc jmp inc sbb xchg aas dec notb leave test or mov pusha insb aad adc lcall inc inc cmc mov fwait jp inc cmc xchg pop jnp aad (bad) sbb (bad) cmp decl push ja mov call cs cmp lcall das and cmc fs in loop pusha jo inc in mov in lret cmp das cmp (bad) mov enter ret jns (bad) ss mov divb xor cmp test dec inc push inc jnp add repz cs aam ljmp xor mov jb enter push push bound add xchg outsl push adc mov add ljmp mov adc (bad) inc outsl aam in add call xchg shrb push fnstenv int3 xchg (bad) (bad) fbstp div xchg mov test push add fs pop dec loop (bad) adc xchg mov decl or in test test jl enter dec jno dec arpl shrl mov mov xor adc or push dec xchg push push int add ret (bad) (bad) cmp mov mov xchg int sarb rorl cmpsb int out push dec (bad) lret out cs sbb es and stos adc lret pop aad (bad) iret neg call (bad) mov pusha mov mov (bad) ljmp and scas add jns or jge (bad) sti repz mov sbb (bad) inc ljmp jle pop xchg ljmp jmp jp rcrl fcompl in lods mov daa loopne cmp mov std rclw lods jp (bad) pop xchg or xor add sbb cmpsb push push cmc push add push lds aad adc cmp push and mov xlat cmc xor and mov cmp and dec sar mov mov mov jp dec mov push jae outsb fidivl ljmp pop repz jp std push mov roll dec mov es ja xchg dec mov mov cs sti fimull xor mov pop sbb add imul lock pop stc cmpsl cmp mov or push mov mov jl pop clc into xchg loop pop aas mov mov aaa test fidivr hlt xchg or pop xor (bad) dec cli sbb push ds lea jae xchg push icebp (bad) jae push sbb repnz bnd std int3 push in popa call jg cmp xchg xor mov and mov dec and xor and clc (bad) data16 faddl rclb cltd and loop imul int3 ss jns sbb stc bound push sbbl push and pop stos daa daa sub cmp mov jge ret pop out fisttpll mov adc data16 push std shll inc mov pusha (bad) (bad) add push mov cmp call lods add mov leave jmp xchg das fisttpl and mov dec insl repnz xchg pop gs cmp adc (bad) jnp int ret inc rep push popa in inc iret loope inc push repz (bad) xchg xor sbb in and pop outsb mov mov stos sbb shrb notb mov je sbb mov mov out cld xchg orb adc clc cmc in stc clc lds mov jg cs pushf adc sub std call cwtl lods mov dec xor rol nop in mov sbb inc scas orl push mov mov and dec aaa ljmp jne,pn mov add ret pop sub fucomip mov dec insl iret xor fisubl mov push xchg sub js xor jmp aam hlt xor dec mov push imul pop pop lahf cmpsl mov in xchg cmp dec adc dec xchg add jae sbb std pop aad push jmp pop enter loop (bad) rol mov xchg cmp dec sbb mov jp fs je and mov xor mov sub or repnz (bad) jge mov or sbb in fcoml sarl pop adc in push pop cli fbld jp cmp pop xchg movb sti xchg and adc cs das stos inc xchg push out add dec xor and sbb aad adc ret and scas (bad) jle ret dec mov leave inc mov (bad) cmp mov sub fldl outsl dec cmp pop mov mov jb or inc idiv cmp cltd jnp hlt lcall popf jmp addr16 pop dec (bad) mov push das or or lods ja pop inc jno adc int3 mov pop inc cmp xchg imul pop sub push jg jmp sbb rorl ds jecxz aaa xchg jbe sti movsl enter clc (bad) imul (bad) adc (bad) in mull sbb fs push (bad) into sub adc xchg mov (bad) xor jmp sub cmpsb mov iret lods das je fiadd pushf mov xor int3 mov jmp adc ret jns lcall cmp ljmp lret ljmp test dec sbb loopne pop icebp lea lods mov jne lret popa mov stc dec pusha scas dec jecxz (bad) mov test fwait ret iret xchg xchg xchg pop (bad) and mov jge int jge and outsb sub loop sbb add das sbb and ljmp shrl jle push lea popf mov test push nop (bad) and xchg mov and push std lcall int fnstsw (bad) popl gs hlt adc mov jecxz cmpsb movsl insl (bad) lock fcmove push lods daa push jge xchg lods stc mov cmp xchg pusha (bad) lods daa inc icebp (bad) (bad) mov or jl inc fwait pop xor aad lcall jne ret dec or pop cmp int3 in arpl xor imul add jo test xchg pop push ja mov xor and enter xlat cs addr16 in fcmovb dec addr16 bound fsubrl inc cli dec scas in cli lret lock mov and xchg repnz das jl xchg xor xor in xor or push enter clc cmp aad das dec cmp lods nop (bad) jo mov cmp mov stos inc and daa lret aad jno add test mov cltd (bad) arpl rcrb cmpl add clc mov loopne sarl push cmp mov ret daa jg and scas cmc hlt imulb loopne jns fmul outsl lret shl jmp inc adc mov pop mov sbb scas (bad) xchg or orl xchg xchg lods xlat inc pop sub loopne add repz repnz sbb (bad) sbb xchg mov and push xchg cmpsl inc stos push push cli shll xchg les or adc mov pop push insb lea pop adc jmp clc sub out and sub les push test push aam cmp jg jbe mov fnstenv cmp mov pusha cli test (bad) or sub push adc push mov dec mov arpl push sub inc jns out ds adc in and inc and outsb sub fucomip fnstcw cmp add mov adc add fmulp push push xlat pop cmp inc dec popa cli add mov push jmp aaa test in adc mov std pusha lds adc mov or sub (bad) movsl (bad) aas pop repnz adc (bad) lea mov in mov lret cltd jge push push popa rcrb push adc push (bad) icebp push addl pop mov push push movl icebp sbb inc fist rcrb sub lea sub in xor jmp fcmove dec test jle sub lret xor adc scas push movsl int3 loopne and (bad) popa inc lret and mov mov push sbb js icebp fdiv rcrb push aas stos test call lods sar dec push sbb mov (bad) (bad) daa movsl pop aad cmpsb pop sub cmp stc std push push out sub cltd fstps pop sub ficom (bad) fstpl mov test mov outsl fadds out mov push cmpsl xchg pop test les push lret (bad) outsb cmpsb (bad) loop push add shrb js ss ret int (bad) jg hlt sti aam jns je fs and push rclb xchg scas lahf cmp cwtl in mov imull rcrl in push idivb fsubs pop lods out aam inc (bad) xor daa xcrypt-ecb cmpsl mov das inc dec aaa sahf rcll sti adc mov and push inc dec cmc inc inc cld lret cmc call fistpll mov sbb int3 (bad) jns xchg (bad) sti xchg mov dec mov aad cmp and in mov lock inc xor push (bad) aad xor xchg add xor cmp mov pop dec gs sub loope cmpsb ja (bad) mov cmp lea arpl cmp or mull lds jbe ret inc shrl mov and mov (bad) sti add loope mov out push xchg in mov inc out pusha adc iret push inc sbb scas daa and jge out stos negl dec idivb stc inc iret mov cmp cmc and cmc pop inc js repnz pop push cmp cmc push addr16 mov out xchg jb repz and push jg lahf push data16 in push jmp cmpsb adc pop sbb mov in pop fcmovb sbb and jecxz jb dec sbb in jno jge clc and add rcr xor dec repz js xor leave mov sbb mov fldcw repz mov stos test cmp insl clc inc (bad) xchg inc mov in cli ja push cmc mov pop pop dec add xchg adc mov popf mov not insl notl data16 in aaa xor sub add and fistl jbe outsl and add xchg add fcomps fbstp pusha andb mov mov les pop push sbb (bad) ds jecxz pop and sub dec mov lahf jne mov push pusha rorl pop call sbb das mov xchg les rorb lds dec xchg xor cmp movsb mov mov jnp push rol mov and push loop add adc mov lret aas icebp int3 inc insb jns push in repnz add ret and push jb shr inc pop push xchg fwait add cmp pop das or push pop test jno lret dec out xchg into inc push inc dec jbe jg push mov test xchg dec mov movsl fsts jmp cmpsb mov adc fcmove mov mov sub fistpl jns rcl add jbe mov sbb mov jno rcl lret push inc jne fsubrl cld arpl mov cs addb sbb jp push fist pop movsb inc lret sub stos add ret cwtl addl dec dec lea fisub push or fisubl and inc data16 jae bound and (bad) aaa pop add xchg xorb movsb mov sbb push test stos push int3 push fsubrl mov mov add or cmp out (bad) pop cltd or push repz fsubrs xor repz lods add mov inc std sub (bad) (bad) mov fisub dec out or xor add test fnop jp lods mov (bad) cmpsb movsb (bad) mov push mov jno out jne xchg loope adc dec data16 fwait ja or and xor inc cmpsl loopne addl and subl js ja,pn lods cmp (bad) mov mov mov loope movsl xor cmp xor mov sbb popa sub adc outsb adc cmp bound fsubrl ljmp repz imul sbb ret cmp pop xchg mulb xor xor xchg and loop jns jecxz pop in ret jbe pop and add stos dec mov cmpsl int3 jecxz mov dec push jne (bad) stc dec dec pusha (bad) cmpsb pop push inc jp sub leave add (bad) mov (bad) repnz adc jle push mov stc (bad) sbb popa ds jne in int3 xchg mov mov cmp lret xchg add cmp mov adc sub dec lahf fdivrl lahf sub push ret jae dec push fsubrl push sub mov lock and popa xor lea inc mov fldenv pop fsubp iret outsl xor cmp aaa mov push adc insb pusha sub nop movsl ss js ret mov mov sbb out inc pop cwtl dec xor pusha outsb int3 add mov das (bad) mov jmp mov add xchg in mov cmp rcr xor cmc push mov jns add jl xor test inc jge call cmp cltd adc push cmc popf add jg adc (bad) ret daa es mov cmp mov xchg sbb pop in mov adc in lds cwtl sbb mov push xchg inc push je fs sub mov in cmp push mov xlat inc pop and mov js push inc fwait cmp pop jmp mov mov add aaa call loopne movsl ret in adc dec sahf sub inc mov push push xor addl mov cwtl scas mov sarb into or mov mov jne bound or or cmc sub loop add das fs aaa push xor cmc fcoml popa aad insb pop jp and repz loope dec stc push outsb mov es sbb ret cmp jge pop xor and sti iret ret mov lret mov pop sub mov lods testb ret cmp dec (bad) pushf dec push jns jg lock (bad) ja cmpsb (bad) dec inc cltd lods jne push imul pushf ror (bad) loop sahf xchg and fimul mov adc cmpsl idivb je scas cltd mov adc xchg pop or mov inc test mov ds inc scas sbb or test fcompl popa push dec sbb ret pop fsub sbb (bad) push mov lds mov (bad) idivl mov sub loope lock cld xchg sbb or and (bad) jae xor mov mov mov or enter mov push push hlt cmc cmp xor rclb push xlat mov pop adc sti mov movsl in xor push mov fsubl pop pop movsb push orl mov loop jp negb mov adc dec sbb addl or pop repnz pop mov add test jp xchg or test cmp dec insl test sti bound or mov lds int dec lds jg sub jae (bad) dec pop pop scas ret jl xor or lret leave addr16 jnp shrb and sbb and mov jg fldenv inc add ror popf xor cmp hlt out lds ret cmp test jg ss mov dec pop sbb jns lcall notb sbb repnz mov fcomps nop iret scas adc loope fwait adc sbb pop rclb adc fs cld mov outsl jno add jno call pop loop outsl outsl add sub push jne jb fwait lods movsl js jbe std xchg (bad) aas (bad) jmp mov je push int3 mov (bad) mov pop push cld lea lcall push subl sbb je cmp mov mov xchg fsubrp ss out rclb aad out pop mov pushl adc adc bound int3 jne fdivrs (bad) test outsl shll sarl shll test lods outsb fnsave add test dec sub jo (bad) call pop xor add add imul or sahf inc sahf sub test bound jns cli (bad) pop ja data16 enter ss mov inc iret rolb mov (bad) xor jp scas sbb into rcl lret xchg dec out rorl cmpsl dec mov sub lret pop inc and stos cmc mov leave inc xlat inc cmc cmp add movsl mov movsl or jne mov push sbb out push pop mov mov popf mov das add pop cmc or mov xchg cs xchg outsb jns (bad) mov and movsb mov leave jp lret and fs notb jp rorl mov outsb or pusha (bad) leave (bad) cmc jl mov lds or lret mov inc icebp stos jne into fsubrl sahf mov adc push add aaa jge mov mov enter outsl jmp adc and cmp cmp jl xor ds out imul pop out push add xchg jne jg bound pop sub push inc push in out bound xchg jno dec cmp lods add clc mov fimull dec pop rcll aas sbb adc and test xor jge fstpl sub add pop mov dec cltd in xchg jbe xor fistpl stos fstl (bad) jns jo push mov add scas jp cltd repz int3 shrb mov test lods mov dec mov mov and pop xor icebp fistl dec lahf mov dec mov repnz stos mov (bad) pop ljmp scas les bound testb pop mov ja ret cs cli pop into mov jle sti lds or stc pop push mov fs xchg mov in and cs ja dec pusha xchg rcr popf mov fadds push jnp (bad) push xchg or jmp cli push aam jp jns pop sub sub notb push pushf mov cmp xchg pop cmpsl mov insb xchg shrb adc pop enter ljmp fcompl inc lcall and test insb cli lret sysenter out pop push aam mov fst int3 lret and cs dec inc out fisttpl lret mov fldcw xor mov inc sbb mov icebp jecxz lods mov jmp xor ja les sti xchg adcl xchg repz je and pushf sarb xchg adc popa pusha dec leave imul lahf cmpsb cmp mov and or cli (bad) int xchg jnp repz jno jno test xchg cwtl lcall fisttpl sub das xchg sub xchg fnstsw cmp mov rcrl push enter mov cmp cmp sbb mov movsl sub icebp mov in fldenv gs fisubr into and xchg mov call les mov jecxz test scas addr16 fstps cmp mov mov sbb xor jp inc cmp leave cmc mov movd xchg sub add scas and lods pop and insb fild add movq cltd mov pop push mov idiv xor jle leave popf subl fsubp xchg cmp iret mov or iret or aam movsb cmp test loope lret lods ss jb cmc in js int3 xor and inc mov divb pop stc xchg int3 pusha pop aam cmpsb std scas fcoml cmp pusha fs rcr ret jmp cmp cmp clc push mov iret add mov mov outsb adc (bad) loop,pt pusha jns and insl ret sbb inc dec xchg into dec inc fistp mov es outsl test scas cmp fnop dec jne and lret dec pusha lcall fldenv jp xchg lret outsb pop sub adc les sub cs xor xchg cmp fistp divb je pusha xor inc scas xorb (bad) lcall imul xchg add ljmp clc pop into or sahf inc jo push sbb xchg sbbl lods cltd aaa stc pop pop test dec push (bad) imul mov pop cmpsb iret aam xor xchg sub popa adc jno (bad) in or jnp fsubs jmp xchg push jmp mov push and add (bad) jmp vandps pop xorb into imul cs int jae mov ss inc cmpsl ud2 sti jp xor pop loopne inc popa push adc and dec dec sub inc out jecxz cwtl in sub sbb test mov sar lea inc dec jge dec cmp and lsl outsl sbb aad add pop adc mov sbb push push enter (bad) adc xchg mov stos mov inc cmp dec inc jns sbb push pop jb inc push mov or in lahf loop dec stos push push jne imul cvttps2pi testl jp and les sub push push pop sub sbbl (bad) rol mov cld or imull or scas out inc and jne sbb xorl cmp add and jl outsl adc xchg in dec sub sub imul push push iret dec cmp (bad) in shll xchg stos fadds imul loop data16 xor sub aas pop sahf jl loopne jmp dec les outsl fs add rol loope (bad) xor cs ljmp (bad) lcall shrb mov add lret and aam push mov out insb addl ss insl sub arpl jae repz push out and dec mov sub mov in cmp mov dec (bad) fsts subl add jg or iret xchg aas cld sbb cmpsl xchg icebp imul or pop aam outsl movaps xchg xor and daa mov jo aam inc out mov aas mov xchg insb hlt outsb (bad) (bad) lock or cmpsl fildll adc leave in ror fnsave mov xchg jo sub add cltd (bad) mov pop or notb fstpt repz das test stos fs mov out mov (bad) (bad) xchg flds dec lds fstl ja xor pop data16 pushf mov data16 insl inc in xor (bad) and dec int mov jg pop icebp mov mov arpl lretw pusha hlt jg push out jge movsb js xchg fist call leave mov (bad) sub mov es xchg mov fmul ljmp fwait shrl inc adc sub insb in dec sub and negl ljmp (bad) xchg scas and mov lods adc (bad) clc xchg adcl cmpsb jae testl (bad) (bad) mov mov adc (bad) out mov push cltd cmpsb test xor stos push mov mov push adc xchg scas das mov call cwtl xor adc adc daa roll pop (bad) and xor push pop and (bad) je xchg mov outsl mov push dec inc dec and scas cmp cmpsb inc repz jmp xchg jp xor test and loopne pop push (bad) ja (bad) mov aas adc sti clc loop push xchg jl leave clc dec ja dec inc addl cmp lds fisttp jecxz stos ss push pop add jne aam jg arpl mov sti push test sbb cld es cwtl (bad) mov insl push movaps jns pop jo cmp pop clc and mov xlat sub int3 movsb xchg fwait pop mov add fadds cwtl aad data16 xchg sbb movsb dec inc sub mov mov cmp xor inc sarl lret cld xor leave dec sbb or and jbe dec adcb aas sub bound aad cmp jl iret stos sub xchg pop jae fstpl cmp mov fcoms test or push (bad) out and mov push adc test pop roll int rcrb xchg movsb or dec or loop fidiv jbe (bad) jmp mov push stc add insl mov dec test insb lods cwtl movsl xchg leave leave in mov adc fistp dec imul dec mov push outsl pop pop xor jmp test dec (bad) in icebp movsb test and ss jg aad std leave popa addr16 mov jp dec test and dec fsubs scas out fwait clc fiaddl outsb push dec add pop cmp dec out push xor cmp arpl push or test push std ja ret loopne xchg push mov cmc adc aas dec (bad) jne mov ret mov test add ljmp es mov mov in pop loop adc adc aas pop imul popa adc cmp lret push rorb not rcll fmuls movsb leave sbb mov jae and mov inc or jmp sub mov loopne mov rol out js add fistpl cmpsl mov sbb inc lods aam lret (bad) push je popl inc test jns shrb sub mov xchg popf aad faddl cltd push sbb mov outsb mov ret mov xor sbb out push leave or xchg xor pop daa jmp jns push (bad) cmp outsl fdivl add sarl sub mov add popw std arpl sbb (bad) sbb cmp jb sbb movsb lcall inc stos dec outsb ds pop jne add sbb push stos inc mov add loop movsl enter in mov es fldenv js daa stos mov pop xchg gs adc out mov out and push enter push hlt mov call pushf pushw ret insb inc (bad) push push cltd adc lods iret (bad) stc sub bnd cmp cwtl mov or arpl jge mov mov dec pop push push add jecxz mov mov repnz fwait sahf fbld jmp dec adc mov adc mov std mov adc pop int3 hlt data16 (bad) mov adc or ret out loope cld out movsb les sbb add cs imul adc lret clc adc dec push call mov cmp ds push add aaa dec cmpsl andb fs push jae int and pusha pop add (bad) cmp lret xchg fidivl (bad) sub shlb scas mov xchg jle dec in movsl sbb push loopne jno bound test fisttp test jp shrb fnstsw or repz sub xor fwait ret cmpsl divl popf xchg dec lock in repnz lahf mov cmp data16 in pop loop sbb aaa in aad dec jle ljmp lret rcr int loopne mov cmp lahf fstpt jns xor icebp lahf xor push jmp int3 sub inc enter in rcll mov lcall or inc add xchg fwait sub jp insl lods hlt lcall repz xor (bad) out push jnp lea out jbe movsl sub fs pop and jae mov mov inc sahf mov jbe sub cmpsl push jp js shl ljmp sbb iret lea inc inc movsb sbb stos in shrb (bad) jne inc (bad) push xor rol xchg and scas or stc cli sub inc bnd sub mov cmp adc (bad) cmp nop sub dec xchg cmp fidivl in pop jmp icebp pop icebp or ret pop add add stc jne lcall hlt ficoml into ja push nop cmp ja inc adc add in jns pop sub adc std in shrb das and negb add (bad) pusha or imul sti roll sub pop orb out test loop pop (bad) add lods cmp cmp loopne or ret inc mov or pushf push out xchg sbb adc sub adc rol mov test mov adc mov xchg addl and push fdivs xchg pop jae adc je cld jbe sbb xchg shll push (bad) jbe imul pop adc adc push adc jge and das mov das gs add les cmp test inc sarl sub mov insb pop and inc xchg aaa (bad) test outsl out jno enter sbb popf push xor jp sub xchg popf leave repnz fcmovne xor jp gs in dec dec nop mov push stc stos cmc clc and mov mov clc mov mov ja or sbb fsubrl push scas das scas dec mov scas imul int cwtl push (bad) repnz fcomi icebp add xor leave (bad) or fdivrl sub lret sbb push jb jbe out or dec jns add outsl add bound pop inc jns cmp call mov clc xchg loop (bad) aaa into xchg jne in lock repz in jg imul mov mov mov pop (bad) jne loopne test sub lret or mov int3 jge std adc or sbb dec fucom mov je roll fs pop dec movsl sbb and das into (bad) cli xchg mov and jae sub pusha aam cmp dec jae aam std mov push iret pushf jne icebp push ror sbb lret jbe dec call lock mov in (bad) cs nop cmp pop les insb negl adc push aam mov add push jp xchg sub rorl mov sahf cmp cld gs jns cltd sti xor (bad) (bad) xor call (bad) pushf push cmp mov iret and or clc divl or outsl push sub ja test push pop mov outsb jo or dec pop xor adc push dec push cmp inc std push sbb test adc sbb lods xchg mov xor push imul loop xchg (bad) sbb xchg cli sbb push movsl in subb cwtl ret sub pop add out mov sahf jne mov and sub cli daa aaa dec push pop arpl lret icebp add repnz push pop sub cmp add or jae dec lock pop lret pop jmp mov jmp mov push dec jle subl mov (bad) iret (bad) xor jle mov jo shrl jns ret sbb add sub pop cwtl int inc addl mov xchg imul mov jle add jmp (bad) cmp lret out rorl jp nop sbb jecxz push xlat mov nop xor ret stos arpl test mov (bad) add mov pop xlat mov cmp (bad) ret push into mov clc mov incl mov ja in ror popa aad lahf mov xchg sarl xchg popl scas loopne adc outsl mov push lcall jmp and fimull insb push in adc inc dec push xlat repz mov jg and and (bad) (bad) sbbb and (bad) js mov jbe cltd in bound inc imul xchg xchg mov mov adc and shlb push shrl mov in mov push test fldt ret arpl out mov xchg enter js xchg js (bad) cmpsl pushf cmp mov pop or scas sub (bad) ss adc mov frstpm(287 neg stos (bad) shlb (bad) sbb xchg or sbb cmpsb loope out lds cmp sbb repnz leave dec mov icebp sbb mov arpl repnz add lods mov push lods shlb jns xchg xchg jne out adc cld lea pop movsb popa repnz (bad) testl pop sub or cmpsl add mov (bad) push test fild pop pop sub mov dec aad jecxz lret popf mov mov fucomi daa inc adc xchg or push imul in ds (bad) xor std in ret xor in jae xlat ret out sub out popa daa mov int3 aas out data16 cmp xchg xchg jp push inc ja or repz add and xchg scas pop sub imul pop push xor fwait scas sbb dec push mov and xorps (bad) data16 fadd adc sub or mov scas sbb xor mov mov jae (bad) lds mov add fwait (bad) sub mov insb jl inc jle or cmp or shll jb js arpl jg popf fcoml xchg mov decl movl js faddl inc cltd mov sub lcall data16 es pop or push push stos xchg push xchg imul fucomip bnd lcall inc push cltd sub mov mov imul adc movsl adc push enter dec mov or gs push inc sub clc mov add ficomp jg lret push sub jg jb,pn scas lcall sahf push stc and adc lahf mov and or xchg xor or push xchg add sub xchg inc or and outsb or test call (bad) add clc mov mov jnp insl or (bad) out out call (bad) repnz and pop push sbb jge xor jg dec test xchg sti and sub das fs add mov push in aad push adc xchg ret movsb or mov scas mov jl add (bad) dec adc and int3 cmc (bad) dec dec mov xchg fcoml xor mov test mov in xor ret push inc jge fs inc mov rol xor fldt stc mov das bound mov ret lock jbe push sub jp outsb ret jmp xchg mov mov or jnp xchg sbb cs push ja add out aaa lock les ljmp adc cmp push imul loop jl mov std aas dec pop cmpsb dec ret (bad) sti std sub in and jmp jnp mov fcoms imul jne stos jbe adcl add insl and pop gs xchg sub mov pop and cld dec inc call pop mov stos sbb inc xchg lods mov popl jl adcl addl or (bad) mov sub jns pop test in aas popf add mov fstpt cmp or fisttpll nop adc sbb iret inc or fstl inc sarl mov dec push icebp and fist jo mov inc cmc mov xlat pop pop xor fdivp idiv inc fcom into dec push cmp xchg aam xchg out data16 (bad) loopne,pn or in dec mov sysexit mov loopne cmp neg sbb aas xchg cs add jge xchg pop push data16 jl out (bad) fisub outsl xchg imul shrb popf mov jle,pn rcrl and jnp mov fcompl loopne and arpl int rolb inc add js push mov iret std outsb xor sub mov adc and out cmp mov lods xchg mov mov mov scas and pop ja (bad) cld outsb jnp stc add xor les subb xor push cltd and mov out sbb mov xorl mov push xchg and int3 add popf scas pop sti pushf dec aam add add push neg ja sbb pop push (bad) pusha addb sbb ret push rorl in and mov sahf inc adc fdivrp sahf shrl popf leave outsb dec sbb bound xor sti xchg subl bswap imul lods insb (bad) fisttpll sbb (bad) into jge lcall dec js xchg shr popf inc dec dec gs sti jp call ljmp cs ds leave pop adc pop aas xchg js adc aaa jo lods sub (bad) scas iret sub test adc ret popf in imul in inc cmp in sti std jp sbb inc jno data16 cmp clc mov inc (bad) xchg lock mov xor cmp aaa push pop insl xchg pop sahf sub adc pop lock je hlt test mov out xchg pop push fildl add das out jmp fidivr fiadd bnd add les mov pop inc (bad) fistpl dec dec jmp cwtl cs and stc lea test or pop cmpsb fildll das dec fimull inc into push push lret inc incl jl jbe cmc cltd insb ret inc or add push or cmp push stos outsb mov sbbl pop (bad) adc (bad) out push icebp loop xor fwait dec loopne loop mov inc xchg push out push hlt ret push sbb out add nop xor loope lock cmp and dec loope test imul stos push pop repnz pop pop loope sbb cmp inc (bad) (bad) rcrb (bad) jp lret outsb daa out inc sahf fstpl fs out sbb cmp lods adc mov fadd icebp cltd scas mov fbld pop mov aam rorb pop inc dec mov aam (bad) inc mov adc nop mov sbb dec nop pop out mov daa sti loopne test popf repnz test (bad) in sbb dec xor sbb jns in ds push cmp ljmp in cltd xchg jo pop int3 adc leave std out xlat or jne mov xor (bad) jne or jns (bad) mov or jns rorb mov sahf bound lods repz in or repnz imul or or roll mov test jl sub and cmp mov pop (bad) lods ljmp inc jae in mov add push dec or in pop push or xlat cmc push jnp mov jae rol mov enter test xlat and dec mov fs das pop das mov push rcrb add xchg je jl sbb mov jns sub pop push mov add adc xchg mov or dec xchg cmp mov dec mov and cmpsl rcr arpl mov repnz mov xchg cmp aad push push insl movsb mov stos scas dec cld sub stos test mov lahf push jne lds jo cmc cmp test (bad) pop stc int3 subb sbb fs xchg xchg les adc hlt mov movsl jno fs out jle mov in dec lods outsb arpl mov mov aad data16 add cwtl sub scas roll mov push mov adc ret dec jno push or push jb sub pop loope enter (bad) cld xor sbb cmp push mov dec and hlt xor or xor adc arpl cmp sub aaa incl outsl ds (bad) in jmp xcrypt-ecb xchg scas jno dec stos jno pop or inc addr16 shrb pop pop mov xlat test jl mov jmp mov xor call hlt dec xchg leave xor cltd mov lds mov jne or in nop das push div sub dec jmp mov jmp popa enter in testb jle jg fdivp sbb add cmp insl (bad) (bad) jmp fisttp xchg rcrl cwtl repnz sub sub pop aas inc xor mov pop cmp not in mov cmp xchg xor xor pusha lods and cmc mov in movsb jne mov jp pop jg push cltd fdivs fimull mov sbb imul jo fs mov fcmovnb mov push shr shrl lds sub dec insl adc cmp fwait mov hlt mov popa sbb mov inc es inc data16 ja jl sub dec ret scas dec leave incl dec sbb lods lret ja das rorl inc mov mov xchg cmp cmpsl xchg stc sar out addr16 mov in sbb push repz push pop mov out mov add lret or sti hlt in int mov cmp push mov andl xor mov push ljmp mov mov mov sbb adc jle adc sub xchg mov idivl and mov cmc inc or push jle js inc lcall lret arpl and mov dec mov cld xor adc push lds pushf (bad) mov xor stc mov xchg rolb arpl lret je mov cmp mov inc dec loopne pop loop dec repz inc cld aam in pop push jbe jae or adc movsl sub mov or jo data16 popa xchg jge mov sbb push sbb out std cmp repnz fild outsl adc je jmp (bad) adc aaa or cmp or hlt ror arpl mov jecxz mov mov mov mov jl or mov test or sbb roll movsb in cmc mov push adc sbb cmp rol lahf adc inc lahf repz dec push stc pop rclb add ss cmp push das xchg inc into sbb jmp clc push sbb or mov add ds sbb jmp pop push jle cmp scas xchg jle ds (bad) or xlat std jne stc mov add cmp sbb fnstenv pop sarb (bad) jo mov out jns fcoms cmpsb add and popa inc lods popf popf and push mov ficompl sbb push fimul out (bad) adc test mov loope call sbb or cld insb nop inc add data16 mov dec jecxz sub cmp pop mov jmp jno test daa mov push call and add stc jg sarl mov jmp in jns push aaa enter inc pop icebp mov (bad) aam push dec or cmc (bad) icebp push cmp fadds cld xchg sbb scas popf lods (bad) std jo jge dec in cmp and mov xchg shrl gs out or inc cli push bound addl addr16 enter in xchg ret xor mov stos loop xor push aas mov int3 test cwtl movsl cld rcrb inc and out sub jne pop cmpsb loope scas mulb xchg push pushf orl and ret jbe popa xchg orl jp pop mov in mov xor sub neg mov and push inc dec loop divb xchg sub ja loopne add sub mov fimul jle mov cli adc mov sub inc dec push mov outsl addr16 lahf fwait je cmpsl scas cmp inc sub push and or add xchg shrb push rorb outsl jno arpl mov int add adc cmp mov inc ret popa or or mov jg mov loope fmulp jmp adc jbe addr16 inc jmp mov xchg popa push mov (bad) loopne (bad) insb (bad) (bad) push jbe (bad) cmp jge or xchg dec lods xchg ljmp cmp mov pushaw fsubl pop xchg popa mov (bad) scas sub mov pop loope pushf add in adc test or cltd vpsraw jbe push pop (bad) clc mov xorb fildll xchg add rclb or xchg ljmp movsl arpl cmc enter push into jnp add inc cmp out daa sbb lock dec lret sub (bad) pop cltd fwait ret cltd add (bad) scas xchg mov sti movsb fdivr movsl fchs pop lahf mov (bad) mov xchg sub popf aas jg mov imul pop sub mov mov loop std fisttpl cmp jmp ja add mov xor dec outsb sbb or adc or lock test add adcl in fsubs cld test add push xchg pop rclb sub jne jnp push mov scas test lods (bad) push movl ss out mov stos cmc pop xlat push sub shll mov push out push or int loopne mov cmp ds or dec in (bad) xor test test in mov orb xor xor and xor mov in xchg negl cmp popf mov jbe fnop fdivrp cmp mov mov cmpsl aad sbb add lock pushf das mov inc pushf (bad) sar stos sti lds bound lods mov das (bad) outsb jo adc imull popa gs lods (bad) and fiaddl lret das out sub fsubrl push (bad) xlat push movsb lds out (bad) outsb jmp xor dec (bad) leave add add out mov sti iret les mov mov jo push loopne cwtl xor inc mov fsubrs test dec cmp pop mov stos cs fsub pushf sbb push adc xchg xlat sbb sbbl mov xchg jns cmp and je cmp sbb or std out mov mov mov adc fnsave push sub lea xchg fbld or outsl mov inc out xor leave repnz ljmp mov in mov mov dec cmp cwtl inc out out mov negb mov sub pop inc cmpsl add pop loope cmpsl sti rolb pop in lea ja xchg lods into out mov push pop xchg dec pand lds push jbe jns sbb rcr push stos sub xor out xchg movsl fcmove ljmp dec pop mov jmp lcall loop inc xor cmp mov push test sbb imul das (bad) int test push xchg and (bad) nop lods adc scas sub xlat xchg dec das test sub adcl dec mov mov (bad) mov push in xchg push xchg fwait lds xchg mov and aad sbb pop bound arpl movsl and lret gs data16 pop dec mov lret mov xor pushf imul mov adc push inc push aad rorb pop add jb mov cld inc popf enter std sahf pop lods sbb std in mov fabs fisubrl or insb xchg xor mov (bad) xor add das pop cld and lcall js jp add jge inc aam xor xchg (bad) repnz push mov push push adc mov and scas and sbb fimull mov add int lods aaa das cwtl stos jmp push mov push adc cwtl loope (bad) dec and push imul fsubl lock daa push dec xlat test xor mov int3 xchg xor and imull add outsb mov movsl mov clc imul jecxz negb pop outsb enter inc sbb or inc aaa repnz (bad) aam sub std sub and add ret mov (bad) out pop loop ss or xchg jne insl test sub icebp or add rcr outsb xchg dec cwtl push xchg ret stos fnsave lods dec pop sbb adc inc sbb jg jmp pushf sar sarb dec jbe cmpsb mov push jg add subl in cwtl dec cmp stos mov xor (bad) xchg sub add sub cmpsl addr16 pusha dec jno dec sbb das cmp jnp push add xor movsb or lret push jp jnp or xchg pop and test push sub sub push (bad) mov outsl fildll test mov (bad) xlat sub dec or inc dec das lahf insb inc cmc imul and ljmp mov push pop test mov xchg cmp jle cmp ret dec je or lock push inc sbb rolb in xor and push cvtps2pd addr16 xchg jnp push or adc dec inc push push mov xchg mov incl int out pop ret in cmc stos pop nop cs jnp inc dec xchg xchg xchg add push mov lret push repnz pushf jmp jge inc cmp add aad push test fist (bad) std (bad) cmp adc cmp cmc lcall jmp cmp popf pusha repz loope push adc fbld jbe xlat jge imul fdivs adc push (bad) lret xchg xor sti mov pop iret push dec sbb pop (bad) lahf sub and pop fsts pop sbb scas cld decb mov roll mov prefetch push clc sub repz mov pop sbb loopne dec in test (bad) jo daa in mov pop movsl sbb stos gs jb daa into cmp or std int cld dec scas in push push cli gs addr16 stos test add popf dec ds xchg (bad) cmp inc and adc jae lods push sbb mov ror add subps sub loopne test orl sbb xchg movsl cwtl lock lea mov fdivs mov push dec int add mov cmp fidivrl jge push and in pop movsb imul dec mov sbb xor push adc jle xchg xchg jle sbb add cmp idivb mov addr16 jnp insl dec inc nop cli test ret nop stos push je ret sub mov repnz cmpsb leave loop xor dec call rorl movsl mov cmc xchg (bad) cmp (bad) xor sub adc push aaa fistpll cmp jb adc mov and pop popa lcall mov inc movsl sbb sub cwtl (bad) sbb pop adc repnz call adc lret mov xchg cmp aas sbb fadds (bad) mov fdiv pushf int jns rcrb int3 push out push pusha arpl push push inc pop ds sbb (bad) repz iret mov sarl pusha in cmp (bad) mov addr16 xchg jnp inc roll mov out and cmp movsl adc mov lea rclb mov daa push mov clc cmp push xchg pop sub enter sub scas jns das xchg mov mov (bad) cli inc sub loope lds push es pop push xorl ja test pop mov pushf pop das pop insb repnz mov in push insl pop or (bad) lret xchg rol cli dec mulb jl das xchg cltd cmp and lea mov xchg add lcall cwtl cmpsb inc ljmp or dec testl mov test icebp (bad) (bad) xor (bad) ss adc pop enter cmp repz jg stos in pop sbb xchg dec adc in xchg dec add sbb push jmp xor cmc add out add xor nopl std xchg add jno out pop and or dec jne mov out (bad) jne rorb iret jle aad lea push data16 push adc lea mov mov fs fcmovb push fstps mov jl outsl mov mov lret dec inc neg xchg leave in jle inc js xchg outsl out jo imul sub or outsl in fisubrl nop cmpsb and data16 insb daa add fcmovbe pop sar stc faddp mov xchg adc cmp ds jle pop cld loop mov and cmp enter scas les sbb ljmp inc and sub ljmp jg xor nop test fsubrs inc clc and and ljmp inc and xchg lods fisubl fwait sbb cmc dec sub xchg xchg mov stc mov and lret cmc mov cmpsl rcl call xchg lods test fwait in xchg movsb pop dec dec movsb aad or ja push or or mov fsubs sub fbstp cmp xchg xor push push sub mov punpckhwd mov leave nop and lods lret cmpsb imul stc in test sub mov jg,pn popa mov aaa sbb sub or xor popf jo les stos jge mov lret mov dec push xor add ja sbb out rolb popf (bad) xchg pop pushf fistl sub out pop push lahf push mov xchg sub mov push push outsb mov fs push pushl cmpsb jb sub aad imul lock pop and fisttpll (bad) or mov arpl mov mov mov push mov inc push lcall lea jmp mov jp push std push jo mov fstl (bad) arpl add out incl push mov or in mov (bad) push sub mov mov clc jne inc into aad cmp sbb outsl movsb call sub movsl push or mov andl outsl (bad) cmp pop inc or jae push aad inc mov arpl pop fcmovnb cmp xchg ss jg stos add inc pop jg adc and sub outsl stos gs inc lds dec adc sbb jbe movsb mov ds adc pop pop stos mov call cmp push inc lahf mov or cs imul sbb daa dec mov fdivs lret fisubr (bad) cmp test scas lahf movsb cmpsb aas pop nop stos xchg sbb out pop pop enter test leave xchg nop stc (bad) stos sbb jb add lcall loop push or sub mov in sbb mov scas or ret out jb into dec xchg adc into mov mov and or mov adc push inc or inc popf pop add cs ljmp pop aas lret bound fildll xchg es cmpsl fistl or jp pcmpgtb pop cmpsb ja dec inc inc test jecxz inc push test push dec dec outsl dec in lods sti mov ret cmp mov sub js xchg mov sbb mov int3 cmpsl (bad) mov mov sub (bad) or pop pushf push inc movb xchg int dec cmp push adc and push pop inc sub scas xchg xor (bad) cmp xchg (bad) cmp aam sub jno imul mov out (bad) fld hlt or xchg cmc sub (bad) mov push mov jb adc das outsl xchg test mov pop shll xor dec stc mov ret arpl es arpl jecxz jg cmp mov pop inc loope subl (bad) sti jmp jbe sbb dec pop int3 stos out mov loopne pop mov mov push cmp addl xchg sahf cmp dec mov enter aad xchg push adc jno adc daa test jno stc or and dec adc hlt shrl xchg push clc or push jo (bad) fldcw or mov push dec stos jp mov mov pushf mov or xor (bad) ja add jg scas or in (bad) lea stc or push lods adc loop fnop adc adc jb mov (bad) cwtl mov mov sub scas dec (bad) jb add jne jb into xor xlat lods inc xchg es aad xor addr16 adc jno pop xchg jb aaa sub loop jmp cmp scas lock in shr cltd xor add ret fwait add add sbb pushf mov in xchg addr16 or adc outsb adc or outsb cli (bad) stc mov mov lock loop (bad) sar adc int test jmp mov mov push in adc mov inc pop pop inc (bad) aad (bad) jmp mov loope pop gs cmp push out dec les pushf push shrl idivl pop fnstcw fcmovnu loop dec aad loope pushf cmpsb pop out jge add add xor pop inc lret int cmp jp sub xor mov out mov sub xchg mov cld xor lret mov pop mov xchg popf dec iret test mov xor or push and lods test fstl and adc fs data16 jbe jns jae out mov int3 je adc push mov adc dec jecxz orb jo popa dec xlat dec cmp inc add sbb aaa xchg div int (bad) fisubl aas adc leave mov (bad) daa jmp rcrb jl (bad) iret cmp mov add xchg jne sub int decl xchg pusha lods and (bad) (bad) call pop stos push cmc lock mov pusha jg popf pop jne enter movsl (bad) pushf push push cmp test in push sub out pop jg jge adc ret pop fstl notl cmpsb repz jns clc das movsl or jb mov mov push mov aas mov push in xchg notb loop mov fs pusha pop fwait add mov (bad) jmp dec xchg outsb jae das mov mov add mov rol xchg repz inc sbb test dec jno fwait rorl jb pop sbb mov sbb xlat in out push lock mov mov dec sbb insl inc jae,pn scas dec fbstp bound fwait jb jae lcall sbb sahf pop inc jp es ljmp mov loopne inc cmp xchg push (bad) std push mov fadds pop xor ret push jb aam cwtl cmpsb mov cwtl push xchg sub pusha add (bad) (bad) loop cmp fwait and inc lahf (bad) les aad pop or pop cmp or or xlat fdivrl shrl les int3 fnop push pushl fldenv sbb in dec xchg bound scas clc pop sub movsl xor cs sbb jg popf push mov dec adcb xchg sub data16 cmp jmp cmpsb pop dec mov xor mov mov scas cmp sti xor dec movsl leave test ds sbb dec (bad) sub inc cld hlt or or js push jmp mov ror push sub cmp out int3 xchg paddsw inc int cmp xor fist xchg in mov sbb out pop pushf inc cmp or (bad) ljmp jmp sahf das fcmovbe mov mov fwait xor loope bnd ds inc rcrl inc test xchg push jl mov sbb scas in inc cmp enter jb dec pop inc (bad) pushf sub fldl inc jo xor inc mov jnp push bound jmp xlat cs sbb insl inc int3 test pop or (bad) idivb fdiv fsubr in and pop out jp leave pop call push sbb sbb out cmp fidivr aad jo jl push idivb dec aad xchg add int aam xor repz adc add or ds and cmp xor ja xor mov or push mov imul and jp orl xchg test scas ljmp dec jecxz in leave jmp sbb push popa ds inc sbb iret push add sub lcall movsl pop jmp add adc popa and pop adc push inc negb repz adc (bad) mov test push or insb xchg or jge clc mov pop jo jo loopne mov sbb or (bad) lods fst inc jp sub push scas daa inc in mov js ds add outsl out dec ja push dec divl lock mov sti pushf pop and loope repz mov push or loop fldenv inc ds ja cmp push fdivr stc add (bad) xor mov jno in out (bad) repnz jns mov pop add jl test bound xor mov jg xchg insl lods repz xor push fimul ret dec daa (bad) gs and dec bound inc or fildll pushf inc or mov int lods scas mov test (bad) sbb mov shll jne insb data16 cmp xchg cltd cs xor adc into cmp xor sbb shrl push mov mov aam daa or sbb mov mov cmp xchg jb fucomp pusha mov inc jle add cmp push and nop mov nop add and and cld out mov addr16 test pop scas cltd lcall jl imul or mov inc es (bad) sbb test pop repz cmc mov cmpsl int xchg dec or or aas std in push clc ret ss mov pop rcrb sahf jbe icebp or cmpsb pushf xor jmp stc movsl repz outsb jns js and inc in mov push mov shlb jmp enter mov mov testl lahf pop xchg pop sub xchg ja jecxz lds and repnz jmp sahf inc jne in sti adc and adc pop adc pop jecxz (bad) dec push pop and stc test mov test or in aam loope cmp outsb stos cmp fwait (bad) test mov es arpl test nop adc mov xchg loopne dec out divl pusha pusha lea fs inc test mov xchg jnp cltd mov cmp roll fisubl cmp pop insl shr cmp xchg inc sbb dec ljmp aas cmpsb sub fistpl (bad) fs repz and cwtl jns fcompl movsb dec icebp adc lods dec sbb pop add mov adc (bad) and xchg daa sub ds (bad) adc xchg mov sar xchg (bad) je xorl mov es lret dec les add xlat adc xchg jmp xchg cmp addr16 mov aam mov cmc jle pop notl fistl sbb leave or jno push pop arpl mov jnp pop xchg push nop add aad fdiv xchg pop and cld loopne mov mov addr16 in mov cmovno jp xchg scas (bad) or repnz int3 cmc rorl sub cmp xchg cltd jbe fdivl and or sbb fist stc adcl scas fdivs (bad) dec orb in addl lods xchg pop clc jg mul jmp cmp pop sti sti jne sub pop mov lahf mov (bad) loope (bad) xor (bad) hlt mov movsb push mov (bad) (bad) call add pop inc mov sub pop loopne jle sub or xchg and xor jbe jge push xchg push cli push outsb or out lods ja cwtl aad lods (bad) in pop add adcb mov jecxz dec lods loope sbb inc mov xchg mov and sbb jo sbb daa lret and cmpb xor mov mov adc pop mov adc loope mov outsl mov aam ror push sub mov stc shrl aas leave ss cmp xchg push inc push repz xor les repz adc cwtl xchg roll mov or cs rorl xchg add pop sub cmp jg sbb pop lods (bad) int3 mov (bad) (bad) dec ret push (bad) fdivrp mov and test sahf jmp out in xlat dec xlat jmp (bad) pop xchg test cmp cmpsb in push push pusha std outsl movups xchg xor pop or (bad) iret out ljmp inc fildl leave lret dec mov cld stos sbbl inc ljmp std or loope or scas mov cmp sbb adc mov scas out cmc mov pop outsl push sub lahf mov paddusw xchg cmpsl movsb sub push jle mov insb or sub pop push push test stos xchg inc aaa and je push imul pop pop popa adc push jmp and sbb xchg xchg jl cmp cwtl cmpsl jmp lds (bad) lcall or cmp fwait push xor mov ss mov inc pop jecxz mov cwtl push or push mov shrl btr inc mov sbb in dec push sub mov dec mov jecxz add daa ret shlb ret mov cmp and jg popf inc icebp dec ret cld leave inc pop adc popa jno mov test into push and add mov jp int3 cmp push cltd jno mov dec popf jle negl push scas inc aas mov lahf and mov aaa lret stos pop insb das mov (bad) sub adc lahf push mov and fist out dec sub cmpsb push fwait repnz sar pop das pop inc stc pop out pop push sbb sbb ret outsb (bad) jne pop mov push out mov cmp daa aam and dec jmp sbb in mov mov out mov imul imul xor es add inc movsl inc out test loop push jbe cwtl jnp fs jbe call sbb sub loope cmpl pop mov mov add or push mov sbb and insl mov ret or cltd push sbb xor repz pop or adc in mov insb sbb or or fildll push mov lds sbb push jge dec sarl ret ret and and xchg inc (bad) push mov and dec adc scas xchg movsl mov xchg mov pushf imul imul (bad) jmp call in aad inc sub ja lea lret in pop (bad) leave movsl push add lret leave mov jb jmp data16 iret sub dec ljmp xchg jge or lods add enter hlt ljmp leave jecxz (bad) icebp mov icebp shr or mov lahf icebp add ds add dec inc jecxz pop fstpt enter lcall pop outsl cmpsl mov mov cmp mov out dec sub push (bad) sub gs lds movsl cld sahf in lret jp out add outsl clc cmpsl inc sub inc stc sub push jmp or in (bad) ret daa add add dec xor pop jp adc fdivs mov int3 ret sbb mov sub inc mull mov and icebp mov (bad) jecxz push in lods xor rorl and mov insb add inc insl jl lds inc fsubl adc sarl cli push insl inc mov adc sbb xchg std lcall and pop sbb aaa xor add add jp cltd cwtl xor cs cmp jg xchg out add sti pop xor inc cmp mov jge mov sbb cpuid mov xor repz pop pop or stos leave rcrl arpl pop aas data16 or xor inc mov in leave (bad) sbb push dec mov mov cmpsb mov jp fwait out out sub cmp mov (bad) icebp aas ds cmp inc imul (bad) cmp lods cltd outsl jle push fs inc push mov sbb je cmp sbb in mov and fidivrl stos adc push jecxz bswap push cmpsl out xlat cmp push mov jo xchg adc (bad) mov pop jb mov shrb mov ficompl leave cmp push int xchg push adcl gs out pushf push adc in lods cmc repnz or push lock rol cmp aaa or mov je pop sbb in jb sbb sbb jae jnp sti xchg jmp stos lea and mov (bad) jnp pop data16 jecxz xchg mov and mov enter dec pusha xlat push leave add jno das aam jg fwait ljmp (bad) xor dec ja cmp repnz call push lds into cmp mov adc sbb pop pop or push mov mov sahf sbb ret pop pop fistl cmp std scas in cmp testl push xchg mov sbb repz ret pop fs sarb fidiv mov cmp pop bound sbb cmp int3 cli push push pop sbb aad lret out sbb in sub jae inc lods fistp out sahf xchg scas jmp and sbb loope (bad) jo loopne add inc lea mov fnstsw sbb insb mov mov push sub loopne sub or dec lahf in bound into xchg adc ljmp xor in mov pop pop xchg je inc nop aam call adc cwtl dec fldl jae mov out sahf mov addl add xchg cld pop jp mov add and mov into dec xchg iret stos jnp aaa sub pop aad insb mov xor add stos sub jg xor iret inc adc lret (bad) out pop cmp popf cli sbb push jb jl (bad) cld push lahf (bad) fs aam jmp jne jle xchg adc sbb dec fmul pop int3 imul sbb mov adc daa xchg loope ror dec mov and xor pop stos test xchg pop ret sub pop sub push and add jnp push sbb jl mov test cwtl pop xchg mov mov xor lahf xchg les mov push dec jae scas adc mov jns or (bad) cld daa dec cmp jmp daa cmp mov push aas test mov test movsl inc pop sbb sbb sub popa mov cwtl or js outsb sub cwtl push pushf jg cltd lea hlt push push notl or in repz jno pop stc and add jp nop fwait xchg push cmp jmp or xor cmp pop add (bad) mov hlt addr16 sbb stos sub jecxz lds jno inc or mov pushf jecxz and inc test ficompl cmp or or test cmp mov das (bad) (bad) lahf pop inc inc mov or xor pop inc cld std out push sbbl push dec inc arpl in mov shll in movsb mov sub cli lret repnz jb xlat loopne aad inc imul jge sbb fwait inc sti mov loop shl xchg inc inc insl push or adc adc je out cmpsb lea xor jo enter in or xor push bound jno inc inc je inc jb lods jmp in fidivl jecxz in in decl flds hlt dec (bad) sub lcall add pop mov inc add movsb aad daa int xor fadd cmc or push enter and fwait test inc sbb inc dec push lret mov hlt popa push and cmp inc repz push sti lea inc loope in xlat and lds fistpll es stos mov les dec xchg stos mov dec xlat sbb sub inc jmp bound cmp sbb (bad) mov fst and ljmp das out push dec ret sbb adc xor (bad) pop loopne mov mov xor aad push cmp cmp pop and dec lock cwtl push cld add or pop insl dec leave cmpsb xchg cmp shlb mov andb jnp repz lods add or ljmp mov sub sub sub dec jle mov andb push pushf add adc lcall into push jo into mov dec jo mov mov nop and push or jecxz test lds in lcall aaa xchg adc lods mov sbb sbb imul gs sbb popf in mov es mov cmp fsubs jne lret les (bad) out imul sub inc lcall sub dec insb insl pop fmul sbb cli pusha lods add mov push test mov cli xor int cld (bad) xor out dec mov mov into addb jle fs mov sub jo mov aad enter lods orl xchg cwtl cld loope mov in mov sbb adc adc sub sti das rcrl out push inc out push pop bound les fiadd ljmp jmp loope mov ret fcompl icebp mov loope jmp arpl cwtl fwait aam jbe add movsb dec xchg inc ds lret add data16 push mov movsl enter add adc into sarb loopne xor cmp xchg bound fsts jo mov sbb xchg lret fistp loope push xor nop push (bad) mov lods aam loope add aam enter dec cltd and enter cmp jae pop pop roll ret or lock mov and mov es and jae fwait sbb pop pop jnp lahf xchg lock (bad) mov clc and (bad) enter cltd out (bad) push xor out cmpsl mov mov jno fldenv mov call cmp movsb cmp push cltd xor sub movsl daa lea int3 xor xchg lods jmp je (bad) mov mov popa mov icebp and jecxz imul pop mov (bad) movsl add gs in iret mov xchg scas jge,pn test loopne movsl js jecxz xor push and mov lock out lret insb sbb data16 push mov jns loope gs mov or inc push ret cmp cmp cld pop icebp (bad) mov and mov jmp test push rorl pop cwtl cs sub pop xchg and out dec decb pushf clc xchg xor lret lar mov push into pop sar movsb rcl xor out sub mov test mov mov jg lahf (bad) xor dec fnstsw cmp push (bad) and jl jne rolb sub out cwtl sbb call adc sbb xchg ficompl js,pt sub inc cmpsl jg pop aam inc mov dec mov adc je stc dec mov pop fiaddl (bad) lock scas jl mov adc js (bad) xor cld fidivrl fnstcw cld adc ret ljmp sub xor inc enter xchg xchg add jp dec jns push in xchg ret xorl or inc andl push cmpsb and add sub (bad) xlat ljmp xchg pop outsb pop sbb test dec mov pop xchg mov dec (bad) ret jae ja repz jb add cmpsb mov or mov addr16 mov int3 loopne (bad) fild push int lret xor jp sahf (bad) cltd xor xchg test cld (bad) gs out ljmp je ror push push xor xorl lahf test lods sbb sbb dec pop mov aam mov dec and lret addr16 adcl dec pop adc aaa shll insl mov out (bad) jbe (bad) and mov xor sbb xchg scas js (bad) aad add lock (bad) dec mov (bad) decl jbe mov popa or pushf push mov cmp push icebp in mov fidivrl icebp dec adc sarl sub jl scas xor jne xchg fldenv sub dec dec pop add jge outsb imul nop inc rclb loopne jmp in and inc sub into mov sbb es dec lahf neg add dec pusha les std sbb adc (bad) cltd repnz sub or add nop mov cltd (bad) aaa into pop scas fsubrl outsb test mov inc fcomps jecxz inc pop xchg repnz rcrb (bad) and xchg (bad) sub pop not sub pop mov xor (bad) aaa cmp out sub push jne xor sbbl (bad) xchg add (bad) jb inc aaa jmp mov xchg jle jb xor jo xchg lahf fadd lahf or push mov (bad) jb dec imul dec sub das xchg jb or mov loopne xor and or or inc and dec shrl xchg out int (bad) pushf movsl xor mov mov (bad) jecxz lock sbb jle adc inc imul adc aad xor lods add push and in adc add add dec rclb cs pusha adc push pop and rcl jl jecxz cli pop int3 adc (bad) cld dec imul mov xcrypt-cbc cmpsl roll add les lcall incb addl jp into fwait mulps and lock popa popf jbe aam adc sahf nop push fstpt orl cwtl hlt xlat or jae sub inc les outsl imul cmc mov add movsl cmp pop push fsubrl jno aaa cmc xchg sahf push aaa repz lret and jmp lahf popf pop mov leave lret movsl ljmp add jbe xor lret push inc cli enter and int dec repz lods popf cmp dec outsb cmp adc mov push mov stc andl arpl dec mov pop scas pushf or sub (bad) pop xor fucomp int3 imul push fs pop insb jo or cmp mov push pop cli pop in inc lods out pop test notb stos pop cmp call lods sarb push sahf pop mov int std adc or rcrl push push popf mov jns cmp mov test push aad push mov (bad) stc movb add and xchg iret icebp or lahf inc mov lcall pop lea or arpl (bad) sub mov stos mov les pop pop xor inc cmpsl (bad) mov mov sahf add leave mov lds shlb int3 or pop inc lock sub dec aas mov jbe lahf lods imul push jecxz jg mov inc pop pop and xor xor push jne inc cwtl xchg mov es pushf in xchg mov and xor imul adc rcl mov fadds out test jecxz or jne sub scas xchg outsl and push push or mov inc cmp in dec pop outsl cmc lret push xor sahf cmc lea xchg stc idivl out jbe mov mov push sbb insb imul xchg addr16 dec aaa and push (bad) ja test aas xor enter insl dec pop movsl add std ja iret mov stc iret or add sahf push lods popa xchg dec mov cmp cli inc adc popf pop mov jnp scas cmp sub mov pop inc pop aas (bad) xlat (bad) out jne dec cmp lods cli fsubr rcll (bad) fbld fsubs xchg fstpl mov dec push aaa dec mov fsubrs je (bad) sti std push pop push pop mov in aaa inc dec mov xorl outsl cs out jnp sbb sub jne dec mov (bad) clc lcall loope dec jecxz pop push out jge imul loop pop jns sub loopne jno insl mov or out mov cmpsl (bad) fistpl inc mov or lcall in fsubr das not enter popa jl arpl test adcb addb and addr16 inc jle mov aam (bad) iret jbe cmp jmp and add push dec lea sarl shrl loopne sbb roll xor cmp xchg rcrb cmp add sarb inc sti xchg mov shll ret mov push and dec sbb pop (bad) cmp pusha sub cli sub jnp cltd jmp int3 mov daa out pop movsb pop push test mov insl push xchg sub and pop push les scas jmp cmc push add sbb mov fadds xor in xor fxch xor dec inc sub imul sbb int stos test aad sbb push pop mov scas lea mov insl mov outsb das sub fsubs comiss sar mov iret in movsb cltd push movsb add cltd pop adc icebp adc or lcall stos (bad) lcall lods das dec fisttpll ret test aaa mov sbb xchg mov in adc xor jecxz sub mov lea xchg mov inc mov jns fs mov push sbb jmp dec test push daa test mov jns scas imul push mov in inc nop fadd inc jo adc mov push push (bad) mov hlt outsl add pop ja inc inc sub imul lret cmp ss or push xchg stc outsl fnop loope or loope pop insb cli dec jecxz aaa jbe out mov jb jg out mov rcl mov sti dec mov xchg mov stc xor int pop add cmp mov mov mov push and roll out mov pop jno xchg dec imul pushf popa mov pop mov jae clc pop ficom mov or pop lret imul dec sub out cmp fsubs xor into in enter sub ret imul xchg cli inc notb sub adc mov cs sbb std push leave mov fisub push jne push stos in pop mov repnz mov add scas fmuls rcll ret outsb jle imul sbb mov mov (bad) ficompl adcl enter mov dec inc dec movsl dec lods aam lea outsl dec push and pushf outsl fsubrs out push inc push or je ds into test rclb dec xchg inc mov call push enter pop jno mov negl cmpl test cmc outsl test movsl jp mov sti adc rclb pop lods insb rcr arpl or stc loop push int jns and xchg test pop pusha test call mov pmullw jl in cmp dec test inc jg add mov add dec rcrl jo js pop sub and in (bad) mov stos push xchg (bad) aad sub (bad) push push inc push aam mov mov add (bad) frstor popa iret jno jbe aad xchg mov popa cmpsl sub je xchg mov push outsl fsubl push xchg (bad) rcr fs stos int3 sahf push mov es cmp lods test ljmp adc jg rclb rcrb xor nop sbb jbe jo push mov mov pop pushf jae shl jecxz je ja add es pop sub arpl pop mov mov arpl popa int3 aad add lds repz mov cmp call clc aaa and pop call lds in jp out pop push mov mov cld mov cmp outsl jb loopne jne dec insb push xor or aaa adc call sub add pop pop addb daa mov js adc mov mov jmp in jne cmp jne xor cmpsb push mov add lds lea cmp lods cmp mov mov dec pop fldt out rcrb mov mov xor or scas mov mov adc xchg ficoml mov fmuls rcrl xchg and xor sbb mov imul insl fist test dec loopne and ret add (bad) popf cld push mov out imull push push sti (bad) adc repnz mov loope lds test (bad) mov pop pcmpeqb lds decl (bad) mov add mov (bad) in les adc push sub push pop jle adc or xchg bnd je xchg mov outsb and pop dec and push sub pop outsb clc sub loopne in xor (bad) cmp mov ficom xchg into stos or xchg cltd inc cmp (bad) gs jbe mov push icebp pop push jae push mov cmp popf fistl push ljmp mov add mov pop insb ss push test ficompl inc in stos sbb into jp add jecxz nop sbb mov popa je xor sub push dec cmc push xchg push xchg stos xor test leave mov xchg enter xchg fcmovb and mov jle inc shlb pusha mov fdivrs rorl add and mov rcrl mov cld lock and test lahf mov ret stos pop pop jo bnd mov je and cwtl cmpsl add (bad) cmc (bad) lock icebp mov negl sub push adc and in xor or inc sbb xor ja jae jne test sbb mov mov cmp inc pop inc xor cmc mov dec push add aad lret inc rep cmc aaa test cmp jno lahf adc fwait mov xchg inc aas mov ljmp rorl mov xchg jb cmp aaa sub cmpsl push mov adc sbb push movsl orl rclb inc sar lcall jg jecxz nop sbb inc cltd cmp pusha ds mov adc mov pop pop lods sub testl mov pusha movsb and hlt ret repz xor (bad) out jecxz (bad) or jne incl mov dec roll leave test mov pop pop lods mov repnz and xlat test bound xchg (bad) ds sahf aam cmpsb test dec sub adc mov and shrl sub mov xor push xchg mov fsts repz sub mov pop mov scas aam int3 sbb shrb jbe or add cmp ret sub js sub insl fcom push jmp into add add add andb pop cmp adc sbb jno or flds mov fwait inc fnstcw and ret and lea dec pop push cmp jae cld jns stc fprem1 rol fisubl repnz sub lret sbb icebp xchg and decb cld mov push sbb ljmp dec jmp cmp imul sub push lret sub clc mov jecxz jb imul sub leave daa fs test (bad) xchg movl push loop mov pop adc cmc movsl jbe out sarb stos mov push aad outsb popa movsb mov insb sarb jbe nop subb dec cli push je sbb hlt sbb pop push mov sbb add cli sub mov mov jno (bad) negb arpl add aad dec rorl sub adc xor adc cmp and mov cwtl mov mov mov lret mov mov add push xlat mov ss mov (bad) mov repz pushl fwait xchg adc add inc pop jb xlat xor jge xor fcmove mov inc lcall inc inc std mov sahf jecxz jae in sbb xor inc mov ljmp jle add sbb insb lret fdivrl adc mov mov mov jno push ja mov sub sub fldcw sahf shrb cmp cmp outsb jne add rcll lret push xchg mov iret mov pop xchg adc fs test adc iret dec mov inc ret mov jb mov and mov jbe sbb sub mov fcmovb rcrb fdivrl enter lret test outsl pushf xchg jmp cld cmp outsl cs aam outsl (bad) xor cmc out sbb popf data16 pop (bad) jns lret push xor insl push pop inc jecxz or xor dec hlt jae jns dec out fstps sbbl sub sbb outsb lahf mov dec mov leave iret das cld in sbbl lea je pop pushf or jno fcoml addl pusha imul pusha mov push cs dec push test pop (bad) xor or movsl (bad) ja rclb pop aam adc mov (bad) cwtl add jl xor xchg push sub xchg mov cmp int out (bad) jmp lret dec (bad) lret pop push in dec jno push imull dec lret aam mov ds call cmc pushf push or sbb pop mov mov cmp jne pop xlat mov je mov sbbb dec cmpsb push mov dec dec mov mov negl add adc cli iret adc fbstp stc int lret testl mov inc fcomp fiadd add scas mov push mov test sub pop adc (bad) jae jl xchg ret lret nop in shrb pop daa test in mov mov es fisttpll loop adc or es fisubl pop jns cld test sub mov inc and mov add dec sbb lcall xchg out mov or xchg push mov mov lcall ljmp ds pop mov lods xor sub test mov leave xchg jns jmp into out in push (bad) push mov mov test in inc nop rcrl out jo adc call daa jbe mov push or out cmp or sub loop mov insl add add jl push daa sub jle shrb push add mov call inc sbb push mov mov pop insb out movsb push jno dec or shll jnp mov das cs mov movsb sub mov cmc mov ficom movsb pop popa movsl icebp inc ds insb pop add mov es decb cmp lret jle fnsave (bad) testl imul and adc lods repnz (bad) push repz and jecxz dec sbb jmp repz dec xlat rep fwait shrl dec xchg std and aaa ret outsb adc inc ret push push mov daa fist (bad) adc cmp repnz in or push icebp add mov clc add xor push dec mov cwtl adc cmp out push scas pop dec imul cwtl cmpsb adc and js rcrl rcrb cs mov aas or or insl scas xchg jge sti pop mov ret in sbb (bad) nop insl les data16 mov mov dec rorl scas sahf xchg imul stos ficomp rcll aaa (bad) jmp push std xor xlat dec cmp fimul negl int push sub (bad) sbb outsb adc jnp cld mov das test (bad) push xor pop mov (bad) mov and pop mov fucomi out add rcll or test std jle fwait mov or (bad) dec sti push out repnz lahf negl iret mov mov adc jle sbb ret popa (bad) dec mov lds mov and pop mov lods mov or mov mov mov mov aam addl xchg lds add or pop mov (bad) int3 (bad) mov jmp mov push jns jecxz in push xchg scas sbb adc out inc and push in arpl sub ret jmp mov leave popa mov movsb mov pop mov lea inc mov pop and test mov cwtl inc push mov scas cmp mov pop insb cmp mov inc test int3 int3 dec scas loopne aam movsl js fchs or mul mov cmp inc cli pop adcb mov push aad push mov ljmp mov inc cmpsl or push jle xor push sarb jne (bad) roll push enter sbb cmp (bad) in ror cmpb loope add pop add mov cltd std loope das push sbb cltd push int int3 and sahf out shl dec cmp in jb lahf lret js inc ljmp (bad) aaa sbb ja fisubl pop loope shll fsubrl aas sub std sub (bad) mov and inc mov adc sbb add je orl ret jecxz cmpsb fnstcw stos cwtl (bad) jl fdivr xor gs sub fisttp sti xor pop xor sub fimull les push imul inc push nop ds and (bad) jmp fisttpl cmp sub test setae enter lock sar orl and xor repnz and gs ret push mov int3 push data16 (bad) mov jmp push or inc (bad) cli sub push scas xor test jne lret fidivrl or dec in imul js xor lods jp push add jne mov neg loope pop popf (bad) cli xchg and hlt data16 push add in mov ljmp mov mov cltd fdivr and mov xchg cltd andl (bad) sbb jmp ljmp mul ss sub std sub rcrb in jne loop int cmp cltd xchg arpl ss lcall and fnstsw or cmc mov jmp pop jl dec add jnp rcrl (bad) aaa sbb das je push add sbb ss dec mov pop ror dec cmp xor mov mov stc leave (bad) mov jl inc jne test (bad) cmp outsl cwtl (bad) jne outsb enter mov mov rclb aad and pop stos lret aam ret sarl pop lds jo xchg adc and (bad) fwait adc mov insb aaa shlb sbb pop and fbld repnz xor hlt fmulp test daa div test xchg xor xchg pop add das dec lcall data16 int3 (bad) jno sbb loope rcl and sbb sbb cmp cltd xchg push fmul inc sbb mov mov mov dec xchg jge ret cltd xor (bad) hlt movsl and inc mov ficomp lahf or inc movl fstl dec test jae aam (bad) or and scas ficompl lds inc nop insb mov sbb mov xchg push stos mov (bad) aam push add inc es or in jo loope repnz dec and mov addb fcoms out sub ficompl sti cmp dec xchg sbb pop push mov pop cmpsl xor push fdivl int3 jbe and push sub out push nop pop mov clc ja pop add fisttpl (bad) je mov xchg cmpsl sub add push push mov rol sbb push sti fldcw sub test pop cmp mov push fisubrl lea mov sub or test in inc fcmovb push push mov mov out inc sub sahf mov sbb sbb loop push in adc jle ja,pn mov inc pop cmp repnz mov cmp mov pusha dec sbb in orl xchg mov dec pop push cmpsl pop inc or xchg movsl jno pop adc add scas push mov popf pop sarl cmp jo loope mov call xchg out hlt mov mov mov mov rorb dec dec test add lret or mov or push fcoms push push aad (bad) fstl xor jp mov leave mov ljmp lret cwtl repz push loopne jge jno dec pusha mov in out sar mov push int pop push pusha push test mov ds fnstcw xchg pop rclb sub roll add xor rclb and sub sub mov cmp (bad) mov add jge mov loopne pushf cmp mov mov and sarl (bad) ja push lret jmp ja es in pop aas cs repnz fadds mov xchg push mov xchg mov mov or aas dec movb lcall movsb iret dec jmp sbb add (bad) or fstpt (bad) add scas pop adc mov outsl xchg fwait shr fs mov dec xchg push sbb ljmp mov jl lret cmpsl cwtl sub notb adc insl call jg mov add je push test pop je mov or and xchg dec xlat data16 jb roll in jb int3 icebp push je fstpt pop mov cmp imul fisub mov dec jns mov cld into adc xchg leave sbb mov jne ds fcomi inc mov in inc or adc in mov out popf and mov roll in fdivs sbb cmc jecxz or rcrl dec push sbb andps jo aaa (bad) mov add insb adc dec mov inc es add repnz fidivr cmp push cmp les xorl ficom popa push shrb cld mov add ret arpl fnop pop push jae add fs and add movsl gs xor push jle xchg cld jle mov lea mov sbb xorb cmp sbb dec dec addr16 mov xchg jae or cmc mov jmp dec jmp sbb xor (bad) xlat outsb flds test sbb mov cmp jbe or enter pusha jle dec adc andb clc sarb out pusha mov jmp xchg push shll add call out aas or cld push cld loop mov pop xchg adc clc mov jp fnstsw or and pushl push pop popa pusha sub (bad) cmp iret xchg xor outsl ljmp jl xlat cld mov cs ficom dec fimull mov adc jnp idivl sahf add test ljmp adcl cmc out dec jns sub icebp sbb adc test mov dec es cmpsb scas (bad) fstpl and cmp popf sub pusha inc jle xor xor add loop or out cmp sbb sahf dec lds incb sbb adc cmc out icebp lds dec shll inc sahf stc outsl loope inc mov dec (bad) pop sub sti clc in gs jmp mov or sahf mov push in (bad) mov scas std mov test aad pop add cmp and pop outsb jecxz test jbe mov (bad) mov dec jmp stos movsb xor fcmovb cmp push inc sub dec adc je addr16 loope (bad) and inc je inc xchg loopne rcrb gs clc cmp mov scas xor shrb adc xor xchg cmp cmp int3 pop cld push stos jmp add sbb in lods jg pop sbb cmp pop stos mov mov xor pop cwtl xor push push mov movsb dec loope and (bad) (bad) dec test mov mov and inc push pusha mov repz inc jb jmp or rcrl cmpsb mov and scas imul jnp fcmovnbe push mov popa sub push adc dec fsubs mov ljmp adc outsb dec cs inc aad xchg (bad) loope ret push fwait inc jbe inc push add sbb push cmp adc mov or adc mov xchg push sub dec es or xchg xor loop gs sbbl cmp movl mov inc mov scas mov add sarl rcrb push in inc jno ss cmp inc out (bad) fidiv lods imul fsts arpl cmc add aam (bad) fcomip ficomp lcall and xchg push scas das mov sbb adc push cmp mov and pop push stos sbb daa mov add or push nop push addr16 push fisub dec sbb ds pop jbe scas inc leave push out ja (bad) pop jbe sahf lahf popa sbb hlt fmuls pop ficompl adc mov inc ss cmp sub (bad) jo outsl push pop dec sbb xchg sub rcrb mov enter dec movsb in cli xlat ds pop js pop jb arpl mov sub popa cmp sbb jp mov cld mov xchg call scas add divl and push pushf mov xor adcl pop je addr16 inc rcll cmp pusha mov mov and cmp dec xchg (bad) push sahf push test stos lods das loope imul adc test add jns mov inc rcrl xchg dec std loopne fwait adc imul sahf mov sti stos mov push popf xor ja fucomip mov jle add nop je nop inc repz fwait out lock mov in out shrl push add enter fisttpl or or fimul rclb loopne out jno in pop aad jmp ds test mov leave mov nop test mov dec dec insl imul pop xchg test dec rolb pop mov cmp outsl fdivl push sbbb fwait ja repz (bad) xor inc in dec adc mov xchg mov jecxz js (bad) dec ja scas xor pop fdivrl dec jmp and sub xor jmp jo enter fldcw lcall sbb rcll fcomi or sub int3 sbb xchg jae and pop rcrb jne cwtl or lea xchg lcall (bad) call push mov xor inc dec je dec pop in movsl jp sbb pop cmpsl imul jne lods sbb push or and popa leave push cltd mov and out mov hlt test clc call push loop inc outsl pop dec outsl dec jmp mov dec cmp jb inc mov lahf test pop ficoml sub push fcoms fnstenv int (bad) mov push sbb or mov inc inc push mov adc cmpsl dec out xchg xchg lret movsb jae insl jne cmpsb or mov test clc pop int xchg aam outsb and sbb imul in sbb stos popa enter fdivrs and sub or xchg inc insb int3 dec out int loopne fsubr test jb in rcll (bad) adc xchg je repnz cmp push insl xchg iret in pause dec add scas lcall pop push mov (bad) mov lret pop stos ds lcall mov stc push cmp rclb popa aam xor (bad) sbb int3 roll in dec jo fstpl xchg add mov test pushf loopne shrl add lret dec jo inc out cmpsl add push lahf rclb adc (bad) xor test and mov xchg aad push mov xchg mov pop pusha data16 cmp ja jg or loopne sbb fsubl into pusha adc fsubl orb iret xchg mov cs sub jae pop leave mov pop pop cmp push mov lret shl sbb fistpll popf cwtl jp stos adc adc fidivr cmp stc pop xlat ja sub push lods sarl mov fiadd push inc aaa mov in into and aas (bad) mov push or sub push adc push jecxz ds fsub fmull pop push loope add and out mov gs test in push pushf loop fldenv jae aad rclb ljmp rcrb cltd insl add mov in cli int dec mov sub sub cltd or aas xor sub push scas dec xchg xor push out fsubrl jae jg mov scas sbb icebp mov push andl std arpl mov ss push xor mov cmpsb (bad) mov xchg ja pop jbe dec fwait bound mov fistp or xchg mov aas pop xor jp xchg loop and xchg movsl es lds xchg pop mov sti sti dec jecxz iret adc adc mulb jg cli push jp inc in mov xor outsl push adc fldcw data16 push cmp imul sahf cmc mov aas pushf fistp outsl pop ja or aad aam pop mov (bad) lcall mov (bad) cmp pop or cwtl cmp mov xlat cmp mull aas mov hlt rclb in and in in cmpsb or push mov addr16 dec (bad) xor add aam mov xchg mov cwtl push hlt xchg aaa int and pusha mov mov fidivl int push cs mov out mov (bad) and and jns inc fisubl adcl jno xor notl shrl jmp xor mov pavgw out xor mov push sub xchg shlb lret xchg ds fiadd jns icebp icebp push xchg fdivrs add fstps xor sbb insl add adc mov cs jbe mov sbb mov cmpb xchg out mov add das sub pop dec push sarb xchg mov fistpll hlt jmp test lds sub imul push dec xchg inc sbb mov pop sub sbb imul lcall xor stos iret lods fcompl outsl pop pusha adc xchg xor jmp call out mov sti jbe nop js pusha xor imul cmpb sub hlt dec push enter out sub or movsb sbb inc push xor clc xchg pop cwtl aas sbb mov (bad) notb in push add xchg lods sbb (bad) in es and dec or xchg push dec fcoml jbe pop push jmp xchg ljmp xchg stos in mov sub mov pop and mov mov mov repz test sbb adc fisttpll push hlt inc and cmp inc das repz test sahf pop inc xchg negb xor aam add xchg fidivr outsl push add push push bound jbe jns test or mov mov leave in aam cltd add pop aaa xchg and lret dec call jno divl or or push aad dec cs pusha sub sahf divl movsl (bad) mov rorb mov in fildll xchg lcall jecxz mov lret inc psllq sti mov cmp mov sbb lret xchg repnz pop jge xchg scas xchg xchg fnstcw sbb add push popa sbb pop pop jge push xchg cli or mov mov aad in sahf (bad) rolb mov and cld (bad) movsl xor and adc sub jb dec inc push sub in mov mov stc inc pop push sbb ja mov dec fidivr xlat popf cmp pop insl ss insl ficoml jp jne and je mov mov lret mov push mov cmp aas (bad) dec cmpsl es testb and push mov xchg (bad) iret pop (bad) or jp mov enter cmp out inc mov inc lods mov ds fcoml inc ljmp jle add repz pop xchg mov or hlt outsw mov call test cmc cmp xchg lret and pop (bad) aas push xchg xor (bad) rol rcrb pop out or push pop mov pusha or jo ret mov orl pop stos inc xchg ss jae addr16 test adc adc mov xor mov sti shr sub pushf out inc popa sub fucom push push fistpl mov pcmpeqd out xor mov push outsb jg cmp cmp fstps mov inc sbbb cmp cwtl push mov arpl mov push pop mov push data16 into (bad) xor test mov lds or lahf mov cmpsl ret sub insl jo dec or xchg js xchg enter fs xchg lds aam mov imul xchg sbb fldt test clc add jecxz jg inc pop and jmp lock sbb and in js jnp popa xor ds and fisubr ss push adc add cmc (bad) jno and lret ss or push jne scas add mov push les (bad) mov in sub sbb je es sar fldcw mull sbb add jns cmp inc sub ljmp xor rcrl mov inc sbb adc mov lret imul (bad) fmull push ret stc lods in adc imull aad (bad) xor ret fadds insb sbb add or adc jnp out mov call add rcr cmpsl sahf (bad) pop aad adc mov out lret dec xor cmp push xor out cmp cmp jmp add loopne (bad) mov xor lcall push gs in and jmp mov (bad) aas gs insl into add or xchg aaa (bad) mov in and jle icebp xlat jae jno aaa inc outsb test or inc xlat test hlt push xor stos aaa (bad) pusha sub lret add adc or ret xor popl (bad) push cmp xor cld push ss fdivrs adc add mov jle fstps push inc cld daa pop dec adc lret mov frstor stc rep lock sub push aad mov xor add sahf dec fisubrl lock cli sub (bad) in (bad) cmp imul loop cwtl negl mov xchg mov and add pop jp icebp sub mov fisttpl in aad xchg sub stos insl out mov add xchg andb xchg jg jbe add fsubl pop fidiv (bad) xor daa jmp or pop aam cmpsb cmpsl in ljmp or add aaa fimul std aad push cmpsl mov (bad) popl mov lods inc dec and shll gs imul pop jbe jle aas add bound loope jg lcall xor ret es fildll rcr mov idivb shr push stos popa negb pop adc loope xchg out or pop in test outsl sub mov inc mov and and cmp sbb mov fsubr fistp adc mov mov mov cmp clc test ljmp sti mov pop and aaa pop mov (bad) insb imul lds sbb or les push push sbb adc sbbl test imul xchg mov xor (bad) pop fwait adc fnstenv inc push lods xchg mov fsubrp scas (bad) cwtl xor xor lahf (bad) xor xlat stc push mov add jno adc jne imul mov inc dec rolb mov icebp push and les fisttp lods jg jo jmp add sub addl fisttpl fcmovne xor je bound inc cmpsl pop or repz fistpl insl aaa mov cmpsb push pop insb les (bad) jnp sbb or mov nop cmpsl jnp and sarb test lret push jle push gs inc sbb and arpl and xor or not sbb inc fdiv xchg gs xlat dec sahf cmpsb and push out xchg lea fs mov repnz icebp or popf hlt repnz std stc pop cli test cmc xlat jp sbb (bad) cmp add or add jns jmp aam (bad) mov outsl xor dec add dec mov test (bad) pushf cwtl and into dec adc sub mov pushf mov ljmp (bad) jmp loope scas dec movsl pop loop mov xchg rcrl xchg rorb test pop mov push popl xchg (bad) clc out outsl xchg lods lahf xchg sbb roll pop nop add or lcall out fsubl outsb lcall ret cmp mov sbb xchg xchg jae psrlq out cli decb lret nop push data16 sbb mov push in sarl mov xor push mov sbb inc xchg cmp fdivs xchg mov cwtl je or aas (bad) leave push out jl ret mov out lea insb jmp leave add out leave loope or or adc psrad loopne gs add stos dec xor jno mov popa pop scas cmp aaa lea xchg push dec adc (bad) xchg jmp lcall adc push clc addr16 or test ljmp notl stos cli pop movsb push ret in mov jl into mov repz int3 push test fcom cmp es mov cld push or and shr rcll add pop mov stos jmp test dec enter sti mov loopne mov xor pusha pop fs movsl dec cwtl push push add xchg or out iret push inc int pop mov mov in or pop inc push xchg mov push rclb ficoml imul cwtl xor jp mull test inc mov (bad) fsubrl push xchg push in sub pop cmpb dec adc shrb add or (bad) repnz popa xor insl aas es in fmull es inc (bad) rcrb mov pusha mov rol movb fstps int push clc lret je jo jmp popf movsb sub cltd push fdivl lods pop mov jne jge and push mov adc pop sbb or lcall inc sbb xor push fsubr pop fldt mov jbe push mov test outsl mov sarb pusha test les add and stc jg xorb mov int3 loope mov xor scas xor jb int3 pop test cmpl sub pop xchg cmpsl mov add scas sub lock and push pop daa sbb mov and dec sbb flds aaa xor test test cmc mov cmp es hlt (bad) xor cs dec jnp pop xor sahf in int push (bad) jo sbb dec movsl (bad) scas push xor lret fwait dec aam add adc add push and push cli cmp jg outsl movsb or mov mov flds repnz mov jno push mov adc shl mov or popa std shrl ficompl jo xchg jg push inc pushf orb push inc (bad) jbe fidiv pop pop (bad) pop fildll int mov mov div repnz les push fiaddl xor push and out out repnz loop cmpsb mov fdivrs dec andl pop mov cmp push add gs aaa add ja xchg adc add adc mov mov call push cmpsl cmp ljmp cmpsl fcmovbe (bad) and in and inc cmp aam ja or mov cmpsl inc xor addl insl loop sbb int3 xlat pop mov push rcrl aaa sub mov in or sbb lret dec mov sub and sarb nop pop mov subb daa loop jno mov xchg fisub inc pop rorb sbb rcrl ret dec popa jns,pn int xor (bad) adc mov imul jno and mov stos loop movsb popf arpl fisttp or fwait cmp dec out xchg fbld out lret outsl es stos sbb movsb daa jns inc jae arpl push dec add test xor inc inc xchg sub (bad) cmp mov outsb xchg (bad) adc mov or ss lods (bad) inc movb rcrl out cltd jns cmpsb pop xor mov outsb cmc addl mov ret std fsubrl (bad) je fdivrl scas lret lods insl jb sub xchg sbb mov xchg fadds xor mov out sbb test sub aad insl inc mov fdivs xor stos clc jno loopne negl lods sub sbb sub xchg and fistl call cld pusha in enter ljmp (bad) das pop test mov mov cltd and ror jb int3 xchg cs xchg stc clc aaa lret dec popf call js pop leave xchg fwait lock (bad) icebp fsubrs sub jmp fldt lods add mov cwtl lcall stc adc rolb out push sub dec or sahf xchg inc ds pop pusha cmp jmp cmpsb push jo in mov sbb cltd popa adc mov jno cld ss pop insb xchg or push gs xchg hlt jmp jns push mov cmp or push push cmp (bad) fsubrl (bad) adcl ss push ja mov int3 test dec stos sub mov jno inc jge cmp loop jp ss pop jp mov repz (bad) mov sbb jb inc (bad) addb repz ss mov mov xorb rorl (bad) je lret xor cmp int push inc nop outsl mov mov imul movsl scas mov inc cmp inc (bad) (bad) in (bad) gs push cli lea cmp xchg push imul adc push mov and lods xchg ret sarb pop sbb out das cmp js mov xchg mov dec or aam xchg stos cmp or hlt std loop addl mov andl and adc xor insb sub add mov mov jns out (bad) adc adc loope lret push cwtl mov dec adc mov sahf testl fist jno sbb pop mov mov pop jb outsl push inc je sbb dec mov and adc lahf loop sbb inc enter push les cmp popf lret daa dec mov mov popa mov (bad) mov in nop cld (bad) enter ds cmpsl sbb xchg mov cmp sub mov jns add incb hlt ficoml test out inc (bad) (bad) dec pop or ja fistp rcll adc jns and cmpsl xlat lret jge or clc push sbb push jbe fucomip xchg sub into jle push pop popf push (bad) lock xchg loopne iret or imul es nop mov jae into test das jg add jb cmpsb mov xor out add (bad) sub imul repnz cmp push mov test jo daa add push and lret int divb inc cmpl pop xchg sbb jecxz xchg out xchg rcrb aaa mov jl imul incb jle call out push std out icebp ret nop inc insl rclb pusha mov xor jo out sub xor dec jnp jae outsb popl pop or mov mov cmc xchg jbe lea fprem mov add adc out test add push xlat (bad) and push cmp notl not dec or ss pop test pusha lods adc add out das mov jae je mov lahf push dec out xchg sarb insl pop les aam icebp xchg daa xor rorb clc arpl lcall or mov mov (bad) push cmc push jp jp adc mov cwtl xor cmp (bad) loopne push test (bad) sbb cltd dec and inc jns sbb outsb xchg sub xchg lds inc addr16 (bad) push mov popf mov ret jbe push dec xchg jae aas jbe sbb inc rcl int jnp and mov jge stos xor (bad) lock loope ja out lock xchg or inc testl add mov sti mov mov adc add inc iret clc xlat rclb lret pop jg mov jmp and lods test (bad) addr16 into dec cmpsl jle daa aaa iret dec pop or or shl xchg xor jne lods out mov aaa jb mov in es fsubr fistp addr16 xchg push mov mov enter mov mov cmpsl xchg and ret dec xchg xlat lcall dec xlat std sbb xlat xchg adc lea xor sahf push sbb into mov jmp cld cmp jle inc test adcl cmc test xchg fsubrs arpl lods in pusha mov aaa inc adc xor sbb sbb pop jae adc and jo and and sbb addr16 inc stos daa fidivr aas aaa addl adc xchg sub test rolb in data16 mov sahf lahf (bad) loopne es stc ret xor es xor jnp jl pop and cmp mov push ljmp mov in inc xchg pop dec js int cmp ret rcrl xchg jmp inc jnp dec xchg dec and cmp lcall and adc add adc lcall bound es sbb xor and std subl cmpsb lahf xor or adc dec add (bad) adc pop bound loop fldenv mov jae mov mov push std ds and mov (bad) jp insb insl cmp cmp mov mull ret test mov push in jb in and mov adc xchg jbe jp xchg mov ret jmp xor jns inc push rorl inc mov in xchg jo stos fisttp in push movsb cmp add iret push sbb (bad) cmpsl popf adc xor inc cmp cmp call (bad) cmc jae ja cmp mov inc adc or inc push mov clc cmp movsb dec inc lcall mov xchg mov inc mov popf dec faddl ljmp movsl inc subl dec xchg mov je xor push jo mov int sahf jecxz cltd fimull sbb xchg (bad) lock jle ss adc cmp pop mov fildl adc int (bad) fsubl out mov pushf push inc stc cmpsb and andb xor adc imul jle cld pop loopne in fmuls jge mov dec (bad) jmp (bad) dec mov adcb add xchg in dec (bad) pop push push lret stos pushf jno fcoml scas lea mov out cmc mov outsb into mov insl xchg xchg insl mov es (bad) jl lods aaa movl loopne or orl outsl push xchg cmc out out pushf or and sbb and in jp fstp and adc arpl cs inc mov push loopne stc or enter xchg (bad) stos test xchg and js frstor ss mov add and lcall pop cmp pop ja add inc (bad) out sbb popa sbb cmp cmp stos jbe,pn ficom jle enter adc loopne xor push fwait pop loope mov loop fmul imul xchg jo sti mov in cs insb dec es ret fs xor dec sub icebp mov aad ret lock push inc pop je push and jecxz jns rorb adc push cmp pop out push repz aad aaa (bad) hlt movsl inc add cmpsl xchg mov repnz (bad) xchg mov ja shrb rorl adc enter sub shll cmp jns mov (bad) nop pop push mov int3 cmc cmp pop mov xchg lea xor xchg push daa pop mov mov mov xchg inc mov sbb mov popf out fildl push insl push jne mov stos push or lock jbe xchg fs and and inc outsb fmuls xchg jbe insl cmp pop dec into test mov inc out xchg add fsubrl xor push xchg insb xlat mov push lock dec out fwait test mov sub cmp cmp movsb xor cmp ds out pop push cld jae mov (bad) aam cmp xor cmp push ret push xor cmp cmp mov repnz loopne mov pop jo out movswl jl js xlat addr16 push mov xlat rclb add fwait (bad) jne repnz jle sahf mov (bad) xchg cmp push out cmc int cmpsb insb xor movsb jb sub jne mov xor mov cmpb cli xchg push nop pop inc push leave in mov sub cmc ja fs push mov fcompl push ret popa out inc mov and mov ds inc ja arpl jp nop mov repz push sub cmp roll fwait push sub and clc nop stc sarl out sub aaa ret inc push xchg into adc out adc movsb daa sub in jmp cmp add (bad) push add xchg push dec lods sub in cmp push pop pop int jmp ja sbb imul (bad) jae xor fs mov int jne movsb imul out cs and mov xor pop stos pusha stos pop ficomp xchg sub xchg push cmp lcall in sti jns sbb and and push in andl push pop (bad) pushf int3 insb dec orl fdivrs shlb daa xlat popf sti das out xor mov jmp mov negb mov call xchg fcomps lret out and xorl pop and add mov dec into lahf adc add scas jl jge pop xor outsb incl mov call popf jg mov sub mov fwait (bad) jg jno push rcrl (bad) push rcrb in add push ret ret jecxz popl pop scas mov inc xchg int imul mov fisttpll (bad) int3 mov mov gs jno (bad) (bad) jmp cmp dec test outsb xor pop push clc adc lahf mov inc sub loop inc imul dec adc push xchg int icebp bound mov mov sub xlat mov stos and adc inc add xchg xchg jo pop xchg pusha leave fdivrs lods aas int js push test int3 enter xor sbb cltd jnp sub xchg scas mov out or pop je test or mov js int3 mov ret js cmc lea jl push mov and sahf nop jo mov ljmp leave sbb sbb fdiv cmp rorb arpl jge xor je in (bad) fcoms xlat decl cs arpl dec adc test mov sarl and (bad) mov scas out test (bad) outsl outsb push or int sub aaa iret pushf iret (bad) lea jb popf xchg jecxz cmp fmull cltd shrb int3 adc (bad) imulb pop cli xor push xchg and (bad) pop xchg sub push mov inc jecxz inc scas adc psrld sbb adc ret aad rcrb xacquire out sbb sub aam sbb sete mov sbb sbb xchg scas mov rorb in clc scas add mov sub sbb (bad) aas mov mov fidivl std mov jnp cs push xor mov adc pop cli ja add xor cwtl mov mov mov dec push addr16 (bad) icebp dec dec mov inc fstps call popa les xor dec or jnp fist dec negb (bad) vmovdqu inc popf daa in adc cmc xor pop enter pop mov push mov pop (bad) push inc fmull mov idiv (bad) or notb mov push cmp sahf and inc adc repz movzbl dec mov dec push adc dec mov push addl mov push leave mov addr16 inc xchg inc push mov jns sahf das sub xchg outsb xor lea mov and test xchg loope xor xor push fnstenv out cmp mov lock in out jge pop adc xchg aaa fwait sbb mov adc shll mov pop div loop mov das into sub jno (bad) fisubl pop mov cmp xor js mov pop data16 pop or add sub pop lret sub sub pop (bad) pop test mov push addr16 imul ss rolb stos mov jge repnz add sbb iret cli sub jns test adc insb loop push push into inc jle out pop xorb ss mov pop xor inc pusha (bad) mov push aam inc cs divb pop or dec mov or mov (bad) movsb jp imul xlat (bad) loopne movsb dec sub or inc imul in dec jnp fmulp lcall imul mov imul in jno fimul gs jo (bad) mov icebp insl jne add push push es pop addr16 adc leave (bad) adc cmc and and shrb fs ljmp popa adc testb outsb fldcw rorl gs sbb loopne add in xchg leave fxtract cmp pop es outsl fnstenv (bad) hlt enter add in bswap inc pop rcr loopne aam sub cmpsl sbb mov (bad) dec jecxz jl in inc cmovp ret ret sbb sub xor aas pop das jecxz ds mov pop dec test sbb xchg enter push test push fistp jecxz mov dec dec cmp mov cmc int mov in xchg lea push xor cmp mov or ss insb cmp mov lock pop jge jns pop mov adc mov mov add inc mulb jns inc arpl mov push and fnop dec loop ss push jp adc sbb or xchg mov dec inc (bad) mov xor ret cmp cmc push orb fidivr sub ret in add in push mov (bad) or out sub jnp mov jbe in or in stos inc sbb mov dec hlt xchg pusha movsl and in jg arpl jns cmp test mov pop iret data16 mov pushf nop xchg cmpsl call inc adc pushf orl xor ljmp sbb stos or call cmc sub mov (bad) mov mov sar arpl jg dec mov push lahf add fistp cs xchg pop repz sbb es lahf rcr lret lea xor jno push xor cli cli fisub clc pop lret mov adc lcall pop push pop loop and jns les fs sub das push outsb dec mov loope fs mov adc or or test int3 jmp loopne stc jb adc or enter dec int3 addr16 mov xor sbb es xor outsl xchg xor pop add cmp push jns pop sub (bad) push lds fs pop fwait inc pop mov inc ds push or sbb dec push xorl scas dec or int3 cmp mov nop std rcll int stos call xchg dec dec adc das imul xchg jae jecxz dec es adc lret mov mov (bad) mov mov add in imul push mov jne nop/reserved movsb data16 jb,pn pop hlt or pop sub mov aas and pop scas out push push mov mov adc sbb (bad) mov outsl push xchg push adc push sbb xor lahf cmp je adc js mov insb sub les stc xor or data16 add leave nop int3 out mov rol (bad) xor pop mov pop lcall stos xchg mov xchg push icebp mov xor inc mov mov repnz jecxz scas out ss sub pop inc mov mov lods xchg nop or movsb xchg in cmpsl or ja and inc ss mov sbb dec cmpsb push sub aad push inc fstps out push loope xlat cld add jbe mov imul (bad) jns jno xchg mov xchg push jecxz ret gs lock push xchg (bad) daa adc push pop dec cmp xor in jmp (bad) sarl movsl inc sbb adc adc add imul fwait sub (bad) xor fmuls sbb mov (bad) xchg xlat ja pop xchg sub mov icebp pusha icebp push xor push aaa (bad) cmp je sub mov cmpsl mov adc outsb push int3 or jbe popf pop cmp in in cmp adc mov test dec sub fidiv add gs sbb add sbb std pushf jl sbb fcomp mov or cmp js movsb pusha lock imul sbb lret inc mov mov mov mov mov out adc push mov rcrl mov xlat (bad) mov add rcrb jle push or icebp push and int pavgb xchg jge sbb mov aad jle insl outsl add in mov repz dec pop movsl fidivr fstpt or mov xor sbb inc mov sbb sti mov sti mov xor in sbb leave lea fnstenv outsb das add and mov mov jo push push outsl nop sbb loopne movsl mov test pop sti mov hlt lcall pop sahf lods cmp enter addr16 adc enter inc lsl and es cli or imul das add call and jecxz or xor lds dec je xchg stos adc fistpl pop cmp push js jge aad push cmp fs push cmp movb dec cld idiv scas in dec mov push sbb sub mov movsb ljmp cmp gs xor inc pop lcall jo mov into xchg fidiv mov push ror pop sbb arpl test adc fwait pop into stc in (bad) iret jecxz movsb loope das les sub hlt je adc sbb hlt lds std cmc mov mov xchg bnd mov rorl add test cmp adc (bad) jb es mov mov jl pushf adc push push (bad) scas pop adc lods dec lahf and push xor adc jg sbb outsb or (bad) sbb adc sbb in inc or loop negl jle (bad) adc lea cmp add repz fdivrs stos sbb jmp cmp lds mov or loop xchg pop leave outsb pop popa xchg pushf cli es mov ss hlt push imul test mov or push pop cli lret inc and sbb loopne ljmp in sbb xchg and mov dec fwait jg xchg (bad) and gs push scas pop jb je js cmc outsl out rclb or test inc lods cmpsb aad cmp cmc ret mov dec sahf add push sbb xor xchg add rcr adc jbe aad adc ja mov mov stc test sbb add ss mov or add inc lock sbb in popf jle add mov mov daa sbb popa push add in xor add sub pop out push dec mov fstpl call enter imul push idivl and cmc and (bad) daa xor add pop stos les lea dec mov data16 (bad) cmp mov inc dec lods jecxz les popa xchg icebp es dec jb daa lods sbb int in xchg test pop sbb enter addl daa mov (bad) adc jae xchg push mov daa addr16 ljmp or mov cld cltd push mov add popf test or hlt fwait test mov arpl js mov in xchg mov enter pop pop cmc xchg in jns and fs push jbe mov js jb ret sub jno xchg repz call lods add cmp popf dec or xor xor cmp sahf sub jae jae jp pop clc xorb jmp mov jb xorb inc pop (bad) xor jne push (bad) mov popa inc push subb call ljmp test sbb xchg mov loopne xchg sub mov addr16 push sub imul or jg arpl dec daa fdivrs mov fisttp rol outsl fildll imulb jno incl mov dec sub xchg mov das (bad) dec loop daa mov sbb loope adc leave shrb pushf inc and mov sbb mov sub mov or jne inc xor es clc test gs ss lods test xorl sub inc mov xchg es xor pop pop (bad) addr16 xor pusha xchg lods jecxz add fimull into add stc shl pop mov adc jno aad jge add adc pop mov stos (bad) dec scas int3 sub xor lcall and ja arpl jge and push mov pop jb jo lods insl inc push dec mov inc push xchg std in xchg (bad) lret cs push pop and cwtl sbb mov xorps xchg mov push lret lret les inc xchg xchg aaa adc scas xor sahf cmp mov mov push sti daa std test lock addr16 and lock es sub divb mov je sbb mov lret pop mov dec xchg lods or mov (bad) xor std fistp fisubl jmp mov mov (bad) leave pop pop stos and adc shll xor jb test aam stos and cwtl jns ss mov fcmovbe push jl jl sub mov enter xor xchg inc insl nop mov dec mov and push adc ljmp fildll decb sbb (bad) xor push call cmp loope fistpl pop push (bad) mov mov add inc out or adc stos rolb or ret and iret dec movsb (bad) sbb jecxz cli addr16 dec into (bad) out pop xchg jnp jecxz xlat (bad) fucomp lds repz sbb mov cwtl test xchg mov or imul adc and mov lcall jb add ficomp and sbb popf cmp lcall and push jl jo out icebp inc push insl sbb jp mov mov ljmp cmp aas xchg dec push jnp cmpsl lock repnz jmp sti mov (bad) push ja sarl sub cmp sti or and xchg jecxz loop and cltd stc fcmovnbe aad std test (bad) imul jnp jl push jmp adc inc pop push mov add (bad) out mov jg out mov mov adc pop jl das in xor dec sub sub push pusha call mov dec repnz xor mov inc fadd pop xorl cmp fcmovb clc les mov dec dec pop xor xor gs pop mov cli ja dec lret loope push imul push jbe mov imul hlt stos xlat pop fiaddl and lods mov inc subb pushf ja ljmp lret (bad) jg out std sub inc cmpsl xchg pop push mov loopne or push addl push dec aaa add jns mov mov mov mov inc out xor pop sbb jecxz pop in mov push sar push add loope test (bad) push xchg adc mov sbb rcr xor mov mov sbb shlb fidivr mov mov lret mov aaa mov add outsl sahf xchg pushf cmp repz mov jge adc stos add add in dec inc pop pop ja jecxz mov flds test mov dec test inc (bad) fndisi(8087 bound xorl clc mov sbb js loope inc sahf test mov push mov aaa push decb push dec repnz test aas xchg cmpsb or xor inc adc and jne cmp js cltd jle push (bad) test dec xor sub pop testb dec xchg stos (bad) mov lcall test sar (bad) fcoms push das rcl aaa xchg and ds (bad) jb lcall ds aam or inc xchg xchg push es sbb addr16 mov adc (bad) or add or push arpl fistpl (bad) iret dec mov inc lock aad testb mov out xchg mov mov pop push add dec stc out adc xor add sahf mov inc and ret insl hlt into xchg inc insl enter (bad) in mov lock sub add decb push mov pop test mov fsts lcall es in sbb jnp push aad lcall cmpsl mov insb and mov and (bad) pop lret or sbb lds ss lea bound push push dec inc int (bad) xor push fisttpll lods in dec sub dec fstp mov jnp inc sub aad push sbb pop lock adc lea hlt aam cld ljmp jb and movsl (bad) hlt sar call movsb cs lahf pop push lcall mov push sbb js lea nop push mov adc (bad) lock jge repz jl iret mov adc cmp xor test xor xlat rcr fistl jmp repz andl sub jp inc sub pop inc adc into push (bad) pushw or jmp mov mov cmpsb sub or fistp xchg jns mov loopne in add rclb xlat cmp outsb xchg popa test jl pop push into or sbb clc and adc sub jge cwtl pushf sub sub inc scas insb in mov or push inc fstpt mov sub push adc pop movsb xchg adc movsb or in pushf rcrl jg jecxz lret adc jnp std xor adc (bad) jbe jbe ret stos (bad) lahf daa jge xor loop cmc sub cltd or and outsb shll mov xor cld mov scas out push test xor call cmpsl cs cs scas cmp xchg or xor or fdivrl jae inc mov push cmpxchg ljmp enter mov xchg jo jae sahf push data16 xor addr16 inc fistl mov and aas mov sub or cmpsb out cmp mov sub icebp or mov or inc adc je les push popa das inc pop hlt pop cmpsb add rorl cld das addr16 dec in cmp (bad) mov lods out jnp fstl popa xlat stos lods push into cmp and sbb sbb ss (bad) std or iret cmp xor push (bad) std aam incl arpl cmovbe pop or jle sub sbb fbstp push cld mov push xchg mov add loope aam dec mov xor sub rorb xlat push mov jne xchg mov cmp or sub inc sbb xchg sbb test gs add jbe enter pushl in inc mov lcall inc xor cmp push lahf pop loopne mov and add nop movsl test js aaa lods cmp in (bad) dec mov cmp xor or jge xchg lds test pop pop pop imul sbb xor push push inc test rol es mov add stc mov pop adc mov daa mov sub scas pop das loope shlb into pop inc pop std cmp pop pop mov inc mov imul cmpsb daa and inc mov cmpsl les inc fildll mov in movsbl cmpsb sbb mov inc push sub scas mov pop or xchg push imul out roll test cmp fucompp pop out adc or or or inc mov sub pop pop sub push fwait jp fild xchg pop es cmpsb movsb test inc icebp lods pushf pop adc adc fbstp mov call lcall dec nop movsl (bad) pushl pusha sbb arpl jne (bad) jge sbb jg ret fistl sbbl mov ror xchg cmp pop mov dec mov mov pop mov mov sbb sbb mov or les cmc and mov mov cmp add cmc les cmpsl popf adc je call nop fwait xchg xchg pop insl pop xchg add xchg pop sub imul stos loopne loop sbb jns xor into imul daa imul lret (bad) or sbb mov dec pop jnp xor cmpb test (bad) mov lret sbb adc and stc sarl adc dec (bad) scas xor pusha insb pop aas mov cmp cli mov xchg push and scas dec sub cmpsl sbb pop add sbb xchg mov dec xchg outsl or xlat call (bad) xchg fbstp mov sbb inc (bad) mov xor pop cltd xchg push jae push sbb fsubs int3 hlt insl sub lock xchg adc xchg test popa rcll sub faddl in push mov scas aaa ret and xchg sub or xor stos jmp aam mov (bad) fs mov rcr les mov pop and aad cwtl test rorl xchg daa (bad) aad cld fildll adc loop mov push in inc enter and lock xor mov icebp xchg adc loope sbb xor adc push ficomp loope add sub push sar inc fcmovne dec (bad) pop add mov daa ss and test adc ja or fisubr int gs mov and mov fldenv jge push loope mov icebp ss ljmp ficompl notl jno inc dec push inc rcrl sarb lahf mov in pop sbb mov inc (bad) test sarb jle inc inc sbb fidiv mov mov dec inc aaa sub stc notl gs dec mov les or add xor out cld imul jecxz xor mov ret rcll mov pop (bad) xchg xlat sbb neg enter cltd jg dec clc push call mov scas jmp adc mov nop jo sbb out scas dec sbb or jnp mov inc cmc repz pop jno sbb mov mov loop das mov xchg xor (bad) dec mov stos out ja cmp sbb int3 insb jp das push cmp pop pusha mov (bad) xor nop (bad) je ds es into jns imul jl push iret jae xor add jb or adc sbb int cmp mov fstl jge cmp add mov mov mov daa das nop xchg xlat push andb push dec pop loop xchg out into sbbl bound andb loope dec stos sbb adc sub xchg inc push mov es jecxz dec imul les pop out push push cmpsb sub in addr16 test mov es loopne jmp je lock mov insb sub repz jmp add push movsl aad push cltd jb lea and sar or nop adc ret enter jmp outsb pushf dec mov aas arpl cld test fmul sbb jge xor sbb mov push inc shrl push push (bad) mov pop nop mov pop int3 cmpsb push mov mov dec xlat xchg cmpsl out arpl out mov test and dec mov fwait lret daa dec jl lds out (bad) and cltd adc in mov outsl add pop jno add ds push push aas fildll push mov ja ret cld mov sbb sbb dec fcompl sub push sbb push xor push mov (bad) jle (bad) lea loopne clc adc sbb dec dec xchg pop (bad) jecxz push add sub dec push pop mov mov adc mov adc or lods aam or sahf cmpsb fmull int mov mov mov std cmc xor lret and in pushf frstor imul jbe xchg sbb dec bnd (bad) push out inc jle sar jmp mov fcomip je pop outsb xchg mov pop pop mov add std jne mov adc jo cmc sbb fadds push inc insb push nop add shlb pop rcll adc aaa sahf aad repnz in arpl ljmp popf inc xchg mov into push (bad) jae mov xchg mov arpl xchg adc shlb pop les add jg mov xor pop aam mov push sbb add cs hlt les jns leave jge dec lods adc mov sbb xlat push pop fs lock push test test or movsb mov dec jo loope xchg add cmp enter lahf repnz push cmpsb add mov in pop mov in test mov and jno ss loop mov mov sbb mov int3 pop dec stos mov leave sbb add scas xor mov dec adcb cli jle mov aas push test mov sbb xchg popa pop scas push push insl icebp ds insl in push cmc inc ja mov in (bad) aas sbb daa fadd addl lahf cmpsb outsl outsb mov stc je enter inc subb xor push pop inc (bad) nop lods add in sub mov adc jne cld and loopne and cli and ljmp (bad) xor add jmp stos mov cwtl out ret loopne cmovge xchg xor lcall cwtl js cmp int and shlb inc jno push sbb je sti mov push pop out inc xor out or not cmpsb sbb pop insl cmp leave push or fisubr test xor cmp mov int3 jecxz in jno stc and stos pop mov cmp xchg mov repnz mov mov (bad) cmpsl shll lahf inc lcall mov lods aad lock cmp lods (bad) es mov insl mov jg mov mov and and fist (bad) jns add enter sub mov mov and inc xor sbb mov jo lret ret js push inc inc fs dec insl out lcall jno shrb daa xor cwtl into jmp inc aaa int3 push aas jbe mov mov mov mov ss lods out into or cmp fisub dec loopne sub and jle add lcall sti push push imul test add aad inc push hlt add push test mov or xchg fsubr out xor fstpl cmc jns jnp dec (bad) sub movl mov repnz push fxch jb sbb lret push popf stc lock xor test pop push jecxz add in cld push pop mov aas mov and push mov pushf bound popf insb jo push sbbl lds jne push push or enter in adc cwtl movsl push pop push jmp push sbb fs xor or leave pop shlb arpl subl (bad) imul jmp std push push or repz pop sbb push movsb sbb mov jecxz mov js scas das fwait cmpsl int3 push bound (bad) dec inc xchg pop int3 xchg xor ja cmpsl aad jmp cmc aas mov fidiv (bad) ja or push fldl xchg mov mov adc fxch jmp lret push dec loope outsb sub sub roll repnz mov fnstcw (bad) iret sbb mov fstpt jg lods mov movl sahf pop jae mov push popa (bad) pop int push fist sar out dec or add loop icebp xchg (bad) mov negl loope pop add cs nop or hlt out cs lods lcall xor addr16 xor sahf pop scas (bad) dec jmp sahf test mov sbb pop aad cwtl dec add or jle push jl mov sbb in xchg (bad) lock (bad) jmp out jge mov lds and rol jbe fildl inc aas adc ja sbb loop lret lods cmp cmp mov and xor subb addr16 adc mov push addb and cli jo mov pop inc xlat push sbb or adc rcll lods sub les enter push jnp loope xchg pusha add divb jg gs xchg insb outsb and dec mov mov and imull mov icebp sbb lods arpl jl imul (bad) cmc (bad) sbb dec mov mov jns (bad) fdiv loopne test and adc xlat loop xor inc pop dec xchg mov pop jg aas fisub lret pop incl pop mov ss mov xor data16 mulb clc xor rcrl stos xchg inc adc pop daa fucomp sub push and pushf sbb adc xlat mov andl pop insl cld sbb mov les ljmp jo jle pusha lock aad xor (bad) add pop (bad) sbb sub into out mov sbb cmp inc sbb fld1 dec mov mov out inc sub push xchg ret das mov mov fs fld adc movsl mov pop jle in or (bad) scas lock lods mov mov out or idivl and lret outsb mov (bad) or scas es push rorb pop aad imul dec out inc add in test mov int3 sbb xchg add mov xchg fst nop cmp or test mov pop ja mov mov nop inc pop cmp mov mov and sahf pushl mov add jbe adc mov loope mov mov sbb (bad) push scas dec xor xchg xlat dec ljmp jg pop fwait lcall mov scas pop jb mov dec push scas pop repz xor dec (bad) jne jecxz (bad) xlat sbb push incb mov push mov push fisttpl mov movsl sbb shr out jge hlt std sub push xchg jg aam mov insl rcl sbb xorl push and cmp decl xor jmp into cmp lods cmp cld ficompl dec rcll jecxz gs inc movsl dec add sbb in adc fwait les int3 adc cvtps2pi roll dec dec js mov shrb addr16 mov jno cmpsl (bad) pushf or ret pushf jg add in ss imul fstps or push jb pushf lea adc or xor adcl dec mov push popf sub and jecxz test rcll lods shrl pusha push jecxz test lods sub adcl push aas mov cld mov loope or xchg cmp jp (bad) bound fs jg stos inc pusha rorl xor mov jbe stc test and mov rcl aad dec iret addr16 outsb imul jmp cltd cmp or mov add orl jne and mov cmp in xor divl lret jb push stc pop mov xchg notb sarb xor shl (bad) and cmc inc cwtl fs jecxz iret inc or cltd mov sub dec mov cmp pop dec sbb or loop or adc and mov jle js pop xor push cs ljmp dec insb sub pop sti mov fcoms inc push aad cltd popa sbb sbb push pusha daa jae add fidivl push test cmpsl mov imul dec push dec clc adc xchg xor push jne dec mov cwtl sarb xor add pop lret xor ljmp outsb dec or into pop lea cmpsl shll push out sbb icebp imul aam fiaddl stc lock adc mov shrl test and pop lahf imul cmp fidivr mov inc data16 int3 aaa adc nop mov icebp cs mov call xchg inc jbe imulb mov data16 imul mov call repz mov jmp mov xor xor repnz jge inc push push insb ss movsl repnz adc sub push loope fcomps daa xchg inc mov maxps sbb mov loope lea xchg inc jnp add enter mov adc ret mov or daa lret mov inc loop lret movsl cmpsl xlat add outsl insl mov out xlat push cmc adcb mov cld cli and adc or cli in mov xor mov mov jp push add lret iret out adc cwtl mov jbe rolb xchg add mov out and push mov dec inc pop cmpsl sbb ss lahf fimul insl inc jae enter popf pop cmpsl mov and je pop and pop jmp jae in (bad) mov push out and mov jb sbb pop mov cmp ljmp add in (bad) mov mov rolb add cmpl bound jp scas jns lock ljmp imul sbb or sbb cmp mov sbb lea mov xchg jb mov cmpl add arpl ret adc or jno adc js or js mov cld arpl sub lret cmp mov lahf xchg jnp rcrb in dec (bad) (bad) mov jp jb pop dec pop jp pop pop jmp pop stos sbbl int3 fdivs jl mov out jle mov fwait xchg aas cwtl lods xchg pop mov sbb or test add les es lcall push adc mov lea add lret or and jl xchg add lret sub jbe int les loop sbb bound push fwait movsb je lock faddl lock sbb leave mov jle lods rorl stos fildl pop xor add pop fisub shlb mov cmpsl rcr insl xchg cmp sub pop pushf or stos mov xchg add (bad) flds adc scas outsb jb lock cltd jbe xchg ds repnz ja out inc jae mov push mov ds bound loop rclb push cld aam xchg pop stos mov cs xor mov inc fstpt insl inc pop daa mov and leave xor bound pop pop mov ret push leave jl xor and mov mov jne ficomp and sarl or xchg addr16 lret ds or arpl pop xchg push test mov aaa mov xchg adc jae mov pushf aad and add or inc mov push xor push mov and cmp mov mov inc sub je stos or xchg push add pop outsl adc sahf fs fstp subl fwait repz ret nop push out in pop daa js jo mov jb sub sub sbb (bad) popf mov lcall lock mov or inc jg sti lods ret sub test es push or fmull mov scas or movsl jne xchg jle and cmp sub add mov mov cmp jo rorb bound add or outsb mov ret lock out leave adc mov daa jbe mov adc ds sub mov push mov ss mov cwtl mov fidivr loopne xlat xchg jp (bad) pop xchg (bad) fucomi movsb adc mov jnp pop insb and push scas je lods lock inc push (bad) mov (bad) or mov test mov popa jmp (bad) (bad) jl xor cmp sbbl ret push jne pop nop xchg mov cmp sahf inc cmp cmp daa test lods pop adc sub mov out add sahf mov add sbb push sbb pop dec fstps sub cmp ljmp mov je mov arpl mov jno mov lret lds push jne out ficom cmpsl inc andb ficom nop push or xlat in addr16 and loope shr pop pop loop lahf (bad) jo push scas xor mov xor cwtl scas dec je push ret call std sbb xor lock cmc sub sahf iret je cltd cmp dec test adc sbb and inc push rorl sub std jmp pop repz xchg roll test pop rcl xor cmp mov mov (bad) rcll xchg xchg jl jno push dec (bad) popf fsubrl out add add mov loope dec inc out mov or mov leave ljmp gs cli xor out mov lea call aas imul push rorl mov ror adc adc popf movsl rcl push sub in cmp jle dec push movsb addr16 (bad) mov rorb in push bound adc xor cmp lods mov popa hlt or (bad) leave fsubs (bad) adcl sub ret mov or adc in and push ljmp sbb pop lahf shlb xchg or popf mov mov insb pop clc xor stos fdivr push jo xor or inc (bad) or and or mov or dec data16 mov ret or cmp push stos jecxz add dec ja mov mov or mov xor add xor repz (bad) push (bad) ss sub addr16 adc aad lods lds xchg loopne cmp mov out int (bad) inc xor scas iret pusha shl lock (bad) jb or mov das js add pop and (bad) fs adc jg stc jmp rorl in ljmp mov mov ja pop sub insb es and insl pop fnsave dec mov push sub div and ss pop jo popf add (bad) fadds ret stos out sarb test xchg aam fwait lods inc inc imull cs xchg mov leave mov jge clc fimull scas push push jle xlat adc lock shrl in test jb adcb nop in repz xor pop cmc xchg lock ja in scas xchg jbe jnp adc dec mov inc mov cmpsb sbb xchg cmp push das pushf inc mov jmp shlb jnp imul movb aad ljmp ds std adc push jecxz arpl or xchg xor inc aas test nop cmp push ret inc push jno inc pusha push fucomip xchg pushf test iret cs (bad) out (bad) xor cltd inc sbb dec push ja cmp push pop in jge stc push mov popa iret (bad) mov aaa int int3 inc lods bound rcrb lcall dec mov js daa jo (bad) mov add inc pusha inc inc xor sub xchg mov sub cmc cmc popf pop pop sahf imul fcoms dec or cwtl jo cmpsb aaa or push sbb jns jno pop fwait popa fildll pop inc (bad) ss int dec ret mov in pop out aad icebp lret push stos push ja or in adc lods xchg and inc repnz inc cltd lret sub sbb cli sbb adc mov sub add mov xchg in or mov push push cltd popf push mov sub xor push xor add xchg cwtl mov jle pop cltd inc pop out in inc lcall rclb cvttps2pi mov inc pop iret fs lods ret lret stos push push inc ja mov dec jnp (bad) mov adc int imul push movups xor push inc ljmp fdivrs jl mov nop (bad) mov into fst xchg dec xchg sbb ret fistpl push inc sub daa mov es fbstp pop (bad) gs dec push out mov or xchg (bad) mov into ror pop dec ljmp push inc sub lds aas cmp inc mov sub and push repz fdivrp out enter rcll testb xor xorl xor inc mov aas jge pusha jg rorb les test ret xlat jecxz jmp shrb hlt incl test aas mov movsb lret push sbb lcall xchg adc jbe je mov push dec notl or test mov stc pop popw int3 imul fs and loope fsubs cmp push inc (bad) push sbb in pop js sahf dec fmuls lods cmp push imul xorl push xchg sbb mov xchg mov ret (bad) pop outsl lahf mov test mov inc pop push adc dec or push sub clc ss mov push dec dec adc add (bad) push sahf pusha or sbb div test xor sbb hlt or imul pop adc das inc sti adc cmpsl xchg dec mov inc mov les xchg cld in mov test mov (bad) dec add daa xchg aad les xchg ret or fist cmp dec xchg push int scas cmp or or scas dec push in adc lcall jl imul xchg inc loop and movsb cmp add fldcw and fldl2t mov outsl push sbb jle addr16 (bad) mov cmp lods pop scas pop mov sub out mov je loope and mov lods sub mov mov stos in repnz dec mov sbb sub push mov adc in fsubrs pop cmp adcb movsb adc xor jno or sbb rcrl sbb cmc arpl addr16 fiadd sub out in and xlat push xchg mov rcll iret and jge pop (bad) outsb mov lods or popa xchg loop mov push in adc pop test xor outsl sub in jge rorb ret xor lret xchg jno push cld (bad) mov (bad) ljmp add mov loopne loop adc add push pop aas and mov and jbe (bad) mov add xchg xor das sbb lcall and cltd in lret push movsb mov jno ret mov loop jne (bad) icebp rclb movsb xor mov insl mov test mov xchg push push cmp aas lcall dec push lahf xorb (bad) fsubrp rcr or stos test shr (bad) add ss xlat dec mov cli and vpsubsw fsubs mov cmc mov (bad) fwait stc or push popa js add mov js cs cmp push jae ret pop adc (bad) cmc jnp roll mov adc mov sbb cs (bad) add bound ret es leave das arpl test sub sbb rolb (bad) in dec cmpsb cmp mov fsubs outsb ficompl ja loope (bad) (bad) or es mov xchg arpl addr16 pop (bad) enter cmp adc inc mov sub int bound sub cld ljmp scas scas push daa call xchg inc cmp push cmc add and (bad) push mov dec fwait shlb dec les mov mov mov sbb dec (bad) fsubl adc movsb xor aaa (bad) xor (bad) adc int add insb aaa and adc ljmp sbb mov cwtl pop (bad) mov cmp add mov fnstenv (bad) dec sub sbb mov or faddl jp xchg es push rclb rcll lret rcll iret mov lahf adc cmpsl inc aaa mov in lods adc inc (bad) (bad) mov std lahf push aaa mov push lds int3 rclb push icebp xchg mov add pop ljmp mov out ret pop int int mov mov lahf mov pop mov jecxz,pn sarb or movsb in inc jge nop and test cmpl aaa xor in jo pop cmp ss or xchg xlat lahf xchg movsb outsb lret test and fldl aam sarl adc call popf int3 mov or add (bad) stos test (bad) dec test xor mov jns mov int3 jl jmp in sbb pop loope cmp lahf movsb sub push lret dec or pop addr16 mov cmp addr16 ds movsb insl fs leave (bad) push add enter cmpsw jns mov ljmp sbb stc and cmp loopne sbb cmp inc (bad) (bad) shll repz mov add push or dec scas add xchg pushf aas flds and ss roll (bad) and mov ss dec add nop ret ficompl cmpsl out ret lret dec and cld outsb loope add mov test into and cmp sbb addl sub sub adc sbb (bad) or sar hlt aaa roll mov pop inc cmc pop and lcall bound sub cs cs ja (bad) test orl loopne xchg push mov rcl scas rcrb inc mov cmp sub pop fdivl in pushf cmp sarl xchg (bad) cmpsl lahf xchg pop aad test add add sbb mov xchg push push push dec and in xchg outsl (bad) xor outsb int xchg es xlat leave push sbb pusha xor and pushf sbb sbb ja jae insb hlt lcall cltd testb ret sbb sub inc fistpl inc stc push mov cmc pop jle jo pop leave xchg (bad) call pop lods sbb fdivr orl scas mov fidivr test fmul push xor adc ljmp xor or push lods mov add popa in (bad) mov pushf stos push mov int3 inc sarb sbb sbb cltd inc insl stc push sbb into test xchg pop std pusha pop sub out lahf mov jae cmp adc ret dec ror mov and lea lds insl pop jo mov push test jns arpl rcr ss shrb inc cld (bad) jp xor movsb xchg xor mov lods lret xor sub jmp sub xchg nop add adc test or xlat shrl mov push fsub adc or nop sub push ror ljmp xchg js lock sbb das ds clc out iret xchg dec (bad) cmc daa std mov jae int3 int3 xchg insb mov lds loope jge dec imul mov and repnz (bad) mov adc pop fdiv ljmp gs or pop clc in and (bad) out imul scas ds mov inc cmp xor dec jle jecxz mov mov out test js in dec imul lcall lret les xchg mov (bad) xchg push (bad) jno mov scas (bad) dec loopne cmp or scas lods (bad) scas dec jb rcl loope,pn nop mov jo jg add notb push dec adc in mov pop insl andb mov push int adc (bad) addr16 cmp imul mov xchg lcall mov daa sub nop sti in jp rorl xchg loopw sub jae push xchg lret cmp (bad) scas jnp adc (bad) adc adc out mov pusha ja mov dec mov dec mov aas jo shr push insl pop pop nopl or or xchg adc push add jmp and test dec js movsl lret bound sub fsubrp cwtl cmp fbstp mov and arpl loope dec mov dec jle int3 pop pop (bad) lcall cvtdq2ps cmpsl sub aas inc jecxz pop bound lcall clc es cld jle dec jge lock (bad) mov andl mov insl das mov xchg fxch cmp das movsb cs add or or dec movsb dec call scas mov push xchg mov fiadd pop negl sar push and mov jne jecxz movsb gs inc aas les and cld fmuls mov cmp xchg sub stos mov or in mov js (bad) sbbl sub xor or insb stos xor out and and push mov mov jbe mov dec and ljmp jge mov and fcmovu mov mov sti or outsl (bad) jo mov sbb jmp (bad) xchg cmp sub mov jl inc sbb in mov data16 push cltd pop pop jecxz ja jecxz add aas inc xor mov dec inc push in fs mov ret sub lods xor push enter aaa sarl dec adc paddsw fnstcw xchg ja push inc not aaa sbb pop (bad) fdivs icebp lds jo outsb insb lock push adc ja adc adc pop or jge sbb lahf addr16 cmp cmc pop xlat mov arpl and push scas inc jae and and jle fsubs cmp push lret rorb pop rolb cmc cltd cwtl outsb scas push arpl test mov scas xor sbb push xor xchg rcll (bad) mov mov mov jmp int mov add enter push mov pop fildl jecxz mov mov das xchg cmp (bad) lods ss push jo fmul and repz int3 or jge inc mov loop sub repnz or add int dec and pusha sub sahf pushf and lods push add pop dec fs xor xor cmpsl (bad) icebp (bad) es sar repz repz in and int jbe int push push rcll push fcomps xor lods icebp add repz dec movsb ss xchg ja iret and jl sub stos out (bad) cmp inc and (bad) lahf mov aam ret xor adc jne and in pushf add loope cs or jge mov push adc xor mov sub ss out xchg jp cmp cmp add testl mov inc cmp push mov std popa cmpl jne sti popf inc lret fstpl xor pop mov add mov and lds jne in (bad) lret (bad) cmp push jmp jno jg or xchg xchg or popa mov aam jno pushl pop repz ljmp pusha mov leave mov mov jae cmpsb push (bad) and (bad) mov xchg inc stos cmp push lcall (bad) mov xchg mov dec sti cs js or mov adc call push push icebp and imul cli mov pop push stos out aaa fcmovbe aam out mov sbb adc in ja pop pop repz push sbb jecxz sarb mov mov dec divl mov fdivrs adc mov sarb adc in adc in (bad) xor and cmp pop cld repnz push add fildll mov dec jl not pusha cs cmp sahf imul or add pop sbb jmp push jmp push mov cmp lds hlt cwtl adc ljmp leave push (bad) cs xchg or loopne test cmpsl fldcw mov incl pop mov lods xchg (bad) xor insb negb jmp pushf or push sub mov andl adc pop neg arpl lcall into dec rorb test in xchg add daa push sub adc test dec aad (bad) mull xchg xchg adc xor imul jb pop push and dec push adc xor ljmp mov sarl inc jb mov mov (bad) shrb push addr16 dec jne negl loopne or dec sti jne cmp je fbld and mov mov fdivr mov jl mov addr16 popf (bad) aam adc out push (bad) adc xchg lcall inc movsb js je ljmp and mov inc cmp test push test out ds mov fild lods jns jl fsqrt adc pop ss fs jbe rcr push repnz bound push nop mov scas xchg aaa fcompl (bad) cmp in arpl or mov jno bound adc mov pop pop sahf push arpl mov and add and lcall in test ret adc mov mov test lods mov and shlb mov mov rcl cmpsl and sbb dec test int3 inc mov cmp shrb inc cmpsb or call jmp test push xchg sub xchg cltd imul lods in fsubl out mov dec repz mov out jmp movsl imul inc idivl imul pushf inc cmp in ret aam push xor pop dec or insl fisubl dec mov movl pushf mov (bad) sub and divl mov pop cmpb xchg sarl cmp jge popf test or test fidivr pusha iret and mov jecxz xlat mov cmp pop dec xchg movsb aad jns scas fwait popf out inc test (bad) pushf push sarl movb xchg mov lret in sub test pop lds mov fwait or aaa xor call (bad) mov rorb aas lahf dec decb fisubl das pop cmp sub push inc add mov cmp loope push outsl fimull fdiv das notb out pusha cmp int jbe add sbbb or pushf dec aas sbb fsubl add mov pop or xchg stc imul aad jl cmp (bad) movsl repnz or nop or leave push outsl hlt jo xor rorl cmp sub xchg insl imul stc sbb lds or pop ja hlt outsb pusha mov pop jns jne,pt add mov dec ds inc pop jnp or cmp or (bad) mov gs xor mov adcl test (bad) fmul stos icebp aam mov push insl cmc xchg repnz aam test or mov cmp sbb xor mov sub push ljmp dec mov jns test jo jno sbb jne mov jecxz or adc jecxz das mov jnp test cmp sub ds adc sbb jl push cli fisubrl mov jecxz push pop je jbe push mov mov (bad) jns pop lock stos test int3 daa cmp sub loopne cmpsl (bad) xchg dec mov xor push lods addl mov (bad) arpl or insl aaa in call bound stos xchg icebp push pop cwtl insl sbb xchg xchg lret ljmp xor ret lret add add lahf xchg (bad) cmc mov xorb dec sub call mov lret mov std (bad) jle xchg jecxz sub add adc pop inc loopne gs (bad) jnp cltd add lods mov jns (bad) sub or aaa (bad) xor in push cmpsl rcl std mov and and dec sbb and xor fnstcw pop push fisubrl xchg je pop cmpsb push push or mov or jmp lcall mov cmpsb push fwait out mov xlat fcmovnb push xor sbb push ret cmp and loope ror test fs aad pop push ret jbe jnp xor xor lcall push adc data16 out mov mov das jne jbe sub (bad) bound das (bad) movsl lret inc leave lods out pop cmp orl and in out cmpsb adc jl mov push cltd outsl int3 dec (bad) loope lret mov sbb sub jb adc fdiv roll test insb add je dec mov mov jle push jl (bad) inc xchg mov lods pop add (bad) mov (bad) lret jnp (bad) mov add lods aam inc jmp jae xor out (bad) (bad) mov push data16 dec and pop pop mov daa pushf dec scas cmp add jns scas add imul mov xchg mov jmp mov das shlb xchg push mov std ss sub aaa mov cli out fstl adc lret scas lret push scas stos pop push dec mov mov push fcomp ss notb dec push int3 je dec sub in push dec cmpsb call sbb jmp push push push mov add xchg xacquire out sub ss jne div add fwait adc add outsb xor out add cli out fcmovnbe ja jle cmpsl pop fcmove insl sbb sbb notl mov pop out pushl das data16 push or dec pop cmp shrl push xchg ret mov xor dec mov in push addl out call and inc pusha mov cmpsl sub lahf push sub mov inc adc sub jge (bad) gs sbb lahf rol xor pop fwait gs addr16 test icebp mov arpl xor and mov xor enter test push out ja sahf and (bad) lret int pop aam cmp push add bound or sbb push jae xor push stos sahf mov and jae (bad) (bad) jle ljmp mov push dec xor push inc sub (bad) push sub mov test stc cmp and jo adc sub add imul xorl jl push pop mov jns push add rcll (bad) adc xchg (bad) cmpsb pop and pop enter loope xchg xchg (bad) testl jae pop (bad) inc das test inc or adcl push (bad) aad gs sbb xchg pop jl push test js pop jmp mov push test inc add fdivrs inc cmpsl enter arpl idivl or add mov bnd mov repz mov add sub mov mov stos sbb xor std sar mov mov rcll mov push sar cmp sbb sahf jge xchg int insl clc dec add adc inc sbb popa (bad) int int3 mov in loopne pop stos or add push cmp fdivrs (bad) cmp jb icebp cmpsl fwait movsb scas mov mov (bad) jle cmp call int fldt pop and cmc test xchg in lahf mov lods inc adc dec push (bad) (bad) in jl ja push out (bad) xor scas in inc or jo adc (bad) jl cmc mov fisttpl dec divl xchg xor outsb dec dec mov insb out ret add push xchg xchg mov sub sub leave sub fstpt pop xchg jb push pop lock outsb xchg mov mov inc lods adc hlt lret push ret outsb sbb sub test xchg es sub sahf push mov fwait je mov pop xorb bound loopne ror sbb dec dec jl dec shr idivb sbb sarl hlt mov repz inc ss cltd enter clc sbb mov inc xchg jno ret pop int3 leave pop jne cltd adc adc iret lret (bad) popf test jae push loope pop jno ret cli ret jecxz mov inc mov adc jg ficomp aas imul in or mov je dec pushf sub push (bad) jmp inc ds popa pop push mov pop xor dec dec push repz cmc pop push cmpsl pop cmpsb bound cmp ret out aam mov cmpsb sub mov (bad) pop jmp call scas aad push pushf pop xchg cltd call fimull add sbb lahf mov pop jle sbbl jg push fdiv in or xchg (bad) inc stos push (bad) in (bad) rcr ljmp push cmp jmp xor je jno ja inc popa and movsl push mov pop insb mov pop mov cmp and in scas cmovbe mov popf lods das (bad) mov mov add and xor addr16 arpl int3 dec xchg xor push in shrl cld mov adc iret cwtl cwtl inc rol in and jne pusha gs or inc js addr16 mov stos push dec mov orl sub testl lret pop mov push push sub mov push mov sub movsb and in sub sub into mov arpl scas cwtl inc inc fimul je cli dec das xor out stos push sub sbb cmp ret jecxz jmp cmp out push cmc mov push sbb mov jecxz push add lcall pop insl jmp mov jbe push (bad) pop push andl and xor mov test bnd ret jno xor cmp dec or mov popa subl shlb mov xor inc sub inc mov mov jnp mov std cmp dec pop adc and movsb scas in out push jecxz popf adc and mov (bad) jo arpl xchg or sub in test repz jmp fnstenv outsl xor or mov pop pop push test xchg or int3 jae bound cmp movsl dec sub iret add and add loope ficomp mov xchg push mov adc lahf fwait insb mov sbb loope push scas xchg cwtl dec cmpsl mov inc push clc mov mov aad add adc push out mov mov shld outsl jno lock stos mov out pop mov mov add andl pop sub daa dec jne imul jmp (bad) int lret (bad) or int or mov out (bad) es scas pusha test fcmovnbe out and or stos fsts mov fcomip cmp inc leave xorl cmp imul push push cmpsl in fisttp (bad) pop aam cmpsb (bad) jbe cmc test dec mov inc je lcall add dec lea xor xchg imul and popl push in aad insl jp arpl cld cmp xor adc mov xchg daa sub adc mov push (bad) ja mov (bad) dec (bad) (bad) push xor in test fs pop push mov popf arpl mov sbb sub fstps jmp mov cld push cmpl jge gs or cmp xor xor cmc das push movsb in pop push dec jl jle cli into inc xchg pop test jmp cmp pop lods and add in cmp fisubl pop xor arpl xchg add loopne decl xchg sahf mov (bad) idivl loopne lahf jo popa ret jnp inc mov (bad) ljmp mov mov lcall ret lock or push rolb cmpsl loop fs sub inc sahf in sbb (bad) mov mov fbld mov dec out push pop lcall sbb xlat push in jmp mov adc ljmp jp xor mov pop xchg stos mov lods pop mov int3 aam movsbl mov jnp jmp inc jns stc ds push push fidivrl mov or insb jmp mov xor ss or add inc enter (bad) loop out out subl cs and pop inc inc int3 (bad) sbb fnstsw xchg pop inc insb inc iret push pop cwtl hlt icebp (bad) push shlb call cltd mov add sbb push clc xchg iret adc jno sbb inc sahf or or xchg mov inc jle test xchg dec not inc in fidivr inc (bad) pushf in mov lret mov mulb cmp inc mov mov popa jecxz jnp fsubp aas shlb push adc sbb or aas (bad) aam jnp or dec in push mov xor mov dec and movsl insl cmpsl and jp dec aam sub mov xchg and mov inc cld notl jns push int3 sub sti pop inc cli in xchg test aas mov or fcompl mov xchg sahf loopne cmp mov and test jge mov add pop in and addr16 (bad) xor mov andl int loope mov xchg jnp mov bound fldcw and arpl or into out (bad) jnp mov or mov fstl or sbb adc cmp xchg in mov lods ror cltd mov push jae orl jmp test in fnstsw bound out xor sar aas and lret cmp mov mov mov neg imul jb sub mov jp ljmp aam cmc popf lret (bad) sub jno movb repz ljmp loop stos fstp rcl cmpsl addl mov leave inc xchg in cmpsb inc push inc adc nop xchg push pop loop push mov mov repz xor sub lret push inc mov pop add mov inc cmpl dec add cmp sahf int cld divl push jecxz punpcklbw test mov rcl dec mov daa or aas xor push ja test xor xor rol mov scas stos fsubrs sti call inc lea push adc mov lods inc jns jnp pop hlt aam pop outsb out imul mov push gs jne inc stos out insb jae push arpl sub jmp lods lret pushf inc mov sub mov dec (bad) or sbb push ja test push jg loop je loopne jle or sbb ja daa cmpsl xor jns das pop cmp mov into xor fmull subl pop lock sbb pop lcall fimull push add popa or adc push cltd jmp jo loope fstps mov adc mov test inc pop fcomi jo push inc popl loop (bad) imul and mov insb lahf data16 ds pushf push sub mov sub pusha mov (bad) xchg cld cld scas jae movsb bound int dec and push dec fild mov popa add or sub outsb or lcall xchg cmp xor add in repnz sub cwtl sub lcall sbb repz pop push pop repnz jecxz sbb (bad) repz enter dec mov jp mov add ret and jo fwait mov repnz lods mov sbbl mov in add sub outsl xchg insb ljmp and fsub ficomp pop inc aam pushf mov ljmp mov ds lods or cmc mov icebp icebp or rolb rcr mov enter xor es in pop add out adc push add mov xchg or repnz adc xchg dec fs sub lahf std adc fs aas in movsb inc mov gs lahf mov inc ja,pn mov xchg popf mov stos dec sysenter addl mov add inc jecxz cmp mov xlat dec cmp push in jno adc adc icebp and jmp test or jns jns out fwait das lret scas sbb (bad) mov mov mov icebp push stc push mov jge,pt pop sub lods arpl sub and std js xchg lret lea ja (bad) cli adc inc lea cmpsl or in and int3 int3 fnsave add sbb cli jmp cs ljmp scas shrl out pushf mov in mov jg js shr iret je cmp ja mov dec mov (bad) dec pop aaa push std add xchg fmull pop push adc cmpsl lods push imul pop mov mov gs negb jl arpl insb stos mov aam mov fdivs jae scas leave jne pop jge orl pop mov mov inc enter cmc leave ss dec mov movsl flds lock push jb out sti ljmp outsb pop loop pusha enter mov and adc out cld fcomps pop push and js cmp (bad) xor nop mov and scas ret xor adc sbb pop cmp and pop pop push sahf (bad) pop lret push out push jmp nop mov sub lcall push out fadds pop mov mov xchg fcompl dec xchg dec stos sarl shrl mov test clc bound xchg pop in jl xchg adc and stc inc push lahf and cld jle in rorl ret pop adc adc cmp fst scas imul push cli in test lock bnd jl cli aaa das popa pop cmpsl dec and push pop pushf pop pop loop ficoml sarb and and scas cmp dec fwait fwait movsb add enter mov push or insl jmp mov stos and adc data16 add std enter pop jmp sahf sub scas mov inc cmp dec (bad) and es xor icebp decb sbb in sbb loopne mov jg mov into mov cld loopne push repz jno das push jns cmp clc xor sarb je dec in jmp leave mov aam adc sub ret fnstcw cmp scas stc push bound xchg pop inc mov repnz sbb scas incb js add decb testl jno sbb pop sub pop jnp inc inc dec or sub js (bad) jno aaa mov outsb xchg adc cmp add cmpsb in inc cld pop lods stos sub cmp aaa sbb out mov jg jb and and iret push mov stos mov xor cmpsb xor add fidivr cmc (bad) mov push and ja cs aam rcr dec cmp push lcall ds mov movsl sbb mov cmp adc sbb mov xchg outsl adc cmc stc in lods aam xchg mov adc and push (bad) call xchg fwait dec cmc mov lock test iret push stos xchg gs movb aaa pushf shlb xchg dec mov fistp push mov xor or mov push imul loope (bad) test fwait (bad) mov pusha insb xchg jbe push push rcll jmp notb jne sahf inc dec sbb xchg fadds gs in mov jmp cmpb mov and mov dec ljmp mov dec push jne pushf ret inc bound or pop mov jno sbb iret push xchg jl mov das shlb (bad) div lcall xor cmp dec push clc push sbbb sub jbe mov cmp mov out xchg push mov jae push cld and clc pop pop arpl jbe dec push push icebp sbbl dec insl sbb daa aam sub cmp addl punpcklwd stos push push xor pusha test inc dec push or inc lea loope or add mov lock adc mov or rcl push dec cmp xor sub adc dec jbe mov mov (bad) xchg inc sbb mov fnstcw adc stos cmp popa cmp jle cltd inc ss mov jecxz fcmovnu divb fs cmpsb cld in xor nop icebp addr16 cmovg gs rclb sbb sub loope push xor rolb mov rcrl inc das jae std loop in add (bad) andl pop adc lock test push sahf cmpsl in mov fldcw lret jecxz gs pusha dec gs imul enter enter nop icebp mov sub fwait push ficoml ljmp inc ss scas (bad) out fs sar pmaxub push aas bound mov cmp aam mov pop push add jne jl mov (bad) hlt dec cmp les shrl jae imul in jb dec loop lds inc out mov jge stc xchg cmp adc fisttp (bad) adc cmpsl fistl mov xchg or pop and mov aas aas outsl add test cmp mov sbb mov push and leave xchg roll lock cmp lock into mov mov mov cmp push lahf mov add cmp sbb cmp or add ja arpl out jg xchg jne out add push cmpb out xchg popf mov idivl scas dec test faddl mov add mov adc lahf outsl scas xchg push jno lahf jecxz sub stos shl fldt sti xor ds jb push push es xlat shrl data16 add fsubrs xor (bad) stc out push dec test or sub pop rorl enter inc fimul leave (bad) repz and std add inc pop mov sbb (bad) daa fdiv jb aaa and mov in sub xchg mov push adc test insb adc xchg dec imul push notl dec or movsb stos xor push or adc data16 xchg aas jl enter mov inc xchg and push adc mov jne adc xor insb clc dec and out (bad) pop lods xchg into stc scas popf push or cwtl enter outsl popa mov mov mov mov repz pop in pop mov jecxz repnz cmp lahf jb iret pop xchg lock cmp cmp xchg stos roll test inc xchg dec out or jb test inc jns xchg add je mov cmpsl jl fcmovne addb mov lret cmp mov jo sbb and jae mov dec add inc (bad) icebp mov sbb (bad) mov sbb jle cwtl out frstor or mov mov push dec insl push sbb aaa pop std jmp iret inc sub xchg cwtl imul cltd leave xchg push stos add jmp movsb pop lods leavew cmc fldenv leave inc pop cmp flds xchg adc fildl movsb (bad) in add arpl push or ja lock cmp pop js (bad) xor mov fcompl xchg cs and clc in cld pop scas (bad) mov std fdiv jmp stos xor inc loopne xchg mov dec dec mov pop mov inc pop mov (bad) pop mov in insb movsb rcr or jg or into (bad) sub aad addr16 rorl mov cmpsl jmp loopne pop add iret pop std ljmp aam jae xchg pop jbe (bad) pushf pop mov dec orl jg ret sbb mov std xchg lods inc fsubrp inc and and pop mov jmp fdivrl fldt aaa int mov jno sbb adc pop pop or adc adc clc and push (bad) repz mov xor push jmp (bad) in pusha cltd xorl je xchg sub out mov pop sub xor fildl pop or sbb inc sbb enter pop cmp xchg mov mov add fs pop aam stos push aad lret data16 adc inc mov add leave mov xchg test xchg daa pop xchg mov cmc imul ficoml pop xor out ds ja add sbb mov sbb test jns mov dec add and pop jg push mov es pushf mov aaa jmp cmpsl fcmovb and subl les imul scas sub inc jne sub xchg sbb xor in enter or fcmovb cli (bad) (bad) jge fldl ret xor in mov leave adc lods incb (bad) push loopne std gs shrb aam divl cmpsb or mov or xchg xchg mov add mov leave gs adc fsubl loop test sbb sti add push outsb sbb adc pop xchg call loopne sub es mov aaa pop dec jne pop mov shlb bound movsl test pop jecxz repz mov pusha mov push negl pop aad aam cwtl adc insl popf mov ds mov fwait xor (bad) out xchg faddl pop dec fist ja inc xchg out out xchg push aam out mov xchg aaa dec andl mov negb test imul cmp add mov jb sbb mov inc pop push call and xor jle arpl subl inc sub mov cwtl stos repnz in mov jl aam push pop fwait arpl daa in les mov enter (bad) pushf dec cmp xchg pop mov mov mov aad pop jne jecxz mov jb out xchg pop imull loope (bad) cs mov xchg notl lock xor lods sub nop mov fsub in mov push fcompl xchg outsl cmpsl sbb xor (bad) jae out jp add adc or mov adc xchg and dec imul and rol xor push cmp or movsb fistpll std loope out sub jmp ret mov (bad) les and inc test sbb ljmp mov dec mov xchg jbe adc (bad) in stos push es mov gs mov mov jns mov sbb mov test or pop mov cs sub ds inc dec (bad) out inc adc gs sub pop arpl nop sub push rorl repz mov int3 mov dec fldenv idivb jns sub outsb sub jne mov push repnz pop in mov jb sbb sbb xchg mov mov or mov ficomp mov cld adc add push dec movsb rol popa xchg adc jle std lods dec inc jecxz sbb movl aas gs push inc adc std mov jmp jle je cmp lcall jge cmp rep cmpsl aam mov repz imul es cmc cmp adc mov adc mov or cmp pop (bad) push les ffree ret les dec (bad) cmp stos xchg cmp pusha inc mov mov xor and dec dec cmc mov mov mov add iret cmp popf fisub rolb mov int3 dec mov stc push rclb xchg psraw imul aad int3 scas cmp mov cmp fisubrl outsl xchg push mov dec mov cmp xlat cwtl (bad) enter ficomp sbb popf mov jno repz outsb std pushf xchg sub xchg (bad) (bad) cwtl into pushf mov enter jnp jl push outsb das lock popa das mov push adc mov movsb push lcall adc bound add scas insl mov sub ret mov add sub idivl sub jne xor xchg (bad) push sbb mov orl pop into rcrl push jmp ds push inc outsl mov and push aad sub add mov fimul adc lret out push mov loope xchg in xchg jl out xchg mov testb mov cmpl mov mulb xchg xor icebp movsb pop lods cli xchg xor shr sbb push out leave into inc ss mov out dec ds idivl in js (bad) cmpsb call push lcall js (bad) ljmp imul in test arpl dec pop imul sarb sub neg mov lahf add bound (bad) and adc mov inc or dec push jno mov jbe xorl jno pop popf dec test (bad) xchg mov add aaa pop sbbb test test pop dec push loope and fidivr ja mov pop imul mov int sarb arpl cmp xor stos mov (bad) int3 (bad) jl enter shrb test or (bad) add lock or sbb mov sub cltd mov xchg xor loop out adc (bad) xor hlt in push add test (bad) mov and clc orl dec sub push pop enter mov mov dec flds sbb cmp fisttpll dec push pop ret into mov stos mov ja mov (bad) sbb sbb adc loope stos mov jp dec cld xor scas add add test cwtl jbe fcomip lahf xchg (bad) cmp mov imul add cmp mov stos mov int cmpsl test push push add mov jb mov vmread cmp loop sbbb popf and push push fmull dec jno hlt xchg mov mov adc dec mov sbb mov adc loopne cmp xchg sbb shrb cs outsl stos imul sub daa mov not scas sbb and adc (bad) out lods cmp adc xchg adc and push mov lods cwtl mov lea jecxz ja fwait pop adc test push xchg push pop or xlat mov dec ret rcr lahf das xchg fist es mov nop jmp push adc cltd loope iret fwait call and rcl xchg les imulb leave pop lret bound add dec pop fadds (bad) push mov sub ret pop cmp (bad) fcompl cs dec jp orl scas add sarl dec scas xor nop mov cwtl in in loope repz jmp mov mov iret and pop sub mov xor sti dec pop rcrl loopne jne imul out xchg jbe and stc cltd inc sub pop push stos mov add movsl cmp addr16 xlat dec loopne push icebp cs outsb aaa pusha lret es rcrl sbb inc mov aas cs sbb out push in cltd imul sahf outsb loope xchg mov pop pushl add mov cld sub pop mov pop jno adc lea enter fdivl test dec or xor push dec cmpsb adc sub call jmp rcll inc je mov ss dec scas jecxz sub xchg adc or arpl incb jns mov or mov mov xlat rolb pop sub jmp es xchg sbb pop outsb push inc and ja and add sbb mov xchg scas rcr jp xchg ret mov mov sbbl das out (bad) fbld xchg pop mov or negl jg insb mul and in push pop xor arpl xchg scas je sub jle pop jno mov cmp fstpt fucomi (bad) enter out mov sbb sub cmc pop xor jno xor adc pushf mov int aad arpl xor add fdivl inc lods mov xchg ret mov sbb stos jb fimul cmp sbb setl xchg (bad) cmc imul and jg xor mov push cli jbe call pop push lock mov pop cs push mov sub jbe cmpsb and xchg mov jecxz clc loop fstpt imul xor jno insl mov pushaw les xchg push sarb js mov push (bad) and and inc or lods add fimul test movsb jl cmpsb cld notb mov inc cwtl stc out (bad) xor clc cmp std mov (bad) je mov hlt pop jle mov insb pavgw push inc push adc and sbb xchg fld rolb movsl dec cmpsb dec jg push xor pop inc insb sub jp dec mov std pop sbb dec sbb ficompl jmp push or cmp push in dec ret pushl data16 sub sub ret cwtl pop jg out lods iret sub push add mov test lea lods xor or mov in adcl int fwait pushw cmc and rcrl pop int sbbl push cmpsb sub js jp add inc loopne push hlt divb fwait (bad) xor adc add loope cmp sbb add cmp and jecxz repnz in ja pop lock fstpl inc and push aam and in or dec js cli fwait sahf pop aas lea loopne push mov daa add or setl push jbe dec mov in ret mov (bad) movsb ror or test in cmpsl jge xchg mov cmp jmp fcompp sbb (bad) fldt mov fwait pop pop cltd roll lahf xor inc xor xor in push and jbe jno push les ds cli mov fisubl (bad) mov mov (bad) adc lret cld rcl mov push call inc scas mov cwtl test fsubl icebp outsl sahf mov add dec test dec cmp jnp mov clc dec xchg sbb push pop push jg lock jmp lods push sbb add push add dec sbb pushf or pshufw xchg mov xchg push pop imul push jnp movsb mov mov push les movsb jb (bad) cltd movsl mov stc push je loope movsl aas mov xchg in fdivrs ret ss clc (bad) sbb push xor loopne loopne je sbb add loope fsubrl jp ret cmp ret push cmp mov jnp jp jl movsl ss mov cmp insb adc scas in imul outsb (bad) jne aaa pusha out (bad) dec int into ret imul sarb std add lods pop pop fist es pop cli inc rcl outsb inc or data16 iret mov push cmpsb cmp push nop shll adc std mov xor cmp jne xlat loopne mov mov scas or out xchg jle ret int3 mov enter mov pop xchg cmp loope in stos test sbb adc int pusha mov jae or dec dec std xor xor jmp jmp roll mov fs pextrw ja rolb outsb and lods lahf push or xlat adc cmp mov push sub add jo pushf mov jns push mov sbb inc jmp shlb sub jo adc jecxz (bad) mov cltd xchg sbb popf outsb pop fmul in push cmp int3 cld lcall pop mov clc bnd mov pushl mov push (bad) mov out sbb mov xchg loop stos insb cmp or ret jle mov xor sub pop jo in fistp movl stos aam dec push pusha popa push inc add pop jno pop std jmp pop push pop lds rolb jae pop dec pop lret add mov push cwtl sub in sub jno les mov jmp and xchg cmp loopne aas mov dec ds push adcb push dec or jbe sarl dec fdivrl add mov pop cwtl pop cmp mov cmc orl inc mov shll dec and pop (bad) jb fild mov xchg cmp testl xor lcall push sub mov out lret push jnp push push adc hlt sbb rorl xchg mull loop add inc xlat (bad) in in (bad) dec mov push jno jmp mov mov scas sub add jb lcall sub jg and fiadd dec jg xor mov xor mov push loopne test xor lods setge ror xchg pusha sbb mov fucom loopne stos out pop or les iret sbb and xor int3 shrb test in stos fs inc inc pop std push cmpsb repz (bad) mov cwtl xor push add pop add fcmovu inc dec out icebp test insl adcb inc mov cmp sbb hlt dec in movsl lahf add aaa pop mov cmp xchg iret cmp je,pn (bad) fmull xchg dec fimull add xor das ja pop inc pop cwtl adc adc (bad) je sbb es scas andl pop stc repz adc stc jno gs xchg adc add pop lret outsb mov repz cmpsb xchg ret mul xlat stos (bad) stos dec jns sbb bound add or (bad) and mov rclb add jl clc pushf repz jns pop or in hlt out pop ret aad xor push insl lahf inc pop loope pop xor dec addl shr insl or push aaa (bad) dec mov (bad) call adc xchg addr16 mov pop sbb mov mov pushf enter inc jb inc sbb in call push or fnsave enter test jmp ret dec mov mov xor xchg sbb xchg mov xchg hlt push movsl pusha std and (bad) jnp inc mov cmpsl enter pop inc dec (bad) leave cmpsb inc push out jmp movsl (bad) and sti js push cmpsb fiadd sbb enter jnp pop pop (bad) mov lahf pop push stos xchg inc daa sub and cmp iret jns xchg popf lahf dec cs push popa mov pop lds pop xor push pop test inc mov sbbb xchg fs addr16 and xor test icebp int3 or inc stc dec scas stos enter fstps pop loope or xchg inc rorl repz push imull cwtl dec inc push xorl insb inc sbb add xchg int pop ret push pop pop jecxz fs (bad) mov into jo notl mov imulb (bad) or addr16 push jb jb jno incl sbb sbb gs dec movsb lret cmp addr16 stos rolb js movsl add mov aas mov push dec shll in std fcom ljmp and clc xorl lret aam ficomp pop lods call mov int dec pop (bad) fbstp or mov mov fs sti dec in lods (bad) xor cwtl addb pop dec mov lcall push jbe dec sub imul adc sbb sbb jnp mov mov jmp sub sbb bound pop (bad) push pop jae cmpsb mov out nop xchg (bad) sbb cs mov adc ret adc pop dec aam and pop rcrl mov int3 and icebp jle push sbb cli or je sti pop in push leave and push rol dec das mov pushf mov ret outsb (bad) mov or add and push ret pop (bad) mov dec (bad) outsb cmp jg movsb xor mov sbb push lods stos (bad) (bad) mov loopne je pop daa scas ljmp shrb pop daa jbe cmpsb pop stos mov hlt iret scas fmul inc popa cmpl scas bound js test sbb cmpsb fsubrp insb push inc test les lret call ljmp pop test mov push std ss stos movsl cmp inc cltd daa xor in (bad) lret cli lock inc repnz mov stc stos dec repnz mov lods ret jb cmp (bad) lds pop cmp pop pop lcall fcoms into cmpsb loop cmp jl or fadds mov ret fcoml lret cmpl inc rsqrtps and addb inc mul aas cld xchg ja add sahf xchg cmc scas sar or jne stos push xor or lret std sbb aad cld or repnz pop cmp inc mov push cld dec movb xchg sub ljmp rcrb je lods loopne dec push daa outsb fnsave mov push cli and lea jp inc cmp mov lods lods inc cmpsl dec and (bad) je lea sub pop mov mov comiss mov clc and pusha fmulp dec lcall jmp ret out fwait ret inc std lret stos ss push lock adc jno push xchg pushf enter les scas int3 imul mov sti push inc mov push iret cmp pop and loopne mov daa (bad) cli ret jl aad mull out xchg shlb sub ss adcl jb iret xlat lea ja push (bad) jbe ljmp enter in lahf icebp and inc and pushf ret imul scas imul xchg add sub mov in jmp popa shrb jae inc imul mov pop push pop xchg push mov jp shl outsl stc cpuid push pushf xchg out pop dec mov xchg xchg add pushf and push xlat movsb sbb stos (bad) insl and jne aaa or jns push imul inc fs repz mov cs loopne jg pop push sahf (bad) fwait mov or cmp mov cwtl std inc ss pusha mov xor dec stos daa out out lahf cmp pop cmc jp cld lds (bad) int jo cmc push movsl jo xchg popf cmc addr16 inc xor call xor aaa jmp sti std sub mov lahf adc test inc adc dec fldt add or xchg cld nopl xchg push xor mov xchg sti cmp (bad) mov cld fdivrs xchg fs inc (bad) lret jp fwait xchg push jg cltd mov int inc pop xchg hlt faddp or js pop cmp sub dec lods cmp pop fisttp fs aad gs int mov add pop xchg clc mov in sbb sub and lret ss and xor jmp inc sub mov pop xchg iret addl pop popa lcall xlat mov frstor xchg aas fs sti push shl xor mov mov out mov scas pop cmp fs inc (bad) stos jmp repz push addr16 js and xchg pop mov jo sub adc scas mov xchg mov jbe cmc sub out imul mov leave pop ljmp int push xchg ljmp pop jecxz mov pushf and repnz addr16 ljmp add sti lods andl out ja enter mov pop push (bad) repz std jl pop push fs dec mov xchg xor fildll push in mov fistpll aad mov push or dec fstpt and ds ror shlb (bad) into push sbb fisub xor into xor ret daa sub rep loop cli in aaa mov ss cmpsl testb dec push imulb adc jmp pop cmp pusha (bad) rcl les jns (bad) rorb aad or jp push or popf xadd ja outsb out inc nop sahf sbb test xor xchg adc (bad) pushf dec push int3 in adc aam rclb lods mov shlb or sub ds aas add pushf cmc test cli test frstor or jl fs pop inc dec or pop push xchg mov (bad) push out mov int push jnp mov (bad) cmp sub adc mov sbb cmc enter mov inc mov jmp mov (bad) xor sahf push aaa sub (bad) loope mov ror push loope add pop mov fwait leave out mov sbb xor mov sbb dec movsl mov dec (bad) (bad) out ja push in xchg arpl mov das bsf es adc jo xchg sub pop mov push inc sub in movb jl lds fwait or push popf add xchg xchg iret repnz inc imul push dec rorl fistpl int3 out aad mov or inc lret dec aas mov jne call movsb sub dec jns rorl call mov stos fucomp loop dec and int3 sub scas test and mov sti add test and dec fbld imul cmp mov mov xchg push fstps jns push inc (bad) fistp add sub cmpsl daa xor sbb cli lahf dec cmpsl xchg jecxz inc iret (bad) cmc andb into lcall les lock leave test cmp and es or add cld mov adc popa jns stos mov jg sub xchg loopne fisubrl cmp icebp pop sbb pop in fild in jle xor mov jne inc jl cmp scas jl adc push pop mov jnp call mov jae loopne scas cmpsb add add xor lret xchg js xor push mov sub cld leave repz jnp mov cmpsb fwait jno cmp jp and cli cmp push pop mov and fnsave idivb mov inc lods pop imul ret push mov xchg clc out jmp sbb inc mov (bad) (bad) lock stos cmp push or jbe loopne pusha add js (bad) mov (bad) aad xchg jnp fxam xchg psubsb mov cmpsl nop fisubr push loopne pop adc rcrl lock push (bad) mov shr iret imul dec fmull xlat cmc push std adc xchg iret cltd sub pop and out inc ret xchg loopne sarb imul push pop int3 inc and rclb ja push sbb mov xor sub push dec flds shrl xchg or mov paddd out sub lods repz test jle nop (bad) mov inc jg and popa or dec xchg loopne inc sbb mov es rclb imul int or pop movsl es pop arpl inc cmp int3 xchg cmp mov in test out adc int3 lahf ret popf std add sti out jne jl mov adc ret sbb insb sahf icebp call outsl mov push xchg jno popf incl leave cmp hlt push fsubs loop push rolb mov jo in jl shrl dec pop pusha jmp out dec imul daa mov dec lahf or (bad) (bad) hlt push sub rorb outsl jecxz jmp xor pop bound (bad) sbb inc leave scas dec in push sbb ret mov ja mov dec arpl cmp xchg or adc in in negb push hlt sub mov mulb mov loopne jmp enter repnz andl inc and jmp and das or icebp test imul lahf xchg in xchg std push jne mov cmp push cmp add mov adc lock inc inc dec (bad) (bad) repz data16 je mov jnp insl cmp out adc mov pop jmp inc jnp leave jge xchg fldl adc fwait movsl lret cwtl scas sbb fwait cli ss int enter popf mov imul jecxz sbb lods adc sbb sbb jbe push ret sub jg inc inc cmp fs cmpsb cltd ja mov jb push pop or and xchg enter adc cld outsl dec loop jmp adc scas stc (bad) mov add adc mov popa push cmp sarb sub jb xorl sub xor pop mov mov out push bound jne cmp adc xor pop lds stos mov insl sbb lahf in dec cmp cmp adc pop stos movsl js and stc add xlat and xchg fcompl aaa int3 fistl arpl cld js loop mov xchg in fisubrl mov test mov inc adc js jmp iret insl mov cld sbb pop pushf sbb jno jecxz inc mov and iret je fstpl jmp jp or dec jae (bad) cmp sub xor lea sub xchg push insl adc cmp ja push mov call add xor enter mov mov (bad) (bad) lock in and pop pop fdiv xchg test data16 lahf into and dec sub in lods dec lcall jmp loopne movb fild test xor inc sbb scas xchg stos mov ss decl ss int js xchg sbb outsl vmovntps mov sub fcomps mov fnstcw scas data16 inc out in (bad) pop cmp clc cmc jnp push add xor loop jecxz jle stos movsl mov imul int roll pop int3 ja test fnstenv or sbb in mov bound jno (bad) mov addr16 (bad) or and inc (bad) mov xchg sahf pop pop loop cwtl imul fcoml push dec arpl inc sbb (bad) jo cli imul dec and les mov cli xor punpckhwd add cmc pop in daa lretw popa ds dec les mov push sub pop pop sbb adc aaa popa mov and xchg repz call (bad) pop pop (bad) sub orb mov sub les movsb and adc imul or cmp ret (bad) int3 neg cmc pop and sti icebp add enter xor or sbb iret fwait and or push jl aad iret ret xchg and aam and pusha scas mov push sbb sbbl into mov push mov sub mov (bad) mov and xorb outsl adc mov xchg or popa outsl mov lret fdivl movsl jge insb cmp loop shrl mov or call pop lds std inc enter push add sbb mov jmp push rcrl adc push push push jo adc inc cmp iret xor loopne and je mov xlat xchg push nop into leave (bad) (bad) (bad) (bad) mov (bad) mov aam mov out (bad) xor fisttpl jb bound xchg enter jae adc (bad) adc add cmp xchg js aad aam mov movsl cmp xchg fwait (bad) out in xchg into fistp (bad) ret jo ja movsb and dec push daa (bad) test push add and sub std cwtl decl out and js imul push pop jb jecxz aad inc xlat xchg cltd inc (bad) es inc xchg and cli pop cmc loope cmp or out popa fildl mov insb jno push mov fnstenv mov inc inc mov and cmp repnz mov cmp inc cld push aaa aaa mov bound inc scas lcall and stc je mov mov imul bound das and std es mov popf pop xchg lret xchg or add ret jl xchg je fsubrl inc insl repz repz sbb pusha cmpsb jmp andl fucomp (bad) scas into push fnstcw fstl adc cwtl xchg pop fdivrp das jl pop fwait test jnp inc js mov addr16 adc (bad) hlt fwait push inc or xchg (bad) mov push pop loop cmp lods xor dec add mov mov sbb pusha mov push inc cmp loope (bad) add mov dec mov mov aam (bad) jb out pop insl sub test pop popf jns js xor pop int3 insl inc gs test dec mov loope in xor mov mov ss fsubs ror iret inc and popf sbb and ss fdiv dec push or fbstp and add mov into xorl fwait jns aaa aad adc fnsetpm(287 adc in mov lahf out xchg iret pusha push mov lahf and cmp lcall lock mov jbe shrb xor (bad) pop mov pop sarb mov jg int3 popf cmpsl pop stos push clc notl and aam sbb sub (bad) (bad) fwait pushf (bad) ljmp clc or pop rcrb div scas aam call inc pusha or stos dec adc loope push add xchg jge loopne insl fcmovnbe adc call mov imul xchg mov pop bnd xchg out insb iret pop inc stos test dec push cld cwtl mov cmp pop add mov jne dec arpl add movsb shr sub add push lea addr16 pop cmpsl stos cmp inc mov adc in jp inc stc loop call xor push jo mov xor pop cwtl imul add ret sbb scas xor mov add lret insb popa xchg outsl push dec clc and xchg sti mov loop stos xchg add push rcrb aas sub sub adc aaa das cmp fnop push cltd push inc ret fcmovnbe inc push xchg sar mov sahf pop popf mov into add jbe fldl arpl push addl xchg (bad) call fstpl add mov xchg imull pop xor pop cmp jle or xchg inc lcall fild mov ret cmp popl clc stos mov nop fcompl xchg sbb lods aas or and jg push or jo pusha ss rcll and or loop add lahf inc call jge cmp sbb mov and (bad) imul aas into jb pop lret adc jp shlb mov das imul loope (bad) icebp push (bad) jp pop cmc into std push mov pop sub and bound xor dec sub imul or iret push das and sarb xor sub mov and push bound mov cmp add jno mov adc fwait into pop xor cmp js fldenv mov or push fldt pop sub test cwtl call cmpb pushf mov nop scas out test out bnd in sub fbld dec adc (bad) cwtl jnp mov outsl lcall out mov dec test icebp dec pop ja or mov out mov jns cmovs outsb loopne adc stos dec push movl mov add cs jo stc push js dec push jl adc loope aas or jl addr16 xchg out cmpsb cmp mov push loop movhps pop mov dec push mov dec cmp lret jb test loopne add or mov data16 and rdtsc (bad) mov rcr and fnstsw lahf sub sbb lret gs aas pop adc (bad) xchg lods dec idivl mov movsl in in (bad) sub sub xor iret fisttpll shrl pushf call aas and lea fidiv dec pop imul into in sub add stc lods jns sub dec sarb push push aam and cltd rcl inc pop mov dec stos jns or (bad) iret js cmp sarb cmc inc subl mov aas data16 mov jo fsubp xchg pop jbe push fiadd int xchg mov in mov movsl sbb inc loop outsb mov jmp mov mov popf dec mov addr16 mov lea gs xlat scas scas cmc or cmpb aad mov das clc cmp int3 push adc imul mov fisttpl movsb in pop in popf pop or ret xlat incl jl add jecxz fstl adc mov test jno add xor mov sbb out ret xor rorl addb mov inc pop push out pusha cs cmpsl out mov inc out (bad) aad test in inc lea push add lret fs jae in ja outsb scas (bad) mov ret sub fist xchg mov cmp ja ss mov in jb inc stos popa push mov jo dec mov je loope lahf and popf adc mov icebp adc push jo xchg das test lods push lret pop jg out push repnz lods das xor aas rcr add out leave inc pop (bad) jo jb fdivs vprotd fdivr jmp js aas popl dec pop jns jbe lds xor ja (bad) jno cmpsl pop enter and rorb sbb jb xchg cmpsl test addr16 decb or mov jno movsb sahf add dec inc sbb imul inc or cmp lea ja sub nop jns inc je mov mov pop fiaddl push rolb mov cld ror lds or iret das adc fwait or cli dec lods sbb imul and inc leave arpl adc dec cmpsl frstor aaa xchg stc out negb ds cltd inc adc push add and aaa je lods test popf xor add jb out pop cmp and test and pop sbb pop jg in out sbb push sbb jmp int3 mov push adc cmp adc inc lds and cmc cmc sbb sbb cmp movsb mov cmpsb inc xor bound ss test call xchg pop stos jae xchg mov fistp mov adc mov lea fwait mov sahf in inc scas js inc shlb lret add (bad) mov push incb inc out into sbb fnsave (bad) jmp (bad) mov addl cmp (bad) test add pusha mov inc sub xchg cmpsb in fsubrs cli inc dec test ja or jge daa cltd outsb sub sub jb mov bound add cmp dec jno call cmp dec sbb mov fwait and addl push outsl xchg stos ror popf enter push repz push dec stos imul sbb out sbb jno sti dec sub dec mov jae imul fcoml mov fisttp jl gs jns mov jp pop inc cmp fs and out (bad) mov pop lods push fsubrs cmpsb push mov sbb loopne jae sub or leave push jnp jae xor call dec jp gs clc neg popa ffree decb ljmp mov cltd fiadd (bad) mov (bad) repnz mov negl sub mov (bad) arpl jo int3 lahf ret sub fildll pop or cld mov in ret movsl xor pop loope cs and mov xor fbstp cli sub loop cmpsb sub stc sti push cwtl shrb in xor hlt call repnz xchg mov jge scas cmp movsl movsl adc into (bad) push sbb mov sbb mov inc dec pusha test aam arpl test ret cmp out test add xor ss imul (bad) xor sub jae xor jle imul and xchg into push xor sbb sub (bad) and sti hlt mov daa bound xor push std pop test inc sub xor sbb sub repnz stc or lock imul or jns testb sbb (bad) mov ljmp mov mov inc add bound fidiv jmp inc push pusha jae add (bad) int lods inc xor (bad) xchg adc push push and (bad) cli in mov or sbb dec mov flds scas adc lods out pop pop rorb in ljmp aad inc addl es jbe test pop add sbb adc mov (bad) cli dec sahf sub es cli mov cmpsb fcmovnb inc stc mov fnstcw icebp inc (bad) or (bad) ss push inc fdivrs leave js fbld or cmovbe movsb jp add mov dec inc movsl insl or mov ja xor jb mov and pop in cmpsl js sub or test (bad) mov sub cli jae ss imul mull mov mov fistl dec push mov push lcall fidiv lahf (bad) adc mov loopne jmp xor notb dec jl call repz or add (bad) push mov sahf cmpsl mull rol xchg mov adc stos add and shrl cmpsl dec fcoms hlt stos ds es shrl gs push (bad) xor jmp sbb fimull sarl adc jmp jg dec inc sar icebp pop jnp or jbe jno dec shrb mov lea adc addb fs push ja fidiv loope lock push jae pop or dec fildll ljmp xor ret in push lea and sbb daa pusha shrl mov into jns sub mov jge jbe iret clc sbb pusha push pushf jnp bnd xor mov (bad) mov mov xchg test and popf arpl dec pop loopne fdivr lret cmpsb sahf sub adc sbb jecxz stc movsb and insl fcomps and ja pushf cmp mov pop out jbe cli inc mov sbb (bad) cmp inc rclb dec ficom (bad) push mov sarl jo popf mov sub jbe test int3 xchg jne pushf jmp pop mov sub fidivrl shrb lods xchg mov jecxz and scas pop pop ja pushf rorb addl cs jl xor push lcall popa int mov mov ret das sbb aam lods adc push pop inc jo comiss les out sub ds inc mov xor nopl add add inc push xor nop sub sarl dec icebp mov and pushf (bad) mov ret xchg xor sub mov in cmp cltd push add pop inc mov int3 mul mov arpl sbb pop xchg inc movsb jne jl mov loope imull adc push xor imul rclb lock rol nop inc jb rcrb repnz add fnstcw mov shll rcll subl rolb pop adc push icebp addb jecxz sub mov aad xchg and push mov ljmp inc sbb fndisi(8087 mov mov lret sti inc test fsubrl adc xchg fbstp adc stc cli sub lret jns jo mov mov stos int3 sub outsb das inc popf ficompl add jle mov xchg jne jnp shlb lock jge in jmp pop sti cwtl ror incl sbb (bad) push int mov jl add inc enter or (bad) xchg and mov outsb cmpsl inc mov dec sub add jl mov aas or add (bad) fdivrp or lret mov lret pop pop add test mov mov push pop push rclb jle cmp inc add movsb scas (bad) push mov and jecxz push push (bad) xor jno xchg xor cmpsl aaa lcall xor or sub xchg pop (bad) jne sub out add fsubl jbe inc adc mov leave and jp inc fnstsw insl sub jb sbb (bad) dec push outsb ret shll xor inc outsb mov rorl adc push add mov ror imul inc mov jmp dec out (bad) cmc mov cmp bound lea mov and out dec pop fisttp jecxz inc adc push sti cmpsl cmpsb out stos lahf push push js jb sahf jne incl add fldenv sbb (bad) pop sub repz bound fbstp xchg cmp cmpsl stc aad xchg lcall pusha in and fistl ss (bad) xchg sbb xchg cmp test cmp movsb sub (bad) jne loop (bad) addb push jle inc test addr16 cwtl scas test addr16 jle push pop adc (bad) jbe mov cmp or lret push mov loopne lea (bad) mov scas insb pop leave or dec leave scas popl mov das scas in bound lret fimul add out aad imul jl aam test cmc sar mov add nop jle jle sti adc inc mov dec in mov jo and push and hlt in dec mov popf rol cs test shrl lds pusha xchg jno mov inc sub gs in inc sbb push or fdivrs or rolb lods es mov push das stos fcmovnu dec js sti pop fnstcw cli push sarb mov je sti mov mov pushf push jnp push mov movsl stos imul mulb (bad) pop gs cmpsb fildll repnz push aaa test push dec dec ss adc xchg xchg int cmp mov sbb ja sbbl jo jmp mov das negl incb repz lret inc repz mov mov enter sub test push cmp shll push lahf imul pop mov cmp pop jg add sbb rcrb loope into cmpsl imul test lods inc orl sbb dec add mov in cmp push sub jecxz jno sub idivb adc mov scas mov incb arpl (bad) stos cmpsl push push arpl jecxz push lret mov sub shll cmp pop cwtl mov ret and xlat (bad) out pop je mov sbb jns repz fisub mov and fcoms in mov gs xor pop clc mov jno jp imul cwtl mov dec mov dec cwtl and or jnp cmp xor cmp push in add mov sbb adc scas rorl mov arpl icebp xchg sti inc test popa fcoml lcall inc mov lret push adc mov in dec scas sbb pusha lea imul xor insb jbe cmp pushl test mov xchg ljmp push pop mov pusha mov inc (bad) (bad) lock cmc in (bad) loope cmc dec add in imull add ja inc sub rcr loope sahf dec call inc lret xor or leave push outsl orl inc pop pop pop cli je jg inc enter lahf lods fistp arpl lea pop ljmp pop mov push inc ljmp std sub inc bound orl adcl add dec jae pop jne pusha or ss fisttpl addr16 fbstp jmp xor pushf std out and xchg push and (bad) pop adc jb or (bad) jae or call mov xchg aaa popf xchg xor lock lds mov lods fidivrl jl jge lods jae and sub mov das std sub pop ss mov mov pop pop add or test sub dec fsubrs testl dec outsb or mov in jo insl xor lret cmpsl mov or sub movd out pop push mov pop push popf xor leave jb pusha (bad) hlt jl pop jp sub test or and scas and jae jp xor adc jbe icebp cmp pop faddl mov hlt pop aam lahf mov test mov adc mov xchg aas lahf pop leave pop inc pop add push arpl mov roll fnstsw sub cltd xchg pop dec (bad) mov outsb adc sub popa xchg je iret fs sahf xchg ficoml cli (bad) xchg adc mov push mov pushf sahf shrb mov fimul jnp and cmp mov mov (bad) dec (bad) mov lods hlt mov xchg xlat inc aam dec rorl adc leave lahf dec mov sub in jnp cli lods aaa fsubl xchg adc xchg dec repz add iret hlt mov daa pushf xchg push ss das pop cwtl or jmp in add (bad) movsl add pop leave cmpsb pop imul jecxz sub addr16 orl inc mov pusha dec (bad) je ds scas jmp jne,pn icebp mov lret pop in das and sti cmpsb nop pushf mov xchg dec jmp jae je out xor hlt clc cmpsl sub test cli xchg xchg mov call in sbb cs ret lds fnstenv iret cmpsl pop pop xchg and and rcl add push mov cmc mov iret stos mov dec mov sbb (bad) call cmpsb test sti sahf in jb jle dec aas fimul (bad) cwtl (bad) push outsl ljmp mov jns inc pop js bound pusha cmp add iret pop mov cmp pop pop sbb loopne sbb inc shl adc mov aas movl jmp fsubs cmp pop sub pop iret cltd and sbb int xor mov mov xchg hlt sub jecxz (bad) cmc jnp (bad) jno xor pop pop adc sub fcmovne mov ds add into mov js loope dec imul mov (bad) cmp imul sbb loope cmp jle cli subl addr16 mov sub mov xchg test dec cmpsl test ss add mov push push push addr16 jne daa mov add inc arpl jno inc lret push pop pop pop mov jb sub sbb out cmpsl aam rcl pop mov sbb cmc out mov pop dec or arpl push imul stc jnp das add cli in mov mov adc or mov (bad) ds cmp sub jnp repz out pop cwtl sti das dec sahf js in lods or jnp xor bound iret scas fs fdivrs div (bad) out ss dec push (bad) in pop push pop addr16 repz movsb imul and pop ja sbb (bad) lock ds sbb flds loope orl push call inc (bad) in mov and out outsl iret push xchg push push sub lds mov adc out insb bound mov cmp outsl xor aaa adc mov mov js (bad) in jmp push (bad) enter pushf mov xchg movsb test mov inc or jae outsl stos xor mov (bad) (bad) js xor (bad) sub faddl dec inc decl pop aas call pop movsl jl (bad) out jl out xchg lods inc jg jb xchg movsb in jbe mov cmpsb sti sbb mov ss cmp add fild jne xor fstpl negl mov je aaa pop dec mov ret pop mov sbb xchg out fwait and mov xchg shlb jecxz add aam dec xchg adcl imul or stos outsb test daa fwait pop mov inc sub scas (bad) repz jl aaa mov or out insl lahf (bad) dec sbb xchg xchg lea xlat (bad) je mov inc or ret (bad) aas movw ja push iret pop mov jo add pop push (bad) sarb dec add mov jne dec fsubp sub inc ja lret xchg mov daa sbb aad jbe sti xchg les jae clc loope daa mov (bad) jmp pop pop iret jbe out or jae sub icebp outsl cmp mov and cmp mov cmc xchg and adc or xchg shrb jmp insl (bad) xchg outsl leave pop xchg push jno adc sub ficompl jge int3 aam test jno out js rcrb fisubl push icebp xchg les fimull ret cmc clc lock inc fwait dec mov in pusha push mov fdiv sub pop lods xor jle or fdivs xor mov adc and push sub sarl (bad) sbb ljmp (bad) jae aas in je in or popl (bad) hlt nop/reserved mov sbb push lret jo add lahf inc xor jle push hlt xchg sub inc add add lret js push nop rep and in in int3 jl ljmp subl xchg fcomps lcall dec cmp adc push faddl faddl xlat mov mov jmp sarl and xchg movsb pop inc fwait test gs mov ret jns mov daa jecxz inc jg mov add lods out and pushf rorl inc jmp (bad) mov out mov xor mov pusha roll and cmp fcom xchg xchg cmp mov hlt movsl pop mov ja xchg int rcll mov std cmc adc xchg stos mov jecxz sbb in lds gs push lock sub and fnsave push test lret push insb fwait jae inc jbe mov fsubrl arpl jo jne mov outsb jle inc lahf mov push xorl sub sub mov add pop dec cmpsl cli test jmp add pop or pop mov (bad) jnp pop pop push push dec in or lcall inc push push adc jno dec push jne inc sub cmp mov test and pusha or cmovg stc xlat lret loop fisubrl bts mov push and lahf mov arpl jle xor xor pop jo push fs pop xorl add mov cmp daa insl cmc imul lods das mov lret enter cld enter xchg push or popf xor inc sub (bad) ss cmc imul cmp mov inc or mov xchg mov jge xor pop mov jo (bad) mov and mov ret inc fmuls ret insb in jns jno in sub sbb movlps je mov imul fs (bad) movsb call mov pop push mov or stos loope dec int xchg sub pop inc sub movsl pop scas test cs push pop push and bound jmp mov xor xor push insl out popa scas adc mov jge inc mov pushf rorb fstpt (bad) rol not pushf sub fistpll testl cwtl xchg mov lods fcmovne and insl mov fdiv fnstenv btr insl sbb popa shll stc pusha pusha imul (bad) and sbb xchg arpl mov sahf mov lcall ja ds adc or hlt sbbl rcrl imul sub insl cs iret ljmp fcomps push loop les std fdivs addl js (bad) and test pop push adc xchg pop arpl cli dec and inc sub or pushf aad pop jbe push insl adc in lcall shrb test inc mov dec imul mov xchg sahf mov out sub push int3 mov pop aaa cmc jns arpl std lret ret repz stc mov push divb popa test xor jno ret out (bad) aaa test outsb jge lret or push push ret jbe sarl jae bndldx mov mov (bad) dec fs call aam jl lahf sti cmp (bad) test repz int3 add mov and jns add add xor xor jns mov fwait add mov gs pop cmp mov cmc mov arpl rorl aas jb xchg sahf push sbb xor int3 sbb shrb jecxz xor xor push pusha ljmp xchg test in ror ret movsb dec jae (bad) fwait jb nop mov xchg fwait pop mov or mov (bad) gs aas sub popf dec jge rorb mov insb lock sti lret lret jb push (bad) je scas push jns popa mov and mov add or push rol or inc lds out or jbe test (bad) pop aam inc int3 lret rcrb mov xchg (bad) push push ds hlt add outsb pop pop movd aam mov mov sub cmp icebp push rorb out sahf ret idivl addr16 mov lods xchg cmpsb sub xor lods push dec inc fistp mov fstl icebp mov inc aaa or mulb (bad) lock sbb xchg sahf jl jne imul nop ljmp cmpsl js mov xchg and (bad) jg les lds cmp repz xor clc mov adc add out sbb and pop pop cli out iret sti or sbb int3 je (bad) idivb push xchg int test adc out in scas xchg das cmp add or sahf or xor and out mov or sub neg mov cmp andl and cmp mov lods sub iret addr16 push xor jbe adc dec (bad) fwait inc sbbl xchg lods cmp stos cltd loopne mov sub mov pop pop mov inc pop outsl iret cltd pop bound scas outsl hlt xor lret rcll push mov out stc inc movntps mov dec mov scas sbb int3 divl aad rorb sbb push into inc sub fmul mov jno inc cld xchg pop fs pop cli insb inc pop cltd pushf pop lea ja push scas je jle mov sahf in lock rolb daa inc pop sub outsl std (bad) (bad) xor cld mov mov cld xor sub insb push fwait cwtl push and and cmp jp (bad) mov sbb int pop jne mov or sbb int3 add out lds insb outsb (bad) (bad) dec adc stos xchg or jecxz stos addr16 cwtl adc imulb (bad) fptan into xor lcall (bad) lods inc and divb data16 push imul out mov push inc push aas mov sbb out cmp mov sbb (bad) out stc lods ss sbb add mov jne sbb xchg loopne add lock xor mov sbb ficomp xchg or gs fidivr pop flds adc push stc rclb dec insb jp jo push or in loop push out fldl (bad) jge loop jns cmp in dec xlat mov call das xor je and pop test xchg icebp gs pop rcrl inc lea pop jmp ret dec in leave sbb push cmp mov and das lahf ja outsl xor cmpsl adc cwtl and sets mov fidivl lret pushf in cltd pop lods lcall jecxz daa xor ror sbb lcall inc loope mov jg aam pop sahf xchg sbb js enter xchg dec (bad) xor cmp or pop int stos jge cmc mov (bad) jno push int3 call sarl imul adc inc jo push call xor (bad) outsl mov jp push sahf test pushl into lahf jne (bad) add mov loopne out imul icebp jecxz add pusha lds int3 icebp xchg or lret mov pop dec nop adc push vmovss push push inc mov ret push bound inc dec push sub and add sub addr16 xlat jns fs adc loop idivl call adc jae jnp enter (bad) and push push xchg sub fildl inc inc jmp frstor pop test sbb jle xchg cmc out mov mov scas icebp fs jae mov mov pop adc pop (bad) jbe mov adc js sub cmpsl add jmp and lds imul sub mov push or ljmp inc icebp popf je mov add push or dec pop or icebp js xor arpl icebp xlat lock cld add ljmp fbld popa arpl and and je cmp sbb lods inc or sbb cli repnz push test js and in mov xchg mov pop sbb jmp xchg outsl mov push and and cli pop pop ret push nop aaa scas fdivs (bad) iret sbb rcr sbb inc cmp sub adc pop and out (bad) mov icebp xchg popl inc inc leave sub insb mov sub ljmp ds push ret test ficoml out sub adc pop lea jmp icebp ds xchg pop fwait shrb or int3 add rsqrtps fimull js insb mov (bad) ficom jo out fsub dec mov sub mov push adc aad mov rcll aas adc rorb pop pop mov push adc fsubl test dec dec cli adc mov fwait das push testl or adc jecxz (bad) pop adc cmp sub dec rorb cmp xchg in inc cli adc push mov xchg in out lds arpl cltd inc push icebp inc pop sahf mov cmp stc adc push sub jnp jae dec jmp mov shrb orl sbb mov adc movsb scas ja call or enter fistpl addr16 jnp and insb jmp push push enter rclb push loope mov cmp adc pop outsb std cltd mov pop or stc add pop add (bad) cmpsl inc fcomps rclb sub fild xchg add ret sbb inc mov push ljmp cwtl inc cld jmp call xchg fildl xchg adc cwtl cmc imul movsb or xchg add push inc popf cmp or loope adc ss mov pusha (bad) negl mov xor dec jmp or mov dec or arpl mov add scas ficompl lahf call adc mov push xchg lret mov mov imull sub or ret mov add ret cmp stos xor lea sub fwait notb (bad) inc movsb lock sbb adc adc sti rorb cmpsl repz sbb dec xchg divl push inc ret leave jle xchg arpl xchg dec stos sti jecxz mov xchg pop add xchg cwtl mov jmp out add xor sti addl das dec xlat out pop popf push ss shl push jle jae push outsl hlt les into jmp sbb insb xchg loop addr16 mov jnp fcoml das push ljmp pop add mov push lds and jns insl add aaa scas loop pushf xchg out clc arpl orl outsl pop pusha (bad) loopne insb sbbl test mov mov xchg pop jne dec lea inc (bad) fmul sub sahf inc or out xchg ficomp std add in outsl mov cwtl mov hlt adc out outsl jg xchg sub loope fsincos mov mov cld add cmp jmp test cmp push rclb aam add outsb pop jge loopne push dec mov dec call adc sub inc sbb xor es (bad) ss decl les push (bad) faddl pop or call js sysexit xor sub stos fbld add mov sub xchg jnp push inc mov jp adc sbbb mov in add or stos test outsl fcompl jl fiadd xor push mov and and sahf gs adc fsubrl pop cld leave ljmp push sbb add std lret pusha adc fldenv in pop pop inc sbb (bad) adc cmp dec rclb sub iret fdivl mov mov cmpsl jbe aaa xor addr16 add je (bad) or xor gs pop vsubpd addl insl pop adc je leave insb mov lcall sbb sbb dec je cmpsb adc mov scas push mov daa leave xlat into or pop sbb jo mov sub aam xor fistpll in (bad) js lods or pop jbe ficompl and fsubrs sbb nop jmp xor iret pop pop flds push pop mov js ljmp loop xchg sub jnp scas jno xchg jo cs push dec int3 jmp adc sbb pop or cmpb pop sbbl iret mov stos xor iret push in (bad) lock leave push dec sub fndisi(8087 inc mov fildll inc movsl divb loop pop sbbb sbb int3 push ljmp fmull insb cmovbe mov xor fist mov ficompl add popf mov inc cmp jecxz daa stos pop inc lods sbb xchg add ja cs jge mov leave mov pop cwtl pusha rorl negl aam cmpsb jno dec jp push int3 lock dec add ret addr16 mov mov pop dec push ret jmp pop cmp jle jne or mov xor inc addr16 int3 sbb dec in fstl es popa stc xchg add out into add push pusha sti lret fidiv sbb jnp pop and push loop cmpsb fs xor (bad) out in jl xchg lods and roll ret xor push das leave mov jns mulb mov mov and jmp or in dec xchg push sbb cld lds sbb push adc insb mov mov (bad) inc and push fs scas and push mov (bad) divb enter ret sub rcl lds and mov cmpsb test into jae movsb adc loope dec mov xor pop sbb sub dec cli loope cmp std add dec xor jle and jl icebp pop cmpsl fsubrl pop pop mov mov add mov ljmp mov rolb adc fisubrl add (bad) mov xor jnp test movsb rcrb inc psrlq fisubr inc fsubl add pop inc cmp fs adc xchg xor jns int shrl out es in xlat pushf jmp or sti mul add or popf loope pusha cwtl nop pop jp (bad) mov (bad) loopne inc mov stc daa movsb (bad) imul mov repnz fwait int3 cltd cli imulb inc xor sbb leave pop (bad) (bad) lret dec imul add adc mov jbe xchg or ja loop xchg (bad) aad cmp aad shr and fldt xor add pop and adc push stos sub sbb repz insl arpl fs leave push dec mov push pop push imulb popf pushf mov daa sbb rcrb and jp test push test push jecxz repz outsb call arpl fsubl push jp cwtl jno lea gs push dec fdivs aaa xor jae jne push sub stos es add fsubp or or jo gs mov js jl,pn incl mov test push imul test stc rcrl into pmovmskb cmp in roll cwtl xchg (bad) mov lea (bad) cld or cwtl (bad) dec cmc pushf adc in pop add (bad) dec jle xchg adc jns lret (bad) lods push xor sub push iret dec (bad) js fcom (bad) sub dec mov leave sub in daa out cmpsl xor arpl push fsubl push cmp inc iret pop inc out jnp scas rcrl adc lock push xchg pop sbb adc add inc and ret mov xor mov leave or dec pop movsb aaa movsb and push int inc push cmp mov stos leave fnstcw pop xchg and pop andb icebp pop flds rcrl pop call pop mov fdivs inc mov in std scas adc mov ljmp dec mov mov hlt cs orb (bad) (bad) add lret sub int3 out es adc inc cltd lcall outsb push test and out jle ficom sub push mov xor ljmp out sahf sbb fwait stos jle push mov and push repnz inc adc mov lds fimull mov aam iret sarb and scas xor fs ficompl push cmp jne pushf adc out or pop in aaa fwait cmp inc daa mov stc fmulp push nop push or addr16 ret or mov sbb scas (bad) dec popa mov and enter cmpsb cmp sub int and shl (bad) mov xor mov cmpsb lds and into data16 test xchg imul push dec test mov mov cmp mov and out dec inc insb enter mov adc incl sub push addb pop dec inc sbb data16 outsl fdivl xchg nop test lea in jg fwait (bad) jo das push out call push jge xor lea cmpsb adc jo ljmp xchg lock fstl pop inc ljmp pop (bad) mov sub pop fstp icebp ds sbb rcl pop lcallw sbb mov sub es aas ja sub lock sub outsb (bad) sar adc push mov sbbl and sub sbb cmp push xchg rclb jo jno in xor and xchg loope roll test in fprem1 pop clc adc es add dec xor into outsl sub cmp enter ljmp insl jnp fimul jl std icebp and cmp and sub nop push inc cmp mov dec sbb sbb mov std rcrl movsb push mov insb jl xchg ds xchg ret push ficom mov mov cmp inc pop and xchg ret test push (bad) lock inc test rcrb imul ret adc pop cltd ds (bad) divl loopne xchg clc cld enter cmpsl mov lea push aaa mov jno push mov pop lcall dec pop andb add movsb jmp inc pop adc adc mov xor ud2 or test xor push aaa push out jmp popf ret dec hlt pop (bad) jle aas bound xchg push movsl hlt leave inc cmp or movsl dec mov cs xlat lahf in (bad) mov mov mov in and out movsl lock shlb in mov out inc xchg dec mov aam adc in add call aas jb lret dec aad xchg loope jo call lods xchg je sahf sti std jg xchg xor cmp inc jmp push mov lock inc mov test mov jp xchg nop cmp sub imull data16 dec jle hlt je inc and jne xchg cltd cmp pusha jmp add inc enter or and inc adc lret pop insl sti inc decb loope adc mov daa fmull xchg daa push test sti out mov mov mov adc mov sub lea call movsb stos push mov in sbb adcl or sub retw ljmp out and inc mov and sub sbb push and in das pop adc daa mov mov push fisub in xchg ja sbb int xchg gs mov xchg mov sbb insl jae push mov adcl add push add xchg cwtl xor xor (bad) arpl daa jp jg lds das imul call xchg pop sbb push shl outsl mov in xlat dec mov aas jl cs lds xor cmp mov add mov shlb pop adc cmp lret imul dec leave mov cmp cmp fdivl pop jnp jne mov mov ret subl push mov fwait sbb stos andl or mov in add or lds test outsl push push xor rclb test jbe repz movb sub adc xchg cld xor xlat (bad) dec lea xorb clc mov (bad) jo adc andb cmp inc dec insl pop sub rcrl push in ljmp inc cltd dec hlt mov jbe jns nop out cs (bad) je cmp pop jno stc mov jne loopne xor xchg mov xlat mov sbb insl and scas push pop xchg pop cmp pop mov (bad) loopne ds arpl (bad) lret mov push aad incl jne xor cld mov jb flds rol (bad) xchg iret add adc or mov clc dec mov bound in dec sub cmp inc and push out clc in xchg mov popf xchg fmull cmp out test add daa jecxz pushf push call adc enter mov sbb aam push or and call push or dec dec inc cmp (bad) cmp mov pusha pop dec inc ret push stos lahf scas mov jmp adc mov xlat jno pop cwtl mov rcrl mov jbe (bad) pop lock xchg sub mov pusha test sbb pop dec add ljmp dec push pop add jbe xor popf mov or outsl pushf or in int3 add testl out adc xlat add adc (bad) mov mov sarb sub push xor stos in xchg sub (bad) jecxz xchg inc jmp (bad) mov dec push pop lcall sub and dec pusha mov and sub mov ljmp jg push cmp ss jl (bad) (bad) cltd pop adc sub mov fistp mov dec subb sti push popa push in push psrlw insb lea mov push adc add pop les loope or mov xor or loopne icebp cld push xchg push xchg insb sub cwtl mov pop call cmp jecxz out mov sbb fnstenv mov and xchg stos lock push adc push test pusha js (bad) test cltd imul dec cld mov xchg inc mov es test push cli (bad) cmp mov rolb int out xorl repnz imul pop sub or ficomp cmpsb movsb ljmp and aad pop mov xor and mov mov scas mov insl in xchg pop pusha dec or jo fstl dec and xorl push mov (bad) mov add lds in jmp mov lods jecxz test sbb movsb pop pop mov popa stos scas imul pop hlt cmp into lods inc popa or dec fwait rorb in or ds xchg adc js scas movsl cmc cmp mov dec push fnstenv pop mov mov adc je jnp sarb sub test pop mov cmpsb add push sub comiss jbe adcl popf pop jmp (bad) jno inc mov pop sub dec hlt sbb add rclb sbb xchg mov jg pushl fwait adc cmp xchg add insl pop xlat bound aad and and outsl popf adc pop ljmp test xor popfw outsb pop sbb push (bad) fnstcw sbb aas mov (bad) mov fmuls xchg sbb test xor (bad) dec push xchg inc and mov lcall mov xchg mov int3 insl mov xor sbb fimull jecxz fwait sbb fadd mov lea imul fdivl in mov xor jb test jnp cwtl jbe lahf xor rcrl ret rorl xchg pop xchg inc sub test push and outsl loop xchg lock pop xorl jnp test xor jl mov ret jg cmp mov les cmp imul mov sub xor sbb sub ljmp dec inc mov ljmp inc cwtl orb imul adc les mov inc cmp aaa stos mov push (bad) mov lods push pop out pop fstp add sbb cmp les sub cmpl or (bad) shrl stos test ret in jb add popa shrb or lret shrl mov sub dec loope ret dec adc mov dec xchg (bad) idivb add stos std fcoml fwait enter sbb xchg hlt mov repnz test or mov out jbe (bad) fdivl cmpsb shll mov test push call dec xor lds in out sub fldcw cmp scas fcmovne jmp sbb lret aad inc enter mov push jg js mov push xchg inc rorl sbb jle cmp pop stos das scas iret mov testl out push pop and jmp lcall outsl push add add mov adc mov lcall inc and xchg mov stos jb unpcklps scas and dec or pop mov lret in push test pushf sti sub sahf xor jbe dec sub out sub push jl scas (bad) xor ja xor imul xor xor mov sub xchg pop in pop ljmp pop mov das mov push jnp and mov mov ja mov scas inc xor out aaa sub push sar inc or or mov mov cmp mov or fnstenv jg push ljmp out scas push and rolb jp (bad) jle lcall inc hlt fld mov jge test inc (bad) lock cmpsl jnp inc dec pushf fwait pop pop clc ss jns pop jb cmpsb aam repnz scas sub adc test std fadd adc and xchg les jmp or imul imul sbb sbb pusha add sub push pop mov lods ljmp mov pop cmp shlb fsubrs aam mov push sbb and xchg dec int3 daa mov js jo aam jp cwtl cwtl sarl and cmp mov fstl (bad) fwait (bad) xchg cltd fucomp cwtl inc ss jno lds jnp add pop aad xor sar and jmp add cmp aam lods or xchg xchg cmc icebp stc xor in adc jle push stos xchg lahf add lahf push cli push adc inc mov sahf fcoml lds rcl call lock gs pop movsl ds jp xor das inc int3 or lods ljmp mov jecxz pop jns repz xchg popa movsl add lds les xchg lahf pop pop loop movsb pop repz sub push push jp cli mov insl push scas mov and ret aas cmp aaa sbb cli adc jmp lock jns sub cltd xchg pop mov add pop into test aaa mov test sti push xchg repnz sahf jb test adc bound inc fwait shr adc inc add dec push push ja (bad) push jl aam dec inc movsl and test lods mov push push cwtl push dec mov and jg (bad) mov add ret notl pop stos adc lods scas loopne mov xchg fdivrs pop (bad) sbbb cmpl fimull or push cs fs repz mov adc int3 push addr16 xchg jmp orb aam std sub mov xor adc into fiaddl jmp in mov enter in lret outsl rolb lea jnp or pop bound lock xorl cld fcmovnbe iret fcoms sti jae lock xor xor js mov push stos scas mov inc dec xchg mov and add sbb xchg or jle push es lret lcall jle lods rcrb jnp xor dec mov hlt sbb adc lret xor xor dec push pop dec and cltd bound cmp fsub lahf (bad) xor lock sarb (bad) ja enter and mov and insl loop jg int cmp inc fs addl pop jbe call add test jg (bad) clc add enter jg (bad) lds xor mov vxorpd sbb xchg leave (bad) std cmpsl fcmovnbe xchg aad jmp add adc or jbe adc adc push shr inc jecxz fwait adc cli jl imul or push jbe sti pop dec mov push add push iret je movsb and mov cmpsb into push stc in mov mov fld out and inc adc mov jns repz sub jne mov mov inc pop cmp mov js test (bad) pop pop flds (bad) or jge mov adc xchg lret and rcrl mov xor fisub mov mov mov data16 and mov pop rcl adc dec xlat in cmp pop int3 rorb pop and fwait push loopne or imul jmp fadd sbb adc and outsb (bad) int and jle mov sbb rcrb imulb mov dec pushf (bad) or cld int3 cmpsb out xor lea mov xor sbb sahf popf (bad) mov xlat sahf out loope test dec and out ss in fsub or and sub mov arpl add sbb xor dec aam and mov int adc mov adc push movsb sub into cwtl cs xchg fmul fxch jno aad imul pop jb fsubrp add sbb stos xor fistp jbe cmp popf mov push stos mov imul push cwtl jge shr (bad) mov inc adc cmp jo daa pop add out mov rclb xchg std fsubrp icebp or adc roll xchg add fnstcw mov and sub inc lods mov out leave jge test das add ja in dec stos gs out pop xor pop mov jb dec push sub pop jno mov mov sbb in mov pop push imul and es cmpsl inc xchg (bad) xor add pop jmp out bound and call (bad) (bad) lcallw xchg mov loopne lcall popf push shr add repz adc int3 push daa xchg jl call xchg lcall push xchg jo add dec push sub movl mov sub sub (bad) enter or out cmp adc lock cmp jp scas or (bad) (bad) (bad) sub sub add lds jno xor push repnz movsb mov mov stos lret les dec jp (bad) hlt daa mov popa test inc inc insb mov stos and cmp (bad) mov fs cmp (bad) negb sbb repnz cmovg (bad) lock and iret sbb adc aas fnclex (bad) imull neg mov adc (bad) popa jmp lret ret fistpll sbb fsubrl fsubl (bad) lock aam xorl xlat sub jne rcrl push rorb bound out add xor mov popf pop sbb jae (bad) mov or je and das add adc dec mov mov adc xchg out ljmp and outsb and mov push test adc pop sbb enter sub outsb jmp xchg mov xchg ss std lods rorb mov mov into fdivrs dec mov loopne mov push daa and js xchg mov pop jb js in out sbb mov or and fsubrl pop insb cmp mov inc (bad) cmp ret or insl cmc cmp mov ljmp xchg ret mov decb adc push dec lock aad pop outsb and mov repnz push mov pop scas mov jmp outsb cli inc lcall bound icebp sub out jno mov out inc lcall mov push jl dec sub ss xor je jns jnp notb mov call insb cwtl mov sahf popa test fldz jnp daa add dec clc adc js inc inc xor test fwait in repnz mov hlt or fsubr in adc int3 je or imul les add fst cmp sub or movsl es arpl std jns mov loopne insl (bad) cmp jbe jno mov repnz sbbl jbe lock dec test jbe mov cltd aas cmp add dec jecxz jle add or add int3 inc (bad) sbb dec jg or (bad) sbb sub pop fwait cmp jecxz cmp push sub pop add lret push push adc (bad) icebp sub sbb mov mov sub dec ud2 es stos inc ljmp sbb xchg mov adc mov pop lods dec movsl mov ficompl jnp push jns xchg cwtl in jle mov sub pop cmp push (bad) popa cmp pop xchg jmp rcl (bad) pushf mov in (bad) xchg cmpsl xor out pop pop outsl je mov dec xchg cmp lret or xchg mov sub jne (bad) or out movsb inc sti or stc in bound jbe jmp dec cmc dec pop mov cs dec jle repnz sbb pop sbb push jge out xchg jbe loopne push xchg test aad lcall add mov mov ret das push ljmp cmp xlat int3 pop jbe pop mov fimul inc addr16 loope jns (bad) (bad) repnz (bad) fldenv ret push cmp repz or sub add cwtl sarl cmp push icebp mov pushf clc sub jmp sub or dec jbe cwtl adc data16 push inc fiaddl push ss cmp xchg inc mov jnp lods ja negl fistpl bound mov pusha popf inc movsb ljmp aaa push stos pop xchg pop test fimul adc pop inc pop mov dec flds jmp aam sbb fstps leave jle lret or dec (bad) pushl add jne (bad) jo push int lea js lcall inc les outsl mov cwtl iret (bad) mov adc and sub icebp push cs sub inc aad aaa mov xchg cmp movsl jns popf frstor in cmp (bad) fisubrl mov adc mov mov mov insl icebp out ljmp rcrl in dec scas lahf dec (bad) mov inc mov jns cld push sbb call test lds jo js jge adc pop mov mov pop lock loop out sbb dec jl jp mov test inc rcrb (bad) xchg push clc test fsts and jb mov rolb stos push fmull mov xor push adc sub lods lea mov stos xor ret arpl lret (bad) cmp fimull stos mov ds sub test test inc adc (bad) xchg mov push scas hlt (bad) inc fdivrs test out mov pop xchg ret into pop sub cmpsl fisubr mov dec and das aad or adc xchg cmp lret inc sub pop sti sbb icebp shrl movsb pusha fiaddl xor arpl aaa cmp rcll outsl mov jecxz xchg mov mov cmp mov jns jo xor xor adc rol push or mov or mov dec jg xor xor jl das enter or out loop test lahf xchg rcrl rcr sub push imull jg aas add sub cmpsl mov xchg rep test xor mov xor cmp jle jg and imul adc int add jne mov xchg and outsl sub movsl xchg pop mov adc and in inc adc pop xlat xchg cmp ds inc mov inc adc in repz negb mov (bad) xchg rolb loopne stos in inc sub lret fsubl lods jp push xchg mov and (bad) je dec pop jae jg mov repnz dec dec (bad) stos mov xchg arpl icebp rol sarb jecxz jg stos stos outsl icebp mov aad and lss inc push push sub add lea xchg cmp roll cli xchg sub pushf mov fucom mov adc mov out inc or data16 mov or jmp dec mov test sbb or jge pop pop ljmp fsubrs sbb sbb out adc mov adc jmp push mov stos rcll shlb hlt cli out jmp scas cmpb je xchg sbb mov test scas push mov cmp mov fs repz pusha lds aad add adc jb jmp mov sarb xchg add mov jl mov mov fdivl les fdiv dec add and xchg clc push pusha notl cmp fadds mov jne add cmp cmp clc sbb xchg mov lahf push pop call pusha negl jmp aam xor sbb adc lock mov push mov scas repz jl roll (bad) xor fisttpl jle lock mov scas xchg cwtl add nopl nop stc loop sbb push mov pop stos lock xchg sub add fisubrl sahf dec ficompl add and xlat or jp jle xchg mov out push mov sub subl rcr push jo out lods popa pop pop cmpsb cmpsl aaa es out dec sub dec jge or dec sub fbstp xor (bad) hlt cmp and pop push add inc xchg mov lret push jae push leave orl fcoml clc mov dec stos lods int mov add jns jnp fidivr test or push outsb in pop xbegin cmp push mov ja push push jne roll or fnstcw rcll movsb jnp ret add mov stc lcall cs xchg adc scas cmpsl insb mov sti movsb pop xchg and inc mov lods repz aaa mov xor pop pop das cmp jae inc ja push adc (bad) ficomp add out xchg repz out mov lea and lret inc xor sub jae push addr16 xchg mov push jae out into stos and (bad) js sbb xor arpl ss ret xchg test (bad) xor addr16 sbb adc (bad) add popf mov (bad) push daa adc ljmp cmpsl cld or inc mov jmp or mov repnz leave add stos adc sahf cmp inc ljmp sti cli test or je scas in mov add lcall lock stos stos inc test or add inc out cmp pop sete push adc xchg lods fs int xor mov adc out mov ds loope adc or es gs push test mov int3 xchg pminub xor fwait inc arpl mov mov jns data16 xchg movsl arpl mov xchg inc adc xor pop push pop push cmp sbb lcall xorb dec stos jl popa sar mov cld push jo lds (bad) jl insl pop std daa add push bound mov out int push and scas or mov sub fildll mov pop push pop fcmovne sahf pop cs inc pop lcall push add ss (bad) out dec sbb outsl dec mov loop mov pop dec mov test int3 fidiv in sub gs dec lret cs xchg adc cmp push cli lods cli sbb stc fs mov mov add xchg rcl les iret loope stos push xor fdivs loopne lods stos cmc mov xchg nop or dec fstps and mov fs adc push and and sti jae aas fsubrp xchg inc dec test loopne fstpl loop in aad push nop sub pop xchg mov enter jo lea out in ret mov stos xchg adc mov shrb jo and call pop ret inc adc aam js dec pop pop rol mov xor mov sub adc clc (bad) mov or out dec sbb mov jmp out push in adc into (bad) outsl aad movsb int3 lods aad mov movsl (bad) push mov arpl push (bad) loop inc or xor cltd sub push sub (bad) outsb cltd xor out sub ss (bad) call push (bad) mov jmp iret in jmp dec outsb and mov ret mov dec xchg outsb mov shlb push cld rorl adc mov in ss lods out imul (bad) pop sbb idivl add inc lcall push movsb negl enter enter decl enter inc (bad) xlat xor xor rcl sub jo (bad) jbe mov cld (bad) fsts xor mov mov mov pop mov lret shrl cld icebp jnp or mov sub daa jns dec pop and xor mov inc stc xchg je dec mov adc out ds loop std add jns adc add loopne cmpsl enter jnp iret push jbe xchg mov inc (bad) dec sub das cmp mov repnz push add out arpl add dec leave pusha and je rcll sub and es mov lahf arpl repz cli sbb and daa and adc jno (bad) sub ds dec xor (bad) xchg daa outsb and adc and mov mov add (bad) shrl dec icebp or jle push in imul mov dec dec je mov push scas adc sub es push inc inc scas rorb sub in mov mov insb push jecxz cmp jmp cmp daa dec xor fisttpl jae pop mov data16 fstp (bad) leave dec aad into fwait fwait jae les adc repz sub or mov mov scas dec sub jmp lds pusha cmpsl gs sahf mov js mov mov in stos mov push test mov or dec mov mov xor xchg cmp push int mov add insl loop xchg je or mov xor push cmpsb adc repz test imul jg out mov mov mov repnz lock sbb cli inc pop lock mov js cltd daa fsubl push dec (bad) leave in in in aam mov icebp (bad) scas das jmp mov enter test js shlb dec push es jle in push add and imul push adc jnp daa xchg jge imul inc xlat mov sbb inc sbb sub ret cmp roll fs push and jecxz divb sbb jge pusha jne in daa out test mov pop int3 jb scas insl mov loope jle xor inc mov mov outsl lods cmp sub dec xor mov (bad) ret cli cmp (bad) sub dec cs and adc mov push sub daa mov stos mov xlat cmp mov aas or leave rorl and insb jmp jno js mov imul xor fldenv or cmp scas out xchg pop (bad) jg in addr16 dec jae add popf test int3 cmp push ret push fsubrl mov dec cltd in cmp cltd cmp stos adc sbb aad add pusha je fldenv arpl pop jae sbb pop (bad) sub push lods mov or cmpsb mov test cmp add jg jb add nop dec lock mov das cmp int3 cli pop popf push clc dec pusha sbb cwtl jne push imul inc ss add xor orb inc les addr16 sub sub loope mov pop cmp jbe cmpsl ret lret rclb lods je pop mov cltd jecxz nop sbb negl test imul adc dec xchg bound sub icebp in sbb addl pushf inc push fnsave (bad) cmp dec mov rcll push and stos push or cmpsl nop pop ret pushf stos stos and addl sbb sub (bad) js mov loop loopne lock fsubrs (bad) cmpsl push call push lds cs jbe adc stc orl cwtl int or mov ljmp fldcw mov mov pop or cmp inc std jecxz push add pushf enter popa mov or inc jns mov jne mov mov xchg call sbb pop dec out fistl fnstcw xor inc scas fsubr mov mov adc mov outsl mov sub or sub push mov arpl add and add cmp push pop popa adc or shlb mov (bad) mov jp or xchg call out jno cmpsb das dec jmp in mov (bad) dec xor adc sbb in je jno adc repnz adc adc (bad) pop popf adc or pop ss mov cld adc (bad) lea cs daa and add cld cld xor std outsl (bad) mov gs adc cmp in js add or bound lret stos insl sub push push loopne fist xchg incb mov adc xchg push jp stc fidivl cmp fnstcw cli enter pop fdivrs test iret movsb scas inc in cmpsb push cmpl mov push popa outsl mov cli popa and mov in dec push in mov jbe pop stos repnz mov stos pop sbb xor sti (bad) xor fs sbb push inc and mov clc in jno shll loop mov pushf (bad) and sarl cs add mov mov rcl sbb insb xchg cmp cmp loope imul nop sub pusha xchg je pusha pop mov mov and popa or push xchg inc xor cli cmovs mov sub mov cmp sub rclb inc push sub popa push xchg add cwtl dec rorb add ljmp mov cmp lods add fidivr pop mov loope cmc test or fs sub fs dec gs xor fwait jecxz adc pusha iret xor test push test adc (bad) enter or fwait (bad) sub clc insl push ljmp (bad) mov mov sbb (bad) ljmp es icebp fs adc in jge ficom mov ds cmpsb sub fistpll inc lcall lods ds sub xor push inc add sub fdivrs mov pop (bad) rorl push jne mov pop pop jg jl mov call sbb hlt mov dec or jno rol sub fdivrl pushf and mov xchg inc movsb iret jmp push jl lret nop adc enter cmp and jg push pop sahf mov or jmp in and je jecxz sbb inc shrb jo sub addr16 mov add movsl mov sub xchg hlt mov cwtl xor loop sbb dec in je inc sbb inc rolb inc xchg add js dec sub sbbl sbb push ja addr16 dec inc pop ss incb xchg push pop scas popa out add (bad) push lcall sbb clc mov js iret das adc leave fisttpll mov insl mov mov push jno xor mov and in fs xor in jmp lcall in mov in mov rcl test arpl rcrb dec divb iret test daa mov test and mov add or (bad) jmp into icebp sahf aad adc xchg arpl xor nop add dec orl ds fisttpll in mov mov mov cmp adc lcall leave (bad) or js lock (bad) imull (bad) mov dec call je fstps sti adc xchg shlb out adc adc mov loope dec jno jmp cmpsl inc cmp xchg popf mov jae push xchg mov sbb popf div jne out loop inc pop sub cltd pop mov push int3 in inc stos fucomi xor xor jnp incl sub xor mov jg lods pop push and push adc xchg dec ds mov scas pop sub mov adc lret sub (bad) xor dec lock stos (bad) pop aam mov test jmp out ja mov cmc adcl sub sahf insb ret lret in xchg es mov xor addl test enter (bad) sub ja mov lea or movsb xchg aas cmpsb push inc ret stc or sahf pop xchg movd div push fldenv std dec adc mov pop in adc jp mov xchg push outsb jo pop push out dec jl pop pop xchg mov xchg jp in dec scas pushf in sbb add xchg jp dec add divl xchg jge and cmpsl mov inc xor test push out loop push js stos and add (bad) push sbb mov push rolb ja out repnz cs cs hlt mov inc out sub inc fs dec mov and movsb jecxz and or push cli pop jmp push add test gs setbe out ret push arpl fldlg2 jnp mov jno popa mov jnp xlat push test pop push push push test imul jp movaps push insl repnz bound into sbb and fiaddl xacquire ljmp mov push push dec xor cmpsb add ds and and shl cmpb lret mov insl mov hlt mov fcompl mov ficomp lea mov fcomip in push mov cmpsl iret add cmp rol inc lret fbstp ret jb or xchg cs jnp xor mov xchg enter clc out inc and jae or aaa mov insl jmp divb ja sub push xor fstpl sbb xchg shlb loop ret xor push push fsubrs push dec lods sub cld or mov mov xor jb movsb sub push sbb add shrb fisubr mov pop and leave push fisubr or in out (bad) add adc sbb out int hlt lret fistpl adc popa pop test mov xor insb aas dec dec out gs or aad jl mov aaa loopne sbb push push inc stos cmp and inc test jmp loope bound loope jb outsb pop inc test shr in and int3 rorl test lret dec ja imull lahf dec pop out shr inc mov sub iret xor mov lods fmuls mov icebp (bad) push fwait ret es or adc lcall loope pop das cld inc pop mov dec inc push xlat test pop std dec jmp push pusha mov inc adc xchg push or lds in stos cwtl push in fdivrp add add and xor xchg xchg je lods (bad) pushf setns iret leave or es frstor leave dec jge aas pop cmc push test fistl insl or or or inc icebp loope enter mov push mov enter negb and inc jecxz add dec scas cmp jp mov (bad) push hlt aam (bad) hlt adc xor push inc mov fldpi in xchg loop dec push cs ds (bad) (bad) mov xor shrl dec xor popa jmp xchg scas pop ret sub call ljmp enter mov daa frstor sub movsb mov js pop int3 and mov mov xor cmp xor mov test jle rolb fcmovnu jbe and test scas imul sub cmpsb mov imul fiaddl bound and pop xchg sbb rcl outsb cmp cli inc test mov in sub call lret outsb or xchg dec jbe pop mov mov xchg popa mov test fcomps inc out mov into jno adc bound dec rolb cmp and xor shll and inc mov arpl sub sub dec scas outsb out mov roll xchg test add ss push sbb cld push mov fs out jg mov cld jmp xchg dec shrl in mov xor mov pop test jl mov jbe in out jmp adc fisttpl jle cmp int jmp inc push cmp pop jb (bad) xchg push push xchg jle (bad) xor add int dec cmpsl clc mov out nopl xor ljmp mov (bad) mov fdecstp push in cld ja mov test pop lret outsl push sarb ljmp jg fcmovbe jge inc dec mov jne jle cli xchg arpl test sbb push dec jl addl sub dec pop mov mov dec push cmp xor cmpsl lds test jb cmp push addr16 mov cmpsb out out gs add jno xchg fmull push and movsl daa enter sbb cmp je test cmc add iret sbb cmp movsb xchg arpl bound loop mov mov std sub jmp nop xorb sbbl jbe lahf in mov test hlt mov pop outsl xor js mov (bad) jo mov mov mov cmp loope or sbb mov xchg (bad) shrl sub push xor sbb jg mov jmp xchg test shrl movsl adc arpl (bad) adc lds mov inc cmpsb push mov dec ret repz in fmul adc pop sbb int outsl fsubrl (bad) mov sub (bad) dec jne cmpb or mov pop cmp das dec fisttp cltd mov dec idiv insb pop mov mov movsb jecxz sbb push mov xchg sbb cmovbe cs lods outsl jecxz inc pop jp xchg push jmp xchg add aam cmp rorl aad leave adc jns test shl and xor xlat push sti mov xchg cmp out imul xchg jecxz pop push cmp and int pop cmp js sti int xchg clc sbb pop fs xchg cmpsl in sub scas pop add add push addr16 fnstcw mov add je movsl sahf stc jbe xchg (bad) jge loope js push push mov subb (bad) icebp pop loop roll xor cli lcall inc inc rolb add cli out xchg inc cmp cld cwtl ds in ja mov inc daa repnz fsts lods fsubr in mov and lods into jecxz pop (bad) imul cmp cmpsb xchg in dec imul jb and ret loope mov les and xlat test jo and lea jnp in out (bad) adc or and (bad) insl mov dec dec xlat cld sbb add push add xor imul pop xlat repnz push (bad) jo mov lea fwait cwtl push out sbbl sub xor les fwait inc dec mov lods and xchg push mov ja jg ljmp mov push clc dec and mov mov sbb test or xchg in inc je in xchg in xchg ret cli or dec xor mov pop xor mov or shlb and loop in adc aam (bad) fidivr popa sub enter addr16 sub enter lea or int3 pop (bad) or mov mov insb or jno ss mov xchg sub insb add or mov or mov mov push mov js mov xlat sbb xor cltd xor lret ds fldenv popf roll adc inc and adc aad test fs sub inc fbld dec sub movsl rorl shrb add movsb loop stos dec ret dec sub jg addr16 jle aas adc adc not test repnz mov xchg sub mov (bad) notb out cld sub pop adc sbb add in push jge jnp outsb ss into sbb pop pushf or movzbl (bad) jmp in mov jg xchg pop cmc push cltd jp movsl inc jo cmp pop sbb fs and imul add jmp gs sbb or loop fistpl popf mov pop scas push jl shll addl stos inc sub jae pop sub xchg sti cmp cmp or xchg or fldenv jno aad xchg xchg push or adc test loopne cmpsl xchg mov or sbb add (bad) pushf in xor jo daa (bad) fucom mov js lcall sub inc jae xor mov cmp jmp pop sub xchg mov aas (bad) and or mov dec cwtl mov sbb mov mov ret repz jmp repnz sub pushl and movsb addr16 mov je push dec rolb or cmp sarb je (bad) push mov (bad) out int3 popf jbe mov xchg pop cmp ret arpl sbb pushf rol jns cmp push es lret sbb shll outsl jae push fsubs xchg into hlt adc mov push add jbe adc pop cmpsl nop xchg mov rcrl dec push mov out dec pop sub int rep push sbb pop sbb add cmp xor push daa movsl pop push or mov inc pop and pop out imul inc jmp lcall inc daa es inc les xchg scas and (bad) xor mov (bad) pop jg or dec and cli imul xchg and pop imul adc sbb (bad) (bad) test cmp pop xchg adc inc daa or jp pop jle pop jno xchg movsl pop or cmpsb dec push call and cltd (bad) mov push mov test push std mull inc sbb test repz xlat cmp and xlat sbb aam lods jmp cmp sahf and out xor cmp jne test jmp aad decb insl xrelease out inc ret pop mov leave adc cmc jmp lea push enter rdtsc push repnz mov push nop js dec (bad) jae in push jl leave nop jb inc mov mov in sub mov out fiaddl (bad) xor popf adc jb stos jo pop pop lock out xor add xlat mov mov subl lret pop sbb mov add rolb jmp and pop dec in cs inc xchg ss cltd sub (bad) inc insb stos jp jecxz xchg cmpsl jnp sbb mov test jl cmp imul push fs add cmp daa add fwait (bad) call daa movb mov ja cwtl stc pop sub xor testl jecxz shll inc push imul loopne adc fdivl sbb push lret pop jnp mov jecxz pop sar push (bad) mov das pushf jmp scas in mov (bad) fldcw gs jbe test loope insl int dec lea fild pop jp in lret inc cmp fwait aad xor mov sub mov call jb iret in inc fstpl and mov adcl xor xchg lret pop jle outsl in popf ss stc popa or xchg insb stc mov cs fstpl cmp mov mov lods add and add inc mov adc iret push in mov inc sbb mov adc pop mov (bad) pop dec movsl and jl (bad) push insb xchg sub das daa sysenter fisub je mov subl stc adc push (bad) in pushf cmp push pop mov xchg add mov cld dec jb pop imul pop mov das jl jg or mov aaa inc fimull in ds push inc sti sbb cwtl cs insb adc mov pusha aad jmp sbbb mov iret sub pusha push push arpl xor hlt mov cli mov lea ja daa push stos and adc out in cmp cmc pop inc pop mov fs outsl rolb inc stc out cmc xchg or add xchg inc xchg push mov in add shrl cwtl popa aaa xchg adc mov aam pop addb adc pop test inc and xchg dec inc mov jg in call nop pushf xor jp pusha sbb (bad) stos jmp inc mov sbb out stc test mov lea scas pop test add addr16 sbb rorb test pop (bad) fsts xchg mov inc lods pop mov stos inc insb push out insl aas jno mov and lahf ja enter in lods jbe push out sbb sbb add mov pop scas in xchg adc popf inc cmc dec in inc and xchg nop je adc popa mov sar push arpl or aaa fldt aas inc (bad) and sbb (bad) lret xchg outsb jb mov xchg stos mov pushf sbb pop xchg ljmp insl ds notl aaa insb outsb sahf notb stos es lret out dec hlt int3 (bad) xor fwait sub cld push dec sub inc xor test (bad) in mov (bad) aaa and jne dec cmpsl out in dec aad pushf insb push pop jb sub ds xchg sbb hlt int mov xchg movsb popf inc mov or aam cmp data16 fcoml lret jge sbb test mov and lock sbb add imulb inc mov mov xchg (bad) stos adcw add fwait and inc mov cmc xlat aas add pop scas fwait scas jge (bad) fisubl dec data16 jae inc mov push dec ds mov xor jb and mov jmp lock movsl out stos push dec xchg fcmovu or inc cltd or mov adc (bad) inc ret push adc inc or add cmpsb in das and pop sub lcall push lds int3 cmp pop mov mov inc sub outsb (bad) js ficom hlt cwtl (bad) sub mov adc fstpl mov cmp xchg bound ja dec pop int call stos gs push cmp pop inc outsb pushf dec cmp push test jo mov sub xor movsl loopne jl popf scas xchg and dec out test cmc and (bad) mov inc (bad) (bad) movsl pop dec mov test mov and and mov push pop mov push scas ret pop cmp inc xor nop daa mov cmpsl in loopne pop sti int3 add orl cli mov push (bad) rcl clc mov (bad) or cmp ret adc jmp mov movsl (bad) hlt loop cmp mov jae repz int3 jge mov out push push add jle pusha les test hlt mov sbb sbb hlt ds lret ret imull and iret xlat je dec xchg and rcll lds and mov xchg add outsb jecxz iret je js shrl call xor pop int insb jbe int3 test in sub aad fmuls jno inc xor test aad cmp sub js push push cmc mov mov dec xor ljmp push jmp xchg andl mov jg sub pop push ds iret pop (bad) (bad) jo rol cmp jo dec cmpsb out pop imul mov pop outsl sbb out inc xor pop fsubrs push cld std cmpsb push out pop loopne push mov ss lods adc jmp push jle lock mov xlat mov adc adc repz in mov cs pop inc mov lock loopne std jns lds sti xor cmc (bad) sub es pop outsb push (bad) aaa dec call pop adc mov xor adc cli outsl daa inc adc sbb in and inc stc (bad) and inc and int3 jae inc and lods psubq mov push fistpl sub fildll cltd adc or jb add ret addr16 shrl add je outsb pop mov ret loope cltd mov clc jl cmp dec fcmovnb cmp stos outsb sbb lret mov xchg add cltd scas xchg fadd das xor inc jg jecxz dec inc mov jne daa jmp popa imul pop xchg gs sbb xor jne out jnp push dec (bad) xadd arpl or cwtl mov (bad) dec add xchg dec mov scas lcall add xor loop xchg cmp xchg outsl fist sbb inc loope mov test mov xor inc subl fimull jge movsl push xchg sahf iret cmpl jl jns add add pop xchg pop (bad) inc mov mov ud1 popa xor rorl mov mov aad jg adc sub cwtl xor jo dec push sbb add xor xor test sti mov imul ljmp aam inc test out cmpsl shlb mov mov test adc xchg inc arpl test fsubrl mov pop add int3 loopne ss and mov add mov and sub out es ret pop cwtl or jno out cmpsl fstpl fnstsw addr16 sub mov arpl popa or mov aad xlat fld xchg jbe fimull mov mov cmpb dec jl mov in push rolb jb pop stos push adc or imul push stos sahf jmp into daa das divb hlt lods or dec xchg (bad) dec mov aaa dec mov fsubr xchg add jg mov or out cmp xchg mov sub add int jle ds inc jp (bad) fucomi in insl enter xchg (bad) lret inc (bad) cmp fnstenv fsubr cwtl dec hlt cmp and sub (bad) lock fistpll add jne ja out adc dec fisub out jmp pop mov nop fdivl xor fdivr pop int3 push lods out out sbb les ficom lret pop mov out bound pop stos sub ja fstl movsl mov xlat sbb aas mov jmp xchg mov cmp cli xchg icebp ja cwtl and add push imul push and mov inc mov das pop mov fsubl insl fildl test cld ja sbb cmp subl mov sbb repnz or (bad) loopne jno repz mov mov loop jbe fwait pop cmp sbb int3 sbb fistpll movsl (bad) in sbb stos loopne rol out push pushf imul push sarl or pop jo inc mov mov stos fdivs pop xlat imul stc lret lods ret int3 aas mov das xchg pop cmp outsl in jae (bad) and div pop sbb inc pop (bad) stc mov sbb addr16 xchg pop sbb movb test push fsub scas mov js xchg imul cmp cli stc les bt aas ljmp sub pop push subb aam push mov fldenv mov mov aam cmp push lods xor out movsb jmp scas les out divb push inc cli out cmp pop pop sub (bad) rorb call sar lock and fsubrl lahf mov fnsave lods ds or lds ficompl cmp push movb movsl mov mov mov push outsb jge dec mov cmp mov loopne inc fistp xor aam or add add mov inc mov test and mov mov add addr16 lcall cwtl lret dec movsl in stos roll andb cltd pop in ds popf repz cmp cmc dec aad xor jo inc inc push adc xchg scas mov icebp xchg jp add inc mov pusha push aad dec inc stos lock mov and push xor fwait ret iret push das out dec xchg stos ljmp add insb in jb or pushf mov int fcomip out ss nop call jb mov adc push call cmp lock arpl dec inc or jle jbe mov mov fcoms insb sub jmp jne pushf stos enter ss sbb cmp or cs pop icebp push dec jmp (bad) (bad) jbe push xor jae lock jno cltd sbb mov jo (bad) fsubs mov dec push cmp sbb sub jns push xchg cmp test leave push (bad) out ficoml dec cmp fwait jge mov push xchg inc or in mov dec inc mov cmp data16 pushf pop lret add lret jp xchg mov pusha je (bad) in ljmp fdiv and jo js je aam in mov inc mov cmp loope adc sbb xchg pusha test fdivp mov mov mov dec dec je mov cmp jns xor jno pushf mov (bad) (bad) (bad) outsl pop cmp add sti mov pop mov das mov aaa stc ret dec sbb int3 fiaddl dec jnp xor testl xchg insb or out jbe js scas push sub mov pop fbstp sbb sub addr16 xchg mov sahf jmp xchg push shrb mov and movsl out shr in cwtl or push cmpsl push push jecxz push (bad) xor jg andl mov jp jo push enter push push pop aas mov rolb inc and push and ds jl in mov dec or in popa dec adc hlt imul adc inc cmpsl scas jne jp icebp fs lret lods fbstp out adc pop xchg das (bad) jle push xchg pop das mov popa pushf and rcll sarl inc cmpsl ret and pop test addl lods jmp cltd shrl negb jb push jnp adc mov imul repnz jl sub fiaddl scas pusha popa dec cli mov mov xchg (bad) ret in in mov pushf dec ja xchg sub and ficoml add pop les adc sub and pop pushf loop daa repnz inc push or shll inc sbb and lods and sub bound add adc jno jp call mov push cmp call sbb aam cltd jae pop push divl mov jge jo or imul enter mov imul mov and dec (bad) leave out loope push pop add jnp cli repz inc or inc jae out cmpsl mov pop fidiv push mov mov cmc or adc test test jns cmp pusha out aaa rol pop and xchg mov jb push nop dec das bound cmc stc push mov push sub dec mov lret mov sarl xor jns fmull mov pop adc xor aam cli mov sbb adc stc je and jne cmp nop mov sti pushf test (bad) in jbe pop pusha (bad) pushf out outsl movsl jne pop xchg mov push cli inc adc jg xor sub jno js dec push aam or scas jae jb xor (bad) and adc xchg xchg sub jbe and das jp cmp loopne ds shrl mov pusha stos in dec push push movsb cwtl mov gs xor jne es int scas mov cmp xorl and dec aam (bad) xor cltd stc mov lods push or pop insl inc aam mov (bad) divb push dec shlb sub mov outsb jnp in (bad) divl in mov int mov fiaddl hlt push jp adc testb push jae mov and das inc iret jl jne (bad) stos (bad) ja jo scas mov test and test xor mov dec add enter cltd xor imul cmpl (bad) arpl (bad) pop inc dec push push lret ret rol push pop movsb cli push push mov mov (bad) xor repz or mov loop in jl sub or dec int3 or (bad) cmc aas sub inc out sub xchg lea sbb mov inc cli pushf loope (bad) dec fs and je (bad) (bad) iret dec dec daa pop sbb cmpsl push mov and fs scas push xor mov push adc push rcll test (bad) out inc or mov lods jb pop or mov fistpll mov xchg jb daa mov push gs mul dec stc lahf stos inc or lea in inc xchg rorb sub lret mov xchg daa jae cmp xor inc popf jge cmp adc notl (bad) and cmp pop push popl push fcompl adcl pop fcoml aas cmpl ret mov adc and jnp jecxz xor mov mov dec and cltd jecxz cmp les dec mov (bad) sub sub dec jo inc cmp adc arpl cmpsb (bad) adc lea add dec out das dec xor cld imul mov clc popa out out popa pop ret cs mov push out icebp inc sbb leave rcrb int adc repnz jnp jbe insl push mov push lds std push dec and mov fs and dec dec add push ss pop scas sbb enter pop leave sbb mull pop pop push ja add xchg mov data16 js inc inc sub popf test sti stos add stos loopne hlt jle out hlt mov mov cmp fwait cmp add mov push hlt cmp jae xchg and jae ss pop mov fdivrs cli lret icebp stos icebp pop xor sub (bad) int jne xchg adc mov fdivrs fistp xchg add and mov sub dec dec stos xchg stos loop mov sub add mov xchg jg popf jno pop dec cmp push mov popa sub xor sbb (bad) rorb cmp sbb ret (bad) pop fwait inc mov xor mov mov addl push imul frstor movsl sbb es mulb ss push dec or mov test dec (bad) movsb out jnp ds sub mov fstpl mov adc aas pop (bad) lock cltd or mov lret les mov inc xchg jo lahf ss scas inc or inc mov (bad) cmc js sub addr16 mov add xlat or mov mov daa shll out mov repz (bad) dec outsb or sub xchg adc pop add stc mov or pop add fcomps lahf es mov mov add insb push (bad) cmp mov xor cs mov popa cmp dec orl sbb adc in xor icebp into popf mov pop sbb mov (bad) loopne cmp or popa mov aaa ret mov sti inc mov fwait scas imul jb or add dec scas and cmc frstor ds cmp movsl add test jae rcll mov sub jecxz push xchg inc shrl add pop add cmp add jmp out cmp mov ja adc daa add mov sti jnp test addr16 push lret push push imul repz dec fwait or push xchg mov (bad) shrl dec clc pushf push sbb cmp or test jmp mov cmc lret icebp pop pop dec (bad) xchg test mov (bad) call push pop xor sbb push mov mov sub cs dec add jmp adc das mov xlat fs pop inc fist out pop enter js jae daa push fdivl jp lods loop cmpsb pop xor movsb cmp or imul dec imul popf cltd test inc push push xor xchg mov and sbb das movl xchg jecxz push push mov fsts push mov pop mov test jg addr16 mov pushf adc mov push sub enter mov lret leave lds int3 mov scas dec push sbb std ss mov push cli (bad) fcom mov xor insb and xchg or lcall and sub or mov (bad) dec addr16 adc push out jp and sbb nop cmp mov push ret or xor push ljmp push or int and ret ret pop sbb push cmp and lds mov gs imul sub (bad) cmp push xchg (bad) testb jb call and jmp aad fwait iret iret sbbl jbe gs iret jne inc mov repnz fcmovnb inc std mov push test xor xchg in mov in es pop js add push ds dec ret jne xchg sub (bad) hlt or leave mov pop push imul std sbb dec stos iret push outsl incb dec jp xor movsl add xlat xchg pop xlat dec dec mov repz pop jo dec xor aas (bad) jno aam (bad) mov stos mov mov ret xchg dec sub sbb int3 (bad) rcrb inc adc and outsl pop push xor enter push push insb mov xchg sbb xchg cmp fdivp add call lret xor fwait dec or mov (bad) fistpll hlt sub aam lea mov add sbb or xor xchg pop int push or out in imul pop ret mov and ds push dec fmull les adc jg cmp imul or stos add (bad) pop xchg and idivl adc jp pop push cmpsb or sbb int3 (bad) into cld std in pusha jg cmp mov ljmp cltd (bad) test nop fisttpl int3 adc push push and out push adc sub xchg sahf pop dec inc fldcw cmpsb les xchg (bad) lret cmp mov dec mov push push idiv mov inc sbb jns jmp xor cmp faddl in sbb test pop stc xchg cmc insl jle (bad) add nop jecxz cld push les cmp sbb add inc lods and and stos cmpsl ja aad arpl outsl ss mov dec lods (bad) int xchg outsl mov icebp mov inc movsb cmp adc mov lcall enter in add jge inc testl je leave push push cmp test mov sub insb push inc (bad) jmp pop daa mov dec jge jl mov gs or jo test aas loope mov sbb gs inc and inc mov icebp repz daa movsb (bad) js jns out pop inc clc add loopne xor int or mov test pop leave popf mov jmp add (bad) inc cmp push movsl lcall cmp das pop xchg add into mov (bad) int jecxz insb fstl scas dec iret mov cld push movsb cli decl inc mov and xor mov cmp mov mov and insb sbb push mull (bad) rcrb cltd inc pop clc inc xchg mov cmp mov cmpsb outsl mov pop mov loopne scas lret mov enter push cmp adc std pop (bad) scas inc jg pop stos hlt cli cmpl call dec and mov ret call mov (bad) pop push add jae mov (bad) call and adc (bad) mov jnp pop insb and and std ret xor popa aaa jo roll stos mov dec popf cmp add and mov dec ret dec inc cmc (bad) (bad) fcmovu aam add jle xchg mov sbb dec bound or scas sub popf fmuls aaa and stos outsb in mov and in dec js gs jmp xchg cmpsb mulb jge jno aam mov int3 dec sti icebp or nop daa sbb sub xor js call pop xchg lret ficom pop jns aaa insl inc es sbb adcb mov sbb xor sbb dec outsl fidivr push pop mov and ja cwtl jmp jae dec shr sti xchg scas idivb rclb and loope out dec int jnp in aaa inc mov mov xor and shl adc jbe xor or lds pop jnp push sbb fwait repz outsl fs mov jp cmp popf repz and push pusha cmp cs adc pop push loope xor mov nop xor insl cmp mov mov daa rcrb adc lcall push xchg and hlt adc je ja fstl sub (bad) ss lcall iret pop jmp fwait jp mov jb repnz mov mov push lret pop pop pop sub and pop jge das dec mov xchg cmp fs inc pop xorl pop push orl mov fwait push popl jb dec mov push cmpsl pop sbbl jge neg cmp push sahf mov in push in lret mov lods mov inc mov push mov mov test or inc pop aas ret push out pop mov push mov lods test xchg out stos mov bound mulb into cmp in mov add cmp sub cmp mov xchg xor sbb addl mov pushf fcoms mov mov sbb cmp in pop or cltd test ret mov mov cmpsb mov sbb outsl adc sbb push push xor jl jbe test xor das pop in adc adc pusha js inc and hlt sahf call (bad) cmp add ret (bad) ljmp scas jg pop loopne mov outsl lret fistp add sbb sbb xor (bad) fsubr pop in mull (bad) xchg ljmp mov daa std pop and xchg adcb nop dec lret pusha mov and not inc stos fwait push xchg fidivr aaa out push sub pop fwait in test dec cli pop out rclb cmpsb xchg mov pop adc sti lret dec push push movsl xchg xor cmpsl adc jg popa push jnp mov popl orl mov sbb sbb sbb inc cmp iret mov push bswap mov cli inc ss jne out push leave pushf jl (bad) cmpsl aad nop (bad) xlat lock icebp push cmc pop xor (bad) xor jle data16 or test mov or jo add inc add sarl sti push bound inc enter dec repz ds mov mov aas int3 aam xor sbb addr16 jno outsb cmpl inc cmp mov gs and jg,pt push pop enter fmul clc cmc xchg mov mov push xchg data16 xchg lds jl test into dec push pop dec xor in pop out xchg mov mov dec mov lock push jae mov sbb negl xlat imul cmc mov or mov pop in xor nop adc jbe fnsave pop pop pop out push ret mov or fisub lock imul pop rcrl dec mov fmuls xchg (bad) mov (bad) add scas std lock sub test rcr je test pop or dec lcall mov or jmp test sti das sbb js lahf xlat pushf dec mov dec addl rcl (bad) lock sbb xchg xchg test ret pop es pop push stc adc rcr loop xchg mov sbb lcall and pop adc jo pop stos pop jmp dec roll mov in lea pop push mov pop roll jbe mov movsb sub xchg in push push or or rcrl pop mov or js adc mov xchg mov jne sbb lock cmp repnz loop movsl mov adc inc (bad) scas jo test cwtl mov aad sub mov loop pop add in pop (bad) cld or mov add adc xchg lock or pop add mov mov icebp dec and push in out sub mov bound add or mov out add hlt mov icebp ds repz sub addr16 out mov imul sbb or xchg insl sbbb push imul in xchg xchg xor ret mov adc aad rorb repz sub xchg xor jge inc xchg rcrb cmpsl jo fldcw sub mov sub jle notl xchg xchg mov add and outsb scas jbe push repnz es cmpsl xor mov imul push adc lods add pop mov xor dec das sub punpckldq xchg xchg out shrb cmp popf push add adc push icebp push adc or xchg jle insb or mov jno enter ret sub in loopne pop and enter adc lea pop or sahf (bad) iret sbb pop and mov cmp or lahf jg iret ljmp aam lcall push mov jecxz sub clc and cmp outsb and cmp xchg mov fisubrl pop insb sbb xchg mov fwait xor push xor fisubl sbb mov repnz xchg sahf mov pop and xchg leave cmp adc xchg pop out and vmovsd jnp enter lret jg xchg sub subb frstor inc mov jle cld mov xchg dec xchg ja negl es pop std scas or scas sub mov and push inc cmp sbb repz mov les dec jl loopne std pop jmp xchg adc add mov test inc shlb pop nop or pop mov mov sti imul xor das push inc pop ss fsubs (bad) and orl or in jno leave mov add shrl cmp sub xor cs sarl out mov or xchg mov loopne cwtl test fwait dec ja or sub mul dec adc pop dec stos lahf lcall cwtl jno sub sub lret fiadd adc sub leave jecxz movsl andl pop dec push add push dec dec xchg jmp int3 and call sbb inc ja icebp cmp (bad) (bad) push jle inc and sahf insl cli cmp fldenv ljmp push movsl cld fnsave or xchg mov fs dec cmp adc orps les fsts outsl sahf popf pop fsubp xchg rorl popa (bad) decb fisubr ret hlt incl rorb jo adc jnp mov and dec push or pop push xchg sbb hlt sbb cld setp daa pop outsb push jne pop mov or lcall sub stos mov mov test mov loopne mov lret mov (bad) inc jle pop inc insl sar mov rcr sub int3 add pop inc (bad) in lea push (bad) out push jb dec push sbb mov and loope (bad) aam inc lcall cltd cmp cmp fldenv mov fisubl outsb dec (bad) (bad) jae push stos lahf in iret jmp pop popf fucomp iret xchg icebp imul mov aaa (bad) ss push jbe mov mov dec xchg jbe xchg lea push push insl push test (bad) mov cmpl push inc jo pop jnp pop and pushl aaa stos test pop inc inc lcall imul hlt outsb int3 aaa addr16 adc dec stos testl and jle ret insl int mov xchg jle dec pop sub fs cmc dec inc xchg cmpsb mov pop aam mov imul pop dec mov inc test sbbb mov mov cwtl xchg popf sahf sbb jg dec push mov arpl in stos fxch jnp jmp imul adc pop pop das mov (bad) add roll popa arpl enter xchg lcall lock pusha jne pop hlt and lret cltd inc int3 sbb push leave out sbb xor daa mov xchg movsb or sub or inc inc push (bad) mov repz xchg cmpsb push notb or pop adc out adc mov sahf outsl out insl sbb xor clc and fcmovbe popa push adc inc fdiv jle movsl ret mov push lds call (bad) movsb cmpsl pushf pop (bad) scas xor or ds sbb outsl push fisttp sahf dec push mov jo pxor push xchg jp lret jl add xor into repz inc and mov fdivrl (bad) mov push in call mull pushl mov or mov dec add push jb mov dec xchg pop repz in fimull jl or test nop cmc cwtl pusha mov cmp test outsl xor bound in cmc fnsave mov stos repnz icebp jns dec pop shrb (bad) fmulp sahf sbbl out adc fsubrs shr mov mov pop sub loop std dec fimull sub dec mov dec (bad) mov xlat rorb fwait mov xchg cmp add fldl mov sbb outsb clc push cmp gs icebp (bad) les loope and xchg sub movsb push aas enter out sbb (bad) pop adc xchg (bad) jle out rorl cmp ret out in mov in ds sbb scas icebp into jmp rolb pop mov pop sbb mov fld std inc outsb xor jne push rclb mov loopne sbb mov mov fsubrl mov mov in pop sbb fstp add sahf and lods fmuls int3 stos loope push outsb sub mov insl pop ljmp sbb adc add fisttpll imul repz cltd ljmp xchg (bad) mov fwait or sbb rorl lahf mov pop popa sti lds ljmp add imul int mov cmp mov jmp out aaa jbe and loope cmpsl jge or (bad) sub pop cmp sub dec lods xchg sbb xchg and pop int mov mov push xor adc int nop lret outsb test mov mov sbb cs xchg sbb sahf xchg movsl sbb (bad) fprem sbb scas push add inc mov push push fnstcw adc in jge dec into lock pop sbb adc in in repz mov or lahf mov adc outsl sub call rcrb popf fcmovnb popf outsb out cmp ja xor (bad) and inc ss dec lods sub xchg cld cmp and test push cmp xor cwtl leave and lret inc lods pusha inc or pop or (bad) cmp les dec mov inc adcb or (bad) and or aaa add xor rorl rclb adc (bad) stc callw fimul cs inc dec cltd loop lcall mov loop push ret lea lds pop cmpsl push outsl dec dec mov scas out das clc ret jecxz sbb add lret sbb push in int add cs cs into jmp jp jno cmp inc mov ss insb stos pop mov pop mov push jle xor xchg jge lods pop in movsl cmp pop ljmp divb ficomp loopne clc jge xor push dec sub cmp add or jo push pop mov push sysexit sysexit xor mov scas adc aad (bad) scas jge sbb pop in xor (bad) aas push lea pop cli mov cmp cs (bad) mov inc out insl xor test sti pop cmc dec stos or aas bound mov inc jnp mov fldl jnp out sbb cmp jnp cmp xchg or je pop pop rcll sbb je mov mov jle ret movsb shlb repnz lret xor insb mov (bad) insb pop push lcall add out mov add rcll mov or lock xchg test sahf lret (bad) xchg outsb stos cld lret jo dec or addl xor sti dec mov in fxch dec mov cmp popf jns and lahf stc push popf mov ret jecxz dec fucomi jmp movsl mov (bad) jo mov fisub pop xchg imulb fiaddl add nop ljmp xlat outsb or es inc data16 or mov sbb mov in mov mov bound jecxz aad jmp mov sbb and mov cltd ficoml aas xor clc mov cli jno jnp xchg es cs xchg mov pop jle (bad) mov dec inc sub insl add pop xchg push jp xchg xor scas mov in sahf push lock xor (bad) (bad) adc roll mov imul pop cwtl jecxz repnz or negb inc mov out ficomp mov mov lret icebp sbb push imul mov or sbb inc xchg xor cld add mov (bad) mov fisubr sbb insb xor dec xor dec mov mov dec or imul pop (bad) xchg jo cmpsb xor pop inc repz xchg mov (bad) js lahf jae (bad) out xchg mov cmp out icebp add jmp ret fwait dec inc dec push inc add push pop xlat int3 enter xchg loop jmp test les adc or mov adc xor sbb loop (bad) jae gs dec stc push sbb test xchg xchg pusha into and rcl xchg cmp fld push cld loop test repnz xchg loopne test fdivrs dec mov mov xchg (bad) out lret movsb dec mov out cmp insl mov push add popf std sbb mov (bad) iret sbb fs js pop divb inc cwtl mov ljmp test mov es fmuls popa in inc inc nop or test movsl out test dec cwtl inc jno gs jg pushf mov mov lods mov adc les xor or jmp push xchg sub sub or insb lods jae leave jbe cltd push lock sbb fbld ror loopne bound cmp xchg mov pop mov mov dec push jp xchg jecxz sub data16 mov lock lahf add and sbb sahf mov sbbl repnz mov adc sbb xor xchg xor jo pop pop push xor push jg mov cmp mov pop inc cmp arpl pop mov lcall inc xor mov push xor adc and jo sbb std push test dec adc inc call out pop pop clc aas out ret dec ds cmpsl cmp xor or push pop inc pop add or mov ljmp or imul stos inc xor sub fmuls in sbb addr16 bound mov out movsb xchg pop fnop xor pop pop sbbl inc aas (bad) (bad) mov xchg cmpsb add in or pop rolb mov xchg dec xchg loop xor push fwait and nopw ret xor int3 sub (bad) ja (bad) cld mov lret and fadds loop movl sar in neg mov stc inc sti sti add mov sub ret sub xchg inc fwait add sbb sub stc mov pop loop jle or fwait js jb push jp les jle ljmp mov xor jmp sahf sbb sub xchg mov daa dec shrl cwtl push mov stos sbb or daa enter xor data16 imul xlat and (bad) mov mov cmp cli addr16 xchg dec cmp orb jge std xor inc sbb adc rcrb pop push sub pop icebp add jns leave push enter cltd pop fs fmull cwtl sub clc cld icebp sbb int3 pop jb cwtl add movsl mov inc add test and cmp adc (bad) xchg sub add sbb xor fistpll in in palignr or mov or std popf fs (bad) pop je ja xor inc ljmp and test fwait add pop in dec scas mov mov jg mov pop mov cmp sbb xor push push xchg pop pop (bad) sbb xchg mov xor cli jg (bad) pop mov mov xchg stos gs incb ja xchg pop push mov insl add mov cmp mov (bad) push jge mov push mov pop push outsb icebp stc mov xchg mov mov inc adc dec loope and aam push sbb rorl mov in mov xor fiaddl pushf mov dec inc outsb adc jnp mov cli jp cs sub int3 lea iret push adc add xor pusha xor push jbe xchg push (bad) (bad) (bad) mov mov push lcall and push fwait test dec mov add mov inc cmp int3 and arpl cmc in cmp lcall cmp pop outsb mov cltd or sbb xor (bad) (bad) mov lahf push js std sub sbb (bad) je mov ja arpl cmp in imul jg xor (bad) ja xor xchg sub push cmp pop sbb cmp data16 add jns or and lcall js jne lea jne (bad) call loopne test popa cmp adc mov leave add xchg push push sbb sti pop cmp out jecxz das das popf ss rolb sbb int3 test ds sbb mov fs sbb jnp insb fimul (bad) mov or mov jl push and imul (bad) aaa fildll push mov dec and mov inc loope cmpsb sub xor dec push add scas daa loop mov (bad) icebp addr16 jecxz mov aam mov imul jp enter adc fs inc into aad leave sub mov mov (bad) iret sarb loop xlat je jns adc fcmovne jb jp push fnop adc imul dec (bad) jmp cmc cmp sub imul int sbb in sub bound dec cld sahf in ljmp mov (bad) into inc jno and pop shr mov xchg dec push mov out ret fcoml stos nop mov sbb jmp lahf inc test stc repnz jmp or mov lds test mov fwait ljmp fistl mov mov pop fsts sbb mov ficompl fcmovnb bound and add cmp cmp ljmp pushf jge lock jg or jo in pusha mov stc xor (bad) into sub mov leave or jl (bad) xor ja mov mov loopne fsubr push sub mov (bad) sub sub or ficomp jp cmpsl es and jnp dec in and outsb pop rcr enter xor sub xchg clc dec in and dec into jmp inc js cmp das push test movsl test orb or lret and lods jbe aaa push adc idiv jge inc in int scas mov icebp fcmovb jg pushf fidivrl lret mov movsb (bad) mov dec movsb (bad) jge mov fwait lock push out jb jno dec mov mov dec scas in mov push add aad add xchg xchg dec ss inc bound loopne push lea dec adc int3 fstl fldenv add mov jmp pop mov call mov jecxz and mov fbstp add ja pop push mov inc push dec inc mov js cmp stos hlt pop mov sub cmp fisubr sub pusha (bad) ja pop adc fdivrs cwtl and lods clc sbb rolb or out (bad) mov cmp fisubr not cwtl fbld insl cltd insb xor jecxz ss push push into push inc cld sub fdivs les daa les cmp aam mov pop add jg add or iret arpl cmp nop mov inc pop (bad) xor cld sub dec out push mov adc xlat push jnp scas inc cs decl cmpsl mov lods jnp aaa out enter rcrl cwtl sub into add and ret mov mov sahf mov outsb int mov cmp repz jecxz stos sarl mov ret rcll add imul fistpl scas cmp xchg mov mov sub ss jp sti jl arpl xchg les jo add stos adc incl jnp ret xor fidiv iret outsb mov lods andl adc sahf mov stos pusha xchg in and sbb dec adc jno icebp inc inc test add mov shr ds int clc sub jae pop movsl sbb inc mov mov iret ss sti aad and adc xchg cs lds sbb movsb out notl cmpsl push jae or in dec in cs mov xchg inc jmp mov pusha cmp movsl sbb inc mov mov iret ss sti aad and adc xchg cs lds sbb movsb out notl cmpsl push jae adc decl jecxz pop mov rcl cmp ret and xor fisub test push int3 ss jnp aaa pop jle aam jne ds sti push adc pop out ret jno ljmp push pusha inc mov lods add in shll mov pushf sub inc sbb enter imul pop inc inc mov repz lea mov in push sub sub es mov push fldl adc mov xor mov fdivrl adc or dec les ljmp mov mov mov in (bad) xor xchg iret test and repnz inc sti jge sub in (bad) testb jmp mov imul pop js icebp movsb pop mov movb push mov rdpmc popl fwait lods push aas aaa pop stc mov enter sbb mov mov mov rcrl sbb pop sbb xchg mov es add (bad) adc mov int3 sub xor mov cmpsb nop cwtl jle repnz add push lds or jnp aaa pop jle aam jne ds sti push adc pop out ret jno ljmp push pusha inc mov lods add ja push insl rcll or adc arpl pop push jg mov dec or fstps das jp lea jo popf (bad) mov ds out mov outsl cmp mov addr16 cmp push mov inc mov jne gs jne and adc ret or call xchg cmp cmp movsl sbb inc mov mov iret ss sti aad and adc xchg cs lds sbb movsb out notl cmpsl push jae test add push cmp inc adc pop (bad) xor cli mov popf cltd dec cmp xchg pop mov mov mov mov in (bad) xor mov mov push stc and mov mov les fdivr nop jmp xchg (bad) mov push dec xlat add xor gs loop data16 mov xchg icebp dec adc das sbb sbb mov shll sbb incl stc test push out pushl aas test cmp sub mov lret inc fist xchg lcall push mov movsl mov std pushf jmp std cmp and icebp rcrl dec aam or jae pop adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov jp sbb sar sub sbb popf mov icebp aam sarl sti sub xchg mov xlat push imul pop imull ret test dec incb mov in sahf out push sub jmp lahf push cmp data16 fdivrl jecxz movsl mov dec xor jle test inc je pushf fisubrl pop adc dec dec jg sbb stc add jg pop (bad) jnp xor sub mov xchg in xor push loope imul imul rolb dec in adc pop iret dec ret arpl push or xchg and mov lcall out push xor test movsl cmp jae pop adc fs test mov push sete adc mov lahf xchg pop in xor in fisttpll xor leave cmp rcll mov mov jns in out add cmp xchg jo lret inc lea cmpsl push xchg rcrl cmpsl sbb hlt shrb pusha popw (bad) (bad) and rol aas push jge mov outsb sub dec inc pop cmp adc push dec mov jae pop adc fs (bad) xor dec movsb fistp xlat ds sub loope les call mov fcomi xchg push sbb jb addr16 push and mov cmp adc outsl jne push les shlb (bad) icebp mov bound mov jnp xor bound jmp push or jp stos divb add pop imul sub jae pop adc fs jno cwtl sub mov test mov mov out out pop test cmpsl adc or mov scas movsb in scas pop push jp stos divb add pop imul sub jae pop adc fs mov in adc fs insl sbbl movsb (bad) or mov sbb loopne es jae pop adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs add jne mov cwtl xchg pop adc fs add movsb movsb je shlb aas ficom movsb in arpl add pop fwait lock rorb in adc fs cs pushf cmc sub (bad) mov pop add (bad) fdivr cmp add sbb out shrl lret inc lea cmpsl push fdivrp xlat xchg (bad) dec sub mov jae or jae pop adc fs mov in adc fs pusha pop or add cwtl in enter adcl pop and or jp stos divb add pop imul sub and cmp add adc aas subb xchg les adc sbb lret fisttpll jae pop adc fs dec ret arpl push or xchg sbbl xchg jge std rorl out lods add sub or lcall jle xor daa sbb rorl pop rorl xlat xchg fs cltd adcl (bad) push jle inc fs mov pop adc fs jmp std cmp and icebp rcrl dec aam xadd arpl sub in iret pop daa or mov or jae pop adc fs mov in adc fs mov sbb push pop rcr inc mov in arpl add pop fwait lock rolb sub sti iret push pop push or dec in aad in int3 add lcall add mov push aam ret jmp cmp jae pop adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs or cmpsl popf fs notb enter pop lea bound fadds leave out cmpsl mov or cmc push cs mov rorb jecxz cmp divl dec cltd lock lret dec (bad) cli into lcall jae mov add rcrl sbb in hlt pop fdivs mov ficoml sub rcrb add mov or jmp push fcmovnbe mov mov xchg mov mov sub mov jnp pop pcmpgtd or (bad) leave bound mov test fildll ljmp pop call push fsubs jmp repnz jecxz decb fidivr mov inc bnd pop jle push pusha icebp adc lahf ljmp loope rep fs sbb add push mov in cmc into adc sbb pop mov imul cmp jmp lea sbb cmp and iret pop loope nop and add adc sub dec or push addb pop fwait push fcmovne icebp imul aas xchg mov lea adc imul enter outsl outsb gs imul clc or xchg mov push or dec dec cmp jmp mov rol das mov loope popa push push lret add push cltd mov add int3 aad mov pop inc mov mul outsb jp inc inc jg cmp pushl adc pop int and roll sub push repnz ja dec push (bad) lock push (bad) push inc jnp cmp ret lahf adcl je daa jnp push (bad) negl shlb mov stos sbb and or orb stos aam push fwait sub cmp adc sub mov popf xor xchg jae test add mov jp subl and add stos aam push fwait sub mov mov pop cmp mov xor xchg jae test imul inc aam jle scas scas push js push inc push mov mov out or dec imul dec jns aas dec sub scas lcall add loope (bad) jp push add jp test lds jne pop and xchg xchg xchg push arpl pop pusha sbb aas jbe jle pop add cli inc cmp pushf stc in insb dec cli imulb loopne jge call fnstsw xchg push sbb mov imul and cmp lock push push mov test fs and push pop push fidivr pop ljmp sbb sub sbb and or or pop mov (bad) stos jbe lret mov xor mov lea xchg cld and out rcrl mov sub jg and mov inc mov loopne outsb sarb fsubrs inc sub xor pop jns bnd (bad) (bad) and int3 mov in mov adc dec or and adc fdivl cld and out rcrl mov sub jg and xchg add cmp jae,pn sub int3 xlat jo daa dec inc repz lret dec in dec mov daa lea sbb mov sub inc pop jae add mov jl pusha sbb aas jbe jle pop imulb loopne jge call (bad) sbb loopne fcoms pusha insl jnp sub cld popa or arpl mov and cs fimull outsl xchg mov pop daa mov int3 (bad) test inc test ja xor xchg rorb push stos es cmp cmp xchg in mov dec pusha sub sub cmpsl push inc sbb push mov nop imul push loopne mov xchg (bad) xor xor sub ja inc jl mov push cltd repz inc clc jb sbb push or lret mov xchg mov or cmp cmpxchg lock sbb orl cmp xor cmpsb push push add sbb iret xor mov in es (bad) xchg cwtl gs inc push sub cli dec scas push xchg daa sbb lods enter mov cmp loope enter pop xor xchg rclb mov xchg jl leave call xor pop js cmp mov cmc cmp mov outsl xor repnz xchg idivb imull es (bad) repnz mov xor popa push das dec jne push test bound cmp popa loop or out or push aaa xor push sbb lahf mov mov fwait rorl push pop adc lock popf xor xchg jae test sar incb popa in jnp sbb fstpt fstpt divb das iret negl (bad) xchg jnp jb lock sbbb rcrl sub adc pop inc adc push mov xchg or dec imul dec jns aas dec sub cmp adc cmpsl pop mov (bad) lock (bad) scas fidivrl and mov mov adc int3 cs iret js (bad) stc orl popa jp and cmp fisubr fdivs int3 fiadd mov (bad) and adc xor jae push (bad) lods adc jns mov ret jg and cmp pop stos add insb mov and popl sbb or pop cli out subb fnstenv mov loope push sarl pop (bad) hlt imul jae (bad) stos dec adc sub enter lret jb fcmovnb fcmove jp xchg es pop or mov dec lahf push ret lret or scas mov faddl aad cltd push cwtl into pusha xchg inc dec mov pop xchg stc pop stos dec adc sub enter lret jb fcmovnb fisubl test enter adc imul jnp lock pop jno jp pusha push les pop movsl sahf add fwait imul dec or push and sbb popf xchg pop sbbl clc or push xchg inc cmp stos test movsb lcall xor out enter and test lods pop xchg pop int imul adcb aas data16 push cmp and cmp dec adc dec or lcall jmp dec push (bad) pop pop inc rcl int3 cld popa ds imul adc outsl push inc xchg hlt mov shlb sub xor fcomps adc push inc scas test sub mov sbb cltd lods mov repz adc bound repnz mov xor imul or jae addr16 inc lcall sbbl push (bad) xor pop lock lret inc popa (bad) popa pop xchg pushf aaa pop mov fsubr lock insb add aaa add arpl jnp jp and inc xchg or mov push es mov xchg pop mov or mov jb pushf adcl (bad) mov cli inc cmp mov xchg push pop lret ljmp hlt jl into xlat add mov push dec (bad) testb cmp jns imul push je mov cld mov inc jmp out xchg (bad) ss inc (bad) mov ljmp and imul jns xchg adc mov in inc mov jbe (bad) and or xor and gs clc std or pop and and cmc leave mov mov sub xchg sarl sti pusha clc je scas das xor pop adc fs or setle inc push mov sub scas add pop shrl mov pop sarl shl cmpsb mov push add or and xchg popa pop inc lea dec ret add push push dec push or addr16 (bad) push fcoml inc test sti cmp sub and mov cli aas lret xlat pop sbb xchg lret dec fs enter dec ja aas jp mov mov in jno push std test jbe rol loope jo int3 js jmp cmc lret add das das rcrl loopne ficomp outsl ja aas jp mov mov and out push push shrl jae cmp aaa mov jns jg push or test sub push inc and jge test mov sbb add adc mov repz jns scas jo cmp ljmp inc xlat dec stos in mov in lock popa and sub popa cltd iret mov push mov and (bad) popf pop push cmpsb pop mov and pop inc xor loop cmp ja sbb icebp dec jmp push in data16 mov sub cltd pop push ret rolb lods ret in not add popa in cwtl and push xchg add daa aam mov mulb jmp out aas xchg add jnp das mov and icebp xchg inc push mov roll pop adc and in pop or push notb out push out nop cmpsl nop inc mov es cmp orb mov xor or dec push hlt add stos stos test mov hlt xchg rolb ret andl (bad) in and out push push shrl jae cmp push push xchg dec jae mov mov scas sub pop lock mov ljmp call stos mov arpl mov cld push or xlat int lret push sub sbb (bad) cwtl clc add inc cmpsl sbb pop cs or jge rep sbb leave ret sbb adc repz int xor sub inc mov in (bad) pop mov mov or hlt fwait cmp pusha in loopne adcl push cs sbb lods mov and adcl mov cmpsl dec and dec pushf jb adc mov sub fisub fwait sub cmp pop mov repnz or gs or fdivrs sub inc or sti mov lret dec cmp fwait gs jae dec fdiv add mov fild clc sahf (bad) cmp mov rcll mov sbb inc roll in into aas xor insb or sahf mov jp pusha clc imul jp sbb sar sub sbb sub scas adc fildll push iret test pop (bad) or rorl fidivrl fidivl ja sti dec jge mov jns iret bound icebp movsb jmp andps icebp mov loopne lock fndisi(8087 mov mov add mov cmpb sti into fwait mov jp sbb sar sub sbb fcom (bad) movsl inc mov cmpsb hlt outsb lods mov inc fisttpl mov dec lods sbb (bad) mov jge mov (bad) lahf jl pushf push pop subl cld adc mov lea repnz icebp js adc lods mov fisubl inc gs das sbb cmpl mov jp sbb sar sub sbb add scas popf push sbb out ret (bad) fstps fistp int3 pop cwtl iret fucomp imul sub nop insb sbb ret cmp (bad) in mov leave add add inc sbb sbb nop pusha ret mov lahf adc scas das dec mov adc fdiv fwait mov jp sbb sar sub sbb jmp lcall push mov ja xor mov (bad) lahf adc lods in sarl cmpsl pop xchg movl movsb push or test xchg pop jge in dec xchg mov or jo aas aad jbe mov mov adc ljmp mov daa addr16 insb out ljmp ja or jbe test imul scas pop pop mov add mov jnp adc jge jle push inc xchg push mov cltd add jl popa out pop push movsb loope pop (bad) stos or enter inc pop jns loop popf mov mov sub ljmp xor or in jmp fwait in add call adc fs fstl dec ja out push cmp imul fldl pushf cmp ljmp ja out push cmp imul fldl pushf cmp ljmp ja out push cmp imul fldl pushf cmp ljmp ja out push cmp imul fldl pushf cmp ljmp (bad) adc movsb jb,pn lret call lahf loope sbb sarb stos and loopne dec xor jne add pop addr16 cmp gs fmull outsb addl mov lock cwtl xor push pop jae mov adc movsb jb,pn lret call lahf loope sbb sarb stos and loopne dec xor jne add pop addr16 cmp gs fmull outsb addl mov incl bound or pop inc xor loop (bad) adc movsb jb,pn lret call lahf loope sbb sarb stos and loopne dec xor aam and mov fwait xchg cmc test adc jmp cmp test push jl iret jnp std xchg push xor bound rorl jne cmp ja cli pop mov pop jge mov push je cmpsl std add mov out pop pushf cltd ljmp ret fwait xchg cmc test or lock imul into out mov rcr inc mov mov jno xchg dec cmc pop cmpsb adc push adc and insl adc jns jne mov lock imul into out mov rcr inc mov mov jno xchg dec cmc pop cmpsb adc push adc and insl adc jns jbe pop nop out popf std add outsl cmp jbe adc jns cmpsb jge int3 cmp mov mov cmp outsb jmp insb cmpsl bound es jge sbb cmp icebp out xchg or into pop mov std lret cmp adc xchg pop leave loope push jns add cs jns ljmp mov and sti pushf stos push loope mov rorl jmp rolb push cmc test sub adc (bad) jnp out mov (bad) popf mov aas jmp (bad) cmp mov movsb mov push add sbb lds dec xor shlb out addr16 fstpt rolb bound stos sti scas aad loope sahf adc sub pop add or push test rcr in addr16 pop movsl lds sti xor (bad) popa test fwait xor or stos ret push es cmp sbb pusha xchg or push add ficomp jno (bad) and lcall lret fdivp jmp sbb push dec loope or faddp pop mov push or pop or sub adc cmp fldcw gs repnz adc inc mov adc and adc lcall inc sub push (bad) scas icebp inc (bad) adc out ret push es cmp sbb lret or xor cmp push (bad) adc testb mov xchg ja or xor cmp imul mov adc ss sbb mov pop sbb sub mov push aam ret jmp cmp mov sbb dec call fwait ret cmpxchg outsb iret push mov xlat shll pop pop ljmp movsl add sbb nop sub inc cmpl push out (bad) clc bound repnz cwtl push jno cmp lea lods lea outsb mov push ja xchg sahf sub subb dec jge scas mov mov fildll jns or inc sub dec ss xor lret mov shll js loopne jp ljmp jbe xchg adc jo scas push add pop out ret test lea xor or mov mov push decb adc or jbe movsl fs jno jecxz dec fsub sbb cmpsb jecxz pop xlat loop scas adc pusha in or jae pop adc fs pop in lahf or jb adc popa mov xor inc dec sub inc xlat add hlt repz or jae pop adc fs sub jmp xchg sbb popa xchg daa dec cld jge push jmp setne push movsl insb cmpl jg mov xor sub test and xor repnz or xchg mov fbld stos inc dec pop loope (bad) push mov or out fwait out xor call or jae pop adc fs sub dec out jl push jmp fwait pop xor push sbb mov pop sbb pop (bad) jle in lret movsl pop lret inc push push lods pop jl sub jbe into pop and pop jbe out sub xchg shll and mov adc int3 sbb daa adc call add jmp jbe mov jl scas loope mov fldl mov ffree or fs rcr push sbb (bad) inc mov scas and test pop xor or movsl not adc lds stos jg xor mov add fwait xchg mov adc popf repz repnz mov mov test jge xchg aad lcall rolb outsl cmp add in fs ficomp andb addr16 inc jbe pop out loop in jle sub out xor outsl pop andb lods insl int fnstcw gs pop sub pop cmp and shll pushf add cmpsb mov fiadd es mov dec jnp dec xor inc mov xor mov scas (bad) out test lock adc imul add (bad) jns sub stos ss adc mov push xchg ret push mov outsl push push push sub add fnop fsubs xor push rorl rcrb sti imul xchg scas cltd push imul mov popa call dec adc and scas fucom mov fistp pushf ret fwait push push into pushf mov jbe stos and ret mov mov pop adc (bad) sbb fldl popf std mov adc aam add lret clc es scas xor jbe and (bad) jae,pt rolb push sti mov cmp call jg lods inc mov stc jno popf stos xchg xchg and rorb push push push out inc (bad) sub inc mov push lock ds sahf jl ret cmp adc jge js rolb out stc mov push xchg or mov lret pop cld dec (bad) icebp xlat shll pop lret pop ret jbe femms cmc and inc jne or div lea idivl mov sti xchg lods xor es (bad) lock movsb outsl (bad) pop push not sahf add adc push test mulb lock in orb (bad) jae xchg jle jo les int jl loope xchg mov pushf test shl icebp mov (bad) mov inc or ficom xchg sti dec inc adc push pop jnp push outsb hlt xchg (bad) cmp std lcall lods mov or div lea idivl mov sti xchg lods xor es (bad) lock movsb outsl (bad) pop andl test lcall pop mov stc mov sub sahf rorb push inc pusha pop ret cmp pop out das push repz pop insl add (bad) std out popw bound jmp aas js cld mov pop stos scas sahf arpl les and repnz mov out push add or jb loope ret mov and xchg lret nopl and push outsl xchg out les inc popf inc test bound dec loopne sti in movsb clc (bad) pop push fs fisub ret push test neg xor xor or mov jecxz mov jbe das sti mov bswap inc int stos leave sbb into lahf test (bad) add sarl or scas lahf push decb jne mov adc inc rep xchg int push test pop mov test cmp es adc cmp shlb out mov and mov pushf rep fwait lret (bad) mov mov daa pop jmp jle jp call adc xchg xchg xchg aas xorl imul mov mov (bad) jne cli movsl xchg or jne mov inc jecxz scas mov xchg lds jl subb loopne push ds mov cmp iret dec dec lea sbb lcall dec sub (bad) or xchg add (bad) stos sub adc subl lods ljmp sahf pop adc aam cmp pop insl iret ds xlat pop das and jmp ja jmp mov mov loope pop icebp adc test mov adc or shlb jo test nop test inc insl add inc inc repz dec inc (bad) int sub leave lds out shll add popa add test jae jns adc rclb gs stos and pop mov or je mov divb ss or push dec jg sahf push sub push add das fwait test xchg push cmp call sbb loop test or test cs (bad) daa inc cli xchg test pop sbb mov cmp push inc pop lods or aas hlt xor pop pushl jle,pt add lea outsb pop add pop lahf and repnz mov out ret lret scas into (bad) or push pop test bound out loopne and icebp inc imul movsl sbb pop jns jb stos (bad) rol fwait sbb mov jl xor rolb push repnz repz dec (bad) in sarl sub dec lcall fcom (bad) (bad) mov out cld lods bound push lock ds sahf jl ret loop cld dec (bad) icebp xlat shll pop lret nop push nop lods mov mov add enter hlt sbb fadd push in inc out in mov and cwtl addl scas or test inc cmp xchg mov nop sub out push popf xchg cli into pushf xlat jl mov (bad) test js xor sub jo in stc ss out arpl outsb pushf dec mov cmp lock into lds mov add push and aaa jo jns cvttps2pi out sub cmpsb call cmp rclb lds mov mov leave xchg ret cmp add add inc xchg mov cltd (bad) out xchg xor push and push xchg shrl imulb fwait pop jne outsl in pop add lock fiaddl cmp sub mov push je push stos (bad) fwait jno imul insl mov xor adc out (bad) fnsave pusha pop fdivp mov test mov call clc int3 mov sbb test sub fidivl mov mov xchg jg (bad) xor add and push lahf push repnz outsl std sbbb pop (bad) int xor test ds mov adc imul into divb push inc ret dec idivb test xchg repz jns mov ja out int xlat mov add aaa add jbe insb divl stos jle inc cltd push pop fidivr inc inc mov fistp js outsb lock inc xlat or cld repnz xchg lret stc daa sbb clc out dec pop pop push shll cmp stos in cmpsl mov fisub lea mov jl push jmp fisubrl pop pmullw xchg sahf scas dec int std add mov cmp dec sbb int3 jl xor or ljmp xor mov fidiv cltd sbb in sub dec cmc sbb inc rclb loop cmp fcomp addr16 xor push rorl xor and rorb lds cmp dec dec sahf loop and ficompl add cld mov daa imul (bad) call aas outsl inc aas aad arpl imul jns jnp addr16 adc inc sub out add (bad) jb movsl (bad) xor lock lcall mov out sub mov push pop jmp call dec test sub or in jle dec popl mov mov (bad) movsb push lahf jbe lret and (bad) int mov icebp mov push mov mov out fnop fsubs xor push rorl xor icebp popa in sahf sub loopne xchg out pop stc and pop rcr xor add int in jns (bad) mov mov push xor fdivp lahf xor sub arpl insb or rcl cmpsl cltd inc fmull pop out and xor es sbb cmc pop test push rorb in xorl dec push or mov imul popl mov sbb and pop xchg daa iret xchg mov push mov enter adc pop pop adc jne sbb xchg (bad) push loop stos lahf cmp lret and (bad) pop jmp mov rcll std inc mov leave gs test sbb int3 xor or mov rorl mov out lock mov addr16 popl fs mov in ret push inc jns xor xor cltd clc rcll leave mov push mov das test icebp xchg mov pop pusha lock lcall mov out sub scas dec ret popf (bad) mov add and sbb fcmovnu jns movb and sub jo and ret cmpsb lret (bad) fs aas arpl rcrl jbe pusha int3 pop mov xchg inc adc lret leave xor cmp stos sub fsubrs imul pop icebp mov in sbb jmp imul jecxz xchg test movsb fcompl mov mov jns pop or dec insl xchg mov enter (bad) jnp mov xor mov adc (bad) pop test shrl dec pop fs test js ja xor dec push mov std push push ss ret stos or repz xchg out insl pop imul fucomi sbb xchg jg push cmp dec scas lock or inc add rcrb popf inc dec cmp jne push push outsb and loopne test mov pop inc mov jbe cmp adc test lcall fistpl test and mov leave mov popa push push insb pop push push gs test or enter dec xchg dec fsubl pop lret cmp ret fldl pusha and pop int mov pop and into popa (bad) outsl add lock pusha in mov mov jb (bad) push je (bad) mov imul lods push or push fwait cmp mov repz (bad) enter dec movsl in fisubl sbb inc xchg test xchg xlat or jge adc cltd es jmp das cmpsl repz mulb clc rep mov mov mov mov mov roll dec add xor jns push mov int3 inc notl call flds lods dec mov mov daa insb push pop push sbb and jmp xchg pop sub les clc dec pop jp mov out xchg int3 ret pop mov dec (bad) or out mov mov lea pop fnstenv add push xor jecxz xchg loope xchg sbb into idivl stos mov aad push jp inc lret arpl (bad) push loope jp jge lock add sbb cmp stos test insl imul imul pop popa or push aam test nop inc mov add (bad) fildll jmp mov jecxz faddl int3 dec adc int3 xor mov scas adc sub xchg enter mov andl add inc cli add cltd add or sub pushf movsb adc sub jae stc jbe and cld ss mov sbb int3 enter in xchg and xchg pop gs pop lret cmpsl rolb adc cmpsb fwait dec jb dec xchg out mov int3 (bad) pop push adc sbb pusha mov (bad) jne push test fdivrs add xorb jg icebp sub add hlt (bad) in (bad) loop or mov cld mov into loopne (bad) mov inc mov sub pop push cmc jle sbb xor or xchg stos jmp sbb and xor and ja mov mov stc test imul inc add mov enter jp ret push push (bad) repnz jbe jno aad jo sub shrl in or outsl test fdivrs std test nop fldl stos or sar enter mov test jle stos aaa mov push out mov push scas add jae push mov sbb cli (bad) lahf dec xchg xchg xchg and and dec lods movsb jae sahf lahf xchg dec clc clc mov movd fcmovne icebp xchg mov adc outsl insl ja je dec jae inc insb sbbw jo cli push xchg xchg or insb push dec mov adc ljmp lods rcr leave bound xor sbb daa adc dec lahf push or push test ljmp push add out cld or hlt adc imul xor das scas xchg xor movsl jb or sub nop cwtl mov scas xor push scas xor jl sbb dec fsubrs mov pop int xchg mov lds (bad) mov inc sbb or jae pop adc fs add fwait push mov sub loop or jae pop adc fs mov in adc fs mov in adc fs (bad) xchg dec mov mov adc (bad) dec in mov in adc fs es daa cmp mov int3 adc ja sub inc or dec pop jns stos dec cs and jge (bad) cwtl es inc mov scas cmp or shll subl mov gs mov test dec frstor or cmp add push fwait and or jae pop adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs jno push jmp (bad) jg es dec (bad) adc (bad) mov faddp mov mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs mov in adc fs jl add sbb jl cwtl repnz or add data16 cmp movq and rorl sti movsl in xchg aaa mov out xor mov test aas or (bad) jno ljmp inc inc imul es test aaa adc cmpsl and movsb cltd test test jae js popa or xchg mov cmpsl stc int out inc and sbb loope mov inc movsl dec fsubs inc xchg int cmp fdivr fisttpll ffree orl into nop mov cli ljmp gs and sub mov jne push cmp mov pop test mov and push loopne hlt lahf lods or fcoml ret jo pop ljmp cmpsb in jno xchg pop pop icebp xchg mov insl pop insl pop popf pushf popa push inc cld fcmovb les adc fmulp mov pop into xchg xor pop mov insl (bad) xor sbb es mov push or call ljmp add sub aaa xor stc scas outsb nop xchg dec xor xchg je mov ret je jp repnz xor add sub adc sbb sbb jmp mov adc adc sub cli mov icebp pop xchg iret (bad) out (bad) lret sbb jmp das popf sarb insl into jle push adc movl adc outsl out inc inc or push loopne ja sbb jbe or dec sub es mov popf enter inc pop push and xor jnp jne adc xor inc cwtl xchg mov inc dec cwtl jecxz pop sbb les sbb lcall (bad) jmp cld mov push movsb fnstenv or imul arpl ja dec (bad) fisttp dec jg outsb mov dec (bad) jns mov test lds cmp adcl iret mov lret mov int pop dec rorl adc rorb cmpsl add and cs addr16 and push xchg lds bound mov gs stos xchg jb cmp call dec mov pop fmuls or cmp dec mov inc sub mov scas xor pushf mov push aaa adc jbe int3 fildl jmp jno xor stos test imul lret inc ret mov mov mov sub xchg iret ljmp cmc pop adc mov push and sbb roll popa jmp sub lds cmc pop jae cmp leave cmp in les sub es movsb int insb pop enter (bad) hlt (bad) cmc cmp mov dec jg inc mov scas jne cmpl decb leave outsl jbe jmp (bad) mov pop jo adc jle add fstpl mov adc pop or sbb adc lds (bad) stos sahf in fnsave sbb mov xchg mov fdivrs jns orl xorl xchg inc mulb ja jge adc outsl mov (bad) call pushf bound lods test or gs inc xor js sahf xor adc push mov repz stc add inc inc insl frstor imul mov into add mov (bad) xlat push loope ret add (bad) enter xchg push jno jns fptan fs mov or shll dec out add (bad) in ret push test mov xchg jo lea jnp aas push scas movsb jne and sbb and mov dec cmp inc and push mov pop sub xchg or add push mov push add jnp dec adc insb mov hlt dec mov jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov adc jno xchg mov jle jno sbb cli or push je mov jbe inc and popa add inc call mov or cmpsl adc aas xchg clc xor jo inc test stos dec add dec fisttpll aam popa add inc call mov (bad) mov pop idivl ja jecxz inc push test sbb xor sbb mov test dec push pusha bound test fidivrl and sbb dec mov (bad) lret inc call fwait mov dec inc jle imul (bad) sub out mov sahf (bad) out jmp out std and adc aad jmp mov sbb and mov jmp add push xchg jb xor jne in aaa jo addr16 mov jno outsl mov insl add insl add add fcmovnbe and jae rorb int3 scas adc sbb test jge movsl xchg mov xchg out arpl push sbb fildl adc jecxz aad pop adc fwait cmp cltd lcall ja daa inc icebp inc mov add sarl iret outsb mov sbb ret mov xchg inc jns mov mov cmp cmp mov mov (bad) cmc ja sar enter loope sti test dec pop sahf pop nop neg inc scas test dec add rcrb sub dec sub fcmove aam (bad) clc push push daa gs inc fdivrl inc push jo lcall mov stos dec cmp pop mov cmpsb or add pop ss cmp dec mov dec xchg xchg xchg jle pop jno fwait fs or ds cltd jb (bad) add nop or mov (bad) incb sub (bad) jnp xchg cmpsl leave rcl aas push add and pop sar add jno jb notl clc insb sbb push and mov test addb (bad) xchg jle pop jno fwait fs or ds cltd jb bound sub aad popa sub (bad) pop sub inc mov ljmp ficoml mov xchg sub cld cmp lea jmp stc punpcklwd sub jb mov sbb push push ds shlb jne inc or xchg lcall test ja iret imul in mov inc imulb mov out inc jge jae rorl out cmp insl or push adc dec push fisubrl xchg lds jnp hlt push xchg pop out xor (bad) cs mov jno clc xor ffreep xchg daa outsb scas lods pop or mov insl inc jg dec int3 fidivr lock outsl pop sbb ja mov aam popa adc movsb mov fild fldenv mov das jae adc push sub adc lret jno shrb mov repnz or rolb ljmp out (bad) mov sub pop movsb dec (bad) pushf sbb mov aam push jbe dec fucomip sahf mov jecxz ffreep xchg daa outsb scas lods pop or mov insl inc jg dec int3 fldt test and test fdivrs pusha pop push dec pop add popl sbb push sub and push sub cld inc mov jp lods xor call pop call (bad) stos mov (bad) dec dec or dec loop adc inc loopne ljmp insl pop int xchg out js sub cmc stos inc mov sbb mov and cwtl lock ret cmp push cmpsb push leave pop flds jnp scas clc mov mov dec sub dec pop lea pushf iret push inc hlt pop pop or loope dec push mov add push scas fdivs (bad) es inc xor cs cltd jg push mov pop dec inc ljmp pop adc push sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov push add inc notb jmp lret xor xchg mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov aad jmp mov sbb and mov or iret repz mov ret dec inc add add add add or add jbe xor xor xor cmp add add add and add jle add add and jb outsb addr16 add add sub add or add push push add xor add and dec inc add add add mov add and outsl bound add add add add add push push add or add add and add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add mov push add add add add add add add imul add add add add add or pop add pop add mov xchg add ret add roll clc add pop push cmpsb add cmpsb add cmpsb add cmpsb add popf push add add add add add add add add adc push add add add add add add add add add add add add add add add add add add add add add add add add add add add jae add adc aaa add xchg add adc dec add cltd add add add test add add add add test add add add add test add add add add add add add add add add add add add add xchg add add add add xchg add add add add xchg add add add add xchg add add add add add add add adc aaa add add add adc dec add add add adc pop add add add mov add add mov add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add add add or add inc add add add or add je or add addl add add add add add add add add add add add add add add add add add add add add xchg add add add add xchg add add and add add add add add add xchg add or and add add add add add add xchg add or and add add add add add add xchg add add add add xchg add add add add xchg add and add add add add add add xchg add add and add add add add add add xchg add add and add add add add add add xchg add add and add add add add add add xchg add add and add add add add and add add add add and add add add add and add add add add add add xchg add or and add add add add and add add add add and add add add add add add xchg add add and add add add add and add add add add and add add add add add add xchg add add and add add add add and add add add add and add add add add add add xchg add add and add add add add and add add add add add add xchg cmp adc add fisub add add xchg add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add add add xchg cmp adc add cmpsb and add add add add add add add add add add xchg add or and add add add add add add add add add add xchg add add add add add add add add add add add xchg add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add add add xchg add add add add xchg add add and add add add add add add add add add add xchg add or and add add add add add add xchg add add add add add add add add xchg add add add add add add add add xchg add add and add add add add add add add add add add xchg add add and add add add add add add add xchg cmp adc add ss add add add add and add add add add and add add add add add add xchg add or and add add add add add add xchg add or and add add add add add add add add add add xchg add add add add xchg add dec and add add add add add add add add add add xchg add add and add add add add add add xchg add add and add add add add add add xchg add add and add add add add add add add add and add add add add and xchg add add and xchg add or and xchg add or and xchg add or and xchg add or and xchg add add xchg add add and xchg add add and xchg add adc xchg add add xchg add add and xchg add add and xchg add add and xchg add add and xchg add add and xchg add add and xchg add add and xchg cmp adc add (bad) and xchg add add and xchg add add and xchg add or and xchg add or and xchg add or and xchg add or and xchg add add and xchg add add and xchg add add and xchg add fisubl xchg add add and xchg add add and xchg add add and xchg add add and xchg add add and xchg add add and xchg add add and xchg add add and xchg cmp adc add mov add add xchg add add add add add add add add xchg add or add add xchg add or add add xchg add or add add xchg add add xchg add add add add add add add add add add add xchg add add add add xchg add add add add xchg add add add add xchg add add add add xchg add add add add xchg add add add add xchg add add add add xchg cmp adc add push daa add add xchg add add add add xchg add add daa add add xchg add or daa add add xchg add or daa add add xchg add or daa add add xchg add or daa add add xchg add add add add add add add add xchg add add add add xchg add push add add xchg add add add add add add add add xchg add add daa add add xchg add add daa add add xchg add add daa add add xchg add add daa add add xchg add add daa add add xchg add add daa add add xchg cmp adc add push sub add add add add sub add add add add sub add add add add add add xchg add or sub add add add add sub add add add add sub add add add add add add xchg add add sub add add add add sub add add add add sub add add add add add add xchg add add sub add add add add sub add add add add sub add add add add add add xchg add add sub add add add add add add xchg add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add add add xchg add add sub add add add add sub add add add add add add xchg cmp adc add scas sub add add add add add add add add add add xchg add or sub add add add add add add add add add add xchg add add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add add add xchg add add add add xchg add add sub add add add add add add add add add add xchg add or sub add add add add add add add xchg add add add add add add add add add add add xchg add add sub add add add add add add add add add add xchg add add sub add add add add add add add xchg cmp adc add sub add add add add add add xchg add add sub add add add add add add add add add add xchg add or sub add add add add add add xchg add add add add add add add add xchg add add add add xchg add push sub add add add add add add add add add add xchg add add sub add add add add add add xchg add add sub add add add add add add xchg add add sub add add add add add add add add sub add add add add sub add add add add sub add add add add add add xchg add or sub add add add add sub add add add add sub add add add add add add xchg add add sub add add add add sub add add add add sub add add add add add add xchg add add sub add add add add sub add add add add sub add add add add add add xchg add add sub add add add add sub add add add add add add xchg cmp adc add into sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add add add add add add add add add add xchg add or sub xchg add or sub xchg add or sub xchg add add xchg add add add add add add add add add add add xchg add add sub xchg add add sub xchg add add sub xchg add add sub xchg add add sub xchg add add sub xchg add add sub xchg cmp adc add pop add add xchg add add add add xchg add add add add xchg add or add add xchg add or add add xchg add or add add xchg add or add add xchg add add add add add add add add xchg add add add add xchg add jb add add xchg add add add add add add add add xchg add add add add xchg add add add add xchg add add add add xchg add add add add xchg add add add add xchg add add add add xchg cmp adc add es add add xchg add add das add add xchg add add das add add xchg add or das add add xchg add or das add add xchg add or das add add xchg add or das add add xchg add add add add xchg add add das add add xchg add add das add add xchg add cmp add add xchg add add add add xchg add add das add add xchg add add das add add xchg add add das add add xchg add add das add add xchg add add das add add xchg add add das add add xchg add add das add add xchg cmp adc add out das add add xchg add add das add add xchg add add das add add xchg add or das add add xchg add or das add add xchg add or das add add xchg add or das add add xchg add add das add add xchg add add das add add xchg add add xor add add add add xor add add add add add add xchg add add xor add add add add xor add add add add xor add add add add add add xchg add add xor add add add add xor add add add add add add xchg cmp adc add mov add add xchg add add add add add add add add xchg add or xor add add add add xor add add add add xor add add add add xor add add add add xor add add add add xor add add add add xor add add add add xor add add add add xor add add add add xor add add add add xor add add add add xor add add add add xor add add add add xor add add add add xor add add add add add add xchg add add add add add add add add xchg add or xor add add add add add add add add add add xchg add add add add add add add add add add add xchg add add xor add add add add add add add add add add xchg add add xor add add add add add add add xchg cmp adc add inc xor add add add add add add xchg add add xor add add add add add add add add add add xchg add or xor add add add add add add xchg add add add add add add add add xchg add add add add xchg add pop xor add add add add add add add add add add xchg add add xor add add add add add add xchg add add xor add add add add add add xchg add add xor add add add add add add add add xor add add add add xor add add add add xor add add add add add add xchg add or xor add add add add xor add add add add xor add add add add add add xchg add add xor add add add add xor add add add add xor add add add add add add xchg add add xor add add add add xor add add add add xor add add add add add add xchg add add xor add add add add xor add add add add add add xchg add add xor add add add add add add xchg add and add insb xor add add add add add add test add add add add sub cmp adc or cmp adc xor mov add add add adc dec add cs cmp add add jge insl add lea sahf add cmp adc mov cmp adc xchg add push xchg xchg add push mov cltd add add add add add add add add add add add add add add add add add jns mov add pop add add add add testl or add inc add add add add add add add add push add add add add gs dec pop inc dec inc dec push push pop dec dec push pop cs add push dec dec dec inc dec push inc inc push inc push push add inc inc dec push push push add inc push inc inc inc pop inc push push inc inc dec push push add push dec inc dec inc inc dec push push push inc push push add inc dec dec push inc push pop inc push push pop dec dec add inc push inc inc push push pop push add inc push inc dec dec push push dec inc dec inc pop dec add dec dec push inc push dec push push pop push dec add dec dec pop push push push dec dec pop push inc push add push pop push dec dec dec dec dec dec add pop inc dec pop push pop dec push push dec push push dec pop dec inc push pop inc push inc inc dec dec dec inc dec dec push add push inc pop push push inc push inc push push dec push dec dec pop dec push push inc push inc pop push push inc push inc pop push dec inc pop dec dec inc push dec push inc add arpl insb imul gs add push arpl dec inc inc dec dec dec pop push inc push push pop dec dec push pop push inc push inc inc push dec pop push push pop inc add push pop push dec push inc push push dec push inc push dec pop dec dec push add dec inc push dec inc push push inc dec dec dec push inc inc push dec push inc push inc push push push inc add dec push push pop pop dec push inc push push dec push push inc inc inc inc push push inc pop push add inc dec dec push push inc push dec dec push push inc add dec push push dec dec push push dec inc dec inc pop inc push push pop dec dec push push push push inc inc push add push push inc push dec push push dec inc push inc push pop push push dec push inc dec pop dec add push dec inc push pop dec dec dec inc inc dec push inc inc dec dec inc inc inc pop add push inc push push inc inc push push push add inc inc inc inc inc inc dec push dec inc push push dec push inc dec inc push push push pop dec add inc push push pop inc pop dec dec dec push push inc inc add dec dec pop inc pop dec push dec inc push dec push push add dec dec push push dec push pop inc inc push dec push push push inc push push push pop push inc dec dec add pop pop push dec push inc dec dec push add inc dec dec push pop push push inc pop inc dec add inc dec dec dec push dec inc push add dec inc inc push push dec dec inc push dec add pop push dec dec push dec dec dec push inc add push push push dec inc push push dec push push dec dec push inc inc inc push add pop pop pop push dec push inc dec inc dec pop push add dec pop pop inc push dec inc dec inc push pop pop dec dec add inc dec inc push push inc pop dec add dec push push push push inc dec dec push dec inc inc add push dec push push pop pop dec dec push inc pop inc push push add pop pop pop dec inc dec inc inc pop push inc dec push dec dec inc pop add push dec dec push dec inc dec push inc add push inc inc push push dec push inc dec push pop inc dec inc add inc push dec dec pop dec push push inc pop pop pop push inc inc dec inc add push dec dec dec dec dec inc dec inc dec dec inc dec inc add dec push push dec inc dec add push dec push push inc dec dec push push push dec add arpl add imul inc pop pop pop push dec add dec dec pop push dec inc push inc dec inc push dec dec pop pop inc inc dec inc inc dec dec dec push dec push dec push dec inc push pop inc pop inc push pop push push dec push dec dec pop push dec inc push inc dec inc push dec dec pop pop inc inc dec inc inc dec dec dec push dec push dec push dec inc push pop inc pop inc push pop push push cmp add addr16 dec dec dec push inc inc pop inc inc push add jae gs cs arpl imul imul add arpl imul jae imul imul arpl imul outsb add jae gs cs jne je insl gs outsl insl jo insb gs gs imul insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add outsb je insl gs outsl insl jo je bound imul bound add dec pop inc dec inc dec push push pop dec dec push pop add jae gs cs push imul gs add jo outsl insl popa imul outsl insl popa imul gs cs gs arpl outsb add jae insl bound dec outsl popa add jb outsb add jo popa arpl dec imul je push imul jae arpl dec imul je push imul jae arpl inc outsl insl jo insb gs gs imul jb imul popa insb insb push jns add insb insb inc jns popa insl add outsb je insl gs gs jo jb add je bound arpl insb jne add je js arpl imul insl bound push jns je insl cs dec add jb popa insl add je popa outsb imul jae jne arpl je gs insl add je dec outsb addr16 add je add popa add imul insb add jo jae add jae gs cs arpl imul je addr16 jo jns push imul dec popa outsb popa gs xor je push gs imul imul je insl cs gs add arpl imul pop inc imul outsb push outsb imul gs jns gs dec popa jae inc insb outsl jb je insl add insl jo je dec popa jae add insl insl gs imul imul pop dec gs inc imul fs je dec outsl fs jb jo outsl push jb outsb jae outsl jb add gs je inc arpl jo outsl jb push jb outsb jae outsl jb inc imul arpl push jns je insl cs arpl imul jb imul inc outsl fs je jb bound add arpl jae data16 add add sub inc add add push add add inc add inc add push add push add add inc add sbb push add pop add inc add push add push add add sub pop add inc add dec add pop add inc add push add push add push add push add dec add add dec add add add pop add dec add push add inc add inc add dec add dec add push add dec add add dec add dec add dec add inc add sbb push add push add dec add add inc add push add add inc add dec add push add pop add inc add inc add inc add inc add inc add and dec add push add dec add push add push add push add push add push add add dec add inc add sbb inc add inc add push add inc add push add add add dec add dec add dec add inc add add dec add inc add dec add dec add dec add push add inc add push add inc add dec add add add add add push add inc add inc add add dec add pop add inc add add inc add dec add add add push add inc add pop add pop add add push add inc add je jb jns dec add dec add pop add dec add push add dec add push add dec add pop add inc add add dec add dec add dec add dec add dec add push add inc add inc add pop add push add push add add push add inc add inc add add dec add pop add inc add add inc add dec add add add push add inc add pop add pop add add push add dec add dec add pop add dec add push add dec add push add dec add pop add inc add add dec add dec add dec add dec add dec add push add inc add inc add pop add push add push add add push add inc add inc add add dec add pop add inc add add inc add dec add add add push add inc add pop add pop add add push add push add dec add dec add pop add dec add push add dec add push add dec add pop add inc add add dec add dec add dec add dec add dec add push add inc add inc add pop add push add push add add push add inc add inc add add dec add pop add inc add add inc add dec add add add push add inc add pop add pop add add push add imul push add add push add inc add inc add add dec add pop add inc add add inc add dec add add add push add inc add pop add pop add add push add je dec add dec add pop add dec add push add dec add push add dec add pop add inc add add dec add dec add dec add dec add dec add push add inc add inc add pop add push add push dec add dec add pop add dec add push add dec add push add dec add pop add inc add add dec add dec add dec add dec add dec add push add inc add inc add pop add push add add and add dec add pop add dec add push add dec add push add dec add pop add inc add add dec add dec add dec add dec add dec add push add inc add inc add pop add push add push add add push add inc add inc add add dec add pop add inc add add inc add dec add add add push add inc add pop add pop add add push add dec add dec add pop add dec add push add dec add push add dec add pop add inc add add dec add dec add dec add dec add dec add push add inc add inc add pop add push add outsb add push add add push add inc add inc add add dec add pop add inc add add inc add dec add add add push add inc add pop add pop add add push add dec add dec add pop add dec add push add dec add push add dec add pop add inc add add dec add dec add dec add dec add dec add push add inc add inc add pop add push add outsl add push add add push add inc add inc add add dec add pop add inc add add inc add dec add add add push add inc add pop add pop add add push add dec add dec add pop add dec add push add dec add push add dec add pop add inc add add dec add dec add dec add dec add dec add push add inc add inc add pop add push add dec add dec add pop add dec add push add dec add push add dec add pop add inc add add dec add dec add dec add dec add dec add push add inc add inc add pop add push add dec add dec add pop add dec add push add dec add push add dec add pop add inc add add dec add dec add dec add dec add dec add push add inc add inc add pop add push add push add add push add inc add inc add add dec add pop add inc add add inc add dec add add add push add inc add pop add pop add add push add dec add dec add pop add dec add push add dec add push add dec add pop add inc add add dec add dec add dec add dec add dec add push add inc add inc add pop add push add push add add push add inc add inc add add dec add pop add inc add add inc add dec add add add push add inc add pop add pop add add push add add dec add arpl jb outsl add outsl add je add add inc add add add add inc add add add add aaa add aaa add add add inc add add cmp inc add add xor inc add cmp xor inc add add add add inc add add xor add add xchg mov jg lea outsl add mov pop push sbb mov push push add add add add add push add push add add add or or add sbb and push push push or aad cmp add sbb adc add push pop add add adc add push add add pop and or pop push adc adc add adc and sbb add and add add push add add pop or add or pop add add sbb add or add add add add add add push add push jb jo outsl outsb inc js gs imul ja add test jae gs cs arpl imul imul cs arpl imul jae imul imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push imul gs imul outsl outsb add add add add add add and add add add add outsl jb js dec popa imul jb gs insb add add add and 