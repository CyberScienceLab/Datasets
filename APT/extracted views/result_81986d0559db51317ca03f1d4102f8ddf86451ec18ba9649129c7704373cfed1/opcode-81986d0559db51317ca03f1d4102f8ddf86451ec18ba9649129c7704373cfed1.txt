mov push sub mov xor xor jmpq jmpq shl clc shl mov cmp test add jmpq mov jmpq jmpq pop retq mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov callq test je mov mov mov mov mov mov cmp mov mov cmovae xor cmp jne cmp jne lea callq test jne inc inc cmp jbe xor mov mov mov add pop retq mov movabs add add jmp xor add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov callq test je mov mov mov mov mov mov cmp mov mov mov cmovae mov xor cmp jne cmp jne lea callq test jne inc inc cmp jbe xor mov mov mov mov add retq mov movabs add add jmp xor add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex push sub mov mov movzwl callq test je mov mov mov mov mov mov mov xor mov lea mov mov xchg cmp jb cmp jne cmpb jne cmp jne lea callq test je mov movabs add add mov mov mov mov mov mov add pop pop retq cmp jne cmpb jne cmp jne lea callq test jne inc inc cmp jbe xor jmp mov lea jmp xor add pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 rex push sub mov mov mov callq test je mov mov mov mov xor mov mov lea mov mov mov cmp jb cmp jne cmpb jne mov callq test je mov movabs add add mov callq test je mov callq test je mov and mov mov callq test je cmp je inc add cmp jb xor mov mov mov mov mov add pop pop retq cmp jne cmpb jne mov callq test jne inc inc inc cmp jbe jmp mov movabs add add mov callq test je nopl mov callq test je mov and mov mov callq test je cmp je inc add cmp jb jmpq mov mov jmpq xor add pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub xor jmpq movzbl push sub mov mov neg clc bswap neg or neg not test bswap bts mov test or test jmpq jmpq push jmpq push jmpq bt cmp cmp add jmpq push jmpq jmpq jmpq inc cmc clc cmc test xor test test mov stc clc test sub jmpq push jmpq cmp jmpq pushq not movabs not mov jmpq jmpq jmpq jmpq clc neg test cmc cmc bt xor stc stc jmpq jmpq jmpq jmpq push bswap push not movzbq movzbw push setne not bswap bswap push jmpq push jmpq jmpq push jge push jmpq neg mov test bt cmc bt sub clc test shl jmpq jmpq push jmpq jmpq popq jmpq sub lea jo neg mov clc xor clc stc sub cmc clc neg cmc jmpq pushfq jmpq clc bt cmc shl jp mov js pushfq jle popq jmpq jmpq jmpq push jmpq jmpq add retq int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub xor mov movb mov mov mov mov mov mov mov mov mov mov callq mov mov lea mov callq mov mov add mov callq xor mov lea mov callq mov test jne mov mov mov add pop retq mov mov mov callq mov test js mov mov mov mov mov mov callq mov test js mov mov mov mov mov mov callq mov test js mov mov mov mov mov mov callq mov test js lea mov callq mov test js lea xor mov mov callq mov test js lea mov mov callq mov xor mov callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub xor movl lea mov mov mov movl mov mov mov lea lea mov xor mov mov mov mov callq test js mov callq lea lea callq mov lea callq lea lea callq mov lea lea lea xor movl mov mov callq lea lea callq mov lea lea lea xor movl movl mov callq lea lea callq mov lea lea lea xor movl mov callq test je or xor mov repnz lea not lea lea callq mov lea mov xor mov mov callq lea lea callq or xor mov lea mov repnz xor not lea mov mov mov callq mov mov mov callq mov test je add je or xor mov repnz lea not lea lea callq mov lea mov xor mov mov callq mov mov callq mov mov add pop pop pop retq int3 mov mov mov push sub mov mov lea mov mov callq xor lea lea lea mov movl mov mov movl mov mov callq test js lea mov callq mov lea mov lea lea xor mov callq cmp je mov test je mov xor callq mov test jne mov callq mov jmpq mov xor mov callq mov mov lea lea mov mov mov mov callq mov test jns mov callq xor mov callq mov jmpq cmpl mov jne mov cmp jbe mov mov callq mov test je mov xor mov callq mov lea mov callq mov mov mov jmp mov jmp mov mov callq xor mov callq mov mov jmp mov callq mov lea mov mov mov mov pop retq int3 int3 int3 int3 int3 int3 mov mov push sub mov mov lea mov mov callq xor lea lea mov lea mov mov mov mov mov mov lea xor mov movl movl callq test js mov callq lea mov callq mov lea mov xor mov mov callq mov mov callq mov lea mov mov mov pop retq int3 int3 int3 rex push push push push sub mov callq mov test je add je or xor mov repnz lea not lea lea callq xor lea lea lea mov mov movl mov movl mov mov callq test js lea lea callq mov lea mov lea lea xor mov callq cmp je mov test je add xor mov mov callq mov test jne mov callq mov add pop pop pop pop pop retq mov xor mov callq mov mov lea mov mov mov lea mov callq mov test js cmpl jne mov cmp jbe mov xor mov callq mov test je mov xor mov mov mov callq or xor lea mov mov repnz not dec mov test je nopl mov mov callq test je add je mov mov mov callq test jne lea cmp jae or xor lea repnz not dec test je lea jmp add jmp mov mov mov add callq lea lea lea cmp jae or xor lea mov repnz not dec mov test je mov mov add callq lea lea lea jmp add add cmp jae or xor lea mov repnz not dec mov test jne mov lea lea mov mov xor mov callq xor mov mov callq mov mov mov mov callq xor mov callq mov add pop pop pop pop pop retq mov callq mov add pop pop pop pop pop retq mov mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex push push sub xor mov mov test je mov test je mov mov mov movl movl mov movl lea lea lea mov movl movl mov mov movl mov mov callq test js mov lea lea mov mov movl mov callq mov test js mov test je cmp jne mov cmp cmovae xor mov mov callq mov test je mov mov mov mov mov mov lea xor xor xor mov callq mov test jns xor mov callq jmp mov mov mov jmp mov jmp mov mov callq mov mov mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub mov mov mov callq lea mov callq lea callq xor lea mov mov movl movl movl lea lea lea mov movl movl mov mov movl mov mov mov callq test js mov mov lea mov lea mov xor xor xor mov mov mov mov callq mov mov callq mov lea mov mov mov pop retq int3 int3 mov push sub callq lea lea mov xor callq mov mov movl movl lea movl lea lea lea mov movl movl mov mov movl mov mov mov callq test js lea callq mov test je mov test je lea mov mov nopl cmp jne cmp je inc add cmp jb jmp mov lea movzbl xor mov callq mov callq mov mov add pop retq rex push sub cmpw mov mov je mov mov callq mov test je mov test je mov mov xor mov test je mov lea mov nopl movzbl cmp jne mov callq cmp jne movzwl lea xor xor xor mov mov callq test js mov callq test je lea xor mov callq mov lea callq or xor mov mov repnz not lea lea callq test jne mov callq mov mov callq jmpq lea lea lea mov mov mov movl mov movl mov mov mov callq test js movzwl mov movl lea or mov mov callq test js mov lea xor xor xor mov mov callq test js mov callq test je lea xor mov callq mov lea callq or xor mov mov repnz not lea lea callq test jne mov callq mov mov callq mov callq mov callq inc add cmp jb mov mov mov mov xor mov callq mov mov add pop pop retq int3 int3 int3 int3 mov push sub xor mov mov mov mov test jne mov mov add pop retq mov lea lea mov callq mov test js mov callq test jne mov callq mov test je callq mov mov mov add pop retq mov test je mov test je cmpw lea je cmpq je lea mov callq test js movzwl test je movzwl cmp jb test je mov movzwl xor lea mov callq mov mov mov callq jmp mov test je movzwl mov lea callq mov callq mov test je callq mov mov mov add pop retq int3 int3 rex push sub mov mov mov callq test jne mov add pop pop retq lea mov mov callq lea xor lea lea mov mov movl movl mov mov mov callq test js mov lea lea xor xor mov mov callq mov add xor mov mov callq mov test jne mov callq mov jmpq mov mov lea mov mov mov callq mov test jns xor mov callq jmpq mov test je dec js data16 mov lea xor mov xor mov mov callq mov add xor mov mov callq mov test je mov xor mov callq mov lea mov mov mov mov xor mov callq test js mov lea callq xor mov callq sub jns xor mov callq mov callq mov mov callq mov mov mov add pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub xor mov lea lea mov movl mov movl mov mov callq test js mov lea lea xor xor mov mov callq mov add xor mov mov callq mov test jne mov callq mov mov add pop retq mov mov lea mov mov mov mov callq mov test jns xor mov callq jmpq mov test je dec js mov data16 mov lea xor mov xor mov mov callq mov add xor mov mov callq mov test je mov xor mov callq mov lea mov mov mov mov xor mov callq test js mov lea callq xor mov callq sub jns mov xor mov callq mov callq mov mov callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 rex sub xor mov mov movzwl xor add movzwl mov callq mov test jne mov add pop retq cmpb mov je xor lea lea mov mov mov callq lea lea callq jmpq mov test je mov callq mov test je or xor mov repnz xor not lea mov callq mov or movb mov xor mov lea repnz not lea mov callq mov or mov xor repnz not mov mov lea callq movzwl mov xor mov callq lea lea callq lea lea mov callq mov test js lea lea callq mov test js mov test je xor callq mov xor callq mov test je xor mov mov callq mov lea data16 movzwl add add mov test jne mov mov xor or repnz xor nopl movzwl add mov test jne mov xor or repnz mov mov movzwl mov mov mov movzwl mov movzwl mov lea callq mov mov mov add pop retq xor mov callq mov mov add pop retq int3 int3 int3 int3 int3 mov push sub mov mov callq xor mov test mov mov mov cmove mov mov mov mov lea lea mov mov mov movl callq mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push push push sub mov mov mov mov callq mov movq lea mov mov mov xor mov callq mov test jns mov jmpq mov mov mov xor callq mov mov test jne mov callq mov jmpq lea mov callq nop mov mov mov callq mov mov mov callq jmp mov mov mov mov lea callq test js mov mov mov callq mov mov mov callq mov test je mov jmp mov mov mov callq xor mov callq mov mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub mov mov mov mov callq xor mov mov test cmove mov mov movl mov mov mov mov mov lea lea mov lea callq test js callq mov mov lea mov mov mov xor mov callq mov test jns mov callq mov jmpq lea mov callq nop mov mov mov callq mov mov xor callq mov mov jmp mov mov mov lea callq nop mov lea mov callq mov jmp mov mov callq mov callq mov lea mov mov mov pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub xor mov mov movzwl xor add mov movzwl mov callq mov test je movzwl xor mov callq mov lea mov callq lea lea mov movl mov movl mov mov mov callq test js lea lea callq mov lea mov lea lea xor mov callq cmp je mov test je add xor mov mov callq mov test jne mov callq mov mov add pop retq mov xor mov callq mov mov lea lea mov mov mov mov callq mov test jns mov callq xor mov callq mov mov add pop retq cmpl jne mov cmp jbe mov xor callq mov test je mov xor mov callq mov mov lea callq jmp mov jmp mov mov callq xor mov callq test js mov lea callq lea lea lea callq mov test js mov mov xor callq mov mov mov add pop retq mov callq mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov test je xor xor callq mov test je callq movq mov callq mov add pop retq int3 int3 int3 int3 int3 mov mov push push push push push sub mov xor movl mov movl mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov lea xor xor mov callq test js mov mov mov movzbl xor callq mov test jne mov callq mov jmpq xor lea lea callq mov xor mov callq mov mov mov mov mov mov mov mov mov mov movl mov mov movzwl mov mov movzwl xor callq mov mov mov cmp je add mov callq mov xor lea sub callq mov xor add xor callq lea xor mov callq callq lea lea mov mov callq mov test jns mov callq mov callq mov jmpq mov mov mov lea lea mov mov mov movl mov mov mov mov lea mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea mov mov shl or mov mov mov mov mov mov movb callq cmp jne lea mov xor xor mov callq mov test jns mov xor mov callq mov mov mov mov mov callq jmp mov mov lock mov cmp je mov lock mov mov mov mov mov mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub mov xor mov mov mov mov mov test je mov test je mov jmp cmp je callq mov mov callq test jne mov jmpq test jne testb jne mov jmpq lea movzbl xor mov callq mov test je mov xor mov callq mov mov test je mov mov mov movl jmpq test je xor xor mov mov mov callq mov test je mov callq mov mov movl jmp testb je xor xor mov mov mov callq mov test jne mov callq mov jmpq mov callq mov mov movl jmp mov mov mov movl xor lea lea callq mov mov mov lea mov mov mov mov mov mov movb mov mov mov mov mov mov mov lea mov mov mov movb callq cmp jne lea mov xor xor mov callq mov mov lea mov mov mov mov pop pop pop retq int3 mov mov mov mov push sub mov xor mov mov mov mov test je mov test jne cmp je callq mov mov callq test jne mov jmpq xor lea lea callq movzbl xor callq mov test jne mov jmpq mov movb lea mov lea lea mov mov mov mov mov movb mov mov mov mov mov mov mov movq movb callq cmp jne lea mov xor xor movq callq mov lea mov mov mov mov mov pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub mov mov test je mov test je mov callq test jne mov mov add pop retq movzbl xor mov callq mov test jne mov mov mov add pop retq xor lea lea callq movb movl lea lea mov mov mov mov mov mov movb mov mov test je btl jb lock orl mov mov callq cmp jne lea xor xor xor movq callq mov callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub movl xor mov mov mov mov mov movl movl mov mov movl lea lea lea mov movl movl mov mov movl mov mov callq test js mov mov lea mov lea xor mov mov callq mov mov callq test js mov cmpq je mov mov test jne cmpq je mov callq mov test je mov mov mov mov mov lea lea mov movl movl callq mov mov jmp mov mov callq mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push push push sub mov xor mov mov mov test je mov test je mov test je mov mov test je mov mov test je mov mov mov lea callq mov test je mov mov mov lea callq test js mov test je cmpl jne cmp jb movl mov xor callq mov test je xor mov mov test je mov test je mov mov cmpb je mov lea lea mov mov mov callq mov mov callq test js mov test je mov mov xor callq mov test je mov mov or callq not mov cmpb je test je movl jmpq mov bt jae btc mov mov lea lea mov mov mov callq mov cmp jne mov test je mov test jne cmpq je mov callq test je lea mov lea mov mov lea mov mov mov movl movl callq mov test js mov mov lea lea mov mov mov callq mov mov callq jmpq mov jmp test je movl test jne xor mov callq xor mov callq mov lea mov mov mov mov pop pop pop pop pop retq int3 int3 int3 sub lea lea callq test js mov mov mov cmp jbe mov cmp jb mov lea cmp jne lea xor callq cmp jne mov test je mov mov callq mov test je mov mov mov mov add mov callq mov mov xor callq mov mov lea mov mov callq mov test je mov mov callq mov test je mov mov mov mov mov mov add mov add callq mov mov xor callq mov mov lea mov mov callq mov test je mov mov callq mov test je mov mov mov mov mov mov add mov add add add mov callq mov mov xor callq mov mov mov callq mov mov mov mov add mov add add mov add callq mov test je mov mov callq mov test je mov mov mov mov mov mov add mov add mov add add add mov callq mov mov xor callq mov mov lea mov mov callq mov test je mov mov callq mov mov test je mov mov mov mov mov add mov mov mov add mov add mov add mov add add callq mov mov mov xor callq cmp jne mov callq jmp mov xor callq xor mov mov mov mov mov test je mov xor callq mov mov test je mov mov mov mov mov mov mov add mov add mov add mov add mov add add add callq mov mov xor callq mov mov mov xor lea mov mov mov mov mov callq movzwl mov mov test je mov xor callq mov mov test je mov mov mov mov mov mov mov add mov add mov add mov add mov add mov add add add callq mov mov xor callq mov mov mov xor lea mov mov mov mov mov callq movzwl mov mov xor mov callq mov add retq mov mov push push push sub mov xor mov lea lea callq cmpq je mov mov test cmovne mov jmp mov cmpq je mov mov test cmovne mov jmp mov cmpq je mov mov test cmovne mov jmp mov cmpq je mov mov test cmovne mov jmp mov cmpq je mov test je mov test je mov mov jmp mov cmpq je mov test je cmpl je movzwl mov mov jmp mov cmpq je mov test je cmpl je movzwl mov mov jmp mov mov mov movzbl add xor movl add and add xor add mov add add add mov je mov lea mov mov callq mov test je lea mov mov callq mov test je mov lea mov callq mov mov test je mov mov mov lea callq mov mov mov test je mov mov mov mov add add lea callq mov mov mov test je mov mov mov add mov mov add add mov lea callq mov mov mov mov test je mov test je cmpl je mov mov mov add mov mov add add mov add mov lea callq mov mov mov mov jmp mov mov test je mov test je cmpl je mov mov mov add mov mov add mov add add mov mov add lea callq mov mov mov mov mov jmp mov mov test je mov test je cmpl je mov add mov mov add mov add add mov mov add mov add lea callq lea mov xor callq mov mov mov mov mov callq xor mov callq mov lea mov mov mov pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 mov push sub mov xor mov jmpq shld or ror test mov jmpq cmc xor bt test cmp sub jmpq xadd or mov jmpq sub bt jmpq pushq movsbw not movabs lea not jmpq mov repz movzbw seto setle push not push setge jmpq push seto lea setne bswap push movabs movsbl jmpq jmpq push jb push jl push setg bswap setle lea repz mov push lea lea jmpq push jmpq push jmpq push jle push jmpq jmpq jmpq jmpq mov jmpq jmpq pushfq jmpq push jmpq jae mov test je xor callq mov test je xor callq mov test je xor callq mov test je xor callq mov test je xor callq xor mov callq mov xor add pop retq int3 int3 int3 int3 int3 int3 int3 mov push sub incl mov mov callq cmp jb incl mov mov mov add pop rex.W mov mov mov add pop rex.W int3 int3 int3 rex sub xor mov mov test jne mov add pop retq mov lea callq lea lea mov callq mov test js mov lea lea callq mov test js mov callq test jne mov lea callq mov test je callq mov test je callq mov add pop retq int3 int3 int3 int3 int3 mov mov push sub movzwl mov mov test je cmpb je mov callq jmp callq mov test jne mov mov add pop retq callq mov mov rol mov mov movzwl mov callq mov mov test setns add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push push push sub xor mov mov mov mov test je cmp jb mov mov mov mov mov callq mov test je xor jmpq jmpq std push jmpq popq jmpq outsl mov lea cmp jne lea lea shr cmp jne mov mov xor callq cmp jne mov cmp jbe cmp jne callq xor cmp jbe lea nopl mov cmp ja mov add jmpq mov mov mov mov mov lea xor mov callq jmpq mov mov mov mov mov lea xor mov callq jmpq mov mov mov mov mov lea xor mov callq jmpq mov mov mov mov mov lea xor mov callq jmpq mov mov mov mov mov lea xor mov callq jmp mov mov mov mov mov lea xor mov callq jmp mov mov mov mov mov lea xor mov callq jmp mov mov mov mov mov lea xor mov callq inc add cmp jb mov mov mov jmp mov xor mov callq mov mov mov jmp xor mov mov add pop pop pop retq nop (bad) push add rex.R add jno add jno add jno add jno add sahf push add sahf push add jno add jno add jno add lret push add jno add cmc push add cmc push add jno add (bad) push add rex.WB add int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub xor mov mov test je cmp jb xor jmpq pushfq jmpq jmpq jmpq jmpq mov lea mov cmp jne lea mov xor mov callq cmpl je cmp jne mov cmp jbe mov callq xor cmp jbe nopl movzbl movzbl add mov add movzbl inc mov add mov movzwl add cmp jne mov callq mov inc cmp jb mov mov mov mov mov mov add pop retq mov mov mov mov add pop retq mov mov xor add pop retq int3 int3 int3 int3 mov mov push sub xor mov mov test je cmp jb xor jmpq pushfq jmpq jmpq jmpq jmpq mov lea mov cmp jne lea mov xor mov callq cmpl je cmp jne mov cmp jbe mov callq xor cmp jbe nopl movzbl movzbl add mov add movzbl inc mov add mov movzwl add cmp jne mov callq mov inc cmp jb mov mov mov mov mov mov add pop retq mov mov mov mov add pop retq mov mov xor add pop retq int3 int3 int3 int3 mov push sub lea cmp je lea mov mov mov lea mov mov lea mov lea mov nopw mov mov test je mov lea xor xor mov callq mov lea cmp je mov lea callq mov test je mov movzwl lea mov mov callq cmp jne lea callq mov mov add pop retq xor add pop retq int3 int3 rex push push sub movzwl mov xor mov cmp je mov mov callq test jne add pop pop pop retq mov callq lea rol lea mov lea mov mov movzwl mov mov mov mov callq mov test cmovns test je test je mov movabs mul mov shr test je lea mov test je sub je sub je sub je cmp jne mov mov lea mov mov mov mov mov mov mov callq jmpq mov mov lea mov mov mov mov mov mov mov callq jmpq mov mov lea mov mov mov mov mov mov mov callq jmp mov mov mov mov mov mov lea mov callq jmp mov mov mov mov mov mov lea mov callq add add jne mov test je xor callq mov mov xor mov mov callq mov mov mov add pop pop pop retq xor mov callq xor mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov test je mov test je mov mov movabs mul mov shr test je nopl mov test je sub je sub je sub je cmp jne mov mov lea mov mov mov mov mov mov mov callq jmpq mov mov lea mov mov mov mov mov mov mov callq jmpq mov mov lea mov mov mov mov mov mov mov callq jmp mov mov mov mov mov mov lea mov callq jmp mov mov mov mov mov mov lea mov callq add add jne mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push sub mov xor mov xor jmpq push setle repz movzbw push lea push mov not lea not push movzbw mov mov push movsbw not push bswap push setno xchg jge pushq not setnp mov lea movabs not mov jmpq cmc not test bt sub cmp bt jne and jmpq pushfq jl popq jmpq mov jmpq rcr sbb data16 lock lock jmpq jmpq push jmpq mov jmpq clc cmc not bt cmc rol jmpq mov jmpq push jmpq xchg lea pushq lea xchg setnp xchg movabs not mov mov jmpq jmpq push jmpq jmpq popq jmpq movsbw not not movabs not jmpq jmpq bswap xchg pushq sete xchg bswap movabs not lea jmpq jmpq push jmpq jmpq push jmpq push jmpq mov test je xor callq test je xor mov callq mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub xor mov test je mov test je lea lea mov callq test je lea mov callq test je lea mov mov callq mov test je add lea mov mov callq mov test je lea mov mov callq mov test je cmp jb cmp ja add lea mov callq mov test je cmp jbe cmp jae sub mov callq xor mov mov callq mov test je mov mov mov callq test je mov mov mov mov mov mov add pop retq int3 int3 int3 int3 rex push push sub xor mov test je mov mov xor callq mov test je xor mov mov callq lea mov mov callq xor lea lea lea mov mov mov callq mov mov mov callq test je lea lea mov mov lea mov mov mov mov mov mov callq mov test mov cmovns test je lea mov callq mov test je test je mov mov xor mov callq mov xor mov callq mov add pop pop pop retq mov push sub mov test je movl lea callq mov test je test je mov mov mov add pop retq mov xor callq mov test je xor mov mov callq lea mov mov callq mov callq test je mov callq test je xor mov mov callq lea mov mov callq mov callq test je mov movb callq test js xor mov mov callq lea mov mov callq callq mov callq test jne movb xor mov callq mov mov add pop retq int3 int3 rex sub mov mov mov lea callq lea lea mov callq test js lea lea mov callq mov test cmovs mov lea callq mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 mov mov push push push push push push push sub mov or xor mov xor mov repnz lea not lea xor jmpq xchg lea movsbq push xchg not bswap bswap push movsbw mov pushq movsbw movzbw xchg movabs mov movzbq lea mov jmpq ja mov pushfq jmpq push jmpq and bsr mov shl mov cmc stc sub bt cmc test stc shl jmpq jmpq push jmpq popq jmpq sub mov movsbw cmc mov add cmc setb mov bt cmc sub bt cmp shld jb mov jmpq jmpq mov jmpq jmpq mov clc clc jmpq mov jmpq push jmpq push jmpq push mov not bswap mov repz not movzbw mov push not bswap jge push movsbw movsbl bswap xchg push jg mov push mov jmpq popq jmpq jmpq cmc add jmpq pop retq xor pop and mov add pop pop pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push push push push push push push sub mov or xor mov xor mov repnz lea not lea xor jmpq push lea xchg cld movsbl mov not std jmpq push jmpq push jmpq jle push jmpq push jmpq push setae mov not movsbw pushq movzbw lea jmpq pushfq jmpq jmpq jmpq sub jmpq jmpq push jmpq jmpq clc sub jmpq jmpq bswap movabs mov movsbw not mov jmpq jmpq jmpq jmpq pushfq jmpq not bswap movabs mov mov mov jmpq popq jmpq jmpq push jmpq push jmpq jmpq push jmpq mov jmpq jmpq popq jmpq jmpq jmpq push jmpq mov jmpq pop lea bswap xchg pop xchg jmpq push jmpq ficompl mov add pop pop pop pop pop pop pop retq int3 int3 int3 int3 mov mov push push push push push push push sub mov or xor xor mov mov repnz lea not dec mov test je mov mov xor lea callq mov test je lea xor mov callq mov mov callq mov test je or lea xor repnz mov not lea lea callq sub mov mov dec jmp mov mov mov callq mov mov mov callq test je mov lea rol mov lea mov mov movzwl mov mov mov callq test mov mov cmovns test je test je mov mov xor mov callq mov mov add pop pop pop pop pop pop pop retq int3 int3 int3 int3 int3 mov mov push push push push push sub xor mov mov mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov callq mov mov test je mov xor mov mov callq mov test je mov xor shl add callq mov xor shl mov mov add mov callq mov test je mov xor shl add callq mov xor shl mov mov add callq mov test je mov xor shl add callq mov xor shl mov mov add callq mov test je mov xor shl add callq mov xor shl mov mov add mov callq mov test je lea xor callq mov xor lea mov mov mov callq lea cmp jae nopw mov movzbl add test je mov mov mov callq add lea mov mov add movb test je lea mov mov callq add lea cmp ja lea mov add jmpq mov test je mov cmp ja add mov mov mov inc add mov incl mov mov jmpq mov test je mov cmp ja add mov mov mov inc add mov incl mov mov jmpq mov test je mov cmp ja add mov mov mov inc add mov incl mov mov jmpq mov test je mov cmp ja add mov mov mov inc add mov incl mov mov jmpq mov mov mov mov mov jmpq mov mov mov mov mov jmpq mov mov mov mov jmpq mov test je mov cmp ja mov incl mov mov mov jmpq mov mov mov jmpq mov mov mov jmpq mov mov mov jmpq mov mov mov jmpq mov mov mov jmpq mov mov mov jmp mov mov mov jmp mov mov mov jmp mov mov mov jmp mov mov mov jmp mov mov mov jmp mov mov mov cmp jb test je test je mov mov mov xor jmp mov mov jmp mov mov xor mov mov mov mov mov test je xor mov callq mov mov test mov cmovne mov test je xor callq mov mov test je cmpq je mov xor callq mov test je mov test jne callq mov mov lea mov mov mov mov mov callq mov mov mov test je xor callq mov mov mov test je xor mov callq mov test cmovne mov mov test je xor mov callq mov mov test cmovne mov mov test je xor mov callq mov mov test cmovne mov mov test je xor mov callq mov test cmovne mov lea mov mov mov pop pop pop pop pop retq xchg jp add shrl or add add xchg imul add imul add int3 int3 int3 rex push push push push push sub xor mov xor mov mov mov mov mov mov mov xor callq mov mov test je xor mov mov callq lea lea mov callq mov mov mov callq test je lea lea mov mov lea mov mov mov mov mov mov mov callq mov mov test cmovns test je test je cmp jb mov cmp jb mov add cmp jne lea lea xor callq cmp jne mov mov cmp jne mov test je xor callq xor mov mov mov mov mov mov mov mov cmp jne mov test je xor callq xor mov mov mov mov mov mov mov mov mov jmp mov cmp je mov cmp jne cmp je mov mov xor add callq mov test je mov xor mov callq lea mov mov cmp jae nopl mov mov add test je mov mov mov callq add lea mov mov add movb test je lea mov mov callq add sub lea je cmp jne mov mov mov mov jmp mov mov mov mov jmp mov mov mov cmp jb mov test je test je test je cmp je lea mov mov callq mov test je mov mov xor mov callq cmp jne mov test je xor callq mov mov mov mov xor lea mov mov mov mov mov mov mov callq movzwl mov jmp xor mov callq mov test je test je mov test je cmp je lea mov callq mov test je mov mov xor mov callq cmp jne mov test je xor callq mov mov mov mov xor lea mov mov mov mov mov mov mov callq movzwl movzbl mov mov jmpq xor mov callq mov mov jmp mov mov jmp mov mov jmp mov mov jmp mov mov jmp mov mov jmp jmp jmp jmp jmp mov xor mov callq mov mov xor mov callq test je xor mov callq mov add pop pop pop pop pop pop retq int3 int3 mov mov push push push sub mov mov xor xor lea mov mov callq lea lea callq mov lea xor mov callq lea lea xor mov mov jmpq movabs bswap mov jmpq movzbw mov jmpq mov jb pushfq jmpq movsbl lea std std push cld jo mov cld cld cld jmpq jmpq popq jmpq push setge lea jmpq jmpq jmpq rol movabs cmp adc mov mov rol bsr rol push mov shr movsbl mov jmpq push jmpq cmc xor jmpq push jmpq cld jmpq add bts mov stc bt cmc jo add jmpq push jmpq lea jmpq mov jmpq push jmpq push jmpq push jmpq jmpq push jmpq adc bswap mov ror setne cmc sar mov cmp sub bt test test stc shl jmpq jmpq bswap movabs movzbw bswap jl mov mov jmpq dec stc xor clc mov cmc sub cmc stc clc sub jmpq jmpq jmpq push jmpq popq jmpq push jmp mov test je xor callq mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea callq xor callq mov add pop pop pop retq int3 int3 int3 int3 int3 mov push push push push push push push push sub mov xor xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea mov mov callq lea lea callq mov lea xor mov callq lea lea mov mov callq xor mov jmpq sar (bad) repnz bt cmp cmp add jmpq jmpq jmpq setg bswap push jmpq push jle push jmpq jmpq push jmpq push jmpq push jmpq push not movzbw movzbq bswap repz mov jmpq jmpq rcr movzbq movabs bt mov not mov clc ror clc jno bt add jmpq jmpq jmpq push jmpq jmpq push jmpq jmpq jmpq push jmpq jmpq push jmpq shld and ror mov not xor rcr ror clc shld add add not cmp shld bt sub jmpq pushfq jmpq jmpq jmpq mov jmpq jmpq sub test bt jmpq movabs movzbw movsbw movzbl bswap mov jmpq jmpq jmpq jmpq bt stc cmp stc add jb mov jle mov jmpq jmpq push jmpq jmpq shrd jmpq rol movzbw mov cmc ror cmc add jmpq push jmpq jmpq mov jmpq btc mov test clc add jmpq push jmpq stc cmp cltq cmp cmp clc jge sub jmpq push jmpq jmpq jmpq push jmpq push jmpq mov jmpq push seta lea not not repz movsbw movzbl setns push setp push setg setle jmpq jmpq jg rep bswap lea pop or jmpq pushfq jb popq jmpq stc not jmpq sub jmpq popq jmpq push jne push jp push jmpq xor rcr and mov dec test neg mov stc jmpq push jmpq bt sub jmpq movzbw push not lea not push movsbw lea jnp not push seta not push movzbl mov push movzbw movzbl pushq movabs mov jmpq bswap push mov mov pushq bswap movabs bswap lea mov jmpq push jmpq add jmpq push jmpq push jmpq jmpq cmp bts jmpq std cld cld jmpq jmpq push jmpq mov jmpq inc cmp xor jmpq jmpq jmpq jmpq jmpq push jl push bswap mov repz bswap lea setle push jmpq jmpq jmpq jmpq push jmpq push mov movzbq repz lea push movzbq bswap bswap push jmpq push jmpq mov jmpq push jmpq jmpq jmpq bswap setae repz bt clc push ror push bsr push btc push movzbl push cmp push movzbw btc data16 cmc (bad) pushq sar jmpq jmpq push jg push jmpq mov jmpq setne or movzbl test xor test stc bt neg bt test lea stc stc add stc stc bt jmpq cmp sub bt bt test cmp shr jmpq pushfq jmpq ja mov bswap bswap mov jmpq push mov jmpq movsbl jmpq push jmpq push jmpq push jmpq jmpq jmpq jmpq mov jmpq push jmpq shld bt sub cmp mov clc sub jb dec jmpq jmpq jmpq mov jmpq jg push jmpq seto not push xchg push seta jmpq sub jno shr je mov jmpq push jmpq push lea bswap mov movzbw repz movsbq not push lea push movsbl push mov push jmpq jmpq not push xchg mov bswap xchg push jmpq jmpq jmpq movsbw jmpq popq jmpq jmpq push jmpq jmpq bswap push not movsbl mov movzbw push movzbw movsbw push lea xchg push bswap jmpq push jmpq seta lea repz mov mov push movzbw lea movsbw mov push not push bswap movzbw not mov push lea movzbw bswap push lea jmpq jmpq mov jmpq mov jmpq push jmpq push jmpq cmc not cmc bt and jmpq push jmpq jmpq jno push jmpq lea cmp mov ja inc add setne not not mov jg mov jmpq push jmpq push jmpq jmpq push jmpq jmpq mov ja push jmpq push jmpq jmpq jmpq jmpq jmpq not push jmpq push jmpq push jmpq repz not movzbw not push lea movsbl push movzbw lea push mov sets push movsbw bswap push setno lea bswap not push xchg pushq jmpq push mov movzbw push lea movzbl lea push bswap xchg xchg push movzbl push sets bswap push movsbw pushq mov movabs bswap not bswap mov jmpq jmpq push jmpq movzbw bswap movsbl push jmpq jmpq push lea jmpq jmpq push jmpq jmpq push js push lea mov movzbw mov repz movsbq push movzbl push jmpq push jmpq mov cmc adc mov or mov stc sub stc cmp shr jmpq push movsbw xchg movsbl setle push jmpq lea movsbw movsbw movsbw neg movabs adc shl add test test xor rcr mov sbb xadd or add inc mov dec mov mov mov inc mov add bsr add btc ror setb dec bts btc inc add rol not bt movzbq btc mov cmc ror bt cmp add jmpq pushfq jmpq movabs lea jp bswap mov jmpq push movsbw push lea movsbw push mov jmpq jmpq mov push setne not push xchg seto not push ja not push mov setg push mov push xchg movsbw push jmpq jmpq jmpq jmpq mov jmpq jmpq push jmpq jmpq jmpq push jmpq mov jmpq push jmpq push jmpq jmpq rorb in or rorb int3 callq test je xor mov callq lea callq xor callq add pop pop pop pop pop pop pop pop retq int3 mov mov push push push push push push push sub mov mov xor xor lea mov mov mov mov mov mov mov mov mov mov callq lea lea callq mov lea xor mov callq lea lea xor mov mov jmpq mov lea mov jmpq push jmpq jmpq jmpq jmpq push jmpq popq jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq pop movzbw mov pop not jmpq push jmpq mov jmpq mov jmpq push jmpq setae mov jmpq push lea xchg push movsbq not xchg push movsbw push bswap bswap movsbw push jmpq mov jmpq push jmpq push jmpq jmpq mov jmpq push jmpq jmpq movabs lea movsbw jmpq jmpq lea mov movzbw movzbw pushq xchg movabs bswap not movzbw bswap mov jmpq jmpq jmpq push jmpq bsr mov and mov cmc test mov jge bt clc stc add test shrd jmpq bswap not push jmpq dec dec cmc sbb mov cmc cmc jmpq jmpq push seto not jmpq not mov setge mov jmpq push jmpq push jmpq test cmp jmpq push jmpq push not not mov movsbw repz not not movsbq push not movsbw bswap push xchg jmpq add bt clc cmc not stc bt stc bt xor test cmp cbtw test cwtl test cltq jmpq dec cmc xor stc jmpq jmpq push jmpq mov jmpq xchg push movzbw push xchg xchg lea push jmpq push jmpq jmpq jmpq mov jmpq mov jmpq jmpq mov jmpq push jmpq jmpq jmpq jmpq jmpq push jmpq jmpq push not repz jmpq bt cmp jmpq movsbl push lea movzbw setns movsbw push jmpq movzbl jmpq lea push jmpq push jmpq jmpq push jmpq jmpq jnp push jmpq cmc jbe rcl mov jmpq push movzbq setge adc push mov ror bswap push stc push bts pushq cmc movabs not clc mov cmp and jmpq push jmpq jmpq jmpq push jmpq jmpq push jmpq dec notq stc mov cmc test sub cmp clc jg cmp and jmpq push jmpq push jmpq rol jmpq jmpq jmpq jp bt and jmpq jmpq push jmpq shld test mov jno rol setno adc mov clc stc jmpq push jmpq push jmpq sbb fmull divb rorb (bad) callq test je xor mov callq mov test je callq mov lea callq xor callq mov add pop pop pop pop pop pop pop retq mov mov push push push sub mov mov xor lea xor mov mov callq lea lea callq mov lea xor mov callq lea lea mov mov mov lea mov nopl xor mov mov lea lea lea mov mov callq test jne cmp jne lea callq mov movzbl cmp je callq cmp ja cmp jne cmp je mov callq cmp jbe mov mov callq mov mov mov mov mov incl mov callq cmp jb incl mov callq jmp mov mov callq lea movzbl callq jmpq lea callq xor callq mov mov mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push push push sub mov xor xor mov mov mov mov mov mov mov mov lea lea lea lea lea xor mov mov mov mov mov mov mov mov callq lea lea xor callq lea lea xor callq lea lea xor callq lea mov mov lea xor xor xor mov callq test js mov xor xor mov mov mov callq mov mov callq test js lea mov lea mov xor xor xor movq callq mov test js mov xor xor mov movq mov callq mov mov callq test js lea mov lea mov xor xor xor movq callq mov test js mov xor xor mov movq mov callq mov mov callq test js mov lea lea mov xor xor xor xor mov callq mov test js mov xor xor mov mov mov callq mov mov callq test js xor jmpq xor lea xor xor movb movb movb callq mov test je xor xor xor mov callq mov callq mov lea xor xor callq mov test je xor xor xor mov callq mov callq mov lea xor xor callq mov test je xor xor xor mov callq mov callq mov lea xor xor callq mov test je xor xor xor mov callq mov callq mov mov lea mov mov mov mov pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 mov push sub mov xor xor lea movb movb movb callq mov xor test je xor xor xor mov callq mov callq mov lea xor xor callq mov test je xor xor xor mov callq mov callq mov lea xor xor callq mov test je xor xor xor mov callq mov callq mov lea xor xor callq mov test je xor xor xor mov callq mov callq mov mov add pop retq int3 int3 mov mov mov mov push push push sub mov xor mov mov mov lea lea xor movl xor callq mov lea xor mov callq lea mov mov mov mov callq test js cmp jb test je mov imul mov mov test je mov mov mov mov mov imul mov mov mov movzwl mov movzwl add or lea xor repnz xor nopl movzbl inc mov test jne test je mov imul mov mov mov xor mov callq mov mov mov mov mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push sub mov mov movl mov xor mov callq mov test je mov xor mov callq lea mov mov mov callq cmp jne xor mov callq mov lea jmp mov mov mov mov add pop retq int3 int3 int3 int3 mov mov push push push sub mov mov mov mov movq xor xor mov callq mov mov test jne mov jmp mov callq nop movswl or mov xor mov callq mov mov test je mov mov mov callq mov mov callq xor jmp mov mov mov callq mov mov mov add pop pop pop retq int3 int3 rex push push push push push sub mov xor xor shr xor mov and mov mov mov mov mov mov mov mov mov je lea lea lea cmp jne lea cmp jne cmp jne cmp je mov mov mov movslq add cmp jne cmpl jne mov callq btl mov jae mov mov jmp lea mov callq mov mov mov callq test je lea xor mov callq mov lea lea mov lea lea lea mov callq test je mov cmp je mov mov lea mov mov lea lea lea xor mov callq mov test js mov mov callq jmpq mov lea callq mov mov lea mov lea mov lea lea xor mov callq mov test js mov mov mov mov lea mov mov mov callq test js cmpb je lea mov callq test je add jne mov mov callq mov mov lea callq test jne mov mov mov add lea mov callq test jne mov lea mov callq test jne mov test je mov mov lea callq test je mov mov xor mov xor mov movl callq mov callq jmpq lea mov callq mov mov mov callq or xor mov mov repnz not lea xor callq mov jmpq mov jmpq mov mov callq mov test je mov mov mov lea lea sub callq test je mov mov xor mov xor mov movl callq mov callq jmpq cmpb jne cmpq je cmpw je mov mov mov lea lea sub callq movzbl mov test cmovne jmp mov cmpb jne jmp mov cmpq je cmpw je test jne mov lea mov callq test je mov jmp mov mov mov lea callq movzbl test cmovne cmpb jne test je cmpq je cmpw je mov xor lea lea lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov callq lea lea mov callq xor or lea lea repnz xor nop movzbl inc mov test jne movzbl movzwl mov lea lea movb mov callq test je mov sub je sub je sub je cmp jne mov mov mov mov mov mov test mov cmovne xor callq test je mov test je mov xor xor add callq jmp mov mov xor mov xor mov movl callq mov callq jmpq mov mov lea mov xor xor movl callq mov test je xor callq mov mov add pop pop pop pop pop pop retq cmpb je mov mov xor mov xor mov movl callq mov callq jmp mov callq mov mov xor sub add callq lea mov mov callq mov test jmpq int3 rex push push push push sub movzwl mov mov mov mov mov callq mov test jne mov add pop pop pop pop pop retq mov mov mov callq mov test jne xor mov callq mov mov add pop pop pop pop pop retq xor mov jmpq mov jmpq setne push jmpq push mov jmpq jmpq cmc stc add jmpq (bad) xor rolb add add push add (bad) callq mov cmp je lea lea mov mov mov mov callq mov test js or xor mov repnz xor mov not lea mov callq test jns mov callq lea xor mov callq mov cmp jne xor mov callq xor mov callq mov jmpq lea mov mov mov mov mov callq mov test js or xor mov repnz xor mov not lea mov callq mov test jns xor mov callq xor mov callq mov callq mov jmpq xor mov mov mov mov callq mov test jns mov callq xor mov lea callq mov cmp jne xor mov callq xor mov callq mov jmpq lea mov mov mov mov mov callq mov test js or xor mov repnz xor mov not lea mov callq mov test jns xor mov callq xor mov callq mov callq mov jmpq xor mov mov mov callq mov test jns xor mov callq xor mov callq mov callq mov jmpq lea xor movb jmpq mov movzbw not mov jmpq mov jmpq lea not push xchg mov push seto xchg xchg push bswap xchg push jmpq rep or bsf cld pop rcr movsbw data16 testb (bad) pop cmc popfq jmpq and callq mov mov test je mov mov callq mov test jne xor mov callq xor mov callq mov callq mov jmpq xor jmpq jmpq movzbw push not jmpq cmp sub jmpq jmpq jmpq jmpq push jmpq jmpq xlat add sub add cmp ja lea lea mov cmp ja test je mov mov callq cmp jae nopl xor mov mov mov callq test js cmp jl lea cmp ja cmp jg mov movslq mov add callq mov cmp jb jmp mov callq or jmp mov callq or xor mov callq xor mov callq cmp je mov callq cmp je xor mov callq mov jmp mov test je mov xor jmp xor mov callq xor jmp xor mov callq xor mov callq xor mov callq mov callq mov jmp xor mov callq xor mov callq mov callq mov mov mov mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push push sub xor mov lea callq mov test jne mov add pop pop retq mov mov mov callq mov test jne xor mov callq mov mov add pop pop retq mov mov mov mov test je test je mov mov callq mov test jne xor mov callq xor mov callq mov jmpq xor mov mov callq mov mov mov callq mov test jne xor mov callq xor mov callq xor mov callq mov jmpq xor mov mov jmpq push lea push lea mov movzbw push lea mov movzbw mov pushq setge movzbl movabs movzbw not mov jmpq push mov movzbl setg movzbl push jmpq push jmpq outsb adc mov callq xor jmpq movzbw bswap not pushq xchg xchg mov movabs not lea not mov jmpq push setae push xchg mov movsbw push movzbw push lea pushq xchg mov movsbw movabs movzbw movzbw lea mov jmpq jmpq jmpq movzbw bswap mov movabs lea movsbl jmpq mov jmpq movsbl jmpq not push jmpq push jmpq jmpq jmpq bt bt sub stc bt cwtl je bt sub jmpq test clc sub jmpq jmpq push jmpq mov mov callq mov test jne xor mov callq xor mov callq test je xor mov callq mov jmpq xor mov lea mov callq mov cmp jne xor mov callq xor mov callq test je xor mov callq xor mov callq mov jmpq movzwl lea mov mov mov mov mov mov callq mov test jns xor mov callq xor mov callq test je jmpq or xor mov repnz xor mov not lea mov callq mov test jns xor mov callq xor mov callq test je jmpq or xor mov repnz xor mov not lea mov callq mov test jns xor mov callq xor mov callq test je jmpq test je test je xor mov mov mov callq mov test jns xor mov callq xor mov callq test je jmpq or xor mov repnz xor mov not lea mov callq mov test jns xor mov callq xor mov callq test je jmp xor mov mov mov callq mov test jns xor mov callq xor mov callq test je xor mov callq xor mov callq mov callq mov jmpq xor movb jmpq cmp bt shr jmpq push jmpq push jmpq push jmpq xchg mov movabs movzbw mov jmpq pushfq jmpq not mov jmpq jmpq jmpq push jmpq lea pushq xchg movabs bswap mov mov jmpq push jmpq push jmpq jmpq jmpq jmpq xor mov callq xor mov callq test je xor mov callq xor mov callq mov callq xor mov mov mov mov mov mov add pop pop retq xor mov callq xor mov callq test je xor mov callq xor mov callq mov callq mov jmp int3 mov mov push push push sub movzwl mov mov mov mov mov callq mov test jne mov jmpq mov mov mov callq mov test jne xor mov callq mov jmpq xor jmpq mov jmpq clc jmpq jmpq pushfq jmpq jmpq push jmpq push jmpq cmp rex.R xor mov lea mov callq mov cmp jne xor mov callq xor mov callq mov jmpq lea mov mov mov mov mov callq mov test js or xor mov repnz xor mov not lea mov callq mov test js xor mov mov mov callq mov test jns xor mov callq xor mov callq mov callq mov jmpq mov lea movb test je xor jmpq not not movsbq movzbq repz mov not mov movzbw push bswap movzbq not setg push mov jmpq mov jmpq js push jmpq jmpq mov jmpq jmpq in xor mov callq xor mov callq mov callq xor mov mov mov add pop pop pop retq xor mov callq xor mov callq mov callq mov jmp int3 int3 int3 int3 int3 int3 int3 mov mov push push push push push push push sub mov mov mov mov mov add lea mov nopl movzbl movzbl add shl add or movzbl shl or movzbl shl or sub mov jne mov mov mov not mov and and or mov add lea rol add and mov not and or add lea rol add mov mov not and and or mov add lea ror add and mov not and or mov add lea ror add and mov not and or mov add lea rol add and mov not and or add lea rol add mov mov not and and or mov add lea ror add and mov not and or add lea ror mov mov mov mov add mov and mov not and or mov add lea rol add and mov not and or add lea rol add mov mov not and and or mov add lea ror add and mov not and or mov add lea ror add and mov not and or mov add lea rol add and mov not and or add lea rol add mov mov and not mov and or mov add lea ror add mov not mov and mov and and or mov add lea mov ror add and and or mov add mov not lea rol add and and or add lea rol add mov and or add lea mov not rol and add mov and or mov add lea mov not ror and add and or mov add lea mov not rol and add and or add lea mov not rol and add mov and or add lea mov not rol add and mov and or add lea mov mov not ror and add and or mov add lea mov not rol and add and or add lea mov not rol and add mov and or add lea mov not rol and add mov and or mov add lea mov not ror and add and or mov add lea mov not rol and add and or add lea mov not rol and add mov and or add lea mov not rol add and mov and or add lea mov ror mov xor add xor add lea mov xor rol add xor add lea rol add mov mov xor xor add lea rol add xor mov xor add lea mov ror add xor xor add lea rol add xor add lea rol add mov mov xor xor add lea rol add xor mov xor add lea mov ror add xor xor add lea rol add xor add lea rol add mov mov xor xor add lea rol add xor mov xor add lea mov ror add xor xor add lea rol add xor add lea rol add mov xor xor add lea mov rol add xor xor add lea mov not ror add or xor add lea mov not rol add or xor add lea mov not rol add or xor add lea mov not rol add or xor add lea mov not ror add or xor add lea mov not rol add or xor add lea mov rol not add or xor add lea mov mov not rol add or xor add lea mov not ror add or xor add lea mov not rol add or xor add lea mov not rol add or xor add lea mov not rol add or xor add lea mov not ror add or xor add lea mov not rol add or xor add lea mov not rol add or xor add lea mov mov add not rol add mov or xor add lea ror add mov add mov mov add mov mov add mov add pop pop pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push sub mov mov mov lea mov lea shr mov mov and cmp jae incl mov mov shr sub add cmp jb lea mov callq lea mov callq lea cmp jae data16 mov mov add callq add lea cmp jb xor jmp xor sub mov lea mov add mov mov mov add pop jmpq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub xor movl movl movl movl movl movl mov mov lea mov mov mov mov mov mov mov mov callq lea lea mov nopl movzbl add add sub mov movzbl mov movzbl mov movzbl mov jne mov lea mov shr and cmp jb mov sub lea lea cmp mov mov jae inc mov mov lea shr mov add sub mov cmp jb lea mov mov callq lea lea callq lea cmp jae nopl mov lea add callq add lea cmp jb xor jmp xor sub mov lea mov add callq mov mov add shr mov and cmp jae incl sub cmp ja lea lea mov callq lea lea callq lea cmp jae data16 lea lea callq add lea cmp jb xor jmp xor mov lea lea sub callq mov lea mov lea movzbl mov movzbl mov movzbl mov movzbl add mov add sub jne lea lea nopw movzbl add add mov and shr movzbl mov movzbl movzbl mov mov and shr movzbl mov movzbl movzbl mov mov and shr movzbl mov movzbl movzbl mov mov and shr sub movzbl mov movzbl mov jne lea mov mov mov pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov xor xor callq mov callq mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub mov callq mov movzbl mov callq mov test jne mov callq mov jmpq xor lea lea callq xor lea mov mov mov movl mov mov mov mov lea mov lea lea mov mov mov mov mov mov movb mov mov movl movl mov mov mov lea movb mov mov callq cmp jne lea mov xor xor movq callq mov lea mov mov mov pop retq int3 int3 int3 mov mov push push push push push sub xor mov mov mov mov callq mov callq mov movzbl mov callq mov test jne mov callq mov jmpq xor lea lea callq movb mov lea lea mov lea mov lea mov mov mov mov mov movb mov mov movl movl mov mov mov lea movb mov mov test je mov test je mov mov mov test je mov mov mov test je mov mov mov mov callq cmp jne lea mov xor xor mov callq mov test je test je mov test je mov test je mov mov lea mov mov mov pop pop pop pop pop retq int3 int3 mov mov mov mov push sub xor mov xor xor mov mov mov mov mov mov mov mov mov mov mov mov mov jmpq popq jmpq pushq jmpq bswap xchg xchg pushq not jmpq push jno push bswap setg repz jne lea push mov push xchg push setns push movzbl xchg setnp push bswap push jmpq jmpq jmpq bswap setnp mov push jmpq push jmpq push jmpq stc stc xor jmpq jmpq sub cmp test sub jmpq movsbw push lea setno pushq movsbw movabs not lea mov jmpq push jmpq jmpq (bad) mov lea mov mov mov mov pop retq rex sub mov mov callq mov test je mov lea xor mov mov mov movq mov mov callq mov test js mov callq mov mov callq mov callq mov mov add pop retq mov add pop retq int3 sub mov lea xor mov mov movq mov callq test js mov mov mov callq mov movzbl mov callq mov test jne mov callq mov mov mov add retq xor lea lea callq movb lea mov lea mov mov lea mov mov mov mov mov mov movb movb mov mov movl mov movl mov mov mov lea mov lea movb mov mov callq cmp jne lea mov xor xor movq callq mov callq mov mov mov add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub xor mov movb mov mov mov mov mov mov mov mov mov mov callq mov mov lea mov callq mov mov add mov callq xor mov lea mov callq mov test jne mov mov mov add pop retq mov mov mov callq mov test js mov mov mov mov mov mov callq mov test js mov mov mov mov mov mov callq mov test js mov mov mov mov mov mov callq mov test js lea mov callq mov test js lea xor mov mov callq mov test js lea mov mov callq mov xor mov callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex push push push sub movzwl xor mov lea add mov callq mov test jne mov add pop pop pop pop retq mov mov lea callq mov test jne xor mov callq mov jmpq movzwl mov mov mov mov mov callq movzwl lea shr lea mov mov lea mov mov mov mov mov mov lea mov cmp je nopw mov lea mov mov cmp je mov lea mov mov mov mov mov mov lea callq mov mov movl movl lea mov lea lea lea mov mov mov movl mov movl mov mov mov callq mov test js mov callq mov nopl mov mov mov nopl cmp je cmp jne test je xor mov callq add mov mov callq mov test je mov mov mov mov movl mov mov lea xor xor xor mov callq mov jmp cmp jne xor mov callq mov callq mov jmpq mov xor test js mov or xor repnz mov not lea mov callq mov test je mov mov or xor repnz not lea xor mov callq mov mov nopl movzwl add add mov test jne or xor mov repnz mov or mov mov xor mov lea repnz not lea callq lea mov callq testb je mov cmp jne cmpw je cmp jne cmpw jne cmpw je mov lea callq test je mov mov lea mov mov mov mov mov jmp mov mov mov mov callq mov test je mov lea xor mov mov mov mov mov callq mov test js mov callq mov mov callq mov callq test js xor mov callq test je xor mov callq jmpq xor mov callq xor mov callq mov jmp xor mov callq xor mov callq jmp xor mov callq mov jmp test je xor mov callq mov callq test js mov mov mov mov mov xor callq xor mov callq mov lea cmp jne jmp mov mov lea cmp je nopl mov lea xor mov mov mov callq xor mov callq mov lea cmp jne jmp mov mov mov mov mov mov add pop pop pop pop retq mov mov mov push sub movzwl mov mov mov cmp je mov mov cmp jne cmp jne cmp je cmp jne mov xor callq xor mov mov mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 rex sub mov cmp je xchg mov xor mov mov mov callq cmp jne add pop retq mov mov push sub lea xor mov cmp je lea callq movzbl mov cmp je nop cmp je mov cmp jne mov lea callq mov mov mov add pop retq rex sub lea lea callq mov test je mov nopw mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov cmp je mov mov lea mov mov callq mov lea movzbl cmp je nopl mov mov mov cmpb je mov mov mov mov mov jmp mov mov incl callq cmp jb incl mov callq jmp mov mov callq mov cmp jne cmp je nopl mov mov mov mov mov incl mov callq mov test jne mov mov mov incl callq mov test je xor mov mov mov mov mov mov mov mov movzwl mov movzbl mov mov mov mov mov mov mov mov xor mov callq cmp jne lea movzbl callq mov mov mov mov mov add pop retq xor add pop retq int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub movzbl movzbl mov lea xor mov mov mov callq mov xor mov mov callq test je lea movzbl mov mov callq test je movzbl movzbl mov lea mov callq movzwl lea lea mov mov mov mov mov add pop pop pop rex.W int3 int3 int3 int3 int3 int3 mov mov mov push push push push push sub movzbl movzbl mov lea xor mov mov mov mov mov callq mov mov xor mov callq test je lea mov cmpb jne lea movslq lea callq movb lea jmp movzbl mov callq movb mov mov xor callq mov test je movzbl movzbl mov lea mov callq mov mov xor callq mov movzwl lea lea mov mov mov mov mov add pop pop pop pop pop rex.W int3 int3 int3 mov mov mov push sub lea xor mov mov cmp je lea callq movzbl mov nopl mov cmpb je mov cmp je cmp jmp cmp je cmp jne jmp mov lea callq mov mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub lea lea callq test je nopl xor mov callq lea lea callq test jne add retq int3 int3 int3 int3 int3 int3 int3 sub lea lea callq test je nopl xor mov callq lea lea callq test jne add retq int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push push push sub mov lea mov mov xor callq mov mov movzbl cmp je mov nopl mov cmp jne cmp jne cmp jne cmp je cmp jne mov mov incl mov callq mov test jne mov mov mov incl callq mov test je xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea movzbl callq mov mov mov add pop pop pop pop pop retq mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub mov lea mov mov xor callq movzbl cmp je mov mov mov mov mov lea cmp jb lea xor callq cmp je cmp jne jmp mov mov lea movzbl callq mov mov mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub mov lea mov mov xor callq movzbl cmp je mov mov mov mov mov lea cmp jb lea xor callq cmp je cmp jne jmp mov mov test je mov mov mov mov mov mov mov mov mov lea movzbl callq mov mov mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push sub mov lea mov xor callq movzbl cmp je mov cmp je cmp je mov cmp jne mov lea callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push push push sub xor mov mov test je mov mov xor mov mov callq lea mov callq mov lea cmp je cmp je xchg cmp je mov cmp jne mov lea movzbl callq test jne mov mov incl mov callq mov test jne mov mov mov incl callq mov test je xor mov lea callq lea mov mov callq lea mov mov mov callq mov mov mov add pop pop pop repz int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub lea lea callq mov test je data16 mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 xor mov test je mov cmp jne movslq cmpl jne movzwl cmp je cmp jne cmpl jbe mov test je mov test je cmp jae lea cmp ja mov mov retq cmpl jbe mov test je mov test je cmp jae lea cmp cmovbe mov retq int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub xor cmpl mov mov mov mov jae mov mov incl mov callq mov test jne mov mov mov incl callq mov test je xor mov mov callq mov mov mov mov mov mov mov test je cmpb je mov sub nopl movzbl inc mov test jne lea lea mov callq mov incl mov mov mov mov mov add pop pop pop retq lea lea callq mov test je xor mov mov callq mov mov mov mov mov mov mov test je cmpb je mov sub nopw movzbl inc mov test jne lea lea mov callq mov jmpq int3 int3 int3 int3 mov mov mov mov push sub mov lea mov mov mov xor callq mov movzbl lea cmp je cmp je cmp je mov cmp jne test je mov mov test je mov mov mov test je cmpb lea je sub movzbl inc mov test jne test je mov mov mov test je mov mov mov lea movzbl callq mov mov mov mov mov add pop retq int3 int3 int3 mov push sub mov lea mov callq mov lea cmp je cmp je cmp je mov cmp jne mov lea movzbl mov add pop rex.W int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub lea lea callq mov test je mov nopw mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push sub mov mov mov incl mov mov mov callq mov test jne mov mov mov incl callq mov test je xor lea lea mov mov mov mov mov mov mov mov mov mov mov mov mov callq mov mov mov mov mov add pop retq int3 int3 int3 int3 int3 rex sub lea lea callq mov test je mov mov test je xor callq mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne mov add pop retq int3 mov mov mov push sub mov mov mov incl mov mov callq test jne mov mov mov incl callq test je xor lea mov mov mov mov lea mov mov mov callq mov mov mov add pop retq int3 int3 int3 int3 mov push sub mov lea callq mov movzbl lea cmp je cmp je cmp je mov cmp jne mov mov mov mov cmp jne mov callq lea movzbl mov add pop rex.W int3 rex sub lea lea callq mov test je mov nopw mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov xor callq xor lea mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov mov xor callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov movl mov mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov movl mov mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov movl mov mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov mov xor callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov mov add pop retq int3 int3 int3 mov lea cmp je cmp je cmp je mov cmp jne mov retq xor retq int3 int3 int3 int3 int3 rex sub mov xor callq xor xor mov xor xor mov movl mov movq callq mov xor callq mov xor xor xor mov movl mov movq callq mov xor callq mov xor xor xor mov movl mov movq callq mov xor callq mov xor xor xor mov movl mov movq callq mov xor callq mov xor xor xor mov movl mov movq callq mov xor callq mov xor xor xor mov movl mov movq callq lea lea mov mov mov mov mov mov lea mov mov mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add pop jmpq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub callq mov callq mov xor callq callq mov callq mov xor callq mov callq mov xor callq callq mov callq mov xor callq callq mov callq mov xor callq lea lea callq test je nop xor mov callq lea lea callq test jne lea lea callq test je nopl xor mov callq lea lea callq test jne lea lea callq test je nopl xor mov callq lea lea callq test jne lea lea callq test je nopl xor mov callq lea lea callq test jne callq mov lea cmp je nopl mov xor mov mov callq mov cmp jne add pop retq int3 int3 int3 int3 int3 int3 int3 int3 lea movq mov mov retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub lea lea callq mov test je mov test je xor callq xor mov callq lea lea callq mov test jne add pop retq mov push push push push push sub lea xor movzwl mov mov mov cmp je lea mov mov callq mov callq xor mov nopl mov mov test je cmp jbe mov test je xor callq mov mov mov mov cmp jne cmp jne lea cmp jne jmp cmp jbe mov xchg mov movzwl mov mov mov callq inc add cmp jb mov movzbl lea callq mov mov mov mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push sub xor lea mov mov cmp je mov lea mov mov callq mov movzbl callq mov mov mov test je cmp jbe mov test je xor callq mov mov mov mov cmp jne cmp jne cmp jne jmp mov mov mov inc mov cmp jb mov lea movzbl callq mov mov mov mov mov add pop pop pop retq int3 int3 mov mov mov push push push push push sub mov lea mov mov callq lea xor movzbl cmp je mov callq mov mov mov test je cmp jbe mov test je xor callq mov mov mov mov cmp je cmp jne mov xor callq mov xor mov mov mov mov mov mov mov callq mov add mov mov mov mov mov mov lea movzbl mov mov mov add pop pop pop pop pop rex.W mov test je xor callq mov mov callq add mov mov jmp int3 int3 sub xor lea lea callq cmpb je mov test jne mov mov movl xor add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push push sub movzwl movzbl xor shl mov mov or testb jne test je mov lea mov lea movzwl xor shl mov mov callq mov xor mov mov mov callq movzwl test jle mov mov nopl xor mov lea cmp je nop movzbl cmp jb movzbl movzbl mov shl lea lea inc test jne inc cmpb jne cmp jne inc add mov add movzwl movzbl shr shl or cmp jne movzwl movzbl shl or cmp jne mov test je test je movzwl mov mov mov callq mov inc add movzwl add jmp xor mov lea cmp je movzbl cmp jb movzbl movzbl mov shl lea lea inc test jne inc cmpb jne cmp jne inc movslq add sub jne mov mov mov mov test je test je mov mov mov mov add pop pop pop pop jmpq xor mov callq mov add pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push sub mov mov lea xor mov xor callq or xor mov repnz not lea lea sub movzbl inc mov test jne movslq inc mov movb test jle movslq cmpb jne movzbl inc sub cmp mov jge movslq mov lea mov sub mov mov callq add add inc inc cmp jl movb jmp mov lea mov mov mov mov mov pop retq int3 int3 int3 int3 int3 int3 int3 rex push push push sub mov xor or mov mov mov repnz mov mov not mov lea xor callq mov mov callq mov test jne lea mov mov mov callq mov xor mov mov test je mov lea lea mov nopl cmpl je xor mov mov callq mov mov mov mov mov lea mov movb mov mov mov movb callq xor or movq xor repnz mov not mov lea lea mov mov mov mov mov mov mov mov mov mov lea mov lea movl mov callq test jle mov xor xor xor mov mov mov callq mov callq mov mov callq mov xor lea inc add cmp jb mov mov xor mov callq mov mov mov add pop pop pop pop retq int3 int3 int3 int3 mov push push push push push sub mov xor or mov mov xor repnz mov mov not mov mov lea xor mov callq mov mov callq mov test jne lea mov mov mov callq xor mov mov mov mov callq mov lea mov xor mov mov mov movb mov mov mov mov mov callq xor or xor repnz mov not mov lea lea mov mov mov mov mov mov xor mov mov lea mov lea movl mov mov callq test jle mov xor xor mov mov mov callq mov callq mov mov callq xor mov callq mov mov mov mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push push push sub mov or xor mov mov mov repnz mov movzwl not lea xor callq movzwl mov mov mov mov callq test jne mov mov mov mov callq xor mov mov mov mov callq lea mov mov mov mov mov mov xor movb movb mov mov mov callq xor or movq repnz mov xor not mov lea lea mov mov mov mov mov mov mov mov mov mov lea mov lea movl mov callq test jle mov mov mov mov mov mov callq mov callq xor mov callq mov mov mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je cmp je mov lea lea data16 mov sub cmp jne cmpw jne cmpw jne cmp je cmp jne xor retq mov retq int3 int3 int3 rex sub cmpb mov jne xor xchg test je cmpb je cmpq je callq test jne mov mov cmpq je movq mov lea lea callq test js mov callq movb mov xchg mov callq add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex push push push sub movzbl mov mov movq test je movb mov lea callq lea lea lea callq mov test js mov mov xor callq mov lea mov callq test je mov callq mov test je movb jmpq mov test je mov mov lea callq test je mov callq mov test je movb jmpq test je mov mov mov lea callq test je mov callq mov test je movb jmpq mov mov mov callq mov test je mov mov mov lea lea sub mov callq test je mov callq mov test je movb jmp test je mov mov mov lea lea sub callq test je mov callq mov test je movb mov mov mov test je xor callq mov add pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub xor mov lea lea mov movl mov movl mov mov callq test js lea lea callq mov lea mov lea lea xor mov callq cmp je mov test je add xor mov mov mov mov callq mov test jne mov callq mov mov mov add pop retq mov xor mov callq mov mov lea lea mov mov mov mov callq mov test jns mov callq xor mov callq mov mov mov add pop retq cmpl jne mov cmp jbe mov xor callq mov test je mov xor mov callq mov lea mov callq jmp mov jmp mov mov callq xor mov callq test js lea mov mov callq mov test je xor mov callq mov mov mov add pop retq mov callq mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub lea cmp je lea mov mov callq mov test je mov mov mov xor mov mov mov mov mov callq mov test je movzwl xor mov callq lea lea callq lea lea callq lea callq mov mov incl callq cmp jb incl mov callq jmp mov mov callq mov test je xor callq lea mov callq mov test jne mov mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 rex push push sub xor mov mov test je mov mov mov mov mov mov callq mov test je movzwl xor mov callq lea lea callq lea mov callq lea lea callq lea lea lea mov mov movl mov movl mov mov callq mov test jns mov xor callq mov jmpq lea xor callq mov lea mov xor lea lea mov callq cmp je mov test je add xor mov mov mov callq mov test jne mov callq mov xor callq mov mov mov add pop pop pop retq mov xor mov callq mov mov lea mov mov mov lea mov callq mov test jns mov callq xor mov jmpq cmpl jne mov cmp jbe lea xor callq mov test je mov xor mov add callq cmpb jne mov lea mov callq jmp movabs or mov mov xor repnz xor xchg movzwl add mov test jne jmp mov jmp mov mov callq xor mov callq test js xor mov mov callq mov test je xor mov callq mov xor callq mov jmpq mov callq mov xor callq mov jmpq mov jmpq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex push sub lea lea mov callq xor lea lea lea mov mov movl mov movl mov mov callq test js mov lea lea xor xor mov mov callq mov add xor mov mov callq mov test jne mov callq mov mov add pop pop retq mov mov lea mov mov mov mov callq mov test jns xor mov callq mov callq mov jmpq mov test je dec js mov nopl mov lea xor mov xor mov mov callq mov add xor mov mov callq mov test je mov xor mov callq mov mov lea mov xor mov mov mov callq test js lea lea callq cmp je lea lea callq lea lea mov mov lea mov movl movl mov mov mov callq test js mov callq mov callq mov xor mov callq sub jns mov xor mov callq mov callq mov mov mov add pop pop retq int3 int3 int3 int3 mov mov push sub mov mov mov mov callq test je mov callq test je lea mov callq lea xor lea lea mov mov movl movl mov mov mov callq test js lea mov callq mov lea mov lea lea xor mov callq cmp je mov test je add xor mov mov callq mov test jne mov callq mov jmpq mov xor mov callq mov mov lea lea mov mov mov mov callq mov test js cmpl jne cmpl jbe lea lea callq lea lea mov callq mov test js movzwl mov xor callq lea mov callq jmp mov mov callq xor mov callq mov jmp mov callq mov jmp mov lea mov mov mov pop retq rex push sub lea lea mov callq xor lea lea lea mov mov movl mov movl mov mov callq test js mov lea lea xor xor mov mov callq mov add xor mov mov callq mov test jne mov callq mov mov add pop pop retq mov mov lea mov mov mov mov callq mov test jns xor mov callq mov callq mov jmpq mov cmp jbe mov nopl mov lea xor mov xor mov mov callq mov add xor mov mov callq mov test je mov xor mov callq mov mov lea mov xor mov mov mov callq test js mov lea lea callq test jns xor mov callq inc cmp jb jmp mov mov xor mov callq mov callq mov mov mov add pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push sub xor mov mov mov test je mov callq test je test je mov movzwl cmp je cmp je cmp jne cmpw jne cmpw jne cmpw jne mov mov callq mov mov jmp lea xor xor mov callq cmp jne mov xor mov callq mov lea mov mov mov callq test js mov mov callq mov mov mov callq mov jmp xor mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub mov mov mov test je callq test je mov mov lea mov callq xor mov mov mov xor mov callq mov test je cmp jne cmp jne mov xor lea callq test je mov cmpw je xor jmpq push movsbw movsbw push movsbw not push xchg movsbq bswap bswap push xchg mov xchg bswap push movsbw pushq jmpq popq jmpq test inc mov mov test sub jmpq pushfq jmpq clc stc and jmpq push jmpq mov jmp mov jmp mov test je mov mov callq xor mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub mov xor lea mov mov callq test je mov and mov callq test je cmp je inc add cmp jb xor mov mov mov add pop retq mov jmp int3 int3 int3 int3 cmp je mov lea cmp je cmp je mov cmp jne mov retq xor retq int3 int3 int3 int3 int3 int3 int3 cmp je mov lea cmp je cmp je mov cmp jne mov retq xor retq int3 int3 int3 int3 int3 int3 int3 mov push sub xor lea lea mov xor mov mov callq mov test js mov mov mov test je mov cmp jb callq mov mov mov jmp callq mov mov mov jmp mov mov mov movzwl mov cmp jb test je cmp je mov cmp je cmp je mov cmp jne mov mov mov add pop retq cmp jae test je callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov or xor mov xor repnz not dec cmp mov jge test jle nopl movzbl inc lea mov cmp jg test je nopl movzbl inc inc sub mov jne movb inc cmp jl movb mov retq int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push push push push push push sub mov xor movzwl mov sub je cmp jne lea cmp je xor jmpq lea lea lea repz or movsbl add not push btc push cmp cmc btr push setl adc sar movsbw push sub or push movsbw sar sub push shrd stc cmp inc pushq xchg bsr bt xadd movabs btc mov or push cmp bsf mov sar neg xor clc not ror not rcl cmp bswap shl and mov bswap sub xadd and not movsbl cmp stc mov jmpq push jmpq push jmpq jmpq mov jmpq mov jmpq bt xor bt ror jmpq rcr ror mov shr add setns mov jmpq callq jmpq push jmpq jmpq jmpq xchg movzbq push setle push setns mov bswap not push xchg movsbq pushq bswap jmpq jmpq push jmpq push movzbw repz not push setg lea push xchg bswap mov push not jmpq ja or mov rol lea rex.W idivl sub setns clc bts lea rol and sar rol sub lea mov movsbw jno not pushfq cld mov bswap push lea std mov mov jmpq inc test jmpq mov jmpq jmpq jmpq jmpq push jmp mov jmpq xor jmpq jae push not bswap repz jne movzbw push jmpq jle push jmpq xchg not pop movzbw not jmpq movzbw movzbw repz setg push jmpq push jmpq add ja mov jmpq pushfq jmpq jmpq push jmpq popq jmpq jmpq movzbw mov jmpq popq jmpq push jmpq push jmpq jmpq jmp mov mov mov mov mov mov mov mov mov mov mov mov mov movzbl mov callq add pop pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov test jne mov add pop retq mov xor mov xor jmpq push jmpq jmpq jmpq push jmpq in in mov mov mov movl lea mov lea lea lea mov movl movl mov mov movl mov mov mov callq test js mov lea xor xor mov mov mov callq mov mov callq test jns mov mov add pop retq mov mov mov callq xor mov add pop retq int3 int3 int3 int3 int3 rex sub lea xor mov callq test js mov mov mov test je cmp je mov mov lea mov mov xchg movb mov add pop retq mov mov add pop retq mov push sub mov callq callq xor test mov cmove lea mov mov mov mov mov xor mov mov callq mov mov callq test js xor jmpq not jg stc not stc sub clc and jmpq jmpq jmpq mov jmpq jmpq jmpq mov add pop retq int3 int3 int3 int3 int3 int3 int3 rex sub mov mov callq test je mov mov mov movzwl mov mov mov mov mov mov mov mov mov cmp jb cmp jne cmpb jne mov lea jmp cmp jb cmp jne cmpb jne movzbl lea jmp cmp jb cmp jne cmpb jne mov movabs add add xor mov mov mov mov mov mov mov mov nopl mov movzwl cmp jb cmp jne cmp jne cmpb jne cmp jne lea callq test jne mov mov mov mov mov jmpq cmp jb cmp jae cmp jne cmpb jne cmp jne lea callq test jne mov mov mov mov mov jmpq cmp jb cmp jae cmp jne cmpb jne cmp jne lea callq test jne mov mov mov mov mov jmpq cmp jb cmp jne cmpb jne cmp jne lea callq test jne mov mov mov mov mov jmp cmp jne cmpb jne cmp jne lea callq test jne mov mov mov mov mov inc inc cmp jbe xor mov mov mov mov mov mov mov add pop retq mov movabs add add jmp xor add pop retq int3 int3 int3 int3 int3 int3 int3 mov mov push push push sub mov mov mov xor mov lea mov callq nop mov lea mov callq mov mov xor callq mov mov jmp mov mov mov mov lea callq test js cmp jne mov callq mov mov movl xor xor mov lea callq mov callq mov callq mov callq xor mov callq mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 rex push sub cmpb mov mov jne lea mov callq cmpq movzbl je mov lea cmp je mov mov mov data16 mov mov xor mov xor mov callq test js mov xor callq mov test je xor mov mov mov mov mov mov mov mov mov mov mov mov mov callq mov test je lea mov mov mov callq cmpb jne cmp jne mov mov mov lea movzbl callq mov add pop pop retq int3 int3 mov push sub mov mov mov movzwl cmp jb mov mov cmp cmove jmp mov mov callq test je mov mov mov xor test je mov mov callq test je mov and mov mov callq test je cmp je inc add cmp jb xor mov mov mov mov add pop retq mov jmp xor jmp xor mov add pop retq int3 int3 int3 mov mov push sub xor mov mov mov callq mov test mov cmove lea xor mov mov mov mov mov mov mov callq test js mov xor lea lea xor mov mov callq mov test je mov xor callq mov test je mov mov lea mov mov mov callq mov test js mov jmp xor mov callq mov callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push push push sub mov xor mov lea mov mov mov mov callq test je lea xor mov callq mov callq test je mov lea lea mov lea xor xor mov callq test je mov cmp je lea xor mov callq mov lea callq mov mov lea mov lea mov lea xor xor mov callq mov test jns lea mov callq test js mov lea lea mov callq mov test js lea mov mov callq test js lea xor mov callq movzwl mov lea callq lea callq mov mov xor callq mov xor mov callq test js mov mov callq jmpq mov lea callq mov mov lea mov lea mov lea xor xor mov callq mov test jns lea mov callq test js mov lea lea mov callq mov test js lea mov mov callq test js lea xor mov callq movzwl mov lea callq lea callq mov mov xor callq mov xor mov callq test js mov mov lea mov mov xor xor mov callq test js cmp je lea mov callq test je add je jmp lea mov callq mov mov mov callq or xor mov mov repnz not lea xor callq mov mov mov lea callq test jne mov mov lea callq test jne mov lea mov callq test jne mov test je mov mov lea callq test je mov mov lea mov xor xor mov callq mov callq mov test je xor callq mov callq jmpq mov mov callq mov test je mov mov mov lea lea sub callq test jne cmp jne mov mov mov lea lea lea sub mov callq test jne cmp jne mov mov mov lea lea mov callq test je callq movb add mov mov mov cmp je callq mov mov add mov callq mov callq mov test je xor callq mov callq xor mov callq mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub cmpq mov je mov xor xor mov callq test js mov xor mov callq mov test je xor mov mov mov callq mov test je lea mov mov mov callq mov add pop retq int3 int3 int3 int3 int3 int3 int3 rex sub mov lea movzbl callq test js mov test je callq mov callq add pop retq callq mov callq add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub test je movzbl lea add rex.W lea xor mov callq mov test js callq lea mov callq mov mov mov add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub cmpb mov mov jne mov xor mov xchg test je xor jmpq cmc bt stc rol test test cmc add clc test sub bt cwtl bt sub jg mov jmpq push lea lea mov movzbw repz lea not setge push setno lea not push jmpq push setnp xchg xchg pushq lea movabs mov movsbw lea not mov jmpq xadd rol shrd mov ja mov cmp not bt test bt jmpq mov push setnp movzbw movsbw lea push lea xchg push bswap not not push movsbw lea pushq mov lea xchg movabs jmpq mov movzbq not push movzbw movzbw bswap push jmpq repz bswap movsbq lea jmpq movsbw bswap bswap push movsbw xchg movsbw push bswap lea pushq jmpq jge push jmpq pushfq jmpq rcr mov jmpq jmpq cltd mov mov mov add pop rex.W int3 int3 int3 sub mov test je callq test je lea mov mov mov callq add retq int3 int3 int3 int3 int3 int3 int3 mov push sub mov xor jmpq jmpq push jmpq lea movabs movsbw not lea not mov jmpq jmpq push jmpq sub jmpq jmpq jmpq push jmpq push jmpq jmpq js out sbb and add pop retq int3 int3 int3 sub mov lea xor xor movb callq xor add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push sub mov mov mov lea xor xor mov callq xor lea lea lea mov mov movb xor xor mov mov mov callq mov test jne mov jmp mov mov mov mov mov mov movb movb mov mov mov mov mov mov callq cmp jne lea xor xor xor mov callq mov lea mov mov mov mov mov pop retq int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub mov mov mov movl mov mov mov mov xor mov mov xor mov movl mov mov movzwl mov mov mov xor mov mov mov mov mov movl lea mov mov mov mov mov movl lea mov mov test jne xor jmpq mov mov mov cmp jne mov mov mov callq lea xor xor callq xor jmpq cmp je xor jmpq mov xor callq mov mov mov xor mov callq mov mov mov callq sub mov lea mov xor xor mov callq mov mov test jne xor mov callq mov xor jmpq xor lea mov callq nop mov xor movzbl callq mov test jne mov callq xor mov callq mov xor jmpq lea test je mov mov mov movb jmp mov mov mov movb mov movb movb mov mov mov mov mov lea mov lea mov movl mov decb addq mov mov mov jmp mov callq mov xor mov callq xor mov xor lea mov mov mov pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub mov mov mov mov callq lea xor xor callq mov test je callq mov callq movq mov callq mov xor callq mov movq mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push sub mov mov mov mov test jne xor jmpq mov mov mov cmp jne mov mov mov callq lea xor xor callq xor jmpq cmpq je xor jmpq mov xor callq mov mov mov xor mov callq mov mov mov callq sub mov lea xor mov xor xor mov callq mov mov test jne xor mov callq mov xor jmpq xor lea mov callq nop mov xor movzbl callq mov test jne mov callq xor mov callq mov xor jmpq lea test je mov mov mov movb jmp mov mov mov movb mov movb movb mov mov mov mov movl mov mov decb addq mov mov mov jmp mov callq mov xor mov callq xor mov xor mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push sub mov movzwl mov mov cmp jne lea jmp cmp jne lea lea callq xor lea movl lea mov movl lea mov mov mov callq mov test jne mov jmpq mov mov movb movl mov mov mov mov movl mov mov mov mov mov lea mov movzbl lea mov movzbl mov mov mov movl mov xor mov mov mov lea movl mov callq xor mov mov callq test js mov lea xor xor mov mov mov callq mov test jns mov callq mov movq mov jmp mov xor lea mov mov mov mov mov pop retq int3 int3 mov mov push sub mov lea lea callq xor lea lea movl mov lea movl mov mov mov callq mov test jne mov jmpq mov mov movb movl mov mov mov movl mov mov mov lea mov mov mov mov movzwl lea mov movzbl lea mov lea mov mov movl mov mov callq xor mov mov callq test jns mov jmp mov lea xor xor mov mov mov callq mov test jns mov callq mov movq mov jmp xor mov mov lea mov mov mov pop retq int3 mov push sub mov lea xor xor callq mov xor lea lea xor mov lea xor mov movb mov mov callq mov test jne mov mov add pop retq mov mov mov mov mov movb movb mov mov mov mov mov mov mov callq cmp jne lea xor xor xor mov callq mov mov add pop retq int3 int3 int3 mov push sub mov lea xor xor callq mov xor callq mov test jne mov mov add pop retq xor mov mov mov mov callq movl lea mov mov mov movl mov lea xor mov movzwl xor mov mov mov lea movl mov mov movl mov mov lea mov lea lea mov movb xor mov mov callq mov test jne mov callq mov jmp mov mov mov mov mov movb movb mov mov mov mov mov mov mov mov callq mov cmp jne lea xor xor xor mov callq mov xor mov callq mov mov mov mov add pop retq int3 int3 mov push sub mov lea xor xor callq mov xor lea lea xor mov lea xor mov movb mov mov callq mov test jne mov mov add pop retq mov mov mov mov mov movb movb mov mov mov mov movq mov mov mov mov callq cmp jne lea xor xor xor mov callq mov mov mov add pop retq int3 int3 int3 mov push sub mov lea xor xor callq mov xor lea lea xor mov lea xor mov movb mov mov callq mov test jne mov mov add pop retq mov mov mov mov mov movb movb mov mov mov mov mov callq cmp jne lea xor xor xor mov callq mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov cmp je callq movq mov cmp je callq movq mov test je callq movq mov test je callq movq xor add pop retq int3 mov mov push push push push push sub mov mov mov xor xor lea callq lea mov lea mov movb xor mov mov xor xor mov lea callq mov mov test jne mov jmpq test je mov xor xor mov mov callq mov mov test jne mov callq mov jmpq xor xor mov callq mov mov jmp mov mov callq mov mov callq mov mov xor mov mov test jns jmpq mov mov mov mov movb mov movb movb mov mov mov mov mov mov mov test cmovne mov mov mov callq cmp jne mov xor xor xor lea callq mov test cmovns add pop pop pop pop pop retq mov mov push push push push push sub mov mov mov xor xor lea callq lea mov lea mov movb xor mov mov xor xor mov lea callq mov mov test jne mov jmpq test je mov xor xor mov mov callq mov mov test jne mov callq mov jmpq xor lea mov callq mov mov jmp mov mov callq mov mov callq mov mov xor mov mov test jns jmpq mov mov mov mov movb mov movb movb mov mov mov mov movl mov mov test cmovne mov mov mov callq cmp jne mov xor xor xor lea callq mov test cmovns add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push push push push push sub mov movzwl mov mov xor xor lea callq mov xor callq mov mov test jne mov jmpq xor mov mov mov mov mov mov mov mov mov movl lea mov movl mov mov mov mov mov mov lea mov lea mov movb xor mov mov xor xor mov lea callq mov mov test jne xor mov callq mov jmpq mov test je mov xor xor mov mov callq mov mov test jne mov callq xor mov callq mov jmpq mov xor mov callq mov mov jmp mov mov callq mov mov callq xor mov mov callq mov mov xor mov mov test jns jmpq mov mov mov mov movb mov movb movb mov mov mov mov mov mov mov test cmovne mov mov mov callq mov cmp jne mov xor xor xor lea callq mov xor mov callq test cmovns mov lea mov mov mov pop pop pop pop pop retq int3 int3 int3 int3 mov mov mov mov mov push push push sub mov mov movl mov mov mov mov xor mov mov xor mov mov mov mov mov movl lea mov movl mov mov mov mov xor mov mov mov mov mov movl lea mov xor xor lea callq lea mov lea mov movb mov mov xor xor mov lea callq mov mov test jne mov jmpq mov test je mov xor xor mov mov callq mov mov test jne mov callq mov jmpq mov xor mov callq mov mov jmp mov mov callq mov mov callq mov mov xor mov mov test jns jmpq mov mov mov mov movb mov movb movb mov mov mov mov mov lea mov lea mov movl mov test cmovne mov mov mov callq cmp jne movq lea mov xor xor xor lea callq cmp jne mov callq mov xor xor xor lea callq mov jmp mov test cmovns lea mov mov mov mov pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 sub mov test je movzbl mov xor xor xor xor test je xor cmp jne mov add inc shl add cmp ja test je xor xor jmp lea inc movsbl lea cmp ja cmp jl cmp jg cmp ja mov inc test jne cmp jne test je shl add mov add retq xor mov add retq or add retq int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov cmp jne cmp je cmp jne cmp je test je or add pop retq cmp je test jne mov xor mov callq mov test jne or mov add pop retq xor mov mov callq mov movq movq neg mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov neg test je cmp jb cmpb jne movzwl mov mov callq test js cmpl mov mov mov mov jne lea lea mov mov callq cmpq je mov mov lea mov mov callq lea xor xor callq mov movb xor add pop retq cmpq je lea lea mov mov callq lea xor xor callq mov movb xor add pop retq or add pop retq int3 int3 int3 int3 int3 int3 int3 rex sub mov neg test je cmp jb cmpb mov mov mov mov mov mov mov mov jne mov lea mov xor lea mov mov callq test js mov cmp jne cmpb jne cmpb jne mov callq test js mov callq mov test js callq test jns mov callq mov callq movb or add pop retq lea xor xor movb callq xor add pop retq sub neg sbb add pop retq int3 mov mov push sub mov mov mov neg mov cmp jne cmp jne lea movl mov callq mov mov add pop retq cmp jne cmpb je mov mov mov add pop jmpq or mov mov add pop retq cmp jne mov mov test je cmpl jb cmpb jne mov xor lea lea mov mov callq test js movzwl mov mov mov mov callq jmp or mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov push sub mov mov mov mov mov test je xor callq xor mov mov mov xor callq mov test je mov mov mov callq mov mov mov mov add pop repz int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov neg mov mov cmp jne mov lea cmp jne mov mov add jmpq cmp jne cmpb je test je mov movzwl mov mov callq add retq cmp jne cmpb je add jmpq or add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub mov neg cmpl jne cmpq je cmpq je cmpb je mov callq mov callq mov callq mov mov test je xor callq mov xor mov mov test je xor callq xor mov mov mov callq mov mov mov add pop retq sub mov neg mov cmp jne lea mov movl mov callq add retq cmp jne cmpb je add jmpq or add retq int3 int3 int3 int3 int3 mov mov mov push push push sub mov mov xor neg mov mov test je mov mov test je mov mov cmp jne cmp jne lea movl mov callq jmpq cmp jne cmp je mov callq jmpq or jmpq cmp jne mov mov test je cmpl jb cmp jne mov lea lea mov mov mov mov mov mov mov mov mov mov mov mov callq test js movzwl mov mov mov mov callq mov test jle lea lea xor xor xor movq mov callq mov mov xor mov lea mov callq cmp jne mov jmp test je mov mov test je mov mov mov jmp or mov mov mov mov add pop pop pop retq int3 int3 test je test je test je mov lea nopl movzbl inc inc xor movzbl xor sub mov jne repz int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je lea nop movzbl mov inc xor movzbl mov mov shr xor add jne mov retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex xor mov mov mov test jle mov lea movzbl cmp je cmp je movzbl add inc movsbl movzbl inc movsbl shl shl add mov shr mov movzbl cmp je movzbl inc inc movsbl inc shl add mov shr mov movzbl cmp je movzbl inc inc movsbl add inc mov add jmp inc inc cmp jl mov movb mov pop retq mov mov pop retq int3 int3 int3 shr lea retq int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push sub lea lea xor xor xor xor callq lea callq mov test je lea xor mov callq lea movl callq test jne mov mov mov movzwl sub movl je sub je cmp jne lea lea callq lea callq mov test jne lea lea callq lea callq lea lea mov callq lea callq movl mov movl movl movl mov movl movl jmpq lea lea callq lea callq mov test je sub je sub je cmp jne lea lea callq lea callq lea lea mov callq lea callq movl movl movl movl movl mov movl movl jmpq lea lea callq lea callq lea lea mov callq lea callq movl movl movl movl movl mov movl movl jmpq lea lea callq lea callq lea lea mov callq lea callq sub movl movl movl movl mov movl movl je cmp jne movl jmpq movl jmpq sub movl movl movl movl movl je sub je cmp jne movl movl jmpq movl movl jmpq movl movl jmp cmp jne movl movl movl movl movl movl test je sub je cmp jne movl jmp movl jmp movl lea mov mov mov mov mov pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub callq movabs mov mov movabs imul imul sar mov shr add add retq int3 int3 int3 mov mov push sub mov mov lea mov callq xor lea mov mov mov movl mov lea lea mov mov movl movl mov mov movl mov mov mov callq test js mov xor xor xor mov mov callq lea mov mov mov pop retq int3 int3 int3 int3 int3 int3 int3 int3 mov push push push sub mov lea lea callq mov xor mov mov nopw mov lea lea mov lea mov movl mov movl mov mov mov callq test js mov mov mov mov callq mov test jne mov callq jmp movzwl xor mov callq mov lea xor callq mov mov callq test jns mov xor callq jmp lea mov mov callq test jne mov xor callq inc cmp jbe jmp mov xor callq cmp ja movzwl mov xor callq mov mov mov mov mov mov mov mov mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 mov mov push sub cmpw mov mov je mov callq test je movzwl add callq test je lea lea mov callq test js mov mov xor lea mov mov callq mov test je movzwl xor mov callq mov lea lea callq test jne mov add jmpq mov lea mov mov callq test jne add je cmp je lea mov callq mov mov test je mov mov cmp jb mov callq mov jmp movzbl add test je movzbl sub jmp mov test je cmp je lea lea callq lea lea callq lea callq test je or xor mov repnz not dec mov test je cmp jbe lea lea mov callq test js movzwl mov mov callq lea callq cmpb je xor mov or repnz movzwl mov or xor mov repnz mov not dec lea cmp jbe sub mov mov mov mov add callq mov xor callq lea callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub mov xor callq test je lea mov callq test je cmp jle mov mov cmp jb mov callq mov cmp jne lea mov mov add pop retq mov mov mov cmp cmove mov mov mov add pop retq mov mov add pop retq mov mov push sub xor mov test je mov add cmp ja lea cltq movzbl mov add jmpq mov jmp mov jmp mov jmp mov callq test setns mov mov add pop retq mov jmp xor mov callq test je mov xor xor mov mov callq test js mov callq test je mov mov callq test je mov mov cmp jne mov mov mov mov mov cmp jb and mov callq test je mov mov mov mov callq mov mov mov add pop retq nop fwait rex.WXB movsb rex.WXB lods rex.WXB mov add (bad) rex.WXB add add add add add add add add add add add add add add mov push sub mov mov callq mov movabs movabs mov imul imul sar mov shr add callq test je mov lea nopl callq inc mov and sub movzbl mov jne mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 data16 data16 xchg mov cmp jb movzbl movabs imul cmp jb neg and je sub mov add mov and shr jne mov and shr je data16 nop mov add dec jne test je mov inc dec jne retq data16 data16 data16 cmp jae mov mov mov add mov mov dec mov mov mov jne jmp data16 data16 movnti movnti movnti add movnti movnti dec movnti movnti movnti jne lock jmpq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 data16 data16 xchg mov sub jbe cmp jb test je test je mov dec mov add test je mov sub mov add test je mov sub mov add mov shr jne mov shr je mov mov add dec jne and test jne mov retq data16 mov mov inc dec jne mov retq data16 data16 data16 data16 data16 data16 cmp jae mov mov add mov mov mov mov dec mov mov jne and jmpq data16 data16 data16 xchg cmp jb mov prefetchnta prefetchnta add dec jne sub mov mov mov movnti movnti mov mov movnti movnti mov mov add movnti movnti mov mov dec movnti movnti jne sub cmp jae lock jmpq data16 data16 data16 data16 data16 je add cmp jb test je test je dec mov dec mov test je sub mov sub mov test je sub mov sub mov mov shr jne mov shr je sub mov dec mov jne and test jne mov retq data16 dec mov dec mov jne mov retq data16 data16 data16 data16 data16 data16 cmp jae mov mov sub mov mov mov mov dec mov mov jne and jmpq data16 data16 data16 xchg cmp ja mov sub prefetchnta prefetchnta dec jne add mov mov mov movnti movnti mov mov movnti movnti mov mov sub movnti movnti mov mov dec movnti movnti jne sub cmp jae lock jmpq jmpq jmpq jmpq jmpq jmpq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub test mov mov jne xor mov add retq mov mov cmpl jle movzbl mov callq jmp movzbl cmp cmove movslq mov mov and test je inc jmp movzbl mov inc cmp mov je cmp jne movzbl inc xor nop add cmp ja cmp je cltq lea inc lea movzbl jmp cmp jne neg mov mov add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor retq sub xor mov mov mov xor mov callq xor add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push push push sub mov mov xor mov mov mov mov mov xor jmpq mov jmpq jmpq callq movzbw mov jmpq callq cmc mov cmc stc mov bswap bt movzbw inc mov test test jmpq mov setnp bswap mov movzbl jmpq mov not bswap mov mov jmpq setne movsbw mov jmpq mov jmpq jmpq callq mov mov movzbw not mov bswap mov jmpq callq movzbw xchg xchg jmpq jmpq mov jmpq jmpq callq cmc test bt test jmpq jmpq jmpq jne lea rcl inc add movzwl xor xor bt mov clc jmpq jbe je movzbw movsbw je lea movzbq mov setae setne mov jmpq jmpq mov jmpq callq setns mov lea movsbq mov jmpq jmpq clc test cmp cmp jmpq callq not movzbw movzbw lea mov not not movsbw mov mov jmpq jl mov bswap lea jmpq bswap lea mov jmpq jmpq mov jmpq je rcr btc bsf rol mov test test bt cmp jmpq mov not mov mov setp sete mov mov jmpq jmpq jmpq callq cmc test jno je xchg movzbl not bswap lea bswap mov jmpq je lea not mov bswap mov lea mov mov jg mov jmpq jmpq movsbq bswap mov mov bswap mov jmpq callq jmpq mov mov mov jg mov movzbl bswap setne mov jmpq mov mov xchg not xchg mov not movzbl mov jmpq mov lea mov jmpq jmpq callq clc stc bt test jmpq jmpq je stc cmp jns jb movsbl mov sar sub movzbl seto mov jmpq jne or and movzwl shrd adc mov je cmp xor jmpq bt stc cmc cmp jmpq jmpq callq movsbw movsbl mov jmpq callq mov xchg lea jmpq jmpq jmpq jmpq mov jmpq jmpq callq jmpq jmpq je lea movzbl bswap neg mov cmc cmp jns jb setle shld mov cmp sar movsbw sub jmpq callq data16 icebp btc add bts mov xchg movzbw sbb shr lea rol jmpq sete mov lea setb bswap mov mov not lea setbe mov jmpq jmpq movzbw mov jmpq jmpq mov jmpq callq jmpq xchg xchg mov movsbq mov bswap not jmpq jmpq jmpq jmpq jmpq not mov movzbl jmpq jmpq callq movsbw not mov mov jmpq callq lea lea mov mov jmpq callq xchg mov mov jmpq nop jmpq imul mov mov test je mov xor mov mov callq mov mov mov add pop pop pop pop pop retq xchg callq setb mov bswap mov not lea mov seto seta not mov jmpq lea jmpq jmpq mov jmpq jmpq in add adc adc adc adc adc adc adc adc adc add adc add adc adc adc adc adc adc adc adc adc add adc adc adc adc adc add adc add adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc or adc adc adc adc mov mov push sub mov mov mov test je movl movq jmp movl movq xor jmpq jmpq nop jnp callq jmpq lea jmpq jae callq mov rcr xor cmc adc mov clc test jmpq jmpq js jo movzbl movsbw not lea mov lea movzbl not lea jmpq jmpq mov movzbw not not lea jmpq je stc xor jmpq mov lea jmpq not jmpq lea jmpq jmpq mov mov lea jmpq jmpq mov jmpq jmpq mov jmpq jmpq bswap lea jmpq jmpq jmpq xchg lea movsbw mov mov jmpq jb mov jmpq mov jmpq callq shl mov bt test jmpq jmpq js bswap movzbw mov bswap lea lea jmpq bswap lea lea mov seta movq mov setno movsbw sets mov setns not lea setle mov jmpq jmpq mov not jmpq je cmp cmc stc sub jmpq jmpq callq movsbl not mov lea mov mov lea jmpq jmpq callq btc mov mov lea mov stc bt clc test js jns jmpq jmpq callq jmpq jmpq callq test jmpq jmpq test test jl js jmpq jmpq callq jmpq jmpq mov jmpq jmpq jmpq pop retq xchg mov mov xor add pop retq int3 test add push repnz sub add add jb add add add (bad) add add add cmpsb repnz add add jmpq lods insb retq add add add xor add add add push callq add jo add add add mov add add add (bad) callq add mov add add add retq add add add callq add fsubr add add add loop add add add bnd add (bad) jmpq add adc add add add es add cmp add add add rex.R add rex.WRX add pop jmpq add pushq add add add add add add add add add add jmpq add fsubr add add add hlt jmpq add add add add add sbb add add add xor add add add push (bad) add add add insb (bad) add add add mov add add add xchg (bad) add add add test add add add mov add add add (bad) (bad) add add add lock add add add adc add add add sbb add add add cs add add add add add add pushq add add add add add xchg jmp add add add add add add add jmp add add add jmp add add add jmp add add add jmp add add add in add add add and add add add xor add add add rex.RX add add add data16 add add add jp add add add mov add add add pushfq in add add add mov add add add int3 in add add add fsubr add add add in in add add add (bad) in add add add (bad) in add add add or add add add cmp add add add push in add add add pop in add add add jbe add add add xchg in add add add mov add add add (bad) in add add add loopne add add add add add add add adc add add add and add add add cs add add add rex.WX add add add push out add add add jo add add add sub add add add add add add add out add add add loopne add add add imul add add add (bad) out add add add adc add add add xor add add add rex.W add add add pop out add add add jb add add add mov add add add cwtl out add add add movabs out add add add (bad) out add add add in out add add add or add add add sub add add add rex.RX lock add add pushq add add add add add add add add add add lock add add fdivp add add add div add add add adc add add add xor add add add rex.WRX add add add jo add add add nop icebp add add add movabs icebp add add add (bad) icebp add add add fdiv add add add clc icebp add add add adc add add add sub add add add repnz add add rex.WR repnz add add lock add add add out add add add out add add add add add add rex.X insb fs (bad) gs movb insl rex.WB fs jae push (bad) insb imul rex.RXB gs jns je insl push outsl jne imul gs add add je rex.WB imul gs je imul rex.RB jb gs outsl outsl insb push imul add je movslq imul je xchg add je push gs (bad) movslq movslq imul imul repz insb rex.XB (bad) je push movslq imul imul add insb rex.B fs jae rex.B insb outsl ja movslq add add insb rex.XB (bad) je movslq rex.RX rex.B insb outsl movslq gs outsl outsl insb push imul add je rex.WR outsb addr32 push imul rex.RB outsl jb jae and insb outsl jae add add movslq add gs (bad) insb jne rex.WXB gs xor pop ja gs gs push (bad) insb jne rex.WXB gs add gs je rex.WXB gs rex.XB rex.B insb outsl movslq gs outsl outsl insb add jo pop ja jne jb push (bad) insb jne rex.WXB gs rex.WRXB outsb rex.WXB gs fild movslq add outsb imul pop ja gs imul ja jne jb rex.WB outsw jb (bad) je outsl outsb imul ja jb (bad) je imul ja jb je imul rex.RXB gs jne jb outsb je jb movslq jae add add jo imul pushq movslq add outsb push jb movslq jae push add data16 gs data16 outsb movslq (bad) pushq movslq movabs insl jo rex.WX push gs outsb movslq (bad) pushq movslq rex.W outsb fs add add je rex.RX rex.B jae push je imul je push outsb imul jb outsb addr32 outsl rex.B jae push je imul rex.WB rex.RXB gs gs (bad) je fs gs movslq (bad) pushq movslq (bad) add insb rex.B outsb fs outsb imul push je imul pop ja gs gs rex.WXB gs cmp jne gs je rex.WXB gs add pop ja jne jb rex.WXB gs add rex.RX gs outsb imul jb outsb add roll push je rex.B outsb fs outsb imul jb outsb addr32 outsl push je imul push je rex.B jae push je imul imul jb outsb add int3 add movslq add add je rex.WB imul jb outsb add push jae gs jne jb outsb je pushq push jb jbe outsl jne rex.WRB fs xchg add jae movslq imul insb gs add push jb (bad) rex.RX jb jb je add outsb jae (bad) movslq gs movslq jb movslq jae add push jb (bad) rex.RX jb gs add xchg rex.WXB gs je movslq je (bad) movslq jb movslq jae add outsl movslq jae jns gs add insb rex.XB jo push outsb imul jb outsb add jno rex.WB rex.RX gs add rex.WB rex.RX gs fs add rex.WXB gs gs jbe outsb je add imul insb gs pushq movslq add data16 insb insb rex.R jbe jb jrcxz push gs (bad) je movslq jae push je je add gs imul je outsb gs movslq jo imul rex.WB imul rex.RB outsb je xor rex.WB rex.B insb outsl movslq gs add rex.WRXB jb (bad) je rex.WRXB pushq movslq insb add imul je jns add mov rex.WRB rex.X insb fs fs rex.RX jb outsl outsb push (bad) addr32 outsl outsl insb add add rex.B insb outsl movslq gs fs add rex.WB rex.XB (bad) je imul outsl rex.R gs gs rex.R gs movslq add rex.WB rex.R gs gs push jns (bad) outsl insb imul add add push outsb jb imul jne outsl ja rex.WRX je imul outsl outsb add testb outsl rex.XB insl jo gs push gs gs add rolb rex.WB push je jo imul rex.XB push outsb push imul insb insb (bad) movslq add je outsl (bad) fs (bad) rex.WRX je data16 outsl jne imul outsl push imul jne outsl ja rex.WRX je imul outsl outsb add push add rex.XB (bad) je push jns (bad) outsl insb imul add outsl rex.XB (bad) je rex.R gs movslq add rex.WB je jb outsl movslq fs jne pushq jns imul rex.RB jne jb rex.R gs pushq je rex.R (bad) fs jbe jb add add je add mov push je push outsb imul jb outsb addr32 outsl rex.WB je addr32 lahf add jb outsb je add add push gs imul jae gs push pushq add rex.WXB gs outsb movslq push imul rex.RB outsb je jb outsl movslq fs gs outsl jbe rex.W gs imul gs (bad) imul je jo gs pushq movslq add gs imul add add rex.WB imul push imul jge rex.WXB gs gs jb outsl jb je push pushq add add add add push gs gs jae push jo outsb rex.WR movslq or rex.WXB movslq imul rex.WR movslq (bad) imul movslq outsb add rex.XB (bad) je push jns je insl push pushq add out add push outsb insl (bad) jo outsl movslq fs (bad) addr32 add add rex.WRB jo outsl movslq fs (bad) addr32 add pop ja jne jb push jns je insl rex.WB outsw jb (bad) je outsl outsb add lret add movslq add jb ja add je jb movslq jae insl (bad) imul jns rex.WB rex.RXB gs jne jb outsb je jb movslq jae pop add gs imul jns imul js rex.WB je jb outsl movslq fs outsl jo outsb je jns imul js outsb je jb outsl movslq rex.WB jae jb rex.W gs imul js outsb je jb outsl movslq rex.WB jae jb push (bad) imul add rex.WB imul rex.WRX (bad) gs outsl imul fs js gs gs rex.WRX (bad) gs outsl imul fs outsl push je jb push imul add rex.WB imul push imul rex.WRXB jns (bad) insl gs je imul insl push imul insb insb (bad) movslq add add pushq add rex.WRXB outsb rex.WRXB pushq movslq push outsl imul add push gs outsb movslq (bad) pushq movslq push outsl imul add push jne jb rex.WB outsw jb (bad) je outsl outsb push jb movslq jae test outsl outsl imul jb movslq jae jns jb movslq jae add mov gs jb (bad) je push jb movslq jae outsl je data16 outsl jne imul outsl rex.X insb fs gs movslq outsl rex.XB outsb je outsl insb push gs gs add add push outsb insb outsl movslq (bad) addr32 fiadd rex.WRB push jb (bad) rex.B rex.WR movslq (bad) addr32 add rex.XB outsb movslq rex.WB add rex.WXB gs jne jb push imul gs outsb je add pop ja jne jb push jns (bad) outsl insb imul (bad) pushq movslq add outsb push jns (bad) outsl insb imul (bad) pushq movslq adc je rex.RB (bad) insb push outsb imul jb outsb addr32 add movslq add add push movslq outsb rex.WRXB pushq movslq jo add add add outsl jae jb insb cs add jae jmpq not pop retq add adc clc test jmpq cmove jmpq in add add movzbl bswap not bswap mov jmpq je setg setle bswap mov jmpq mov jmpq jmpq xor lea movabs fsincos fildll (bad) (bad) jae pop and jnp retq movabs (bad) cmp sub insl mov in lahf and push jp movslq sbb lods ss retq xchg and (bad) jle sub movabs add imul and xor (bad) ljmp js sbb pop popfq imul ds (bad) fsubrs add and out int3 cmp mov pop (bad) (bad) (bad) in rorl cmp lahf repnz or hlt adc test fcoml add mov in cmp pushq callq lahf or movslq ja jns mov xlat rex.RX (bad) mov (bad) cwtl cli lock and repz xor out push add jno data16 rex.RX pop add add add add add add add add add add add add mov add add add add add add add add add add add add add add (bad) nop add add add add add add add add add add add add add add add mov add add add add mov add add add add add or add add add add add mov add add add adc add xchg add add add add add add add add mov add add add add add add add add add mov add add test add add adcb add add add mov add add add and add add add adc add add add (bad) xchg add add add (bad) mov add add add add add mov add pop mov add add addb add add add and add add add add add (bad) xchg add add add (bad) mov add add add xchg add add add add add add add add add mov add xorb add add add std popq add add add xchg add add add mov add add add add add (bad) xchg add add add add add adc add nop roll add add orb add mov add add add jge add add add add add mov add mov add add andb add add add add add add add add add add add add add add add add add add add add add add add (bad) mov add add addb add adc add (bad) mov add add sub add add add add add add add mov add add add (bad) mov add add cmpb add add add jge add add add pushq add cmp add add add int3 mov add add orb add (bad) mov add add cmp add add add or add add add add add mov add add add add add mov add add nop add add add add add (bad) mov add add add add add add addb add xchg add add cmp add add add add add add add (bad) xchg add add add lahf mov add pop mov add add adcb add (bad) mov add add orb add out mov add add add mov add add cmp add add add add add add add out mov add add add add add mov add add cmpb add add add adc add pop mov add add xor add add add add add add add (bad) mov add add orb add add add add add add add add add and add and add mov add add add xchg add add add xchg xchg add add add add add add add out mov add add sub add add add add add add add callq add addb add add add adc add mov add add add add add add add add add mov add add add mov add add add pop mov add add add add add add add add xchg mov add add sbb add add add add add add add adc add or add add add and add add add and add add add lahf mov add lahf mov add (bad) xchg add add add sbb add (bad) xchg add add add (bad) nop add add add out mov add add add popq add add add mov add add add add int3 mov add add add xchg add add add mov add cmpb add add add add add std popq add add addb add add add add add jns add add add add add add add add add xchg mov add add add add add add pushq add andb add add add add add add add add add std popq add add add cmpsl add add add add add (bad) nop add add add add add add add std popq add add addb add add add mov add add add add xorb add mov add add add (bad) nop add add add add add add add add add mov add add add add add mov add add xchg add add add add add xchg mov add add add mov add add add add add nop roll add add add add adcb add add add add add add add and add (bad) xchg add add add add add pop mov add add addb add add add add add add add jge add add add add add mov add add add std popq add add add mov add add cmp add add add (bad) mov add add add nop add add add adc bswap movsbw not movzbw push lea jmpq not push lea movsbw push mov lea movzbw movsbq push movsbl lea push bswap lea movzbl mov push setb jmpq test jmpq mov jmpq push jmpq jmpq bswap movzbw push mov movzbl bswap pushq lea movabs not not movzbw mov mov jmpq inc shrd (bad) repnz bsf movzbw mov stc bt bt jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq pushfq jmpq push jmpq push jmpq push jmpq jmpq jnp push jmpq pushq not movabs jmpq push jmpq jmpq jp push jmpq jmpq pushfq jmpq jmpq push jmpq mov repz movsbl push bt movsbw push jmpq push lea pushq movsbq xchg setbe movsbl movabs bswap mov jmpq push jmpq push jmpq test cmc not cmc xor clc stc jmpq jmpq push not lea jmpq jmpq push jmpq push shr movsbw add dec clc bswap pop jmpq jmpq add jmpq jmpq popq jmpq jmpq popq jmpq push jmpq jmpq push jmpq popq jmpq mov jmpq mov cld jmpq jmpq jmpq push jmpq bt stc rol jmpq jmpq jmpq mov jmpq sub cmp cmc bt clc add jmpq jmpq movsbw sete not mov dec movsbw clc xor xor mov cmp cmp add jmpq mov jmpq mov jmpq clc add jmpq xadd mov (bad) repnz bswap not dec ror bt and neg rol btr rcl ror sbb xor rcr btc cmp neg mov cmc test stc add jmpq popq jmpq lea push bswap movzbw push not not bswap setg push mov lea xchg push bswap mov setle push mov setp not push setae setnp pushq xchg bswap bswap setge movabs bswap jne mov jmpq movzbq push movzbw push mov lea pushq movsbq lea movabs mov movzbl mov jmpq jmpq jmpq cmc setl mov add notl sbb shl lahf mov clc clc bt stc sub jmpq jmpq sbb rol (bad) lock bt cmc bt test sub bt add jmpq seto pushq jmpq jmpq push jmpq push jmpq jmpq jmpq cmp clc add jmpq push jmpq repz movzbw push movsbw seto jmpq push jmpq mov jmpq jmpq jmpq jmpq jmpq pushfq jmpq push jg repz movsbw lea jmpq jmpq jmpq jmpq mov movsbw push movabs lea setbe not push jmpq push jmpq push lea setbe push setp lea lea xchg push movsbl movsbw jmpq sar cmc mov jmpq mov jmpq jmpq jmpq jmpq rol stc sub cmc cmp cwtl test stc cltq js bt sub jmpq js mov jmpq jmpq push jmpq push jmpq jmpq jmpq jmpq jmpq jmpq pop jg pop bts neg pop rcl pop (bad) repz movzbl movsbl pop movzbl movzbw lea movzbq pop movsbw pop mov bswap jae pop bswap jmpq jmpq push lea seta setno movzbl repz lea movzbq push bswap push movzbw push jmpq movzbw mov bt mov dec stc rol bts add movzbw lea inc lea inc lea btc mov rol and lea bts xor and xor shld movzbl add rcl mov test cmp clc cmc sub jmpq xchg push movsbw jmpq push jmpq push jmpq push jmpq inc bt bswap stc stc rol clc cmp test push rcl rcl rcl inc sub not shrd add sbb movsbw setle cmc pop stc bt stc sub jmpq popq jmpq jmpq push jmpq jmpq push jmpq push jmpq jmpq xchg movsbw push movzbw pushq jmpq not stc clc cmp jmpq jmpq jmpq jmpq movabs movzbl mov jmpq jmpq push jmpq movsbw pushq not movzbw bswap sets movabs mov bswap mov mov jmpq shr and mov cmp stc jmpq push jmpq shld jmpq jg not jmpq push jmpq popq jmpq popq jmpq jmpq jmpq jmpq push jmpq push jmpq mov jmpq jmpq mov pushfq movsbl lea push lea mov lea mov mov lea cld cld push lea cld std cld mov cld jmpq pushfq jmpq mov jmpq mov jmpq push jmpq push jl push jmpq jmpq jmpq jmpq pop movzbw xchg jmpq push jmpq jp mov jmpq jmpq push jmpq push jmpq jmpq push setne lea movsbq repz movzbw jmpq push jmpq jmpq jmpq clc mov add stc bsr mov jmpq push jmpq movsbw jmpq jmpq push jmpq jmpq push setbe movzbw repz movzbl lea push lea push jmpq xor stc mov clc cmp bt jmpq push bswap not lea repz mov setg sete movsbq push bswap mov bswap push not movzbw jmpq push jmpq push jmpq jmpq stc clc rol test clc push test adc rcl add btr mov test pop test clc cltq cmp jmpq push jmpq push jmpq jmpq jmpq push jmpq jmpq jmpq jmpq jmpq and setb mov rcl clc btr rcl mov sar rol mov bt sub bt stc stc cmp shrd jmpq movsbw rol jnp sbb mov rcl mov cmp clc clc cmp sub stc clc bt clc shl jmpq inc test cmc mov cmc clc stc jmpq jmpq push jmpq not mov setns setge adc mov stc cmc clc sub cmc test cmc shr jmpq jmpq push jmpq bsr bsr mov test xor clc stc test sub jmpq push jmpq jmpq push jmpq popq jmpq movabs movsbw not movzbq mov jmpq jmpq push jmpq cmp ror mov sbb and bswap mov jmpq rcr lea neg movzbq not xadd movzbw shrd bswap bsf clc rcl bt mov ror data16 (bad) or idiv (bad) cmc sub clc and add movzbw xor mov add inc lea sete cmp movsbw rcr movabs shrd cmp shl shrd add shld lea (bad) testl (bad) rcr bswap add xchg mov bswap inc inc add ror sbb add btr stc lea ror movsbw bswap dec add add btc jmpq stc not jmpq push jmpq neg adc cmc movzbl cmc xor jmpq mov jmpq push jmpq popq jmpq pushfq jmpq jmpq jmpq setg movzbw movsbw push seto setno lea bswap push not seto push movsbw lea xchg not push jmpq push jmpq mov jmpq jmpq push jns push jmpq jl push jmpq jmpq push jmpq jmpq jmpq push jo push jmpq xor test test stc neg jmpq mov jmpq not push not mov push movzbw bswap push setle push movzbl movsbw bswap movzbw push setle setb push movsbw pushq movsbw xchg setbe jmpq stc add jmpq mov jmpq jmpq jmpq dec stc sub bt cmc bt cmc not stc jmpq not stc jmpq push jmpq mov jmpq push jmpq popq jmpq push jmpq jmpq lea push xchg bswap push setnp lea not not push setp lea pushq movzbq movzbw movabs movsbl mov movzbw jmpq push jmpq mov jmpq push jmpq push jmpq mov jmpq mov jmpq push setae bswap not push lea push movzbl sets not jmpq repz jmpq push jl push jmpq push jmpq jmpq push jmpq jmpq jmpq push jmpq add mov rcl sbb xor test mov stc cmp add jns mov jmpq popq jmpq jmpq mov jmpq push jmpq jmpq push jmpq mov cmc bt stc clc sub cmp sub jmpq jmpq rcl shld mov jno add jnp pushfq jmpq cmc movzbw shl sub movzbl neg bsr rcr shrd sub bts add xor inc dec btc movzbw rol bsf xor or xor sub mov mov cmp bt clc add jmpq setb mov inc setle rol or movzbw stc xor shld stc adc add sbb movzbl btc mov clc bt add cmp clc mov cmc bt bt sub jmpq jmpq add jmpq jmpq jmpq jmpq jmpq push jmpq popq jmpq not push bswap push setg movzbw bswap xchg push not not jmpq jmpq push jmpq xchg push movzbw movsbw setl push mov push mov movsbw bswap movzbq pushq xchg jmpq push jg push sete repz not push jmpq jmpq push jmpq mov jmpq bswap lea mov push bswap push movzbw mov setae push movsbw push not mov movzbl push setne pushq not not movsbw movabs not not mov jmpq push jmpq repz movzbw jmpq sets not jmpq push jmpq pushfq jmpq popq jmpq setae movzbw pushq movzbw lea movzbl mov movabs mov mov jmpq jmpq bt mov cmp mov jmpq push jmpq push jmpq jmpq push jmpq mov jmpq cmc bt sub jmpq push jmpq jmpq bswap push mov lea lea lea pushq jmpq jmpq jmpq stc sub bt cmp neg stc stc jmpq jmpq jmpq movzbw mov movsbl mov jmpq jmpq mov jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq dec and (bad) testb fdiv ror rol sar shld xor mov test (bad) repnz test sub jmpq jmpq rep adc bswap pop shrd rex.W (bad) or (bad) dec pop clc std clc clc popfq jmpq push jmpq push jmpq jmpq movsbw push jmpq bt sub jmpq cmc cmp jmpq push jmpq xchg movzbw push not xchg push bswap mov pushq xchg movabs movsbw bswap lea bswap mov jmpq jmpq push jmpq push jmpq push jmpq jmpq cmc jmpq jmpq jmpq push jmpq push jmpq push jmpq movsbl lea mov mov push movzbw lea push lea push movzbl jmpq push jmpq push movsbw movsbw jmpq not jmpq jmpq push jmpq jmpq mov jmpq jmpq push jmpq push movzbw repz movsbw movzbl mov movsbw push not lea lea lea push bswap movsbq mov movsbw push mov movzbw not push setnp movzbl push jmpq cmp test add jmpq inc jmpq neg rol sar sub mov test jmpq push jmpq push jmpq jmpq jmpq mov jmpq mov jmpq jmpq jmpq push jmpq jmpq push jmpq jmpq push jmpq jmpq push movzbl movsbw movzbw mov repz setb movsbw push movsbl bswap push movzbw movsbw push mov movsbw movsbw jmpq push jmpq mov jmpq mov pushq mov movsbw lea movabs jmpq push jmpq jmpq push setne repz not push mov push movzbw setns push jmpq push movzbw mov jmpq mov jmpq mov jmpq push jmpq jmpq push jmpq push jmpq mov jmpq je push jmpq lea mov jmpq push movsbw not setne push jmpq jmpq push xchg jmpq pushfq jmpq jmpq push jmpq push jmpq push jmpq jmpq push jmpq jmpq push jmpq push movsbq mov bswap repz setge movsbw jmpq inc test mov clc jmpq jmpq sbb bt mov cmp sub test cmc clc add jmpq and jmpq jmpq push jmpq jmpq push not not repz not movsbq push bswap movzbw jmpq pushfq jnp popq jmpq push movsbw jmpq mov jmpq popq jmpq jmpq movzbq movsbw lea lea mov jmpq jmpq push jmpq xadd cld pop shr pop bswap add pop bts rcr test sar popfq xchg jbe not pop setl xchg mov pop lea movzbl movsbq pop jmpq jmpq jmpq jp mov jmpq jmpq setno movabs movzbw mov mov jmpq push jmpq dec bt jmpq jmpq clc bt add jmpq jmpq mov jmpq jmpq push jmpq jmpq inc jmpq jmpq movzbq repz bswap mov jmpq jmpq push jmpq push jmpq jmpq push jmpq jmpq movsbl repz jle not push jmpq push jmpq lea movabs jmpq not push setle mov push sets mov bswap push bswap lea movzbw lea push mov movzbw bswap pushq bswap jmpq sete not not repz jmpq repz movsbw bswap movzbq push not push lea movzbl push xchg push xchg not xchg not push movzbw setnp jmpq jmpq push jle push jmpq mov jmpq jmpq rep xchg adc rol add pop or sar rcl pop clc stc bt popfq jmpq jmpq jmpq push jmpq jmpq jmpq jmpq sub jmpq popq jmpq mov jmpq jmpq push jmpq jmpq jmpq jmpq lea jmpq push jmpq jmpq mov movabs movzbw mov jmpq jmpq push jmpq jmpq jmpq dec jmpq push mov not jmpq jmpq cmp stc ja clc pushq stc test cmc stc add cmc popfq jmpq not bswap push not movsbw mov movsbw push mov lea push seta movsbw not push lea bswap lea xchg pushq jmpq movsbq push not bswap mov push xchg mov pushq movsbw jmpq push movsbw lea not repz not lea bswap push mov lea push not push setl movsbw lea mov push sets lea lea bswap push xchg not xchg push bswap xchg pushq xchg movzbw movsbq movzbq movabs movsbl mov jmpq jmpq jne push jle push jmpq repz movabs push bswap bswap movsbw not push movsbw push lea push jmpq jmpq cmp cmp cmc add jmpq jmpq mov jmpq bswap bswap bswap push movzbw not movzbw not push lea lea bswap push movsbq setne not movsbl pushq movsbl movabs mov mov jmpq jmpq push jmpq jmpq jmpq push jmpq jmpq jmpq push movzbl bswap mov repz lea movzbw push bswap push lea movsbq movzbw push jmpq jmpq jmpq rep stc shl pop or inc movsbq ror pop bt cld clc popfq jmpq push jmpq push jmpq push jmpq push jmpq jmpq movzbl bswap push setns jmpq jmpq jmpq jmpq jmpq inc bt bswap test add bt jmpq mov jmpq cmc test add jmpq rcr neg mov movzbl neg sbb inc xor movsbw bswap not jmpq mov sar shr and shld mov shr mov mov bt add test jmpq jmpq jmpq bswap movsbw movsbq push not lea push bswap movsbw push movsbl bswap setns push setle lea setle push jg push xchg setl xchg pushq jmpq jmpq jmpq jmpq pop setne movzbl mov movsbw pop xchg movsbl pop mov movzbl lea pop movzbl mov setne pop bswap setns lea pop movsbw pop retq jmpq movsbq setp xchg movabs bswap not mov not mov jmpq jmpq push jmpq jmpq jmpq jmpq popq jmpq jmpq jmpq bswap bswap not movsbw push not not push bswap movzbl push setae pushq lea bswap xchg movabs not movzbw mov jmpq jmpq jmpq mov setl push sets seta bswap bswap push bswap jmpq mov jle pushfq jmpq push jmpq mov jmpq mov jmpq jmpq pushfq jmpq jmpq push jmpq cld movzbw mov cld jmpq push jmpq push ja push jmpq bt and jmpq jmpq test clc pushq test bt add std test test cmc popfq jmpq jmpq push jmpq jmpq not lea movabs movsbw mov jmpq stc movzbl rol mov bsr stc mov bt test add jmpq push jmpq jmpq push mov movzbq repz movzbw movsbl movzbw push setne movzbw push movsbw mov mov lea push setbe jmpq movsbl lea xchg not push setge mov not push not push movzbw xchg movzbw pushq jmpq jmpq repz jmpq push setnp repz setae push movzbw not push movzbl push jmpq push jmpq push jmpq mov mov jmpq jmpq push jmpq jmpq bsr pop stc popfq jmpq jmpq mov mov bt sub jmpq dec clc rol cmp jne bt test xor jle inc cmp bt jmpq jmpq mov jmpq jmpq add jle inc cmp bswap cmc cmc stc add cmc stc bt jmpq jmpq push jmpq not movzbw seta movabs jmpq jae not not dec shld xor test bts mov clc add jmpq jmpq movabs movzbl movzbl mov jmpq mov jmpq pushfq jmpq push jmpq movabs movsbw mov lea mov jmpq bsf adc mov dec test bswap lea pop bswap ror inc pop stc xchg dec pop bsf bt pop shr cmc jmpq movsbw movsbw push setg push movzbw movsbw push movsbw lea pushq lea not xchg movabs mov mov jmpq stc test cmp and jae pushfq jmpq bswap push setg not jmpq neg cmp bt cmc add cmc jmpq setae push jmpq jmpq pushfq jmpq mov pushq jmpq jp push jmpq push movsbw repz bswap not bswap push not push mov mov push movzbl push movsbw setnp push jmpq jmpq popq jmpq jmpq mov jmpq clc lahf not or mov dec or dec inc mov test sub jmpq popq jmpq jmpq mov jmpq jmpq jmpq jmpq pushfq jmpq jb push jmpq popq jmpq lea movabs movsbw bswap mov jmpq push jmpq pushfq jmpq jmpq bsr btr mov sbb mov stc cmp add jne mov jmpq not push bswap push movzbw push xchg movzbw mov movzbl push bswap pushq lea xchg movabs mov movsbq bswap mov jmpq push jmpq cmp mov stc cmc cmc clc not jbe stc cmc not cmp cmp and jmpq jmpq movzbl push movsbw not push bswap setbe push not lea movzbq xchg push lea not push lea jmpq jmpq jmpq push jmpq push jb push jmpq pushfq jno popq jmpq push jmpq jmpq popq jmpq jmpq jle push jmpq jmpq rcr (bad) repnz lock dec shld btr movzbw add dec jmpq push jmpq movabs mov lea mov jmpq jmpq jmpq sub clc xchg test and mov mov neg sar lea shrd and sar movabs rcr movsbw lea seta add xadd ror adc mov inc or and add movzbw mov movsbw bswap inc rcl add or add bswap lea bswap stc ror inc dec bsf setl xor not add setae movsbw movzbq bt jmpq not pop xchg mov pop lea pop setbe setge jmpq pushfq jmpq popq jmpq push jmpq push setb repz setge sets push movsbw lea push not mov push xchg movsbq lea push xchg xchg bswap push mov mov mov push bswap movsbq movsbl pushq bswap not mov movabs movsbl mov mov jmpq push jmpq jmpq jmpq jmpq jmpq jmpq push jmpq movsbw mov xchg push mov push not push lea mov lea pushq lea movabs movsbw mov jmpq popq jmpq bswap bswap push bswap push jmpq jmpq repz jmpq push jmpq mov mov movsbw mov jmpq jmpq mov jmpq push lea bswap repz lea push lea movsbw push lea mov movzbw push mov seta jmpq jmpq bt add jmpq jmpq mov jmpq jmpq jmpq jmpq jmpq push jmpq jmpq push jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq push jmpq movsbw movsbl lea push movsbl js setne pushq jmpq setp xchg movabs mov bswap mov jmpq jmpq bswap lea jmpq jmpq movzbw pushq xchg not jmpq jmpq jmpq lea movsbl not push lea movzbw pushq seto sets not movabs jmpq jmpq seta bswap bswap push lea setne xchg xchg push mov setno setne not push movsbw setnp bswap push bswap not mov pushq movsbl movabs jmpq jmpq popq jmpq push jmpq push jmpq push jmpq push jmpq mov jmpq not setl push sete movzbw jmpq jmpq push movzbw push not not xchg push jmpq pushfq jmpq push jmpq jl push jmpq jmpq bswap shrd mov movsbw shld rcr dec mov jmpq jmpq mov jmpq jmpq lea mov jmpq setns push movzbl push jmpq push jmpq jmpq pushfq jmpq push jmpq (bad) negb mov stc test bt cmp add jmpq push jmpq jmpq jmpq jno popq jmpq jne mov jmpq pushq not not mov movabs movzbw bswap lea lea mov jmpq movzbw movsbw lea bswap pop jmpq push movzbq mov lea repz movsbq push bswap movsbl mov lea push mov movsbw mov push mov push setge bswap push movzbw push mov not pushq not movzbw setae mov movabs movsbl bswap mov movzbl mov jmpq clc stc stc neg jmpq push jmpq jmpq jmpq bswap lea lea push movzbw jmpq jmpq je push jmpq jmpq jmpq xchg push lea xchg xchg push bswap jmpq jmpq jmpq push jmpq push jmpq push jmpq jle mov jmpq push jmpq push mov jge movzbl push lea push movsbw jne lea push setno pushq xchg movabs bswap lea mov jmpq pop lea pop movsbw pop seto sets setb pop seto pop not bswap lea jmpq pushfq jmpq mov bswap lea mov jmpq push jmpq popq jmpq push jmpq bswap not movzbl push lea movsbl lea setge pushq bswap not movabs mov lea mov ja push jmpq push jmpq sar bts mov cmp cmp bt sub ja mov jmpq push jmpq cld jmpq popq jmpq movzbw jmpq ror mov (bad) icebp or seto rcl mov jmpq push jmpq jmpq cmp sub jmpq mov jmpq jmpq push jmpq cmp or movzbl jmpq pushfq jmpq push jmpq push jmpq mov jmpq bswap push not not push jbe not movabs movzbw push lea movsbl not push movsbw push mov push movsbl pushq jmpq mov push jp lea pushq bswap jmpq jmpq jb pushfq jmpq mov jmpq lea pop bswap movabs pop movsbl setns lea pop mov xchg pop bswap pop lea lea pop retq xor test cbtw stc cwtl cmp sub jmpq push jmpq push jmpq push setno bswap sete sets repz mov setae push movsbq seto setge movzbw push movzbw xchg push movsbw push setne push bswap movsbw push mov bswap pushq xchg movabs mov movsbl lea mov jmpq push bswap lea movzbl repz not setns mov not push bswap bswap movzbq push mov push lea push movzbw bswap lea mov push lea push jmpq push jmpq jmpq push movzbq lea not movzbw push sete not push not movsbw pushq bswap movabs bswap mov mov bswap mov jmpq mov jmpq jmpq jmpq stc test test jmpq jmpq sub bt cmc clc xor bt test xchg stc test jmpq je shrd sbb shl bswap xor setno bswap bswap not mov jmpq jmpq jmpq jmpq je jmpq jb test cmc jmpq jmpq je jmpq jmpq jmpq je jmpq xadd mov not mov bsf btr mov bts bsf adc sub lea cmp clc cmp jmpq jmpq callq bt cmp clc and test cmp cmp jmpq jmpq jmpq sub clc xchg cmp test jmpq jmpq clc test jmpq jmpq jmpq callq cmp jmpq jmpq jmpq jmpq jmpq je bt cmp cmp jmpq callq test cmc clc test test jmpq jmpq jmpq jne bsf bswap clc btr mov add movzbw or mov bt add test cmp jmpq jmpq jb movzbw bswap xchg dec cmp sbb mov btr or jmpq mov mov bswap bswap mov movzbq mov movzbq bswap movzbl movsbq movzwl jmpq jmpq jmpq jmpq je not lea movsbw jmpq bt sub clc clc test stc add stc clc add jmpq cmpw jmpq jmpq je movsbw mov stc bt stc bt test jmpq jmpq jmpq je shld lea mov test test jmpq cmovne jmpq cmp test jmpq je stc bt cmc cmp jmpq cmc test test jl je jmpq lea seto mov mov lea movzbw mov mov not bswap not mov movzbl not lea jmpq test clc add jmpq callq test bt clc cmpl jmpq jbe je jmpq je rcr lea clc mov jmpq jmpq test jmpq test jmpq jmpq callq jmpq add jmpq jb jmpq callq clc cmp clc stc and test test stc test cmp jmpq nop jmpq jmpq jmpq jmpq jmpq je sbb ror bsr mov not mov clc test cmp cmp jmpq callq clc jmpq mov clc cmpw jmpq callq xadd sar mov test sub movzbw lea mov jmpq jmpq nop jmpq add jmpq je clc test sub jmpq mov stc jmpq jmpq jne mov movsbl mov jmpq callq jmpq jmpq je clc mov bsf sar mov rcr mov mov clc sub shr sub mov sets mov jmpq setg mov xchg lea jmpq callq bsr mov test test test jmpq jmpq jmpq jmpq je jnp callq jmpq jmpq jmpq callq stc test and test cmc cmp cmp jmpq jmpq jmpq lea mov jns callq lea movsbq test mov sbb adc movsbl ror mov test test stc bt or cmc bt xor jmpq cmc bt test jmpq jmpq jb shr bts movzbl inc lea cmc test cmp jmpq je bswap jmpq sub jmpq movzbl bt stc stc stc mov bsr movzbw mov mov stc jmpq test jmpq cmc and cmc bt test clc cmp jmpq je jns inc jmpq je jmpq movl jmpq callq bts mov cmp stc jmpq callq ror movsbw mov jmpq pushq jmpq mov test test cmp test test jmpq jg movzbw mov jmpq jmpq jmpq mov jmpq je adc setns xor lea setp movsbw not mov jmpq callq xor mov shr bsf mov bsr sub mov movsbq mov mov not mov jmpq jmpq callq xchg movzbl movsbw movl not movsbl mov mov mov movsbw movzbw lea movzbw mov bswap not seto bswap mov movsbw mov bswap movl xchg bswap movl lea lea lea jle mov mov not lea bswap lea lea bswap setle lea mov setl not mov jle movl jmpq jmpq callq and sar shl xor clc clc movzbl mov clc stc test jmpq jmpq jmpq jmpq callq xor mov bts neg test jmpq jmpq je shr xor lea nopw bsr bswap neg movzbw mov clc stc jg test jmpq test jmpq jmpq jmpq xor not jmpq jmpq jmpq jmpq callq cmc inc mov clc jmpq jmpq jmpq jmpq je mov mov test test jmpq jmpq stc stc bt xor jmpq pushq jmpq jmpq callq movzbw not xchg mov not lea jmpq jne test cmp cmp sub jmpq je stc sar movzbl mov bt test jmpq not not mov jmpq callq btc mov rcl mov jmpq callq jmpq jmpq jmpq jmpq jmpq je shr adc bswap btr xor bswap not mov lea mov jmpq callq ror not sar lea cmc test jmpq js lea mov jmpq jmpq test jmpq je inc and dec xor mov movabs mov jmpq jmpq mov stc btc movsbl mov test bt test or bt sub jmpq jmpq jmpq cmp cmc cmp jmpq jmpq jmpq jmpq jns movzbw setge movsbl movzbl mov jmpq jae callq jmpq jmpq jmpq callq bswap bts xor bswap mov cmp test jmpq mov jmpq jmpq jmpq je cmp rcl add shr mov cmp cmc stc xor jmpq jmpq xadd xchg mov and sub mov test test clc test add cmc cmc add jmpq not mov jmpq jmpq jmpq jne jmpq jns not not bswap mov jb callq stc cmc sub jmpq jmpq je jmpq callq jmpq setae mov not mov setne mov jmpq jmpq mov jmpq jmpq je bsf xadd rcl bswap mov inc neg bt mov rcl or add clc mov dec add lea mov test add jmpq jbe jmpq je je bswap mov bt test jmpq jmpq callq clc stc cmp stc mov bt bt test test jmpq je movsbl mov movsbl not mov jmpq mov movsbw lea setl jmpq jmpq bt clc clc bt test jmpq xor bswap jmpq jmpq mov jmpq jmpq je test cmpl jmpq movzbw lea jmpq callq stc lea bt test stc cmc test jmpq je movzbl lea jmpq jmpq je clc cmc clc jp xor jmpq jmpq callq ror shld mov clc bt test cmp test jmpq mov jmpq xor clc jmpq movsbl mov movzbq jmpq jmpq pushq jmpq lea not setae mov jmpq cmc test jmpq jmpq callq test test jae je jmpq je cmp cmc test jmpq jmpq jne bt test jmpq jmpq callq movsbl btc inc mov shrd cmp shl sub movzbl setle mov movzbw lea movsbw mov jmpq jmpq shld setno lea stc xor jmpq callq bt or mov shr mov movzbl inc bt or bsr xor and repnz not not bswap not movsbw dec data16 hlt sar mov bt test jmpq jmpq callq not (bad) hlt add add clc test jmpq cmpq jmpq pushq jmpq callq cmp cmp jmpq jmpq cmp bt test jmpq jmpq callq setns lea jns callq jmpq jne movsbw lea bswap movsbq mov jmpq je jmpq jmpq jmpq callq jmpq jmpq jmpq jmpq callq stc test add jmpq jmpq jmpq callq movzbw jmpq jbe btc rol btc not lea cmp sub jmpq cmp clc test jno je clc cmp cmp bt sub jmpq je clc xor sar stc mov cmp jmpq jne test test jmpq je movzbq shld bswap bsr sub bswap mov jmpq jmpq je cmp shld movzbw mov clc cmc jmpq callq and bsr xor lea movsbw movzbw mov jmpq mov not mov jmpq mov jmpq ja je test cmp cmp xor jmpq cmp mov jle stc bt stc cmpw jmpq je cmc cmp test clc sub jmpq callq xchg bts xor cmp mov and test mov cmp clc jmpq jmpq jmpq callq jmpq mov jmpq jmpq jmpq jmpq cmp jmpq jmpq nop jmpq jmpq callq bt jmpq jmpq je bt jmpq jmpq jb setb bswap not dec dec or mov shl bts or bswap inc or mov xor adc rol test add sbb sar sub jmpq callq mov mov cmc jmpq jmpq mov jmpq je and sub mov not movsbl setae mov jmpq je jmpq callq bswap cmc sub not mov jmpq cmovns test test jmpq je cmc cmc jmpq je shr not shl test mov cmp stc test jmpq test cmp test jmpq mov jmpq jmpq je not sbb neg xchg mov test rol rcr shr mov lea mov bt clc stc add setno ror mov jmpq je jno mov setnp btr sbb bsr mov cmc rol add bsf lea clc stc stc test cmp jmpq jmpq movsbl bswap mov jmpq cmp jmpq je cmc jmpq mov bswap movzwl jmpq jmpq jmpq jmpq not mov jmpq je sar rcr mov cmp jmpq jmpq callq jmpq je shr neg bsr cmc lea cmc sub bswap mov bswap movsbl mov jmpq lea movzbw mov jmpq cmp jmpq cmc test stc test jmpq stc cmc test jmpq jne not lea movsbw mov jmpq callq bts inc mov cmc clc test stc test jmpq callq rcl mov test bt test jmpq lea setbe lea lea lea not not movsbl lea jmpq jmpq jmpq callq jmpq xchg jmpq jmpq jne not jmpq jb sar cmc adc cmpb jmpq mov jmpq jmpq cmp jmpq jmpq jmpq jmpq jmpq movsbw mov bswap bswap movzbw movzbl mov jmpq jb jmpq je bswap jmpq jo jb bswap movzbw mov jmpq test jmpq callq jmpq callq add bt xor mov stc jae cmp test jmpq cmp test jmpq test shr mov test test jmpq jmpq xchg mov movzbl movzbw not mov jmpq movsbl bswap lea lea bswap not lea jmpq je bswap mov test cmc test jmpq jmpq je jmpq je cmc cmpl jmpq pushq jmpq lea movsbq bswap lea jmpq callq jmpq callq mov bswap movsbw lea jmpq jmpq nop jmpq bt bt test jmpq jb seta bswap movzbw dec dec mov cmc shld lea mov xadd or bsr or dec stc mov or bts add xadd ror inc xor xor clc bts sub mov btc repnz bswap movzbq movsbw not inc dec bsf sbb bt neg mov test cmc stc cmp test jmpq not mov jle callq jmpq jne xor inc clc mov clc mov stc cmc bt add clc cmp bt add bt stc cmc bt cmp jmpq jmpq callq bt stc and clc jmpq callq shld bsr jmpq jmpq jmpq jmpq bswap movsbw mov jmpq jmpq je shl movsbl sub jmpq mov mov jmpq clc add jmpq jmpq je mov lea jmpq not lea mov jbe mov jmpq jmpq callq cmc stc cmc stc test jmpq jmpq callq add shr xor lea cmp stc test jmpq cmp add bt cmp cmp add not movzbw setns mov jmpq jmpq callq not mov xadd movzbw mov shrd add or rcl sub jmpq jmpq jmpq jmpq bt test jmpq nop jmpq je and adc sar bts mov clc stc test jmpq cs jg ss xchg cmp sbb addr32 push fistpll xor xor rex.WRX jno jge es and repz jno mov std clc xor es (bad) (bad) push rex.W fs pop add and xchg sbb rex.WXB mov (bad) test jrcxz (bad) cmp stos xchg mov int xchg cmp xor pop adc push mov (bad) pushq cmc sbb movabs (bad) pushq icebp cmpw fisubr jae rex.WRX ja xlat rex.RX test and xchg fstl in repz rex.W outsb in (bad) movabs fildll andl mov cld sahf sarb (bad) in sub xchg jl sub jo add gs mov int loop sub jo add gs add fadds insb xor mov sbb jge (bad) leaveq in int3 push outsl add mov fistpl (bad) clc (bad) and jp lock cmp retq (bad) (bad) xor je rex.RXB mov cmc fs scas and (bad) pop iret iret lock test test xor cwtl sub mov (bad) pop jo add mov (bad) (bad) mov mov repz fwait push lock (bad) movsl rorl xor (bad) cltd (bad) lock mov xchg test sub adc (bad) and jb jo (bad) movslq add sbb (bad) xchg fwait sbb pop in (bad) mov rex.WRB ljmp lahf (bad) test adc mov push (bad) mov ficomp xchg mov ds int3 pop sbb rex (bad) movabs add sub pop popfq or mov sub test and mov cli pop fidivl mov orl loop (bad) addr32 and mov mov and retq xchg pop push xor retq push mov mov rex.WRXB cmp mov pushfq (bad) rex.R cltd rex.RB xchg add stos ds (bad) (bad) inc rex.RX or rex.WB and (bad) (bad) (bad) (bad) jmp pop stos movabs mov xchg xor and mov and sbb xchg (bad) movabs mov mov lods psubw (bad) xchg loope add adc push jne cmp pop cltd movsb lock js sti cs fisub sub ss test notb (bad) stos xor scas cmp imull rolb mov lret jbe data16 in sub (bad) movslq movl sub rcll mov and pop rex.W int jno mov cwtl mov rex.WB (bad) cs jns rex.WX or pop jle xor test jmpq jne shl mov stc bt cmc stc test jmpq mov not lea mov jmpq je dec cmp bsr cmc mov jmpq xchg mov clc adc mov cmp test test jmpq jmpq jmpq nop jmpq or test mov mov test bsr clc mov rcr shl shld or cmc and ror shr sub shr repnz lea not movsbw not lea movzbw dec movzbw shld btc mov test cmp cmc test jmpq jmpq je test cmp test test jmpq callq and cmc rol sbb mov neg and ror bswap xor shrd or test data16 repnz bt rcl repnz bts dec not and sub lea stc sar inc jmpq stc mov cmc bt bt add jmpq jne bsf adc stc jmpq callq movsbw xchg movzbl mov movsbw bswap not mov mov jmpq jmpq je jmpq jmpq mov lea jmpq callq clc ror mov cmc bt test stc cmp jmpq callq jmpq jmpq cmp jmpq mov jmpq je clc test stc test xor jmpq jmpq cmc cmp test jmpq je clc cmp bt clc sub jmpq mov movsbw setb mov jmpq jmpq je jmpq jmpq jmpq je jmpq mov xchg lea lea jmpq pushq jmpq jmpq callq not setbe setnp lea mov movzbl jmpq jmpq jmpq callq clc test jmpq jne cmc add test mov jmpq callq jmpq je bswap movzbw not mov jmpq lea mov mov movzbw setbe mov jmpq callq clc not rcl mov sar xor rcl or data16 repnz rcl cmp not mov bt shld cmp repnz sub inc stc not mov lea bswap mov bt clc stc sub jmpq callq and mov cmc bt cmc bt test jmpq jmpq test cmp jmpq je test test cmp jmpq je bt or cmp mov clc test jmpq movsbw mov lea not movsbl movsbl mov movzbw mov bswap mov jmpq jmpq nop jmpq callq cmp test clc clc test jmpq je (bad) icebp dec jmpq callq cmc jmpq cmp test jmpq mov movsbw jmpq jmpq jmpq je bsr cmc or not mov xor adc btc mov rcl and lea bswap movzbq not mov mov bswap bswap mov jmpq callq setae test not shrd mov rcl movzbl dec test cmpq bswap movabs bswap not mov jp je bswap mov movzbw not mov jmpq jb bswap mov test movsbl and btr mov movsbw neg ror mov bts bts shld stc mov sbb lea ror lea sub movsbw inc add movzbw adc mov cmp ror mov bt rcr or shr add stc lea movsbw bswap mov bswap sub shr add mov test cmp add jmpq not bswap jmpq jmpq mov not movsbw mov not setne bswap seta mov jmpq je clc cmc cmp jmpq jmpq je jmpq test jmpq jmpq mov jmpq setge bswap bswap mov jno callq cmc jmpq je test test stc cmp ja je xadd sar mov btr cmp mov bsr ror mov clc jmpq test jmpq not mov jmpq callq cmc sub bsr mov stc cmp bt stc test jmpq jmpq callq not setge jmpq test bt cmc add cmc add jmpq callq jmpq add callq jmpq jmpq jmpq test jmpq callq rol shrd sar mov bt clc test jb je xadd jmpq jmpq jmpq cmp xor jmpq pushq jmpq jmpq jmpq jmpq callq jmpq jmpq jmpq jmpq pushq jmpq jmpq callq add bsf xor bswap jmpq jmpq jmpq jmpq bt jmpq jbe stc xadd mov stc mov bt cmp jmpq sub movsbw add data16 hlt (bad) jmpq mov inc mov cmp bts mov clc stc cmc test add cmc test cmp sub jmpq movl jmpq add and xor test sar mov jle cmp add not and or mov clc jno add clc add clc test cmp add seta mov jmpq jmpq jmpq je shl sar seta sub bswap bswap bswap mov jmpq jp callq sub clc dec bt mov sar stc sbb mov clc cmp clc cmp xchg bt jmpq jmpq jmpq je test cmp shld lea xor lea jmpq je xchg not rcl mov shr btr mov xadd jmpq jmpq je stc cmc cmc cmp jmpq jmpq jmpq jne setg add lea movsbw setno lea jmpq mov not jmpq cmp cmp ja je movzbl mov jmpq je bt bsr lea rcr mov jmpq jmpq jmpq callq jmpq jne not mov mov bswap jmpq jmpq callq bt cmpb jmpq jmpq jmpq not lea mov mov xchg not mov bswap bswap not mov jmpq je movzbq btc movzbw mov bt cmc test jmpq je movsbq shld neg dec mov ror cmc mov bsf sub rcr mov shrd xor lea setns lea jmpq jmpq lea jmpq je neg xadd shr sbb mov mov mov btr mov test add rcr or shl mov mov clc bt jmpq cmp test jmpq je lea not bswap not mov jmpq je cmp stc clc xor jmpq callq cmc jmpq jmpq stc cmp test jmpq callq dec bswap rol mov xor sub lea bswap xchg mov bswap movzbl mov movsbl mov jmpq callq dec lea rcr (bad) cmc mov stc test clc bt cmp jmpq callq lea xor shrd mov bt jmpq jmpq test test jmpq jmpq pushq jnp pushq jmpq bswap mov jmpq callq add shl sub mov clc jmpq jne jmpq callq not jmpq bswap mov jmpq je movsbw bswap je mov jmpq lea jmpq clc jmpq je test cmp jmpq callq bswap cmp mov clc stc stc stc test jmpq jmpq pushq jmpq dec movsbw mov sbb sub or shr add mov bts mov test and test add clc not movsbw sub bsr mov clc shld not sar repnz movzbl not mov not inc dec bts xor ror mov jmpq callq jmpq jne jmpq add jne movzbw movsbw mov jmpq jmpq je jmpq jmpq jmpq jmpq je test stc sub jmpq nop jmpq je bsr inc stc rcl xor not setne not movsbl mov jmpq jmpq setne mov jmpq je bswap not jmpq jmpq jmpq jmpq jmpq add and adc (bad) icebp mov cmc stc clc add jmpq mov mov jmpq callq setbe movsbl not lea lea jmpq jo mov movsbw not bswap mov jmpq cmp jmpq jmpq jmpq lea movzbw jmpq callq jmpq bts movzbw and bswap mov movsbl not lea mov mov jl callq lea bt setbe and lea test test jmpq callq movsbq movzbw movsbw movsbw lea jmpq je stc rol rcr shl xor lea mov mov jmpq jmpq jmpq bswap not bswap lea jmpq callq bsr sbb sar mov inc mov bt test or jmpq callq shld sub dec cmc mov cmc clc jmpq mov jl callq stc clc bt cmc test jmpq callq stc adc xor bts mov cmc bsf mov bsf test movl bswap movzbl ror add mov shrd mov data16 lock mov and shrd adc mov stc test jmpq jmpq mov jmpq je cmp stc stc cmp cmp jmpq jmpq jne cmp shld rol mov test btr movzbw ror mov xor bsr lea cmp sub neg xor add movsbw movsbq bswap mov jmpq jmpq and movzbq not mov jmpq jmpq callq jmpq callq jmpq jmpq callq stc test cmp bt sub jmpq je jmpq callq clc bt cmp test jmpq callq bswap mov jge callq movsbw lea lea movzbq not sets lea jmpq test test jmpq cmp jmpq jb bswap mov movsbw dec sbb xor bt mov shr xchg lea and or bt mov cmc movsbw add bsr add bts rcr sub btr mov xor bt btr rcl repnz movsbl inc not jmpq jmpq callq rol stc (bad) hlt add mov shrd dec cmc or mov jmpq jmpq jne btr cmc movsbw mov jg add mov neg shld mov rcr jmpq cmp stc test jmpq jmpq stc test jmpq jmpq callq lea not lea not jmpq callq jmpq mov jmpq mov not mov jmpq jmpq cmc cmp cmp cmp jmpq jmpq clc test xor jmpq je jmpq stc stc bt xchg cmc jmpq bt test mov mov movzbl test jmpq je bsr xor rol mov bt stc test jmpq jmpq jmpq jmpq mov jmpq je jmpq je test shl bsf sub setl mov jmpq jmpq nop jmpq je jmpq clc test add stc cmp sub test jmpq lea xchg sete mov bswap mov lea bswap lea mov jmpq jmpq jmpq repnz movzbw dec not dec mov not jmpq callq clc ror clc mov bt cmp jmpq jmpq callq mov bswap lea jmpq jne stc test xor jmpq jmpq lea movsbw setb mov jmpq jmpq dec jmpq mov jmpq jmpq setg mov lea lea jmpq jmpq callq jmpq bt test jmpq je bt mov test jmpq je and btr adc sub lea lea jmpq callq bt rcr jmpq jmpq mov jmpq stc add mov rcr sub mov stc add add lea ror mov bt stc add clc cmc add cmc bt mov jmpq jmpq jmpq jmpq jmpq not lea mov jg nop jmpq btr rcl mov mov jmpq callq bt test jmpq je add xor mov movzbw mov jmpq jbe jmpq jb movzbw movsbw dec rcr not mov add mov not or stc mov bswap or cmp shl dec cmc bsf sub ror bts shrd sub mov clc repnz dec not movzbl jge movzbw dec or jmpq callq test bt test test cmp jmpq je test clc and movzbl bt test test jmpq bt test jmpq callq ror rcl bt bts mov jmpq dec jmpq callq movsbw test jmpq callq xor lea mov test cmp cmc mov cmc cmc movl cmp clc bt mov bswap movsbq mov clc cmp jmpq jl callq jmpq pushq jmpq jne not bts sbb and lea stc add test xor jmpq jmpq test jmpq jmpq callq bswap bswap xchg xchg mov setle setle xchg mov setns mov jmpq jmpq jb not bswap inc dec jge rol shr mov bt movsbl and or bts xchg mov mov lea xadd shl add rcr xor shld bswap shl mov shr repnz dec not not bswap jmpq jmpq callq stc clc cmp stc test jmpq je test jmpq je cmp cmp clc bt cmp jmpq jmpq callq and btc neg mov bt stc stc test test jmpq callq not bswap lea lea not movsbw mov lea jmpq callq sbb mov clc bsf jmpq mov jmpq mov movsbw jmpq neg mov ror stc add bsf or shrd jmpq jb jmpq je movzbl jmpq je jmpq callq neg mov test btr jmpq cmp jmpq jmpq callq xadd xchg not sub jmpq jmpq callq stc jmpq jmpq callq jmpq clc test jmpq jne shl mov bt mov test cmc jmpq jmpq movzbq mov jmpq jmpq jb lea lea movsbq dec clc inc movzbl mov jmpq callq dec or mov jmpq je bt cmp jmpq je bts shl sar and movzwl inc xor movsbw movsbw movzbl not mov jmpq jmpq jb jmpq je cmp clc clc cmc cmp jmpq jmpq jmpq jmpq add stc clc add cmp test cmc add not setnp mov jmpq jmpq inc movzbl not bswap not dec rex.B hlt (bad) shl bswap mov stc jmpq je jmpq je jmpq callq jmpq jmpq callq mov setno lea not movsbw lea jmpq jmpq callq mov btr test cmc lea cmp jmpq clc cmpb jmpq add bt cmp bt cmp jmpq jmpq jae jmpq jmpq callq jmpq je cmc mov jmpq jmpq not inc dec sbb sar mov cmc test jmpq jne movsbw jmpq jmpq mov jmpq jmpq jbe jmpq cmc stc test jmpq jmpq bswap not jmpq jmpq jmpq jmpq mov mov jmpq bt test sub jmpq je stc cmp jmpq test jmpq jne not mov jmpq jmpq je stc inc inc xor jmpq je setae not not mov jmpq mov mov jmpq movsbl mov not jmpq je movsbl lea bswap bswap mov jmpq jne cmp stc lea neg lea sub movzbw mov xchg setae mov lea movzbw movsbw mov jmpq sub mov not rol add xadd sub shr shl rcr mov data16 hlt add bts repnz jmpq mov jmpq jmpq jmpq nop jmpq callq test cmp stc clc test jmpq jmpq jmpq callq bt cmp test jmpq je clc stc cmc clc cmp jmpq je cmc setl bt xor not movzbw lea movsbl mov not bswap movsbw mov mov jmpq mov jmpq jmpq jnp callq shr btc test xor bswap not mov jmpq jmpq callq movsbl lea jmpq jmpq jmpq jmpq mov jmpq callq bswap rcr movzbw mov test bt cmp cmp jmpq callq neg mov ror rol stc mov movabs stc or lea sub movabs repnz movzbq bswap not not bswap not inc dec movzbw movzbq mov jmpq incl jmpq js je jmpq test cmc cmp jmpq jmpq callq sub rcl lea cmc test jmpq setne movzbl mov mov jmpq dec jmpq callq jmpq nop jmpq jmpq je ror mov xor (bad) cmc bts rol mov not lea bt clc cmp jmpq jne adc rcl mov stc rcr shld bts mov cmc xchg bsf xchg mov and bts add shl rcr test bsr lea xor bsr movzbl data16 icebp (bad) mov clc jmpq jmpq mov mov jmpq jb jmpq jmpq pushq jmpq jmpq jmpq stc stc test jmpq mov not lea jmpq jmpq jmpq je neg sar mov stc bsf shrd shrd mov cmp rcr mov mov jmpq jne clc jmpq jmpq jmpq jmpq callq sar not mov shl bswap inc cmpq bswap movsbq not not mov jmpq callq bt mov clc bt test jmpq jbe jmpq mov jno movl jmpq callq jmpq callq btc sub inc rcl lea stc jmpq callq stc jmpq je movzbw cmc mov mov xchg mov shrd inc inc sbb mov bt jmpq stc clc cmp jmpq mov jmpq je bsf xchg mov dec bt mov xor xor test shr and mov bswap lea bswap mov seto jmpq je movsbq mov mov jmpq callq test cmc cmp cmp jmpq xor jmpq jmpq jbe dec bsr ror mov setb xor clc test mov bt bt bt cmc xor jmpq jmpq callq cmc cmc cmc and cmp jmpq mov jmpq mov movsbl lea jmpq callq test cmp jmpq jl jmpq callq rcr add inc shld mov xadd xor shl shrd or xor mov xadd bswap shr repnz stc shl not ror lea sub shr btr mov cmc cmc xor ja callq not bswap movzbw xchg mov sete xchg movzbw setp mov not mov jmpq jmpq callq bt cmc test jmpq sete mov ja not lea movzbl lea mov setg mov jmpq stc cmp cmpl jmpq rcl xor shld movzbl test rcl movzwl bts cmp shrd bsr mov dec bsf mov or rcr add bsf shl test bsf not shr lea clc jmpq jb not dec dec not sbb mov test and not or movzbq lea not mov lea bsf shr add bsr sub clc bt mov rcl test sbb repnz inc not bswap movsbl not movsbl dec rol rcl adc mov test clc stc test test jmpq jmpq cmc add cmp cmp bt clc add test add test cmc bt add cmc cmp add clc add cmp test cmp jmpq jmpq jmpq cmc test jmpq jmpq jmpq jmpq mov jmpq xor jmpq jmpq je clc jmpq callq not bswap xchg mov movzbw not setg mov jmpq jmpq jmpq callq cmc clc cmc bt test jmpq je rol rol sub movzbq mov mov jmpq mov jmpq jmpq jmpq callq test bts lea mov sbb shr bswap bswap mov cmc test jmpq jmpq jmpq jmpq jmpq jmpq jne bsf lea test ror test bt mov rcl sub adc mov sub add xchg mov clc neg xor movzwl cmc jmpq callq clc and mov shrd btr sub not mov movzbw movzbw mov jmpq movsbw lea movzbw mov jmpq jmpq jmpq callq setge clc bswap shrd mov rcl stc xor mov movzbw movzbl mov not movzbw mov mov jmpq jl jne not bswap mov jmpq jmpq jmpq jmpq jb jmpq bswap mov jmpq callq test clc bt test jmpq jb jmpq jb jmpq bt bt shl jmpq je xchg mov shld rol rol mov not mov jmpq jmpq je lea rol mov test mov seto and mov cmp bswap bswap shr xor movsbw movsbl mov jmpq bt test jmpq callq jmpq callq stc test bt cmc test jmpq jbe jmpq je dec inc mov stc cmc cmp clc test jmpq je rol lea and sub xor movsbq jmpq jmpq je bswap mov jmpq jmpq callq jmpq callq lea lea lea jmpq jmpq jmpq callq sub dec (bad) icebp add btc sub sub mov movzbl lea mov movsbw movzbw not not mov jmpq jmpq jne mov jmpq jmpq je xadd shl rcr dec mov xor add sub mov not jmpq jmpq not mov test cmp jmpq jmpq callq movsbw lea mov jmpq jmpq jmpq jmpq jmpq jmpq jmpq callq dec stc test rcl xor jmpq jmpq bt mov neg bt bts xor jmpq je shrd mov cmc test test jmpq lea jmpq jmpq callq cmc cmc test clc cmp jge jmpq jmpq mov jmpq jb clc cmp jmpq jmpq jb jmpq mov jmpq add je jmpq pushq jmpq je clc cmpl jmpq callq test test jmpq callq movzbq bswap lea jmpq jne shld mov cmp test jmpq jmpq mov mov jmpq callq xchg bswap rcl cmp mov bt xor seto shl movsbl inc or or sub mov sub cmp shrd repnz add not sar cmp lea cmp rcl mov clc cmp xor jmpq jmpq jmpq mov lea mov movsbl movzbq movsbl lea mov not movzbq lea mov mov jmpq pushq jmpq jmpq bt stc clc stc xor jmpq stc cmp jmpq callq bts xor mov cmc cmc stc stc test jle je movzbw mov seta mov movsbw mov jmpq stc bt cmp test jmpq jmpq je jmpq bt test cmp jmpq jb bts clc clc mov adc bt test xor mov rol btr add mov stc mov bt shr lea shld xadd ror lea mov test add inc lea stc add mov rcr data16 repnz xadd mov movsbw ror cmc add stc shl mov bts movsbw rcr mov clc jmpq jmpq jmpq mov xchg bswap mov bswap mov movzbw not mov lea not lea jmpq je cmc test stc cmp jmpq callq bswap mov jmpq callq cmp test jmpq jmpq jmpq callq clc test jmpq jmpq jmpq lea mov jmpq jmpq jmpq jmpq jmpq bt cmp jmpq jmpq je jmpq jmpq callq rol or dec mov btc mov cmc bt clc cmc test jmpq jmpq je inc test movzwl bt dec sub mov bswap mov mov mov jmpq je jmpq jmpq add pushq (bad) mov rex.WRX js orl xor xor popfq (bad) sbb sbb add add je cmp sub jmpq nop jmpq bswap mov lea movsbw mov mov setae setl movzbl mov jmpq mov jmpq jmpq jmpq jmpq test jmpq jmpq jmpq jl je xchg not mov movsbl jmpq jmpq jb movsbq lea xchg dec inc mov shr stc rol bsf or bsf shld sub jmpq callq stc cmp jmpq cmpb jmpq callq not mov test test cmp jmpq movb jmpq mov bswap mov jmpq je jmpq jmpq mov jmpq jmpq cmp cmp xor jmpq jmpq cmc add clc mov bt clc cmp add not dec and mov test test add stc jmpq jmpq jmpq clc xor movsbq sete jmpq cmovne jmpq jmpq mov jmpq je movzbw lea not sub xchg mov jmpq lea mov lea movsbl mov mov mov jmpq jmpq jmpq jmpq cmp jmpq je jmpq mov jmpq mov jmpq jmpq xchg dec sbb mov movsbw or shl bswap or bswap shl mov clc inc add ror btr sub adc mov sar and shr lea repnz movsbw not mov movzbw dec mov movzbw mov movabs mov jmpq callq movzbw movzbw movsbq mov jmpq jmpq cmp mov clc cmp jmpq je btr btc lea adc inc btc cmp xor movsbq bswap mov setne mov bswap movsbl mov mov jmpq jmpq mov jmpq callq lea mov inc mov jmpq callq bt clc cmp and clc clc cmp jmpq jmpq not setb mov jmpq cmp cmp jmpq sete lea jmpq jmpq callq movzbw jmpq callq jmpq jmpq jmpq jo jb bswap bswap incl jne bswap mov mov jbe callq jmpq callq jmpq jbe jmpq cmc cmp cmc cmp jmpq movzbq bswap mov sets movsbw lea bswap mov jmpq je bt xor bswap jmpq not mov jmpq callq cmc cmp cmc stc cmpb jmpq incl jmpq jmpq je btc bsr shl sub setae bswap mov jmpq jmpq bswap movsbl mov jae mov lea setnp not mov jmpq jmpq callq jmpq jmpq callq je bt xor jmpq jmpq jmpq jmpq callq cmp cmc jmpq jb bswap inc inc incl bswap mov jmpq je stc test cmc stc cmp jmpq callq stc cmc jmpq jne stc bswap dec mov cmc bt stc sub jmpq mov mov jmpq jmpq callq setnp lea mov jmpq jmpq cmp jmpq callq cmp clc mov stc bt cmpq jmpq jne add mov clc jmpq jmpq jmpq test jmpq jo jb bt cmc jmpq callq jmpq jb bswap inc dec not mov mov stc bsf or sub mov not xadd add ror shr movzbw xor shld data16 hlt (bad) mov sar bsr shld repnz inc movzbw dec lea not dec movzbw movsbw dec or mov clc test bt cmp test jmpq jmpq jmpq jmpq callq clc neg cmp sar mov bt jmpq jb dec bswap lea bt cmp jmpq jmpq callq jp mov bswap not lea je callq dec add inc mov jge clc bt test test jmpq callq bt clc jmpq callq inc mov clc bt jmpq jmpq jb jne bsf mov clc cmp jno jne shr xor ror ror add jmpq test jmpq jmpq cmc cmc xor jmpq jmpq jmpq jmpq je test cmpl jmpq test jmpq jmpq movzbw dec bt mov add or bt bswap shl mov bsf add btr xor bts sub neg sub mov stc bt repnz jmpq callq shl btr xor sets mov mov jmpq jmpq je jmpq je mov sbb setne mov btc shrd mov test btr (bad) testb push cmp test jmpq callq bt jmpq jmpq jmpq jmpq jmpq mov jmpq callq clc rcr not add mov jmpq jmpq je jmpq callq dec mov test clc stc mov bt movl clc stc stc mov btr shr (bad) lock mov cmp stc mov bt jmpq mov jmpq jmpq mov mov mov lea jmpq callq rcl neg btc mov jmpq jmpq jmpq callq bts mov cmc cmp test jmpq je jmpq add je bt cmp jmpq callq cmp test and jmpq jmpq lea movsbw mov lea movsbl mov movzbw mov mov jmpq jmpq cmc test cmp jmpq je jmpq jmpq je shld mov bt stc bt jmpq je xchg mov bswap mov not xchg mov movsbl mov jmpq callq jmpq jb jmpq jmpq callq movsbw movsbl jmpq je bsf mov jmpq jb neg shr rol neg lea jmpq jmpq jmpq jb lea jmpq je jmpq callq stc test jmpq mov lea movzbw not mov mov jmpq jmpq jmpq jmpq jmpq je data16 lock mov dec shld (bad) icebp or and mov add and neg lea clc stc bt cmp jmpq jmpq je test jmpq jmpq jmpq jmpq jmpq jnp callq movzbw movzbw shld mov data16 lock (bad) icebp add or repz btc rcr mov test clc stc add test clc clc bt sub clc add jmpq movzbq mov jo callq bsr movzbl shrd mov rcr mov bt bt sub jmpq je jmpq clc xchg bt bt bt test jmpq jmpq cmc stc test jmpq jmpq jle jb adc shrd cmp mov rol adc mov bsf mov and not xchg neg mov add mov test lea neg bswap lea (bad) testb loopne fiaddl mov jmpq add not mov jmpq je cmc test jmpq jmpq je lea not lea jmpq ja callq not jmpq xchg jmpq callq rcr stc clc jmpq jmpq mov jmpq jmpq callq cmc test jmpq callq movsbl movsbw movsbl movzbl lea lea lea jmpq je shr shr sbb mov bt jmpq pushq jmpq lea not not not not mov lea mov jmpq je jmpq mov jmpq callq cmc jmpq ror rol bsr nop movzbw cmc not setg xor setnp mov rcr test dec adc mov stc or add lea mov jmpq je jmpq mov bswap mov bswap mov mov jmpq je inc rol bt xor not mov jmpq je btr btr test bsr mov btc add sar mov shrd and bswap movsbw movsbw movzbw mov not mov jmpq callq lea seto btc shr mov clc test jmpq jmpq callq mov lea mov lea sete movzbw mov mov mov movsbw mov jmpq cmp bsr neg movzbq mov clc test test jmpq jne movzbw cmc mov inc rol xadd cmp mov rcl or bt sbb mov xchg add shl lea clc mov cmc add bt test stc add jmpq mov setne mov mov jmpq not jmpq js movsbq movzbq movzbw not mov jmpq mov jmpq jmpq jmpq jmpq je bsf cmp data16 icebp or leaveq mov jmpq stc bt test jmpq xor btc inc repnz jmpq jmpq je test bt jne cmp jmpq cmc test jmpq jmpq xchg bswap bswap bswap mov jmpq callq jno lea jmpq jmpq je dec mov not neg mov test btr mov rcl shl mov test add jmpq movsbw jl lea movzbw mov jmpq bt and bt cmp jmpq jmpq jmpq jmpq (bad) jp rex.RXB jg jbe test fwait sub xor (bad) pop xchg ss (bad) in (bad) leaveq (bad) jl out mov and movsbl (bad) mov mov sbb rex.RX jno f2xm1 and pushq sahf pop fadds pop fildl (bad) or and sub or stc repz add or jrcxz fldcw sbb cltd cld movslq int rex.WB ss mov mov push (bad) mulq adc (bad) mov rex outsl loopne add pop (bad) cwtl jge insl movsb fstpl and xlat (bad) add (bad) movabs scas cmpsl xchg add push (bad) rclb mov pop mov (bad) (bad) or pop push leavew mov xchg hlt sbb mov or (bad) add pushq add jmpq je bt cmc cmp jmpq callq cmp stc clc sub stc test xor clc jmpq jmpq jmpq jmpq je cmc test bt cmp jmpq jne jmpq callq cmc bt cmpq jmpq callq cmp bt cmpb jmpq callq jmpq js not lea mov mov jmpq jmpq jmpq shld mov bt sub jmpq callq clc movsbw rcr mov cmp and cmp bswap sub bswap jmpq jmpq callq mov movsbl movsbw movzbw mov jmpq callq jmpq jmpq jne jmpq jmpq stc cmp jmpq callq jmpq callq mov ror or mov clc test jmpq jmpq callq ror mov jmpq callq rcr mov shl mov clc cmpq movsbl jmpq jmpq jb jmpq jne jmpq je bts shld bsr sub mov bswap mov lea bswap mov jmpq jmpq nop jmpq callq sbb mov not shrd sub sets movsbw sets bswap mov jmpq jmpq mov clc test jmpq jne sar shrd bt neg mov test cmc jmpq jne stc test jmpq callq cmp add mov btc lea jmpq cmovns stc cmc test jmpq nop jmpq jmpq jmpq movzwl cmp cmp jg jb js not mov bswap mov jmpq jmpq jmpq je sbb bswap nopw ror neg mov stc cmp jmpq jne ror data16 lock lock mov clc clc stc bt test jmpq jmpq je movsbw movzbw not mov mov jmpq jmpq je jne cmp jmpq callq cmp lea sub not dec mov dec mov jmpq jmpq jbe rcr movzbq mov cmp clc cmp stc cmpw jmpq callq test test jmpq jmpq je shrd movzbw or mov jmpq jmpq je clc cmpl jmpq test jmpq callq stc jmpq jmpq callq ror sub bsf adc lea jmpq jmpq callq bsf shld not shrd mov btr data16 lzcnt cmpq not mov jmpq jmpq dec jmpq callq sub rcl mov or sub and rcl mov cmp test jmpq mov jmpq je rcl sar xor mov ror rex.W (bad) mov movsbl dec rcl and movsbq not mov mov movzbl movzbw mov jmpq movsbw lea bswap mov not mov not movzbw movsbl movzwl mov movsbw not mov jmpq callq jmpq clc clc add stc mov cmp cmp jmpq js jmpq jmpq dec jmpq rex.WX pop lock (bad) sti int3 rex.WX hlt fldl rex.WRX mov (bad) mov ds (bad) (bad) (bad) jle add cmp and addb addr32 push pushfq ficom jge (bad) sub sub or (bad) pop jge rex.WRX cmp cmp push pop test pop (bad) cli cmpsl sbb jle (bad) out pop loope push or rex.RB push lea rex.W mov sub jmpq pop leaveq jb adc jg xchg sub (bad) loopne adc test fbld cmp add stos or lods movsl (bad) icebp (bad) cld outsb adc mov fstpl rex rex.WRXB je movabs movslq sahf or rolb xchg jo mov rex.B cltd jnp mov shlb mov hlt jno sahf roll sti and adc sbb push (bad) pop rex.WRX mov es sub mov xchg rex.XB pop (bad) jrcxz movabs (bad) rcl pushq data16 cmc mov mov mov jmp lahf (bad) (bad) push test mov mov stos push jb test push smsw pop add pop push adc lea cmpxchg cli and (bad) rex.WR notl rex.WRB data16 add and push fist xchg jns movabs mov jbe cmp in add mov pop rex.WRX pushfq sub (bad) cld adc mov (bad) cmp cli nop (bad) sub (bad) pushq sub xor lahf in mov rex.WRX iret (bad) mov and (bad) ja icebp addr32 lods push (bad) jl (bad) (bad) jbe movabs jmpq ficoml mov push add (bad) cmpsl fs (bad) ja (bad) sbb jns push mov loopne repnz or xlat test or int3 mov (bad) or movslq iret jg movabs push mov sarb jg xchg xor imul imul rep add (bad) (bad) js out andl xchg scas rex xchg xorl adcl jb push jne retq or cmpsb ds cmpsb (bad) loope adc add rcrl imul (bad) bswap (bad) notl push out rex.WR pushq sarl mov (bad) or sub rex xor iret movl sbb (bad) fcoms test in and enterq in sbb jle mov or (bad) cmp (bad) loopne movslq lcall and mov xchg xor imul cld lea xor add (bad) insb push rex.RXB pushq push pop out xor vpaddb loop push mov mov add jb mov rex.R test (bad) adc rex.XB cli adc fsubrs push sub imul (bad) out or push mov movabs rex.X push addr32 (bad) int3 (bad) nop sahf fmull je lods imul clc fstps cmp ja (bad) cmp movslq sahf adc (bad) sub loope rex.WB mov loope divl rex.WRXB addb (bad) lock mov or jb cmpsl scas cmpsl stc (bad) enterq rex.X (bad) test (bad) (bad) rex.WXB cmpb jbe mov lock bswap mov fldt add cmp (bad) cmp jo mov clc movabs xor mov test mov mov sbb es pushq fbstp mov rex.R rclb out xor movslq (bad) (bad) movabs jb movabs pop int3 addr32 sbb gs movabs jnp fsubrs jns (bad) fisttp xor repz repnz rex.X in int jle mov fdivr and or es out (bad) stos xor jge push mov rex.WR je push repz jnp hlt sub mov mov jno (bad) xchg out pushfq jrcxz sub rex.RXB pop fidivrl in in (bad) (bad) (bad) xlat mov and lahf clc (bad) pushfq stos (bad) sbb cmp leaveq rex.RB xchg (bad) scas rex.WX sbb (bad) xchg insb (bad) adc (bad) loopne,pn sub mov (bad) pop mov sbb stos rex.WX (bad) xor (bad) sbb adc xchg ds pushq (bad) int jae adc or mov loop add (bad) shr fdivs jns pop out rex.B (bad) and int sub rex.RX rex.WRXB pop (bad) push fcompl sub mov jns (bad) pushq movabs stc movsb (bad) mov sti adc (bad) push imul popfq jl mov mov je nop sbb push jb movsl push push rex.RXB mov addr32 mov movsb xor mov iret mov pushfq adc pop (bad) and hlt pushq jns enterq (bad) mov (bad) xchg rex.XB cltd in pop (bad) push out pushq roll xchg push mov push jrcxz jb (bad) sbb xor (bad) push loope (bad) (bad) mov vunpcklpd pushfw sub movabs or jae jb cli rex.WRB push adc cld pop (bad) loope jmpq sbb sbb jp sub je jmpq lea (bad) movabs rex.WRXB insl push icebp hlt lock mov mov in mov pop sbb test mov stc in sub cmp sti add icebp int3 mov add pushq push (bad) xchg xor fwait xor out sub or cmp fnstsw loope mov sub cli and mov mull rex.RXB sahf pushfq pop fs leaveq or xor xchg sub hlt xchg jbe jrcxz hlt sbb sub je movabs pop and (bad) movsb sbb iret add in jge jb iret jno add subl test sbb jl mov jmp pop jb cmp fistl scas xchg movabs xchg rex.RX rex.WRXB icebp insl std loop movabs (bad) je adc imul jle (bad) loop addl xchg mov (bad) (bad) mov (bad) enterq imul or andl push test fldt (bad) (bad) (bad) ficoml push test adcl lahf (bad) (bad) adc sahf shlb sarl add retq shlb iret mov pop fiadd or jbe (bad) stc xchg adc mov enterq fisttp cwtl mov repz pop add and lock add cmp in (bad) or push or and (bad) xchg loopne js imul cmp xchg hlt test rex.RB or jge rex.RX repz lea orb fcmovne mov lahf fildll xor mov xorl add mov (bad) jp mov (bad) lea outsl sub and in loop (bad) mov js out mov mov lret test in and movabs movsb stos sub (bad) cld test rex.WX fcoml (bad) (bad) andl repnz (bad) (bad) rex.B jl fsts (bad) lods (bad) jle adc (bad) xchg push fwait (bad) sahf pop fsubrp (bad) add push nop and or movabs jae movabs out leaveq (bad) mov (bad) jne xor fldcw sub sbb (bad) test jb cmp (bad) (bad) mov (bad) xor movslq jo (bad) jbe lret loope jrcxz mov xchg xor jmp or je shll (bad) (bad) jae push mov rex.B (bad) mov push (bad) pop pop lods xor imul (bad) shrl sub cli lea xchg add in cli pop loope mov xchg rex.WRXB sub fwait in loope icebp xchg rex.WRX (bad) pop sbb out (bad) add jne adc (bad) stc movsb xor data16 cltd (bad) rex.WR test xchg jb jrcxz ds jb jnp rex.W fs add xor rex.WRX and sub fsubrs sarl in (bad) iret scas (bad) xchg jbe xor add (bad) (bad) mov out rex.WR pop pushq imul test (bad) (bad) std pop int sbb mov pop lahf fcompl ficomp roll lock rex.WX or jmpq or rex.RB leaveq jrcxz sub insl add hlt (bad) mov mulb pushq in jmp incl or outsb pop loopne cmp movabs jrcxz outsb (bad) add rex.WRX (bad) adc imul flds push (bad) js jp and jmp stos es jle stc adcl sub movsb and pushq (bad) sub rex.WRB in xchg (bad) cli addr32 rex.WX and lahf cs xchg ljmp (bad) enterq rex.XB mov retq movabs in lret (bad) jbe mov add jb (bad) mov cmpsl (bad) fldenv pop pop test xor rcrl stos fadds (bad) xor je (bad) (bad) callq and cmc fisttp add add xchg (bad) adc push xchg cli xor hlt push jg add mov add loopne jrcxz lret push or cmp and (bad) pop and out jg xor or test retq sti xor (bad) jns lock pop adc mov insb and sub clc and mov adc xchg mov outsb retq and (bad) outsb (bad) mov imul fldcw sahf ss (bad) rex.XB lret jg incb (bad) rorb jmpq push or (bad) xchg lret fldl pop and xchg cmp rex.XB fisubrl in imul add rcl jmpq je mov not mov jmpq jmpq jmpq mov jmpq mov clc test stc stc test jmpq callq bswap lea jmpq callq jmpq jmpq callq lea movzbq mov mov not not movabs movsbw mov jmpq callq stc cmp cmp jmpq mov movzbq jmpq test clc mov and test shld mov cmc test mov movsbl shr shr mov bt clc cmc test mov stc mov stc bt stc mov cmc stc jmpq mov jmpq test test jmpq movsbq jmpq jmpq jne and lea mov jmpq jb lea jmpq jbe xor rcr lea cmc cmp cmp clc sub jmpq jmpq callq bt sub bt test jmpq js movzbw mov jmpq jmpq callq test cmp jmpq test jmpq jns je (bad) repz mov movsbw xor ror stc mov clc stc jmpq jmpq xchg mov pop rex.WRX lock mov add mov (bad) out mov leaveq xor push and push push cmpsb cwtl lea (bad) (bad) sti (bad) std cwtl stc sub adc add ja mov push pushfq (bad) and (bad) data16 (bad) movabs (bad) (bad) jmpq jnp iret rex.WRB mov fstps (bad) lea (bad) (bad) movabs rcll pop sarl shll andl movsb fbstp sub (bad) rex.WRXB popfq xor cmpsb xchg iret push rcrb jnp scas (bad) lods and mov xor test add (bad) stos (bad) mov outsb mov push mov cmp loopne push (bad) mov xchg (bad) addr32 lock lea and rex.X rex.W mov xor jb int xchg stos jo and outsb fs jle sbb lock mov xlat pushq (bad) or adc mov gs cltd int mov push shlb jo (bad) movsl sti fwait or adc (bad) shlb xor addl retq in sub cmp cmp (bad) fwait sub pushq cmp movabs adc adc mov xchg and mov mov rex.WX xchg int3 pop mov pop xor pop (bad) xor lock cltd (bad) (bad) (bad) (bad) js jmp cmp xor add add and and xor add stos test js (bad) xlat cmp or pop cltd rex.W adc out (bad) sub xchg out sub sbb cld push scas xchg (bad) sub insb callq movabs movabs movabs sub push rex.WR rex.WRX stc sub sarb cmp sub or int3 movabs (bad) movabs (bad) sahf xchg movslq ss adc xchg cmc jae pop or jp (bad) jmpq clc js jnp callq repz mov adc (bad) (bad) jnp (bad) retq lret sub adc cmp cmp jmpq jmpq mov jmpq jmpq ja je jae xchg bswap jmpq callq sete lea lea jbe callq adc rex.W repnz fbld (bad) mov cmc sub mov mov xadd stc or stc ror and sar mov sub repnz bsr sbb not adc lea bt movzbw mov stc bt sub jmpq mov mov lea not mov jmpq jmpq mov jmpq callq cmc xor mov rcr add shl shr mov bt cmp test jmpq je shld movsbl mov btc bsr movsbw mov bt adc bsf setne lea stc clc bt cmp jmpq jg je cmp cmc cmp jmpq callq jmpq not not movzbw movzbw mov mov mov jmpq clc bt mov or sub not lea jmpq cmp cmc test jmpq je test clc cmp jb je not mov sar shld mov stc mov jmpq incl jmpq pushq jmpq stc and cmp stc cmp jmpq je not or rol jmpq jb stc cmc cmp jmpq mov jmpq jmpq jmpq jne jmpq jmpq lea mov bswap mov jmpq jmpq jmpq cmp jmpq jmpq lea bswap movsbl mov jmpq jmpq jne cmp bt jmpq callq test jmpq callq rcr mov or movsbq xor cmc mov ror bts test lea or not xor sub repnz mov movzbl movzbw mov not movzbw mov not lea movzbw movsbw movsbq mov jmpq jmpq callq rcr bsr mov test clc test jmpq jbe movzbw bt mov xchg not and stc mov setno mov test clc bt test add test cmp clc add cmc jmpq jmpq jmpq jmpq callq rcl mov neg mov stc stc cmp cmc test jmpq callq jmpq add pop sbb (bad) sbb and test rex.RXB mov addr32 rex pushq add or xor mov adc movsl add retq rclb fnstenv (bad) add add add cs (bad) jmpq mov mov not lea mov jmpq jmpq cmc stc clc xor stc cmc cmpl jmpq jb cmc cmp bt cmp cmp jmpq jmpq jmpq mov movzbw bswap movzbw mov jmpq add add add xchg pop (bad) jns sub add sub add test fs jmpq jmpq mov jmpq lea btr mov jmpq jmpq jmpq movsbq mov jmpq jmpq jne btr bsf dec mov clc test jmpq incl jmpq lea jmpq jmpq je bsf inc add stc lea mov shr not jmpq jmpq je mov jmpq mov jbe callq rol cmc movb or add mov stc cmc cmc test jmpq jmpq jb jmpq mov not mov jmpq shr repnz mov not bswap dec bsf cmc shld mov clc bt test jmpq jmpq mov not jmpq callq not lea bswap lea jmpq nop jmpq jb jo incl jmpq jb dec incl jne lea movzbw mov jmpq callq jmpq clc mov clc jmpq jmpq jmpq jmpq jne bt sub jo callq stc cmp mov clc bt cmc test jns je bt bts movzbw jmpq jmpq callq test cmpq jmpq callq clc ror mov test mov bt cmp or clc cmp cmc xor jmpq mov jmpq cmp jmpq ja je jmpq cmp add rol (bad) cmc stc btc mov cmc cmc cmc jmpq jmpq mov jmpq je stc cmp test test cmp jmpq cmpl jmpq mov jmpq callq xchg not lea mov not lea lea lea jmpq jmpq stc jmpq cmp sahf fild stc movabs and pop jmpq xor outsl xor (bad) ds mov mov adc in movabs mov rex.WRX (bad) rex.RX or fistpll jge mull ds (bad) (bad) (bad) cmp fisttpl icebp retq jmp rex.WXB stos stos sbb loop test (bad) sahf or (bad) (bad) (bad) pushq mov (bad) (bad) (bad) ds add pop and clc add pop fldcw cmpl outsb mov mov rex.RX retq stos pop rex.XB (bad) sub rcrb (bad) add add in int push movslq nop fcomi pop cld pushq pop mov test mov retq movsb and adc callq in btr rcr mov stc clc cmc cmp jmpq bswap lea mov jmpq jb jmpq je jmpq jbe jmpq jmpq je setb mov neg rol mov sub cmc neg mov clc test add jmpq jmpq test and cmc clc cmp jmpq cmp xor jmpq callq movzbw bswap mov jmpq cmp xor jns jmpq je adc shrd (bad) lock sbb mov bt bt cmp cmc test jmpq callq bswap and mov clc cmp test jmpq jmpq cmp jmpq jmpq jmpq callq or jl mov xadd sub test bts ror or movzbw test mov sar inc or bt repnz rcr bts cmc not lea xadd lea sar rcr mov stc xor jmpq jmpq mov mov setle not sete bt test bswap jmpq callq cmp test jmpq callq test cmp jmpq je test cmp jmpq jmpq callq xchg mov jo mov setno not mov jmpq jbe jmpq jmpq callq test clc cmp jmpq jb bswap bsf shl lea stc test cmp jmpq jmpq jmpq bt jmpq sub rcr mov jae cmp jmpq cmc (bad) sahf add jg in sub jo movsl jp xchg movslq cmpsb std cmp jbe popfq pop and pop xor push int mov nop rex.WB (bad) cwtl pop rex.WXB (bad) rex.WB jrcxz (bad) sahf notl pushq test rex.WB (bad) movabs mov mov sub mov callq neg setge mov sub lea inc dec inc xor lea movsbl movsbl mov jmpq callq sub neg xor shld mov xor bts dec mov lea xor cmp xor or rol sbb sub btc or sub shrd repnz bswap dec mov bswap not lea mov movsbw dec mov not mov jmpq jmpq jmpq mov jmpq mov jmpq jmpq movzbw movsbw mov mov nop movsbw bswap mov jmpq cmc mov ror mov clc mov sub mov test mov shl adc test mov stc bt cmc cmp mov stc mov jmpq clc clc cmp jmpq jmpq callq bt cmpb jmpq je jmpq jmpq callq bt stc mov test cmp jmpq je lea mov jmpq outsl adc lock sub movabs adc jl (bad) (bad) mov push fs mov adc pop pcmpeqw mov stos lea pushfq sbb in lods in js xchg (bad) sti movabs and (bad) (bad) (bad) ljmp (bad) (bad) fadds (bad) mov rorl int rex.RXB sbb orb rex.WRX cmp (bad) mov (bad) (bad) mov mov adc notl push addl rorl out (bad) cmp and cltd jp (bad) ja (bad) (bad) retq cld (bad) imull xor sbb out jae jp (bad) rex rex.XB push fiadd mov (bad) sbb (bad) add sbb cmp cs in mov jge cmp xchg in push xor cmp stc rex.X loop (bad) fwait rex.RX rex.R rex.R popfq add js cmp retq repz retq xor cmp (bad) rcrb fidivr adcl and out out rclb xchg sbb (bad) outsb fadds mov insl mov cmp xlat insl sbb mov rex out pop mov jle divl cmp pop int mov pop pushfq xor jl ds mov data16 rex.RB out sub xlat mov mov insb callq or scas out test (bad) or fbld jne cmc add popq insb jae movsl (bad) clc es test (bad) mov (bad) (bad) popfq insb xor mov stc pushfq mov jmp jmp xor cmp rex.WRXB sbb lods fisttp and (bad) imul mov xchg jae lahf or mov retq add (bad) (bad) (bad) pushq movabs add in cmp mov mov pushq movsb or sub (bad) sub and popq hlt rex.WRXB rex.RXB xchg mov push pop (bad) sarw adc enterq cmpsb lahf push pop callq sarl cmp jg imul shl jmp jle cs ljmp enterq sarl out (bad) mov mov (bad) jnp xlat and (bad) push xor loope pop in jae shll cmp in (bad) lret mov sbb sub repnz icebp mov inc sbb adc rex.R or gs adc imul ds stos mov rex.RXB mov frstor movabs enterq test add jmpq je jmpq jmpq je movsbl mov jmpq callq cmp bt shrd mov clc clc bt test jmpq jmpq cmc cmpb jmpq jbe movzbw bswap mov mov jmpq pushq jmpq jmpq mov jmpq jmpq jo mov jmpq clc test jmpq callq cmp or mov add bsr shrd test not mov jmpq mov bswap jmpq cmc test jne je movsbq lea lea movzbw mov movzbl mov jmpq jmpq je test clc test test cmpq jmpq jmpq movsbw shld lea bt stc test test jmpq cmp xor jmpq jmpq (bad) (bad) rex.RX lock mov out jg cmp xchg add js push add adc mov iret mov cmp (bad) mov loopne (bad) mov xchg and (bad) scas push test cmp int3 insl and add xor frstor xchg (bad) ds (bad) (bad) (bad) jl (bad) negl xchg enterq jge add add cmc (bad) jl cmp (bad) (bad) sarb (bad) rex.RXB add rolb add add pushfq out cmp rex.WRB pushfq fidiv movabs scas out test (bad) mov movslq imul fcoms pop js lods (bad) pop scas mull ja fsubrl and (bad) (bad) rex.B (bad) adc movabs jle retq imul sahf jmpq je stc stc cmc jmpq jmpq jmpq clc xor jmpq je cmp stc cmc clc xor jmpq mov jmpq callq clc mov bt test jmpq mov jg jnp mov sub imul and sti (bad) mov jmpq (bad) mov xchg rcrl clc sub jg sub decl mov mov cltd pushq shll movabs movsb leaveq rex.W pop lock int3 pop rex.WXB (bad) mov xor (bad) (bad) (bad) callq xor and rcrb cmp (bad) sbb cwtl es (bad) (bad) ljmp (bad) (bad) mov cmp sub mov rex.B orl adc clc cmp (bad) mov fdivrl data16 (bad) add repnz adc jae fimul cmp movabs mov xchg cld mov add jns hlt loope sbb lret popfq cmp jmp push mov adc xor adc (bad) lock loopne xor btc mov cmc stc test jmpq bt cmp jmpq mov mov jmpq jmpq jp je bswap lea mov mov jmpq jne cmp cmp bsf movzbl xchg dec movzwl cmp bsr cmp mov bsr shl mov bsf movsbq lea lea cmp rcr mov bt clc stc test or movzbw jmpq je xadd xor xchg lea not lea lea seta xchg movzbw mov mov lea bswap lea lea jmpq jmpq dec bts and btr mov rol ror not or rol lea mov cmp clc shl bt jmpq jmpq movzbw mov jmpq nop jmpq jp stc sub jmpq mov jmpq mov jmpq jmpq lea movzbl mov jmpq lea mov xchg mov mov mov bswap mov not lea jmpq jmpq je bt mov clc cmp test jmpq callq cmc cmp jmpq cmp mov stc rcr or mov clc bt cmc bt mov bt mov bt cmp test bt xchg clc clc test cmp jmpq cmp jmpq mov jmpq je shrd mov rol stc not sub mov mov jmpq jmpq bt jmpq callq clc jmpq bsf mov jmpq jmpq jmpq callq movzbq mov movzbq xchg not bswap mov seto movzbw lea mov mov jmpq incl jmpq jmpq je rcr sar or mov cmp clc jmpq bt add cmc cmc test add jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq je stc btr mov cmp test jmpq callq shl adc not mov cmc adc sub lea not lea mov mov bswap mov bswap mov jo callq seta xchg jle bswap mov movsbl bswap bswap mov mov mov jmpq jbe movzbl mov and bt rcl ror mov setb shl shl mov cmp bt jmpq stc repnz test and not bsr shr sar bsr lea stc stc test add jmpq callq movsbw lea jmpq je jmpq callq not mov jmpq jmpq callq clc cmp jmpq je jmpq callq movzbw lea not lea not not lea jmpq callq movsbq movsbw lea jmpq jb jmpq jbe sub btc cmc sbb lea stc xor jmpq jbe jmpq jmpq jne stc sub clc cmc jmpq jmpq jmpq je jmpq jmpq xchg setb mov jmpq mov jmpq repnz jmpq callq jmpq add xchg jmpq callq test bt cmp test jmpq jmpq ja movb jmpq jmpq jmpq jb jmpq jmpq jl pushq jmpq pushq jmpq nop jmpq cmp clc test jmpq cmc stc add lea inc mov stc stc clc bt add cmc stc stc test add test clc cmc add not mov jmpq je jmpq jmpq callq bswap movsbw lea jmpq mov bswap movsbw mov jmpq mov movzbw mov jae callq movzbq movzbw lea setle mov movzbw jmpq jmpq jmpq clc xchg jmpq jmpq je shld mov sbb sub seto movsbw setb setb lea lea mov movzbw movsbw movsbl mov lea jmpq mov jmpq test cmp jmpq callq cmp stc cmc test jmpq movzbw jmpq callq dec bswap movzbw rcl mov shld sub movsbw movzbw bswap mov mov bswap mov jmpq jmpq inc jmpq jmpq callq cmc test jmpq callq jmpq fsubrs sbb rex.WR lret mov or mov incb xor pop add jae rex.B (bad) cwtl loopne jle retq and shlb (bad) (bad) (bad) (bad) jmpq (bad) mov add add and sar lock movsb cmp rex.WR (bad) je cmpsb cmp mov cmp (bad) or xor rclb push cmpsl imul mov rcrb movabs rex.RB adc out jne clc test sub jmpq jmpq callq cmc cmp jmpq jmpq je rcr xadd mov mov movzbw rcl add mov bts sbb movsbw btr and not jmpq je jmpq callq jmpq jne movzbw not not jmpq jmpq inc jmpq jmpq callq bsf lea bt test jmpq clc test repnz jmpq jmpq bt test jmpq movzwl lea mov jmpq je movsbl cmc btr bswap mov bt stc test jmpq jmpq mov jmpq jmpq jmpq mov jmpq callq neg lea mov clc stc stc test jmpq jmpq je lea setbe mov jmpq callq test cmc bt sub test cmp cmc xor bt xchg jo test cmp test jmpq callq movzbl not test mov stc jmpq je clc test jmpq test jmpq je clc cmp bt cmc cmp jl jbe clc setbe dec clc lea clc sub jmpq jmpq mov jmpq clc test jmpq jne jmpq jmpq je lea mov mov jmpq not setae movsbl mov setg not bswap movzbw mov movsbw movsbw not mov jmpq je cmc stc cmp jmpq jmpq js bswap mov jmpq callq bswap jmpq jmpq jmpq stc cmp jmpq jmpq mov jmpq cmp jmpq jmpq jmpq jmpq stc test jmpq stc bt xor test jmpq jmpq jmpq jmpq jmpq callq or btr xor stc mov jmpq jmpq jne cmc dec bsr mov clc rcr lea xor shl mov inc sub not lea jle callq bt bt clc cmp jmpq callq bswap lea jmpq jmpq jbe clc jae clc cmp jmpq jmpq jmpq callq not movsbw lea xchg mov movzbw setae not mov mov jmpq je btc mov cmc movsbq test shl mov bsf btc mov add xor mov test cmp cmc jmpq mov jmpq callq bsf cmp mov cmc test jg je jmpq jmpq jmpq mov not jmpq jo je mov xor mov xor not mov movsbw bswap mov jmpq cmpb jmpq je stc clc cmp cmp jmpq callq btr movabs lea clc cmp jmpq jmpq bt clc bt cmp jmpq jmpq jmpq cmp jmpq jmpq jmpq clc test jmpq je clc sub lea mov jmpq mov movsbl movsbl lea movsbl mov jmpq movsbw lea mov jmpq jb jmpq jmpq jmpq callq jmpq setb not mov jmpq jmpq je movsbl mov movsbl lea lea mov lea lea mov lea mov jmpq jmpq jne rol lea bt add stc cmc clc jmpq jmpq je movzbw jmpq cmp bt bt test jmpq je jmpq jmpq je test cmp jmpq mov bswap not mov jmpq cmovne jmpq jmpq jp mov jmpq jmpq callq stc jmpq callq cmc clc clc test jmpq jmpq je lea bswap mov jmpq jmpq clc test test jmpq callq inc lea cmc inc mov clc (bad) icebp or roll xor setne movzbw movsbw not mov jle callq shl stc xor clc mov bt bt stc test jmpq jmpq callq stc clc cmp jmpq jmpq je jmpq je shr adc rcr xchg mov clc clc jmpq clc mov sub stc shr bswap xor lea not jmpq jmpq add bt jmpq mov jmpq jb clc cmp jmpq jmpq jmpq movzbw movzbw jmpq jmpq cmp cmc sub jl callq mov movsbw movsbl mov jmpq callq ror bt sar bswap mov stc cmp cmp test jmpq movsbw stc mov add lea cmpq bswap mov movsbw mov jmpq je movzbw shrd not mov jmpq jmpq pushq jmpq cmc test sub cmp bt cmc xchg test test jmpq pushq outsb es (bad) lods cmp ja or push roll adc sub mov xor fisttp mov addl and popfq cmpsb and ljmp jrcxz pushq js shufps or and hlt pushq xchg movabs (bad) (bad) movsl mov sbb movsl push pushq rex.X pop rex.WXB insl jp jo mov jp (bad) rex.WRX pop in (bad) rex.R stos mov callq insb (bad) pop cltd pop rex.XB je pop andl mov loope pop (bad) jp pop (bad) pop js xchg loope adc ds pop xchg out lock out leaveq rex.WX and stos xor rex.WRX sahf sbb loopne test ja (bad) (bad) (bad) lret xchg jl push push mov gs rex.X xchg (bad) pop (bad) mov cmp pop push adc jp xor mov (bad) add push mov sub push mov or in (bad) adc test xchg sti mov rex.WR (bad) jno lahf fs movsl ficom or xchg mov int (bad) mov (bad) fidivl clc (bad) (bad) jle mov jbe sbb jge (bad) in adc jle rex.RB insb add add rex.WRX (bad) popfq add jo and mov mov and and and (bad) jle adc shll pop and (bad) (bad) (bad) callq addr32 (bad) test ficoml sbb push fsubrl (bad) pop (bad) imul cmp insb nop test rex.R sub mov (bad) fmull xchg enterq pushq rex.R sbb add (bad) cltd fisubl jg jae sbb cmpl jns lret addr32 sub stos or out mov popq cli (bad) movabs cli (bad) es outsl add or addl outsl rex.R push (bad) (bad) clc xchg mov idivb cltd xor outsl imul out jge cmp callq push sbb (bad) xchg callq cld push movabs jno jne push (bad) sbb test add jmpq callq movzbw movzbq movsbq dec mov jmpq jmpq jb test cmp jmpq jmpq shld jmpq je lea mov jmpq jmpq callq movzbw jmpq jmpq jb xchg inc setno dec data16 repnz shr cli movzbw mov clc shr sbb ror or btc movsbw mov neg shr not inc add sar stc btc shrd xor bswap mov bswap lea mov jmpq test xor clc cmc xchg test test jmpq jmpq bt cmp bt cmpl jmpq jmpq jmpq callq test cmc test test jmpq pushq jmpq lea mov jmpq je jmpq jmpq jb jmpq cmc jmpq not jmpq jmpq jmpq jmpq jmpq jmpq movzbl clc cmc clc cmp mov stc movzwl cmc test mov dec shrd neg mov test je clc test mov btc bsr movsbw lea movzbl test bt mov dec stc sar dec mov clc cmc mov sar btc movzbl bt mov not btc sbb movzbl stc test mov cmc mov cmp clc mov xor btc or shrd mov jmpq cmovns cmc cmp jmpq cmp cmp cmc test jmpq stc cmc stc sub jmpq je rcl or movzwl movzbw lea sub movsbw movzbw mov jmpq jmpq callq mov lea lea jmpq jne jmpq jmpq jmpq movzbw xchg lea mov mov lea jmpq jmpq jmpq jmpq callq test cmp cmp bt test jmpq jmpq lea jmpq jmpq callq rcl mov test cmc stc test test jmpq callq clc jmpq jne clc test clc test jmpq lea jmpq pushq jmpq bt cmc cmp jmpq bt cmc cmc xor jmpq jmpq js setl jmpq movabs lea mov jmpq jmpq je xchg mov setb movzbw mov lea xchg bswap mov jp not movsbw not mov jmpq je clc cmc bt xor jmpq jp mov jmpq cmc test jmpq jb movsbl movsbw inc inc dec bsf mov ror or rcl mov mov cmp add lea lea and data16 imull shlb int3 (bad) jb btc xchg mov or bt inc repnz bswap not dec dec not movzbq dec shrd cmp mov mov cmc clc test jmpq callq btr btc clc bt mov bt bt test jmpq jne jmpq jmpq jmpq jmpq jbe callq jmpq jmpq je jmpq mov jmpq pushq jmpq callq jmpq jmpq bt mov bt jmpq jmpq jae jae mov jo mov jmpq je sar data16 lock cmp bt test jmpq callq movzbq seto mov jmpq jmpq callq add mov xor mov clc clc stc or jmpq jge callq bt adc mov test cmc test test jmpq jne je cmp jmpq test jmpq jbe jmpq callq lea not jae mov lea not lea mov je callq movsbw not bswap mov bswap movsbw setb lea mov jmpq jmpq jmpq je sar bts lea mov btc shrd or mov cmp cmp jmpq jmpq jmpq je jmpq bt movl test cmp cmc mov adc ror sub mov clc clc cmc bt mov cmc cmpb jmpq xchg xchg movsbl mov bswap movsbw lea movzbl bswap lea mov jmpq jmpq jmpq jmpq jmpq je cmp test cmp jmpq je mov lea mov jmpq jmpq callq add shr sub lea not lea movsbw mov jmpq jmpq je xor sub bsf lea movsbw inc test sub sub setg mov mov jmpq jmpq cmp jmpq jmpq stc bt jmpq stc test jmpq clc test stc test jmpq callq lea mov inc mov jmpq cmova jmpq je cmc cmp jmpq mov movzbl bswap jmpq jmpq test or jmpq jmpq and sub jmpq jmpq mov jmpq test test add clc cmp jmpq je je dec sar mov bt jmpq callq bsf add lea mov jmpq je cmp cmc bt cmc cmp jmpq mov movzbq lea mov jmpq pushq jmpq jmpq callq lea lea bswap seta lea jmpq je jmpq je clc cmpq jmpq je movzbw rol mov cmp stc cmp mov stc cmpw jmpq jmpq je jmpq jmpq je dec sar cmp sub lea bsr dec lea movzbl xor sete setno mov not mov jmpq movzbw movzbw mov lea not mov jmpq jmpq je inc mov btc ror mov movzbw movzbw clc movzbl lea clc test cmp jmpq jae movzbw mov setle seto mov mov mov jmpq callq jmpq je bswap mov movsbw bswap lea mov jmpq jmpq jmpq mov jmpq je stc cmp jmpq callq adc mov clc cmp test mov clc movl bt mov movsbw mov cmc mov cmp cmpb jmpq callq shrd xor bts add lea test bt test jmpq jmpq mov jmpq jb jmpq mov bt test add jmpq jmpq mov jmpq jmpq je movzbl mov jmpq add cmp jmpq jmpq jmpq jmpq xor jmpq callq movsbq not mov lea not bswap not mov jmpq callq jmpq je adc mov jmpq je cmc cmp xor jmpq jmpq jmpq mov movsbl bswap mov mov jmpq mov jmpq mov jmpq jmpq jmpq je jmpq jmpq jmpq jmpq callq bt and stc stc cmp je cmp jmpq cmc test jmpq je test mov clc mov movsbl btr mov and mov jmpq je btr mov rol movsbw sar adc mov test clc cmc cmc cmp jmpq mov jmpq je je bt cmc jmpq stc or jmpq jmpq js bswap mov mov jmpq jmpq jne movzbw sete setle mov jmpq mov jmpq mov jmpq jmpq jmpq jmpq jmpq callq jmpq mov movsbw movzbw jmpq callq mov xchg xchg movsbw mov jmpq movsbw lea mov jmpq jmpq callq jmpq mov mov seto mov jmpq jmpq mov jmpq je (bad) hlt rcl add rcr mov cmc cmp clc stc test jmpq je rol xadd lea movsbl inc cmc xor movsbw xchg mov mov mov lea mov jmpq mov xchg mov movzbl bswap mov jmpq jmpq jmpq jmpq jmpq callq btc bts mov movzbq mov jmpq jl je clc cmp bt jmpq callq bswap movzbq mov jmpq mov movzbl movsbq mov jmpq jbe bts lea rcl lea test sub jmpq jmpq je shl bsr jmpq callq stc test jmpq cmc jmpq jmpq pushq jmpq callq bts adc shld rol mov rcl jmpq test jmpq jmpq setle mov not not not mov lea movsbl bswap mov jmpq jmpq test stc jmpq jmpq jmpq incl jmpq je xchg bswap mov setbe lea mov mov setae mov setno movzbw mov jmpq jmpq mov bswap bswap mov mov lea not lea mov mov jmpq je dec mov ror ror bts sub setg lea movabs mov jmpq bt add jmpq jmpq jne shrd mov cmc clc cmp jmpq jmpq or lea mov stc cmp test test jmpq pushq jmpq mov ja mov jmpq xchg jmpq jmpq callq xor adc lea clc test jmpq mov movsbw movzbw bswap bswap mov jmpq jmpq jmpq cmc stc clc test jmpq jmpq mov lock insl clc idivb xchg movabs sub rex.WB mov (bad) xor and rex.X (bad) loope mov movslq (bad) rex.W gs and (bad) (bad) (bad) ljmp xor imul add std (bad) fdivl (bad) pop xchg fisub xchg leaveq in rcrl (bad) (bad) mov add sub outsl (bad) punpcklwd rex.WB xlat (bad) or cmc retq add cmpsb jae jo xchg in rex rex.WRB popfq rex.WRX or imull fucomi and and (bad) jmpq jmpq cmpl jmpq add bt bt test test cmp jmpq mov movsbw mov jmpq nop jmpq add je jmpq je movsbw movabs movzbw mov jbe callq movzbw not mov jmpq jmpq je add mov bt clc test jmpq mov stc clc xor jmpq callq inc mov clc bt cmp cmp jmpq callq stc cmp cmp jmpq jmpq jmpq jmpq je jmpq mov not inc movzbl not lea dec btc cmp neg mov bt test jmpq callq movsbq mov rol add lea cmp cmp jmpq jmpq lea bswap mov jmpq bswap mov mov jmpq callq ror cmc mov add not mov rcl rol lea rol rcl mov bsf lea stc bt cmp jnp test jmpq je lea adc rol rcr mov test test jmpq jmpq je not movsbw jmpq jmpq movabs mov bswap bswap bswap lea jmpq callq cmc cmp bt cmp cmp jmpq callq stc jmpq jne cmc cmp mov jmpq jmpq je jmpq jmpq jmpq stc jmpq callq setp xchg bswap lea jmpq jmpq jmpq je cmp test jmpq mov lea mov jmpq mov jmpq jmpq test jmpq jmpq jmpq add jmpq jmpq jmpq jmpq callq cmp cmp jmpq callq movzbl mov mov not mov setae bswap mov jmpq jmpq jne rcl neg mov cmp test jmpq callq stc stc test and jmpq jne rex.W mull mov bts ror test or bsf or mov stc clc cmc repnz bt sub adc bsf and neg nop movzbw shl shr bsf movzwl bt cmc clc add cmc clc stc mov cmp test jmpq mov mov lea mov movzbw mov movzbw movzbw lea jmpq lahf cs cmp lock xchg imul xor shrb mov (bad) outsb stc xchg cmp (bad) push sti jp rex.WRB test clc fldt adc ds (bad) (bad) (bad) decl jns sub mov sbb add outsl cmp cld pushq mov rex.XB out sub cmp mov adc bswap bswap movzbl movsbw mov jmpq not mov lea mov not lea mov setle setb mov setnp mov not movzbl bswap jmpq movzbw mov cmc cmp jmpq je jmpq js seto movabs mov bswap lea bswap not movzbw mov lea sete lea jmpq jmpq je bt cmp test cmp jmpq cmp jmpq jmpq jmpq jmpq callq rcr btc mov (bad) lock rol mov cmc stc test jmpq callq (bad) repz mov stc jmpq xchg jmpq jmpq jmpq jmpq jmpq jmpq bt jmpq jmpq jmpq bt stc add jmpq callq bt stc test jmpq jmpq je test cmp jmpq callq test clc test jmpq jbe seto setb shld btc mov bt cmp jmpq jmpq jne bt test bt jmpq mov jmpq jmpq mov jmpq test jmpq jmpq jb sbb mov movsbw lea sub not mov jmpq callq movsbw lea bswap not mov jmpq movzbl mov jmpq jmpq mov dec shr mov clc bt test jmpq je movzbw dec mov movsbw mov stc btr lea test cmc bt jmpq jmpq callq add lea sub jg mov jmpq cmc clc cmp jmpq callq stc cmc bsr lea stc stc clc test jmpq mov jmpq je rcr mov bswap test mov stc cmp cmp cmp jmpq je adc xchg mov lea mov or data16 repz loope not mov mov setns movsbq movsbl mov jmpq jmpq je cmp clc jmpq jmpq mov jmpq callq bswap mov mov mov movzbq jmpq callq lea not movsbq movsbw mov movsbw lea movzbw bswap mov jmpq jmpq sbb bsf mov stc cmc test jmpq and jmpq je cmp cmpl jmpq jne movzbw movzbw lea setg mov jmpq add not mov jmpq callq shr dec xchg mov btc test jb movsbq mov mov jmpq jmpq je test rcr adc mov bt mov clc mov cmp btc not xor mov movzbq not bswap mov jmpq movzbl mov jmpq clc clc mov test clc cmc cmp cmpb jmpq je jmpq test clc cmp cmpl jmpq nop jmpq callq jmpq jmpq jmpq mov setnp not not movzwl jmpq je callq cmc xor clc cmc test jmpq xchg lea mov jmpq callq sbb dec mov ror jmpq mov mov setl mov jmpq jmpq je jmpq jmpq callq jmpq jmpq jmpq callq cmc cmp test jmpq mov jmpq mov jmpq jmpq jb stc stc cmc jmpq rcr btr nop and mov dec shld mov shr bts rcr rcl movzwl stc stc jmpq callq jmpq cmp jmpq mov jmpq callq jmpq jmpq jmpq jmpq callq shr mov test test jmpq jmpq jno callq jmpq jmpq callq clc cmp xor stc jmpq bt cmp jmpq je jmpq jmpq test cmp jmpq callq not movsbw not lea jmpq cmp test jmpq jmpq callq shr mov bt test jmpq mov jmpq jmpq test jmpq sub not jmpq jmpq jmpq jmpq callq cmp jmpq movzbl setl mov sets movzbw jmpq callq bsf bsr mov clc not xor jmpq jmpq test cmp jmpq jmpq callq jmpq jmpq pushq jmpq jmpq je rcl mov cmc test jmpq test jmpq jmpq je bswap bswap mov jmpq jne ror mov neg and mov lea bts cmc btc mov stc not cmp xor movzbw lea jbe callq jmpq bswap mov mov movzbw mov jmpq jmpq je add xor bsr xor setl mov jmpq cmc cmc mov lea inc sbb sbb mov jmpq jmpq test test jmpq mov xor bsr sbb mov test cmc clc add jmpq mov lea mov jmpq jne movsbw jmpq test add jmpq je jmpq callq movzbq lea jmpq je jmpq jmpq callq bt clc test test jmpq mov jmpq cmp repnz jmpq jmpq jmpq je cmp cmp jmpq test test jmpq jmpq je clc cmp jmpq je stc cmp jmpq je clc and btr neg mov and rcl or mov stc and movzbw not mov not movzbl not mov jmpq pushq jmpq mov bswap not movsbw movzbw mov jmpq cmp jmpq movsbw mov jmpq bswap movsbw bswap lea mov lea movzbw movzbw setg mov jmpq stc cmpl jmpq add bt mov bt bt bt stc test jmpq jmpq sbb xchg and int3 xchg scas (bad) lods add lret lret sbb and movabs lret push outsl jno fucomi shr jo pushq cmp cmc (bad) (bad) stc movsbw add mov cmp cmp cmc test jmpq jmpq jmpq jmpq jmpq jmpq mov jmpq jne dec mov jmpq jmpq callq jmpq je jmpq js movzbw xchg not mov not sete jmpq jb test adc cmp rcr cmpb mov not not movzbl mov setp bswap movzbw seto movzwl bswap setnp not mov movsbq lea mov jmpq cmc test cmp jmpq jae callq lea jmpq btc lea movzbl clc mov shr sar rcl mov clc mov bts movzbl cmc stc cmc mov bsf xor jmpq je jmpq je bt xchg data16 (bad) or mov fildll leaveq lea bswap lea mov not mov jmpq incl jmpq jmpq jmpq jbe jmpq movb jmpq jne cmp stc cmc test jmpq cmc clc cmp cmpl jmpq lea lea mov mov setg mov jmpq bswap not lea mov setle mov bswap lea mov lea not mov movzbw bswap bswap jmpq jmpq mov jmpq jmpq mov clc movsbw repnz movsbw not lea not movsbq dec dec shrd bts mov clc jmpq nop jmpq jmpq jmpq jmpq test add jmpq stc clc cmc cmpb jmpq lea jmpq jmpq jmpq je setno lea not sub movzbl mov jmpq xchg jmpq je xor lea btr rcl xor lea mov lea not bswap movsbw mov jmpq callq jmpq jmpq callq inc mov movsbl lea or bsr jl sub bswap not mov jmpq (bad) pushq (bad) (bad) out jg scas and sbb fwait sub rex.WXB or (bad) push insl mov loope and mull xchg rex.XB or rex.WRX lahf xchg (bad) pop in (bad) pop cmp int3 (bad) int3 cmpsb (bad) rex.RB and retq jnp or outsl sub (bad) (bad) (bad) decl sbb leaveq pushfq ficoml xor (bad) (bad) (bad) pushq (bad) (bad) (bad) jmpq movabs (bad) pop cmp lods (bad) mov (bad) fimul jrcxz push cmp repnz lods rex.B rex loop xlat push mov or rex.WX and mov adc jle or (bad) (bad) movabs mov popfq mov fidivl adc (bad) jl popfq repnz cmp mov rex.RB ds jp (bad) adc or mov not jb mov not lea movzbw lea jmpq je cmc cmp cmp jmpq lea bswap mov jmpq jne callq clc bt test jmpq je jmpq jmpq dec jmpq jmpq jmpq cmp cmp test add jmpq incl jmpq jmpq jmpq nop jmpq jmpq jmpq lea jmpq jmpq jne bswap bswap mov bswap mov mov setle mov mov jmpq jne shr neg (bad) repnz mov jbe xor jmpq jmpq pushq jmpq movl jmpq jmpq jmpq dec jmpq jmpq je btr lea bsf (bad) repnz mulb fbstp leaveq not bswap xchg mov lea lea jmpq setbe mov mov jmpq je dec xor xor lea setle mov je callq test ror neg mov mov xor rcl shrd mov test xchg cmp cmp test jmpq jmpq mov jmpq sbb xchg and enterq mov hlt or rex.WXB fldl2e cmp (bad) out insb add (bad) lods (bad) movsb bnd jae sub and fidivr callq lea setbe mov jmpq callq shrd xor jmpq jmpq mov movzbw mov jmpq movsbl mov setns jmpq jmpq jmpq jmpq jmpq lea mov jmpq mov lea not lea bswap lea not lea movsbq mov bswap movzbw lea jle callq mov btc sbb shl sub movsbl lea dec mov mov lea inc not mov jmpq callq mov bswap xchg movsbw lea bswap movzbl lea jmpq jmpq callq bt bt bt cmc test jmpq je stc clc bt cmp jmpq je cmc cmp sub jmpq jmpq jmpq jmpq test bt cmp jmpq sub jmpq jmpq not inc mov movzbq dec dec shr bswap btr add mov jmpq jmpq jmpq callq rol mov lea xor xchg jmpq je jmpq jmpq callq jmpq jne lea shr movzwl bswap shrd bsr bt mov jmpq je test jmpq seta mov movzbw not mov movzbw movsbw jmpq setge mov jmpq and cmc cmc test bt cmp jmpq jmpq jmpq bt cmp jmpq pushq jmpq mov or mov stc stc add jp clc cmp cmp jmpq not mov jmpq jmpq jne btr stc bswap (bad) imull rorb clc clc bswap or not stc sbb lea mov test clc cmp cmp repnz and xor bt ror nop inc movzwl cmc test add clc jmpq btc movzbl nop inc shr movzwl cmp add cmp jmpq jmpq pushq jmpq jmpq jmpq mov jp mov jmpq jmpq jmpq add stc btc dec mov jmpq jmpq je jmpq callq jmpq callq ror bts btc movzbl bsr sub lea movsbl movzbw setp mov lea mov setge movzwl je mov not movzbl jmpq je xor bswap movzbw xor bswap jmpq callq jmpq movzbl jmpq mov jmpq je jmpq callq test jmpq je test cmc cmp bt test jmpq je or bts sub mov add xadd lea xor mov xchg rol sbb mov inc or cmp btr mov cmp cmp cmp add xor mov clc jmpq jb mov xchg mov dec setl not mov ror xadd or bsr rol jmpq jmpq callq movzbw lea mov test test jmpq callq sub movzbl lea mov test test clc cmc test jmpq add add add add test jae jb ja (bad) or cmp (bad) rex.RB (bad) sbb fcmovne cmpsl xchg rex.WR faddl cli lea cwtl mov scas std gs mov cmc cwtl (bad) shrl mov mov sbb (bad) mov xor push jp mov xor mov push lret xchg sbb cld (bad) test icebp jmp (bad) mov pop push orb mov es in retq lock (bad) retq adc shr push imul jrcxz movabs xchg test (bad) lret leaveq pop (bad) sbb xchg mov movabs push (bad) xor sti in (bad) test test add movsl rex.WR (bad) lods stc xchg test cmp stos pushq mov vpshufhw cltd xor push xor (bad) test mov rex.W and callq (bad) callq (bad) setno jmpq jne stc mov clc jmpq jmpq jmpq callq movzbw lea mov mov mov jmpq clc clc add bt cmp cmp jmpq pushq jmpq jne mov lea jmpq jmpq callq jmpq jmpq cmc test jmpq je and dec mov clc mov cmc test test jmpq callq clc jmpq mov jmpq jmpq jmpq callq bsr sub not btc sub setle setb lea mov jmpq jmpq shr rol sub mov and sete xchg (bad) lock bswap movzwl bt clc jmpq callq bt cmp cmp test jl jmpq je stc stc test jmpq callq bswap not lea jmpq mov jmpq jmpq je test clc cmc jmpq jo cmpl jmpq js callq bswap bswap mov jmpq bswap setne mov jmpq test cmp add setl jmpq jmpq jmpq callq not bswap movzbl mov mov jmpq jmpq jmpq mov lea movzbl mov movzbw mov jmpq bt bt stc add movsbw mov jmpq mov mov setno jmpq dec xor shr cmp btc mov inc cmc cmp or movzbq rcl cmp mov bts cmp and clc add shr xadd bsr sub dec bsr mov shr repnz dec bswap jmpq jmpq test jmpq jmpq jmpq callq clc cmp js jb lea setl inc bswap incl bswap setb not movsbq mov jmpq mov not bswap jmpq mov test mov cmc cmp mov (bad) hlt shld lea mov test clc cmc jmpq callq sar lea mov clc jmpq callq jmpq callq cmc test jmpq jmpq callq rcr mov or xadd not lea or sub movzbw movsbl mov movsbl mov jmpq clc clc jl cmp jmpq callq movsbl movsbw mov movsbw mov jmpq jmpq je rol sbb ror xor mov lea mov jmpq inc jmpq callq add rcl mov cmp bt test jmpq jmpq callq movsbl mov jmpq callq stc test jmpq cmp jmpq bt bt add test cmp cmc cmc add cmc clc bt cmc cmp jmpq callq test movsbq bsr mov bt clc jmpq movsbq mov jmpq cmc stc clc cmp jmpq callq jmpq mov jmpq je jmpq jmpq jmpq callq sete not lea jmpq jmpq je lea mov jmpq test xor jmpq or bt sub jmpq jmpq nop jmpq callq stc cmp stc and cmc stc clc cmp jmpq mov jmpq bt clc mov clc add bt stc stc add stc cmc cmp jmpq jmpq rcr bt mov clc adc sub bsr adc or btc shl add mov add shld repnz xor and jmpq mov jmpq mov movsbq mov jmpq setp mov jmpq callq lea mov jmpq jmpq movsbw inc not not dec ror mov mov cmc jmpq stos sbb paddq lret stos lahf rex.XB xchg xor (bad) (bad) imul jo (bad) (bad) insl idiv cmpsb (bad) rex (bad) and int push and cmp and cltd pop jrcxz pop (bad) (bad) (bad) inc sbb jle mov rex.RB mov cltd push enterq adc cmp fdivs fxtract (bad) ficomp xor or es (bad) mov rorl and or cmp scas in push jbe rex.WXB push iret lret cs mov shll jo outsl (bad) add adc test outsb movsl cld cmc (bad) xor cmp rex gs push (bad) sbb rorb adc (bad) scas (bad) (bad) jge mov jle xchg mov je (bad) cmp rex.RB scas lods sub jne jrcxz (bad) pop in mov add fidiv mov mov sub xor out (bad) mov out mov out mov clc (bad) (bad) or mov pushfq xlat fstps cmp repz (bad) (bad) push scas addl out push lahf (bad) push repz mov movsl cmp and fisubr fsubl xchg xlat pop cwtl adc ja addl cmp mov mov pushfq sbb ss xchg ss add pushq movabs rex.WRXB (bad) (bad) (bad) pushq xor add add (bad) out xchg jmpq (bad) jmp (bad) xor sbb or sbb repnz mov cmp in in rex.WRB pop mov repz lret int push out rex.RX iret outsl (bad) jl outsb (bad) jb movabs callq mov outsb (bad) rex.WR stos jmp out jg (bad) and lock jp callq data16 mov or rcrl negl and (bad) outsb adc fldl sbb (bad) pop movabs jl jnp sub movsl mov cmpsl (bad) rex.WRB jrcxz rex.XB std jns or jl shll movslq (bad) cmp xchg movabs es (bad) or lret jmpq movsbw not mov movzbw movzbl mov jmpq callq jmpq jmpq movzbl movzbw lea bswap mov movsbw movsbw lea mov jle callq ror rcr lea clc mov stc lea cmc cmp jmpq jmpq jmpq mov jmpq js callq sar mov cmc test jmpq callq seta lea not setl mov jmpq jmpq je jmpq jmpq add jmpq je jmpq jmpq mov jmpq jmpq mov mov jmpq jmpq callq clc mov cmp cmc cmc test jmpq je shl bsf jmpq je add rcr btc xor bswap movsbw mov jmpq callq jmpq je cmc test jb cmp jmpq callq dec btr shrd movsbw sub bswap dec movabs mov mov mov jmpq stc jno add jmpq jmpq jmpq jb ror not mov stc dec cmc sub mov lea movsbq jmpq dec bts mov bts sub bsf bswap or bts mov test cmp bsr add sar cmc sub add (bad) negl mov cmp repnz bswap not not movzbw dec add mov stc stc test bt test jmpq je rcl adc xor setae movzbw not mov jmpq callq jmpq callq clc cmp and cmc cmp cmc cmc cmp jmpq jne rcl lea cmc add stc clc cmp xor jmpq jmpq test clc stc cmp test jmpq nop jmpq jmpq jbe jmpq mov jmpq pushq jmpq test jmpq jmpq mov setne not jmpq jmpq jmpq je jmpq callq bswap movsbw seta ja mov not lea mov jmpq dec jmpq callq rol mov clc bt jmpq jmpq jmpq callq stc rol test xor bswap movzbw mov jle callq cmp (bad) hlt not xor mov test cmp stc test jmpq je bts sar xor shrd sub movzbq xchg jnp movzbw lea not movzbw mov jmpq jmpq jb jmpq mov movzbq mov mov jmpq jmpq je lea movzbw movsbw mov mov xchg movsbl jmpq setle jmpq mov lea setle mov movzbw mov jmpq cmp jge je clc jmpq jmpq jmpq xchg jmpq xchg movzbw mov lea lea movsbw jmpq jb jmpq callq clc stc jmpq je test test test xor jmpq bt cmp xchg clc cmc test jbe jmpq jne rol adc mov cmp cmc clc bt test jmpq jmpq inc test add stc cmc cmp jmpq mov cmc bt clc jmpq jmpq je rol shrd sub bswap movzbl mov jmpq cmp jmpq nop jmpq jmpq jmpq jmpq test jmpq stc cmp jmpq mov jmpq mov jmpq jmpq jb mov lea jmpq mov bswap lea inc jmpq mov mov jmpq je jmpq test jmpq clc add jmpq jmpq jb jmpq jmpq test not not mov jmpq jmpq jmpq callq stc cmp stc cmpl jmpq pushq jmpq lea movsbw lea jmpq callq jmpq je cmp shr adc mov data16 lock int3 ror mov bswap rcr dec mov sbb mov stc clc cmp cmc add test rol shrd shld mov cmc stc add shl bsf shr sub mov cmc test bt stc add cmp add cmc cmc test add not bswap mov jmpq callq cmc jo test jmpq callq test test test cmp xor bt clc jo sub cmp stc jmpq bswap movsbw movsbl mov jb jmpq test test jmpq ja test mov cmc cmp test jmpq nop jmpq mov jmpq xor jmpq jmpq movzwl movsbw movsbl xchg mov movsbw mov mov lea lea movsbl movsbw mov jmpq jmpq jmpq callq cmc cmp jmpq jmpq nop jmpq jmpq jmpq jmpq jmpq stc nop jmpq callq test clc bt cmp jmpq shr jmpq jmpq jmpq cmc add jmpq not setns mov jmpq callq setb lea not xchg mov lea bswap movabs mov jmpq callq cmp clc cmc test jmpq jmpq callq btr jmpq je jmpq jmpq jmpq callq bswap cmc or not mov clc jmpq jmpq mov bswap mov jmpq jne stc cmp jmpq mov jmpq xchg movzbl mov movsbw movzbl lea mov jmpq jmpq nop jmpq jmpq or rex.WRXB (bad) (bad) hlt add or jnp js repnz pop in adc popfq (bad) mov mov cmp xchg ss scas and (bad) (bad) (bad) pushq sub insl or (bad) (bad) decl pop es jmp sub insb movabs pushq xor sti or jl (bad) repz xchg popfq pop mov or (bad) jl int cmp pop xchg cmpsb pop mov repz jbe or and callq sub movzbw add test movb inc mov test stc stc test jmpq callq btr dec sub bswap mov jmpq callq clc test jmpq callq shrd mov shr btc lea bt cmc cmp jmpq jns mov jmpq callq cmp test cmc cmp test jb je shr setne mov setl stc cmp mov bsf bt or and movsbl lea mov jle lea setns not mov jmpq jmpq cmc sub jmpq add clc bt clc bt add bswap movzbl jmpq jmpq mov not bswap lea bswap mov jmpq test cmc test jmpq je lea mov movsbl movsbw mov jmpq jmpq callq stc cmc cmp jmpq callq cmc jmpq jmpq jne jmpq callq bsr btr lea test test jmpq jmpq jmpq jmpq jmpq bt test jmpq callq jmpq cmc cmc jmpq test cmpw jmpq jne movsbl mov xor rcl ror bts btr or shr mov clc test repnz mov rcr btr rcr xor rcr btc nop and inc movzwl test cmc cmc stc add test clc jmpq jmpq movzbq mov jmpq jmpq jmpq callq rcr cmp rcr sar mov inc bsf mov test xor jmpq jmpq je setg lea or movzbl mov cmp stc cmp test jmpq callq jmpq callq clc test jmpq sub stc test cmc sub cmp stc xchg stc bt jmpq jmpq jmpq callq sete bswap bswap not mov bswap jmpq lea lea jmpq jne setnp movzbw mov jmpq not mov jmpq jne setno jmpq callq bsr cmc adc clc mov (bad) icebp xor movsbq movsbw mov mov movsbw mov jmpq cmpl jmpq callq jmpq movzbw lea movsbl movsbw bswap movzbw lea jmpq callq jmpq jb dec jmpq callq jmpq not bswap mov mov jmpq je jmpq callq clc cmp jmpq mov movzbw bswap lea jp mov jmpq jmpq je inc cmc mov bt bt cmc cmp test jmpq jmpq cmpw jmpq callq mov mov mov mov not movzbw lea lea mov jmpq jmpq jmpq pushq jg pushq jmpq jmpq jmpq callq bswap mov movzbl movzbl mov lea mov jmpq callq cmp jmpq jmpq jmpq jmpq mov jmpq bsf mov cmp cmc stc mov jmpq jmpq jmpq jmpq jmpq callq shr bswap shld sbb mov and mov rol bt shl btr or rcl sub sub neg rex.WB hlt sbb lods (bad) adc fcoml scas not movzbw not movabs movzbl movzbq lea dec mov clc mov clc test jmpq jmpq je jmpq jmpq incl jmpq jmpq nop jmpq clc cmp test jmpq jmpq je jno callq bt cmp jmpq jmpq jmpq jmpq je bt clc bt cmp jmpq jmpq je jmpq jmpq callq rol shrd sub cmc data16 lock callq (bad) jmpq (bad) cmc stc test jmpq jmpq callq jmpq je shl mov jmpq je sub movzwl stc mov xor movzbw mov mov jmpq jne bt stc test cmpq jmpq jmpq jne bsf bsr adc lea bts mov not test xor lea mov movzbl movsbw bswap mov jmpq jmpq jmpq callq sbb xor inc mov test mov dec movl btc or stc lea mov xadd stc mov not clc mov movsbl and sbb mov cmc test jmpq jmpq cmovne jmpq pushq jmpq jmpq callq neg dec mov mov jmpq je bt cmc jl cmp jmpq callq ja movsbw lea bswap mov movzbl movzbw movsbw mov jmpq jmpq callq cmc cmc clc cmpl jmpq jmpq je stc test jmpq jb or lea cmc cmc xor jmpq callq not lea movsbw mov lea jmpq movsbl movsbw mov jmpq jmpq callq bt sub jmpq jmpq jmpq jmpq jmpq add stc add movsbl mov jmpq callq shl cmp sbb xor lea bswap mov jmpq ja add out jg sti xchg repnz xor push hlt pop (bad) rex.R iret int3 cmpsb push (bad) loop (bad) mov mov mov xchg sub xor pushq jp mov (bad) enterq xchg cmp imul (bad) pushq sbb movabs fiaddl or lods sub and rex.X outsl (bad) jns movslq mov movaps mov (bad) shl (bad) mulb push mov xor je rex.WB rex.WXB out imulb cmp adc xchg retq mov jmpq (bad) cmc mov test es (bad) (bad) pushq sbbl xchg movsb or (bad) rex.WR sub xchg or scas mull sbb or dec mov pushq int3 adc mov in lock sub test sbb mul retq movslq out test mov (bad) jg stos sbb ja jrcxz out (bad) pop xor fsubrs pushfq cmp pop rex.XB rex.XB add sbb (bad) pushq fisubrl cmpsl hlt scas jmpq (bad) xor jns (bad) sbb (bad) imul cmpsb retq fsubl mov (bad) insb jnp cmp in push sub addr32 mov xor loop adc (bad) jmpq jns bswap lea not mov jmpq je bt cmc cmp cmpw jmpq jae jns nop jmpq jb xor sub rol lea clc cmp bt jmpq lea mov movsbw movzbw movzwl movsbw mov mov jmpq jmpq bt sub jmpq jne cmc not mov test bt bt cmp jmpq jmpq jmpq jne cmp not and bt mov mov bsr bts shr mov shrd jmpq lea stc movzwl bts clc (bad) lock movzbl cmp shl clc shr jg or jmpq callq cmp jmpq pushq jmpq jmpq je btc rol bts mov cmc cmc clc test jmpq je movzbw bswap movzbw jmpq je jmpq mov bswap jmpq jmpq jmpq jmpq je xadd stc and cmc lea movsbw not xor lea not mov not mov jmpq add mov clc cmp bsr mov inc adc mov jmpq jmpq jmpq jmpq jmpq je btr data16 icebp cmp xor mov not mov movsbw mov jmpq jge pushq jmpq xchg jmpq callq shl shr mov test cmp clc jmpq je rcr cmp sub sub setge lea jmpq je stc shrd xor lea mov jmpq jmpq jmpq jmpq cmp add bswap bswap mov jmpq test jmpq jmpq jmpq callq bt clc test jmpq callq jmpq lea mov movzbw mov movsbq not mov jmpq mov jmpq nop jmpq add jmpq callq bts test btr dec mov test test jmpq je shrd jmpq callq cmp mov clc test cmc test jmpq xchg mov movzbw bswap movzbl setg lea lea bswap lea lea jmpq je test cmp jmpq callq data16 (bad) mov cmp test jmpq not lea mov mov jmpq mov jmpq callq ror dec shl test mov test stc cmc test jmpq nop jmpq jmpq lea mov mov bswap not mov movsbl not jmpq jmpq mov jmpq jmpq jmpq jmpq je mov jmpq je test jmpq jmpq jmpq jmpq mov setle bswap jmpq je cmp cmc jmpq callq jmpq callq cmp cmc test cmp jmpq je jmpq je jmpq jmpq mov mov jmpq mov jmpq jae mov jmpq bt add jmpq sar mov stc stc cmp bt test jmpq bswap mov not mov jmpq callq mov shrd inc mov stc clc sub seta movabs mov bswap mov jmpq callq jns nop jmpq jbe jmpq mov jmpq movsbw mov mov jmpq stc cmp jmpq cmp cmp test jmpq add cmp add cmp add bswap mov jmpq jle jb or not bt shld mov test jmpq callq shrd rcl shr bsr xor jmpq mov jmpq jmpq callq bswap lea lea lea jmpq jmpq xchg not mov jmpq mov lea movsbl mov jmpq je jmpq je not shld lea movzwl shl movzbl test cmc cmc stc shl cmc test cmc test shr test stc cmp or jl mov jl nop jmpq dec bsr mov bts neg xor not mov jmpq jmpq je ror rex.W icebp cmc mov stc mov btr cmc sar or lea clc cmp cmp jmpq test jmpq jmpq jb bswap inc not setnp dec mov mov cmp clc or bswap adc mov dec add rcr xchg xor bt mov sar movsbq sar sar repnz bswap not inc inc inc dec dec mov jmpq callq clc cmp cmp test jmpq test jg sub (bad) xchg push adc (bad) cmpsb sub mov cld mov rcrl sahf insl pop rex and lret xchg add movsl or test (bad) cmp mov mov ds (bad) (bad) (bad) cmp scas mov mov xchg jrcxz mov jns (bad) add rex.WR (bad) (bad) jmp lret fmulp lret xchg xor repz insl movslq cmpsl movabs and (bad) cwtl cltd movsl lea or nop cltd sub add push mov int (bad) cmp jns sub cmp fs lods mov rex.RXB (bad) mov sub cmp out mov sbb es add jns (bad) pop lahf push (bad) xchg mov and fcomp imul loope adc adc je rex.WRX nop ss jb cmp cmc fs (bad) (bad) rex.WB (bad) (bad) (bad) cmp or fwait (bad) mov add add adc add mov incl mov mov cwtl and or test (bad) mov fldenv rex.WRB rex.WXB fwait shrb and rex.WXB addr32 add sbb cmc xor sub out insb jmp xlat xor (bad) out jg xlat test jb out sahf xor pop cld movabs in and xor dec iret std and mov rex.RXB adc or test adc mov add cmp sub mov or xchg and cltd (bad) cld (bad) (bad) lods (bad) rcrb jl leaveq xor rex.WXB rex.WX outsl xlat movabs rex.RB cmpsl lahf add jmpq jmpq movsbw mov jmpq callq clc and cmc cmp cmp jmpq jmpq je lea lea mov lea mov jmpq jmpq jmpq jmpq mov movzbq mov jmpq mov jmpq jmpq stc add mov jmpq je bts dec sub jmpq add clc test cmp jmpq jmpq jb lea dec lea inc dec jmpq jmpq callq clc jne cmc test jmpq jb inc jmpq callq stc bt bt bt test jmpq movsbq setnp mov jmpq jmpq callq cmc cmc test jmpq callq ror sub cmp jmpq jmpq bt cmc cmp jmpq je btr xadd setnp cmp lea btc sub lea not movzbw mov mov jmpq bt cmc cmpl jmpq je jmpq jmpq jmpq callq not bswap lea jmpq callq mov ror not cmp sub bswap movsbl sar sar mov clc test test jmpq xor jmpq callq mov movzbw jmpq jmpq lea movsbw seta lea jmpq jmpq jmpq mov jmpq nop jmpq jmpq test jmpq rol sub mov jmpq callq stc clc cmp jmpq mov lea lea movzbl jmpq cmpw jmpq mov lea movzbw mov mov jmpq callq bsf mov clc clc bt stc test jmpq je shrd mov add adc test mov shl bsf lea jmpq movzbl jmpq cmp jmpq test jmpq setne lea movzbl mov jmpq jmpq je btc or movzbw sub jmpq test jmpq jmpq callq setb mov jmpq callq cmc stc stc test jmpq jmpq jne jmpq jnp je adc and sub not movsbl mov jmpq jmpq jmpq jmpq jmpq cmc sub jmpq callq movzbl jmpq jmpq movzwl shr xadd test mov shld shl bsr rcl sbb btr lea shr test lea mov stc clc stc ja or not mov movsbw lea jmpq jmpq jmpq jmpq jmpq callq rol shld xor mov stc cmp test jmpq jmpq jb lea shrd mov adc sbb cmp movzwl cmc stc test jmpq jmpq callq shld mov bt cmp test jmpq jne setne jmpq jb movzbw lea jmpq jmpq mov jmpq callq jmpq jmpq jmpq callq bsr mov cmp cmp bt test jmpq jbe not mov rcr shr shl or mov clc stc jmpq test jmpq jmpq jmpq jmpq rex.RXB test out jg sbb add mov sbb jl popfq insl (bad) sbb (bad) add int3 or (bad) rex.RB xchg movsl xor rex.WRB rex.X (bad) jle sub or (bad) (bad) (bad) callq jb scas rex.WRXB mov sub xor cmp and repz pop add rex.WRB addr32 (bad) sbb mov jmpq jmpq test jmpq add add add rex.W movabs rex.RXB xchg (bad) mov jmpq jmpq xor jmpq jmpq jmpq je stc cmp cmp jmpq callq bswap movsbw movsbw mov lea bswap mov jmpq jmpq jmpq jmpq stc gs (bad) out jg push or mov (bad) add loopne or mov mov push jo dec xchg insl and leaveq ror rex.B ss adc scas cmpsl leaveq xchg pop push test jae rex.X (bad) (bad) (bad) lcall loope pushq rex.WXB jbe std and testb cmp fs pop cmp rex.RB mov (bad) and je clc cmpq jmpq je bsf mov jmpq callq jmpq jmpq callq shld mov not neg shl mov test cmp xchg cmp test stc test jmpq nop jmpq je jmpq je neg cmp btr rcl movzbl bt test jmpq lea jmpq mov jmpq pushq jmpq je shl mov clc jmpq clc test jmpq jb jmpq jmpq jmpq jae jmpq callq xor mov jmpq jmpq bswap mov setno jmpq js seta jmpq add sbb mov clc clc stc cmc add stc add jmpq je bts ror xchg inc or data16 idiv setae lea btr ror neg sar sub btr repnz lea mov bswap mov movsbq lea not lea lea movzbw jmpq jmpq callq jmpq je dec sub not lea mov jmpq je btc inc sub not mov jmpq callq lea mov setae lea xchg mov bswap jmpq cmc test cmpl jmpq je xor lea xor bsf mov cmc cmc jmpq cmp jmpq jmpq jmpq jmpq jmpq movzwl mov not mov xchg mov movzbl movabs bswap not mov movsbw not bswap movzbw mov jmpq add stc cmp clc cmp mov cmp cmc cmc clc test jmpq callq stc clc bt cmp jmpq jmpq callq test stc bt jmpq jmpq jmpq je clc test cmp jmpq jmpq jb jmpq jmpq jne movzbw movzbq mov jae callq lea mov stc test cmc stc test jmpq je xchg clc lea mov or bsr rol mov test jmpq jmpq callq stc cmp jmpq jne xchg or add bsr mov not xchg mov bsf shl lea bts add jmpq mov xchg sets not movzbw mov setg movzbq bswap movsbw lea bswap setb mov jmpq jb dec jmpq je btr btc mov cmp sub jmpq jmpq callq add sbb mov cmp test test jmpq jmpq jne neg test sub mov test or neg mov jmpq jne and cmp add mov clc cmp stc jmpq je movzbw lea movzbl setge bswap mov not mov bswap not mov jmpq jmpq je jne test test xor jmpq bt xor jmpq jmpq mov movsbw jmpq jo callq shld xor mov btr rcr mov mov cmc test stc jmpq callq clc cmc jmpq callq cmp jmpq je bt sub jmpq mov rcl bsf btr movsbw mov clc bt bt add movzbl mov jmpq not bswap lea jmpq je bswap mov jmpq jmpq jmpq jg callq cmp test jmpq mov lea movsbw not mov mov jmpq jmpq jmpq lea jmpq jmpq js movabs setbe jne mov jmpq callq adc not adc lea test cmp clc test test jmpq callq bt test bt xor stc test cmp clc test jmpq jmpq jmpq mov jmpq test clc sub jmpq jmpq or jg cs out cmpsb jnp sti or add xchg add (bad) sbb or add rex.WRXB sub mov mov or mov add push jmpq cmpsb and (bad) (bad) (bad) (bad) sti pop pushq (bad) jge hlt (bad) cmp xor mov (bad) (bad) imul (bad) (bad) sbb cltd rex.B (bad) fidivrl xor (bad) (bad) jmpq (bad) (bad) (bad) callq sbb (bad) (bad) (bad) rex.WRXB (bad) out ljmp and sub sbb iret (bad) lret jge sarb test (bad) (bad) or retq rex.WX int3 xchg mov (bad) in mov and iret int jrcxz xor out cmp stos test cmp retq add outsl sub sbb jmpq cmp test cmc test jmpq jmpq callq clc clc clc xor clc bt cmc cmp test jmpq test bt cmp jmpq jmpq jmpq jne test clc jmpq je test inc mov not mov shld bsf sbb data16 lock sar cmc add not mov clc add cmp jmpq bswap mov jp callq test jmpq je test cmp stc sub jmpq callq shld mov jmpq je jmpq cmp cmc test jmpq cmp jmpq mov jmpq jb bsf adc mov lea adc bsf mov shld mov sbb xchg dec adc mov setl movzbw bt clc lea mov lea xor add lea xor stc mov bsf mov ror adc stc setne add xadd mov test shrd movsbl mov bt stc cmp add cmc cmp mov jmpq je movsbq jmpq cmp jmpq cmp jmpq jmpq je jmpq jne shl adc btc mov test test jmpq test bt test jmpq je cmp bt cmp jmpq stc test jmpq jmpq jmpq mov jmpq je cmp test clc sub jmpq je cmc bswap xor mov test cmp clc cmp test jmpq mov shr mov movsbl add neg movl and sar mov or (bad) lock mov rcr mov xor shrd mov cmp cmp cmc test jmpq callq shld lea sar mov test clc mov stc cmc cmc clc movl test mov sub movsbl bswap mov jmpq jmpq jmpq jmpq jmpq jne cmc rcl add mov movsbw mov jmpq jmpq xchg jmpq callq shrd add or lea mov jmpq jmpq je cmp movsbw or xor lea mov jmpq cmc add rol sbb mov jmpq je jmpq callq jmpq mov not movzbw mov jmpq test cmpb jmpq jne test cmpb jmpq callq bswap jmpq jne jmpq jmpq callq test stc test stc test jbe jne jmpq test jmpq jmpq callq rcl mov rol sub bswap movzbl lea mov jbe movsbl movzbw movzbw mov jmpq jmpq add test test xor jmpq btc bswap xor mov cmc jmpq callq lea movzbw lea jmpq jmpq callq jmpq jmpq bswap mov jmpq jmpq mov cmc sub jmpq callq dec sub neg or mov cmc test jmpq callq mov inc rol cmp mov rcr mov clc clc stc or cmp cmc cmp jmpq jmpq jbe mov jmpq test jmpq mov jmpq callq movzbw bt lea test clc clc test test jmpq callq jmpq movzbw movabs mov mov jmpq jmpq test js je bt jmpq jmpq jmpq jmpq je shrd setns shl lea clc setae xor not setns movsbl mov bswap movabs lea movzbw mov jmpq jne data16 lock shr btc mov jmpq je bt cmc cmpq jmpq jmpq cmpq jmpq add shrd movsbl adc mov stc clc add clc test test test add stc clc cmc test sub bt test jmpq jmpq setle bswap mov movzbq jmpq inc jmpq je clc test stc cmpl jmpq jne not shld mov shld (bad) cmc add mov out sar movzbw mov bt stc add cmp test stc jmpq callq movsbl mov lea not mov movzbw movsbw lea mov jmpq callq test bt cmc test jmpq jo pushq jmpq inc jmpq je bt test jmpq jmpq jbe bswap not mov jmpq seto setns lea movsbw lea movzbw lea jnp callq dec stc mov jmpq jmpq movzbw lea setle mov movsbw lea xchg mov setp mov jmpq jmpq stc rol and movzbw jmpq jmpq callq shrd mov test test jmpq jmpq jne not bswap mov jmpq callq sete mov movzbw mov bswap not mov setns not not mov jmpq jmpq jmpq pushq jmpq je movzbw lea mov xchg not mov jmpq jmpq bt clc cmp jmpq sub seto jmpq jmpq jmpq mov jmpq callq stc test add mov and and mov btr bswap mov xor mov movzbl sar mov shl mov cmp cmp test test test jl jp je xor shrd sar mov stc test jmpq jmpq mov jmpq clc test jmpq je lea lea mov jmpq callq clc rcl btc mov stc test jmpq incl jmpq jmpq je cmp clc rcr mov bt jbe stc mov jmpq callq not movsbq adc shl mov neg btc cmp mov cmp bt stc test jmpq callq bswap not lea jmpq jns mov lea setb lea mov jmpq jmpq sub cmp add cmp cmc clc add jmpq jmpq je jmpq callq clc jmpq jmpq je mov sar shl mov cmc stc jmpq cmp jmpq mov movsbl mov jmpq jmpq callq rex.W lock movzbl (bad) hlt bts xor setno mov jmpq add mov mov jg callq bswap mov test test stc test jmpq jmpq jmpq jmpq callq test cmp and stc cmp jmpq jmpq jmpq callq jmpq test jmpq je not bswap mov dec mov clc jmpq jmpq clc add cmc cmc mov jmpq movsbw setbe lea mov jmpq callq jmpq xchg jmpq jne clc bt cmpb jmpq je jmpq jmpq add or rcr shrd bsr cmp lea rcl shl test sub rcr or repnz jmpq nop jmpq jmpq jb movsbw jmpq jmpq callq clc jmpq test jmpq mov jmpq jmpq jmpq jne shl neg lea cmc add test cmp sub jmpq test jmpq mov jmpq mov setne setp jmpq je test rcr bts mov test test jmpq jmpq bswap mov mov jmpq nop jmpq callq cmc clc cmp jmpq jmpq callq bt cmp jmpq bt cmp test jmpq mov bswap mov jmpq jbe not mov mov mov setne sete movzbw bswap mov jns callq clc bt add jmpq jmpq jmpq lea mov jmpq sub movsbl movsbw jmpq jmpq jmpq jmpq je bts rcl sar setp nopw sbb or test mov test test jmpq cmp jmpq jb callq bt test jmpq bswap lea lea jmpq je jmpq mov lea mov jmpq mov jmpq je setge clc cmp mov stc test jmpq je setae mov jmpq inc jmpq lea movsbw mov jmpq callq movzbw bswap rol sar mov bt stc cmp jmpq callq movzbl not lea jmpq jmpq je jmpq je jmpq je shld mov bsr mov or sbb xor mov mov add shld xor mov stc add not btc mov jmpq jmpq jmpq jmpq movzbw mov movsbw mov lea mov jmpq jmpq jmpq jb inc dec (bad) mull mov mov add neg or and inc btr mov bts shr cmc bts add xchg rcr shrd rol xor bswap xchg not xor mov shld shrd xor sub repnz inc not not movsbq dec lea dec btc mov cmc clc test jmpq jbe mov jl setge mov jmpq test jmpq mov jmpq mov jmpq stc xor jmpq mov jmpq cmp jmpq jbe jmpq bt stc test jmpq test jmpq je xadd cmc xchg mov shld shld movzbw mov bsf shld mov shr ror sbb data16 icebp (bad) sub mov mov lea mov jno callq xor xor jmpq jmpq jmpq xchg mov setb movzbw setle mov bswap mov not bswap mov not bswap not mov mov jmpq cmp jmpq callq cmp test stc stc cmp jmpq jmpq je movzbw mov jmpq jmpq je cmp dec rcr mov neg mov sar lea lea bsr and mov mov mov jmpq jmpq jmpq cmp test jmpq mov jmpq je js mov ja callq test jmpq jb jmpq je test jmpq jmpq je mov not mov jmpq mov jmpq callq not mov bt jmpq je bts mov test sets lea adc sub movsbq not bswap lea mov mov not not mov mov jmpq jns lea lea mov mov jmpq je movsbl adc mov cmp clc jmpq jmpq jmpq test je je mov xor mov movzbw mov stc inc bts sub lea jmpq callq neg bts bsr ror mov stc test jmpq jmpq stc clc test jmpq callq or xor xor jmpq je or rex.W repnz sub (bad) bswap mov jmpq mov jmpq jmpq je jmpq callq sbb mov lea ror not rol cmpq lea setg mov jmpq callq btc mov clc jmpq jmpq jmpq jmpq jmpq jmpq xchg movsbl jmpq je jmpq je stc clc jmpq je movsbw lea movzbw mov jmpq je mov lea lea mov jmpq cmp jmpq cmova jmpq jmpq jmpq je jmpq jmpq jmpq jmpq je btc rcl or mov jmpq jmpq jmpq jmpq test jmpq jmpq callq movzbw mov test test jmpq jo pushq jmpq je jmpq jne bt add mov and sbb bt mov stc xchg lea btc add jmpq je clc dec movzwl sar movzbw movzbl jmpq jmpq callq cmp stc cmp test test jmpq movzbl movsbw mov jmpq stc add stc add clc cmc add mov mov jmpq callq cmp sub setae mov jmpq jb bswap movzbw sete mov jmpq jmpq jb movsbw mov bswap dec rol dec sub mov add bswap movsbw and or bswap shr neg adc mov and rcr add bsr or rol xor xchg xadd cmp bts mov shrd mov sub rol repnz movzbw not not bswap dec stc test rol jae mov stc test jmpq callq clc test cmc test jmpq jmpq jmpq jmpq jmpq jmpq jne btc clc mov jmpq jne (bad) icebp add bsf mov xchg (bad) lock mov test mov stc mov add bts shl shrd lea shl sbb jmpq test jmpq jmpq jmpq bt bt mov sbb ror shrd clc movzwl test stc mov setle dec test shrd mov jmpq mov jmpq jmpq callq shr cmc movzbl rcl stc cmp sub bswap mov mov mov mov movzwl jmpq je cmp clc jmpq jmpq add adc rol sub ror mov stc clc jno cmc add bt add clc stc cmc bt sub test test add jmpq stc test cmpb jmpq jmpq jmpq callq cmp stc sub cmp cmp sub cmp bt clc jmpq jb bt clc stc cmp jmpq jmpq clc test jmpq callq shrd inc stc mov test test jmpq je bswap lea shld xor mov or mov not cmp clc lea clc cmp jmpq je btc shr cmp seto movzwl clc bsf mov movzbw sub jmpq lea bswap mov jmpq jmpq jle callq jmpq je bswap setne mov not lea bswap setb jmpq cmovns stc test jmpq jmpq callq jmpq add mov jmpq je bswap mov cmc test jmpq mov lea movsbw mov bswap bswap movzbw mov jmpq cmpb jmpq jmpq jmpq jmpq mov neg stc bswap (bad) hlt add mov bt test cmc mov movsbw mov cmc bt mov or bts sar add mov cmc cmp mov inc bsf inc mov stc test test mov (bad) lock jmpq je bswap setbe mov jmpq jmpq callq cmc jmpq jmpq jno callq xchg lea not movsbw mov lea jmpq cmp add or mov cmc jmpq mov jmpq jmpq jmpq jmpq movzbl lea jmpq lea jmpq jmpq add cmp cmp jmpq cmp jmpq mov jmpq callq cmp clc cmp jmpq callq xchg not not seto lea jmpq jmpq callq cmp clc stc test cmp jmpq jmpq movzbw setnp mov jmpq jmpq callq jmpq jmpq callq movzbw jmpq test cmp mov bt jmpq cmc xor jmpq callq bt bt test jmpq jmpq mov jmpq jmpq xchg setbe mov mov jnp xchg jg nop jmpq xor jp mov jmpq jne cmc cmp jmpq jmpq jmpq jle callq bt bt clc test jmpq jmpq jmpq lea mov jmpq bt jmpq jbe movzbw mov mov jmpq jb inc dec movsbw movzbq mov not sar or add btr dec mov clc add bsf shr rcl xor and add mov test cmp cmc repnz jmpq callq cmp stc test jmpq je lea movzbw not lea mov jmpq jmpq setl lea mov jmpq je jmpq je jmpq jmpq jmpq je jmpq jne add mov cmp clc bt test jmpq jmpq jmpq mov xchg lea not not mov jmpq lea bswap jmpq callq jmpq jmpq jmpq jb jl callq bt test jmpq jmpq jmpq lea mov mov jmpq jmpq jmpq jmpq jmpq jne rcl rcl bswap clc mov clc bt test jmpq mov jmpq jmpq jmpq jmpq seto mov xor inc mov dec rcr setg sub mov clc add bt jmpq jne lea data16 lock test rcr movzwl ror rex.WB lock mov neg stc rex.WB icebp xor loop bsf lea and bswap mov cmp cmc jmpq jmpq callq not bswap mov lea setno jbe mov jmpq je bsr neg mov cmc clc test jmpq callq cmc clc cmp bt test jmpq je cmp cmp cmp jmpq je clc cmc cmp cmp jmpq callq or dec rcl lea cmc cmp test jmpq je cmc cmp jmpq callq movsbw jmpq callq cmc clc cmc stc cmp jmpq and test test cmp jl jb movsbw dec bt jnp shl mov bt bt shr or rex.W cmc mov and shld add movzbq sub clc stc mov shl jmpq jmpq jmpq jmpq callq ror bsf and mov bt add clc sar sub jmpq clc add seta movzbw lea movsbw mov jns callq clc stc cmpb jmpq je cmp cmc test cmp jmpq callq bt clc cmc bt test jmpq jmpq mov jmpq callq stc clc test test jmpq callq rcl mov test cmp test cmp test jmpq callq jmpq stc test cmp jmpq jmpq jbe rol mov clc test mov xor mov clc stc add jmpq test jmpq pushq jmpq je stc test cmp jmpq jmpq jmpq callq jmpq callq xor bswap lea mov cmc test rol sar mov btr not shrd lea bts btc lea clc lea stc sub jmpq jmpq callq bts sar lea cmc test jmpq callq sub jmpq jmpq jmpq mov movsbw mov bswap mov jmpq lea movzbw bswap mov mov mov movsbw jmpq jmpq mov jmpq jmpq jmpq je clc test cmpq jmpq je rcl btc xor bswap movsbl jmpq callq jmpq jb jmpq je jmpq jne stc clc cmpq jmpq jmpq jmpq jmpq callq bt clc test cmp cmpl jae jne mov movzbl jmpq jmpq movb jmpq jmpq jmpq callq lea mov jmpq callq not sub setns jmpq jmpq jmpq jmpq pushq jmpq nop jmpq js lea mov mov jmpq test jmpq mov jmpq pushq jmpq jmpq jmpq jmpq jmpq mov mov jmpq jns not setnp movsbl mov jmpq jmpq callq bswap rol shl cmc mov shr bsf xor xchg mov movsbl movabs mov movzbw not mov mov jmpq movsbq or rcl mov add (bad) icebp mov setbe movzbw mov lea clc cmc cmp jmpq jmpq callq bts and mov test test cmc mov clc bt jmpq jmpq jmpq callq cmc cmc mov clc test jmpq callq lea bswap dec dec mov stc mov cmp cmc jmpq jmpq jmpq je movzbl cmp shr lea bt xor movzbw mov movsbw bswap movsbl mov jmpq clc clc test test jmpq cmc cmp add cmc stc mov cmp bt stc cmp test jmpq cmp stc bt test jmpq cmp jmpq jmpq je rcr mov xchg jmpq mov jmpq mov clc test cmp test add cmp cmp add test add bt cmc jmpq jmpq jmpq je shrd dec btc (bad) icebp xor mov setns mov jmpq clc stc add jmpq cmc or lea lea jmpq jmpq jne mov mov xadd stc lea jmpq jne cmc stc sub bt stc bt bt xchg cmp test jmpq cmc bt test jmpq lea movsbl movzwl jmpq je movsbl not lea setns mov mov movsbw not not movzbw mov jmpq lea not bswap mov jmpq test jmpq mov bt neg mov jmpq movb jmpq jmpq clc jmpq pushq jmpq jmpq callq test cmp cmp jmpq nop jmpq mov jmpq nop jmpq jmpq js movzbw jmpq sub jmpq jmpq jmpq je shld xadd mov movzbw mov dec jmpq jne movzbl jmpq nop jmpq jbe jmpq movzbw mov mov movsbw mov setle movzbw bswap movzbw mov jmpq mov jmpq cmp clc cmp jmpq mov jmpq bswap not nop not movzbw mov mov lea movzbw movzbw bswap seta mov jmpq je stc stc stc cmp jmpq jmpq je inc bt xor bswap jmpq mov jmpq callq jmpq jb cmp cmp cmp jmpq jmpq clc mov clc jmpq jmpq jmpq callq test test bt cmp jmpq callq clc jmpq mov jmpq callq cmp cmc jmpq jbe btr shr movsbw lea bt clc clc clc xor jmpq jmpq jmpq callq cmc cmp jmpq callq xor cmc stc bsf mov jmpq callq test cmpb jmpq callq sar mov stc xor jmpq lea mov mov not jmpq not mov movsbq mov mov jmpq jmpq nop jmpq callq xor not mov bt stc test test jmpq callq movsbw mov not lea mov jmpq jmpq jmpq nop jmpq test jmpq sub movzbl mov movzbl mov jmpq jmpq stc cmp jmpq bswap mov jmpq clc cmp cmc nop cmc test cmc clc sub jp mov jmpq jmpq test jmpq pushq jmpq pushq jmpq jb rol data16 repnz and lea stc jmpq jne bswap and clc mov and lea mov test add bt test cmp jmpq jne not movsbw movsbl movzbw mov jmpq movl jmpq jmpq callq cmc movabs jmpq pushq jmpq cmp cmp stc xor jmpq je cmc stc cmp jmpq mov jmpq jmpq callq clc cmp bt cmc test jmpq jmpq test bt test test jmpq je rol cmp cmc mov rol test not shld mov dec lea clc cmc cmp jmpq add js jmpq movsbl lea jmpq jmpq callq add cmc mov bt test test jmpq jmpq callq clc test jmpq movsbq mov movzbq lea mov jmpq jmpq jmpq jmpq jb jmpq jmpq not lea jmpq bswap not mov jmpq callq bt bsr mov bt jle test jmpq jmpq jmpq je stc cmc cmpl jmpq je jle callq cmc clc jmpq callq test mov test bt cmp test jmpq callq bswap cmp add mov and movzbw adc mov stc bt test clc xchg cmc cmc jb test jmpq callq cmp rcr mov inc bt jmpq and cmc cmp jmpq jmpq je xadd bswap jl movzbl adc movzwl lea mov bsf bts mov dec and xor shl inc shl stc ror lea btr bswap cmp bsf or jmpq callq stc clc stc stc and bt cmp jmpq stc jmpq callq add cmp test mov dec mov clc test jmpq callq clc bt cmc bt test jmpq clc test jmpq movl jmpq jmpq jmpq jb not mov jmpq jmpq jmpq je clc add lea lea movzwl bts xor mov movzbw mov jmpq jmpq jo callq xor mov stc cmc cmc test test jmpq callq clc test test jmpq callq cmp cmp jmpq test clc cmpb jmpq jmpq callq clc cmp jmpq movzbl xchg bswap not mov jmpq je btc cmp shr mov bt bt test test test je je clc clc cmpl jmpq jmpq jmpq callq and shld bsr mov clc clc test jmpq movsbw lea jmpq callq jmpq je cmc stc cmp test mov test stc cmpb jmpq jmpq callq rex.W repz cmp mov setnp cmpq jmpq jmpq jmpq nop jmpq jmpq cmp jmpq jmpq jmpq jmpq not movzbq movsbq mov movsbw setb bswap mov jmpq callq rcl inc mov jg clc clc test jmpq jmpq je cmp test test cmpl jmpq cmp mov test test test jmpq jmpq callq inc lea and mov bt test test jmpq callq jmpq jmpq stc bt test jmpq callq adc setb setb ror mov test test jne je stc bswap or mov bt clc cmp test jmpq nop jmpq bswap mov jmpq callq jmpq jmpq jmpq mov mov jmpq pop add outsl mov jg or rex.R jmpq or (bad) cld fbstp je loopne movl sbb (bad) xor cmc mov (bad) (bad) (bad) fiaddl ja out scas retq jnp add add or cmp repnz sbb mov xor fwait lods pop imul out (bad) (bad) test loopne int3 xor mov pop mov sbb mov mov nop xchg loopne (bad) rex.B fisubr xor xor mov pop xlat insb movabs add clc cmp jmpq data16 icebp xor rcr xadd nop xadd adc bswap sub shl rcr lea (bad) icebp or cmp sub movsbw mov movzbw mov movzbl movsbw setne mov jmpq je sub shr mov cmp mov btc bt shl bt lea stc cmp bt cmp jmpq jmpq jne bts clc shl mov jmpq xor jmpq test jmpq stc mov test test jmpq callq sbb mov jmpq js bswap not lea mov mov jmpq nop jmpq mov mov jmpq mov jmpq je bts sub add xor jmpq callq bt bt jmpq mov jmpq callq bswap mov je callq bt stc test jmpq mov jmpq jmpq jmpq shld mov jmpq jmpq je clc test clc test cmp jmpq xadd mov neg and lea jmpq jmpq js lea mov jns callq rex.W repz out mov btr cmpq seto jmpq jne cmc testb jmpq jmpq add clc add bt cmp add stc xor jmpq cmp jmpq jmpq jmpq mov setno lea movzbl bswap mov jmpq jmpq je shr btr ror cmp mov jmpq jmpq cmpq lea mov jmpq test jmpq jmpq je jmpq je bswap movzbw mov movzbw setl mov xchg bswap movsbw mov mov bswap jmpq callq cmc bt test jmpq not movsbw mov jno callq not inc ror sar mov test jmpq movsbw mov mov jmpq setno mov je callq cmc jmpq jne seto lea not bswap mov jmpq callq test test bt clc xor stc bt bt test jmpq stc bt cmpq jmpq and out jg int push (bad) (bad) adc xchg movslq (bad) (bad) or (bad) rorb je enterq pop mov mov (bad) movabs movabs (bad) fsubs movabs ds (bad) (bad) inc sbb adc push clc std sti (bad) push fcompl (bad) jae addb mov jne rcrb rex.WRXB mov mov stos mov loopne cwtl loope in outsb (bad) xor cmp stc fcmovb out cld js test rol test rex.WXB rex.WXB or fcmovu cmp outsb add rex.WB jmp rex.W jl jrcxz xor andl (bad) movabs scas enterq out mov shlb xor cmpl pop pop or out std sub (bad) (bad) sbb mov retq lret sub enterq jl mov insb and rex.W lock add sub insb pop (bad) (bad) stc cltd sbb rex.WRXB and mov je movabs jmp repnz cmpl xor (bad) add (bad) (bad) adc adc out pop scas adc sub enterq scas pop cmp xor stc jne jbe mov movslq (bad) mov pop test fcoms xchg rex.RB mov add roll push mov repnz (bad) nop sbb fimull fidiv add ror data16 (bad) (bad) jmpq mov outsl adc pushq add add add (bad) imul jle repnz cmp rex.WX mov std jns repnz lods cmp xchg jnp mov fisttpl jmpq add subl cwtl jns pushfq cmpsl out (bad) cs and sbbb jg xor cltd and leaveq rex.WXB rep cld int jbe (bad) push mov retq add (bad) fnstenv xchg and jno rex.XB rex.WR sahf iret xor mov rex.WXB shll scas insw divl fisubl jne rolb (bad) sbb mov and fiadd pushq sahf cmp cmpsb mov sahf (bad) jrcxz outsb sahf in in rex.XB shll mov mov setnp lea mov jmpq je btr shld mov bt cmc jmpq je test test and sub sete mov jmpq jmpq je sbb mov stc test jmpq cmp jmpq pushq jmpq jmpq mov jmpq jmpq test add xor shl mov mov clc cmc test jmpq jmpq jmpq cmp stc test jmpq callq jmpq add je jmpq jmpq lea not lea jmpq jmpq jmpq cmc stc and clc bt cmp jmpq cmp jmpq jmpq ja callq xchg lea movsbw movsbw bswap lea jmpq lea mov not lea not bswap setp mov jmpq cmp jmpq js movsbw movsbw mov mov jmpq callq setne mov jmpq jmpq jmpq je sets mov mov not mov jmpq jmpq jne movabs ror sub bswap mov bt test jmpq jmpq je bsr movzbq lea xor lea setns not lea mov jmpq jmpq test jmpq test jmpq jmpq je test bt cmp stc cmpl jmpq jmpq jmpq jmpq jb stc bt jmpq jmpq callq movsbw xchg jmpq jmpq je inc add bt mov bswap xadd not and mov data16 icebp bsr sub not mov jmpq movsbw nop lea mov jmpq lea not not bswap jmpq stc test jmpq jmpq jmpq je jmpq je ror bsf mov cmc clc bt test mov test cmc clc jmpq callq jmpq mov jmpq clc sub cmc cmc clc add jmpq bswap lea jmpq mov not mov jmpq cmp jmpq je jmpq inc stc clc movzbl test xor stc stc cmp movsbw movzbq lea bswap seta rcl neg btc sub sar shl btc shld test setne movsbq setb mov mov not jmpq movzbw mov jmpq jmpq jmpq jmpq jmpq callq shl mov bt test jmpq jmpq jmpq je clc (bad) icebp mov test clc cmc mov bt clc cmpw je je not movzwl bts not movzbl stc shl cmc bt shr jmpq jmpq rex.XB (bad) out jg cmp adc mov or lret std mov fisubr push adc ror cmp sbb sbb (bad) push or fsubs ds (bad) (bad) lcall enterq sbb sbb add add (bad) mov mov pop adc ds pop lahf rex mov (bad) xchg data16 lock callq cmc pop (bad) rex.RX fisubr rex.XB movsb sbb mov repz jle mov adc (bad) xchg mov mov cmpsb fldl vmovd loopne movabs nop jmpq stc cmc cmp cmp add adc rol lea mov cmp cmc add bt cmp jmpq add add add (bad) (bad) shrb hlt addr32 callq (bad) lods and and decb add retq decl movabs shr (bad) add callq movsbw bswap xchg xchg lea lea not jmpq mov lea bt add cmc mov shld adc rol mov movsbw sub xor sete lea bswap jmpq je jmpq jns je mov mov bswap not mov lea setle mov jmpq jmpq pushq jmpq jbe jmpq jmpq mov jmpq callq test clc cmp mov bt clc test jmpq jmpq callq not lea jmpq jbe bt mov shl not cmc mov cmc stc jmpq callq clc cmp jge mov test test cmc cmp jmpq jbe jmpq mov jmpq jmpq jmpq mov jmpq jmpq mov jmpq test clc test jmpq jmpq mov clc stc bt stc test jmpq jne jmpq movzbw lea mov movsbw mov jmpq callq lea jmpq je btc shl neg movzbl xor jmpq je cmp clc cmc cmp jmpq jmpq jne setno movsbq mov movzbl mov jmpq jmpq cmc cmp jmpq jmpq jmpq mov jmpq je sbb bsf shl btc xor jmpq jmpq jmpq mov jmpq callq seta mov movsbw mov jmpq callq rol stc mov mov cmc test jmpq cmp jmpq jmpq add bswap not mov jmpq test cmpl jmpq jmpq jmpq ja pushq jmpq jmpq je stc xor jmpq je jmpq jmpq je jmpq callq or shld bsf mov stc test jge je jmpq clc add bswap bsr bt mov bt cmc add stc bt cmc add shrd movsbw adc mov jmpq jmpq bt stc test sub test stc jmpq lea jo callq clc and mov lea mov clc test jmpq je xchg jmpq jmpq callq setne setl not mov jmpq jmpq movzbw not lea mov jmpq callq shr mov lea cmc rcl lea clc bt test cmp jmpq je jmpq movsbw movsbw bswap mov not xchg mov mov mov jg mov movsbw mov lea not bswap bswap movzbw mov jmpq callq adc ror mov jle test jmpq test cmp jmpq pushq jmpq jmpq mov bt stc add sar bts movsbl not mov bt stc test jmpq mov mov mov jmpq callq jmpq je and not ror nopw shrd movsbw bswap xor mov cmp cmc test jmpq je jmpq jmpq inc jmpq js setns not movzbw mov jmpq je btc bt dec bsf sub not movzbw setnp mov jmpq jmpq jmpq jmpq je jmpq jne clc clc bt sub jmpq clc test jmpq je bt clc clc cmc mov clc bt cmc bt cmpb jmpq callq jmpq xchg not bswap setbe bswap mov jmpq jmpq callq bsf neg xor dec mov stc bt stc cmc test jmpq callq stc bt jmpq bswap mov jmpq jmpq incl jmpq callq clc stc jmpq jns je cmp cmp cmp jmpq jb bt cmp cmp jmpq jb dec incl mov bswap mov jmpq callq bsr stc not mov shrd test cmpq not bswap movsbw mov jmpq jle (bad) push jp jg xchg adc sti sub sti movabs in add lea or shrl ffreep jmp rex.RXB (bad) and (bad) (bad) (bad) (bad) cmp xchg mov fstl paddb mov rorb repz (bad) mov mov nop jmpq callq bswap movzbw mov jmpq callq data16 lock mov clc test test jmpq jmpq lea jmpq nop jmpq jmpq jmpq jmpq jb mov movsbl mov mov jae mov movsbw jmpq jle mov lea bswap jmpq je shld cmp xchg mov btr mov shrd not mov test mov jmpq bswap movzbw mov bswap not mov jmpq je and adc (bad) lock mov mov test test jmpq js pushq jmpq jns callq cmc test stc test cmp jmpq callq movzbl not not mov jmpq jmpq js setns not movzbl setl mov jmpq jmpq jmpq callq movsbq bswap lea jmpq jmpq jmpq callq lea mov sub btr rcr mov jmpq jmpq jmpq lea mov jmpq mov jmpq mov jmpq stc stc sub clc cmc add jmpq jmpq jmpq jmpq mov jmpq jmpq callq jmpq callq test sub clc bt cmc sub jmpq and clc cmp cmp jmpq jb test test jmpq callq test and mov cmc test cmp jmpq movzbq mov jmpq test jmpq test cmc xchg stc test jmpq callq jb cmp jmpq bt test jmpq callq btr shl movzbl sub mov cmc cmc cmp jns cmova jmpq xor jmpq callq rol movsbw shr mov bt clc stc test jmpq callq xchg mov lea mov lea jmpq callq jmpq callq bt cmc cmp jmpq je sbb rcl sbb xor not setns mov jmpq jmpq je jmpq jmpq jmpq jmpq callq cmp rol bswap mov movzbl shl adc mov cmp test xor jmpq jmpq jmpq je jmpq jmpq cmp ja je movsbw mov jmpq lea jmpq cmc cmp test jmpq jmpq callq or stc bsf stc mov jmpq jmpq jmpq jmpq pushq jmpq callq cmc sar not sub movsbw mov jmpq not jmpq je stc cmc cmc cmp cmpw jmpq callq lea lea setg lea mov lea jmpq setge mov not jg bswap mov mov bswap mov mov jmpq jmpq pushq jmpq callq cmp cmc bt cmc test jmpq jmpq mov cmc stc test test jmpq mov jmpq callq xchg mov dec cmc lea stc mov cmc cmc cmc bt test jmpq sar setno sub lea not movzbq lea mov jle callq cmp bt xor jmpq je clc clc mov bt test jmpq bt clc cmp jmpq pushq jmpq test jmpq jmpq cmp jmpq jmpq callq bt rcr mov cmc test jmpq jmpq jmpq jmpq test jmpq jmpq jmpq callq stc cmc and stc cmp jmpq mov jmpq jmpq je test test test mov bt cmc jmpq bt bt stc test jmpq callq not not lea bswap mov setne jmpq jmpq jmpq callq jmpq je lea sbb bsf xor sub movsbw not not lea mov jmpq jmpq add jmpq je and rol jmpq jmpq jmpq jmpq xor rex.X jae jg fdivrs add jge mov mov sub in fs xchg cmpsl cmp test (bad) mov retq and (bad) (bad) (bad) callq push sarb (bad) test pop sub push (bad) pushfq fsubs int cwtl mov mov push sub addr32 int jbe mov xor imul test cmp add add ja (bad) and mov or mov shlb xchg rex.X ja pop fld outsl std rorb fs loope (bad) je (bad) sbb stos fldt loop in adc cmp rex.RB (bad) or stos rex.R rex.WXB rex.WX gs (bad) mov fwait or pop sbb stos add mov add lea lods (bad) pop lods stos (bad) rex.RX test push xchg (bad) rex.R xchg negl jmpq stc mov push loopne test leaveq mov jmpq not jmpq mov test cmc mov cmc cmp cmp test mov jmpq jmpq jb jmpq jge callq stc stc cmp jmpq stc test mov clc cmc clc stc mov test bt cmp ja jb bswap mov movzbw bswap jmpq test xchg cmc jno jg rex.R adc xor and outsb roll and scas (bad) sub stc shlb or jno lock (bad) xor jp and (bad) (bad) (bad) dec fwait or jae (bad) stc rex.RX rex.WRX adc in mov cmp xchg or out fildl (bad) pop jmpq jne shr ror bsf shld mov jmpq bt cmp jmpq jmpq bt cmp jmpq mov jmpq add mov not mov movsbq not jmpq callq jmpq callq xchg not mov movsbl mov sets mov jmpq callq cmp test jmpq jmpq bswap mov jmpq clc cmp test jmpq je neg rcl sub not lea jmpq test jmpq je jmpq jmpq jmpq je jmpq jmpq jmpq clc cmc cmp jmpq jmpq je jl callq jmpq je btr mov cmc jmpq mov mov mov jmpq test jmpq callq clc test jmpq add adc (bad) fwait negl mov scas jne pop jg mov sbb sbb movsb (bad) gs pop or push rex.WB jae jb (bad) fnstsw callq (bad) addl sbbb push fistpl rex.WR rex test cmc (bad) repnz lret int (bad) cwtl in (bad) std pop push pop idivb subl mov rex.B (bad) push gs lock mov add mov loope stos add add add jmpq jmpq je jmpq je mov movsbw movzbw mov jmpq jmpq callq cmc test jmpq jmpq jmpq cmp cmp clc add cmc stc clc add bswap setge mov jmpq jmpq callq not lea setb mov lea movabs not mov jmpq callq neg mov movsbw sub xchg xchg mov movzbq mov jmpq callq not mov cmc cmc stc stc test jmpq jmpq test jmpq callq bt lea jmpq clc add jmpq jmpq pushq jmpq and bt bt test cmp jmpq jb xchg dec bswap mov cmc xchg rcr bts or jmpq add test mov jmpq callq stc test jmpq callq test btr mov or cmpq mov jmpq jmpq je jmpq callq bswap mov bswap movsbl lea jmpq jmpq jmpq je jmpq add callq jmpq je lea mov bt cmc rcr lea clc btr rol movzbl mov xchg bswap bswap lea not mov bswap not jmpq bswap movzbw not mov mov mov jmpq jmpq jmpq xchg jmpq mov jmpq je bsf adc mov bt test cmc xor jmpq jmpq mov jmpq bt clc test js je movsbl stc rol and mov sbb setno bts mov sub test movsbw lea cmp jmpq jmpq callq jmpq jb stc cmc cmp cmp jmpq jne rol adc mov jmpq jmpq jmpq jmpq callq adc test and mov stc test jmpq jbe jmpq jmpq bt add jmpq jmpq jmpq callq lea rcr mov clc jmpq jmpq jne movsbw btc sub movzbl xor movzwl rcl mov ror shl shl ror not bts lea setno mov stc clc bt or jmpq clc test jmpq jne clc cmc test jmpq je jmpq je clc cmp jmpq test test test jmpq callq movsbl jmpq cmc cmp jmpq callq lea mov lea movzbw mov jmpq jmpq je cmp clc cmp cmp jmpq callq stc jmpq jmpq jmpq callq not xchg bswap mov jmpq jmpq je bt bt sub mov bt cmp bt bt test jmpq jmpq jmpq callq clc and stc test cmp jmpq mov jmpq callq shrd mov cmc cmp bt test jmpq jmpq callq test test test jmpq je stc sete xor jmpq jmpq mov jmpq jmpq mov jmpq je movsbw movzbw movzbw mov jmpq jno mov jmpq not mov jmpq callq jae movb jmpq cmp jmpq jmpq jmpq sub jmpq not mov jmpq callq bt test jmpq add bt jmpq je dec neg dec bswap mov not btr shr mov shld stc neg and lea not mov lea movzbw setle jmpq mov jmpq callq cmc stc test jmpq stc cmc test jmpq or btc sub not mov jmpq js callq jmpq add mov jmpq jmpq callq mov xchg jg lea mov movzbl lea jmpq callq movzbw lea mov mov jmpq lea rcr xor jmpq jmpq callq cmp bt bt cmp jmpq jmpq callq test jmpq incl jmpq je bswap movsbw mov mov jmpq jmpq je clc sub jmpq jmpq callq mov mov lea bswap movsbw bswap movsbw lea jo callq movzbw lea setns lea je callq sub shl mov inc neg shr lea btc bts bts sub jmpq je jmpq jmpq not movzbw mov jmpq je movzbl lea mov movsbl movsbl movsbw mov movzbl setnp lea mov mov jmpq clc add not jmpq callq jmpq lret (bad) addr32 jg fwait jle fbstp (bad) jne sbbl mov jb or int pop fimul lret jo (bad) mov (bad) mov and (bad) (bad) (bad) inc sbb pop mov rex.XB push xor repnz xorl rcl mov cmc adc test (bad) (bad) pop mov mov lods std push retq mov rex.RXB cld cli (bad) (bad) jmpq jmpq jmpq test jmpq mov jmpq callq movsbw bswap mov jmpq mov movsbw incl movsbw movzbw movzbw mov jmpq jmpq je bts xchg rcl xor xor movzbw setle mov not lea not mov xchg movsbl mov lea mov movsbl not mov not mov lea movzbl movzbl jmpq jmpq mov movsbw bswap sets seto mov mov mov mov movsbw movsbw setnp mov jmpq callq add movzbw or xadd mov bt rol xor movsbw xchg movsbq jmpq je cmc test cmp jmpq callq bswap lea mov mov jmpq callq (bad) hlt bts neg mov cmc cmp test jmpq je cmc cmp cmp jmpq add add add sub jle (bad) movsl rex.B movabs int3 sub mov pop shl stc out jno push rcll jmpq jne or cmc not bt mov test mov cmp cmc xor jle mov jmpq cmp jns jmpq jb adc mov movsbw bt shl add sub bswap jmpq xchg clc bt test jmpq clc cmc jmpq mov movzbw setnp mov mov movsbw mov movsbl setae mov jmpq callq clc bt stc test cmp jmpq jne lea mov jmpq jmpq jmpq jmpq je add sub xor lea bt xor bt xor movsbw bswap lea mov not mov not mov jmpq jmpq jmpq jp nop jmpq cmp and sbb ds add idivb rex.RXB pop in (bad) idivl adc cmpl mov pushfq (bad) mov cwtl sub sub leaveq (bad) adc mov mov (bad) (bad) (bad) inc movabs lret jnp movsb callq out (bad) (bad) sub mov jb push pop jns and cmp xchg mov (bad) xchg rex.WR rex.B and ss loop pop rex.XB push mov rex.W test (bad) fs (bad) mov mov (bad) cmpsl jb fistpll ss push mov mulb data16 and xlat (bad) cmp adc pop cltd cmp mov add cs out (bad) (bad) in (bad) (bad) pop xchg jno (bad) test (bad) (bad) (bad) ss rex.X in ja out (bad) (bad) sahf xlat jmp (bad) and xchg mov (bad) rex.X add mov std out bnd and rcll fwait mov in movabs (bad) add movsb rclq (bad) sbb scas sub lods retq jb jne retq cwtl leaveq mov sbb rex.X rex.R cvtdq2ps jb mov cs sarb jbe push (bad) or mov (bad) outsb and retq fidivrl push fild rex.RX ds retq sub (bad) push cld mov (bad) rolb movsb ja (bad) mov (bad) roll cmp rolb mov xchg pop leaveq mov mov pop push addl adc (bad) rcll rex.WRX nop mov rex.X mov and jb (bad) mov jno pop fldz adc test retq mov xor and popfq loope (bad) cs leaveq rex.WXB rex.WX add loope xor or sub test (bad) jbe rcl xchg (bad) add jmpq fdivl rex.WRXB rex.XB sub pushq es mov (bad) stc sub or retq cmp shlb (bad) adc xor pushfq (bad) movslq enterq cmp loop callq cltd (bad) mov and jg ss mov retq outsb cmp scas cmp fsubrs rex.WRXB pop jne add (bad) lods movabs jne add push clc add (bad) (bad) gs test push rex callq andb in xor orl in mov jns and (bad) in (bad) rorb lods fs int3 xorb int jmp push pushq sub jrcxz pop sub pmuludq lret xlat xor (bad) mov xor retq pop pop rex.B out rex.R rex.XB rex.R sbb mov iret add add mov loope adc xor (bad) repnz rex.WB jno sbb icebp rex.X fistp frstor mov rex.B repz test (bad) mov mov cqto (bad) sahf out (bad) rex.R (bad) jbe orl sub xchg adc lods rclb fbstp mov xorl enterq xchg iret rex.WXB rex.B add movl pop mov add add mov mov popfq mov xor mov adc fistl fsubrs or movslq sub mov scas (bad) cmp add (bad) retq movsb and add shl (bad) and (bad) insb lret sub rolb jns mov jg pop cmc cli (bad) movabs mov and fwait xlat rex.RB mov in sbb cmpsb rex.WX cmc lods mov sbb push shlb and (bad) cmpsl jg mov insl lret lss ss jp movabs jbe movslq and pushfq (bad) rex.WB (bad) adc jrcxz jnp or sarb add and or mov retq cmp ja mov sub ja (bad) jle pop lahf (bad) sti jbe rex.B sub nop test mov xor stc add imul subl out (bad) lret std jg jg (bad) add nop lods jno callq gs fiadd xchg sti fbstp (bad) fadd ss push (bad) sbb xchg sbb jge (bad) cli add mov sub (bad) fidivrl (bad) addb (bad) (bad) (bad) jmpq rex.RXB imul add ds (bad) (bad) dec sbb and nop mov jle movabs hlt jne mov cmp and and faddl negl int3 (bad) xchg xor (bad) fsubl out out (bad) jb negl repz out jg rex.X andb orl pop subl mov jp xchg int cmpl xchg (bad) xor xor cmp insb sub mov jmpq jnp out test movabs mov cmpsl (bad) fisub es push mov cmp xor clc rex.WRX loopne mov xchg mov add nop jmpq je bt sets mov jmpq je movzbw cmc lea rex.W mull (bad) sbb leaveq lea mov mov lea mov movzbw jmpq callq cmp cmp jmpq callq and xor xor mov jmpq jmpq jmpq jmpq jmpq jmpq movzbl nop not lea movsbw mov setle lea jmpq callq btc ror lea bt cmp bt bt test jmpq je jmpq not mov jmpq je stc mov jmpq jmpq cmp add cmc mov cmc add inc shr mov cmc test test cmc add stc bt test jnp add jmpq cmc test jmpq callq clc cmp test and stc cmp clc cmp jmpq jmpq jmpq mov not jmpq jmpq callq movsbw mov jmpq je mov sub bswap bswap not movsbw mov jmpq callq rol neg add ror mov bswap rcl cmp mov cmp stc test test or test xor test test cmc test repnz jmpq mov jmpq callq mov lea mov jmpq jmpq jmpq mov cmp cmc jmpq je movsbq lea mov jmpq jmpq jbe pushq jmpq je jmpq callq test test jmpq je test mov shr movabs bts mov setp bswap seta sbb mov sar mov stc add mov bswap bts bsr mov cmp test add sbb mov bt add bt add jno btr neg mov clc cmp add jmpq test jmpq jmpq jmpq jmpq je cmc cmc jmpq callq shr neg mov rcl mov bsr inc mov bt jle xor jmpq jmpq cmc cmc cmp jmpq not movzbw lea mov jmpq jmpq pushq jmpq callq clc clc test jmpq callq jmpq callq jmpq mov jmpq jmpq je dec or and xor mov bt test test jmpq mov jmpq cmc clc xor stc stc test jmpq sub jmpq callq jmpq callq clc test cmpq jmpq jmpq jmpq jmpq callq movsbw lea jmpq jmpq callq jmpq mov bswap lea mov jmpq jmpq jmpq lea jae mov mov bswap mov jmpq callq not mov movzbw movsbw movzbw jmpq jmpq js lea mov mov jmpq jmpq jmpq jmpq mov not jmpq jne bswap not mov movzbw mov jmpq cmpl jmpq jmpq jp je or dec xor mov lea mov jnp callq stc test jae js movzbw jmpq jmpq callq shld lea cmp test jmpq callq btc mov add sub adc rcr cmpq setb mov jmpq mov test cmp cmc cmp cmp jmpq mov jmpq jmpq callq jmpq jb and (bad) repnz jmpq jmpq jne cmc stc test bt xor test xchg stc cmp bt jmpq jmpq jmpq jmpq test clc cmc test jmpq je mov sbb mov stc jmpq callq cmp cmc test test jmpq je jmpq jmpq nop jmpq rcl bsf btc sub not mov jmpq mov jmpq jmpq mov jmpq js not movsbq mov jmpq jmpq je jmpq xchg not bswap jmpq je xor and bt lea bswap shld xchg sub lea mov not bswap mov mov jmpq jmpq je cmp dec btr xor mov bt mov mov sbb jmpq mov setne lea lea lea movzbl jmpq callq stc mov clc stc bt test jmpq cmp jmpq test cmc or jmpq je jmpq cmp jmpq cmc cmp cmc test jmpq callq jmpq mov jmpq jne clc cmpb jmpq je jmpq jmpq callq not bsf mov test cmc bt clc test jmpq callq movzbw bswap bswap bts mov xadd rcl lea btr and sub bswap mov lea mov jmpq je stc clc stc bt cmpl jmpq jmpq jmpq jmpq jmpq imul (bad) push out jg movabs (bad) enterq jmp pushq fwait (bad) sbb adc jge add rex.RX pop adc imul pop rex.XB (bad) (bad) (bad) pushq (bad) push cmc (bad) jg gs callq pop in mov rex.X jne (bad) in sti cli push cmpsl clc fiadd (bad) (bad) jae xor test (bad) decl fwait (bad) mov clc clc sub jmpq jmpq je rcl clc cmc bt sub mov mov jmpq cmp test jmpq callq cmc not lea test clc test jmpq jmpq jmpq callq bt jmpq jmpq je shr mov setnp mov stc rcr not mov inc sub not setl mov jmpq jmpq jmpq test jmpq test jmpq jmpq jmpq callq clc test jmpq cmc jmpq jmpq movzbw mov jmpq callq clc cmp cmc clc test jmpq xchg bts mov rcl bsf jmpq jmpq xchg jmpq jmpq jp callq stc mov cmc test cmpq jmpq movzbw mov mov mov mov mov bswap seta not mov xchg lea jmpq not lea lea jmpq jmpq jmpq jmpq callq clc bt and test cmp jmpq test cmp cmp jmpq mov jmpq jmpq jmpq je stc shr mov cmc cmp test jmpq jmpq jne btc sub not neg neg sbb or sub mov mov clc stc cmc clc repnz mov ror sub movzbw nop rcl mov (bad) hlt add mov or cmp add clc cmp jmpq nop jmpq callq cmc cmc test test jmpq jmpq jmpq callq movzbw mov jmpq jmpq jmpq jmpq mov jmpq jmpq jmpq jmpq jne nop jmpq lea bswap mov mov jmpq setl bswap mov jmpq je stc stc cmp jmpq callq jmpq jmpq jmpq mov jmpq je jmpq jmpq ja jmpq jg mov movzbq mov jmpq jmpq jmpq jmpq jp je cmc mov jmpq jmpq mov jmpq test stc test jmpq callq bts not jmpq movzbw movsbw add adc lea lea sub sbb data16 icebp bsf mov jmpq inc dec or rcl bswap mov cmp jmpq jmpq jmpq jmpq je bswap bswap not bswap mov jmpq jmpq mov mov jmpq je bswap lea mov bsr mov mov rcl bsr rcl xor seto mov jmpq not mov jmpq je test sub jmpq jmpq jno callq inc sub cmp mov cmp jmpq mov jmpq je jmpq jmpq stc stc test test jmpq jmpq inc jmpq callq test test jmpq jmpq jmpq jmpq seto mov jb mov jmpq callq movzbw mov movzbw movsbw mov jmpq jmpq mov jmpq jmpq clc test jmpq cmp test jmpq je cmp stc cmp bt cmp jmpq jmpq jmpq callq shrd mov cmc bt cmc xchg stc jg test jmpq je stc movzbw btc btc mov rcl clc rcr lea bswap rol lea jmpq jmpq callq or mov cmc cmc jmpq test jmpq je shrd mov movzwl mov bswap and bsf xor lea movsbw not lea mov jmpq mov jmpq movl jmpq jmpq mov je callq movzbl rcl mov cmc test jmpq jb inc xor and lea clc sub jmpq je clc stc bt bt xor jmpq callq jmpq test jmpq jmpq mov mov jmpq je cmc jmpq jmpq callq cmc stc cmc test jmpq jmpq jmpq je jmpq clc clc add jmpq jb jmpq sub test stc stc add jmpq je bts neg neg lea bt bt sub movzbq mov bswap mov jmpq jne test lea not btc shl mov jmpq mov jmpq add jmpq mov jmpq movsbw mov mov jmpq jmpq callq jmpq jmpq jae js not mov bswap mov jmpq jmpq bswap movsbq mov mov jmpq callq cmc cmc mov stc bt test clc test jmpq movzbw setne mov mov neg mov bts xor rol mov cmc test bt cmp add clc cmp clc add cmp cmp add jmpq callq mov mov movsbw seto not movzbw mov jmpq je cmp cmp test cmpl jmpq jmpq jmpq je not add not sub movsbw not not movzbw mov jmpq callq movsbw mov ja lea jmpq jmpq jmpq add clc jmpq pushq jmpq add bt bt stc add test test clc cmp xor cmc clc bt add jmpq not mov setbe mov movzbw movzbq mov jmpq jne rcl sbb test bts mov cmc clc cmp test jmpq clc mov jmpq mov jmpq je clc not mov clc test cmc test test jmpq mov je callq xor sub sub rcl mov clc bt cmc bt test jmpq js jmpq test test jmpq jne stc cmc clc test jmpq je bts sbb xadd mov shl bsf or movzbw mov jmpq callq jmpq mov jmpq callq bswap (bad) repnz movzbl shl btc sub lea lea bswap mov jmpq jne mov movzbl not lea mov jmpq not lea mov jbe callq bt test jmpq jmpq callq clc xor lea cmp test jmpq rex.WB imulb rex.WRX clc test cmc bt test jmpq je jmpq jmpq callq movsbw jmpq sub jmpq stc stc add jmpq jne test cmpb jmpq jbe dec rcl mov bt cmc cmp cmp jmpq bswap mov jmpq jno callq jmpq callq setle jmpq jne clc sar lea bsf shrd adc btc mov jmpq callq lea mov movzbw mov mov sete mov movsbw mov jae mov jmpq pushq jmpq je shld clc bt shl xor bswap jmpq cmc cmc nop bt add stc stc cmp jmpq bswap mov jmpq jmpq setns movzbq lea setp lea jmpq jne jmpq callq cmc jmpq jmpq callq cmp test jmpq jmpq jmpq jne bt lea bt jmpq jmpq je mov setge lea not mov movsbq mov jmpq callq inc sar rcl mov shl bswap bsr mov cmc clc cmp test jmpq test jmpq jmpq jmpq jmpq jne jmpq jmpq jmpq jmpq cmp jmpq je bts cmc or inc stc movzbw rol lea jmpq sub bsf btc xor sub mov dec repnz dec mov not movzbw bswap bswap dec lea not neg mov stc test jmpq callq cmc clc clc stc xor cmp jmpq jmpq callq adc mov cmc cmc cmc test jmpq setp lea movabs mov jmpq clc mov clc bt add jmpq jmpq jmpq cmp mov test cmpb jmpq je shl xor jmpq js bt clc jns test jmpq callq jmpq jmpq callq clc test jmpq bt cmc cmpb jmpq jmpq callq jmpq mov jmpq nop jmpq mov jmpq jb cmp stc cmp jmpq jmpq not mov mov mov movsbw mov jmpq callq adc and lea cmc cmp clc test jmpq jmpq jmpq jmpq bswap xchg dec inc mov neg data16 repz sar or shrd setge or bswap mov test test cmc shl stc cmp clc xor jmpq jmpq jmpq test lea clc jmpq mov jmpq je jmpq movzbw bswap movzbw mov jmpq jmpq jmpq movzbw lea mov movsbq mov xchg lea mov movsbw mov jmpq jmpq jbe jmpq jmpq mov jmpq je jmpq jmpq jmpq sub jmpq je stc test clc test cmpl jmpq jmpq jmpq jmpq cmc bt cmp jmpq jmpq js movzbl bswap not mov jmpq jmpq callq cmp xor clc sub stc bt test cmc xchg jmpq jmpq callq clc and bts mov test test test jmpq callq rex.W icebp mov cmc mov bt bt test jl jmpq jmpq cmp jmpq callq cmc test jmpq movsbl xor data16 repz inc nop sbb mov cmp test test cmc test jmpq mov jmpq jne movsbw shld sub bsr cmp rcl movzbw or rcl mov test repnz clc stc xor add jmpq callq lea ror xor shrd mov jmpq jmpq callq movzbl not setp setl mov movzbw jmpq callq cmp clc cmp jle jne and btc xchg mov neg mov mov xadd not dec movzbw mov bt bt add bsf lea ror lea not mov test test add cmp bt clc add movsbl mov jmpq je not not movsbq bswap mov jmpq callq test or clc mov test cmp jmpq je jmpq je jmpq jmpq callq test jmpq je clc cmp cmp jmpq lea jmpq xchg movsbl mov jmpq callq jae clc cmp jmpq callq lea mov bswap mov movsbw not mov jmpq jb stc or mov lea movsbl sbb xor movzbq jmpq callq or mov jmpq mov mov movsbw setl not mov jmpq callq xchg lea bswap lea jmpq jmpq je rol stc mov jmpq jmpq dec bt movsbl test mov clc test jmpq callq setg bswap not bswap lea movzbw setle movsbl lea jmpq jmpq jmpq jmpq jmpq add add add cld imul hlt sbb (bad) jo jbe adc jge rex.X loopne push (bad) xor movsb data16 cmp jge scas cmpsb in jo (bad) sub (bad) push mov rex.WXB rex.WR xchg (bad) jno cmp jl pop mov enterq in cmc push jle test jmpq push test jns push push lea and jmpq mov cmp rex.W mov (bad) pushq cltd pushq js movslq mov (bad) addr32 mov add jge sbb pushfq popq rex.WX out (bad) int sub rcr (bad) (bad) fistl pop (bad) (bad) sub (bad) (bad) (bad) adc incb sbb pop and stc mov divl mov addl subb sahf test sbb cs push lret lret mov (bad) adc cmp mov adc (bad) movsb stc and xor cltd rex.RX add (bad) sub mov jns xor leaveq mov cmp callq stc cmc cmp cmp test jmpq pushq jmpq je mov shr dec bsr nopw test rol sar mov clc stc cmc test jmpq je jmpq callq setl bswap lea movzbw mov jmpq jmpq mov jmpq shr inc mov bt clc mov setg bsr sar mov test cmc clc stc mov or clc mov bt cmc bt mov jmpq callq xchg rcr mov rcl sar shld shld mov jmpq je setle movzbw jmpq jb jmpq jmpq jmpq jne bts bsf shl test mov jb bt mov jmpq pushq jmpq mov jmpq jmpq mov lea movsbl mov jmpq jmpq jmpq jmpq movzbl lea jmpq mov lea test test jle je jmpq je btr movabs mov stc test jmpq movsbq lea mov movzbw mov movzbw mov jmpq jmpq jne ror and cmc adc mov rcr movzbl bsf mov btr lea movzbw add mov not bswap mov jmpq je clc mov shld (bad) icebp rcr sbb mov btr or lea and movzbl lea bswap movzbl mov movzbl setae mov movsbw mov jmpq xor jmpq jmpq callq mov lea jmpq cmp cmp jmpq mov jmpq jbe callq jmpq dec mov movsbl mov jmpq callq bsf adc mov cmc bt test jmpq je cmp clc jmpq je xadd add clc cmp mov bts shl dec cmc mov stc xor lea bt cmp jmpq jne or sar mov sar mov test jmpq callq cmp btr mov shr mov stc test clc jmpq je bts mov dec shrd sar mov not mov rol sub not mov jmpq callq sbb shld movsbl xor mov jmpq je jmpq jmpq callq mov btr cmc mov cmc cmc jmpq jmpq jmpq callq mov movsbw lea jmpq callq clc cmp stc test jmpq jne jmpq cmc cmc test jmpq lea jmpq jmpq inc sub lea mov not mov jmpq jne cmc bt clc sub test xchg stc test jp je not lea movsbw mov bswap jmpq callq rol test neg mov jmpq callq not not mov movabs lea bswap mov jg mov jmpq jmpq xor add add jmpq je cmc stc cmc cmp jmpq jne cmp jmpq jmpq jmpq cmp test test jmpq je bswap not lea mov mov not bswap setl mov jmpq mov jmpq callq stc cmc jmpq jb jmpq mov jmpq cmp cmp jmpq jmpq jmpq pushq jmpq test jmpq je bswap movzbw jmpq jmpq callq sar movsbw neg btr lea cmp clc test jmpq jmpq ja je bsr mov jmpq je jmpq mov jmpq shrd not sbb nop xchg mov nopl cmc bsr sub xchg mov not mov lea bswap lea xchg jmpq jmpq mov jmpq callq bt stc test stc sub jmpq jmpq jb setb dec inc movsbq dec inc shl bsr mov xor cmp shrd bswap or cmc btc jmpq mov jmpq callq stc mov lea xchg sub lea mov not mov jmpq jmpq jmpq jmpq je movzbw mov xchg mov mov seto mov jmpq mov jmpq callq lea mov lea movsbw mov jmpq jmpq jmpq callq lea mov setne movsbq mov jmpq je clc jmpq jmpq rol mov test jmpq sete mov jmpq mov mov mov jmpq callq movsbw bswap bswap lea jmpq jmpq je bswap lea lea movsbw mov lea mov not not bswap lea mov jmpq jmpq callq shld ror dec mov cmc cmp jmpq jmpq callq stc test jmpq jae jmpq callq sar stc shrd mov jmpq mov jb callq sub bswap mov cmc test jmpq mov lea movsbl mov mov jmpq bt cmp xor jmpq jmpq jne bt test cmc clc testb jmpq jb callq clc cmp jbe cmp test jmpq callq cmp cmc clc test jmpq jmpq je inc mov jmpq callq stc cmp cmc clc and clc clc jmpq je movzbw not not movsbl mov xchg mov sete mov mov mov not je jmpq jmpq je cmc cmp jmpq nop jmpq jmpq sub sbb bts movzbq mov shr bsf bt sbb repnz movsbw bswap not movsbl movsbw movzbw mov dec clc movsbw mov stc test jmpq jmpq jmpq jb cmp clc cmp cmc cmp jmpq (bad) lods lret out jg adc outsl add out retq rex.WRX xchg rex.RX loope cmp jns xor rorl mov and shrb movabs rex.X adc pop rex.RB jo (bad) movsb sahf mov ds (bad) (bad) incl loop jnp pushfq sub stc cmp mov out movups and jmp or adc outsl rex.X rex.WXB movabs cmp fisttpll xchg cmp sub (bad) mov jmpq rclb hlt xchg cmp pop idivb xchg pop or jo jo adc movabs xor scas jo jae xchg mov jle (bad) (bad) sbb xor (bad) lods sub cmp lods rex.RX rex.WXB (bad) sub cli xchg and (bad) pop ja (bad) insb (bad) rex.R sub and (bad) enterq (bad) sahf jg test adc xlat sub (bad) rex.W xchg cmp in rclb mov (bad) jno push jg mov xor rex.WRX or icebp rex.RXB rclb lods push sbb (bad) push insl pop rex sub jo mov shr out mov push imul and sbb pop rex.XB sub (bad) push outsl push lahf (bad) (bad) jo enterq (bad) pushfq (bad) add cld repnz rex.WX cs xor jmp std rex.WX fldl jbe iret vpshuflw (bad) mov pushfq sub out mov xchg mov sub push pushq rex.RXB test adc shrl mov scas push lods xlat pop adc jae callq out mov xchg sbb and int lret (bad) loop xor test sarl std test cld movabs cmp scas callq int rex.RX mov clc jg sbb jrcxz jnp cmp or adc mov sbb outsb xchg push lods (bad) cmpsb adc jg nop out movsb sbb adc outsl cltd (bad) loop (bad) and sub sbbl push mov and (bad) pop callq mov pop out test adc mov pop rex.WXB (bad) pop pushfq and movsl stos and mov (bad) bnd cld pop sbb cs vandnps ror or loopne xor jl jo (bad) in scas imul pop out xchg sbb (bad) mov (bad) or out sub (bad) imulb (bad) rex data16 insl or mov rex.WRX or jo rex.WXB mov jle push rorb (bad) mov popfq (bad) scas cmpsb iret icebp xchg sub jb lods rex.XB jl sub sub rex.WRX mov sbb xlat push faddl cmpl jmp mov mov cld or iret mov rex.XB xchg and rex.WRB rex.WR lret (bad) add popfq cmp sub jl (bad) jle rex.WRX xchg (bad) cwtl cmp pop rex.WRB cs add jns rex.X xor sahf jle (bad) push push mov cmpsb pop insb pop (bad) mov rex.B adc (bad) rex.WRX mov (bad) outsb cltd retq lret xor mov sbb or xor je xor pop lea imul adc xor out movd xchg push xchg and or (bad) xor jo repz mov andb rex.WX or rex.B rex.WRXB mov iret (bad) jge pop cmp xor and pop mulb ss out lods imul fidiv xor cwtl rcrl (bad) add negl pop out rex.RXB hlt mov mov stos (bad) ss pop movabs movslq mov jg rex.RXB sahf (bad) pop fldenv (bad) pop jne pop leaveq test rorb xorb rex.WRXB or cmp callq (bad) (bad) sahf pop repz rex.WR ss jb lock rex.X rex.W sahf in and outsl movsb adc out xor adc add mov pop or (bad) (bad) mov scas imul add imul mov shll fwait mov movslq mov leaveq (bad) out rorl mov stos mov lods push imul (bad) xor fcmove lods sub (bad) push out cmpl sbb enterq push rex.WB jg rex.WXB adc (bad) or jmp (bad) gs add hlt lea (bad) (bad) data16 mov cltd enterq mov int3 repz iret cmp adc iret and movabs jae rex.X rex.WB (bad) js add push rex.RX rex.RXB pop (bad) (bad) lods rex.WXB add push out adc std test out xchg test jno and test stos xchg and repnz xchg enterq mov hlt (bad) rcr cltd addl es jbe retq rex.W or xor sub repnz cmp cs pop xchg fdivs jbe fsubs xor rex.WRB cmc mov xor (bad) push in rex.WRXB int (bad) mov mov stc movslq sub movslq adc lock insl push es mov sbb imul xlat pop adc vdivps xchg rex.RX std insl (bad) rex.WB outsl (bad) jl jnp out ficompl jo mov or or mov in xor (bad) (bad) rex.RX (bad) (bad) push mov fistp movabs insb sbb repnz je stos push mov lock adc lods sub xchg rex.WXB rex.RX mov rex.RB rex.B mov movabs xor sbb and push outsl (bad) rorl mov repnz and jg ss jo mov or (bad) sti and pushfq (bad) pushfq mov pop rex.W jne,pn pop ds sub pop lods (bad) sbb adc fstpl (bad) fidivrl add adc jmpq xor jb fcmovu or mov (bad) pop (bad) mov jmpq push (bad) pop fcmovbe (bad) rex.WR nop sti fldt and movsb ss push nopl cltd rex.WB (bad) mov rex.W stos addr32 adc adc out fsub test cld mov jmp fs pushq (bad) out (bad) jg sub xor sub mov repnz rorb movabs callq rorl or rex.WR rex.WRX (bad) pop push add mov cmp cmc sbb in scas (bad) sub or sbb (bad) mov retq cmpb adc rolb in mov test loope mov adc or test (bad) (bad) rex.R xor rex.WB andb ss sbb mov mov xchg cmp xchg xchg (bad) cmp jle int test cs addr32 jne sbb loopne sarl gs lret jne test cmp sbb stos sbb xchg mov adc jl insl sub adc fisttp (bad) xor enterq sbb sbb jbe outsb js sbb nop test cltd (bad) cmpsl cmpsb rex.XB mov popfq es xor cmpsb adc (bad) lret (bad) pushfq repz in pop data16 (bad) lods xchg jmpq xchg (bad) je shrl and (bad) in (bad) (bad) xor jnp test gs fnstcw retq rex.WRXB rex.RX scas rex.WRX jge mov out and mov cmp push or rex.X out fs adc rex.WRXB je mov mov sahf movsl cmp cmpsl mov insl (bad) xor (bad) and mov cltd stc movabs fs (bad) imul fisttp xchg (bad) cwtl (bad) stos pop data16 jmpq xchg and push xchg sub (bad) mov xchg cmp mov (bad) (bad) cld (bad) fimull es clc fldenv (bad) rcll pop mov (bad) fs (bad) mov stc (bad) (bad) cltd jne xchg movabs popfq and data16 (bad) ja fstpl (bad) and jp (bad) movabs jns sub repz je xchg lods sub (bad) bt hlt jne cs push mov (bad) scas stc sbb callq (bad) mov je stc pop add (bad) jae scas adc popfq rex.X rex.WX rex.WRXB rex.RXB loopne jmp (bad) mov rex.RXB and scas out cltd (bad) fucomp fcmovnbe faddl cmp hlt movabs or sahf pop add adc jp mov je,pt pop cmc (bad) in rex.WXB data16 lea sbb or or adc add lcall andl (bad) mov clc adc adc insl adc cmp (bad) mov xchg stos mov retq lods mov push (bad) outsb scas sbb jo int fildl rex.WXB jge mov mulb addr32 movsl movabs pop addr32 js pop clc movsl fcompl iret adc mov or xchg hlt (bad) xchg movabs pop retq (bad) (bad) pop mulb fisubrl addr32 adc push fsubrl (bad) test xor fisttp (bad) rex.RB rex.WR movsb fnop sbb gs scas rex.R mov (bad) cmpsb insb test mov rex.R jns callq loop hlt scas cmp loope lret sub cmp in add test fidiv mov pushq loop rex.RX (bad) stc fimull stos adc mov sub subl gs cmc rex.X xor adc shll adcb rex.X fwait clc (bad) out movsb movabs rex.WRX stos (bad) adc rex.RXB clc cs clc addr32 (bad) mov add jle mov mov sbb cmp sbb lret out divl icebp xchg in (bad) mov cli imul movabs xchg xchg mov (bad) test test rorl jg rep rex.RB rex.RX mov sub or mov (bad) (bad) xor mov mov cmp rex.WXB (bad) fbld cmp rex.WR clc and (bad) stc sub and (bad) ficoml sbb xchg sub out xchg add rex.WRX lretw push or add or xor mov shll scas xlat fisttpll cmp cmp cmpl (bad) fdivrl mov int3 rex.WXB lock jne sbb movsl cmp movabs or stc or (bad) scas rex.RB rex.WRB xor in pop divb mov int3 outsb pushq lea xchg rex.WXB xor xor jge sbb push ss (bad) rex.X jbe sbb jge movslq shlb rex.WR scas pushq rex.WX fdiv jle out push xor andl (bad) xor movsl push jne in fdivrl in and or hlt xchg sbb pop repz cltd add movabs movabs mov xchg rex.X fdivr movsb and jmpq and mov mov out and pop pushfq cmp mov xorl in sbb jrcxz (bad) hlt mov mov cmp xchg or rex.RX (bad) or loopne retq leaveq jrcxz xor mov (bad) (bad) lea cmpsl mov mov faddp (bad) xor pushq sbb mov imul ds mov sub out jno sbb push xchg sti (bad) movabs repz (bad) cmpsb cmp pop mov (bad) mov lret (bad) pop jne (bad) roll movabs (bad) or sbb (bad) mov fistp stos movl pop sub nop push insl gs add cmpsl fsubs movabs cmp pop loope adc fimul cli xor mov (bad) lret (bad) pop (bad) (bad) add or xchg pop jrcxz mov je adc (bad) push cmc (bad) sub imul jmp std stos (bad) hlt jnp (bad) pop idivb and (bad) jl lock hlt callq in xor int3 sub jne ds (bad) lret rex.RB jmpq and rcr (bad) pop (bad) cmc fmuls sbb enterq in gs (bad) xchg (bad) lret in cmp in jge mov pop cmp or int3 push pop (bad) mov out rex.WRXB and lock sbb lods repnz or (bad) sub pop mov or fdivs test pop lea xchg jmp (bad) push mov rex punpckldq lret fbld cmp mov cmp xchg ror add (bad) test cmp rex.WRB and (bad) (bad) (bad) (bad) ljmp (bad) add (bad) xor cmp (bad) (bad) lcall (bad) cmp (bad) cwtl mov jrcxz and es xchg fisttpll xchg movabs addr32 pop sub rex.RX rex.WB int incb retq movabs and jg (bad) sbb addr32 push rex.RB (bad) fisttpl adc (bad) loop (bad) (bad) or mov rolb cmp sbb xor fistpl retq cmp jns stc mov jrcxz insb or xchg cs rex.W shll stos rex.WRB (bad) int3 jo pop xor mov mov cmc (bad) cltd fs mov jp (bad) icebp and add and sbbl (bad) fs (bad) test test bt add jmpq mov jmpq jne je bt bt bt cmp jmpq add movsbq setbe mov jmpq jmpq je setl bt xor jmpq cmp jmpq jmpq jmpq jb btc lea cmc bt clc sub jmpq js bswap sets not mov jmpq cmpb jmpq jmpq jmpq jmpq callq lea xchg not bswap lea movsbw setle lea jmpq jmpq jmpq jmpq je ror lea cmp bt sub movzbw lea xchg xchg jmpq callq sbb mov test stc sub jmpq jmpq callq stc test bt clc sub jmpq jmpq test jmpq jmpq jmpq setge jmpq callq movsbw mov jmpq (bad) mov jg lock movabs in xor and or jbe movabs cli nop stos cmp (bad) xlat sub sbb movabs out or (bad) insb je or rex.WX fidivrl sti addr32 pop stos std push movabs or addr32 pop cmpsb jmpq test test jmpq jmpq jmpq jmpq jae callq lea mov setg mov movzbw setbe lea mov jmpq jmpq jmpq test cmc test jmpq jmpq callq neg or bsf lea bt jmpq inc jmpq callq cmp mov sbb sar and xor jmpq je sbb shld mov sub bswap movsbw movsbw jmpq callq movzbw lea lea jmpq cmc cmp jmpq callq xor btc inc mov bt stc cmc xor jmpq jmpq jmpq jmpq jmpq callq shld and rcl mov bt sar lea not mov jmpq callq movzbl xor clc cmc mov cmc stc test jmpq callq bsr bswap bt cmp mov jmpq callq btr bts bts inc mov btr bsr sbb stc sub setg movsbw mov not mov bswap bswap mov jmpq callq clc test jmpq jmpq callq bt test jmpq je data16 lock clc test je clc test jmpq mov mov bswap dec mov jmpq jmpq jmpq xchg jmpq mov mov jmpq callq lea not not mov movzbl movsbl mov mov mov jmpq jbe cmc cmp lea stc stc clc bt sub jmpq jb jmpq callq cmp test cmpl jl jne xadd cmc lea mov inc mov dec rcl setle sub bsr xchg or test movzwl test cmp jmpq jbe jmpq jmpq mov jmpq stc cmc jmpq callq cmc test test stc test jmpq (bad) push or out jg movabs movslq pop (bad) scas (bad) ja int3 and or mov jne (bad) enterq cmp xchg faddl cmc pop imul add callq mov pop sub repz add (bad) callq sub in (bad) jmp jbe xchg testb add movsl (bad) jl mov pop push and cs mov out retq stc pushfq pop push sti rex.WRXB (bad) out cmp lret je jnp cmp mov movabs add rcll lock rex.X rex.X loopne sub loope fnsave and rex.WX repnz adc jp adc loope in mov test xchg jmp mov push rex.X pop (bad) pop lods push (bad) push pop sub or (bad) jle lret cmp fidivl stc jge cmc and bt jmpq jmpq callq bsf sar not rcl mov bt cmp bt test jmpq je stc cmp jmpq jmpq je jmpq jmpq jno je btr sbb mov sub adc sbb shrd xor bswap mov jmpq je btc rcr shl mov cmc test jmpq jmpq cmp jmpq jmpq test jmpq je cmc cmc bt cmp jmpq nop jmpq callq stc bt test test sub jmpq jmpq callq cmp bt cmp test jmpq movzbw mov jno cmovne jmpq js bswap mov jmpq jmpq bt bt cmc and stc cmp cmp stc cmp jmpq jne movsbw movzbw sets not mov movsbw mov bswap not movsbw not mov jle callq rcr adc sub mov jmpq callq rol shld mov cmp test jmpq bsf sub or jmpq and jmpq callq mov mov lea jmpq js lea mov lea mov jmpq cmp stc add not jmpq je shl rol mov stc bsf jmpq je jmpq mov jmpq jmpq jmpq jmpq jne cmc xor or clc movsbw or sub bswap mov bt clc cmc repnz cmp shr sbb xor shld mov movzbw nop rcl jmpq jmpq btc mov cmc cmp clc test jmpq je inc ror mov clc test jmpq jne cmc stc test cmpq jmpq cmp add not sar bt btr mov bt cmc add (bad) lock mov stc cmc add jb cmc test cmc add jmpq lea jmpq test xor clc stc test jmpq jmpq jmpq jmpq pushq jmpq je sbb cmp mov btr mov adc cmp xadd mov cmp movsbl add sar (bad) icebp sbb bt cmp test cmp add jmpq jmpq je jmpq mov jmpq stc bt mov bt clc clc cmpq jmpq cmc bt bt test jne jmpq je adc movabs cmp mov bt clc test jmpq jmpq jmpq callq movsbw mov bswap mov not bswap movabs mov lea mov jmpq jmpq sets mov jmpq jmpq jmpq jmpq pushq jl pushq jmpq callq jmpq mov jmpq jmpq jp je setbe btc or mov rol data16 icebp add stc cmc test jmpq mov jl callq rcl and or adc xor neg adc mov bt inc repnz js bswap movsbw not not not lea jmpq add jmpq jmpq jmpq callq setge setno xor not movzbw mov jmpq callq bt jmpq jmpq je not not mov jmpq je jmpq jmpq jmpq jmpq callq cmc cmp test cmp test jmpq mov jmpq callq bt test jmpq jmpq pushq jmpq je lea not movzbl mov jmpq callq lea mov cmp rcl stc cmpq movzbw movsbw setbe mov jmpq je jmpq jmpq jmpq je sub lea sub shld xor lea jmpq mov movzbl movzbq not not movzwl jmpq je stc cmp jmpq callq cmp test jmpq jmpq je xor lea stc bsf clc movsbw xor movzbw bswap mov not jmpq jmpq bt cmp jmpq je rcl shl lea mov bsr mov not shld xor movsbq movsbl mov jmpq jmpq jmpq mov jmpq callq dec shld mov cmc stc clc test jmpq nop jmpq je adc nopw bswap bt movzbq and mov clc test test test jmpq bt test jmpq jmpq callq jmpq je rol movsbw rol sub mov lea jmpq jne test clc sub stc cmp xchg clc test jmpq callq shrd neg adc add mov stc cmp test jmpq mov jmpq jb setae dec jmpq jmpq movzbw bswap jmpq jmpq js movsbw mov jmpq callq setne bswap lea mov lea lea jmpq inc jmpq callq sub rcl mov bt bt cmc test jmpq callq bt mov stc cmp test stc test jmpq mov jmpq jmpq callq lea mov jmpq mov jmpq mov jmpq bt stc cmp mov bt mov jmpq jmpq je bts mov movsbw sub bswap mov jmpq mov jmpq je setbe mov xchg mov jmpq je setl bswap not movsbw mov jmpq callq btc add mov stc jmpq jmpq cmc bt test jmpq je dec test mov sub jmpq jbe cmp clc mov shl btc lea mov cmp cmc sub jmpq jmpq jmpq callq test test stc test jmpq bswap lea bswap lea not not setb movsbl lea jmpq jmpq pushq jmpq callq mov movsbw lea jbe mov bswap mov lea mov not bswap bswap movzbw mov jmpq je not mov jmpq jmpq jmpq callq data16 repz mov test jmpq je cmc cmc stc bt cmp jmpq xchg jmpq callq not jmpq je not mov test test jmpq add rex.WRB adc retq lret mov loopne (bad) movslq movabs sub or movabs add add add adc bswap rcl rol and mov test test jmpq jmpq callq clc cmc stc bt test jmpq js mov movzbw mov not mov jmpq bswap lea jmpq callq clc lea shl adc xor cmc not rcl lea neg shr btc sub lea jmpq jmpq jmpq jmpq jmpq stc test test jmpq je bt bt cmp jmpq jmpq mov jmpq jmpq je and stc xchg xor xchg jmpq jmpq jmpq je jmpq jmpq jb bt jmpq mov bswap mov jmpq callq jl test clc test jmpq jno callq bsr mov jmpq je lea xchg movsbw mov bswap lea mov xchg movzbw setl lea mov jmpq jmpq dec jmpq jbe btr rcl shl xor lea clc cmc cmc sub jmpq jmpq je jmpq nop jmpq je movsbq mov jmpq callq jmpq jmpq test stc jmpq lea jmpq jmpq jmpq jmpq mov lea mov jmpq je ror bsf sar mov cmp test jmpq clc stc clc shr jmpq je add mov clc clc bt test jmpq callq jmpq je jmpq stc test jmpq callq sar bswap or mov shr sar test rol cmpq seta jmpq incl jmpq jmpq mov movsbw mov lea lea movzwl jmpq jmpq mov movsbw mov jmpq callq bt test jmpq cmpq jmpq jmpq jmpq callq jmpq callq cmc test adc mov xor inc mov cmp xor jmpq test jmpq jmpq jmpq jne ror stc mov bt cmc stc test jmpq jmpq je bt cmp bt stc xor jne callq ror bsf neg adc mov cmp mov test cmc movl bt clc jmpq jb and xadd mov bswap mov bsf movsbl xadd bt mov mov btc mov bt test neg lea shrd lea bsr sar sbb add jmpq jmpq je cmp test clc cmp jmpq lea movsbw jmpq test test jmpq test jmpq jb test lea lea test cmp test cmp sub jmpq callq bt and clc cmp jmpq movb clc test test jmpq jmpq je clc cmp mov clc jmpq jae jne jmpq jmpq jmpq test jmpq jmpq je movzbl neg xor jmpq jmpq test jmpq callq btr mov cmc clc test jmpq mov jmpq jmpq callq rex.B cmc rcr lea clc bt test jmpq mov stc jmpq je bt jmpq jne cmp test bt bt xor jmpq jmpq jmpq callq shld sub neg mov bt test test jmpq jmpq je bswap bsr lea jmpq callq stc jmpq jmpq jmpq jmpq jmpq jmpq jmpq je mov jmpq jmpq jmpq not lea jmpq jmpq callq bt movzbl shld not inc jmpq jmpq cmpl jmpq jmpq jmpq cmp mov shrd not bsf mov cmc stc mov jmpq jmpq jmpq callq shr test and mov bt jmpq mov movsbl movsbl mov movzbq mov jmpq je cmp clc cmp jmpq test jmpq callq jmpq callq add mov dec adc inc mov cmp clc cmp xchg jmpq callq jmpq je bt cmp cmp jmpq je clc btc bt mov clc bt jmpq callq test test jmpq jmpq jb cmc stc cmp jmpq je bsf movsbw xchg mov btr mov sbb not lea bswap lea clc cmp jmpq mov not not lea lea movzwl jmpq jne btc shr ror mov bt clc test jmpq jmpq callq cmc mov cmc test test test jmpq jmpq stc clc test jmpq cmc cmp jmpq jmpq jmpq jmpq je js callq mov movsbw bswap mov lea jmpq jmpq je test rcr shl stc movzwl rcl movzbq movzbl stc jmpq je ror clc btr movsbw movzwl bsr rcr shr movzbl jmpq jmpq jmpq je movsbw mov inc movzbw sar cmc xor jmpq dec jmpq mov jmpq jmpq jmpq jmpq callq lea jmpq jmpq jmpq je not lea lea xchg mov not mov jmpq je jmpq mov jmpq mov jmpq retq adc mov xchg and rex (bad) add pushq mov in rex.W lods data16 imul rex.WRB out sbbb mov sbb pop pop mov (bad) (bad) mov sub add ja std jmpq mov mov lea jmpq je cmc stc bt cmp cmpb jmpq jmpq jne movsbw not mov seto not xchg mov jmpq jmpq movzbw lea jmpq je xchg mov xchg xchg movsbw movzbw mov sete jmpq jne test add lea xor mov cmc bt clc sub jmpq callq clc jmpq mov jmpq jmpq cmp add clc add stc sub test clc add jmpq mov movzbw jmpq mov bswap bswap mov jmpq jmpq mov stc cmp test bt cmpb jmpq je not movsbl setge mov mov jmpq je jmpq callq cmp btc sbb mov cmc cmc cmp test jmpq jmpq lea mov jmpq jmpq cmc cmp add rcl mov stc add test jmpq add jmpq callq lea cmc rol not lea stc clc jmpq jbe callq rcl inc sub rol mov stc cmc stc cmc test jmpq jmpq je shr mov bt stc mov clc not lea test jmpq jmpq cmp jmpq callq jmpq jb shr clc rex.W icebp mov test cmp test jmpq jb bt jmpq jmpq callq neg mov bsr cmc mov jmpq jmpq callq stc test bt stc test jmpq callq cmc and bt bt clc cmp cmp jmpq clc test jmpq jmpq xchg jmpq je movsbw jmpq jne movsbl bswap not mov jmpq callq cmp test stc test test jmpq jmpq test jmpq callq mov lea jne callq jmpq add jb dec movsbw dec rcr bswap lea mov sub shl or dec bts sbb bsr mov neg dec data16 mull mov or btc xor or mov sar jmpq bswap jmpq cmc cmc clc cmp test jmpq jb jmpq jmpq mov jmpq jmpq movzbl mov jmpq callq lea movsbw movzbq mov jmpq callq sar clc clc mov sbb movzbq sbb mov cmc bt clc xchg jmpq jmpq je stc bt test stc cmp jmpq jmpq jmpq je shl sbb mov jmpq jmpq cmp stc stc add cmc cmc jg add stc cmc cmp jmpq jmpq jmpq jmpq je clc clc cmp jmpq setno mov jmpq callq jmpq movsbl mov not mov bt add cmp stc add test cmc test add test cmc cmp cmp xor jmpq clc add bt stc clc sub cmp test add jmpq incl jmpq je jg test jmpq jne bt bsr sbb mov cmc cmp test jmpq jmpq jmpq test bt cmp jmpq mov mov xchg mov bswap mov mov lea lea mov jmpq mov jmpq jmpq jmpq je clc clc clc test cmp jmpq callq btr setns mov movsbw rol add mov adc bswap clc add or inc xor btc rol rcr clc repnz inc lea jmpq jmpq repnz jmpq jne btc inc and shrd mov stc cmc cmp stc test jmpq jmpq jmpq jmpq mov jmpq callq movsbl lea jmpq callq setns bswap mov jmpq jmpq je stc cmc test cmp jmpq jmpq jmpq jmpq jmpq jmpq callq jmpq jmpq callq mov movzbw bswap lea bswap lea jmpq jmpq testb jmpq jmpq callq bswap jmpq cmc test cmp add clc jmpq jne jmpq jmpq callq sar mov cmc cmp test jmpq cmc add test bt mov test mov cmp clc jmpq bswap mov jmpq shl mov bsr movzbw mov stc test bt clc xor jmpq callq stc sete sbb jmpq callq movsbw jmpq jmpq jmpq jmpq callq mov setne lea setbe lea not jmpq jb not not dec adc cmc ror mov neg btc neg sar or shr mov and xadd rcl btc add rcl sub adc bswap xchg adc mov add add test clc repnz dec inc dec dec not bswap movzbw dec bswap data16 hlt or xor mov test stc bt test test jmpq jbe jmpq jp je bsr mov jmpq callq cmp and bt cmp jmpq cmc xchg cmc clc clc test js je bsr sbb mov jmpq callq bsf bswap or data16 repz mov movzbw setl ror cmp lea stc test test cmp jmpq jmpq mov mov bswap bswap mov jmpq jmpq jmpq jmpq jmpq cmpl jmpq dec movzbl add mov jmpq jmpq callq movsbl lea inc mov mov inc mov jmpq je xchg not not lea not not mov movsbw lea jmpq jmpq jmpq jmpq shrd nop rcr movabs sub lea test rcr adc lea xor bswap lea cmp sub jmpq callq mov mov not lea setle setbe lea setb lea jmpq callq lea mov clc sar btc xor clc bsf bsf clc or shr bsr rcr mov inc inc shl bsf repnz ror movzbw test shrd not rcr movsbw lea or shr add and mov test clc sub jmpq jmpq callq jmpq jmpq jmpq add jmpq je jmpq mov movsbl movsbw mov jmpq clc cmp jmpq je jmpq test bt add bt bt bt test cmp jmpq jb xchg ror mov neg neg sbb xadd mov adc bsf mov shrd neg movsbw cmp mov xor bsf lea cmc inc shld cmp lea stc add btr adc mov neg sar mov stc (bad) repnz shl add mov movsbw mov jmpq cmc clc test jmpq jmpq callq lea lea movsbl movsbl lea jmpq jmpq jmpq callq jae movb jmpq je xor lea mov sar btc btr xor mov movsbw mov bswap lea lea mov mov jmpq jmpq jmpq jmpq cmp test jmpq je inc mov shl rol mov add and not mov movzbw mov not not mov jmpq jmpq jmpq jmpq callq movsbl mov jmpq retq sbb xchg and (bad) xchg sarb (bad) jmpq (bad) sahf sti sub and sbb mov jl xlat mov rex.WRXB xor in int and add test stc cmp jmpq je adc movzbw movzbw sar sub setae mov jmpq jmpq je rol shrd bt cmp mov jmpq jmpq je movzbl mov jmpq nop jmpq callq movzbq lea bswap bswap mov lea jmpq jmpq callq movzbw lea mov not mov setge jmpq je data16 (bad) or or ror dec lea movabs btr inc add xor (bad) repnz shr repnz not mov not not jmpq mov mov jmpq callq cmp jmpq mov jmpq xor bt jmpq jmpq lea mov jmpq callq or movsbw dec mov jmpq jmpq sete mov jmpq mov movzbw lea mov jmpq jmpq je ror movzbw sub bswap not movsbw not mov jmpq cmc test jmpq jmpq jb lea bswap movsbl not mov jmpq jne setl lea stc add clc clc clc stc xor jmpq je ror or lea lea test movzbw movsbw sub inc (bad) div scas mov mov bswap not movzbw not movzbw not lea setnp movzbq movzbq bswap lea jmpq bt bsr movzwl jmpq jbe jmpq jmpq callq movzbw mov movsbw setae mov movsbw setge movzbw movzbl mov jmpq je movzbl mov mov jmpq jmpq jmpq jmpq jmpq callq inc stc sbb dec mov clc bt mov cmp test cmp movl stc mov cmc and sar mov cmc stc test cmp mov test cmpb jmpq jmpq jmpq callq movzbq lea bswap movzbl jmpq callq not bswap inc movzbl mov movzbw mov inc movzbw mov jmpq jmpq jmpq jne setb movzbw lea mov xchg movzbw mov bswap mov setp lea mov ja callq movzbl xor lea xor jmpq jmpq jmpq jb lea bswap movsbw bswap dec bswap mov bsf xor or rcr cmc mov dec bt xor add sub and mov lea sub movzbw mov jmpq je jmpq add mov jmpq pushq jmpq callq jmpq ror data16 repnz mov bts add sbb cmc movsbw data16 icebp mov ror jmpq in xchg mov rex.WRXB or faddl push pushq and retq test repnz retq cmovno xor jb stos xor sbb loop mov cltd jl or (bad) test jne rex.WR data16 in ds and (bad) (bad) (bad) (bad) std jl adc jnp ja push repz xor add add cmp mov mov mov and push xchg es imul xchg push sub pushq adc rex.RXB mov gs lods rex.WX retq push loope hlt (bad) rex.XB orl scas sub (bad) pop jnp out push (bad) and sahf add out and loopne pop (bad) movsl test scas jmp push cwtl sbb cltd adc int3 movsl lret (bad) xor cltd cmp adc sbb std scas (bad) cmc je popfq mov xchg and xchg callq int3 (bad) sbb (bad) rex.WB push fldt mov cmp rclb and out (bad) lret cmc (bad) or and stc jno cmp repnz mov loop pop divl stc popfq fs push sbb mov fcmovbe rex xchg rex.WR cmpb out add cltd adc cmp cmp (bad) mov xchg test pop in stc sub mov jg rex.W out mov out xchg movsl mov (bad) fsts movslq pop imul callq (bad) mov cmp (bad) mov sub mov mov jnp cmpsb pushq movabs mov rex.X test cmpsb xor popfq xor int3 push fnstsw (bad) mov movslq lods mov std rex.W lock retq fs in test sub out jg pop out mov sbb xchg mov (bad) sbb add mov and adc fist jle lret xor mov sub xchg cmp jg jo mov ss imul movslq ss retq xor push sub fwait add sahf (bad) icebp jge adc sbb xor insl cmp sbbb add callq clc bt test cmpl jmpq retq jb xchg and fimul in cmp xlat cmp (bad) je rex.WB (bad) push cmp (bad) xor pop lods xorb xchg je sub cmp cld scas cld (bad) mov mov mov jmpq jmpq cmp stc xchg clc clc test jmpq callq test shl mov test clc test jmpq jmpq jmpq bt test jl je adc mov cmp shr lea shld xor xchg movsbl bswap bswap mov mov mov jmpq jne add bswap bsr mov bt stc clc sub jmpq je neg cmp stc lea mov cmp xor mov mov jmpq callq bts inc mov cmc bt test jmpq jmpq callq shr mov shld movsbw add shld mov movzbw not inc mov rcl shr cmpq mov xchg jmpq jmpq lea lea mov jmpq jmpq je inc btr dec mov sub mov bswap setno adc add lea bt cmp jmpq jmpq callq (bad) cmc sar movzbw jmpq pushq jmpq callq or mov bsr neg test data16 lock or mov or mov clc stc jmpq mov movzbw mov mov jmpq jmpq test jmpq je setl jmpq je jmpq je cmc jmpq callq stc cmc bt sub test cmp cmp test jmpq callq btc mov stc test test cmp test jmpq jmpq mov jmpq mov jmpq jb ror lea jmpq je clc jmpq jmpq callq jmpq mov lea not bswap mov jmpq jmpq jmpq jmpq jb cmp jmpq test stc test jmpq shld rcr shl mov stc cmp stc test jmpq callq bt stc stc clc test jmpq callq bswap not mov cmc clc cmc test jmpq callq jmpq je jmpq jmpq jb jmpq jmpq callq cmp and bswap mov mov not sar cmp sub jmpq adcb mov out jg fcomps cwtl rex.RXB ja in fmulp (bad) xor and frstor testl mov add mov mov (bad) callq mov rorl icebp out in movabs cmc jno rex.W jle lahf sub or mov hlt jge xchg add add pop retq pop rex.WRX pop jge and (bad) xchg (bad) rex.B rex.WX xor add add mov insb mov or mov hlt mov or fs adc add (bad) xchg and mov xor (bad) add sbb cmp rex.WR mov jae pop mov cmpsl repnz divl (bad) sub popfq data16 lret sahf callq lods lea xchg xor (bad) in (bad) cmpsb rex.RXB rex.W mov jmpq cmp test jmpq jmpq test jmpq mov movzbl mov jo mov seta movzbl jmpq stc stc cmp jmpq and out jg movd insl movabs fwait cs adc out mov fwait and scas push fsubs (bad) jns cmp int repnz (bad) (bad) (bad) decl xor xlat rex.X repnz mov push xchg std movsb stc out pop cli push popfq lock push test in clc (bad) jp fwait addr32 jmpq je cmp stc mov jmpq callq clc bt cmp jmpq jmpq jmpq test add clc bt xor jmpq callq xchg bswap movsbw mov not movsbw movsbl bswap mov jbe mov not sete mov jmpq je ror shr bswap lea xor not mov jmpq jne clc mov movzbw cmc mov test clc stc mov sub rcr add shld lea mov bt or test mov cmp add jmpq bswap not mov jmpq test cmp jmpq jmpq callq movzbw bswap mov not lea not movsbl lea jmpq stc add bts lea dec mov cmp bt add or dec mov cmc add cmc bt cmp jmpq callq lea not mov jmpq jmpq dec jmpq jl je sar ror mov jmpq jne jmpq mov mov lea not jmpq jne callq jmpq callq sbb stc add mov cmp cmc test jmpq jmpq cmovne jmpq je jmpq callq jmpq jne jmpq add cmc add jmpq jmpq mov jmpq callq neg rcl dec mov clc mov bt test movl jmpq jmpq test jmpq callq js cmc cmp test jmpq test jmpq je jmpq jmpq nop jmpq jmpq xchg not mov lea setg mov jmpq jmpq lea not lea setb mov jmpq incl jmpq jmpq jmpq jne lea cmp add inc mov movsbl jmpq callq jmpq je sets dec sub mov movzbw mov mov jmpq jmpq jmpq callq sar rol mov clc clc cmp stc mov clc cmp cmc bt movl jmpq jmpq mov jmpq jmpq jmpq bt test jmpq je cmp bsr xor jmpq jmpq test jmpq xchg jmpq callq cmc test jmpq jmpq jmpq je bswap or movsbq clc mov stc shl sub neg mov shl lea cmc cmp jmpq je movzbw rol mov inc shr neg sar mov bsr data16 lock stc cmp jmpq cmpb jmpq jmpq jmpq callq test jmpq mov jmpq jmpq jb jmpq callq xchg movzbw setle setne mov jmpq bt bt cmc sub jmpq callq shrd mov shrd cmp mov cmc test jmpq pushq jmpq bt stc cmp cmp jmpq callq bt bt clc cmp jmpq nop jmpq je cmp cmp jmpq jne inc sbb data16 lock stc test jmpq callq setae lea mov mov jmpq mov lea mov jb callq bswap mov jmpq jmpq jmpq jle callq cmp cmc bt stc cmp jmpq jmpq callq xor mov test cmp stc jmpq callq not not mov mov lea jmpq mov mov jmpq jle je adc shr or sub mov test test jmpq lea bt cmc test cmc test jmpq callq bsr bsf mov stc test jmpq jmpq or lea or adc movabs mov movsbw add xchg sub inc mov btr not add repnz movzbw not bswap not lea movsbw dec neg jmpq jmpq mov lea movzbw lea mov jmpq jmpq jmpq jmpq je lea lea xchg mov jmpq jmpq jmpq jne neg neg (bad) icebp movzwl rcr adc mov cmc jmpq jmpq sub jmpq jbe neg bts mov clc cmp jmpq je stc cmc cmp clc cmpl jmpq cmp clc jmpq jne cmp btc cmp inc mov shld ror mov bswap lea sbb and movzbw add not movzbw mov jmpq jbe lea not lea mov mov jmpq callq cmc jmpq je jmpq jmpq je shld mov add adc cmp mov movzbq lea clc cmp jmpq jmpq cmpw jmpq callq setg lea movsbl bswap bswap jmpq je jmpq jmpq jmpq callq xor or shl mov jmpq callq jmpq mov lea mov jmpq je jmpq js not not jmpq callq movsbq movabs lea mov mov mov bswap mov not mov not mov movsbl lea jmpq callq mov setg lea xchg mov not movzbq xchg mov mov movzbw movzbw lea mov movzbw movzbw mov jmpq movzbw not mov jmpq jmpq test jmpq cmp jmpq jmpq cmpsl rex.WRXB cmp mov mov (bad) nop lret mov fwait xor mov (bad) xchg pop loopne jae adc sbb subl xchg mov add add jmp and es cmp jle setp or and pushq rclb pushq sbb movsl cmp (bad) fsubl (bad) nop push movabs and xchg gs adc mov movsl push or bsr mov stc btc add inc mov bsf shrd movzbw sar or shld sub rcr repnz movsbl bswap not mov mov movsbl dec dec bts rcr mov adc mov cmc stc cmc bt test jmpq callq cmc test jmpq mov jmpq cmp test test jmpq jmpq je or shr mov bt test jmpq callq sub bsf jmpq neg not sar bswap btc lea cmp jmpq callq bswap lea movzbw lea jmpq jmpq cmp jmpq callq movzbq ror or mov test cmp test test jmpq jmpq jmpq callq jmpq jmpq jmpq jmpq je cmc stc clc cmp cmp jmpq mov lea setne movzbl jmpq not lea jmpq jb inc xchg dec shr add lea neg mov sbb stc and setb or xadd mov btr and shl rcl btr xor xor test movzbl mov jmpq callq mov bswap mov jmpq jmpq jmpq jmpq jp pushq jmpq cmp clc add cmp bt stc cmp xor jmpq inc jmpq test clc xor cmc add jmpq mov jmpq jne neg shrd shr ror lea bsf sub shl sub not xchg mov not bswap lea movzbw mov jmpq js jmpq jmpq callq test bt clc bt test jmpq dec jmpq callq test cmp clc test jmpq mov mov jmpq je jmpq jmpq je movsbw movabs lea bswap mov not jmpq jmpq jbe jmpq jmpq jmpq sbb imul add addr32 test pop jg mov push lods (bad) out out cmp cmpsl pminub sub mov mov mov push ficom mov jmpq jmpq jmpq jmpq clc cmc test cmp jmpq jbe rcr dec inc mov bt test cmp cmp jmpq jmpq jmpq jmpq bswap mov jmpq pushq jmpq jmpq je stc sub jmpq callq setnp setle mov lea mov jmpq jne bsr sub jmpq jmpq test test test jge je btc clc mov mov inc cmc mov xor ror adc xor lea lea ja callq shl movzbl bsf bt mov cmp test jmpq jne lea mov not mov jmpq callq cmc cmp mov cmc stc cmpq jmpq jmpq jmpq movzbl mov xadd xor bswap lea movzbq mov lea jmpq mov jmpq jmpq jmpq je cmp cmc test clc xor jmpq je jmpq jmpq mov jmpq jmpq jmpq callq cmp sub jmpq jmpq jmpq callq jmpq callq setb movsbw mov movzbl lea mov jmpq callq clc test jmpq movsbw movzbq mov bswap jmpq cmpl jmpq jmpq jne stc mov cmp bt bt cmp test jmpq add test cmc cmp jmpq callq not seta lea jmpq callq clc sub bts mov mov movzbw shld sub bswap not mov jmpq callq bsf movzbl bsf mov test jmpq dec (bad) testb btc sbb data16 repnz shr and neg or movzbw xadd clc mov stc or shr add movzbw xor shr mov ror jmpq jmpq jb xchg bswap movsbw bswap mov mov movsbw jmpq lea test cmc test jmpq je bt bt cmpq jmpq jmpq callq not jmpq jmpq jmpq stc test jmpq jmpq jmpq jmpq jne test ror sar mov cmp je cmp jle je movzbw movsbl mov mov jmpq callq jmpq mov jmpq je cmc cmp jmpq callq jmpq jmpq je jmpq jmpq callq bswap jmpq je bswap mov stc test jmpq callq rcr shrd rcl mov bt jmpq cmp stc sub stc stc bt cmc repnz jmpq jb movzbw inc dec cmp bts mov bswap or xor and mov neg add and bswap sub not xor not neg mov and repnz not movsbw not movzbl movzbq inc jmpq jmpq jmpq lea jmpq jmpq test jmpq callq bt jmpq nop jmpq jmpq callq stc clc clc stc test jmpq jmpq jmpq jmpq callq jmpq jbe je btr add mov test test clc test test jmpq mov sets mov jmpq jmpq clc cmp test jmpq xchg mov movzbw mov jmpq movl jmpq jmpq add stc bt stc add lea mov jmpq dec movzbw movsbl dec sar adc mov test test jmpq callq cmc cmp jmpq jmpq cmp add jmpq jmpq mov jmpq jmpq fnstenv jg test cmpsb rex.WRX stos cmp outsl rex.B mov test retq pop sbb rex.WR sub cwtl or mov (bad) int lea mov (bad) jl stos and (bad) ljmp setl add add rex.R (bad) incb mov push rex.RX movslq (bad) jrcxz scas cld mov pop add in fsubrl and fcoml and (bad) faddp sbb fisubrl (bad) mov pop mov sub mov cmpsl jp jae repnz (bad) rex.RX add pop in (bad) (bad) jmpq cmp jmpq jmpq jmpq callq movsbl lea jmpq callq lea bt bt mov cmc cmp jmpq jmpq movb jmpq jmpq stc sub clc clc cmp xor cmp bt bt xchg stc stc test jmpq movzbq mov jmpq callq cmc bt bt cmp jmpq jmpq stc cmc cmp jmpq mov jmpq stc stc test jmpq callq not movzbw mov jmpq mov movzbw movzbl movsbw bswap mov jmpq jmpq jmpq cmovne jmpq jmpq je jmpq test jmpq movzbw not movzbl mov jmpq jmpq cmp add movsbw cmp mov cmc stc cmc add stc bt cmp add cmp bt xor bt stc add jmpq rcr add jmpq callq not mov lea jmpq callq cmc stc test jmpq jmpq jge je lea mov jmpq callq jmpq callq bt cmc cmp jmpq xor cmp sub cmp cmc bt stc xchg bt cmp test jmpq callq clc test test jmpq je jmpq je inc rol sar mov shr mov jmpq callq movzbw xchg mov lea bswap lea mov movzbw mov jmpq callq bsr mov (bad) icebp shld cmc not test movsbw mov jmpq jmpq jne inc btr shrd shr lea test bt test bt add cmp jmpq mov mov jmpq jb jmpq jmpq js movsbw lea mov jmpq clc sub jmpq jmpq callq jmpq jmpq add jae stc cmp jmpq jbe jmpq mov bswap not bswap not mov bswap mov jmpq lea not jmpq jmpq cmc test jmpq test jmpq lea jmpq callq test stc test jmpq jmpq je lea jmpq jmpq callq test test test jmpq jmpq callq cmc test jmpq jmpq jmpq je jmpq mov jmpq test jmpq jmpq stc mov cmc stc test test jmpq callq movsbw neg bswap mov clc clc test bt cmp jmpq jns jmpq je not mov jmpq callq bt movzbw shld lea jmpq cmc test jmpq mov cmc bt clc bt test jmpq jmpq jmpq jmpq mov jmpq jb bts cmpb movabs mov lea setl movsbl not movzwl movzbq bswap mov lea mov jmpq callq xor add sub xchg not jmpq je bswap movzbw movsbw mov jmpq jmpq xor jmpq je lea jmpq jmpq jmpq test nopl clc bt cmp jmpq callq test test jmpq jmpq callq and cmc not mov stc test jmpq movb jmpq xchg jmpq je bt bt cmp jl je jmpq callq test bt bt and stc cmc cmp jmpq callq cmp and stc stc stc cmp cmp jmpq jmpq jmpq add rcl rol cmc movsbw mov stc clc cmp add cmc cmc test add jmpq jmpq mov setnp lea movzbl jmpq je test test cmp jmpq jmpq jmpq callq cmp stc bt cmp jmpq jmpq je rcl ror shl neg xor mov mov jmpq jmpq stc bt test jmpq cmc cmpb jmpq add and bt ror mov test stc bt add cmp bt bt cmc add sar test mov bt cmc bt add jmpq lea not mov jmpq je movzbl lea sub dec not test sub mov jmpq jmpq callq sbb bsf bts mov bts bsf bsf mov cmp clc cmp cmp or jmpq jne xadd mov clc data16 lock add bt clc clc add cmc stc test cmp jmpq je movzbw js lea movzbw movzbl xchg mov setnp movzbw mov jmpq jno je jnp cmp cmp jmpq jmpq jmpq sub mov jmpq pushq jmpq je cmc cmc jmpq jmpq jmpq stc bt mov jmpq jne clc bt stc xor jmpq je mov movsbw mov setnp bswap movzbl mov not not mov bswap mov jmpq callq sub mov clc stc cmp test jmpq ja callq bswap setle lea lea jmpq callq not xchg movzbw lea movsbw mov lea jmpq jmpq callq bsf test mov clc sbb bswap lea cmpq not not seto mov jmpq jg mov jmpq add pushq jmpq clc or movsbw bswap lea jmpq je not mov jmpq callq cmp test jmpq callq dec xchg lea mov dec mov jmpq je jmpq jmpq jmpq jmpq jmpq je lea movsbl movsbw mov jmpq jmpq jmpq clc test jmpq jmpq jmpq mov jmpq je xor or jbe lea movzbw and lea neg (bad) repnz movsbw add sbb data16 repnz lea mov mov mov jmpq jmpq callq movzbw movb cmc cmp rol stc mov clc test jmpq callq setno jmpq callq jmpq callq stc test jmpq je mov shrd mov cmc (bad) lock test mov cmp cmp jmpq callq jmpq cmpq setno mov jmpq jmpq jmpq je stc test jmpq jmpq callq jmpq jmpq lea jmpq xor jmpq not mov jmpq jmpq je cmp stc test cmp jmpq setg jmpq jmpq test jmpq cmp testb jmpq je sbb test bt rol xor lea movzbl mov jmpq jmpq jmpq jmpq incl jmpq movzbw mov mov bswap bswap jmpq jmpq je clc cmp jmpq jmpq nop jmpq jmpq callq jmpq jb movsbq setp lea jmpq jbe rcl rcl mov test jmpq jmpq callq xchg mov bswap setno setbe jmpq jmpq jmpq callq not dec mov cmc cmc cmc test jg je btc mov stc stc jmpq mov mov shr btc btc mov cmp test cmc mov sbb rcr mov clc mov sub ror bts mov clc mov rcl add lea btr mov cmp clc cmp stc mov mov dec mov cmp jmpq jb clc lea stc clc cmc xor jmpq jmpq je movsbw xor bswap bswap not mov jmpq callq cmp test jmpq jne test clc bt stc cmpq jmpq stc test cmp jmpq bsr lea cmp test jmpq jmpq jmpq pushq jmpq callq sets stc jmpq jmpq jmpq je cmc clc cmp jmpq jmpq movsbw bswap mov jmpq bswap jge mov jmpq jne jmpq test jmpq jmpq clc bt mov test stc cmc cmp jmpq jmpq jmpq mov jmpq jmpq jmpq je cmc bt bts xor mov mov jmpq jmpq je rcr clc sbb mov neg mov test test lea cmc stc cmp jmpq jno je ror rcl ror sbb mov jmpq jmpq jmpq jmpq jmpq callq bsr rcl mov bt bt cmp test jmpq je test cmc clc clc cmpl jmpq jmpq jmpq jmpq jbe neg bswap lea test sub jmpq jmpq jmpq inc cmc test add stc clc test cmp jmpq mov jmpq jmpq je test jmpq jmpq je jmpq callq btc mov cmp cmc cmp jmpq jmpq cmp jmpq jmpq je bswap jmpq stc cmc bt test jmpq jmpq mov not mov not mov jmpq je bswap ror and sub bswap movsbw not mov jmpq lea lea jmpq je jmpq jmpq cmc xor jmpq jne jmpq je cmp cmp jmpq mov bswap lea lea mov not mov setle jmpq sub jmpq mov jmpq jmpq jne movsbq lea movsbl mov jmpq je bt adc xor movzbw lea movsbw movzbw mov jmpq bt sub jmpq jmpq je clc mov sar mov cmc rcr bswap mov test cmc jmpq mov jmpq callq movabs mov jmpq jmpq test add clc test cmp mov stc bt jmpq je jmpq jne inc test rcl lea cmp test add stc xor jbe callq cmp bt bt cmp jmpq inc jmpq jmpq jmpq je bswap mov mov jge callq clc jmpq cmp adc out jg (bad) rex.W pop rex.WRXB (bad) fsubl sbb movabs decl add imul imul nop and retq or mov sub (bad) js push shrb xchg es pop (bad) ss jrcxz insl lock (bad) xchg cmp imul (bad) cld cmp add adc adc jle (bad) (bad) xchg sbb pushfq icebp lock add sub cmpsb adc (bad) (bad) (bad) fdivr hlt sbbl cmp rex.WRX fstl hlt rex.RX mov imul data16 je stc rex.WRXB mov mov clc rex.WB sbb fldenv adc (bad) xchg (bad) out clc mov xor (bad) mov xor callq movzbq movzbw bswap lea jmpq jmpq add jmpq jmpq je movsbw lea btc shld bts xchg sub setne sete mov jmpq callq clc jmpq movsbw mov jmpq callq cmc cmp bt mov bt test cmp jmpq je clc rol bsr mov clc cmp clc test jmpq jmpq je movsbw rcr mov stc stc test bt test jmpq stc test jmpq mov jmpq callq rcr bts add cmc mov cmc cmc clc clc test jmpq jmpq lea jmpq je test stc bt bt cmpl jmpq jmpq mov jmpq jne jmpq jmpq nop jmpq callq xor btc data16 cmc mov cmp stc clc jmpq callq bt mov jmpq jmpq callq jmpq bt bt test bt add cmc xor clc add jmpq not not mov jmpq mov jmpq xchg jmpq jmpq je jmpq jmpq je bt or adc xor mov jmpq sub not mov jmpq je lea mov setl lea lea bswap mov movsbq setno lea mov mov lea lea movzbl sete mov jmpq jmpq jmpq callq bswap movzbw movzbw movsbl lea jmpq jmpq add add add add sub stos (bad) out lret pop sbb rex.XB jbe (bad) (bad) push outsl (bad) outsl movsb jl mov orl js push scas fs retq jo fiaddl xor (bad) movabs test add jmpq callq bswap setns not not mov lea mov jmpq callq bsf bsr mov bt clc test jmpq mov jmpq callq bswap movzbl xchg lea movzbw lea jmpq jmpq je movzbw lea xchg jmpq callq neg shld mov test test test jge je cmc xor jmpq cmp jmpq mov jmpq jne stc bt cmpb jmpq incl jmpq jne xor neg mov cmc cmp cmp jmpq jmpq jmpq callq sar btr mov jmpq mov not rol mov shr shr mov lea test jmpq je pushq jmpq cmp jmpq callq bt neg movsbl mov stc mov cmc movl bt bt mov shld add btr mov bt bt bt mov clc test jmpq jmpq jmpq jmpq callq btr mov cmc stc jmpq je btc shld mov add xadd mov sar cmp cmp xor mov lea jmpq bsf test lea neg rcr add jmpq mov lea mov jmpq mov mov mov jmpq jmpq jmpq callq clc bt stc test jmpq jb stc cmp jmpq je test mov jmpq jmpq mov stc clc add bt stc cmc add clc add cmp cmc cmc add cmc clc stc add test cmp cmc add cmc bt cmc clc cmp jmpq jmpq jmpq jmpq je stc or mov and bsf xor not mov jmpq stc test jmpq jmpq mov jmpq je sub mov lea sbb xor movzbw not mov movsbw mov jmpq jmpq jmpq je bt bt ror mov jmpq jmpq jmpq jmpq jmpq jmpq cmp jmpq sub shr jmpq jmpq je cmp cmp test cmc sub jmpq jmpq jne (bad) cmc movsbw rol shr movzwl neg dec add mov mov cmc xor jmpq jmpq callq sbb mov neg test cmpq setne movzbw mov jmpq bsr ror mov dec sub bts xor shld adc bt btr or bts mov or movsbw bswap not repnz rex.B lock not shld rcl lea cmc cmc jno xor jne callq bswap mov movsbl movzbw movabs mov js callq test clc cmc test jmpq xor jmpq jmpq jmpq js bt test jmpq jmpq jmpq jg callq lea cmc sub inc bswap movsbw mov lea jmpq bt sub jmpq jmpq jb inc shld rcl lea cmp bt test bt sub jmpq mov jmpq mov jmpq setg bt or not movsbl setge lea movzbq mov jmpq callq movzbl seta lea bswap lea jmpq rcr btr movsbw xor movsbw xchg movzbl mov movzbw bswap bswap lea mov jmpq jmpq jmpq jmpq jmpq jmpq cmc test xor jmpq je bt btc mov and shrd cmc setge mov bts cmp bt shl sub lea movsbl mov jmpq jmpq jne lea not dec dec mov stc bt cmp mov cmp add test test add cmc cmp jmpq movzbw mov jmpq jmpq test jmpq jno pop popfq mov ficompl out add mov std mov jp sub rex.RXB jne cli loop scas fldl loop sub je sub ds (bad) (bad) incl jrcxz push push lahf jp (bad) (bad) (bad) lcall enterq sub jge rex.WRXB mov jnp (bad) sbb repnz rex cltd rex.RB lret movups pop lea lock rex.WX loopne rex.WXB lock addr32 (bad) cmp (bad) imul mov repz jge xor cmp leaveq jmpq test sub jmpq callq cmc cmp jmpq jno cmovns cmp test jmpq sets movzbw mov movzbw jmpq je test test cmp jns jne sete jmpq callq jmpq test cmp jmpq callq test cmp jmpq jns movsbw mov jmpq jmpq js not mov mov jmpq jmpq jmpq jmpq callq movzbw rcr bts mov test bt bt stc xor jmpq je bt stc bt test cmp jmpq jl mov jmpq callq xor mov cmp cmc test jmpq cmp jmpq je jmpq cmc stc test jmpq sub test add mov bt add jmpq je rol stc sets rol sub movzbw movsbw movsbl lea not xchg lea mov bswap lea jmpq clc test jmpq je jmpq nop jmpq jmpq jmpq bt bt test jmpq callq movzbw mov bswap setge mov jae callq movzbw mov setle mov not lea mov jmpq xchg jmpq ja nop jmpq jno callq stc stc cmp clc cmp jmpq jmpq xor jmpq callq bts mov xadd add xor movsbl not mov movsbw mov jmpq callq stc test jmpq mov jmpq bswap mov setae mov jmpq clc bt cmc test test jmpq callq jmpq cmc test jmpq jmpq not bswap mov jmpq jmpq jmpq jmpq movq jmpq jmpq callq jmpq je jmpq jmpq jmpq jne jmpq test jmpq bt clc bt mov adc bsr cmp adc mov jmpq jmpq mov jmpq jmpq jmpq nop jmpq clc stc jmpq jmpq jmpq callq lea lea bswap bswap jmpq jmpq stc bt cmp jmpq jne cmp xor stc cmc cmc xchg cmc cmc cmp stc test jmpq bt test jmpq callq cmc jmpq pushq jmpq jmpq je cmc or bsr rcl mov stc shl mov rcr shld ror dec lea bt cmp jb jb clc cmc stc clc cmp jmpq jmpq bswap mov jmpq stc stc test jmpq jmpq je shld mov cmp clc clc test test jmpq jmpq jmpq callq rcl mov cmp jmpq stc test add bt clc add bt stc add bt stc jmpq jmpq je jmpq cmp clc bt jmpq jmpq jmpq jmpq mov or bt mov data16 icebp inc shl mov cmc shld add bts sub sbb inc lea shrd adc bsr clc mov cmp add clc stc test clc add lea mov jmpq jmpq je btc mov jmpq stc bt add test bt cmc add jmpq jmpq callq stc mov stc bt cmp jmpq callq jmpq js movzbl movsbw mov mov jmpq jne lea not movzbl mov jmpq pushq jmpq jmpq callq jmpq callq shr mov bt test cmp mov movsbl test sete mov stc bt mov shr rcr setnp mov bt clc mov movzbw shrd test movsbw mov test clc mov btc mov cmc bt cmc mov dec rcr not mov jmpq jns callq btc rcr mov cmc test clc jmpq retq adc mov movabs (bad) pushq flds mov cmc rol mov (bad) xchg (bad) and cmp sarl mov cmp ds (bad) (bad) incl (bad) (bad) jae stos repnz add cwtl sahf (bad) cmpsl ss fistl test jnp std cmp xchg rex.WRX mov (bad) xor cwtl notl (bad) loopne push cmpsl sub and pop (bad) fs rex.B (bad) (bad) out rex.RXB pop movslq (bad) sbb (bad) fadds xor (bad) (bad) stc xor dec sub movzbq mov jmpq jbe and add mov bsf mov bsr mov test cmc bt add clc add test cmc add clc test xor jmpq callq cmc clc test ja js jmpq jmpq callq jmpq cmp cmp jmpq je bsr mov jmpq nop jmpq mov jmpq jmpq cmc test bt add cmp clc add stc cmc sub jmpq mov jmpq je clc cmp jmpq callq movsbw mov mov jmpq cmc cmp cmpl jmpq jmpq jmpq jmpq jmpq jmpq je mov xor movsbw mov lea not lea jmpq jmpq lea jmpq (bad) retq xchg (bad) mov jg and (bad) sub (bad) xchg adcb jrcxz jne or loope add mov lods xchg xchg lods push (bad) jns cmp jns push (bad) enterq (bad) (bad) pushq jmpq rex.WXB fwait mov or xchg (bad) jrcxz rex.WR xchg mov (bad) sbb sti icebp (bad) jne setne rcl rol mov jmpq jmpq callq movsbq jmpq test jmpq callq bt mov jno test clc stc test jmpq clc jmpq jmpq jmpq jmpq jmpq movzbl lea movsbw jmpq lea mov lea mov mov jmpq jmpq jne jmpq jne cmc sub cmp bt xchg cmc jmpq mov jmpq jne neg bswap mov test test test jmpq inc jmpq cmp jmpq jmpq mov setle bswap movzbl jmpq pushq jmpq je sar add add shr xor not mov lea setno mov movsbl not mov bswap bswap not mov not movzbw lea jmpq jmpq je jmpq jmpq jmpq lea jmpq callq movzbl mov jmpq jmpq callq shrd inc dec shl mov rcl mov cmp xchg jmpq mov lea mov bswap mov jmpq test cmpl jmpq je jmpq jmpq not not jmpq cmc jbe xchg cmp jno cmp stc test jmpq mov jmpq callq clc mov clc clc bt cmpq jmpq jmpq callq bswap xchg sets mov lea mov mov jo callq rcl shld bsr mov stc bt stc clc test jmpq jmpq jmpq jmpq test stc cmpl jmpq je btr setle and dec xor movsbw mov jmpq jmpq jmpq jmpq movzbw lea nop setp xchg bswap mov movzbw movsbq mov lea mov lea jmpq jb jmpq jbe jmpq jmpq jmpq jb lea bswap lea jmpq jmpq mov jmpq callq lea movsbw mov bswap mov jmpq jmpq je stc cmp stc cmp jmpq test and clc jmpq callq setns neg bts mov jmpq jmpq callq clc sbb mov bt bsf cmp shrd mov cmp clc test jmpq mov mov lea not mov movsbw movsbw jmpq jmpq callq jmpq je not mov jmpq jmpq jmpq mov jmpq callq jmpq jmpq jmpq not jmpq jmpq je neg mov bt test jmpq je movsbl movsbw mov jmpq jmpq mov jmpq callq bt stc bt test test jmpq callq add bt and mov clc test jmpq jge je rol mov cmc mov cmp stc test bt test jae je cmp bt stc cmpl jmpq je jmpq mov jmpq callq neg dec jmpq jmpq jmpq mov mov bswap not mov movzbl jmpq mov lea mov movzbl not lea jmpq callq jmpq jmpq jmpq jmpq je clc jmpq pushq jmpq bt bt test jmpq mov mov mov jmpq je clc cmp jmpq jmpq jmpq jmpq jle jmpq je cmp xor jmpq clc testb jbe jne jmpq callq bts sub mov jno test jmpq je cmp stc cmp jmpq je cmc bt bt bt cmp jmpq jbe jmpq cmc jmpq stc cmp jmpq callq sub cmc lea cmp test jmpq mov shrd sbb mov test clc bt bt add test bts neg add mov clc cmc jmpq jmpq jne rcl shld inc mov mov lea mov xadd mov inc xor lea lea movsbw lea jmpq shl mov test jmpq mov jmpq jmpq dec rol movsbw bts mov test cmp clc cmc test jmpq mov jmpq mov jmpq jmpq callq movzbw mov xchg mov not mov jmpq jmpq jmpq lea mov jmpq cmp jmpq je stc jmpq jmpq add test stc add shrd mov clc stc add jmpq shr cmp bt jmpq callq rcl mov clc test jmpq jmpq je cmc jmpq je jmpq jb shr btc lea bt cmp cmp jmpq mov jmpq jmpq not bswap movabs dec lea dec jmpq nop jmpq jmpq jmpq je jmpq not movzbw mov jmpq jmpq jne ror shr mov clc sar jmpq je xor shld mov mov inc bsr btc mov cmp mov bt clc test add jmpq mov jmpq jne or rcl movzbl adc movzwl add inc clc mov xadd sub stc sbb shl shl bsf neg test lea lea neg mov bt bt cmp cmc or bswap jp lea jmpq callq test test jmpq je jmpq lea mov jmpq jmpq jmpq jmpq jmpq jne bsf sub movsbl mov stc cmp test clc test jmpq jmpq movzbl nop xchg mov lea mov jmpq callq and shrd shrd ror mov cmc test cmc cmp test jmpq cmp mov test jmpq jmpq jmpq jmpq (bad) lock mov or bsr mov neg btc mov stc clc add test cmc add cmc add bswap lea lea movzbw mov jmpq callq movsbq not mov jmpq jmpq jmpq jne rcl or ror mov add shrd mov lea xor xor adc mov btr stc btc sub lea lea jmpq callq rol sub mov mov not mov bt jmpq callq stc jmpq cmc test test add jmpq and test cmp cmp jmpq xchg bswap jmpq callq bt stc cmp jmpq mov jmpq jmpq je movsbw mov setbe mov bswap setbe lea mov setne mov jmpq jmpq je shl inc mov test cmp cmc stc test jmpq jmpq jmpq mov jmpq pushq jmpq setle bswap mov jmpq and mov clc cmc btc shl xor mov mov jmpq je or cmc xor xor xor movsbw mov jmpq je cmc bt cmp jmpq jmpq cmpq jmpq callq clc stc stc cmc and bt cmp jmpq callq or lea btr mov bt js test jmpq mov movzbq mov jmpq add bswap inc sub lea bswap mov mov jmpq jne stc lea sar rol mov sets adc cmc sub bswap add dec xchg sar shrd movzbw test movzwl jmpq jne test btc xor shl btc or shl clc shr mov clc clc cmp cmc repnz shl bts btc xor btr btc rol nop shl rcl movzwl cmc stc cmp add cmc cmc mov je test cmc test jmpq cmp xor jmpq callq stc cmc and cmp cmp jmpq jmpq callq clc rol mov lea ror lea mov xor movzbw mov jmpq test cmc add test clc test stc cmp jmpq jmpq mov and xadd mov lea xor seta mov jmpq jmpq jb dec movzbw inc incl not jle mov not mov jmpq jmpq callq cmp stc bt test jmpq callq bt jmpq je sbb shr mov stc test jmpq jmpq add add and stos sbb mov xchg repnz retq (bad) push pushq (bad) or rex.RX jmp add add stc or movsbw lea jmpq jmpq jne inc neg mov test test jmpq jmpq jmpq cmpw jmpq cmp jmpq jmpq seta bswap mov jmpq bt stc cmp add clc stc stc sub test cmc stc add jmpq jmpq jmpq jmpq jmpq je jmpq stc cmc test jmpq jmpq jmpq cmc jmpq mov jmpq mov movsbw mov jmpq callq setns xchg seta lea lea movzbw lea jmpq callq lea mov mov jmpq jmpq jmpq add cmp cmp bt cmp sub bt bt cmp add jbe jmpq jmpq jmpq cmp cmc add bt stc jmpq jmpq mov jmpq jmpq jne stc jmpq je test test cmc stc xor jmpq cmc clc sub jmpq callq data16 hlt test lea cmp test jmpq test jmpq je rcl add mov shld bts sub cmc mov test stc cmp cmp jmpq cmp test jmpq callq mov lea movzbw jmpq cmpb jmpq jmpq je jmpq jmpq mov jmpq jmpq jmpq callq cmc jmpq jmpq callq not bt add movsbl mov cmc cmc stc jmpq jmpq setb jmpq jbe shr mov sub sar lea cmp cmp stc sub jmpq callq js cmp jmpq jmpq jmpq cmc test jmpq jmpq jne lea movzbl not mov jmpq mov clc test jmpq jmpq jmpq mov jmpq jmpq movsbw bswap mov jmpq jmpq dec jmpq je sar bswap (bad) icebp add sub lea sete movsbl movzbw mov jmpq callq ror lea movzbl adc mov bt clc test jmpq callq jmpq add callq movzbw mov or mov cmp jmpq callq mov lea jmpq callq bswap sub mov cmp jmpq je xadd adc stc inc mov rcl stc rex.W icebp (bad) bt mov inc shr cmc lea bt clc clc cmp jmpq mov jmpq jmpq je cmp stc bswap xor movsbw setno mov jmpq cmc cmc mov cmp stc test jmpq jne test test cmp cmp cmpq jmpq je bsf bt and mov and inc not test mov inc lea test clc cmp jmpq sete seta movzbw bt xor bsf neg test movsbw mov mov jo not jp sete clc js test movzbw jmpq jmpq je jmpq callq data16 (bad) (bad) sar clc shl mov cmc test jmpq je test jmpq callq bt cmp cmp cmpb jmpq jmpq jne sete mov setb mov jmpq jmpq cmp jmpq je cmc test stc cmpl jmpq lea movzbl jmpq jne xadd movzwl not shr (bad) cmc or mov test jmpq jmpq je cmp mov cmp cmpb jmpq je stc lea sub setne not mov jmpq mov clc test cmpb jmpq callq cmc cmp clc bt test jmpq jmpq mov jmpq jmpq jmpq clc test jmpq jmpq callq bsr shrd mov jmpq je lea mov jmpq jmpq callq cmp and jmpq jmpq jne bt test test test jmpq jmpq jmpq je not movsbl mov jmpq mov jmpq je bt stc cmp jmpq jmpq callq ror sub bts mov cmc bt test jmpq jmpq lea xchg setne lea movzbw lea jmpq test cmp jmpq dec ror mov clc test jmpq je or add sub movzbw not not lea bswap mov jmpq jmpq jbe rcr dec shr mov dec mov clc mov bt bt cmp jmpq mov cmc clc cmc add cmp bsf shld mov jp cmp add clc cmc clc jmpq jmpq jmpq je setge setbe mov mov jns callq jmpq jmpq jmpq jmpq callq cmc cmp jmpq callq bt bt jmpq callq cmp stc cmp jmpq callq bswap setae movsbw not mov setg mov jmpq xchg mov movzbl mov jmpq je shl xor lea lea mov jmpq bswap bswap mov jmpq je not mov jmpq jmpq je jmpq callq bsf setg mov stc cmp test jmpq jmpq clc cmp jmpq callq jmpq jbe jmpq jne bt mov cmc mov stc bt test jmpq jmpq je bswap movsbw not mov mov jmpq callq mov lea movsbw bswap movsbl lea lea jmpq bt cmp clc add bt test jmpq jmpq seto jmpq mov stc movl cmp test cmp test mov mov bswap mov clc test jmpq jmpq jmpq test jmpq rcl not movzbl mov rcl mov mov shrd mov shl rcr shr xor seta lea mov jmpq je not movsbw movsbl lea jmpq pushq jmpq jmpq je stc cmp jns je cmp bt cmp mov cmc jmpq jge jne rol rcr mov stc bt test clc mov test clc add stc add test jmpq je sar lea rcr btr shld xor movsbw mov jmpq je xadd lea cmp shld lea bsr btc sub movsbw mov not jmpq jne cmc stc cmp cmp cmpq jmpq xchg mov jmpq jmpq nop jmpq jmpq jmpq jne setnp mov bts sbb mov cmc rol mov cmp stc test clc add stc clc btc mov jmpq bswap mov movzbl movzbl jmpq mov movzbw setno mov jmpq jne cmp cmc cmp js je test cmc cmpb jmpq jmpq jmpq jmpq jmpq callq jmpq movzbw jmpq jmpq callq not setnp movsbw movsbw lea lea movzbl movzbw mov lea jmpq pushq jmpq bt cmp test jmpq js cmp test jmpq callq test test cmc cmc cmp jmpq je jmpq jmpq callq jmpq jmpq jmpq jne setbe mov sbb dec rcl movsbw mov bt add jmpq callq not rcl setno movsbw mov movsbl rcl mov stc stc cmp cmc xchg test cmc test test jmpq movzbw bswap dec lea not not mov jmpq mov movsbw inc bswap mov jmpq not bswap lea lea jns bswap mov lea jmpq jmpq pushq jmpq test jmpq je bt neg mov sar sar stc xadd mov (bad) repnz push cmp or mov bt add shld shl (bad) hlt mov cmc cmc add add lea mov cmp stc add jmpq jne not lea cmc clc add bt stc sub jmpq mov jmpq jne cmp clc xor jmpq jne btr dec mov cmp test jmpq jmpq je jge callq jmpq je bt cmpw jmpq or mov shld bts movl cmp rex.WB lock mov movzbw jmpq jmpq pushq jmpq jmpq jmpq bt sub jmpq je dec movzbw mov ror shl sar mov movsbw rcl xor lea stc clc stc cmp jmpq cmp cmpb jmpq bt stc jmpq je jns cmp jmpq nop jmpq jmpq callq add movzbw shrd mov bt cmp test jmpq mov not not mov jmpq je neg ror mov cmp jmpq callq btr test mov (bad) repnz bsf adc mov cmc cmp add sbb js movzbl stc xor cmp cmp cmp jmpq jmpq movl jmpq jmpq sub jmpq callq jmpq jmpq jmpq mov jmpq jmpq callq mov setl mov mov mov bswap mov jmpq jmpq jmpq jmpq jmpq cmp jmpq incl jmpq callq rcl sub movsbw inc mov cmp stc test jmpq bswap not not lea jmpq add bts xor and test mov cmc add cmc jmpq je jmpq jmpq je xchg mov mov xchg movsbw mov mov mov mov bswap mov jmpq jmpq mov movzbw not mov jmpq jmpq callq rcl sub movsbl movsbq movsbq mov jmpq xchg cmp test clc test jmpq jmpq jb callq not xchg bswap bswap mov mov bswap bswap movsbw mov jmpq jne movsbl mov jmpq jbe jmpq pushq jmpq not dec clc lea not and mov test jmpq jbe dec jmpq je xor dec cmc mov stc cmp clc xor jmpq je jmpq callq sub bsf lea cmp jmpq mov out jg pop in loope std jl mov jge test push (bad) mov xor and rex.WR repz and (bad) (bad) (bad) jmpq shll add popfq movsb sarb or rex.RXB fiadd rex.W outsl movabs (bad) mov ss sarl jae gs stos stos fisubrl outsl enterq cmpsl repnz (bad) pop rex.WX and or fnsave repz fwait loopne test and pop adc jmpq mov jmpq callq shld movsbl bsf xor mov clc test jmpq jmpq je not mov jmpq clc cmp jmpq callq or mov test clc jmpq callq cmc stc bt test jmpq jns not jmpq mov ror bts shld add lea bt jmpq callq xadd inc sbb mov xadd add lea neg not sub rcr xor not mov bswap mov jmpq jmpq not lea mov jmpq jmpq jmpq jmpq jmpq lea jmpq je jmpq mov jmpq jmpq jmpq mov jmpq callq clc clc test cmp cmp jmpq jmpq callq rcl cmc lea test clc stc test jmpq jb sbb data16 icebp or rcr and mov sar not sub movzbl movsbw mov jae callq movsbw xchg setns mov lea mov mov jmpq mov jno lea mov jmpq lea movzbw not lea mov jmpq jbe bt bt shrd lea cmc clc clc xor jmpq xor jmpq callq bt stc bt cmpb jmpq callq movzbw btc and mov cmp stc cmp test test jmpq jmpq lea lea movsbw jmpq jmpq cmc bt jmpq jmpq je cmp cmc test clc cmp jmpq je movsbw lea xchg mov movzbl jmpq add jmpq jmpq jb test cmp mov ror shrd rol sar mov jmpq mov jmpq xchg lea sete lea movsbw movsbw jmpq jo callq bswap dec setg mov jmpq jne jmpq ja jb jmpq callq not not lea jmpq jmpq jne movzbl lea test bt bt cmp add cmc bt test sub jmpq jmpq cmc add bt cmc cmp cmp mov clc cmc cmc test jmpq je jmpq jmpq clc mov setge sar or and mov mov sar cmpq setne movzbl mov mov lea mov jmpq jbe jmpq callq stc bt cmpl jmpq je btc mov test test cmc xor jmpq jne cmc not mov cmc bt test jmpq jmpq jmpq mov jmpq movl jmpq jmpq jbe ror movsbw sub mov sub test mov cmp stc cmc cmc cmp jmpq jmpq test jmpq jmpq jmpq jmpq jmpq jmpq jmpq not lea mov jo setae lea lea jmpq je cmc jmpq jmpq jmpq je sbb sar sub mov test cmc cmp clc test jmpq clc cmc bt test jmpq test jmpq jne cmp rcl neg sar sub setno mov movsbw mov bswap movsbw lea jmpq jb inc mov rol lea dec movzbw xor bswap mov jmpq jmpq jmpq jmpq jb bts lea jmpq jmpq jb setge dec add bt btc cmc mov bts or lea or clc mov test ror mov shl sub inc inc sub bsr ror rol clc mov bt shld rcl repnz movzbl movsbw lea not movsbw movsbw movsbw dec jmpq jb lea dec neg movzbw shrd xadd mov lea movsbl or sbb bts xor test mov neg add or xor shr not bsr mov btr and rol repnz bswap not bswap dec inc dec dec data16 hlt rol sar shl mov ja bt cmp test jmpq je cmp test jmpq jmpq test clc jmpq nop jmpq jmpq mov jmpq je clc cmp jmpq jb setbe movzbw dec shl mov btr bswap bts shr or bswap btc bswap xchg mov shl dec add xadd shld sub xchg mov add not stc repnz lea lea jmpq jmpq je stc mov jmpq jmpq jb movzbl not movsbw dec setae jmpq mov jmpq je jmpq movsbq mov jmpq je movzbw mov jmpq je mov mov jmpq jmpq cmc shr cmp cmc or jmpq callq bswap mov movsbw lea jo lea jmpq jmpq callq jmpq add stc jmpq jl jb inc setge dec bt mov rol clc xchg or shrd mov jmpq callq lea lea movabs mov jmpq bt clc bt cmpw jmpq jb mov jmpq je rcl shr mov cmc stc cmp cmp sub jmpq jmpq jmpq clc cmc bt add cmc jmpq je bswap btc or lea sbb sub setnp mov lea mov mov jmpq jmpq jns clc stc test jmpq je mov movsbq mov stc test test jmpq je clc test cmp jb jmpq movl jmpq callq jmpq clc cmpl jmpq jne dec rcr cmc bsr mov jnp test jmpq je jmpq mov movsbl mov jmpq mov jmpq je bt stc bt cmpl jmpq mov jmpq jmpq bt and cmc cmp cmp jmpq je jmpq je bsf bt not test mov data16 icebp stc mov sbb lea cmc cmp cmp jmpq callq bt jmpq jmpq je shrd bts mov mov cmc test stc test mov jmpq jnp jne jmpq add mov shrd setge clc lea stc cmp cmc cmp jmpq test jmpq je (bad) hlt add out (bad) adc (bad) test add add jmpq jne cmp stc jmpq je movzbq bswap lea jmpq jo je stc cmp jmpq not mov jmpq jmpq callq jmpq je jmpq je lea lea bswap xchg lea movzbq not setbe xchg mov movsbw mov jmpq test jmpq setb not mov movzbw lea xchg mov jnp mov not movsbw mov movsbw mov jmpq nop jmpq clc cmc cmc or jmpq callq cmp test mov cmp stc clc clc test jmpq mov not mov jmpq test bt test jmpq jmpq bt clc cmpb jmpq jbe rcr or lea mov lea lea sub adc mov stc test xor clc clc cmc cmp add cmp cmp stc add jmpq callq or clc btr btr lea stc bt test jmpq jne jmpq movsbl jmpq jmpq pushq jmpq callq jmpq je cmp test shld mov bsr add mov jmpq clc cmp jmpq jmpq jmpq jmpq callq jmpq callq stc test test jmpq jmpq movzbl mov jmpq callq sar jmpq shr mov ror rcl mov data16 lock rol mov mov cmc stc jmpq mov jmpq jmpq mov jmpq je test sar mov test test test jmpq je sar inc jmpq not movsbw mov not not lea mov lea movzbw lea jmpq jbe jmpq jmpq je lea not mov mov jmpq jmpq mov mov movsbw bswap seto mov mov movsbw movsbw jmpq jmpq cmc sub cmc clc test cmc test jmpq jmpq sar add cmc sbb sub dec mov ror repnz not lea not jmpq mov mov not movsbw mov jmpq jmpq clc cmp test jmpq jne movabs lea xchg xchg mov sar bsr shl bsr mov shl btr bt rcr mov bt add cmc add cmc cmp add cmc cmc cmp cmc add jmpq jne sbb mov stc test cmp jmpq jmpq jbe callq cmc test jmpq bswap movzbw setb movzbw mov jmpq callq bts bts xor mov bts stc mov clc mov cmp cmp test or test test test xor jmpq lea movzbw lea jmpq jmpq test jmpq jmpq (bad) pop push xchg jle jg (bad) pop ja add (bad) iret out add push ds or addr32 imul pop (bad) cmpsl rex.R mov (bad) (bad) (bad) decl int pop or addr32 and fnstsw fadds sub sbb jge ja mov fmull jae sahf cmp (bad) jmpq lea jmpq jmpq mov jmpq test jmpq je neg lea sub bts sub lea lea mov mov movsbw not movsbw movzbw mov jmpq jmpq jmpq dec jmpq callq jmpq mov movzbw mov jmpq je btr shl shl bt movzbl jmpq je jmpq callq movsbw lea jmpq callq stc cmp cmp jmpq jmpq jmpq jmpq sbb sub sar shl repnz bswap mov mov jmpq callq test test jmpq jmpq jb clc stc cmp jmpq movsbw movzbw mov jmpq jne cmc setge bt bswap movzwl sbb cmp jmpq cmpb jmpq je cmc stc test jmpq jmpq mov jmpq jmpq jmpq je jmpq jno mov jmpq jmpq callq bswap mov jmpq jmpq jne not seta jmpq jnp je jmpq test jmpq bswap movzbl mov jmpq jmpq jmpq callq test cmc test jmpq je test mov lea nopw bswap bswap bt bt mov bt cmc bt cmp test jmpq jmpq jg callq clc cmc test stc test jmpq jmpq movsbw clc mov setne xchg stc shrd mov bsf bswap mov bt clc cmc cmc add jmpq cmp jmpq test add bt stc test cmp sub clc jmpq jmpq add jmpq jmpq callq sbb sar sub bsf mov test clc clc cmp test jmpq callq bt cmp jmpq jnp je jmpq callq not lea bswap movsbl mov movsbl jmpq je bsf mov cmp cmp test jmpq jmpq jmpq bswap mov jmpq mov movzbw not mov jmpq jmpq je adc rcr rol mov cmp test jmpq je jmpq jmpq callq bswap mov jmpq je stc cmc bt cmp jmpq callq or sbb lea cmc test jmpq je jmpq jmpq mov jmpq mov jmpq je sar movzbw sar mov bt test jmpq jmpq callq mov not not movzbq mov not movabs mov jmpq callq mov movzbq mov jmpq je xchg mov movsbw lea mov lea not mov not mov jmpq callq movzbw jmpq callq bswap jmpq jmpq callq jmpq add callq jmpq jmpq pushq jmpq jmpq jmpq jmpq bswap xchg not movzbw mov movsbw lea lea movsbl lea mov movzbw mov movsbl mov jmpq jns pushq jmpq jmpq je shl bsf mov cmc cmc bt test jmpq callq bt cmc test and stc cmp cmp jmpq cmc mov xadd mov shrd add xchg rol ror neg lea rcl mov jae bt add stc clc add jmpq callq clc cmp cmp jmpq je bt mov shrd lea movsbw and sub bswap mov mov jmpq jae callq rcl mov cmc test stc test jmpq test test cmp jmpq jmpq je rex.W lock mov bsr btr sbb mov and dec test mov dec btr shl add stc bswap bt stc mov cmp add jmpq jmpq jmpq movl jmpq je stc cmpl jmpq pushq jmpq jb rcr xor btc lea clc xor jmpq je not rcl bswap movzbq mov stc test jmpq nop jmpq movsbw mov jmpq nop jmpq stc clc test jmpq jmpq bt mov inc shrd mov bswap not lea jmpq jmpq pushq jmpq jmpq jmpq mov not jmpq jmpq je bts inc adc mov xadd mov sub xor mov jmpq je shl mov jmpq jmpq jmpq je jmpq callq shl ror inc dec mov cmc jmpq je not sete bswap lea mov seta setp movabs mov lea mov jmpq jb clc cmc clc cmp jmpq jmpq callq setb sets mov not mov jmpq test jmpq jne je jmpq jne sbb stc lea jmpq je stc bt clc cmp jmpq callq jmpq jmpq ja mov jmpq je clc jmpq callq lea lea mov movzbl mov setg mov setle bswap mov mov lea lea not mov jmpq callq stc cmc clc test jmpq je jne callq clc cmp jmpq jbe bt test btr mov movsbw mov clc cmp jmpq add jmpq inc jmpq je jmpq je movsbw mov bswap mov xchg xchg bswap bswap mov mov movsbw seto jmpq xor jmpq mov jmpq jmpq jmpq jmpq cmc stc jmpq jmpq mov jmpq stc stc bt test jmpq mov jmpq callq cmc test jmpq jmpq jmpq callq bt clc test cmp jmpq je movzbw movsbw mov mov jmpq jmpq callq jmpq callq test clc bt cmp jmpq jb xchg dec lea movsbw dec btr rcl mov bts or bt ror rol and mov bt bt shl clc jmpq jb bswap inc jmpq jmpq dec jmpq callq cmp test jmpq callq neg mov clc test jmpq movsbw mov jmpq jmpq cmc cmp jmpq test jmpq callq stc clc test test jmpq callq xchg not mov jmpq jmpq jmpq je neg clc ror add mov clc rcr sub jmpq movsbw bswap mov jmpq lea not lea seta mov not mov mov jmpq jmpq jmpq jmpq jne bt jmpq jmpq jmpq callq movsbw lea sete jmpq jne cmc shr inc or lea bswap sub not setne mov bswap mov not not mov jmpq mov shl movzbw add stc not cmc xor lea mov mov mov jmpq callq sbb mov bt jmpq callq btc btr dec ror movzbl xor lea movsbw mov cmp jmpq jmpq je jmpq mov jmpq callq jmpq mov js mov jmpq je jmpq jmpq callq bswap not lea lea jmpq jmpq jne data16 mulb shrd lea jmpq jmpq bt test jmpq jbe jmpq jmpq jmpq js stc jmpq seta lea not xchg jmpq jmpq je test jmpq ja callq bswap mov not mov jmpq jmpq callq cmp clc bt test jmpq callq btr not jmpq add cmp cmc cmc clc add jmpq test jmpq jmpq je xchg xor bsf mov clc shrd or dec xor movsbq mov jmpq xor bswap mov movsbl lea mov jmpq nop jmpq je ror sub lea shr neg rcl sub jmpq mov jmpq movzbw movsbq lea bswap lea jg callq ror data16 lock xchg mov inc dec mov jmpq movsbw mov jmpq mov jmpq callq bsr neg bsr btc mov bt test cmc test test jmpq jmpq jmpq jmpq add jmpq jne bt sub clc xchg stc test test jmpq jmpq callq sbb adc btr mov mov test clc bt test jmpq add bt cmp cmc add cmc add mov seta movsbw mov jmpq movb jmpq callq clc test jmpq jmpq jmpq jmpq callq lea lea movzbl mov lea movsbl mov jmpq jb jmpq jmpq test stc jmpq jmpq jmpq xchg not mov jmpq je xchg movsbl mov movabs not mov not mov jmpq je shl cmp dec shl lea jmpq je adc movzbw mov test stc cmp test jmpq jmpq cmp jmpq jmpq btr adc mov stc cmp cmp bt test jmpq cmova jmpq stc cmp mov clc or test mov clc bt mov bsr mov test jmpq callq movsbw clc mov stc test cmp jmpq callq jmpq jmpq jmpq jmpq jmpq add bt stc bt clc add bt cmp add cmp cmc add bt jmpq callq rcl mov dec rcl mov stc cmp bt stc xor jmpq je cmp cmpq jmpq je movsbw setp movsbw setbe mov xchg mov not mov jmpq jmpq test bt xor jmpq je xor shl neg mov bt clc test jmpq jmpq stc shrd sub bswap bswap mov jmpq jne btr shr add rcl mov xchg clc mov bts rcr mov cmc jmpq je btr not xor bswap mov stc test test jmpq jmpq jmpq jmpq jmpq jmpq jb callq shl shl ror btr lea bt bt stc test jmpq cmc xor jmpq je lea mov jmpq jmpq jmpq callq setp test neg rol mov xor xor test cmp cmpq bswap bswap movsbw mov jmpq jmpq callq cmp cmc bt stc test jmpq mov mov setb mov jmpq cmovns cmc stc jmpq cmc test jmpq mov cmc test cmc cmc test jmpq add cmc sub stc stc add jmpq je test cmp cmc cmpq jnp je btc jmpq jmpq je sar bsr mov and shld shrd shrd mov bswap or xor mov cmc cmp add jmpq lea mov not bswap mov jmpq callq xor mov setp neg mov cmp test jmpq jmpq xchg jmpq jmpq jb seta dec dec inc dec xor bswap movzbw rcr mov bts movzbl dec inc or dec bsr mov adc or shl movsbw ror sub btc rcl cmp lea mov lea shld repnz not not lea jmpq callq or mov cmp sar bt mov shrd bsf bts or sbb mov ror and sub mov repnz movsbw movzbw movzbl bswap not bswap not jmpq je jmpq jmpq dec jmpq callq stc test cmc cmp and stc stc cmp cmp jmpq lea not mov jo callq or add or rcl mov jmpq movzbw bswap lea mov jmpq jmpq je jmpq callq inc and btc mov clc cmc cmc test jns je clc or sar sub mov lea xor bswap setl setbe bswap mov jmpq callq bt test jmpq jmpq stc bt cmc cmp jmpq cmc mov rcr mov jmpq je jmpq sub mov inc movzbl jmpq not jmpq jmpq callq cmc cmp jmpq test jmpq xor jmpq je test cmp js jne stc bt mov stc jmpq jmpq mov jmpq jmpq rol shr movzwl rcl movzbl jmpq jmpq jmpq je jmpq jne stc jmpq dec jmpq callq lea mov mov movzbw movsbw mov movsbw bswap not mov mov mov bswap not jmpq mov cmp bt test stc test jmpq jmpq shrd mov and setno and mov rcl stc rcr add sbb bsf btc rol mov or shl mov clc stc cmp add bt bt cmc bt mov cmp mov clc clc jmpq cmc clc xor stc xor cmc xchg clc test jmpq clc jmpq test jmpq clc stc clc cmc cmp jmpq lea jmpq cmc bt test jmpq pushq jmpq jmpq callq movzbl lea lea movabs lea setns lea jmpq setg mov jmpq jmpq callq bswap shr sar neg mov cmp cmp clc test jmpq bswap not mov jmpq nop jmpq jmpq callq shr xor movzbw shrd mov stc add js je cmp stc cmp jmpq nopl cmp bt stc stc cmp jmpq jmpq je jmpq jmpq mov jmpq je cmc cmp jmpq test jmpq jmpq jmpq mov jmpq stc test clc mov test test stc add cmp add test bt cmc jmpq mov jmpq jb jmpq mov jmpq jmpq jmpq mov bswap mov jmpq setle mov bswap mov bswap setns mov jmpq callq not movsbw movsbw mov movsbw lea setnp inc mov jmpq je jmpq jne stc bt cmp xor jmpq not xchg lea bswap mov mov mov jmpq movl jmpq callq js cmpb jmpq bswap not movsbw mov jmpq jne not rol mov sbb mov movsbw add shr mov test cmp cmc add setge data16 icebp add bt cmc cmc jmpq jmpq jmpq jne mov not mov jmpq jmpq je cmp cmp jmpq test or jmpq mov cmp cmp test test jmpq je not lea setno mov jp callq test cmp jmpq callq btr mov bt test jmpq callq movzbl movzbw movsbw lea jmpq jmpq bswap mov jmpq jmpq je jmpq jmpq jmpq mov jmpq jmpq jmpq cmp test jmpq jmpq test cmp jmpq je jmpq jmpq callq sar ror lea stc cmp stc cmc test jmpq callq rcl rol sets not mov setne movsbw jle lea mov bswap movzbw mov jno movzbw bswap not movzwl jmpq callq movsbw bswap lea jmpq jmpq mov jmpq je stc bt bt cmp jmpq mov mov jmpq jmpq jmpq lea setl mov jmpq jmpq mov jmpq mov clc jmpq jmpq je lea neg rcr rcr lea rcr shld or btc xor mov not not mov not mov mov jmpq jmpq jmpq mov mov setns sete cmp bt test jmpq jmpq jmpq in (bad) xchg (bad) (bad) out jg mov (bad) insb icebp pushq mul jmp xor pop repnz out cmpl (bad) test (bad) mov rcrb pushq and (bad) (bad) (bad) ljmp (bad) mov (bad) xor (bad) (bad) (bad) callq (bad) (bad) cmpsl scas mov jmp test int3 pushq add add push test xor (bad) es xor (bad) xchg stc push jl out (bad) insb cmp (bad) or fildll cmp callq (bad) std (bad) callq jmpq je jmpq cmp cmp jmpq ja bt sbb bt mov sbb lea btc movzbl mov add jmpq jne test setb stc mov cmc bt test test jmpq test jmpq callq cmp jmpq cmp bt add setno dec stc not mov jmpq je shrd sbb bt sub movzbl mov jmpq callq jmpq add clc test add test cmp stc jmpq (bad) nop movsb in out jg xor shlb (bad) fsubrl js add push add movsl xor sbb (bad) or adcb rex.W rex.RB rex.R pop and (bad) (bad) (bad) ljmp stc movslq fidivrl (bad) out xorb mov pushq je lret roll (bad) cmp jne movabs cmp mov enterq rorb addr32 test jge sub and nop stos jle fdivl mov callq cmp cmp stc cmp jmpq callq lea jne movsbq lea jmpq cmc stc add jnp bt sub jmpq add jmpq jmpq callq setb xor movzbw jmpq callq clc cmc cmp jb jne not shl shr jmpq jmpq add add mov sbb addr32 and mov mov xchg sub rex.WXB adc mov es rex leaveq in pop insl jle (bad) movabs (bad) add mov jmpq jmpq not mov jmpq sub cmc jmpq jmpq jmpq callq cmc mov jae test jmpq je data16 lock add out sar sub setge not mov mov movsbw jmpq callq cmc stc clc jmpq jmpq je cmp cmc cmpl jmpq callq jmpq xchg mov lea bswap lea lea mov not sete movzbw mov jmpq jmpq add cmc cmc add test test add mov seta mov jmpq movzbl and rcr ror lea mov cmc bt stc bt cmp jmpq jmpq callq sar sub dec mov shld shl rol dec mov rcl sub mov movsbl xadd or mov movzbw and mov mov cmc ror mov stc jmpq callq bt sub cmc test cmp xor stc xchg clc test jmpq movzbw not movzbw dec movzbl dec bswap neg rol mov cmc test bt stc test jmpq callq cmc bt cmp jge jne setp mov movsbw sbb dec mov inc lea not adc add bswap mov jmpq mov sar sub shld sets sub not xchg cmp test movzwl test jmpq jmpq dec not lea dec bts shrd jmpq callq bswap bswap jmpq jmpq jmpq callq jmpq callq inc bsf shrd mov cmc cmp jmpq mov jmpq add jne add mov clc test bt test jmpq cmp jmpq jmpq jmpq callq dec inc mov bt test xchg stc stc stc test jmpq mov jmpq add jmpq test jmpq callq setb mov movsbl movzbw mov mov movzbw mov jmpq callq clc add shrd mov test test stc mov stc movl cmc mov lea cmp mov cmp stc mov cmc test jmpq jmpq callq xchg mov seta not movsbq not mov movsbw mov not mov jmpq jmpq je stc bt xor jmpq jmpq je bts test movsbw jmpq je not mov not lea mov jmpq je pushq jmpq jmpq jmpq jmpq jmpq cmp jmpq mov bsf neg mov clc mov and movzbl stc stc stc cmp mov and bt btr btc movzbl jmpq jbe shld lea jmpq je rol adc lea bt jge cmp jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq lea bswap mov jmpq jmpq bt cmp jmpq mov movzbw jg setnp setns mov movzbl seta movzbw mov jmpq jmpq mov bswap lea jmpq mov stc stc clc jmpq test jmpq jmpq je xchg sub lea lea movsbw lea mov jmpq movl jmpq jmpq callq jle nop jmpq jmpq callq cmc test bt stc and bt cmp jmpq movl jmpq setns lea movzbl movzbw mov movzbw mov jmpq movzbl jmpq callq clc cmc test jmpq jmpq bswap not mov jmpq je stc test cmp jmpq jmpq jmpq movzbl or inc ror xor cmc mov mov shr clc movzwl jmpq jmpq jmpq callq rcr bts btc movzbl btr setg dec sar sub setb not lea mov setne not movzwl jmpq mov mov jmpq jmpq movzbl jmpq callq jmpq mov cmc stc cmc cmp test jmpq or test clc test xor cmc repnz jmpq je stc cmp jmpq je xor ror mov bt test jmpq jmpq jmpq jmpq je movsbl sub movzbq bswap bswap mov je callq movzbw jmpq jmpq callq cmp bt cmp jmpq je cmp cmp cmp jl jmpq jmpq jmpq jmpq callq bswap jbe mov movsbw lea lea mov jmpq jmpq callq jmpq jmpq jmpq lea movsbw mov jmpq callq btr xchg jmpq callq sub bsf neg bsf mov not and mov lea ror neg lea lea shl rcl (bad) icebp lea xor lea jmpq add clc clc stc cmp sub cmc add jmpq jmpq jge mov jmpq je test stc clc jmpq jmpq jmpq and movslq movslq idivl outsb loop mov mov outsb out sbb pop cmpsl cmp xchg fs movb cmpsb rex.WXB in ds (bad) (bad) jmpq mov jge (bad) in movslq mov mov cmpsb enterq rex.WB (bad) push stos sarb jmp pop mov push jmpq jmpq callq cmc adc shrd mov cmc test jmpq jl dec jmpq test cmp jmpq jmpq jmpq jb movzbw lea jmpq mov jmpq jne stc bts shr mov sar mov sbb rol or clc lea rcl stc movsbw clc add bswap mov jmpq callq jmpq jmpq scas mov imul cmc pop (bad) (bad) jrcxz xor in rex.WRB add imul mov imul (bad) (bad) pop callq cmpsl cmc and (bad) (bad) (bad) ljmp (bad) sahf outsl add add cmp movsb sub (bad) movsb cmp rex rolb mov mov repz callq (bad) jnp or (bad) lea pop pop mov out xor mov (bad) jns out jo iret (bad) int3 sub movabs adc xor incl add in stc cmp jb je jle bsf mov bt test cmc test jmpq cmc sub jmpq jmpq jmpq jmpq je jmpq jmpq callq stc cmp cmp jmpq clc stc cmp jmpq je clc cmp jmpq jmpq cmp jmpq callq bswap xadd sar dec mov jmpq je dec rcl xor mov not jmpq rcr bswap shl add xchg inc not xor rcl xadd mov stc shld repnz movsbl not movsbw inc dec not lea lea not mov jmpq jmpq stc cmp test add stc test clc stc add movsbw inc not dec mov stc test stc stc add jmpq cmp clc bt test sub test xchg clc cmc test test jmpq mov cmc stc bt mov test cmc movl jl mov shl bt cmp btc mov cmc mov bt cmpb jmpq jmpq fbld fcoms jg jno (bad) loopne rex.W in rex.RX subl rex.WRXB rex.WXB ja (bad) (bad) cmc rorl (bad) and rex.B rex.WX outsl jb push and (bad) (bad) (bad) decl cmpb fdivs fisubl mov cmp (bad) adc outsl leaveq xchg jne imul add adc rex.RXB je stc cmc bt test mov stc cmc test bt cmpb jmpq mov jmpq jmpq jb jmpq jmpq movzbl mov jmpq test jg je stc bt stc cmp jmpq jmpq jmpq jb jmpq jle callq test cmp clc cmp test je je jmpq je stc bt cmp jmpq jmpq movzbw not lea jmpq pushq je pushq jmpq jb jmpq callq cmp test jmpq jmpq jmpq je bswap mov dec movzbw mov data16 bnd shl sar lea mov jmpq lea mov movsbw not mov jmpq jmpq jmpq je cmc clc stc clc cmp jmpq stc stc bt test jmpq callq stc bt sub mov cmc test clc test jmpq callq setns inc stc jmpq stc cmc cmpb jmpq cmp cmp test jmpq callq bswap movzbw bswap mov mov lea movzbw jmpq not jmpq callq stc cmp jmpq jmpq jmpq jmpq jmpq je bts setl bts movzwl test lea cmp test movzbl bt stc jmpq je not dec sub lea mov jmpq jmpq je cmp jmpq mov jmpq je jmpq test jmpq bswap mov mov jmpq jmpq jne lea mov cmp jne stc test jmpq jmpq test jmpq mov jmpq jmpq jmpq je mov xor seto movzbl mov jmpq callq movzbw movsbw jae movsbw lea jmpq jmpq mov not movsbl movsbw bswap mov jmpq jmpq mov jmpq mov jmpq callq add inc bsf mov test bt cmp jmpq mov jmpq jbe xadd jbe sar shl mov and adc (bad) testb cmp add cmp mov clc clc cmp add cmp add test bt clc add jmpq jmpq mov jmpq stc stc test jmpq je bts sub movsbw bswap not lea mov jmpq callq jmpq jmpq mov jmpq lea jmpq callq xchg movzbl cmc xor jmpq jmpq jne adc mov stc bt mov clc add stc bt test add test stc cmp test cmp jmpq callq add cmp mov neg neg cmpq not mov jmpq movsbw mov movsbl bswap movzbw lea mov jmpq jmpq je adc xor setae mov jmpq jmpq jmpq stc sub jmpq je clc jmpq mov rcr mov clc mov test jmpq test setne mov or shld mov stc cmc add jmpq jmpq btc mov stc mov ror add shr lea btr bt btc shr add jmpq callq test test bt test jmpq jmpq jne btc stc cmp shl lea inc xchg setbe sub jmpq jmpq je jmpq jmpq lea clc cmc cmc test jmpq je jmpq mov jmpq jmpq je bsf lea mov clc cmp jmpq jb movsbq inc mov not incl bswap bswap mov jmpq jne jmpq jmpq je cmp cmp cmc cmp jbe je jmpq jmpq callq cmp jmpq callq xor dec mov jmpq mov lea jmpq mov jmpq jmpq jmpq mov jmpq sub not jmpq jmpq callq mov not not xchg mov movsbl jmpq callq movzbw lea mov test test bt cmc test jmpq jmpq jmpq jmpq not inc dec rcl shr stc ror mov test test clc cmp test jmpq jmpq mov jmpq cmc test cmc stc add xor mov clc cmc add stc add clc bt neg bts mov jmpq jmpq mov movzbw mov movsbl mov jmpq jmpq jmpq stc add jmpq je bsf mov sub mov btr shl lea cmc xor bswap jmpq jmpq jmpq je not bswap lea not mov jmpq bt test jmpq mov not mov jmpq jmpq callq sbb sbb stc not mov cmc jmpq jmpq jmpq callq shld cmc setg mov bt cmp cmc cmp test jmpq jmpq cmp jmpq je cmp stc test jmpq jne btr inc movsbl mov rol sub mov mov or ror movsbq shld lea stc add mov not mov jmpq jmpq jmpq callq not mov lea jmpq jmpq jmpq je rol mov jmpq mov movzbw mov jmpq jmpq jmpq cmp jmpq jne bt cmc stc cmc cmpq jmpq je mov movzbl mov mov jmpq jmpq test sub jmpq jmpq dec jmpq jne shld mov and xchg shl cmc mov bts jmpq je jmpq nop jmpq cmp cmp stc test jmpq js mov movsbl jmpq bt test jmpq je dec bt shld and mov clc jmpq callq clc jmpq callq cmc mov jmpq jne rol mov ror sbb mov sub xadd neg lea bswap add xor movabs add jmpq test jmpq jmpq jmpq je lea mov movsbq not movzbw mov mov not bswap setnp mov jmpq je jmpq jmpq callq stc cmc test jmpq callq lea mov jmpq clc setl mov jmpq je bsr and not shrd mov data16 icebp add mov cmp lea clc test jmpq jmpq jmpq jmpq callq jmpq callq setne bswap movzbl mov mov jmpq jmpq jmpq jmpq je cmc clc test clc cmp jmpq jmpq jmpq jmpq cmc clc test jmpq jmpq callq clc bt cmp jmpq je jmpq jb jmpq test jmpq callq inc mov bsr bts movsbw lea test jmpq jne btr lea stc jmpq jmpq mov jmpq jmpq jmpq jb callq jmpq add jmpq bsf mov sub sub setge bswap mov cmc dec test add btr lea cmc or adc shr mov bt clc test jmpq jmpq callq jmpq mov jmpq jmpq mov mov jmpq jmpq jmpq jmpq nop jmpq bt movl test cmc stc mov and shr not mov clc mov clc bt stc cmpb jg je jmpq mov jmpq callq cmp test jae jns lea lea jmpq pushq jmpq callq cmc cmc stc test jmpq je setne bswap mov jmpq jmpq callq clc cmc cmp cmp jmpq je cmc test jmpq nop jmpq je add xor jmpq callq shrd (bad) repnz cmc sub jmpq callq cmc stc mov bt cmc cmp test jmpq jmpq pushq jmpq bt and stc cmp jmpq je clc cmp stc cmp jmpq jmpq nop jmpq callq movsbw not lea jmpq jmpq js cmovne jmpq mov jmpq jmpq jmpq test test jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq test jmpq callq jmpq callq add stc mov shl stc btc mov cmc clc jmpq callq movsbl bswap bswap bswap lea jmpq nop jmpq cmp add jmpq jmpq jmpq js bt test jmpq je cmp test clc cmp jmpq setbe mov jmpq jmpq movzbw not mov sets mov jmpq mov jmpq test cmp jmpq je test dec shld mov cmc stc jmpq callq setbe mov lea bswap setae lea mov jmpq jmpq jmpq jmpq je movsbl sar cmp mov cmc test test jmpq je clc cmc stc cmp jmpq jmpq callq rcr rex.B hlt movsbw mov adc movzbl cmp mov bt jmpq jmpq jb cmp jmpq callq jmpq callq xchg bswap rcl rcr mov movzbw bsr shr bsr mov not bsf xchg movzbw mov test cmp mov jmpq jmpq jbe setge mov jmpq jmpq setno movzwl jmpq je jmpq jmpq je jbe shr or or bts lea bt and xor bsf repnz movzbw bswap mov mov mov bswap not not jmpq not not movsbq mov jmpq jmpq test cmp stc cmp jmpq movsbw movsbw mov not jmpq jmpq mov lea not mov jmpq mov jmpq jmpq xor stc clc xchg jmpq jmpq bt stc jmpq jmpq je clc cmpw jmpq callq data16 mull xlat rcl mov test stc test jmpq jne shl jmpq jmpq mov bswap mov jo callq bts sar rol mov add bt btc mov mov cmp xor jmpq jmpq jne inc (bad) (bad) mov shr cmc and adc mov clc jmpq jmpq callq data16 cmc bswap jmpq jbe jmpq mov jmpq bswap not mov not lea mov movsbw bswap lea jmpq callq bt test test stc cmp jmpq jb not inc setb mov dec xor sar mov or or bts bsr mov neg shl movsbw add cmp not ror rcl xor xadd bsf ror xor mov mov movzbw or repnz dec bswap not movsbl movsbw dec movsbw bts adc add mov bt cmc test jmpq callq shl stc rol cmc mov shrd xchg bsr lea movzbl movzbw rol or sub mov mov jmpq je bts bswap shld bsr mov cmp clc test jp je bt bt test cmpl jmpq jmpq jmpq movzbl mov mov jmpq lea seto mov jmpq test jmpq bswap mov jmpq cmp jnp je cmp cmc test bt cmp jmpq add cmc clc add cmp jmpq jmpq mov movzbw mov movzbl jmpq clc cmp jmpq je or add rcr adc mov cmp cmp bt test jmpq clc test jmpq jnp mov jmpq callq cmp cmc cmc cmp cmp jmpq jne jmpq callq clc bt cmp jmpq jmpq pushq jmpq je bt movzbw mov stc cmc xor jmpq incl jmpq je jmpq clc cmp jmpq callq clc bt test cmp ja jb jmpq cmp test test cmpl jmpq test mov stc test cmp test jmpq jmpq callq shrd ror clc jmpq not mov mov setns movsbl lea setge lea movzbw not movsbw mov mov movzbw not lea mov jne callq test clc cmc test jmpq test jmpq jmpq je test stc cmpl jmpq callq xor shr rcl mov jmpq clc cmp mov jmpq jne seto sub lea mov clc stc test cmc cmp jmpq jmpq lea jns mov jmpq callq test cmc cmp test jmpq jb jmpq jmpq jmpq jmpq jb shl btc shl cmc mov test mov clc not sbb mov dec btr mov mov shrd not lea setne lea sar shrd shr bsr add movsbl movzbl shrd and mov xchg dec btr test mov or ror add shr rcr movsbw test mov movsbl mov cmc clc add cmp mov stc jmpq callq jmpq setb mov movzbw setae mov setae mov jmpq clc bt stc test jmpq je test stc cmp jmpq jmpq jmpq jmpq je ror ror xor movzbq xchg bswap lea movzbl mov mov movsbw mov movsbw mov mov movsbw lea ja mov jmpq je jmpq jbe jmpq mov movsbl mov movsbw movzbl setg bswap mov jmpq jmpq jmpq mov mov jmpq test bt bt test jmpq je add mov jmpq callq or clc shrd neg lea stc jmpq je bts clc movsbl btc sub setp jmpq jmpq jne mov jmpq jmpq jmpq callq xchg bswap movsbw movzbl mov movsbw mov jmpq js jmpq jmpq jmpq je inc mov clc jmpq mov jmpq jmpq callq bt bt bt cmp jmpq cmpb jmpq mov clc bt stc add cmp mov bt cmc stc add stc test clc add test jmpq test jmpq jmpq jmpq je cmp bts dec mov bswap mov sub sar adc lea stc clc cmc stc cmp jmpq jmpq callq jmpq cmp jmpq jmpq not bswap mov jmpq je bt cmp jmpq cmp jmpq jmpq callq setns mov movsbl mov lea mov mov jmpq jmpq jbe jmpq je jmpq mov bswap mov jmpq jne shr shr btr sbb mov btr xor jmpq jne clc cmc cmc test jmpq jne sar inc or mov cmc test bt test sub jmpq jmpq mov jmpq je xchg xor xchg lea mov bswap lea setnp movsbl mov mov movsbw mov not jmpq jmpq jmpq mov movzbw mov jmpq nop jmpq cmc cmp jmpq je add bt shrd btc mov neg shrd mov rcr mov stc shld xor mov cmp test add stc test test bt add cmp bt clc add bswap bswap mov jge callq bswap mov bt jmpq jo jne neg test movzbw bsr sub rcr or jmpq je stc cmc cmp cmp jmpq callq movzbl xor or rol sub dec btr movsbl shrd mov rcl repnz jmpq test jmpq je jmpq jmpq jmpq jmpq je test test cmpq jmpq cmp clc test movzbw lea movsbq mov movabs mov movsbw mov jmpq jmpq jmpq je test stc cmc cmp jmpq callq jmpq callq stc cmp mov bts movsbl add lea lea setge bsr sub movzbw mov mov jmpq jmpq jmpq jmpq cmpl jmpq callq clc stc stc bt test jmpq bt rol inc mov neg mov and mov test add jmpq callq not movsbq movsbw jmpq je rcr sub bswap movsbw mov jmpq jmpq jmpq movzbl mov movzbw movzbl mov mov mov jmpq je bt mov movzbq mov cmc clc lea stc clc stc cmp jmpq callq jmpq jmpq callq bsr mov stc cmc jmpq bswap movzbl mov lea jmpq jne jmpq jmpq cmc cmc test jmpq je bsf add sub lea jmpq movl jmpq callq movzbq mov jmpq bt cmp jp jbe jmpq jmpq pushq jmpq jmpq clc bt cmc cmp jmpq clc test jmpq callq jmpq jmpq mov mov jmpq jmpq je lea mov jmpq jmpq test cmp jmpq jmpq jne stc test jmpq jmpq callq jmpq callq not jmpq callq jmpq jmpq je cmc setne shl mov shrd xor test mov mov shrd movabs bswap lea test cmp jmpq jb inc lea lea lea dec xchg rol mov and sar btc and or sbb bswap neg adc mov cmc jmpq je test jmpq callq clc clc and bt test bt cmp cmp jmpq callq stc jmpq mov jmpq jmpq inc movzbq dec lea jmpq not lea setle mov jmpq callq jmpq je jmpq callq clc stc cmpl jmpq jmpq callq cmp cmc cmc stc xor jmpq jne (bad) hlt bswap adc neg mov bsf sete mov ror mov stc test add mov mov test test clc cmc add cmp add cmp cmp bt add bswap bswap movsbl mov jmpq callq or mov movsbl sbb movzbw lea rcl bts sub jmpq jmpq jmpq jb xchg mov movsbw dec shrd dec bsr shl mov sar or inc movsbl ror neg mov rcr movsbw cmc shl add or sub shl movsbl mov shld sub repnz lea not lea inc not dec not not movzbq mov jmpq je sub bswap btc sub lea jmpq jb jmpq je sub sub setg mov jmpq callq movsbw lea jmpq callq cmc cmc cmp cmc test jmpq jmpq jmpq callq stc test cmp sub cmc jmpq callq jmpq callq adc mov clc sub jmpq lea jmpq nop jmpq jmpq cmp jmpq callq lea mov lea clc or dec xor bts xchg bts xor or lea shl inc test mov and shrd cmp cmc repnz bt cmc bsf setle not seta and jmpq callq bsf or sar mov cmp jmpq jmpq je bt jmpq jmpq jmpq pushq jmpq je xor rcr mov shld and jmpq mov test test jmpq jmpq lea mov jmpq not bswap mov jmpq callq bt stc cmp cmc cmp jmpq cmc clc xchg clc cmp jmpq jmpq jmpq jmpq jb stc shld lea cmp bt clc sub jmpq js mov movsbw mov bswap mov jmpq callq jmpq cmc cmp test jmpq callq lea mov mov jmpq je lea mov jmpq je ror test mov clc test jmpq je sub not add mov bt test jmpq clc stc test jmpq jmpq jbe jmpq jmpq callq clc test jmpq callq rcl adc xor lea setge mov jmpq callq jmpq jmpq jmpq sub jnp stc test jmpq jmpq jmpq movsbw mov jmpq jmpq mov jmpq jmpq jae mov jmpq cmp jmpq cmp jmpq jmpq jmpq mov bswap seta mov jmpq jmpq stc cmp jmpq jmpq jmpq jmpq callq jmpq je xchg bsf mov cmp add xor movzbl setbe movsbq mov jmpq callq not add bsf mov xor sar rol shl mov rol or shl btc xor cmc xor ror rcr bt repnz movzbw not movzbq dec btc movsbq not or mov bt test jmpq je sub neg lea shr xor stc movzbw xor xchg lea mov lea bswap mov jb callq shrd jmpq bt test jmpq callq movzbq sets movsbw lea lea movzbl mov jmpq jmpq callq bt cmc test and cmc cmc cmp jmpq jmpq jmpq je jmpq ror and mov clc test jmpq stc cmp jmpq callq cmp test test jmpq jmpq mov movzbw movsbq movzwl jmpq je stc test jmpq callq stc test jmpq jmpq callq stc clc bt test test jmpq mov not lea lea movsbq mov lea jmpq jmpq jmpq jmpq jmpq cmc test jmpq cmc test jmpq jmpq jb xchg lea dec mov dec btr mov stc dec rol or xor movsbl cmp mov mov bswap xadd add data16 testl or shlb in movzbw shl sar mov not cmp mov shrd repnz movsbw not lea inc dec xor mov bt stc test jmpq jmpq callq bswap lea jmpq clc add cmc add sete mov jmpq clc stc or clc cmp test cmp xor stc clc jmpq je sub dec bt lea mov shr stc shrd mov add lea cmc jmpq bswap jns not mov jmpq jmpq jmpq jmpq callq btr mov movzbw mov test clc or stc xor jmpq je sar cmc sub not jmpq cmp jmpq jmpq callq not ror mov data16 repz jns bswap movzbw bswap mov jmpq je test cmc test bt cmpl jg je movsbw mov jmpq callq bt cmp clc cmc test jmpq jmpq bsr setno inc mov setnp cmc mov clc add btc sbb mov test clc cmc cmc add shl mov jmpq callq jmpq mov bswap mov jmpq add add add loope (bad) js enterq test rex.WB jmpq mov shr (bad) (bad) decl test push rorl (bad) (bad) jb xchg jmpq pushq jmpq clc add bt cmp jmpq cmp jmpq jmpq je movsbw add mov clc cmc bt cmp test jmpq callq bt clc cmc cmp jmpq callq bt clc cmpl jmpq jne jmpq add je test bt stc stc cmp jmpq jmpq clc test jmpq cmc xor jmpq je bt clc bt cmp jmpq lea movzbl mov mov mov jmpq xchg movsbq lea setae not movzbq mov jmpq js setno mov jmpq cmc cmpw jmpq callq clc bt test je je jmpq jmpq jmpq jmpq je setns jmpq callq bt cmc clc cmp cmp jmpq mov movabs mov jmpq cmc clc test jmpq pushq jmpq cmpb jmpq movsbw jmpq callq clc cmc cmp clc test jmpq jmpq mov jmpq jmpq jmpq je movzbl mov mov movzbw mov jmpq jbe xor shrd adc lea bt sub jmpq cmp jmpq cmp jmpq jmpq js movsbw bswap sets mov mov jmpq je bsf lea xor movsbl xchg movsbl bswap lea lea mov not mov movzbl mov mov lea movsbl bswap lea jmpq jbe jmpq jmpq je test cmp jmpq jmpq jmpq jmpq mov xor mov movsbl bsf rol rcl mov cmp cmc stc add jmpq jmpq xchg mov movzbq mov mov jmpq jmpq callq cmc xadd mov clc bswap mov stc xchg test jmpq cmc mov jmpq je cmc jmpq pushq jmpq jmpq jmpq callq cmp cmp jmpq jmpq je movzbl mov bt data16 lock test mov clc jmpq bt bt and cmp jmpq callq not lea mov seto lea jmpq mov jmpq add lea setnp mov jmpq jmpq jmpq je movsbl bswap bswap mov jmpq jne cmc test jmpq jmpq callq cmc sub lea jmpq callq setae shl shrd mov bsr rol xor movsbw movsbw movsbq mov jmpq je mov not mov jmpq jmpq mov test stc cmc test test jmpq jmpq callq test test xor jmpq stc cmc jmpq jmpq jmpq jmpq jmpq dec jmpq je bswap mov bswap rcl bt mov bswap mov movsbq shl and not movzbq lea mov lea mov jmpq je jmpq jmpq jmpq jne setnp movsbl mov mov jmpq cmp xchg stc cmp stc test jmpq mov xchg mov mov xchg mov bswap not mov jmpq je jmpq je jmpq jmpq bt cmp clc cmp jmpq js movzbw not mov jmpq jmpq callq stc stc clc and cmp cmp jmpq jmpq jmpq lea jmpq je bsf lea btc rcr and inc sub movzbw mov not movsbw mov jmpq jb cmp clc clc bt cmp jmpq mov jmpq callq cmc cmpb jmpq lea jmpq je mov sar mov sar mov inc stc inc mov movsbl mov jmpq xchg cmp bt test js je btr xor cmp mov test test jmpq jmpq stc cmc test cmp jmpq nop jmpq jne jb stc cmp jmpq jmpq callq btr mov shld xor and stc sub jmpq jmpq jmpq jmpq jmpq lea bswap bswap mov movsbl mov setb movsbl lea mov not mov jmpq je jmpq xchg mov movzbw bswap mov bswap setno bswap jmpq callq jmpq add jmpq jmpq jb not jmpq callq lea mov jmpq jmpq je jmpq jmpq setl mov not mov jmpq je bswap movzbl mov mov seto lea movsbw mov not movsbl mov jmpq callq movsbw movzbw mov movsbl setl bswap jmpq jbe lea or lea test cmp bt sub jo callq stc cmc test bt cmp jmpq jmpq callq cmc cmc test jmpq jmpq jns callq clc clc cmc cmc cmp jnp jbe jmpq callq test test test test jmpq cmc cmp sub jmpq callq bswap lea jmpq jle cmp test cmp jmpq je movzbl not mov jmpq movsbw jmpq jmpq jmpq jmpq jmpq jmpq je add bsf btc bsr mov stc stc cmp test jmpq jmpq je test cmc stc test cmp jmpq stc cmpl jmpq jmpq callq bswap mov jmpq test stc mov (bad) lock add (bad) out (bad) decl test add rol dec xor bswap bswap movsbw jmpq je cmp clc jmpq jmpq je jmpq bswap mov movzbq mov mov jmpq jmpq jmpq jmpq callq movsbw mov jmpq jmpq jmpq callq xchg not movzbq not mov xchg movzbw mov seto mov not mov jmpq je sbb xchg clc mov stc mov bt clc neg bsr mov jmpq jmpq jmpq jmpq je bt jmpq je shld xor xchg setne xchg lea lea bswap jmpq not movzbl mov mov movzbq lea xchg mov lea mov movzbw mov lea movzbw mov jmpq dec movzbw not inc inc dec inc dec mov cmc cmp test jmpq jmpq callq stc bt cmc jmpq jmpq callq bt cmc test test jmpq callq clc bt sub jmpq je bt clc sub jmpq je stc cmc cmp cmp jmpq jmpq jmpq callq adc dec mov cmc cmp test jmpq jmpq not mov movzbw jmpq jmpq jmpq clc cmpb jmpq nop jmpq jmpq je btc mov bswap xor movzbw movzbl mov jmpq je inc setl btc bts mov shl add neg mov dec add and movsbw jmpq je jmpq jmpq sets lea jmpq bt test jmpq jmpq callq inc inc mov dec mov not mov jmpq callq clc movsbl mov shrd bswap jmpq jmpq jmpq jmpq jmpq mov lea mov not lea jmpq add clc clc neg mov jmpq cmc jmpq jmpq jmpq jmpq incl jmpq nop jmpq callq lea not mov movzbw jmpq jmpq jmpq jmpq jmpq je shr bts movzbw btr mov clc clc test jmpq jmpq jmpq clc cmc stc add jmpq je cmp cmp jmpq callq movzbw not lea jmpq jmpq callq setns movzbw setae not mov movzbw jmpq jmpq jmpq mov clc bt cmp clc test jmpq callq jmpq jmpq je bt jmpq jmpq callq cmc stc cmc cmp jmpq jae jmpq jmpq add rol rol shld xor bswap setae bswap lea mov jmpq inc test add bt stc stc cmp jmpq jmpq jmpq callq jp mov setns lea mov jmpq add stc cmp cmp stc add clc add jmpq test jmpq mov jo callq jmpq jmpq jmpq je shl lea inc neg sub movsbq mov jnp movsbw mov jmpq callq not shl dec mov clc clc test bt test jmpq mov jmpq je cmp cmp jmpq jmpq jmpq bswap mov mov not mov jmpq je jmpq stc cmc jo test jp je jmpq callq movzbw mov jne callq bt cmc test bt test jmpq jmpq add stc stc cmp jmpq jne rol cmp movzwl adc mov cmp jmpq jmpq jmpq je mov rol rcr ror mov btr mov bswap test lea cmc stc cmc cmp jmpq jmpq je jmpq mov jmpq je bt stc cmp cmp jmpq callq jmpq jmpq jmpq je bts not movsbl rcl lea (bad) imul rex.WXB std decl test mov pop (bad) decl test rex.XB movzbq mov jmpq je jmpq jmpq seta lea jmpq lea lea mov jmpq not xchg mov setg mov jmpq callq inc cmc mov sub neg bswap xor mov rol or adc sar movzbw jmpq callq bt test jmpq cmpb jmpq stc jmpq jmpq callq jmpq je test jmpq mov jmpq jb neg xor cmc lea clc jmpq jmpq jo je stc clc cmp jmpq jne shrd mov test cmp xor jmpq jmpq jmpq jmpq inc jmpq jmpq callq lea movsbl bswap bswap lea jns callq jmpq jmpq mov cmp cmp cmp cmc cmp jl jne bt mov not sub btr btr mov btr rcr or movabs mov cmp bt test add bsf mov stc add cmc jmpq jmpq jmpq dec jmpq jmpq jmpq callq jmpq test cmp stc mov cmc cmc cmp test mov cmc bt cmp test add jmpq jb jmpq je test bt cmpq jmpq jmpq callq stc and clc cmp jmpq je jmpq jb jmpq jmpq cmp or stc jmpq jmpq jmpq jmpq cmovne jmpq jmpq callq shrd xchg movsbw shl mov btc ror xor setl mov jmpq xor sbb mov data16 hlt or or shld stc repnz movzbw jmpq rol sub clc mov cmc bt stc jmpq jbe jmpq jmpq mov jmpq jmpq mov not movsbw movsbq not mov lea lea bswap jmpq mov jmpq jmpq jne movsbl mov jmpq jne (bad) (bad) adc jg cmpsl rex.WRXB lock (bad) adc jne rex.WRX mov ja sub rex.WRX cli movabs int3 push sub jg (bad) mov and (bad) (bad) (bad) ljmp (bad) or (bad) (bad) (bad) (bad) cmp mov sub pop (bad) cmp push popq jp mov movsb in sbb xor rex.WRB rex.WX repnz ja xchg out push mov adc rex.WXB sub rex.WXB (bad) movabs je in in push sub incl mov setb lea not cmpq jmpq jne dec lea stc cmc stc clc add clc jmpq jmpq callq cmc jmpq callq btc xor not cmc xor jmpq jmpq sub out jg mov (bad) movabs out mov mov cmc xor rex.X gs retq (bad) enterq xor add or mov movabs add cltd mov sub jmpq fmuls shll sbb rex.R loopne adc popfq or lods fcmovbe push xchg mov imul push jo add jno xchg rex.RX or jno xor xlat mov cmp xor adc sub (bad) lret jmpq add imul add in sub push xor (bad) adc fbld (bad) and out xchg push popfq add and rex.R ds add jbe mov rex.WRX (bad) mov xor std ror and faddl retq pop rex.X ja lods pop lret jg movabs rex.RXB movabs push jle cs loopne lods jno imul cmp (bad) or adc lock jo jno andl or fxch (bad) mov (bad) sub iret addl adc adc add sbb pop mov fisttpl add adc jl (bad) xchg xchg int3 pop or sub sub jo retq and ficomp out and icebp testb cmpsl xchg (bad) cmp xlat in add and and lret jae adc shrb scas mov (bad) (bad) (bad) lcall rex.WRXB jno pop (bad) ds (bad) (bad) ljmp (bad) jp mov pushq test add rolb xorb mov pushq (bad) cli (bad) mov movabs adc js xchg add or cs add sub (bad) out jg or pushq loope sub (bad) std repz sbb fisubr test (bad) imul xchg movb in (bad) cli (bad) mov rolb (bad) (bad) rol (bad) push in jae outsl lock hlt imul ja or (bad) icebp mov retq add push cli rex.WXB shrl (bad) imul lods pushfq dec (bad) (bad) jge test jae sub movzbl movsbl movzbl mov lea bswap bswap jmpq jmpq jmpq callq not mov jmpq jmpq add jmpq jmpq bt stc cmpl jmpq bt clc test jmpq jmpq jmpq callq clc stc test jmpq ja callq xchg sbb jmpq mov setns lea jmpq mov jae mov jmpq callq inc shl mov not sub bswap mov lea mov jmpq jmpq callq movzbq ror mov test stc clc mov cmc stc cmp movl cmc mov and lea adc add mov test clc mov stc clc cmpb jmpq jmpq mov jmpq add test test jbe je not mov jmpq mov not bswap jmpq clc cmp jmpq test cmp test jmpq jmpq jmpq jmpq mov jmpq callq not jmpq jmpq (bad) rex.WRB lea out jg mov movsb nop idiv mov (bad) mov push movl int mov mov mov adc (bad) (bad) pushq loope push leaveq pop xchg pushfq outsl add add cmp fcomps stos jb (bad) ficompl retq push (bad) hlt es sub mov add pop sbb cmpl fisttpl xchg fdivl add mov rex.RB pushq out lea in test test jmpq callq cmp test jmpq je cmp test jnp test jns je mov lea movsbw lea bswap xchg lea mov movsbl movsbw bswap lea mov jmpq je bswap lea neg cmc add sub jmpq jne movzbl xor bsr shrd mov data16 icebp or roll mov shrd sbb add inc mov cmc bt cmp bt add cmc add stc cmc clc clc add cmp cmc test jg add clc add stc clc jmpq jmpq jmpq callq bswap bt adc mov lea bsf test not setb mov setp mov jmpq callq xchg mov lea movzbw lea jmpq mov jmpq jmpq je not stc shl mov cmc test jmpq setnp mov jmpq mov clc cmc jmpq je sbb mov jmpq add movabs not jmpq bswap lea jmpq add jmpq jbe jmpq stc cmp test jmpq je clc cmc clc test cmp jmpq cmc add ror btc mov cmp clc stc test add inc clc mov stc add cmc clc clc clc add clc cmc bt xor bt clc stc clc add jmpq jp js not jmpq jmpq test clc jmpq callq jmpq pushq jmpq je rcl clc movzbq bt mov cmp clc stc test jmpq clc jmpq jmpq callq test clc test jmpq setp mov jmpq jmpq movzbw bswap mov jmpq jmpq stc cmp jmpq pushq jmpq mov mov ror bsr movzbw sub mov cmp and mov clc stc bt test add shrd movzbl mov cmc test add sub clc btc mov cmc cmp test add cmc cmc bt cmp add clc jmpq jmpq jmpq je bt stc jmpq bswap lea mov jmpq nop jmpq mov mov movsbw mov jmpq je movzbw mov jmpq mov jmpq callq bswap mov ror shrd cmpq jmpq je test stc stc cmc cmp jmpq je lea clc shrd clc mov shl shld movzbl add mov not and shrd mov bt sub mov bt clc bt add clc add bt add lea jmpq jo callq and not rcr bts mov clc cmp test bt test jmpq jbe dec xor lea cmc test xor jmpq je bt test cmp jmpq jmpq jmpq jmpq jmpq jmpq jmpq callq jmpq jmpq callq movsbw movzbw bswap mov mov jmpq js mov mov bswap movzbq mov lea mov movzbl xchg lea not lea setns lea jmpq callq jmpq jmpq jmpq jne movzbq sete movzbl mov mov jmpq cmp jmpq jmpq jmpq movsbw movzbw mov mov jmpq stc jmpq jmpq callq cmp bt cmp jmpq je cmp stc cmp jmpq je lea not mov mov setge mov not lea mov jmpq jmpq jmpq je clc cmp jmpq nop jmpq mov jmpq add callq clc cmc clc test cmp jmpq jmpq pushq jmpq je or test shld mov rol adc sar mov stc stc cmp jmpq mov lea setae mov jae callq xchg mov setne jns lea mov setp setb movzbw mov jmpq cmp clc bt test jmpq movsbw bswap not mov jmpq jmpq je clc cmp stc bt sub jmpq jmpq xchg bswap lea mov jmpq jmpq mov dec neg mov clc stc test jmpq jmpq callq jmpq jmpq jmpq jmpq jmpq jne btr movzbl mov inc or dec mov cmp cmc cmc add clc bt cmp jmpq je xor (bad) repz retq mov rcr btc bt mov test stc stc cmp cmp jmpq je bt jmpq movsbw mov movzbq mov jmpq mov jmpq mov jmpq mov movsbl movzbw jmpq jmpq lea mov jge mov jmpq jmpq jmpq jmpq callq movzbl mov jmpq jmpq mov movzbw bswap movzbl jmpq callq cmc jmpq jmpq jbe jmpq callq btr rcl or mov clc clc stc test jmpq callq rcr mov bt clc test jmpq jmpq jmpq callq clc jmpq jmpq jmpq je movsbw not bswap mov jmpq mov jmpq test jmpq cmc jmpq je ror lea mov jmpq jmpq mov btr lea stc stc movzbw stc rol bswap movzbw movzbl bswap mov xchg je movzbw lea movsbw bswap mov bswap movsbw mov movsbw setge setnp movzwl setp mov jmpq mov jmpq jmpq test jmpq test cmp add clc test jno test add stc cmp xor test add jmpq jmpq jmpq jmpq jmpq jmpq movzbl lea mov mov jmpq jmpq je inc clc mov sbb mov test bt cmp jmpq jmpq je stc cmc rcr rcr lea bt add btc bswap xor movzbl mov jmpq lea mov mov jmpq jmpq jmpq inc jmpq stc cmp jmpq je cmp clc bt bt cmpl jmpq jmpq callq jmpq jmpq jmpq je bt cmc jmpq je jmpq jmpq jmpq jne jmpq nop jmpq cmc xor movzbw movzbw movsbw xchg lea movzbw mov jmpq jmpq cmp cmp jmpq xchg jmpq stc mov bt cmp cmp jmpq jmpq mov jmpq callq lea movsbw jmpq jb bswap mov bswap jmpq je inc lea xor bswap movzbl bswap lea bswap movsbw jmpq movzbq dec rcl (bad) repnz movsbw or lea bts btr btr mov bsr add add xor sar bt mov cmp jmpq mov jmpq mov jmpq je adc lea movsbw shr sub jmpq jmpq jmpq mov jmpq jmpq callq xor sbb mov cmp cmc cmc test jmpq je clc cmc xor jmpq je jmpq je test bt bt stc sub jmpq mov seta mov jmpq jmpq mov jmpq xor cmc xchg bt test jmpq cmp jmpq jmpq jmpq mov cmp test jmpq callq cmc cmc mov clc cmc clc test jmpq jmpq callq btc movsbw not movzbl mov adc mov bt bt cmp clc xor jmpq jmpq callq not jmpq callq btc shr mov bsr xor sete mov jmpq jmpq nop jmpq clc test bt test jmpq jmpq test test jmpq je or xor movzbl movzbw setne lea bswap lea movsbw mov movzbw jmpq jmpq callq lea rcr sbb lea cmc test jmpq jmpq jmpq je cmc test jmpq je sar rcr shld cmc movzwl cmp bt shl stc sub movzbl setno lea mov jmpq je jmpq cmc cmc cmp jmpq je jmpq test jmpq callq btc sar shrd shr mov movzbw movzbw mov stc stc cmc or test bt stc xor test jmpq cmp jmpq jmpq callq not btc rcr mov cmc test test jmpq jmpq je bsf shld mov cmc jmpq je setg bt bsr mov clc test jmpq jmpq callq jmpq mov ror not cmpq movsbw mov mov jmpq callq rcl dec jmpq cmp test test jmpq jmpq jmpq movzbl jmpq jmpq bswap mov movzbw lea mov jmpq jmpq jmpq cmp jmpq pushq jmpq jmpq callq test mov shr xor cmp cmp mov stc or bt xor stc stc cmp cmp repnz jmpq je cmp xor stc mov bt clc jmpq jmpq jb not not dec (bad) cmc adc movabs shl btr or or adc data16 cmc (bad) btr sub mov mov and sar add btc shrd rcl btr sub adc cmp movzbw mov not clc repnz not not jmpq test cmp jmpq jmpq incl jmpq jbe nop jmpq test jmpq stc cmc mov btc cmc mov clc jmpq je jmpq jmpq je jmpq mov mov not movsbl mov jmpq jmpq cmp bt xor jmpq nop jmpq jmpq jne bswap movsbq setg seta mov jmpq je neg adc shr lea xadd rcl or sub mov xchg mov bswap lea not lea mov jmpq jmpq test jmpq test cmp jmpq jmpq jmpq js setno mov movzbl movzbw lea lea lea not jmpq jmpq jmpq callq bswap btc neg bts mov cmp cmc jmpq jmpq jmpq mov jmpq jmpq jmpq dec jmpq nop jmpq callq xor bt lea bt clc cmc test jmpq js callq rol bsr ror mov cmp bt stc test jmpq callq btc cmc bt mov test bt bt stc test jmpq jne xadd movsbl rcr btc mov bsf test bswap mov bts shr xor jmpq nop jmpq test jbe jns setg mov jmpq not mov mov movsbw movsbl not lea jmpq jmpq je bt cmp clc test cmpl jmpq stc cmp jmpq test jmpq je jmpq jmpq jmpq callq bsf shl rcl mov cmp cmp jmpq jmpq callq mov mov mov mov mov bswap setnp mov bswap not movsbq movsbw mov jmpq je not and movzbl stc mov bt sub jmpq jmpq jmpq jmpq lea not not jmpq je movzbw not xchg lea lea bswap not mov not mov jmpq jmpq callq cmc jmpq xor not setp jmpq mov lea bswap mov jge mov jmpq jmpq bts setb mov cmc stc stc stc add jno callq cmc clc cmc test jmpq jmpq movq jnp callq jmpq jge jb dec not jmpq stc bt test jmpq jmpq je clc stc cmpq jmpq mov not mov jmpq jmpq mov movzbw mov jmpq je cmc mov bt xor not mov jmpq jmpq jmpq je and sbb shl stc xor movsbw not lea mov jmpq jmpq jne shr mov or movabs shrd lea mov bts stc test mov stc add test add cmc test stc cmp add cmp cmp jmpq jmpq jmpq movzbw mov movsbw mov jmpq jmpq jmpq jne test jmpq je clc bsr inc sbb sub setle not mov jmpq jne xadd bts and mov movsbw mov btc bts lea mov jmpq jmpq je clc cmp jmpq stc clc test jle je adc shld shl adc mov movzbw jmpq jb (bad) mulb lret adc jmpq bt cmp jns jne jmpq jg jmpq inc cmp test jmpq clc test jmpq je not lea jmpq jmpq jmpq jmpq jmpq callq not lea jmpq jmpq jne lea shl mov clc mov jmpq callq clc cmp jmpq lea mov not lea jmpq mov jmpq jmpq jmpq callq xchg jmpq je jmpq jbe shld lea stc xor jmpq callq clc test jmpq jmpq mov or movzbw mov cmc bt add mov xor mov clc add cmp add cmp cmp stc cmp sub test stc clc add jmpq jmpq jmpq jmpq je (bad) cmc rcl bswap bt sub bswap seta movsbl lea mov jmpq lea mov jmpq callq jmpq jbe jmpq incl mov lea bswap mov mov je callq jmpq jmpq callq bsr dec mov cmc cmc stc bt test jmpq jmpq lea jmpq jmpq jmpq je bts not dec rcr lea shl rcl xor not mov jmpq jb pushq jmpq xor jmpq jmpq mov jmpq callq lea movzbq mov mov jmpq test bt or cmc stc test stc sub jmpq callq cmp and clc clc cmc jmpq je bsf xor setge mov lea lea jmpq cmp bt xor jmpq callq bt jmpq jmpq lea not movsbw lea nop lea not bswap movzbw mov setb not not setne mov movzbw lea mov jmpq jmpq callq setg not setbe lea mov lea lea movzbw jl mov jmpq jmpq jmpq dec jmpq callq and lea setae sar mov cmc clc jmpq je cmc mov bt cmpb jmpq jmpq jb xchg inc jmpq mov movsbw mov mov jmpq test jmpq cmpb jmpq test test jmpq je jmpq jne setns inc inc mov cmc cmc cmp test jmpq cmp bt clc test jmpq mov jmpq nop jmpq clc add cmc cmp jmpq je stc cmc test cmc cmp jmpq mov not movzbw bswap setle mov jmpq jmpq jmpq callq jmpq jmpq bt add bswap mov clc add test add clc bt clc test xor bt cmp add jmpq bt test jmpq mov jmpq xchg dec adc cmp bts mov xor shr or add dec mov stc shld add test xor xor movzbw mov shld repnz movzbw dec mov lea not lea movsbw jmpq mov movsbw lea jmpq jmpq clc test test jmpq callq inc lea shl mov jmpq jmpq jmpq stc test jmpq btc rcl sbb mov bts movzbw bts btr repnz lea not movsbl inc movzbw not dec btc lea dec bsr mov clc cmc clc jmpq mov jmpq jmpq mov lea mov jmpq je movsbw shld btr mov xchg mov not mov cmp mov test bt add neg btc shr sets mov clc add ror movzbl mov clc jmpq jmpq mov jmpq callq mov lea not mov not lea jmpq je bt cmpl jmpq mov lea movzbw jmpq jmpq callq bsr clc add shl mov clc cmp test jnp je or xor jmpq jmpq jmpq jmpq je jmpq jmpq callq jmpq jmpq mov bswap mov jmpq movsbw lea jmpq jmpq cmc test cmc cmp jmpq jl je jle callq lea lea jmpq je jmpq bt bt xchg cmc stc stc test jmpq callq jmpq je jmpq jmpq jmpq pushq jmpq add cmc sub cmp cmc stc clc add jmpq callq lea bswap lea mov bswap mov jmpq jmpq callq bswap lea adc mov clc stc bt cmp jmpq jb jmpq test jmpq jb jmpq jmpq stc cmp and cmp bt clc cmp jmpq jmpq cmp cmp jmpq je jmpq callq dec shrd sub jmpq jmpq je jmpq callq bt test jmpq je jmpq add bts dec test bswap mov cmp add movzbw cmc jmpq jmpq jmpq cmovns stc bt test jmpq jmpq shrd stc mov stc xor shr or add sub or bswap add lea or mov bsr clc sbb rol repnz and not clc test not lea shld lea bsf mov clc sub jmpq je bt clc stc cmc cmpw jmpq mov movzbw jmpq sbb test sub setne lea movabs mov not jmpq jmpq jmpq nop jmpq jmpq mov cmc cmp stc cmc cmpb jmpq jmpq jmpq jne btc setle lea or mov not jmpq inc stc cmc cmc mov cmc stc test jmpq jmpq cmc stc cmc add clc cmc clc clc add setle not bswap mov jmpq clc lea neg nop bsf adc mov test cmp jmpq callq jmpq je bt clc cmp jmpq callq neg inc bsr neg mov cmc bt test jmpq xchg jmpq jmpq callq ror btr lea clc test jmpq callq clc and jmpq jne cmc cmc jmpq je shr (bad) icebp bts movzwl sets cmc clc sub jmpq jmpq jno cmc mov inc lea clc mov cmc mov ror neg xor inc mov cmp mov dec shl btc mov stc mov rcl mov bt clc clc mov or shrd mov cmp clc mov cmp jmpq je bts setae bsf xadd mov shrd adc mov lea and adc mov lea stc test cmc cmc cmp jmpq jne bt rcl bswap xor (bad) imul xchg pushfq add jne inc rol mov jmpq jne test mov test test cmp jmpq test jmpq jmpq lea jmpq jmpq je clc cmc clc cmc cmp jmpq callq stc test jmpq bswap movzbl lea mov jmpq je jmpq jmpq lea jmpq mov movzbw setbe mov jmpq callq or lea jmpq test jmpq je ror mov cmc test jmpq jmpq jmpq je bt stc cmc stc cmp jmpq test jmpq movb bt cmpb jb je bt cmc shr mov clc cmc test jmpq jmpq jne or rol sbb mov cmc bt cmc stc sub jmpq jmpq jmpq callq btr mov bt jmpq jmpq jmpq jmpq je jmpq jb jmpq jmpq callq stc and jmpq jmpq callq clc stc bt test cmp jmpq jmpq jne jmpq jmpq jmpq jmpq lea jmpq jmpq stc sub jmpq jmpq jne sbb lea adc or mov bsr btc bsr sbb sub shld xchg test movzbw xor movzwl clc jmpq jmpq movsbw mov jmpq callq jmpq nop jmpq je clc test cmpq jmpq jmpq jmpq callq rol mov and mov mov stc test jmpq jmpq test cmpl jmpq jmpq jne sub jmpq mov jmpq callq test test cmc cmc test jmpq callq jmpq movsbw mov movsbw mov jmpq jne lea cmc cmp mov add xor sub mov sar inc bswap inc lea shld rcl add jmpq jns bswap mov jmpq jne jmpq callq stc cmp jmpq jmpq jmpq jmpq callq stc test test jmpq setae not not setnp mov jmpq cmp jmpq xchg bswap not not movzbw mov jmpq sub bt test jmpq jb je jmpq jne bts lea clc stc add jmpq jmpq callq movzbw sets not mov jmpq jl callq clc stc cmc mov bt cmp clc test jmpq callq setp bswap xchg mov xchg not jmpq xor shl mov adc not mov jmpq je jmpq jmpq callq shld mov cmc test jmpq je rol mov adc xor xadd mov btc bts mov neg rcr mov jmpq jmpq mov movzbw mov setg movsbl mov jmpq jmpq jno jne bt test jmpq bswap jmpq test jmpq je stc stc cmc mov jmpq nop jmpq add callq not setl mov lea not lea jmpq jmpq jmpq je rol cmc add shr xor movzbw mov jmpq jmpq adc cmc add nop bts sets mov not ror not bts xor not mov jns jmpq jne cmc cmc mov clc test jmpq nop jmpq pushq jmpq cmp jmpq bt jmpq jmpq cmp jmpq jmpq je setp xor not not movsbw jmpq jmpq jmpq jmpq adc jg adc (bad) sub jrcxz pop mulb push icebp xchg rex.X orl leaveq stos insb and rex.WX mov sbb pushq mov fwait icebp jno and (bad) (bad) (bad) jmpq jge sub rex.XB (bad) callq cmp int mul mov stos out jnp out sub je jns out rex.WR jnp cli std pop test int sub int3 xchg mov sbb rex.WRXB rex.WRB rex.W sub sub movslq pop sbb mov (bad) (bad) pushq (bad) (bad) cwtl mov add add movsb cmpl imul and pop in or jne imul (bad) jbe ljmp stos enterq jmp (bad) pop cmp rex.WXB sub addr32 in pop nop cli stc gs sbb xor test loopne xchg (bad) stos ss rex.RB ds push (bad) lock fnstsw movabs rex.RXB or jne xlat push sti jl rex.WRX data16 jbe andl cltd (bad) rex.WX mov or or in test sahf insl xor in add ss notb in xchg (bad) scas add or or fstl lahf sub mov je ror lea bsf xchg movzwl adc sub not mov jmpq jmpq jmpq jne or movzwl bts rcr bsr stc mov stc xor jmpq test jmpq mov setl jmpq jmpq sub jmpq jmpq mov jmpq je cmc test test cmp jmpq callq stc test clc test jmpq jmpq jmpq jmpq stc cmc bt xor jmpq jmpq cmp jmpq je shl shrd bts mov bt test jmpq xchg jmpq je ror clc mov btr movsbl lea btc clc ror clc rol xchg xchg mov movzbl lea lea setns setb mov movzbq not sets mov movzbw movzwl bswap mov movzbw mov jmpq rcr lea rcr or sar bsf bt cmp mov ror dec stc and repnz inc stc bswap xadd not rcr lea mov shrd add movzbw mov test clc stc cmc xor jmpq je cmp cmp jmpq jmpq jns pushq jmpq callq mov lea mov jge mov jmpq cmc jmpq movzbw movzwl jmpq je test xor jmpq mov jmpq jmpq jne movsbl stc mov cmp clc cmp jmpq callq jmpq add nop jmpq jmpq jb sub mov not cmc data16 icebp (bad) sub not setb mov jmpq jne jmpq callq bswap mov jmpq callq setbe bswap lea setl lea jmpq je jmpq jmpq jmpq callq cmc test jmpq stc test ja jne lea mov jmpq je jmpq jmpq jmpq add cmp test mov cmc test cmc test jmpq jmpq jmpq callq jmpq clc cmp cmp jmpq jmpq jmpq nop jmpq jmpq callq adc dec rcr shr mov bt jmpq add clc add cmp add stc stc cmc cmp cmp jmpq test jmpq callq clc stc bsr mov test clc test jmpq lea mov mov jmpq test xor jmpq callq clc bt bt test and bt jmpq test jmpq jmpq jmpq callq stc stc bt test jmpq je bt cmpl jmpq stc cmp jmpq jmpq mov lea jmpq je clc rcl and rcl mov sbb (bad) icebp mov movsbw cmp mov test cmp jmpq je bswap bswap rcl mov jmpq je jmpq je xchg rcl mov inc shrd rcr and mov rol inc lea cmp bt cmp jmpq jne xor btc ror shl lea ror mov sbb dec and seto sub bt xchg stc movzwl bt jmpq callq sets jmpq jmpq callq btc neg adc rcr mov xor bt mov test xchg clc stc test test jmpq callq not mov jmpq btc jmpq je cmp stc clc jmpq jmpq jmpq clc test jmpq jmpq jmpq callq setl mov cmc stc stc test jmpq xor cmc bt clc xchg stc jmpq lea mov jmpq callq shl or cmp sbb mov sub sub mov mov seta jmpq jmpq cmp test jmpq inc jmpq mov mov bswap jmpq test jmpq jmpq jmpq jmpq bt jmpq je test jmpq movsbw movsbw mov jmpq jmpq not lea mov jmpq jmpq je clc xor lea bsf mov neg mov test rcr neg mov neg ror sets sub bswap bswap mov jmpq jmpq jne jmpq jb bswap dec mov stc setb bts xor setge lea mov jmpq jmpq jne cmp cmpb jmpq cmp test jmpq test jmpq jmpq cmovne jmpq jmpq je test test jmpq jne add neg mov lea sar jmpq jmpq je stc cmpl jmpq mov jmpq stc test jmpq jmpq jbe jmpq callq cmc jmpq callq clc cmp test jmpq jne test cmc cmp jmpq jmpq jmpq jmpq je jmpq je callq not mov jmpq jmpq je jmpq jmpq jmpq callq mov lea lea jmpq mov jmpq clc xchg cmc cmp stc test jmpq je shrd dec shrd cmp mov stc test test jmpq jb not movzbl dec rcl stc bswap clc mov xor or or bsr bts sbb mov shld rcl add mov shrd bsf data16 imull sar clc shrd bts mov sub shrd rcr repnz dec not inc dec cmp clc not bswap mov jmpq nop jmpq bts lea and and mov cmc jmpq je rol bswap sub xchg xchg lea lea mov jmpq jmpq mov mov lea jl mov not jmpq mov cmc bt stc test jmpq je btr bt shr xadd lea shr sub xadd inc sub movzbw jmpq bsf cmp mov sbb mov shr neg adc lea cmc cmp jmpq callq setl mov jmpq jmpq bswap mov jmpq mov jno mov jmpq movzbl not mov jmpq jmpq jmpq callq stc stc stc cmp jmpq lea jmpq test sub jmpq callq movsbw lea mov jmpq callq movzbw lea bswap mov bswap movsbw not mov jmpq jmpq je rcr shld shl mov dec movzbw mov bsf rol add mov bt clc test jmpq jmpq nop jmpq nop jmpq jb movsbw bswap seto lea jmpq jmpq jmpq in (bad) sub in jg pop loope sbb pushq test or mov jb mov movabs movsl jb shlb xor callw decb (bad) popfq and stos fsubrs xor (bad) cld imul callq pop and (bad) (bad) (bad) (bad) jns ss lahf ja andb rex.WR add fsubrs mov rcrl mov stos or jnp scas lea movabs fwait adc mov jl rex.WRX adc (bad) orb test (bad) or jb mov add pop in push add fiaddl sti insb rex.XB enterq sub push loopne scas xchg cli and cmpsb pushq xlat rex.R data16 and test repz xor stc pop je (bad) and loopne out and (bad) adc adc std incl decl rex.R movzbq movzbw mov jmpq jne test cmpq jmpq jmpq pushq jmpq bt cmpb jmpq callq jmpq jmpq callq jmpq pushq jmpq jb not or adc lea test jmpq je cmc jmpq mov jmpq jne rex.W repnz shl mov stc cmp sub jmpq jle callq not movzbl not mov jmpq je stc test cmp jmpq jmpq bt add stc stc jmpq test jmpq jne rcr shl test mov cmp stc test test jmpq callq bt clc bt test jmpq je shr mov cmc mov movzbq mov movzbl xor ror shl xor setle mov jmpq callq inc clc jmpq mov jmpq mov movsbw setae mov mov mov movsbq movsbw mov jmpq jmpq callq cmp jmpq jmpq callq test stc and clc cmc test cmp jmpq callq mov and stc shrd lea jmpq test jmpq je clc stc jmpq je jmpq jmpq jmpq jmpq jb add lea cmc clc xor jmpq jne or inc mov sub sub sbb mov clc cmc add clc jmpq mov jmpq mov jl jmpq je jmpq callq bt test test jmpq cmc cmc test jmpq mov jmpq callq bswap jmpq sub not mov jmpq jmpq jns setae setp movzbw not mov jmpq callq adc bts shr mov bt test stc cmp test jmpq callq and adc adc (bad) (bad) mov stc bt movzbw mov movsbl or or add rol sub xor clc dec bsf repnz bswap not movsbl mov mov dec btr bswap xor mov bt cmc cmc bt test jmpq callq btr sub movsbw jmpq jmpq cmp jmpq jmpq cmp cmp mov stc cmp test jmpq test clc cmp bt cmpl jmpq xadd bts bsf mov mov or shr neg movabs mov ror cmc add bsf bswap bsr xor movsbw rol shrd mov data16 hlt ror repnz lea dec inc not movzbq not lea dec mov mov lea bswap mov jmpq jmpq jmpq xchg jmpq jb movzbl mov not movsbw dec data16 cmc or ficompl sbb jmpq cmc btr or test rcl neg rol mov ror ror not rcr add btr xor rcr jmpq bt add jmpq callq jmpq jmpq mov jmpq jmpq jmpq jmpq jmpq jmpq jb clc cmc clc cmp jmpq callq bswap bsr mov data16 mull decl inc mov test or cmp sub cmp stc stc stc repnz jmpq je rol bsf clc xor bswap lea mov jmpq jmpq stc jmpq jmpq jmpq callq jmpq callq stc clc cmpl jmpq callq test test jmpq je stc dec sbb neg sub mov mov jmpq shrd lea shl ror dec xor mov jmpq je shr mov jmpq jmpq jmpq xor jmpq setbe bswap lea jmpq jmpq jmpq jmpq jne mov lea lea setns bswap movsbw lea jmpq jmpq je stc jmpq jmpq je add lea ror bsr cmc xor movsbl lea bswap mov mov jmpq movzbw lea mov xchg mov xchg movsbw mov movsbq lea jmpq mov movsbl movsbw mov jmpq je sar shl cmc jb mov cmc bt bt test jmpq nop jmpq test jmpq jmpq not movzwl not movzbw not mov jmpq jmpq mov jmpq jmpq callq data16 testb rex.WRX clc test jmpq jmpq jmpq jmpq jmpq shrb retq jg pop out insl mov (bad) xor mov cmp fsubs ficompl clc lea (bad) xchg pop jl imulb push adc and and (bad) (bad) (bad) (bad) cmp push cld cmp rex ss (bad) mov xchg mov mov mov xchg test loope sbb stos outsb rolb bswap bswap bswap mov jmpq callq jmpq je cmc clc test clc cmp jmpq jbe jmpq jmpq cmc bt cmc add test test test cmp add jmpq jmpq jmpq jmpq je cmc test sub jmpq pushq jmpq callq mov bts xor shl lea cmp bt jmpq jmpq je pushq jmpq jmpq jmpq mov bt cmc cmc bt test jmpq callq not mov lea lea mov jmpq jmpq lea mov jmpq jmpq callq btr mov btr xor setnp movzbw mov jmpq jmpq je test ja cmp jmpq mov jmpq mov jmpq jne cmp bt test test jmpq je btr xor lea xadd stc xor jmpq mov jmpq callq inc xor lea movzbl movsbl jmpq jmpq jmpq callq test test jmpq je clc clc test jmpq jmpq jmpq pushq jbe pushq jmpq mov jmpq mov jmpq jmpq jmpq jmpq jmpq mov jmpq mov jmpq jmpq bt cmpl jmpq jmpq movzbw movsbq mov jmpq callq neg mov seta rcl sub mov mov setge movzbw mov setp mov jmpq nop jmpq jmpq jmpq stc shl cmp test cmp bt shr stc stc or jmpq jo js not bswap mov mov jmpq jmpq je test test test cmp jmpq je jmpq je test btc btr xor movsbw mov jmpq jmpq callq not setbe movsbw mov mov jmpq test cmp mov clc bt cmp jmpq jmpq jmpq lea mov jmpq jmpq jmpq jmpq and test cmp cmp bt cmp jmpq jb inc movsbl setle dec dec ror btr btr xor mov stc add dec or add bsf sbb cmc mov bsr bts sub cmc add cmc jmpq jmpq jmpq jmpq jmpq cmc jmpq jmpq mov cmp cmc or (bad) cmc mov mov adc add sbb shrd dec add sub dec mov shl bts cmc and repnz jmpq jmpq jmpq jmpq je jmpq callq bswap not lea jmpq jne xchg sar mov mov movzbw mov or neg mov clc cmp add clc cmc cmp cmc add bt clc cmc add cmp add test add cmc bt stc add cmp bt stc cmp jmpq jmpq jmpq pop (bad) (bad) (bad) vmovdqa lahf sub test jns mov out shrl decb enterq xchg jp stc insb xchg rex.WXB (bad) cld movabs (bad) jns cs (bad) (bad) callq testl add adc (bad) sti addl mov (bad) jne ficom pop fidivl jae lret icebp leaveq lret pop rex.WRX scas or adc xor mov mov mov adc xor rex.RB js mov mov test (bad) decl mov add test cmp cmc bt test jmpq jmpq jmpq jmpq not mov jmpq jmpq jne stc cmc jmpq jne dec and lea bt add test cmp jmpq mov jmpq jmpq lea xchg mov sete movsbq xchg movzbq lea movzbw movzbl mov je callq not setge bswap lea jmpq test clc clc test jmpq callq bsr mov jmpq je jmpq stc cmp jmpq jmpq jmpq jbe bswap bt bsr jbe mov bswap add mov rol seto not rol mov cmc jmpq jmpq callq not lea lea lea mov jmpq lea setl mov jmpq jne xor or sbb dec lea cmc stc bt cmp add test cmp clc sub jmpq cmovne jmpq test jmpq jne test clc cmp jmpq nop jmpq jne not mov bswap mov jmpq jl callq jmpq jmpq test jmpq je jmpq lea movsbw not lea jmpq jmpq jmpq jmpq jmpq je shl movzwl dec bt adc movzbl clc cmp clc bt shl clc jmpq jb bt cmc shrd shld lea cmp xor jmpq movsbw lea mov movsbl movzbw movsbl not mov jmpq clc test test cmp jmpq jb movsbl setl mov dec bt data16 cmc add sub mov bswap cmp shl sar or mov movzbw mov cmc adc movzbq sar add movabs cmc add sub bt mov mov adc btc repnz bswap bswap dec mov not bswap dec movzbw mov movzbw mov jmpq jmpq callq movsbl sar or mov test jmpq callq shld bts lea inc mov (bad) icebp add sub seto xchg jmpq callq movzbq movsbw setge not mov bswap bswap setne bswap mov setb jmpq cmovne jmpq retq incl rex.WB jle negb outsb jbe icebp rex.WRX lret and movabs int ss rex.W add (bad) retq ss fcompl (bad) cld jmpq je clc clc test cmpq jmpq movzbl bswap mov jmpq jne jmpq cmp mov btr sbb lea clc mov test cmp add clc clc cmp stc cmp jmpq sub cmp stc cmp bt test jmpq callq movzbl mov clc test jae js je bswap sar jmpq callq cmp jmpq callq inc not rcl cmc mov stc stc test jmpq jmpq mov jmpq pushq jno pushq jmpq callq jmpq jmpq jmpq jb jmpq je shr neg mov clc test jmpq cmp cmp cmc add test bt clc bt add bt stc cmc add sets mov jmpq jmpq jne je not movzbq mov mov jmpq callq clc test jmpq mov jmpq je jmpq callq jge bswap movzbw mov movzbw bswap mov jmpq jmpq jmpq jmpq jmpq je ror sbb sub lea mov jmpq callq not lea sets mov jmpq jmpq mov jmpq jmpq callq bt cmp stc test jmpq callq jmpq callq jmpq jmpq jmpq jmpq jmpq je jmpq jne bt mov stc jmpq jmpq jbe jmpq clc cmp add stc jmpq lea mov jmpq cmp bt add movzbw movabs lea lea mov jl callq movsbw mov setl movsbw mov mov jmpq callq bt test bt cmp cmp jmpq callq shr bt clc neg mov clc clc stc test jmpq callq cmc or mov shr btc rol mov and shl bsf mov stc mov stc bt test cmp add bt test sub cmc cmp bt add jmpq je shl clc btr xadd lea dec clc test sub not bswap mov mov mov lea mov jmpq nop jmpq cmp jmpq callq bt data16 repnz or mov clc test bt cmc test jmpq mov cld cmp in jg imul retq rex.WX lea lret cs lods ss jge mov rex and movslq mov movlps cmpsl cs (bad) (bad) (bad) in sub scas sub add rex.WRB rex.W rex.XB repz add pushq cmpsl mov out sbb (bad) stos rex.WRB iret ds in and cmpsl push mov lret lock mov mov (bad) in or xchg out pushq (bad) sahf lock pop sbb shl push mov or test test add cmpl jmpq jne adc stc shr sub mov not shrd mov bt test add cmc cmp jmpq je jmpq mov movsbw mov mov jmpq je bts and mov xor btc sub neg mov (bad) mulb and cmc bt mov cmc rol rol mov bt add shld bsr test stc mov test cmc stc jmpq jmpq callq movsbw lea jmpq jmpq jmpq clc xchg test test jmpq jmpq mov add neg bt jmpq test clc cmp jmpq jne jmpq sub bt cmc bt cmc add jmpq test jmpq callq cmc clc test test jmpq jmpq sub jmpq je jmpq je jmpq je movsbw mov jmpq jmpq jmpq callq clc jmpq mov jmpq jne sar movzwl btc shr mov cmc xor jmpq jmpq jmpq jmpq je movabs mov rcr movzbw sbb mov cmc bt test jmpq je setns lea ror mov stc cmp test test test jmpq callq mov lea jmpq bt mov sub lea bswap jg mov jmpq je and add mov bswap not and mov cmp bt cmp jmpq callq cmp movzbw sub xor mov cmc clc cmp test jmpq jmpq je bt cmp jmpq xor jmpq jmpq xchg test test jmpq je shl jmpq shr mov stc shld and adc lea jmpq bt cmc cmc xchg jmpq jmpq jmpq je jmpq je rcr add and mov jmpq bt cmp jmpq jmpq movsbl xchg cmp rol mov ror shrd sbb add xor jmpq jne test bsf movzbl bsf btr bsf and movzwl cmp lea movsbw mov shr shl not cmc dec lea bsf movsbw bswap mov clc cmc jmpq je lea mov neg adc mov sub mov or btr inc neg add sub cmc mov jmpq jmpq nop jmpq cmpq jmpq callq bt bsr jmpq je cmc movsbq adc xor movzbl movzbq mov jmpq jmpq callq add cmp bt mov clc test bt cmp test jmpq jmpq jmpq test jmpq mov jmpq not shrd bswap mov cmp clc clc test jmpq lea test add cmc bt xor jmpq test jmpq je adc mov or mov add setl add xchg mov rcr neg or sar mov test add jge cmp test cmp add jmpq jmpq jmpq callq movzbw mov not movsbw mov not bswap movzbw mov jmpq callq movabs movsbl lea mov movzbw mov jmpq je clc jmpq je add not inc sub not jmpq test cmp jmpq jmpq mov bswap mov jmpq sbb xchg and iret (bad) pop stos loope cld xchg scas rex.XB test int fsubrl or movabs pop push pushfq outsl jns int add adc cs (bad) jmpq jmpq je bsf lea sets btr sub not movzbw movsbw not mov jmpq jmpq je jmpq je movzbw xchg movzbw movsbw mov jmpq mov mov movsbw mov lea movsbw mov jmpq mov jmpq je jmpq jmpq test cmp jmpq jbe jmpq xchg bswap mov jmpq je cmp stc cmp jmpq cmp jmpq test jmpq jmpq clc stc xchg cmp jmpq je bswap mov setg mov movzbl bswap xchg mov movzbw movzbw jmpq not mov bswap mov movsbl jmpq jmpq jmpq je jmpq test jmpq jmpq jmpq callq lea setno mov not mov jmpq callq not rex.W (bad) mov test cmc test test jmpq jmpq jmpq jmpq bswap mov jmpq jmpq mov not mov jmpq callq test cmp test cmp jmpq jmpq jmpq jmpq push (bad) sbb in jg adc in (bad) cmpsl pop repnz (bad) and sar movsb out push rex.WR movabs stc mov sbb iret rex.WRXB (bad) test test (bad) sbb and (bad) (bad) (bad) pushq test xor std popfq add (bad) mov jrcxz add std cmp push and add (bad) repz test cmpq jmpq jmpq callq rcl btr cmp neg mov and movzbl mov sbb btc or test test bts sub add and repnz bswap movzbw mov not movzbq dec lea and clc stc mov cmc jmpq jmpq je bswap lea movsbw jmpq jb jmpq callq jmpq callq jmpq je xor shr mov test bt xor jp callq stc mov bt cmc cmc test jmpq jns jmpq mov cmc clc clc jmpq je jmpq int pop pushfq mov jg lret push cmp (bad) pop jge sahf (bad) ja jne ds mov insb rex.RX nop mov pop pushq (bad) lock (bad) xor fild retq add adcl push (bad) and (bad) (bad) (bad) inc movabs add mov movabs (bad) (bad) ljmp or and (bad) (bad) (bad) ljmp sbb std mov pop rcrb stos (bad) retq out rex.WRXB mov (bad) movzbl xlat (bad) retq push imul out cmp mov mulb js icebp adc mov nop retq int pop xor rex.X (bad) lret xor cmp sub (bad) (bad) imul mov and or movabs mov rex.WR rex.WR rex.WRXB push mov loopne (bad) (bad) cmp cmp cmc test jnp je jmpq jmpq callq movzbw jmpq jmpq stc cmpl jmpq bswap jmpq movzbl not mov jmpq je jmpq jmpq jmpq pushq jmpq jmpq jmpq jmpq jmpq jmpq cmova jmpq cmp jmpq jmpq mov seta jmpq mov bswap setp bswap jmpq je bt sub mov adc mov cmc jmpq fnstcw (bad) jg in jg sbb pop leaveq lods and rcll rex.WX cmpsb jbe rex.WX mov mov mov (bad) xchg pop and mov shrl (bad) in decb (bad) jmpq xchg hlt jo add add in lock pushfq sbb (bad) fstpl imul (bad) or (bad) movabs adc jle mov (bad) (bad) add mov mov or nop hlt sbb mov xchg cmp retq sti ljmp leaveq stc clc stc add jmpq jmpq je jmpq je jmpq jmpq callq mov bswap mov not mov bswap not not movsbw mov jmpq callq movzbl not setp not mov xchg jmpq mov jmpq lea xchg bswap bswap mov movzbl lea setno not mov jmpq callq xchg movzbw movsbw mov jmpq callq movsbw bswap mov lea lea sete lea js callq movsbw mov movzbw movzbw lea setg mov jmpq jne lea mov cmp bt test jmpq jmpq setle bswap mov jmpq mov xchg bswap mov mov jmpq bt clc cmp jmpq jmpq callq bswap movsbw not movsbw mov jmpq cmp jmpq callq movsbw lea bswap lea jmpq jmpq cmc add stc add bswap jmpq jmpq jmpq callq cmp stc stc stc cmp jmpq callq cmp test jmpq jmpq jmpq movzbw mov cmp test jmpq add not lea bsf rol inc clc mov cmp stc jmpq je cmp cmc cmp clc cmpl jmpq jmpq stc test jmpq jg je jmpq jmpq jb bsf btr rex.W repnz lea clc clc sub jmpq jmpq jmpq jmpq callq clc cmp jmpq jmpq je clc btc ror mov jmpq xchg jmpq jbe jmpq jmpq callq add rex.W notl movzbw mov clc test test jmpq callq cmc mov stc clc jmpq jmpq callq cmc bt stc test test jmpq cmc stc stc add jmpq test jmpq callq bsr adc rol mov test jmpq jmpq jmpq callq test test cmp cmp jmpq je dec test bt ror sub not mov jmpq jmpq jmpq jnp callq bt test jmpq jmpq bt or test cmc test test xor clc stc stc cmp repnz jmpq mov movsbl bswap movzbl jmpq callq cmp xor xor dec mov jmpq jmpq jmpq cmp jmpq jmpq jmpq cmc test jmpq clc sub jmpq clc cmpq ja je ror xor bswap lea movsbw not movzbl sets mov bswap not lea jmpq jge stc test jmpq xor jno callq rcl xchg mov rcl mov sub adc jmpq jmpq jb jmpq jmpq jmpq je mov movsbl lea movzbw mov jmpq jmpq jmpq callq cmp test jmpq jmpq lea mov jmpq dec bswap lea jmpq jmpq jmpq jmpq jmpq jmpq test jmpq callq jmpq jmpq jmpq clc add stc stc sub cmc cmc add jmpq callq movsbw mov movzbw mov jmpq jmpq jmpq jle mov jl callq cmp xor data16 cmc or xchg mov sub neg adc test movzbw lea seta setb mov jmpq repnz (bad) lock movzbw sbb bsf nop mov inc lea movzwl stc add stc clc stc mov jmpq jmpq jmpq movl jmpq lea bt test jmpq jmpq callq sub inc stc lea stc bt cmp test jmpq jmpq mov mov setge xchg bswap movsbl mov movzbw not mov xchg lea mov movzbw mov bswap sets mov jmpq jmpq jne dec (bad) lock cmc mov ror mov bt sar mov shld ror add bts movsbw shrd dec lea sbb clc mov jmpq jmpq jmpq callq ror sbb rcl mov or or movzbw mov cmp test jmpq jb jmpq mov jmpq lea bswap lea jmpq callq jmpq jmpq test cmpb jmpq mov jmpq clc jmpq jmpq xchg jmpq jne lea cmp shl mov bt btc mov xor mov jmpq jmpq je cmp movsbw sbb xchg mov shr shr and rol mov xor mov stc mov stc stc jmpq je stc cmp cmp cmp jmpq callq neg shl stc mov test test jmpq test stc clc sub jmpq callq test jmpq je jmpq jmpq jmpq je cmp xor movzbw mov jmpq jmpq jmpq jmpq mov mov mov setno setle mov jmpq jmpq pushq jmpq jmpq je movsbw lea jmpq mov jmpq jmpq movzbw mov setno mov not jmpq jmpq callq jmpq je jmpq jmpq callq jmpq bt test test jmpq bt cmp cmc test jmpq je stc clc cmc stc cmp jmpq jmpq mov jmpq jmpq jmpq cmovne jmpq bt clc test test jmpq jne jmpq jmpq jmpq callq not mov jmpq seto lea bswap mov js mov bswap jmpq jmpq mov jmpq mov not jmpq callq jmpq jmpq test xor jmpq jmpq pushq jmpq jb movzbw dec (bad) repnz fdivrp (bad) callq shr ror or mov test test jmpq jmpq mov jmpq test cmp cmc add cmc test jb clc add jmpq cmp clc jmpq lea not mov jmpq je rol mov sbb sub jmpq jb mov jmpq jmpq jmpq callq stc clc cmc cmc sub clc cmc jmpq cmp jmpq callq jmpq jmpq je jmpq jne movsbw mov jmpq jmpq jmpq movzbw mov jmpq callq jmpq jmpq or movsbw not bswap lea btc sar adc ror sub and bt repnz xchg mov lea lea movsbw not not lea jmpq je jmpq jmpq jmpq jmpq jmpq callq or rex.W icebp mov bt test jmpq movsbw jmpq pushq jmpq je shrd sbb and stc sub movsbw movzbw jmpq je jmpq je jmpq xchg not jmpq jmpq jne jmpq jmpq jmpq callq jmpq mov xchg bswap mov mov not mov mov jmpq bts dec sub mov bsr mov sbb repnz not not movzbw jmpq jmpq callq jl bt test cmp jmpq jmpq je jmpq jne bswap bt not xor mov movsbw mov mov movzbw movzbl setns lea jmpq jne ror cmp mov clc cmp mov bt cmp cmp xor jmpq callq cmc stc jmpq jne adc cmc shl mov mov jmpq jmpq pushq jmpq test jmpq test jmpq jmpq jmpq jmpq stos sbb in jg outsb push xor rex.WRXB sbb shlb sub sbb test xchg loope decl mov imulb xor fs fisubr movsl gs retq cmp outsb (bad) loop jnp add ds (bad) (bad) dec and shlb rex.RXB adc xor sub test push movsb push (bad) add (bad) (bad) sbb (bad) rorb (bad) leaveq sbb jnp jo mov movabs ja rex.WRX rex.WRX or mov rex.WR enterq fcompl sbb (bad) fisttpl (bad) (bad) xor xchg push xchg sub cmp rex.WRXB add inc jl add (bad) mov mov hlt int nop lret fisttp adc mov mov or mov jns cmp xlat add xchg stos or xchg out sub jne mov sub (bad) xor pop sub (bad) lret jmp xlat (bad) jmpq mov jrcxz cmp rex.WXB sahf fucomp fmuls jno popq (bad) (bad) cmp mov rex.B mov fistl (bad) mov and push (bad) rex.WRX rex.X xor addb sub push mov mov jae bnd xor add rex.WR rex.WRXB mov add insl (bad) mov (bad) sbb rex.WRB and imul or test cmp jnp jnp orl jmp (bad) cwtl or sti icebp gs fdivrs fbstp add and cmp adc cld mov mov mov mov lods es (bad) xor pop rex.B mov push xchg (bad) mov (bad) js xor (bad) push sub icebp rex.RX mov xchg cmp or xchg push or xchg test add jge rex.RXB jrcxz or jle pop xchg subl pop out push sar and mov mov lahf sti leaveq sbb cs gs cld and pop and (bad) scas out test xchg lods xchg xor or je (bad) movsb fistp or pop xor xor lods fimul mov mov movabs pushq cmpsb cmp (bad) jo sub int3 mov jmpq lret jle xchg movsb (bad) mov (bad) lret cmc cs rex.XB xchg rex.WB in loope sbb sbb scas pop or movslq test gs (bad) addr32 and sbbl rcr xchg jns xor retq lahf sbb nop and sbb out push cli outsb scas rex.XB (bad) xor (bad) sub popfq (bad) (bad) sbb outsb retq out sub rex.XB addr32 rex.WRXB (bad) xor push callq mov cmc push add (bad) rex.WRB push sbb lods or or ss lret or jmpq movabs or jo rex.B addr32 sbb retq or jrcxz lods adc (bad) (bad) mov rex.WRB iret or push xlat pushfq scas jbe or movabs lock add add jrcxz jmpq retq xor in repnz sub std mov std jl rex.RX rex.B test mov (bad) mov test mov insl test movabs sub mov fild cmp jle jnp and (bad) rex.RX loope faddl adc jnp (bad) lods cwtl mov pop (bad) movsb fdivl xor add (bad) mov callq (bad) sub sbb xor sub (bad) pop in pushq data16 (bad) out mov fldt rex.B rex.B mov nop adc push xchg lods (bad) mov mov xchg jge (bad) rex.WRX cmp mov roll adc push loopne movabs xor mov mov cmp fadds (bad) sub imul add jl lret gs rex.W lock pop cmc mov push xor outsb in (bad) xor (bad) rex.WB stc (bad) add mov rex.WRX gs add je sahf enterq (bad) loop add fsts insb rex.WRB stos retq pop loope ds sub rex.RB ss (bad) cmp sti sbb hlt nop out and data16 jo enterq mov hlt jnp sbb mov (bad) mov and sbb retq lods fildl cmc cmp movabs push (bad) in ss (bad) rex.RXB fiaddl pop (bad) ss pop pushfq rex rex.WX add jg (bad) pushq (bad) outsb push cmp rex.R (bad) fptan insl rex.WXB movabs mov mov sbb (bad) mov jb xchg (bad) (bad) pop adc mov add sbb pop retq fidivr cwtl pop sub sbb xor jae sub xchg push (bad) in and movsb js push sarb stos (bad) imul rex.WRB data16 pushq scas or nop fwait pop rex.WB (bad) (bad) fldt rex.X rex.WRXB push rex.R rex.B je xchg xor sub sub push jp repnz and sub jle cmp or mov add (bad) data16 out popfq (bad) xor rex.WRXB outsl je rex.B sub jg add (bad) jle jae jbe mov pop adc adc mov negl and xor sti rex.RB rex.R movabs xor (bad) or mov (bad) repz test out jns and (bad) jno cmp adc fsubl adcl jbe xor or (bad) std xor mov je cmc mov sbb mov test testb (bad) jge (bad) adc push or retq repz hlt rex.WX repz pop test shr js scas addr32 add sbb jae mov (bad) clc ds (bad) xchg pop jne test pushq rex.WRX rex.B cwtl jae xchg leaveq data16 mov sbb (bad) rex.WRX cmpsb (bad) cmp scas push nop rex.RX repz sbb jmpq loop (bad) lahf (bad) cmp insl sub or rex.X nop and (bad) add jns xor iret loope sbb xchg rex.B mov mov imulb mov sbb and xor lret in jnp jrcxz jge adc (bad) add (bad) cwtl retq rex.W lea out mov (bad) xor sti es outsl rol and js outsl (bad) or sahf cmpsl (bad) lock movsl movabs in (bad) xchg movabs xchg jmp jge pop pop in test rex.WB mov insl add xchg mov push rex.WXB mov jge scas adc jmpq xor (bad) pop xor or pop mov sub cwtl (bad) in cmp mov rex.WR mov lahf sarl mov mov jge cmpsl callq adc popfq pushq (bad) movsb adc stos (bad) mov leaveq sub nop clc add loopne xor (bad) and adc hlt jo mov adc (bad) movabs test orq neg sbb movabs fsubrl jne xchg (bad) je loop push xchg (bad) scas jmpq cltd clc xor mov add mov mov (bad) out fisub cwtl movabs adc adc mov push retq push test in mov pushfq jl test outsb (bad) cmc leaveq repz lahf jo cmp sbb cmpsb rex.WR mov rex.XB pop (bad) pop fisubl push stos lods mov jnp mov rex.RB push mov rex.W sbb jbe test fwait scas loopne sbb in lods xchg jnp (bad) retq add js outsl loop orl mov xchg sbb cltd outsl movsb sbb (bad) sti es sub xchg rex.XB loopne stc (bad) enterq cli roll test loope stos (bad) add (bad) rex.R sub add xchg rex.WRB (bad) (bad) (bad) rex.RX (bad) and lret pushq pushq (bad) (bad) cmp (bad) fwait xor mov jg (bad) sub jle (bad) rex.WR jne (bad) or sbb rex.RX int3 rex.B cmp jle (bad) cld (bad) out fwait add movabs (bad) (bad) pushq mov mov add movabs mov hlt repz push in scas pushq mov fild out sub out or pop mov mulb jge pushfq outsb (bad) out or (bad) push xor rex.X xchg jrcxz xchg in jg je sti fs cs leaveq or rcll jbe faddl add sub push or mov rex.WB xchg or (bad) fnstcw mov (bad) movabs push xchg sbb cmp (bad) lahf rcr mov movsl or (bad) adc flds (bad) (bad) scas jp (bad) pushq jno cld pop (bad) loope push (bad) mov jmpq je bt stc jmpq callq and mov jmpq jmpq je bt bt sub jmpq jb dec lea stc test cmp xor jmpq jmpq xchg movzbq mov jmpq jmpq mov and mov rcr sar btr movl lea btr mov add stc mov and not mov shr rol sub mov cmp test jmpq jmpq movzbw lea setno mov bswap jmpq je ror lea btc btc xor mov jmpq jmpq je test cmp jmpq jmpq callq cmp test jmpq je stc cmpl jmpq jmpq jmpq jmpq movsbw lea mov jmpq callq or mov ror cmc bsf neg cmpq bswap setno mov jmpq callq bt sub cmp test cmp clc xor test stc xchg cmc cmp bt cmp test jmpq movsbq jmpq callq clc jmpq jmpq callq shl bsf shl mov cmc stc test jmpq not jmpq jmpq stc add jmpq je cmp cmc bt jmpq mov movzbw mov xchg not bswap mov setae setae mov jmpq movsbl mov jmpq setg mov jmpq cmpsb (bad) xor xchg in jg movabs sti (bad) lret popfq sbb pushq mov imull xchg xchg and movabs mov (bad) pushq addr32 (bad) (bad) in int pop (bad) imul rex.WB push test cli cmp std rex.RB (bad) test mov mov rex.WRB pop not lock and jns int3 jae (bad) pop cltd icebp rex.WR pop mov mov lret jbe xchg (bad) rorl sub add cmc movzwl adc inc (bad) icebp stc sub jmpq callq cmc clc test jmpq jmpq je movsbq setnp bswap mov mov not mov lea jmpq jne shld lea movsbl not stc mov rcr sub movsbq test xchg bswap sbb mov movzwl cmp clc jmpq je adc lea mov shr mov stc not mov not mov stc stc clc clc add test bt test stc add stc test clc clc add movzbw setg mov lea mov jmpq je lea mov jns not mov movzbw mov not xchg bswap not jmpq test jmpq jle mov jl callq clc jmpq mov mov movsbl mov jmpq jmpq jmpq callq bt clc jmpq jmpq jmpq lea bswap mov jmpq callq shld add dec jae lea test jmpq jmpq jbe jmpq pushq jmpq callq bts mov (bad) repnz stos loop adc add stc jmpq xchg movsbw bswap movzbw not mov jmpq incl jmpq jb bt cmp jmpq stc cmp js jne setge movzbl movzbl mov setne jmpq jbe cmc sbb bswap cmp mov movzbw ror shld btr mov stc jmpq jmpq jmpq je bt bt cmp jmpq je movsbl (bad) cmc add bt bt test jmpq incl jmpq callq not and shr clc mov cmp test cmp test jmpq jmpq movsbw shld mov cmc jmpq callq btc rcr add sub seto jmpq callq bt jmpq bswap not movsbl mov movzbl not inc mov jmpq callq shl or rcl jmpq bt jmpq callq adc lea stc test test jmpq jmpq je jmpq ja callq test test cmp jmpq jmpq jne mov movzbw movsbl setnp mov jmpq jmpq jmpq callq setns xchg mov setg mov jmpq je test cmp cmc cmp jmpq jmpq callq rcl mov test test jmpq jmpq je cmc jmpq callq stc cmp clc test test jmpq jmpq callq jmpq xchg jmpq je ror bswap add rol mov clc clc test cmc test jmpq test stc test jmpq jmpq cmp cmp jmpq jmpq test jmpq jne setp data16 lock dec mov btr bt sar xor mov shrd cmp mov shl add movsbq lea or cmc mov stc test stc jmpq mov jmpq jne clc bt bt test jmpq callq clc jmpq bswap lea mov jmpq callq mov jmpq jmpq jmpq movsbl lea mov jmpq nop stc test jmpq callq not xchg setle mov movsbl mov jmpq jmpq jmpq callq bt xor bsr mov jmpq jmpq je jmpq callq jmpq je jmpq jmpq jmpq je bt bt jmpq je rol xor movzbl jmpq jmpq movsbw mov jmpq jmpq jmpq callq jmpq callq add shr shr mov cmp test jmpq bt xor jmpq jmpq jmpq jmpq mov lea not jp setns mov jmpq jmpq je stc seta bsf cmc mov shr shr add mov add bswap not btr mov xor mov clc test bt add shl bt sar mov jmpq callq stc cmp jmpq jmpq not movzbl sets mov jmpq mov jno callq xchg mov not mov mov jmpq callq cmp bt stc jmpq jne inc rol mov btc bt lea test test bsr mov ror test and sub jmpq jmpq je mov jmpq callq shl bt mov stc stc jmpq jmpq jne callq bswap shr lea mov rol test dec shr cmpq lea mov jmpq jmpq jmpq callq cmc and bt test cmp jmpq je lea clc sar mov mov bsf jmpq callq test cmc sub jmpq jmpq callq cmp bt and clc cmc cmp jmpq add jmpq je and sbb neg shld mov mov not mov clc test mov stc cmc clc add neg bsr bts mov cmp stc stc add lea cmp data16 lock mov imul pushfq nop add jmpq jmpq jmpq test mov cmc jns stc test jmpq callq not xchg mov not jmpq callq btc lea jmpq jmpq callq sub xchg mov not cmp adc rol xor jmpq jmpq nop jmpq jmpq je cmc bt test test mov stc bt cmc test cmpb jmpq je jmpq je bt cmpq jmpq je test rol mov clc cmp jmpq mov jmpq jmpq je mov mov mov mov jmpq je bsr cmc cmp test mov and stc add mov sub cmc stc sub lea movzbw lea mov jmpq add jmpq test test jmpq callq setb mov mov movzbw not not mov bswap mov setb lea bswap mov jmpq jmpq callq setge bswap mov jmpq cmc bt bt xor jmpq callq jmpq jmpq je movsbw or inc mov clc test jmpq bt cmp jns jae jmpq jge pushq jmpq je cmp mov xor jmpq jb jmpq jmpq jmpq je neg cmp xchg mov btr not cmc bsr mov bts clc not mov and mov cmc cmc test jmpq callq bswap mov xchg movsbw xchg not mov lea movsbl mov not not movsbw mov jmpq movzbw movsbw mov jmpq mov bswap seta movzbl jmpq jmpq mov jmpq mov jmpq jmpq jmpq jmpq add jg callq jmpq jbe sar rcl lea test sub jmpq jmpq pushq jmpq jmpq jmpq jmpq jmpq jmpq callq shld movzbw jmpq jmpq jbe lea not lea cmp stc cmp stc sub jmpq jmpq je btr bt mov shl movabs not mov rcr mov shl sar movzbl stc xor not sets not movsbw mov jmpq jmpq jge pushq jmpq nop jmpq jmpq add test clc test cmp add jmpq je neg mov btr bsf sub movsbw setns setge mov jmpq jnp mov jmpq je movsbl bswap mov jmpq mov cmp jmpq jmpq je bsr add movsbl mov stc cmp stc test mov cmp cmpw jmpq je not jmpq lea lea jmpq cmp jmpq jmpq jmpq jne xor lea movsbw movsbq movzbw jmpq jmpq jb jmpq mov lea jmpq stc stc clc bt test jmpq je jmpq movzbw setle lea mov lea mov jmpq je shr mov test jmpq not movsbl mov jmpq xor jmpq callq stc sub jmpq je cmc test bt cmpl jmpq add stc jmpq callq movsbw btc mov clc clc test jmpq callq btc cmp mov cmc cmp jmpq jmpq jmpq mov bsr and xor xchg mov movsbq mov movzbq movsbw mov jmpq jmpq jne test neg mov cmc lea mov shld rol lea bswap add movsbl mov mov jmpq jmpq jmpq callq stc test test cmp jmpq jmpq jne bts not cmc mov rol inc (bad) repnz adc ror sub xor lea jmpq je sub (bad) icebp adc sub setl movzbw jmpq jmpq jmpq nop jmpq callq movsbw movzbw lea mov jmpq jmpq jmpq jmpq je jge callq not js lea jmpq callq bsf xor sbb lea clc cmc test jmpq je jmpq callq jmpq callq movsbw mov jmpq je bt cmc cmc cmpl jmpq jb stc cmp cmp cmp jmpq mov xchg lea lea mov xchg mov lea bswap lea bswap mov jbe callq cmc cmc test jmpq movl jmpq jmpq jmpq callq cmp movsbw and lea test jo test cmp test jmpq jmpq callq movsbw bswap movsbl mov jmpq mov js callq test cmp cmp test jmpq je lea movzbw not bswap mov jmpq jmpq incl js callq bt cmp jmpq jmpq jmpq jmpq callq jmpq pushq jmpq cmp jmpq mov stc clc jmpq jmpq jbe jmpq callq lea sete mov bswap lea mov movsbw lea mov jmpq jne not movsbl or mov shr shl shr mov rol mov jmpq jmpq jmpq jmpq jmpq incl jmpq js stc test jmpq je bt clc cmp jmpq jmpq bswap not bswap mov setnp movsbw xchg movzbw lea sets lea movzbl lea setp mov mov bswap mov jmpq callq mov bswap lea jmpq jmpq jmpq inc jmpq callq jmpq cmp jmpq je jmpq jmpq callq jmpq je stc stc jbe cmp jmpq jmpq nop jmpq jbe jae callq shld shrd lea add lea bt stc test jmpq callq sbb bts not sbb mov clc test jmpq ja mov jbe jmpq jb not lea jmpq jb jmpq jmpq jmpq mov jmpq callq xchg movzbl bt xor movsbw not movsbw bswap mov lea mov movzwl jmpq jmpq jmpq callq jg dec mov dec dec lea mov jmpq je sub rcl shl xor jmpq je clc stc stc test add jmpq jmpq jne dec sar bts rcl mov clc cmp mov ror mov clc not mov shr rol add sar btr lea rcr mov jmpq nop jmpq jne jge cmp cmp jmpq jmpq test jmpq jmpq jmpq je clc test jmpq jmpq jmpq callq jmpq setb jmpq jmpq callq sbb lea add bsf mov stc cmp clc clc test jle je bswap lea lea movsbw mov movzbw mov movsbl mov jmpq test stc test jmpq jmpq callq rol bts movsbw mov and lea bsf xor not movzbl mov mov jmpq and test cmp jmpq jne neg btr add btr mov rol sets xadd dec mov not shrd cmp lea rcl rex.B icebp shld add movsbl mov lea mov jmpq stc cmp jmpq je mov rol rcr cmp sub setle bswap movsbw jne mov jmpq add bt cmc cmp cmp cmp jmpq jae je btr mov btr btc mov movzbw mov bsr dec mov stc cmp jmpq callq shld (bad) (bad) mov stc bt stc stc test jmpq jmpq jmpq je rcr jmpq jmpq jmpq jmpq add clc test jmpq callq not shl not cmc mov cmp lea bt bt cmp test cmp jmpq callq cmc add mov shld not sub jmpq mov movzbw not bswap mov mov jmpq pushq jmpq callq jmpq add jp nop jmpq callq clc cmc test jmpq je bt test cmp cmp jmpq mov clc jmpq jne bt test jmpq jb lea and clc mov setg sub movzbw jmpq je adc movzbw lea shr bt rcl xor lea sete jmpq callq cmp cmc test cmp and cmp cmp clc test cmp jmpq jmpq lea mov sets not mov jmpq callq and lea test cmp test jmpq bswap mov jno mov jmpq je jmpq jno and in jg (bad) xchg mov add lods sbb mov callq movsb movslq mov lahf jrcxz push jg repz (bad) cmpsl and mov adc es outsl scas push insb callq mov sbb and (bad) (bad) (bad) decl pop mov int3 jb adcl cmp movabs cld (bad) and (bad) stos icebp rex.RB repz and movsl mov leaveq xor orb retq jb adc rex.X (bad) push sub adc and sub mov outsl pop jae mull (bad) leaveq pop sbb mov pop sub jp rorl movslq jrcxz clc (bad) pop test pop cltd sub addl push retq roll push jnp test or movabs stc sbb (bad) cmpsl rex.WX mov mov (bad) pushq add mov mov mov outsl adc rex.X icebp stos and add pop retq push je adc and (bad) xchg mov jbe pushfq lock cli jo int (bad) outsb xor xchg xorl lock xchg outsb add or rex.WRXB (bad) movabs negb sbb jrcxz retq ja in and mov movsl icebp sbb (bad) mov cmpsl loop retq jne sbb retq (bad) and js jl rorl mov jmp je add sti pop sbb and loop (bad) mov xor repnz xor jo leaveq sbb sar xchg xchg cwtl cmp outsl mov outsl retq and jmp sub lock in xor pushq mov mov jns movabs negb add xchg and and loop retq pushq add lods movabs movabs mov lods int (bad) jns add rex.WX (bad) (bad) and xlat adc ds (bad) (bad) lcall or jp decb and (bad) (bad) (bad) ljmp rex.WB movabs mov (bad) pop mov es adc or cmp loopne sub or push mov rex.W (bad) or jge sahf mov popfq cli sbb mov retq (bad) jle add (bad) ja jg mov sbb rclb std add mov clc jbe retq out push xchg rex mov insb out xorl and int3 (bad) mov (bad) mov sahf adc mov adc jmp rex in cltd xchg rex.RXB hlt rex.RX sub (bad) jne (bad) pop stos mov (bad) xchg add vmwrite mov test xor (bad) or mov shlb mov adc bt cmp cmp jmpq add add or add movabs (bad) xchg add push sbb stos ficom rex.B sti hlt rex.WX ja mov pop std test mov rcrl xchg sub gs sub (bad) (bad) loopne cmpsb out insl gs sub rex.WRX icebp mov mov out mov add sbb popfq movsb or mov rex.XB addl xchg (bad) add mov xlat leaveq fildll sub movsl sbb hlt jle or insb (bad) cld movabs push pop rex.XB cmp rcrl xor jae (bad) rex.WRB rex.R insl push retq test adc adc scas (bad) and imul adc fwait int ficoml xor add orl pushfq xchg movslq push sub repnz xchg shlb (bad) out (bad) rex.RX rex.B int3 pop scas js xchg cmp or add (bad) (bad) xorl test jge push (bad) jbe rex.RB movsb icebp jrcxz cmp xor and and retq jo pop xor xor out jl and jno ss xor enterq in fmull adc rex.RXB test sub iret lahf xchg or and movsl and ds sarb movsb add loope mov rcll (bad) (bad) test add add sbb callq jns (bad) decl (bad) (bad) (bad) rorb pushfq retq mov jmpq jbe jmpq jmpq jmpq callq xor lea test test jmpq jmpq clc test jmpq movsbw lea movsbw jmpq xchg test clc bt test jmpq callq movsbq jmpq jmpq je not movzbw lea movzbl mov jmpq movzbq dec rcr shrd mov mov shrd bts xadd or btc and mov xadd dec sub add cmc bt lea sub add lea bswap mov sub bsr data16 hlt repnz lea not jbe bswap not dec rex.B hlt mov cmc cmc test jmpq jmpq jmpq bsf mov jmpq js callq rcr btc stc mov cmc stc test jmpq jmpq je and mov cmp test jmpq jmpq jmpq movzbl movzbw mov jmpq jmpq jmpq je ror movabs mov shrd mov or sar and movzbw mov mov lea seta movzbw mov jmpq xor setle not lea lea mov movzbl bswap mov jmpq jmpq jmpq mov jmpq jbe and shl ror mov stc stc bt cmp jmpq jmpq cmp jmpq jmpq jbe jmpq jmpq jmpq test cmp jne jne jmpq mov jmpq lea mov jmpq jmpq jmpq jmpq jmpq movzbw mov jmpq callq movsbw jmpq je xor mov clc cmc test test jmpq lea jmpq jmpq js mov setnp bswap jmpq jmpq jmpq je cmp bt cmp jmpq jmpq je movzbq btr mov stc clc clc cmp test jmpq jmpq movsbw btr lea cmc test jmpq callq jmpq xor jmpq je jmpq clc add jmpq jmpq jne jmpq js jb jmpq jne je ror mov cmc clc test test test jmpq pushq jmpq callq setb lea jmpq jmpq not bswap movsbw jmpq callq neg bts neg mov cmp sub lea mov jmpq jmpq jmpq test jmpq jmpq jmpq jmpq jmpq callq shrd mov clc test jmpq add neg mov jmpq callq setb not lea lea mov jmpq jmpq jmpq je movzbw mov bswap mov jmpq jmpq callq jmpq add cmc bt test shl stc bt clc cmc shr stc jmpq callq (bad) repz (bad) testl add rcl bswap cmpq movzbq lea setns mov jmpq jnp mov jmpq setb mov jmpq mov movzbw movzbl jmpq jmpq jmpq jmpq jmpq je jmpq callq btr bts mov test test jmpq je test cmp jmpq test jmpq jmpq bt test cmp jmpq mov setbe mov jmpq pushq jmpq incl jmpq cmc stc cmp clc nop clc cmpw jmpq jmpq jmpq je and bts rcl not mov clc stc cmp jmpq jmpq clc test add stc cmc test sub stc add jl callq cmp stc mov cmc jmpq jmpq jmpq cmp test jmpq jmpq callq xchg mov not mov movsbw mov jmpq je test jmpq jmpq mov jmpq mov jmpq jne stc clc bt jno testb jmpq mov jmpq jmpq callq shrd mov jmpq je bt jmpq test bt sub jmpq je jmpq add jmpq cmp test jmpq mov jmpq callq jmpq sub cmc sub cmp clc clc test xchg bt cmc cmp cmp test jmpq jmpq je jmpq jmpq mov jmpq jmpq mov jmpq clc cmp cmp jmpq jne jmpq jmpq rcl mov clc clc mov rcl shl lea neg lea or cmp bts lea add btr rcl shld not mov xor xor mov setle shl lea add shrd mov inc test sar test mov cmp cmc add stc stc cmp mov cmp clc mov bt bt add jmpq test jmpq nop jmpq jmpq jmpq callq bt bt cmp cmp cmp jmpq cmp jmpq jmpq je adc xor not bswap not not mov jmpq incl jmpq mov jmpq jmpq jnp nop jmpq add jo callq clc jmpq je cmc cmp bt clc cmp jmpq lea mov mov jmpq callq rol sub bswap bswap mov jmpq jl callq bswap lea mov movzbw mov lea mov jmpq data16 in in jg xor mov out (bad) mov rex.WR movsl cmp and push stc lahf sub movsb jne jl or lock (bad) (bad) leaveq xor insb movabs (bad) inc shrb retq lock in adc sub sub mov rex scas mov leaveq sbb cli negl and addl (bad) jmpq jne stc jmpq jmpq mov movzbl mov movsbl movzbw jmpq jmpq jmpq jbe callq not jmpq je setns sete not clc mov cmc mov btr mov sar cmp or rcl mov btc mov inc mov cmp add shr shld not cmp mov cmc jmpq callq bts btr mov cmp stc bt test jmpq pushq jmpq nop jmpq bt stc test nop stc jmpq jmpq mov stc cmp jmpq shld bts mov cmc stc jmpq jmpq jmpq stc add jmpq jmpq mov setge mov jmpq test jmpq jne jmpq callq movsbq jmpq movsbq mov jg callq bsr mov adc mov jmpq jmpq mov not bswap movzbw sete movzbl jmpq jmpq callq dec cmc sar mov cmp cmc bt stc test jmpq jmpq jmpq jmpq movzbl movsbl jo mov seto bswap setle mov mov mov mov jmpq je movsbw movsbw movsbw not mov jmpq clc cmp jmpq je xadd sub cmp sub lea shrd shr inc sub xor movzbw not movsbl not mov lea movsbw lea bswap mov jmpq callq clc and test bt jmpq callq clc bt cmp cmp jmpq jne rcr shld shld mov test test jmpq cmovns clc cmc stc test jmpq je movsbw lea movzbw mov mov not bswap mov mov jmpq jmpq test jmpq callq movzbl mov not mov bswap mov jmpq jbe callq xchg mov neg bswap cmc lea test sar xor lea movzbl mov jmpq cmc test jmpq callq clc test test jmpq jmpq jmpq mov cmc test cmc stc mov stc bt jmpq jge je jmpq jmpq callq shrd lea mov shl mov clc test jmpq jmpq mov jmpq mov jmpq mov lahf loopne in jg setg jne rex.WRXB jne sahf sub sbb xor mov and xchg adc sti insb and sbb mov and jno sarb add cmp lret ja rex.WR insb enterq (bad) (bad) inc sub jne insb in mov (bad) xor sub test and rcll (bad) mov jbe mov and jnp sub (bad) rex.WX mov xchg test fnstenv icebp adc push or rex.WRXB pop sbb ds mov (bad) mov rex.WXB rex.WRB repnz pop mov add (bad) rex.WXB test pop push sar (bad) (bad) jnp stos sub and add add jb and rex.WRX pop scas movsl add xchg and paddusb xchg mov cmpsl rex.WRB pop cmp cltd pop (bad) retq int sti insb (bad) (bad) xchg sub (bad) icebp rex.X jae lret lret xchg sbb test retq retq mov jg push (bad) sahf or stc rex.XB imull cwtl lea cwtl pop loope xchg adc xchg pop out in rex.RXB xor insb mov and rex.X cmp mov cmp add rex.WRB pop rex.RB sbb add rex.R adc callq (bad) pop sub cmpsl shrl xor in cmp mov (bad) jle je js pop fwait icebp fiadd fs jmpq mov jmpq jmpq mov mov jmpq test jmpq js movsbw setnp movzbq mov mov jmpq pushq jmpq callq sbb mov bt cmp clc test jmpq mov jmpq jmpq callq cmp bt test cmc cmp jmpq mov jmpq mov cmp and and or neg xor add bt bswap repnz dec jmpq je shr mov bswap bts bts inc mov stc seta (bad) cmc add shr (bad) fdivrp jmpq idiv leaveq rol mov stc mov stc test or bt clc bt bt xor clc repnz jmpq jmpq jmpq jmpq jmpq callq stc neg mov test btr mov bt lea sar mov ror adc neg movsbw mov test bt test bt add jmpq je jmpq jmpq jmpq jmpq je jmpq jne bsf neg movzbw adc mov stc jmpq mov mov movsbw bswap mov mov jmpq nop jmpq jmpq test jmpq not sub xchg bswap mov movsbq jmpq je not and neg bts mov neg jmpq jbe jmpq movzbw bswap mov jmpq jmpq callq jmpq nop jmpq add mov movsbl lea shrd add add lea movsbw lea mov jmpq jmpq callq cmc stc stc cmp jmpq jmpq callq sub mov jmpq callq clc cmc test stc cmp jmpq mov setb mov movzbq mov jmpq jmpq clc stc clc cmp jmpq je jmpq je not test shrd sar xor movzbw mov mov jmpq jmpq jmpq jmpq jge callq cmc cmp test test test jmpq je btr shr mov test mov mov btc stc rex.W repnz mov lea movzbw mov lea jmpq jmpq test jmpq je cmc cmp jmpq movq jmpq jmpq jmpq mov jmpq jmpq bt cmp cmp test cmp jmpq je cmp jmpq callq jmpq je jno callq lea lea lea jmpq jmpq callq data16 lock mov sar mov clc stc jmpq jmpq callq btc test rol mov xadd adc sub mov movzbw jmpq mov jmpq jmpq je sar shr xor movzbw mov not movzbw mov jmpq jmpq jne rcl movsbw setb mov rcl (bad) cmc sar mov adc btc mov test clc bt add cmp test cmc add stc cmp add cmp stc cmc clc add bt stc add jmpq add add add fcoms xor adc hlt adc loop test (bad) xor (bad) cmc pushq xor cmc clc cmp jmpq je not movzbw mov jmpq je bt cmp jmpq jmpq sub jg xor test (bad) cs mov ja test fidiv sti movabs adc add (bad) stos (bad) std rex.WRB cs (bad) (bad) incl loope mul bswap and or sub addr32 stos cmpsb mov jbe (bad) sbb push lock movabs (bad) clc jmpq callq rcr not data16 cmc mov jmpq jmpq (bad) (bad) mov rcr rcl inc bswap or movsbw ror mov jmpq jg mov ja callq bsf mov sbb neg sbb test lea not mov jmpq jmpq callq add xchg neg mov sar ror cmp xchg lea movsbq sub not jmpq je setle ja bswap mov mov test jmpq jmpq dec jmpq mov jmpq jmpq in rclb jmp nop jl fcomps push fmull jg pop mov xchg rex.WX fstl rex.RB mov add xchg mov and (bad) (bad) (bad) jmpq push sub sbb (bad) (bad) jmpq and out mov ficomp fdivr movslq (bad) (bad) sub cmp xor (bad) (bad) or (bad) (bad) pop mov cmp rex.RXB adc push mov cmpsb (bad) pop mov rex.RB jo mov sbb lods (bad) sbb cmpsl (bad) add fisttp jl adc movsb mov push sub add test test jmpq mov mov setnp shl and mov bt shld mov cmc stc jmpq mov js bt test jmpq jmpq movb jmpq je jmpq jmpq jmpq callq rol clc mov stc bt test jmpq cmovns jmpq jmpq jmpq callq test cmp jmpq bswap lea movsbw lea mov movzbw not mov not mov not mov jmpq jmpq jmpq jmpq cmp stc add sbb mov cmp bt cmp stc add jmpq callq add btc sbb shrd mov jmpq callq cmp test clc cmp jmpq jge jb jmpq jmpq je bt btc adc or mov cmp test jmpq jmpq test jmpq je jmpq clc test jmpq je setno jmpq test jmpq bt cmp cmp jo je jmpq jnp callq clc test jmpq lea shl bswap xor mov jmpq jmpq xor jb callq ja seta bswap mov jmpq callq stc bt test jg je jmpq jmpq jne rcr mov stc clc test jmpq je seto movsbw movzbw mov jmpq jmpq jmpq jmpq jmpq mov jmpq test jmpq callq ror rcr bswap xor movsbw mov mov jmpq cmpsb xor rex.WRXB in jg jle cmc mov sub (bad) popfq (bad) scas insl in xchg sbb (bad) (bad) lea mov sbb (bad) sbb sub (bad) push loopne sbb ds (bad) (bad) jmpq (bad) in negl mov test (bad) (bad) rex.WRX mov popfq in pop and pop mov or movabs and std callq decl addb add repnz (bad) jmpq callq in jg adc pop (bad) sbb movsl cmp jbe movabs clc movabs and iret test rex.R (bad) (bad) (bad) incl outsb rex.WR rex.WB outsl add add frstor out imul in sbb andl push sub add (bad) jge imul fildll rex.WR mov rcrb sbb add jne mov xor sub xchg pop jg mov xor mov mov jmpq je sbb mov ror mov stc and bswap bswap mov not setb not movzbw mov jmpq je bswap movsbw setnp mov jmpq je not xchg jmpq jmpq je inc sub mov jmpq jmpq je jmpq jmpq callq cmc stc jmpq bswap lea mov jmpq jp callq btc bswap mov cmp add test movzbq not movzbw lea mov jp cmovns stc bt cmp clc test jmpq jmpq jmpq jmpq jmpq jmpq bswap movzbl jmpq callq or bt mov cmc test jmpq callq movsbw neg mov bt stc test jmpq jmpq jmpq je jmpq callq adc movb ror rcl bswap btr mov stc bt jmpq jmpq je bt and mov clc test clc bt test jmpq jmpq callq jmpq callq test test jmpq jmpq js je btr inc stc sbb sub movsbl not lea lea bswap movsbw mov not mov not mov bswap movzbw not mov movzbw not lea lea jmpq jne shrd mov bsf cmc sar btr lea xadd mov rcr movzbq xor movzbw not bswap mov lea jmpq mov jmpq callq cmc jmpq je movsbw xchg (bad) cmc mov clc sub mov movsbw add neg bts lea bt test cmp jmpq movzbw jmpq je shrd rol add xchg mov cmc bswap data16 lock cmp sub mov shld shld mov jmpq callq cmp and bt bt bt cmp jmpq callq movzbw sub sar movsbw xor not movzbw lea mov jmpq jmpq je bt test mov test test clc cmpb jmpq pushq jmpq jmpq jne shrd add mov clc sub jmpq jmpq sub mov mov jnp callq add mov mov stc test jmpq add cmc cmp jmpq xor clc bt xchg test test jmpq cmc cmp jmpq callq sub sar bswap lea mov bt test jno je cmp cmc cmp jmpq jmpq callq jmpq jmpq jmpq jmpq jmpq mov jmpq jmpq jne stc bt test jmpq jmpq callq movzbw shld inc not mov bsr movsbw cmpq movzbw mov jmpq je movsbl mov clc clc bt mov cmc test cmpw jmpq jmpq jmpq jmpq callq cmp jmpq cmpl jmpq callq btc dec bsf mov jmpq jmpq je jmpq jmpq callq not not movzbw mov lea jmpq jmpq mov movzbw movzbw not mov jmpq jmpq jmpq callq test clc rcl mov bt test jmpq je mov mov btc mov sbb mov cmp jmpq je jmpq jmpq mov jmpq add jmpq callq test stc clc cmpl jmpq jne clc clc cmp test cmpb jmpq callq stc bt clc bt and cmc cmp clc cmp cmp jmpq callq shl mov test test jmpq jmpq test jmpq jmpq bswap movzbq mov jmpq test clc stc cmp jmpq jmpq bswap btr mov jmpq not lea mov jmpq jmpq je test jmpq jmpq jmpq jmpq callq cmc cmc stc cmp test jmpq mov jmpq je btc rcl bsr mov clc test jmpq jmpq je not lea bts bsf rol sub lea mov movzbq mov mov jmpq jmpq pushq jmpq callq bswap mov movzbw mov not mov mov jmpq cmc cmc cmp cmpb jmpq mov jmpq jmpq jmpq mov jmpq jmpq jmpq jp jne bt inc not lea btr mov cmc shr btr cmc sub movzbw bsr movsbq adc xchg xor shld test setb movzwl jmpq cmp jmpq jmpq jmpq jmpq jmpq mov jmpq not movsbl not dec dec lea bswap dec not movsbw lea mov jmpq callq stc xor cmc shl mov test and and and mov stc stc test or jmpq callq jmpq je btc or setns mov shrd and movzwl seto add mov clc jl cmp jmpq jmpq callq clc jmpq jmpq stc cmc add movsbw movsbl sar mov mov jmpq jmpq jmpq jmpq test stc cmp jmpq jmpq jmpq callq lea not seta movzbw mov jmpq mov jmpq je cmc jmpq je setns movsbw lea bswap movsbl movsbw mov sete jmpq jmpq mov jmpq test jmpq jmpq jmpq jmpq jmpq callq shr mov xor mov cmc clc cmp bt test jmpq jmpq jne shrd rex.W lock bswap lea lea xadd rcr mov movzbw sub btc sbb rcr xchg bts movzwl clc cmp add cmc jmpq callq movsbl btc mov inc mov clc bt clc test jmpq jmpq je jmpq jmpq jmpq callq test stc cmp jmpq je cmp stc bt clc cmp jmpq movl test clc stc stc mov dec bsf mov cmp bt stc jmpq jmpq jmpq jmpq callq shr and lea mov bt test cmp jmpq jmpq jmpq je ror and setl rol sub lea lea mov jmpq je bt stc cmpl jmpq inc jmpq test add stc adc mov cmc add test stc add jge cmp clc test add seto jmpq jmpq callq btc mov cmc cmc test test jmpq callq rcr and ror adc mov cmc test jmpq jmpq jmpq callq lea mov movzbw lea lea jmpq jne dec mov shr mov inc xor shrd mov jmpq mov jmpq callq bswap mov clc test test jmpq callq btc mov test ror mov movzbl mov stc or clc cmp xor cmp repnz jmpq mov jmpq jne jmpq je jmpq not movzbq jmpq or bt cmp bt cmp sub bt cmc cmp clc repnz jmpq mov jmpq callq lea not bswap mov jmpq jmpq jmpq je jmpq je jns test stc bt cmpl jmpq callq rol bsf cmc adc lea jmpq jne neg mov cmp cmp test cmc test jmpq callq bswap xadd shl sub jmpq lea movsbl mov jmpq jb cmc test cmp cmp jmpq jmpq jmpq jmpq jmpq cmp test cmp jmpq callq adc shr jmpq callq xchg mov not movsbl mov setle movsbq jmpq test cmp jmpq jmpq je stc bt cmp cmc cmpl jmpq callq jmpq cmpq jmpq jmpq test rol or stc data16 (bad) or mov clc repnz shld movzbw shr not sub bswap nop bt setne movsbw or movzwl test stc jmpq callq cmp test jmpq test jmpq jmpq je jmpq callq test cmp cmp clc test jmpq je movzbl mov stc cmc test jmpq callq jmpq jmpq lea setb jmpq jmpq bts sar or cmp clc sub not mov sete xadd shld repnz bsf rcr cmc not bswap setnp jmpq bswap not mov jmpq jmpq jmpq clc mov sub and jmpq jne dec clc shr shld mov xadd xadd sub mov or rcl mov stc jmpq jmpq cmc cmpl jmpq je jae jmpq cmp bt stc cmp jmpq je jmpq movzbl mov movsbw not jmpq js bswap lea lea jmpq callq bswap lea bswap mov jmpq je add mov bt clc cmp cmc test jmpq je test jmpq cmc cmp jne jne bswap mov mov jmpq jmpq callq lea movsbl lea lea jmpq bsf mov jmpq jmpq jmpq btr mov stc test jmpq je mov shld mov test stc jp clc sub jmpq jmpq mov jmpq cmp jmpq bswap mov not setbe not mov lea not mov not mov jmpq jmpq callq clc bt mov test cmp test jmpq je mov not movzbw jmpq callq jmpq je jmpq callq cmp cmpl jmpq bts sbb mov sar neg repnz movsbw jmpq jmpq mov mov not lea movzbw mov js callq cmp mov cmp cmp cmc test test jmpq nop jmpq jmpq mov mov jmpq jmpq je jmpq jmpq bt add bt bt cmc add stc add lea movsbl setne mov mov jmpq jbe jne clc (bad) repnz mov cmp lea cmc shr test mov bswap bsf xor neg mov rcl sar add movsbq rcl lea btr adc cmc mov cmp cmc test add cmc stc jmpq jmpq stc cmp test jmpq jmpq test jmpq jmpq jmpq jmpq jmpq bnd movsb rex.RX jg adcl movslq jg lret cld push xchg sub and mov (bad) cmp (bad) jge iret imul movslq adc rex.WRXB ds jne (bad) test jne decb mov xor ds (bad) (bad) lcall mov (bad) es hlt movabs xor cmp (bad) (bad) (bad) faddl insb cmc test clc (bad) stos pushq pop rex.WB loope push mov mov mov rex.R push test rex.WXB rex.WB jp jne (bad) rcr or jmpq cld js frstor mov fcompl pop (bad) jnp cltd loop xchg cmp stos iret scas in mov stos add xchg retq rex.W rex.RXB je mov es in cld (bad) sbb retq imul sahf jge jle je stc ror lea mov jno bt test jmpq add jmpq stc test add jmpq callq bt shrd and lea stc cmp cmp test jmpq jmpq je jmpq jmpq clc cmp test jmpq callq mov jmpq jmpq je stc jmpq je bswap movzbw mov mov jmpq jae jmpq callq mov bswap lea lea mov jmpq test test cmp jmpq je test test cmc cmp cmp jmpq jmpq nop jmpq je test jmpq jmpq test jmpq jmpq sti test addr32 jg rex.RX push (bad) jge fnstenv rex.WRXB mov shll rex.B movslq jp xchg (bad) fnstcw rex.WR fs pop movabs pop and (bad) (bad) (bad) inc stc fisubr sysenter movabs or test xchg (bad) adc dec jmpq callq dec cmp neg shl mov dec seto mov jmpq callq test stc cmp sub jmpq jmpq je rcr sub lea mov jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jg callq jo cmc jbe xor clc cmp clc test jmpq jmpq jmpq jmpq callq clc cmp jmpq callq bt test test test and cmc cmp jmpq callq movsbl not stc mov bt test jmpq je bt mov bt test jmpq jmpq callq mov mov movzbw mov jmpq mov jmpq jmpq jb lea jmpq stc bt xor jmpq jmpq callq bt jmpq callq bt stc cmc cmp jmpq test xor jmpq jbe bswap not jmpq movsbw mov jmpq je cmp jmpq mov jmpq clc test jmpq bt bt add cmc test cmc cmp mov stc stc clc test jmpq jmpq jmpq callq jmpq nop jmpq lea jmpq mov (bad) push rex.B jg movsl or xchg push rex.RB scas rex.WXB cmpsl lods rex sarb incb (bad) mov outsb jbe cs (bad) (bad) lcall jl xchg (bad) adc fs xor jo xor lret cmpsb icebp or stos rex.WR adc sbb mov movabs (bad) (bad) lcall (bad) (bad) (bad) mov lock (bad) pop std iret cmp adc (bad) jnp and adc pop sub push mov lret loop iret mov ds sbb idivl xchg xlat mov movabs (bad) incb (bad) push decl mov xchg push sub enterq xlat lods enterq es sub (bad) mov add jb js add xchg lret callq shld lea bt jns bt clc test jmpq bt cmp test cmp jmpq jmpq mov jmpq jmpq jmpq test jmpq mov jmpq cmp mov not shld xor bsf mov test cmc bt test mov test movzbl cmp cmc mov mov movzbl clc mov adc add and bsr mov clc mov rol bsr neg movsbw mov cmp cmc bt stc xchg test cmp cmp jmpq pushq jmpq callq cmc jmpq jmpq jmpq je jmpq jmpq jmpq jmpq jne add mov add rcr lea mov neg mov stc cmc test cmp add bts not mov stc jmpq jne movsbl mov jmpq not not lea bswap not not lea jmpq jmpq movl jmpq jne adc shrd bt neg mov movzbw xchg test cmc mov lea sar stc inc mov jmpq callq cmp test jmpq test jmpq callq jmpq jmpq jmpq mov bswap not lea bswap mov jmpq je clc jmpq jmpq jle js lea mov jmpq jmpq je jmpq jb setnp lea lea jmpq jmpq cmc xor jmpq callq bts mov ror cmpq jnp mov mov jmpq callq setl jmpq callq bt bt bt test cmp jmpq test jmpq jmpq jmpq jb stc jg cmp jmpq bt test jmpq stc test jmpq cmc xchg sub movzwl test cmp bt add bt bt mov cmc test jmpq jmpq callq data16 lock stc mov test bt movl cmc bt mov btr inc sbb (bad) lock bt cmc mov bt bt cmpb jmpq add jmpq callq mov mov jmpq jmpq jmpq cmovns stc test jmpq callq bt jmpq jmpq pushq jmpq jmpq lea setle bswap mov not movsbl mov mov jmpq jmpq jmpq callq bswap shl mov neg cmpq jmpq callq jmpq jmpq jmpq callq add shl mov test stc bt cmp test jmpq callq movzbw mov bswap jmpq jmpq jmpq cmc xor jmpq bt clc test jmpq mov jmpq jmpq jne clc cmp cmc bt test jmpq jmpq jmpq jmpq mov lea bswap movsbw bswap mov jmpq callq setle mov mov lea not not mov not movsbq mov not movsbq movsbw mov jmpq jmpq mov not mov mov movabs movzwl jmpq jmpq pushq jmpq mov jmpq xchg lea jmpq jmpq jmpq callq bswap mov movzbq mov movabs mov mov bswap movsbw setl bswap mov jmpq je clc cmc mov cmp cmpb jnp je jmpq jmpq (bad) mov cmp add add add add (bad) (bad) xor push xchg bt cmp test bt test jmpq mov jmpq jne movzbw movzbq mov jmpq jnp je movzbq bswap mov mov jmpq je and or cmp lea shr sub mov not movzbq mov lea jmpq jmpq jbe jmpq jmpq jmpq jmpq jmpq movsbw mov jmpq test cmc cmpl jmpq callq inc btc xadd mov bsr add mov cmp test jmpq jmpq cmc test jmpq jmpq jmpq jmpq callq jmpq mov jmpq je cmc jmpq callq xor not shrd movsbq lea cmp jmpq callq test clc test test jmpq jmpq jmpq inc jmpq cmpb jmpq mov jmpq bt add bt cmp cmc mov cmc test jmpq bswap not not mov jmpq jmpq jmpq jmpq jmpq je neg mov bt bsf and mov not btc bsf lea bt stc jmpq jmpq je jmpq jl mov test cmp cmc stc mov stc cmp jmpq je setb mov sete mov btr or lea cmc stc stc cmp jmpq jmpq callq jmpq jmpq jmpq je test not mov ror mov sete dec sbb adc mov movsbw mov rcr not mov mov mov cmp jmpq mov jmpq not jmpq je movsbq lea mov mov not movzbq bswap mov movsbl movsbw jmpq jne setp lea clc xor movsbl jmpq and bt jmpq callq movzbw lea jmpq cmc mov test bt jmpq callq cmp btc and add mov bt test jmpq mov jmpq mov jmpq add clc cmc cmp jmpq pushq jmpq je or add rcl mov and mov dec bt and not mov mov mov jmpq jmpq pushq jmpq jmpq jmpq jmpq callq rcr clc mov test xchg jmpq jmpq callq cmp cmp jmpq jmpq callq bt jbe stc bt and cmp bt cmp jmpq cmc cmp jmpq jbe jmpq jmpq jmpq je inc lea sar or mov rcr mov xor btc dec or and setae movzbw mov mov bswap lea movzbw movzbw mov jmpq je jmpq cmp jmpq js movzbw setp mov movzbw mov jmpq jns je jo movsbw lea ja callq clc jmpq cwtl sbb (bad) xor jg mov icebp xchg callq rex.WRXB pop jmp adc negl sbb (bad) callq xchg push cld jno fwait xchg decb xchg mov (bad) lcall cmp sbb (bad) rex.B (bad) xor cs mov fdivrs ss sbb mov bswap jmpq jmpq jmpq clc bt cmp jmpq callq cmp bt cmc test jmpq jmpq callq ror mov rol sbb mov cmc bt cmc cmc or cmc stc cmp cmc xor jmpq stc cmc add bt stc stc test cmp jmpq je btr mov cmp cmp jmpq jmpq mov jmpq nop jmpq cmc cmc add clc add clc cmp cmc add bswap movsbl movsbl not mov jmpq callq btc bsf stc cmc mov test test clc jmpq jb jmpq inc dec bswap dec bswap jmpq cmc jmpq jmpq callq jmpq add bswap movsbl lea movzbw lea jmpq nop jmpq callq shl bt lea jmpq inc jmpq jmpq jmpq je jmpq jmpq jmpq mov jnp callq lea bswap dec ror mov btc mov bsr inc bswap or cmp shld xor dec btc bswap repnz not movsbl lea lea not lea dec dec jno mov bt test jmpq jmpq jmpq je bt stc test bt cmp jmpq test jmpq jmpq jmpq jmpq jmpq jne bsr bt cmc lea stc add bt cmc xor jmpq jmpq jne cmc cmp jmpq movzbl mov lea not jmpq jmpq callq test cmc cmpl jmpq pushq jmpq setb mov mov mov lea bswap mov jmpq test test jmpq pushq jmpq jno callq clc test jmpq jmpq je not movsbw mov jmpq callq mov mov movsbw mov jmpq mov jmpq jne bts sbb shr mov clc clc clc stc test jmpq jne clc clc jmpq cmp jmpq jbe not not rcr cmc lea clc stc jmpq jmpq clc cmp jmpq jmpq je cmc cmp cmp js jmpq bswap movsbw lea movzbw seta movsbw movzbw mov movzbw not jnp lea jmpq je stc stc clc cmp xor jmpq je movzbq add and mov bsr add bt cmp mov bsr dec inc mov test mov jmpq clc stc cmp add clc stc cmc add bt bt bt add bt cmc add cmc add clc add cmp cmp jmpq jmpq jns je stc sub not movzbq bswap setge mov jns callq test rcr dec rcr mov bts bt mov cmc test jmpq jne movzbq movzbq not mov jmpq je xor adc movsbw mov rol mov shr data16 repnz mov stc cmp add add mov movzbl mov jmpq jb bswap lea stc jmpq lea mov mov bswap mov jmpq jmpq jmpq movsbw mov not jmpq je not lea seto bswap mov movsbq movzbw movzbw mov jmpq movzbl btc sbb test rcr xor add btr rcr mov cmp movzwl test cmp clc test mov shr shrd bsr bt movzbl bt mov stc mov lea stc movzwl jmpq jge pushq jmpq je movsbw lea setp lea mov bswap jmpq jmpq jmpq jmpq cmc stc test jmpq callq cmc cmp test jmpq cmp jmpq bt cmp jmpq jmpq jmpq jmpq jmpq callq jmpq jmpq cmc cmc mov clc cmc jmpq je seto mov xchg lea lea mov mov lea movzbw movzbl movzbl mov movzbl mov jmpq jmpq jmpq jmpq jmpq jmpq cmova jmpq je stc clc cmp jmpq je clc cmp cmc test cmp jmpq jmpq jmpq lea jmpq jne or mov xor shr dec movsbw mov jmpq not movzbw lea mov movsbw mov jmpq jmpq callq cmp cmc bt test cmp jmpq jmpq callq sub mov xadd lea sub cmp mov sub jmpq movzwl bts movzbl bt cmp test jmpq jmpq cmc mov bt cmp test cmp jmpq cmp stc cmp jmpq jmpq jbe rol mov cmc mov bt bt stc sub jmpq callq seto jmpq add cmc bt jmpq callq cmc cmp mov and shld and shl xor lea not movzbw lea mov lea jmpq jmpq bt clc test cmc nop clc jmpq bswap mov mov jmpq callq movzbw mov jmpq je cmp stc cmc cmc cmpl jmpq nop jmpq jmpq jmpq mov jmpq callq test test cmp cmc xor clc stc test bt test jmpq je jmpq callq js test cmp jmpq jmpq js jmpq mov jmpq mov jmpq jmpq callq bt mov clc test jmpq callq cmc jno cmp jmpq callq jmpq jmpq callq bswap mov not setge setg mov setae jmpq je jmpq xchg movsbw jmpq jmpq cmp jmpq je jmpq je bsf sar or btc movzwl movzbw not rcl movzbl cmp test shl stc clc shr cmc cmc test clc or jmpq jb not movsbq movzbl lea dec btc btc mov cmp mov data16 (bad) or leaveq push xlat jmpq mov jmpq callq movsbq mov jmpq jmpq cmovns stc test test jmpq jmpq cmp push sub jg rex.WRXB mov sbb push cli mov add retq push test pop add in (bad) iret mov repz jl lcall sbb loopne push test xor (bad) (bad) (bad) sti xor mov scas cmp mov adc (bad) and mov add add addr32 and mov sub push insl movabs add add push cli push rex.WRX sbb pop out (bad) (bad) data16 nop mov icebp and loope xchg (bad) lods jo je cli (bad) or es mov adcl movsl mov rex.WX rcl sub fnstenv sbb and mov (bad) repz sub test sub adc (bad) je jmpq jne shl inc cmc lea test bsf xor mov dec sar shld not sub dec dec ror xchg sub movzwl stc bt cmp jmpq add stc cmc cmp bt add bt stc test cmc add test cmp cmp cmp add cmp cmp clc test add cmc test add test cmp jmpq jmpq jmpq jmpq je sar dec xor movsbl not bswap not mov jmpq stc jmpq jb jmpq lea mov mov not mov jmpq dec jmpq je mov sub bswap sets mov jmpq jmpq movzbw bsr bswap sub not lea mov mov not movsbl jmpq jmpq jmpq callq stc cmpb jmpq mov jmpq callq (bad) (bad) mov adc movsbq mov clc clc or bt bt test sub jmpq jmpq jmpq jmpq jmpq callq clc jb test bt and cmc bt cmp jmpq je jmpq jb shr mov dec btc lea xor mov lea bswap mov jmpq callq cmp cmp cmp test jmpq jb stc neg bts mov xor lea xor not movzbw movsbl movsbw mov jp callq not lea not not movzwl bswap movsbw mov movsbw lea mov jb bswap mov jmpq pushq jmpq lea jmpq mov jmpq mov jmpq jmpq callq cmp test sub cmc xor clc xchg test test jmpq lea mov jmpq jmpq jmpq je jmpq cmpb jmpq mov jmpq je jmpq je bt jmpq jmpq mov and rol btr dec mov bt cmc clc mov bt stc cmpb jmpq je test stc cmc jmpq jmpq mov bswap cmp adc mov stc clc test cmp jmpq jmpq incl jmpq je movsbw dec stc mov xor mov test clc cmp jmpq incl jmpq jmpq jmpq jmpq jmpq jnp je test stc cmp jmpq test sub bt add jmpq mov jmpq test jmpq je cmp inc inc lea cmp xor jmpq test jmpq je movsbq jmpq callq sar movzbw mov bt jmpq jne dec sub sar add mov setl movsbw not lea jmpq mov jmpq mov bt bt cmp test jmpq inc mov test cmp test jmpq je mov mov not mov shld adc test ror lea js cmp jmpq mov seta mov not mov jmpq bswap mov movzbw lea bswap setnp movzbl jmpq callq stc cmp jmpq movsbq movzbw not mov lea movsbq movzbq mov jmpq jmpq mov jmpq bswap mov movsbl lea movzbl lea bswap setns lea jmpq not mov jmpq jmpq callq jmpq je sbb rcl xor dec mov cmc mov seta mov shld (bad) icebp add leaveq pop add ror bt setno mov clc jmpq jmpq callq movzbw not bswap not mov lea mov jmpq callq test clc test bt cmp jmpq mov jmpq callq cmc jmpq mov jmpq shl rcl mov test stc bt test jmpq callq rol jmpq jmpq seto mov bswap mov mov jmpq bswap mov jmpq nop jmpq jmpq je clc jmpq callq stc jmpq je sbb sbb dec mov clc stc test jmpq callq jmpq jmpq jmpq jbe bswap mov jmpq callq bt add mov bt cmp test jmpq cmc cmp jmpq jmpq setae lea bswap jmpq mov jmpq je shl rcl adc mov cmc cmp test jmpq callq shrd test lea jmpq jmpq je not not jb mov jmpq nop jmpq bswap lea movzbw mov jmpq jmpq callq jmpq movsbw btr jmpq jmpq je clc test xor jmpq jmpq test jmpq je jmpq jmpq je or mov or test mov sbb not lea cmp stc test cmp jmpq je jmpq callq jmpq callq jmpq add shrd bswap movzbw mov test bt cmp test add bt clc cmp clc add cmp cmp jmpq pushq jmpq jmpq jmpq jmpq callq test sbb cmc movsbw mov setb bswap shrd mov shl test setb mov adc movzbl mov test clc add cmp cmp sub clc bt add jmpq je jmpq mov jmpq sub jmpq mov jmpq movzbl movzbq movzwl jmpq callq movzbq lea lea mov movsbw jmpq je shr sub movzbw seto mov jmpq jmpq xchg jmpq jmpq je rcr dec xchg bsr mov rol mov data16 icebp rcl mov inc mov btc xor setge mov jmpq jl mov jmpq jne cmc cmpb jmpq jmpq cmc test jmpq mov jmpq callq test stc test jmpq je sar rcr movzbl cmc test cmc test jmpq dec mov cmc clc test sub jmpq callq lea not lea lea movsbl movzbw movsbw lea jmpq jne and stc bts or xor sub shl mov dec sub btr shld repnz inc adc mov bts bswap shl not movsbw lea jno stc cmc or test cmc stc repnz neg rol shrd not neg movzbl lea clc test stc add jmpq jmpq je jmpq jmpq jmpq movl jmpq jmpq js jne test test jmpq jmpq callq shld mov cmc test test jmpq test jmpq mov bt cmc test jmpq jmpq jmpq jmpq jne rol lea rcl add mov lea not lea jmpq jbe jmpq add jmpq xchg lea not setb bswap movsbl lea jmpq jmpq test jmpq mov mov mov jmpq nop jmpq clc cmp test jmpq jmpq jne btc stc xor bts or sub mov test clc repnz setae (bad) lock xor data16 lock enterq setb dec mov shr movzwl bt clc cmp add stc cmp mov clc test clc clc test jmpq cmp test test xor jmpq jmpq callq jmpq je movsbw bsf xor lea setp mov jmpq je cmp bt cmc bt cmp jmpq movl jmpq callq rcr shrd shrd sub not xchg mov inc mov jmpq callq xchg bswap lea jno mov setns sete mov jmpq jo callq test jmpq callq jmpq jmpq jmpq bt cmc cmc xchg jl cmp jmpq jmpq clc sub cmc cmp test cmc test jmpq je shr movsbw lea btr btr sar xor mov lea mov movzbw bswap mov jmpq callq rol test btc ror lea cmc stc stc clc test jmpq pushq jmpq cmpb jmpq callq add movzbw mov clc stc bt test jmpq mov jmpq add callq clc test cmc cmp jmpq test stc jmpq add neg bts sar cmc mov jmpq jmpq callq bswap mov mov jmpq jmpq jmpq not lea jmpq jb movzbw not setle dec shrd mov test or clc shrd not mov bts or sub shl bsf sub rcl test shrd and mov shrd sar xor sar repnz movsbq dec not not mov dec dec lea mov movsbq bswap mov jmpq not lea jmpq jmpq clc shr sbb mov dec btc mov bt bt cmp cmc cmp jmpq jmpq jne neg not mov ror jmpq jle js setge jmpq mov jmpq jne bt bt jmpq jmpq movsbw mov jmpq mov jmpq pushq jmpq callq clc jmpq jmpq mov mov not mov jmpq stc dec clc mov bswap bsr adc mov mov stc test jmpq pushq jmpq cmc cmp jmpq jmpq callq stc mov bsf mov clc test jmpq jmpq jmpq mov jmpq mov jno callq jmpq jmpq dec dec dec dec jmpq callq clc bt test test mov cmc jmpq jmpq callq cmc xor cmc cmc stc test xor cmc bt jmpq jmpq jmpq adc sub mov not seta mov jmpq callq jmpq callq rex.W lock mov lods lock jmpq mov ror bsf mov jmpq jb je mov mov jmpq callq bswap rol mov stc jmpq je bsr shld mov stc stc jmpq jmpq callq test test clc cmc cmp jmpq callq bswap movsbw lea jmpq je shld data16 icebp add movsbl rcr mov shl stc bt mov rcl stc or lea jmpq js jmpq callq jmpq mov not bswap bswap bswap mov jmpq je bswap lea lea lea jmpq jne lea shr neg shld mov neg cmc mov clc jmpq callq cmc and btc mov cmc cmp jmpq mov jmpq jmpq jne xadd neg mov dec neg mov bt add cmp cmp jmpq je setle movsbw bswap xchg mov xchg bswap bswap seta mov bswap sets bswap movzbw mov jmpq jmpq je add neg mov cmp test clc test jmpq jmpq nop jmpq jmpq pushq jmpq jmpq jmpq movsbq lea jmpq je add bswap bt mov cmp stc bt cmc test jmpq jmpq callq stc cmp clc test jnp je test cmp jmpq cmp cmp xor jmpq jmpq clc cmp jmpq jmpq setb mov jmpq movsbl mov movsbl mov jmpq mov movzwl jmpq callq jmpq js lea movzbw sete mov jmpq callq movzbl mov xchg bswap not not mov jmpq jmpq je inc movsbw setl jge mov bts setl movzbq sar sub not mov jmpq jmpq nop jmpq inc repnz jmpq pushq jmpq callq ror dec mov stc jmpq test stc and cmp cmp jmpq mov jmpq jb neg stc lea test stc clc cmp sub jmpq je jmpq jmpq je btc neg mov bts and test mov bsf lea or dec and mov movzbw mov mov movsbq mov mov jmpq jmpq not bswap mov not movzbw lea jmpq jb cmp stc bt cmp cmp jmpq callq lea bswap movsbw lea movzwl xchg movsbw movabs mov jmpq jmpq callq cmp test jmpq callq cmc cmp jmpq jmpq callq lea bswap mov bswap bswap jmpq mov jmpq jmpq callq movzbq setns xchg not mov jmpq mov bt test cmp test test jmpq jae test sub clc jmpq jmpq jmpq mov jmpq stc shl stc stc stc shr bt cmp clc or jmpq pushq jmpq callq stc cmp test jmpq bt test jmpq jmpq jmpq not setne mov jmpq not movsbl mov setg not movsbw not mov jmpq jmpq mov cmc test jmpq je jmpq jmpq jmpq seto setns movsbw mov jmpq jmpq callq bt stc clc mov cmc cmpq jmpq bswap movzbw mov bswap bswap movsbw mov jmpq cmc cmp jmpq je jmpq jmpq jmpq jmpq jmpq jne cmc cmp cmc stc cmpq jmpq jmpq jmpq je bswap lea mov lea mov lea mov jmpq je bts stc sub mov jmpq jmpq jmpq callq btr sbb mov cmp test jmpq add bsf mov stc add bt cmp bt add test add movzbq movzbl mov jnp callq clc bt bt cmc cmpb jmpq je neg inc clc mov shrd clc rcr mov clc bt test stc cmp jmpq stc clc bt add cmc cmc add mov mov jmpq jmpq jmpq je not mov test test jmpq setle mov jmpq xchg jmpq je jmpq callq sub mov cmp cmc cmp bt test jmpq pushq jmpq jmpq jmpq jmpq jmpq jmpq je cmc clc test sub jmpq je je inc jmpq js movsbq mov jmpq jmpq test jmpq mov mov not not movsbl mov jmpq callq shr rol mov btc sub sub mov bts inc btr btr lea shl sub mov shl test lea stc stc test jmpq jne not mov js callq (bad) lock mov bt clc clc test jmpq mov jmpq jmpq dec sar stc not cmc mov jmpq je bt clc sub jmpq jmpq callq clc bt cmc cmp and test cmp jmpq jmpq jmpq callq movsbw test jmpq jmpq jmpq jmpq mov shrd rex.WB lock btc mov jmpq callq jmpq add jg jmpq loopne pop loop sahf loope lret sbb mov shrl testq pop (bad) rex.RB cld adc (bad) stc imul loop rex.WB outsl (bad) xchg cmc adc sub sbb cmp mov mov out sub mov jge lods callq test adc (bad) callq add add movzbq bswap lea not mov jmpq jmpq clc clc cmp jmpq mov jmpq bt clc add dec rol mov cmc stc cmc add cmp bt cmp cmc add jmpq pushq jmpq jmpq je add btr dec mov cmc stc stc xor jmpq movzbw not mov jmpq jmpq cmc jmpq callq sub sub movzbl mov lea inc inc mov jmpq jmpq callq bswap mov jmpq not xchg xchg bswap mov setae mov movzbw mov jmpq jle mov not bswap mov mov jmpq jmpq mov mov not not lea mov jmpq jmpq jmpq sets mov jmpq jmpq callq add add mov cmc cmp test bt test jmpq callq xchg lea jmpq cmp jmpq js cmc clc jmpq callq setp mov movsbl mov movzbw mov jmpq pushq jno pushq jmpq jmpq jmpq stc add test clc clc test mov clc cmc stc test jmpq jmpq jmpq shl stc repnz lea inc not movsbw dec data16 hlt add adc loope jmpq callq not bswap bswap lea lea jmpq cmovns stc cmc test test jmpq callq rcl shl bswap bts mov test xor jmpq cmp test jmpq pushq jmpq jmpq mov jmpq callq setnp movsbw seta movsbl mov mov jmpq jmpq callq lea sar btr mov jmpq cmc add movsbw not movabs mov jmpq clc cmc cmp jmpq jmpq jmpq jbe cmc shrd shl neg mov bts stc mov test xor bt stc cmp add stc jmpq movzbl jmpq jmpq callq jmpq callq jmpq bswap mov jo callq lea movzbl mov movsbq mov jmpq jmpq jbe rcr btc movzbl or mov stc cmp jmpq jmpq retq lods add add rolb mov (bad) add (bad) add gs add cmp add add xchg add xlat xchg add (bad) add add rex.XB and add imul lea lea dec not mov jmpq jmpq jns movsbq movzbq mov jmpq or xor mov adc shl shl movzbl sub or rcr add mov lea mov xor bsf repnz dec not dec bswap dec bswap mov jmpq je not movsbl mov jmpq jmpq jmpq jmpq je cmc bt clc test cmp jmpq jmpq jmpq test jmpq jmpq callq sbb mov shr sub bsr cmpq jmpq jmpq mov lea xchg bswap lea setp mov not xchg mov movsbw movsbw mov jmpq je jmpq je jmpq mov jmpq jbe jmpq jmpq mov jmpq je jmpq callq cmp test xor jmpq jmpq callq not movsbw not mov lea setge lea mov jmpq inc mov clc bt bt test test jmpq mov jmpq callq movzbw xchg lea movsbw mov seto mov mov mov jl callq mov lea xchg mov not lea not seta mov jmpq nop jmpq jbe cmp neg rcr shr mov sbb rol btc cmc mov cmp test cmp jmpq mov jmpq jmpq shl jmpq mov movzbl not mov jmpq not mov jmpq jbe jmpq callq stc cmc cmc and cmc cmp jmpq jge je xchg not xchg xchg lea not mov mov not movzbl movabs mov jmpq callq bswap sets setb movzbl mov jmpq callq bt cmp jmpq je sets lea not lea xchg mov xchg mov movsbl movsbw mov jmpq test jmpq jmpq jmpq callq bsr sbb xor lea mov jmpq jmpq not or sub movzbl setno bswap mov jmpq mov lea mov jmpq jmpq callq ror bsr inc sub movsbl movsbl mov jmpq xchg lea bswap bswap movzbl jmpq callq or mov test cmp bt test jmpq jmpq movzbw mov mov jmpq je lea lea xor not movsbl jmpq callq cmp and bt test cmp jmpq jmpq jmpq je stc bts bt clc mov test test jmpq mov jmpq je clc cmp clc cmpq jmpq mov jmpq mov seto not movsbw jmpq dec jmpq je jmpq cmc cmp jmpq callq bswap jmpq mov jnp cmp xor jmpq clc cmc clc test jmpq movzbw mov jmpq jmpq nop jmpq cmp test jmpq jne rcr not mov stc mov bswap lea neg rol add movzbw lea movsbw mov jmpq mov jmpq jmpq mov jmpq bsf cmc mov sub add sub and bsr xor shr mov lea movsbl bswap repnz inc lea not movsbw movsbw jno bswap dec lea movsbw bswap mov mov jmpq jmpq jmpq callq cmp jmpq lea mov jle callq xor xor data16 lock sub bswap clc data16 lock mov clc test jmpq sbb xchg and scas adc (bad) loopne rex.WRB mov sub sub mov fldcw insl fdivrp pop cmpsb in out xlat push sti incl adc jmpq callq cmp shr shl shld sub mov mov jmpq je test xor setl lea not mov jno lea jmpq callq stc test stc cmp jmpq je movzbw test movsbq mov movzbw inc shrd adc sub lea movzbl lea mov jmpq je movzbw bts cmp mov test stc cmc stc test jmpq mov bswap jmpq mov jmpq je not movzwl shl clc test xor not mov jmpq callq clc ror neg mov jmpq jmpq jb movzbw bt shl mov bts xor mov mov jmpq movzbl not dec ror sar test sbb mov test btr bts or sub inc shld clc mov bt shl ror rcl clc add xor btr and mov bsf repnz mov not lea ja lea dec not mov jmpq callq clc test cmp test jmpq cmp cmp jmpq je bt cmc test jmpq cmp test repnz jmpq add bt add inc rcr sar mov stc clc add jmpq callq sbb dec cmp mov stc cmp clc stc test jmpq jmpq cmpl jmpq mov jmpq jmpq jmpq je lea mov bswap (bad) icebp (bad) mov shr not test xor lea mov jmpq stc jmpq jmpq mov jmpq jmpq jmpq jbe jmpq jmpq jmpq mov jmpq callq mov lea bswap lea jmpq jmpq je lea not movsbw mov jmpq lea mov mov jmpq lea mov jmpq jmpq jmpq jmpq cmp in jg or and and (bad) lahf test jns cmpsb out xchg icebp (bad) jne xor gs test cmp mov (bad) (bad) (bad) cld xlat lods loop fcomps xchg rcrl (bad) shr adc std (bad) scas in leaveq sbb rex cld movabs mov jno sub or rex.RX and notl pop (bad) xchg pushq pop mov sub add add (bad) mov add mov dec mov (bad) fs jg es fisubr pop xchg and (bad) or jp lahf jrcxz ja outsl (bad) rex.RXB ss mov adc pop cmp jrcxz mov xchg jno js out mov (bad) int xor callq imulb stos rex.X icebp rex.W retq int retq sub movabs jmpq jmpq mov bswap lea mov mov jmpq je jmpq jmpq jmpq clc jmpq test cmc test jmpq jns setg mov jmpq jl jne jmpq jmpq jmpq jmpq je test stc cmpl jmpq callq rex.WB repz or adc rol mov test cmc test jmpq mov jmpq callq clc cmp test jmpq jmpq jmpq jmpq je bswap bswap bswap bswap mov jmpq jb jmpq stc stc bt cmp jmpq jmpq jmpq mov jmpq jmpq jns jmpq jmpq callq btc movzbl bt xor and inc adc lea mov neg shl shl ror movzwl bt mov movsbq jmpq callq stc stc cmp cmc test jmpq jmpq callq jge bswap lea jmpq jmpq je bswap shld bsr mov cmc stc cmc jmpq jmpq jmpq jne (bad) testb and sar mov jmpq cmp jmpq jb cmp cmp jmpq callq jmpq bswap bswap mov jmpq callq test bt bt jmpq jne pushq jmpq callq jge bswap mov not mov not mov jmpq xchg jmpq je movsbw mov clc jmpq jmpq mov not jmpq pushq jmpq jmpq mov mov xchg mov xchg movzbw mov bswap mov mov jmpq movsbw mov jmpq clc jmpq callq bt bt cmp stc test jmpq jmpq je jmpq mov jmpq jmpq test jmpq jmpq je jmpq jb adc sbb lea cmp xor jmpq callq ja nop jmpq cmp add jmpq callq ror or shrd sub bswap movsbw jmpq je stc clc bt test cmp jmpq je mov mov jmpq jmpq jbe movsbw not movzbw mov jmpq je jmpq je jmpq jmpq jne lea bswap setp jmpq dec not mov shl btc sub cmc or rol mov cmc btc add dec btr lea dec sub bsf ror add add mov bsr jmpq callq xchg lea bswap lea jmpq jmpq test sub jmpq je rcr stc bt test sub bswap setg mov mov jmpq movzbw mov movzbw mov jmpq jmpq jmpq shl stc bt cmc shr test bt or jmpq mov jmpq jbe callq jmpq je stc cmp jmpq jne ror bt bsf and mov jmpq jne dec lea lea ror and sub btc mov add xor sub ror xchg shld movzwl clc jmpq jmpq callq bswap not mov jmpq jmpq jmpq jmpq add xchg mov movsbw movsbq mov jmpq callq neg clc mov jmpq cmp cmc test jmpq jmpq je lea mov not lea lea movzbw mov lea movzbq not mov jmpq mov jmpq callq mov xchg movzbw xchg lea lea movzbw lea movsbw lea jmpq callq movzbw movzbw mov jmpq mov jmpq callq test jmpq jmpq sets jmpq mov jmpq lea movsbw mov jmpq callq shr shld shld mov shld mov clc clc clc cmp xchg stc jmpq callq xchg mov jmpq callq bswap lea jmpq jne movzbw mov or rcr btc rol mov jmpq jmpq callq inc adc xadd mov not shl ror setne sub movzbw lea mov jmpq callq sub and jmpq jb jmpq callq bsr mov xadd sbb xor jmpq jmpq callq test jmpq callq setnp lea lea lea jmpq jmpq mov jmpq callq btc mov stc cmp stc cmc test jmpq jmpq pushq in jg rex.WRX rex.WXB push negl not fildl decb (bad) subl rex.WB std movslq cwtl lret sbb or rex.X (bad) (bad) (bad) lcall es incl add (bad) fmull rex.WRX add scas pushfq callq fild movabs (bad) loopne rex.WX (bad) (bad) push push cmpsb leaveq xor rex.RXB xchg in sarl push xor in adc orl adc fs je decl sub rcr std (bad) callq movsbw movzbq mov jmpq mov movsbw lea jmpq mov jmpq jmpq bswap mov mov movsbw movsbw mov jmpq cmovne jmpq jmpq je bt rcr bsr mov clc sub movsbl movzbw lea mov jmpq jmpq jmpq jae jmpq cmc cmpl jmpq movzwl test bt cmp cmp add jmpq jmpq callq jmpq jmpq clc add clc clc test mov test mov cmp jmpq clc cmp jmpq cmp jmpq je jmpq test cmp jmpq nop jmpq jmpq jmpq test jmpq pushq jl pushq jmpq jmpq test jge je rcr movzbq mov neg rcr add mov bswap btc mov not rol bts sar sub jne mov not mov jmpq jmpq jmpq jmpq jmpq je cmc cmp cmp test cmp jmpq pushq jmpq jmpq je cmp xor inc mov adc movzbw clc shld mov ror mov cmc cmp cmp jmpq jmpq je jmpq test jmpq jbe rex.WRXB in jg rex.WX mov rex.WRB cltd xchg cmp pcmpeqw stos loope adc pop (bad) (bad) and rex.WRXB xchg (bad) enterq (bad) mov xor jb loopne (bad) rex.WR addr32 lods (bad) (bad) sub ds (bad) (bad) (bad) in rex.X xchg retq (bad) lea mov lret out (bad) iret or iret jmpq jns push ss rex.XB xchg repnz out rex.RB stos test movabs test (bad) push (bad) pushfq sbb rex.WRX scas lock shlb imulb mov rex.WB pushq jg xchg xchg sbb jae repz lods (bad) rex.WRXB xor rex.WRXB test rex.WRX cmp jnp xor sub int add out cwtl es rex.WX sti addl or rex cmp jns (bad) (bad) add rex.WRXB std insb and pushq sub add jmpq rcl rex or xor sti (bad) push or adc cmp xchg cmp (bad) sbb repnz add iret mov pushq enterq mov or cltd jge xchg cmp sbb add cmp lahf movabs or adc fidivr add rex.WRX sub stos sbb rex.WR retq adc (bad) mov mov lods sbb clc push (bad) (bad) (bad) lcall pushq sti callq add add jge fldt rex.RXB rex.WB and xchg mov xor movsb (bad) xorl addr32 movabs xchg movslq xor in jne xchg sub lock jg jl js mov mov stos cmp jp (bad) sub fwait sub (bad) mov loope rex.WR xchg pushq rex.W ds mov xchg xchg mov sub sbb sbb cmp (bad) pushq (bad) je out pop xchg movslq mov (bad) jmp loopne mov cmp iret and popfq mov leaveq xchg bt cmp jmpq je shld neg mov shld adc sar rcl mov and shr dec shrd mov test cmp test bt add jmpq jmpq not mov jmpq jmpq je stc stc cmp jmpq je not movzbl bswap mov jmpq callq stc sub jmpq jmpq jmpq jmpq jmpq jmpq jmpq je clc sub jmpq jmpq jmpq je data16 lock cmc adc mov clc stc test test jmpq callq cmc cmp test and cmc jmpq jmpq callq movsbl movsbw bswap lea lea jmpq callq sets lea not lea lea jmpq je lea mov jmpq sar shrd bswap sub lea lea mov lea movsbq bswap mov jmpq jmpq callq lea seta lea mov jmpq sub jmpq mov jp in in jg (bad) jne add test sbb mov xor pop iret mov xlat or jmpq ds (bad) (bad) incl leaveq push (bad) jns jmp mov (bad) (bad) (bad) lret mov jmp jno cmp test ds fs mov sub (bad) rex.WRX rex.B rex.RB rcrl and or rex.RB cmp fwait rcl push lea pop and stos (bad) adc xchg rex.WX shrl imul hlt xchg push (bad) rex.X test mov iret jno (bad) xchg rex.X push jbe fwait rex.WRB pushq (bad) or (bad) (bad) sub sub add rex.R (bad) jge mov mov (bad) cmp cmpsl cmc andl movabs mov in out out (bad) (bad) sub or adc xchg out adc (bad) xchg add sub xor scas scas (bad) (bad) out (bad) cmpsb xor xlat rex.WRB rex.XB lahf (bad) sarb mov (bad) fdivl mov mov rex.RXB mov pushq (bad) (bad) loop adc sub (bad) fs (bad) lahf (bad) (bad) and push add or movabs (bad) enterq (bad) jle jb cmc test movabs ja imul rcll outsb (bad) rcll add int lods insb sub xchg mov mov or and cmp cld addr32 adc pushq mov (bad) dec (bad) xor nop leaveq js enterq cmpsb movslq xchg adc fildl mov (bad) cld (bad) je outsl and in fstps out jle xlat cmpsb jb mov enterq mov in vcvttsd2si jb mov insb lods pop nop (bad) adc add add add (bad) jge (bad) push and ds adc jmp mov (bad) mov rex.X rex.WRX xor push mov jmp xchg std imul (bad) jmp fs fsts mov test out pop sbb (bad) push mov mov cmp (bad) rorl push (bad) insl push shr mov mov jo jnp jne xor js (bad) (bad) jne rex.R (bad) lret mov and sub (bad) (bad) js movabs mov jo cmp movabs lret icebp (bad) fnstcw mov int3 xchg lret (bad) cmpsl fs rex.RB rex.WB or rex.WRB mov mov fmull rcrb rex.XB or or rolb subl (bad) and hlt cmpsl mov adc loop repnz sub pop rorl fs idiv retq rex.R test pop outsl in mov movsl pop xor rex.WRXB pop lret insl je xchg xor mov mov xchg retq fdivs fucom jle,pn (bad) leaveq rex.RB pop ror (bad) mov adc sbb xor int3 mov xchg push clc mov cmp jmp rex.RXB jns hlt mov adc mov cmpsb (bad) cltd mov out sbb (bad) loopne xlat mov pushfq jge cld insb jo sub mov fbstp add xor sub (bad) loopne and push jns sub xchg out xor int3 xor outsb (bad) sub (bad) push cmpsl lret xor cmp xor rex.WXB sub mov movslq jb iret add sbb sbbl callq adc jg lock movabs xchg and add (bad) cmp pop xor movsl pushq jns pop rex.WRX lock mov outsb jnp jge jg fildl enterq jbe (bad) rex.R lea (bad) (bad) ljmp pop xchg fs cmp (bad) (bad) (bad) callq stc xchg (bad) repnz hlt fdivs (bad) xchg in or add ror mov or js sbb lret adc out adcl jge and movabs loopne or retq (bad) push mov cmp in jg fisub outsb (bad) loop rex.RXB (bad) jrcxz (bad) pop test (bad) outsb movabs xor cwtl adc sub stos fidivrl (bad) sub int3 je (bad) (bad) xor stos (bad) sahf (bad) mov (bad) xchg mov mov rex.RXB adc jns andl test fs mov mov rex.WRXB rex.W xchg xchg in push jnp sahf sub btr clc clc mov rol cmc sbb mov stc sub jmpq je bt cmp bt cmpl jmpq jb test btc rcr sbb mov bsr setae xor jmpq cmc add mov movsbw lea mov jmpq je not mov jmpq callq bt clc clc test cmpl jmpq jmpq callq jmpq js jmpq jmpq jmpq out (bad) pop in and xor sub jrcxz shrb outsb mov rex.RXB fwait in (bad) xchg (bad) movaps in mov sahf and mov or jo sti push test mov test jmpq js jmpq cmp jmpq callq cmp stc mov bt cmc jmpq je test cmc clc cmc cmp jmpq jmpq sub jmpq jmpq jmpq jmpq jmpq jmpq mov movsbw lea lea jmpq mov jmpq jne cmp movzbw inc lea ror sar mov bsf sub btr cmp xchg adc add movzwl jmpq je dec sbb ror not lea add sub xchg movsbw movsbw mov not jmpq not mov movabs movsbq bswap mov jmpq jmpq jb bswap mov bswap mov setge mov bswap not movsbw mov bswap mov jmpq callq clc sub bt test jmpq jmpq pushq jmpq cmc xor cmp stc bt xchg clc test jmpq stc xchg stc clc test jmpq movzbw mov jmpq jne cmc clc clc cmp jmpq je cmp stc test jmpq bswap movsbw mov setp movsbl mov jmpq mov cmp jmpq jmpq clc xor stc test jmpq jmpq jmpq jmpq callq test clc test jmpq nop jmpq callq clc clc cmp and cmp cmp jmpq jmpq jne jmpq sub jmpq clc stc test jmpq callq stc clc sub jmpq mov jmpq je jmpq je bts bts stc mov test test stc test jmpq je cmp cmp jmpq callq bt rcl mov cmc test bt cmp jmpq rex.WXB mov (bad) xchg cmp pop popfq push pop add adc (bad) movslq jne insl fldcw movzbl stos add mov shlb sbb (bad) movabs (bad) mov pop outsl decb rex.XB rex.WR rex.R sti and (bad) (bad) (bad) callq in cltd lret retq fidiv cmp cwtl jg or (bad) (bad) (bad) jmpq jmpq (bad) ljmp rex.W push mov pop mov cmp sub sub xor xorl sub cmpsb js mov test movabs mov jbe gs sub mov and mov lods movabs gs ja sbbl sbb movabs sbb cmpsb jns out icebp xchg repnz rex.RXB jne inc lea ror shld mov cmp jmpq je jmpq jbe shl rcl bts and mov sbb bt rol sar mov cmc test cmp jmpq je movzbw lea lea lea mov movsbw mov jmpq mov mov setno mov jmpq je test test test cmpl jmpq jmpq callq test rcr btc mov test bt jmpq callq xchg lea movabs jmpq callq shl jmpq callq cmc cmp jmpq jge callq shl mov clc stc test test jmpq sbb xchg and insb xlat mov cs cmp scas or test xchg push outsl mov je xchg sbb mov add sub movslq pop (bad) jmpq jmpq jmpq stc sub jmpq je jmpq movzbw bts xchg or rol movzwl stc jmpq jmpq mov test test clc add jae mov jno mov jmpq sub cmc bsf nop bt mov shrd shl or mov stc bt test clc cmp jnp jb setp mov bswap setle mov jmpq callq movabs not rcr mov test test test test test jmpq jmpq callq not mov stc cmp jmpq jne rol bsf btc bswap add not movsbw mov lea jmpq add jmpq je jmpq cmc xor jmpq jne callq rcl jmpq lea mov jmpq jmpq callq clc bswap mov mov neg lea dec add not clc mov and bts mov add btr shld cmc cmpq movzbw lea bswap bswap mov movzbw mov bswap mov jmpq je sub mov test stc cmc test jmpq je cmc cmp bt bt xor jmpq movsbw mov jmpq lea jmpq je bt mov or jmpq je add mov cmc sub jmpq callq cmp adc bsf or mov jmpq jmpq jmpq jmpq jmpq mov jmpq jmpq je test not movzwl shrd rol xor jmpq je movzbw bsr xor jmpq ja callq add shrd clc xchg mov rol clc xadd bsf xor lea mov jmpq jmpq jmpq jmpq jmpq movzbw movsbw mov jmpq je movsbw lea lea mov mov jmpq lea jmpq lea mov jmpq callq cmc clc cmp jmpq jmpq jmpq nop jmpq je jmpq mov rcl add mov bts movsbl movzbw mov jmpq nop jmpq mov cmp cmc bt cmp test jmpq jmpq jmpq bsr xor btr mov sar bt mov adc sub lea bswap mov test cmp stc add bt cmc cmc cmp sub jmpq jmpq mov mov not jmpq pushq jmpq jmpq movsbw not mov jmpq jne jmpq mov jmpq jmpq jmpq callq and clc rcr mov stc test test jmpq clc jmpq jmpq jmpq add cmc cmp add jmpq jmpq callq cmc add not mov bt test jmpq cmc jmpq callq jmpq add shl rcr inc inc mov jmpq callq lea setp lea lea movsbl movsbl setle lea lea jmpq je shl lea xadd mov setl movzbw data16 repnz cmp mov sub test mov shl shrd shl bsf mov bt bt cmp test add stc stc add jmpq jmpq jmpq jmpq rcl xor lea mov not jmpq jmpq test jmpq jne bswap test sub lea shld rcr mov sub sub jmpq je cmp test jmpq callq or rol mov not clc sub jmpq jmpq movb jmpq callq xor bswap add jmpq test jmpq not (bad) mull iret or jnp neg rcr add sub stc inc shld shld repnz lea bswap mov mov bswap not bswap lea setb mov lea jmpq je jmpq cmc add rcl xor bsr test mov clc stc clc jbe add movzbq mov stc stc cmp test add stc add mov rol shld xor mov jmpq jne test test jmpq jmpq js cmp test jmpq jmpq jmpq jmpq cmc cmp jmpq jmpq mov mov xchg mov seta mov jmpq js mov bswap xchg mov bswap lea xchg lea sets movsbw mov lea jmpq setb setg not mov jmpq jmpq jmpq callq not jmpq mov jmpq je cmp test stc cmp jmpq callq adc bt stc neg mov clc cmc bt stc xor jmpq jmpq jmpq callq bts add mov rcr mov btr mov rol mov bt jmpq clc cmp jmpq callq jmpq je jmpq lea not movsbl lea jns mov jbe mov jmpq jmpq callq lea movsbl mov inc movsbw mov mov jmpq setnp setno xchg mov bswap movsbl jmpq movzbq bswap movsbw lea jmpq jmpq jmpq bt or jmpq jmpq jmpq callq mov lea movsbw not movzbl lea jmpq callq sar lea btr mov cmp stc jmpq je clc stc jmpq lea je callq ror xchg or sub movzbw mov mov mov lea dec mov jmpq dec bsf movsbl btr test mov btc or neg cmc adc mov rcl and add bt xor mov not bswap bswap mov jmpq jmpq jne clc cmpq jmpq je inc mov jmpq callq cmc lea dec shr mov ror xor lea not not mov jmpq jne sar bts shld mov xadd sar bts mov clc cmp or inc mov cmc bt test cmp add adc setns movzbw mov cmc add test test add clc cmp jmpq jmpq callq clc bsf xor bswap movzbw movzbq mov jmpq jmpq callq bt cmp jmpq jmpq jmpq jmpq callq stc bt test jmpq clc cmp jmpq callq mov movsbw bswap lea jmpq jmpq jmpq je xadd bts neg setl mov cmp inc mov stc lea test clc clc stc cmp jmpq jne dec shrd mov test shl btr lea rol lea movsbl lea mov sbb xor jmpq jmpq mov jmpq jmpq jmpq jmpq lea mov lea bswap lea jmpq callq bsf mov shld mov test bt stc jmpq bswap mov jmpq callq bt bt jmpq xchg movzbq bswap mov jmpq callq movsbl mov xchg not not mov jmpq jmpq movsbw mov jmpq callq cmp bt cmc cmp jmpq jmpq jmpq je cmc test stc test cmp jmpq callq lea sar clc mov inc shr mov jmpq add jmpq jmpq jmpq cmpq jmpq cmp bt cmpq jmpq bt test jmpq mov jmpq cmp cmc mov stc jle stc clc cmpb jmpq jmpq test jmpq jmpq je adc cmc or movsbl sub movsbw jmpq callq bts btc btc stc mov test test test jmpq jmpq callq test test jmpq callq clc jmpq jbe rcr mov shr xor mov mov jmpq jmpq mov mov mov jmpq jmpq jb bt jmpq pushq jmpq jne callq shr add mov stc bt bt bt test jmpq callq setnp movzbw lea mov movsbw lea ja callq xchg xchg lea sete mov lea jmpq jmpq jmpq mov jmpq sbb imul add std shrl or stos test pushq (bad) pushq ja,pt jl sub rex.XB out push add adc mov cli decl test add mov jmpq jmpq jmpq jmpq je inc movsbw dec lea mov shrd mov bsf rcr lea jmpq jmpq callq cmc jmpq lea movsbw mov mov setle lea not mov jmpq jmpq je jmpq jmpq cmp jmpq je je jmpq clc cmp cmp jmpq jmpq cmc cmp test jmpq jns lea mov jmpq movzbl not setae mov jmpq jmpq jmpq callq jmpq jmpq jmpq cmp sar mov cmp bt stc clc repnz xor cmp cmc bswap xor sub nop cmc rol movzwl cmc test cmp add stc bt cmc mov jg clc cmc test jmpq callq movzbw dec movsbw mov not mov jmpq test stc add stc mov jmpq jmpq je inc sub setge not mov jmpq jmpq jne rol btr rcl lea shld mov test stc sub rol xchg sub test sub movzwl cmp cmp cmc add cmp cmp cmp cmp mov bt clc clc cmp test jmpq jmpq je jmpq test jmpq mov mov mov jmpq je movsbw mov jmpq callq adc shld cmp mov cmp clc test jmpq jmpq jmpq jmpq callq bt test jmpq je je not mov jmpq jmpq jmpq jmpq lea jmpq jmpq jmpq js not lea bswap jmpq je stc jmpq bt cmc test test jmpq mov jmpq jne bsr btr btr mov xor lea xor mov clc mov bt jmpq movsbl movzbw mov setbe mov jmpq jmpq jmpq jmpq nop jmpq je cmc test jmpq callq not setae mov dec inc movsbw mov jb incl jmpq bswap mov jmpq jmpq je rex.W icebp adc stos loope neg movzwl bt bswap movzbl cmc clc shl test stc jmpq jmpq not movzbw lea movsbw mov jmpq jne xor add lea jmpq je cmc cmp sub jmpq mov setbe mov jmpq movzbl mov seto jmpq je not movzbw and mov sub adc add not mov sar btc lea mov stc mov jmpq add bt add not mov mov jmpq mov setno mov movzbl jmpq jmpq jmpq jmpq add bt add not mov jmpq clc stc jl test jmpq cmp cmp jmpq je adc inc bswap dec mov cmp cmc test jmpq retq add (bad) lock and pcmpgtd (bad) (bad) rorl mov adc (bad) test out loop sbb emms rex.X fsubrl rex.XB cmp jmpq cmp jmpq js jmpq jmpq jmpq jmpq jmpq jmpq jmpq jne cmc test cmc clc cmpq jmpq jne cmc test cmp jmpq jmpq jmpq jmpq jmpq jmpq jmpq cmp stc xor jmpq callq test bt test cmp test jmpq mov jmpq callq je movzbl xchg mov lea movsbw mov jmpq cmp jmpq jmpq cmp jmpq jne movsbw bswap lea mov jmpq jne jmpq lea jmpq jmpq jne test cmp test cmpb jmpq je mov not not movzbl mov jmpq callq movzbl movzbw lea jmpq jmpq jmpq inc bt test add stc cmp jmpq jmpq mov jmpq jmpq jne cmp cmpb jmpq jb jmpq jmpq xchg stc clc cmp jmpq je rcr or lea rcr shr xor lea mov jmpq jmpq cmc jmpq callq sete not not mov setge jmpq callq mov not mov lea bswap mov jmpq je bt jmpq add lea sets mov mov jmpq jmpq mov bswap sete sete lea mov jmpq jne jmpq callq test stc test cmp jmpq jne movzbq mov lea bswap stc mov stc mov data16 icebp or xlat not ror xchg bt lea inc mov clc bt bt add bt stc jmpq je movzbw shr sbb sub mov lea lea not jmpq jb movzbl movzbw mov inc incl lea jmpq je jmpq jmpq cmc mov mov sbb shr movzbl jmpq jmpq lea movsbw mov jmpq stc clc mov cmp cmp cmp stc test jmpq jmpq movl jmpq clc test jmpq jmpq cmc cmp test jmpq xor data16 hlt add scas mov movzbw not mov not jmpq je inc mov shld dec inc mov rol movzbw (bad) (bad) mov bsr jmpq jmpq lea movzbw mov jmpq jmpq jo je jmpq je movzbl shr mov cmc bswap shrd mov test stc stc cmp jmpq jmpq jmpq je test shld xchg mov seto cmp shr (bad) cmc mov shr lea clc rcl lea bt test cmc cmp jmpq jmpq test cmp jmpq jmpq jmpq callq sbb bts sbb cmp mov cmc cmc cmp xchg test cmc test test jmpq callq jmpq je test cmp cmc clc sub jmpq callq clc dec mov clc stc cmc jmpq callq jmpq jmpq jne mov movzbw lea mov jmpq je bts mov jmpq jmpq jmpq jmpq jmpq mov jmpq xor clc test jmpq je clc bswap rcr dec mov cmp cmp stc xor jmpq jmpq jmpq bswap mov movsbw lea jmpq mov jmpq callq movsbl not not bswap lea bswap mov bswap lea jmpq test test cmp cmp jmpq je clc stc clc clc cmp jmpq jmpq jmpq jmpq stc clc test jmpq mov jmpq movzbl jmpq jmpq jmpq jmpq jne not mov jmpq nop jmpq jmpq test jmpq jmpq jae callq movsbl bswap lea not mov jmpq callq test cmp cmp test jmpq cmp jmpq je add add bsf bsr mov stc jmpq jmpq je bswap jmpq mov bswap mov jo mov jmpq callq shld shld xadd mov bsf rol data16 repnz shl mov stc clc xor jno callq lea mov cmp bt cmp jmpq je bt stc cmp jmpq xor add jmpq jmpq je stc clc jmpq callq lea lea jmpq je sar mov shr mov not mov and stc lea bt stc cmp jmpq test test jmpq jmpq pushq jmpq jmpq je jmpq jbe jmpq callq bswap mov movsbw bswap mov lea mov jmpq jmpq jmpq mov jmpq test jmpq lea movsbl setbe bswap lea jmpq jne sub data16 icebp bsf stc mov inc sub clc sbb mov movsbq test stc bt mov jmpq js je jmpq mov cmc cmp jmpq cmc stc sub jmpq jmpq jne shr lea rol bts lea shld mov xor add rcl setne sub movsbl xchg movzbq movzwl test test cmc stc add test clc jmpq jmpq callq setle movsbq not lea mov bswap movzbw mov jmpq jmpq xor movzbw movzbw jmpq jmpq mov lea bswap jp mov jmpq jmpq callq bt cmp jmpq mov jmpq je callq bswap mov mov xchg bswap bswap mov mov movzbw mov not mov movzbq jmpq jb jmpq je stc cmc jmpq jmpq jae mov jge nop jmpq sbb imul add xchg push mov push rex.WRXB ds mov cmp adc pop mov ja pop ds cltd mulb sbb cmp (bad) adc adc not mov mov cmc neg and xadd lea rcr jmpq clc test jmpq jmpq test jmpq jmpq neg rol mov xor xadd cmp rcl add bsf ror neg xadd sub xchg shr stc test mov sub bt repnz dec movzbw inc movsbw not dec not dec btr adc bt adc mov jno clc test jmpq jb or xadd mov and sbb sub movsbl bswap mov jmpq jmpq jmpq callq and bsf bt cmp mov cmp stc stc xchg clc clc test jmpq jmpq bt cmp jmpq je adc sbb mov bt cmc bt cmc test jmpq jmpq jb jmpq cmc clc cmp jmpq cmp jmpq jmpq mov not mov jmpq je jmpq callq inc ror sub mov and sub movsbl mov test cmp xor jmpq sar bt xor movzbw lea xchg mov movzbl mov jmpq callq not mov mov movsbw movzbl movsbw mov bswap mov jmpq jmpq jmpq jmpq movzbq xadd data16 cmc add leaveq jmpq mov mov bts add inc bts movsbw xor movsbw clc mov movsbw repnz movsbw lea not not dec dec shl mov bt test stc test jmpq nop jmpq add jmpq cmp jmpq je cmc test cmp jmpq jmpq jmpq clc test jmpq jmpq callq movsbl jmpq neg movsbw xor jmpq jmpq clc add jmpq jne rcr clc adc sar mov bswap rex.B lock dec mov test shrd clc mov cmc add cmp add bt stc stc cmc add jmpq jmpq callq cmp stc clc test test jmpq bswap mov movsbw bswap mov jmpq callq bt xor shld data16 lock (bad) jmpq callq clc cmp test cmc and cmc jmpq jmpq jb movsbw xchg inc inc dec not sar adc mov stc rcl xchg or inc dec bts mov mov shr shr ror add not stc mov xor xor jmpq xchg jmpq jmpq jne lea shl lea adc or sbb mov stc sub shr bsr shrd xchg stc not dec cmc movzwl bt add cmc mov stc stc test clc test jmpq jmpq js bt test jmpq sub jmpq je jmpq mov jbe mov jmpq add je bts bts shld xor jmpq add add add add (bad) (bad) scas push movabs (bad) jmpq jmpq callq bt xor cmp stc stc jmpq mov jmpq jmpq jmpq jmpq sub sete sete not bswap mov mov jmpq jmpq jne rol mov sbb mov bt cmc bt clc cmp jmpq jmpq callq xchg jmpq cmpq jmpq callq sbb mov test stc test jmpq mov jmpq jmpq jmpq bt and jmpq mov jmpq setns not mov jmpq movsbw movzbw bswap mov lea not mov jmpq je jmpq jmpq callq inc add movsbw mov shrd not jmpq jmpq nop jmpq je cmp data16 lock dec mov cmp btr rex.W icebp mov mov lea stc cmp jmpq callq stc jmpq jmpq jmpq callq jmpq callq not rcr mov xadd mov cmc btr rol lea lea stc bt test cmp jmpq jmpq jmpq bswap lea mov jmpq jmpq dec mov movzbw xor mov jmpq test jmpq callq cmp jmpq jmpq jmpq jmpq jb jmpq jmpq callq clc test jmpq jmpq jmpq jmpq jmpq je ror cmp mov and mov mov mov not clc mov cmc clc test add rcl jmpq jmpq callq shr shrd sub inc xchg movzbq mov mov bswap jmpq jmpq jmpq dec jmpq jmpq je stc bt bt cmp jmpq not mov mov jmpq nop jmpq je btc shl mov cmp cmp bt test jmpq jmpq jmpq nop jmpq jmpq callq stc rcl mov mov clc test jmpq callq test jmpq mov seta shr rol dec and not not mov movsbw not bswap mov jmpq mov dec btc bt ror add mov bt test jmpq je bt jmpq jmpq inc jmpq je je jmpq je jmpq mov jmpq mov mov mov jmpq je cmp cmp test cmp jmpq jne data16 lock movzbq mov clc cmc stc test jmpq mov jmpq pushq jmpq pushq jmpq jmpq xor stc cmc cmp jmpq jmpq jne movsbw lea mov cmp test test jmpq mov jmpq inc mov bt test stc test jmpq bswap inc mov jmpq callq lea movzbl sub movzbq mov jmpq test jmpq mov mov movsbl mov dec inc lea mov jmpq jmpq pushq jmpq jmpq mov jmpq callq jmpq jmpq bt test cmc test jmpq callq lea clc shrd mov test test test jmpq callq stc bsf bsf mov rcr sbb bt inc test bswap lea bswap mov jmpq jmpq mov sete cmc test sete movsbw movzbl mov setb movzbw mov jmpq jmpq jb mov stc clc shl lea stc cmc test cmp jmpq callq not movzbw lea mov mov lea bswap bswap mov jmpq jmpq jmpq je bsf ror (bad) lock mov bt jmpq jmpq cmc bt xor jmpq jmpq cmc cmc stc or jmpq jmpq nop jmpq callq test stc mov cmp test stc cmp jmpq not setge lea mov jo callq clc clc jmpq jmpq jmpq je movzbq btc bt stc mov add mov xor rol mov and clc sbb shrd mov stc jmpq clc sub jmpq jmpq jmpq jne bts rcl rcr data16 divl shlb (bad) or sar movzbw shl add mov stc repnz sbb rcr sub bt bswap sub nop cmc shl movzwl bt test stc test add cmc cmp mov stc bt test jmpq je sub bt setno inc mov bt stc clc cmc test jmpq lea mov xchg lea lea setl not bswap mov jmpq jmpq callq cmp mov seta sub add rcr lea rcl mov and movsbl mov btc dec setl ror cmpq setle mov bswap mov bswap bswap not mov jmpq jmpq jmpq jmpq jmpq stc stc test jmpq add test mov clc xchg rol shr mov test xadd bswap cmpq movsbw lea not lea mov movsbw jmpq mov jmpq not mov mov bswap lea jmpq add jmpq bt btr mov sub sbb movzbl rcl mov rcl not add bt stc lea bt sar stc add mov cmp cmp jmpq jmpq pushq jmpq jmpq jmpq jmpq je lea mov sub mov sar lea clc clc cmp jmpq jmpq jne or bsr shrd dec mov btc mov rol rcr shrd mov inc rol sbb add add lea bts mov cmc cmc cmc add clc jge add movsbw movzbw not movzbw mov jmpq je pushq jmpq jmpq mov movzbq movzbl jmpq jmpq jmpq callq stc cmp jmpq je bsf rol lea inc mov sub lea mov jmpq jmpq bt jmpq jmpq jmpq jmpq add jmpq je stc cmp jmpq callq cmp bt xor jmpq je sar xor mov bswap bswap lea jmpq xchg mov jmpq je movsbw movsbq lea mov jmpq clc sub jmpq je and sub xor not jmpq jmpq ja callq jmpq jmpq jmpq mov jmpq jmpq callq btr test bsf mov cmp test jp je jmpq jbe jmpq jmpq xchg mov bswap jmpq jmpq shr ror mov cmp test jmpq jmpq callq lea jmpq jmpq jne shld shrd mov clc test jmpq callq (bad) repnz xchg mov btr bsf xor mov jmpq jmpq mov setg mov jmpq mov not mov mov movsbq movzbw jmpq jmpq jmpq jb jmpq jmpq callq stc shr mov btc clc bswap sub not bswap not mov movzbl mov mov jmpq je jmpq callq rcl test neg mov cmc cmp mov jmpq callq setnp bsr jnp mov test test jmpq callq jmpq callq jmpq movsbq movzbw lea not lea jmpq callq bswap mov jmpq jmpq callq mov sar cmp jmpq mov stc test jmpq callq mov not mov ja callq jmpq jns movsbq movsbw lea setno mov jmpq jne callq mov lea jmpq callq not lea movsbl mov jmpq callq jp callq jmpq callq cmp movzbw mov stc clc test jmpq jmpq je cmp bt sub jmpq jmpq jmpq test jmpq jo je clc cmp stc sub jmpq jmpq callq sub dec mov clc cmp mov cmc jmpq callq jmpq test test jmpq jmpq je bt stc jmpq clc sub jmpq jmpq callq mov mov jmpq mov cmp test jmpq jmpq callq dec mov clc cmc mov bt test bt cmp test jne je cmp test sub jmpq callq btc mov cmc cmc cmp cmp mov cmc test jmpq je bt sub jb callq ror mov ror clc sub xadd mov bts mov sbb shr adc mov not bsf add jmpq bt sub jmpq callq lea lea jmpq jmpq callq test mov stc clc test jmpq jns bswap jmpq jg setae mov jmpq jmpq movb jmpq jmpq jns jmpq not mov jmpq jmpq callq jmpq setbe lea jmpq callq movzbl mov jmpq jns callq jmpq jmpq callq jmpq jmpq mov jmpq jle nop jmpq jmpq callq jmpq callq lea bswap mov jmpq in rex.RB movsb mov scas sti clc sbb sbb push mov movabs adc and sbb sysret (bad) ja cmp mov pushfq xor jae rex.WRX (bad) enterq rex.WRB rex.WRB scas (bad) fnsave addr32 mov ja push xor fwait add jmp (bad) sysexit (bad) xchg xchg (bad) imul cmc fldcw movsb cmp lock lods ja push (bad) or in (bad) iret cmp rolb mov jrcxz xchg xchg xchg cmp add pushq (bad) sub rex.R jb sbb repnz or popfq cmp int3 xchg xor xor jmpq out nop xchg (bad) sbb mov shr (bad) (bad) add test (bad) je (bad) (bad) imul insl sub callq not neg shl sub sub mov test clc test jmpq jmpq js bswap mov movsbl not mov lea movzbw seta setno lea movsbw lea movsbw bswap mov movzbw movq not jmpq setb lea lea movzbw jmpq bswap lea mov lea lea lea jmpq jp js xchg movsbw movsbl movzbw mov xchg lea jmpq bswap lea jmpq jmpq mov movsbl movsbl not lea jmpq jmpq mov jmpq mov jmpq jmpq mov jmpq jmpq callq xchg mov lea movzbl lea mov xchg xchg lea movzbw xchg setge movsbw mov bswap lea jmpq xchg lea lea jmpq movzbw jmpq mov jmpq mov jmpq jmpq mov jmpq jmpq callq mov ror neg ror mov bt test jmpq js movzbw mov lea movzbw not lea movsbw movsbw bswap mov bswap sets lea not movq movsbl mov mov bswap setbe mov jo mov bswap jnp setae not lea jmpq jmpq callq movsbw setge lea lea lea lea jmpq jmpq mov not bswap movabs lea jmpq clc bt jmpq test jmpq test clc jmpq jns jmpq jmpq callq jmpq jmpq callq clc xor adc movsbw mov bt stc bt test jmpq jmpq test jmpq setne movzbl lea not lea lea movsbw lea jmpq mov movzbw movsbw lea jmpq jp mov setle bswap lea jmpq ja mov jmpq movzbq not lea jmpq jmpq mov jmpq jmpq mov jmpq jmpq mov jo callq jmpq lea jae bswap lea bswap movsbw movsbw bswap mov not movzbl jmpq bswap lea bswap jmpq bswap bswap lea setb mov jmpq jmpq mov jmpq jmpq mov jmpq jmpq callq adc mov movzbl mov jmpq jns jmpq jmpq js sete lea mov xchg lea movsbl jmpq mov lea movq xchg movsbw mov bswap mov mov jmpq jmpq mov setge setae lea jmpq jmpq callq movzbw lea setno mov mov lea jmpq jge callq xchg rcr shrd or mov rol seto mov clc bt jmpq test jmpq jmpq jns jmpq callq jmpq lea setg mov movzbq lea setge movsbw xchg lea lea mov setle bswap lea jmpq jmpq mov movzbw lea jmpq mov jmpq movsbw mov lea jmpq jb mov jmpq bswap bswap lea jge mov jmpq jmpq mov jmpq jmpq mov jmpq jmpq callq bswap setg xchg xchg lea movzbl lea movsbl mov bswap movabs setno lea setno lea movzbl movabs not bswap mov jmpq jp mov jmpq jmpq mov jmpq jmpq callq setnp shl mov bt clc jmpq test jmpq jmpq js movzbw mov not movsbl bswap lea lea jmpq mov lea jmpq lea not movq seta mov mov lea not mov jmpq jmpq callq bswap and sar mov dec bt clc mov jmpq jmpq callq not mov bswap lea jmpq mov movsbq lea jge callq shl sub mov shl cmp sbb mov jmpq jmpq cmc clc test jmpq jmpq jns jmpq jmpq jmpq jmpq mov jmpq jmpq mov jmpq jmpq callq shl adc bswap stc mov stc jmpq cmc test test jmpq jmpq jmpq lea movzbl movsbl mov not movsbl lea movzbw jmpq lea movsbq mov bswap lea movq movzbl setne movzbl mov mov movzbq bswap lea movsbw mov jmpq jmpq mov mov lea jmpq jmpq callq xchg bswap movzbw lea movsbw bswap setle jmpq not mov lea lea jmpq jmpq callq shl clc sar mov bsf mov cmp test jmpq jmpq jns jmpq jmpq callq jmpq jmpq jns jmpq jmpq callq jmpq jmpq js jmpq jmpq callq jmpq mov jmpq jmpq callq clc test jmpq jmpq jmpq mov lea mov jmpq jmpq callq dec and mov clc stc cmp cmp test jnp cmove jmpq jmpq callq bswap lea setge setb lea jmpq jmpq callq jmpq jmpq callq lea movsbl lea mov mov not lea jmpq callq sbb and xor mov bt mov test jmpq callq bswap movsbw movzbw mov jmpq callq btr not cmp mov cmc cmp cmp bt test jmpq jmpq jns jmpq lea mov jmpq jmpq callq setae bswap lea not lea jmpq jmpq callq bswap sets mov jmpq jmpq callq jmpq je cmp jmpq jmpq jmpq test jmpq je clc bt stc jmpq jmpq jmpq callq bsr sbb mov cmp mov cmp clc test jmpq jmpq je cmc cmc test sub jmpq jmpq callq adc movzbw add lea mov test jmpq stc stc mov test test clc test jmpq jmpq je cmc stc cmp clc xor jmpq jmpq callq rcl mov cmc cmp bt mov jmpq test test jmpq je bt cmp bt xor jmpq jmpq callq not mov jmpq jmpq mov jmpq sbb mov jmpq test jmpq jmpq cmove jmpq jmpq mov jmpq jmpq callq dec movsbl shr btc mov cmc mov stc test jmpq movsbw mov setno lea lea lea mov mov jmpq callq setae not lea not jmpq sets movq mov mov jmpq jmpq mov jmpq jmpq callq xor btr mov clc bt cmc cmp test jmpq jmpq jns lea not mov jnp callq lea setge lea jmpq jmpq jmpq callq jmpq jns jmpq callq jmpq jmpq callq bsr shld btr stc mov cmc bt stc test jmpq je test test cmp sub jmpq callq ror bt movsbl or mov cmc cmc stc mov stc test clc test jmpq jmpq je jmpq callq ror mov stc stc jmpq jmpq mov clc stc test jmpq jmpq je cmc bt bt stc sub jmpq jmpq callq not mov jmpq jmpq mov cmc cmc test test jmpq jb je jmpq stc clc sub jl callq jmpq rcl ror mov stc mov stc stc test jp je bt stc stc sub jmpq jmpq callq shrd mov test bt mov cmp stc clc cmp test jmpq jmpq callq not not sete lea jmpq callq movsbw mov jmpq jmpq cmp bt test jmpq callq shld sar neg bsr mov cmp bt cmp clc test jns je stc test jmpq cmc sub jmpq jmpq callq lea mov stc stc cmc mov jmpq cmc clc clc test jmpq jmpq je cmc jmpq xor jmpq jmpq callq or mov clc mov jmpq jmpq bt test jmpq jmpq je test sub jmpq jmpq callq adc neg mov cmp stc stc mov jmpq jmpq cmc bt test jmpq jmpq je cmp bt xor jmpq callq sub mov cmc stc bt jmpq je test cmc cmc xor jmpq jmpq je clc stc bt clc xor jmpq jmpq callq bts mov cmc mov clc test jmpq jmpq je cmc jmpq stc clc sub jbe callq stc mov cmp movsbq and and mov shl xchg mov data16 mulb fimul mov je js (bad) stc mov shld add mov lea movsbq pop retq jmpq callq jmpq mov jmpq je stc xor jmpq jmpq callq sar rcl mov cmp test clc mov stc test jmpq je cmp stc bt clc xor jmpq jmpq test jmpq jmpq je test bt jmpq clc sub jmpq callq jge cmc clc mov bt bt test mov bt stc clc stc test jnp je bt clc sub jmpq jmpq callq bts clc test inc mov bt test cmc mov clc test jmpq jne je clc jmpq sub jmpq callq ror shrd mov bt jmpq bt mov clc test jmpq jmpq je cmp sub jmpq jmpq cmp xor jmpq jmpq je cmp xor jmpq jmpq callq cmc setle bsf mov bt cmp jmpq mov xchg movsbw lea setge mov movsbw movzbl movzbw movq lea lea mov movsbw mov jmpq jmpq je bt xor jmpq callq dec shl mov mov cmc cmp mov jmpq clc stc clc test jmpq jmpq mov lea not bswap lea jmpq jmpq callq sar sbb mov bt test bt jmpq mov cmp clc test jnp je cmp clc stc sub jmpq jmpq callq dec btr shrd bsr mov jmpq clc mov jmpq jmpq callq rol shr add mov cmc test test jno js movzbw movzbw xchg setns mov movzbq jmpq je cmc bt xor jmpq jmpq callq bt cmc xchg test mov (bad) lock shrd setge mov shl rcl sub movsbl mov bsr ror shrd inc mov rcr ror (bad) idiv add mov not bswap pop retq sub jmpq je cmp cmc jmpq sub jmpq jmpq callq shl bswap setns test mov jmpq stc mov cmp test jmpq je clc jmpq sub jmpq jmpq callq shl inc dec adc mov jmpq clc cmp bt mov stc cmc cmc cmc test jmpq je cmc cmp sub jmpq jmpq callq jmpq mov clc mov sete mov sar mov shr neg add jmpq movsbw pop retq js jmpq je test cmp sub jmpq callq dec mov cmc bt bt stc test jmpq callq bsr mov clc stc mov clc test clc jmpq test jmpq jmpq je stc bt stc cmp sub jmpq jbe callq cmc ror shr mov and sub rcl shr mov and mov add rcr mov rcr ror and add lea mov pop retq jmpq callq bsf stc mov movzbl shl mov rcl jmpq shld mov neg bswap mov not or add movsbw movsbw not bswap pop retq mov mov jmpq callq bts mov jmpq movb jmpq jmpq mov jmpq jmpq callq not jmpq sets not mov jmpq callq jmpq callq sbb rcl mov movsbl shrd btr seta mov cmc clc jmpq callq not mov mov setl mov jbe callq jmpq jmpq callq jmpq jmpq callq jmpq mov jmpq nop jmpq jmpq nop jmpq jmpq mov jmpq bswap setns mov lea jmpq jmpq mov setge bswap seta lea jmpq jmpq mov jmpq jmpq mov jmpq jmpq mov jmpq jmpq callq bswap xchg lea xchg movzbw lea xchg not mov sete lea lea bswap lea bswap setne lea bswap not lea mov jmpq jmpq mov jmpq jmpq mov jmpq jmpq jmpq jmpq js not mov bswap setge xchg not lea movsbw movsbw mov lea movq not mov jmpq not mov jmpq jmpq mov movzbw lea jmpq jmpq callq jmpq xchg sets lea movsbw lea movzbw lea lea jmpq jmpq jmpq cmc jmpq test jmpq jns jmpq jmpq callq jmpq jmpq mov movzbw movsbw not lea jmpq jmpq callq jmpq lea movzbw not setno movzbw lea jmpq callq mov xor add btc mov adc mov cmc test jmpq jns jmpq jmpq callq jmpq movzbw lea jmpq jmpq callq mov lea mov lea setno setno lea jmpq jmpq callq xadd shr stc xor mov cmc inc jmpq mov mov jmpq jmpq stc clc test jmpq jmpq jns jmpq jmpq callq jmpq jmpq jmpq callq movsbw bswap movsbw mov jmpq jmpq test bt test jmpq jmpq mov jmpq mov jns mov jmpq jmpq callq movzbw lea lea setb mov lea lea mov xchg mov seto mov lea bswap mov lea lea setno lea lea mov jmpq movq not xchg not mov movsbw movzbw mov jmpq mov jmpq jmpq callq ror mov bts mov stc test clc jmpq test jmpq jmpq js movzbl jmpq jmpq test mov clc clc clc test jmpq jmpq mov not lea jmpq callq movsbl xchg setb not lea lea not lea jmpq callq xor btc rcl mov bts movsbw mov stc test test jmpq jns jmpq jmpq callq jmpq jmpq mov bswap mov lea lea jmpq not mov jmpq jmpq mov jmpq jmpq callq neg shl shl mov stc stc mov test jmpq jmpq callq seta xchg lea jmpq lea setbe bswap mov jmpq movsbl lea jmpq not xchg lea mov mov jmpq jmpq mov jmpq jmpq mov jmpq jmpq callq and mov jmpq test jmpq js movzbw not bswap mov bswap xchg bswap setnp lea setle not bswap mov jmpq not movq xchg bswap movzbq mov setns not jmpq setle mov jmpq callq movsbl xchg movsbw xchg lea movzbw jmpq je clc cmc stc xor jmpq jmpq mov jmpq jmpq callq sub movsbq mov rcr lea bsr mov clc cmp test test jmpq jmpq jns jmpq jmpq callq jmpq jmpq jmpq mov bswap bswap bswap bswap lea movzbw xchg lea movsbq mov jmpq jmpq mov jmpq jmpq mov js callq shrd mov mov stc cmp jmpq test jmpq jmpq js js movzbl mov bswap jmpq xchg lea setno mov setns movq lea movzbw mov mov mov jmpq jmpq mov movzbl movzbw lea jmpq jmpq callq xchg movsbl xchg movsbw lea mov movsbw not lea jmpq jmpq test jmpq jmpq jns jmpq jmpq callq jmpq xchg jmpq movsbl lea movzbw jmpq jmpq jmpq mov jmpq jmpq mov jmpq callq and sub mov jmpq test jmpq jmpq js seto not movzbw jmpq mov movsbl lea bswap not mov mov movsbq jmpq jmpq mov lea jmpq mov movzbw mov jmpq jmpq mov lea movsbq lea lea jmpq jmpq callq sets movzbw xchg bswap lea movzbw jmpq movzbl lea jmpq jmpq callq rol lea jmpq callq bswap setnp lea lea movzbw lea jmpq test cmc test jmpq jmpq jns jmpq callq jmpq jmpq callq sbb bts ror mov cmp mov stc cmc test jmpq jmpq jns jmpq callq lea not lea movzbw xchg lea not jmpq callq jmpq jmpq mov lea movabs lea movzbw lea jmpq jmpq mov jmpq jmpq mov jmpq mov jmpq jmpq callq lea movsbw lea mov movsbw bswap movzbl lea mov mov not movsbq lea movzbw lea mov not movsbl mov mov jmpq callq btr bts mov bt stc test jmpq jmpq jmpq jmpq callq jmpq rol test bswap mov test clc test jmpq js jmpq movsbw lea xchg mov not movabs sets lea mov mov bswap movq ja movzbl lea mov movzbl bswap setne jmpq mov jmpq mov bswap lea lea jmpq jmpq jmpq movsbw lea jmpq jmpq callq rol neg xadd shld mov neg bt mov bt clc bt stc test jmpq jmpq jns jmpq jmpq callq jmpq jmpq mov jmpq callq seta movsbw lea movabs movabs movzbl xchg lea movzbw mov bswap xchg setge lea xchg movzbl not setp lea bswap mov mov mov jmpq mov jmpq jmpq mov jmpq jmpq jmpq lea jmpq mov ja mov jnp callq jmpq xor rcl mov test jmpq test jmpq jmpq js jmpq mov movzbw mov xchg lea movsbw movsbw mov jmpq mov lea movq bswap movzbl mov bswap jge movzbw bswap mov jmpq mov jle bswap lea jmpq jmpq callq movsbw lea movzbw lea jmpq not lea jmpq callq shrd movsbw mov jmpq mov test jmpq movzbl mov bt test jmpq jmpq jmpq callq sbb and clc inc mov test cmp clc test mov stc cmc bt test jmpq jmpq mov jmpq jmpq mov jmpq test jmpq mov setbe lea not movsbw movsbq lea mov mov movq bswap mov mov not movsbl mov jmpq jmpq mov bswap seto lea lea jmpq jmpq callq bts mov clc mov cmc cmc test jmpq callq movzbw lea setne mov mov jmpq mov jmpq jmpq jns jmpq jmpq callq jmpq jmpq callq jmpq jns jmpq jmpq callq jmpq jmpq cmove jmpq jmpq mov jmpq jmpq callq jmpq jmpq callq sets movzbl not lea not lea jmpq callq test mov bt cmc cmc mov stc test jmpq callq not setae movzbl mov jmpq callq bt bts shr mov clc bt cmp test jmpq jmpq jns movzbw sete bswap mov jmpq callq lea bswap lea jmpq jmpq callq not not mov jmpq jmpq callq jmpq jmpq callq jmpq jmpq callq shr movzbw mov cmc test jnp je cmc clc cmp xor jmpq jmpq jmpq jmpq test bt mov cmp test jmpq jmpq je cmp sub jmpq jmpq callq jmpq mov jmpq jmpq lea lea jmpq jmpq callq and adc mov cmp cmp cmp cmp mov cmc bt cmp test jmpq jmpq je js test xor jmpq jmpq callq jmpq mov jmpq jmpq mov jmpq jmpq callq movzbw movsbw lea jmpq jmpq callq lea mov jmpq jmpq je cmp cmp cmp stc xor jmpq jmpq callq jmpq jmpq callq neg cmc cmp btr mov bt test jmpq jmpq je cmc jmpq stc xor jmpq jmpq callq sar movzbq btr btc mov cmc clc test mov clc cmp cmc test jmpq jmpq je clc xor jmpq jmpq callq rol bsr bsr mov bt clc cmp jmpq mov test jmpq test jmpq jmpq je clc sub jmpq jmpq mov jmpq test jmpq jmpq je jmpq xor jmpq jmpq jmpq jmpq sub jmpq jmpq callq bswap mov jmpq bt stc cmp mov clc test jmpq callq bsf shr mov cmc bt jmpq je cmp clc bt sub jmpq jmpq callq bsf btr or or mov test cmp mov cmc bt cmp test jmpq jmpq je bt bt sub jmpq jmpq callq shr jmpq movsbw mov mov bt cmc clc mov jmpq js jmpq jmpq callq rcl jmpq cmc mov test jge mov test test jmpq je cmc jge xor jmpq jmpq callq bsf sub shrd bts mov test cmp mov cmc test jmpq jmpq je cmp sub jmpq callq clc movsbw lea mov cmc mov bt test jmpq callq dec cmp mov movsbw mov jmpq je stc jmpq cmp cmp sub jmpq jmpq callq rcr lea adc bswap mov test mov jno stc clc test test jmpq jmpq callq jmpq xor jmpq jmpq callq rcr xor mov clc clc bt mov cmp test jmpq je bt jmpq cmp xor jmpq jmpq callq shld setb mov cmp mov stc cmc test jmpq callq movzbw bswap lea mov not sets movsbl lea bswap mov lea setb movzbw lea bswap jmpq je cmp cmp clc clc sub jmpq jmpq callq clc and mov jmpq clc mov cmc clc bt test jmpq jmpq je stc xor jmpq jmpq callq jmpq test setle mov cmc jmpq mov stc test test jle je jmpq jmpq stc xor jmpq callq jmpq callq sbb mov shld cmp cmp lea mov inc neg mov clc adc mov add add mov bswap pop retq jmpq callq bt mov stc rcr cmc shld mov (bad) testl jmpq mov not sub and mov bt bsr shr sub add jmpq movzbl bswap pop retq bt mov jmpq cmc stc clc mov clc bt test jmpq je clc stc cmp cmp xor jmpq jmpq callq movabs sub cmc mov clc mov cmc bt clc cmc test jmpq jmpq je cmc sub jmpq callq test add mov clc stc mov clc bt test jmpq jmpq mov movsbw lea jmpq jmpq callq inc bsf bt mov not xchg mov bsf mov cmc mov bsr shl add mov not jmpq movsbw pop retq jmpq je test clc stc xor jmpq jmpq callq stc rcl mov cmc jmpq jmpq bt mov bt test bt cmp test jmpq jmpq jmpq jmpq callq sub neg mov test cmc clc jmpq mov test test cmp test jmpq jmpq je stc jmpq cmp cmc xor jmpq callq shl bsf cmp xadd mov neg sub mov jmpq mov rcr bsf mov add add movzbl jmpq jmpq je test stc xor jmpq jmpq callq shr dec stc mov cmp mov cmc stc cmp bt test jmpq je clc sub jmpq jmpq callq (bad) lock mov mov bswap add mov rcr xchg sub mov dec lea movzbw clc add movsbw movsbw bswap lea pop retq jmpq test jmpq cmp xor jmpq jmpq callq shrd ror shrd sar mov test cmc clc test mov cmc cmp bt test jmpq je bt cmc stc sub jmpq jmpq callq bsf rcr clc mov or mov or xchg mov bsr mov cmp mov adc xor add bswap movsbw movzbw pop retq jmpq callq movsbw and bt rcr mov movzbq bts cmp (bad) lock or incb mov movzbw mov dec add mov movzbl mov lea pop retq jmpq callq jmpq jmpq mov jmpq jmpq callq movzbw lea not lea lea xchg lea mov mov movzbw lea setle lea xchg lea mov seto not mov jmpq mov jmpq mov jmpq jmpq callq sbb and mov cmc jmpq bt bt test jmpq mov not setl lea jl mov jmpq setne mov lea setno mov movq movzbl mov not setle jmpq mov cmp test mov stc stc bt clc test jmpq jmpq mov mov not mov mov lea jmpq callq movzbw jmpq lea lea movzbw not lea jmpq jo callq shrd mov rcr mov stc bt jmpq clc test jmpq jmpq jns jmpq jmpq callq jmpq jmpq callq ror mov cmp test jmpq jmpq js xchg lea bswap mov not movzbw sete lea setl mov jmpq mov jmpq mov not setno mov setg lea jae callq lea lea movabs jmpq callq jmpq jmpq callq bswap xadd mov and not (bad) repz mov jmpq jmpq test test jmpq jmpq jns jmpq jmpq callq jmpq movsbq mov mov not lea lea movzbl mov movzbw movq bswap mov bswap jmpq jmpq lea mov jmpq jmpq mov not mov sets not lea jmpq in rex.RB add movslq sti (bad) xchg sbb sbb imul (bad) xor xchg cli adc and cmp popfq (bad) (bad) ja clc rex.WR cwtl or xor jnp rex.WRX loopne lahf addr32 jns rex.WRB fwait add imul mov (bad) (bad) mov ja push ss sarb cld cs xchg (bad) (bad) rex.WRXB insb loopne (bad) mov test jmpq sbb retq movabs int rex.WRB in (bad) (bad) cmp (bad) rex.WX mov adc ss js xchg jge or popfq hlt rex.B movabs cmp sub jae fcomps cmc rex.WX loopne rex.WRXB jge cs nop xchg jbe or jae mov repz icebp jae,pn rex.WB push sbb fldenv mov xchg stc cmp cli (bad) jmpq movzbw jmpq callq setbe mov jmpq jmpq movzbw lea jmpq jmpq callq xchg sets movsbl mov cmp and add mov cmp bt clc test jmpq callq bt mov clc bt mov clc test cmc bt test jl je test jmpq jns jmpq jmpq setns lea jmpq movzbq mov bswap sets jmpq mov jmpq mov movzbw not movsbw lea jmpq jmpq callq bswap movabs lea movsbl lea mov movzbl lea jmpq jmpq callq stc test xchg mov mov add shrd rol mov cmc bt test jmpq jmpq jns jmpq callq jmpq jmpq mov jmpq callq dec mov jmpq mov movzbl lea jmpq jmpq js lea movzbw mov not movsbw lea mov mov mov mov sets movq movzbw lea mov xchg mov bswap not mov jmpq mov movzbl bswap jmpq lea jmpq jmpq jmpq jmpq callq inc ror xchg mov movzbw bsf mov cmc stc bt test jmpq jmpq jns jmpq jmpq callq jmpq jmpq callq bsf mov cmc cmp cmc test jmpq jmpq js lea lea not bswap mov jmpq not movzbq lea lea not mov seto mov mov bswap movq not movzbl xchg mov lea movsbw mov jmpq jmpq jae je bt cmp test sub jmpq inc mov adc bswap stc mov cmc jmpq jmpq jmpq callq clc xadd mov clc btc mov jmpq je test cmp xor jmpq jmpq jns jmpq jmpq callq jmpq setb mov jmpq jmpq callq jmpq jmpq callq movzbl lea sets movsbl lea jmpq jmpq callq xadd mov shld shr bsr mov stc jmpq jmpq cmc test jmpq jmpq jns jmpq callq jmpq lea lea setbe lea jmpq callq xchg mov mov xchg lea not movzbw lea jmpq callq not bsf mov not shrd movsbq xor mov stc clc test jmpq jmpq jns jmpq callq jmpq jmpq js lea movsbl jmpq jmpq mov jmpq movsbw mov jmpq jmpq mov movsbl mov jmpq mov lea jmpq callq movsbw lea lea movzbw setnp movsbl lea jmpq jmpq callq add xadd add mov (bad) testl retq mov test bt cmp test jmpq jmpq bt clc bt test jmpq jmpq callq jmpq mov movzbw jmpq je test jmpq clc sub jmpq jmpq callq inc rcl clc mov test mov bt test jmpq jmpq bt bt cmp test jmpq jmpq jmpq cmp test jmpq je jmpq jmpq callq dec mov sub stc mov cmp movzbw bts mov stc sbb mov shrd add movzbl bswap movsbl pop retq callq jmpq callq setle sets test mov test stc cmc bt mov jmpq jmpq callq movsbl xor movsbl mov stc bt mov bt stc test jmpq je cmc sub jmpq jmpq callq mov mov jmpq jmpq callq shr mov shr mov test bt cmc cmp test jmpq clc cmc test xor jmpq jmpq callq mov movzbw setp setle mov jmpq je mov jmpq mov jmpq jmpq je test clc test clc xor jmpq callq not xchg movzbl xchg lea not mov lea lea jmpq callq jmpq shrd mov cmp cmp mov cmp stc test jmpq je jmpq test cmp mov clc test jmpq mov cmc test jmpq jmpq callq rcl mov test jmpq jmpq clc mov bt clc clc cmc test jmpq bt bt cmc xor jmpq jmpq callq bswap bswap lea mov lea jmpq bt stc cmc test jmpq jmpq je clc cmp cmc sub jmpq callq jmpq jmpq je clc bt test sub jmpq jmpq callq rol sub mov test mov jmpq jmpq callq jmpq je jmpq clc cmc sub jmpq jmpq callq btr rcr rol mov clc jmpq cmc mov bt bt stc test jmpq jmpq je jmpq stc xor jmpq jmpq jmpq je clc cmc test stc sub jmpq cmc xor jmpq jmpq callq stc xchg mov shld mov cmp mov movsbw xor sbb sbb mov or test add movzbw pop retq jmpq je stc test bt cmp sub jmpq callq setp cmp shr mov sbb and sbb mov mov neg movsbw mov rcr stc mov xor add mov pop retq jmpq js not movzbw xchg movsbw mov mov lea seta not mov lea movsbw not sete movq jmpq jmpq mov mov movsbl bswap jmpq mov jmpq jmpq mov movsbw lea movsbl not lea jmpq callq seta lea not movsbw lea jmpq mov lea lea jmpq callq test add mov test xor mov jmpq test jbe jns jmpq jmpq callq jmpq jmpq callq rcr clc mov movzbw bswap lea mov jmpq test jmpq jmpq jns jmpq mov jmpq callq jmpq jmpq callq xchg movsbl bswap lea mov movsbw mov setbe lea jmpq jmpq callq adc adc cmp mov rcr mov stc jmpq test jmpq jns jmpq jmpq callq jmpq jmpq jmpq jmpq callq jmpq push lock std std xchg (bad) mov rex.WRX sub (bad) (bad) std and pushfq mov (bad) or xor push mov rex.WB js rex.XB rex.WXB (bad) push push int3 add in (bad) sub test lods cltd rcl xchg add mov xchg (bad) jbe (bad) xor xchg pushq enterq (bad) rex.W lock std std andl sahf retq jle (bad) xor int sub mov (bad) ss retq in jge sub sarl mov push (bad) (bad) shlb adc test shrl add add mov sub (bad) out xor mov iret enterq xor jmp adc rex.WR lock std std (bad) cmpsl xchg data16 mov retq jnp mov and pushfq mov (bad) jb xor loopne mov adc or (bad) push pop int mov callq sar xchg mov (bad) pop add (bad) rex.RX movslq xchg (bad) cmpsl fs (bad) enterq popq enterq xlat push lock std std mov outsb movabs enterq lods sub pushfq mov (bad) es (bad) fdivrl jl in sbb xchg and (bad) pop pop int3 add out shrl test lea icebp movabs mov in xchg (bad) push lods push xchg mov adc (bad) cwtl pop and or lods adc rex.RXB lock std std mov xchg movslq clc retq jp int int (bad) (bad) (bad) icebp pushfq mov (bad) rex.WR ss xor sub jge mov sbb (bad) push pop movl cmp or sahf push add add (bad) rex.RX jbe in xchg (bad) mov movsb test ror jb lock xlat rex.R lock std std mov outsl fbstp rex.W iret lahf jge xor (bad) jno xor jo sbb jge fxam icebp callq jbe push pop lret add loopne (bad) adc test std popfq add sahf movslq lods movabs rex.RX je fbld xor add enterq rolb lock std std mov xchg (bad) jg xlat retq jo push mov sub rcrl cmp xor fstps fnstsw leaveq in cmp xor (bad) pop push (bad) add in and pushq xchg fisub add rex.X rex.XB xchg (bad) mov (bad) movsl mov pushfq (bad) mov clc adc push enterq xlat rex.WXB lock std std xorb retq jg (bad) hlt int3 (bad) (bad) lea (bad) cltd adc test xor int3 fisttp xchg pushq (bad) (bad) push pop int3 add in shll adc test je xchg mov (bad) incb jnp add (bad) (bad) movabs or jmp adc rex.R lock std std xorl js mov leaveq enterq fs pushfq mov (bad) (bad) ss jrcxz lods lea jns icebp sub enterq push pop lret in sub test pop (bad) rol jge (bad) (bad) (bad) rex.RX pop jrcxz xchg (bad) rex.RX rex.R mov jne (bad) sub jmp sbb rex.WRX lock std std mov xchg (bad) pop mov retq jl (bad) rex.RXB (bad) ljmp mov (bad) std ss (bad) (bad) sbb jge or add rex.WRX rex.W push (bad) in (bad) adc test jge sahf jno sahf rex or (bad) sub (bad) movabs clc jmpq icebp lock (bad) rex.RX rex.RB movsb mov mov rex.RB rex.WRB pop jp pop fnstcw pop mov mov adc and sub sbb (bad) ja xchg rex.WB addr32 xor jl rex.WRX subb retq hlt shrl mov mov ja push (bad) pop (bad) mov or cmpl in sarl sahf cmp (bad) mov movsb xchg sub lock movabs add jo in (bad) (bad) cmp rorb mov movabs mov sahf insl test movabs mov and and fstps rex.RB loop cmpb jns jle xchg out nop xchg (bad) cmp mov fucomi (bad) (bad) (bad) mov sub fnstcw stos cli (bad) adc (bad) imul xchg in xchg stc cmp in rex.RB push mov stc cs xor movsb pop mov push mov std mov adc adc and rex.WRB (bad) mov cmc push rex.WX mov jns rex.WRX and sahf in jns rex.WRB test stc rex.WX adc mov and xchg cmpsl or jnp sbb ja pop cmp (bad) mov pushq adc mov xchg xchg sub pop fsub cmc fstps mov scas (bad) or lock xchg rex.RXB lods rex.WRX pop and cwtl in (bad) (bad) cmp fiaddl mov add ss (bad) push xchg es movswl icebp lods loopne scas movabs (bad) xchg sub xlat popfq jb rclb and mov (bad) rorb jae nop sbb ss (bad) sahf (bad) xor or (bad) jns je mov leaveq fisubrl out add or in rex.RB test lock sub scas (bad) push pop mov (bad) mov push (bad) cmp sub (bad) xor (bad) mov (bad) ja mov or xor jb rex.WRX (bad) add nop adc loopne (bad) rex.WRB add leaveq push scas sbb mov jns repz add mov ja pop cmp sbb sbb mov xchg xchg test (bad) test popfq mov int3 movabs mov stc pushfq in (bad) int and (bad) rex.WRX mov xor ss xchg push xchg insb fmuls pushq rex.RB imul or gs fyl2xp1 jrcxz (bad) out jae fcomps sub and jp out lret nop xchg xchg lods ja mov (bad) fidivr and cli and je (bad) (bad) cltd cmp out or cmp imul mov mov jl movabs xorb rex.WRX (bad) (bad) imul jae pushq outsb cmp (bad) (bad) ja movabs pushfq xor je rex.WRX rex.W rex.WRB (bad) jno nop scas adc mov push int mov (bad) mov xor pop cmp sarb xchg xchg sahf gs fxch mov jns mov adc leaveq movabs scas sub cmp roll mov repz mov rex.WR xchg adc out lods pop retq movsb rex jge (bad) scas (bad) imul (bad) xchg mov mov mov movsl lret movabs rex.WXB xchg lods mov (bad) sbb (bad) (bad) rorl jge incb je rex.R imul jae xchg (bad) cmp in rex.RB in outsl loope enterq frstor test and push sub (bad) or push jbe gs sbb pushfq (bad) (bad) ja test or xor jae rex.WRX mov xchg (bad) adc rex.W pop rex.WRX (bad) mov and (bad) mov xchg add ja push ds mov mov (bad) rex.WRXB lahf xchg xchg mov push pushfq loopne fxch out mov stos add popfq mov adc lock jl (bad) out xchg in (bad) lret and roll mov movslq (bad) cwtl (bad) push xchg popfq pop add pushq cs cmp scas rex.WR jle adc sub jae ficomp mov movabs in sub std outsl jae sbbb (bad) lret cs test push je shlb addr32 nop out (bad) pop in xchg hlt cmp jmpq jmpq in rex.RB fs cli icebp add movabs loopne (bad) xor push in cmpb (bad) (bad) js (bad) cs (bad) (bad) ja fs adc xor jno rex.WRX cmp sahf and (bad) and sub scas sbb mov ss cmpsl (bad) mov (bad) ja push xor sarb or mov (bad) adc (bad) push lods loopne fscale fs lods adc popfq mov (bad) movabs mov ficom sub rex.R data16 adc negb jns (bad) pushq xchg lea movabs enterq (bad) jae ficomp (bad) mov pop cmp jl rex.WB nop xchg xchg mov xlat and sub mov mov je jae cltd addr32 stc or in rex.RB movsb mov (bad) sbb movsb pop fldt test (bad) (bad) mov add adc and insl (bad) sahf rex.WRX jae (bad) ja in (bad) jno or xor ja and clc cltd fidivl fnsave in scas adc mov (bad) int (bad) or in adc pop sarb jmpq out xchg xchg outsl out insb loopne (bad) xchg mov lods (bad) test stos lock movabs data16 cmp cmp rorl mov repz out cmp lahf repz pop lock movsl rex.RB jne (bad) (bad) (bad) movslq movslq (bad) rex.W fstps add ss mov rex.WXB xchg mov rex jae loopne clc ss cs rorl push cmp jb push pop (bad) mov outsl nop out or or in rex.RB mov insb (bad) xchg shrb lea cli shlb push scas or pop (bad) (bad) mov imul fmull (bad) (bad) ja incb mov or xor je rex.WRX repz sbb adc rex.WRB xchg sar int3 scas (bad) insl mov icebp int (bad) or mov ja push ds (bad) mov sbb imull mov push fsub cmc fxch jb hlt movabs (bad) movabs data16 xchg in (bad) lret cmp (bad) mov mov xchg es xor mov or pushq mov movabs pop movabs fwait (bad) xchg movsl (bad) loop rex vmwrite or mov jae lock xlat lock (bad) icebp mov (bad) jg rex.WB sbb (bad) loop push sbb addr32 jle out or cmp 